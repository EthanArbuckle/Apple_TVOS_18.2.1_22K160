uint64_t sub_100006758(uint64_t a1, uint64_t a2)
{
  char v4;
  unsigned int v5;
  unint64_t v6;
  unint64_t v7;
  char v8;
  BOOL v9;
  int v10;
  unint64_t v12;
  char v13;
  unsigned int v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t String;
  uint64_t v19;
  void *v20;
  char v21;
  unsigned int v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t result;
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    v4 = 0;
    v5 = 0;
    v6 = 0LL;
    while (1)
    {
      v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1LL || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      v8 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      v9 = v5++ >= 9;
      if (v9)
      {
        v6 = 0LL;
        v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      v6 = 0LL;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      break;
    }
    v12 = v6 >> 3;
    if ((v6 >> 3) == 3)
    {
      String = PBReaderReadString(a2);
      v19 = objc_claimAutoreleasedReturnValue(String);
      v20 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v19;
    }

    else if ((_DWORD)v12 == 2)
    {
      v21 = 0;
      v22 = 0;
      v23 = 0LL;
      *(_BYTE *)(a1 + 28) |= 1u;
      while (1)
      {
        v24 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v24 == -1LL || v24 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        v25 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v24);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v24 + 1;
        v23 |= (unint64_t)(v25 & 0x7F) << v21;
        if ((v25 & 0x80) == 0) {
          goto LABEL_42;
        }
        v21 += 7;
        v9 = v22++ >= 9;
        if (v9)
        {
          v23 = 0LL;
          goto LABEL_44;
        }
      }

      *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_42:
      if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        v23 = 0LL;
      }
LABEL_44:
      *(void *)(a1 + 8) = v23;
    }

    else if ((_DWORD)v12 == 1)
    {
      v13 = 0;
      v14 = 0;
      v15 = 0LL;
      *(_BYTE *)(a1 + 28) |= 2u;
      while (1)
      {
        v16 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v16 == -1LL || v16 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        v17 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v16);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v16 + 1;
        v15 |= (unint64_t)(v17 & 0x7F) << v13;
        if ((v17 & 0x80) == 0) {
          goto LABEL_38;
        }
        v13 += 7;
        v9 = v14++ >= 9;
        if (v9)
        {
          LODWORD(v15) = 0;
          goto LABEL_40;
        }
      }

      *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_38:
      if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        LODWORD(v15) = 0;
      }
LABEL_40:
      *(_DWORD *)(a1 + 24) = v15;
    }

    else
    {
      result = PBReaderSkipValueWithTag(a2);
      if (!(_DWORD)result) {
        return result;
      }
    }
  }

  return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

uint64_t sub_10000709C(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0LL;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1LL || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0LL;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0LL;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      break;
    }
    if ((v6 >> 3) == 2)
    {
      uint64_t String = PBReaderReadString(a2);
      v18 = (void *)objc_claimAutoreleasedReturnValue(String);
      if (v18) {
        [(id)a1 addPseudonym:v18];
      }
    }

    else if ((v6 >> 3) == 1)
    {
      char v12 = 0;
      unsigned int v13 = 0;
      uint64_t v14 = 0LL;
      *(_BYTE *)(a1 + 20) |= 1u;
      while (1)
      {
        unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v15 == -1LL || v15 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v16 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
        v14 |= (unint64_t)(v16 & 0x7F) << v12;
        if ((v16 & 0x80) == 0) {
          goto LABEL_32;
        }
        v12 += 7;
        BOOL v9 = v13++ >= 9;
        if (v9)
        {
          LODWORD(v14) = 0;
          goto LABEL_34;
        }
      }

      *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_32:
      if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        LODWORD(v14) = 0;
      }
LABEL_34:
      *(_DWORD *)(a1 + 16) = v14;
    }

    else
    {
      uint64_t result = PBReaderSkipValueWithTag(a2);
      if (!(_DWORD)result) {
        return result;
      }
    }
  }

  return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

BOOL sub_1000079EC(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (1)
    {
      if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      char v4 = 0;
      unsigned int v5 = 0;
      unint64_t v6 = 0LL;
      while (1)
      {
        unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v7 == -1LL || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v8 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
        v6 |= (unint64_t)(v8 & 0x7F) << v4;
        if ((v8 & 0x80) == 0) {
          goto LABEL_11;
        }
        v4 += 7;
        if (v5++ >= 9)
        {
          unint64_t v6 = 0LL;
          int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
          goto LABEL_13;
        }
      }

      *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
      int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
      if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        unint64_t v6 = 0LL;
      }
LABEL_13:
      if (v10 || (v6 & 7) == 4) {
        return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      if ((v6 >> 3) == 1)
      {
        uint64_t Data = PBReaderReadData(a2);
        uint64_t v13 = objc_claimAutoreleasedReturnValue(Data);
        uint64_t v14 = 16LL;
LABEL_21:
        char v16 = *(void **)(a1 + v14);
        *(void *)(a1 + v14) = v13;

        goto LABEL_23;
      }

      if ((PBReaderSkipValueWithTag(a2) & 1) == 0) {
        return 0LL;
      }
LABEL_23:
      if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
    }

    uint64_t v15 = PBReaderReadData(a2);
    uint64_t v13 = objc_claimAutoreleasedReturnValue(v15);
    uint64_t v14 = 8LL;
    goto LABEL_21;
  }

  return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}
}

id sub_1000091C4(CSDMessagingConversationLink *self, SEL a2)
{
  v8.receiver = self;
  v8.super_class = (Class)&OBJC_CLASS___CSDMessagingConversationLink;
  id v3 = -[CSDMessagingConversationLink description](&v8, "description");
  char v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue(-[CSDMessagingConversationLink dictionaryRepresentation](self, "dictionaryRepresentation"));
  unint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", @"%@ %@", v4, v5));

  return v6;
}

uint64_t sub_10000960C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0LL;
    while (1)
    {
      uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v8 = v7 + 1;
      if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v9 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
      v6 |= (unint64_t)(v9 & 0x7F) << v4;
      if ((v9 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v10 = v5++ >= 9;
      if (v10)
      {
        unint64_t v6 = 0LL;
        int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0LL;
    }
LABEL_13:
    if (v11 || (v6 & 7) == 4) {
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t String = PBReaderReadString(a2);
        uint64_t v14 = objc_claimAutoreleasedReturnValue(String);
        uint64_t v15 = 80LL;
        goto LABEL_46;
      case 2u:
        uint64_t Data = PBReaderReadData(a2);
        uint64_t v14 = objc_claimAutoreleasedReturnValue(Data);
        uint64_t v15 = 88LL;
        goto LABEL_46;
      case 3u:
        uint64_t v18 = PBReaderReadData(a2);
        uint64_t v14 = objc_claimAutoreleasedReturnValue(v18);
        uint64_t v15 = 72LL;
        goto LABEL_46;
      case 4u:
        v19 = objc_alloc_init(&OBJC_CLASS___CSDMessagingHandle);
        [(id)a1 addInvitedHandles:v19];
        goto LABEL_29;
      case 5u:
        *(_BYTE *)(a1 + 100) |= 1u;
        unint64_t v20 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v20 <= 0xFFFFFFFFFFFFFFF7LL && v20 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v21 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v20);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v20 + 8;
        }

        else
        {
          *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v21 = 0LL;
        }

        uint64_t v38 = 8LL;
        goto LABEL_66;
      case 6u:
        uint64_t v22 = PBReaderReadString(a2);
        uint64_t v14 = objc_claimAutoreleasedReturnValue(v22);
        uint64_t v15 = 32LL;
        goto LABEL_46;
      case 7u:
        v19 = objc_alloc_init(&OBJC_CLASS___CSDMessagingHandle);
        objc_storeStrong((id *)(a1 + 64), v19);
LABEL_29:
        goto LABEL_44;
      case 8u:
        *(_BYTE *)(a1 + 100) |= 2u;
        unint64_t v23 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v23 <= 0xFFFFFFFFFFFFFFF7LL && v23 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v21 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v23);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v23 + 8;
        }

        else
        {
          *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v21 = 0LL;
        }

        uint64_t v38 = 16LL;
LABEL_66:
        *(void *)(a1 + v38) = v21;
        goto LABEL_67;
      case 9u:
        char v24 = 0;
        unsigned int v25 = 0;
        uint64_t v26 = 0LL;
        *(_BYTE *)(a1 + 100) |= 8u;
        while (2)
        {
          uint64_t v27 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v28 = v27 + 1;
          if (v27 == -1 || v28 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v29 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v27);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v28;
            v26 |= (unint64_t)(v29 & 0x7F) << v24;
            if (v29 < 0)
            {
              v24 += 7;
              BOOL v10 = v25++ >= 9;
              if (v10)
              {
                uint64_t v26 = 0LL;
                goto LABEL_57;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v26 = 0LL;
        }
LABEL_57:
        *(_BYTE *)(a1 + 96) = v26 != 0;
        goto LABEL_67;
      case 0xAu:
        v19 = objc_alloc_init(&OBJC_CLASS___CSDMessagingConversationLinkGeneratorDescriptor);
        objc_storeStrong((id *)(a1 + 24), v19);
        if (PBReaderPlaceMark(a2, v39) && (sub_100117DA0((uint64_t)v19, a2) & 1) != 0)
        {
LABEL_44:
          PBReaderRecallMark(a2, v39);

LABEL_67:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }

LABEL_69:
        return 0LL;
      case 0xBu:
        uint64_t v30 = PBReaderReadString(a2);
        uint64_t v14 = objc_claimAutoreleasedReturnValue(v30);
        uint64_t v15 = 56LL;
LABEL_46:
        v31 = *(void **)(a1 + v15);
        *(void *)(a1 + v15) = v14;

        goto LABEL_67;
      case 0xCu:
        char v32 = 0;
        unsigned int v33 = 0;
        uint64_t v34 = 0LL;
        *(_BYTE *)(a1 + 100) |= 4u;
        while (2)
        {
          uint64_t v35 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v36 = v35 + 1;
          if (v35 == -1 || v36 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v37 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v35);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v36;
            v34 |= (unint64_t)(v37 & 0x7F) << v32;
            if (v37 < 0)
            {
              v32 += 7;
              BOOL v10 = v33++ >= 9;
              if (v10)
              {
                LODWORD(v34) = 0;
                goto LABEL_61;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v34) = 0;
        }
LABEL_61:
        *(_DWORD *)(a1 + 48) = v34;
        goto LABEL_67;
      default:
        uint64_t result = PBReaderSkipValueWithTag(a2);
        if (!(_DWORD)result) {
          return result;
        }
        goto LABEL_67;
    }
  }

          char v4 = v50;
          v42 = v84;
          v44 = v82;
          goto LABEL_70;
        }

        v55 = (void *)objc_claimAutoreleasedReturnValue([v52 activity]);
        if ([v55 isScreenSharingActivity])
        {
          v56 = [v52 state];

          if (!v56) {
            goto LABEL_69;
          }
        }

        else
        {
        }
      }

      v47 = [v45 countByEnumeratingWithState:&v90 objects:v103 count:16];
      v54 = 0;
      char v4 = v50;
      v42 = v84;
      v44 = v82;
      if (v47) {
        continue;
      }
      break;
    }
  }

  else
  {
    v54 = 0;
    v48 = 0LL;
  }

  *((_DWORD *)v4 + 25) = self->_protoSoundRegion;
  *((_DWORD *)v4 + 38) |= 0x10u;
  uint64_t v7 = self->_has;
  if ((*(_WORD *)&v7 & 0x100) == 0)
  {
LABEL_24:
    if ((*(_WORD *)&v7 & 0x400) == 0) {
      goto LABEL_26;
    }
    goto LABEL_25;
  }

LABEL_40:
    uint64_t v14 = 0;
    goto LABEL_41;
  }

  if ((*((_BYTE *)v4 + 100) & 8) != 0) {
    goto LABEL_40;
  }
LABEL_32:
  generatorDescriptor = self->_generatorDescriptor;
  if ((unint64_t)generatorDescriptor | *((void *)v4 + 3)
    && !-[CSDMessagingConversationLinkGeneratorDescriptor isEqual:](generatorDescriptor, "isEqual:"))
  {
    goto LABEL_40;
  }

  linkName = self->_linkName;
  if ((unint64_t)linkName | *((void *)v4 + 7))
  {
  }

  uint64_t v14 = (*((_BYTE *)v4 + 100) & 4) == 0;
  if ((*(_BYTE *)&self->_has & 4) != 0)
  {
    if ((*((_BYTE *)v4 + 100) & 4) == 0 || self->_linkLifetimeScope != *((_DWORD *)v4 + 12)) {
      goto LABEL_40;
    }
    uint64_t v14 = 1;
  }

  unint64_t v20 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  self->_isGondolaCallingAvailable));
  [v3 setObject:v20 forKey:@"isGondolaCallingAvailable"];

  BOOL v10 = self->_has;
  if ((*(_WORD *)&v10 & 0x4000) == 0)
  {
LABEL_13:
    if ((*(_WORD *)&v10 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_42;
  }
}
}

    char v16 = 0;
    goto LABEL_41;
  }

  if ((*((_BYTE *)v4 + 108) & 4) != 0) {
    goto LABEL_40;
  }
LABEL_33:
  if ((*(_BYTE *)&self->_has & 1) != 0)
  {
  }

  else if ((*((_BYTE *)v4 + 108) & 1) != 0)
  {
    goto LABEL_40;
  }

  fromHandle = self->_fromHandle;
  else {
    char v16 = 1;
  }
LABEL_41:

  return v16;
}

    if (v1)
    {
      v102 = (v1 - 1) & v1;
      v103 = __clz(__rbit64(v1)) | (v3 << 6);
      uint64_t v18 = v3;
      goto LABEL_54;
    }

    uint64_t v18 = v3 + 1;
    if (!__OFADD__(v3, 1LL))
    {
      if (v18 >= v101) {
        goto LABEL_66;
      }
      v105 = *(void *)(v229 + 8 * v18);
      if (!v105)
      {
        v106 = v3 + 2;
        if (v3 + 2 >= v101) {
          goto LABEL_66;
        }
        v105 = *(void *)(v229 + 8 * v106);
        if (v105) {
          goto LABEL_52;
        }
        v106 = v3 + 3;
        if (v3 + 3 >= v101) {
          goto LABEL_66;
        }
        v105 = *(void *)(v229 + 8 * v106);
        if (v105)
        {
LABEL_52:
          uint64_t v18 = v106;
        }

        else
        {
          uint64_t v18 = v3 + 4;
          if (v3 + 4 >= v101) {
            goto LABEL_66;
          }
          v105 = *(void *)(v229 + 8 * v18);
          if (!v105)
          {
            v110 = v3 + 5;
            while (v110 < v101)
            {
              v105 = *(void *)(v229 + 8 * v110++);
              if (v105)
              {
                uint64_t v18 = v110 - 1;
                goto LABEL_53;
              }
            }

            goto LABEL_66;
          }
        }
      }

              sub_1001B4B8C(v2);
              swift_release(a2);
              return;
            }
          }
        }
      }
    }

  __break(1u);
  return result;
}

  __break(1u);
  return result;
}

  __break(1u);
  return result;
}

  __break(1u);
  return result;
}

  __break(1u);
  return result;
}

LABEL_41:
  return v14;
}

  uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", self->_isPersonaAvailable));
  [v3 setObject:v21 forKey:@"isPersonaAvailable"];

  BOOL v10 = self->_has;
  if ((*(_WORD *)&v10 & 0x1000) == 0)
  {
LABEL_14:
    if ((*(_BYTE *)&v10 & 0x10) == 0) {
      goto LABEL_15;
    }
    goto LABEL_43;
  }

  PBDataWriterWriteBOOLField(v12, self->_isGondolaCallingAvailable, 7LL);
  uint64_t v7 = self->_has;
  if ((*(_WORD *)&v7 & 0x4000) == 0)
  {
LABEL_13:
    if ((*(_WORD *)&v7 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_43;
  }

  *((_BYTE *)v4 + 90) = self->_isGondolaCallingAvailable;
  v4[26] |= 0x800u;
  unint64_t v6 = self->_has;
  if ((*(_WORD *)&v6 & 0x4000) == 0)
  {
LABEL_13:
    if ((*(_WORD *)&v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_43;
  }

  *((_BYTE *)v5 + 121) = self->_supportsAudioOnly;
  *((_BYTE *)v5 + 128) |= 8u;
  has = (char)self->_has;
  if ((has & 4) == 0)
  {
LABEL_5:
    if ((has & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_43;
  }

  char v12 = 0LL;
LABEL_42:
  uint64_t v13 = -[CSDMessagingScreenShareContext hash](self->_screenSharingRequest, "hash");
  uint64_t v14 = self->_has;
  if ((*(_WORD *)&v14 & 0x8000) == 0)
  {
    uint64_t v15 = 0LL;
    if ((*(_DWORD *)&v14 & 0x20000) != 0) {
      goto LABEL_44;
    }
LABEL_47:
    char v16 = 0LL;
    if ((*(_WORD *)&v14 & 0x200) != 0) {
      goto LABEL_45;
    }
LABEL_48:
    v17 = 0LL;
    return v37 ^ v38 ^ v36 ^ v35 ^ v34 ^ v33 ^ v32 ^ v31 ^ v30 ^ v29 ^ v28 ^ v27 ^ v26 ^ v25 ^ v24 ^ v23 ^ v22 ^ v21 ^ v20 ^ v19 ^ v5 ^ v7 ^ v8 ^ v9 ^ v10 ^ v11 ^ v12 ^ v13 ^ v15 ^ v16 ^ v17;
  }

  uint64_t v15 = 2654435761LL * self->_isUPlusOneVisionToVisionAvailable;
  if ((*(_DWORD *)&v14 & 0x20000) == 0) {
    goto LABEL_47;
  }
LABEL_44:
  char v16 = 2654435761LL * self->_supportsRequestToScreenShare;
  if ((*(_WORD *)&v14 & 0x200) == 0) {
    goto LABEL_48;
  }
LABEL_45:
  v17 = 2654435761LL * self->_isPhotosSharePlayAvailable;
  return v37 ^ v38 ^ v36 ^ v35 ^ v34 ^ v33 ^ v32 ^ v31 ^ v30 ^ v29 ^ v28 ^ v27 ^ v26 ^ v25 ^ v24 ^ v23 ^ v22 ^ v21 ^ v20 ^ v19 ^ v5 ^ v7 ^ v8 ^ v9 ^ v10 ^ v11 ^ v12 ^ v13 ^ v15 ^ v16 ^ v17;
}
}

    swift_once(&qword_1004466A0, sub_1001AC714);
    goto LABEL_20;
  }

  v0 = (void *)v35;
  v40 = v36;
  if (v36 >= v148)
  {
    if (qword_1004466A0 != -1) {
      swift_once(&qword_1004466A0, sub_1001AC714);
    }
    v94 = sub_1001B0E98();
    unint64_t v23 = sub_1001B0F78(v94, (uint64_t)qword_1004473D8);
    Logger.logObject.getter(v23, v95, v96);
    v97 = sub_1001B11C8();
    if (os_log_type_enabled((os_log_t)v0, v97))
    {
      uint64_t v27 = sub_1001B0E78(32LL);
      v146 = sub_1001B0E78(96LL);
      v149[0] = v146;
      *(_DWORD *)uint64_t v27 = 136315650;
      v98 = CSDConversationSpatialPersonaResolver.SpatialPersonaCounter.description.getter(v10, v148, (uint64_t)v7);
      v150 = sub_1001D7CF0(v98, v99, v149);
      ((void (*)(uint64_t *, _BYTE *, uint64_t))UnsafeMutableRawBufferPointer.copyMemory(from:))( &v150,  v151,  v27 + 12);
      sub_1001B0F5C();
      *(_WORD *)(v27 + 12) = 2080;
      v100 = sub_1001B117C();
      v150 = sub_1001D7CF0(v100, v101, v149);
      ((void (*)(uint64_t *, _BYTE *, uint64_t))UnsafeMutableRawBufferPointer.copyMemory(from:))( &v150,  v151,  v27 + 22);
      sub_1001B0EC0();
      *(_WORD *)(v27 + 22) = 2080;
      v102 = (uint64_t)v23 + OBJC_IVAR____TtC13callservicesd37CSDConversationSpatialPersonaResolver_groupUUID;
      sub_1001B0E6C( (uint64_t)v23 + OBJC_IVAR____TtC13callservicesd37CSDConversationSpatialPersonaResolver_groupUUID,  (uint64_t)&v150);
      sub_1001B03C0(v102, v147, (uint64_t *)&unk_10044A400);
      sub_1001AEC9C(v147, (uint64_t (*)(void))&type metadata accessor for UUID, (uint64_t *)&unk_10044A400);
      v104 = v103;
      sub_1001AFF54(v147);
      v106 = sub_1001B1278(v104, v105, v149);
      v107 = sub_1001B0ED8(v106);
      ((void (*)(uint64_t, uint64_t, uint64_t))UnsafeMutableRawBufferPointer.copyMemory(from:))( v107,  v108,  v109);

      sub_1001B0EC0();
      sub_1001B1078( (void *)&_mh_execute_header,  (os_log_s *)v0,  v97,  "[Upsert] Ignoring stale state, new-state=%s, old-state=%s, groupUUID=%s");
      swift_arrayDestroy(v146, 3LL);
      char v32 = v146;
      goto LABEL_29;
    }

          v39 = v44;
LABEL_42:
          sub_1001B4B8C(v39);
          return (Swift::Int)v3;
        }
      }
    }

    sub_1001B4B8C(v2);

    return;
  }

  __break(1u);
}

    swift_once(&qword_100446950, sub_100258A88);
    goto LABEL_4;
  }

  unint64_t v36 = (uint64_t)sub_1001D8F68(v21, "state");
  if (v36 == 3)
  {
    p_base_prots = &CSDHandoffAudioController__metaData.base_prots;
    v136 = v4;
    uint64_t v38 = sub_1001D8F68(3LL, "UUID");
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v38);

    v39 = (uint64_t *)(v2
                    + OBJC_IVAR____TtC13callservicesd33GroupFaceTimeNotificationProvider_notificationIdentifiersByConversationUUID);
    sub_1001B0E80( v2 + OBJC_IVAR____TtC13callservicesd33GroupFaceTimeNotificationProvider_notificationIdentifiersByConversationUUID,  (uint64_t)v140,  32LL);
    v133 = (uint8_t *)sub_1001CA0B4((uint64_t)v12, *v39);
    p_opt_inst_meths = &OBJC_PROTOCOL___CSDCoreTelephonyClient.opt_inst_meths;
    v135 = v2;
    if (v40)
    {
      v42 = v40;
      sub_1001D8F44();
      v43 = *(void (**)(void, void))(v5 + 8);
      v44 = v137;
      v134 = v43;
      v43(v12, v137);
      if (qword_100446950 != -1) {
        swift_once(&qword_100446950, sub_100258A88);
      }
      v45 = sub_1001B0E98();
      v46 = sub_1001B0D98(v45, (uint64_t)qword_100454210);
      v47 = v136;
      swift_bridgeObjectRetain_n(v42, 2LL);
      v48 = v47;
      Logger.logObject.getter(v48, v49, v50);
      v51 = sub_1001B11C8();
      if (sub_1001D9224(v51))
      {
        v52 = sub_1001B0E78(22LL);
        v53 = sub_1001B0E78(64LL);
        v132 = v53;
        v140[0] = v53;
        *(_DWORD *)v52 = 136315394;
        v131 = (uint8_t *)v47;
        v54 = sub_1001D9124(v53, "UUID");
        LODWORD(v130) = v46;
        v55 = v54;
        v56 = v138;
        static UUID._unconditionallyBridgeFromObjectiveC(_:)(v54);

        sub_1001C6B98( (unint64_t *)&qword_100447E68,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID);
        dispatch thunk of CustomStringConvertible.description.getter(v44, v57);
        sub_1001D93E4();
        v134(v56, v44);
        v139 = sub_1001D9010();
        sub_1001D9154(v139, v58, v59, v52 + 12);

        sub_1001D92B4();
        *(_WORD *)(v52 + 12) = 2080;
        swift_bridgeObjectRetain(v42);
        v60 = (uint64_t)v133;
        v139 = sub_1001B1278((uint64_t)v133, v61, v140);
        sub_1001D9154(v139, v62, v63, v52 + 22);
        swift_bridgeObjectRelease_n(v42, 3LL);
        v64 = v131;
        sub_1001D9094( (void *)&_mh_execute_header,  (os_log_s *)v131,  (os_log_type_t)v130,  "Removing invite notification for conversation UUID %s with notification identifier %s",  (uint8_t *)v52);
        v65 = v132;
        sub_1001D9350(v132);
        sub_1001B0E60(v65);
        sub_1001B0E60(v52);
      }

      else
      {

        swift_bridgeObjectRelease_n(v42, 2LL);
        v60 = (uint64_t)v133;
      }

      v71 = *(void (**)(uint64_t, uint64_t))(v135
                                                    + OBJC_IVAR____TtC13callservicesd33GroupFaceTimeNotificationProvider_removeNotification);
      if (v71)
      {
        sub_1001D8F58();
        v71(v60, v42);
        sub_1001D8F60((uint64_t)v71);
      }

      v72 = sub_1001B0EC0();
      p_base_prots = &CSDHandoffAudioController__metaData.base_prots;
      p_opt_inst_meths = (__objc2_meth_list **)sub_1001D9124(v72, "UUID");
      v70 = (uint64_t)v138;
      sub_1001D8FA8();

      sub_1001B0E80((uint64_t)v39, (uint64_t)v140, 33LL);
      sub_1001D9464();
      v73 = sub_1001D9330();
      v68 = v137;
      v66 = (uint64_t (*)(char *, uint64_t))v134;
      v134(v73, v137);
      sub_1001D8F44();
      v69 = sub_1001B0EB8();
      v2 = v135;
    }

    else
    {
      sub_1001D8F44();
      v66 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
      v67 = v12;
      v68 = v137;
      v69 = v66(v67, v137);
      v70 = (uint64_t)v138;
    }

    v134 = (void (*)(void, void))v66;
    v74 = v136;
    v75 = sub_1001D8F68(v69, "UUID");
    sub_1001D8F90();

    v76 = (uint64_t *)(v2
                    + OBJC_IVAR____TtC13callservicesd33GroupFaceTimeNotificationProvider_pendingNotificationsForConversationsByUUID);
    sub_1001B0E80( v2 + OBJC_IVAR____TtC13callservicesd33GroupFaceTimeNotificationProvider_pendingNotificationsForConversationsByUUID,  (uint64_t)v140,  32LL);
    sub_1001CA158(v70, *v76);
    v78 = v77;
    sub_1001D8F44();
    v66((char *)v70, v68);

    if (v78)
    {
      if (qword_100446950 != -1) {
        swift_once(&qword_100446950, sub_100258A88);
      }
      v133 = (uint8_t *)v8;
      v80 = sub_1001B0E98();
      sub_1001B0D98(v80, (uint64_t)qword_100454210);
      v81 = v74;
      Logger.logObject.getter(v81, v82, v83);
      v84 = sub_1001B11C8();
      if (os_log_type_enabled((os_log_t)v78, v84))
      {
        v85 = (uint8_t *)sub_1001B0E78(12LL);
        v86 = sub_1001B0E78(32LL);
        v132 = v86;
        v140[0] = v86;
        v131 = v85;
        *(_DWORD *)v85 = 136315138;
        v130 = v85 + 4;
        v87 = sub_1001D8F68(v86, "UUID");
        sub_1001D8FA8();

        sub_1001C6B98( (unint64_t *)&qword_100447E68,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID);
        v88 = v137;
        dispatch thunk of CustomStringConvertible.description.getter(v137, v89);
        v91 = v90;
        v92 = v134;
        v134(v138, v88);
        v93 = sub_1001D9010();
        v94 = sub_1001D9450(v93);
        v95 = v85 + 12;
        p_base_prots = (__objc2_prot_list **)(&CSDHandoffAudioController__metaData + 40);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v94, v96, v130, v95);

        v97 = v91;
        v1 = &unk_100447000;
        v70 = (uint64_t)v138;
        swift_bridgeObjectRelease(v97);
        v98 = v131;
        sub_1001B0FD8( (void *)&_mh_execute_header,  (os_log_s *)v78,  v84,  "Removing pending notification for conversation with uuid %s since we are joined into the conversation",  v131);
        v99 = v132;
        sub_1001B0F64(v132);
        sub_1001B0E60(v99);
        sub_1001B0E60((uint64_t)v98);

        v2 = v135;
      }

      else
      {

        v92 = v134;
        v2 = v135;
        v88 = v137;
      }

      v101 = sub_1001D8F68(v100, (const char *)p_base_prots[139]);
      sub_1001D8F90();

      sub_1001B0E80((uint64_t)v76, (uint64_t)v140, 33LL);
      sub_1001FD8F8(v70, v102, v103, v104, v105, v106, v107, v108, v129, (uint64_t)v130);
      v110 = v109;
      v92(v70, v88);
      sub_1001D8F44();

      unint64_t v8 = (uint64_t)v133;
    }

    v111 = sub_1001D8F68(v79, "link");
    if (v111)
    {
      v112 = v111;
      v113 = sub_1001CD150(v111);
      v115 = v114;
      v116 = *(void (**)(unint64_t, uint64_t))(v2
                                                              + OBJC_IVAR____TtC13callservicesd33GroupFaceTimeNotificationProvider_removeNotification);
      if (v116)
      {
        v117 = v113;
        sub_1001D91C4(v2 + OBJC_IVAR____TtC13callservicesd33GroupFaceTimeNotificationProvider_removeNotification);
        v116(v117, v115);
        sub_1001D9164((uint64_t)v116);
      }

      sub_1001B0F5C();

      p_base_prots = &CSDHandoffAudioController__metaData.base_prots;
    }

    v118 = sub_1001D8F68((uint64_t)v111, (const char *)p_base_prots[139]);
    sub_1001D91AC();

    v119 = (uint64_t *)(v2
                     + OBJC_IVAR____TtC13callservicesd33GroupFaceTimeNotificationProvider_carPlayNotificationIdentifiersByConversationUUID);
    sub_1001B0E80( v2 + OBJC_IVAR____TtC13callservicesd33GroupFaceTimeNotificationProvider_carPlayNotificationIdentifiersByConversationUUID,  (uint64_t)v140,  32LL);
    v120 = sub_1001CA0B4(v8, *v119);
    if (v121)
    {
      v122 = v120;
      v123 = v121;
      sub_1001D8F44();
      sub_1001D90B8(v8);
      v124 = *(void (**)(uint64_t, void *))(v2
                                                    + OBJC_IVAR____TtC13callservicesd33GroupFaceTimeNotificationProvider_removeNotification);
      if (v124)
      {
        sub_1001D91C4(v2 + OBJC_IVAR____TtC13callservicesd33GroupFaceTimeNotificationProvider_removeNotification);
        v124(v122, v123);
        sub_1001D9164((uint64_t)v124);
      }

      v125 = sub_1001B0EB8();
      v126 = sub_1001D8F68(v125, "UUID");
      sub_1001D8F90();

      sub_1001B0E80((uint64_t)v119, (uint64_t)v140, 33LL);
      sub_1001D9464();
      v127 = sub_1001D9330();
      sub_1001D90B8(v127);
      sub_1001D8F44();
      unint64_t v36 = sub_1001B0EB8();
    }

    else
    {
      sub_1001D8F44();
      unint64_t v36 = sub_1001D90B8(v8);
    }

    uint64_t v14 = &selRef_sharedPrivacyManager;
  }

  __break(1u);
  return result;
}

  __break(1u);
}

  __break(1u);
}

  __break(1u);
}

  __break(1u);
}

                    char v4 = v35;
                    unint64_t v6 = v37;
                    sub_1001B4B8C(v8);
                    if (v37 != v36) {
                      goto LABEL_4;
                    }

                    unsigned int v33 = v34;
LABEL_47:
                    swift_bridgeObjectRelease(v33);
                    return;
                  }
                }
              }
            }

        sub_10020E8B0((uint64_t)v108, type metadata accessor for SoundDescriptor);
        goto LABEL_42;
      }
    }

    sub_1002727F4((uint64_t)v107);
    sub_10027E01C((uint64_t)v104);
    goto LABEL_41;
  }

            v64 = v66;
LABEL_38:
            v56 = (v65 - 1) & v65;
            v60 = __clz(__rbit64(v65)) + (v64 << 6);
            v53 = v64;
LABEL_34:
            v61 = *(void *)(v52 + 56);
            v62 = (void *)(*(void *)(v52 + 48) + 16 * v60);
            v63 = v62[1];
            *(void *)&v98 = *v62;
            *((void *)&v98 + 1) = v63;
            sub_1001B03FC(v61 + 32 * v60, (uint64_t)v90);
            sub_1001E927C();
            goto LABEL_53;
          }
        }
      }
    }

  __break(1u);
}

  __break(1u);
}

void sub_10000AD80(uint64_t a1)
{
  id v1 = [objc_alloc(*(Class *)(a1 + 40)) initWithQueue:*(void *)(a1 + 32)];
  v2 = (void *)qword_10044CDF0;
  qword_10044CDF0 = (uint64_t)v1;
}

id sub_10000B07C(uint64_t a1)
{
  return [*(id *)(a1 + 32) endTransactionIfNecessaryForObject:*(void *)(a1 + 32)];
}

void sub_10000B524(uint64_t a1)
{
  id v4 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) object]);
  unsigned int v2 = [v4 state];
  id v3 = *(void **)(a1 + 40);
  if (v2 == 5) {
    [v3 endTransactionIfNecessaryForObject:v4];
  }
  else {
    [v3 beginTransactionIfNecessaryForObject:v4 withReason:@"handleSessionStateChanged"];
  }
}

void sub_10000B690(id a1)
{
  off_10044CE00 = (_UNKNOWN *)CUTWeakLinkSymbol("SimulateCrash", @"CrashReporterSupport");
}

CSDAVConferenceProvider *__cdecl sub_10000B904(id a1, NSUUID *a2, OS_dispatch_queue *a3)
{
  id v4 = a3;
  unsigned int v5 = a2;
  unint64_t v6 = -[CSDAVConferenceProvider initWithClientUUID:serialQueue:]( objc_alloc(&OBJC_CLASS___CSDAVConferenceProvider),  "initWithClientUUID:serialQueue:",  v5,  v4);

  return v6;
}

void sub_10000BAC8(uint64_t a1)
{
  int v2 = *(_DWORD *)(*(void *)(a1 + 32) + 12LL);
  id v3 = sub_1001704C4();
  id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);
  if (v2 != 1)
  {
    if (v5)
    {
      int v39 = *(_DWORD *)(*(void *)(a1 + 32) + 12LL);
      *(_DWORD *)buf = 67109120;
      LODWORD(v52) = v39;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "[WARN] Attempted to prepare conference which has already started preparing (state=%d)",  buf,  8u);
    }

    goto LABEL_14;
  }

  if (v5)
  {
    unint64_t v6 = *(void **)(a1 + 40);
    *(_DWORD *)buf = 138412290;
    v52 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Preparing conference with configuration: %@",  buf,  0xCu);
  }

  [*(id *)(a1 + 32) setState:2];
  [*(id *)(a1 + 32) setConfiguration:*(void *)(a1 + 40)];
  uint64_t v7 = (uint64_t (**)(void, void, void))objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 32) conferenceProviderCreationBlock]);
  unint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) configuration]);
  char v9 = (void *)objc_claimAutoreleasedReturnValue([v8 clientUUID]);
  BOOL v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) queue]);
  uint64_t v11 = ((uint64_t (**)(void, void *, void *))v7)[2](v7, v9, v10);
  char v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
  [*(id *)(a1 + 32) setConferenceProvider:v12];

  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) conferenceProvider]);
  if (!v13)
  {
    id v40 = sub_1001704C4();
    v41 = (os_log_s *)objc_claimAutoreleasedReturnValue(v40);
    if (os_log_type_enabled(v41, OS_LOG_TYPE_ERROR)) {
      sub_1002B18C0(v41, v42, v43, v44, v45, v46, v47, v48);
    }
    goto LABEL_19;
  }

  uint64_t v14 = *(void **)(a1 + 32);
  uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v14 conferenceProvider]);
  [v15 setDelegate:v14];

  id v16 = [*(id *)(a1 + 40) deviceRole];
  id v17 = sub_1001704C4();
  uint64_t v18 = (os_log_s *)objc_claimAutoreleasedReturnValue(v17);
  if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 67109120;
    LODWORD(v52) = (_DWORD)v16;
    _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEFAULT,  "Initializing new callID with device role %d",  buf,  8u);
  }

  v19 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) conferenceProvider]);
  unint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) reportingHierarchyToken]);
  unsigned int v21 = [v19 initializeNewCallWithDeviceRole:v16 reportingHierarchyToken:v20];

  if (!v21)
  {
    id v49 = sub_1001704C4();
    v41 = (os_log_s *)objc_claimAutoreleasedReturnValue(v49);
    if (os_log_type_enabled(v41, OS_LOG_TYPE_ERROR)) {
      sub_1002B18F0((int)v16, v41);
    }
LABEL_19:

    [*(id *)(a1 + 32) _setEndedWithReason:1 error:0];
    return;
  }

  unsigned int v22 = [*(id *)(a1 + 40) requiresInviteDictionary];
  unint64_t v23 = *(void **)(a1 + 32);
  if (v22)
  {
    char v24 = (void *)objc_claimAutoreleasedReturnValue([v23 conferenceProvider]);
    [*(id *)(a1 + 40) localPortraitAspectRatio];
    double v26 = v25;
    double v28 = v27;
    [*(id *)(a1 + 40) localLandscapeAspectRatio];
    objc_msgSend(v24, "setLocalPortraitAspectRatio:localLandscapeAspectRatio:", v26, v28, v29, v30);

    v50[0] = _NSConcreteStackBlock;
    v50[1] = 3221225472LL;
    v50[2] = sub_10000BF20;
    v50[3] = &unk_1003D7800;
    v50[4] = *(void *)(a1 + 32);
    id v4 = objc_retainBlock(v50);
    id v31 = sub_1001704C4();
    char v32 = (os_log_s *)objc_claimAutoreleasedReturnValue(v31);
    if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
    {
      unsigned int v33 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) remoteInviteDictionary]);
      *(_DWORD *)buf = 138412290;
      v52 = v33;
      _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_DEFAULT,  "Fetching local invite dictionary using remote invite dictionary %@",  buf,  0xCu);
    }

    uint64_t v34 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) conferenceProvider]);
    uint64_t v35 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) conferenceProvider]);
    id v36 = [v35 callID];
    char v37 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) remoteInviteDictionary]);
    uint64_t v38 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) queue]);
    [v34 inviteDictionaryForCallID:v36 remoteInviteDictionary:v37 nonCellularCandidateTimeout:v4 block:v38 queue:0.0];

LABEL_14:
    return;
  }

  [v23 setState:3];
  [*(id *)(a1 + 32) _sendDelegateFinishedPreparing];
}

void sub_10000BF20(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = sub_1001704C4();
  unint64_t v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
  char v9 = v8;
  if (v6)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_1002B1960();
    }

    [*(id *)(a1 + 32) _setEndedWithReason:4 error:v6];
  }

  else
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      int v10 = 138412290;
      id v11 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "Fetched local invite dictionary: %@",  (uint8_t *)&v10,  0xCu);
    }

    [*(id *)(a1 + 32) setLocalInviteDictionary:v5];
    [*(id *)(a1 + 32) setState:3];
    [*(id *)(a1 + 32) _sendDelegateFinishedPreparing];
  }
}

void sub_10000C174(uint64_t a1)
{
  int v2 = (id *)(a1 + 32);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) conferenceProvider]);

  if (!v3)
  {
    id v14 = sub_1001704C4();
    uint64_t v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
    if (!os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_20;
    }
    *(_WORD *)buf = 0;
    uint64_t v15 = "[WARN] Conference does not exist";
    id v16 = v13;
    uint32_t v17 = 2;
LABEL_11:
    _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, v15, buf, v17);
    goto LABEL_20;
  }

  if (*((_DWORD *)*v2 + 3) != 3)
  {
    id v18 = sub_1001704C4();
    uint64_t v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v18);
    if (!os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_20;
    }
    int v19 = *((_DWORD *)*v2 + 3);
    *(_DWORD *)buf = 67109120;
    LODWORD(v36) = v19;
    uint64_t v15 = "[WARN] Attempted to start conference which has not been prepared (state=%d)";
    id v16 = v13;
    uint32_t v17 = 8;
    goto LABEL_11;
  }

  [*v2 setState:4];
  unsigned int v4 = [*(id *)(a1 + 40) type];
  if (v4 == 1)
  {
    unint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) conferenceProvider]);
    unsigned int v21 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) configuration]);
    id v22 = [v21 isCaller];
    unint64_t v23 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) configuration]);
    char v24 = (void *)objc_claimAutoreleasedReturnValue([v23 capabilities]);
    id v25 = [*(id *)(a1 + 40) socket];
    id v34 = 0LL;
    LODWORD(v22) = [v20 startConnectionAsCaller:v22 capabilities:v24 socket:v25 error:&v34];
    uint64_t v13 = (os_log_s *)v34;

    if ((_DWORD)v22) {
      goto LABEL_13;
    }
LABEL_17:
    id v31 = sub_1001704C4();
    char v32 = (os_log_s *)objc_claimAutoreleasedReturnValue(v31);
    if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR)) {
      sub_1002B19CC(v2, (uint64_t)v13, v32);
    }

    [*v2 _setEndedWithReason:1 error:v13];
    goto LABEL_20;
  }

  if (v4 != 2)
  {
    uint64_t v13 = 0LL;
    goto LABEL_17;
  }

  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) conferenceProvider]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) configuration]);
  id v7 = [v6 isCaller];
  unint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) configuration]);
  char v9 = (void *)objc_claimAutoreleasedReturnValue([v8 remoteInviteDictionary]);
  int v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) configuration]);
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 capabilities]);
  char v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) destination]);
  id v33 = 0LL;
  LOBYTE(v7) = [v5 startConnectionAsCaller:v7 remoteInviteDictionary:v9 capabilities:v11 destination:v12 error:&v33];
  uint64_t v13 = (os_log_s *)v33;

LABEL_13:
  id v26 = sub_1001704C4();
  double v27 = (os_log_s *)objc_claimAutoreleasedReturnValue(v26);
  if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
  {
    double v28 = (void *)objc_claimAutoreleasedReturnValue([*v2 configuration]);
    double v29 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
    [v29 timeIntervalSince1970];
    *(_DWORD *)buf = 138412546;
    id v36 = v28;
    __int16 v37 = 2048;
    uint64_t v38 = v30;
    _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_DEFAULT,  "Successfully started connection with configuration=%@ (timestamp: %f)",  buf,  0x16u);
  }

  [*v2 _setUpDidStartTimeout];
LABEL_20:
}

id sub_10000C564(uint64_t a1)
{
  return [*(id *)(a1 + 32) _stop];
}

id sub_10000C770(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    unsigned int v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) conferenceProvider]);
    int v7 = 138412290;
    unint64_t v8 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Calling stop on conference %@",  (uint8_t *)&v7,  0xCu);
  }

  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) conferenceProvider]);
  [v5 stop];

  return [*(id *)(a1 + 32) setCapturingLocalVideo:0];
}

void sub_10000C8BC(uint64_t a1)
{
  id v2 = *(int **)(a1 + 32);
  if (v2[3] > 3)
  {
    id v7 = sub_1001704C4();
    id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      unint64_t v8 = *(void **)(a1 + 32);
      int v9 = 138412290;
      int v10 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "[WARN] Attempted to cancel a conference that has already started connecting: %@",  (uint8_t *)&v9,  0xCu);
    }
  }

  else
  {
    [v2 setState:6];
    id v3 = sub_1001704C4();
    unsigned int v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) conferenceProvider]);
      int v9 = 138412290;
      int v10 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Calling cancel on conference %@",  (uint8_t *)&v9,  0xCu);
    }

    id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) conferenceProvider]);
    -[os_log_s cancel](v6, "cancel");
  }
}

void sub_10000CA94(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) conferenceProvider]);
  [v2 sendData:*(void *)(a1 + 40)];
}

void sub_10000CB90(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) conferenceProvider]);
  [v2 setPeerReportingIdentifier:*(void *)(a1 + 40) sessionIdentifier:*(void *)(a1 + 48)];
}

void sub_10000CD6C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_10000CD84(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_10000CD94(uint64_t a1)
{
}

void sub_10000CD9C(uint64_t a1)
{
}

void sub_10000CE78( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_10000CE90(uint64_t a1)
{
  id v5 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) configuration]);
  uint64_t v2 = objc_claimAutoreleasedReturnValue([v5 remoteInviteDictionary]);
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8LL);
  unsigned int v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_10000CF7C(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    unsigned int v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) configuration]);
    id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 remoteInviteDictionary]);
    uint64_t v6 = *(void *)(a1 + 40);
    int v9 = 138412546;
    int v10 = v5;
    __int16 v11 = 2112;
    uint64_t v12 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Setting remote invite dictionary from %@ to %@",  (uint8_t *)&v9,  0x16u);
  }

  uint64_t v7 = *(void *)(a1 + 40);
  unint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) configuration]);
  [v8 setRemoteInviteDictionary:v7];
}

void sub_10000D118( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_10000D130(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) conferenceProvider]);
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [v2 callID];
}

void sub_10000D21C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_10000D234(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) configuration]);
  *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [v2 isCaller];
}

void sub_10000D2F8(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    unsigned int v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) configuration]);
    unsigned int v5 = [v4 isCaller];
    int v6 = *(unsigned __int8 *)(a1 + 40);
    v9[0] = 67109376;
    v9[1] = v5;
    __int16 v10 = 1024;
    int v11 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Setting caller from %d to %d",  (uint8_t *)v9,  0xEu);
  }

  uint64_t v7 = *(unsigned __int8 *)(a1 + 40);
  unint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) configuration]);
  [v8 setCaller:v7];
}

void sub_10000D4B0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_10000D4C8(uint64_t a1)
{
}

void sub_10000D614( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_10000D62C(uint64_t a1)
{
}

void sub_10000D778( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_10000D790(uint64_t a1)
{
}

void sub_10000D8BC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_10000D8D4(uint64_t result)
{
  *(_DWORD *)(*(void *)(*(void *)(result + 40) + 8LL) + 24LL) = *(_DWORD *)(*(void *)(result + 32) + 12LL);
  return result;
}

void sub_10000DAAC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_10000DAC4(uint64_t result)
{
  *(void *)(*(void *)(*(void *)(result + 40) + 8LL) + 24LL) = *(void *)(*(void *)(result + 32) + 96LL);
  return result;
}

void sub_10000DB7C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

id sub_10000DB94(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) _isMuted];
  *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = (_BYTE)result;
  return result;
}

id sub_10000DC74(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) _isMuted];
  if (*(unsigned __int8 *)(a1 + 40) != (_DWORD)result)
  {
    id v3 = sub_1001704C4();
    unsigned int v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      int v5 = *(unsigned __int8 *)(a1 + 40);
      int v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) conferenceProvider]);
      v9[0] = 67109378;
      v9[1] = v5;
      __int16 v10 = 2112;
      int v11 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Setting microphoneMuted to %d for %@",  (uint8_t *)v9,  0x12u);
    }

    uint64_t v7 = *(unsigned __int8 *)(a1 + 40);
    unint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) conferenceProvider]);
    [v8 setMicrophoneMuted:v7];

    return [*(id *)(a1 + 32) _sendDelegateMutedChanged];
  }

  return result;
}

void sub_10000DE20( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

id sub_10000DE38(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) _isSendingAudio];
  *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = (_BYTE)result;
  return result;
}

void sub_10000DF3C(uint64_t a1)
{
  uint64_t v2 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) conferenceProvider]);
  if (v2)
  {
    id v3 = (void *)v2;
    unsigned int v4 = [*(id *)(a1 + 32) _isSendingAudio];
    int v5 = *(unsigned __int8 *)(a1 + 40);

    if (v5 != v4)
    {
      id v6 = sub_1001704C4();
      uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        int v8 = *(unsigned __int8 *)(a1 + 40);
        v11[0] = 67109120;
        v11[1] = v8;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Setting sendingAudio to %d",  (uint8_t *)v11,  8u);
      }

      BOOL v9 = *(_BYTE *)(a1 + 40) == 0;
      __int16 v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) conferenceProvider]);
      [v10 setAudioPaused:v9];
    }
  }

void sub_10000E0E4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

id sub_10000E0FC(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) _isSendingAudio];
  *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = (_BYTE)result;
  return result;
}

void sub_10000E200(uint64_t a1)
{
  uint64_t v2 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) conferenceProvider]);
  if (v2)
  {
    id v3 = (void *)v2;
    unsigned int v4 = [*(id *)(a1 + 32) _isSendingAudioData];
    int v5 = *(unsigned __int8 *)(a1 + 40);

    if (v5 != v4)
    {
      id v6 = sub_1001704C4();
      uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        int v8 = *(unsigned __int8 *)(a1 + 40);
        v11[0] = 67109120;
        v11[1] = v8;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Setting sendingAudioData to %d",  (uint8_t *)v11,  8u);
      }

      uint64_t v9 = *(unsigned __int8 *)(a1 + 40);
      __int16 v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) conferenceProvider]);
      [v10 setSendingAudio:v9];
    }
  }

void sub_10000E3A0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_10000E3B8(uint64_t result)
{
  *(_BYTE *)(*(void *)(*(void *)(result + 40) + 8LL) + 24LL) = *(_BYTE *)(*(void *)(result + 32) + 8LL);
  return result;
}

void sub_10000E470( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

id sub_10000E488(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) _isSendingVideo];
  *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = (_BYTE)result;
  return result;
}

void sub_10000E5D4(uint64_t a1)
{
  unsigned int v2 = [*(id *)(a1 + 32) _isSendingVideo];
  id v3 = *(int **)(a1 + 32);
  if (*(unsigned __int8 *)(a1 + 40) != v2)
  {
    uint64_t v18 = objc_claimAutoreleasedReturnValue([v3 conferenceProvider]);
    if (v18)
    {
      int v19 = (void *)v18;
      unint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _isSendingVideoExpected]);

      if (!v20)
      {
        id v21 = sub_1001704C4();
        id v22 = (os_log_s *)objc_claimAutoreleasedReturnValue(v21);
        if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
        {
          BOOL v23 = *(_BYTE *)(a1 + 40) == 0;
          int v29 = 67109120;
          BOOL v30 = v23;
          _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEFAULT,  "Setting conferenceProvider videoPaused to %d",  (uint8_t *)&v29,  8u);
        }

        BOOL v24 = *(_BYTE *)(a1 + 40) == 0;
        id v25 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) conferenceProvider]);
        [v25 setVideoPaused:v24];
      }
    }

    id v26 = sub_1001704C4();
    double v27 = (os_log_s *)objc_claimAutoreleasedReturnValue(v26);
    if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
    {
      int v28 = *(unsigned __int8 *)(a1 + 40);
      int v29 = 67109120;
      BOOL v30 = v28;
      _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_DEFAULT,  "Setting sendingVideo to %d",  (uint8_t *)&v29,  8u);
    }

    uint32_t v17 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  *(unsigned __int8 *)(a1 + 40)));
    [*(id *)(a1 + 32) setSendingVideoExpected:v17];
    goto LABEL_15;
  }

  if (v3[3] <= 3)
  {
    unsigned int v4 = (void *)objc_claimAutoreleasedReturnValue([v3 configuration]);
    int v5 = (void *)objc_claimAutoreleasedReturnValue([v4 capabilities]);
    unsigned int v6 = [v5 isVideoPausedToStart];
    int v7 = *(unsigned __int8 *)(a1 + 40);

    if (v7 == v6)
    {
      id v8 = sub_1001704C4();
      uint64_t v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        __int16 v10 = *(_DWORD **)(a1 + 32);
        int v11 = v10[3];
        uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v10 configuration]);
        uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v12 capabilities]);
        unsigned int v14 = [v13 isVideoPausedToStart];
        BOOL v15 = *(_BYTE *)(a1 + 40) == 0;
        int v29 = 67109632;
        BOOL v30 = v11;
        __int16 v31 = 1024;
        unsigned int v32 = v14;
        __int16 v33 = 1024;
        BOOL v34 = v15;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "State is %d, updating isVideoPausedToStart from %d to %d",  (uint8_t *)&v29,  0x14u);
      }

      id v16 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) configuration]);
      uint32_t v17 = (void *)objc_claimAutoreleasedReturnValue([v16 capabilities]);

      [v17 setIsVideoPausedToStart:*(_BYTE *)(a1 + 40) == 0];
      [*(id *)(a1 + 32) updateCapabilities:v17];
LABEL_15:
    }
  }

void sub_10000E964( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_10000E97C(uint64_t a1)
{
  uint64_t v2 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _isSendingVideoExpected]);
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8LL);
  unsigned int v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_10000EAF0(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    unsigned int v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) configuration]);
    int v5 = (void *)objc_claimAutoreleasedReturnValue([v4 capabilities]);
    uint64_t v6 = *(void *)(a1 + 40);
    int v11 = 138412546;
    uint64_t v12 = v5;
    __int16 v13 = 2112;
    uint64_t v14 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Updating capabilities from: %@ to %@",  (uint8_t *)&v11,  0x16u);
  }

  uint64_t v7 = *(void *)(a1 + 40);
  id v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) configuration]);
  [v8 setCapabilities:v7];

  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) conferenceProvider]);
  if (v9)
  {
    __int16 v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) conferenceProvider]);
    [v10 updateCapabilities:*(void *)(a1 + 40)];
  }

void sub_10000ECC0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_10000ECD8(uint64_t result)
{
  *(_BYTE *)(*(void *)(*(void *)(result + 40) + 8LL) + 24LL) = *(_BYTE *)(*(void *)(result + 32) + 9LL);
  return result;
}

void sub_10000EDB4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

__n128 sub_10000EDCC(uint64_t a1)
{
  __n128 result = *(__n128 *)(*(void *)(a1 + 32) + 136LL);
  *(__n128 *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 32LL) = result;
  return result;
}

void sub_10000EE60(uint64_t a1)
{
  uint64_t v2 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) conferenceProvider]);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    BOOL v4 = NSEqualSizes(*(NSSize *)(*(void *)(a1 + 32) + 136LL), *(NSSize *)(a1 + 40));

    if (!v4)
    {
      id v5 = sub_1001704C4();
      uint64_t v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v7 = NSStringFromSize(*(NSSize *)(*(void *)(a1 + 32) + 136LL));
        id v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
        uint64_t v9 = NSStringFromSize(*(NSSize *)(a1 + 40));
        __int16 v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
        int v12 = 138412546;
        __int16 v13 = v8;
        __int16 v14 = 2112;
        BOOL v15 = v10;
        _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Setting remoteVideoPresentationSize from %@ to %@",  (uint8_t *)&v12,  0x16u);
      }

      *(_OWORD *)(*(void *)(a1 + 32) + 136LL) = *(_OWORD *)(a1 + 40);
      int v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) conferenceProvider]);
      objc_msgSend(v11, "setRemoteVideoPresentationSize:", *(double *)(a1 + 40), *(double *)(a1 + 48));
    }
  }

void sub_10000F04C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_10000F064(uint64_t result)
{
  *(_DWORD *)(*(void *)(*(void *)(result + 40) + 8LL) + 24LL) = *(_DWORD *)(*(void *)(result + 32) + 16LL);
  return result;
}

void sub_10000F0F4(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) conferenceProvider]);
  if (v2)
  {
    int v3 = *(_DWORD *)(*(void *)(a1 + 32) + 16LL);
    int v4 = *(_DWORD *)(a1 + 40);

    if (v3 != v4)
    {
      id v5 = sub_1001704C4();
      uint64_t v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        int v7 = *(_DWORD *)(*(void *)(a1 + 32) + 16LL);
        int v8 = *(_DWORD *)(a1 + 40);
        v10[0] = 67109376;
        v10[1] = v7;
        __int16 v11 = 1024;
        int v12 = v8;
        _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Setting remoteVideoPresentationState from %d to %d",  (uint8_t *)v10,  0xEu);
      }

      *(_DWORD *)(*(void *)(a1 + 32) + 16LL) = *(_DWORD *)(a1 + 40);
      uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) conferenceProvider]);
      [v9 setRemoteVideoPresentationState:*(unsigned int *)(a1 + 40)];
    }
  }

void *sub_10000F2A4(void *result)
{
  if (*(int *)(result[4] + 12LL) <= 4)
  {
    id v1 = result;
    id v2 = sub_1001704C4();
    int v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
      sub_1002B1AEC(v3, v4, v5, v6, v7, v8, v9, v10);
    }

    __int16 v11 = (void *)objc_claimAutoreleasedReturnValue([(id)v1[4] conferenceProvider]);
    [v11 stop];

    return [(id)v1[4] _setEndedWithReason:3 error:0];
  }

  return result;
}

void sub_10000F3C4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_10000F3DC(uint64_t a1)
{
  id v3 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) configuration]);
  id v2 = (void *)objc_claimAutoreleasedReturnValue([v3 capabilities]);
  *(_DWORD *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [v2 deviceRole];
}

void sub_10000F4B0(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) configuration]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 capabilities]);
  unsigned int v4 = [v3 deviceRole];
  int v5 = *(_DWORD *)(a1 + 40);

  if (v4 != v5)
  {
    id v6 = sub_1001704C4();
    uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) configuration]);
      uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v8 capabilities]);
      unsigned int v10 = [v9 deviceRole];
      int v11 = *(_DWORD *)(a1 + 40);
      v18[0] = 67109376;
      v18[1] = v10;
      __int16 v19 = 1024;
      int v20 = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Updating device role from %d to %d",  (uint8_t *)v18,  0xEu);
    }

    uint64_t v12 = *(unsigned int *)(a1 + 40);
    __int16 v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) configuration]);
    __int16 v14 = (void *)objc_claimAutoreleasedReturnValue([v13 capabilities]);
    [v14 setDeviceRole:v12];

    BOOL v15 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) conferenceProvider]);
    id v16 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) configuration]);
    uint32_t v17 = (void *)objc_claimAutoreleasedReturnValue([v16 capabilities]);
    [v15 updateCapabilities:v17];
  }

id sub_10000F6BC(uint64_t a1)
{
  return [*(id *)(a1 + 32) setCapturingLocalVideo:1];
}

id sub_10000F740(uint64_t a1)
{
  return [*(id *)(a1 + 32) setCapturingLocalVideo:0];
}

void sub_10000F850(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);
  if ((objc_opt_respondsToSelector(v2, "conferenceFinishedPreparing:") & 1) != 0) {
    [v2 conferenceFinishedPreparing:*(void *)(a1 + 32)];
  }
}

void sub_10000F8F4(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);
  if ((objc_opt_respondsToSelector(v2, "conferenceStarted:") & 1) != 0) {
    [v2 conferenceStarted:*(void *)(a1 + 32)];
  }
}

void sub_10000F9C8(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);
  if ((objc_opt_respondsToSelector(v2, "conference:endedWithReason:error:") & 1) != 0) {
    [v2 conference:*(void *)(a1 + 32) endedWithReason:*(void *)(a1 + 48) error:*(void *)(a1 + 40)];
  }
}

void sub_10000FA70(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);
  if ((objc_opt_respondsToSelector(v2, "connectionClosedForConference:") & 1) != 0) {
    [v2 connectionClosedForConference:*(void *)(a1 + 32)];
  }
}

void sub_10000FB14(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);
  if ((objc_opt_respondsToSelector(v2, "mutedChangedForConference:") & 1) != 0) {
    [v2 mutedChangedForConference:*(void *)(a1 + 32)];
  }
}

void sub_10000FBB8(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);
  if ((objc_opt_respondsToSelector(v2, "sendingAudioChangedForConference:") & 1) != 0) {
    [v2 sendingAudioChangedForConference:*(void *)(a1 + 32)];
  }
}

void sub_10000FC5C(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);
  if ((objc_opt_respondsToSelector(v2, "receivedFirstRemoteFrameForConference:") & 1) != 0) {
    [v2 receivedFirstRemoteFrameForConference:*(void *)(a1 + 32)];
  }
}

void sub_10000FD00(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);
  if ((objc_opt_respondsToSelector(v2, "remoteVideoPausedForConference:") & 1) != 0) {
    [v2 remoteVideoPausedForConference:*(void *)(a1 + 32)];
  }
}

void sub_10000FDA8(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);
  if ((objc_opt_respondsToSelector(v2, "conference:remoteMediaStalled:") & 1) != 0) {
    [v2 conference:*(void *)(a1 + 32) remoteMediaStalled:*(unsigned __int8 *)(a1 + 40)];
  }
}

void sub_10000FE78(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);
  if ((objc_opt_respondsToSelector(v2, "conference:inputFrequencyLevelChangedTo:") & 1) != 0) {
    [v2 conference:*(void *)(a1 + 32) inputFrequencyLevelChangedTo:*(void *)(a1 + 40)];
  }
}

void sub_10000FF44(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);
  if ((objc_opt_respondsToSelector(v2, "conference:outputFrequencyLevelChangedTo:") & 1) != 0) {
    [v2 conference:*(void *)(a1 + 32) outputFrequencyLevelChangedTo:*(void *)(a1 + 40)];
  }
}

void sub_10000FFEC(uint64_t a1)
{
  id v3 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);
  if ((objc_opt_respondsToSelector(v3, "conference:inputLevelChangedTo:") & 1) != 0)
  {
    LODWORD(v2) = *(_DWORD *)(a1 + 40);
    [v3 conference:*(void *)(a1 + 32) inputLevelChangedTo:v2];
  }
}

void sub_100010098(uint64_t a1)
{
  id v3 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);
  if ((objc_opt_respondsToSelector(v3, "conference:outputLevelChangedTo:") & 1) != 0)
  {
    LODWORD(v2) = *(_DWORD *)(a1 + 40);
    [v3 conference:*(void *)(a1 + 32) outputLevelChangedTo:v2];
  }
}

void sub_100010140(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);
  if ((objc_opt_respondsToSelector(v2, "conference:changedBytesOfDataUsed:") & 1) != 0) {
    [v2 conference:*(void *)(a1 + 32) changedBytesOfDataUsed:*(void *)(a1 + 40)];
  }
}

void sub_100010214(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);
  if ((objc_opt_respondsToSelector(v2, "conference:didReceiveData:forCallID:") & 1) != 0) {
    [v2 conference:*(void *)(a1 + 32) didReceiveData:*(void *)(a1 + 40) forCallID:*(void *)(a1 + 48)];
  }
}

void sub_10001038C(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = *(unsigned __int8 *)(a1 + 48);
    uint64_t v5 = *(void *)(a1 + 32);
    uint64_t v6 = *(void *)(a1 + 40);
    int v24 = 138412802;
    uint64_t v25 = v5;
    __int16 v26 = 1024;
    int v27 = v4;
    __int16 v28 = 2112;
    uint64_t v29 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "conference=%@ didStartSession=%d error=%@",  (uint8_t *)&v24,  0x1Cu);
  }

  if (*(_BYTE *)(a1 + 48) && !*(void *)(a1 + 40))
  {
    int v15 = *(_DWORD *)(*(void *)(a1 + 32) + 12LL);
    id v16 = sub_1001704C4();
    uint32_t v17 = (os_log_s *)objc_claimAutoreleasedReturnValue(v16);
    BOOL v18 = os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT);
    if (v15 > 4)
    {
      if (v18)
      {
        LOWORD(v24) = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "[WARN] Session is already past Connected state, not sending delegate started",  (uint8_t *)&v24,  2u);
      }
    }

    else
    {
      if (v18)
      {
        LOWORD(v24) = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "Successfully started session",  (uint8_t *)&v24,  2u);
      }

      [*(id *)(a1 + 32) setState:5];
      uint32_t v17 = (os_log_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _isSendingVideoExpected]);
      if (v17)
      {
        id v19 = sub_1001704C4();
        int v20 = (os_log_s *)objc_claimAutoreleasedReturnValue(v19);
        if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
        {
          unsigned int v21 = -[os_log_s BOOLValue](v17, "BOOLValue");
          int v24 = 67109120;
          LODWORD(v25) = v21 ^ 1;
          _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEFAULT,  "Session is connected, setting videoPaused to expected value: %d",  (uint8_t *)&v24,  8u);
        }

        uint64_t v22 = -[os_log_s BOOLValue](v17, "BOOLValue") ^ 1;
        BOOL v23 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) conferenceProvider]);
        [v23 setVideoPaused:v22];
      }

      [*(id *)(a1 + 32) _sendDelegateStarted];
    }
  }

  else
  {
    id v7 = sub_1001704C4();
    uint64_t v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_1002B1B1C(a1, v8, v9, v10, v11, v12, v13, v14);
    }

    [*(id *)(a1 + 32) _setEndedWithReason:5 error:*(void *)(a1 + 40)];
  }

void sub_100010690(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = *(char **)(a1 + 32);
    uint64_t v5 = *(void *)(a1 + 40);
    *(_DWORD *)buf = 138412546;
    int v27 = v4;
    __int16 v28 = 2112;
    uint64_t v29 = v5;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "didStopError=%@ callMetadata=%@", buf, 0x16u);
  }

  uint64_t v6 = *(void **)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 32);
  id v25 = 0LL;
  id v8 = [v6 _endedReasonForDidStopError:v7 error:&v25];
  id v9 = v25;
  if (v9)
  {
    id v10 = sub_1001704C4();
    uint64_t v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      sub_1002B1B84((uint64_t)v9, v11, v12, v13, v14, v15, v16, v17);
    }
  }

  BOOL v18 = *(void **)(a1 + 40);
  if (v18)
  {
    id v19 = (void *)objc_claimAutoreleasedReturnValue([v18 objectForKeyedSubscript:AVConferenceSessionSentBytes]);
    int v20 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) objectForKeyedSubscript:AVConferenceSessionReceivedBytes]);
    unsigned int v21 = (char *)[v19 integerValue];
    uint64_t v22 = &v21[(void)[v20 integerValue]];
    id v23 = sub_1001704C4();
    int v24 = (os_log_s *)objc_claimAutoreleasedReturnValue(v23);
    if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 134217984;
      int v27 = v22;
      _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEFAULT,  "Sending delegate bytesOfDataUsageChanged: %ld",  buf,  0xCu);
    }

    [*(id *)(a1 + 48) _sendDelegateBytesOfDataUsageChanged:v22];
  }

  [*(id *)(a1 + 48) _stop];
  [*(id *)(a1 + 48) _setEndedWithReason:v8 error:v9];
}

id sub_1000108EC(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "", v5, 2u);
  }

  return [*(id *)(a1 + 32) _sendDelegateConnectionClosed];
}

id sub_1000109F8(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _sendDelegateInputFrequencyLevelChanged:*(void *)(a1 + 40)];
}

id sub_100010AA0(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _sendDelegateOutputFrequencyLevelChanged:*(void *)(a1 + 40)];
}

id sub_100010B28(uint64_t a1, double a2)
{
  LODWORD(a2) = *(_DWORD *)(a1 + 40);
  return _[*(id *)(a1 + 32) _sendDelegateInputLevelChanged:a2];
}

id sub_100010BB4(uint64_t a1, double a2)
{
  LODWORD(a2) = *(_DWORD *)(a1 + 40);
  return _[*(id *)(a1 + 32) _sendDelegateOutputLevelChanged:a2];
}

id sub_100010C64(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = *(unsigned __int8 *)(a1 + 48);
    uint64_t v5 = *(void *)(a1 + 32);
    v7[0] = 67109378;
    v7[1] = v4;
    __int16 v8 = 2112;
    uint64_t v9 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "didPauseAudio=%d error=%@",  (uint8_t *)v7,  0x12u);
  }

  return [*(id *)(a1 + 40) _sendDelegateSendingAudioChanged];
}

void sub_100010DC0(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = *(unsigned __int8 *)(a1 + 48);
    uint64_t v5 = *(void **)(a1 + 32);
    int v16 = 67109378;
    int v17 = v4;
    __int16 v18 = 2112;
    id v19 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "didPauseVideo=%d error=%@",  (uint8_t *)&v16,  0x12u);
  }

  uint64_t v6 = *(int **)(a1 + 40);
  if (v6[3] > 4)
  {
    id v10 = (void *)objc_claimAutoreleasedReturnValue([v6 _isSendingVideoExpected]);
    __int16 v8 = v10;
    if (!*(void *)(a1 + 32) && v10 && *(unsigned __int8 *)(a1 + 48) == [v10 BOOLValue])
    {
      id v11 = sub_1001704C4();
      uint64_t v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        int v13 = *(unsigned __int8 *)(a1 + 48);
        int v16 = 67109378;
        int v17 = v13;
        __int16 v18 = 2112;
        id v19 = v8;
        _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "Video was set to didPauseVideo: %d sendingVideoExpected: %@. Setting sendingVideo to sendingVideoExpected",  (uint8_t *)&v16,  0x12u);
      }

      uint64_t v14 = [v8 BOOLValue] ^ 1;
      uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) conferenceProvider]);
      [v15 setVideoPaused:v14];
    }

    else
    {
      [*(id *)(a1 + 40) setSendingVideoExpected:0];
    }
  }

  else
  {
    id v7 = sub_1001704C4();
    __int16 v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled((os_log_t)v8, OS_LOG_TYPE_DEFAULT))
    {
      int v9 = *(_DWORD *)(*(void *)(a1 + 40) + 12LL);
      int v16 = 67109120;
      int v17 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v8,  OS_LOG_TYPE_DEFAULT,  "Not setting sendingVideoExpected to nil since our state is %d",  (uint8_t *)&v16,  8u);
    }
  }
}

id sub_100011018(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "", v5, 2u);
  }

  [*(id *)(a1 + 32) setHasReceivedFirstRemoteFrame:1];
  return [*(id *)(a1 + 32) _sendDelegateReceivedFirstRemoteFrame];
}

id sub_100011110(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = *(unsigned __int8 *)(a1 + 40);
    v6[0] = 67109120;
    v6[1] = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "remoteVideoPaused=%d", (uint8_t *)v6, 8u);
  }

  [*(id *)(a1 + 32) setRemoteVideoPaused:*(unsigned __int8 *)(a1 + 40)];
  return [*(id *)(a1 + 32) _sendDelegateRemoteVideoPaused];
}

id sub_100011244(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = *(unsigned __int8 *)(a1 + 40);
    v6[0] = 67109120;
    v6[1] = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "remoteMediaStalled=%d", (uint8_t *)v6, 8u);
  }

  return [*(id *)(a1 + 32) _sendDelegateRemoteMediaStalled:*(unsigned __int8 *)(a1 + 40)];
}

id sub_10001138C(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
    sub_1002B1BE8(a1, v3, v4, v5, v6, v7, v8, v9);
  }

  return [*(id *)(a1 + 40) _setEndedWithReason:6 error:0];
}

id sub_100011488(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _sendDelegateReceivedData:*(void *)(a1 + 40) forCallID:*(void *)(a1 + 48)];
}

void sub_1000117B4( void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

  ;
}

void sub_1000117CC( void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

  ;
}

void sub_1000117E4(void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
}

  ;
}

id sub_100012658(CSDMessagingConversationParticipant *self, SEL a2)
{
  v8.receiver = self;
  v8.super_class = (Class)&OBJC_CLASS___CSDMessagingConversationParticipant;
  id v3 = -[CSDMessagingConversationParticipant description](&v8, "description");
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(-[CSDMessagingConversationParticipant dictionaryRepresentation](self, "dictionaryRepresentation"));
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", @"%@ %@", v4, v5));

  return v6;
}

LABEL_42:
  uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", self->_isLightweight));
  [v3 setObject:v22 forKey:@"isLightweight"];

  id v10 = self->_has;
  if ((*(_BYTE *)&v10 & 0x10) == 0)
  {
LABEL_15:
    if ((*(_BYTE *)&v10 & 4) == 0) {
      goto LABEL_16;
    }
    goto LABEL_44;
  }

  PBDataWriterWriteBOOLField(v12, self->_isPersonaAvailable, 8LL);
  uint64_t v7 = self->_has;
  if ((*(_WORD *)&v7 & 0x1000) == 0)
  {
LABEL_14:
    if ((*(_BYTE *)&v7 & 0x10) == 0) {
      goto LABEL_15;
    }
    goto LABEL_44;
  }

  *((_BYTE *)v4 + 93) = self->_isPersonaAvailable;
  v4[26] |= 0x4000u;
  uint64_t v6 = self->_has;
  if ((*(_WORD *)&v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((*(_BYTE *)&v6 & 0x10) == 0) {
      goto LABEL_15;
    }
    goto LABEL_44;
  }

  *((_BYTE *)v6 + 101) = self->_supportsLeaveContext;
  *((_DWORD *)v6 + 26) |= 0x400000u;
  if ((*(_DWORD *)&self->_has & 0x100000) != 0)
  {
LABEL_19:
    *((_BYTE *)v6 + 99) = self->_isUPlusOneScreenSharingAvailable;
    *((_DWORD *)v6 + 26) |= 0x100000u;
  }

  if (*((void *)v5 + 10)) {
    -[CSDMessagingRelayMessage setDummyPayload:](self, "setDummyPayload:");
  }
  uint64_t v15 = *((_DWORD *)v5 + 100);
  if ((v15 & 1) != 0)
  {
    self->_hostCallCreationTime = *((double *)v5 + 1);
    *(_DWORD *)&self->_has |= 1u;
    uint64_t v15 = *((_DWORD *)v5 + 100);
    if ((v15 & 2) == 0)
    {
LABEL_46:
      if ((v15 & 0x80000) == 0) {
        goto LABEL_47;
      }
      goto LABEL_64;
    }
  }

  else if ((v15 & 2) == 0)
  {
    goto LABEL_46;
  }

  self->_messageSendTime = *((double *)v5 + 2);
  *(_DWORD *)&self->_has |= 2u;
  uint64_t v15 = *((_DWORD *)v5 + 100);
  if ((v15 & 0x80000) == 0)
  {
LABEL_47:
    if ((v15 & 0x8000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_65;
  }

  *((_BYTE *)v5 + 120) = self->_supportsAudioAndVideo;
  *((_BYTE *)v5 + 128) |= 4u;
  has = (char)self->_has;
  if ((has & 0x10) == 0)
  {
LABEL_6:
    if ((has & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }

  switch((unint64_t)[v7 state])
  {
    case 0uLL:
      uint64_t v42 = (void *)objc_claimAutoreleasedReturnValue([v7 UUID]);
      uint64_t v43 = -[CSDAbstractFaceTimeConversationProviderDelegate _isWaitingToJoinForConversationUUID:]( v24,  "_isWaitingToJoinForConversationUUID:",  v42);

      if ((v43 & 1) == 0)
      {
        if ([v7 isScreening] && objc_msgSend(v7, "isOneToOneModeEnabled"))
        {
          uint64_t v44 = sub_1001704C4();
          uint64_t v45 = (os_log_s *)objc_claimAutoreleasedReturnValue(v44);
          if (os_log_type_enabled(v45, OS_LOG_TYPE_DEFAULT))
          {
            *(_WORD *)buf = 0;
            _os_log_impl( (void *)&_mh_execute_header,  v45,  OS_LOG_TYPE_DEFAULT,  "Screening enabled, already ends the session, no need to cleanup conversation",  buf,  2u);
          }
        }

        else
        {
          uint64_t v45 = (os_log_s *)objc_claimAutoreleasedReturnValue([v7 failureContext]);
          if (!v45)
          {
            uint64_t v45 = objc_alloc_init(&OBJC_CLASS___CXCallFailureContext);
            -[os_log_s setFailureReason:](v45, "setFailureReason:", 0LL);
            -[os_log_s setProviderEndedReason:](v45, "setProviderEndedReason:", 504LL);
          }

          v62 = (void *)objc_claimAutoreleasedReturnValue([v7 UUID]);
          -[CSDFaceTimeConversationProviderDelegate cleanUpConversationIfNecessaryForConversationUUID:failureContext:]( v24,  "cleanUpConversationIfNecessaryForConversationUUID:failureContext:",  v62,  v45);
        }
      }

      if (v41)
      {
        if (!-[CXCallUpdate hasVideo](v90, "hasVideo")) {
          goto LABEL_71;
        }
        v63 = (void *)objc_claimAutoreleasedReturnValue(-[CXCallUpdate remoteParticipantHandles](v90, "remoteParticipantHandles"));
        v64 = [v63 count];

        -[CXCallUpdate setSendingVideo:](v90, "setSendingVideo:", 0LL);
        v65 = sub_1001704C4();
        v52 = (os_log_s *)objc_claimAutoreleasedReturnValue(v65);
        if (os_log_type_enabled(v52, OS_LOG_TYPE_DEFAULT))
        {
          v66 = -[CXCallUpdate isSendingVideo](v90, "isSendingVideo");
          v67 = @"NO";
          if (v66) {
            v67 = @"YES";
          }
          *(_DWORD *)buf = 138412290;
          v104 = v67;
          _os_log_impl( (void *)&_mh_execute_header,  v52,  OS_LOG_TYPE_DEFAULT,  "Setting sendingVideo=%@ for conversationChanged",  buf,  0xCu);
        }

        goto LABEL_56;
      }

      goto LABEL_75;
    case 1uLL:
      -[CSDFaceTimeConversationProviderDelegate startOutgoingOneToOneTimeoutIfNecessary:]( v24,  "startOutgoingOneToOneTimeoutIfNecessary:",  v41);
      -[CSDAbstractFaceTimeConversationProviderDelegate fullfillPendingJoinActionsForCallUUIDIfNecessary:]( v24,  "fullfillPendingJoinActionsForCallUUIDIfNecessary:",  v41);
      if (v41) {
        goto LABEL_71;
      }
      goto LABEL_75;
    case 2uLL:
      if (!v41)
      {
        v61 = sub_1001704C4();
        v60 = (os_log_s *)objc_claimAutoreleasedReturnValue(v61);
        if (os_log_type_enabled(v60, OS_LOG_TYPE_ERROR)) {
          sub_1002B7970();
        }
        goto LABEL_74;
      }

      if ([v7 isLocallyCreated])
      {
        if (([v7 isOneToOneModeEnabled] & 1) == 0)
        {
          -[CXCallUpdate setRequiresInCallSounds:](v90, "setRequiresInCallSounds:", 0LL);
          uint64_t v46 = (void *)objc_claimAutoreleasedReturnValue(-[CSDAbstractFaceTimeConversationProviderDelegate provider](v24, "provider"));
          uint64_t v47 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
          [v46 reportOutgoingCallWithUUID:v41 startedConnectingAtDate:v47];
        }

        uint64_t v48 = (void *)objc_claimAutoreleasedReturnValue(-[CSDAbstractFaceTimeConversationProviderDelegate provider](v24, "provider"));
        id v49 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
        [v48 reportOutgoingCallWithUUID:v41 sentInvitationAtDate:v49];
      }

      v50 = (void *)objc_claimAutoreleasedReturnValue(+[TUCallCenter sharedInstance](&OBJC_CLASS___TUCallCenter, "sharedInstance"));
      v51 = (void *)objc_claimAutoreleasedReturnValue(-[__CFString UUIDString](v41, "UUIDString"));
      v52 = (os_log_s *)objc_claimAutoreleasedReturnValue([v50 callWithCallUUID:v51]);

      -[os_log_s setStartAsOneToOneMode:](v52, "setStartAsOneToOneMode:", [v7 isOneToOneModeEnabled]);
      -[CSDAbstractFaceTimeConversationProviderDelegate fullfillPendingJoinActionsForCallUUIDIfNecessary:]( v24,  "fullfillPendingJoinActionsForCallUUIDIfNecessary:",  v41);
LABEL_56:

      goto LABEL_71;
    case 3uLL:
      if (!v41)
      {
        v68 = sub_1001704C4();
        v69 = (os_log_s *)objc_claimAutoreleasedReturnValue(v68);
        if (os_log_type_enabled(v69, OS_LOG_TYPE_ERROR)) {
          sub_1002B7910();
        }

        v60 = (os_log_s *)objc_claimAutoreleasedReturnValue( -[CSDAbstractFaceTimeConversationProviderDelegate conversationManager]( v24,  "conversationManager"));
        v70 = (void *)objc_claimAutoreleasedReturnValue([v7 UUID]);
        -[os_log_s leaveConversationWithUUID:](v60, "leaveConversationWithUUID:", v70);

LABEL_74:
        goto LABEL_75;
      }

      if ([v7 avMode])
      {
        if ([v7 isOneToOneModeEnabled])
        {
          v97 = 0u;
          v98 = 0u;
          v95 = 0u;
          v96 = 0u;
          v53 = (void *)objc_claimAutoreleasedReturnValue([v7 activeRemoteParticipants]);
          v54 = [v53 countByEnumeratingWithState:&v95 objects:v106 count:16];
          if (v54)
          {
            v55 = v54;
            v56 = *(void *)v96;
            while (2)
            {
              for (j = 0LL; j != v55; j = (char *)j + 1)
              {
                if (*(void *)v96 != v56) {
                  objc_enumerationMutation(v53);
                }
                if ([*(id *)(*((void *)&v95 + 1) + 8 * (void)j) audioVideoMode])
                {

                  v53 = (void *)objc_claimAutoreleasedReturnValue( -[CSDAbstractFaceTimeConversationProviderDelegate faceTimeDemuxerDelegate]( v24,  "faceTimeDemuxerDelegate"));
                  v74 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
                  [v53 providerDelegate:v24 callWithUUID:v41 connectedAtDate:v74];
                  BOOL v34 = v90;
                  goto LABEL_98;
                }
              }

              v55 = [v53 countByEnumeratingWithState:&v95 objects:v106 count:16];
              if (v55) {
                continue;
              }
              break;
            }

            BOOL v34 = v90;
          }
        }

        else
        {
          v71 = (void *)objc_claimAutoreleasedReturnValue(-[CSDAbstractFaceTimeConversationProviderDelegate featureFlags](v24, "featureFlags"));
          v72 = [v71 lagunaEnabled];

          if (v72)
          {
            v73 = (void *)objc_claimAutoreleasedReturnValue(-[CSDAbstractFaceTimeConversationProviderDelegate provider](v24, "provider"));
            [v73 reportNewOutgoingCallWithUUID:v41 update:v90];
          }

          v53 = (void *)objc_claimAutoreleasedReturnValue(-[CSDAbstractFaceTimeConversationProviderDelegate provider](v24, "provider"));
          v74 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
          [v53 reportOutgoingCallWithUUID:v41 connectedAtDate:v74];
LABEL_98:
        }
      }

      v75 = (void *)objc_claimAutoreleasedReturnValue(-[CSDAbstractFaceTimeConversationProviderDelegate provider](v24, "provider"));
      v77 = objc_msgSend( v75,  "pendingCallActionsOfClass:withCallUUID:",  objc_opt_class(CXAnswerCallAction, v76),  v41);
      v78 = (void *)objc_claimAutoreleasedReturnValue(v77);

      v93 = 0u;
      v94 = 0u;
      v91 = 0u;
      v92 = 0u;
      v79 = v78;
      v80 = [v79 countByEnumeratingWithState:&v91 objects:v105 count:16];
      if (v80)
      {
        v81 = v80;
        v82 = *(void *)v92;
        do
        {
          for (k = 0LL; k != v81; k = (char *)k + 1)
          {
            if (*(void *)v92 != v82) {
              objc_enumerationMutation(v79);
            }
            [*(id *)(*((void *)&v91 + 1) + 8 * (void)k) fulfill];
          }

          v81 = [v79 countByEnumeratingWithState:&v91 objects:v105 count:16];
        }

        while (v81);
      }

      BOOL v34 = v90;
      -[CXCallUpdate setSharingScreen:](v90, "setSharingScreen:", [v7 isScreenEnabled]);
      if (-[CXCallUpdate mixesVoiceWithMedia](v90, "mixesVoiceWithMedia"))
      {
        v84 = (void *)objc_claimAutoreleasedReturnValue(+[TUCallCenter sharedInstance](&OBJC_CLASS___TUCallCenter, "sharedInstance"));
        v85 = (void *)objc_claimAutoreleasedReturnValue(-[__CFString UUIDString](v41, "UUIDString"));
        v86 = (void *)objc_claimAutoreleasedReturnValue([v84 callWithCallUUID:v85]);

        v87 = (void *)objc_claimAutoreleasedReturnValue([v86 sourceIdentifier]);
        -[CXCallUpdate setIgnoresBluetoothDeviceUID:](v90, "setIgnoresBluetoothDeviceUID:", v87 != 0LL);

        v41 = v89;
      }

      if ([v7 avMode]) {
        -[CSDAbstractFaceTimeConversationProviderDelegate fullfillPendingJoinActionsForCallUUIDIfNecessary:]( v24,  "fullfillPendingJoinActionsForCallUUIDIfNecessary:",  v41);
      }

      if (v41)
      {
LABEL_71:
        v58 = sub_1001704C4();
        v59 = (os_log_s *)objc_claimAutoreleasedReturnValue(v58);
        if (os_log_type_enabled(v59, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412290;
          v104 = v41;
          _os_log_impl( (void *)&_mh_execute_header,  v59,  OS_LOG_TYPE_DEFAULT,  "converstaionChanged: report call with uuid: %@",  buf,  0xCu);
        }

        v60 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[CSDAbstractFaceTimeConversationProviderDelegate provider](v24, "provider"));
        -[os_log_s reportCallWithUUID:updated:](v60, "reportCallWithUUID:updated:", v41, v34);
        goto LABEL_74;
      }

  if (objc_msgSend(v10, "state", *(_OWORD *)v106) == (id)2)
  {
    uint64_t v47 = (void *)objc_claimAutoreleasedReturnValue(+[CSDReportingController sharedInstance](&OBJC_CLASS___CSDReportingController, "sharedInstance"));
    [v47 reportProviderFailedWithAction:v10 forCall:v11];
  }
}

  sub_1001B0FF8();
}

  swift_release(a1);
  if (!v123[2])
  {
    swift_bridgeObjectRelease(v123);
    v92 = sub_1001705A4();
    v93 = static os_log_type_t.default.getter(v92);
    os_log(_:dso:log:type:_:)( "empty dictionaryInfo, return",  28LL,  2LL,  &_mh_execute_header,  v92,  v93,  _swiftEmptyArrayStorage);

    return (uint64_t)v124;
  }

  v82 = [a2 conversationID];
  if (v82)
  {
    v83 = v82;
    v84 = v106;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v82);

    v85 = v105;
    v86 = *(void (**)(uint64_t, char *, uint64_t))(v105 + 32);
    v87 = v107;
    v88 = v84;
    v89 = v108;
    v86(v107, v88, v108);
    sub_1001A9670(v87, 0LL, 1LL, v89);
    if (sub_1001AB0AC(v87, 1LL, v89) != 1)
    {
      v90 = v104;
      v86((uint64_t)v104, (char *)v87, v89);
      v122 = (void *)v89;
      v91 = sub_1001B236C(&v121);
      (*(void (**)(void *, char *, uint64_t))(v85 + 16))(v91, v90, v89);
      sub_1001FC0F0((uint64_t)&v121, 4475203LL, 0xE300000000000000LL);
      (*(void (**)(char *, uint64_t))(v85 + 8))(v90, v89);
      goto LABEL_49;
    }
  }

  else
  {
    v87 = v107;
    sub_1001A9670(v107, 1LL, 1LL, v108);
  }

  sub_1001C6CE4(v87, (uint64_t *)&unk_10044A400);
LABEL_49:
  if (!kRTCReportingMessageParametersCategory) {
    goto LABEL_62;
  }
  v94 = static String._unconditionallyBridgeFromObjectiveC(_:)(kRTCReportingMessageParametersCategory);
  v122 = &type metadata for Int;
  *(void *)&v121 = 7LL;
  sub_1001FC0F0((uint64_t)&v121, v94, v95);
  if (kRTCReportingMessageParametersType)
  {
    v96 = static String._unconditionallyBridgeFromObjectiveC(_:)(kRTCReportingMessageParametersType);
    v122 = &type metadata for Int;
    *(void *)&v121 = 1LL;
    sub_1001FC0F0((uint64_t)&v121, v96, v97);
    if (!kRTCReportingMessageParametersPayload) {
      goto LABEL_64;
    }
    v98 = static String._unconditionallyBridgeFromObjectiveC(_:)(kRTCReportingMessageParametersPayload);
    v100 = v99;
    v101 = v123;
    v122 = (void *)sub_1001AFF14(&qword_100447B60);
    *(void *)&v121 = v101;
    sub_1001FC0F0((uint64_t)&v121, v98, v100);
    return (uint64_t)v124;
  }

      uint64_t v46 = __clz(__rbit64(v44)) + (v45 << 6);
      uint64_t v35 = *(unsigned int *)(v29 + 36);
      if (v46 != v33)
      {
        __int16 v33 = v46;
        goto LABEL_44;
      }

    sub_1001B03FC((uint64_t)&v90, (uint64_t)&v84);
    int v39 = swift_dynamicCast(&v83, &v84, v77, &type metadata for Int, 0LL);
    if ((_DWORD)v39)
    {
      uint64_t v47 = sub_100201938( v39,  v40,  v41,  v42,  v43,  v44,  v45,  v46,  v71,  v72,  v73,  v74,  v75,  (uint64_t)v76,  (uint64_t)v77,  v78,  (uint64_t)v79,  v80,  *((uint64_t *)&v80 + 1),  v81,  (uint64_t)v82,  v83);
      if (!v48)
      {
        id v49 = &type metadata for Int;
LABEL_50:
        v89 = (uint64_t)v49;
        *(void *)&v87 = isUniquelyReferenced_nonNull_native;
        goto LABEL_51;
      }
    }

    else
    {
      v50 = swift_dynamicCast(&v83, &v84, (char *)&type metadata for Any + 8, &type metadata for UInt, 0LL);
      if (!(_DWORD)v50)
      {
        sub_10020194C( v50,  v51,  v52,  v53,  v54,  v55,  v56,  v57,  v71,  v72,  v73,  v74,  v75,  (uint64_t)v76,  (uint64_t)v77,  v78,  (uint64_t)v79,  v80,  *((uint64_t *)&v80 + 1),  v81,  (uint64_t)v82,  v83,  v84,  *((uint64_t *)&v84 + 1),  v85,  v86,  v87,  *((uint64_t *)&v87 + 1),  v88,  v89,  v90);
        goto LABEL_51;
      }

      uint64_t v47 = sub_100201938( v50,  v51,  v52,  v53,  v54,  v55,  v56,  v57,  v71,  v72,  v73,  v74,  v75,  (uint64_t)v76,  (uint64_t)v77,  v78,  (uint64_t)v79,  v80,  *((uint64_t *)&v80 + 1),  v81,  (uint64_t)v82,  v83);
      if (!v48)
      {
        id v49 = &type metadata for UInt;
        goto LABEL_50;
      }
    }

    v82 = &type metadata for String;
    *(void *)&v80 = v47;
    *((void *)&v80 + 1) = v48;
    sub_1001B03EC(&v80, &v87);
LABEL_51:
    sub_1001B0438(&v84);
LABEL_52:
    sub_1001B03FC((uint64_t)&v87, (uint64_t)&v84);
    isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native(v12);
    *(void *)&v80 = v12;
    v58 = sub_100201920();
    v60 = v12[2];
    v61 = (v59 & 1) == 0;
    uint64_t v5 = v60 + v61;
    if (__OFADD__(v60, v61)) {
      break;
    }
    v62 = v58;
    v63 = v59;
    sub_1001AFF14(&qword_100447BC0);
    if (_NativeDictionary.ensureUnique(isUnique:capacity:)((Swift::Bool)isUniquelyReferenced_nonNull_native, v5))
    {
      v64 = sub_100201920();
      if ((v63 & 1) != (v65 & 1)) {
        goto LABEL_67;
      }
      v62 = v64;
    }

    uint64_t v12 = (void *)v80;
    if ((v63 & 1) != 0)
    {
      isUniquelyReferenced_nonNull_native = (void *)(*(void *)(v80 + 56) + 32 * v62);
      sub_1001B0438(isUniquelyReferenced_nonNull_native);
      sub_1001B03EC(&v84, isUniquelyReferenced_nonNull_native);
    }

    else
    {
      *(void *)(v80 + 8 * (v62 >> 6) + 64) |= 1LL << v62;
      v66 = (void *)(v12[6] + 16 * v62);
      *v66 = v21;
      v66[1] = v20;
      sub_1001B03EC(&v84, (_OWORD *)(v12[7] + 32 * v62));
      v67 = v12[2];
      v68 = __OFADD__(v67, 1LL);
      v69 = v67 + 1;
      if (v68) {
        goto LABEL_64;
      }
      v12[2] = v69;
      sub_1001C7478();
    }

    sub_1001E43E0();
    swift_bridgeObjectRelease(0x8000000000000000LL);
    sub_1001B0438(&v87);
    sub_1001B0438(&v90);
    if (v10) {
      goto LABEL_4;
    }
LABEL_6:
    int v17 = v11 + 1;
    if (__OFADD__(v11, 1LL)) {
      goto LABEL_65;
    }
    if (v17 < v75)
    {
      __int16 v18 = *(void *)(v73 + 8 * v17);
      if (v18) {
        goto LABEL_9;
      }
      id v19 = v11 + 2;
      ++v11;
      if (v17 + 1 < v75)
      {
        __int16 v18 = *(void *)(v73 + 8 * v19);
        if (v18) {
          goto LABEL_12;
        }
        id v11 = v17 + 1;
        if (v17 + 2 < v75)
        {
          __int16 v18 = *(void *)(v73 + 8 * (v17 + 2));
          if (v18)
          {
            v17 += 2LL;
            goto LABEL_9;
          }

          id v19 = v17 + 3;
          id v11 = v17 + 2;
          if (v17 + 3 < v75)
          {
            __int16 v18 = *(void *)(v73 + 8 * v19);
            if (!v18)
            {
              while (1)
              {
                int v17 = v19 + 1;
                if (__OFADD__(v19, 1LL)) {
                  goto LABEL_66;
                }
                if (v17 >= v75)
                {
                  id v11 = v71;
                  goto LABEL_23;
                }

                __int16 v18 = *(void *)(v73 + 8 * v17);
                ++v19;
                if (v18) {
                  goto LABEL_9;
                }
              }
            }

  __n128 result = swift_release(v5);
  *id v3 = v8;
  return result;
}

  swift_beginAccess(v4 + 48, v138, 0LL, 0LL);
  v55 = *(void *)(v4 + 48);
  v56 = sub_1001AFF14((uint64_t *)&unk_1004475C0);
  v57 = swift_allocObject(v56, 40LL, 7LL);
  *(_OWORD *)(v57 + 16) = xmmword_10037B200;
  v58 = *(void *)(v4 + 40);
  *(void *)(v57 + 32) = v58;
  v151[0] = v57;
  specialized Array._endMutation()(v57, v59, v60, v61, v62, v63, v64, v65);
  v66 = v151[0];
  v151[0] = _swiftEmptyArrayStorage;
  if ((unint64_t)v66 >> 62)
  {
    if (v66 < 0) {
      v126 = v66;
    }
    else {
      v126 = v66 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v55);
    swift_retain(v58);
    swift_bridgeObjectRetain(v66);
    v67 = _CocoaArrayWrapper.endIndex.getter(v126);
    swift_bridgeObjectRelease(v66);
  }

  else
  {
    v67 = *(void *)((v66 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    swift_bridgeObjectRetain(v55);
    swift_retain(v58);
  }

  v68 = *(void *)(v55 + 16);
  if (__OFADD__(v67, v68))
  {
    __break(1u);
LABEL_99:
    sub_1001E7E10(v67);
    v86 = v127;
    __n128 result = swift_bridgeObjectRelease(v67);
    goto LABEL_48;
  }

  v69 = sub_10029EB50(v67 + v68, 0);
  specialized Array._endMutation()(v69, v70, v71, v72, v73, v74, v75, v76);
  v77 = swift_bridgeObjectRetain(v55);
  sub_10029030C(v77);
  v78 = swift_bridgeObjectRetain(v66);
  sub_1002901F8(v78, v79, v80, v81, v82, v83, v84, v85, v129);
  v67 = v151[0];
  swift_bridgeObjectRelease(v66);
  __n128 result = swift_bridgeObjectRelease(v55);
  if (v67 < 0 || (v67 & 0x4000000000000000LL) != 0) {
    goto LABEL_99;
  }
  v86 = v67 & 0xFFFFFFFFFFFFFF8LL;
LABEL_48:
  if (v86 < 0 || (v86 & 0x4000000000000000LL) != 0)
  {
    v128 = swift_bridgeObjectRetain(v86);
    v87 = _CocoaArrayWrapper.endIndex.getter(v128);
    __n128 result = swift_release(v86);
    if (v87) {
      goto LABEL_51;
    }
    goto LABEL_74;
  }

  v87 = *(void *)(v86 + 16);
  if (!v87)
  {
LABEL_74:
    swift_release(v86);
    sub_10020E840((uint64_t)v143);
    v54 = v10;
LABEL_75:
    swift_release(v54);
    return swift_release(v9);
  }

              sub_1001B4B8C(v1);
              return;
            }
          }
        }
      }
    }

              sub_1001B4B8C(v1);
              return;
            }
          }
        }
      }
    }

          v112 = *v104;
          v113 = (char *)&v89[OBJC_IVAR____TtC13callservicesd13AudioResolver_lastPlayedSoundType];
          v114 = sub_10027D588( *(void *)&v89[OBJC_IVAR____TtC13callservicesd13AudioResolver_lastPlayedSoundType],  v89[OBJC_IVAR____TtC13callservicesd13AudioResolver_lastPlayedSoundType + 8],  *v104);
          if ((v114 & 1) != 0)
          {
            v115 = (uint64_t)&v89[OBJC_IVAR____TtC13callservicesd13AudioResolver_lastPlayedSoundDate];
            swift_beginAccess(&v89[OBJC_IVAR____TtC13callservicesd13AudioResolver_lastPlayedSoundDate], &v212, 0LL, 0LL);
            v116 = v205;
            if (sub_1001AB0AC(v115, 1LL, v205)
              || (v117 = v197,
                  v118 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v199 + 16))(v197, v115, v116),
                  v119 = Date.timeIntervalSinceNow.getter(v118),
                  v114 = (*(uint64_t (**)(uint64_t, uint64_t))(v199 + 8))(v117, v116),
                  fabs(v119) < 2.0))
            {
              v120 = v207;
              sub_10020E8B0(v207, type metadata accessor for SoundDescriptorAction);
              sub_1001A9670(v120, 1LL, 2LL, v194);
              if (qword_100446940 != -1) {
                swift_once(&qword_100446940, sub_100258A50);
              }
              v121 = sub_1001B0E98();
              v122 = (os_log_s *)sub_1001B0D98(v121, (uint64_t)qword_1004541E0);
              v123 = v200;
              sub_1001DBD08((uint64_t)v104, (uint64_t)v200, type metadata accessor for SoundDescriptor);
              Logger.logObject.getter(v124, v125, v126);
              v127 = sub_1001B105C();
              if (os_log_type_enabled(v122, v127))
              {
                v128 = (uint8_t *)sub_1001B0E78(12LL);
                v208 = sub_1001B0E78(32LL);
                v213 = v208;
                *(_DWORD *)v128 = 136315138;
                v215 = *v123;
                type metadata accessor for TUCallSoundPlayerSoundType(0LL);
                v130 = String.init<A>(reflecting:)(&v215, v129);
                v132 = v131;
                v215 = sub_1001D7CF0(v130, v131, &v213);
                v82 = v209;
                UnsafeMutableRawBufferPointer.copyMemory(from:)(&v215, &v216, v128 + 4, v128 + 12);
                swift_bridgeObjectRelease(v132);
                sub_10020E8B0((uint64_t)v123, type metadata accessor for SoundDescriptor);
                _os_log_impl( (void *)&_mh_execute_header,  v122,  v127,  "Not playing sound %s because the same sound was played less than 2s ago",  v128,  0xCu);
                v133 = v208;
                swift_arrayDestroy(v208, 1LL);
                sub_1001B0E60(v133);
                sub_1001B0E60((uint64_t)v128);

                v103 = v206;
                v102 = type metadata accessor for SoundDescriptor;
                v89 = v196;
              }

              else
              {

                sub_1002727F4((uint64_t)v123);
                v103 = (uint64_t)v104;
                v102 = type metadata accessor for SoundDescriptor;
              }

              goto LABEL_35;
            }

            v112 = *v104;
          }

          *(void *)v113 = v112;
          v113[8] = 0;
          v137 = v201;
          Date.init()(v114);

          sub_10020E8B0((uint64_t)v104, type metadata accessor for SoundDescriptor);
          sub_1001A9670(v137, 0LL, 1LL, v205);
          v138 = (uint64_t)&v89[OBJC_IVAR____TtC13callservicesd13AudioResolver_lastPlayedSoundDate];
          swift_beginAccess(&v89[OBJC_IVAR____TtC13callservicesd13AudioResolver_lastPlayedSoundDate], &v213, 33LL, 0LL);
          sub_10027DA3C(v137, v138, &qword_100447EA0);
          v84 = swift_endAccess(&v213);
          goto LABEL_55;
        }

LABEL_43:
  id v23 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_sharePlayProtocolVersion));
  [v3 setObject:v23 forKey:@"sharePlayProtocolVersion"];

  id v10 = self->_has;
  if ((*(_BYTE *)&v10 & 4) == 0)
  {
LABEL_16:
    if ((*(_WORD *)&v10 & 0x400) == 0) {
      goto LABEL_17;
    }
    goto LABEL_45;
  }

  PBDataWriterWriteBOOLField(v12, self->_isLightweight, 9LL);
  uint64_t v7 = self->_has;
  if ((*(_BYTE *)&v7 & 0x10) == 0)
  {
LABEL_15:
    if ((*(_BYTE *)&v7 & 4) == 0) {
      goto LABEL_16;
    }
    goto LABEL_45;
  }

  *((_BYTE *)v4 + 91) = self->_isLightweight;
  v4[26] |= 0x1000u;
  uint64_t v6 = self->_has;
  if ((*(_BYTE *)&v6 & 0x10) == 0)
  {
LABEL_15:
    if ((*(_BYTE *)&v6 & 4) == 0) {
      goto LABEL_16;
    }
    goto LABEL_45;
  }

  if (*((void *)v5 + 7))
  {
    -[CSDMessagingConversationParticipant setPersonaHandshakeData:](self, "setPersonaHandshakeData:");
    uint64_t v5 = v14;
  }

  int v13 = *((_DWORD *)v5 + 26);
  if ((v13 & 0x20000) != 0)
  {
    self->_isSpatialPersonaEnabled = *((_BYTE *)v5 + 96);
    *(_DWORD *)&self->_has |= 0x20000u;
    int v13 = *((_DWORD *)v5 + 26);
    if ((v13 & 0x80000) == 0)
    {
LABEL_47:
      if ((v13 & 0x100) == 0) {
        goto LABEL_48;
      }
      goto LABEL_62;
    }
  }

  else if ((v13 & 0x80000) == 0)
  {
    goto LABEL_47;
  }

  self->_isUPlusOneAVLessAvailable = *((_BYTE *)v5 + 98);
  *(_DWORD *)&self->_has |= 0x80000u;
  int v13 = *((_DWORD *)v5 + 26);
  if ((v13 & 0x100) == 0)
  {
LABEL_48:
    if ((v13 & 0x80) == 0) {
      goto LABEL_49;
    }
    goto LABEL_63;
  }

  *((_BYTE *)v5 + 122) = self->_supportsEmergency;
  *((_BYTE *)v5 + 128) |= 0x10u;
  if ((*(_BYTE *)&self->_has & 0x40) != 0)
  {
LABEL_7:
    *((_BYTE *)v5 + 124) = self->_supportsVoicemail;
    *((_BYTE *)v5 + 128) |= 0x40u;
  }

            v54 = (void *)objc_claimAutoreleasedReturnValue([a1[6] linkManager]);
            v62[0] = _NSConcreteStackBlock;
            v62[1] = 3221225472LL;
            v62[2] = sub_1000DB974;
            v62[3] = &unk_1003D9C18;
            v55 = a1[5];
            v62[4] = a1[6];
            uint64_t v14 = v14;
            v63 = v14;
            v66 = v7;
            v64 = a1[5];
            v65 = v9;
            [v54 storeReceivedLink:v65 fromHandle:v55 isUpdate:v6 == 26 completionHandler:v62];

            goto LABEL_44;
          }
        }

        goto LABEL_43;
      }
    }
  }

  int v20 = sub_1001704C4();
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(v20);
  if (os_log_type_enabled((os_log_t)v9, OS_LOG_TYPE_DEFAULT))
  {
    unsigned int v21 = [a1[4] type];
    uint64_t v22 = [a1[4] hasLink];
    id v23 = (void *)objc_claimAutoreleasedReturnValue([a1[4] link]);
    int v24 = (void *)objc_claimAutoreleasedReturnValue([v23 groupUUID]);
    id v25 = (void *)objc_claimAutoreleasedReturnValue([a1[4] conversationGroupUUID]);
    *(_DWORD *)buf = 67109890;
    *(_DWORD *)v73 = v21;
    *(_WORD *)&v73[4] = 1024;
    *(_DWORD *)&v73[6] = v22;
    *(_WORD *)v74 = 2112;
    *(void *)&v74[2] = v24;
    LOWORD(v75[0]) = 2112;
    *(void *)((char *)v75 + 2) = v25;
    _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v9,  OS_LOG_TYPE_DEFAULT,  "Not sufficiently formed link created/changed message, type: %d hasLink: %d linkGroupUUID: %@ conversationGroupUUID: %@",  buf,  0x22u);
  }
}

    id v19 = (v25 - 1) & v25;
    id v23 = __clz(__rbit64(v25)) + (v21 << 6);
    goto LABEL_44;
  }

  return swift_release(v15);
}

        v86 = (v94 - 1) & v94;
        v87 = __clz(__rbit64(v94)) + (v88 << 6);
      }

      v92 = *(id *)(*(void *)(v73 + 48) + 8 * v87);
      if (!v92) {
        goto LABEL_47;
      }
      while (1)
      {
        v96 = [v70 handleWithTUHandle:v92];
        sub_10028EA98(v106, "addInvitedHandles:");

        v80 = v88;
        v81 = v86;
        if ((v73 & 0x8000000000000000LL) == 0) {
          break;
        }
LABEL_27:
        v89 = __CocoaSet.Iterator.next()(v72);
        if (v89)
        {
          v90 = v89;
          v107 = v89;
          v91 = sub_1001B4B94(0LL, &qword_10044A410, &OBJC_CLASS___TUHandle_ptr);
          swift_unknownObjectRetain(v90);
          swift_dynamicCast(v108, &v107, v103, v91, 7LL);
          v92 = (id)v108[0];
          swift_unknownObjectRelease(v90);
          v88 = v80;
          v86 = v81;
          if (v92) {
            continue;
          }
        }

        goto LABEL_47;
      }
    }
  }

  sub_10028E44C(v5, (SEL *)&selRef_name);
  if (v97)
  {
    v98 = String._bridgeToObjectiveC()();
    sub_1001AA9C8();
  }

  else
  {
    v98 = 0LL;
  }

  v99 = v106;
  sub_10028EA98(v106, "setLinkName:");

  sub_1001B0FF8();
}

  swift_release(v79);
  v97 = [(id)objc_opt_self(TUMomentsController) isFaceTimePhotosXPCServiceEnabled];
  if ((v97 & 1) != 0)
  {
    v100 = *(void **)(v124 + OBJC_IVAR___CSDUserNotificationController_clientManager);
    if (v100)
    {
      v101 = v100;
      [v101 setRequiredConnectionCapability:@"modify-usernotifications"];
      v102 =  [(id)objc_opt_self(TUUserNotificationProviderXPCClient) userNotificationProviderServerXPCInterface];
      [v101 setExportedInterface:v102];

      [v101 setExportedObject:v124];
      v103 = String._bridgeToObjectiveC()();
      [v101 startListeningOnMachServiceWithName:v103];

      v104 = v101;
      v107 = (os_log_s *)Logger.logObject.getter(v104, v105, v106);
      v108 = static os_log_type_t.default.getter(v107);
      if (os_log_type_enabled(v107, v108))
      {
        v109 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        v110 = (void *)swift_slowAlloc(8LL, -1LL);
        *(_DWORD *)v109 = 138412290;
        v127 = v104;
        v104 = v104;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v127, &v128, v109 + 4, v109 + 12);
        *v110 = v100;

        _os_log_impl( (void *)&_mh_execute_header,  v107,  v108,  "Started broadcasting User notifications mach service with %@",  v109,  0xCu);
        sub_1001AFF14(&qword_100447E80);
        swift_arrayDestroy(v110, 1LL);
        swift_slowDealloc(v110, -1LL, -1LL);
        swift_slowDealloc(v109, -1LL, -1LL);
      }

      else
      {

        v107 = (os_log_s *)v104;
      }
    }
  }

  v111 = (os_log_s *)Logger.logObject.getter(v97, v98, v99);
  v112 = static os_log_type_t.default.getter(v111);
  if (os_log_type_enabled(v111, v112))
  {
    v113 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)v113 = 0;
    _os_log_impl((void *)&_mh_execute_header, v111, v112, "Loaded user notification controller", v113, 2u);
    swift_slowDealloc(v113, -1LL, -1LL);
  }
}

LABEL_44:
  int v24 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", self->_options));
  [v3 setObject:v24 forKey:@"options"];

  id v10 = self->_has;
  if ((*(_WORD *)&v10 & 0x400) == 0)
  {
LABEL_17:
    if ((*(_WORD *)&v10 & 0x200) == 0) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }

  PBDataWriterWriteUint32Field(v12, self->_sharePlayProtocolVersion, 10LL);
  uint64_t v7 = self->_has;
  if ((*(_BYTE *)&v7 & 4) == 0)
  {
LABEL_16:
    if ((*(_WORD *)&v7 & 0x400) == 0) {
      goto LABEL_17;
    }
    goto LABEL_46;
  }

  v4[17] = self->_sharePlayProtocolVersion;
  v4[26] |= 0x10u;
  uint64_t v6 = self->_has;
  if ((*(_BYTE *)&v6 & 4) == 0)
  {
LABEL_16:
    if ((*(_WORD *)&v6 & 0x400) == 0) {
      goto LABEL_17;
    }
    goto LABEL_46;
  }

  dummyPayload = self->_dummyPayload;
  if (dummyPayload) {
    [v3 setObject:dummyPayload forKey:@"dummyPayload"];
  }
  uint64_t v29 = self->_has;
  if ((*(_BYTE *)&v29 & 1) != 0)
  {
    v74 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  self->_hostCallCreationTime));
    [v3 setObject:v74 forKey:@"hostCallCreationTime"];

    uint64_t v29 = self->_has;
    if ((*(_BYTE *)&v29 & 2) == 0)
    {
LABEL_48:
      if ((*(_DWORD *)&v29 & 0x80000) == 0) {
        goto LABEL_49;
      }
      goto LABEL_113;
    }
  }

  else if ((*(_BYTE *)&v29 & 2) == 0)
  {
    goto LABEL_48;
  }

  v75 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", self->_messageSendTime));
  [v3 setObject:v75 forKey:@"messageSendTime"];

  uint64_t v29 = self->_has;
  if ((*(_DWORD *)&v29 & 0x80000) == 0)
  {
LABEL_49:
    if ((*(_WORD *)&v29 & 0x8000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_114;
  }

  if (self->_contactIdentifier)
  {
    objc_msgSend(v55, "setContactIdentifier:");
    id v11 = v55;
  }

  if (self->_protoCallCapabilitiesState)
  {
    objc_msgSend(v55, "setProtoCallCapabilitiesState:");
    id v11 = v55;
  }

  int v13 = self->_has;
  if ((*(_WORD *)&v13 & 0x100) != 0)
  {
    *((_DWORD *)v11 + 73) = self->_protoSoundRegion;
    *((_DWORD *)v11 + 100) |= 0x100u;
    int v13 = self->_has;
  }

  if ((*(_DWORD *)&v13 & 0x10000) != 0)
  {
    *((_BYTE *)v11 + 386) = self->_protoEmergency;
    *((_DWORD *)v11 + 100) |= 0x10000u;
  }

  if (-[CSDMessagingRelayMessage otherUniqueProxyIdentifiersCount](self, "otherUniqueProxyIdentifiersCount"))
  {
    [v55 clearOtherUniqueProxyIdentifiers];
    uint64_t v14 = -[CSDMessagingRelayMessage otherUniqueProxyIdentifiersCount](self, "otherUniqueProxyIdentifiersCount");
    if (v14)
    {
      uint64_t v15 = v14;
      for (j = 0LL; j != v15; ++j)
      {
        int v17 = (void *)objc_claimAutoreleasedReturnValue( -[CSDMessagingRelayMessage otherUniqueProxyIdentifiersAtIndex:]( self,  "otherUniqueProxyIdentifiersAtIndex:",  j));
        [v55 addOtherUniqueProxyIdentifiers:v17];
      }
    }
  }

  if (self->_protoCallModel) {
    objc_msgSend(v55, "setProtoCallModel:");
  }
  if (self->_handle) {
    objc_msgSend(v55, "setHandle:");
  }
  if ((*((_BYTE *)&self->_has + 2) & 0x20) != 0)
  {
    *((_BYTE *)v55 + 391) = self->_protoSOS;
    v55[100] |= 0x200000u;
  }

  if (-[CSDMessagingRelayMessage providersCount](self, "providersCount"))
  {
    [v55 clearProviders];
    __int16 v18 = -[CSDMessagingRelayMessage providersCount](self, "providersCount");
    if (v18)
    {
      id v19 = v18;
      for (k = 0LL; k != v19; ++k)
      {
        unsigned int v21 = (void *)objc_claimAutoreleasedReturnValue(-[CSDMessagingRelayMessage providersAtIndex:](self, "providersAtIndex:", k));
        [v55 addProviders:v21];
      }
    }
  }

  if (self->_protoDisplayContext) {
    objc_msgSend(v55, "setProtoDisplayContext:");
  }
  uint64_t v22 = v55;
  if (self->_inviteData)
  {
    objc_msgSend(v55, "setInviteData:");
    uint64_t v22 = v55;
  }

  if (self->_protoProvider)
  {
    objc_msgSend(v55, "setProtoProvider:");
    uint64_t v22 = v55;
  }

  id v23 = self->_has;
  if ((*(_DWORD *)&v23 & 0x8000000) != 0)
  {
    v22[397] = self->_protoVideo;
    *((_DWORD *)v22 + 100) |= 0x8000000u;
    id v23 = self->_has;
    if ((*(_DWORD *)&v23 & 0x4000000) == 0)
    {
LABEL_74:
      if ((*(_DWORD *)&v23 & 0x100000) == 0) {
        goto LABEL_75;
      }
      goto LABEL_151;
    }
  }

  else if ((*(_DWORD *)&v23 & 0x4000000) == 0)
  {
    goto LABEL_74;
  }

  v22[396] = self->_protoUplinkMuted;
  *((_DWORD *)v22 + 100) |= 0x4000000u;
  id v23 = self->_has;
  if ((*(_DWORD *)&v23 & 0x100000) == 0)
  {
LABEL_75:
    if ((*(_WORD *)&v23 & 0x1000) == 0) {
      goto LABEL_77;
    }
    goto LABEL_76;
  }
}

  *((_DWORD *)v5 + 20) = self->_protoDisconnectedReason;
  *((_DWORD *)v5 + 38) |= 2u;
  if ((*(_DWORD *)&self->_has & 0x100000) != 0)
  {
LABEL_9:
    *((_BYTE *)v5 + 149) = self->_protoVoicemail;
    *((_DWORD *)v5 + 38) |= 0x100000u;
  }
}

              v67 = 0LL;
LABEL_45:
              sub_1001B4B8C(v64);

              return;
            }
          }
        }
      }
    }

    uint64_t v44 = v94;
    uint64_t v46 = v98 + v94;
    int v24 = v49;
    uint64_t v45 = v99;
  }

  while (v49 != v93);
  if (!v99) {
    goto LABEL_109;
  }
  v110[0] = _swiftEmptyArrayStorage;
  sub_100250050(0, v99 & ~(v99 >> 63), 0);
  v64 = 0LL;
  v65 = v110[0];
  while (1)
  {
    if (v108)
    {
      sub_1001EE280();
      int v24 = sub_10022CE88(v64);
      sub_1001B0EB8();
    }

    else
    {
      int v24 = (uint64_t)*(id *)(v1 + 8 * v64 + 32);
    }

    v109 = v24;
    v66 = sub_1002276B8((void **)&v109, v101);

    if ((v66 & 1) != 0) {
      break;
    }
    v67 = (uint8_t *)(v64 + 1);
    if (__OFADD__(v64, 1LL)) {
      goto LABEL_101;
    }
    ++v64;
    if (v67 == (uint8_t *)v21)
    {
      v64 = v21;
      break;
    }
  }

  v100 = v65;
  if ((v99 & 0x8000000000000000LL) == 0)
  {
    v68 = 0LL;
    while (1)
    {
      if (v68 == v98) {
        goto LABEL_98;
      }
      if (v108)
      {
        v69 = (id)sub_10022CE88(v64);
      }

      else
      {
        if (v64 < 0) {
          goto LABEL_102;
        }
        v69 = *(id *)(v91 + 8 * v64);
      }

      int v24 = (uint64_t)v69;
      v70 = [(id)v24 pseudonym];
      unsigned int v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v70);
      uint64_t v6 = v71;

      v72 = v100;
      v110[0] = v100;
      objc_super v8 = v100[2];
      v73 = v100[3];
      v74 = v8 + 1;
      if (v8 >= v73 >> 1)
      {
        int v24 = (uint64_t)v110;
        sub_100250050(v73 > 1, v8 + 1, 1);
        v72 = v110[0];
      }

      v72[2] = v74;
      v100 = v72;
      v75 = &v72[2 * v8];
      v75[4] = v21;
      v75[5] = v6;
      if (__OFADD__(v64, 1LL)) {
        goto LABEL_100;
      }
      unsigned int v21 = (uint64_t)v107;
      uint64_t v6 = v97;
      objc_super v8 = v103;
      v76 = (uint8_t *)(v64 + 5);
      do
      {
        unsigned int v21 = (uint64_t)(v76 - 4);
        if (v108)
        {
          sub_1001EE280();
          int v24 = sub_10022CE88((uint64_t)(v76 - 4));
          sub_1001B0EB8();
        }

        else
        {
          if (v21 < 0) {
            goto LABEL_92;
          }
          int v24 = (uint64_t)*(id *)(v1 + 8LL * (void)v76);
        }

        v77 = objc_msgSend((id)v24, "deletionDate", v91);
        if (!v77)
        {
          sub_10022CFB0();
LABEL_78:
          sub_1002011C8((uint64_t)v6, &qword_100447EA0);
          v81 = (id)v24;
          int v24 = v106;
          Logger.logObject.getter(v81, v82, v83);
          v84 = sub_1001B105C();
          if (sub_10022CC50(v84))
          {
            v85 = sub_1001B0E78(12LL);
            v86 = (void *)sub_1001B0E78(8LL);
            *(_DWORD *)v85 = v102;
            *(void *)(v85 + 4) = v81;
            *v86 = v81;
            sub_1001B0FD8( (void *)&_mh_execute_header,  (os_log_s *)v24,  (os_log_type_t)v74,  "getDeletedPseudonyms: no deleted descriptors for %@",  (uint8_t *)v85);
            sub_1001AFF14(&qword_100447E80);
            sub_1001B0F64((uint64_t)v86);
            v87 = (uint64_t)v86;
            objc_super v8 = v103;
            sub_1001B0E60(v87);
            v88 = v85;
            uint64_t v6 = v97;
            sub_1001B0E60(v88);
          }

          else
          {

            int v24 = (uint64_t)v81;
          }

          goto LABEL_82;
        }

        v78 = v77;
        v79 = v105;
        static Date._unconditionallyBridgeFromObjectiveC(_:)(v77);

        v74 = *(void *)(v8 + 32);
        sub_10022D0BC((uint64_t)v6, v79);
        sub_10022CE2C();
        if (v54) {
          goto LABEL_78;
        }
        v80 = v95;
        sub_10022D0BC(v95, (uint64_t)v6);
        LOBYTE(v74) = static Date.< infix(_:_:)(v80, v96);
        sub_10022D1D8(v80);

        if ((v74 & 1) != 0) {
          goto LABEL_85;
        }
LABEL_82:
        v89 = v76 - 3;
        if (__OFADD__(v21, 1LL)) {
          goto LABEL_89;
        }
        ++v76;
      }

      while (v89 != v107);
      unsigned int v21 = (uint64_t)v107;
LABEL_85:
      int v39 = v92;
LABEL_86:
      ++v68;
      v64 = v21;
      if (v68 == v99)
      {
LABEL_109:
        sub_1001B0EB8();
        sub_10022D1E4(v101);
        sub_10022D1E4(v96);
        sub_10022D1E4(v39);
        sub_1001B0FF8();
        return;
      }
    }
  }

  __break(1u);
}

              sub_1001B4B8C(v1);
              return;
            }
          }
        }
      }
    }

LABEL_45:
  id v25 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  self->_isGFTDowngradeToOneToOneAvailable));
  [v3 setObject:v25 forKey:@"isGFTDowngradeToOneToOneAvailable"];

  if ((*(_DWORD *)&self->_has & 0x200) != 0)
  {
LABEL_18:
    id v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", self->_guestModeEnabled));
    [v3 setObject:v11 forKey:@"guestModeEnabled"];
  }

  PBDataWriterWriteUint32Field(v12, self->_options, 11LL);
  uint64_t v7 = self->_has;
  if ((*(_WORD *)&v7 & 0x400) == 0)
  {
LABEL_17:
    if ((*(_WORD *)&v7 & 0x200) == 0) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }

  v4[12] = self->_options;
  v4[26] |= 4u;
  uint64_t v6 = self->_has;
  if ((*(_WORD *)&v6 & 0x400) == 0)
  {
LABEL_17:
    if ((*(_WORD *)&v6 & 0x200) == 0) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }

  v4[121] = self->_supportsAudioOnly;
  v4[128] |= 8u;
  has = (char)self->_has;
  if ((has & 4) == 0)
  {
LABEL_11:
    if ((has & 0x10) == 0) {
      goto LABEL_12;
    }
    goto LABEL_47;
  }
}

              sub_1001B4B8C(v3);

              return;
            }
          }
        }
      }
    }

              sub_1001B4B8C(v1);
              return;
            }
          }
        }
      }
    }

      sub_1001B1200();
      sub_10028EBCC();
    }

    else
    {
      sub_10024DAEC();
      v55 = sub_10028EC9C();
      v57 = v56;
      sub_1001B92A4();
      if ((v57 & 1) != 0)
      {
        v70 = swift_isUniquelyReferenced_nonNull_native(v38);
        v93 = v38;
        v71 = v38[3];
        sub_1001AFF14(&qword_10044BF58);
        v72 = v70;
        int v39 = v35 + 56;
        _NativeDictionary.ensureUnique(isUnique:capacity:)(v72, v71);
        swift_bridgeObjectRelease(*(void *)(v38[6] + 16 * v55 + 8));
        v73 = *(void **)(v38[7] + 8 * v55);
        _NativeDictionary._delete(at:)(v55, v38, &type metadata for String, v52, &protocol witness table for String);

        goto LABEL_45;
      }

      sub_1001B1200();
    }
  }

  uint64_t v46 = v43 + 1;
  if (__OFADD__(v43, 1LL))
  {
    __break(1u);
    goto LABEL_49;
  }

  if (v46 >= v91) {
    goto LABEL_46;
  }
  uint64_t v47 = *(void *)(v39 + 8 * v46);
  ++v43;
  if (v47) {
    goto LABEL_32;
  }
  uint64_t v43 = v46 + 1;
  if (v46 + 1 >= v91) {
    goto LABEL_46;
  }
  uint64_t v47 = *(void *)(v39 + 8 * v43);
  if (v47) {
    goto LABEL_32;
  }
  uint64_t v43 = v46 + 2;
  if (v46 + 2 >= v91) {
    goto LABEL_46;
  }
  uint64_t v47 = *(void *)(v39 + 8 * v43);
  if (v47)
  {
LABEL_32:
    uint64_t v42 = (v47 - 1) & v47;
    uint64_t v45 = __clz(__rbit64(v47)) + (v43 << 6);
    goto LABEL_33;
  }

  uint64_t v48 = v46 + 3;
  if (v48 >= v91)
  {
LABEL_46:
    swift_release(v35);
    sub_10024DAEC();
    sub_1001E7BD4();
    uint64_t v9 = v78;
    sub_1001B92A4();
    v94 = v9;
    sub_1001B92A4();
    uint64_t v6 = a3;
    uint64_t v5 = v88;
    uint64_t v7 = a2;
    goto LABEL_47;
  }

  uint64_t v47 = *(void *)(v39 + 8 * v48);
  if (v47)
  {
    uint64_t v43 = v48;
    goto LABEL_32;
  }

  while (1)
  {
    uint64_t v43 = v48 + 1;
    if (__OFADD__(v48, 1LL)) {
      break;
    }
    if (v43 >= v91) {
      goto LABEL_46;
    }
    uint64_t v47 = *(void *)(v39 + 8 * v43);
    ++v48;
    if (v47) {
      goto LABEL_32;
    }
  }

LABEL_19:
  association = self->_association;
  if (association)
  {
    int v13 = (void *)objc_claimAutoreleasedReturnValue( -[CSDMessagingConversationParticipantAssociation dictionaryRepresentation]( association,  "dictionaryRepresentation"));
    [v3 setObject:v13 forKey:@"association"];
  }

  uint64_t v14 = self->_has;
  if ((*(_DWORD *)&v14 & 0x40000) != 0)
  {
    __int16 v26 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  self->_isUPlusNDowngradeAvailable));
    [v3 setObject:v26 forKey:@"isUPlusNDowngradeAvailable"];

    uint64_t v14 = self->_has;
    if ((*(_BYTE *)&v14 & 2) == 0)
    {
LABEL_23:
      if ((*(_DWORD *)&v14 & 0x400000) == 0) {
        goto LABEL_24;
      }
      goto LABEL_62;
    }
  }

  else if ((*(_BYTE *)&v14 & 2) == 0)
  {
    goto LABEL_23;
  }

  avMode = self->_avMode;
  if (avMode >= 3) {
    __int16 v28 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)",  self->_avMode));
  }
  else {
    __int16 v28 = *(&off_1003D7938 + avMode);
  }
  [v3 setObject:v28 forKey:@"avMode"];

  uint64_t v14 = self->_has;
  if ((*(_DWORD *)&v14 & 0x400000) == 0)
  {
LABEL_24:
    if ((*(_DWORD *)&v14 & 0x100000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_25;
  }

  if (self->_association)
  {
    objc_msgSend(v9, "setAssociation:");
    uint64_t v4 = v9;
  }

  uint64_t v7 = self->_has;
  if ((*(_DWORD *)&v7 & 0x40000) != 0)
  {
    *((_BYTE *)v4 + 97) = self->_isUPlusNDowngradeAvailable;
    v4[26] |= 0x40000u;
    uint64_t v7 = self->_has;
    if ((*(_BYTE *)&v7 & 2) == 0)
    {
LABEL_23:
      if ((*(_DWORD *)&v7 & 0x400000) == 0) {
        goto LABEL_24;
      }
      goto LABEL_50;
    }
  }

  else if ((*(_BYTE *)&v7 & 2) == 0)
  {
    goto LABEL_23;
  }

  v4[6] = self->_avMode;
  v4[26] |= 2u;
  uint64_t v7 = self->_has;
  if ((*(_DWORD *)&v7 & 0x400000) == 0)
  {
LABEL_24:
    if ((*(_DWORD *)&v7 & 0x100000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_25;
  }

  __int16 v28 = 0LL;
  if ((*(_WORD *)&v4 & 0x1000) != 0)
  {
LABEL_11:
    int v27 = 2654435761LL * self->_isLightweight;
    if ((*(_BYTE *)&v4 & 0x10) != 0) {
      goto LABEL_12;
    }
    goto LABEL_21;
  }
      }

      id v11 = [v10 countByEnumeratingWithState:&v40 objects:v46 count:16];
      if (!v11)
      {
LABEL_21:

        __int16 v31 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation featureFlags](self, "featureFlags"));
        if ([v31 controlMessageOverQREnabled])
        {
          unsigned int v32 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation serverBag](self, "serverBag"));
          __int16 v33 = [v32 isControlMessageOverQREnabled];

          if ((v33 & 1) != 0)
          {
LABEL_26:
            -[CSDConversation reviveOrInvalidateCachedConversationIfNecessary]( self,  "reviveOrInvalidateCachedConversationIfNecessary");
            -[CSDConversation _requestAVCBlobsIfNecessary](self, "_requestAVCBlobsIfNecessary");
            -[CSDConversation _cancelInFlightAVCBlobRecoveryIfNecessary]( self,  "_cancelInFlightAVCBlobRecoveryIfNecessary");
            -[CSDConversation _showLetMeInUIIfNecessary](self, "_showLetMeInUIIfNecessary");
            -[CSDConversation _endCallIfNecessary](self, "_endCallIfNecessary");
            -[CSDConversation _pruneRemoteParticipantsIfNecessary](self, "_pruneRemoteParticipantsIfNecessary");
            break;
          }
        }

        else
        {
        }

        BOOL v34 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](&OBJC_CLASS___NSMutableDictionary, "dictionary"));
        -[CSDConversation setPendingConversationParticipantsByIdentifier:]( self,  "setPendingConversationParticipantsByIdentifier:",  v34);

        goto LABEL_26;
      }
    }
  }
}
  }
}

LABEL_28:
        goto LABEL_29;
      }

      __int16 v33 = sub_1001704C4();
      id v19 = (CSDMessagingRelayMessage *)objc_claimAutoreleasedReturnValue(v33);
      if (os_log_type_enabled((os_log_t)v19, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412546;
        v52 = v10;
        v53 = 2112;
        v54 = v9;
        _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v19,  OS_LOG_TYPE_DEFAULT,  "[WARN] We determined that device is null and destination: %@ is not guest. Ignoring incoming message: %@",  buf,  0x16u);
      }

      goto LABEL_29;
    }

    __int16 v18 = sub_1001704C4();
    id v19 = (CSDMessagingRelayMessage *)objc_claimAutoreleasedReturnValue(v18);
    if (!os_log_type_enabled((os_log_t)v19, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_29;
    }
    int v20 = [v9 type];
    if (v20 >= 0x39) {
      unsigned int v21 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)",  v20));
    }
    else {
      unsigned int v21 = *(&off_1003D89D8 + (int)v20);
    }
    *(_DWORD *)buf = 138412290;
    v52 = v21;
    uint64_t v29 = "[WARN] Ignoring %@ relay message since our device does not suppport processing messages of that type.";
    BOOL v30 = (os_log_s *)v19;
    __int16 v31 = 12;
LABEL_27:
    _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEFAULT, v29, buf, v31);
    goto LABEL_28;
  }

  uint64_t v22 = sub_1001704C4();
  id v23 = (os_log_s *)objc_claimAutoreleasedReturnValue(v22);
  if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412546;
    v52 = v10;
    v53 = 2112;
    v54 = v11;
    _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEFAULT,  "Messaging device can't receive relayed calls ... destination %@ device %@",  buf,  0x16u);
  }

  int v24 = -[CSDRelayMessagingController shouldDeclineSessionInviteWithMessageWhenRelayIsDisabled:]( self,  "shouldDeclineSessionInviteWithMessageWhenRelayIsDisabled:",  v9);
  id v25 = sub_1001704C4();
  id v19 = (CSDMessagingRelayMessage *)objc_claimAutoreleasedReturnValue(v25);
  __int16 v26 = os_log_type_enabled((os_log_t)v19, OS_LOG_TYPE_DEFAULT);
  if (v24)
  {
    if (v26)
    {
      int v27 = (void *)objc_claimAutoreleasedReturnValue([v9 typeString]);
      *(_DWORD *)buf = 138412546;
      v52 = v27;
      v53 = 2112;
      v54 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v19,  OS_LOG_TYPE_DEFAULT,  "... and we were told to decline the session invite. Declining incoming %@ message: %@",  buf,  0x16u);
    }

    id v19 = -[CSDMessagingRelayMessage initWithType:]( objc_alloc(&OBJC_CLASS___CSDMessagingRelayMessage),  "initWithType:",  18LL);
    -[CSDMessagingRelayMessage setDisconnectedReason:](v19, "setDisconnectedReason:", 12LL);
    unsigned int v21 = (void *)objc_claimAutoreleasedReturnValue(-[CSDRelayMessagingController sessionMessenger](self, "sessionMessenger"));
    __int16 v28 = (void *)objc_claimAutoreleasedReturnValue([v9 uniqueProxyIdentifier]);
    [v21 sendMessage:v19 andCancelOrDeclineInvitationIfNecessaryForIdentifier:v28];
    goto LABEL_19;
  }

  if (v26)
  {
    unsigned int v21 = (void *)objc_claimAutoreleasedReturnValue([v9 typeString]);
    *(_DWORD *)buf = 138412546;
    v52 = v21;
    v53 = 2112;
    v54 = v9;
    uint64_t v29 = "... and we were told not to decline the session invite. Ignoring incoming %@ message: %@";
    BOOL v30 = (os_log_s *)v19;
    __int16 v31 = 22;
    goto LABEL_27;
  }
}

  if (*((void *)v5 + 3))
  {
    -[CSDMessagingCallMessage setProtoUpgradeSessionUUID:](self, "setProtoUpgradeSessionUUID:");
    uint64_t v5 = v10;
  }
}

    __int16 v33 = sub_1001704C4();
    BOOL v34 = (os_log_s *)objc_claimAutoreleasedReturnValue(v33);
    if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v35 = (void *)objc_claimAutoreleasedReturnValue([v9 UUID]);
      *(_DWORD *)buf = 138412546;
      v53 = (unint64_t)v13;
      v54 = 2112;
      v55 = (unint64_t)v35;
      _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_DEFAULT,  "Mode changing from None, Started tracking callUUID: %@ conversationUUID: %@",  buf,  0x16u);
    }

    BOOL v30 = -[CXCallUpdate initWithTUConversation:](objc_alloc(&OBJC_CLASS___CXCallUpdate), "initWithTUConversation:", v9);
    if (!-[CXCallUpdate hasVideo](v30, "hasVideo")) {
      -[CXCallUpdate updatePropertiesForVideo:](v30, "updatePropertiesForVideo:", a5 == 2);
    }
    id v36 = (void *)objc_claimAutoreleasedReturnValue([v9 remoteMembers]);
    __int16 v37 = [v36 count];

    if (v37 == (id)1)
    {
      id v49 = 0u;
      v50 = 0u;
      uint64_t v47 = 0u;
      uint64_t v48 = 0u;
      uint64_t v38 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "activeRemoteParticipants", 0));
      int v39 = [v38 countByEnumeratingWithState:&v47 objects:v51 count:16];
      if (v39)
      {
        id v40 = v39;
        v41 = *(void *)v48;
        while (2)
        {
          uint64_t v42 = 0LL;
          do
          {
            if (*(void *)v48 != v41) {
              objc_enumerationMutation(v38);
            }
            if ([*(id *)(*((void *)&v47 + 1) + 8 * (void)v42) audioVideoMode])
            {

              goto LABEL_34;
            }

            uint64_t v42 = (char *)v42 + 1;
          }

          while (v40 != v42);
          id v40 = [v38 countByEnumeratingWithState:&v47 objects:v51 count:16];
          if (v40) {
            continue;
          }
          break;
        }
      }

      uint64_t v43 = (void *)objc_claimAutoreleasedReturnValue(-[CSDAbstractFaceTimeConversationProviderDelegate provider](self, "provider"));
      [v43 reportNewOutgoingCallWithUUID:v13 update:v30];

      uint64_t v44 = (void *)objc_claimAutoreleasedReturnValue(-[CSDAbstractFaceTimeConversationProviderDelegate provider](self, "provider"));
      [v44 reportOutgoingCallWithUUID:v13 sentInvitationAtDate:0];

      -[CSDFaceTimeConversationProviderDelegate startOutgoingOneToOneTimeoutIfNecessary:]( self,  "startOutgoingOneToOneTimeoutIfNecessary:",  v13);
      goto LABEL_36;
    }

  int v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", self->_hardPauseAvailable));
  [v3 setObject:v13 forKey:@"hardPauseAvailable"];

  has = (__int16)self->_has;
  if ((has & 4) == 0)
  {
LABEL_9:
    if ((has & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_21:
    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", self->_holdAndAnswerAllowed));
    [v3 setObject:v15 forKey:@"holdAndAnswerAllowed"];

    if ((*(_WORD *)&self->_has & 0x80) == 0) {
      return v3;
    }
    goto LABEL_11;
  }

  PBDataWriterWriteBOOLField(v5, self->_hardPauseAvailable, 7LL);
  has = (__int16)self->_has;
  if ((has & 4) == 0)
  {
LABEL_9:
    if ((has & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_21:
    PBDataWriterWriteBOOLField(v5, self->_holdAndAnswerAllowed, 9LL);
    if ((*(_WORD *)&self->_has & 0x80) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }

  *((_BYTE *)v4 + 14) = self->_hardPauseAvailable;
  *((_WORD *)v4 + 12) |= 8u;
  has = (__int16)self->_has;
  if ((has & 4) == 0)
  {
LABEL_9:
    if ((has & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_21:
    *((_BYTE *)v4 + 16) = self->_holdAndAnswerAllowed;
    *((_WORD *)v4 + 12) |= 0x20u;
    if ((*(_WORD *)&self->_has & 0x80) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }

  *((_BYTE *)result + 14) = self->_hardPauseAvailable;
  *((_WORD *)result + 12) |= 8u;
  has = (__int16)self->_has;
  if ((has & 4) == 0)
  {
LABEL_9:
    if ((has & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }

  id v10 = 0LL;
  if ((has & 0x20) == 0) {
    goto LABEL_20;
  }
LABEL_10:
  id v11 = 2654435761LL * self->_holdAndAnswerAllowed;
  if ((has & 0x80) == 0) {
    goto LABEL_21;
  }
LABEL_11:
  uint64_t v12 = 2654435761LL * self->_sendToVoicemailAllowed;
  return v4 ^ v3 ^ v5 ^ v6 ^ v7 ^ v8 ^ v9 ^ v10 ^ v11 ^ v12;
}

  self->_hardPauseAvailable = *((_BYTE *)v4 + 14);
  *(_WORD *)&self->_has |= 8u;
  uint64_t v5 = *((_WORD *)v4 + 12);
  if ((v5 & 4) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_21:
    self->_holdAndAnswerAllowed = *((_BYTE *)v4 + 16);
    *(_WORD *)&self->_has |= 0x20u;
    if ((*((_WORD *)v4 + 12) & 0x80) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }

        uint64_t v14 = v26;
LABEL_20:
        if ([v6 isConversation])
        {
          if ([v6 disconnectedReason] == 49)
          {

            uint64_t v14 = @"No FaceTime account signed in";
          }

          else if ([v6 disconnectedReason] == 14 {
                 || [v6 disconnectedReason] == 17)
          }
          {
            int v27 = (uint64_t)[v6 providerEndedReason];
            if (v27 <= 499)
            {
              if (v27)
              {
                if (v27 == 5)
                {

                  uint64_t v14 = @"Mediaserverd crash";
                }

                else
                {
LABEL_34:
                  if ((unint64_t)(v27 - 3202800) < 0x64)
                  {

                    uint64_t v14 = @"Bad API usage";
                  }
                }
              }

              else
              {
                __int16 v28 = [v6 disconnectedReason];

                if (v28 == 17) {
                  uint64_t v14 = @"Unknown Dial Failure for Conversation";
                }
                else {
                  uint64_t v14 = @"Unknown Call Failure for Conversation";
                }
              }
            }

            else
            {
              switch(v27)
              {
                case 500LL:

                  uint64_t v14 = @"AVC blob recovery timeout";
                  break;
                case 501LL:
                case 502LL:
                case 503LL:
                case 504LL:
                case 509LL:
                case 510LL:
                case 511LL:
                  goto LABEL_34;
                case 505LL:

                  uint64_t v14 = @"No AVC error reason given";
                  break;
                case 506LL:

                  uint64_t v14 = @"AVC session did not start";
                  break;
                case 507LL:

                  uint64_t v14 = @"AVC audio client did not start";
                  break;
                case 508LL:

                  uint64_t v14 = @"Join call action failed";
                  break;
                case 512LL:

                  uint64_t v14 = @"Hold call action failed";
                  break;
                default:
                  if (v27 != 533) {
                    goto LABEL_34;
                  }

                  uint64_t v14 = @"No conversation participant";
                  break;
              }
            }
          }
        }

        __int16 v31 = @"CallUUID";
        uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue([v6 uniqueProxyIdentifier]);
        unsigned int v32 = v29;
        uint64_t v15 = (void (**)(void, void, void, void, void))objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v32,  &v31,  1LL));

        BOOL v30 = (void (**)(void, void, void, void, void))objc_claimAutoreleasedReturnValue(-[CSDABCReporter block](self, "block"));
        ((void (**)(void, void *, __CFString *, void, void))v30)[2](v30, v12, v14, 0LL, v15);

        goto LABEL_45;
      }
    }

    else
    {
    }

    __int16 v26 = v7;
    goto LABEL_19;
  }

    objc_super v8 = 0;
    goto LABEL_20;
  }

  if ((*((_BYTE *)v4 + 32) & 2) != 0) {
    goto LABEL_19;
  }
LABEL_15:
  generatorDescriptors = self->_generatorDescriptors;
  if ((unint64_t)generatorDescriptors | *((void *)v4 + 2)
    && !-[NSMutableArray isEqual:](generatorDescriptors, "isEqual:"))
  {
    goto LABEL_19;
  }

  generateDescriptorInfos = self->_generateDescriptorInfos;
  else {
    objc_super v8 = 1;
  }
LABEL_20:

  return v8;
}
}

        uint64_t v7 = (v12 - 1) & v12;
        id v10 = __clz(__rbit64(v12)) + (v13 << 6);
        v56 = v13;
      }

      uint64_t v15 = *(void *)(v6 + 56);
      int v16 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v10);
      int v17 = *v16;
      __int16 v18 = v16[1];
      id v19 = *(void *)(v15 + 8 * v10);
      if (v19 < 0) {
        unsigned int v21 = *(void *)(v15 + 8 * v10);
      }
      else {
        unsigned int v21 = v19 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain_n(*(void *)(v15 + 8 * v10), 2LL);
      swift_bridgeObjectRetain(v18);
      uint64_t v22 = v21;
      uint64_t v5 = v53;
      __n128 result = _CocoaArrayWrapper.endIndex.getter(v22);
      int v20 = result;
      if (result) {
        goto LABEL_27;
      }
LABEL_22:
      swift_bridgeObjectRelease(v18);
      __n128 result = swift_bridgeObjectRelease_n(v19, 2LL);
    }

    int v20 = *(void *)((v19 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    swift_bridgeObjectRetain_n(*(void *)(v15 + 8 * v10), 2LL);
    __n128 result = swift_bridgeObjectRetain(v18);
    if (!v20) {
      goto LABEL_22;
    }
LABEL_27:
    v54 = v4;
    id v23 = v19 & 0xC000000000000001LL;
    if ((v19 & 0xC000000000000001LL) != 0)
    {
      __n128 result = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v19);
    }

    else
    {
      if (!*(void *)((v19 & 0xFFFFFFFFFFFFF8LL) + 0x10)) {
        goto LABEL_60;
      }
      __n128 result = (Swift::Int)*(id *)(v19 + 32);
    }

    int v24 = (char *)result;
    if (v20 == 1)
    {
      swift_bridgeObjectRelease(v19);
    }

    else
    {
      if (v20 < 2) {
        goto LABEL_61;
      }
      v51 = v2;
      sub_1002734A0(1LL, v23 == 0, v19);
      id v25 = v20 - 1;
      sub_1002734A0(v25, v23 == 0, v19);
      __int16 v26 = 0LL;
      do
      {
        if (v23) {
          int v27 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v26 + 1, v19);
        }
        else {
          int v27 = (char *)*(id *)(v19 + 8 * v26 + 40);
        }
        __int16 v28 = *(void *)&v24[OBJC_IVAR___CSDConversationLinkGeneratorDescriptor_version];
        uint64_t v29 = *(void *)&v27[OBJC_IVAR___CSDConversationLinkGeneratorDescriptor_version];
        BOOL v30 = v28 < v29;
        if (v28 >= v29) {
          __int16 v31 = v27;
        }
        else {
          __int16 v31 = v24;
        }
        if (v30) {
          int v24 = v27;
        }

        ++v26;
      }

      while (v25 != v26);
      swift_bridgeObjectRelease(v19);
      id v2 = v51;
    }

    unsigned int v32 = *(void *)&v24[OBJC_IVAR___CSDConversationLinkGeneratorDescriptor_version];

    uint64_t v4 = v54;
    int v39 = v54[2];
    if (v54[3] <= v39)
    {
      sub_1001FE9F0(v39 + 1, 1LL, v33, v34, v35, v36, v37, v38, v50, v51, v52, v53, (int)v54, SBYTE4(v54));
      uint64_t v4 = v62;
    }

    Hasher.init(_seed:)(v57, v4[5]);
    String.hash(into:)(v57, v17, v18);
    __n128 result = Hasher._finalize()();
    id v40 = (char *)(v4 + 8);
    v41 = -1LL << *((_BYTE *)v4 + 32);
    uint64_t v42 = result & ~v41;
    uint64_t v43 = v42 >> 6;
    if (((-1LL << v42) & ~v4[(v42 >> 6) + 8]) == 0) {
      break;
    }
    uint64_t v44 = __clz(__rbit64((-1LL << v42) & ~v4[(v42 >> 6) + 8])) | v42 & 0x7FFFFFFFFFFFFFC0LL;
    uint64_t v5 = v53;
LABEL_55:
    *(void *)&v40[(v44 >> 3) & 0x1FFFFFFFFFFFFFF8LL] |= 1LL << v44;
    id v49 = (void *)(v4[6] + 16 * v44);
    *id v49 = v17;
    v49[1] = v18;
    *(void *)(v4[7] + 8 * v44) = v32;
    ++v4[2];
    __n128 result = swift_bridgeObjectRelease(v19);
  }

  uint64_t v45 = 0;
  uint64_t v46 = (unint64_t)(63 - v41) >> 6;
  uint64_t v5 = v53;
  while (++v43 != v46 || (v45 & 1) == 0)
  {
    uint64_t v47 = v43 == v46;
    if (v43 == v46) {
      uint64_t v43 = 0LL;
    }
    v45 |= v47;
    uint64_t v48 = *(void *)&v40[8 * v43];
    if (v48 != -1)
    {
      uint64_t v44 = __clz(__rbit64(~v48)) + (v43 << 6);
      goto LABEL_55;
    }
  }

    uint64_t v9 = (v13 - 1) & v13;
    id v11 = __clz(__rbit64(v13)) + (v6 << 6);
LABEL_20:
    uint64_t v15 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v11);
    int v16 = *v15;
    int v17 = v15[1];
    __int16 v18 = *(void *)(*(void *)(a3 + 56) + 8 * v11);
    swift_bridgeObjectRetain(v17);
    swift_bridgeObjectRetain(v18);
    id v19 = a4(v16, v17, v18);
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease(v18);
    if ((v19 & 1) != 0)
    {
      *(void *)(a1 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v11;
      if (__OFADD__(v23++, 1LL))
      {
        __break(1u);
LABEL_24:
        sub_10023C030(a1, a2, v23);
        return;
      }
    }
  }

  uint64_t v14 = v12 + 3;
  if (v14 >= v25) {
    goto LABEL_24;
  }
  int v13 = *(void *)(v24 + 8 * v14);
  if (v13)
  {
    uint64_t v6 = v14;
    goto LABEL_19;
  }

  while (1)
  {
    uint64_t v6 = v14 + 1;
    if (__OFADD__(v14, 1LL)) {
      break;
    }
    if (v6 >= v25) {
      goto LABEL_24;
    }
    int v13 = *(void *)(v24 + 8 * v6);
    ++v14;
    if (v13) {
      goto LABEL_19;
    }
  }

  __break(1u);
  return result;
}

    uint64_t v5 = (v11 - 1) & v11;
    BOOL v34 = v12;
  }

  while (1)
  {
    uint64_t v12 = v13 + 1;
    if (__OFADD__(v13, 1LL)) {
      break;
    }
    if (v12 >= v29) {
      goto LABEL_30;
    }
    id v11 = *(void *)(v28 + 8 * v12);
    ++v13;
    if (v11) {
      goto LABEL_19;
    }
  }

    uint64_t v4 = (v9 - 1) & v9;
    uint64_t v7 = __clz(__rbit64(v9)) + (v10 << 6);
    id v3 = v10;
    goto LABEL_20;
  }

  __break(1u);
}

    int v17 = (v22 - 1) & v22;
    int v20 = __clz(__rbit64(v22)) + (v23 << 6);
    int v39 = v23;
LABEL_20:
    id v25 = *(void *)(v40 + 72);
    sub_10023C780(*(void *)(v38 + 56) + v25 * v20, (uint64_t)v13);
    __int16 v26 = sub_10023C6F8((uint64_t)v13, (uint64_t)v15);
    (*v18)(v26);
    int v27 = static DispatchTime.< infix(_:_:)(v15, v7);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if ((v27 & 1) != 0)
    {
      sub_10023C6F8((uint64_t)v15, v37);
      __int16 v28 = v42;
      if ((swift_isUniquelyReferenced_nonNull_native(v42) & 1) == 0)
      {
        sub_10025011C(0LL, v28[2] + 1LL, 1);
        __int16 v28 = v42;
      }

      BOOL v30 = v28[2];
      uint64_t v29 = v28[3];
      if (v30 >= v29 >> 1)
      {
        sub_10025011C(v29 > 1, v30 + 1, 1);
        __int16 v28 = v42;
      }

      v28[2] = v30 + 1;
      __n128 result = sub_10023C6F8( v37,  (uint64_t)v28 + ((*(unsigned __int8 *)(v40 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80))
               + v30 * v25);
      uint64_t v5 = v33;
      uint64_t v4 = v34;
    }

    else
    {
      __n128 result = sub_1001BB478((uint64_t)v15, &qword_100447E10);
    }
  }

  __break(1u);
  return result;
}

    uint64_t v9 = (v14 - 1) & v14;
    uint64_t v12 = __clz(__rbit64(v14)) + (v5 << 6);
LABEL_20:
    if (*(void *)(*(void *)(a3 + 56) + 8 * v12) == 4LL)
    {
      *(unint64_t *)((char *)result + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v12;
      if (__OFADD__(v4++, 1LL))
      {
        __break(1u);
        return (unint64_t *)sub_10023C258(result, a2, v4, a3);
      }
    }
  }

  uint64_t v15 = v13 + 3;
  if (v15 >= v10) {
    return (unint64_t *)sub_10023C258(result, a2, v4, a3);
  }
  uint64_t v14 = *(void *)(v6 + 8 * v15);
  if (v14)
  {
    uint64_t v5 = v15;
    goto LABEL_19;
  }

  while (1)
  {
    uint64_t v5 = v15 + 1;
    if (__OFADD__(v15, 1LL)) {
      break;
    }
    if (v5 >= v10) {
      return (unint64_t *)sub_10023C258(result, a2, v4, a3);
    }
    uint64_t v14 = *(void *)(v6 + 8 * v5);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }

  uint64_t v48 = *(void *)(a1 + 24);
  id v49 = *(void *)(a1 + 32);
  sub_1001B204C((void *)a1, v48);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v49 + 32))(v48, v49) & 1) != 0)
  {
    uint64_t v44 = (unint64_t)sub_1001F88F0(0x44454B434F4C42LL, (void *)0xE700000000000000LL);
    v51 = v50;
    swift_bridgeObjectRelease(v43);
    uint64_t v43 = v51;
    goto LABEL_22;
  }

  if (v43)
  {
LABEL_22:
    v52 = HIBYTE(v43) & 0xF;
    if ((v43 & 0x2000000000000000LL) == 0) {
      v52 = v44 & 0xFFFFFFFFFFFFLL;
    }
    if (v52) {
      goto LABEL_28;
    }
  }

  v53 = *(void *)(a1 + 24);
  v54 = *(void *)(a1 + 32);
  sub_1001B204C((void *)a1, v53);
  v55 = (*(uint64_t (**)(uint64_t, uint64_t))(v54 + 48))(v53, v54);
  if (v56)
  {
    v57 = (NSBundle *)v55;
    v58 = v56;
    swift_bridgeObjectRelease(v43);
    uint64_t v44 = (unint64_t)v57;
    uint64_t v43 = v58;
  }

  else if (!v43)
  {
    goto LABEL_31;
  }

    uint64_t v6 = (v10 - 1) & v10;
    objc_super v8 = __clz(__rbit64(v10)) + (v11 << 6);
    uint64_t v5 = v11;
LABEL_20:
    int v13 = *(void *)(*(void *)(v4 + 48) + 8 * v8);
    uint64_t v14 = *(void *)(v4 + 56) + 24 * v8;
    uint64_t v15 = *(void **)v14;
    int v16 = *(void *)(v14 + 8);
    int v17 = *(unsigned __int8 *)(v14 + 16);
    if (*(_BYTE *)(v14 + 17)) {
      __int16 v18 = 256;
    }
    else {
      __int16 v18 = 0;
    }
    id v19 = v18 | v17;
    int v20 = v15;
    unsigned int v21 = a2(v13, v20, v16, v19);
    id v23 = v22;

    if ((v23 & 1) == 0)
    {
      if ((swift_isUniquelyReferenced_nonNull_native(v27) & 1) == 0)
      {
        sub_1002B04B4();
        int v27 = v25;
      }

      int v24 = v27[2];
      if (v24 >= v27[3] >> 1)
      {
        sub_1002B04B4();
        int v27 = v26;
      }

      v27[2] = v24 + 1;
      v27[v24 + 4] = v21;
    }
  }

  __break(1u);
}

  swift_bridgeObjectRelease(a1);
  return _swiftEmptyArrayStorage;
}

  swift_bridgeObjectRelease(a1);
  return &_swiftEmptyArrayStorage;
}

        uint64_t v7 = (v12 - 1) & v12;
        id v10 = __clz(__rbit64(v12)) + (v13 << 6);
        v54 = v13;
      }

      uint64_t v15 = *(void *)(v5 + 56);
      int v16 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v10);
      int v17 = *v16;
      __int16 v18 = v16[1];
      id v19 = *(void *)(v15 + 8 * v10);
      if (v19 < 0) {
        unsigned int v21 = *(void *)(v15 + 8 * v10);
      }
      else {
        unsigned int v21 = v19 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain_n(*(void *)(v15 + 8 * v10), 2LL);
      swift_bridgeObjectRetain(v18);
      __n128 result = _CocoaArrayWrapper.endIndex.getter(v21);
      int v20 = result;
      if (result) {
        goto LABEL_27;
      }
LABEL_22:
      swift_bridgeObjectRelease(v18);
      __n128 result = swift_bridgeObjectRelease_n(v19, 2LL);
    }

    int v20 = *(void *)((v19 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    swift_bridgeObjectRetain_n(*(void *)(v15 + 8 * v10), 2LL);
    __n128 result = swift_bridgeObjectRetain(v18);
    if (!v20) {
      goto LABEL_22;
    }
LABEL_27:
    v52 = v4;
    uint64_t v22 = v19 & 0xC000000000000001LL;
    if ((v19 & 0xC000000000000001LL) != 0)
    {
      __n128 result = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v19);
    }

    else
    {
      if (!*(void *)((v19 & 0xFFFFFFFFFFFFF8LL) + 0x10)) {
        goto LABEL_60;
      }
      __n128 result = (Swift::Int)*(id *)(v19 + 32);
    }

    id v23 = (char *)result;
    if (v20 == 1)
    {
      swift_bridgeObjectRelease(v19);
    }

    else
    {
      if (v20 < 2) {
        goto LABEL_61;
      }
      id v49 = v2;
      sub_1002734A0(1LL, v22 == 0, v19);
      BOOL v30 = v20 - 1;
      sub_1002734A0(v30, v22 == 0, v19);
      __int16 v31 = 0LL;
      do
      {
        if (v22) {
          unsigned int v32 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v31 + 1, v19);
        }
        else {
          unsigned int v32 = (char *)*(id *)(v19 + 8 * v31 + 40);
        }
        __int16 v33 = *(void *)&v23[OBJC_IVAR___CSDConversationLinkGeneratorDescriptor_version];
        BOOL v34 = *(void *)&v32[OBJC_IVAR___CSDConversationLinkGeneratorDescriptor_version];
        uint64_t v35 = v33 < v34;
        if (v33 >= v34) {
          id v36 = v32;
        }
        else {
          id v36 = v23;
        }
        if (v35) {
          id v23 = v32;
        }

        ++v31;
      }

      while (v30 != v31);
      swift_bridgeObjectRelease(v19);
      id v2 = v49;
    }

    uint64_t v4 = v52;
    __int16 v37 = v52[2];
    if (v52[3] <= v37)
    {
      sub_1001FEDCC(v37 + 1, 1LL, v24, v25, v26, v27, v28, v29, v48, v49, v50, i, (int)v52, SBYTE4(v52));
      uint64_t v4 = v60;
    }

    Hasher.init(_seed:)(v55, v4[5]);
    String.hash(into:)(v55, v17, v18);
    __n128 result = Hasher._finalize()();
    uint64_t v38 = (char *)(v4 + 8);
    int v39 = -1LL << *((_BYTE *)v4 + 32);
    id v40 = result & ~v39;
    v41 = v40 >> 6;
    if (((-1LL << v40) & ~v4[(v40 >> 6) + 8]) == 0) {
      break;
    }
    uint64_t v42 = __clz(__rbit64((-1LL << v40) & ~v4[(v40 >> 6) + 8])) | v40 & 0x7FFFFFFFFFFFFFC0LL;
LABEL_55:
    *(void *)&v38[(v42 >> 3) & 0x1FFFFFFFFFFFFFF8LL] |= 1LL << v42;
    uint64_t v47 = (void *)(v4[6] + 16 * v42);
    *uint64_t v47 = v17;
    v47[1] = v18;
    *(void *)(v4[7] + 8 * v42) = v23;
    ++v4[2];
    __n128 result = swift_bridgeObjectRelease(v19);
  }

  uint64_t v43 = 0;
  uint64_t v44 = (unint64_t)(63 - v39) >> 6;
  while (++v41 != v44 || (v43 & 1) == 0)
  {
    uint64_t v45 = v41 == v44;
    if (v41 == v44) {
      v41 = 0LL;
    }
    v43 |= v45;
    uint64_t v46 = *(void *)&v38[8 * v41];
    if (v46 != -1)
    {
      uint64_t v42 = __clz(__rbit64(~v46)) + (v41 << 6);
      goto LABEL_55;
    }
  }

  sub_1001B0EC0();
  int v17 = [objc_allocWithZone((Class)CSDMessagingLinkSyncMessage) init];
  v135 = v17;
  if (v17)
  {
    id v2 = v17;
    [v17 setType:1];
    sub_10028EA98(v2, "setUpdateMessage:");
    sub_10028E3AC(v2);
    id v19 = v18;
    unsigned int v21 = v20;
  }

  else
  {
    sub_10028EA98(0LL, "setUpdateMessage:");
    id v19 = 0LL;
    unsigned int v21 = 0xF000000000000000LL;
  }

  uint64_t v22 = v142;
  if (qword_100446930 != -1) {
    swift_once(&qword_100446930, sub_100258A18);
  }
  id v23 = sub_1001B0E98();
  int v24 = sub_1001B0D98(v23, (uint64_t)qword_1004541B0);
  sub_10022CE68(a1);
  id v25 = sub_10022CE68(v142);
  sub_10028EFE4(v25, v26, v27);
  __int16 v28 = sub_1001B105C();
  uint64_t v29 = v28;
  BOOL v30 = "ts";
  v137 = v19;
  v139 = v21;
  if (os_log_type_enabled((os_log_t)v2, v28))
  {
    v133 = v24;
    __int16 v31 = sub_1001B0E78(22LL);
    unsigned int v32 = sub_1001B0E78(64LL);
    v148[0] = v32;
    *(_DWORD *)__int16 v31 = 136315394;
    __int16 v33 = sub_1001B9234();
    BOOL v34 = Set.description.getter(v33, &type metadata for String, &protocol witness table for String);
    sub_1001B0F5C();
    sub_1001D92C8(v34, v35, v148);
    sub_10028EB00();
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v36, v37, v31 + 4, v38);
    sub_10022CCA4(v142);
    int v39 = sub_1001B92A4();
    *(_WORD *)(v31 + 12) = 2080;
    id v40 = sub_1001B4C00(v39, &qword_1004475B0, &OBJC_CLASS___TUConversationLinkDescriptor_ptr);
    v41 = sub_10028EA80();
    BOOL v30 = (char *)Array.description.getter(v41, v40);
    uint64_t v43 = v42;
    sub_1001B0EC0();
    v147 = sub_10028EFEC((uint64_t)v30, v44, v148);
    uint64_t v45 = v34;
    unsigned int v21 = v139;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v147, v45, v31 + 14, v31 + 22);
    sub_10022CCA4(a1);
    uint64_t v46 = v43;
    uint64_t v22 = v142;
    swift_bridgeObjectRelease(v46);
    sub_1001D9094( (void *)&_mh_execute_header,  (os_log_s *)v2,  (os_log_type_t)v29,  "ConversationLinkSync: Sending link update {to: %s, linksToSend: %s}",  (uint8_t *)v31);
    sub_1001D9350(v32);
    sub_1001B0E60(v32);
    sub_1001B0E60(v31);
  }

  else
  {

    sub_10022CCA4(a1);
    sub_10022CCA4(v142);
  }

  if (v21 >> 60 != 15)
  {
    uint64_t v47 = *(void **)(v141 + 72);
    uint64_t v48 = sub_10028EE64();
    sub_1001BB31C(v48, v49);
    v50 = sub_10028EE64();
    v52 = sub_10028EF0C(v50, v51, v22);
    if (v29)
    {
      sub_1001BB464(v19, v21);
      sub_1001B9234();
      sub_1002111A0();
      sub_1001B9234();
      v54 = sub_1002111A0();
      sub_10028EFE4(v54, v55, v56);
      v57 = sub_1001E0A4C();
      v58 = sub_10028EDCC(v57);
      if (!v58)
      {
        sub_10028EF90(v58, v59, v60, v61, v62, v63, v64, v65, v131, v133, v135);

        sub_10028EE70();
        sub_1001F8524();
        sub_10022CCA4(v22);
        sub_1001F8524();
        sub_1001F8524();

        goto LABEL_36;
      }

      v66 = sub_1001B0E78(22LL);
      v67 = (void *)sub_1001B0E78(8LL);
      v143 = sub_1001B0E78(32LL);
      v148[0] = v143;
      *(_DWORD *)v66 = 136315394;
      v68 = sub_1001B9234();
      Set.description.getter(v68, &type metadata for String, &protocol witness table for String);
      v69 = sub_1001B0F5C();
      sub_10028EDAC(v69, v70, v71, v72, v73, v74, v75, v76);
      sub_10028EB00();
      sub_10028EAB4(v77, v78, v79, v80);
      sub_10022CCA4(v22);
      sub_1001E43E0();
      *(_WORD *)(v66 + 12) = 2112;
      sub_1002111A0();
      v81 = sub_10028EE34();
      sub_10028EC74( v81,  v82,  v83,  v66 + 22,  v84,  v85,  v86,  v87,  v131,  v133,  (uint64_t)v135,  v137,  v139,  v141,  v143,  v147);
      *v67 = v81;
      sub_1001F8524();
      sub_1001F8524();
      sub_1001D9094( (void *)&_mh_execute_header,  (os_log_s *)v47,  (os_log_type_t)v30,  "ConversationLinkSync: Failed sending update! {to: %s, error: %@}",  (uint8_t *)v66);
      sub_1001AFF14(&qword_100447E80);
      sub_1001B0F64((uint64_t)v67);
      sub_1001B0E60((uint64_t)v67);
      sub_1001B0F64(v144);
      sub_1001B0E60(v144);
      sub_1001B0E60(v66);

      sub_1001F8524();
    }

    else
    {
      v88 = (uint64_t)v52;
      v89 = v53;
      sub_1001BB464(v19, v21);
      sub_10022CE68(v22);
      v90 = sub_10028EA80();
      sub_10028EFE4(v90, v91, v92);
      v93 = sub_1001B105C();
      v94 = sub_10028EDCC(v93);
      if (!v94)
      {
        sub_10028EF90(v94, v95, v96, v97, v98, v99, v100, v101, v131, v133, v135);

        sub_10028EE70();
        sub_10022CCA4(v89);
        sub_10022CCA4(v22);
        goto LABEL_36;
      }

      v102 = sub_1001B0E78(22LL);
      v145 = sub_1001B0E78(64LL);
      v148[0] = v145;
      *(_DWORD *)v102 = 136315394;
      v103 = sub_1001B9234();
      Set.description.getter(v103, &type metadata for String, &protocol witness table for String);
      v104 = sub_1001B0F5C();
      sub_10028EDAC(v104, v105, v106, v107, v108, v109, v110, v111);
      sub_10028EB00();
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v112, v113, v102 + 4, v114);
      sub_10022CCA4(v22);
      sub_1001E43E0();
      *(_WORD *)(v102 + 12) = 2080;
      sub_10028EA80();
      v116 = sub_1001B1278(v88, v115, v148);
      sub_10028EC74( v116,  v117,  v118,  v102 + 22,  v119,  v120,  v121,  v122,  v131,  v133,  (uint64_t)v135,  v19,  v139,  v141,  v145,  v147);
      sub_10028EAF0(v89);
      sub_1001D9094( (void *)&_mh_execute_header,  (os_log_s *)v47,  (os_log_type_t)v30,  "ConversationLinkSync: Sent link update {to: %s, idsIdentifier: %s}",  (uint8_t *)v102);
      sub_1001D9350(v146);
      sub_1001B0E60(v146);
      sub_1001B0E60(v102);
    }

    v123 = sub_1001BB464(v138, v140);
    sub_10028EF90(v123, v124, v125, v126, v127, v128, v129, v130, v132, v134, v136);
LABEL_36:
    sub_10028EB64();
    return;
  }

    uint64_t v4 = (v9 - 1) & v9;
    uint64_t v7 = __clz(__rbit64(v9)) + (v10 << 6);
    id v3 = v10;
LABEL_20:
    sub_1001D8A64(*(void *)(v2 + 48) + 40 * v7, (uint64_t)__src);
    sub_1001B03FC(*(void *)(v2 + 56) + 32 * v7, (uint64_t)&__src[40]);
    memcpy(__dst, __src, sizeof(__dst));
    sub_1001D8A64((uint64_t)__dst, (uint64_t)&v19);
    sub_1001B03FC((uint64_t)&__dst[40], (uint64_t)v22);
    id v23 = v19;
    int v24 = v20;
    id v25 = v21;
    sub_1001B0438(v22);
    sub_1001C6CE4((uint64_t)__dst, &qword_10044C088);
    if (*((void *)&v24 + 1))
    {
      id v19 = v23;
      int v20 = v24;
      unsigned int v21 = v25;
      if ((swift_isUniquelyReferenced_nonNull_native(v5) & 1) == 0)
      {
        sub_100295434();
        uint64_t v5 = v16;
      }

      uint64_t v12 = v5[2];
      if (v12 >= v5[3] >> 1)
      {
        sub_100295434();
        uint64_t v5 = v17;
      }

      v5[2] = v12 + 1;
      int v13 = &v5[5 * v12];
      uint64_t v14 = v19;
      uint64_t v15 = v20;
      v13[8] = v21;
      *((_OWORD *)v13 + 2) = v14;
      *((_OWORD *)v13 + 3) = v15;
    }

    else
    {
      sub_1001C6CE4((uint64_t)&v23, &qword_10044C090);
    }
  }

  __break(1u);
}

    __break(1u);
    return;
  }

  swift_bridgeObjectRelease(v24);
  if (__OFADD__(*a5, 1LL))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }

  ++*a5;
LABEL_10:
  *a7 = 0LL;
  a7[1] = 0LL;
}

LABEL_62:
  int v39 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", self->_supportsLeaveContext));
  [v3 setObject:v39 forKey:@"supportsLeaveContext"];

  if ((*(_DWORD *)&self->_has & 0x100000) != 0)
  {
LABEL_25:
    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  self->_isUPlusOneScreenSharingAvailable));
    [v3 setObject:v15 forKey:@"isUPlusOneScreenSharingAvailable"];
  }

  self->_visionFeatureVersion = *((_DWORD *)v5 + 21);
  *(_DWORD *)&self->_has |= 0x100u;
  int v13 = *((_DWORD *)v5 + 26);
  if ((v13 & 0x80) == 0)
  {
LABEL_49:
    if ((v13 & 0x200000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_64;
  }

  *((_DWORD *)v23 + 24) = self->_sharePlayProtocolVersion;
  *((_DWORD *)v23 + 32) |= 1u;
  if ((*(_DWORD *)&self->_has & 0x10) != 0)
  {
LABEL_38:
    *((_BYTE *)v23 + 112) = self->_isGFTDowngradeToOneToOneAvailable;
    *((_DWORD *)v23 + 32) |= 0x10u;
  }

        return 0LL;
      default:
        __n128 result = PBReaderSkipValueWithTag(a2);
        if (!(_DWORD)result) {
          return result;
        }
        goto LABEL_60;
    }
  }
}

  sub_1002953B0();
LABEL_29:
  BOOL v34 = *(void *)(*(void *)(v12 + 56) + 8 * v32);
  sub_10023929C();
  while (1)
  {
    uint64_t v35 = *(void *)((v3 & 0xFFFFFFFFFFFFF8LL) + 0x18);
    id v3 = *v1;
    id v36 = *v1 & 0xFFFFFFFFFFFFFF8LL;
    __int16 v37 = *(void *)(v36 + 0x18);
LABEL_54:
    *(void *)(v36 + 16) = v9;
  }

  uint64_t v38 = v37 >> 1;
  int v39 = v36 + 32;
  while (1)
  {
    *(void *)(v39 + 8 * v9++) = v34;
    if (v4)
    {
      id v40 = __clz(__rbit64(v4));
      v4 &= v4 - 1;
      v41 = v40 | (v2 << 6);
      goto LABEL_51;
    }

    uint64_t v42 = v2 + 1;
    if (__OFADD__(v2, 1LL)) {
      break;
    }
    if (v42 >= v33) {
      goto LABEL_55;
    }
    if (!*(void *)(v16 + 8 * v42))
    {
      if (v2 + 2 >= v33) {
        goto LABEL_55;
      }
      if (!*(void *)(v16 + 8 * (v2 + 2)))
      {
        if (v2 + 3 >= v33) {
          goto LABEL_55;
        }
        if (!*(void *)(v16 + 8 * (v2 + 3)))
        {
          if (v2 + 4 >= v33) {
            goto LABEL_55;
          }
          if (!*(void *)(v16 + 8 * (v2 + 4)))
          {
            if (v2 + 5 >= v33) {
              goto LABEL_55;
            }
            if (!*(void *)(v16 + 8 * (v2 + 5)))
            {
              uint64_t v43 = v2 + 6;
              while (v43 < v33)
              {
                if (*(void *)(v16 + 8 * v43++)) {
                  goto LABEL_50;
                }
              }

LABEL_26:
  personaHandshakeuint64_t Data = self->_personaHandshakeData;
  if (personaHandshakeData) {
    [v3 setObject:personaHandshakeData forKey:@"personaHandshakeData"];
  }
  int v17 = self->_has;
  if ((*(_DWORD *)&v17 & 0x20000) != 0)
  {
    uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  self->_isSpatialPersonaEnabled));
    [v3 setObject:v29 forKey:@"isSpatialPersonaEnabled"];

    int v17 = self->_has;
    if ((*(_DWORD *)&v17 & 0x80000) == 0)
    {
LABEL_30:
      if ((*(_WORD *)&v17 & 0x100) == 0) {
        goto LABEL_31;
      }
      goto LABEL_52;
    }
  }

  else if ((*(_DWORD *)&v17 & 0x80000) == 0)
  {
    goto LABEL_30;
  }

  BOOL v30 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  self->_isUPlusOneAVLessAvailable));
  [v3 setObject:v30 forKey:@"isUPlusOneAVLessAvailable"];

  int v17 = self->_has;
  if ((*(_WORD *)&v17 & 0x100) == 0)
  {
LABEL_31:
    if ((*(_BYTE *)&v17 & 0x80) == 0) {
      goto LABEL_32;
    }
    goto LABEL_53;
  }

  if (self->_personaHandshakeData)
  {
    objc_msgSend(v9, "setPersonaHandshakeData:");
    uint64_t v4 = v9;
  }

  objc_super v8 = self->_has;
  if ((*(_DWORD *)&v8 & 0x20000) != 0)
  {
    *((_BYTE *)v4 + 96) = self->_isSpatialPersonaEnabled;
    v4[26] |= 0x20000u;
    objc_super v8 = self->_has;
    if ((*(_DWORD *)&v8 & 0x80000) == 0)
    {
LABEL_30:
      if ((*(_WORD *)&v8 & 0x100) == 0) {
        goto LABEL_31;
      }
      goto LABEL_54;
    }
  }

  else if ((*(_DWORD *)&v8 & 0x80000) == 0)
  {
    goto LABEL_30;
  }

  *((_BYTE *)v4 + 9_Block_object_dispose(va, 8) = self->_isUPlusOneAVLessAvailable;
  v4[26] |= 0x80000u;
  objc_super v8 = self->_has;
  if ((*(_WORD *)&v8 & 0x100) == 0)
  {
LABEL_31:
    if ((*(_BYTE *)&v8 & 0x80) == 0) {
      goto LABEL_32;
    }
    goto LABEL_55;
  }
}

  handle = self->_handle;
  if (handle)
  {
    int v17 = (void *)objc_claimAutoreleasedReturnValue(-[CSDMessagingHandle dictionaryRepresentation](handle, "dictionaryRepresentation"));
    [v4 setObject:v17 forKey:@"handle"];
  }

  if ((*((_BYTE *)&self->_has + 1) & 0x20) != 0)
  {
    __int16 v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", self->_protoSOS));
    [v4 setObject:v18 forKey:@"protoSOS"];
  }

  protoProvider = self->_protoProvider;
  if (protoProvider)
  {
    int v20 = (void *)objc_claimAutoreleasedReturnValue(-[CSDMessagingCallProvider dictionaryRepresentation](protoProvider, "dictionaryRepresentation"));
    [v4 setObject:v20 forKey:@"protoProvider"];
  }

  unsigned int v21 = self->_has;
  if ((*(_DWORD *)&v21 & 0x80000) != 0)
  {
    uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", self->_protoVideo));
    [v4 setObject:v22 forKey:@"protoVideo"];

    unsigned int v21 = self->_has;
  }

  if ((*(_DWORD *)&v21 & 0x40000) != 0)
  {
    id v23 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", self->_protoUplinkMuted));
    [v4 setObject:v23 forKey:@"protoUplinkMuted"];
  }

  protoCallModel = self->_protoCallModel;
  if (protoCallModel)
  {
    id v25 = (void *)objc_claimAutoreleasedReturnValue(-[CSDMessagingCallModel dictionaryRepresentation](protoCallModel, "dictionaryRepresentation"));
    [v4 setObject:v25 forKey:@"protoCallModel"];
  }

  localSenderIdentityUUIDuint64_t String = self->_localSenderIdentityUUIDString;
  if (localSenderIdentityUUIDString) {
    [v4 setObject:localSenderIdentityUUIDString forKey:@"localSenderIdentityUUIDString"];
  }
  if (-[NSMutableArray count](self->_remoteParticipantHandles, "count"))
  {
    int v27 = -[NSMutableArray initWithCapacity:]( objc_alloc(&OBJC_CLASS___NSMutableArray),  "initWithCapacity:",  -[NSMutableArray count](self->_remoteParticipantHandles, "count"));
    v56 = 0u;
    v57 = 0u;
    v58 = 0u;
    v59 = 0u;
    __int16 v28 = self->_remoteParticipantHandles;
    uint64_t v29 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v28,  "countByEnumeratingWithState:objects:count:",  &v56,  v60,  16LL);
    if (v29)
    {
      BOOL v30 = v29;
      __int16 v31 = *(void *)v57;
      do
      {
        for (i = 0LL; i != v30; i = (char *)i + 1)
        {
          if (*(void *)v57 != v31) {
            objc_enumerationMutation(v28);
          }
          __int16 v33 = (void *)objc_claimAutoreleasedReturnValue( objc_msgSend( *(id *)(*((void *)&v56 + 1) + 8 * (void)i),  "dictionaryRepresentation",  (void)v56));
          -[NSMutableArray addObject:](v27, "addObject:", v33);
        }

        BOOL v30 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v28,  "countByEnumeratingWithState:objects:count:",  &v56,  v60,  16LL);
      }

      while (v30);
    }

    [v4 setObject:v27 forKey:@"remoteParticipantHandles"];
  }

  localSenderIdentityAccountUUIDuint64_t String = self->_localSenderIdentityAccountUUIDString;
  if (localSenderIdentityAccountUUIDString) {
    [v4 setObject:localSenderIdentityAccountUUIDString forKey:@"localSenderIdentityAccountUUIDString"];
  }
  uint64_t v35 = self->_has;
  if ((*(_BYTE *)&v35 & 0x40) != 0)
  {
    id v36 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_protoTTYType));
    [v4 setObject:v36 forKey:@"protoTTYType"];

    uint64_t v35 = self->_has;
  }

  if ((*(_DWORD *)&v35 & 0x20000) != 0)
  {
    __int16 v37 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  self->_protoSupportsTTYWithVoice));
    [v4 setObject:v37 forKey:@"protoSupportsTTYWithVoice"];
  }

  isoCountryCode = self->_isoCountryCode;
  if (isoCountryCode) {
    [v4 setObject:isoCountryCode forKey:@"isoCountryCode"];
  }
  int v39 = self->_has;
  if ((*(_BYTE *)&v39 & 4) != 0)
  {
    v54 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_protoOriginatingUIType));
    [v4 setObject:v54 forKey:@"protoOriginatingUIType"];

    int v39 = self->_has;
    if ((*(_WORD *)&v39 & 0x200) == 0)
    {
LABEL_59:
      if ((*(_DWORD *)&v39 & 0x10000) == 0) {
        goto LABEL_61;
      }
      goto LABEL_60;
    }
  }

  else if ((*(_WORD *)&v39 & 0x200) == 0)
  {
    goto LABEL_59;
  }

  v55 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  self->_protoFailureExpected,  (void)v56));
  [v4 setObject:v55 forKey:@"protoFailureExpected"];

  if ((*(_DWORD *)&self->_has & 0x10000) != 0)
  {
LABEL_60:
    id v40 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  self->_protoSupportsEmergencyFallback,  (void)v56));
    [v4 setObject:v40 forKey:@"protoSupportsEmergencyFallback"];
  }

  if (self->_handle)
  {
    objc_msgSend(v16, "setHandle:");
    uint64_t v4 = v16;
  }

  if ((*((_BYTE *)&self->_has + 1) & 0x20) != 0)
  {
    *((_BYTE *)v4 + 142) = self->_protoSOS;
    *((_DWORD *)v4 + 38) |= 0x2000u;
  }

  if (self->_protoProvider)
  {
    objc_msgSend(v16, "setProtoProvider:");
    uint64_t v4 = v16;
  }

  objc_super v8 = self->_has;
  if ((*(_DWORD *)&v8 & 0x80000) != 0)
  {
    *((_BYTE *)v4 + 14_Block_object_dispose(va, 8) = self->_protoVideo;
    *((_DWORD *)v4 + 38) |= 0x80000u;
    objc_super v8 = self->_has;
  }

  if ((*(_DWORD *)&v8 & 0x40000) != 0)
  {
    *((_BYTE *)v4 + 147) = self->_protoUplinkMuted;
    *((_DWORD *)v4 + 38) |= 0x40000u;
  }

  if (self->_protoCallModel) {
    objc_msgSend(v16, "setProtoCallModel:");
  }
  if (self->_localSenderIdentityUUIDString) {
    objc_msgSend(v16, "setLocalSenderIdentityUUIDString:");
  }
  if (-[CSDMessagingCall remoteParticipantHandlesCount](self, "remoteParticipantHandlesCount"))
  {
    [v16 clearRemoteParticipantHandles];
    uint64_t v9 = -[CSDMessagingCall remoteParticipantHandlesCount](self, "remoteParticipantHandlesCount");
    if (v9)
    {
      id v10 = v9;
      for (i = 0LL; i != v10; ++i)
      {
        uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue( -[CSDMessagingCall remoteParticipantHandlesAtIndex:]( self,  "remoteParticipantHandlesAtIndex:",  i));
        [v16 addRemoteParticipantHandles:v12];
      }
    }
  }

  if (self->_localSenderIdentityAccountUUIDString) {
    objc_msgSend(v16, "setLocalSenderIdentityAccountUUIDString:");
  }
  int v13 = self->_has;
  uint64_t v14 = v16;
  if ((*(_BYTE *)&v13 & 0x40) != 0)
  {
    *((_DWORD *)v16 + 27) = self->_protoTTYType;
    *((_DWORD *)v16 + 38) |= 0x40u;
    int v13 = self->_has;
  }

  if ((*(_DWORD *)&v13 & 0x20000) != 0)
  {
    *((_BYTE *)v16 + 146) = self->_protoSupportsTTYWithVoice;
    *((_DWORD *)v16 + 38) |= 0x20000u;
  }

  if (self->_isoCountryCode)
  {
    objc_msgSend(v16, "setIsoCountryCode:");
    uint64_t v14 = v16;
  }

  uint64_t v15 = self->_has;
  if ((*(_BYTE *)&v15 & 4) != 0)
  {
    v14[21] = self->_protoOriginatingUIType;
    v14[38] |= 4u;
    uint64_t v15 = self->_has;
    if ((*(_WORD *)&v15 & 0x200) == 0)
    {
LABEL_54:
      if ((*(_DWORD *)&v15 & 0x10000) == 0) {
        goto LABEL_56;
      }
      goto LABEL_55;
    }
  }

  else if ((*(_WORD *)&v15 & 0x200) == 0)
  {
    goto LABEL_54;
  }

  *((_BYTE *)v14 + 13_Block_object_dispose(va, 8) = self->_protoFailureExpected;
  v14[38] |= 0x200u;
  if ((*(_DWORD *)&self->_has & 0x10000) != 0)
  {
LABEL_55:
    *((_BYTE *)v14 + 145) = self->_protoSupportsEmergencyFallback;
    v14[38] |= 0x10000u;
  }

  handle = self->_handle;
  uint64_t v9 = *((void *)v4 + 5);
  if (handle)
  {
    if (v9) {
      -[CSDMessagingHandle mergeFrom:](handle, "mergeFrom:");
    }
  }

  else if (v9)
  {
    -[CSDMessagingCall setHandle:](self, "setHandle:");
  }

  if ((*((_BYTE *)v4 + 153) & 0x20) != 0)
  {
    self->_protoSOS = *((_BYTE *)v4 + 142);
    *(_DWORD *)&self->_has |= 0x2000u;
  }

  protoProvider = self->_protoProvider;
  id v11 = *((void *)v4 + 11);
  if (protoProvider)
  {
    if (v11) {
      -[CSDMessagingCallProvider mergeFrom:](protoProvider, "mergeFrom:");
    }
  }

  else if (v11)
  {
    -[CSDMessagingCall setProtoProvider:](self, "setProtoProvider:");
  }

  uint64_t v12 = *((_DWORD *)v4 + 38);
  if ((v12 & 0x80000) != 0)
  {
    self->_protoVideo = *((_BYTE *)v4 + 148);
    *(_DWORD *)&self->_has |= 0x80000u;
    uint64_t v12 = *((_DWORD *)v4 + 38);
  }

  if ((v12 & 0x40000) != 0)
  {
    self->_protoUplinkMuted = *((_BYTE *)v4 + 147);
    *(_DWORD *)&self->_has |= 0x40000u;
  }

  protoCallModel = self->_protoCallModel;
  uint64_t v14 = *((void *)v4 + 9);
  if (protoCallModel)
  {
    if (v14) {
      -[CSDMessagingCallModel mergeFrom:](protoCallModel, "mergeFrom:");
    }
  }

  else if (v14)
  {
    -[CSDMessagingCall setProtoCallModel:](self, "setProtoCallModel:");
  }

  if (*((void *)v4 + 8)) {
    -[CSDMessagingCall setLocalSenderIdentityUUIDString:](self, "setLocalSenderIdentityUUIDString:");
  }
  int v24 = 0u;
  id v25 = 0u;
  uint64_t v22 = 0u;
  id v23 = 0u;
  uint64_t v15 = *((id *)v4 + 14);
  int v16 = [v15 countByEnumeratingWithState:&v22 objects:v26 count:16];
  if (v16)
  {
    int v17 = v16;
    __int16 v18 = *(void *)v23;
    do
    {
      for (i = 0LL; i != v17; i = (char *)i + 1)
      {
        if (*(void *)v23 != v18) {
          objc_enumerationMutation(v15);
        }
        -[CSDMessagingCall addRemoteParticipantHandles:]( self,  "addRemoteParticipantHandles:",  *(void *)(*((void *)&v22 + 1) + 8LL * (void)i),  (void)v22);
      }

      int v17 = [v15 countByEnumeratingWithState:&v22 objects:v26 count:16];
    }

    while (v17);
  }

  if (*((void *)v4 + 7)) {
    -[CSDMessagingCall setLocalSenderIdentityAccountUUIDString:](self, "setLocalSenderIdentityAccountUUIDString:");
  }
  int v20 = *((_DWORD *)v4 + 38);
  if ((v20 & 0x40) != 0)
  {
    self->_protoTTYType = *((_DWORD *)v4 + 27);
    *(_DWORD *)&self->_has |= 0x40u;
    int v20 = *((_DWORD *)v4 + 38);
  }

  if ((v20 & 0x20000) != 0)
  {
    self->_protoSupportsTTYWithVoice = *((_BYTE *)v4 + 146);
    *(_DWORD *)&self->_has |= 0x20000u;
  }

  if (*((void *)v4 + 6)) {
    -[CSDMessagingCall setIsoCountryCode:](self, "setIsoCountryCode:");
  }
  unsigned int v21 = *((_DWORD *)v4 + 38);
  if ((v21 & 4) != 0)
  {
    self->_protoOriginatingUIType = *((_DWORD *)v4 + 21);
    *(_DWORD *)&self->_has |= 4u;
    unsigned int v21 = *((_DWORD *)v4 + 38);
    if ((v21 & 0x200) == 0)
    {
LABEL_77:
      if ((v21 & 0x10000) == 0) {
        goto LABEL_79;
      }
      goto LABEL_78;
    }
  }

  else if ((v21 & 0x200) == 0)
  {
    goto LABEL_77;
  }

  self->_protoFailureExpected = *((_BYTE *)v4 + 138);
  *(_DWORD *)&self->_has |= 0x200u;
  if ((*((_DWORD *)v4 + 38) & 0x10000) != 0)
  {
LABEL_78:
    self->_protoSupportsEmergencyFallback = *((_BYTE *)v4 + 145);
    *(_DWORD *)&self->_has |= 0x10000u;
  }
}

  return v11;
}

  (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
  if (!v8) {
    *((_BYTE *)a1 + v7) = 0;
  }
  return a1;
}

                  swift_bridgeObjectRetain(v7);
                  sub_1001B1164();
                  sub_1001B0F4C();
                  return;
                }
              }
            }
          }
        }
      }

  __break(1u);
}

  __break(1u);
  return result;
}

  __break(1u);
  return result;
}

    id v19 = (v27 - 1) & v27;
    int v20 = __clz(__rbit64(v27)) + (v21 << 6);
LABEL_27:
    __int16 v26 = *(id *)(*(void *)(v5 + 48) + 8 * v20);
    if (v26)
    {
      while (1)
      {
        uint64_t v35 = v26;
        sub_1001D5318(&v35, (uint64_t)a2);

        if (v3) {
          break;
        }
        int v13 = v21;
        uint64_t v14 = v19;
        if ((v5 & 0x8000000000000000LL) == 0) {
          goto LABEL_11;
        }
LABEL_13:
        uint64_t v22 = __CocoaSet.Iterator.next()(v11);
        if (v22)
        {
          id v23 = v22;
          __int16 v33 = v22;
          sub_1001D8EA0(0LL, &qword_100448F90, &OBJC_CLASS___TUConversation_ptr);
          id v25 = v24;
          swift_unknownObjectRetain(v23);
          swift_dynamicCast(&v35, &v33, (char *)&type metadata for Swift.AnyObject + 8, v25, 7LL);
          __int16 v26 = v35;
          swift_unknownObjectRelease(v23);
          unsigned int v21 = v13;
          id v19 = v14;
          if (v26) {
            continue;
          }
        }

        goto LABEL_38;
      }

      BOOL v30 = v5;
      goto LABEL_39;
    }

  __break(1u);
  return result;
}

            uint64_t v22 = 0LL;
            unsigned int v21 = 0LL;
            goto LABEL_27;
          }

          int v17 = 2LL;
        }
      }

  __break(1u);
  return result;
}

    id v19 = (v26 - 1) & v26;
    int v20 = __clz(__rbit64(v26)) + (v21 << 6);
LABEL_27:
    id v25 = *(id *)(*(void *)(v6 + 48) + 8 * v20);
    if (v25)
    {
      while (1)
      {
        uint64_t v35 = v25;
        sub_100275910(&v35, a2, (uint64_t)a3);

        if (v4) {
          break;
        }
        int v13 = v21;
        uint64_t v14 = v19;
        if ((v6 & 0x8000000000000000LL) == 0) {
          goto LABEL_11;
        }
LABEL_13:
        uint64_t v22 = __CocoaSet.Iterator.next()(v11);
        if (v22)
        {
          id v23 = v22;
          __int16 v33 = v22;
          int v24 = type metadata accessor for ActivitySession(0LL);
          swift_unknownObjectRetain(v23);
          swift_dynamicCast(&v35, &v33, (char *)&type metadata for Swift.AnyObject + 8, v24, 7LL);
          id v25 = v35;
          swift_unknownObjectRelease(v23);
          unsigned int v21 = v13;
          id v19 = v14;
          if (v25) {
            continue;
          }
        }

        goto LABEL_38;
      }

      uint64_t v29 = v6;
      goto LABEL_39;
    }

  swift_bridgeObjectRelease(a1);
  return 0LL;
}

    sub_1002AB730();
    uint64_t v5 = v19 & v18;
    objc_super v8 = v21 + (v20 << 6);
    uint64_t v6 = v20;
  }

  while (!__OFADD__(v15, 1LL))
  {
    sub_1002AB560();
    if (v10 == v11) {
      goto LABEL_38;
    }
    uint64_t v15 = v17 + 1;
    if (*(void *)(v33 + 8 * v16)) {
      goto LABEL_26;
    }
  }

    sub_1002AB730();
    uint64_t v5 = v19 & v18;
    objc_super v8 = v21 + (v20 << 6);
    uint64_t v6 = v20;
  }

  while (!__OFADD__(v15, 1LL))
  {
    sub_1002AB560();
    if (v10 == v11) {
      goto LABEL_38;
    }
    uint64_t v15 = v17 + 1;
    if (*(void *)(v36 + 8 * v16)) {
      goto LABEL_26;
    }
  }

LABEL_52:
  __int16 v31 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_visionFeatureVersion));
  [v3 setObject:v31 forKey:@"visionFeatureVersion"];

  int v17 = self->_has;
  if ((*(_BYTE *)&v17 & 0x80) == 0)
  {
LABEL_32:
    if ((*(_DWORD *)&v17 & 0x200000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_54;
  }

    uint64_t v6 = 0;
  }

  contactIdentifier = self->_contactIdentifier;
  if (contactIdentifier) {
    [v3 setObject:contactIdentifier forKey:@"contactIdentifier"];
  }
  protoCallCapabilitiesState = self->_protoCallCapabilitiesState;
  if (protoCallCapabilitiesState)
  {
    __int16 v33 = (void *)objc_claimAutoreleasedReturnValue( -[CSDMessagingCallCapabilitiesState dictionaryRepresentation]( protoCallCapabilitiesState,  "dictionaryRepresentation"));
    [v3 setObject:v33 forKey:@"protoCallCapabilitiesState"];
  }

  BOOL v34 = self->_has;
  if ((*(_WORD *)&v34 & 0x100) != 0)
  {
    uint64_t v35 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_protoSoundRegion));
    [v3 setObject:v35 forKey:@"protoSoundRegion"];

    BOOL v34 = self->_has;
  }

  if ((*(_DWORD *)&v34 & 0x10000) != 0)
  {
    id v36 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", self->_protoEmergency));
    [v3 setObject:v36 forKey:@"protoEmergency"];
  }

  otherUniqueProxyIdentifiers = self->_otherUniqueProxyIdentifiers;
  if (otherUniqueProxyIdentifiers) {
    [v3 setObject:otherUniqueProxyIdentifiers forKey:@"otherUniqueProxyIdentifiers"];
  }
  protoCallModel = self->_protoCallModel;
  if (protoCallModel)
  {
    int v39 = (void *)objc_claimAutoreleasedReturnValue(-[CSDMessagingCallModel dictionaryRepresentation](protoCallModel, "dictionaryRepresentation"));
    [v3 setObject:v39 forKey:@"protoCallModel"];
  }

  handle = self->_handle;
  if (handle)
  {
    v41 = (void *)objc_claimAutoreleasedReturnValue(-[CSDMessagingHandle dictionaryRepresentation](handle, "dictionaryRepresentation"));
    [v3 setObject:v41 forKey:@"handle"];
  }

  if ((*((_BYTE *)&self->_has + 2) & 0x20) != 0)
  {
    uint64_t v42 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", self->_protoSOS));
    [v3 setObject:v42 forKey:@"protoSOS"];
  }

  if (-[NSMutableArray count](self->_providers, "count"))
  {
    uint64_t v44 = -[NSMutableArray initWithCapacity:]( objc_alloc(&OBJC_CLASS___NSMutableArray),  "initWithCapacity:",  -[NSMutableArray count](self->_providers, "count"));
    v163 = 0u;
    v164 = 0u;
    v165 = 0u;
    v166 = 0u;
    uint64_t v45 = self->_providers;
    uint64_t v46 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v45,  "countByEnumeratingWithState:objects:count:",  &v163,  v177,  16LL);
    if (v46)
    {
      uint64_t v47 = v46;
      uint64_t v48 = *(void *)v164;
      do
      {
        for (j = 0LL; j != v47; j = (char *)j + 1)
        {
          if (*(void *)v164 != v48) {
            objc_enumerationMutation(v45);
          }
          v50 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v163 + 1) + 8 * (void)j) dictionaryRepresentation]);
          -[NSMutableArray addObject:](v44, "addObject:", v50);
        }

        uint64_t v47 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v45,  "countByEnumeratingWithState:objects:count:",  &v163,  v177,  16LL);
      }

      while (v47);
    }

    [v3 setObject:v44 forKey:@"providers"];
  }

  protoDisplayContext = self->_protoDisplayContext;
  if (protoDisplayContext)
  {
    v52 = (void *)objc_claimAutoreleasedReturnValue( -[CSDMessagingCallDisplayContext dictionaryRepresentation]( protoDisplayContext,  "dictionaryRepresentation"));
    [v3 setObject:v52 forKey:@"protoDisplayContext"];
  }

  inviteuint64_t Data = self->_inviteData;
  if (inviteData)
  {
    v54 = (void *)objc_claimAutoreleasedReturnValue( -[CSDMessagingAVConferenceInviteData dictionaryRepresentation]( inviteData,  "dictionaryRepresentation"));
    [v3 setObject:v54 forKey:@"inviteData"];
  }

  protoProvider = self->_protoProvider;
  if (protoProvider)
  {
    v56 = (void *)objc_claimAutoreleasedReturnValue(-[CSDMessagingCallProvider dictionaryRepresentation](protoProvider, "dictionaryRepresentation"));
    [v3 setObject:v56 forKey:@"protoProvider"];
  }

  v57 = self->_has;
  if ((*(_DWORD *)&v57 & 0x8000000) != 0)
  {
    v78 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", self->_protoVideo));
    [v3 setObject:v78 forKey:@"protoVideo"];

    v57 = self->_has;
    if ((*(_DWORD *)&v57 & 0x4000000) == 0)
    {
LABEL_85:
      if ((*(_DWORD *)&v57 & 0x100000) == 0) {
        goto LABEL_86;
      }
      goto LABEL_118;
    }
  }

  else if ((*(_DWORD *)&v57 & 0x4000000) == 0)
  {
    goto LABEL_85;
  }

  v79 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", self->_protoUplinkMuted));
  [v3 setObject:v79 forKey:@"protoUplinkMuted"];

  v57 = self->_has;
  if ((*(_DWORD *)&v57 & 0x100000) == 0)
  {
LABEL_86:
    if ((*(_WORD *)&v57 & 0x1000) == 0) {
      goto LABEL_88;
    }
    goto LABEL_87;
  }

  if (self->_screenSharingRequest)
  {
    objc_msgSend(v23, "setScreenSharingRequest:");
    int v20 = v23;
  }

  uint64_t v22 = self->_has;
  if ((*(_WORD *)&v22 & 0x8000) == 0)
  {
    if ((*(_DWORD *)&v22 & 0x20000) == 0) {
      goto LABEL_56;
    }
LABEL_71:
    v20[125] = self->_supportsRequestToScreenShare;
    *((_DWORD *)v20 + 32) |= 0x20000u;
    if ((*(_DWORD *)&self->_has & 0x200) == 0) {
      goto LABEL_58;
    }
    goto LABEL_57;
  }

  v20[123] = self->_isUPlusOneVisionToVisionAvailable;
  *((_DWORD *)v20 + 32) |= 0x8000u;
  uint64_t v22 = self->_has;
  if ((*(_DWORD *)&v22 & 0x20000) != 0) {
    goto LABEL_71;
  }
LABEL_56:
  if ((*(_WORD *)&v22 & 0x200) != 0)
  {
LABEL_57:
    v20[117] = self->_isPhotosSharePlayAvailable;
    *((_DWORD *)v20 + 32) |= 0x200u;
  }

  return v22;
}

  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

    v56 = 0LL;
    v99 = 0u;
    v100 = 0u;
    v98 = 0u;
LABEL_53:
    sub_10028E61C((uint64_t)&v98, (uint64_t)&v102, (uint64_t *)&unk_100448E60);
    v67 = (void *)*((void *)&v102 + 1);
    if (!*((void *)&v102 + 1))
    {
      swift_release(v52);
      v51 = v88;
      v41 = v84;
      if (v88 == v86) {
        goto LABEL_59;
      }
      goto LABEL_31;
    }

    v68 = v102;
    sub_1001B03EC(v91, &v98);
    v96 = 2105376LL;
    v97 = 0xE300000000000000LL;
    v69._countAndFlagsBits = v68;
    v69._object = v67;
    String.append(_:)(v69);
    sub_1001E43E0();
    v70._countAndFlagsBits = 540949792LL;
    v70._object = (void *)0xE400000000000000LL;
    String.append(_:)(v70);
    sub_1001B03FC((uint64_t)&v98, (uint64_t)&v92);
    v71._countAndFlagsBits = String.init<A>(describing:)(&v92, (char *)&type metadata for Any + 8);
    String.append(_:)(v71);
    sub_1001B0F5C();
    sub_10028EB4C();
    sub_10028EFD8(v96);
    sub_1001B0F5C();
    sub_1001B0438(&v98);
    if (v56) {
      goto LABEL_33;
    }
  }

  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
}

LABEL_53:
  unsigned int v32 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_visionCallEstablishmentVersion));
  [v3 setObject:v32 forKey:@"visionCallEstablishmentVersion"];

  int v17 = self->_has;
  if ((*(_DWORD *)&v17 & 0x200000) == 0)
  {
LABEL_33:
    if ((*(_DWORD *)&v17 & 0x800000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_55;
  }

      id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[CSDConversation delegate](self, "delegate"));
      v41 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation localParticipant](self, "localParticipant"));
      -[os_log_s conversation:didChangeLocalParticipant:broadcastActivitySession:]( v10,  "conversation:didChangeLocalParticipant:broadcastActivitySession:",  self,  v41,  1LL);

LABEL_54:
      goto LABEL_55;
    }

    __int16 v33 = sub_1001704C4();
    BOOL v34 = (os_log_s *)objc_claimAutoreleasedReturnValue(v33);
    if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR)) {
      sub_1002B2538(self);
    }
  }

  else
  {
    int v16 = sub_1001704C4();
    int v17 = (os_log_s *)objc_claimAutoreleasedReturnValue(v16);
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
      sub_1002B25C0();
    }

    +[CSDCrashReporter simulateCrashReportWithFormat:]( &OBJC_CLASS___CSDCrashReporter,  "simulateCrashReportWithFormat:",  @"Received update callback for participant type without being joined into a conversation. Please file a bug to [FaceTime | (New Bugs)]");
  }

  return v6;
}

      v102 = (v105 - 1) & v105;
      v103 = __clz(__rbit64(v105)) + (v18 << 6);
LABEL_54:
      uint64_t v22 = (unint64_t *)*(id *)(*(void *)(v92 + 48) + 8 * v103);
      if (v22) {
        goto LABEL_55;
      }
      goto LABEL_66;
    }

    __break(1u);
LABEL_92:
    swift_once(&qword_1004468E0, sub_1001F6E34);
  }

  __int16 v33 = v32;
  v235 = _swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)(v32);
  if ((v31 & 0xC000000000000001LL) != 0)
  {
    if (v31 < 0) {
      BOOL v34 = v31;
    }
    else {
      BOOL v34 = v31 & 0xFFFFFFFFFFFFFF8LL;
    }
    uint64_t v35 = __CocoaSet.startIndex.getter(v34);
    __int16 v37 = 1;
  }

  else
  {
    uint64_t v35 = sub_100250EEC(v31);
    __int16 v37 = v59 & 1;
  }

  v232 = v35;
  v233 = v36;
  v234 = v37;
  if (v33 < 0)
  {
    __break(1u);
    goto LABEL_94;
  }

  if (v31 < 0) {
    v60 = v31;
  }
  else {
    v60 = v31 & 0xFFFFFFFFFFFFFF8LL;
  }
  while (1)
  {
    v61 = v232;
    v62 = v233;
    v63 = v234;
    v64 = sub_1001F8790();
    sub_100250EB0(v64, v65, v66, v67);
    v69 = v68;
    v70 = [v68 handle];

    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v71);
    v72 = v235[2];
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v72);
    v73 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v72, v70);
    specialized ContiguousArray._endMutation()(v73);
    if ((v31 & 0xC000000000000001LL) != 0) {
      break;
    }
    v76 = sub_1001F8790();
    v80 = sub_100250B3C(v76, v77, v78, v79);
    v82 = v81;
    v84 = v83;
    sub_1001D8CA0(v61, v62, v63);
    v232 = v80;
    v233 = v82;
    v234 = v84 & 1;
LABEL_28:
    if (!--v33)
    {
      sub_1001D8CA0(v232, v233, v234);
      v58 = v235;
      sub_1001B0EB8();
      goto LABEL_30;
    }
  }

  if ((v63 & 1) != 0)
  {
    v74 = __CocoaSet.Index.handleBitPattern.getter(v61, v62);
    if (v74) {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v74);
    }
    else {
      isUniquelyReferenced_nonNull_native = 1LL;
    }
    v85 = sub_1001AFF14(&qword_100448BF0);
    v86 = (void (*)(void *, void))Set.Index._asCocoa.modify(v237, v85);
    __CocoaSet.formIndex(after:isUnique:)(v87, isUniquelyReferenced_nonNull_native, v60);
    v86(v237, 0LL);
    goto LABEL_28;
  }

  __break(1u);
}

LABEL_54:
  __int16 v33 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  self->_isUPlusOneVisionToVisionAvailable));
  [v3 setObject:v33 forKey:@"isUPlusOneVisionToVisionAvailable"];

  int v17 = self->_has;
  if ((*(_DWORD *)&v17 & 0x800000) == 0)
  {
LABEL_34:
    if ((*(_BYTE *)&v17 & 0x20) == 0) {
      goto LABEL_35;
    }
    goto LABEL_56;
  }

  PBDataWriterWriteUint32Field(v12, self->_visionFeatureVersion, 22LL);
  id v11 = self->_has;
  if ((*(_BYTE *)&v11 & 0x80) == 0)
  {
LABEL_32:
    if ((*(_DWORD *)&v11 & 0x200000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_56;
  }

  v4[21] = self->_visionFeatureVersion;
  v4[26] |= 0x100u;
  objc_super v8 = self->_has;
  if ((*(_BYTE *)&v8 & 0x80) == 0)
  {
LABEL_32:
    if ((*(_DWORD *)&v8 & 0x200000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_56;
  }

        return 0LL;
      default:
        __n128 result = PBReaderSkipValueWithTag(a2);
        if (!(_DWORD)result) {
          return result;
        }
        goto LABEL_52;
    }
  }

  v62 = -[NSString copyWithZone:](self->_localSenderIdentityUUIDString, "copyWithZone:", a3);
  v63 = (void *)v6[22];
  v6[22] = v62;

  v154 = 0u;
  v155 = 0u;
  v152 = 0u;
  v153 = 0u;
  v64 = self->_remoteParticipantHandles;
  v65 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v64,  "countByEnumeratingWithState:objects:count:",  &v152,  v174,  16LL);
  if (v65)
  {
    v66 = v65;
    v67 = *(void *)v153;
    do
    {
      v68 = 0LL;
      do
      {
        if (*(void *)v153 != v67) {
          objc_enumerationMutation(v64);
        }
        v69 = [*(id *)(*((void *)&v152 + 1) + 8 * (void)v68) copyWithZone:a3];
        [v6 addRemoteParticipantHandles:v69];

        v68 = (char *)v68 + 1;
      }

      while (v66 != v68);
      v66 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v64,  "countByEnumeratingWithState:objects:count:",  &v152,  v174,  16LL);
    }

    while (v66);
  }

  v70 = -[NSString copyWithZone:](self->_localSenderIdentityAccountUUIDString, "copyWithZone:", a3);
  v71 = (void *)v6[21];
  v6[21] = v70;

  v72 = self->_has;
  if ((*(_WORD *)&v72 & 0x200) != 0)
  {
    *((_DWORD *)v6 + 74) = self->_protoTTYType;
    *((_DWORD *)v6 + 100) |= 0x200u;
    v72 = self->_has;
    if ((*(_DWORD *)&v72 & 0x2000000) == 0)
    {
LABEL_63:
      if ((*(_WORD *)&v72 & 0x800) == 0) {
        goto LABEL_65;
      }
      goto LABEL_64;
    }
  }

  else if ((*(_DWORD *)&v72 & 0x2000000) == 0)
  {
    goto LABEL_63;
  }

  *((_BYTE *)v6 + 395) = self->_protoSupportsTTYWithVoice;
  *((_DWORD *)v6 + 100) |= 0x2000000u;
  if ((*(_DWORD *)&self->_has & 0x800) != 0)
  {
LABEL_64:
    *((_DWORD *)v6 + 82) = self->_requestActionType;
    *((_DWORD *)v6 + 100) |= 0x800u;
  }

  v41 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", self->_supportsAudioOnly));
  [v4 setObject:v41 forKey:@"supportsAudioOnly"];

  has = (char)self->_has;
  if ((has & 4) == 0)
  {
LABEL_11:
    if ((has & 0x10) == 0) {
      goto LABEL_12;
    }
    goto LABEL_56;
  }

  participantAssociation = self->_participantAssociation;
  if (participantAssociation)
  {
    v41 = (void *)objc_claimAutoreleasedReturnValue( -[CSDMessagingConversationParticipantAssociation dictionaryRepresentation]( participantAssociation,  "dictionaryRepresentation"));
    [v3 setObject:v41 forKey:@"participantAssociation"];
  }

  if ((*((_BYTE *)&self->_has + 1) & 0x10) != 0)
  {
    uint64_t v42 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  self->_isUPlusNDowngradeAvailable));
    [v3 setObject:v42 forKey:@"isUPlusNDowngradeAvailable"];
  }

  collaborationIdentifier = self->_collaborationIdentifier;
  if (collaborationIdentifier) {
    [v3 setObject:collaborationIdentifier forKey:@"collaborationIdentifier"];
  }
  uint64_t v44 = self->_has;
  if ((*(_DWORD *)&v44 & 0x10000) != 0)
  {
    v56 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", self->_supportsLeaveContext));
    [v3 setObject:v56 forKey:@"supportsLeaveContext"];

    uint64_t v44 = self->_has;
    if ((*(_WORD *)&v44 & 0x4000) == 0)
    {
LABEL_62:
      if ((*(_WORD *)&v44 & 0x800) == 0) {
        goto LABEL_63;
      }
      goto LABEL_81;
    }
  }

  else if ((*(_WORD *)&v44 & 0x4000) == 0)
  {
    goto LABEL_62;
  }

  v57 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  self->_isUPlusOneScreenSharingAvailable,  (void)v63));
  [v3 setObject:v57 forKey:@"isUPlusOneScreenSharingAvailable"];

  uint64_t v44 = self->_has;
  if ((*(_WORD *)&v44 & 0x800) == 0)
  {
LABEL_63:
    if ((*(_WORD *)&v44 & 0x2000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_82;
  }

  *((_BYTE *)v6 + 127) = self->_videoEnabled;
  *((_DWORD *)v6 + 32) |= 0x80000u;
  id v36 = self->_has;
  if ((*(_BYTE *)&v36 & 1) == 0)
  {
LABEL_36:
    if ((*(_BYTE *)&v36 & 0x10) == 0) {
      goto LABEL_38;
    }
    goto LABEL_37;
  }

  participantAssociation = self->_participantAssociation;
  __int16 v28 = *((void *)v5 + 9);
  if (participantAssociation)
  {
    if (v28) {
      -[CSDMessagingConversationParticipantAssociation mergeFrom:](participantAssociation, "mergeFrom:");
    }
  }

  else if (v28)
  {
    -[CSDMessagingConversationParticipantDidJoinContext setParticipantAssociation:](self, "setParticipantAssociation:");
  }

  if ((*((_BYTE *)v5 + 129) & 0x10) != 0)
  {
    self->_isUPlusNDowngradeAvailable = *((_BYTE *)v5 + 120);
    *(_DWORD *)&self->_has |= 0x1000u;
  }

  if (*((void *)v5 + 2)) {
    -[CSDMessagingConversationParticipantDidJoinContext setCollaborationIdentifier:]( self,  "setCollaborationIdentifier:");
  }
  uint64_t v29 = *((_DWORD *)v5 + 32);
  if ((v29 & 0x10000) != 0)
  {
    self->_supportsLeaveContext = *((_BYTE *)v5 + 124);
    *(_DWORD *)&self->_has |= 0x10000u;
    uint64_t v29 = *((_DWORD *)v5 + 32);
    if ((v29 & 0x4000) == 0)
    {
LABEL_70:
      if ((v29 & 0x800) == 0) {
        goto LABEL_71;
      }
      goto LABEL_80;
    }
  }

  else if ((v29 & 0x4000) == 0)
  {
    goto LABEL_70;
  }

  self->_isUPlusOneScreenSharingAvailable = *((_BYTE *)v5 + 122);
  *(_DWORD *)&self->_has |= 0x4000u;
  uint64_t v29 = *((_DWORD *)v5 + 32);
  if ((v29 & 0x800) == 0)
  {
LABEL_71:
    if ((v29 & 0x2000) == 0) {
      goto LABEL_72;
    }
    goto LABEL_81;
  }

  v81 = sub_1001DBDC4((uint64_t)&unk_1003DF6C8);
  sub_1001DBDE4(v81, (uint64_t)sub_1001DBCC0);
  if ((sub_1001DBE50() & 1) == 0)
  {
    sub_1001DBDAC();
    isEscapingClosureAtFileLocation = v114;
  }

  sub_1001DBE18();
  if (v67)
  {
    sub_1001DBDD0();
    v85 = v82;
  }

  sub_1001DBE2C(v82, v83, v84, v85);
  *(void *)(v86 + 32) = sub_1001DBDA8;
  *(void *)(v86 + 40) = v81;
  if ((a2 & 0x200000) == 0)
  {
LABEL_36:
    if ((a2 & 0x400000) == 0) {
      goto LABEL_37;
    }
LABEL_64:
    v93 = sub_1001DBDC4((uint64_t)&unk_1003DF678);
    sub_1001DBDE4(v93, (uint64_t)sub_1001DBC94);
    if ((sub_1001DBE50() & 1) == 0)
    {
      sub_1001DBDAC();
      isEscapingClosureAtFileLocation = v116;
    }

    v95 = *(void *)(isEscapingClosureAtFileLocation + 16);
    v94 = *(void *)(isEscapingClosureAtFileLocation + 24);
    v60 = isEscapingClosureAtFileLocation;
    v61 = v95 + 1;
    if (v95 >= v94 >> 1)
    {
      sub_1002B0188();
      v60 = v117;
    }

    *(void *)(v60 + 16) = v61;
    v96 = v60 + 16 * v95;
    *(void *)(v96 + 32) = sub_1001DBDA8;
    *(void *)(v96 + 40) = v93;
    goto LABEL_69;
  }

              sub_1001B4B8C(v2);
              return;
            }
          }
        }
      }
    }

LABEL_55:
  BOOL v34 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  self->_supportsRequestToScreenShare));
  [v3 setObject:v34 forKey:@"supportsRequestToScreenShare"];

  int v17 = self->_has;
  if ((*(_BYTE *)&v17 & 0x20) == 0)
  {
LABEL_35:
    if ((*(_WORD *)&v17 & 0x8000) == 0) {
      goto LABEL_36;
    }
LABEL_57:
    id v36 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  self->_isPhotosSharePlayAvailable));
    [v3 setObject:v36 forKey:@"isPhotosSharePlayAvailable"];

    if ((*(_DWORD *)&self->_has & 8) == 0) {
      return v3;
    }
    goto LABEL_58;
  }

  PBDataWriterWriteUint32Field(v12, self->_visionCallEstablishmentVersion, 23LL);
  id v11 = self->_has;
  if ((*(_DWORD *)&v11 & 0x200000) == 0)
  {
LABEL_33:
    if ((*(_DWORD *)&v11 & 0x800000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_57;
  }

  v4[20] = self->_visionCallEstablishmentVersion;
  v4[26] |= 0x80u;
  objc_super v8 = self->_has;
  if ((*(_DWORD *)&v8 & 0x200000) == 0)
  {
LABEL_33:
    if ((*(_DWORD *)&v8 & 0x800000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_57;
  }
}
}

  uint64_t v42 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", self->_supportsAudioAndVideo));
  [v4 setObject:v42 forKey:@"supportsAudioAndVideo"];

  has = (char)self->_has;
  if ((has & 0x10) == 0)
  {
LABEL_12:
    if ((has & 0x40) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }

  *((_DWORD *)v6 + 24) = self->_sharePlayProtocolVersion;
  *((_DWORD *)v6 + 32) |= 1u;
  if ((*(_DWORD *)&self->_has & 0x10) != 0)
  {
LABEL_37:
    *((_BYTE *)v6 + 112) = self->_isGFTDowngradeToOneToOneAvailable;
    *((_DWORD *)v6 + 32) |= 0x10u;
  }

              *(void *)((*v1 & 0xFFFFFFFFFFFFF8LL) + 0x10) = v9;
              goto LABEL_56;
            }
          }
        }
      }
    }

  if (v148)
  {
    v116 = v148;
    sub_1002AB438();
    sub_1002AB6FC();
    sub_1002AB47C();
    v117 = v159[0];
    v159[0] = v156[0];
  }

  else
  {
    v118 = (void *)sub_1001CA024(0xD000000000000018LL, 0x80000001003782C0LL, v159[0]);
    if (!v118) {
      goto LABEL_60;
    }
    v119 = v118;
    sub_1002AB438();
    sub_1002AB6FC();
    sub_1002AB47C();
    v120 = v159[0];
    v159[0] = v156[0];

    v117 = v120;
  }

  v118 = (void *)swift_bridgeObjectRelease(v117);
LABEL_60:
  sub_1001B115C((uint64_t)v118, "isHostedOnCurrentDevice");
  v121 = sub_1002AB444();
  sub_1002AB830(v121);
  sub_1002AB438();
  sub_1002AB658();
  sub_10020051C();
  v122 = sub_1002AB428();
  sub_1001B115C(v122, "providerEndedReason");
  v123 = sub_1002AB444();
  sub_10028EA98(v123, "initWithInteger:");
  sub_1002AB438();
  v156[0] = v159[0];
  v159[0] = p_opt_inst_meths;
  sub_10020051C();
  sub_1002AB428();
  sub_1002AA994(a1);
  v124 = sub_1002AB444();
  sub_10028EA98(v124, "initWithInteger:");
  sub_1002AB438();
  sub_1002AB53C();
  sub_1002AB728();
  v125 = sub_1002AB428();
  sub_1001B115C(v125, "disconnectedReason");
  v126 = sub_1002AB444();
  sub_1002AB830(v126);
  sub_1002AB438();
  sub_1002AB53C();
  sub_10020051C();
  sub_1002AB428();
  if (v74[292] != (__objc2_meth_list *)-1LL) {
LABEL_74:
  }
    swift_once(&qword_100446920, sub_1002589D4);
  v127 = sub_1001B0E98();
  v128 = sub_1001B0D98(v127, (uint64_t)qword_100454180);
  v131 = (os_log_s *)Logger.logObject.getter(v128, v129, v130);
  v132 = static os_log_type_t.default.getter(v131);
  if (os_log_type_enabled(v131, v132))
  {
    v133 = (uint8_t *)sub_1001B0E78(12LL);
    v134 = sub_1001B0E78(32LL);
    v156[0] = v134;
    *(_DWORD *)v133 = 136315138;
    sub_1001B0E80((uint64_t)v159, (uint64_t)&v157, 0LL);
    v135 = swift_bridgeObjectRetain(v159[0]);
    v136 = Dictionary.description.getter(v135, &type metadata for String, v145, &protocol witness table for String);
    v138 = v137;
    sub_1001E43E0();
    v154 = sub_1001D7CF0(v136, v138, v156);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v154, &v155, v133 + 4, v133 + 12);
    sub_1001B92A4();
    sub_1001B0FD8((void *)&_mh_execute_header, v131, v132, "Returning ca event: %s", v133);
    sub_1001B0F64(v134);
    sub_1001B0E60(v134);
    sub_1001B0E60((uint64_t)v133);
  }

  sub_1001B0E80((uint64_t)v159, (uint64_t)v156, 0LL);
}

LABEL_56:
  uint64_t v35 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_spatialPersonaGenerationCounter));
  [v3 setObject:v35 forKey:@"spatialPersonaGenerationCounter"];

  int v17 = self->_has;
  if ((*(_WORD *)&v17 & 0x8000) != 0) {
    goto LABEL_57;
  }
LABEL_36:
  if ((*(_BYTE *)&v17 & 8) == 0) {
    return v3;
  }
LABEL_58:
  presentationMode = self->_presentationMode;
  if (presentationMode >= 3) {
    uint64_t v38 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)",  self->_presentationMode));
  }
  else {
    uint64_t v38 = *(&off_1003D7950 + presentationMode);
  }
  [v3 setObject:v38 forKey:@"presentationMode"];

  return v3;
}

  PBDataWriterWriteBOOLField(v12, self->_isUPlusOneVisionToVisionAvailable, 24LL);
  id v11 = self->_has;
  if ((*(_DWORD *)&v11 & 0x800000) == 0)
  {
LABEL_34:
    if ((*(_BYTE *)&v11 & 0x20) == 0) {
      goto LABEL_35;
    }
    goto LABEL_58;
  }

  *((_BYTE *)v4 + 100) = self->_isUPlusOneVisionToVisionAvailable;
  v4[26] |= 0x200000u;
  objc_super v8 = self->_has;
  if ((*(_DWORD *)&v8 & 0x800000) == 0)
  {
LABEL_34:
    if ((*(_BYTE *)&v8 & 0x20) == 0) {
      goto LABEL_35;
    }
    goto LABEL_58;
  }

        goto LABEL_32;
      }

      id v40 = (void *)objc_claimAutoreleasedReturnValue(-[__CFString value](v34, "value"));
      v41 = [v40 destinationIdIsTemporary];

      if (v41)
      {
        v61 = sub_1001704C4();
        v54 = (os_log_s *)objc_claimAutoreleasedReturnValue(v61);
        if (os_log_type_enabled(v54, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412290;
          v69 = v34;
          v60 = "handle is temporary: %@";
          goto LABEL_55;
        }

        goto LABEL_56;
      }
    }

    int v27 = [obj countByEnumeratingWithState:&v64 objects:v72 count:16];
    if (v27) {
      continue;
    }
    break;
  }

  uint64_t v43 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", self->_supportsEmergency));
  [v4 setObject:v43 forKey:@"supportsEmergency"];

  if ((*(_BYTE *)&self->_has & 0x40) != 0)
  {
LABEL_13:
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", self->_supportsVoicemail));
    [v4 setObject:v9 forKey:@"supportsVoicemail"];
  }

  PBDataWriterWriteBOOLField(v5, self->_supportsAudioOnly, 6LL);
  has = (char)self->_has;
  if ((has & 4) == 0)
  {
LABEL_11:
    if ((has & 0x10) == 0) {
      goto LABEL_12;
    }
    goto LABEL_58;
  }

  self->_supportsAudioOnly = *((_BYTE *)v4 + 121);
  *(_BYTE *)&self->_has |= 8u;
  uint64_t v5 = *((_BYTE *)v4 + 128);
  if ((v5 & 4) == 0)
  {
LABEL_11:
    if ((v5 & 0x10) == 0) {
      goto LABEL_12;
    }
    goto LABEL_58;
  }

  if (self->_groupUUIDString)
  {
    objc_msgSend(v16, "setGroupUUIDString:");
    uint64_t v14 = v16;
  }

  if ((*((_BYTE *)&self->_has + 1) & 0x80) != 0)
  {
    *((_BYTE *)v14 + 144) = self->_protoSupportsDTMFUpdates;
    v14[38] |= 0x8000u;
  }
}

  int v20 = 0LL;
LABEL_57:
  unsigned int v21 = -[NSString hash](self->_groupUUIDString, "hash");
  if ((*((_BYTE *)&self->_has + 1) & 0x80) != 0) {
    uint64_t v22 = 2654435761LL * self->_protoSupportsDTMFUpdates;
  }
  else {
    uint64_t v22 = 0LL;
  }
  return v47 ^ v48 ^ v46 ^ v45 ^ v44 ^ v43 ^ v42 ^ v41 ^ v40 ^ v39 ^ v38 ^ v37 ^ v36 ^ v35 ^ v34 ^ v33 ^ v32 ^ v31 ^ v30 ^ v29 ^ v28 ^ v27 ^ v26 ^ v25 ^ v24 ^ v12 ^ v14 ^ v15 ^ v16 ^ v18 ^ v19 ^ v20 ^ v21 ^ v22;
}

        v57 = sub_1001704C4();
        uint64_t v29 = (id)objc_claimAutoreleasedReturnValue(v57);
        if (os_log_type_enabled((os_log_t)v29, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v29,  OS_LOG_TYPE_DEFAULT,  "[WARN] Aborting Thumper registration; could not obtain sender identity UUID.",
            buf,
            2u);
        }

        goto LABEL_61;
      }

      if (v41)
      {
        *(_WORD *)buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v35,  OS_LOG_TYPE_DEFAULT,  "[WARN] Aborting Thumper registration; multiple sender identities exist but caller ID not supplied",
          buf,
          2u);
      }
    }

    else
    {
      BOOL v34 = sub_1001704C4();
      uint64_t v35 = (os_log_s *)objc_claimAutoreleasedReturnValue(v34);
      if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR)) {
        sub_1002B4DF4(v66, v35);
      }
    }

    goto LABEL_56;
  }

  if (![v20 isEqualToString:@"CSDPinExchangeActionSendPIN"])
  {
    if ([v20 isEqualToString:@"CSDPinExchangeActionOneTimeReminder"])
    {
      -[CSDPinExchangeDelegate resetOneTimeMessage](self->_pinExchangeDelegate, "resetOneTimeMessage");
      goto LABEL_62;
    }

    if ([v20 isEqualToString:@"CSDPinExchangeActionApproved"])
    {
      unsigned int v32 = self;
      __int16 v33 = 1LL;
    }

    else
    {
      if (![v20 isEqualToString:@"CSDPinExchangeActionUnapproved"])
      {
        if (![v20 isEqualToString:@"CSDPinExchangeActionCancelledPrimary"])
        {
          unsigned int v32 = self;
          __int16 v33 = 0LL;
          id v36 = 1LL;
          __int16 v37 = v17;
          uint64_t v38 = 0LL;
          goto LABEL_25;
        }

        unsigned int v32 = self;
        __int16 v33 = 0LL;
        id v36 = 1LL;
LABEL_24:
        __int16 v37 = v17;
        uint64_t v38 = 1LL;
LABEL_25:
        -[CSDPinExchangeController handlePINCodeEnteredSuccessfully:canceled:fromDevice:isPrimaryDevice:]( v32,  "handlePINCodeEnteredSuccessfully:canceled:fromDevice:isPrimaryDevice:",  v33,  v36,  v37,  v38);
        goto LABEL_62;
      }

      unsigned int v32 = self;
      __int16 v33 = 0LL;
    }

    id v36 = 0LL;
    goto LABEL_24;
  }

  int v24 = (os_log_s *)objc_claimAutoreleasedReturnValue([v15 objectForKey:@"CSDPinExchangePinKey"]);
  pinExchangeDelegate = self->_pinExchangeDelegate;
  v68[0] = _NSConcreteStackBlock;
  v68[1] = 3221225472LL;
  v68[2] = sub_1000BBEEC;
  v68[3] = &unk_1003D7CD8;
  v68[4] = self;
  -[CSDPinExchangeDelegate displayIncomingPinCode:fromID:completionHandler:]( pinExchangeDelegate,  "displayIncomingPinCode:fromID:completionHandler:",  v24,  v11,  v68);
LABEL_9:

LABEL_62:
}

    uint64_t v15 = v59;
  }
}

          uint64_t v35 = *(unsigned int *)(v29 + 36);
          goto LABEL_57;
        }

        uint64_t v45 = 1LL;
      }

  v139 = sub_1001F0E20(v84, "wantsHoldMusic");
  if ((_DWORD)v139)
  {
    v139 = sub_1001F0E20((uint64_t)v139, "status");
    if ((_DWORD)v139 == 1)
    {
      v139 = sub_1001F0E20((uint64_t)v139, "isConnected");
      if ((_DWORD)v139) {
        *((_BYTE *)v80 + (void)v82) = 0;
      }
    }
  }

  v140 = sub_1001F0E20((uint64_t)v139, "status");
  v141 = (os_log_s *)v89;
  if ((sub_10027D5D0(v45, (uint64_t)v82) & 1) != 0)
  {
    v142 = *((unsigned __int8 *)v80 + (void)v82);
    if (qword_100446940 != -1) {
      swift_once(&qword_100446940, sub_100258A50);
    }
    v143 = sub_1001B0E98();
    sub_1001B0D98(v143, (uint64_t)qword_1004541E0);
    v144 = sub_10027E0CC();
    swift_retain_n(v89, 2LL);
    v145 = v144;
    sub_10022D0E8();
    v146 = sub_1001B105C();
    if (sub_1001BB5B0(v146))
    {
      LODWORD(v206) = v142 ^ 1;
      v147 = sub_1001B0E78(52LL);
      v148 = sub_1001B0E78(160LL);
      v208 = v148;
      v215 = v148;
      *(_DWORD *)v147 = 136316162;
      v149 = sub_1001B115C(v148, "uniqueProxyIdentifier");
      LODWORD(v207) = (_DWORD)v80;
      v150 = v89;
      v151 = v149;
      v152 = static String._unconditionallyBridgeFromObjectiveC(_:)(v149);
      v154 = v153;

      v213 = v152;
      v214 = v154;
      v155 = String.init<A>(reflecting:)(&v213, &type metadata for String);
      v213 = sub_10027E044(v155, v156);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v213, &v214, v147 + 4, v147 + 12);

      sub_1001B0EC0();
      *(_WORD *)(v147 + 12) = 2080;
      LOBYTE(v213) = v192;
      v157 = sub_10027DFF4();
      v159 = v158;
      v160 = sub_10027E044(v157, v158);
      sub_10027DFC4(v160, v161, v162, v147 + 22);
      swift_release_n(v150, 2LL);
      swift_bridgeObjectRelease(v159);
      *(_WORD *)(v147 + 22) = 2080;
      LOBYTE(v213) = [v144 shouldSuppressRingtone];
      v163 = sub_10027DFF4();
      v165 = v164;
      v166 = sub_10027E044(v163, v164);
      sub_10027DFC4(v166, v167, v168, v147 + 32);

      swift_bridgeObjectRelease(v165);
      *(_WORD *)(v147 + 32) = 2080;
      LOBYTE(v213) = v206 & 1;
      v169 = sub_10027DFF4();
      v171 = v170;
      v172 = sub_10027E044(v169, v170);
      sub_10027DFC4(v172, v173, v174, v147 + 42);
      v175 = v171;
      v82 = v209;
      swift_bridgeObjectRelease(v175);
      *(_WORD *)(v147 + 42) = 2080;
      LOBYTE(v213) = 0;
      v176 = sub_10027DFF4();
      v178 = sub_10027E044(v176, v177);
      sub_10027DFC4(v178, v179, v180, v147 + 52);
      sub_1001B0EC0();
      _os_log_impl( (void *)&_mh_execute_header,  v141,  (os_log_type_t)v207,  "Not creating interruption for call with upi:%s, deviceSupportsRingtone: %s shouldSuppressRingtone: %s  holdMusic Descriptor: %s  hasDisclosureDescriptor: %s",  (uint8_t *)v147,  0x34u);
      v181 = v208;
      swift_arrayDestroy(v208, 5LL);
      sub_1001B0E60(v181);
      sub_1001B0E60(v147);

      sub_10027E04C();
    }

    else
    {

      sub_10027E04C();
      swift_release_n(v89, 2LL);
    }

    sub_10027E070(v210, v186, v187, (uint64_t)v211);
    v185 = (uint64_t)v82;
  }

  else
  {

    sub_10027E04C();
    sub_10027E08C((uint64_t)v82);
    v182 = sub_10027E07C();
    sub_1001A9670(v182, v183, v184, (uint64_t)v211);
    v185 = (uint64_t)v82;
  }

  sub_10020E8B0(v185, type metadata accessor for AudioDescriptor);
}

uint64_t sub_100012E30(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0LL;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1LL || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0LL;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0LL;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        char v12 = 0;
        unsigned int v13 = 0;
        uint64_t v14 = 0LL;
        *(_DWORD *)(a1 + 104) |= 0x40u;
        while (1)
        {
          unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v15 == -1LL || v15 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v16 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
          v14 |= (unint64_t)(v16 & 0x7F) << v12;
          if ((v16 & 0x80) == 0) {
            goto LABEL_198;
          }
          v12 += 7;
          BOOL v9 = v13++ >= 9;
          if (v9)
          {
            LODWORD(v14) = 0;
            goto LABEL_200;
          }
        }

        *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_198:
        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_200:
        uint64_t v132 = 76LL;
        goto LABEL_294;
      case 2u:
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0LL;
        *(_DWORD *)(a1 + 104) |= 1u;
        while (2)
        {
          unint64_t v21 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v21 == -1LL || v21 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v22 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v21);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v21 + 1;
            v20 |= (unint64_t)(v22 & 0x7F) << v18;
            if (v22 < 0)
            {
              v18 += 7;
              BOOL v9 = v19++ >= 9;
              if (v9)
              {
                uint64_t v20 = 0LL;
                goto LABEL_204;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v20 = 0LL;
        }
LABEL_204:
        *(void *)(a1 + _Block_object_dispose(va, 8) = v20;
        goto LABEL_295;
      case 3u:
        id v23 = objc_alloc_init(&OBJC_CLASS___CSDMessagingHandle);
        objc_storeStrong((id *)(a1 + 40), v23);
        goto LABEL_103;
      case 4u:
        uint64_t Data = PBReaderReadData(a2);
        uint64_t v25 = objc_claimAutoreleasedReturnValue(Data);
        uint64_t v26 = 32LL;
        goto LABEL_133;
      case 5u:
        char v27 = 0;
        unsigned int v28 = 0;
        uint64_t v29 = 0LL;
        *(_DWORD *)(a1 + 104) |= 0x2000u;
        while (2)
        {
          unint64_t v30 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v30 == -1LL || v30 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v31 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v30);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v30 + 1;
            v29 |= (unint64_t)(v31 & 0x7F) << v27;
            if (v31 < 0)
            {
              v27 += 7;
              BOOL v9 = v28++ >= 9;
              if (v9)
              {
                uint64_t v29 = 0LL;
                goto LABEL_208;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v29 = 0LL;
        }
LABEL_208:
        BOOL v133 = v29 != 0;
        uint64_t v134 = 92LL;
        goto LABEL_289;
      case 6u:
        char v32 = 0;
        unsigned int v33 = 0;
        uint64_t v34 = 0LL;
        *(_DWORD *)(a1 + 104) |= 0x10000u;
        while (2)
        {
          unint64_t v35 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v35 == -1LL || v35 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v36 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v35);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v35 + 1;
            v34 |= (unint64_t)(v36 & 0x7F) << v32;
            if (v36 < 0)
            {
              v32 += 7;
              BOOL v9 = v33++ >= 9;
              if (v9)
              {
                uint64_t v34 = 0LL;
                goto LABEL_212;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v34 = 0LL;
        }
LABEL_212:
        BOOL v133 = v34 != 0;
        uint64_t v134 = 95LL;
        goto LABEL_289;
      case 7u:
        char v37 = 0;
        unsigned int v38 = 0;
        uint64_t v39 = 0LL;
        *(_DWORD *)(a1 + 104) |= 0x800u;
        while (2)
        {
          unint64_t v40 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v40 == -1LL || v40 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v41 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v40);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v40 + 1;
            v39 |= (unint64_t)(v41 & 0x7F) << v37;
            if (v41 < 0)
            {
              v37 += 7;
              BOOL v9 = v38++ >= 9;
              if (v9)
              {
                uint64_t v39 = 0LL;
                goto LABEL_216;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v39 = 0LL;
        }
LABEL_216:
        BOOL v133 = v39 != 0;
        uint64_t v134 = 90LL;
        goto LABEL_289;
      case 8u:
        char v42 = 0;
        unsigned int v43 = 0;
        uint64_t v44 = 0LL;
        *(_DWORD *)(a1 + 104) |= 0x4000u;
        while (2)
        {
          unint64_t v45 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v45 == -1LL || v45 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v46 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v45);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v45 + 1;
            v44 |= (unint64_t)(v46 & 0x7F) << v42;
            if (v46 < 0)
            {
              v42 += 7;
              BOOL v9 = v43++ >= 9;
              if (v9)
              {
                uint64_t v44 = 0LL;
                goto LABEL_220;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v44 = 0LL;
        }
LABEL_220:
        BOOL v133 = v44 != 0;
        uint64_t v134 = 93LL;
        goto LABEL_289;
      case 9u:
        char v47 = 0;
        unsigned int v48 = 0;
        uint64_t v49 = 0LL;
        *(_DWORD *)(a1 + 104) |= 0x1000u;
        while (2)
        {
          unint64_t v50 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v50 == -1LL || v50 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v51 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v50);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v50 + 1;
            v49 |= (unint64_t)(v51 & 0x7F) << v47;
            if (v51 < 0)
            {
              v47 += 7;
              BOOL v9 = v48++ >= 9;
              if (v9)
              {
                uint64_t v49 = 0LL;
                goto LABEL_224;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v49 = 0LL;
        }
LABEL_224:
        BOOL v133 = v49 != 0;
        uint64_t v134 = 91LL;
        goto LABEL_289;
      case 0xAu:
        char v52 = 0;
        unsigned int v53 = 0;
        uint64_t v14 = 0LL;
        *(_DWORD *)(a1 + 104) |= 0x10u;
        while (2)
        {
          unint64_t v54 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v54 == -1LL || v54 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v55 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v54);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v54 + 1;
            v14 |= (unint64_t)(v55 & 0x7F) << v52;
            if (v55 < 0)
            {
              v52 += 7;
              BOOL v9 = v53++ >= 9;
              if (v9)
              {
                LODWORD(v14) = 0;
                goto LABEL_228;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_228:
        uint64_t v132 = 68LL;
        goto LABEL_294;
      case 0xBu:
        char v56 = 0;
        unsigned int v57 = 0;
        uint64_t v14 = 0LL;
        *(_DWORD *)(a1 + 104) |= 4u;
        while (2)
        {
          unint64_t v58 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v58 == -1LL || v58 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v59 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v58);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v58 + 1;
            v14 |= (unint64_t)(v59 & 0x7F) << v56;
            if (v59 < 0)
            {
              v56 += 7;
              BOOL v9 = v57++ >= 9;
              if (v9)
              {
                LODWORD(v14) = 0;
                goto LABEL_232;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_232:
        uint64_t v132 = 48LL;
        goto LABEL_294;
      case 0xCu:
        char v60 = 0;
        unsigned int v61 = 0;
        uint64_t v62 = 0LL;
        *(_DWORD *)(a1 + 104) |= 0x400u;
        while (2)
        {
          unint64_t v63 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v63 == -1LL || v63 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v64 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v63);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v63 + 1;
            v62 |= (unint64_t)(v64 & 0x7F) << v60;
            if (v64 < 0)
            {
              v60 += 7;
              BOOL v9 = v61++ >= 9;
              if (v9)
              {
                uint64_t v62 = 0LL;
                goto LABEL_236;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v62 = 0LL;
        }
LABEL_236:
        BOOL v133 = v62 != 0;
        uint64_t v134 = 89LL;
        goto LABEL_289;
      case 0xDu:
        char v65 = 0;
        unsigned int v66 = 0;
        uint64_t v67 = 0LL;
        *(_DWORD *)(a1 + 104) |= 0x200u;
        while (2)
        {
          unint64_t v68 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v68 == -1LL || v68 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v69 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v68);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v68 + 1;
            v67 |= (unint64_t)(v69 & 0x7F) << v65;
            if (v69 < 0)
            {
              v65 += 7;
              BOOL v9 = v66++ >= 9;
              if (v9)
              {
                uint64_t v67 = 0LL;
                goto LABEL_240;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v67 = 0LL;
        }
LABEL_240:
        BOOL v133 = v67 != 0;
        uint64_t v134 = 88LL;
        goto LABEL_289;
      case 0xEu:
        id v23 = objc_alloc_init(&OBJC_CLASS___CSDMessagingConversationParticipantAssociation);
        objc_storeStrong((id *)(a1 + 16), v23);
        if (PBReaderPlaceMark(a2, v135) && (sub_100006758((uint64_t)v23, a2) & 1) != 0)
        {
LABEL_103:
          PBReaderRecallMark(a2, v135);

LABEL_295:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }

LABEL_297:
        return 0LL;
      case 0xFu:
        char v70 = 0;
        unsigned int v71 = 0;
        uint64_t v72 = 0LL;
        *(_DWORD *)(a1 + 104) |= 0x40000u;
        while (2)
        {
          unint64_t v73 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v73 == -1LL || v73 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v74 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v73);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v73 + 1;
            v72 |= (unint64_t)(v74 & 0x7F) << v70;
            if (v74 < 0)
            {
              v70 += 7;
              BOOL v9 = v71++ >= 9;
              if (v9)
              {
                uint64_t v72 = 0LL;
                goto LABEL_244;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v72 = 0LL;
        }
LABEL_244:
        BOOL v133 = v72 != 0;
        uint64_t v134 = 97LL;
        goto LABEL_289;
      case 0x10u:
        char v75 = 0;
        unsigned int v76 = 0;
        uint64_t v14 = 0LL;
        *(_DWORD *)(a1 + 104) |= 2u;
        while (2)
        {
          unint64_t v77 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v77 == -1LL || v77 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v78 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v77);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v77 + 1;
            v14 |= (unint64_t)(v78 & 0x7F) << v75;
            if (v78 < 0)
            {
              v75 += 7;
              BOOL v9 = v76++ >= 9;
              if (v9)
              {
                LODWORD(v14) = 0;
                goto LABEL_248;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_248:
        uint64_t v132 = 24LL;
        goto LABEL_294;
      case 0x11u:
        char v79 = 0;
        unsigned int v80 = 0;
        uint64_t v81 = 0LL;
        *(_DWORD *)(a1 + 104) |= 0x400000u;
        while (2)
        {
          unint64_t v82 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v82 == -1LL || v82 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v83 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v82);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v82 + 1;
            v81 |= (unint64_t)(v83 & 0x7F) << v79;
            if (v83 < 0)
            {
              v79 += 7;
              BOOL v9 = v80++ >= 9;
              if (v9)
              {
                uint64_t v81 = 0LL;
                goto LABEL_252;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v81 = 0LL;
        }
LABEL_252:
        BOOL v133 = v81 != 0;
        uint64_t v134 = 101LL;
        goto LABEL_289;
      case 0x12u:
        char v84 = 0;
        unsigned int v85 = 0;
        uint64_t v86 = 0LL;
        *(_DWORD *)(a1 + 104) |= 0x100000u;
        while (2)
        {
          unint64_t v87 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v87 == -1LL || v87 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v88 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v87);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v87 + 1;
            v86 |= (unint64_t)(v88 & 0x7F) << v84;
            if (v88 < 0)
            {
              v84 += 7;
              BOOL v9 = v85++ >= 9;
              if (v9)
              {
                uint64_t v86 = 0LL;
                goto LABEL_256;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v86 = 0LL;
        }
LABEL_256:
        BOOL v133 = v86 != 0;
        uint64_t v134 = 99LL;
        goto LABEL_289;
      case 0x13u:
        uint64_t v89 = PBReaderReadData(a2);
        uint64_t v25 = objc_claimAutoreleasedReturnValue(v89);
        uint64_t v26 = 56LL;
LABEL_133:
        v90 = *(void **)(a1 + v26);
        *(void *)(a1 + v26) = v25;

        goto LABEL_295;
      case 0x14u:
        char v91 = 0;
        unsigned int v92 = 0;
        uint64_t v93 = 0LL;
        *(_DWORD *)(a1 + 104) |= 0x20000u;
        while (2)
        {
          unint64_t v94 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v94 == -1LL || v94 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v95 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v94);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v94 + 1;
            v93 |= (unint64_t)(v95 & 0x7F) << v91;
            if (v95 < 0)
            {
              v91 += 7;
              BOOL v9 = v92++ >= 9;
              if (v9)
              {
                uint64_t v93 = 0LL;
                goto LABEL_260;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v93 = 0LL;
        }
LABEL_260:
        BOOL v133 = v93 != 0;
        uint64_t v134 = 96LL;
        goto LABEL_289;
      case 0x15u:
        char v96 = 0;
        unsigned int v97 = 0;
        uint64_t v98 = 0LL;
        *(_DWORD *)(a1 + 104) |= 0x80000u;
        while (2)
        {
          unint64_t v99 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v99 == -1LL || v99 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v100 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v99);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v99 + 1;
            v98 |= (unint64_t)(v100 & 0x7F) << v96;
            if (v100 < 0)
            {
              v96 += 7;
              BOOL v9 = v97++ >= 9;
              if (v9)
              {
                uint64_t v98 = 0LL;
                goto LABEL_264;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v98 = 0LL;
        }
LABEL_264:
        BOOL v133 = v98 != 0;
        uint64_t v134 = 98LL;
        goto LABEL_289;
      case 0x16u:
        char v101 = 0;
        unsigned int v102 = 0;
        uint64_t v14 = 0LL;
        *(_DWORD *)(a1 + 104) |= 0x100u;
        while (2)
        {
          unint64_t v103 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v103 == -1LL || v103 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v104 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v103);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v103 + 1;
            v14 |= (unint64_t)(v104 & 0x7F) << v101;
            if (v104 < 0)
            {
              v101 += 7;
              BOOL v9 = v102++ >= 9;
              if (v9)
              {
                LODWORD(v14) = 0;
                goto LABEL_268;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_268:
        uint64_t v132 = 84LL;
        goto LABEL_294;
      case 0x17u:
        char v105 = 0;
        unsigned int v106 = 0;
        uint64_t v14 = 0LL;
        *(_DWORD *)(a1 + 104) |= 0x80u;
        while (2)
        {
          unint64_t v107 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v107 == -1LL || v107 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v108 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v107);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v107 + 1;
            v14 |= (unint64_t)(v108 & 0x7F) << v105;
            if (v108 < 0)
            {
              v105 += 7;
              BOOL v9 = v106++ >= 9;
              if (v9)
              {
                LODWORD(v14) = 0;
                goto LABEL_272;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_272:
        uint64_t v132 = 80LL;
        goto LABEL_294;
      case 0x18u:
        char v109 = 0;
        unsigned int v110 = 0;
        uint64_t v111 = 0LL;
        *(_DWORD *)(a1 + 104) |= 0x200000u;
        while (2)
        {
          unint64_t v112 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v112 == -1LL || v112 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v113 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v112);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v112 + 1;
            v111 |= (unint64_t)(v113 & 0x7F) << v109;
            if (v113 < 0)
            {
              v109 += 7;
              BOOL v9 = v110++ >= 9;
              if (v9)
              {
                uint64_t v111 = 0LL;
                goto LABEL_276;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v111 = 0LL;
        }
LABEL_276:
        BOOL v133 = v111 != 0;
        uint64_t v134 = 100LL;
        goto LABEL_289;
      case 0x19u:
        char v114 = 0;
        unsigned int v115 = 0;
        uint64_t v116 = 0LL;
        *(_DWORD *)(a1 + 104) |= 0x800000u;
        while (2)
        {
          unint64_t v117 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v117 == -1LL || v117 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v118 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v117);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v117 + 1;
            v116 |= (unint64_t)(v118 & 0x7F) << v114;
            if (v118 < 0)
            {
              v114 += 7;
              BOOL v9 = v115++ >= 9;
              if (v9)
              {
                uint64_t v116 = 0LL;
                goto LABEL_280;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v116 = 0LL;
        }
LABEL_280:
        BOOL v133 = v116 != 0;
        uint64_t v134 = 102LL;
        goto LABEL_289;
      case 0x1Au:
        char v119 = 0;
        unsigned int v120 = 0;
        uint64_t v14 = 0LL;
        *(_DWORD *)(a1 + 104) |= 0x20u;
        while (2)
        {
          unint64_t v121 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v121 == -1LL || v121 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v122 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v121);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v121 + 1;
            v14 |= (unint64_t)(v122 & 0x7F) << v119;
            if (v122 < 0)
            {
              v119 += 7;
              BOOL v9 = v120++ >= 9;
              if (v9)
              {
                LODWORD(v14) = 0;
                goto LABEL_284;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_284:
        uint64_t v132 = 72LL;
        goto LABEL_294;
      case 0x1Bu:
        char v123 = 0;
        unsigned int v124 = 0;
        uint64_t v125 = 0LL;
        *(_DWORD *)(a1 + 104) |= 0x8000u;
        while (2)
        {
          unint64_t v126 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v126 == -1LL || v126 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v127 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v126);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v126 + 1;
            v125 |= (unint64_t)(v127 & 0x7F) << v123;
            if (v127 < 0)
            {
              v123 += 7;
              BOOL v9 = v124++ >= 9;
              if (v9)
              {
                uint64_t v125 = 0LL;
                goto LABEL_288;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v125 = 0LL;
        }
LABEL_288:
        BOOL v133 = v125 != 0;
        uint64_t v134 = 94LL;
LABEL_289:
        *(_BYTE *)(a1 + v134) = v133;
        goto LABEL_295;
      case 0x1Cu:
        char v128 = 0;
        unsigned int v129 = 0;
        uint64_t v14 = 0LL;
        *(_DWORD *)(a1 + 104) |= 8u;
        while (2)
        {
          unint64_t v130 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v130 == -1LL || v130 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v131 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v130);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v130 + 1;
            v14 |= (unint64_t)(v131 & 0x7F) << v128;
            if (v131 < 0)
            {
              v128 += 7;
              BOOL v9 = v129++ >= 9;
              if (v9)
              {
                LODWORD(v14) = 0;
                goto LABEL_293;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_293:
        uint64_t v132 = 64LL;
LABEL_294:
        *(_DWORD *)(a1 + v132) = v14;
        goto LABEL_295;
      default:
        uint64_t result = PBReaderSkipValueWithTag(a2);
        if (!(_DWORD)result) {
          return result;
        }
        goto LABEL_295;
    }
  }

          v268 = sub_1001704C4();
          v269 = (os_log_s *)objc_claimAutoreleasedReturnValue(v268);
          if (os_log_type_enabled(v269, OS_LOG_TYPE_DEFAULT))
          {
            v270 = [v264 fromServer];
            v271 = (void *)objc_claimAutoreleasedReturnValue( +[NSDate dateWithTimeIntervalSinceNow:]( &OBJC_CLASS___NSDate,  "dateWithTimeIntervalSinceNow:",  -30.0));
            v272 = (void *)objc_claimAutoreleasedReturnValue([v358 serverDate]);
            v273 = [v271 compare:v272];
            *(_DWORD *)buf = 67109634;
            *(_DWORD *)v435 = v270;
            *(_WORD *)&v435[4] = 1024;
            *(_DWORD *)&v435[6] = v273 == (id)1;
            *(_WORD *)v436 = 2112;
            v274 = v372;
            *(void *)&v436[2] = v372;

            v244 = v346;
            v275 = 0LL;
LABEL_299:
            v276 = v357;
            goto LABEL_302;
          }

          v275 = 0LL;
          goto LABEL_301;
        }

        v235 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversationManager conversationProviderManager](v178, "conversationProviderManager"));
        v236 = (void *)objc_claimAutoreleasedReturnValue([v14 providerIdentifier]);
        v231 = (void *)objc_claimAutoreleasedReturnValue([v235 tuConversationProviderForIdentifier:v236]);

        v237 = sub_1001704C4();
        v238 = (os_log_s *)objc_claimAutoreleasedReturnValue(v237);
        if (os_log_type_enabled(v238, OS_LOG_TYPE_DEFAULT))
        {
          v239 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s UUID](v372, "UUID"));
          *(_DWORD *)buf = 138412546;
          *(void *)v435 = v239;
          *(_WORD *)&v435[8] = 2112;
          *(void *)v436 = v231;
          _os_log_impl( (void *)&_mh_execute_header,  v238,  OS_LOG_TYPE_DEFAULT,  "Updating provider on conversation with UUID %@ with provider %@",  buf,  0x16u);
        }

        -[os_log_s setProvider:](v372, "setProvider:", v231);
        unsigned int v13 = v358;
LABEL_265:

        goto LABEL_266;
      }

      if (!v356)
      {
        v181 = sub_1001704C4();
        v182 = (os_log_s *)objc_claimAutoreleasedReturnValue(v181);
        unsigned int v13 = v358;
        if (os_log_type_enabled(v182, OS_LOG_TYPE_ERROR)) {
          sub_1002B6844();
        }

        v345 = (os_log_s *)objc_claimAutoreleasedReturnValue([v363 setByAddingObjectsFromSet:v44]);
        v183 = sub_1001704C4();
        v184 = (os_log_s *)objc_claimAutoreleasedReturnValue(v183);
        unint64_t v103 = v350;
        if (os_log_type_enabled(v184, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412546;
          *(void *)v435 = v368;
          *(_WORD *)&v435[8] = 2112;
          *(void *)v436 = v345;
          _os_log_impl( (void *)&_mh_execute_header,  v184,  OS_LOG_TYPE_DEFAULT,  "activeLocalHandles: %@, remoteAndLightweightMembers: %@",  buf,  0x16u);
        }

        v372 = 0LL;
        goto LABEL_370;
      }

      v337 = v159;
      v165 = (os_log_s *)objc_claimAutoreleasedReturnValue([v22 tuConversationLink]);
      v166 = (void *)objc_claimAutoreleasedReturnValue([v22 reportData]);
      v340 = (void *)objc_claimAutoreleasedReturnValue([v166 tuConversationReport]);

      v371 = 0LL;
      unsigned int v13 = v358;
      v345 = v165;
      if (-[CSDConversationManager _linksEnabled](v369, "_linksEnabled") && v165)
      {
        v167 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s pseudonym](v165, "pseudonym"));
        v168 = (void *)objc_claimAutoreleasedReturnValue( -[CSDConversationManager pendingConversationWithPseudonym:]( v369,  "pendingConversationWithPseudonym:",  v167));

        if (v168)
        {
          if ([v168 letMeInRequestState] != (id)2
            || (v169 = (void *)objc_claimAutoreleasedReturnValue([v168 conversationGroupUUID]),
                v170 = [v169 isEqual:v354],
                v169,
                !v170))
          {
            v185 = sub_1001704C4();
            v186 = (os_log_s *)objc_claimAutoreleasedReturnValue(v185);
            if (os_log_type_enabled(v186, OS_LOG_TYPE_DEFAULT))
            {
              v187 = (void *)objc_claimAutoreleasedReturnValue([v168 conversationGroupUUID]);
              else {
                v188 = @"YES";
              }
              v189 = [v168 letMeInRequestState];
              *(_DWORD *)buf = 138412802;
              if (v189 == (id)2) {
                v190 = @"NO";
              }
              else {
                v190 = @"YES";
              }
              char v22 = v357;
              uint64_t v14 = v359;
              *(void *)v435 = v168;
              *(_WORD *)&v435[8] = 2114;
              *(void *)v436 = v188;
              *(_WORD *)&v436[8] = 2114;
              v437 = v190;
              _os_log_impl( (void *)&_mh_execute_header,  v186,  OS_LOG_TYPE_DEFAULT,  "Pending conversation %@ found, but the groupUUID does not match (%{public}@) or the let me in request st ate is not Requested (%{public}@)",  buf,  0x20u);
            }

            v372 = 0LL;
            unsigned int v13 = v358;
            goto LABEL_369;
          }

          v171 = sub_1001704C4();
          v172 = (os_log_s *)objc_claimAutoreleasedReturnValue(v171);
          if (os_log_type_enabled(v172, OS_LOG_TYPE_DEFAULT))
          {
            v173 = (void *)objc_claimAutoreleasedReturnValue([v168 conversationGroupUUID]);
            *(_DWORD *)buf = 138412290;
            *(void *)v435 = v173;
            _os_log_impl( (void *)&_mh_execute_header,  v172,  OS_LOG_TYPE_DEFAULT,  "Identified let me in approval for pending conversation group UUID: %@",  buf,  0xCu);
          }

          [v168 setLetMeInRequestState:3];
          v371 = [v168 letMeInRequestState];
          v174 = objc_claimAutoreleasedReturnValue([v168 temporaryGroupUUID]);

          unsigned int v13 = v358;
          int v24 = v354;
          v339 = (void *)v174;
          if (v174)
          {
LABEL_204:
            v332 = [v22 resolvedPresentationMode];
            v191 = sub_1001704C4();
            v192 = (os_log_s *)objc_claimAutoreleasedReturnValue(v191);
            if (os_log_type_enabled(v192, OS_LOG_TYPE_DEFAULT))
            {
              v193 = @"YES";
              if (!v337) {
                v193 = @"NO";
              }
              *(_DWORD *)buf = 138543362;
              *(void *)v435 = v193;
              _os_log_impl( (void *)&_mh_execute_header,  v192,  OS_LOG_TYPE_DEFAULT,  "Determined video for new conversation should be %{public}@",  buf,  0xCu);
            }

            v194 = v165;
            if ([v350 count] == (id)1)
            {
              v195 = (void *)objc_claimAutoreleasedReturnValue([v13 members]);
              v338 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](&OBJC_CLASS___NSSet, "setWithArray:", v195));

              int v24 = v354;
            }

            else
            {
              v338 = 0LL;
            }

            v178 = v369;
            if (v345)
            {
              v196 = (id)objc_claimAutoreleasedReturnValue(-[CSDConversationManager pendingMembershipTracker](v369, "pendingMembershipTracker"));
              v336 = (id)objc_claimAutoreleasedReturnValue([v196 retrievePendingMembersFor:v24]);
            }

            else
            {
              v196 = (id)objc_claimAutoreleasedReturnValue(+[NSSet set](&OBJC_CLASS___NSSet, "set"));
              v336 = v196;
            }

            v197 = (void *)objc_claimAutoreleasedReturnValue( -[CSDConversationManager pickInitiatorFromActiveParticipants:forUpdate:]( v369,  "pickInitiatorFromActiveParticipants:forUpdate:",  v353,  v13));
            v333 = v197;
            if (v197)
            {
              v335 = (id)objc_claimAutoreleasedReturnValue([v197 handle]);

              if ([v14 hasScreenSharingRequest])
              {
                v198 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversationManager featureFlags](v369, "featureFlags"));
                v199 = [v198 usesModernScreenSharingFromMessages];

                if (v199)
                {
                  v200 = (void *)objc_claimAutoreleasedReturnValue([v14 screenSharingRequest]);
                  v201 = (void *)objc_claimAutoreleasedReturnValue([v333 tuConversationParticipant]);
                  isHandleEligibleForScreenSharingRequestsBlock = v369->_isHandleEligibleForScreenSharingRequestsBlock;
                  v386 = 0LL;
                  v334 = (void *)objc_claimAutoreleasedReturnValue( [v200 incomingScreenShareRequestFromParticipant:v201 handleEligibilityBlock:isHandleEligibleForScreenSharingRequestsBlock error:&v386]);
                  v203 = v386;

                  v178 = v369;
                  goto LABEL_223;
                }

                v206 = sub_1001704C4();
                v207 = (os_log_s *)objc_claimAutoreleasedReturnValue(v206);
                if (os_log_type_enabled(v207, OS_LOG_TYPE_DEFAULT))
                {
                  *(_WORD *)buf = 0;
                  _os_log_impl( (void *)&_mh_execute_header,  v207,  OS_LOG_TYPE_DEFAULT,  "[WARN] Not acknowledging screen share request attached to join context because feature flag is not enabled",  buf,  2u);
                }
              }
            }

            else
            {
              v204 = (void *)objc_claimAutoreleasedReturnValue([v13 participantDestinationID]);
              v205 = TUHandleForIDSCanonicalAddress(v204);
              v335 = (id)objc_claimAutoreleasedReturnValue(v205);

              [v14 hasScreenSharingRequest];
            }

            v334 = 0LL;
LABEL_223:
            if ([v350 count] == (id)1
              && !v194
              && [v13 participantUpdateType] == (id)1
              && ([v13 isInitiator] & 1) != 0)
            {
              v208 = 0;
            }

            else
            {
              v209 = sub_1001704C4();
              v210 = (os_log_s *)objc_claimAutoreleasedReturnValue(v209);
              if (os_log_type_enabled(v210, OS_LOG_TYPE_DEFAULT))
              {
                v211 = [v13 participantUpdateType];
                else {
                  v212 = @"NO";
                }
                v213 = (const __CFString *)[v350 count];
                *(_DWORD *)buf = 134218754;
                *(void *)v435 = v211;
                *(_WORD *)&v435[8] = 2112;
                *(void *)v436 = v212;
                *(_WORD *)&v436[8] = 2048;
                v437 = v213;
                v438 = 2112;
                *(void *)v439 = v345;
                _os_log_impl( (void *)&_mh_execute_header,  v210,  OS_LOG_TYPE_DEFAULT,  "type: %lu, participantUpdate.isInitiator: %@, remoteMembers.count: %lu, link: %@",  buf,  0x2Au);
              }

              v208 = 1;
            }

            BYTE1(v331) = v341 == (id)1;
            LOBYTE(v331) = v208;
            LOBYTE(v330) = [v13 fromServer];
            v214 = (void *)objc_claimAutoreleasedReturnValue( -[CSDConversationManager createConversationWithUUID:groupUUID:messagesGroupUUID:locallyCreated:localMember:initiator:remoteMembers:pendingMembers:otherInvitedHandles:remotePushTokens:lightweightMembers:activity:link:report:fromStorage:avMode:presentationMode:provider:screenSharingRequest:isInitiator:isOldMessage:]( v178,  "createConversationWithUUID:groupUUID:messagesGroupUUID:locallyCreated:localMember:initiat or:remoteMembers:pendingMembers:otherInvitedHandles:remotePushTokens:lightweightMembers:a ctivity:link:report:fromStorage:avMode:presentationMode:provider:screenSharingRequest:isI nitiator:isOldMessage:",  v339,  v354,  v352,  v365,  v356,  v335,  v350,  v336,  v376,  v338,  v362,  0LL,  v345,  v340,  v330,  v344,  v332,  v364,  v334,  v331));
            [v214 setLetMeInRequestState:v371];
            [v214 setMessagesGroupName:v351];
            v373 = v214;
            if ([v14 hasVideoEnabled])
            {
              objc_msgSend(v214, "setVideoEnabled:", objc_msgSend(v14, "videoEnabled"));
              char v22 = v357;
            }

            else
            {
              char v22 = v357;
              if ([v13 participantUpdateType] == (id)3 && !objc_msgSend(v214, "letMeInRequestState"))
              {
                objc_msgSend(v214, "setVideoEnabled:", objc_msgSend(v214, "avMode") == (id)2);
                v215 = sub_1001704C4();
                v216 = (os_log_s *)objc_claimAutoreleasedReturnValue(v215);
                if (os_log_type_enabled(v216, OS_LOG_TYPE_DEFAULT))
                {
                  v217 = [v373 isVideoEnabled];
                  v218 = @"NO";
                  if (v217) {
                    v218 = @"YES";
                  }
                  v365 = (__CFString *)v218;
                  v219 = [v373 avMode];
                  *(_DWORD *)buf = 138412546;
                  *(void *)v435 = v365;
                  *(_WORD *)&v435[8] = 2048;
                  *(void *)v436 = v219;
                  _os_log_impl( (void *)&_mh_execute_header,  v216,  OS_LOG_TYPE_DEFAULT,  "Setting videoEnabled to %@ because the user was added to an existing call with av mode %lu",  buf,  0x16u);
                }

                v214 = v373;
              }
            }

            if ([v22 invitationPreferencesCount])
            {
              v220 = (void *)objc_claimAutoreleasedReturnValue([v22 tuInvitationPreferences]);
              [v214 setInvitationPreferences:v220];

              v221 = sub_1001704C4();
              v222 = v214;
              v223 = (os_log_s *)objc_claimAutoreleasedReturnValue(v221);
              if (os_log_type_enabled(v223, OS_LOG_TYPE_DEFAULT))
              {
                v224 = (void *)objc_claimAutoreleasedReturnValue([v222 invitationPreferences]);
                *(_DWORD *)buf = 138412290;
                *(void *)v435 = v224;
                _os_log_impl( (void *)&_mh_execute_header,  v223,  OS_LOG_TYPE_DEFAULT,  "Attached invitation preferences found in message: %@",  buf,  0xCu);
              }
            }

            else
            {
              v225 = sub_1001704C4();
              v223 = (os_log_s *)objc_claimAutoreleasedReturnValue(v225);
              if (os_log_type_enabled(v223, OS_LOG_TYPE_DEFAULT))
              {
                *(_WORD *)buf = 0;
                _os_log_impl( (void *)&_mh_execute_header,  v223,  OS_LOG_TYPE_DEFAULT,  "No invitation preferences were set on the message",  buf,  2u);
              }
            }

            v226 = (void *)objc_claimAutoreleasedReturnValue([v14 activitySession]);
            if (v226)
            {
              v227 = (void *)objc_claimAutoreleasedReturnValue( -[CSDConversationManager createActivitySession:onConversation:fromHandle:]( v178,  "createActivitySession:onConversation:fromHandle:",  v226,  v373,  v377));
              if (!v227)
              {
                v228 = sub_1001704C4();
                v229 = (os_log_s *)objc_claimAutoreleasedReturnValue(v228);
                if (os_log_type_enabled(v229, OS_LOG_TYPE_DEFAULT))
                {
                  v342 = v123;
                  v230 = (void *)objc_claimAutoreleasedReturnValue([v373 UUID]);
                  *(_DWORD *)buf = 138412546;
                  *(void *)v435 = v226;
                  *(_WORD *)&v435[8] = 2112;
                  *(void *)v436 = v230;
                  _os_log_impl( (void *)&_mh_execute_header,  v229,  OS_LOG_TYPE_DEFAULT,  "[WARN] Could not create new activity session for activity session %@ and conversation UUID %@",  buf,  0x16u);

                  char v123 = v342;
                }
              }

              unsigned int v13 = v358;
            }

            v177 = (os_log_s *)v373;
            goto LABEL_255;
          }
        }

        else
        {
          v371 = 0LL;
          int v24 = v354;
        }
      }

      v339 = (void *)objc_claimAutoreleasedReturnValue(+[NSUUID UUID](&OBJC_CLASS___NSUUID, "UUID"));
      goto LABEL_204;
    }

    v151 = (void *)objc_claimAutoreleasedReturnValue([v356 association]);
    v152 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s localMember](v374, "localMember"));
    v153 = (void *)objc_claimAutoreleasedReturnValue([v152 association]);
    v154 = [v151 isEqualToAssociation:v153];

    char v22 = v357;
    if ((v154 & 1) == 0) {
      -[os_log_s updateLocalMember:](v374, "updateLocalMember:", v356);
    }
    obj = 0;
    unsigned int v13 = v358;
    unsigned int v102 = v374;
LABEL_153:
    int v24 = v354;
LABEL_157:
    char v100 = v369;
    goto LABEL_158;
  }

  char v55 = sub_1001704C4();
  char v22 = (void *)objc_claimAutoreleasedReturnValue(v55);
  if (os_log_type_enabled((os_log_t)v22, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v22,  OS_LOG_TYPE_DEFAULT,  "[WARN] handleParticipants:joinedConversationWithUpdate:joinContext: Empty joinContext",  buf,  2u);
  }

LABEL_46:
  PBDataWriterWriteBOOLField(v12, self->_isGFTDowngradeToOneToOneAvailable, 12LL);
  if ((*(_DWORD *)&self->_has & 0x200) != 0) {
LABEL_18:
  }
    PBDataWriterWriteBOOLField(v12, self->_guestModeEnabled, 13LL);
LABEL_19:
  association = self->_association;
  if (association) {
    PBDataWriterWriteSubmessage(v12, association, 14LL);
  }
  BOOL v9 = self->_has;
  if ((*(_DWORD *)&v9 & 0x40000) != 0)
  {
    PBDataWriterWriteBOOLField(v12, self->_isUPlusNDowngradeAvailable, 15LL);
    BOOL v9 = self->_has;
    if ((*(_BYTE *)&v9 & 2) == 0)
    {
LABEL_23:
      if ((*(_DWORD *)&v9 & 0x400000) == 0) {
        goto LABEL_24;
      }
      goto LABEL_50;
    }
  }

  else if ((*(_BYTE *)&v9 & 2) == 0)
  {
    goto LABEL_23;
  }

  PBDataWriterWriteInt32Field(v12, self->_avMode, 16LL);
  BOOL v9 = self->_has;
  if ((*(_DWORD *)&v9 & 0x400000) == 0)
  {
LABEL_24:
    if ((*(_DWORD *)&v9 & 0x100000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_25;
  }

  *((_BYTE *)v4 + 89) = self->_isGFTDowngradeToOneToOneAvailable;
  v4[26] |= 0x400u;
  if ((*(_DWORD *)&self->_has & 0x200) != 0)
  {
LABEL_18:
    *((_BYTE *)v4 + 8_Block_object_dispose(va, 8) = self->_guestModeEnabled;
    v4[26] |= 0x200u;
  }

  *((_DWORD *)v6 + 21) = self->_visionFeatureVersion;
  *((_DWORD *)v6 + 26) |= 0x100u;
  char v18 = self->_has;
  if ((*(_BYTE *)&v18 & 0x80) == 0)
  {
LABEL_24:
    if ((*(_DWORD *)&v18 & 0x200000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_48;
  }

  int v17 = 0LL;
  if ((*(_BYTE *)&v14 & 0x80) != 0)
  {
LABEL_38:
    char v18 = 2654435761LL * self->_visionCallEstablishmentVersion;
    if ((*(_DWORD *)&v14 & 0x200000) != 0) {
      goto LABEL_39;
    }
    goto LABEL_48;
  }

  v4[120] = self->_supportsAudioAndVideo;
  v4[128] |= 4u;
  has = (char)self->_has;
  if ((has & 0x10) == 0)
  {
LABEL_12:
    if ((has & 0x40) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }

    uint64_t v14 = 0;
    goto LABEL_47;
  }

  if ((*((_BYTE *)v4 + 96) & 0x10) != 0) {
    goto LABEL_46;
  }
LABEL_31:
  initiator = self->_initiator;
  localMember = self->_localMember;
  if ((unint64_t)localMember | *((void *)v4 + 5))
  {
    if (!-[CSDMessagingConversationMember isEqual:](localMember, "isEqual:")) {
      goto LABEL_46;
    }
  }

  remoteMembers = self->_remoteMembers;
  if ((unint64_t)remoteMembers | *((void *)v4 + 7))
  {
  }

  activeParticipants = self->_activeParticipants;
  if ((unint64_t)activeParticipants | *((void *)v4 + 1))
  {
  }

  if ((*(_BYTE *)&self->_has & 1) != 0)
  {
    if ((*((_BYTE *)v4 + 96) & 1) == 0 || self->_avMode != *((_DWORD *)v4 + 4)) {
      goto LABEL_46;
    }
  }

  else if ((*((_BYTE *)v4 + 96) & 1) != 0)
  {
    goto LABEL_46;
  }

  reportuint64_t Data = self->_reportData;
  else {
    uint64_t v14 = 1;
  }
LABEL_47:

  return v14;
}
}

      swift_once(&qword_1004466A0, sub_1001AC714);
      goto LABEL_39;
    }
  }

    swift_bridgeObjectRetain(a1);
    sub_1001B0E38(&v25);
    return 0LL;
  }

  id v3 = (v29 - 1) & v29;
  char v4 = __clz(__rbit64(v29)) | (v28 << 6);
  unsigned int v5 = (unint64_t)(v27 + 64) >> 6;
  unint64_t v6 = v28;
LABEL_3:
  unint64_t v7 = v25;
  char v8 = *(void *)(v25 + 56);
  BOOL v9 = (unint64_t *)(v8 + 24 * v4);
  int v10 = *v9;
  id v11 = v9[1];
  while (1)
  {
    if (v3)
    {
      char v12 = __clz(__rbit64(v3));
      v3 &= v3 - 1;
      unsigned int v13 = v12 | (v6 << 6);
      goto LABEL_22;
    }

    uint64_t v14 = v6 + 1;
    if (__OFADD__(v6, 1LL)) {
      break;
    }
    if (v14 >= v5) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v26 + 8 * v14);
    char v16 = v6 + 1;
    if (!v15)
    {
      char v16 = v6 + 2;
      if (v6 + 2 >= v5) {
        goto LABEL_29;
      }
      unint64_t v15 = *(void *)(v26 + 8 * v16);
      if (!v15)
      {
        char v16 = v6 + 3;
        if (v6 + 3 >= v5) {
          goto LABEL_29;
        }
        unint64_t v15 = *(void *)(v26 + 8 * v16);
        if (!v15)
        {
          char v16 = v6 + 4;
          if (v6 + 4 >= v5) {
            goto LABEL_29;
          }
          unint64_t v15 = *(void *)(v26 + 8 * v16);
          if (!v15)
          {
            char v16 = v6 + 5;
            if (v6 + 5 >= v5) {
              goto LABEL_29;
            }
            unint64_t v15 = *(void *)(v26 + 8 * v16);
            if (!v15)
            {
              int v17 = v6 + 6;
              while (v17 < v5)
              {
                unint64_t v15 = *(void *)(v26 + 8 * v17++);
                if (v15)
                {
                  char v16 = v17 - 1;
                  goto LABEL_21;
                }
              }

      sub_1001B0F5C();
      return;
    }

              char v96 = v89;
            }

            else
            {

              char v96 = v138;
              if (!v138) {
                goto LABEL_55;
              }
            }

            swift_bridgeObjectRelease(v96);
            goto LABEL_49;
          }

          uint64_t v89 = v85;
          if (!v85) {
            goto LABEL_54;
          }
          goto LABEL_46;
        }

        sub_1001F0C78((uint64_t)v166);
LABEL_30:
        if (v28 == ++v29)
        {
          uint64_t v25 = &selRef_payload;
          goto LABEL_58;
        }
      }

      unint64_t v58 = qword_100454018;
      unint64_t v50 = swift_allocObject(v152, 72LL, 7LL);
      *(_OWORD *)(v50 + 16) = v150;
      v175 = v32;
      sub_1001D8EA0(0LL, &qword_100448F18, &OBJC_CLASS___RPCompanionLinkDevice_ptr);
      char v60 = v59;
      unsigned int v53 = v32;
      unsigned int v61 = String.init<A>(reflecting:)(&v175, v60);
      uint64_t v62 = v151;
      *(void *)(v50 + 56) = &type metadata for String;
      *(void *)(v50 + 64) = v62;
      *(void *)(v50 + 32) = v61;
      *(void *)(v50 + 40) = v63;
      char v64 = static os_log_type_t.default.getter(v61);
      os_log(_:dso:log:type:_:)( "filtering out device: %@ because it does not support GFT",  56LL,  2LL,  &_mh_execute_header,  v58,  v64,  v50);
LABEL_23:

LABEL_24:
      swift_bridgeObjectRelease(v50);
      goto LABEL_30;
    }
  }

LABEL_50:
  PBDataWriterWriteBOOLField(v12, self->_supportsLeaveContext, 17LL);
  if ((*(_DWORD *)&self->_has & 0x100000) != 0) {
LABEL_25:
  }
    PBDataWriterWriteBOOLField(v12, self->_isUPlusOneScreenSharingAvailable, 18LL);
LABEL_26:
  personaHandshakeuint64_t Data = self->_personaHandshakeData;
  if (personaHandshakeData) {
    PBDataWriterWriteDataField(v12, personaHandshakeData, 19LL);
  }
  id v11 = self->_has;
  if ((*(_DWORD *)&v11 & 0x20000) != 0)
  {
    PBDataWriterWriteBOOLField(v12, self->_isSpatialPersonaEnabled, 20LL);
    id v11 = self->_has;
    if ((*(_DWORD *)&v11 & 0x80000) == 0)
    {
LABEL_30:
      if ((*(_WORD *)&v11 & 0x100) == 0) {
        goto LABEL_31;
      }
      goto LABEL_54;
    }
  }

  else if ((*(_DWORD *)&v11 & 0x80000) == 0)
  {
    goto LABEL_30;
  }

  PBDataWriterWriteBOOLField(v12, self->_isUPlusOneAVLessAvailable, 21LL);
  id v11 = self->_has;
  if ((*(_WORD *)&v11 & 0x100) == 0)
  {
LABEL_31:
    if ((*(_BYTE *)&v11 & 0x80) == 0) {
      goto LABEL_32;
    }
    goto LABEL_55;
  }

  *((_BYTE *)v4 + 101) = self->_supportsLeaveContext;
  v4[26] |= 0x400000u;
  if ((*(_DWORD *)&self->_has & 0x100000) != 0)
  {
LABEL_25:
    *((_BYTE *)v4 + 99) = self->_isUPlusOneScreenSharingAvailable;
    v4[26] |= 0x100000u;
  }

  *((_DWORD *)v6 + 1_Block_object_dispose(va, 8) = self->_spatialPersonaGenerationCounter;
  *((_DWORD *)v6 + 26) |= 0x20u;
  char v18 = self->_has;
  if ((*(_WORD *)&v18 & 0x8000) != 0) {
    goto LABEL_51;
  }
LABEL_28:
  if ((*(_BYTE *)&v18 & 8) != 0)
  {
LABEL_29:
    *((_DWORD *)v6 + 16) = self->_presentationMode;
    *((_DWORD *)v6 + 26) |= 8u;
  }

  return v6;
}

  unint64_t v21 = 0LL;
  if ((*(_WORD *)&v14 & 0x8000) == 0) {
    goto LABEL_51;
  }
LABEL_42:
  char v22 = 2654435761LL * self->_isPhotosSharePlayAvailable;
  if ((*(_BYTE *)&v14 & 8) == 0) {
    goto LABEL_52;
  }
LABEL_43:
  id v23 = 2654435761LL * self->_presentationMode;
  return v34 ^ v35 ^ v33 ^ v32 ^ v31 ^ v30 ^ v29 ^ v28 ^ v27 ^ v26 ^ v25 ^ v5 ^ v6 ^ v7 ^ v9 ^ v10 ^ v11 ^ v12 ^ v13 ^ v15 ^ v16 ^ v17 ^ v18 ^ v19 ^ v20 ^ v21 ^ v22 ^ v23;
}

  if (*((void *)v5 + 4)) {
    -[CSDMessagingRelayMessage setContactIdentifier:](self, "setContactIdentifier:");
  }
  protoCallCapabilitiesState = self->_protoCallCapabilitiesState;
  int v17 = *((void *)v5 + 26);
  if (protoCallCapabilitiesState)
  {
    if (v17) {
      -[CSDMessagingCallCapabilitiesState mergeFrom:](protoCallCapabilitiesState, "mergeFrom:");
    }
  }

  else if (v17)
  {
    -[CSDMessagingRelayMessage setProtoCallCapabilitiesState:](self, "setProtoCallCapabilitiesState:");
  }

  char v18 = *((_DWORD *)v5 + 100);
  if ((v18 & 0x100) != 0)
  {
    self->_protoSoundRegion = *((_DWORD *)v5 + 73);
    *(_DWORD *)&self->_has |= 0x100u;
    char v18 = *((_DWORD *)v5 + 100);
  }

  if ((v18 & 0x10000) != 0)
  {
    self->_protoEmergency = *((_BYTE *)v5 + 386);
    *(_DWORD *)&self->_has |= 0x10000u;
  }

  char v113 = 0u;
  char v114 = 0u;
  uint64_t v111 = 0u;
  unint64_t v112 = 0u;
  unsigned int v19 = *((id *)v5 + 24);
  uint64_t v20 = [v19 countByEnumeratingWithState:&v111 objects:v127 count:16];
  if (v20)
  {
    unint64_t v21 = v20;
    char v22 = *(void *)v112;
    do
    {
      for (j = 0LL; j != v21; j = (char *)j + 1)
      {
        if (*(void *)v112 != v22) {
          objc_enumerationMutation(v19);
        }
        -[CSDMessagingRelayMessage addOtherUniqueProxyIdentifiers:]( self,  "addOtherUniqueProxyIdentifiers:",  *(void *)(*((void *)&v111 + 1) + 8LL * (void)j));
      }

      unint64_t v21 = [v19 countByEnumeratingWithState:&v111 objects:v127 count:16];
    }

    while (v21);
  }

  protoCallModel = self->_protoCallModel;
  uint64_t v25 = *((void *)v5 + 27);
  if (protoCallModel)
  {
    if (v25) {
      -[CSDMessagingCallModel mergeFrom:](protoCallModel, "mergeFrom:");
    }
  }

  else if (v25)
  {
    -[CSDMessagingRelayMessage setProtoCallModel:](self, "setProtoCallModel:");
  }

  handle = self->_handle;
  char v27 = *((void *)v5 + 13);
  if (handle)
  {
    if (v27) {
      -[CSDMessagingHandle mergeFrom:](handle, "mergeFrom:");
    }
  }

  else if (v27)
  {
    -[CSDMessagingRelayMessage setHandle:](self, "setHandle:");
  }

  if ((*((_BYTE *)v5 + 402) & 0x20) != 0)
  {
    self->_protoSOS = *((_BYTE *)v5 + 391);
    *(_DWORD *)&self->_has |= 0x200000u;
  }

  char v109 = 0u;
  unsigned int v110 = 0u;
  unint64_t v107 = 0u;
  char v108 = 0u;
  unsigned int v28 = *((id *)v5 + 38);
  uint64_t v29 = [v28 countByEnumeratingWithState:&v107 objects:v126 count:16];
  if (v29)
  {
    unint64_t v30 = v29;
    char v31 = *(void *)v108;
    do
    {
      for (k = 0LL; k != v30; k = (char *)k + 1)
      {
        if (*(void *)v108 != v31) {
          objc_enumerationMutation(v28);
        }
        -[CSDMessagingRelayMessage addProviders:]( self,  "addProviders:",  *(void *)(*((void *)&v107 + 1) + 8LL * (void)k));
      }

      unint64_t v30 = [v28 countByEnumeratingWithState:&v107 objects:v126 count:16];
    }

    while (v30);
  }

  protoDisplayContext = self->_protoDisplayContext;
  uint64_t v34 = *((void *)v5 + 32);
  if (protoDisplayContext)
  {
    if (v34) {
      -[CSDMessagingCallDisplayContext mergeFrom:](protoDisplayContext, "mergeFrom:");
    }
  }

  else if (v34)
  {
    -[CSDMessagingRelayMessage setProtoDisplayContext:](self, "setProtoDisplayContext:");
  }

  inviteuint64_t Data = self->_inviteData;
  char v36 = *((void *)v5 + 18);
  if (inviteData)
  {
    if (v36) {
      -[CSDMessagingAVConferenceInviteData mergeFrom:](inviteData, "mergeFrom:");
    }
  }

  else if (v36)
  {
    -[CSDMessagingRelayMessage setInviteData:](self, "setInviteData:");
  }

  protoProvider = self->_protoProvider;
  unsigned int v38 = *((void *)v5 + 35);
  if (protoProvider)
  {
    if (v38) {
      -[CSDMessagingCallProvider mergeFrom:](protoProvider, "mergeFrom:");
    }
  }

  else if (v38)
  {
    -[CSDMessagingRelayMessage setProtoProvider:](self, "setProtoProvider:");
  }

  uint64_t v39 = *((_DWORD *)v5 + 100);
  if ((v39 & 0x8000000) != 0)
  {
    self->_protoVideo = *((_BYTE *)v5 + 397);
    *(_DWORD *)&self->_has |= 0x8000000u;
    uint64_t v39 = *((_DWORD *)v5 + 100);
    if ((v39 & 0x4000000) == 0)
    {
LABEL_116:
      if ((v39 & 0x100000) == 0) {
        goto LABEL_117;
      }
      goto LABEL_146;
    }
  }

  else if ((v39 & 0x4000000) == 0)
  {
    goto LABEL_116;
  }

  self->_protoUplinkMuted = *((_BYTE *)v5 + 396);
  *(_DWORD *)&self->_has |= 0x4000000u;
  uint64_t v39 = *((_DWORD *)v5 + 100);
  if ((v39 & 0x100000) == 0)
  {
LABEL_117:
    if ((v39 & 0x1000) == 0) {
      goto LABEL_119;
    }
    goto LABEL_118;
  }

  *((_DWORD *)v5 + 25) = self->_protoSoundRegion;
  *((_DWORD *)v5 + 38) |= 0x10u;
  char v16 = self->_has;
  if ((*(_WORD *)&v16 & 0x100) == 0)
  {
LABEL_16:
    if ((*(_WORD *)&v16 & 0x400) == 0) {
      goto LABEL_18;
    }
    goto LABEL_17;
  }
}

      goto LABEL_51;
    }

    uint64_t v62 = v7;
    unsigned int v33 = objc_alloc(&OBJC_CLASS___CSDMessagingConversationParticipantDidJoinContext);
    uint64_t v34 = (void *)objc_claimAutoreleasedReturnValue([v6 clientContextData]);
    unint64_t v35 = -[CSDMessagingConversationParticipantDidJoinContext initWithData:](v33, "initWithData:", v34);

    char v36 = (void *)objc_claimAutoreleasedReturnValue( +[CSDConversationProviderManager sharedInstance]( &OBJC_CLASS___CSDConversationProviderManager,  "sharedInstance"));
    char v37 = (void *)objc_claimAutoreleasedReturnValue(-[CSDMessagingConversationParticipantDidJoinContext providerIdentifier](v35, "providerIdentifier"));
    char v60 = (void *)objc_claimAutoreleasedReturnValue([v36 tuConversationProviderForIdentifier:v37]);

    unsigned int v38 = (void *)objc_claimAutoreleasedReturnValue( -[CSDMessagingConversationParticipantDidJoinContext tuConversationMembers]( v35,  "tuConversationMembers"));
    uint64_t v39 = (char *)[v38 count];
    unint64_t v40 = (void *)objc_claimAutoreleasedReturnValue(-[CSDMessagingConversationParticipantDidJoinContext message](v35, "message"));
    if (!-[CSDMessagingConversationParticipantDidJoinContext hasVideo](v35, "hasVideo")
      || -[CSDMessagingConversationParticipantDidJoinContext video](v35, "video"))
    {

      goto LABEL_26;
    }

    if (v60)
    {
      char v52 = [v60 isDefaultProvider];

      if (!v52) {
        goto LABEL_27;
      }
    }

    else
    {
LABEL_11:
    }

    if (!v11)
    {
LABEL_27:

      unint64_t v7 = v62;
      goto LABEL_28;
    }

    char v41 = sub_1001704C4();
    char v42 = (os_log_s *)objc_claimAutoreleasedReturnValue(v41);
    if (os_log_type_enabled(v42, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      char v64 = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v42,  OS_LOG_TYPE_DEFAULT,  "Leaving conversation that is not supported on GreenTea devices: %@",  buf,  0xCu);
    }

    unsigned int v38 = (void *)objc_claimAutoreleasedReturnValue( +[CSDConversationLeaveContext greenTeaLeaveContext]( &OBJC_CLASS___CSDConversationLeaveContext,  "greenTeaLeaveContext"));
    -[os_log_s leaveUsingContext:](v11, "leaveUsingContext:", v38);
LABEL_26:

    goto LABEL_27;
  }

    goto LABEL_51;
  }

  if (-[CSDThumperAccount length](v11, "length"))
  {
    uint64_t v44 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[CSDTelephonyCallCapabilities secondaryThumperAccounts](v57, "secondaryThumperAccounts"));
    char v60 = 0u;
    unsigned int v61 = 0u;
    uint64_t v62 = 0u;
    unint64_t v63 = 0u;
    unint64_t v45 = -[os_log_s countByEnumeratingWithState:objects:count:]( v44,  "countByEnumeratingWithState:objects:count:",  &v60,  v68,  16LL);
    if (v45)
    {
      char v46 = v45;
      unsigned int v53 = v39;
      char v55 = v40;
      char v47 = *(void *)v61;
      do
      {
        for (i = 0LL; i != v46; i = (char *)i + 1)
        {
          if (*(void *)v61 != v47) {
            objc_enumerationMutation(v44);
          }
          uint64_t v49 = *(void **)(*((void *)&v60 + 1) + 8LL * (void)i);
          if (objc_msgSend(v49, "containsRegisteredDeviceID:", v11, v53))
          {
            unint64_t v50 = (CSDThumperAccount *)objc_claimAutoreleasedReturnValue([v49 accountID]);
            -[CSDTelephonyCallCapabilities setAssociatedThumperAccountID:](v57, "setAssociatedThumperAccountID:", v50);
            char v51 = sub_1001704C4();
            char v52 = (os_log_s *)objc_claimAutoreleasedReturnValue(v51);
            if (os_log_type_enabled(v52, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)buf = 138412290;
              unsigned int v71 = v50;
              _os_log_impl( (void *)&_mh_execute_header,  v52,  OS_LOG_TYPE_DEFAULT,  "Found matching secondary Thumper account; updated associated Thumper account ID to %@",
                buf,
                0xCu);
            }
          }
        }

        char v46 = -[os_log_s countByEnumeratingWithState:objects:count:]( v44,  "countByEnumeratingWithState:objects:count:",  &v60,  v68,  16LL);
      }

      while (v46);
      unint64_t v40 = v55;
      unsigned int v38 = v56;
      uint64_t v39 = v53;
    }

    goto LABEL_50;
  }

        return 0LL;
      default:
        uint64_t result = PBReaderSkipValueWithTag(a2);
        if (!(_DWORD)result) {
          return result;
        }
        goto LABEL_48;
    }
  }

  __break(1u);
}

    sub_1002953B0();
LABEL_51:
    uint64_t v34 = *(void *)(*(void *)(v12 + 56) + 8 * v41);
    if (v9 >= v38)
    {
      id v3 = *v1;
      char v36 = *v1 & 0xFFFFFFFFFFFFFF8LL;
      sub_10023929C();
      goto LABEL_54;
    }

    sub_10023929C();
  }

  __break(1u);
LABEL_77:
  __break(1u);
}

      sub_1001D9020();
      char v69 = v66;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v69);
      uint64_t v14 = *(uint8_t **)((v115 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
      char v70 = *(void *)((v115 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
      unsigned int v71 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v69);
      uint64_t v49 = (uint64_t)&v115;
      specialized Array._endMutation()(v71, v72, v73, v74, v75, v76, v77, v78);
    }
  }

  while (1)
  {
    unsigned int v53 = v64 + 1;
    if (__OFADD__(v64, 1LL)) {
      break;
    }
    sub_1002AB764();
    if (v58 == v59) {
      goto LABEL_69;
    }
    sub_1002AB758();
    char v64 = v65 + 1;
    if (v57) {
      goto LABEL_42;
    }
  }

  __break(1u);
LABEL_97:
  __break(1u);
}

LABEL_57:
  PBDataWriterWriteBOOLField(v12, self->_supportsRequestToScreenShare, 25LL);
  id v11 = self->_has;
  if ((*(_BYTE *)&v11 & 0x20) == 0)
  {
LABEL_35:
    if ((*(_WORD *)&v11 & 0x8000) == 0) {
      goto LABEL_36;
    }
LABEL_59:
    PBDataWriterWriteBOOLField(v12, self->_isPhotosSharePlayAvailable, 27LL);
    if ((*(_DWORD *)&self->_has & 8) == 0) {
      goto LABEL_38;
    }
    goto LABEL_37;
  }

  *((_BYTE *)v4 + 102) = self->_supportsRequestToScreenShare;
  v4[26] |= 0x800000u;
  char v8 = self->_has;
  if ((*(_BYTE *)&v8 & 0x20) == 0)
  {
LABEL_35:
    if ((*(_WORD *)&v8 & 0x8000) == 0) {
      goto LABEL_36;
    }
LABEL_59:
    *((_BYTE *)v4 + 94) = self->_isPhotosSharePlayAvailable;
    v4[26] |= 0x8000u;
    if ((*(_DWORD *)&self->_has & 8) == 0) {
      goto LABEL_38;
    }
    goto LABEL_37;
  }

  PBDataWriterWriteBOOLField(v5, self->_supportsAudioAndVideo, 7LL);
  has = (char)self->_has;
  if ((has & 0x10) == 0)
  {
LABEL_12:
    if ((has & 0x40) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }

  self->_supportsAudioAndVideo = *((_BYTE *)v4 + 120);
  *(_BYTE *)&self->_has |= 4u;
  unsigned int v5 = *((_BYTE *)v4 + 128);
  if ((v5 & 0x10) == 0)
  {
LABEL_12:
    if ((v5 & 0x40) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }

                  sub_1001B4B8C(v6);
                  return (Swift::Int)v4;
                }
              }
            }
          }
        }

      sub_1001D8CA0(v33, v35, v30 != 0);

      isUniquelyReferenced_nonNull_native = swift_bridgeObjectRelease(v29);
      BOOL v9 = v16;
      int v10 = v62;
    }
  }

  char v22 = v9 + 1;
  if (!__OFADD__(v9, 1LL))
  {
    if (v22 >= v60) {
      goto LABEL_58;
    }
    id v23 = *(void *)(v61 + 8 * v22);
    char v16 = v9 + 1;
    if (!v23)
    {
      char v16 = v9 + 2;
      if (v9 + 2 >= v60) {
        goto LABEL_58;
      }
      id v23 = *(void *)(v61 + 8 * v16);
      if (!v23)
      {
        char v16 = v9 + 3;
        if (v9 + 3 >= v60) {
          goto LABEL_58;
        }
        id v23 = *(void *)(v61 + 8 * v16);
        if (!v23)
        {
          char v16 = v9 + 4;
          if (v9 + 4 >= v60) {
            goto LABEL_58;
          }
          id v23 = *(void *)(v61 + 8 * v16);
          if (!v23)
          {
            char v16 = v9 + 5;
            if (v9 + 5 >= v60) {
              goto LABEL_58;
            }
            id v23 = *(void *)(v61 + 8 * v16);
            if (!v23)
            {
              int v24 = v9 + 6;
              while (v24 < v60)
              {
                id v23 = *(void *)(v61 + 8 * v24++);
                if (v23)
                {
                  char v16 = v24 - 1;
                  goto LABEL_32;
                }
              }

      goto LABEL_58;
    }
  }

      [v86 setValidationSource:0];
      goto LABEL_58;
    }

    unsigned int v115 = v163;
    dispatch_group_enter(v163);
    uint64_t v116 = *(void **)(v177 + v156);
    unint64_t v117 = (void *)swift_allocObject(&unk_1003E5058, 40LL, 7LL);
    v117[2] = v111;
    v117[3] = v61;
    v117[4] = v115;
    v191 = sub_10027A900;
    v192 = v117;
    aBlock = _NSConcreteStackBlock;
    v188 = 1107296256LL;
    v189 = sub_100211A48;
    v190 = &unk_1003E5070;
    char v118 = _Block_copy(&aBlock);
    char v119 = v192;
    unsigned int v120 = v61;
    unsigned int v61 = v111;
    unint64_t v121 = v115;
    swift_release(v119);
    [v116 verify:v65 completion:v118];
    _Block_release(v118);

    char v59 = v175;
    unint64_t v6 = v168;

    a3 = v184;
    id v23 = v173;
    unsigned int v57 = v172;
LABEL_59:

    ++v21;
    if (v62 == v57) {
      goto LABEL_75;
    }
  }

  char v84 = v185;
  unsigned int v85 = v180;
  (*(void (**)(char *, uint64_t, void *))(v185 + 16))(a3, v171, v180);
  uint64_t v86 = v61;
  uint64_t v89 = (void *)Logger.logObject.getter(v86, v87, v88);
  v90 = static os_log_type_t.default.getter(v89);
  if (!os_log_type_enabled((os_log_t)v89, v90))
  {

    (*(void (**)(char *, void *))(v84 + 8))(a3, v85);
LABEL_52:
    objc_msgSend(v86, "setAssociationVoucher:", 0, v156);
    char v122 = [v86 validationSource];
    id v23 = v173;
    unsigned int v57 = v172;
    char v59 = v175;
    if (v122 == 2) {
      [v86 setValidationSource:0];
    }

    unsigned int v61 = v65;
    goto LABEL_59;
  }

  char v91 = swift_slowAlloc(12LL, -1LL);
  unsigned int v92 = (void **)swift_slowAlloc(32LL, -1LL);
  aBlock = v92;
  *(_DWORD *)char v91 = v164;
  uint64_t v93 = [v86 handle];
  if (v93)
  {
    unint64_t v94 = sub_10027A7AC(v93);
    if (!v95) {
      goto LABEL_77;
    }
    char v96 = v95;
    *(void *)(v91 + 4) = sub_1001D7CF0(v94, v95, (uint64_t *)&aBlock);

    swift_bridgeObjectRelease(v96);
    _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v89,  v90,  "Dropping association voucher for member %s that does not have an association claim as its payload.",  (uint8_t *)v91,  0xCu);
    swift_arrayDestroy(v92, 1LL);
    swift_slowDealloc(v92, -1LL, -1LL);
    swift_slowDealloc(v91, -1LL, -1LL);

    a3 = v184;
    (*(void (**)(char *, void *))(v185 + 8))(v184, v180);
    unint64_t v6 = v168;
    goto LABEL_52;
  }

  _Block_release(v170);

  __break(1u);
LABEL_77:
  _Block_release(v170);

  __break(1u);
LABEL_78:
  _Block_release(v170);

  __break(1u);
LABEL_79:
  _Block_release(v170);

  __break(1u);
LABEL_80:
  _Block_release(v170);

  __break(1u);
LABEL_81:
  _Block_release(v170);

  __break(1u);
}

                  sub_1001B4B8C(v5);
                  return (Swift::Int)v4;
                }
              }
            }
          }
        }

LABEL_58:
  PBDataWriterWriteUint32Field(v12, self->_spatialPersonaGenerationCounter, 26LL);
  id v11 = self->_has;
  if ((*(_WORD *)&v11 & 0x8000) != 0) {
    goto LABEL_59;
  }
LABEL_36:
  if ((*(_BYTE *)&v11 & 8) != 0) {
LABEL_37:
  }
    PBDataWriterWriteInt32Field(v12, self->_presentationMode, 28LL);
LABEL_38:
}

  v4[18] = self->_spatialPersonaGenerationCounter;
  v4[26] |= 0x20u;
  char v8 = self->_has;
  if ((*(_WORD *)&v8 & 0x8000) != 0) {
    goto LABEL_59;
  }
LABEL_36:
  if ((*(_BYTE *)&v8 & 8) != 0)
  {
LABEL_37:
    v4[16] = self->_presentationMode;
    v4[26] |= 8u;
  }

  self->_supportsLeaveContext = *((_BYTE *)v5 + 101);
  *(_DWORD *)&self->_has |= 0x400000u;
  if ((*((_DWORD *)v5 + 26) & 0x100000) != 0)
  {
LABEL_42:
    self->_isUPlusOneScreenSharingAvailable = *((_BYTE *)v5 + 99);
    *(_DWORD *)&self->_has |= 0x100000u;
  }
    }

    char v51 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation featureFlags](self, "featureFlags"));
    if ([v51 uPlusOneScreenSharing])
    {
      char v52 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation activeRemoteParticipants](self, "activeRemoteParticipants"));
      unsigned int v53 = (void *)objc_claimAutoreleasedReturnValue([v52 anyObject]);
      unint64_t v54 = (void *)objc_claimAutoreleasedReturnValue([v53 capabilities]);
      char v55 = [v54 isUPlusOneScreenShareAvailable];

      if (((v55 | v44) & 1) == 0) {
        return;
      }
    }

    else
    {

      if (!v44) {
        return;
      }
    }

    char v56 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation featureFlags](self, "featureFlags"));
    if ([v56 gftDowngradeToOneToOne])
    {
      unsigned int v57 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation serverBag](self, "serverBag"));
      unint64_t v58 = [v57 isGFTDowngradeToOneToOneAvailable];
    }

    else
    {
      unint64_t v58 = 0;
    }

    char v59 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation activeRemoteParticipants](self, "activeRemoteParticipants"));
    char v60 = (void *)objc_claimAutoreleasedReturnValue([v59 anyObject]);
    unsigned int v61 = (void *)objc_claimAutoreleasedReturnValue([v60 capabilities]);
    uint64_t v62 = [v61 isGFTDowngradeToOneToOneAvailable];

    if ((v58 & v62 & 1) != 0)
    {
      if (v72)
      {
        objc_initWeak((id *)buf, self);
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472LL;
        block[2] = sub_100038258;
        block[3] = &unk_1003D7DF0;
        objc_copyWeak(&v77, (id *)buf);
        unint64_t v63 = dispatch_block_create((dispatch_block_flags_t)0LL, block);
        -[CSDConversation setDowngradeToOneToOneAfterDelayBlock:](self, "setDowngradeToOneToOneAfterDelayBlock:", v63);

        -[CSDConversation sessionSwitchTimeout](self, "sessionSwitchTimeout");
        char v65 = dispatch_time(0LL, (uint64_t)(v64 * 1000000000.0));
        unsigned int v66 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(-[CSDConversation queue](self, "queue"));
        uint64_t v67 = (void *)objc_claimAutoreleasedReturnValue( -[CSDConversation downgradeToOneToOneAfterDelayBlock]( self,  "downgradeToOneToOneAfterDelayBlock"));
        dispatch_after(v65, v66, v67);

        objc_destroyWeak(&v77);
        objc_destroyWeak((id *)buf);
      }

      else
      {
        char v70 = sub_1001704C4();
        unsigned int v71 = (os_log_s *)objc_claimAutoreleasedReturnValue(v70);
        if (os_log_type_enabled(v71, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v71,  OS_LOG_TYPE_DEFAULT,  "We only have 1 remote participant that AV compatible, requesting to move back to U+1 mode",  buf,  2u);
        }

        -[CSDConversation setOneToOneModeEnabled:](self, "setOneToOneModeEnabled:", 1LL);
      }
    }

    else
    {
      unint64_t v68 = sub_1001704C4();
      char v69 = (os_log_s *)objc_claimAutoreleasedReturnValue(v68);
      if (os_log_type_enabled(v69, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 67109376;
        *(_DWORD *)uint64_t v89 = v58;
        *(_WORD *)&v89[4] = 1024;
        *(_DWORD *)&v89[6] = v62;
        _os_log_impl( (void *)&_mh_execute_header,  v69,  OS_LOG_TYPE_DEFAULT,  "Screen sharing has ended but not requesting to move back to U+1 mode since localDowngradeAvailable:%d remoteDo wngradeAvailable:%d",  buf,  0xEu);
      }
    }
  }

  else
  {
    char v32 = sub_1001704C4();
    unsigned int v33 = (os_log_s *)objc_claimAutoreleasedReturnValue(v32);
    if (os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v33,  OS_LOG_TYPE_DEFAULT,  "Returning - active remote participants is greater than 1 or zero",  buf,  2u);
    }
  }

  PBDataWriterWriteBOOLField(v5, self->_supportsEmergency, 8LL);
  if ((*(_BYTE *)&self->_has & 0x40) != 0) {
LABEL_13:
  }
    PBDataWriterWriteBOOLField(v5, self->_supportsVoicemail, 9LL);
LABEL_14:
  ringtoneSoundURLuint64_t String = self->_ringtoneSoundURLString;
  if (ringtoneSoundURLString) {
    PBDataWriterWriteStringField(v5, ringtoneSoundURLString, 10LL);
  }
  originalRingtoneSoundURLuint64_t String = self->_originalRingtoneSoundURLString;
  if (originalRingtoneSoundURLString) {
    PBDataWriterWriteStringField(v5, originalRingtoneSoundURLString, 11LL);
  }
  unsigned int v48 = 0u;
  uint64_t v49 = 0u;
  char v46 = 0u;
  char v47 = 0u;
  char v12 = self->_handoffIdentifiers;
  unsigned int v13 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v12,  "countByEnumeratingWithState:objects:count:",  &v46,  v53,  16LL);
  if (v13)
  {
    uint64_t v14 = v13;
    unint64_t v15 = *(void *)v47;
    do
    {
      for (i = 0LL; i != v14; i = (char *)i + 1)
      {
        if (*(void *)v47 != v15) {
          objc_enumerationMutation(v12);
        }
        PBDataWriterWriteStringField(v5, *(void *)(*((void *)&v46 + 1) + 8LL * (void)i), 12LL);
      }

      uint64_t v14 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v12,  "countByEnumeratingWithState:objects:count:",  &v46,  v53,  16LL);
    }

    while (v14);
  }

  if (self->_protoSupportedHandleTypes.count)
  {
    int v17 = 0LL;
    do
      PBDataWriterWriteUint32Field(v5, self->_protoSupportedHandleTypes.list[v17++], 13LL);
    while (v17 < self->_protoSupportedHandleTypes.count);
  }

  uint64_t v44 = 0u;
  unint64_t v45 = 0u;
  char v42 = 0u;
  unsigned int v43 = 0u;
  char v18 = self->_emergencyLabeledHandles;
  unsigned int v19 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v18,  "countByEnumeratingWithState:objects:count:",  &v42,  v52,  16LL);
  if (v19)
  {
    uint64_t v20 = v19;
    unint64_t v21 = *(void *)v43;
    do
    {
      for (j = 0LL; j != v20; j = (char *)j + 1)
      {
        if (*(void *)v43 != v21) {
          objc_enumerationMutation(v18);
        }
        PBDataWriterWriteSubmessage(v5, *(void *)(*((void *)&v42 + 1) + 8LL * (void)j), 14LL);
      }

      uint64_t v20 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v18,  "countByEnumeratingWithState:objects:count:",  &v42,  v52,  16LL);
    }

    while (v20);
  }

  if ((*(_BYTE *)&self->_has & 0x20) != 0) {
    PBDataWriterWriteBOOLField(v5, self->_supportsRecents, 15LL);
  }
  unint64_t v40 = 0u;
  char v41 = 0u;
  unsigned int v38 = 0u;
  uint64_t v39 = 0u;
  id v23 = self->_prioritizedSenderIdentities;
  int v24 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v23,  "countByEnumeratingWithState:objects:count:",  &v38,  v51,  16LL);
  if (v24)
  {
    uint64_t v25 = v24;
    uint64_t v26 = *(void *)v39;
    do
    {
      for (k = 0LL; k != v25; k = (char *)k + 1)
      {
        if (*(void *)v39 != v26) {
          objc_enumerationMutation(v23);
        }
        PBDataWriterWriteSubmessage(v5, *(void *)(*((void *)&v38 + 1) + 8LL * (void)k), 16LL);
      }

      uint64_t v25 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v23,  "countByEnumeratingWithState:objects:count:",  &v38,  v51,  16LL);
    }

    while (v25);
  }

  char v36 = 0u;
  char v37 = 0u;
  uint64_t v34 = 0u;
  unint64_t v35 = 0u;
  unsigned int v28 = self->_emergencyHandles;
  uint64_t v29 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v28,  "countByEnumeratingWithState:objects:count:",  &v34,  v50,  16LL);
  if (v29)
  {
    unint64_t v30 = v29;
    char v31 = *(void *)v35;
    do
    {
      for (m = 0LL; m != v30; m = (char *)m + 1)
      {
        if (*(void *)v35 != v31) {
          objc_enumerationMutation(v28);
        }
        PBDataWriterWriteSubmessage(v5, *(void *)(*((void *)&v34 + 1) + 8LL * (void)m), 17LL);
      }

      unint64_t v30 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v28,  "countByEnumeratingWithState:objects:count:",  &v34,  v50,  16LL);
    }

    while (v30);
  }

  bundleIdentifier = self->_bundleIdentifier;
  if (bundleIdentifier) {
    PBDataWriterWriteStringField(v5, bundleIdentifier, 18LL);
  }
}

  self->_supportsEmergency = *((_BYTE *)v4 + 122);
  *(_BYTE *)&self->_has |= 0x10u;
  if ((*((_BYTE *)v4 + 128) & 0x40) != 0)
  {
LABEL_13:
    self->_supportsVoicemail = *((_BYTE *)v4 + 124);
    *(_BYTE *)&self->_has |= 0x40u;
  }
}

              sub_1001B4B8C(v1);
              return;
            }
          }
        }
      }
    }

        id v11 = v23;
        char v12 = v24;
        if (a2 < 0) {
          goto LABEL_13;
        }
LABEL_16:
        if (v12)
        {
          int v24 = (v12 - 1) & v12;
          uint64_t v25 = __clz(__rbit64(v12)) | (v11 << 6);
          id v23 = v11;
        }

        else
        {
          uint64_t v26 = v11 + 1;
          if (__OFADD__(v11, 1LL))
          {
            __break(1u);
            goto LABEL_72;
          }

          if (v26 >= v88) {
            goto LABEL_60;
          }
          char v27 = *(void *)(v89 + 8 * v26);
          id v23 = v11 + 1;
          if (!v27)
          {
            id v23 = v11 + 2;
            if (v11 + 2 >= v88) {
              goto LABEL_60;
            }
            char v27 = *(void *)(v89 + 8 * v23);
            if (!v27)
            {
              id v23 = v11 + 3;
              if (v11 + 3 >= v88) {
                goto LABEL_60;
              }
              char v27 = *(void *)(v89 + 8 * v23);
              if (!v27)
              {
                id v23 = v11 + 4;
                if (v11 + 4 >= v88) {
                  goto LABEL_60;
                }
                char v27 = *(void *)(v89 + 8 * v23);
                if (!v27)
                {
                  unsigned int v28 = v11 + 5;
                  while (v28 < v88)
                  {
                    char v27 = *(void *)(v89 + 8 * v28++);
                    if (v27)
                    {
                      id v23 = v28 - 1;
                      goto LABEL_31;
                    }
                  }

                  goto LABEL_60;
                }
              }
            }
          }

  swift_bridgeObjectRelease(v27);
  uint64_t v116 = *(void **)(v155 + qword_100448800);
  if (!v116) {
    return sub_10025A358((uint64_t)v159);
  }
  uint64_t result = (uint64_t)[v116 v25[404]];
  if (!result) {
    return sub_10025A358((uint64_t)v159);
  }
  unint64_t v117 = 0LL;
  char v118 = 1LL << v159[32];
  char v119 = -1LL;
  if (v118 < 64) {
    char v119 = ~(-1LL << v118);
  }
  unsigned int v120 = v159 + 56;
  unint64_t v121 = v119 & *((void *)v159 + 7);
  char v122 = (unint64_t)(v118 + 63) >> 6;
  while (v121)
  {
    char v123 = __clz(__rbit64(v121));
    v121 &= v121 - 1;
    unsigned int v124 = v123 | (v117 << 6);
LABEL_85:
    if (*(_BYTE *)(*((void *)v159 + 6) + 56 * v124 + 40) == 1)
    {

      return sub_10025A358((uint64_t)v159);
    }
  }

  uint64_t v125 = v117 + 1;
  if (__OFADD__(v117, 1LL))
  {
    __break(1u);
    goto LABEL_90;
  }

  if (v125 >= v122) {
    goto LABEL_87;
  }
  unint64_t v126 = *(void *)&v120[8 * v125];
  ++v117;
  if (v126) {
    goto LABEL_84;
  }
  unint64_t v117 = v125 + 1;
  if (v125 + 1 >= v122) {
    goto LABEL_87;
  }
  unint64_t v126 = *(void *)&v120[8 * v117];
  if (v126) {
    goto LABEL_84;
  }
  unint64_t v117 = v125 + 2;
  if (v125 + 2 >= v122) {
    goto LABEL_87;
  }
  unint64_t v126 = *(void *)&v120[8 * v117];
  if (v126) {
    goto LABEL_84;
  }
  unint64_t v117 = v125 + 3;
  if (v125 + 3 >= v122) {
    goto LABEL_87;
  }
  unint64_t v126 = *(void *)&v120[8 * v117];
  if (v126) {
    goto LABEL_84;
  }
  unint64_t v117 = v125 + 4;
  if (v125 + 4 >= v122) {
    goto LABEL_87;
  }
  unint64_t v126 = *(void *)&v120[8 * v117];
  if (v126) {
    goto LABEL_84;
  }
  unint64_t v117 = v125 + 5;
  if (v125 + 5 >= v122) {
    goto LABEL_87;
  }
  unint64_t v126 = *(void *)&v120[8 * v117];
  if (v126)
  {
LABEL_84:
    unint64_t v121 = (v126 - 1) & v126;
    unsigned int v124 = __clz(__rbit64(v126)) + (v117 << 6);
    goto LABEL_85;
  }

  char v127 = v125 + 6;
  if (v127 >= v122)
  {
LABEL_87:
    char v128 = (id)result;
    sub_1001B9A24(v128, (uint64_t)&v160);
    unsigned int v129 = v161;
    unint64_t v130 = v163;
    char v131 = v165;
    v175 = v160;
    v176 = v161;
    v177 = v162;
    v178 = v163;
    v179 = v164;
    v180 = 1;
    v181 = v165;
    swift_bridgeObjectRetain(v161);
    swift_bridgeObjectRetain(v130);
    uint64_t v132 = v131;
    sub_10024AC78();

    BOOL v133 = v156;
    uint64_t v134 = v157;
    v135 = v158;

    swift_bridgeObjectRelease(v130);
    swift_bridgeObjectRelease(v129);

    swift_bridgeObjectRelease(v134);
    swift_bridgeObjectRelease(v133);
    return sub_10025A358((uint64_t)v159);
  }

  unint64_t v126 = *(void *)&v120[8 * v127];
  if (v126)
  {
    unint64_t v117 = v127;
    goto LABEL_84;
  }

  while (1)
  {
    unint64_t v117 = v127 + 1;
    if (__OFADD__(v127, 1LL)) {
      break;
    }
    if (v117 >= v122) {
      goto LABEL_87;
    }
    unint64_t v126 = *(void *)&v120[8 * v117];
    ++v127;
    if (v126) {
      goto LABEL_84;
    }
  }

  if (((*(unsigned __int8 *)(a1 + 145) ^ *(unsigned __int8 *)(a2 + 145)) & 1) != 0
    || ((*(unsigned __int8 *)(a1 + 55) ^ *(unsigned __int8 *)(a2 + 55)) & 1) != 0)
  {
    return 0LL;
  }

  uint64_t result = *(unsigned __int8 *)(a2 + 152);
  if ((*(_BYTE *)(a1 + 152) & 1) == 0) {
    return (*(_DWORD *)(a1 + 148) == *(_DWORD *)(a2 + 148)) & ~(_DWORD)result;
  }
  return result;
}

LABEL_38:
}

  *((_BYTE *)v6 + 89) = self->_isGFTDowngradeToOneToOneAvailable;
  *((_DWORD *)v6 + 26) |= 0x400u;
  if ((*(_DWORD *)&self->_has & 0x200) != 0)
  {
LABEL_14:
    *((_BYTE *)v6 + 8_Block_object_dispose(va, 8) = self->_guestModeEnabled;
    *((_DWORD *)v6 + 26) |= 0x200u;
  }

  self->_protoEmergency = *((_BYTE *)v4 + 137);
  *(_DWORD *)&self->_has |= 0x100u;
  if ((*((_DWORD *)v4 + 38) & 0x400) != 0)
  {
LABEL_25:
    self->_protoHasSentInvitation = *((_BYTE *)v4 + 139);
    *(_DWORD *)&self->_has |= 0x400u;
  }

  char v37 = -[CSDMessagingConversationParticipantAssociation copyWithZone:]( self->_participantAssociation,  "copyWithZone:",  a3,  (void)v46);
  unsigned int v38 = (void *)*((void *)v6 + 9);
  *((void *)v6 + 9) = v37;

  if ((*((_BYTE *)&self->_has + 1) & 0x10) != 0)
  {
    *((_BYTE *)v6 + 120) = self->_isUPlusNDowngradeAvailable;
    *((_DWORD *)v6 + 32) |= 0x1000u;
  }

  uint64_t v39 = -[NSString copyWithZone:](self->_collaborationIdentifier, "copyWithZone:", a3);
  unint64_t v40 = (void *)*((void *)v6 + 2);
  *((void *)v6 + 2) = v39;

  char v41 = self->_has;
  if ((*(_DWORD *)&v41 & 0x10000) != 0)
  {
    *((_BYTE *)v6 + 124) = self->_supportsLeaveContext;
    *((_DWORD *)v6 + 32) |= 0x10000u;
    char v41 = self->_has;
    if ((*(_WORD *)&v41 & 0x4000) == 0)
    {
LABEL_42:
      if ((*(_WORD *)&v41 & 0x800) == 0) {
        goto LABEL_43;
      }
      goto LABEL_59;
    }
  }

  else if ((*(_WORD *)&v41 & 0x4000) == 0)
  {
    goto LABEL_42;
  }

  *((_BYTE *)v6 + 122) = self->_isUPlusOneScreenSharingAvailable;
  *((_DWORD *)v6 + 32) |= 0x4000u;
  char v41 = self->_has;
  if ((*(_WORD *)&v41 & 0x800) == 0)
  {
LABEL_43:
    if ((*(_WORD *)&v41 & 0x2000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_60;
  }

  BOOL v9 = 0LL;
  if ((*(_WORD *)&v6 & 0x2000) != 0)
  {
LABEL_33:
    int v10 = 2654435761LL * self->_isUPlusOneAVLessAvailable;
    if ((*(_BYTE *)&v6 & 8) != 0) {
      goto LABEL_34;
    }
LABEL_40:
    id v11 = 0LL;
    if ((*(_BYTE *)&v6 & 4) != 0) {
      goto LABEL_35;
    }
    goto LABEL_41;
  }
}

    char v12 = 0;
    goto LABEL_39;
  }

  if ((*((_BYTE *)v4 + 60) & 4) != 0) {
    goto LABEL_38;
  }
LABEL_34:
  char v12 = (*((_BYTE *)v4 + 60) & 1) == 0;
  if ((has & 1) != 0)
  {
    if ((*((_BYTE *)v4 + 60) & 1) == 0 || self->_lifetimePolicy != *((_DWORD *)v4 + 6)) {
      goto LABEL_38;
    }
    char v12 = 1;
  }
}

    unint64_t v30 = v5;
LABEL_39:
    sub_1001B4B8C(v30);

    return;
  }

  __break(1u);
}

  __break(1u);
}

      ++v9;
    }
  }

  id v11 = 0LL;
LABEL_42:
  swift_bridgeObjectRelease(v6);
  unsigned int v57 = *v1;
  unint64_t v58 = (void *)swift_bridgeObjectRetain(*v1);
  char v59 = v95;
  sub_10025314C(v58, v95);
  unsigned int v61 = v60;
  swift_bridgeObjectRelease(v57);
  if ((v61 & 1) != 0)
  {
    swift_bridgeObjectRelease(v59);
LABEL_55:

    return;
  }

  uint64_t v62 = sub_1001704C4();
  unint64_t v63 = sub_1001AFF14((uint64_t *)&unk_100447E30);
  char v64 = v59;
  char v65 = swift_allocObject(v63, 112LL, 7LL);
  *(_OWORD *)(v65 + 16) = xmmword_10037B1B0;
  unsigned int v66 = sub_1001AFF14(&qword_10044ACF8);
  *(void *)(v65 + 56) = v66;
  sub_1001C6AE8(&qword_10044AD00, &qword_10044ACF8);
  *(void *)(v65 + 32) = v64;
  uint64_t v67 = *v1;
  *(void *)(v65 + 96) = v66;
  *(void *)(v65 + 104) = v68;
  *(void *)(v65 + 64) = v68;
  *(void *)(v65 + 72) = v67;
  char v69 = swift_bridgeObjectRetain(v67);
  char v70 = static os_log_type_t.default.getter(v69);
  os_log(_:dso:log:type:_:)("Updated routes from %@ to %@", 28LL, 2LL, &_mh_execute_header, v62, v70, v65);

  swift_bridgeObjectRelease(v65);
  unsigned int v71 = (uint64_t *)(v2 + OBJC_IVAR___CSDRouteController_pickWhenAvailableRouteIdentifier);
  uint64_t v72 = *(void *)(v2 + OBJC_IVAR___CSDRouteController_pickWhenAvailableRouteIdentifier + 8);
  if (v72)
  {
    unint64_t v73 = *v71;
    swift_bridgeObjectRetain(*(void *)(v2 + OBJC_IVAR___CSDRouteController_pickWhenAvailableRouteIdentifier + 8));
    char v74 = sub_10025D250(v73, v72);
    if (v74)
    {
      unint64_t v77 = v74;
      char v78 = v75;
      char v79 = v76;
      unsigned int v97 = v11;
      if (qword_1004468F0 != -1) {
        swift_once(&qword_1004468F0, sub_100208418);
      }
      unsigned int v80 = qword_100454018;
      uint64_t v81 = swift_allocObject(v63, 72LL, 7LL);
      *(_OWORD *)(v81 + 16) = xmmword_10037B290;
      v108[0] = v73;
      v108[1] = v72;
      unint64_t v82 = String.init<A>(reflecting:)(v108, &type metadata for String);
      char v84 = v83;
      *(void *)(v81 + 56) = &type metadata for String;
      unsigned int v85 = sub_1001B2330();
      *(void *)(v81 + 64) = v85;
      *(void *)(v81 + 32) = v82;
      *(void *)(v81 + 40) = v84;
      uint64_t v86 = static os_log_type_t.default.getter(v85);
      os_log(_:dso:log:type:_:)( "pickWhenAvailable route identifier %@ did become available, picking now...",  74LL,  2LL,  &_mh_execute_header,  v80,  v86,  v81);
      swift_bridgeObjectRelease(v81);
      unint64_t v87 = v71[1];
      *unsigned int v71 = 0LL;
      v71[1] = 0LL;
      swift_bridgeObjectRelease(v87);
      sub_10025D514(v77, v78, v79);
      swift_unknownObjectRelease(v78);

      id v11 = v97;
    }

    else
    {
      swift_bridgeObjectRelease(v72);
    }
  }

  char v88 = *(void (**)(uint64_t))(v2 + OBJC_IVAR___CSDRouteController_routesDidChangeHandler);
  if (v88)
  {
    uint64_t v89 = *(void *)(v2 + OBJC_IVAR___CSDRouteController_routesDidChangeHandler + 8);
    v90 = swift_retain(v89);
    v88(v90);
    sub_1001B5D3C((uint64_t)v88, v89);
  }

  if (v11)
  {
    char v91 = *(void (**)(id))(v2 + OBJC_IVAR___CSDRouteController_pickedRouteDidChangeHandler);
    if (v91)
    {
      unsigned int v92 = *(void *)(v2 + OBJC_IVAR___CSDRouteController_pickedRouteDidChangeHandler + 8);
      id v11 = v11;
      sub_1001B5D70((uint64_t)v91, v92);
      v91(v11);

      sub_1001B5D3C((uint64_t)v91, v92);
    }

    goto LABEL_55;
  }

    uint64_t v29 = v6;
LABEL_39:
    sub_1001B4B8C(v29);

    swift_bridgeObjectRelease(a2);
    return;
  }

  __break(1u);
}

    swift_bridgeObjectRelease(a6);
    uint64_t v14 = &selRef_renewPseudonymIfNeeded_completionHandler_;
    [v17 setAssociationVoucher:0];
    unint64_t v15 = &selRef_sharedPrivacyManager;

    int v10 = v119;
    char v12 = v120;
LABEL_25:
    if (v11 == v10) {
      goto LABEL_82;
    }
  }

  __break(1u);
}

LABEL_33:
  *((_BYTE *)v6 + 90) = self->_isGondolaCallingAvailable;
  *((_DWORD *)v6 + 26) |= 0x800u;
  char v12 = self->_has;
  if ((*(_WORD *)&v12 & 0x4000) == 0)
  {
LABEL_9:
    if ((*(_WORD *)&v12 & 0x1000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_35;
  }

  char v12 = 0LL;
LABEL_34:
  unsigned int v13 = (unint64_t)-[NSData hash](self->_personaHandshakeData, "hash");
  uint64_t v14 = self->_has;
  if ((*(_DWORD *)&v14 & 0x20000) != 0)
  {
    unint64_t v15 = 2654435761LL * self->_isSpatialPersonaEnabled;
    if ((*(_DWORD *)&v14 & 0x80000) != 0)
    {
LABEL_36:
      char v16 = 2654435761LL * self->_isUPlusOneAVLessAvailable;
      if ((*(_WORD *)&v14 & 0x100) != 0) {
        goto LABEL_37;
      }
      goto LABEL_46;
    }
  }

  else
  {
    unint64_t v15 = 0LL;
    if ((*(_DWORD *)&v14 & 0x80000) != 0) {
      goto LABEL_36;
    }
  }

  char v16 = 0LL;
  if ((*(_WORD *)&v14 & 0x100) != 0)
  {
LABEL_37:
    int v17 = 2654435761LL * self->_visionFeatureVersion;
    if ((*(_BYTE *)&v14 & 0x80) != 0) {
      goto LABEL_38;
    }
    goto LABEL_47;
  }

  self->_isGFTDowngradeToOneToOneAvailable = *((_BYTE *)v5 + 89);
  *(_DWORD *)&self->_has |= 0x400u;
  if ((*((_DWORD *)v5 + 26) & 0x200) != 0)
  {
LABEL_22:
    self->_guestModeEnabled = *((_BYTE *)v5 + 88);
    *(_DWORD *)&self->_has |= 0x200u;
  }

        char v37 = (char *)v37 + 1;
      }

      while (v35 != v37);
      uint64_t v81 = [v33 countByEnumeratingWithState:&v183 objects:v190 count:16];
      unint64_t v35 = v81;
    }

    while (v81);
  }

  unint64_t v82 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableSet set](&OBJC_CLASS___NSMutableSet, "set"));
  v179 = 0u;
  v180 = 0u;
  v181 = 0u;
  v182 = 0u;
  char v83 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation lightweightMembers](self, "lightweightMembers"));
  char v84 = [v83 countByEnumeratingWithState:&v179 objects:v189 count:16];
  if (v84)
  {
    unsigned int v85 = v84;
    uint64_t v86 = *(void *)v180;
    do
    {
      for (i = 0LL; i != v85; i = (char *)i + 1)
      {
        if (*(void *)v180 != v86) {
          objc_enumerationMutation(v83);
        }
        [v82 addObject:*(void *)(*((void *)&v179 + 1) + 8 * (void)i)];
      }

      unsigned int v85 = [v83 countByEnumeratingWithState:&v179 objects:v189 count:16];
    }

    while (v85);
  }

  v164 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableSet set](&OBJC_CLASS___NSMutableSet, "set"));
  v175 = 0u;
  v176 = 0u;
  v177 = 0u;
  v178 = 0u;
  obj = v33;
  char v88 = [obj countByEnumeratingWithState:&v175 objects:v188 count:16];
  v167 = v82;
  if (v88)
  {
    uint64_t v89 = v88;
    v90 = *(void *)v176;
    do
    {
      for (j = 0LL; j != v89; j = (char *)j + 1)
      {
        if (*(void *)v176 != v90) {
          objc_enumerationMutation(obj);
        }
        unsigned int v92 = *(void **)(*((void *)&v175 + 1) + 8LL * (void)j);
        if ([v92 isLightweightMember])
        {
          uint64_t v93 = (void *)objc_claimAutoreleasedReturnValue([v92 handle]);
          if ([v82 containsObject:v93])
          {

LABEL_67:
            uint64_t v98 = sub_1001704C4();
            unint64_t v99 = (os_log_s *)objc_claimAutoreleasedReturnValue(v98);
            if (os_log_type_enabled(v99, OS_LOG_TYPE_DEFAULT))
            {
              char v100 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation UUID](self, "UUID"));
              char v101 = (void *)objc_claimAutoreleasedReturnValue([v92 handle]);
              *(_DWORD *)buf = 138412546;
              v192 = v100;
              v193 = 2112;
              v194 = v101;
              _os_log_impl( (void *)&_mh_execute_header,  v99,  OS_LOG_TYPE_DEFAULT,  "Conversation UUID %@ already contains member with handle %@, filtering out.",  buf,  0x16u);
            }
          }

          else
          {
            unint64_t v94 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation localMember](self, "localMember"));
            char v95 = (void *)objc_claimAutoreleasedReturnValue([v94 handle]);
            char v96 = (void *)objc_claimAutoreleasedReturnValue([v92 handle]);
            unsigned int v97 = [v95 isEquivalentToHandle:v96];

            unint64_t v82 = v167;
            if ((v97 & 1) != 0) {
              goto LABEL_67;
            }
            unsigned int v102 = (os_log_s *)[v92 copy];
            unint64_t v99 = v102;
            if (v170)
            {
              -[os_log_s setValidationSource:](v102, "setValidationSource:", 1LL);
              unint64_t v103 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation localMember](self, "localMember"));
              char v104 = (void *)objc_claimAutoreleasedReturnValue([v103 handle]);
              -[os_log_s setLightweightPrimary:](v99, "setLightweightPrimary:", v104);

              -[os_log_s setLightweightPrimaryParticipantIdentifier:]( v99,  "setLightweightPrimaryParticipantIdentifier:",  -[CSDConversation localParticipantIdentifier](self, "localParticipantIdentifier"));
              -[CSDConversation setLocalLightweightSecondaryMember:](self, "setLocalLightweightSecondaryMember:", v99);
            }

            [v164 addObject:v99];
          }

          continue;
        }
      }

      uint64_t v89 = [obj countByEnumeratingWithState:&v175 objects:v188 count:16];
    }

    while (v89);
  }

  if ([v165 count] || objc_msgSend(v163, "count") || objc_msgSend(v164, "count"))
  {
    char v105 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation activitySessions](self, "activitySessions"));
    unsigned int v106 = -[NSMutableSet initWithCapacity:]( [NSMutableSet alloc],  "initWithCapacity:",  [v105 count]);
    v171 = 0u;
    v172 = 0u;
    v173 = 0u;
    v174 = 0u;
    unint64_t v107 = v105;
    char v108 = [v107 countByEnumeratingWithState:&v171 objects:v187 count:16];
    if (v108)
    {
      char v109 = v108;
      unsigned int v110 = *(void *)v172;
      do
      {
        for (k = 0LL; k != v109; k = (char *)k + 1)
        {
          if (*(void *)v172 != v110) {
            objc_enumerationMutation(v107);
          }
          unint64_t v112 = *(void **)(*((void *)&v171 + 1) + 8LL * (void)k);
          char v113 = (void *)objc_claimAutoreleasedReturnValue([v112 activity]);
          char v114 = [v113 isStaticActivity];

          if ((v114 & 1) == 0)
          {
            unsigned int v115 = (void *)objc_claimAutoreleasedReturnValue( +[CSDMessagingConversationActivitySession activitySessionWithCSDConversationActivitySession:fromConversation:forStorage:]( &OBJC_CLASS___CSDMessagingConversationActivitySession,  "activitySessionWithCSDConversationActivitySession:fromConversation:forStorage:",  v112,  self,  0LL));
            -[NSMutableSet addObject:](v106, "addObject:", v115);
          }
        }

        char v109 = [v107 countByEnumeratingWithState:&v171 objects:v187 count:16];
      }

      while (v109);
    }

    uint64_t v116 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation stagedActivitySession](self, "stagedActivitySession"));
    if (v116)
    {
      unint64_t v117 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation stagedActivitySession](self, "stagedActivitySession"));
      v159 = (void *)objc_claimAutoreleasedReturnValue( +[CSDMessagingConversationActivitySession activitySessionWithTUConversationActivitySession:fromConversation:forStorage:]( &OBJC_CLASS___CSDMessagingConversationActivitySession,  "activitySessionWithTUConversationActivitySession:fromConversation:forStorage:",  v117,  self,  0LL));
    }

    else
    {
      v159 = 0LL;
    }

    [v162 unionSet:v165];
    -[CSDConversation setRemoteMembers:](self, "setRemoteMembers:", v162);
    char v118 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation otherInvitedHandles](self, "otherInvitedHandles"));
    char v119 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableSet setWithSet:](&OBJC_CLASS___NSMutableSet, "setWithSet:", v118));

    [v119 unionSet:v163];
    v153 = v119;
    -[CSDConversation setOtherInvitedHandles:](self, "setOtherInvitedHandles:", v119);
    unsigned int v120 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation lightweightMembers](self, "lightweightMembers"));
    unint64_t v121 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableSet setWithSet:](&OBJC_CLASS___NSMutableSet, "setWithSet:", v120));

    [v121 unionSet:v164];
    v152 = v121;
    -[CSDConversation setLightweightMembers:](self, "setLightweightMembers:", v121);
    if (v170)
    {
      char v122 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation activeRemoteParticipants](self, "activeRemoteParticipants"));
      char v123 = [v122 mutableCopy];

      unsigned int v124 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation activeLightweightParticipants](self, "activeLightweightParticipants"));
      [v123 unionSet:v124];

      uint64_t v125 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation idsSession](self, "idsSession"));
      unint64_t v126 = [v125 isJoined];

      if (v126)
      {
        char v127 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation localCSDConversationParticipant](self, "localCSDConversationParticipant"));
        [v123 addObject:v127];
      }
    }

    else
    {
      char v123 = 0LL;
    }

    char v128 = v165;
    [v128 unionSet:v164];
    unsigned int v129 = v161;
    [v129 unionSet:v160];
    unint64_t v130 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
    char v131 = v130;
    if (v168) {
      [v130 addObject:IDSRegistrationPropertySupportsModernGFT];
    }
    v166 = v123;
    uint64_t v132 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation featureFlags](self, "featureFlags"));
    v158 = v129;
    if ([v132 uPlusNDowngrade])
    {

      BOOL v133 = v156;
    }

    else
    {
      uint64_t v134 = (char *)[v129 count];
      v135 = &v134[(void)[v128 count]];

      BOOL v133 = v156;
    }

    v150 = v128;
    v136 = -[CSDConversation avMode](self, "avMode");
    v157 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation idsSession](self, "idsSession"));
    v155 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation link](self, "link"));
    v154 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation otherInvitedHandles](self, "otherInvitedHandles"));
    v137 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation report](self, "report"));
    v138 = v133;
    if (!v133) {
      v138 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation invitationPreferences](self, "invitationPreferences"));
    }
    v151 = v131;
    v139 = [v131 copy];
    v140 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation messagesGroupUUID](self, "messagesGroupUUID"));
    v141 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation messagesGroupName](self, "messagesGroupName"));
    BYTE1(v149) = v170;
    LOBYTE(v149) = v168;
    objc_msgSend( v157,  "addMembers:toExistingMembers:activeParticipants:activitySessions:link:otherInvitedHandles:report:invitationPrefere nces:requiredCapabilities:messagesGroupUUID:messagesGroupName:addingFromLetMeIn:triggeredLocally:highlightIdentifi er:stagedActivitySession:avMode:",  v150,  v158,  v166,  v106,  v155,  v154,  v137,  v138,  v139,  v140,  v141,  v149,  0,  v159,  v136);

    v142 = v133;
    if (!v133) {

    }
    v143 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation applicationLaunchPolicyManager](self, "applicationLaunchPolicyManager"));
    v144 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation tuConversation](self, "tuConversation"));
    [v143 updateAllowedHandlesForConversation:v144];

    v145 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation delegate](self, "delegate"));
    [v145 conversation:self addedMembers:v150 triggeredLocally:v170];

    -[CSDConversation _endScreenCallIfNecessary](self, "_endScreenCallIfNecessary");
    v146 = v163;
  }

  else
  {
    v147 = sub_1001704C4();
    unint64_t v107 = (id)objc_claimAutoreleasedReturnValue(v147);
    if (os_log_type_enabled((os_log_t)v107, OS_LOG_TYPE_DEFAULT))
    {
      v148 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation UUID](self, "UUID"));
      *(_DWORD *)buf = 138412290;
      v192 = v148;
      _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v107,  OS_LOG_TYPE_DEFAULT,  "[WARN] No new members were added to conversation UUID: %@",  buf,  0xCu);
    }

    v146 = v163;
    v142 = v156;
  }
}

        unint64_t v15 = 2LL;
        goto LABEL_18;
      }

        goto LABEL_34;
      }

      char v65 = sub_1001704C4();
      uint64_t v26 = (os_log_s *)objc_claimAutoreleasedReturnValue(v65);
      if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
        sub_1002B37D8(v8, v26);
      }
    }

    else
    {
      int v24 = sub_1001704C4();
      uint64_t v25 = (NSUUID *)objc_claimAutoreleasedReturnValue(v24);
      if (!os_log_type_enabled((os_log_t)v25, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_15;
      }
      uint64_t v26 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[CSDIDSChat upgradeSessionUUID](self, "upgradeSessionUUID"));
      *(_DWORD *)buf = 138412546;
      *(void *)unint64_t v68 = v8;
      *(_WORD *)&v68[8] = 2112;
      char v69 = v26;
      _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v25,  OS_LOG_TYPE_DEFAULT,  "[WARN] Not setting upgradeSessionUUID for message: %@ self.upgradeSessionUUID: %@",  buf,  0x16u);
    }

    goto LABEL_15;
  }

  char v37 = sub_1001704C4();
  int v17 = (os_log_s *)objc_claimAutoreleasedReturnValue(v37);
  if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    unsigned int v33 = "[WARN] Ignoring invitation accept since there is no remote from ID set on the session.";
    unint64_t v35 = v17;
    char v36 = 2;
    goto LABEL_26;
  }

  unsigned int v33 = 0LL;
LABEL_34:
  unsigned int v38 = v6;
  if ((*(_WORD *)&v5 & 0x400) != 0) {
    char v32 = 2654435761LL * self->_protoHasSentInvitation;
  }
  else {
    char v32 = 0LL;
  }
  char v31 = -[CSDMessagingHandle hash](self->_handle, "hash");
  if ((*((_BYTE *)&self->_has + 1) & 0x20) != 0) {
    unint64_t v30 = 2654435761LL * self->_protoSOS;
  }
  else {
    unint64_t v30 = 0LL;
  }
  uint64_t v29 = -[CSDMessagingCallProvider hash](self->_protoProvider, "hash");
  id v11 = self->_has;
  if ((*(_DWORD *)&v11 & 0x80000) != 0)
  {
    unsigned int v28 = 2654435761LL * self->_protoVideo;
    if ((*(_DWORD *)&v11 & 0x40000) != 0) {
      goto LABEL_42;
    }
  }

  else
  {
    unsigned int v28 = 0LL;
    if ((*(_DWORD *)&v11 & 0x40000) != 0)
    {
LABEL_42:
      char v27 = 2654435761LL * self->_protoUplinkMuted;
      goto LABEL_45;
    }
  }

  char v27 = 0LL;
LABEL_45:
  uint64_t v26 = -[CSDMessagingCallModel hash](self->_protoCallModel, "hash");
  uint64_t v25 = -[NSString hash](self->_localSenderIdentityUUIDString, "hash");
  int v24 = (unint64_t)-[NSMutableArray hash](self->_remoteParticipantHandles, "hash");
  char v12 = -[NSString hash](self->_localSenderIdentityAccountUUIDString, "hash");
  unsigned int v13 = self->_has;
  if ((*(_BYTE *)&v13 & 0x40) != 0)
  {
    uint64_t v14 = 2654435761LL * self->_protoTTYType;
    if ((*(_DWORD *)&v13 & 0x20000) != 0) {
      goto LABEL_47;
    }
  }

  else
  {
    uint64_t v14 = 0LL;
    if ((*(_DWORD *)&v13 & 0x20000) != 0)
    {
LABEL_47:
      unint64_t v15 = 2654435761LL * self->_protoSupportsTTYWithVoice;
      goto LABEL_50;
    }
  }

  unint64_t v15 = 0LL;
LABEL_50:
  char v16 = -[NSString hash](self->_isoCountryCode, "hash");
  int v17 = self->_has;
  if ((*(_BYTE *)&v17 & 4) == 0)
  {
    char v18 = 0LL;
    if ((*(_WORD *)&v17 & 0x200) != 0) {
      goto LABEL_52;
    }
LABEL_55:
    unsigned int v19 = 0LL;
    if ((*(_DWORD *)&v17 & 0x10000) != 0) {
      goto LABEL_53;
    }
    goto LABEL_56;
  }

  char v18 = 2654435761LL * self->_protoOriginatingUIType;
  if ((*(_WORD *)&v17 & 0x200) == 0) {
    goto LABEL_55;
  }
LABEL_52:
  unsigned int v19 = 2654435761LL * self->_protoFailureExpected;
  if ((*(_DWORD *)&v17 & 0x10000) != 0)
  {
LABEL_53:
    uint64_t v20 = 2654435761LL * self->_protoSupportsEmergencyFallback;
    goto LABEL_57;
  }

  __break(1u);
LABEL_34:
  __break(1u);
}

              swift_bridgeObjectRelease(a3);
              swift_release(v32);
              return;
            }
          }
        }
      }
    }

        if (v7 == v6)
        {
          swift_bridgeObjectRelease(a3);
          swift_bridgeObjectRelease(v5);
          return 0LL;
        }
      }

      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      uint64_t v34 = a2;
      if (v5 < 0) {
        unint64_t v35 = v5;
      }
      else {
        unint64_t v35 = v5 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(v5);
      char v36 = _CocoaArrayWrapper.endIndex.getter(v35);
      a2 = v34;
      unint64_t v6 = v36;
    }

    while (v36);
  }

  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(a3);
  return 0LL;
}

  __break(1u);
}

        if (v21 == (id)v23)
        {
          swift_bridgeObjectRelease(v22);
          unsigned int v57 = (void *)v99;
          char v16 = v86;
          unint64_t v21 = v87;
          uint64_t v20 = &selRef_ignoresBluetoothDeviceUID;
          unsigned int v19 = v94;
          goto LABEL_36;
        }
      }
    }

    swift_bridgeObjectRelease(v22);
    unsigned int v57 = _swiftEmptyArrayStorage;
LABEL_36:
    swift_bridgeObjectRelease(v22);
    sub_10024E96C((uint64_t)v57);
    char v59 = v58;
    sub_1001B4B94(0LL, (unint64_t *)&unk_100447E20, &OBJC_CLASS___TUConversationMember_ptr);
    sub_1001DBD34();
    isa = Set._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v59);
    [v21 setTuConversationMembers:isa];

    [v21 setVideo:1];
    [v21 setVideoEnabled:1];
    a2 = v90;
    a7 = v91;
    int v17 = v88;
    a5 = v89;
  }

  unsigned int v61 = [objc_allocWithZone((Class)CSDMessagingConversationMessage) v20[22]];
  uint64_t v62 = v61;
  if (v61) {
    [v61 setAvMode:2];
  }
  objc_msgSend(v21, "setMessage:", v62, v86, v87);
  unint64_t v63 = (uint64_t)v16;
  (*(void (**)(char *, char *, void *))(v17 + 16))(v19, a5, v16);
  char v64 = *v96;
  uint64_t result = (id)TUCopyIDSCanonicalAddressForHandle(a2);
  if (result)
  {
    unsigned int v66 = v21;
    uint64_t v67 = result;
    unint64_t v68 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    char v70 = v69;

    Date.init()(v71);
    uint64_t v72 = a7;
    if (v66)
    {
      sub_10028E3AC(v66);
      char v74 = v73;
      unsigned int v76 = v75;
    }

    else
    {
      char v74 = 0LL;
      unsigned int v76 = 0xF000000000000000LL;
    }

    unint64_t v77 = v92;
    sub_1001A9670(v92, 1LL, 1LL, v63);
    char v78 = objc_allocWithZone(&OBJC_CLASS___IDSGroupSessionParticipantUpdate);
    char v79 = sub_100266DB4( (uint64_t)v94,  v64,  v93,  v68,  v70,  1LL,  0LL,  0,  v95,  0LL,  0xF000000000000000LL,  v74,  v76,  0LL,  0LL,  v77);
    unsigned int v80 = [objc_allocWithZone(IDSMessageContext) init];
    *char v96 = 0;
    uint64_t v81 = (void *)swift_allocObject(&unk_1003E48E0, 40LL, 7LL);
    v81[2] = v72;
    v81[3] = v79;
    v81[4] = v80;
    v72;
    unint64_t v82 = v79;
    char v83 = v80;
    sub_100265AF4((uint64_t)sub_100267BB0, (uint64_t)v81);

    return (id)swift_release(v81);
  }

  else
  {
    __break(1u);
  }

  return result;
}

            char v16 = (v29 - 1) & v29;
            id v23 = __clz(__rbit64(v29)) + (v15 << 6);
          }

          char v27 = *(id *)(*(void *)(v8 + 48) + 8 * v23);
          if (!v27) {
            goto LABEL_41;
          }
        }

        char v31 = [v27 handleType];
        if (v31 == [v5 type])
        {
          if ([v27 notificationStyles])
          {

LABEL_45:
            sub_1001B4B8C(v8);
LABEL_46:
            unsigned int v33 = v34;
            goto LABEL_47;
          }

          char v32 = (unint64_t)[v27 notificationStyles];

          if ((a1 & ~v32) == 0)
          {

            sub_1001B4B8C(v8);
            goto LABEL_46;
          }

          if ((v38 & 1) == 0)
          {

            goto LABEL_45;
          }
        }

        else
        {
        }
      }
    }
  }

LABEL_34:
  *((_BYTE *)v6 + 93) = self->_isPersonaAvailable;
  *((_DWORD *)v6 + 26) |= 0x4000u;
  char v12 = self->_has;
  if ((*(_WORD *)&v12 & 0x1000) == 0)
  {
LABEL_10:
    if ((*(_BYTE *)&v12 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_36;
  }
}
}

        return 0LL;
      default:
        uint64_t result = PBReaderSkipValueWithTag(a2);
        if (!(_DWORD)result) {
          return result;
        }
        goto LABEL_32;
    }
  }

LABEL_60:
              uint64_t v14 = v115;
              unsigned int v13 = v116;
            }

            break;
          case 0x18:
            -[CSDConversationManager handleReceivedLinkInvalidatedMessage:fromHandle:]( v117,  "handleReceivedLinkInvalidatedMessage:fromHandle:",  v30,  v41);
            goto LABEL_60;
          default:
            goto LABEL_35;
        }

        goto LABEL_110;
      }

    -[CSDAbstractFaceTimeConversationProviderDelegate reportNewIncomingCallForConversation:fromHandle:isReRing:]( self,  "reportNewIncomingCallForConversation:fromHandle:isReRing:",  v9,  v56,  0LL);
    goto LABEL_42;
  }

  unsigned int v38 = [v8 type];

  if (v38 == 1)
  {
    uint64_t v39 = sub_1001704C4();
    unint64_t v40 = (os_log_s *)objc_claimAutoreleasedReturnValue(v39);
    if (os_log_type_enabled(v40, OS_LOG_TYPE_DEFAULT))
    {
      char v41 = (void *)objc_claimAutoreleasedReturnValue([v8 tuInvitationPreferences]);
      char v42 = (const __CFString *)[v41 count];
      unsigned int v43 = @"NO";
      if (v36) {
        unsigned int v43 = @"YES";
      }
      *(_DWORD *)buf = 134218242;
      unint64_t v58 = v42;
      char v59 = 2112;
      char v60 = v43;
      _os_log_impl( (void *)&_mh_execute_header,  v40,  OS_LOG_TYPE_DEFAULT,  "setting shouldRing to YES, message.tuInvitationPreferences.count: %ld, invitationPreferencesEqual %@",  buf,  0x16u);
    }

    goto LABEL_29;
  }

  if (v29) {
    goto LABEL_29;
  }
LABEL_39:
  unint64_t v50 = sub_1001704C4();
  char v51 = (os_log_s *)objc_claimAutoreleasedReturnValue(v50);
  if (os_log_type_enabled(v51, OS_LOG_TYPE_DEFAULT))
  {
    char v52 = (__CFString *)objc_claimAutoreleasedReturnValue(-[__CFString UUID](v9, "UUID"));
    unsigned int v53 = (__CFString *)objc_claimAutoreleasedReturnValue(-[__CFString invitationPreferences](v9, "invitationPreferences"));
    unint64_t v54 = (void *)objc_claimAutoreleasedReturnValue([v8 tuInvitationPreferences]);
    *(_DWORD *)buf = 138412802;
    unint64_t v58 = v52;
    char v59 = 2114;
    char v60 = v53;
    unsigned int v61 = 2114;
    uint64_t v62 = v54;
    _os_log_impl( (void *)&_mh_execute_header,  v51,  OS_LOG_TYPE_DEFAULT,  "[WARN] Ignoring incoming invitation message for %@ because invitation preferences requested no-ring. conversation. invitationPreferences=%{public}@, message.tuInvitationPreferences=%{public}@",  buf,  0x20u);
  }

  int v10 = v56;
LABEL_42:
}

    unint64_t v45 = (void *)objc_claimAutoreleasedReturnValue(-[CSDAbstractFaceTimeConversationProviderDelegate provider](self, "provider"));
    [v45 reportNewOutgoingCallWithUUID:v13 update:v30];

    char v31 = (void *)objc_claimAutoreleasedReturnValue(-[CSDAbstractFaceTimeConversationProviderDelegate provider](self, "provider"));
    char v46 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
    [v31 reportOutgoingCallWithUUID:v13 connectedAtDate:v46];

LABEL_35:
LABEL_36:

    goto LABEL_37;
  }

  if (a4 && !a5)
  {
    char v22 = (void *)objc_claimAutoreleasedReturnValue( -[CSDAbstractFaceTimeConversationProviderDelegate callUUIDsByConversationUUID]( self,  "callUUIDsByConversationUUID"));
    id v23 = (void *)objc_claimAutoreleasedReturnValue([v9 UUID]);
    unsigned int v13 = (void *)objc_claimAutoreleasedReturnValue([v22 objectForKeyedSubscript:v23]);

    if (!v13)
    {
LABEL_37:

      goto LABEL_38;
    }

    int v24 = sub_1001704C4();
    uint64_t v25 = (os_log_s *)objc_claimAutoreleasedReturnValue(v24);
    if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue([v9 UUID]);
      *(_DWORD *)buf = 138412546;
      unsigned int v53 = (unint64_t)v13;
      unint64_t v54 = 2112;
      char v55 = (unint64_t)v26;
      _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEFAULT,  "Mode changing to None, Stopping tracking callUUID: %@ conversationUUID: %@",  buf,  0x16u);
    }

    char v27 = (void *)objc_claimAutoreleasedReturnValue(-[CSDAbstractFaceTimeConversationProviderDelegate provider](self, "provider"));
    unsigned int v28 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
    [v27 reportCallWithUUID:v13 endedAtDate:v28 reason:0];

    uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue([v9 UUID]);
    -[CSDFaceTimeConversationProviderDelegate setCallUUID:forConversationUUID:]( self,  "setCallUUID:forConversationUUID:",  0LL,  v29);

    -[CSDAbstractFaceTimeConversationProviderDelegate setConversationUUID:forCallUUID:]( self,  "setConversationUUID:forCallUUID:",  0LL,  v13);
    unint64_t v30 = (CXCallUpdate *)objc_claimAutoreleasedReturnValue( -[CSDAbstractFaceTimeConversationProviderDelegate conversationUUIDsAwaitingActiveAudioSession]( self,  "conversationUUIDsAwaitingActiveAudioSession"));
    char v31 = (void *)objc_claimAutoreleasedReturnValue([v9 UUID]);
    -[CXCallUpdate removeObject:](v30, "removeObject:", v31);
    goto LABEL_35;
  }
}

  if (v2 < 0) {
    unsigned int v19 = v2;
  }
  else {
    unsigned int v19 = v2 & 0xFFFFFFFFFFFFFF8LL;
  }
  sub_1001B4C60();
  id v3 = _CocoaArrayWrapper.endIndex.getter(v19);
  if (!v3) {
    goto LABEL_10;
  }
LABEL_3:
  char v4 = v2 & 0xC000000000000001LL;
  unsigned int v5 = 4LL;
  while (1)
  {
    if (v4) {
      unint64_t v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5 - 4, v2);
    }
    else {
      unint64_t v6 = *(id *)(v2 + 8 * v5);
    }
    unint64_t v7 = v6;
    char v8 = v5 - 3;
    if (__OFADD__(v5 - 4, 1LL))
    {
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }

    ++v5;
    if (v8 == v3) {
      goto LABEL_10;
    }
  }

  id v11 = [v7 originator];

  if (v8 != v3)
  {
    do
    {
      if (v4)
      {
        char v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v2);
      }

      else
      {
        if ((v8 & 0x8000000000000000LL) != 0) {
          goto LABEL_32;
        }
        if (v8 >= *(void *)((v2 & 0xFFFFFFFFFFFFFF8LL) + 0x10)) {
          goto LABEL_33;
        }
        char v12 = *(id *)(v2 + 8 * v8 + 32);
      }

      unsigned int v13 = v12;
      uint64_t v14 = v8 + 1;
      if (__OFADD__(v8, 1LL)) {
        goto LABEL_31;
      }
      if (sub_1001B4C6C())
      {
        unint64_t v15 = [v13 originator];

        char v16 = [v11 revision];
        int v17 = [v15 revision];
        else {
          char v18 = v11;
        }

        char v8 = v14;
      }

      else
      {

        ++v8;
      }
    }

    while (v14 != v3);
  }

  sub_1001B4C54();
  BOOL v9 = [v11 revision];

  int v10 = 0;
LABEL_13:
  *(void *)a2 = v9;
  *(_BYTE *)(a2 + _Block_object_dispose(va, 8) = v10;
}

  swift_release(v7);
  id v2 = v37;
  char v36 = 1LL << *(_BYTE *)(v7 + 32);
  if (v36 > 63) {
    sub_10024772C(0LL, (unint64_t)(v36 + 63) >> 6, v39);
  }
  else {
    *uint64_t v39 = -1LL << v36;
  }
  *(void *)(v7 + 16) = 0LL;
LABEL_38:
  uint64_t result = swift_release(v7);
  void *v2 = v9;
  return result;
}

              sub_1001B4B8C(v1);
              return;
            }
          }
        }
      }
    }

LABEL_35:
  *((_BYTE *)v6 + 91) = self->_isLightweight;
  *((_DWORD *)v6 + 26) |= 0x1000u;
  char v12 = self->_has;
  if ((*(_BYTE *)&v12 & 0x10) == 0)
  {
LABEL_11:
    if ((*(_BYTE *)&v12 & 4) == 0) {
      goto LABEL_12;
    }
    goto LABEL_37;
  }
        }

        unint64_t v40 = [obj countByEnumeratingWithState:&v45 objects:v54 count:16];
      }

      while (v40);

      BOOL v9 = v36;
      char v4 = v37;
      if (v18)
      {
        char v31 = sub_1001704C4();
        char v32 = (os_log_s *)objc_claimAutoreleasedReturnValue(v31);
        if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412546;
          unsigned int v57 = v15;
          unint64_t v58 = 2112;
          char v59 = v18;
          _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_DEFAULT,  "A device exists with a linkedUserURI that matches Caller ID %@, so using that as the dialing device: %@",  buf,  0x16u);
        }

        unsigned int v33 = (void *)objc_claimAutoreleasedReturnValue([v18 destination]);
        -[CSDRelayMessagingController setDialingIDSDestination:](v35, "setDialingIDSDestination:", v33);

        goto LABEL_44;
      }
    }

    else
    {
    }

    uint64_t v34 = sub_1001704C4();
    char v18 = (id)objc_claimAutoreleasedReturnValue(v34);
    if (os_log_type_enabled((os_log_t)v18, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      unsigned int v57 = v15;
      _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v18,  OS_LOG_TYPE_DEFAULT,  "[WARN] Could not find a dialingIDSDevice. No paired devices exist and no devices that support phone calls and ha ve a linkedUserURI for %@ exist.",  buf,  0xCu);
    }
  }

  self->_protoShouldSuppressRingtone = *((_BYTE *)v4 + 143);
  *(_DWORD *)&self->_has |= 0x4000u;
  unint64_t v7 = *((_DWORD *)v4 + 38);
  if ((v7 & 0x800) == 0)
  {
LABEL_22:
    if ((v7 & 0x10) == 0) {
      goto LABEL_23;
    }
    goto LABEL_37;
  }
}

LABEL_36:
          goto LABEL_37;
        }

        unsigned int v43 = sub_1001704C4();
        char v27 = (os_log_s *)objc_claimAutoreleasedReturnValue(v43);
        if (!os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_17;
        }
        unint64_t v45 = 138412290;
        char v46 = v9;
        unsigned int v28 = "[WARN] Dismissing let me in delegation response because no conversation was found for link's groupUUID: %@";
        uint64_t v29 = v27;
        unint64_t v30 = 12;
LABEL_16:
        _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, v28, (uint8_t *)&v45, v30);
LABEL_17:
      }
    }

    else
    {
      uint64_t v26 = sub_1001704C4();
      char v16 = (os_log_s *)objc_claimAutoreleasedReturnValue(v26);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
      {
        char v27 = (os_log_s *)objc_claimAutoreleasedReturnValue([v6 letMeInDelegationHandle]);
        unint64_t v45 = 138412546;
        char v46 = v7;
        char v47 = 2112;
        unsigned int v48 = v27;
        unsigned int v28 = "Received LMI delegation, unable to parse forHandle -- ignoring! {fromHandle: %@, message.letMeInDelegationHandle: %@}";
        uint64_t v29 = v16;
        unint64_t v30 = 22;
        goto LABEL_16;
      }
    }

      if (!-[CSDMessagingConversationMessage hasConversationGroupUUIDString](v30, "hasConversationGroupUUIDString"))
      {
        unsigned int v61 = sub_1001704C4();
        uint64_t v62 = (os_log_s *)objc_claimAutoreleasedReturnValue(v61);
        uint64_t v14 = v115;
        if (os_log_type_enabled(v62, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v62,  OS_LOG_TYPE_DEFAULT,  "[WARN] service:account:incomingData:fromID:context: Empty CSDMessagingConversationMessage. Dropping message.",  buf,  2u);
        }

        unsigned int v13 = v116;
        goto LABEL_110;
      }

      unint64_t v54 = objc_claimAutoreleasedReturnValue(-[CSDMessagingConversationMessage conversationGroupUUID](v30, "conversationGroupUUID"));
      uint64_t v14 = v115;
      char v114 = (void *)v54;
      if (!v54)
      {
        char v69 = sub_1001704C4();
        char v55 = (os_log_s *)objc_claimAutoreleasedReturnValue(v69);
        unsigned int v13 = v116;
        if (os_log_type_enabled(v55, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v55,  OS_LOG_TYPE_DEFAULT,  "[WARN] service:account:incomingData:fromID:context: Could not create group UUID from string. Dropping message.",  buf,  2u);
        }

        goto LABEL_109;
      }

      char v55 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[CSDConversationManager conversationWithGroupUUID:](v117, "conversationWithGroupUUID:", v54));
      unsigned int v13 = v116;
      if (!-[CSDConversationManager shouldIgnoreMessageForConversation:]( v117,  "shouldIgnoreMessageForConversation:",  v55))
      {
        char v113 = v55;
        if (!v55)
        {
          unsigned int v71 = sub_1001704C4();
          uint64_t v72 = (os_log_s *)objc_claimAutoreleasedReturnValue(v71);
          if (os_log_type_enabled(v72, OS_LOG_TYPE_DEFAULT))
          {
            unint64_t v73 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInteger:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInteger:",  a8));
            *(_DWORD *)buf = 138412546;
            char v131 = v114;
            uint64_t v132 = 2112;
            *(void *)BOOL v133 = v73;
            _os_log_impl( (void *)&_mh_execute_header,  v72,  OS_LOG_TYPE_DEFAULT,  "[WARN] No conversation found for groupUUID %@, attempt: %@",  buf,  0x16u);
          }

          char v74 = (void *)objc_claimAutoreleasedReturnValue([v17 originalGUID]);
          uint64_t v125 = v116;
          unint64_t v126 = v115;
          char v127 = v15;
          char v128 = v16;
          unsigned int v129 = v17;
          -[CSDConversationManager enqueueMessageRetryAttemptForMessageID:message:attemptCount:messageProcessingBlock:]( v117,  "enqueueMessageRetryAttemptForMessageID:message:attemptCount:messageProcessingBlock:",  v74,  v30);

          unsigned int v13 = v116;
          char v55 = 0LL;
          goto LABEL_109;
        }

        if (-[os_log_s isFromStorage](v55, "isFromStorage")
          && ([v17 fromServerStorage] & 1) == 0)
        {
          char v75 = sub_1001704C4();
          unsigned int v76 = (os_log_s *)objc_claimAutoreleasedReturnValue(v75);
          if (os_log_type_enabled(v76, OS_LOG_TYPE_DEFAULT))
          {
            unint64_t v77 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s UUID](v55, "UUID"));
            *(_DWORD *)buf = 138412290;
            char v131 = v77;
            _os_log_impl( (void *)&_mh_execute_header,  v76,  OS_LOG_TYPE_DEFAULT,  "Updating fromStorage on conversation with UUID: %@ since there are still active remote participants.",  buf,  0xCu);

            char v55 = v113;
          }

          -[os_log_s setFromStorage:](v55, "setFromStorage:", 0LL);
        }

        else
        {
          char v56 = sub_1001704C4();
          unsigned int v57 = (os_log_s *)objc_claimAutoreleasedReturnValue(v56);
          if (os_log_type_enabled(v57, OS_LOG_TYPE_DEFAULT))
          {
            unint64_t v58 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s UUID](v55, "UUID"));
            char v59 = -[os_log_s isFromStorage](v113, "isFromStorage");
            char v60 = [v17 fromServerStorage];
            *(_DWORD *)buf = 138412802;
            char v131 = v58;
            uint64_t v132 = 1024;
            *(_DWORD *)BOOL v133 = v59;
            uint64_t v14 = v115;
            *(_WORD *)&v133[4] = 1024;
            *(_DWORD *)&v133[6] = v60;
            _os_log_impl( (void *)&_mh_execute_header,  v57,  OS_LOG_TYPE_DEFAULT,  "Not updating fromStorage on conversation with UUID: %@ since conversation.isFromStorage: %d, and conte xt.fromServerStorage: %d",  buf,  0x18u);

            char v55 = v113;
          }
        }

        char v78 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversationManager featureFlags](v117, "featureFlags"));
        if (![v78 conversationHandoffEnabled])
        {

          goto LABEL_76;
        }

        char v79 = -[CSDMessagingConversationMessage type](v30, "type");

        unsigned int v80 = v79 == 32;
        char v55 = v113;
        if (!v80)
        {
LABEL_76:
          uint64_t v81 = sub_1001704C4();
          unint64_t v82 = (os_log_s *)objc_claimAutoreleasedReturnValue(v81);
          if (os_log_type_enabled(v82, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 138412546;
            char v131 = v41;
            uint64_t v132 = 2112;
            *(void *)BOOL v133 = v55;
            _os_log_impl( (void *)&_mh_execute_header,  v82,  OS_LOG_TYPE_DEFAULT,  "Looking for handle: %@ in existingConversation: %@",  buf,  0x16u);
          }

          char v83 = v55;
          char v84 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s remoteMembers](v55, "remoteMembers"));
          unsigned int v85 = [v84 mutableCopy];

          uint64_t v86 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s localMember](v83, "localMember"));
          [v85 addObject:v86];

          unint64_t v87 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s lightweightMembers](v83, "lightweightMembers"));
          char v88 = [v87 copy];

          char v108 = v85;
          uint64_t v89 = objc_claimAutoreleasedReturnValue( -[CSDConversationManager memberExistsForParticipantDestination:members:]( v117,  "memberExistsForParticipantDestination:members:",  v16,  v85));
          uint64_t v111 = v88;
          v90 = objc_claimAutoreleasedReturnValue( -[CSDConversationManager memberExistsForParticipantDestination:members:]( v117,  "memberExistsForParticipantDestination:members:",  v16,  v88));
          unint64_t v112 = (void *)v89;
          unsigned int v110 = (void *)v90;
          if (v89 && v90)
          {
            char v91 = sub_1001704C4();
            unsigned int v13 = v116;
            char v109 = (os_log_s *)objc_claimAutoreleasedReturnValue(v91);
            if (os_log_type_enabled(v109, OS_LOG_TYPE_ERROR)) {
              sub_1002B668C();
            }
LABEL_82:
            char v55 = v113;
LABEL_107:
            unsigned int v106 = v108;
LABEL_108:

            goto LABEL_109;
          }

          unsigned int v92 = (void *)v89;
          if (v90) {
            unsigned int v92 = (void *)v90;
          }
          uint64_t v93 = v92;
          char v55 = v113;
          char v109 = v93;
          if (-[CSDConversationManager verifyLightweightMessageTypeFromHandle:message:existingConversation:]( v117,  "verifyLightweightMessageTypeFromHandle:message:existingConversation:",  v41,  v30,  v113))
          {
            if (!v93)
            {
              unsigned int v102 = sub_1001704C4();
              unint64_t v103 = (os_log_s *)objc_claimAutoreleasedReturnValue(v102);
              if (os_log_type_enabled(v103, OS_LOG_TYPE_DEFAULT))
              {
                *(_DWORD *)buf = 138412290;
                char v131 = v41;
                _os_log_impl( (void *)&_mh_execute_header,  v103,  OS_LOG_TYPE_DEFAULT,  "[WARN] Could not find matching handle: %@  in existingConversation.",  buf,  0xCu);
              }

              char v104 = (void *)objc_claimAutoreleasedReturnValue([v17 originalGUID]);
              unsigned int v120 = v116;
              unint64_t v121 = v14;
              char v122 = v15;
              char v123 = v16;
              unsigned int v124 = v17;
              -[CSDConversationManager enqueueMessageRetryAttemptForMessageID:message:attemptCount:messageProcessingBlock:]( v117,  "enqueueMessageRetryAttemptForMessageID:message:attemptCount:messageProcessingBlock:",  v104,  v30);

              unsigned int v13 = v116;
              goto LABEL_82;
            }

            unsigned int v13 = v116;
            if (a8)
            {
              unint64_t v94 = (void *)objc_claimAutoreleasedReturnValue( +[CSDReportingController sharedInstance]( &OBJC_CLASS___CSDReportingController,  "sharedInstance"));
              [v94 messageRetrySucceededForConversationGroupUUID:v114];

              if (-[CSDMessagingConversationMessage type](v30, "type") == 4)
              {
                char v95 = (void *)objc_claimAutoreleasedReturnValue( +[CSDReportingController sharedInstance]( &OBJC_CLASS___CSDReportingController,  "sharedInstance"));
                [v95 avcBlobRequestMessageRetrySucceededForConversationGroupUUID:v114];
              }
            }

            char v55 = v113;
            if (-[CSDConversationManager shouldAcceptMessageFromHandle:messageContext:message:existingConversation:]( v117,  "shouldAcceptMessageFromHandle:messageContext:message:existingConversation:",  v41,  v17,  v30,  v113))
            {
              uint64_t v14 = v115;
              if (!-[os_log_s isFromStorage](v113, "isFromStorage")
                || ![v17 fromServerStorage]
                || -[CSDMessagingConversationMessage type](v30, "type") != 1)
              {
                unint64_t v107 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s handle](v93, "handle"));
                -[CSDConversationManager notifyDelegatesOfMessage:fromHandle:forConversation:withUpdate:]( v117,  "notifyDelegatesOfMessage:fromHandle:forConversation:withUpdate:",  v30,  v107,  v113,  0LL);

                char v55 = v113;
                unsigned int v106 = v108;
                switch(-[CSDMessagingConversationMessage type](v30, "type"))
                {
                  case 4:
                    -[CSDConversationManager handleConversation:receivedBlobRecoveryRequest:fromHandle:]( v117,  "handleConversation:receivedBlobRecoveryRequest:fromHandle:",  v113,  v30,  v41);
                    goto LABEL_108;
                  case 5:
                    -[CSDConversationManager handleConversation:receivedBlobRecoveryResponse:fromHandle:]( v117,  "handleConversation:receivedBlobRecoveryResponse:fromHandle:",  v113,  v30,  v41);
                    goto LABEL_108;
                  case 6:
                    -[CSDConversationManager notifyDelegatesOfMessage:fromHandle:forConversation:withUpdate:]( v117,  "notifyDelegatesOfMessage:fromHandle:forConversation:withUpdate:",  v30,  v41,  v113,  0LL);
                    goto LABEL_108;
                  case 7:
                  case 9:
                  case 0xA:
                  case 0xB:
                  case 0xC:
                  case 0xD:
                  case 0xE:
                  case 0xF:
                  case 0x10:
                  case 0x11:
                  case 0x12:
                  case 0x13:
                  case 0x14:
                  case 0x16:
                  case 0x18:
                  case 0x19:
                  case 0x1A:
                  case 0x20:
                    goto LABEL_108;
                  case 8:
                    -[CSDConversationManager handleConversation:receivedActivitySession:fromHandle:]( v117,  "handleConversation:receivedActivitySession:fromHandle:",  v113,  v30,  v41);
                    goto LABEL_108;
                  case 0x15:
                    -[CSDConversationManager handleConversation:removeActivitySession:fromHandle:]( v117,  "handleConversation:removeActivitySession:fromHandle:",  v113,  v30,  v41);
                    goto LABEL_108;
                  case 0x17:
                    -[CSDConversationManager handleConversation:updateActivity:fromHandle:]( v117,  "handleConversation:updateActivity:fromHandle:",  v113,  v30,  v41);
                    goto LABEL_108;
                  case 0x1B:
                    -[CSDConversationManager handleConversation:updateActivityImage:fromHandle:]( v117,  "handleConversation:updateActivityImage:fromHandle:",  v113,  v30,  v41);
                    goto LABEL_108;
                  case 0x1C:
                    -[CSDConversationManager handleConversation:updateGuestMode:fromHandle:]( v117,  "handleConversation:updateGuestMode:fromHandle:",  v113,  v30,  v41);
                    goto LABEL_108;
                  case 0x1D:
                    -[CSDConversationManager handleConversation:receivedEndorsementForMember:fromHandle:]( v117,  "handleConversation:receivedEndorsementForMember:fromHandle:",  v113,  v30,  v41);
                    goto LABEL_108;
                  case 0x1E:
                    -[CSDConversationManager handleConversation:addHighlight:fromHandle:]( v117,  "handleConversation:addHighlight:fromHandle:",  v113,  v30,  v41);
                    goto LABEL_108;
                  case 0x1F:
                    -[CSDConversationManager handleConversation:removeHighlight:fromHandle:]( v117,  "handleConversation:removeHighlight:fromHandle:",  v113,  v30,  v41);
                    goto LABEL_108;
                  case 0x21:
                    -[CSDConversationManager handleConversation:participantUpdateMessage:fromNormalizedHandle:]( v117,  "handleConversation:participantUpdateMessage:fromNormalizedHandle:",  v113,  v30,  v41);
                    goto LABEL_108;
                  case 0x22:
                    -[CSDConversationManager handleConversation:registerMessagesGroupUUIDMessage:fromNormalizedHandle:]( v117,  "handleConversation:registerMessagesGroupUUIDMessage:fromNormalizedHandle:",  v113,  v30,  v41);
                    goto LABEL_108;
                  case 0x23:
                    -[CSDConversationManager handleConversation:screenShareRequest:fromHandle:]( v117,  "handleConversation:screenShareRequest:fromHandle:",  v113,  v30,  v41);
                    goto LABEL_128;
                  case 0x24:
LABEL_128:
                    -[CSDConversationManager handleConversation:screenShareResponse:fromHandle:]( v117,  "handleConversation:screenShareResponse:fromHandle:",  v113,  v30,  v41);
                    break;
                  default:
                    goto LABEL_82;
                }

                goto LABEL_108;
              }

              char v96 = sub_1001704C4();
              unsigned int v97 = (os_log_s *)objc_claimAutoreleasedReturnValue(v96);
              if (os_log_type_enabled(v97, OS_LOG_TYPE_DEFAULT))
              {
                uint64_t v98 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s UUID](v113, "UUID"));
                *(_DWORD *)buf = 138412802;
                char v131 = v30;
                uint64_t v132 = 2112;
                *(void *)BOOL v133 = v17;
                *(_WORD *)&v133[8] = 2112;
                uint64_t v134 = v98;
                _os_log_impl( (void *)&_mh_execute_header,  v97,  OS_LOG_TYPE_DEFAULT,  "[WARN] Received Invitation conversation message from server storage for conversation where that was al so retrieved from server storage. Not notifying delegates of this Invitation message. {message: %@, co ntext: %@, conversationUUID: %@}",  buf,  0x20u);
              }

              uint64_t v14 = v115;
              unsigned int v13 = v116;
              goto LABEL_82;
            }

            char v105 = sub_1001704C4();
            char v101 = (os_log_s *)objc_claimAutoreleasedReturnValue(v105);
            uint64_t v14 = v115;
            if (os_log_type_enabled(v101, OS_LOG_TYPE_ERROR)) {
              sub_1002B66B8();
            }
          }

          else
          {
            char v100 = sub_1001704C4();
            char v101 = (os_log_s *)objc_claimAutoreleasedReturnValue(v100);
            if (os_log_type_enabled(v101, OS_LOG_TYPE_ERROR)) {
              sub_1002B66E4();
            }
          }

          unsigned int v13 = v116;
          goto LABEL_107;
        }

        -[CSDConversationManager handleReceivedUpdateJoinedMetadataMessage:fromHandle:]( v117,  "handleReceivedUpdateJoinedMetadataMessage:fromHandle:",  v30,  v41);
        unsigned int v13 = v116;
      }

              sub_1001B4B8C(v1);
              return;
            }
          }
        }
      }
    }

              sub_1001B4B8C(v1);
              return v35;
            }
          }
        }
      }
    }

  __break(1u);
LABEL_36:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Int32);
  __break(1u);
  return result;
}

    sub_1001B0F5C();
    id v3 = v20;
    char v4 = v39;
    if (v8) {
      goto LABEL_8;
    }
LABEL_9:
    char v12 = v4 + 1;
    if (__OFADD__(v4, 1LL))
    {
      __break(1u);
      goto LABEL_48;
    }

    if (v12 >= v38) {
      return;
    }
    unsigned int v13 = *(void *)(v37 + 8 * v12);
    uint64_t v14 = v4 + 1;
    if (!v13)
    {
      sub_1001E9214();
      if (v15 == v16) {
        return;
      }
      sub_1001E9208();
      if (!v13)
      {
        sub_1001E9214();
        if (v15 == v16) {
          return;
        }
        sub_1001E9208();
        if (!v13)
        {
          sub_1001E9214();
          if (v15 == v16) {
            return;
          }
          sub_1001E9208();
          if (!v13) {
            break;
          }
        }
      }
    }

              sub_1001B4B8C(v3);

              return;
            }
          }
        }
      }
    }

              sub_1001B4B8C(v3);

              return;
            }
          }
        }
      }
    }

  __break(1u);
}

          swift_release(v57);
          sub_10026416C(a2);

          return;
        }
      }
    }

    uint64_t v34 = [(id)sub_1002A1304() handleTypeForTUHandle:v4];
    unint64_t v35 = sub_1001D8F3C((uint64_t)v34, "value");
    sub_10022D0F0((uint64_t)v35);
    sub_1002A1340();
    char v37 = sub_1001D8F3C(v36, "value");
    sub_10022D0F0((uint64_t)v37);
    sub_1002A1364();
    unsigned int v38 = objc_allocWithZone((Class)v8[411]);
    sub_1002A12CC();
    goto LABEL_36;
  }

  id v23 = v22;
  if (v22 == (id)2)
  {
    int v24 = sub_1001D8F3C(2LL, "value");
    uint64_t v25 = v24;
    if (!v24)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0LL);
      uint64_t v25 = sub_1002A1338();
      int v24 = (id)sub_1001B2428();
    }

    sub_1002A1354((uint64_t)v24, (SEL *)&selRef_isoCountryCode);
    if (v26)
    {
      char v27 = sub_1002A1338();
      sub_1001B2428();
    }

    else
    {
      char v27 = 0LL;
    }

    unsigned int v33 = [(id)sub_1002A1304() normalizedPhoneNumberHandleForValue:v25 isoCountryCode:v27];

    if (v33) {
      goto LABEL_36;
    }
    goto LABEL_35;
  }

  if (v22 == (id)3)
  {
    unsigned int v28 = sub_1001D8F3C(3LL, "value");
    if (!v28)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0LL);
      unsigned int v28 = sub_1002A1338();
      sub_1001B2428();
    }

    char v31 = (void *)sub_1002A1304();
    unint64_t v30 = sub_1001D8FD4(v31, "normalizedEmailAddressHandleForValue:");
    goto LABEL_31;
  }

  type metadata accessor for TUHandleType(0LL);
  char v46 = v23;
  _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v45, &v46, v45, &type metadata for Int);
  __break(1u);
}

LABEL_36:
  *((_DWORD *)v6 + 17) = self->_sharePlayProtocolVersion;
  *((_DWORD *)v6 + 26) |= 0x10u;
  char v12 = self->_has;
  if ((*(_BYTE *)&v12 & 4) == 0)
  {
LABEL_12:
    if ((*(_WORD *)&v12 & 0x400) == 0) {
      goto LABEL_13;
    }
    goto LABEL_38;
  }

  if (self->_dummyPayload)
  {
    objc_msgSend(v55, "setDummyPayload:");
    id v11 = v55;
  }

  char v12 = self->_has;
  if ((*(_BYTE *)&v12 & 1) != 0)
  {
    v11[1] = *(void *)&self->_hostCallCreationTime;
    *((_DWORD *)v11 + 100) |= 1u;
    char v12 = self->_has;
    if ((*(_BYTE *)&v12 & 2) == 0)
    {
LABEL_40:
      if ((*(_DWORD *)&v12 & 0x80000) == 0) {
        goto LABEL_41;
      }
      goto LABEL_146;
    }
  }

  else if ((*(_BYTE *)&v12 & 2) == 0)
  {
    goto LABEL_40;
  }

  _DWORD v11[2] = *(void *)&self->_messageSendTime;
  *((_DWORD *)v11 + 100) |= 2u;
  char v12 = self->_has;
  if ((*(_DWORD *)&v12 & 0x80000) == 0)
  {
LABEL_41:
    if ((*(_WORD *)&v12 & 0x8000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_147;
  }

  self->_protoNeedsManualInCallSounds = *((_BYTE *)v4 + 140);
  *(_DWORD *)&self->_has |= 0x800u;
  unint64_t v7 = *((_DWORD *)v4 + 38);
  if ((v7 & 0x10) == 0)
  {
LABEL_23:
    if ((v7 & 0x100) == 0) {
      goto LABEL_24;
    }
    goto LABEL_38;
  }

      int v17 = (os_log_s *)objc_claimAutoreleasedReturnValue([v11 handle]);
      [v44 addObject:v17];
LABEL_25:

      int v10 = (char *)v10 + 1;
    }

    while (v10 != v51);
    BOOL v9 = obj;
    unsigned int v38 = [obj countByEnumeratingWithState:&v56 objects:v69 count:16];
    char v51 = v38;
  }

  while (v38);
LABEL_40:

  uint64_t v39 = v44;
  if ([v44 count])
  {
    -[CSDConversationManager addInvitedMemberHandles:toConversationLink:completionHandler:]( v43,  "addInvitedMemberHandles:toConversationLink:completionHandler:",  v44,  v46,  0LL);
    unint64_t v6 = v42;
  }

  else
  {
    unint64_t v40 = sub_1001704C4();
    char v41 = (os_log_s *)objc_claimAutoreleasedReturnValue(v40);
    if (os_log_type_enabled(v41, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      uint64_t v62 = (uint64_t)v9;
      _os_log_impl( (void *)&_mh_execute_header,  v41,  OS_LOG_TYPE_DEFAULT,  "Not adding any of the following members to the invited handles of the link: %@",  buf,  0xCu);
    }

    unint64_t v6 = v42;
    uint64_t v39 = v44;
  }

LABEL_46:
}

    sub_1001B4B8C(v2);

    return;
  }

  __break(1u);
}

    sub_1001B4B8C(v2);

    return;
  }

  __break(1u);
}

    sub_1001B4B8C(v1);
    return;
  }

  __break(1u);
}

  if (sub_1001D8F68(v36, v14[117]))
  {
    char v128 = *(void *)(v2 + *((void *)v1 + 436));
    if (v128)
    {
      sub_1001D8F58();
      sub_1001D8F70((uint64_t)"conversation-handoff-nearby");
      sub_1001D8F60(v128);
    }
  }

  sub_1001B0FF8();
}

  __break(1u);
}

  sub_100258888();
}

                    __break(1u);
                  }

                  char v16 = v4 + 5;
                }
              }
            }
          }

LABEL_37:
  *((_DWORD *)v6 + 12) = self->_options;
  *((_DWORD *)v6 + 26) |= 4u;
  char v12 = self->_has;
  if ((*(_WORD *)&v12 & 0x400) == 0)
  {
LABEL_13:
    if ((*(_WORD *)&v12 & 0x200) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }

      unint64_t v54 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation tuActivitySessions](self, "tuActivitySessions"));
      -[CSDConversation checkAndSetTUActivityActive:](self, "checkAndSetTUActivityActive:", v54);

      char v55 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation featureFlags](self, "featureFlags"));
      char v56 = [v55 sharePlayCanEndWhenInitiatorLeaves];

      if (v56)
      {
        unsigned int v57 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation activitySessionParticipantMonitor](self, "activitySessionParticipantMonitor"));
        [v57 evaluateConversation:self];
      }

      unint64_t v58 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation featureFlags](self, "featureFlags"));
      char v59 = [v58 conversationHandoffEnabled];

      if (v59)
      {
        char v60 = objc_claimAutoreleasedReturnValue(-[CSDConversation localParticipantAssociation](self, "localParticipantAssociation"));
        if (v60)
        {
          unsigned int v61 = (void *)v60;
          uint64_t v62 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation localParticipantAssociation](self, "localParticipantAssociation"));
          unint64_t v63 = [v62 identifier];
          char v64 = [v30 identifier];

          if (v63 == v64)
          {
            char v65 = sub_1001704C4();
            unsigned int v66 = (os_log_s *)objc_claimAutoreleasedReturnValue(v65);
            if (os_log_type_enabled(v66, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t v67 = -[CSDConversation localParticipantIdentifier](self, "localParticipantIdentifier");
              *(_DWORD *)buf = 134218242;
              char v123 = v67;
              unsigned int v124 = 2112;
              uint64_t v125 = (unint64_t)v30;
              _os_log_impl( (void *)&_mh_execute_header,  v66,  OS_LOG_TYPE_DEFAULT,  "Local participant %llu was associated with participant %@ who is now being removed. Clearing local parti cipant association.",  buf,  0x16u);
            }

            -[CSDConversation setLocalParticipantAssociation:](self, "setLocalParticipantAssociation:", 0LL);
          }
        }

        unint64_t v103 = v24;
        char v104 = self;
        char v105 = v8;
        char v114 = 0u;
        unsigned int v115 = 0u;
        unint64_t v112 = 0u;
        char v113 = 0u;
        unint64_t v68 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation activeRemoteParticipants](self, "activeRemoteParticipants"));
        char v69 = [v68 countByEnumeratingWithState:&v112 objects:v120 count:16];
        if (v69)
        {
          char v70 = v69;
          unsigned int v71 = *(void *)v113;
          char v108 = v68;
          char v109 = *(void *)v113;
          do
          {
            for (j = 0LL; j != v70; j = (char *)j + 1)
            {
              if (*(void *)v113 != v71) {
                objc_enumerationMutation(v68);
              }
              unint64_t v73 = *(void **)(*((void *)&v112 + 1) + 8LL * (void)j);
              char v74 = objc_claimAutoreleasedReturnValue([v73 association]);
              if (v74)
              {
                char v75 = (void *)v74;
                unsigned int v76 = (void *)objc_claimAutoreleasedReturnValue([v73 association]);
                unint64_t v77 = [v76 identifier];
                if (v77 != [v30 identifier])
                {

                  continue;
                }

                char v78 = (void *)objc_claimAutoreleasedReturnValue([v73 association]);
                char v79 = (void *)objc_claimAutoreleasedReturnValue([v78 avcIdentifier]);
                if (v79)
                {
                  unsigned int v80 = (void *)objc_claimAutoreleasedReturnValue([v73 association]);
                  uint64_t v81 = v70;
                  unint64_t v82 = (void *)objc_claimAutoreleasedReturnValue([v80 avcIdentifier]);
                  char v83 = (void *)objc_claimAutoreleasedReturnValue([v30 avcIdentifier]);
                  uint64_t v111 = [v82 isEqualToString:v83];

                  unint64_t v30 = v110;
                  char v70 = v81;

                  unint64_t v68 = v108;
                  unsigned int v71 = v109;

                  if ((v111 & 1) == 0) {
                    continue;
                  }
                }

                else
                {
                }

                char v84 = sub_1001704C4();
                unsigned int v85 = (os_log_s *)objc_claimAutoreleasedReturnValue(v84);
                if (os_log_type_enabled(v85, OS_LOG_TYPE_DEFAULT))
                {
                  uint64_t v86 = [v73 identifier];
                  unint64_t v87 = (CSDConversation *)[v73 identifier];
                  *(_DWORD *)buf = 134218498;
                  char v123 = (unint64_t)v86;
                  unsigned int v124 = 2112;
                  uint64_t v125 = (unint64_t)v30;
                  unint64_t v126 = 2048;
                  char v127 = v87;
                  _os_log_impl( (void *)&_mh_execute_header,  v85,  OS_LOG_TYPE_DEFAULT,  "Remote participant %llu was associated with participant %@ who is now being removed. Clearing partic ipant association for %llu.",  buf,  0x20u);
                }

                [v73 setAssociation:0];
              }
            }

            char v70 = [v68 countByEnumeratingWithState:&v112 objects:v120 count:16];
          }

          while (v70);
        }

        self = v104;
        char v8 = v105;
        int v24 = v103;
      }

      if ((id)-[CSDConversation state](self, "state") == (id)3)
      {
        -[CSDConversation continueHandoffAudioRouteForIdentifier:participantLeft:]( self,  "continueHandoffAudioRouteForIdentifier:participantLeft:",  v106,  1LL);
        if (v107 == 1)
        {
          char v88 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation removedHandoffParticipants](self, "removedHandoffParticipants"));
          [v88 addObject:v30];
        }
      }

      [v24 conversation:self removedActiveParticipant:v30 withLeaveReason:v107];
      [v24 conversationChanged:self];
      uint64_t v89 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation featureFlags](self, "featureFlags"));
      v90 = [v89 uPlusNDowngrade];

      if (!v90) {
        goto LABEL_89;
      }
      char v91 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation activeRemoteParticipants](self, "activeRemoteParticipants"));
      if ([v91 count])
      {
        unsigned int v92 = 0;
      }

      else
      {
        uint64_t v93 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation remoteMembers](self, "remoteMembers"));
        if ([v93 count] == (id)1) {
          unsigned int v92 = 0;
        }
        else {
          unsigned int v92 = -[CSDConversation isOneToOneModeEnabled](self, "isOneToOneModeEnabled");
        }
      }

      unint64_t v94 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation featureFlags](self, "featureFlags"));
      if ([v94 oneToOneFaceTimeMyselfEnabled])
      {
        char v95 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation serverBag](self, "serverBag"));
        char v96 = [v95 isFaceTimeMyselfEnabled];

        if (v96)
        {
          unsigned int v97 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation activeRemoteParticipants](self, "activeRemoteParticipants"));
          if (![v97 count])
          {
            uint64_t v98 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation remoteMembers](self, "remoteMembers"));
            if ((unint64_t)[v98 count] > 1)
            {
              unint64_t v99 = -[CSDConversation isOneToOneModeEnabled](self, "isOneToOneModeEnabled");

              if ((v99 & 1) == 0) {
                goto LABEL_87;
              }
LABEL_82:
              char v100 = sub_1001704C4();
              char v101 = (os_log_s *)objc_claimAutoreleasedReturnValue(v100);
              if (os_log_type_enabled(v101, OS_LOG_TYPE_DEFAULT))
              {
                unsigned int v102 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation remoteMembers](self, "remoteMembers"));
                *(_DWORD *)buf = 138412290;
                char v123 = (unint64_t)v102;
                _os_log_impl( (void *)&_mh_execute_header,  v101,  OS_LOG_TYPE_DEFAULT,  "No active remote participants left, remoteMembers: %@, requesting to move back to oneToOne=0",  buf,  0xCu);
              }

              -[CSDConversation setOneToOneModeEnabled:](self, "setOneToOneModeEnabled:", 0LL);
              goto LABEL_88;
            }
          }
        }

        else if (v92)
        {
          goto LABEL_82;
        }
}

  self->_protoSoundRegion = *((_DWORD *)v4 + 25);
  *(_DWORD *)&self->_has |= 0x10u;
  unint64_t v7 = *((_DWORD *)v4 + 38);
  if ((v7 & 0x100) == 0)
  {
LABEL_24:
    if ((v7 & 0x400) == 0) {
      goto LABEL_26;
    }
    goto LABEL_25;
  }
}

LABEL_38:
  }
}

      unint64_t v7 = v47;
    }
  }

      uint64_t v29 = (os_log_s *)v64;
      goto LABEL_38;
    }

    if (v26)
    {
      *(_DWORD *)buf = 138413058;
      unint64_t v73 = (uint64_t)v14;
      char v74 = 2112;
      char v75 = v64;
      unsigned int v76 = 2112;
      unint64_t v77 = v17;
      char v78 = 2112;
      char v79 = v18;
      _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEFAULT,  "Asked to send delegation message {handles: %@, groupUUID: %@, transactionUUID: %@, pendingMember: %@}",  buf,  0x2Au);
    }

    [v19 setConversationGroupUUID:v64];
    char v27 = (void *)objc_claimAutoreleasedReturnValue([v18 idsDestination]);
    [v19 setLetMeInDelegationHandle:v27];

    unsigned int v28 = (void *)objc_claimAutoreleasedReturnValue([v17 UUIDString]);
    [v19 setLetMeInDelegationUUID:v28];

    uint64_t v25 = (os_log_s *)objc_claimAutoreleasedReturnValue([v19 data]);
    char v59 = v17;
    if (v15)
    {
      unint64_t v63 = (TUConversationMember *)objc_claimAutoreleasedReturnValue([(id)v15 localMember]);
    }

    else
    {
      unint64_t v30 = objc_alloc(&OBJC_CLASS___TUConversationMember);
      char v31 = (void *)objc_claimAutoreleasedReturnValue([(id)v16 originatorHandle]);
      unint64_t v63 = -[TUConversationMember initWithHandle:](v30, "initWithHandle:", v31);
    }

    char v32 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversationManager featureFlags](self, "featureFlags"));
    uint64_t v62 = v14;
    char v60 = v16;
    unint64_t v58 = v18;
    if ([v32 groupFacetimeAsAServiceEnabled])
    {
      unsigned int v33 = (void *)objc_claimAutoreleasedReturnValue([(id)v15 provider]);

      if (v33)
      {
        uint64_t v34 = (void *)objc_claimAutoreleasedReturnValue( +[CSDConversationProviderManager sharedInstance]( &OBJC_CLASS___CSDConversationProviderManager,  "sharedInstance"));
        unint64_t v35 = (void *)objc_claimAutoreleasedReturnValue([(id)v15 provider]);
        char v36 = (void *)objc_claimAutoreleasedReturnValue([v34 serviceForProvider:v35]);

LABEL_22:
        char v37 = (void *)objc_claimAutoreleasedReturnValue(-[TUConversationMember handle](v63, "handle"));
        unsigned int v38 = (void *)objc_claimAutoreleasedReturnValue([v37 value]);
        unsigned int v57 = v36;
        unsigned int v61 = (void *)objc_claimAutoreleasedReturnValue([v36 accountWithCallerID:v38]);

        uint64_t v39 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableSet set](&OBJC_CLASS___NSMutableSet, "set"));
        char v65 = 0u;
        unsigned int v66 = 0u;
        uint64_t v67 = 0u;
        unint64_t v68 = 0u;
        unint64_t v40 = v62;
        char v41 = [v40 countByEnumeratingWithState:&v65 objects:v71 count:16];
        if (v41)
        {
          char v42 = v41;
          unsigned int v43 = *(void *)v66;
          do
          {
            for (i = 0LL; i != v42; i = (char *)i + 1)
            {
              if (*(void *)v66 != v43) {
                objc_enumerationMutation(v40);
              }
              unint64_t v45 = TUCopyIDSCanonicalAddressForHandle(*(void *)(*((void *)&v65 + 1) + 8LL * (void)i));
              char v46 = (void *)objc_claimAutoreleasedReturnValue(v45);
              [v39 addObject:v46];
            }

            char v42 = [v40 countByEnumeratingWithState:&v65 objects:v71 count:16];
          }

          while (v42);
        }

        char v69 = IDSSendMessageOptionPublicMessageIntentKey;
        char v70 = &off_1003F1798;
        char v47 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v70,  &v69,  1LL));
        unsigned int v48 = [v47 mutableCopy];

        uint64_t v49 = (void *)objc_claimAutoreleasedReturnValue([(id)v15 capabilitySendMessageOptions]);
        if (v49) {
          [v48 addEntriesFromDictionary:v49];
        }
        unint64_t v50 = (uint64_t (**)(void, void, void, void, void, void, void, void, void))objc_claimAutoreleasedReturnValue(-[CSDConversationManager sendDataBlock](self, "sendDataBlock"));
        char v51 = (void *)objc_claimAutoreleasedReturnValue([(id)v15 provider]);
        char v52 = ((uint64_t (**)(void, os_log_s *, void *, void *, TUConversationMember *, id, void, void, void *))v50)[2]( v50,  v25,  v61,  v39,  v63,  v48,  0LL,  0LL,  v51);

        unsigned int v53 = sub_1001704C4();
        unint64_t v54 = (os_log_s *)objc_claimAutoreleasedReturnValue(v53);
        char v55 = v54;
        char v16 = v60;
        if ((v52 & 1) != 0)
        {
          char v18 = v58;
          if (os_log_type_enabled(v54, OS_LOG_TYPE_DEFAULT))
          {
            *(_WORD *)buf = 0;
            _os_log_impl((void *)&_mh_execute_header, v55, OS_LOG_TYPE_DEFAULT, "Sent delegation request!!!", buf, 2u);
          }
        }

        else
        {
          char v18 = v58;
          if (os_log_type_enabled(v54, OS_LOG_TYPE_ERROR)) {
            sub_1002B6968();
          }
        }

        uint64_t v14 = v62;
        int v17 = v59;
        goto LABEL_37;
      }
    }

    else
    {
    }

    char v36 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversationManager service](self, "service"));
    goto LABEL_22;
  }

    char v42 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s bundleIdentifier](v13, "bundleIdentifier"));
    unsigned int v43 = [v42 length];

    if (!v43)
    {
      uint64_t v44 = (void *)objc_claimAutoreleasedReturnValue([v7 session]);
      unint64_t v45 = (void *)objc_claimAutoreleasedReturnValue([v44 activity]);
      char v46 = (void *)objc_claimAutoreleasedReturnValue([v45 bundleIdentifier]);
      -[os_log_s setBundleIdentifier:](v13, "setBundleIdentifier:", v46);
    }

    char v47 = (void *)objc_claimAutoreleasedReturnValue([v7 session]);
    -[os_log_s setSession:](v13, "setSession:", v47);

    unsigned int v48 = (void *)objc_claimAutoreleasedReturnValue([v7 url]);
    -[os_log_s setActionURL:](v13, "setActionURL:", v48);

    uint64_t v49 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s bundleIdentifier](v13, "bundleIdentifier"));
    if (v49)
    {
      unint64_t v50 = (void *)objc_claimAutoreleasedReturnValue([v7 originator]);
      unint64_t v6 = v63;
      if ([v50 isLightweight])
      {
        char v51 = sub_1001704C4();
        char v52 = (os_log_s *)objc_claimAutoreleasedReturnValue(v51);
        if (os_log_type_enabled(v52, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412290;
          char v69 = v13;
          _os_log_impl( (void *)&_mh_execute_header,  v52,  OS_LOG_TYPE_DEFAULT,  "Notice %@ is from a lightweightMember, trying to translate",  buf,  0xCu);
        }

        unsigned int v53 = (void *)objc_claimAutoreleasedReturnValue([v63 tuConversation]);
        unint64_t v54 = (void *)objc_claimAutoreleasedReturnValue([v50 handle]);
        char v55 = (void *)objc_claimAutoreleasedReturnValue([v53 remoteParticipantForLightweightParticipantHandle:v54]);

        if (v55)
        {
          char v56 = v55;

          unint64_t v50 = v56;
        }
      }

      unsigned int v57 = objc_autoreleasePoolPush();
      unint64_t v58 = sub_1001704C4();
      char v59 = (os_log_s *)objc_claimAutoreleasedReturnValue(v58);
      if (os_log_type_enabled(v59, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412546;
        char v69 = v13;
        char v70 = 2112;
        unsigned int v71 = v7;
        _os_log_impl( (void *)&_mh_execute_header,  v59,  OS_LOG_TYPE_DEFAULT,  "Posting notice: %@ for event: %@",  buf,  0x16u);
      }

      char v60 = (void *)objc_claimAutoreleasedReturnValue([v62 delegate]);
      [v60 noticeManager:v62 conversation:v63 participant:v50 addedNotice:v13];

      objc_autoreleasePoolPop(v57);
    }

    else
    {
      unsigned int v61 = sub_1001704C4();
      unint64_t v50 = (void *)objc_claimAutoreleasedReturnValue(v61);
      unint64_t v6 = v63;
      if (os_log_type_enabled((os_log_t)v50, OS_LOG_TYPE_ERROR)) {
        sub_1002B768C((uint64_t)v13, (os_log_s *)v50);
      }
    }
  }
}

    sub_1001B4B8C(v2);

    return;
  }

  __break(1u);
}

    sub_1001B4B8C(v1);
    return;
  }

  __break(1u);
}

  sub_1001B4B94(0LL, (unint64_t *)&unk_10044AF50, &OBJC_CLASS___IDSURI_ptr);
  uint64_t v98 = [v41 tokenPrefixedURI];
  unint64_t v99 = static String._unconditionallyBridgeFromObjectiveC(_:)(v98);
  char v101 = v100;

  unsigned int v102 = sub_10022F958(v99, v101);
  if (!v102)
  {
    unint64_t v126 = v41;
    unsigned int v129 = (os_log_s *)Logger.logObject.getter(v126, v127, v128);
    char v131 = static os_log_type_t.error.getter(v129, v130);
    if (os_log_type_enabled(v129, v131))
    {
      uint64_t v132 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      BOOL v133 = (void ***)swift_slowAlloc(8LL, -1LL);
      *(_DWORD *)uint64_t v132 = 138412290;
      aBlock = v126;
      uint64_t v134 = v126;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v187, v132 + 4, v132 + 12);
      *BOOL v133 = v126;

      unsigned int v19 = v180;
      _os_log_impl( (void *)&_mh_execute_header,  v129,  v131,  "Failed to verify %@ because we couldn't create a URI.",  v132,  0xCu);
      sub_1001AFF14(&qword_100447E80);
      swift_arrayDestroy(v133, 1LL);
      swift_slowDealloc(v133, -1LL, -1LL);
      swift_slowDealloc(v132, -1LL, -1LL);
    }

    else
    {

      unsigned int v129 = (os_log_s *)v126;
    }

    v164 = sub_100230DD8();
    unsigned int v92 = swift_allocError(&type metadata for VoucherManagerError, v164, 0LL, 0LL);
    unint64_t v94 = v92;
    char v95 = 1LL;
LABEL_34:
    *uint64_t v93 = v95;
    char v96 = (void *)_convertErrorToNSError(_:)(v92);
    unsigned int v97 = v182;
    (*((void (**)(const void *, void, void *))v182 + 2))(v182, 0LL, v96);

    swift_errorRelease(v94);
    swift_release(v19);
    unsigned int v53 = v97;
    goto LABEL_35;
  }

  unint64_t v103 = v102;
  char v104 = sub_1001AFF14(&qword_100449C30);
  char v105 = swift_allocObject(v104, 48LL, 7LL);
  *(_OWORD *)(v105 + 16) = xmmword_10037B290;
  unsigned int v106 = swift_allocObject(&unk_1003E2A40, 32LL, 7LL);
  *(void *)(v106 + 16) = sub_10022C73C;
  *(void *)(v106 + 24) = v19;
  *(void *)(v105 + 32) = sub_100230E14;
  *(void *)(v105 + 40) = v106;
  swift_beginAccess(v39, &aBlock, 33LL, 0LL);
  unint64_t v107 = *v39;
  char v108 = (objc_class *)sub_1001AFF14(&qword_100449C38);
  char v109 = (char *)objc_allocWithZone(v108);
  unsigned int v110 = &v109[*(void *)((swift_isaMask & *(void *)v109) + 0x68LL)];
  *(void *)unsigned int v110 = v105;
  v110[8] = 1;
  v190.receiver = v109;
  v190.super_class = v108;
  swift_bridgeObjectRetain_n(v105, 2LL);
  uint64_t v111 = v41;
  swift_retain(v19);
  unint64_t v112 = objc_msgSendSuper2(&v190, "init");
  char v113 = (objc_class *)sub_1001AFF14(&qword_100449C40);
  char v114 = (char *)objc_allocWithZone(v113);
  *(void *)&v114[*(void *)((swift_isaMask & *(void *)v114) + 0x68LL)] = v111;
  v189.receiver = v114;
  v189.super_class = v113;
  unsigned int v115 = v111;
  uint64_t v116 = objc_msgSendSuper2(&v189, "init");
  [v107 setObject:v112 forKey:v116];
  swift_endAccess(&aBlock);

  swift_bridgeObjectRelease_n(v105, 2LL);
  unint64_t v117 = swift_allocObject(&unk_1003E2A68, 32LL, 7LL);
  char v118 = swift_allocObject(&unk_1003E2A90, 32LL, 7LL);
  *(void *)(v117 + 16) = sub_100230E64;
  *(void *)(v118 + 16) = v115;
  *(void *)(v118 + 24) = v38;
  *(void *)(v117 + 24) = v118;
  char v119 = v115;
  unsigned int v120 = v38;
  if ([v179 shouldForceVerificationFailures])
  {
    unint64_t v121 = sub_100230DD8();
    char v122 = swift_allocError(&type metadata for VoucherManagerError, v121, 0LL, 0LL);
    *char v123 = 5LL;
    swift_retain(v118);
    sub_100230E64(0, v122);
    sub_1001B5D3C((uint64_t)sub_100230E64, v118);

    swift_errorRelease(v122);
    unsigned int v124 = *(void *)(v117 + 16);
    uint64_t v125 = *(void *)(v117 + 24);
    *(void *)(v117 + 16) = 0LL;
    *(void *)(v117 + 24) = 0LL;
    sub_1001B5D3C(v124, v125);
  }

  else
  {
    v135 = *(void *)&v120[OBJC_IVAR___CSDVoucherManagerImpl_idsService + 32];
    v179 = *(id *)&v120[OBJC_IVAR___CSDVoucherManagerImpl_idsService + 24];
    v181 = sub_1001B204C(&v120[OBJC_IVAR___CSDVoucherManagerImpl_idsService], (uint64_t)v179);
    v136 = [v119 encryptedData];
    v137 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v136);
    v139 = v138;

    v140 = [v119 unsafeData];
    v141 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v140);
    v143 = v142;

    v144 = swift_allocObject(&unk_1003E2AB8, 32LL, 7LL);
    *(void *)(v144 + 16) = v120;
    *(void *)(v144 + 24) = v117;
    v145 = *(void (**)(uint64_t, unint64_t, uint64_t, unint64_t, void *, uint64_t, uint64_t (*)(char, uint64_t), uint64_t, id, uint64_t))(v135 + 8);
    v146 = v120;
    v147 = v103;
    v167 = v103;
    v148 = v146;
    swift_retain(v117);
    v145(v137, v139, v141, v143, v147, 3LL, sub_100230E70, v144, v179, v135);
    swift_release(v144);
    sub_1001BB39C(v141, v143);
    v149 = sub_1001BB39C(v137, v139);
    v181 = *(void **)&v148[OBJC_IVAR___CSDVoucherManagerImpl_completionQueue];
    v150 = v175;
    static DispatchTime.now()(v149);
    v151 = v177;
    + infix(_:_:)(v150, &v148[OBJC_IVAR___CSDVoucherManagerImpl_timeout]);
    v152 = *(void (**)(char *, uint64_t))(v176 + 8);
    v153 = v168;
    v152(v150, v168);
    v187[3] = sub_100230E78;
    v188 = v117;
    aBlock = _NSConcreteStackBlock;
    v187[0] = 1107296256LL;
    v187[1] = sub_1002356BC;
    v187[2] = &unk_1003E2AD0;
    v154 = _Block_copy(&aBlock);
    v155 = swift_retain(v117);
    v156 = v169;
    static DispatchQoS.unspecified.getter(v155);
    v185 = _swiftEmptyArrayStorage;
    sub_1001A9F18( (unint64_t *)&qword_100447CB0,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v158 = v157;
    v159 = sub_1001AFF14((uint64_t *)&unk_1004478D0);
    sub_1001B90A8((unint64_t *)&qword_100447CC0, (uint64_t *)&unk_1004478D0);
    v160 = v172;
    v161 = v159;
    v162 = v178;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v185, v161, v163, v178, v158);
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v151, v156, v160, v154);

    _Block_release(v154);
    (*(void (**)(char *, uint64_t))(v173 + 8))(v160, v162);
    (*(void (**)(char *, uint64_t))(v170 + 8))(v156, v171);
    v152(v151, v153);
    swift_release(v188);
  }

  swift_release(v117);
LABEL_28:
  swift_release(v180);
  unsigned int v53 = v182;
LABEL_35:
  _Block_release(v53);
}

    switch((unint64_t)[v28 v21[337]])
    {
      case 0uLL:
      case 1uLL:
        goto LABEL_51;
      case 2uLL:
        char v32 = sub_1002A1268(v28);
        if (v33)
        {
          uint64_t v34 = v32;
          unint64_t v35 = v33;
          unsigned int v115 = v22;
          char v36 = (id)TUHomeCountryCode(v32);
          if (v36)
          {
            char v37 = v36;
            unsigned int v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
            unint64_t v40 = v39;
          }

          else
          {
            unsigned int v38 = 0LL;
            unint64_t v40 = 0LL;
          }

          unint64_t v99 = objc_allocWithZone(&OBJC_CLASS___TUPhoneNumber);
          swift_bridgeObjectRetain(v35);
          char v100 = sub_100247580(v34, v35, v38, v40);
          if (qword_100446908 != -1) {
            swift_once(&qword_100446908, sub_100258908);
          }
          char v101 = type metadata accessor for Logger(0LL);
          sub_1001B0D98(v101, (uint64_t)qword_100454138);
          unsigned int v102 = v100;
          swift_bridgeObjectRetain(v35);
          unint64_t v103 = v102;
          unsigned int v106 = (os_log_s *)Logger.logObject.getter(v103, v104, v105);
          unint64_t v107 = static os_log_type_t.default.getter(v106);
          if (os_log_type_enabled(v106, v107))
          {
            char v114 = v100;
            char v108 = swift_slowAlloc(22LL, -1LL);
            char v109 = (void *)swift_slowAlloc(8LL, -1LL);
            unsigned int v110 = swift_slowAlloc(32LL, -1LL);
            unint64_t v121 = (void *)v110;
            *(_DWORD *)char v108 = 136315394;
            swift_bridgeObjectRetain(v35);
            *(void *)(v108 + 4) = sub_1001D7CF0(v34, v35, (uint64_t *)&v121);
            swift_bridgeObjectRelease_n(v35, 3LL);
            *(_WORD *)(v108 + 12) = 2112;
            *(void *)(v108 + 14) = v103;
            *char v109 = v114;

            _os_log_impl( (void *)&_mh_execute_header,  v106,  v107,  "Block phoneNumber: %s from notification, formatted phonenumber: %@",  (uint8_t *)v108,  0x16u);
            sub_1001AFF14(&qword_100447E80);
            swift_arrayDestroy(v109, 1LL);
            uint64_t v111 = v109;
            id v1 = v116;
            swift_slowDealloc(v111, -1LL, -1LL);
            swift_arrayDestroy(v110, 1LL);
            swift_slowDealloc(v110, -1LL, -1LL);
            swift_slowDealloc(v108, -1LL, -1LL);
          }

          else
          {

            swift_bridgeObjectRelease_n(v35, 2LL);
          }

          unint64_t v21 = &selRef_sharedPrivacyManager;
          BOOL v9 = v115;
          unint64_t v112 = [(id)objc_opt_self(TUPrivacyManager) sharedPrivacyManager];
          if (!v112) {
            goto LABEL_78;
          }
          char v113 = v112;
          [v112 setBlockIncomingCommunication:1 forPhoneNumber:v103];

          char v8 = v24;
          continue;
        }

        if (qword_100446908 != -1) {
          swift_once(&qword_100446908, sub_100258908);
        }
        char v69 = type metadata accessor for Logger(0LL);
        sub_1001B0D98(v69, (uint64_t)qword_100454138);
        char v70 = v28;
        unint64_t v73 = (os_log_s *)Logger.logObject.getter(v70, v71, v72);
        char v75 = static os_log_type_t.error.getter(v73, v74);
        if (os_log_type_enabled(v73, v75))
        {
          unsigned int v76 = swift_slowAlloc(12LL, -1LL);
          unint64_t v77 = swift_slowAlloc(32LL, -1LL);
          unsigned int v120 = v70;
          unint64_t v121 = (void *)v77;
          *(_DWORD *)unsigned int v76 = 136315138;
          char v78 = sub_1001B4B94(0LL, &qword_100447E60, &OBJC_CLASS___CHHandle_ptr);
          BOOL v9 = v22;
          char v79 = v70;
          unsigned int v80 = String.init<A>(reflecting:)(&v120, v78);
          unint64_t v82 = v81;
          *(void *)(v76 + 4) = sub_1001D7CF0(v80, v81, (uint64_t *)&v121);

          char v83 = v82;
          id v1 = v116;
          swift_bridgeObjectRelease(v83);
          char v84 = v73;
          unsigned int v85 = v75;
          uint64_t v86 = "Unable to block the phoneNumber handle %s because handle.normalizedValue = nil";
          goto LABEL_61;
        }

        goto LABEL_62;
      case 3uLL:
        char v55 = sub_1002A1268(v28);
        if (v56)
        {
          unsigned int v57 = v55;
          unint64_t v58 = v56;
          char v59 = v22;
          if (qword_100446908 != -1) {
            swift_once(&qword_100446908, sub_100258908);
          }
          char v60 = type metadata accessor for Logger(0LL);
          sub_1001B0D98(v60, (uint64_t)qword_100454138);
          unsigned int v61 = swift_bridgeObjectRetain_n(v58, 2LL);
          char v64 = (os_log_s *)Logger.logObject.getter(v61, v62, v63);
          char v65 = static os_log_type_t.default.getter(v64);
          if (os_log_type_enabled(v64, v65))
          {
            unsigned int v66 = swift_slowAlloc(12LL, -1LL);
            uint64_t v67 = swift_slowAlloc(32LL, -1LL);
            unint64_t v121 = (void *)v67;
            *(_DWORD *)unsigned int v66 = 136315138;
            swift_bridgeObjectRetain(v58);
            *(void *)(v66 + 4) = sub_1001D7CF0(v57, v58, (uint64_t *)&v121);
            swift_bridgeObjectRelease_n(v58, 3LL);
            _os_log_impl( (void *)&_mh_execute_header,  v64,  v65,  "Block emailAddress %s from notification",  (uint8_t *)v66,  0xCu);
            swift_arrayDestroy(v67, 1LL);
            swift_slowDealloc(v67, -1LL, -1LL);
            unint64_t v68 = v66;
            unint64_t v21 = &selRef_sharedPrivacyManager;
            swift_slowDealloc(v68, -1LL, -1LL);
          }

          else
          {

            swift_bridgeObjectRelease_n(v58, 2LL);
          }

          unsigned int v97 = [(id)objc_opt_self(TUPrivacyManager) sharedPrivacyManager];
          if (!v97)
          {
            __break(1u);
LABEL_78:
            __break(1u);
            JUMPOUT(0x100245D90LL);
          }

          uint64_t v98 = v97;
          sub_10024D17C(1, v57, v58, v97);

          char v8 = v24;
          BOOL v9 = v59;
        }

        else
        {
          if (qword_100446908 != -1) {
            swift_once(&qword_100446908, sub_100258908);
          }
          unint64_t v87 = type metadata accessor for Logger(0LL);
          sub_1001B0D98(v87, (uint64_t)qword_100454138);
          char v70 = v28;
          unint64_t v73 = (os_log_s *)Logger.logObject.getter(v70, v88, v89);
          char v91 = static os_log_type_t.error.getter(v73, v90);
          if (os_log_type_enabled(v73, v91))
          {
            unsigned int v76 = swift_slowAlloc(12LL, -1LL);
            unint64_t v77 = swift_slowAlloc(32LL, -1LL);
            unsigned int v120 = v70;
            unint64_t v121 = (void *)v77;
            *(_DWORD *)unsigned int v76 = 136315138;
            unsigned int v92 = sub_1001B4B94(0LL, &qword_100447E60, &OBJC_CLASS___CHHandle_ptr);
            BOOL v9 = v22;
            char v79 = v70;
            uint64_t v93 = v92;
            id v1 = v116;
            unint64_t v94 = String.init<A>(reflecting:)(&v120, v93);
            char v96 = v95;
            *(void *)(v76 + 4) = sub_1001D7CF0(v94, v95, (uint64_t *)&v121);

            swift_bridgeObjectRelease(v96);
            char v84 = v73;
            unsigned int v85 = v91;
            uint64_t v86 = "Unable to block the emailAddress handle %s because handle.normalizedValue = nil";
LABEL_61:
            _os_log_impl((void *)&_mh_execute_header, v84, v85, v86, (uint8_t *)v76, 0xCu);
            swift_arrayDestroy(v77, 1LL);
            swift_slowDealloc(v77, -1LL, -1LL);
            swift_slowDealloc(v76, -1LL, -1LL);

            char v8 = v24;
            unint64_t v21 = &selRef_sharedPrivacyManager;
          }

          else
          {
LABEL_62:

            char v8 = v24;
            BOOL v9 = v22;
            unint64_t v21 = &selRef_sharedPrivacyManager;
          }
        }

        break;
      default:
        if (qword_100446908 != -1) {
          swift_once(&qword_100446908, sub_100258908);
        }
        char v41 = type metadata accessor for Logger(0LL);
        sub_1001B0D98(v41, (uint64_t)qword_100454138);
        unsigned int v28 = v28;
        uint64_t v44 = (os_log_s *)Logger.logObject.getter(v28, v42, v43);
        char v46 = static os_log_type_t.error.getter(v44, v45);
        if (os_log_type_enabled(v44, v46))
        {
          char v47 = swift_slowAlloc(12LL, -1LL);
          unsigned int v48 = swift_slowAlloc(32LL, -1LL);
          unint64_t v121 = (void *)v48;
          *(_DWORD *)char v47 = 136315138;
          unsigned int v120 = [v28 type];
          type metadata accessor for CHHandleType(0LL);
          unint64_t v50 = String.init<A>(reflecting:)(&v120, v49);
          char v52 = v51;
          *(void *)(v47 + 4) = sub_1001D7CF0(v50, v51, (uint64_t *)&v121);

          unsigned int v53 = v52;
          id v1 = v116;
          swift_bridgeObjectRelease(v53);
          _os_log_impl((void *)&_mh_execute_header, v44, v46, "unknown handle type: %s", (uint8_t *)v47, 0xCu);
          swift_arrayDestroy(v48, 1LL);
          swift_slowDealloc(v48, -1LL, -1LL);
          unint64_t v54 = v47;
          unint64_t v21 = &selRef_sharedPrivacyManager;
          swift_slowDealloc(v54, -1LL, -1LL);
        }

        else
        {

LABEL_51:
        }

        char v8 = v24;
        BOOL v9 = v22;
        continue;
    }
  }

  if (v9)
  {
    char v22 = (v9 - 1) & v9;
    id v23 = __clz(__rbit64(v9)) | (v8 << 6);
    int v24 = v8;
    goto LABEL_36;
  }

  uint64_t v29 = v8 + 1;
  if (!__OFADD__(v8, 1LL))
  {
    if (v29 >= v117) {
      goto LABEL_74;
    }
    unint64_t v30 = *((void *)oslog + v29);
    int v24 = v8 + 1;
    if (!v30)
    {
      int v24 = v8 + 2;
      if (v8 + 2 >= v117) {
        goto LABEL_74;
      }
      unint64_t v30 = *((void *)oslog + v24);
      if (!v30)
      {
        int v24 = v8 + 3;
        if (v8 + 3 >= v117) {
          goto LABEL_74;
        }
        unint64_t v30 = *((void *)oslog + v24);
        if (!v30)
        {
          int v24 = v8 + 4;
          if (v8 + 4 >= v117) {
            goto LABEL_74;
          }
          unint64_t v30 = *((void *)oslog + v24);
          if (!v30)
          {
            char v31 = v8 + 5;
            do
            {
              if (v31 >= v117) {
                goto LABEL_74;
              }
              unint64_t v30 = *((void *)oslog + v31++);
            }

            while (!v30);
            int v24 = v31 - 1;
          }
        }
      }
    }

    char v22 = (v30 - 1) & v30;
    id v23 = __clz(__rbit64(v30)) + (v24 << 6);
LABEL_36:
    unsigned int v28 = *(id *)(*(void *)(v1 + 48) + 8 * v23);
    if (!v28) {
      goto LABEL_74;
    }
    goto LABEL_37;
  }

  __break(1u);
LABEL_76:
  swift_once(&qword_100446908, sub_100258908);
LABEL_8:
  int v10 = type metadata accessor for Logger(0LL);
  id v11 = sub_1001B0D98(v10, (uint64_t)qword_100454138);
  osloga = (os_log_s *)Logger.logObject.getter(v11, v12, v13);
  unint64_t v15 = static os_log_type_t.error.getter(osloga, v14);
  if (os_log_type_enabled(osloga, v15))
  {
    char v16 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)char v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, osloga, v15, "Unable to block handles because handles are nil", v16, 2u);
    swift_slowDealloc(v16, -1LL, -1LL);
  }
}

LABEL_15:
  unsigned int v13 = -[CSDMessagingConversationParticipantAssociation copyWithZone:](self->_association, "copyWithZone:", a3);
  uint64_t v14 = (void *)v6[2];
  _DWORD v6[2] = v13;

  unint64_t v15 = self->_has;
  if ((*(_DWORD *)&v15 & 0x40000) != 0)
  {
    *((_BYTE *)v6 + 97) = self->_isUPlusNDowngradeAvailable;
    *((_DWORD *)v6 + 26) |= 0x40000u;
    unint64_t v15 = self->_has;
    if ((*(_BYTE *)&v15 & 2) == 0)
    {
LABEL_17:
      if ((*(_DWORD *)&v15 & 0x400000) == 0) {
        goto LABEL_18;
      }
      goto LABEL_42;
    }
  }

  else if ((*(_BYTE *)&v15 & 2) == 0)
  {
    goto LABEL_17;
  }

  *((_DWORD *)v6 + 6) = self->_avMode;
  *((_DWORD *)v6 + 26) |= 2u;
  unint64_t v15 = self->_has;
  if ((*(_DWORD *)&v15 & 0x400000) == 0)
  {
LABEL_18:
    if ((*(_DWORD *)&v15 & 0x100000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }

  id v23 = (void *)objc_claimAutoreleasedReturnValue([v6 remoteHandle]);
  int v24 = (void *)objc_claimAutoreleasedReturnValue([v23 value]);
  uint64_t v25 = [v24 length];

  if (!v25)
  {
    char v27 = sub_1001704C4();
    unsigned int v28 = (os_log_s *)objc_claimAutoreleasedReturnValue(v27);
    if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
    {
      unsigned int v33 = 138412546;
      uint64_t v34 = self;
      unint64_t v35 = 2112;
      char v36 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_DEFAULT,  "%@ update does not have a valid handle, by definition this is an unknown caller update %@",  (uint8_t *)&v33,  0x16u);
    }

    goto LABEL_21;
  }

  if (-[CSDUnknownCallFilter isUnknownCaller:](self, "isUnknownCaller:", v6))
  {
LABEL_21:
    uint64_t v26 = (uint64_t)[v6 isKnownCaller];
    char v22 = 1;
    goto LABEL_22;
  }

  char v22 = 0;
  uint64_t v26 = 1LL;
LABEL_22:
  [v6 setIsKnownCaller:v26];
  uint64_t v29 = -[CSDUnknownCallFilter maxJunkLevel](self, "maxJunkLevel");
  unint64_t v30 = sub_1001704C4();
  char v31 = (os_log_s *)objc_claimAutoreleasedReturnValue(v30);
  if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
  {
    unsigned int v33 = 138413314;
    uint64_t v34 = self;
    unint64_t v35 = 2112;
    char v36 = v6;
    char v37 = 1024;
    unsigned int v38 = v22;
    uint64_t v39 = 1024;
    unint64_t v40 = v12;
    char v41 = 2048;
    char v42 = v29;
    _os_log_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_DEFAULT,  "%@ shouldFilterIncoming update=%@ unknownCaller=%d maybeSilenceCall=%d shouldBlockJunk=%ld",  (uint8_t *)&v33,  0x2Cu);
  }

  if (((v12 | !v22) & 1) == 0) {
    LOBYTE(v22) = (uint64_t)[v6 junkConfidence] > v29;
  }
LABEL_26:

  return v22;
}

  *((_BYTE *)result + _Block_object_dispose(va, 8) = self->_supportsAddCall;
  *((_BYTE *)result + 16) |= 1u;
  if ((*(_BYTE *)&self->_has & 0x10) == 0) {
    return result;
  }
LABEL_8:
  *((_BYTE *)result + 12) = self->_supportsSendingToVoicemail;
  *((_BYTE *)result + 16) |= 0x10u;
  return result;
}

      unint64_t v21 = sub_1001704C4();
      BOOL v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v21);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        sub_1002B3720((uint64_t)self, (uint64_t)v20, v9);
      }
LABEL_17:
      unint64_t v15 = 1LL;
LABEL_18:

      return v15;
    case 2u:
      id v23 = sub_1001704C4();
      BOOL v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v23);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        char v27 = 134217984;
        unsigned int v28 = 2LL;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "Using call ended reason answered elsewhere because CSDIDSDualSession ended reason is %ld",  (uint8_t *)&v27,  0xCu);
      }

      unint64_t v15 = 4LL;
      goto LABEL_18;
    case 3u:
      int v24 = sub_1001704C4();
      BOOL v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v24);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        char v27 = 134217984;
        unsigned int v28 = 3LL;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "Using call ended reason declined elsewhere because CSDIDSDualSession ended reason is %ld",  (uint8_t *)&v27,  0xCu);
      }

      unint64_t v15 = 5LL;
      goto LABEL_18;
    case 4u:
      uint64_t v14 = sub_1001704C4();
      BOOL v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        char v27 = 134217984;
        unsigned int v28 = 4LL;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "Using call ended reason unanswered because CSDIDSDualSession ended reason is %ld",  (uint8_t *)&v27,  0xCu);
      }

      unint64_t v15 = 3LL;
      goto LABEL_18;
    case 5u:
    case 6u:
      char v8 = sub_1001704C4();
      BOOL v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_17;
      }
      char v27 = 134218242;
      unsigned int v28 = v7;
      uint64_t v29 = 2112;
      unint64_t v30 = self;
      int v10 = "Setting disconnected reason to call failed because CSDIDSDualSession ended reason is %ld for call %@";
      id v11 = v9;
      char v12 = 22;
      goto LABEL_8;
    default:
      return -1LL;
  }

  if (self->_protoDTMFKey)
  {
    objc_msgSend(v55, "setProtoDTMFKey:");
    char v4 = v55;
  }

  if ((*(_BYTE *)&self->_has & 8) != 0)
  {
    v4[62] = self->_protoDisconnectedReason;
    v4[100] |= 8u;
  }

  if (self->_oBSOLETEConferenceIdentifier)
  {
    objc_msgSend(v55, "setOBSOLETEConferenceIdentifier:");
    char v4 = v55;
  }

  if ((*((_BYTE *)&self->_has + 3) & 0x10) != 0)
  {
    *((_BYTE *)v4 + 39_Block_object_dispose(va, 8) = self->_protoVoicemail;
    v4[100] |= 0x10000000u;
  }

  if (self->_callerNameFromNetwork) {
    objc_msgSend(v55, "setCallerNameFromNetwork:");
  }
  if (-[CSDMessagingRelayMessage protoCallsCount](self, "protoCallsCount"))
  {
    [v55 clearProtoCalls];
    unint64_t v6 = -[CSDMessagingRelayMessage protoCallsCount](self, "protoCallsCount");
    if (v6)
    {
      unint64_t v7 = v6;
      for (i = 0LL; i != v7; ++i)
      {
        BOOL v9 = (void *)objc_claimAutoreleasedReturnValue(-[CSDMessagingRelayMessage protoCallAtIndex:](self, "protoCallAtIndex:", i));
        [v55 addProtoCall:v9];
      }
    }
  }

  if (self->_hardPauseDigits) {
    objc_msgSend(v55, "setHardPauseDigits:");
  }
  int v10 = self->_has;
  id v11 = v55;
  if ((*(_BYTE *)&v10 & 4) != 0)
  {
    v55[32] = self->_hardPauseState;
    v55[100] |= 4u;
    int v10 = self->_has;
    if ((*(_WORD *)&v10 & 0x400) == 0)
    {
LABEL_33:
      if ((*(_BYTE *)&v10 & 0x40) == 0) {
        goto LABEL_34;
      }
      goto LABEL_142;
    }
  }

  else if ((*(_WORD *)&v10 & 0x400) == 0)
  {
    goto LABEL_33;
  }

  v55[78] = self->_receivedMessageType;
  v55[100] |= 0x400u;
  int v10 = self->_has;
  if ((*(_BYTE *)&v10 & 0x40) == 0)
  {
LABEL_34:
    if ((*(_DWORD *)&v10 & 0x400000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_35;
  }
}

  unint64_t v30 = (void *)objc_claimAutoreleasedReturnValue([v7 callUUID]);
  -[CSDFaceTimeProviderDelegate deferReportingAudioFinishedForCallWithUUID:]( self,  "deferReportingAudioFinishedForCallWithUUID:",  v30);
}
}
}
}
}
}
}
}
}
}
}

  unsigned int v19 = (void *)objc_claimAutoreleasedReturnValue(-[CSDCallCapabilities pairedHostDeviceState](self, "pairedHostDeviceState"));
  if (!v19)
  {
    uint64_t v20 = sub_1001704C4();
    unint64_t v21 = (os_log_s *)objc_claimAutoreleasedReturnValue(v20);
    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v23) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEFAULT,  "Initializing new paired host device state with all values set to NO",  (uint8_t *)&v23,  2u);
    }

    char v22 = objc_alloc_init(&OBJC_CLASS___TUCallCapabilitiesState);
    -[CSDCallCapabilities setPairedHostDeviceState:](self, "setPairedHostDeviceState:", v22);

    -[CSDCallCapabilities _savePairedHostDeviceState](self, "_savePairedHostDeviceState");
  }
}

  return 0;
}

    goto LABEL_16;
  }

  int v17 = (void *)objc_claimAutoreleasedReturnValue([v16 handle]);
  char v18 = [v17 isEqualToHandle:v10];

  if (!v18)
  {
    uint64_t v26 = sub_1001704C4();
    int v24 = (os_log_s *)objc_claimAutoreleasedReturnValue(v26);
    if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
    {
      char v27 = (void *)objc_claimAutoreleasedReturnValue([v16 handle]);
      uint64_t v29 = 138412546;
      unint64_t v30 = v27;
      char v31 = 2112;
      char v32 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEFAULT,  "[WARN] handleConversation:receivedBlobRecoveryResponse:fromHandle: %@ <!===> %@",  (uint8_t *)&v29,  0x16u);
    }

    goto LABEL_15;
  }

  unsigned int v19 = objc_claimAutoreleasedReturnValue([v16 avcData]);
  if (!v19
    || (uint64_t v20 = (void *)v19,
        unint64_t v21 = (void *)objc_claimAutoreleasedReturnValue([v16 avcData]),
        char v22 = [v21 length],
        v21,
        v20,
        !v22))
  {
    unsigned int v28 = sub_1001704C4();
    int v24 = (os_log_s *)objc_claimAutoreleasedReturnValue(v28);
    if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v29 = 138412290;
      unint64_t v30 = v9;
      uint64_t v25 = "[WARN] handleConversation:receivedBlobRecoveryResponse: could not add or update participant: %@";
      goto LABEL_14;
    }

    goto LABEL_15;
  }

  [v8 addActiveParticipant:v16];
LABEL_16:
}

    goto LABEL_16;
  }

  if ([v7 state] == (id)2 || objc_msgSend(v7, "state") == (id)3)
  {
    char v8 = (void *)objc_claimAutoreleasedReturnValue([a1[6] featureFlags]);
    BOOL v9 = [v8 avLessSharePlayEnabled];

    if ((v9 & 1) == 0)
    {
      unsigned int v19 = sub_1001704C4();
      unsigned int v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v19);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v20 = a1[4];
        *(_DWORD *)buf = 138412290;
        unint64_t v58 = v20;
        char v16 = "Ignoring request to join conversation with UUID: %@ since conversation is already joined";
        goto LABEL_14;
      }

      goto LABEL_15;
    }

    int v10 = [a1[5] avMode];
    id v11 = [v7 avMode];
    char v12 = sub_1001704C4();
    unsigned int v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
    uint64_t v14 = os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT);
    if (v10 == v11)
    {
      if (v14)
      {
        unint64_t v15 = a1[4];
        *(_DWORD *)buf = 138412290;
        unint64_t v58 = v15;
        char v16 = "Ignoring request to join conversation with UUID: %@ since conversation is already joined";
LABEL_14:
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, v16, buf, 0xCu);
        goto LABEL_15;
      }

      goto LABEL_15;
    }

    if (v14)
    {
      char v42 = a1[4];
      *(_DWORD *)buf = 138412290;
      unint64_t v58 = v42;
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "Request to join conversation is trying to change avMode on conversation UUID: %@",  buf,  0xCu);
    }

    objc_msgSend(v7, "setVideoEnabled:", objc_msgSend(a1[5], "isVideoEnabled"));
    objc_msgSend( v7,  "setLocalParticipantAudioVideoMode:presentationMode:",  objc_msgSend(a1[5], "avMode"),  objc_msgSend(a1[5], "presentationMode"));
  }

  else
  {
    unint64_t v21 = (void *)objc_claimAutoreleasedReturnValue([a1[6] mutableConversationsByUUID]);
    v53[0] = _NSConcreteStackBlock;
    v53[1] = 3221225472LL;
    v53[2] = sub_1000E4874;
    v53[3] = &unk_1003D9CE0;
    char v22 = v7;
    unint64_t v54 = v22;
    char v55 = a1[4];
    [v21 enumerateKeysAndObjectsUsingBlock:v53];

    objc_msgSend(a1[5], "setOneToOneModeEnabled:", objc_msgSend(v22, "isOneToOneModeEnabled"));
    id v23 = (void *)objc_claimAutoreleasedReturnValue([v22 provider]);
    [a1[5] setProvider:v23];

    if ([a1[5] isOneToOneModeEnabled])
    {
      int v24 = sub_1001704C4();
      uint64_t v25 = (os_log_s *)objc_claimAutoreleasedReturnValue(v24);
      if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v26 = a1[5];
        *(_DWORD *)buf = 138412290;
        unint64_t v58 = v26;
        _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEFAULT,  "Updating context to use isOneToOneModeEnabled=true %@",  buf,  0xCu);
      }
    }

    objc_msgSend(a1[5], "setVideoPaused:", objc_msgSend(v22, "isVideoPaused"));
    char v27 = (void *)objc_claimAutoreleasedReturnValue([a1[6] featureFlags]);
    objc_msgSend(a1[5], "setGftDowngradeToOneToOneAvailable:", objc_msgSend(v27, "gftDowngradeToOneToOne"));

    unsigned int v28 = (void *)objc_claimAutoreleasedReturnValue([a1[6] featureFlags]);
    objc_msgSend(a1[5], "setUPlusNDowngradeAvailable:", objc_msgSend(v28, "uPlusNDowngrade"));

    uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue([a1[6] featureFlags]);
    objc_msgSend(a1[5], "setUPlusOneScreenShareAvailable:", objc_msgSend(v29, "uPlusOneScreenSharing"));

    unint64_t v30 = (void *)objc_claimAutoreleasedReturnValue([a1[6] featureFlags]);
    objc_msgSend( a1[5],  "setSupportsRequestToScreenShare:",  TUIsRequestToScreenShareAvailable( v30,  objc_msgSend(v22, "isRelaying"),  objc_msgSend(a1[6], "isScreenSharingInitiationAvailable")));

    [v22 joinUsingContext:a1[5]];
    char v31 = (void *)objc_claimAutoreleasedReturnValue([a1[5] activity]);

    if (v31)
    {
      char v46 = v22;
      char v47 = v7;
      char v51 = 0u;
      char v52 = 0u;
      uint64_t v49 = 0u;
      unint64_t v50 = 0u;
      obj = (id)objc_claimAutoreleasedReturnValue([v22 tuActivitySessions]);
      char v32 = [obj countByEnumeratingWithState:&v49 objects:v56 count:16];
      if (v32)
      {
        unsigned int v33 = v32;
        uint64_t v34 = *(void *)v50;
        while (2)
        {
          for (i = 0LL; i != v33; i = (char *)i + 1)
          {
            if (*(void *)v50 != v34) {
              objc_enumerationMutation(obj);
            }
            char v36 = *(void **)(*((void *)&v49 + 1) + 8LL * (void)i);
            char v37 = (void *)objc_claimAutoreleasedReturnValue([v36 activity]);
            unsigned int v38 = (void *)objc_claimAutoreleasedReturnValue([v37 UUID]);
            uint64_t v39 = (void *)objc_claimAutoreleasedReturnValue([a1[5] activity]);
            unint64_t v40 = (void *)objc_claimAutoreleasedReturnValue([v39 UUID]);
            char v41 = [v38 isEqual:v40];

            if (v41)
            {
              unsigned int v43 = sub_1001704C4();
              uint64_t v44 = (os_log_s *)objc_claimAutoreleasedReturnValue(v43);
              if (os_log_type_enabled(v44, OS_LOG_TYPE_DEFAULT))
              {
                unint64_t v45 = (void *)objc_claimAutoreleasedReturnValue([a1[5] activity]);
                *(_DWORD *)buf = 138412290;
                unint64_t v58 = v45;
                _os_log_impl( (void *)&_mh_execute_header,  v44,  OS_LOG_TYPE_DEFAULT,  "Conversation join is for a new activity: %@, broadcasting image.",  buf,  0xCu);
              }

              [a1[6] broadcastImageForSession:v36 onConversation:v46];
              goto LABEL_37;
            }
          }

          unsigned int v33 = [obj countByEnumeratingWithState:&v49 objects:v56 count:16];
          if (v33) {
            continue;
          }
          break;
        }
      }
}

    char v4 = v27;
  }

  return v17;
}

  BOOL v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", self->_mergeable));
  [v3 setObject:v9 forKey:@"mergeable"];

  has = (__int16)self->_has;
  if ((has & 0x10) == 0)
  {
LABEL_5:
    if ((has & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }

  PBDataWriterWriteBOOLField(v5, self->_mergeable, 3LL);
  has = (__int16)self->_has;
  if ((has & 0x10) == 0)
  {
LABEL_5:
    if ((has & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }

  *((_BYTE *)v4 + 17) = self->_mergeable;
  *((_WORD *)v4 + 12) |= 0x40u;
  has = (__int16)self->_has;
  if ((has & 0x10) == 0)
  {
LABEL_5:
    if ((has & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }

  *((_BYTE *)result + 17) = self->_mergeable;
  *((_WORD *)result + 12) |= 0x40u;
  has = (__int16)self->_has;
  if ((has & 0x10) == 0)
  {
LABEL_5:
    if ((has & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }

  unint64_t v6 = 0LL;
  if ((has & 2) != 0)
  {
LABEL_6:
    unint64_t v7 = 2654435761LL * self->_addCallAllowed;
    if ((*(_WORD *)&self->_has & 0x200) != 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }

  self->_mergeable = *((_BYTE *)v4 + 17);
  *(_WORD *)&self->_has |= 0x40u;
  unsigned int v5 = *((_WORD *)v4 + 12);
  if ((v5 & 0x10) == 0)
  {
LABEL_5:
    if ((v5 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }

    char v4 = v27;
  }

  return v17;
}

  unint64_t v6 = v7;
LABEL_35:
  sub_10024F2D4(v4, (v12 - v4) / 32, v6);
  return 1LL;
}

      sub_100201864();
    }
  }

  sub_1001B1164();
  *uint64_t v14 = v18;
  sub_1002013A4();
}

      sub_100201864();
    }
  }

  sub_1001B1164();
  *uint64_t v14 = v18;
  sub_1002013A4();
}

  sub_1002727F4(v52);
  sub_1002727F4(v53);
LABEL_16:
  unsigned int v57 = v96;
  sub_1002727FC(v100, v96);
  unint64_t v58 = v97;
  sub_1002727FC(v101, v97);
  sub_1002727F4(v58);
  sub_1002727F4(v57);
  return 0LL;
}

  __break(1u);
}

  __break(1u);
}

LABEL_20:
  char v16 = -[NSData copyWithZone:](self->_personaHandshakeData, "copyWithZone:", a3);
  int v17 = (void *)v6[7];
  v6[7] = v16;

  char v18 = self->_has;
  if ((*(_DWORD *)&v18 & 0x20000) != 0)
  {
    *((_BYTE *)v6 + 96) = self->_isSpatialPersonaEnabled;
    *((_DWORD *)v6 + 26) |= 0x20000u;
    char v18 = self->_has;
    if ((*(_DWORD *)&v18 & 0x80000) == 0)
    {
LABEL_22:
      if ((*(_WORD *)&v18 & 0x100) == 0) {
        goto LABEL_23;
      }
      goto LABEL_46;
    }
  }

  else if ((*(_DWORD *)&v18 & 0x80000) == 0)
  {
    goto LABEL_22;
  }

  *((_BYTE *)v6 + 9_Block_object_dispose(va, 8) = self->_isUPlusOneAVLessAvailable;
  *((_DWORD *)v6 + 26) |= 0x80000u;
  char v18 = self->_has;
  if ((*(_WORD *)&v18 & 0x100) == 0)
  {
LABEL_23:
    if ((*(_BYTE *)&v18 & 0x80) == 0) {
      goto LABEL_24;
    }
    goto LABEL_47;
  }

  char v27 = 0LL;
  if ((*(_BYTE *)&v4 & 0x10) != 0)
  {
LABEL_12:
    uint64_t v26 = 2654435761LL * self->_sharePlayProtocolVersion;
    if ((*(_BYTE *)&v4 & 4) != 0) {
      goto LABEL_13;
    }
    goto LABEL_22;
  }

  return v24;
}

  PBDataWriterWriteBOOLField(v9, self->_protoShouldSuppressInCallUI, 7LL);
  char v4 = v9;
  if ((*(_BYTE *)&self->_has & 8) != 0)
  {
LABEL_11:
    PBDataWriterWriteBOOLField(v9, self->_protoMomentsV2Available, 8LL);
    char v4 = v9;
  }

  *((_BYTE *)v4 + 39) = self->_protoShouldSuppressInCallUI;
  *((_BYTE *)v4 + 44) |= 0x20u;
  if ((*(_BYTE *)&self->_has & 8) != 0)
  {
LABEL_11:
    *((_BYTE *)v4 + 37) = self->_protoMomentsV2Available;
    *((_BYTE *)v4 + 44) |= 8u;
  }

LABEL_39:
  -[CSDCallStateController setCurrentlyTrackedA2DPRouteIdentifier:]( self,  "setCurrentlyTrackedA2DPRouteIdentifier:",  0LL);
  [v15 setBluetoothAudioFormat:0];
LABEL_42:
}

  int v24 = self;
  char v88 = v6;
  if ((uint64_t)[v7 state] >= 1
    && [v7 avMode]
    && ([v7 isVideoEnabled] & 1) == 0)
  {
    -[CXCallUpdate setSendingVideo:](v18, "setSendingVideo:", 0LL);
  }

  uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue([v7 remoteMembers]);
  uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue( +[NSMutableSet setWithCapacity:]( NSMutableSet,  "setWithCapacity:",  [v25 count]));

  char v101 = 0u;
  unsigned int v102 = 0u;
  unint64_t v99 = 0u;
  char v100 = 0u;
  char v27 = (void *)objc_claimAutoreleasedReturnValue([v7 remoteMembers]);
  unsigned int v28 = [v27 countByEnumeratingWithState:&v99 objects:v107 count:16];
  if (v28)
  {
    uint64_t v29 = v28;
    unint64_t v30 = *(void *)v100;
    do
    {
      for (i = 0LL; i != v29; i = (char *)i + 1)
      {
        if (*(void *)v100 != v30) {
          objc_enumerationMutation(v27);
        }
        char v32 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v99 + 1) + 8 * (void)i) handle]);
        unsigned int v33 = (void *)objc_claimAutoreleasedReturnValue(+[CXHandle handleWithTUHandle:](&OBJC_CLASS___CXHandle, "handleWithTUHandle:", v32));
        [v26 addObject:v33];
      }

      uint64_t v29 = [v27 countByEnumeratingWithState:&v99 objects:v107 count:16];
    }

    while (v29);
  }

  uint64_t v34 = v90;
  -[CXCallUpdate setRemoteParticipantHandles:](v90, "setRemoteParticipantHandles:", v26);
  unint64_t v35 = (void *)objc_claimAutoreleasedReturnValue([v7 activeRemoteParticipantCXHandles]);
  -[CXCallUpdate setActiveRemoteParticipantHandles:](v90, "setActiveRemoteParticipantHandles:", v35);

  -[CXCallUpdate setOneToOneModeEnabled:](v90, "setOneToOneModeEnabled:", [v7 isOneToOneModeEnabled]);
  -[CXCallUpdate setScreenSharingType:](v90, "setScreenSharingType:", [v7 screenSharingType]);
  char v36 = (void *)objc_claimAutoreleasedReturnValue([v7 mergedRemoteMembers]);
  if ([v36 count] != (id)1)
  {
    char v41 = v89;
LABEL_41:

    goto LABEL_42;
  }

  char v37 = (void *)objc_claimAutoreleasedReturnValue([v7 mergedActiveRemoteParticipants]);
  if ([v37 count] != (id)1)
  {
    char v41 = v89;
    goto LABEL_40;
  }

  unsigned int v38 = (void *)objc_claimAutoreleasedReturnValue([v7 mergedActiveRemoteParticipants]);
  uint64_t v39 = (void *)objc_claimAutoreleasedReturnValue([v38 anyObject]);
  unint64_t v40 = [v39 streamToken];

  char v41 = v89;
  if (v40)
  {
    char v36 = (void *)objc_claimAutoreleasedReturnValue([v7 mergedActiveRemoteParticipants]);
    char v37 = (void *)objc_claimAutoreleasedReturnValue([v36 anyObject]);
    -[CXCallUpdate setVideoStreamToken:](v90, "setVideoStreamToken:", [v37 streamToken]);
LABEL_40:

    goto LABEL_41;
  }

    unint64_t v15 = 0LL;
    goto LABEL_21;
  }

  char v18 = objc_claimAutoreleasedReturnValue( -[CSDFaceTimeConversationProviderDelegate linkForJoinCallAction:withError:]( self,  "linkForJoinCallAction:withError:",  v6,  a4));
  unint64_t v15 = (TUConversationLink *)v18;
  if (*a4)
  {
    unsigned int v19 = sub_1001704C4();
    uint64_t v20 = (os_log_s *)objc_claimAutoreleasedReturnValue(v19);
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
      sub_1002B7BC0();
    }

    goto LABEL_20;
  }

  if (!v18)
  {
    char v22 = (void *)objc_claimAutoreleasedReturnValue(-[CSDAbstractFaceTimeConversationProviderDelegate conversationManager](self, "conversationManager"));
    id v23 = (void *)objc_claimAutoreleasedReturnValue([v6 pseudonym]);
    int v24 = [v22 isHandleStringLocalPseudonym:v23];

    if (v24)
    {
      uint64_t v25 = sub_1001704C4();
      uint64_t v26 = (os_log_s *)objc_claimAutoreleasedReturnValue(v25);
      if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
      {
        char v27 = (void *)objc_claimAutoreleasedReturnValue([v6 pseudonym]);
        *(_DWORD *)buf = 138412290;
        uint64_t v44 = v27;
        _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_DEFAULT,  "LMI: This pseudonym is mine, but couldn't find the link - triggering link recovery and failing the action {pseudonym: %@}",  buf,  0xCu);
      }

      unsigned int v28 = (void *)objc_claimAutoreleasedReturnValue( -[CSDAbstractFaceTimeConversationProviderDelegate conversationManager]( self,  "conversationManager"));
      uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue([v6 pseudonym]);
      char v47 = v29;
      unint64_t v30 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v47, 1LL));
      [v28 recoverLinksForPseudonyms:v30];

      uint64_t v14 = 1LL;
      goto LABEL_10;
    }

    char v42 = 0LL;
    char v31 = (void *)objc_claimAutoreleasedReturnValue( -[CSDFaceTimeConversationProviderDelegate deletedLinkForJoinCallAction:withError:]( self,  "deletedLinkForJoinCallAction:withError:",  v6,  &v42));
    char v32 = (TUConversationLink *)v42;
    unsigned int v33 = sub_1001704C4();
    uint64_t v34 = (os_log_s *)objc_claimAutoreleasedReturnValue(v33);
    if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412546;
      uint64_t v44 = v31;
      unint64_t v45 = 2112;
      char v46 = v32;
      _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_DEFAULT,  "No link was found, find deleted link: %@, error: %@",  buf,  0x16u);
    }

    unint64_t v35 = objc_alloc(&OBJC_CLASS___TUConversationLink);
    char v36 = (void *)objc_claimAutoreleasedReturnValue([v6 pseudonym]);
    char v37 = (void *)objc_claimAutoreleasedReturnValue([v6 publicKey]);
    unint64_t v15 = -[TUConversationLink initWithPseudonym:publicKey:groupUUID:originatorHandle:]( v35,  "initWithPseudonym:publicKey:groupUUID:originatorHandle:",  v36,  v37,  0LL,  0LL);

    if (!v15)
    {
      unsigned int v38 = sub_1001704C4();
      uint64_t v39 = (os_log_s *)objc_claimAutoreleasedReturnValue(v38);
      if (os_log_type_enabled(v39, OS_LOG_TYPE_DEFAULT))
      {
        unint64_t v40 = (void *)objc_claimAutoreleasedReturnValue([v6 pseudonym]);
        char v41 = (TUConversationLink *)objc_claimAutoreleasedReturnValue([v6 publicKey]);
        *(_DWORD *)buf = 138412546;
        uint64_t v44 = v40;
        unint64_t v45 = 2112;
        char v46 = v41;
        _os_log_impl( (void *)&_mh_execute_header,  v39,  OS_LOG_TYPE_DEFAULT,  "LMI: Could not assemble link for pseudonym %@ and publicKey %@",  buf,  0x16u);
      }

      uint64_t v14 = 2LL;
      goto LABEL_10;
    }
  }

  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", self->_endAndAnswerAllowed));
  [v3 setObject:v14 forKey:@"endAndAnswerAllowed"];

  has = (__int16)self->_has;
  if ((has & 0x20) != 0) {
    goto LABEL_21;
  }
LABEL_10:
  if ((has & 0x80) != 0)
  {
LABEL_11:
    unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", self->_sendToVoicemailAllowed));
    [v3 setObject:v5 forKey:@"sendToVoicemailAllowed"];
  }

  return v3;
}

  PBDataWriterWriteBOOLField(v5, self->_endAndAnswerAllowed, 8LL);
  has = (__int16)self->_has;
  if ((has & 0x20) != 0) {
    goto LABEL_21;
  }
LABEL_10:
  if ((has & 0x80) != 0) {
LABEL_11:
  }
    PBDataWriterWriteBOOLField(v5, self->_sendToVoicemailAllowed, 10LL);
LABEL_12:
}

  *((_BYTE *)v4 + 13) = self->_endAndAnswerAllowed;
  *((_WORD *)v4 + 12) |= 4u;
  has = (__int16)self->_has;
  if ((has & 0x20) != 0) {
    goto LABEL_21;
  }
LABEL_10:
  if ((has & 0x80) != 0)
  {
LABEL_11:
    *((_BYTE *)v4 + 1_Block_object_dispose(va, 8) = self->_sendToVoicemailAllowed;
    *((_WORD *)v4 + 12) |= 0x80u;
  }

  *((_BYTE *)result + 13) = self->_endAndAnswerAllowed;
  *((_WORD *)result + 12) |= 4u;
  has = (__int16)self->_has;
  if ((has & 0x20) == 0)
  {
LABEL_10:
    if ((has & 0x80) == 0) {
      return result;
    }
    goto LABEL_11;
  }

  self->_endAndAnswerAllowed = *((_BYTE *)v4 + 13);
  *(_WORD *)&self->_has |= 4u;
  unsigned int v5 = *((_WORD *)v4 + 12);
  if ((v5 & 0x20) != 0) {
    goto LABEL_21;
  }
LABEL_10:
  if ((v5 & 0x80) != 0)
  {
LABEL_11:
    self->_sendToVoicemailAllowed = *((_BYTE *)v4 + 18);
    *(_WORD *)&self->_has |= 0x80u;
  }
}
}

    unint64_t v6 = (v11 - 1) & v11;
    char v36 = v12;
  }

  unsigned int v13 = v7 + 5;
  if (v7 + 5 >= v33)
  {
LABEL_31:

    return swift_release(a1);
  }

  id v11 = *(void *)(v32 + 8 * v13);
  if (v11)
  {
    char v12 = v7 + 5;
    goto LABEL_20;
  }

  while (1)
  {
    char v12 = v13 + 1;
    if (__OFADD__(v13, 1LL)) {
      break;
    }
    if (v12 >= v33) {
      goto LABEL_31;
    }
    id v11 = *(void *)(v32 + 8 * v12);
    ++v13;
    if (v11) {
      goto LABEL_20;
    }
  }

    int v10 = (v17 - 1) & v17;
  }

  char v18 = v16 + 3;
  if (v18 >= v11)
  {
LABEL_33:
    swift_release_n(v2, 2LL);
    id v1 = v0;
    goto LABEL_35;
  }

  int v17 = *(void *)(v8 + 8 * v18);
  if (v17)
  {
    unsigned int v13 = v18;
    goto LABEL_20;
  }

  while (1)
  {
    unsigned int v13 = v18 + 1;
    if (__OFADD__(v18, 1LL)) {
      break;
    }
    if (v13 >= v11) {
      goto LABEL_33;
    }
    int v17 = *(void *)(v8 + 8 * v13);
    ++v18;
    if (v17) {
      goto LABEL_20;
    }
  }

      int v10 = (v17 - 1) & v17;
    }
  }

  sub_1001B1164();
  *id v1 = v6;
  sub_1001E90C0();
}

  __break(1u);
  return result;
}

LABEL_47:
  *((_DWORD *)v6 + 20) = self->_visionCallEstablishmentVersion;
  *((_DWORD *)v6 + 26) |= 0x80u;
  char v18 = self->_has;
  if ((*(_DWORD *)&v18 & 0x200000) == 0)
  {
LABEL_25:
    if ((*(_DWORD *)&v18 & 0x800000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_49;
  }

  char v18 = 0LL;
  if ((*(_DWORD *)&v14 & 0x200000) != 0)
  {
LABEL_39:
    unsigned int v19 = 2654435761LL * self->_isUPlusOneVisionToVisionAvailable;
    if ((*(_DWORD *)&v14 & 0x800000) != 0) {
      goto LABEL_40;
    }
    goto LABEL_49;
  }

  v4[122] = self->_supportsEmergency;
  v4[128] |= 0x10u;
  if ((*(_BYTE *)&self->_has & 0x40) != 0)
  {
LABEL_13:
    v4[124] = self->_supportsVoicemail;
    v4[128] |= 0x40u;
  }

  char v42 = -[CSDMessagingScreenShareContext copyWithZone:](self->_screenSharingRequest, "copyWithZone:", a3);
  unsigned int v43 = (void *)*((void *)v6 + 11);
  *((void *)v6 + 11) = v42;

  uint64_t v44 = self->_has;
  if ((*(_WORD *)&v44 & 0x8000) == 0)
  {
    if ((*(_DWORD *)&v44 & 0x20000) == 0) {
      goto LABEL_49;
    }
LABEL_64:
    *((_BYTE *)v6 + 125) = self->_supportsRequestToScreenShare;
    *((_DWORD *)v6 + 32) |= 0x20000u;
    if ((*(_DWORD *)&self->_has & 0x200) == 0) {
      return v6;
    }
    goto LABEL_50;
  }

  *((_BYTE *)v6 + 123) = self->_isUPlusOneVisionToVisionAvailable;
  *((_DWORD *)v6 + 32) |= 0x8000u;
  uint64_t v44 = self->_has;
  if ((*(_DWORD *)&v44 & 0x20000) != 0) {
    goto LABEL_64;
  }
LABEL_49:
  if ((*(_WORD *)&v44 & 0x200) != 0)
  {
LABEL_50:
    *((_BYTE *)v6 + 117) = self->_isPhotosSharePlayAvailable;
    *((_DWORD *)v6 + 32) |= 0x200u;
  }

  return v6;
}

  __break(1u);
}

          sub_1001B4B8C(v1);
          return;
        }
      }
    }

                sub_1001B4B8C(v73);
                unsigned int v5 = v102;
                break;
              }
            }
          }
        }

LABEL_48:
  *((_BYTE *)v6 + 100) = self->_isUPlusOneVisionToVisionAvailable;
  *((_DWORD *)v6 + 26) |= 0x200000u;
  char v18 = self->_has;
  if ((*(_DWORD *)&v18 & 0x800000) == 0)
  {
LABEL_26:
    if ((*(_BYTE *)&v18 & 0x20) == 0) {
      goto LABEL_27;
    }
    goto LABEL_50;
  }

  unsigned int v19 = 0LL;
  if ((*(_DWORD *)&v14 & 0x800000) != 0)
  {
LABEL_40:
    uint64_t v20 = 2654435761LL * self->_supportsRequestToScreenShare;
    if ((*(_BYTE *)&v14 & 0x20) != 0) {
      goto LABEL_41;
    }
    goto LABEL_50;
  }

  return v6;
}

  *((_BYTE *)v5 + 143) = self->_protoShouldSuppressRingtone;
  *((_DWORD *)v5 + 38) |= 0x4000u;
  char v16 = self->_has;
  if ((*(_WORD *)&v16 & 0x800) == 0)
  {
LABEL_14:
    if ((*(_BYTE *)&v16 & 0x10) == 0) {
      goto LABEL_15;
    }
    goto LABEL_50;
  }

        if (v29)
        {
          if ([v17 isHSATrusted]
            && (unint64_t v50 = (void *)objc_claimAutoreleasedReturnValue([v17 uniqueID]),
                char v51 = +[TUCallCapabilities isRelayCallingEnabledForDeviceWithID:]( &OBJC_CLASS___TUCallCapabilities,  "isRelayCallingEnabledForDeviceWithID:",  v50),  v50,  v51))
          {
            char v52 = sub_1001704C4();
            unsigned int v53 = (os_log_s *)objc_claimAutoreleasedReturnValue(v52);
            if (os_log_type_enabled(v53, OS_LOG_TYPE_DEFAULT))
            {
              *(_WORD *)buf = 0;
              _os_log_impl( (void *)&_mh_execute_header,  v53,  OS_LOG_TYPE_DEFAULT,  "Device requesting PIN is HSA trusted. Forgoing PIN exchange and enrolling the device immediately",  buf,  2u);
            }

            unint64_t v54 = (void *)objc_claimAutoreleasedReturnValue(-[CSDPinExchangeController pinExchangeDelegate](v65, "pinExchangeDelegate"));
            [v54 enrollDevice:v17 forSenderIdentityUUID:v29];

            char v55 = sub_1001704C4();
            char v56 = (os_log_s *)objc_claimAutoreleasedReturnValue(v55);
            if (os_log_type_enabled(v56, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)buf = 138412290;
              char v75 = v17;
              _os_log_impl( (void *)&_mh_execute_header,  v56,  OS_LOG_TYPE_DEFAULT,  "Activated Thumper for requesting device %@",  buf,  0xCu);
            }

            -[CSDPinExchangeController sendIDSAction:toDevice:]( v65,  "sendIDSAction:toDevice:",  @"CSDPinExchangeActionApproved",  v17);
          }

          else
          {
            unint64_t v58 = sub_1001704C4();
            char v59 = (os_log_s *)objc_claimAutoreleasedReturnValue(v58);
            if (os_log_type_enabled(v59, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)buf = 138412546;
              char v75 = v17;
              unsigned int v76 = 2112;
              unint64_t v77 = v29;
              _os_log_impl( (void *)&_mh_execute_header,  v59,  OS_LOG_TYPE_DEFAULT,  "Received request to enroll device %@ in Thumper for sender identity with UUID %@",  buf,  0x16u);
            }

            -[CSDPinExchangeController sendPinCodeAndPromptForResponseToDevice:forSenderIdentityUUID:]( v65,  "sendPinCodeAndPromptForResponseToDevice:forSenderIdentityUUID:",  v17,  v29);
          }

  __break(1u);
}

          unint64_t v30 = *(unsigned int *)(v25 + 36);
LABEL_49:
          sub_1001D8CA0(v28, v30, v26 != 0);
          unint64_t v45 = 0LL;
          goto LABEL_50;
        }

        char v42 = 1LL;
      }

LABEL_49:
  *((_BYTE *)v6 + 102) = self->_supportsRequestToScreenShare;
  *((_DWORD *)v6 + 26) |= 0x800000u;
  char v18 = self->_has;
  if ((*(_BYTE *)&v18 & 0x20) == 0)
  {
LABEL_27:
    if ((*(_WORD *)&v18 & 0x8000) == 0) {
      goto LABEL_28;
    }
LABEL_51:
    *((_BYTE *)v6 + 94) = self->_isPhotosSharePlayAvailable;
    *((_DWORD *)v6 + 26) |= 0x8000u;
    if ((*(_DWORD *)&self->_has & 8) == 0) {
      return v6;
    }
    goto LABEL_29;
  }

  uint64_t v20 = 0LL;
  if ((*(_BYTE *)&v14 & 0x20) != 0)
  {
LABEL_41:
    unint64_t v21 = 2654435761LL * self->_spatialPersonaGenerationCounter;
    if ((*(_WORD *)&v14 & 0x8000) != 0) {
      goto LABEL_42;
    }
LABEL_51:
    char v22 = 0LL;
    if ((*(_BYTE *)&v14 & 8) != 0) {
      goto LABEL_43;
    }
LABEL_52:
    id v23 = 0LL;
    return v34 ^ v35 ^ v33 ^ v32 ^ v31 ^ v30 ^ v29 ^ v28 ^ v27 ^ v26 ^ v25 ^ v5 ^ v6 ^ v7 ^ v9 ^ v10 ^ v11 ^ v12 ^ v13 ^ v15 ^ v16 ^ v17 ^ v18 ^ v19 ^ v20 ^ v21 ^ v22 ^ v23;
  }

  *((_BYTE *)v5 + 140) = self->_protoNeedsManualInCallSounds;
  *((_DWORD *)v5 + 38) |= 0x800u;
  char v16 = self->_has;
  if ((*(_BYTE *)&v16 & 0x10) == 0)
  {
LABEL_15:
    if ((*(_WORD *)&v16 & 0x100) == 0) {
      goto LABEL_16;
    }
    goto LABEL_51;
  }

  char v75 = sub_1001DBDC4((uint64_t)&unk_1003DF6F0);
  sub_1001DBDE4(v75, (uint64_t)sub_1001DBCC4);
  if ((sub_1001DBE50() & 1) == 0)
  {
    sub_1001DBDAC();
    isEscapingClosureAtFileLocation = v113;
  }

  sub_1001DBE18();
  if (v67)
  {
    sub_1001DBDD0();
    char v79 = v76;
  }

  sub_1001DBE2C(v76, v77, v78, v79);
  *(void *)(v80 + 32) = sub_1001DBDA8;
  *(void *)(v80 + 40) = v75;
  if ((a2 & 0x100000) == 0)
  {
LABEL_35:
    if ((a2 & 0x200000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_59;
  }

  char v55 = v81;
  if (!v81 || !v20) {
    goto LABEL_59;
  }
  char v56 = v81;
  unsigned int v57 = v31;
  if (![v56 isVideoUpgradeFromCall:v57])
  {

    char v42 = v80;
    char v55 = v81;
LABEL_59:
    uint64_t v81 = v55;
    unsigned int v66 = [v27 provider];
    uint64_t v67 = [v27 isVideo];
    unint64_t v68 = [v27 soundRegion];

    char v70 = v77;
    char v69 = (uint64_t)v78;
    unsigned int v71 = (uint64_t)&v78[*(int *)(v77 + 32)];
    uint64_t v72 = type metadata accessor for UUID(0LL);
    sub_1001A9670(v71, 1LL, 1LL, v72);

    char v60 = v69;
    *(void *)char v69 = 4LL;
    *(void *)(v69 + _Block_object_dispose(va, 8) = v66;
    *(_BYTE *)(v69 + 16) = v67;
    *(void *)(v69 + 24) = v68;
    *(_BYTE *)(v69 + *(int *)(v70 + 36)) = 0;
    goto LABEL_60;
  }

  unint64_t v58 = [v56 provider];
  LODWORD(v81) = [v56 isVideo];
  char v59 = [v56 soundRegion];

  unsigned int v61 = v77;
  char v60 = (uint64_t)v78;
  uint64_t v62 = (uint64_t)&v78[*(int *)(v77 + 32)];
  unint64_t v63 = type metadata accessor for UUID(0LL);
  sub_1001A9670(v62, 1LL, 1LL, v63);

  *(void *)char v60 = 5LL;
  *(void *)(v60 + _Block_object_dispose(va, 8) = v58;
  *(_BYTE *)(v60 + 16) = (_BYTE)v81;
  *(void *)(v60 + 24) = v59;
  *(_BYTE *)(v60 + *(int *)(v61 + 36)) = 0;

LABEL_60:
  unint64_t v73 = v79;
  sub_1001DBCDC(v60, v79, type metadata accessor for SoundDescriptor);
  char v74 = sub_1001AFF14(&qword_100447FC0);
  sub_1001A9670(v73, 0LL, 2LL, v74);
  char v75 = type metadata accessor for SoundDescriptorAction(0LL);
  sub_1001A9670(v73, 0LL, 1LL, v75);
}

LABEL_177:
    char v16 = 0;
    goto LABEL_178;
  }

  if ((v15 & 0x8000) != 0) {
    goto LABEL_177;
  }
LABEL_172:
  if ((*(_BYTE *)&v10 & 8) != 0)
  {
    if ((v15 & 8) == 0 || self->_presentationMode != *((_DWORD *)v4 + 16)) {
      goto LABEL_177;
    }
    char v16 = 1;
  }

  else
  {
    char v16 = (*((_DWORD *)v4 + 26) & 8) == 0;
  }

  PBDataWriterWriteBOOLField(v5, self->_protoCannotRelayAudioOrVideoOnPairedDevice, 24LL);
  if ((*(_DWORD *)&self->_has & 0x20000) != 0) {
LABEL_46:
  }
    PBDataWriterWriteBOOLField(v5, self->_protoExpectedEndpointOnMessagingDevice, 25LL);
LABEL_47:
  contactIdentifier = self->_contactIdentifier;
  if (contactIdentifier) {
    PBDataWriterWriteStringField(v5, contactIdentifier, 26LL);
  }
  protoCallCapabilitiesState = self->_protoCallCapabilitiesState;
  if (protoCallCapabilitiesState) {
    PBDataWriterWriteSubmessage(v5, protoCallCapabilitiesState, 27LL);
  }
  uint64_t v25 = self->_has;
  if ((*(_WORD *)&v25 & 0x100) != 0)
  {
    PBDataWriterWriteUint32Field(v5, self->_protoSoundRegion, 28LL);
    uint64_t v25 = self->_has;
  }

  if ((*(_DWORD *)&v25 & 0x10000) != 0) {
    PBDataWriterWriteBOOLField(v5, self->_protoEmergency, 29LL);
  }
  char v123 = 0u;
  unsigned int v124 = 0u;
  unint64_t v121 = 0u;
  char v122 = 0u;
  uint64_t v26 = self->_otherUniqueProxyIdentifiers;
  char v27 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v26,  "countByEnumeratingWithState:objects:count:",  &v121,  v137,  16LL);
  if (v27)
  {
    unsigned int v28 = v27;
    uint64_t v29 = *(void *)v122;
    do
    {
      unint64_t v30 = 0LL;
      do
      {
        if (*(void *)v122 != v29) {
          objc_enumerationMutation(v26);
        }
        PBDataWriterWriteStringField(v5, *(void *)(*((void *)&v121 + 1) + 8LL * (void)v30), 31LL);
        unint64_t v30 = (char *)v30 + 1;
      }

      while (v28 != v30);
      unsigned int v28 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v26,  "countByEnumeratingWithState:objects:count:",  &v121,  v137,  16LL);
    }

    while (v28);
  }

  protoCallModel = self->_protoCallModel;
  if (protoCallModel) {
    PBDataWriterWriteSubmessage(v5, protoCallModel, 32LL);
  }
  handle = self->_handle;
  if (handle) {
    PBDataWriterWriteSubmessage(v5, handle, 33LL);
  }
  if ((*((_BYTE *)&self->_has + 2) & 0x20) != 0) {
    PBDataWriterWriteBOOLField(v5, self->_protoSOS, 34LL);
  }
  char v119 = 0u;
  unsigned int v120 = 0u;
  unint64_t v117 = 0u;
  char v118 = 0u;
  unsigned int v33 = self->_providers;
  uint64_t v34 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v33,  "countByEnumeratingWithState:objects:count:",  &v117,  v136,  16LL);
  if (v34)
  {
    unint64_t v35 = v34;
    char v36 = *(void *)v118;
    do
    {
      char v37 = 0LL;
      do
      {
        if (*(void *)v118 != v36) {
          objc_enumerationMutation(v33);
        }
        PBDataWriterWriteSubmessage(v5, *(void *)(*((void *)&v117 + 1) + 8LL * (void)v37), 35LL);
        char v37 = (char *)v37 + 1;
      }

      while (v35 != v37);
      unint64_t v35 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v33,  "countByEnumeratingWithState:objects:count:",  &v117,  v136,  16LL);
    }

    while (v35);
  }

  protoDisplayContext = self->_protoDisplayContext;
  if (protoDisplayContext) {
    PBDataWriterWriteSubmessage(v5, protoDisplayContext, 36LL);
  }
  inviteuint64_t Data = self->_inviteData;
  if (inviteData) {
    PBDataWriterWriteSubmessage(v5, inviteData, 37LL);
  }
  protoProvider = self->_protoProvider;
  if (protoProvider) {
    PBDataWriterWriteSubmessage(v5, protoProvider, 38LL);
  }
  char v41 = self->_has;
  if ((*(_DWORD *)&v41 & 0x8000000) != 0)
  {
    PBDataWriterWriteBOOLField(v5, self->_protoVideo, 39LL);
    char v41 = self->_has;
    if ((*(_DWORD *)&v41 & 0x4000000) == 0)
    {
LABEL_83:
      if ((*(_DWORD *)&v41 & 0x100000) == 0) {
        goto LABEL_84;
      }
      goto LABEL_181;
    }
  }

  else if ((*(_DWORD *)&v41 & 0x4000000) == 0)
  {
    goto LABEL_83;
  }

  PBDataWriterWriteBOOLField(v5, self->_protoUplinkMuted, 40LL);
  char v41 = self->_has;
  if ((*(_DWORD *)&v41 & 0x100000) == 0)
  {
LABEL_84:
    if ((*(_WORD *)&v41 & 0x1000) == 0) {
      goto LABEL_86;
    }
    goto LABEL_85;
  }

LABEL_178:
  return v16;
}

  __break(1u);
LABEL_179:
  __break(1u);
LABEL_180:
  __break(1u);
LABEL_181:
  __break(1u);
LABEL_182:
  __break(1u);
LABEL_183:
  __break(1u);
LABEL_184:
  __break(1u);
LABEL_185:
  __break(1u);
LABEL_186:
  __break(1u);
LABEL_187:
  __break(1u);
LABEL_188:
  _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Negative value is not representable",  35LL,  2LL,  "Swift/Integers.swift",  20LL);
  __break(1u);
}

LABEL_18:
  uint64_t v29 = 0LL;
  if ((*(_WORD *)&v4 & 0x4000) != 0)
  {
LABEL_10:
    unsigned int v28 = 2654435761LL * self->_isPersonaAvailable;
    if ((*(_WORD *)&v4 & 0x1000) != 0) {
      goto LABEL_11;
    }
    goto LABEL_20;
  }

  protoDTMFKey = self->_protoDTMFKey;
  if (protoDTMFKey) {
    [v3 setObject:protoDTMFKey forKey:@"protoDTMFKey"];
  }
  if ((*(_BYTE *)&self->_has & 8) != 0)
  {
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_protoDisconnectedReason));
    [v3 setObject:v14 forKey:@"protoDisconnectedReason"];
  }

  oBSOLETEConferenceIdentifier = self->_oBSOLETEConferenceIdentifier;
  if (oBSOLETEConferenceIdentifier) {
    [v3 setObject:oBSOLETEConferenceIdentifier forKey:@"OBSOLETE_conferenceIdentifier"];
  }
  if ((*((_BYTE *)&self->_has + 3) & 0x10) != 0)
  {
    char v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", self->_protoVoicemail));
    [v3 setObject:v16 forKey:@"protoVoicemail"];
  }

  callerNameFromNetwork = self->_callerNameFromNetwork;
  if (callerNameFromNetwork) {
    [v3 setObject:callerNameFromNetwork forKey:@"callerNameFromNetwork"];
  }
  if (-[NSMutableArray count](self->_protoCalls, "count"))
  {
    char v18 = -[NSMutableArray initWithCapacity:]( objc_alloc(&OBJC_CLASS___NSMutableArray),  "initWithCapacity:",  -[NSMutableArray count](self->_protoCalls, "count"));
    v167 = 0u;
    v168 = 0u;
    v169 = 0u;
    v170 = 0u;
    unsigned int v19 = self->_protoCalls;
    uint64_t v20 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v19,  "countByEnumeratingWithState:objects:count:",  &v167,  v178,  16LL);
    if (v20)
    {
      unint64_t v21 = v20;
      char v22 = *(void *)v168;
      do
      {
        for (i = 0LL; i != v21; i = (char *)i + 1)
        {
          if (*(void *)v168 != v22) {
            objc_enumerationMutation(v19);
          }
          int v24 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v167 + 1) + 8 * (void)i) dictionaryRepresentation]);
          -[NSMutableArray addObject:](v18, "addObject:", v24);
        }

        unint64_t v21 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v19,  "countByEnumeratingWithState:objects:count:",  &v167,  v178,  16LL);
      }

      while (v21);
    }

    [v3 setObject:v18 forKey:@"protoCall"];
  }

  hardPauseDigits = self->_hardPauseDigits;
  if (hardPauseDigits) {
    [v3 setObject:hardPauseDigits forKey:@"hardPauseDigits"];
  }
  uint64_t v26 = self->_has;
  if ((*(_BYTE *)&v26 & 4) != 0)
  {
    unsigned int v71 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_hardPauseState));
    [v3 setObject:v71 forKey:@"hardPauseState"];

    uint64_t v26 = self->_has;
    if ((*(_WORD *)&v26 & 0x400) == 0)
    {
LABEL_41:
      if ((*(_BYTE *)&v26 & 0x40) == 0) {
        goto LABEL_42;
      }
      goto LABEL_126;
    }
  }

  else if ((*(_WORD *)&v26 & 0x400) == 0)
  {
    goto LABEL_41;
  }

  receivedMessageType = self->_receivedMessageType;
  if (receivedMessageType >= 0x39) {
    unint64_t v73 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)",  self->_receivedMessageType));
  }
  else {
    unint64_t v73 = off_1003D8620[receivedMessageType];
  }
  [v3 setObject:v73 forKey:@"receivedMessageType"];

  uint64_t v26 = self->_has;
  if ((*(_BYTE *)&v26 & 0x40) == 0)
  {
LABEL_42:
    if ((*(_DWORD *)&v26 & 0x400000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_43;
  }

  if (*((void *)v5 + 30)) {
    -[CSDMessagingRelayMessage setProtoDTMFKey:](self, "setProtoDTMFKey:");
  }
  if ((*((_BYTE *)v5 + 400) & 8) != 0)
  {
    self->_protoDisconnectedReason = *((_DWORD *)v5 + 62);
    *(_DWORD *)&self->_has |= 8u;
  }

  if (*((void *)v5 + 23)) {
    -[CSDMessagingRelayMessage setOBSOLETEConferenceIdentifier:](self, "setOBSOLETEConferenceIdentifier:");
  }
  if ((*((_BYTE *)v5 + 403) & 0x10) != 0)
  {
    self->_protoVoicemail = *((_BYTE *)v5 + 398);
    *(_DWORD *)&self->_has |= 0x10000000u;
  }

  if (*((void *)v5 + 3)) {
    -[CSDMessagingRelayMessage setCallerNameFromNetwork:](self, "setCallerNameFromNetwork:");
  }
  unint64_t v117 = 0u;
  char v118 = 0u;
  unsigned int v115 = 0u;
  uint64_t v116 = 0u;
  BOOL v9 = *((id *)v5 + 29);
  int v10 = [v9 countByEnumeratingWithState:&v115 objects:v128 count:16];
  if (v10)
  {
    id v11 = v10;
    char v12 = *(void *)v116;
    do
    {
      for (i = 0LL; i != v11; i = (char *)i + 1)
      {
        if (*(void *)v116 != v12) {
          objc_enumerationMutation(v9);
        }
        -[CSDMessagingRelayMessage addProtoCall:]( self,  "addProtoCall:",  *(void *)(*((void *)&v115 + 1) + 8LL * (void)i));
      }

      id v11 = [v9 countByEnumeratingWithState:&v115 objects:v128 count:16];
    }

    while (v11);
  }

  if (*((void *)v5 + 15)) {
    -[CSDMessagingRelayMessage setHardPauseDigits:](self, "setHardPauseDigits:");
  }
  uint64_t v14 = *((_DWORD *)v5 + 100);
  if ((v14 & 4) != 0)
  {
    self->_hardPauseState = *((_DWORD *)v5 + 32);
    *(_DWORD *)&self->_has |= 4u;
    uint64_t v14 = *((_DWORD *)v5 + 100);
    if ((v14 & 0x400) == 0)
    {
LABEL_39:
      if ((v14 & 0x40) == 0) {
        goto LABEL_40;
      }
      goto LABEL_60;
    }
  }

  else if ((v14 & 0x400) == 0)
  {
    goto LABEL_39;
  }

  self->_receivedMessageType = *((_DWORD *)v5 + 78);
  *(_DWORD *)&self->_has |= 0x400u;
  uint64_t v14 = *((_DWORD *)v5 + 100);
  if ((v14 & 0x40) == 0)
  {
LABEL_40:
    if ((v14 & 0x400000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_41;
  }

        char v8 = v34 + 1;
      }

      while ((id)(v34 + 1) != v33);
      unsigned int v33 = [obj countByEnumeratingWithState:&v39 objects:v44 count:16];
    }

    while (v33);
  }

  char v22 = (void *)objc_claimAutoreleasedReturnValue(-[CSDAbstractIDSProviderDelegate provider](self, "provider"));
  id v23 = (void *)objc_claimAutoreleasedReturnValue([v22 configuration]);
  int v24 = [v23 copy];

  [v24 setPrioritizedSenderIdentities:v30];
  uint64_t v25 = sub_1001704C4();
  uint64_t v26 = (os_log_s *)objc_claimAutoreleasedReturnValue(v25);
  if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    char v46 = v24;
    _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_DEFAULT,  "Updating FaceTime provider with configuration %@",  buf,  0xCu);
  }

  char v27 = (void *)objc_claimAutoreleasedReturnValue(-[CSDAbstractIDSProviderDelegate provider](self, "provider"));
  [v27 setConfiguration:v24];
}

  int v17 = -[CSDMessagingHandle copyWithZone:](self->_handle, "copyWithZone:", a3);
  char v18 = (void *)v5[5];
  v5[5] = v17;

  if ((*((_BYTE *)&self->_has + 1) & 0x20) != 0)
  {
    *((_BYTE *)v5 + 142) = self->_protoSOS;
    *((_DWORD *)v5 + 38) |= 0x2000u;
  }

  unsigned int v19 = -[CSDMessagingCallProvider copyWithZone:](self->_protoProvider, "copyWithZone:", a3);
  uint64_t v20 = (void *)v5[11];
  v5[11] = v19;

  unint64_t v21 = self->_has;
  if ((*(_DWORD *)&v21 & 0x80000) != 0)
  {
    *((_BYTE *)v5 + 14_Block_object_dispose(va, 8) = self->_protoVideo;
    *((_DWORD *)v5 + 38) |= 0x80000u;
    unint64_t v21 = self->_has;
  }

  if ((*(_DWORD *)&v21 & 0x40000) != 0)
  {
    *((_BYTE *)v5 + 147) = self->_protoUplinkMuted;
    *((_DWORD *)v5 + 38) |= 0x40000u;
  }

  char v22 = -[CSDMessagingCallModel copyWithZone:](self->_protoCallModel, "copyWithZone:", a3);
  id v23 = (void *)v5[9];
  v5[9] = v22;

  int v24 = -[NSString copyWithZone:](self->_localSenderIdentityUUIDString, "copyWithZone:", a3);
  uint64_t v25 = (void *)v5[8];
  v5[8] = v24;

  unsigned int v43 = 0u;
  uint64_t v44 = 0u;
  char v41 = 0u;
  char v42 = 0u;
  uint64_t v26 = self->_remoteParticipantHandles;
  char v27 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v26,  "countByEnumeratingWithState:objects:count:",  &v41,  v45,  16LL);
  if (v27)
  {
    unsigned int v28 = v27;
    uint64_t v29 = *(void *)v42;
    do
    {
      unint64_t v30 = 0LL;
      do
      {
        if (*(void *)v42 != v29) {
          objc_enumerationMutation(v26);
        }
        char v31 = objc_msgSend(*(id *)(*((void *)&v41 + 1) + 8 * (void)v30), "copyWithZone:", a3, (void)v41);
        [v5 addRemoteParticipantHandles:v31];

        unint64_t v30 = (char *)v30 + 1;
      }

      while (v28 != v30);
      unsigned int v28 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v26,  "countByEnumeratingWithState:objects:count:",  &v41,  v45,  16LL);
    }

    while (v28);
  }

  char v32 = -[NSString copyWithZone:](self->_localSenderIdentityAccountUUIDString, "copyWithZone:", a3);
  unsigned int v33 = (void *)v5[7];
  v5[7] = v32;

  uint64_t v34 = self->_has;
  if ((*(_BYTE *)&v34 & 0x40) != 0)
  {
    *((_DWORD *)v5 + 27) = self->_protoTTYType;
    *((_DWORD *)v5 + 38) |= 0x40u;
    uint64_t v34 = self->_has;
  }

  if ((*(_DWORD *)&v34 & 0x20000) != 0)
  {
    *((_BYTE *)v5 + 146) = self->_protoSupportsTTYWithVoice;
    *((_DWORD *)v5 + 38) |= 0x20000u;
  }

  unint64_t v35 = -[NSString copyWithZone:](self->_isoCountryCode, "copyWithZone:", a3, (void)v41);
  char v36 = (void *)v5[6];
  v5[6] = v35;

  char v37 = self->_has;
  if ((*(_BYTE *)&v37 & 4) != 0)
  {
    *((_DWORD *)v5 + 21) = self->_protoOriginatingUIType;
    *((_DWORD *)v5 + 38) |= 4u;
    char v37 = self->_has;
    if ((*(_WORD *)&v37 & 0x200) == 0)
    {
LABEL_37:
      if ((*(_DWORD *)&v37 & 0x10000) == 0) {
        goto LABEL_39;
      }
      goto LABEL_38;
    }
  }

  else if ((*(_WORD *)&v37 & 0x200) == 0)
  {
    goto LABEL_37;
  }

  *((_BYTE *)v5 + 13_Block_object_dispose(va, 8) = self->_protoFailureExpected;
  *((_DWORD *)v5 + 38) |= 0x200u;
  if ((*(_DWORD *)&self->_has & 0x10000) != 0)
  {
LABEL_38:
    *((_BYTE *)v5 + 145) = self->_protoSupportsEmergencyFallback;
    *((_DWORD *)v5 + 38) |= 0x10000u;
  }

    uint64_t v14 = 0;
    goto LABEL_19;
  }

  id v11 = (*((uint64_t (**)(void))self->_isConversationRelayPreferred + 2))();
  char v12 = sub_1001704C4();
  char v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
  unsigned int v13 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
  if (!v11)
  {
    if (v13)
    {
      unint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(+[CSDCallCapabilities sharedInstance](&OBJC_CLASS___CSDCallCapabilities, "sharedInstance"));
      char v16 = (void *)objc_claimAutoreleasedReturnValue([v15 callCapabilitiesState]);
      char v22 = 67109120;
      LODWORD(v23) = [v16 relayCallingAvailability];
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "shouldIgnoreMessageForConversation: still process message: %d",  (uint8_t *)&v22,  8u);
    }

    goto LABEL_18;
  }

  if (v13)
  {
    LOWORD(v22) = 0;
    int v10 = "shouldIgnoreMessageForConversation: Will process message in relay session";
    goto LABEL_9;
  }

  return v18;
}

    unsigned int v19 = 1;
    goto LABEL_28;
  }

  unsigned int v19 = 0;
  if (v18 && v18 != (id)3)
  {
    if (v18 == (id)1)
    {
      if (!a6)
      {
        char v31 = sub_1001704C4();
        char v32 = (os_log_s *)objc_claimAutoreleasedReturnValue(v31);
        if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR)) {
          sub_1002B5A30();
        }
        goto LABEL_27;
      }

      uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([v14 addedMembers]);
      if ([v20 count])
      {

        goto LABEL_25;
      }

      unsigned int v33 = (void *)objc_claimAutoreleasedReturnValue([v14 lightweightMembers]);
      uint64_t v34 = [v33 count];

      if (v34)
      {
LABEL_25:
        unint64_t v35 = sub_1001704C4();
        char v32 = (os_log_s *)objc_claimAutoreleasedReturnValue(v35);
        if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR)) {
          sub_1002B5A90();
        }
LABEL_27:

        unsigned int v19 = 0;
        goto LABEL_28;
      }
    }

    goto LABEL_18;
  }

  char v18 = sub_1001704C4();
  unsigned int v19 = (os_log_s *)objc_claimAutoreleasedReturnValue(v18);
  if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
  {
    if (v8) {
      uint64_t v20 = v8;
    }
    else {
      uint64_t v20 = v9;
    }
    *(_DWORD *)buf = 138412290;
    uint64_t v29 = v20;
    _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEFAULT,  "Picked initiator for conversation: %@",  buf,  0xCu);
  }

  if (v8) {
    unint64_t v21 = v8;
  }
  else {
    unint64_t v21 = v9;
  }
  char v22 = v21;

  return v22;
}

  char v12 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  self->_takingCallsPrivateAllowed));
  [v3 setObject:v12 forKey:@"takingCallsPrivateAllowed"];

  has = (__int16)self->_has;
  if ((has & 8) == 0)
  {
LABEL_8:
    if ((has & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }

  PBDataWriterWriteBOOLField(v5, self->_takingCallsPrivateAllowed, 6LL);
  has = (__int16)self->_has;
  if ((has & 8) == 0)
  {
LABEL_8:
    if ((has & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }

  *((_BYTE *)v4 + 20) = self->_takingCallsPrivateAllowed;
  *((_WORD *)v4 + 12) |= 0x200u;
  has = (__int16)self->_has;
  if ((has & 8) == 0)
  {
LABEL_8:
    if ((has & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }

  *((_BYTE *)result + 20) = self->_takingCallsPrivateAllowed;
  *((_WORD *)result + 12) |= 0x200u;
  has = (__int16)self->_has;
  if ((has & 8) == 0)
  {
LABEL_8:
    if ((has & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }

  BOOL v9 = 0LL;
  if ((has & 4) != 0)
  {
LABEL_9:
    int v10 = 2654435761LL * self->_endAndAnswerAllowed;
    if ((has & 0x20) != 0) {
      goto LABEL_10;
    }
LABEL_20:
    id v11 = 0LL;
    if ((has & 0x80) != 0) {
      goto LABEL_11;
    }
LABEL_21:
    char v12 = 0LL;
    return v4 ^ v3 ^ v5 ^ v6 ^ v7 ^ v8 ^ v9 ^ v10 ^ v11 ^ v12;
  }

  self->_takingCallsPrivateAllowed = *((_BYTE *)v4 + 20);
  *(_WORD *)&self->_has |= 0x200u;
  unsigned int v5 = *((_WORD *)v4 + 12);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }

      goto LABEL_19;
    }

    unint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v14 dateConnected]);

    if (v15)
    {
      char v16 = sub_1001704C4();
      int v17 = (os_log_s *)objc_claimAutoreleasedReturnValue(v16);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        char v18 = (void *)objc_claimAutoreleasedReturnValue([v14 uniqueProxyIdentifier]);
        uint64_t v25 = 138412290;
        uint64_t v26 = v18;
        unsigned int v19 = "[WARN] Call with UUID %@ already has a date connected";
LABEL_16:
        _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, v19, (uint8_t *)&v25, 0xCu);

        goto LABEL_18;
      }

      goto LABEL_18;
    }

    if (!v10)
    {
      int v17 = (os_log_s *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
      [v14 setDateConnected:v17];
      goto LABEL_18;
    }

    [v14 setDateConnected:v10];
  }

  else
  {
    uint64_t v20 = sub_1001704C4();
    unint64_t v21 = (os_log_s *)objc_claimAutoreleasedReturnValue(v20);
    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
    {
      char v22 = (void *)objc_claimAutoreleasedReturnValue(-[CSDCallDataSource calls](self, "calls"));
      id v23 = (void *)objc_claimAutoreleasedReturnValue(-[CSDProviderCallDataSource _identifiersForCalls:](self, "_identifiersForCalls:", v22));
      uint64_t v25 = 138412802;
      uint64_t v26 = v8;
      char v27 = 2112;
      unsigned int v28 = v9;
      uint64_t v29 = 2112;
      unint64_t v30 = v23;
      _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEFAULT,  "[WARN] No call found for call source %@ and UUID %@. All calls: %@",  (uint8_t *)&v25,  0x20u);
    }
  }

        unsigned int v13 = (char *)v13 + 1;
      }

      while (v11 != v13);
      unint64_t v30 = [v9 countByEnumeratingWithState:&v32 objects:v40 count:16];
      id v11 = v30;
    }

    while (v30);
  }
}

    goto LABEL_19;
  }

  *(void *)uint64_t v14 = v9;
  *(_BYTE *)(v14 + _Block_object_dispose(va, 8) = 0;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16LL))(v1, v7, v16);
  sub_1001A9670(v1, 0LL, 1LL, v16);
  sub_1001B0E80(v15, (uint64_t)v38, 33LL);
  sub_1001B0DF0(v1, v15);
  swift_endAccess(v38);
  char v18 = swift_bridgeObjectRetain(v5);
  sub_1001ACF20(v18);
  if (qword_1004466A0 != -1) {
    swift_once(&qword_1004466A0, sub_1001AC714);
  }
  unsigned int v19 = sub_1001B0E98();
  sub_1001B0D98(v19, (uint64_t)qword_1004473D8);
  uint64_t v20 = sub_1001B11D0();
  sub_1001B1224();
  unint64_t v21 = sub_1001B11C8();
  if (!sub_1001B0EC8(v21)) {
    goto LABEL_18;
  }
  char v22 = (uint8_t *)sub_1001B0E78(12LL);
  id v23 = sub_1001B0E78(8LL);
  int v24 = sub_1001B0F98(5.7779e-34);
  sub_1001B0F8C((uint64_t)v38, v16);
  sub_1001B1270();

  char v27 = "[Config] Set successful, %@";
LABEL_15:
  sub_1001B0EEC((void *)&_mh_execute_header, v25, v26, v27);
  sub_1001AFF14(&qword_100447E80);
  sub_1001B0F64(v23);
  char v32 = v23;
LABEL_16:
  sub_1001B0E60(v32);
  sub_1001B0E60((uint64_t)v22);

LABEL_19:
  sub_1001B0FF8();
}

    char v12 = (v15 - 1) & v15;
  }

  char v16 = v14 + 3;
  if (v16 >= v33) {
    return;
  }
  unint64_t v15 = *(void *)(v32 + 8 * v16);
  if (v15)
  {
    char v4 = v16;
    goto LABEL_18;
  }

  while (1)
  {
    char v4 = v16 + 1;
    if (__OFADD__(v16, 1LL)) {
      break;
    }
    if (v4 >= v33) {
      return;
    }
    unint64_t v15 = *(void *)(v32 + 8 * v4);
    ++v16;
    if (v15) {
      goto LABEL_18;
    }
  }

    __break(1u);
    goto LABEL_19;
  }

  __break(1u);
  return result;
}

  swift_bridgeObjectRelease(a1);
  return 0LL;
}
}

    char v4 = (v8 - 1) & v8;
    unint64_t v6 = __clz(__rbit64(v8)) + (v9 << 6);
    unsigned int v33 = v9;
  }

  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Int32);
  __break(1u);
  return result;
}

    unint64_t v7 = (v13 - 1) & v13;
    id v11 = __clz(__rbit64(v13)) + (v14 << 6);
    unint64_t v6 = v14;
  }

  __break(1u);
  return result;
}

    char v55 = (v21 - 1) & v21;
    char v56 = v22;
  }

  id v23 = v12 + 4;
  if (v12 + 4 >= v48) {
    return (uint64_t)v11;
  }
  unint64_t v21 = *(void *)(v47 + 8 * v23);
  if (v21)
  {
    char v22 = v12 + 4;
    goto LABEL_18;
  }

  while (1)
  {
    char v22 = v23 + 1;
    if (__OFADD__(v23, 1LL)) {
      break;
    }
    if (v22 >= v48) {
      return (uint64_t)v11;
    }
    unint64_t v21 = *(void *)(v47 + 8 * v22);
    ++v23;
    if (v21) {
      goto LABEL_18;
    }
  }

      unint64_t v45 = (v56 - 1) & v56;
    }
  }

  sub_1001B1164();
  *char v36 = v42;
  sub_1002013A4();
}

    v6(v14 & 1, v12);
    goto LABEL_19;
  }

  char v59 = v12;
  if (qword_100446930 != -1) {
    swift_once(&qword_100446930, sub_100258A18);
  }
  char v16 = sub_1001B0E98();
  int v17 = sub_1001B0D98(v16, (uint64_t)qword_1004541B0);
  (*(void (**)(uint64_t, os_log_s *, uint64_t))(v2 + 16))(v1, v8, v0);
  char v18 = v10;
  unsigned int v19 = v17;
  Logger.logObject.getter(v18, v20, v21);
  char v22 = sub_1001B11C8();
  if (sub_1001D9224(v22))
  {
    id v23 = sub_1001B0E78(22LL);
    unsigned int v57 = sub_1001B0E78(64LL);
    v62[0] = v57;
    *(_DWORD *)id v23 = 136315394;
    int v24 = v6;
    uint64_t v25 = sub_1001B115C(v57, "pseudonym");
    unint64_t v54 = (os_log_s *)v10;
    uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
    unint64_t v58 = v14;
    unsigned int v28 = v27;

    unint64_t v6 = v24;
    unsigned int v61 = sub_1001D7CF0(v26, v28, v62);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, v62, v23 + 4, v23 + 12);

    uint64_t v29 = v28;
    uint64_t v14 = v58;
    swift_bridgeObjectRelease(v29);
    *(_WORD *)(v23 + 12) = 2080;
    sub_1001A9F18( &qword_100449980,  (uint64_t (*)(uint64_t))&type metadata accessor for Date,  (uint64_t)&protocol conformance descriptor for Date);
    char v31 = dispatch thunk of CustomStringConvertible.description.getter(v0, v30);
    unsigned int v61 = sub_10022D244(v31, v32);
    sub_10022CF98((uint64_t)&v61, v33, v34, v23 + 22);
    sub_1001AA9C8();
    sub_10022CDFC();
    sub_1001D9094( (void *)&_mh_execute_header,  v54,  v19,  "Updated expiration date for pseudonym %s to %s",  (uint8_t *)v23);
    sub_10022CF08();
    sub_1001B0E60(v57);
    sub_1001B0E60(v23);
  }

  else
  {

    sub_10022CDFC();
  }

  char v12 = v59;
  if (v6) {
    goto LABEL_18;
  }
LABEL_19:
  sub_100285E64();
  sub_1001B0FF8();
}

    unint64_t v6 = (v11 - 1) & v11;
    BOOL v9 = __clz(__rbit64(v11)) + (v12 << 6);
    unsigned int v5 = v12;
  }

  __break(1u);
  return result;
}

    unsigned int v5 = (v10 - 1) & v10;
    char v8 = __clz(__rbit64(v10)) + (v11 << 6);
    char v4 = v11;
  }

  __break(1u);
}

      char v12 = v37 + 1;
      swift_bridgeObjectRelease_n(v19, 2LL);
      swift_unknownObjectRelease(v38);
      uint64_t result = v35;
      if (v12 == v33)
      {
        swift_bridgeObjectRelease(v35);
        return 0LL;
      }
    }

    __break(1u);
    goto LABEL_32;
  }

  return 0LL;
}

    BOOL v9 = (v13 - 1) & v13;
    id v11 = __clz(__rbit64(v13)) + (v14 << 6);
    char v8 = v14;
  }

  __break(1u);
}

    unint64_t v6 = (v10 - 1) & v10;
    char v8 = __clz(__rbit64(v10)) + (v11 << 6);
    unsigned int v5 = v11;
  }

  __break(1u);
}

LABEL_19:
    if (i - 3 == v6)
    {

      swift_bridgeObjectRelease(a1);
      return swift_bridgeObjectRelease(a4);
    }
  }

  __break(1u);
LABEL_30:
  uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Negative value is not representable",  35LL,  2LL,  "Swift/Integers.swift",  20LL);
  __break(1u);
  return result;
}

  char v22 = sub_1001D8F3C(v6, "type");
  if (v22 == (id)1)
  {
    unsigned int v28 = sub_1001D8F3C(1LL, "value");
    if (!v28)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0LL);
      unsigned int v28 = sub_1002A1338();
      sub_1001B2428();
    }

    uint64_t v29 = (void *)sub_1002A1304();
    unint64_t v30 = sub_1001D8FD4(v29, "normalizedGenericHandleForValue:");
LABEL_31:
    char v32 = v30;

    if (v32)
    {
LABEL_36:

LABEL_37:
      sub_1001E90C0();
      return;
    }

LABEL_21:
  uint64_t v26 = 0LL;
  if ((*(_BYTE *)&v4 & 4) != 0)
  {
LABEL_13:
    uint64_t v25 = 2654435761LL * self->_options;
    if ((*(_WORD *)&v4 & 0x400) != 0) {
      goto LABEL_14;
    }
LABEL_23:
    unsigned int v5 = 0LL;
    if ((*(_WORD *)&v4 & 0x200) != 0) {
      goto LABEL_15;
    }
    goto LABEL_24;
  }

      goto LABEL_22;
    }

    char v16 = sub_1001704C4();
    char v8 = (void *)objc_claimAutoreleasedReturnValue(v16);
    if (os_log_type_enabled((os_log_t)v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      unint64_t v15 = "Not launching app as SharePlay is not allowed";
      goto LABEL_11;
    }
  }

  else
  {
    uint64_t v14 = sub_1001704C4();
    char v8 = (void *)objc_claimAutoreleasedReturnValue(v14);
    if (os_log_type_enabled((os_log_t)v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      unint64_t v15 = "Not launching app as we are not joined into this conversation";
LABEL_11:
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)v8, OS_LOG_TYPE_DEFAULT, v15, buf, 2u);
    }
  }

  if (-[CSDCallStateMonitor isAudioMutedForHoldMusic](self, "isAudioMutedForHoldMusic"))
  {
    uint64_t v20 = sub_1001704C4();
    unint64_t v21 = (os_log_s *)objc_claimAutoreleasedReturnValue(v20);
    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEFAULT,  "Hold music disabled - unmuting uplink and downlink",  buf,  2u);
    }

    [v7 setUplinkMuted:0];
    [v7 setDownlinkMuted:0];
    unsigned int v19 = 0LL;
    char v8 = 0LL;
LABEL_25:
    -[CSDCallStateMonitor setAudioMutedForHoldMusic:](self, "setAudioMutedForHoldMusic:", v19);
  }

  else
  {
    char v8 = 0LL;
  }

          id v23 = 1;
          goto LABEL_22;
        }
      }

      else if ([v4 isGuest] {
             && ([v18 needsConversationOrVideoRelaySupport] & 1) == 0)
      }
      {
        int v24 = sub_1001704C4();
        char v22 = (os_log_s *)objc_claimAutoreleasedReturnValue(v24);
        if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412546;
          unint64_t v63 = v18;
          char v64 = 2112;
          char v65 = v4;
          _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEFAULT,  "Allowing call: %@ to be pushed to destination: %@",  buf,  0x16u);
        }

        unsigned int v43 = 1;
        goto LABEL_21;
      }

      id v23 = 0;
LABEL_22:
      if (([v11 canReceiveRelayedGFTCalls] & 1) != 0
        || ![v18 needsConversationOrVideoRelaySupport])
      {
        if (v23)
        {
          char v27 = (void *)objc_claimAutoreleasedReturnValue([v18 uniqueProxyIdentifier]);
          [v45 addObject:v27];

          [v44 addObject:v18];
          continue;
        }
      }

      else
      {
        uint64_t v25 = sub_1001704C4();
        uint64_t v26 = (os_log_s *)objc_claimAutoreleasedReturnValue(v25);
        if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412546;
          unint64_t v63 = v18;
          char v64 = 2112;
          char v65 = v4;
          _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_DEFAULT,  "Not allowing call: %@ to be pushed to destination: %@ because the call requires conversation or video relay support",  buf,  0x16u);
        }
      }

      unsigned int v28 = sub_1001704C4();
      uint64_t v29 = (os_log_s *)objc_claimAutoreleasedReturnValue(v28);
      if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412546;
        unint64_t v63 = v18;
        char v64 = 2112;
        char v65 = v4;
        _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_DEFAULT,  "Skipping call: %@ to track for pushing to destination: %@",  buf,  0x16u);
      }
    }

    unint64_t v15 = [obj countByEnumeratingWithState:&v57 objects:v66 count:16];
  }

  while (v15);
LABEL_36:

  if ([v45 count])
  {
    unint64_t v30 = v44;
    if ((v43 & 1) != 0)
    {
      char v55 = 0u;
      char v56 = 0u;
      unsigned int v53 = 0u;
      unint64_t v54 = 0u;
      char v31 = v44;
      char v32 = [v31 countByEnumeratingWithState:&v53 objects:v61 count:16];
      if (v32)
      {
        unsigned int v33 = v32;
        uint64_t v34 = *(void *)v54;
        do
        {
          for (j = 0LL; j != v33; j = (char *)j + 1)
          {
            if (*(void *)v54 != v34) {
              objc_enumerationMutation(v31);
            }
            -[CSDRelayMessagingController sendCallAnsweredElsewhereMessageToClientForCall:]( v41,  "sendCallAnsweredElsewhereMessageToClientForCall:",  *(void *)(*((void *)&v53 + 1) + 8LL * (void)j));
          }

          unsigned int v33 = [v31 countByEnumeratingWithState:&v53 objects:v61 count:16];
        }

        while (v33);
      }
    }

    char v36 = (void *)objc_claimAutoreleasedReturnValue(-[CSDRelayMessagingController hostMessagingDelegate](v41, "hostMessagingDelegate"));
    v47[0] = _NSConcreteStackBlock;
    v47[1] = 3221225472LL;
    v47[2] = sub_10007F398;
    v47[3] = &unk_1003D88D0;
    unsigned int v48 = v44;
    char v37 = v42;
    uint64_t v49 = v42;
    unint64_t v50 = v41;
    char v51 = v45;
    char v52 = v4;
    [v36 pushHostedCallsForRemoteInviteDictionary:0 destination:v52 toPairedDevice:v40 completion:v47];

    unsigned int v38 = v48;
  }

  else
  {
    uint64_t v39 = sub_1001704C4();
    unsigned int v38 = (os_log_s *)objc_claimAutoreleasedReturnValue(v39);
    char v37 = v42;
    unint64_t v30 = v44;
    if (os_log_type_enabled(v38, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v38,  OS_LOG_TYPE_DEFAULT,  "Found no calls to send sendPushCallsMessageToClientDestination",  buf,  2u);
    }
  }
}

  return v15;
}

  return v5;
}

  return v21;
}

LABEL_22:
LABEL_23:

    uint64_t v25 = 0;
    goto LABEL_24;
  }

  id v23 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s lightweightPrimary](v22, "lightweightPrimary"));
  int v24 = [v23 isEquivalentToHandle:v8];

  if ((v24 & 1) == 0)
  {
    uint64_t v34 = sub_1001704C4();
    unint64_t v30 = (os_log_s *)objc_claimAutoreleasedReturnValue(v34);
    if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
    {
      char v36 = 138412290;
      char v37 = v8;
      char v31 = "FromHandle: %@ trying to vouch for another member's lightweightMember";
      char v32 = v30;
      unsigned int v33 = 12;
      goto LABEL_20;
    }

    goto LABEL_21;
  }

LABEL_9:
  uint64_t v25 = 1;
LABEL_24:

  return v25;
}

    ((void (*)(void ***))v12[2])(v12);
LABEL_22:

    objc_destroyWeak(&v44);
    objc_destroyWeak(&location);
    goto LABEL_23;
  }

  char v16 = sub_1001704C4();
  int v17 = (os_log_s *)objc_claimAutoreleasedReturnValue(v16);
  if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
  {
    char v18 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) screenCaptureQueue]);
    unsigned int v19 = (void *)objc_claimAutoreleasedReturnValue([v18 objectForKeyedSubscript:*(void *)(a1 + 40)]);
    uint64_t v20 = objc_retainBlock(v19);
    *(_DWORD *)buf = 138412290;
    unsigned int v48 = v20;
    _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "Not enabling ScreenSharing because we already have a queued up request %@",  buf,  0xCu);
  }

  objc_destroyWeak(&v44);
  objc_destroyWeak(&location);
LABEL_23:
}
          }

          unsigned int v13 = [obj countByEnumeratingWithState:&v55 objects:v65 count:16];
        }

        while (v13);

        if ((v44 & 1) != 0)
        {
          int v24 = sub_1001704C4();
          uint64_t v25 = (os_log_s *)objc_claimAutoreleasedReturnValue(v24);
          if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v26 = v41;
            char v27 = (void *)objc_claimAutoreleasedReturnValue([v41 prioritizedSenderIdentities]);
            *(_DWORD *)buf = 138412546;
            unsigned int v61 = (os_log_s *)v16;
            uint64_t v62 = 2112;
            unint64_t v63 = v27;
            _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEFAULT,  "SNAP: Shouldnt automatically send Name+Photo because handles %@ contains self handle %@",  buf,  0x16u);

            char v8 = 0;
            unsigned int v28 = v40;
LABEL_47:

LABEL_30:
            goto LABEL_31;
          }

          char v8 = 0;
          unsigned int v28 = v40;
LABEL_46:
          uint64_t v26 = v41;
          goto LABEL_47;
        }
      }

      else
      {
      }

      char v31 = (void *)objc_claimAutoreleasedReturnValue(-[CSDCallStateController callCenter](v42, "callCenter"));
      uint64_t v25 = (os_log_s *)objc_claimAutoreleasedReturnValue([v31 contactStore]);

      uint64_t v49 = 0u;
      unint64_t v50 = 0u;
      char v47 = 0u;
      unsigned int v48 = 0u;
      char v32 = (os_log_s *)v46;
      unsigned int v33 = -[os_log_s countByEnumeratingWithState:objects:count:]( v32,  "countByEnumeratingWithState:objects:count:",  &v47,  v59,  16LL);
      if (v33)
      {
        uint64_t v34 = v33;
        unint64_t v35 = *(void *)v48;
        while (2)
        {
          for (k = 0LL; k != v34; k = (char *)k + 1)
          {
            if (*(void *)v48 != v35) {
              objc_enumerationMutation(v32);
            }
            char v37 = (void *)objc_claimAutoreleasedReturnValue( -[CSDCallStateController _contactForHandle:contactStore:]( v42,  "_contactForHandle:contactStore:",  *(void *)(*((void *)&v47 + 1) + 8LL * (void)k),  v25));

            if (!v37)
            {

              unsigned int v38 = sub_1001704C4();
              uint64_t v39 = (os_log_s *)objc_claimAutoreleasedReturnValue(v38);
              if (os_log_type_enabled(v39, OS_LOG_TYPE_DEFAULT))
              {
                *(_DWORD *)buf = 138412290;
                unsigned int v61 = v32;
                _os_log_impl( (void *)&_mh_execute_header,  v39,  OS_LOG_TYPE_DEFAULT,  "SNAP: Shouldnt automatically send Name+Photo because handles are unknown %@",  buf,  0xCu);
              }

              char v8 = 0;
              char v32 = v39;
              goto LABEL_45;
            }
          }

          uint64_t v34 = -[os_log_s countByEnumeratingWithState:objects:count:]( v32,  "countByEnumeratingWithState:objects:count:",  &v47,  v59,  16LL);
          if (v34) {
            continue;
          }
          break;
        }
      }

      char v8 = 1;
LABEL_45:
      unsigned int v28 = v40;

      goto LABEL_46;
    }
  }

  else
  {
LABEL_26:
    char v8 = 0;
  }

  *((_BYTE *)result + 16) = self->_holdAndAnswerAllowed;
  *((_WORD *)result + 12) |= 0x20u;
  if ((*(_WORD *)&self->_has & 0x80) == 0) {
    return result;
  }
LABEL_11:
  *((_BYTE *)result + 1_Block_object_dispose(va, 8) = self->_sendToVoicemailAllowed;
  *((_WORD *)result + 12) |= 0x80u;
  return result;
}

    goto LABEL_18;
  }

  unint64_t v50 = (NSUUID *)objc_claimAutoreleasedReturnValue(-[os_log_s remoteRequesterIDSDestinationFor:](v23, "remoteRequesterIDSDestinationFor:", v12));
  if (!v50)
  {
    char v79 = sub_1001704C4();
    unsigned int v80 = (os_log_s *)objc_claimAutoreleasedReturnValue(v79);
    if (os_log_type_enabled(v80, OS_LOG_TYPE_ERROR)) {
      sub_1002BA044((uint64_t)v12, v23, v80);
    }
    goto LABEL_51;
  }

  if (!v13 || !v14)
  {
    unint64_t v82 = sub_1001704C4();
    unsigned int v80 = (os_log_s *)objc_claimAutoreleasedReturnValue(v82);
    if (os_log_type_enabled(v80, OS_LOG_TYPE_ERROR)) {
      sub_1002BA200();
    }
LABEL_51:

LABEL_52:
    goto LABEL_18;
  }

  v115[0] = @"jpg";
  v115[1] = @"heic";
  v115[2] = @"mov";
  char v51 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v115, 3LL));
  char v52 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](&OBJC_CLASS___NSSet, "setWithArray:", v51));

  unsigned int v53 = (void *)objc_claimAutoreleasedReturnValue([v13 pathExtension]);
  unint64_t v54 = (void *)objc_claimAutoreleasedReturnValue([v53 lowercaseString]);
  unint64_t v107 = v52;
  if (([v52 containsObject:v54] & 1) == 0)
  {

    goto LABEL_44;
  }

  char v100 = (void *)objc_claimAutoreleasedReturnValue([v14 pathExtension]);
  char v104 = v50;
  char v55 = (void *)objc_claimAutoreleasedReturnValue([v100 lowercaseString]);
  char v56 = [v52 containsObject:v55];

  unint64_t v50 = v104;
  if ((v56 & 1) == 0)
  {
LABEL_44:
    char v84 = sub_1001704C4();
    unsigned int v85 = (os_log_s *)objc_claimAutoreleasedReturnValue(v84);
    if (os_log_type_enabled(v85, OS_LOG_TYPE_ERROR)) {
      sub_1002BA198();
    }

    goto LABEL_52;
  }

  unsigned int v57 = objc_alloc(&OBJC_CLASS___NSUUID);
  unint64_t v58 = (void *)objc_claimAutoreleasedReturnValue([v12 transactionID]);
  char v59 = -[NSUUID initWithUUIDString:](v57, "initWithUUIDString:", v58);

  if (v59)
  {
    char v60 = NSTemporaryDirectory();
    uint64_t v98 = (void *)objc_claimAutoreleasedReturnValue(v60);
    v114[0] = v98;
    unint64_t v94 = v59;
    char v95 = (void *)objc_claimAutoreleasedReturnValue(-[NSUUID UUIDString](v59, "UUIDString"));
    v114[1] = v95;
    unsigned int v61 = objc_claimAutoreleasedReturnValue(+[NSUUID UUID](&OBJC_CLASS___NSUUID, "UUID"));
    uint64_t v62 = (void *)objc_claimAutoreleasedReturnValue([(id)v61 UUIDString]);
    v114[2] = v62;
    unint64_t v63 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v114, 3LL));
    char v64 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL fileURLWithPathComponents:](&OBJC_CLASS___NSURL, "fileURLWithPathComponents:", v63));

    char v65 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
    unint64_t v112 = 0LL;
    LOBYTE(v61) = [v65 createDirectoryAtURL:v64 withIntermediateDirectories:1 attributes:0 error:&v112];
    unsigned int v66 = v112;

    char v101 = v64;
    if ((v61 & 1) != 0)
    {
      uint64_t v67 = (void *)objc_claimAutoreleasedReturnValue([v64 URLByAppendingPathComponent:@"lp_image"]);
      unint64_t v68 = objc_claimAutoreleasedReturnValue([v13 pathExtension]);
      char v69 = objc_claimAutoreleasedReturnValue([v67 URLByAppendingPathExtension:v68]);

      char v70 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
      uint64_t v111 = v66;
      unint64_t v99 = (os_log_s *)v69;
      LOBYTE(v6_Block_object_dispose(va, 8) = [v70 copyItemAtURL:v13 toURL:v69 error:&v111];
      unsigned int v71 = v111;

      if ((v68 & 1) != 0)
      {
        uint64_t v72 = (void *)objc_claimAutoreleasedReturnValue([v101 URLByAppendingPathComponent:@"lp_movie"]);
        unint64_t v73 = objc_claimAutoreleasedReturnValue([v14 pathExtension]);
        char v74 = objc_claimAutoreleasedReturnValue([v72 URLByAppendingPathExtension:v73]);

        char v75 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
        unsigned int v110 = v71;
        char v96 = (os_log_s *)v74;
        LOBYTE(v73) = [v75 copyItemAtURL:v14 toURL:v74 error:&v110];
        unsigned int v66 = v110;

        if ((v73 & 1) != 0)
        {
          -[CSDMomentsController _transferFileAtURL:forSession:request:]( self,  "_transferFileAtURL:forSession:request:",  v101,  v23,  v12);
          unsigned int v76 = 0;
          unint64_t v77 = v107;
          char v59 = v94;
        }

        else
        {
          unsigned int v92 = sub_1001704C4();
          uint64_t v93 = (os_log_s *)objc_claimAutoreleasedReturnValue(v92);
          char v59 = v94;
          if (os_log_type_enabled(v93, OS_LOG_TYPE_ERROR)) {
            sub_1002B9F84();
          }

          unsigned int v76 = 1;
          unint64_t v77 = v107;
        }
      }

      else
      {
        unsigned int v66 = v71;
        char v91 = sub_1001704C4();
        char v96 = (os_log_s *)objc_claimAutoreleasedReturnValue(v91);
        unint64_t v77 = v107;
        char v59 = v94;
        if (os_log_type_enabled(v96, OS_LOG_TYPE_ERROR)) {
          sub_1002BA0D8();
        }
        unsigned int v76 = 1;
      }
    }

    else
    {
      v90 = sub_1001704C4();
      unint64_t v99 = (os_log_s *)objc_claimAutoreleasedReturnValue(v90);
      unint64_t v77 = v107;
      if (os_log_type_enabled(v99, OS_LOG_TYPE_ERROR)) {
        sub_1002BA138();
      }
      unsigned int v76 = 1;
      char v59 = v94;
    }

    uint64_t v89 = (os_log_s *)v101;
  }

  else
  {
    char v88 = sub_1001704C4();
    uint64_t v89 = (os_log_s *)objc_claimAutoreleasedReturnValue(v88);
    if (os_log_type_enabled(v89, OS_LOG_TYPE_ERROR)) {
      sub_1002B9F04(v12, v89);
    }
    unsigned int v76 = 1;
    unint64_t v77 = v107;
  }

  if (!v76) {
    goto LABEL_15;
  }
LABEL_18:
}

    goto LABEL_22;
  }

  int v10 = 0;
LABEL_23:

  return v10;
}

      int v10 = (v15 - 1) & v15;
      unsigned int v13 = __clz(__rbit64(v15)) + (v16 << 6);
      BOOL v9 = v16;
    }

    __break(1u);
  }

  __break(1u);
}

    id v3 = (v15 - 1) & v15;
    unsigned int v13 = __clz(__rbit64(v15)) + (v16 << 6);
    unint64_t v6 = v16;
LABEL_22:
    char v18 = (unint64_t *)(v8 + 24 * v13);
    unsigned int v19 = *v18;
    uint64_t v20 = v18[1];
    if (v11 < v20)
    {
      int v10 = v19;
      id v11 = v20;
    }

    else if (v11 == v20 && v10 < v19)
    {
      int v10 = v19;
    }
  }

  __break(1u);
LABEL_49:
  __break(1u);
  return result;
}

  unsigned int v61 = _swiftEmptyArrayStorage;
  uint64_t result = swift_bridgeObjectRetain(v14);
  if (v24)
  {
    unsigned int v28 = 0LL;
    uint64_t v29 = v14 + 4;
    while (v28 < v14[2])
    {
      sub_1001B2450();
      unint64_t v30 = *(void *)&v63[8];
      char v31 = *(void *)&v63[16];
      sub_1001B204C(&v62, *(uint64_t *)&v63[8]);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v31 + 8))(v30, v31) & 1) != 0)
      {
        uint64_t result = (uint64_t)sub_1001B2430();
      }

      else
      {
        char v59 = v62;
        v60[0] = *(_OWORD *)v63;
        *(_OWORD *)((char *)v60 + 9) = *(_OWORD *)&v63[9];
        char v32 = v61;
        uint64_t result = swift_isUniquelyReferenced_nonNull_native(v61);
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_10025006C(0LL, v32[2] + 1LL, 1);
          char v32 = v61;
        }

        uint64_t v34 = v32[2];
        unsigned int v33 = v32[3];
        if (v34 >= v33 >> 1)
        {
          uint64_t result = (uint64_t)sub_10025006C((char *)(v33 > 1), v34 + 1, 1);
          char v32 = v61;
        }

        v32[2] = v34 + 1;
        unint64_t v35 = &v32[6 * v34];
        char v36 = v59;
        char v37 = v60[0];
        *(_OWORD *)((char *)v35 + 57) = *(_OWORD *)((char *)v60 + 9);
        v35[2] = v36;
        v35[3] = v37;
      }

      ++v28;
      v29 += 6;
      if (v24 == v28) {
        goto LABEL_32;
      }
    }

    __break(1u);
    goto LABEL_42;
  }

  sub_1001B0FF8();
}

  sub_1001F854C();
  (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v29, v63);
  sub_1001B0FF8();
}

      id v11 = (v20 - 1) & v20;
    }

    swift_release(v5);
    id v3 = v35;
    unsigned int v19 = (void *)(v5 + 64);
    if ((a2 & 1) == 0) {
      goto LABEL_42;
    }
LABEL_38:
    uint64_t v34 = 1LL << *(_BYTE *)(v5 + 32);
    if (v34 >= 64) {
      sub_10024772C(0LL, (unint64_t)(v34 + 63) >> 6, v19);
    }
    else {
      void *v19 = -1LL << v34;
    }
    *(void *)(v5 + 16) = 0LL;
  }

  unint64_t v6 = v7;
LABEL_47:
  sub_10024F1F0(v4, (v12 - v4) / 16, v6);
  return 1LL;
}

              sub_100207134();
              return (void *)v15;
            }
          }
        }
      }
    }

              sub_100207134();
              return;
            }
          }
        }
      }
    }

    char v8 = (v14 - 1) & v14;
    char v12 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_22:
    char v16 = *(void *)(a1[7] + 8 * v12);
    sub_1001D7264(*(_DWORD *)(a1[6] + 4 * v12));
    if ((v18 & 1) == 0 || *(void *)(a2[7] + 8 * v17) != v16) {
      return;
    }
  }

  unint64_t v15 = v13 + 4;
  if (v15 >= v10) {
    return;
  }
  uint64_t v14 = v5[v15];
  if (v14)
  {
    char v4 = v15;
    goto LABEL_21;
  }

  while (1)
  {
    char v4 = v15 + 1;
    if (__OFADD__(v15, 1LL)) {
      break;
    }
    if (v4 >= v10) {
      return;
    }
    uint64_t v14 = v5[v4];
    ++v15;
    if (v14) {
      goto LABEL_21;
    }
  }

    char v8 = (v14 - 1) & v14;
    char v12 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_22:
    char v16 = (uint64_t *)(a1[6] + 16 * v12);
    int v17 = *v16;
    char v18 = v16[1];
    unsigned int v19 = *(void **)(a1[7] + 8 * v12);
    swift_bridgeObjectRetain(v18);
    uint64_t v20 = v19;
    unint64_t v21 = sub_1001D7094(v17, v18);
    id v23 = v22;
    swift_bridgeObjectRelease(v18);
    if ((v23 & 1) == 0)
    {

      return;
    }

    sub_100253660();
    int v24 = *(id *)(a2[7] + 8 * v21);
    uint64_t v25 = static NSObject.== infix(_:_:)(v24, v20);

    if ((v25 & 1) == 0) {
      return;
    }
  }

  unint64_t v15 = v13 + 4;
  if (v15 >= v10) {
    return;
  }
  uint64_t v14 = v5[v15];
  if (v14)
  {
    char v4 = v15;
    goto LABEL_21;
  }

  while (1)
  {
    char v4 = v15 + 1;
    if (__OFADD__(v15, 1LL)) {
      break;
    }
    if (v4 >= v10) {
      return;
    }
    uint64_t v14 = v5[v4];
    ++v15;
    if (v14) {
      goto LABEL_21;
    }
  }

              swift_release(v7);
              return;
            }
          }
        }
      }
    }

    unint64_t v6 = (v12 - 1) & v12;
  }

  unsigned int v13 = v11 + 4;
  if (v13 >= v7) {
    return swift_release(v2);
  }
  char v12 = *(void *)(v3 + 8 * v13);
  if (v12)
  {
    char v8 = v13;
    goto LABEL_21;
  }

  while (1)
  {
    char v8 = v13 + 1;
    if (__OFADD__(v13, 1LL)) {
      break;
    }
    if (v8 >= v7) {
      return swift_release(v2);
    }
    char v12 = *(void *)(v3 + 8 * v8);
    ++v13;
    if (v12) {
      goto LABEL_21;
    }
  }

    unint64_t v6 = (v12 - 1) & v12;
  }

  unsigned int v13 = v11 + 4;
  if (v13 >= v7) {
    return swift_release(v2);
  }
  char v12 = *(void *)(v3 + 8 * v13);
  if (v12)
  {
    char v8 = v13;
    goto LABEL_21;
  }

  while (1)
  {
    char v8 = v13 + 1;
    if (__OFADD__(v13, 1LL)) {
      break;
    }
    if (v8 >= v7) {
      return swift_release(v2);
    }
    char v12 = *(void *)(v3 + 8 * v8);
    ++v13;
    if (v12) {
      goto LABEL_21;
    }
  }

  char v59 = (uint8_t *)(v23 & 0xC000000000000001LL);
  v156 = OBJC_IVAR___CSDParticipantUpdateSanitizerImpl_voucherManager;
  unint64_t v21 = 4LL;
  *(void *)&unint64_t v58 = 136315138LL;
  v164 = v58;
  v162 = (char *)&type metadata for Any + 8;
  v173 = v23;
  v172 = v57;
  v175 = (uint8_t *)(v23 & 0xC000000000000001LL);
  while (1)
  {
    if (v59) {
      char v60 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v21 - 4, v23);
    }
    else {
      char v60 = *(id *)(v23 + 8 * v21);
    }
    unsigned int v61 = v60;
    uint64_t v62 = v21 - 3;
    if (__OFADD__(v21 - 4, 1LL))
    {
      __break(1u);
      goto LABEL_70;
    }

    unint64_t v63 = [v60 associationVoucher];
    if (!v63
      || (char v64 = v63, v65 = [v63 tuVoucher], v64, !v65))
    {
      objc_msgSend(v61, "setAssociationVoucher:", 0, v156);
      goto LABEL_59;
    }

    unsigned int v66 = [v65 data];
    uint64_t v67 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v66);
    char v69 = v68;

    char v70 = objc_allocWithZone((Class)&OBJC_CLASS___CSDMessagingMemberAssociationClaim);
    sub_10027A67C(v67, v69);
    if (!v71) {
      break;
    }
    v174 = v71;
    uint64_t v72 = sub_10027A74C(v71);
    char v74 = v73;
    char v75 = v6;
    unsigned int v76 = [v6 groupUUID];
    unint64_t v77 = v181;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v76);

    char v79 = UUID.uuidString.getter(v78);
    uint64_t v81 = v80;
    (*(void (**)(char *, uint64_t))(v182 + 8))(v77, v183);
    if (!v74)
    {
      swift_bridgeObjectRelease(v81);
LABEL_43:
      unsigned int v97 = v185;
      uint64_t v98 = v179;
      unint64_t v99 = v180;
      (*(void (**)(char *, uint64_t, void *))(v185 + 16))(v179, v171, v180);
      uint64_t v86 = v61;
      unsigned int v102 = (os_log_s *)Logger.logObject.getter(v86, v100, v101);
      unint64_t v103 = static os_log_type_t.default.getter(v102);
      if (os_log_type_enabled(v102, v103))
      {
        char v104 = swift_slowAlloc(12LL, -1LL);
        char v105 = (void **)swift_slowAlloc(32LL, -1LL);
        aBlock = v105;
        *(_DWORD *)char v104 = v164;
        unsigned int v106 = [v86 handle];
        if (!v106) {
          goto LABEL_78;
        }
        unint64_t v107 = sub_10027A7AC(v106);
        if (!v108) {
          goto LABEL_79;
        }
        char v109 = v108;
        *(void *)(v104 + 4) = sub_1001D7CF0(v107, v108, (uint64_t *)&aBlock);

        swift_bridgeObjectRelease(v109);
        _os_log_impl( (void *)&_mh_execute_header,  v102,  v103,  "Dropping association voucher for member %s that makes claim for different conversation.",  (uint8_t *)v104,  0xCu);
        swift_arrayDestroy(v105, 1LL);
        swift_slowDealloc(v105, -1LL, -1LL);
        swift_slowDealloc(v104, -1LL, -1LL);

        (*(void (**)(char *, void *))(v185 + 8))(v179, v180);
        unint64_t v6 = v168;
      }

      else
      {

        (*(void (**)(char *, void *))(v97 + 8))(v98, v99);
        unint64_t v6 = v75;
      }

      objc_msgSend(v86, "setAssociationVoucher:", 0, v156);
      char v123 = [v86 validationSource];
      a3 = v184;
      id v23 = v173;
      unsigned int v57 = v172;
      char v59 = v175;
      if (v123 != 2) {
        goto LABEL_58;
      }
      goto LABEL_57;
    }

    if (v72 == v79 && v74 == v81)
    {
      swift_bridgeObjectRelease(v74);
      swift_bridgeObjectRelease(v81);
    }

    else
    {
      char v83 = _stringCompareWithSmolCheck(_:_:expecting:)(v72, v74, v79, v81, 0LL);
      swift_bridgeObjectRelease(v74);
      swift_bridgeObjectRelease(v81);
      if ((v83 & 1) == 0) {
        goto LABEL_43;
      }
    }

    unsigned int v110 = objc_msgSend(v61, "tuConversationMember", v156);
    char v59 = v175;
    if (!v110) {
      goto LABEL_62;
    }
    uint64_t v111 = v110;
    unint64_t v112 = [v65 handle];
    char v113 = [v111 handle];
    char v114 = [v112 isEqualToHandle:v113];

    if (!v114)
    {

LABEL_62:
      unsigned int v124 = v185;
      uint64_t v125 = v178;
      unint64_t v126 = v180;
      (*(void (**)(char *, uint64_t, void *))(v185 + 16))(v178, v171, v180);
      uint64_t v86 = v61;
      unsigned int v129 = (os_log_s *)Logger.logObject.getter(v86, v127, v128);
      unint64_t v130 = static os_log_type_t.default.getter(v129);
      if (os_log_type_enabled(v129, v130))
      {
        char v131 = swift_slowAlloc(12LL, -1LL);
        uint64_t v132 = (void **)swift_slowAlloc(32LL, -1LL);
        aBlock = v132;
        *(_DWORD *)char v131 = v164;
        BOOL v133 = [v86 handle];
        if (!v133) {
          goto LABEL_80;
        }
        uint64_t v134 = sub_10027A7AC(v133);
        if (!v135) {
          goto LABEL_81;
        }
        v136 = v135;
        *(void *)(v131 + 4) = sub_1001D7CF0(v134, v135, (uint64_t *)&aBlock);

        swift_bridgeObjectRelease(v136);
        _os_log_impl( (void *)&_mh_execute_header,  v129,  v130,  "Dropping association voucher for member %s because the voucher is for a different handle.",  (uint8_t *)v131,  0xCu);
        swift_arrayDestroy(v132, 1LL);
        swift_slowDealloc(v132, -1LL, -1LL);
        swift_slowDealloc(v131, -1LL, -1LL);

        (*(void (**)(char *, void *))(v185 + 8))(v178, v180);
        unint64_t v6 = v168;
        char v59 = v175;
      }

      else
      {

        (*(void (**)(char *, void *))(v124 + 8))(v125, v126);
        unint64_t v6 = v168;
      }

      [v86 setAssociationVoucher:0];
      v137 = [v86 validationSource];
      a3 = v184;
      id v23 = v173;
      unsigned int v57 = v172;
      if (v137 != 2)
      {
LABEL_58:

        unsigned int v61 = v174;
        goto LABEL_59;
      }

    int v10 = (v14 - 1) & v14;
  }

  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

    uint64_t v81 = 0LL;
    memset(v103, 0, sizeof(v103));
    unsigned int v102 = 0u;
  }

  sub_10028EC50( v25,  v26,  v27,  v28,  v29,  v30,  v31,  v32,  v74,  v75,  v76,  v77,  (uint64_t)v78,  (uint64_t)v79,  v80,  v82,  v83,  v84,  v85,  v86,  v88,  v89,  (uint64_t)v90,  (uint64_t)v91,  v92,  v93,  v94,  v95,  v96,  v97,  v98,  *((uint64_t *)&v98 + 1),  v99,  *((uint64_t *)&v99 + 1),  v100,  *((uint64_t *)&v100 + 1),  v101[0]);
  char v42 = sub_1001AFF14((uint64_t *)&unk_10044BF10);
  unsigned int v43 = sub_1001DCFEC((uint64_t)&v98, (uint64_t)&v102, (uint64_t)&type metadata for Any + 8, v42);
  if (!(_DWORD)v43)
  {
    sub_10028EC50( v43,  v44,  v45,  v46,  v47,  v48,  v49,  v50,  v74,  v75,  v76,  v77,  (uint64_t)v78,  (uint64_t)v79,  v80,  v82,  v83,  v84,  v85,  v87,  v88,  v89,  (uint64_t)v90,  (uint64_t)v91,  v92,  v93,  v94,  v95,  v96,  v97,  2105376LL,  0xE300000000000000LL,  v99,  *((uint64_t *)&v99 + 1),  v100,  *((uint64_t *)&v100 + 1),  v101[0]);
    v72._countAndFlagsBits = String.init<A>(describing:)(&v102, (char *)&type metadata for Any + 8);
    String.append(_:)(v72);
    sub_1001B0F5C();
    sub_10028EB4C();
    unint64_t v73 = *((void *)&v98 + 1);
    sub_10028EFD8(v98);
    char v41 = v73;
    goto LABEL_59;
  }

  char v41 = v98;
  uint64_t v86 = *(void *)(v98 + 16);
  if (!v86) {
    goto LABEL_59;
  }
  char v51 = 0LL;
  char v84 = v98;
  unsigned int v85 = v98 + 32;
LABEL_31:
  if (v51 >= *(void *)(v41 + 16)) {
    goto LABEL_63;
  }
  char v52 = *(void *)(v85 + 8 * v51);
  char v88 = v51 + 1;
  sub_10024DAEC();
  sub_10028EB4C();
  unsigned int v53 = 0LL;
  uint64_t v89 = v52 + 64;
  sub_10028ECB4();
  char v56 = v55 & v54;
  unint64_t v58 = (unint64_t)(v57 + 63) >> 6;
  char v83 = v58 - 1;
  if ((v55 & v54) != 0)
  {
LABEL_33:
    sub_1001E9268();
    char v60 = v59 | (v53 << 6);
    goto LABEL_34;
  }

  while (1)
  {
    char v64 = v53 + 1;
    if (__OFADD__(v53, 1LL)) {
      break;
    }
    if (v64 < v58)
    {
      char v65 = *(void *)(v89 + 8 * v64);
      if (v65) {
        goto LABEL_38;
      }
      unsigned int v66 = v53 + 2;
      ++v53;
      if (v64 + 1 < v58)
      {
        char v65 = *(void *)(v89 + 8 * v66);
        if (v65) {
          goto LABEL_41;
        }
        unsigned int v53 = v64 + 1;
        if (v64 + 2 < v58)
        {
          char v65 = *(void *)(v89 + 8 * (v64 + 2));
          if (v65)
          {
            v64 += 2LL;
            goto LABEL_38;
          }

          unsigned int v66 = v64 + 3;
          unsigned int v53 = v64 + 2;
          if (v64 + 3 < v58)
          {
            char v65 = *(void *)(v89 + 8 * v66);
            if (!v65)
            {
              while (1)
              {
                char v64 = v66 + 1;
                if (__OFADD__(v66, 1LL)) {
                  goto LABEL_64;
                }
                if (v64 >= v58)
                {
                  unsigned int v53 = v58 - 1;
                  goto LABEL_52;
                }

                char v65 = *(void *)(v89 + 8 * v64);
                ++v66;
                if (v65) {
                  goto LABEL_38;
                }
              }
            }

LABEL_22:
  uint64_t v25 = 0LL;
  if ((*(_WORD *)&v4 & 0x400) == 0) {
    goto LABEL_23;
  }
LABEL_14:
  unsigned int v5 = 2654435761LL * self->_isGFTDowngradeToOneToOneAvailable;
  if ((*(_WORD *)&v4 & 0x200) != 0)
  {
LABEL_15:
    unint64_t v6 = 2654435761LL * self->_guestModeEnabled;
    goto LABEL_25;
  }
}
}

  int v17 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  self->_protoShouldSuppressInCallUI));
  [v3 setObject:v17 forKey:@"protoShouldSuppressInCallUI"];

  if ((*(_BYTE *)&self->_has & 8) != 0)
  {
LABEL_16:
    char v12 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  self->_protoMomentsV2Available));
    [v3 setObject:v12 forKey:@"protoMomentsV2Available"];
  }

    unsigned int v19 = 0LL;
    goto LABEL_28;
  }

  unsigned int v19 = -[TUScreenSharingRequest initWithHandle:type:originType:UUID:participantIdentifier:]( objc_alloc(&OBJC_CLASS___TUScreenSharingRequest),  "initWithHandle:type:originType:UUID:participantIdentifier:",  v13,  v16,  v18,  v12,  v14);
LABEL_28:

  return v19;
}

  return (char)v15;
}
}

  [v4 fail];
LABEL_127:
}

  unint64_t v15 = sub_1001AB0AC(a1, v6, v4);
  if (v15 >= 2) {
    return v15 - 1;
  }
  else {
    return 0LL;
  }
}

  _Block_release(a5);
}

    uint64_t v14 = (v21 - 1) & v21;
  }

  char v22 = v20 + 3;
  if (v22 >= v37)
  {
LABEL_34:
    uint64_t result = swift_release_n(v8, 2LL);
    id v2 = v35;
    goto LABEL_36;
  }

  unint64_t v21 = *(void *)(v36 + 8 * v22);
  if (v21)
  {
    int v17 = v22;
    goto LABEL_22;
  }

  while (1)
  {
    int v17 = v22 + 1;
    if (__OFADD__(v22, 1LL)) {
      break;
    }
    if (v17 >= v37) {
      goto LABEL_34;
    }
    unint64_t v21 = *(void *)(v36 + 8 * v17);
    ++v22;
    if (v21) {
      goto LABEL_22;
    }
  }

    unsigned int v13 = (v20 - 1) & v20;
  }

  unint64_t v21 = v19 + 3;
  if (v21 < v38)
  {
    uint64_t v20 = v39[v21];
    if (!v20)
    {
      while (1)
      {
        char v16 = v21 + 1;
        if (__OFADD__(v21, 1LL)) {
          goto LABEL_41;
        }
        if (v16 >= v38) {
          goto LABEL_34;
        }
        uint64_t v20 = v39[v16];
        ++v21;
        if (v20) {
          goto LABEL_22;
        }
      }
    }

    char v16 = v21;
    goto LABEL_22;
  }

  int v24 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1LL << a3;
  uint64_t v25 = (void *)(*(void *)(v24 + 48) + 16 * a3);
  *uint64_t v25 = a1;
  v25[1] = a2;
  uint64_t v26 = *(void *)(v24 + 16);
  char v27 = __OFADD__(v26, 1LL);
  unsigned int v28 = v26 + 1;
  if (v27) {
    __break(1u);
  }
  else {
    *(void *)(v24 + 16) = v28;
  }
}

    if (a2 < 0) {
      uint64_t v39 = a2;
    }
    else {
      uint64_t v39 = a2 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a2);
    char v18 = _CocoaArrayWrapper.endIndex.getter(v39);
    if (v18)
    {
LABEL_6:
      unsigned int v19 = 4LL;
      while (1)
      {
        if ((a2 & 0xC000000000000001LL) != 0) {
          uint64_t v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v19 - 4, a2);
        }
        else {
          uint64_t v20 = *(id *)(a2 + 8 * v19);
        }
        unint64_t v21 = v20;
        char v22 = v19 - 3;
        if (__OFADD__(v19 - 4, 1LL))
        {
          __break(1u);
          goto LABEL_21;
        }

        ++v19;
        if (v22 == v18) {
          goto LABEL_13;
        }
      }

      swift_bridgeObjectRelease_n(a2, 2LL);
      sub_1001D8EA0(0LL, (unint64_t *)&qword_10044CAD0, &OBJC_CLASS___TURoute_ptr);
      id v23 = v41;
      unsigned int v33 = v41;
      uint64_t v34 = v21;
      unint64_t v35 = static NSObject.== infix(_:_:)(v33, v34);

      if ((v35 & 1) == 0) {
        goto LABEL_14;
      }
      goto LABEL_17;
    }

LABEL_24:
  unint64_t v6 = 0LL;
LABEL_25:
  unint64_t v7 = -[CSDMessagingConversationParticipantAssociation hash](self->_association, "hash");
  char v8 = self->_has;
  if ((*(_DWORD *)&v8 & 0x40000) != 0)
  {
    BOOL v9 = 2654435761LL * self->_isUPlusNDowngradeAvailable;
    if ((*(_BYTE *)&v8 & 2) != 0)
    {
LABEL_27:
      int v10 = 2654435761LL * self->_avMode;
      if ((*(_DWORD *)&v8 & 0x400000) != 0) {
        goto LABEL_28;
      }
LABEL_32:
      id v11 = 0LL;
      if ((*(_DWORD *)&v8 & 0x100000) != 0) {
        goto LABEL_29;
      }
      goto LABEL_33;
    }
  }

  else
  {
    BOOL v9 = 0LL;
    if ((*(_BYTE *)&v8 & 2) != 0) {
      goto LABEL_27;
    }
  }

  int v10 = 0LL;
  if ((*(_DWORD *)&v8 & 0x400000) == 0) {
    goto LABEL_32;
  }
LABEL_28:
  id v11 = 2654435761LL * self->_supportsLeaveContext;
  if ((*(_DWORD *)&v8 & 0x100000) != 0)
  {
LABEL_29:
    char v12 = 2654435761LL * self->_isUPlusOneScreenSharingAvailable;
    goto LABEL_34;
  }

  return v8;
}

  uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained pendingRemoteMembers]);
  [v29 minusSet:v2];

  unint64_t v30 = sub_1001704C4();
  char v31 = (os_log_s *)objc_claimAutoreleasedReturnValue(v30);
  if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
  {
    char v32 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained pendingRemoteMembers]);
    *(_DWORD *)buf = 138412290;
    unsigned int v43 = v32;
    _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEFAULT, "updated pendingRemoteMembers: %@", buf, 0xCu);
  }

  [WeakRetained setLetMeInRequestUINotificationBlock:0];
}
}

  self->_protoShouldSuppressInCallUI = *((_BYTE *)v5 + 39);
  *(_BYTE *)&self->_has |= 0x20u;
  if ((*((_BYTE *)v5 + 44) & 8) != 0)
  {
LABEL_18:
    self->_protoMomentsV2Available = *((_BYTE *)v5 + 37);
    *(_BYTE *)&self->_has |= 8u;
  }

        unsigned int v19 = (char *)v19 + 1;
      }

      while (v17 != v19);
      char v31 = [v15 countByEnumeratingWithState:&v64 objects:v69 count:16];
      int v17 = v31;
    }

    while (v31);
  }

  char v32 = (void *)objc_claimAutoreleasedReturnValue(-[CSDThumperAccount sortedArrayUsingComparator:](v59, "sortedArrayUsingComparator:", &stru_1003DB768));
  -[CSDTelephonyCallCapabilities setLocalThumperAccounts:](v57, "setLocalThumperAccounts:", v32);

  unsigned int v33 = sub_1001704C4();
  uint64_t v34 = (os_log_s *)objc_claimAutoreleasedReturnValue(v33);
  if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    unsigned int v71 = v59;
    _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_DEFAULT,  "Updated local Thumper accounts to %@",  buf,  0xCu);
  }

  unint64_t v35 = (void *)objc_claimAutoreleasedReturnValue(-[CSDThumperAccount sortedArrayUsingComparator:](v58, "sortedArrayUsingComparator:", &stru_1003DB788));
  -[CSDTelephonyCallCapabilities setSecondaryThumperAccounts:](v57, "setSecondaryThumperAccounts:", v35);

  char v36 = sub_1001704C4();
  char v37 = (os_log_s *)objc_claimAutoreleasedReturnValue(v36);
  unsigned int v38 = v56;
  if (os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    unsigned int v71 = v58;
    _os_log_impl( (void *)&_mh_execute_header,  v37,  OS_LOG_TYPE_DEFAULT,  "Updated secondary Thumper accounts to %@",  buf,  0xCu);
  }

  uint64_t v39 = kPSAssociatedAccountID;
  unint64_t v40 = (CSDThumperAccount *)objc_claimAutoreleasedReturnValue(-[CSDThumperAccount objectForKeyedSubscript:](v56, "objectForKeyedSubscript:", v39));

  char v42 = objc_opt_class(&OBJC_CLASS___NSString, v41);
  if ((objc_opt_isKindOfClass(v40, v42) & 1) != 0)
  {
    -[CSDTelephonyCallCapabilities setAssociatedThumperAccountID:](v57, "setAssociatedThumperAccountID:", v40);
    unsigned int v43 = sub_1001704C4();
    uint64_t v44 = (os_log_s *)objc_claimAutoreleasedReturnValue(v43);
    if (os_log_type_enabled(v44, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      unsigned int v71 = v40;
      _os_log_impl( (void *)&_mh_execute_header,  v44,  OS_LOG_TYPE_DEFAULT,  "Found associated Thumper account ID; updated associated Thumper account ID to %@",
        buf,
        0xCu);
    }

        id v11 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v18 << 6);
        int v10 = v18;
      }

      uint64_t v20 = v1[7];
      if (*(void *)(v20 + 24 * v15 + 16) == 1LL)
      {
        unint64_t v45 = *(_OWORD *)(v20 + 24 * v15);
        char v47 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) == 0)
        {
          sub_10025001C();
          unsigned int v13 = v47;
        }

        unint64_t v21 = v13[2];
        if (v21 >= v13[3] >> 1)
        {
          sub_10025001C();
          unsigned int v13 = v47;
        }

        v13[2] = v21 + 1;
        char v22 = &v13[3 * v21];
        *((_OWORD *)v22 + 2) = v45;
        v22[6] = 1LL;
      }
    }
  }

  sub_1001B0E6C( (uint64_t)&v2[OBJC_IVAR____TtC13callservicesd37CSDConversationSpatialPersonaResolver_participantState],  (uint64_t)v49);
  unsigned int v28 = swift_bridgeObjectRetain(*v7);
  sub_1001ADB14(v28);
  int v24 = v29;
  id v1 = v30;
  char v32 = v31;
  sub_1001AA9C8();
  if ((v32 & 1) != 0) {
    goto LABEL_42;
  }
LABEL_34:
  if (*(void *)&v2[OBJC_IVAR____TtC13callservicesd37CSDConversationSpatialPersonaResolver_joinedGenerationCounter] < v24)
  {
    unsigned int v33 = *(void *)&v2[OBJC_IVAR____TtC13callservicesd37CSDConversationSpatialPersonaResolver_localGenerationCounter];
    if (v24 >= v33
      && v24 == v33
      && (v2[OBJC_IVAR____TtC13callservicesd37CSDConversationSpatialPersonaResolver_localParticipantID + 8] & 1) != 0)
    {
      if (qword_1004466A0 == -1)
      {
LABEL_39:
        uint64_t v34 = sub_1001B0E98();
        unint64_t v35 = sub_1001B0D98(v34, (uint64_t)qword_1004473D8);
        Logger.logObject.getter(v35, v36, v37);
        unsigned int v38 = sub_1001B10E8();
        if (sub_1001B0EC8(v38))
        {
          uint64_t v39 = (_DWORD *)sub_1001B0E78(12LL);
          unint64_t v40 = sub_1001B0E78(32LL);
          char v47 = (void *)v40;
          *uint64_t v39 = 136315138;
          char v41 = sub_1001AC7D4((uint64_t)v1);
          char v46 = sub_1001D7CF0(v41, v42, (uint64_t *)&v47);
          sub_1001B0F8C((uint64_t)&v46, (uint64_t)&v47);
          sub_1001B0EC0();
          sub_1001B0EEC( (void *)&_mh_execute_header,  v43,  v44,  "localParticipantID not set, so resolving to the max remote-participant-state, state=%s");
          sub_1001B0F64(v40);
          sub_1001B0E60(v40);
          sub_1001B0E60((uint64_t)v39);
        }

        goto LABEL_42;
      }

  swift_bridgeObjectRelease(a2);
  swift_bridgeObjectRelease(a1);
  return _swiftEmptyArrayStorage;
}

            uint64_t v29 = v32;
            goto LABEL_25;
          }
        }

        uint64_t v29 = v31;
      }

    char v41 = (v48 - 1) & v48;
    char v118 = v49;
    char v46 = __clz(__rbit64(v48)) + (v49 << 6);
LABEL_25:
    char v51 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v46);
    unsigned int v53 = *v51;
    char v52 = v51[1];
    unint64_t v54 = *(void *)(a1 + 16);
    swift_bridgeObjectRetain(v52);
    if (v54 && (char v55 = sub_1001D7094(v53, v52), (v56 & 1) != 0))
    {
      sub_1001B03FC(*(void *)(a1 + 56) + 32 * v55, (uint64_t)&v121);
      unsigned int v57 = swift_dynamicCast(v43, &v121, v116, v13, 6LL);
      sub_1001A9670(v43, v57 ^ 1u, 1LL, v13);
      (*(void (**)(char *, uint64_t, uint64_t))(v44 + 32))(v115, v43, v13);
      unint64_t v58 = [a2 timebase];
      char v59 = v111;
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v58);

      char v60 = Date.timeIntervalSince(_:)(v59);
      v114(v59, v13);
      unsigned int v61 = v60 * 1000.0;
      if ((~COERCE__INT64(v60 * 1000.0) & 0x7FF0000000000000LL) == 0) {
        goto LABEL_55;
      }
      if (v61 <= -9.22337204e18) {
        goto LABEL_56;
      }
      if (v61 >= 9.22337204e18) {
        goto LABEL_57;
      }
      uint64_t v62 = a1;
      unint64_t v63 = v13;
      char v122 = &type metadata for Int;
      *(void *)&unint64_t v121 = (uint64_t)v61;
      sub_1001B03EC(&v121, v120);
      char v64 = v123;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v123);
      char v119 = v64;
      unsigned int v66 = sub_1001D7094(v53, v52);
      unint64_t v68 = v64[2];
      char v69 = (v67 & 1) == 0;
      char v70 = v68 + v69;
      if (__OFADD__(v68, v69)) {
        goto LABEL_58;
      }
      unsigned int v71 = v66;
      uint64_t v72 = v67;
      sub_1001AFF14(&qword_100447BC0);
      unint64_t v73 = _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v70);
      unsigned int v13 = v63;
      a1 = v62;
      uint64_t v44 = v113;
      if (v73)
      {
        char v74 = sub_1001D7094(v53, v52);
        if ((v72 & 1) != (v75 & 1)) {
          goto LABEL_65;
        }
        unsigned int v71 = v74;
      }

      unsigned int v76 = v119;
      if ((v72 & 1) != 0)
      {
        unint64_t v77 = (void *)(v119[7] + 32 * v71);
        sub_1001B0438(v77);
        sub_1001B03EC(v120, v77);
      }

      else
      {
        v119[(v71 >> 6) + 8] |= 1LL << v71;
        char v78 = (uint64_t *)(v76[6] + 16 * v71);
        *char v78 = v53;
        v78[1] = v52;
        sub_1001B03EC(v120, (_OWORD *)(v76[7] + 32 * v71));
        char v79 = v76[2];
        unsigned int v80 = __OFADD__(v79, 1LL);
        uint64_t v81 = v79 + 1;
        if (v80) {
          goto LABEL_59;
        }
        v76[2] = v81;
        swift_bridgeObjectRetain(v52);
      }

      char v123 = v76;
      swift_bridgeObjectRelease(v52);
      swift_bridgeObjectRelease(0x8000000000000000LL);
      v114(v115, v13);
      a2 = v110;
      unsigned int v43 = (uint64_t)v112;
      unsigned int v38 = v109;
      char v42 = v118;
    }

    else
    {
      sub_1001A9670(v43, 1LL, 1LL, v13);
LABEL_38:
      swift_bridgeObjectRelease(v52);
      sub_1001C6CE4(v43, &qword_100447EA0);
      char v42 = v118;
    }
  }

  unint64_t v50 = v42 + 6;
  if (v42 + 6 < v117)
  {
    unsigned int v48 = *(void *)(v38 + 8 * v50);
    if (!v48)
    {
      while (1)
      {
        uint64_t v49 = v50 + 1;
        if (__OFADD__(v50, 1LL)) {
          goto LABEL_61;
        }
        if (v49 >= v117) {
          goto LABEL_42;
        }
        unsigned int v48 = *(void *)(v38 + 8 * v49);
        ++v50;
        if (v48) {
          goto LABEL_24;
        }
      }
    }

    uint64_t v49 = v42 + 6;
    goto LABEL_24;
  }

    unint64_t v7 = (v15 - 1) & v15;
    unsigned int v13 = __clz(__rbit64(v15)) + (v16 << 6);
    id v11 = v16;
  }

  int v17 = v11 + 5;
  if (v11 + 5 >= v8)
  {
LABEL_36:
    swift_release(v3);
    sub_1001B4B8C(a1);
    return (Swift::Int)v3;
  }

  unint64_t v15 = *(void *)(v4 + 8 * v17);
  if (v15)
  {
    char v16 = v11 + 5;
    goto LABEL_24;
  }

  while (1)
  {
    char v16 = v17 + 1;
    if (__OFADD__(v17, 1LL)) {
      break;
    }
    if (v16 >= v8) {
      goto LABEL_36;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v16);
    ++v17;
    if (v15) {
      goto LABEL_24;
    }
  }

    uint64_t v39 = (v12 - 1) & v12;
    unint64_t v40 = v13;
  }

  uint64_t v14 = v11 + 4;
  if (v14 >= v9) {
    return;
  }
  char v12 = *(void *)(v5 + 8 * v14);
  if (v12)
  {
    unsigned int v13 = v14;
    goto LABEL_24;
  }

  while (1)
  {
    unsigned int v13 = v14 + 1;
    if (__OFADD__(v14, 1LL)) {
      break;
    }
    if (v13 >= v9) {
      return;
    }
    char v12 = *(void *)(v5 + 8 * v13);
    ++v14;
    if (v12) {
      goto LABEL_24;
    }
  }

          swift_bridgeObjectRelease(a3);
          swift_release(v6);
          return 0LL;
        }
      }
    }

      int v10 = (v16 - 1) & v16;
      uint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }

    char v18 = *(_DWORD *)(*(void *)(v4 + 48) + 4 * v14);
    unsigned int v19 = *(void *)(*(void *)(v4 + 56) + 8 * v14);
    uint64_t result = static Hasher._hash(seed:bytes:count:)(*(void *)(v9 + 40), v18, 4LL);
    uint64_t v20 = -1LL << *(_BYTE *)(v9 + 32);
    unint64_t v21 = result & ~v20;
    char v22 = v21 >> 6;
    if (((-1LL << v21) & ~*(void *)(v12 + 8 * (v21 >> 6))) == 0) {
      break;
    }
    id v23 = __clz(__rbit64((-1LL << v21) & ~*(void *)(v12 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0LL;
LABEL_34:
    *(void *)(v12 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v23;
    *(_DWORD *)(*(void *)(v9 + 48) + 4 * v23) = v18;
    *(void *)(*(void *)(v9 + 56) + 8 * v23) = v19;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1LL)) {
      goto LABEL_39;
    }
    if (!v5) {
      return v9;
    }
  }

  int v24 = 0;
  uint64_t v25 = (unint64_t)(63 - v20) >> 6;
  while (++v22 != v25 || (v24 & 1) == 0)
  {
    uint64_t v26 = v22 == v25;
    if (v22 == v25) {
      char v22 = 0LL;
    }
    v24 |= v26;
    char v27 = *(void *)(v12 + 8 * v22);
    if (v27 != -1)
    {
      id v23 = __clz(__rbit64(~v27)) + (v22 << 6);
      goto LABEL_34;
    }
  }

  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

  char v27 = *v33;
  *(void *)(*v33 + 8 * (a2 >> 6) + 56) |= 1LL << a2;
  unsigned int v28 = *(void *)(v27 + 48) + 56 * a2;
  uint64_t v29 = *(_OWORD *)(v5 + 16);
  *(_OWORD *)unsigned int v28 = *(_OWORD *)v5;
  *(_OWORD *)(v28 + 16) = v29;
  *(_OWORD *)(v28 + 32) = *(_OWORD *)(v5 + 32);
  *(void *)(v28 + 4_Block_object_dispose(va, 8) = *(void *)(v5 + 48);
  unint64_t v30 = *(void *)(v27 + 16);
  char v31 = __OFADD__(v30, 1LL);
  char v32 = v30 + 1;
  if (!v31)
  {
    *(void *)(v27 + 16) = v32;
    return result;
  }

  __break(1u);
LABEL_27:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for NearbyDeviceRoute);
  __break(1u);
  return result;
}

        __break(1u);
        goto LABEL_25;
      }

              swift_release(v4);
              return;
            }
          }
        }
      }
    }

      uint64_t v20 = 0;
      return v20 & 1;
    }
  }

LABEL_28:
  self->_isGondolaCallingAvailable = *((_BYTE *)v5 + 90);
  *(_DWORD *)&self->_has |= 0x800u;
  BOOL v9 = *((_DWORD *)v5 + 26);
  if ((v9 & 0x4000) == 0)
  {
LABEL_17:
    if ((v9 & 0x1000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_30;
  }
}

    unint64_t v35 = 0;
    goto LABEL_29;
  }

  unint64_t v35 = 1;
LABEL_29:

  return v35;
}

  return v19;
}

        __break(1u);
        goto LABEL_29;
      }
    }

    __break(1u);
    goto LABEL_28;
  }

  unint64_t v21 = v11[3];
  uint64_t result = swift_release(v11);
  char v22 = (v21 >> 1) - v12;
  id v23 = __OFADD__(v7, v22);
  v7 += v22;
  if (!v23) {
    goto LABEL_24;
  }
LABEL_33:
  __break(1u);
  return result;
}

    char v8 = (v13 - 1) & v13;
    uint64_t v39 = v14;
  }

  char v18 = v17 + 4;
  if (v18 >= v38) {
    return;
  }
  unsigned int v13 = *(void *)(v37 + 8 * v18);
  if (v13)
  {
    uint64_t v14 = v18;
    goto LABEL_28;
  }

  while (!__OFADD__(v18, 1LL))
  {
    sub_1001E9214();
    if (v15 == v16) {
      return;
    }
    sub_1001E9208();
    char v18 = v19 + 1;
    if (v13) {
      goto LABEL_28;
    }
  }

    sub_1001E919C();
    unint64_t v15 = v31;
    goto LABEL_29;
  }

  __break(1u);
LABEL_51:
  __break(1u);
  return result;
}

  char v59 = HIBYTE(v43) & 0xF;
  if ((v43 & 0x2000000000000000LL) == 0) {
    char v59 = v44 & 0xFFFFFFFFFFFFLL;
  }
  if (v59) {
    goto LABEL_51;
  }
LABEL_31:
  if (v29)
  {
    char v60 = v43;
    unsigned int v61 = v29;
    uint64_t v62 = [v61 value];
    unint64_t v63 = v62;
    if (!v62)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0LL);
      char v65 = v64;
      unint64_t v63 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v65);
    }

    unsigned int v66 = static String._unconditionallyBridgeFromObjectiveC(_:)(v62);
    unint64_t v68 = v67;
    if ([v61 type] == (id)2)
    {
      v367 = v29;
      swift_bridgeObjectRelease(v68);
      char v69 = *(void *)(a1 + 24);
      char v70 = *(void *)(a1 + 32);
      sub_1001B204C((void *)a1, v69);
      unsigned int v71 = (*(uint64_t (**)(uint64_t, uint64_t))(v70 + 56))(v69, v70);
      if (v72)
      {
        unint64_t v73 = v72;
      }

      else
      {
        char v75 = (id)TUHomeCountryCode(v71);
        if (v75)
        {
          unsigned int v76 = v75;
          static String._unconditionallyBridgeFromObjectiveC(_:)(v75);
          unint64_t v73 = v77;
        }

        else
        {
          unint64_t v73 = 0xE000000000000000LL;
        }
      }

      char v78 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v73);
      char v79 = (void *)CFPhoneNumberCreate(kCFAllocatorDefault, v63, v78);

      if (v79)
      {
        uint64_t String = CFPhoneNumberCreateString(kCFAllocatorDefault, v79, 5LL);
        if (String)
        {
          uint64_t v81 = (void *)String;
          static String._unconditionallyBridgeFromObjectiveC(_:)(String);
          unsigned int v43 = v82;

          swift_bridgeObjectRelease(v60);
        }

        else
        {

          swift_bridgeObjectRelease(v60);
          unsigned int v43 = 0LL;
        }

        uint64_t v29 = v367;
        goto LABEL_51;
      }

      uint64_t v29 = v367;
      goto LABEL_48;
    }

    char v74 = String.count.getter(v66, v68);
    if (v74 < 1)
    {
      swift_bridgeObjectRelease(v68);
LABEL_48:
      unsigned int v43 = v60;
      goto LABEL_51;
    }

    swift_bridgeObjectRelease(v60);
    unsigned int v43 = v68;
  }

  __break(1u);
}

  __break(1u);
}

  swift_release(v8);
  char v8 = _swiftEmptyArrayStorage;
  if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000LL) != 0
    || ((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000LL) != 0)
  {
LABEL_32:
    sub_1001E7D20((uint64_t)v8);
    uint64_t v25 = v24;
    swift_release(v8);
    return (void *)v25;
  }

  return v8;
}

    v36[0] = a1;
    v36[1] = v6;
    v36[2] = v35[0];
    v36[3] = v4;
    v36[4] = v9;
    id v23 = (unint64_t)(63 - v20) >> 6;
    int v24 = 8 * v23;
    isStackAllocationSafe = swift_bridgeObjectRetain(a1);
    if (v23 < 0x81
      || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(v24, 8LL), (_DWORD)isStackAllocationSafe))
    {
      __chkstk_darwin(isStackAllocationSafe);
      char v27 = (char *)v35 - v26;
      memcpy((char *)v35 - v26, (const void *)(v2 + 56), v24);
      sub_100267820((uint64_t)v27, v23, v2, v21, v36);
      uint64_t v29 = v28;
      swift_release(v2);
      sub_1001B4B8C(v36[0]);
      return (void *)v29;
    }

    else
    {
      unint64_t v30 = (void *)swift_slowAlloc(v24, -1LL);
      memcpy(v30, (const void *)(v2 + 56), v24);
      sub_100267820((uint64_t)v30, v23, v2, v21, v36);
      char v32 = v31;
      swift_release(v2);
      sub_1001B4B8C(v36[0]);
      swift_slowDealloc(v30, -1LL, -1LL);
      return (void *)v32;
    }
  }

  else
  {
    swift_release(a2);
    return &_swiftEmptySetSingleton;
  }

        sub_1002AB730();
        unsigned int v5 = v20 & v19;
        char v8 = v22 + (v21 << 6);
        unint64_t v6 = v21;
      }

      id v23 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v8);
      uint64_t v25 = *v23;
      int v24 = v23[1];
      uint64_t v26 = *(void **)(*(void *)(a1 + 56) + 8 * v8);
      sub_1001B922C();
      char v27 = v26;
      unsigned int v28 = sub_1001D7094(v25, v24);
      uint64_t v29 = v28;
      if ((v30 & 1) == 0) {
        break;
      }
      char v31 = (uint64_t *)(v2[6] + 16 * v28);
      swift_bridgeObjectRelease(v31[1]);
      void *v31 = v25;
      v31[1] = v24;
      char v32 = v2[7];

      *(void *)(v32 + 8 * v29) = v27;
    }

    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8LL) + 64) |= 1LL << v28;
    unsigned int v33 = (uint64_t *)(v2[6] + 16 * v28);
    *unsigned int v33 = v25;
    v33[1] = v24;
    *(void *)(v2[7] + 8 * v2_Block_object_dispose(va, 8) = v27;
    uint64_t v34 = v2[2];
    id v11 = __OFADD__(v34, 1LL);
    unint64_t v35 = v34 + 1;
    if (v11) {
      goto LABEL_36;
    }
    v2[2] = v35;
  }

  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
}

LABEL_29:
  self->_isPersonaAvailable = *((_BYTE *)v5 + 93);
  *(_DWORD *)&self->_has |= 0x4000u;
  BOOL v9 = *((_DWORD *)v5 + 26);
  if ((v9 & 0x1000) == 0)
  {
LABEL_18:
    if ((v9 & 0x10) == 0) {
      goto LABEL_19;
    }
    goto LABEL_31;
  }
}

LABEL_30:
}

  uint64_t v34 = -[NSString copyWithZone:](self->_contactIdentifier, "copyWithZone:", a3);
  unint64_t v35 = (void *)v6[4];
  v6[4] = v34;

  char v36 = -[CSDMessagingCallCapabilitiesState copyWithZone:](self->_protoCallCapabilitiesState, "copyWithZone:", a3);
  char v37 = (void *)v6[26];
  v6[26] = v36;

  unsigned int v38 = self->_has;
  if ((*(_WORD *)&v38 & 0x100) != 0)
  {
    *((_DWORD *)v6 + 73) = self->_protoSoundRegion;
    *((_DWORD *)v6 + 100) |= 0x100u;
    unsigned int v38 = self->_has;
  }

  if ((*(_DWORD *)&v38 & 0x10000) != 0)
  {
    *((_BYTE *)v6 + 386) = self->_protoEmergency;
    *((_DWORD *)v6 + 100) |= 0x10000u;
  }

  v162 = 0u;
  v163 = 0u;
  v160 = 0u;
  v161 = 0u;
  uint64_t v39 = self->_otherUniqueProxyIdentifiers;
  unint64_t v40 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v39,  "countByEnumeratingWithState:objects:count:",  &v160,  v176,  16LL);
  if (v40)
  {
    char v41 = v40;
    char v42 = *(void *)v161;
    do
    {
      unsigned int v43 = 0LL;
      do
      {
        if (*(void *)v161 != v42) {
          objc_enumerationMutation(v39);
        }
        uint64_t v44 = [*(id *)(*((void *)&v160 + 1) + 8 * (void)v43) copyWithZone:a3];
        [v6 addOtherUniqueProxyIdentifiers:v44];

        unsigned int v43 = (char *)v43 + 1;
      }

      while (v41 != v43);
      char v41 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v39,  "countByEnumeratingWithState:objects:count:",  &v160,  v176,  16LL);
    }

    while (v41);
  }

  unint64_t v45 = -[CSDMessagingCallModel copyWithZone:](self->_protoCallModel, "copyWithZone:", a3);
  char v46 = (void *)v6[27];
  v6[27] = v45;

  char v47 = -[CSDMessagingHandle copyWithZone:](self->_handle, "copyWithZone:", a3);
  unsigned int v48 = (void *)v6[13];
  v6[13] = v47;

  if ((*((_BYTE *)&self->_has + 2) & 0x20) != 0)
  {
    *((_BYTE *)v6 + 391) = self->_protoSOS;
    *((_DWORD *)v6 + 100) |= 0x200000u;
  }

  v158 = 0u;
  v159 = 0u;
  v156 = 0u;
  v157 = 0u;
  uint64_t v49 = self->_providers;
  unint64_t v50 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v49,  "countByEnumeratingWithState:objects:count:",  &v156,  v175,  16LL);
  if (v50)
  {
    char v51 = v50;
    char v52 = *(void *)v157;
    do
    {
      unsigned int v53 = 0LL;
      do
      {
        if (*(void *)v157 != v52) {
          objc_enumerationMutation(v49);
        }
        unint64_t v54 = [*(id *)(*((void *)&v156 + 1) + 8 * (void)v53) copyWithZone:a3];
        [v6 addProviders:v54];

        unsigned int v53 = (char *)v53 + 1;
      }

      while (v51 != v53);
      char v51 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v49,  "countByEnumeratingWithState:objects:count:",  &v156,  v175,  16LL);
    }

    while (v51);
  }

  char v55 = -[CSDMessagingCallDisplayContext copyWithZone:](self->_protoDisplayContext, "copyWithZone:", a3);
  char v56 = (void *)v6[32];
  v6[32] = v55;

  unsigned int v57 = -[CSDMessagingAVConferenceInviteData copyWithZone:](self->_inviteData, "copyWithZone:", a3);
  unint64_t v58 = (void *)v6[18];
  v6[18] = v57;

  char v59 = -[CSDMessagingCallProvider copyWithZone:](self->_protoProvider, "copyWithZone:", a3);
  char v60 = (void *)v6[35];
  v6[35] = v59;

  unsigned int v61 = self->_has;
  if ((*(_DWORD *)&v61 & 0x8000000) != 0)
  {
    *((_BYTE *)v6 + 397) = self->_protoVideo;
    *((_DWORD *)v6 + 100) |= 0x8000000u;
    unsigned int v61 = self->_has;
    if ((*(_DWORD *)&v61 & 0x4000000) == 0)
    {
LABEL_51:
      if ((*(_DWORD *)&v61 & 0x100000) == 0) {
        goto LABEL_52;
      }
      goto LABEL_129;
    }
  }

  else if ((*(_DWORD *)&v61 & 0x4000000) == 0)
  {
    goto LABEL_51;
  }

  *((_BYTE *)v6 + 396) = self->_protoUplinkMuted;
  *((_DWORD *)v6 + 100) |= 0x4000000u;
  unsigned int v61 = self->_has;
  if ((*(_DWORD *)&v61 & 0x100000) == 0)
  {
LABEL_52:
    if ((*(_WORD *)&v61 & 0x1000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_53;
  }
}

          unint64_t v35 = 1LL;
LABEL_30:

          goto LABEL_31;
        }

        int v24 = (void *)objc_claimAutoreleasedReturnValue(-[CSDRelayMessagingController callCenter](self, "callCenter"));
        uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue([v24 callWithStatus:3]);

        if (v25)
        {
          uint64_t v26 = sub_1001704C4();
          char v27 = (os_log_s *)objc_claimAutoreleasedReturnValue(v26);
          if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
          {
            unsigned int v28 = (void *)objc_claimAutoreleasedReturnValue(-[CSDRelayMessagingController callCenter](self, "callCenter"));
            uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue([v28 callWithStatus:3]);
            char v55 = 138412290;
            char v56 = v29;
            _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_DEFAULT,  "[WARN] Setting should ignore session to YES because a call exists with sending status: %@",  (uint8_t *)&v55,  0xCu);
          }

          goto LABEL_29;
        }

        if (-[CSDRelayMessagingController shouldScreenTimeRestrictMessage:]( self,  "shouldScreenTimeRestrictMessage:",  v8))
        {
          char v42 = sub_1001704C4();
          char v27 = (os_log_s *)objc_claimAutoreleasedReturnValue(v42);
          if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
          {
            unsigned int v43 = (void *)objc_claimAutoreleasedReturnValue([v8 destinationID]);
            uint64_t v44 = [v8 isEmergency];
            char v55 = 138412802;
            char v56 = v43;
            unsigned int v57 = 2112;
            unint64_t v58 = v16;
            char v59 = 1024;
            LODWORD(v60) = v44;
            unint64_t v45 = "[WARN] Setting should ignore session to YES because screen time filtered message for destinationID %@ "
                  "and provider %@ with emergency (%d)";
            char v46 = v27;
            char v47 = 28;
LABEL_28:
            _os_log_impl((void *)&_mh_execute_header, v46, OS_LOG_TYPE_DEFAULT, v45, (uint8_t *)&v55, v47);

            goto LABEL_29;
          }

          goto LABEL_29;
        }

        if ((+[TUCallCapabilities supportsPrimaryCalling]( &OBJC_CLASS___TUCallCapabilities,  "supportsPrimaryCalling") & 1) == 0)
        {
          uint64_t v49 = (void *)objc_claimAutoreleasedReturnValue(-[CSDRelayMessagingController callCenter](self, "callCenter"));
          unint64_t v50 = objc_msgSend( v49,  "shouldPreferRelayOverDirectSecondaryCallingForProvider:isVideo:",  v16,  objc_msgSend(v8, "isVideo"));

          if ((v50 & 1) == 0)
          {
            if ([v16 isTelephonyProvider]
              && +[TUCallCapabilities isDirectTelephonyCallingCurrentlyAvailable]( &OBJC_CLASS___TUCallCapabilities,  "isDirectTelephonyCallingCurrentlyAvailable"))
            {
              char v51 = sub_1001704C4();
              char v27 = (os_log_s *)objc_claimAutoreleasedReturnValue(v51);
              if (!os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT)) {
                goto LABEL_29;
              }
              LOWORD(v55) = 0;
              char v52 = "[WARN] Setting should ignore session to YES because relay is not preferred, message provider is Tele"
                    "phony, and isDirectTelephonyCallingCurrentlyAvailable is YES";
LABEL_48:
              _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, v52, (uint8_t *)&v55, 2u);
              goto LABEL_29;
            }

            if ([v16 isFaceTimeProvider]
              && ([v8 isVideo] & 1) == 0
              && +[TUCallCapabilities isDirectFaceTimeAudioCallingCurrentlyAvailable]( &OBJC_CLASS___TUCallCapabilities,  "isDirectFaceTimeAudioCallingCurrentlyAvailable"))
            {
              unsigned int v53 = sub_1001704C4();
              char v27 = (os_log_s *)objc_claimAutoreleasedReturnValue(v53);
              if (!os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT)) {
                goto LABEL_29;
              }
              LOWORD(v55) = 0;
              char v52 = "[WARN] Setting should ignore session to YES because relay is not preferred, message provider is Face"
                    "Time Audio, and isDirectFaceTimeAudioCallingCurrentlyAvailable is YES";
              goto LABEL_48;
            }

            if ([v16 isFaceTimeProvider]
              && [v8 isVideo]
              && +[TUCallCapabilities isDirectFaceTimeVideoCallingCurrentlyAvailable]( &OBJC_CLASS___TUCallCapabilities,  "isDirectFaceTimeVideoCallingCurrentlyAvailable"))
            {
              unint64_t v54 = sub_1001704C4();
              char v27 = (os_log_s *)objc_claimAutoreleasedReturnValue(v54);
              if (!os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT)) {
                goto LABEL_29;
              }
              LOWORD(v55) = 0;
              char v52 = "[WARN] Setting should ignore session to YES because relay is not preferred, message provider is Face"
                    "Time Video, and isDirectFaceTimeVideoCallingCurrentlyAvailable is YES";
              goto LABEL_48;
            }
          }
        }

        unint64_t v35 = 0LL;
        goto LABEL_30;
      }

      unint64_t v35 = 0LL;
    }
  }

      char v12 = v83;
      id v11 = v84;
      char v46 = v81;
      unsigned int v13 = v82;
      uint64_t v44 = v92;
      char v47 = v85;
    }

    unsigned int v76 = (void *)objc_claimAutoreleasedReturnValue(-[CSDAbstractIDSProviderDelegate provider](v44, "provider"));
    unint64_t v77 = (void *)objc_claimAutoreleasedReturnValue([v46 UUID]);
    v93[0] = _NSConcreteStackBlock;
    v93[1] = 3221225472LL;
    v93[2] = sub_100087B60;
    v93[3] = &unk_1003D7D50;
    v93[4] = v44;
    unint64_t v94 = v46;
    char v22 = v90;
    char v95 = v90;
    char v78 = v46;
    [v76 reportNewIncomingCallWithUUID:v77 update:v47 completion:v93];

    unint64_t v21 = v87;
    uint64_t v14 = v88;
    uint64_t v26 = v86;
  }

LABEL_35:
}

      BOOL v9 = v34;
      int v10 = v36;
    }
  }

  else if (v15)
  {
    *(_WORD *)buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_DEFAULT,  "[WARN] Message did not contain a valid activitySession.",  buf,  2u);
  }
}

    char v8 = 0;
  }

    goto LABEL_30;
  }

  if (v15)
  {
    unint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(-[CSDRelayIDSSessionMessenger deviceWithActiveSession](self, "deviceWithActiveSession"));
    char v22 = [v15 isEqual:v7];

    if ((v22 & 1) != 0) {
      goto LABEL_8;
    }
  }

  else
  {
  }

  char v31 = sub_1001704C4();
  char v32 = (os_log_s *)objc_claimAutoreleasedReturnValue(v31);
  if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_DEFAULT,  "... but it is from a different device than the one that we have an active session with",  buf,  2u);
  }

  unsigned int v33 = [v40 shouldDeclineSecondSessionInviteWithMessage:v43];
  uint64_t v34 = sub_1001704C4();
  unint64_t v30 = (os_log_s *)objc_claimAutoreleasedReturnValue(v34);
  unint64_t v35 = os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT);
  if (!v33)
  {
    if (v35)
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_DEFAULT,  "... and we were NOT told to decline the invite, so just ignoring it",  buf,  2u);
    }

    goto LABEL_29;
  }

  if (v35)
  {
    *(_WORD *)buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_DEFAULT,  "... and we were told to decline the invite",  buf,  2u);
  }

  char v36 = -[CSDMessagingRelayMessage initWithType:]( objc_alloc(&OBJC_CLASS___CSDMessagingRelayMessage),  "initWithType:",  18LL);
  -[CSDMessagingRelayMessage setDisconnectedReason:](v36, "setDisconnectedReason:", 10LL);
  char v37 = (void *)objc_claimAutoreleasedReturnValue(-[CSDMessagingRelayMessage data](v36, "data"));
  [v42 declineInvitationWithData:v37];

LABEL_30:
}

        char v12 = (char *)v12 + 1;
      }

      while (v10 != v12);
      char v37 = [v6 countByEnumeratingWithState:&v42 objects:v46 count:16];
      int v10 = v37;
    }

    while (v37);
  }

  unsigned int v38 = (void *)objc_claimAutoreleasedReturnValue(+[CSDReportingController sharedInstance](&OBJC_CLASS___CSDReportingController, "sharedInstance"));
  [v38 reportTransactionGroupCompleted:*(void *)(a1 + 40)];
}

              swift_bridgeObjectRetain(a1);
              swift_release(v7);
              return (void *)v10;
            }
          }
        }
      }
    }

          __break(1u);
          goto LABEL_30;
        }

          return swift_release(v35);
        }
      }
    }

  id v3 = v23;
  if ((v14 & 1) != 0) {
    goto LABEL_30;
  }
LABEL_37:
  unint64_t v35 = sub_1001B4B94(0LL, (unint64_t *)&unk_100447E20, &OBJC_CLASS___TUConversationMember_ptr);
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v35);
  __break(1u);
  return result;
}

  char v46 = *(void (**)(void *__return_ptr, uint64_t))(v9 + 72);
  char v47 = swift_retain(v10);
  v46(v146, v47);
  swift_retain(v9);
  unsigned int v48 = sub_10020DCC0((uint64_t)__src, (uint64_t)v10, (uint64_t)v146, v9);
  swift_release(v9);
  sub_10020E840((uint64_t)v146);
  uint64_t v49 = swift_release(v10);
  if (*(_BYTE *)(a1 + 49) != 1)
  {
    if ((v48 & 1) != 0
      && ((*(void (**)(void *__return_ptr, uint64_t))(v9 + 72))(v151, v49),
          sub_10020E9EC((uint64_t)v151, (uint64_t)v152, (uint64_t *)&unk_10044B7C0),
          sub_1001E42E0((uint64_t)v152) != 1)
      && (memcpy(v153, v152, 0x99uLL),
          sub_10020E9EC((uint64_t)&v153[9], (uint64_t)v148, &qword_100449410),
          sub_10020EA18(v148),
          sub_10020E840((uint64_t)v151),
          sub_10020E9EC((uint64_t)v148, (uint64_t)v150, &qword_100449410),
          v150[0]))
    {
      char v52 = v150[1];
      ObjectType = swift_getObjectType(v150[0]);
      sub_1002954D8(0, ObjectType, v52);
      sub_10020E840((uint64_t)v143);
      sub_10020EA40(v148);
    }

    else
    {
      sub_10020E840((uint64_t)v143);
    }

    unint64_t v54 = v10;
    goto LABEL_75;
  }

  if ((v48 & 1) != 0)
  {
    (*(void (**)(id *__return_ptr, uint64_t))(v9 + 72))(v147, v49);
    sub_10020E9EC((uint64_t)v147, (uint64_t)v152, (uint64_t *)&unk_10044B7C0);
    if (sub_1001E42E0((uint64_t)v152) != 1)
    {
      memcpy(v153, v152, 0x99uLL);
      sub_10020E9EC((uint64_t)&v153[9], (uint64_t)v158, &qword_100449410);
      sub_10020EA18(v158);
      sub_10020E840((uint64_t)v147);
      sub_10020E9EC((uint64_t)v158, (uint64_t)v162, &qword_100449410);
      if (v162[0])
      {
        unint64_t v50 = v162[1];
        char v51 = swift_getObjectType(v162[0]);
        sub_1002954D8(1, v51, (uint64_t)v50);
        sub_10020EA40(v158);
      }
    }

    goto LABEL_41;
  }

  sub_10020E9EC(a2, (uint64_t)v153, (uint64_t *)&unk_10044B7C0);
  if (sub_1001E42E0((uint64_t)v153) == 1)
  {
LABEL_41:
    sub_10020DEEC(v9);
    goto LABEL_42;
  }

  char v105 = (void *)v153[1];
  v162[0] = (id)v153[1];
  v147[0] = *(id *)(a1 + 8);
  unsigned int v106 = v147[0];
  unint64_t v107 = static String._unconditionallyBridgeFromObjectiveC(_:)(v153[1]);
  char v109 = v108;
  unsigned int v110 = static String._unconditionallyBridgeFromObjectiveC(_:)(v106);
  if (v107 == v110 && v109 == v111)
  {
    uint64_t v116 = v105;
    sub_1001DE9FC(v162);
    sub_1001DE9FC(v147);
    swift_bridgeObjectRelease_n(v109, 2LL);
    sub_10020EAA0(v147);
    sub_10020EAA0(v162);
    sub_10020EAA0(v162);
  }

  else
  {
    char v113 = v111;
    char v114 = _stringCompareWithSmolCheck(_:_:expecting:)(v107, v109, v110, v111, 0LL);
    unsigned int v115 = v105;
    sub_1001DE9FC(v162);
    sub_1001DE9FC(v147);
    swift_bridgeObjectRelease(v109);
    swift_bridgeObjectRelease(v113);
    sub_10020EAA0(v147);
    sub_10020EAA0(v162);
    sub_10020EAA0(v162);
    if ((v114 & 1) == 0) {
      goto LABEL_41;
    }
  }

  sub_10020E9EC((uint64_t)v164, (uint64_t)v152, (uint64_t *)&unk_10044B7C0);
  unint64_t v117 = *(void *)(a1 + 16);
  if (v152[2])
  {
    if (!v117) {
      goto LABEL_41;
    }
    char v118 = static String._unconditionallyBridgeFromObjectiveC(_:)(v152[2]);
    unsigned int v120 = v119;
    unint64_t v121 = static String._unconditionallyBridgeFromObjectiveC(_:)(v117);
    if (v118 == v121 && v120 == v122)
    {
      swift_bridgeObjectRelease_n(v120, 2LL);
    }

    else
    {
      unsigned int v124 = v122;
      uint64_t v125 = _stringCompareWithSmolCheck(_:_:expecting:)(v118, v120, v121, v122, 0LL);
      swift_bridgeObjectRelease(v120);
      swift_bridgeObjectRelease(v124);
      if ((v125 & 1) == 0) {
        goto LABEL_41;
      }
    }
  }

  else if (v117)
  {
    goto LABEL_41;
  }

  __break(1u);
  return result;
}

  __break(1u);
}

              swift_release(v4);
              return;
            }
          }
        }
      }
    }

    char v12 = (v20 - 1) & v20;
    unsigned int v13 = __clz(__rbit64(v20)) + (v14 << 6);
    goto LABEL_30;
  }

  __break(1u);
}

  __break(1u);
LABEL_30:
  __break(1u);
}

  __break(1u);
LABEL_30:
  __break(1u);
}

LABEL_30:
  self->_isLightweight = *((_BYTE *)v5 + 91);
  *(_DWORD *)&self->_has |= 0x1000u;
  BOOL v9 = *((_DWORD *)v5 + 26);
  if ((v9 & 0x10) == 0)
  {
LABEL_19:
    if ((v9 & 4) == 0) {
      goto LABEL_20;
    }
    goto LABEL_32;
  }

  LODWORD(v16) = v13 ^ 1;

LABEL_35:
  char v42 = sub_1001704C4();
  unsigned int v43 = (os_log_s *)objc_claimAutoreleasedReturnValue(v42);
  if (os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v44 = @"NO";
    if ((_DWORD)v16) {
      unint64_t v45 = @"YES";
    }
    else {
      unint64_t v45 = @"NO";
    }
    if (v11) {
      uint64_t v44 = @"YES";
    }
    *(_DWORD *)buf = 138412546;
    char v69 = v45;
    char v70 = 2112;
    unsigned int v71 = v44;
    _os_log_impl( (void *)&_mh_execute_header,  v43,  OS_LOG_TYPE_DEFAULT,  "meetsRemoteCountCriteria: %@, meetsParticipantCriteria: %@",  buf,  0x16u);
  }

  unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation featureFlags](self, "featureFlags"));
  if (([v5 conversationOneToOneModeEnabled] & v16 & v11) == 1)
  {
    char v46 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation remoteMembers](self, "remoteMembers"));
    char v47 = (void *)objc_claimAutoreleasedReturnValue([v46 allObjects]);
    unsigned int v48 = (void *)objc_claimAutoreleasedReturnValue([v47 firstObject]);
    uint64_t v49 = (void *)objc_claimAutoreleasedReturnValue([v48 handle]);
    unint64_t v50 = (void *)objc_claimAutoreleasedReturnValue([v49 value]);
    if ([v50 destinationIdIsTemporary])
    {
      unint64_t v6 = 0;
    }

    else
    {
      char v51 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation link](self, "link"));
      unint64_t v6 = v51 == 0LL;
    }
  }

  else
  {
    unint64_t v6 = 0;
  }

  char v41 = v26;

  return v41;
}
  }

  return v16;
}

          goto LABEL_31;
        }
      }

      else
      {
      }

      if (v16)
      {
        unsigned int v28 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) reportingController]);
        uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue([v16 tuConversation]);
        [v28 receivedLetMeInRequestForConversation:v29];

        if ([*(id *)(a1 + 56) _shouldSkipManualApprovalForHandle:*(void *)(a1 + 64) conversation:v16 responseKeyData:*(void *)(a1 + 72)])
        {
          unint64_t v30 = sub_1001704C4();
          id v23 = (os_log_s *)objc_claimAutoreleasedReturnValue(v30);
          if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
          {
            char v31 = *(os_log_s **)(a1 + 64);
            *(_DWORD *)buf = 138412290;
            uint64_t v49 = v31;
            _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEFAULT,  "skip manual approval for handle: %@",  buf,  0xCu);
          }

          goto LABEL_30;
        }
      }

      else
      {
        char v32 = sub_1001704C4();
        unsigned int v33 = (os_log_s *)objc_claimAutoreleasedReturnValue(v32);
        if (os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v34 = *(os_log_s **)(a1 + 32);
          *(_DWORD *)buf = 138412290;
          uint64_t v49 = v34;
          _os_log_impl( (void *)&_mh_execute_header,  v33,  OS_LOG_TYPE_DEFAULT,  "Couldn't find existing conversation: %@",  buf,  0xCu);
        }
      }

      id v23 = (os_log_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 80) nickname]);
      unint64_t v35 = -[os_log_s length](v23, "length");
      if (v35)
      {
        char v36 = v35;
        char v37 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) serverBag]);
        unsigned int v38 = [v37 webNicknameLengthLimit];

        if (v36 > v38)
        {
          uint64_t v39 = objc_claimAutoreleasedReturnValue(-[os_log_s substringToIndex:](v23, "substringToIndex:", v38));

          id v23 = (os_log_s *)v39;
        }
      }

      unint64_t v40 = -[TUConversationMember initWithHandle:nickname:joinedFromLetMeIn:]( objc_alloc(&OBJC_CLASS___TUConversationMember),  "initWithHandle:nickname:joinedFromLetMeIn:",  *(void *)(a1 + 64),  v23,  1LL);
      char v41 = -[TUConversationLink initWithDescriptor:]( objc_alloc(&OBJC_CLASS___TUConversationLink),  "initWithDescriptor:",  *(void *)(a1 + 32));
      char v42 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) pendingMembershipTracker]);
      [v42 handleNewPendingMember:v40 responseKey:*(void *)(a1 + 72) forConversation:v16 withLink:v41 dateInitiatedLMI:*(void *)(a1 + 88)];

      goto LABEL_30;
    }

  return v8;
}

    return 0LL;
  }

  if (v37 == v7)
  {
    if (qword_1004466A0 != -1) {
      swift_once(&qword_1004466A0, sub_1001AC714);
    }
    char v41 = sub_1001B0E98();
    char v42 = sub_1001B0F78(v41, (uint64_t)qword_1004473D8);
    Logger.logObject.getter(v42, v43, v44);
    v141 = sub_1001B105C();
    if (!os_log_type_enabled((os_log_t)v33, v141))
    {

      goto LABEL_38;
    }

    v137 = (os_log_s *)v33;
    unint64_t v45 = sub_1001B0E78(32LL);
    v139 = sub_1001B0E78(96LL);
    v150 = v139;
    char v46 = sub_1001B0F30(4.8152e-34);
    unsigned int v38 = (char **)v42;
    unsigned int v48 = sub_1001B0FBC(v46, v47);
    sub_1001B119C(v48);
    v144 = (uint64_t)v0;
    unint64_t v50 = v49 + 8;
    ((void (*)(uint64_t *, uint64_t, uint64_t))UnsafeMutableRawBufferPointer.copyMemory(from:))( v149,  v49 + 8,  v51);
    sub_1001B1200();
    *(_WORD *)(v45 + 12) = 2080;
    char v52 = CSDConversationSpatialPersonaResolver.SpatialPersonaCounter.description.getter(v144, v40, (uint64_t)v7);
    unint64_t v54 = sub_1001B0FBC(v52, v53);
    char v55 = sub_1001B114C(v54);
    ((void (*)(uint64_t, uint64_t, uint64_t))UnsafeMutableRawBufferPointer.copyMemory(from:))(v55, v50, v56);
    sub_1001B0EC0();
    *(_WORD *)(v45 + 22) = 2080;
    sub_1001B0E6C( (uint64_t)v42 + OBJC_IVAR____TtC13callservicesd37CSDConversationSpatialPersonaResolver_groupUUID,  (uint64_t)v149);
    id v2 = (uint64_t)v7;
    unint64_t v7 = &unk_10044A400;
    sub_1001B1084();
    sub_1001B11F8((uint64_t)v42, (uint64_t (*)(void))&type metadata accessor for UUID);
    sub_1001B1024();
    unsigned int v57 = sub_1001B11AC();
    unint64_t v58 = sub_1001B0ED8(v57);
    ((void (*)(uint64_t, uint64_t, uint64_t))UnsafeMutableRawBufferPointer.copyMemory(from:))(v58, v59, v60);

    sub_1001B111C();
    v0 = v137;
    sub_1001B1078( (void *)&_mh_execute_header,  v137,  v141,  "[Upsert] Updating genID, new-state=%s from old-state=%s, groupUUID=%s");
    unsigned int v61 = v139;
LABEL_22:
    unsigned int v92 = v61;
    uint64_t v93 = 3LL;
    goto LABEL_23;
  }

  if (qword_1004466A0 != -1) {
    swift_once(&qword_1004466A0, sub_1001AC714);
  }
  uint64_t v111 = sub_1001B0E98();
  v142 = sub_1001B0F78(v111, (uint64_t)qword_1004473D8);
  Logger.logObject.getter(v142, v112, v113);
  v140 = sub_1001B105C();
  if (!os_log_type_enabled((os_log_t)v33, v140))
  {

    v0 = v142;
    goto LABEL_24;
  }

  v136 = (os_log_s *)v33;
  unint64_t v45 = sub_1001B0E78(42LL);
  v138 = sub_1001B0E78(128LL);
  v150 = v138;
  char v114 = sub_1001B0F30(4.8153e-34);
  uint64_t v116 = sub_1001B0FBC(v114, v115);
  sub_1001B119C(v116);
  v135 = v117 + 8;
  ((void (*)(uint64_t *, uint64_t, uint64_t))UnsafeMutableRawBufferPointer.copyMemory(from:))( v149,  v117 + 8,  v118);
  sub_1001B0EB8();
  *(_WORD *)(v45 + 12) = 2080;
  char v119 = sub_1001B117C();
  unint64_t v121 = sub_1001B0FBC(v119, v120);
  char v122 = sub_1001B114C(v121);
  sub_1001B112C(v122, v135, v123, v124);
  sub_1001B0EC0();
  *(_WORD *)(v45 + 22) = 2080;
  uint64_t v125 = sub_1001AC7D4((uint64_t)[v142 conversationState]);
  v149[0] = sub_1001B0FBC(v125, v126);
  sub_1001B112C((uint64_t)v149, v135, v127, v45 + 32);

  sub_1001B0EC0();
  *(_WORD *)(v45 + 32) = 2080;
  sub_1001B0E6C( (uint64_t)v142 + OBJC_IVAR____TtC13callservicesd37CSDConversationSpatialPersonaResolver_groupUUID,  (uint64_t)v149);
  id v2 = (uint64_t)v7;
  unint64_t v7 = &unk_10044A400;
  sub_1001B1084();
  sub_1001B11F8( (uint64_t)&selRef_setMockRingtoneSuppressedRemotely_,  (uint64_t (*)(void))&type metadata accessor for UUID);
  sub_1001B1024();
  char v128 = sub_1001B11AC();
  unsigned int v129 = sub_1001B0ED8(v128);
  sub_1001B112C(v129, v130, v131, v132);

  sub_1001B111C();
  v0 = v136;
  _os_log_impl( (void *)&_mh_execute_header,  v136,  v140,  "[Upsert] Updating, new-state=%s from old-state=%s, resolved-state=%s, groupUUID=%s",  (uint8_t *)v45,  0x2Au);
  unsigned int v61 = v138;
  unsigned int v92 = v138;
  uint64_t v93 = 4LL;
LABEL_23:
  swift_arrayDestroy(v92, v93);
  sub_1001B0E60(v61);
  sub_1001B0E60(v45);
LABEL_24:

LABEL_38:
  sub_1001B0E80(v2, (uint64_t)&v150, 33LL);
  sub_1001FE34C(v10, v21, (uint64_t)v7, v10);
  BOOL v133 = swift_endAccess(&v150);
  uint64_t v134 = sub_1001B115C(v133, v38[308]);
  uint64_t result = *(void *)(v5 + OBJC_IVAR____TtC13callservicesd37CSDConversationSpatialPersonaResolver_localParticipantState) != (void)v134;
  *(void *)(v5 + OBJC_IVAR____TtC13callservicesd37CSDConversationSpatialPersonaResolver_localParticipantState) = v134;
  return result;
}

            __break(1u);
LABEL_31:
            __break(1u);
            goto LABEL_32;
          }

  __break(1u);
  return result;
}

      uint64_t v29 = *(void *)(*v3 + 48);
      uint64_t result = *(void *)(v29 + 8 * v9);
      *(void *)(v29 + 8 * v9) = a1;
      return result;
    }

    sub_100248CDC();
  }

  uint64_t v20 = *v3;
  unint64_t v21 = NSObject._rawHashValue(seed:)(*(void *)(*v3 + 40));
  char v22 = -1LL << *(_BYTE *)(v20 + 32);
  BOOL v9 = v21 & ~v22;
  if (((*(void *)(v20 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v9) & 1) == 0) {
    goto LABEL_32;
  }
  id v23 = v3;
  sub_1001B4B94(0LL, (unint64_t *)&unk_100447E20, &OBJC_CLASS___TUConversationMember_ptr);
  int v24 = *(id *)(*(void *)(v20 + 48) + 8 * v9);
  uint64_t v25 = static NSObject.== infix(_:_:)(v24, a1);

  if ((v25 & 1) == 0)
  {
    uint64_t v26 = ~v22;
    while (1)
    {
      BOOL v9 = (v9 + 1) & v26;
      if (((*(void *)(v20 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v9) & 1) == 0) {
        break;
      }
      char v27 = *(id *)(*(void *)(v20 + 48) + 8 * v9);
      unsigned int v28 = static NSObject.== infix(_:_:)(v27, a1);

      if ((v28 & 1) != 0) {
        goto LABEL_29;
      }
    }

    id v3 = v23;
LABEL_32:
    if ((v14 & 1) == 0) {
      goto LABEL_33;
    }
    goto LABEL_37;
  }

  __break(1u);
}

  __break(1u);
  return result;
}

  __break(1u);
  return result;
}

  __break(1u);
  return result;
}

  __break(1u);
}

    char v12 = (v20 - 1) & v20;
    unsigned int v13 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_31:
    char v18 = *(id *)(*(void *)(v1 + 48) + 8 * v13);
    if (!v18) {
      goto LABEL_34;
    }
    while (1)
    {
      sub_10024ABC4(&v24, v18);

      unint64_t v6 = v14;
      unint64_t v7 = v12;
      if ((v1 & 0x8000000000000000LL) == 0) {
        break;
      }
LABEL_12:
      unint64_t v15 = __CocoaSet.Iterator.next()(a1);
      if (v15)
      {
        char v16 = v15;
        id v23 = v15;
        int v17 = sub_1001B4B94(0LL, (unint64_t *)&unk_10044A3C0, &OBJC_CLASS___UNNotificationCategory_ptr);
        swift_unknownObjectRetain(v16);
        swift_dynamicCast(&v24, &v23, (char *)&type metadata for Swift.AnyObject + 8, v17, 7LL);
        char v18 = v24;
        swift_unknownObjectRelease(v16);
        uint64_t v14 = v6;
        char v12 = v7;
        if (v18) {
          continue;
        }
      }

      goto LABEL_34;
    }
  }

  __break(1u);
}

LABEL_31:
  self->_sharePlayProtocolVersion = *((_DWORD *)v5 + 17);
  *(_DWORD *)&self->_has |= 0x10u;
  BOOL v9 = *((_DWORD *)v5 + 26);
  if ((v9 & 4) == 0)
  {
LABEL_20:
    if ((v9 & 0x400) == 0) {
      goto LABEL_21;
    }
    goto LABEL_33;
  }

        unint64_t v35 = sub_1001704C4();
        uint64_t v34 = (os_log_s *)objc_claimAutoreleasedReturnValue(v35);
        if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR)) {
          sub_1002B1C50((uint64_t)v4, v34);
        }
LABEL_33:

        break;
      }
    }
  }

  uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation delegate](self, "delegate"));
  [v26 conversationChanged:self];
}
}

  v9[2](v9, v35);
}

  unint64_t v35 = 0LL;
  if ((*(_BYTE *)&v5 & 0x10) == 0) {
    goto LABEL_32;
  }
LABEL_27:
  uint64_t v34 = 2654435761LL * self->_protoSoundRegion;
  if ((*(_WORD *)&v5 & 0x100) != 0)
  {
LABEL_28:
    unsigned int v33 = 2654435761LL * self->_protoEmergency;
    goto LABEL_34;
  }

  self->_protoDisconnectedReason = *((_DWORD *)v4 + 20);
  *(_DWORD *)&self->_has |= 2u;
  if ((*((_DWORD *)v4 + 38) & 0x100000) != 0)
  {
LABEL_15:
    self->_protoVoicemail = *((_BYTE *)v4 + 149);
    *(_DWORD *)&self->_has |= 0x100000u;
  }
  }

  else
  {
    uint64_t v25 = sub_1001704C4();
    unint64_t v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v25);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v26 = *(os_log_s **)(a1 + 40);
      char v27 = *(void **)(a1 + 48);
      *(_DWORD *)buf = 138412546;
      uint64_t v49 = v26;
      unint64_t v50 = 2112;
      char v51 = v27;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Could not find link for pseudonym %@, dropping let me in request. Error: %@",  buf,  0x16u);
    }
  }
}

    char v36 = objc_claimAutoreleasedReturnValue([v7 tuConversationActivitySession]);
    if (v36) {
      break;
    }

    if ((id)++v8 == v67)
    {
      char v41 = [obj countByEnumeratingWithState:&v79 objects:v88 count:16];
      uint64_t v67 = v41;
      if (v41) {
        goto LABEL_8;
      }
      goto LABEL_36;
    }
  }

  unsigned int v48 = (id)v36;

  uint64_t v49 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) sharePlaySystemStateObserver]);
  unint64_t v50 = [v49 allowSharePlay];

  if ((v50 & 1) != 0)
  {
    +[CSDAnalyticsReporter sendManualLaunchAttemptEventWithActivitySession:]( &OBJC_CLASS___CSDAnalyticsReporter,  "sendManualLaunchAttemptEventWithActivitySession:",  v48);
    v69[0] = _NSConcreteStackBlock;
    v69[1] = 3221225472LL;
    v69[2] = sub_1000EE7E0;
    v69[3] = &unk_1003D9E48;
    char v51 = *(id *)(a1 + 48);
    char v52 = *(void *)(a1 + 40);
    unint64_t v73 = v51;
    v69[4] = v52;
    unint64_t v7 = v7;
    char v70 = v7;
    unsigned int v48 = v48;
    unsigned int v71 = v48;
    char v74 = *(_BYTE *)(a1 + 57);
    uint64_t v72 = *(id *)(a1 + 32);
    unsigned int v53 = objc_retainBlock(v69);
    [v7 updateApplicationState:0];
    unint64_t v54 = (void *)objc_claimAutoreleasedReturnValue([v68 activitySessionManager]);
    char v55 = (void *)objc_claimAutoreleasedReturnValue([v54 applicationLauncher]);
    char v56 = v55;
    if (v7) {
      unsigned int v57 = v7;
    }
    else {
      unsigned int v57 = v48;
    }
    [v55 launchAppForActivitySession:v57 options:0 completion:v53];

    char v46 = v73;
    goto LABEL_49;
  }

  unint64_t v58 = sub_1001704C4();
  char v59 = (os_log_s *)objc_claimAutoreleasedReturnValue(v58);
  if (os_log_type_enabled(v59, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v59,  OS_LOG_TYPE_DEFAULT,  "Not launching application because SharePlay is not allowed",  buf,  2u);
  }

  char v60 = *(void *)(a1 + 48);
  if (v60)
  {
    unsigned int v61 = TUErrorDomain;
    char v83 = NSLocalizedDescriptionKey;
    char v84 = @"SharePlay not allowed";
    char v46 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v84,  &v83,  1LL));
    uint64_t v62 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  v61,  1LL,  v46));
    (*(void (**)(uint64_t, void *))(v60 + 16))(v60, v62);

    goto LABEL_49;
  }

LABEL_32:
    return;
  }

  char v12 = *(void *)(a1 + 48);
  if (v12) {
    (*(void (**)(uint64_t, void, void))(v12 + 16))(v12, 0LL, 0LL);
  }
}

      BOOL v9 = v58;
    }

    else
    {
      +[CSDCrashReporter simulateCrashReportWithFormat:]( &OBJC_CLASS___CSDCrashReporter,  "simulateCrashReportWithFormat:",  @"Trying to send a participant update change with a participantIdentifier of 0. Please file a bug to [FaceTime | (New Bugs)]");
    }
  }

  else
  {
    char v42 = sub_1001704C4();
    unsigned int v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v42);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412546;
      char v69 = v9;
      char v70 = 2112;
      unsigned int v71 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "Not broadcasting localParticipant change for participant %@ since the conversation isn't joined yet %@",  buf,  0x16u);
    }
  }
}

  return v8;
}

      return;
    case 4uLL:
      -[CXCallUpdate setMixesVoiceWithMedia:](v9, "setMixesVoiceWithMedia:", 0LL);
      goto LABEL_28;
    default:
LABEL_28:
      if (v61) {
        goto LABEL_29;
      }
      goto LABEL_31;
  }

    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 24))(a1, a2, v5);
    return a1;
  }

  if (!a2[v8] || (a2[v8] - 1) << v11 == -1)
  {
LABEL_33:
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(a1, a2, v5);
    if (!(_DWORD)v7) {
      a1[v8] = 0;
    }
    return a1;
  }

    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 40))(a1, a2, v5);
    return a1;
  }

  if (!a2[v8] || (a2[v8] - 1) << v11 == -1)
  {
LABEL_33:
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 32))(a1, a2, v5);
    if (!(_DWORD)v7) {
      a1[v8] = 0;
    }
    return a1;
  }

                    sub_1001B1164();
                    sub_1001ADD80(v13);
                    int v24 = v23;
                    id v1 = v25;
                    char v27 = v26;
                    swift_release(v13);
                    if ((v27 & 1) == 0) {
                      goto LABEL_34;
                    }
                    goto LABEL_42;
                  }
                }
              }
            }
          }
        }

    unint64_t v15 = (v24 - 1) & v24;
    char v16 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_32:
    char v22 = *(id *)(*(void *)(v1 + 48) + 8 * v16);
    if (!v22) {
      goto LABEL_39;
    }
    while (1)
    {
      uint64_t v26 = [v22 handle];
      char v27 = [v26 value];

      unsigned int v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
      unint64_t v30 = v29;

      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v14);
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1002B00EC();
        uint64_t v14 = (void *)isUniquelyReferenced_nonNull_native;
      }

      char v31 = v14[2];
      if (v31 >= v14[3] >> 1)
      {
        sub_1002B00EC();
        uint64_t v14 = (void *)isUniquelyReferenced_nonNull_native;
      }

      v14[2] = v31 + 1;
      char v32 = &v14[2 * v31];
      v32[4] = v28;
      v32[5] = v30;
      char v8 = v17;
      int v10 = v15;
      if ((v1 & 0x8000000000000000LL) == 0) {
        break;
      }
LABEL_13:
      char v18 = __CocoaSet.Iterator.next()(isUniquelyReferenced_nonNull_native);
      if (v18)
      {
        unsigned int v19 = v18;
        unint64_t v35 = v18;
        sub_1001D8EA0(0LL, &qword_100447E88, &OBJC_CLASS___TUConversationParticipant_ptr);
        unint64_t v21 = v20;
        swift_unknownObjectRetain(v19);
        swift_dynamicCast(&v37, &v35, (char *)&type metadata for Swift.AnyObject + 8, v21, 7LL);
        char v22 = v37;
        swift_unknownObjectRelease(v19);
        int v17 = v8;
        unint64_t v15 = v10;
        if (v22) {
          continue;
        }
      }

      goto LABEL_39;
    }
  }

  __break(1u);
}

    uint64_t v14 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v16 << 6);
LABEL_32:
    unint64_t v21 = *(id *)(*(void *)(v1 + 48) + 8 * v15);
    if (!v21) {
      goto LABEL_35;
    }
    while (1)
    {
      uint64_t v25 = [v21 handles];
      sub_1001D8EA0(0LL, &qword_10044A410, &OBJC_CLASS___TUHandle_ptr);
      char v27 = v26;
      sub_1001D84A4((unint64_t *)&qword_100447ED0, &qword_10044A410, &OBJC_CLASS___TUHandle_ptr);
      uint64_t v29 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v25, v27, v28);

      uint64_t result = (void *)sub_10028F9C0(v29);
      BOOL v9 = v16;
      int v10 = v14;
      if ((v1 & 0x8000000000000000LL) == 0) {
        break;
      }
LABEL_13:
      int v17 = __CocoaSet.Iterator.next()(result);
      if (v17)
      {
        char v18 = v17;
        char v32 = v17;
        sub_1001D8EA0(0LL, (unint64_t *)&unk_100447E20, &OBJC_CLASS___TUConversationMember_ptr);
        uint64_t v20 = v19;
        swift_unknownObjectRetain(v18);
        swift_dynamicCast(&v33, &v32, (char *)&type metadata for Swift.AnyObject + 8, v20, 7LL);
        unint64_t v21 = v33;
        swift_unknownObjectRelease(v18);
        char v16 = v9;
        uint64_t v14 = v10;
        if (v21) {
          continue;
        }
      }

      goto LABEL_35;
    }
  }

  __break(1u);
  return result;
}

    unint64_t v15 = (v23 - 1) & v23;
    char v16 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_32:
    unint64_t v21 = *(id *)(*(void *)(v2 + 48) + 8 * v16);
    if (!v21) {
      goto LABEL_40;
    }
    while (1)
    {
      uint64_t v25 = [v21 clientAudioSessionID];
      if (v25)
      {
        uint64_t v26 = v25;
        if ([v21 state] == (id)1) {
          [*(id *)(a2 + 24) triggerEndInterruptionForAudioSessionID:v26];
        }
      }

      else
      {
        uint64_t v26 = v21;
      }

      BOOL v9 = v17;
      int v10 = v15;
      if ((v2 & 0x8000000000000000LL) == 0) {
        break;
      }
LABEL_13:
      char v18 = __CocoaSet.Iterator.next()(v7);
      if (v18)
      {
        unsigned int v19 = v18;
        uint64_t v29 = v18;
        uint64_t v20 = sub_1001B4B94(0LL, &qword_100449418, &OBJC_CLASS___TUConversationActivitySession_ptr);
        swift_unknownObjectRetain(v19);
        swift_dynamicCast(&v31, &v29, (char *)&type metadata for Swift.AnyObject + 8, v20, 7LL);
        unint64_t v21 = v31;
        swift_unknownObjectRelease(v19);
        int v17 = v9;
        unint64_t v15 = v10;
        if (v21) {
          continue;
        }
      }

      goto LABEL_40;
    }
  }

  __break(1u);
}

          int v24 = (v27 - 1) & v27;
          uint64_t v25 = __clz(__rbit64(v27)) + (v23 << 6);
        }

        char v22 = *(id *)(*(void *)(a2 + 48) + 8 * v25);
        unint64_t v21 = v22;
        if (!v22) {
          goto LABEL_60;
        }
      }

      char v31 = sub_1001D909C(1LL, "value");
      if (!v31)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)(0LL);
        char v31 = String._bridgeToObjectiveC()();
        sub_1001B0F5C();
      }

      uint64_t v34 = (void *)objc_opt_self(&OBJC_CLASS___TUHandle);
      unsigned int v33 = sub_1001D8FD4(v34, "normalizedGenericHandleForValue:");
LABEL_43:
      unint64_t v35 = v33;
LABEL_55:

      if (v35)
      {
        char v51 = v35;
        sub_10024AF20(&v92, v51);

        char v16 = &selRef_sharedPrivacyManager;
        goto LABEL_58;
      }

      char v8 = v18;
LABEL_32:
      if (v8 >= v3) {
        goto LABEL_41;
      }
      if (__OFSUB__(v8, v10)) {
        goto LABEL_144;
      }
      if (v8 - v10 >= v106) {
        goto LABEL_41;
      }
      if (__OFADD__(v10, v106)) {
        goto LABEL_147;
      }
      if (v10 + v106 >= v3) {
        unsigned int v33 = v3;
      }
      else {
        unsigned int v33 = v10 + v106;
      }
      if (v33 < v10)
      {
LABEL_148:
        __break(1u);
LABEL_149:
        __break(1u);
LABEL_150:
        __break(1u);
LABEL_151:
        __break(1u);
LABEL_152:
        __break(1u);
LABEL_153:
        __break(1u);
LABEL_154:
        __break(1u);
        return;
      }

      if (v8 == v33)
      {
LABEL_41:
        uint64_t v34 = v110;
      }

      else
      {
        unsigned int v85 = (void *)(v9 + 16 * v8);
        uint64_t v34 = v110;
        do
        {
          uint64_t v86 = (uint64_t *)(v9 + 16 * v8);
          unint64_t v87 = *v86;
          char v88 = v86[1];
          uint64_t v89 = v10;
          v90 = v85;
          do
          {
            char v91 = *(v90 - 2);
            unsigned int v92 = *(v90 - 1);
            uint64_t v93 = v87 == v91 && v88 == v92;
            if (v93 || (_stringCompareWithSmolCheck(_:_:expecting:)(v87, v88, v91, v92, 1LL) & 1) == 0) {
              break;
            }
            if (!v9) {
              goto LABEL_151;
            }
            unint64_t v87 = *v90;
            char v88 = v90[1];
            *(_OWORD *)v90 = *((_OWORD *)v90 - 1);
            *(v90 - 1) = v88;
            *(v90 - 2) = v87;
            v90 -= 2;
            ++v89;
          }

          while (v8 != v89);
          ++v8;
          v85 += 2;
        }

        while (v8 != v33);
        char v8 = v33;
      }

      if (v8 < v10) {
        goto LABEL_143;
      }
      if ((swift_isUniquelyReferenced_nonNull_native(v34) & 1) == 0)
      {
        sub_100229FEC(0, *((void *)v34 + 2) + 1LL, 1, v34);
        uint64_t v34 = v94;
      }

      char v36 = *((void *)v34 + 2);
      unint64_t v35 = *((void *)v34 + 3);
      char v37 = v36 + 1;
      if (v36 >= v35 >> 1)
      {
        sub_100229FEC(v35 > 1, v36 + 1, 1, v34);
        uint64_t v34 = v95;
      }

      *((void *)v34 + 2) = v37;
      unsigned int v38 = v34 + 32;
      uint64_t v39 = (Swift::Int *)&v34[16 * v36 + 32];
      *uint64_t v39 = v10;
      v39[1] = v8;
      unsigned int v110 = v34;
      if (v36)
      {
        while (1)
        {
          unint64_t v40 = v37 - 1;
          if (v37 >= 4)
          {
            unint64_t v45 = &v38[2 * v37];
            char v46 = *(v45 - 8);
            char v47 = *(v45 - 7);
            char v51 = __OFSUB__(v47, v46);
            unsigned int v48 = v47 - v46;
            if (v51) {
              goto LABEL_128;
            }
            unint64_t v50 = *(v45 - 6);
            uint64_t v49 = *(v45 - 5);
            char v51 = __OFSUB__(v49, v50);
            unsigned int v43 = v49 - v50;
            uint64_t v44 = v51;
            if (v51) {
              goto LABEL_129;
            }
            char v52 = v37 - 2;
            unsigned int v53 = &v38[2 * v37 - 4];
            char v55 = *v53;
            unint64_t v54 = v53[1];
            char v51 = __OFSUB__(v54, v55);
            char v56 = v54 - v55;
            if (v51) {
              goto LABEL_130;
            }
            char v51 = __OFADD__(v43, v56);
            unsigned int v57 = v43 + v56;
            if (v51) {
              goto LABEL_132;
            }
            if (v57 >= v48)
            {
              char v75 = &v38[2 * v40];
              unint64_t v77 = *v75;
              unsigned int v76 = v75[1];
              char v51 = __OFSUB__(v76, v77);
              char v78 = v76 - v77;
              if (v51) {
                goto LABEL_138;
              }
              unint64_t v68 = v43 < v78;
              goto LABEL_79;
            }
          }

          else
          {
            if (v37 != 3)
            {
              char v69 = *((void *)v34 + 4);
              char v70 = *((void *)v34 + 5);
              char v51 = __OFSUB__(v70, v69);
              uint64_t v62 = v70 - v69;
              unint64_t v63 = v51;
              goto LABEL_73;
            }

            char v42 = *((void *)v34 + 4);
            char v41 = *((void *)v34 + 5);
            char v51 = __OFSUB__(v41, v42);
            unsigned int v43 = v41 - v42;
            uint64_t v44 = v51;
          }

          if ((v44 & 1) != 0) {
            goto LABEL_131;
          }
          char v52 = v37 - 2;
          unint64_t v58 = &v38[2 * v37 - 4];
          char v60 = *v58;
          char v59 = v58[1];
          unsigned int v61 = __OFSUB__(v59, v60);
          uint64_t v62 = v59 - v60;
          unint64_t v63 = v61;
          if (v61) {
            goto LABEL_133;
          }
          char v64 = &v38[2 * v40];
          unsigned int v66 = *v64;
          char v65 = v64[1];
          char v51 = __OFSUB__(v65, v66);
          uint64_t v67 = v65 - v66;
          if (v51) {
            goto LABEL_135;
          }
          if (__OFADD__(v62, v67)) {
            goto LABEL_137;
          }
          if (v62 + v67 >= v43)
          {
            unint64_t v68 = v43 < v67;
LABEL_79:
            if (v68) {
              unint64_t v40 = v52;
            }
            goto LABEL_81;
          }

    int v17 = (v25 - 1) & v25;
    char v18 = __clz(__rbit64(v25)) + (v19 << 6);
LABEL_32:
    id v23 = *(id *)(*(void *)(v3 + 48) + 8 * v18);
    if (!v23) {
      goto LABEL_45;
    }
    while (1)
    {
      char v27 =  [(id)objc_opt_self(CSDMessagingConversationActivitySession) activitySessionWithCSDConversationActivitySession:v23 fromConversation:a2 forStorage:1];
      unsigned int v28 = (void *)dispatch thunk of ActivitySession.activity.getter();
      uint64_t v29 = [v28 originator];

      if (!v29)
      {
        unint64_t v30 = [v27 activity];
        if (!v30) {
          goto LABEL_47;
        }
        char v31 = v30;
        [v30 setOriginatorHandle:0];
      }

      char v37 = sub_1001B4B94(0LL, &qword_10044B0F8, off_1003D5DC8);
      *(void *)&char v36 = v27;

      if (v37)
      {
        sub_1001B03EC(&v36, v38);
        sub_1001B03EC(v38, &v36);
        if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
        {
          sub_1002B0550();
          char v16 = v33;
        }

        char v32 = v16[2];
        if (v32 >= v16[3] >> 1)
        {
          sub_1002B0550();
          char v16 = v34;
        }

        v16[2] = v32 + 1;
        char v8 = sub_1001B03EC(&v36, &v16[4 * v32 + 4]);
      }

      else
      {
        sub_1001C6CE4((uint64_t)&v36, (uint64_t *)&unk_1004474B0);
      }

      int v10 = v19;
      id v11 = v17;
      if ((v3 & 0x8000000000000000LL) == 0) {
        break;
      }
LABEL_13:
      uint64_t v20 = __CocoaSet.Iterator.next()(v8);
      if (v20)
      {
        unint64_t v21 = v20;
        *(void *)&char v36 = v20;
        char v22 = type metadata accessor for ActivitySession(0LL);
        swift_unknownObjectRetain(v21);
        swift_dynamicCast(v38, &v36, (char *)&type metadata for Swift.AnyObject + 8, v22, 7LL);
        id v23 = *(id *)&v38[0];
        swift_unknownObjectRelease(v21);
        unsigned int v19 = v10;
        int v17 = v11;
        if (v23) {
          continue;
        }
      }

      goto LABEL_45;
    }
  }

  __break(1u);
LABEL_47:
  __break(1u);
}

    unint64_t v15 = (v23 - 1) & v23;
    char v16 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_32:
    unint64_t v21 = *(id *)(*(void *)(v1 + 48) + 8 * v16);
    if (!v21) {
      goto LABEL_42;
    }
    while (1)
    {
      uint64_t v25 =  [(id)objc_opt_self(CSDMessagingConversationParticipant) participantWithCSDConversationParticipant:v21];
      char v31 = sub_1001B4B94(0LL, &qword_10044B0F0, off_1003D5DE8);
      *(void *)&unint64_t v30 = v25;

      if (v31)
      {
        sub_1001B03EC(&v30, v32);
        sub_1001B03EC(v32, &v30);
        if ((swift_isUniquelyReferenced_nonNull_native(v14) & 1) == 0)
        {
          sub_10026F354();
          uint64_t v14 = v27;
        }

        uint64_t v26 = v14[2];
        if (v26 >= v14[3] >> 1)
        {
          sub_10026F354();
          uint64_t v14 = v28;
        }

        v14[2] = v26 + 1;
        unint64_t v6 = sub_1001B03EC(&v30, &v14[4 * v26 + 4]);
      }

      else
      {
        sub_1001C6CE4((uint64_t)&v30, (uint64_t *)&unk_1004474B0);
      }

      unint64_t v7 = v17;
      BOOL v9 = v15;
      if ((v1 & 0x8000000000000000LL) == 0) {
        break;
      }
LABEL_13:
      char v18 = __CocoaSet.Iterator.next()(v6);
      if (v18)
      {
        unsigned int v19 = v18;
        *(void *)&unint64_t v30 = v18;
        uint64_t v20 = sub_1001B4B94(0LL, (unint64_t *)&qword_100448F80, off_1003D5D90);
        swift_unknownObjectRetain(v19);
        swift_dynamicCast(v32, &v30, (char *)&type metadata for Swift.AnyObject + 8, v20, 7LL);
        unint64_t v21 = *(id *)&v32[0];
        swift_unknownObjectRelease(v19);
        int v17 = v7;
        unint64_t v15 = v9;
        if (v21) {
          continue;
        }
      }

      goto LABEL_42;
    }
  }

  __break(1u);
}

    unint64_t v15 = (v23 - 1) & v23;
    char v16 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_32:
    unint64_t v21 = *(id *)(*(void *)(v1 + 48) + 8 * v16);
    if (!v21) {
      goto LABEL_42;
    }
    while (1)
    {
      uint64_t v25 =  [(id)objc_opt_self(CSDMessagingConversationMember) memberWithTUConversationMember:v21];
      char v31 = sub_1001B4B94(0LL, &qword_10044A5E0, off_1003D5DE0);
      *(void *)&unint64_t v30 = v25;

      if (v31)
      {
        sub_1001B03EC(&v30, v32);
        sub_1001B03EC(v32, &v30);
        if ((swift_isUniquelyReferenced_nonNull_native(v14) & 1) == 0)
        {
          sub_1002B0550();
          uint64_t v14 = v27;
        }

        uint64_t v26 = v14[2];
        if (v26 >= v14[3] >> 1)
        {
          sub_1002B0550();
          uint64_t v14 = v28;
        }

        v14[2] = v26 + 1;
        unint64_t v6 = sub_1001B03EC(&v30, &v14[4 * v26 + 4]);
      }

      else
      {
        sub_1001C6CE4((uint64_t)&v30, (uint64_t *)&unk_1004474B0);
      }

      unint64_t v7 = v17;
      BOOL v9 = v15;
      if ((v1 & 0x8000000000000000LL) == 0) {
        break;
      }
LABEL_13:
      char v18 = __CocoaSet.Iterator.next()(v6);
      if (v18)
      {
        unsigned int v19 = v18;
        *(void *)&unint64_t v30 = v18;
        uint64_t v20 = sub_1001B4B94(0LL, (unint64_t *)&unk_100447E20, &OBJC_CLASS___TUConversationMember_ptr);
        swift_unknownObjectRetain(v19);
        swift_dynamicCast(v32, &v30, (char *)&type metadata for Swift.AnyObject + 8, v20, 7LL);
        unint64_t v21 = *(id *)&v32[0];
        swift_unknownObjectRelease(v19);
        int v17 = v7;
        unint64_t v15 = v9;
        if (v21) {
          continue;
        }
      }

      goto LABEL_42;
    }
  }

  __break(1u);
}

    unint64_t v15 = (v23 - 1) & v23;
    char v16 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_32:
    unint64_t v21 = *(id *)(*(void *)(v1 + 48) + 8 * v16);
    if (!v21) {
      goto LABEL_44;
    }
    while (1)
    {
      uint64_t v25 =  [(id)objc_opt_self(CSDMessagingConversationMember) memberWithTUConversationMember:v21];
      if ([v21 validationSource] == (id)1) {
        [v25 setValidationSource:1];
      }
      char v31 = sub_1001B4B94(0LL, &qword_10044A5E0, off_1003D5DE0);
      *(void *)&unint64_t v30 = v25;

      if (v31)
      {
        sub_1001B03EC(&v30, v32);
        sub_1001B03EC(v32, &v30);
        if ((swift_isUniquelyReferenced_nonNull_native(v14) & 1) == 0)
        {
          sub_1002B0550();
          uint64_t v14 = v27;
        }

        uint64_t v26 = v14[2];
        if (v26 >= v14[3] >> 1)
        {
          sub_1002B0550();
          uint64_t v14 = v28;
        }

        v14[2] = v26 + 1;
        unint64_t v6 = sub_1001B03EC(&v30, &v14[4 * v26 + 4]);
      }

      else
      {
        sub_1001C6CE4((uint64_t)&v30, (uint64_t *)&unk_1004474B0);
      }

      unint64_t v7 = v17;
      BOOL v9 = v15;
      if ((v1 & 0x8000000000000000LL) == 0) {
        break;
      }
LABEL_13:
      char v18 = __CocoaSet.Iterator.next()(v6);
      if (v18)
      {
        unsigned int v19 = v18;
        *(void *)&unint64_t v30 = v18;
        uint64_t v20 = sub_1001B4B94(0LL, (unint64_t *)&unk_100447E20, &OBJC_CLASS___TUConversationMember_ptr);
        swift_unknownObjectRetain(v19);
        swift_dynamicCast(v32, &v30, (char *)&type metadata for Swift.AnyObject + 8, v20, 7LL);
        unint64_t v21 = *(id *)&v32[0];
        swift_unknownObjectRelease(v19);
        int v17 = v7;
        unint64_t v15 = v9;
        if (v21) {
          continue;
        }
      }

      goto LABEL_44;
    }
  }

  __break(1u);
}

    unint64_t v15 = (v23 - 1) & v23;
    char v16 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_32:
    unint64_t v21 = *(id *)(*(void *)(v1 + 48) + 8 * v16);
    if (!v21) {
      goto LABEL_45;
    }
    while (1)
    {
      uint64_t v25 = [(id)objc_opt_self(CSDMessagingHandle) handleWithTUHandle:v21];
      if (v25)
      {
        uint64_t v26 = v25;
        *((void *)&v32 + 1) = sub_1001B4B94(0LL, &qword_10044B100, off_1003D5DF0);
        *(void *)&char v31 = v26;
      }

      else
      {
        char v31 = 0u;
        char v32 = 0u;
      }

      if (*((void *)&v32 + 1))
      {
        sub_1001B03EC(&v31, v33);
        sub_1001B03EC(v33, &v31);
        if ((swift_isUniquelyReferenced_nonNull_native(v14) & 1) == 0)
        {
          sub_1002B0550();
          uint64_t v14 = v28;
        }

        char v27 = v14[2];
        if (v27 >= v14[3] >> 1)
        {
          sub_1002B0550();
          uint64_t v14 = v29;
        }

        v14[2] = v27 + 1;
        unint64_t v6 = sub_1001B03EC(&v31, &v14[4 * v27 + 4]);
      }

      else
      {
        sub_1001C6CE4((uint64_t)&v31, (uint64_t *)&unk_1004474B0);
      }

      unint64_t v7 = v17;
      BOOL v9 = v15;
      if ((v1 & 0x8000000000000000LL) == 0) {
        break;
      }
LABEL_13:
      char v18 = __CocoaSet.Iterator.next()(v6);
      if (v18)
      {
        unsigned int v19 = v18;
        *(void *)&char v31 = v18;
        uint64_t v20 = sub_1001B4B94(0LL, &qword_10044A410, &OBJC_CLASS___TUHandle_ptr);
        swift_unknownObjectRetain(v19);
        swift_dynamicCast(v33, &v31, (char *)&type metadata for Swift.AnyObject + 8, v20, 7LL);
        unint64_t v21 = *(id *)&v33[0];
        swift_unknownObjectRelease(v19);
        int v17 = v7;
        unint64_t v15 = v9;
        if (v21) {
          continue;
        }
      }

      goto LABEL_45;
    }
  }

  __break(1u);
}

              sub_1001B4B8C(v4);
              return (unint64_t)v3;
            }
          }
        }
      }
    }

LABEL_32:
  self->_options = *((_DWORD *)v5 + 12);
  *(_DWORD *)&self->_has |= 4u;
  BOOL v9 = *((_DWORD *)v5 + 26);
  if ((v9 & 0x400) == 0)
  {
LABEL_21:
    if ((v9 & 0x200) == 0) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }

  unint64_t v35 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation localMember](self, "localMember"));
  if ([v35 isLightweightMember])
  {
    char v36 = (void *)objc_claimAutoreleasedReturnValue([v35 lightweightPrimary]);
    if (v36)
    {
      char v37 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s originator](v9, "originator"));
      objc_msgSend(v4, "setIsLightweightPrimaryInitiated:", objc_msgSend(v37, "isEquivalentToHandle:", v36));
    }

    else
    {
      [v4 setIsLightweightPrimaryInitiated:0];
    }
  }

  unsigned int v38 = sub_1001704C4();
  uint64_t v39 = (os_log_s *)objc_claimAutoreleasedReturnValue(v38);
  if (os_log_type_enabled(v39, OS_LOG_TYPE_DEFAULT))
  {
    unint64_t v40 = [v4 isLightweightPrimaryInitiated];
    unsigned int v48 = 67109120;
    LODWORD(v49) = v40;
    _os_log_impl( (void *)&_mh_execute_header,  v39,  OS_LOG_TYPE_DEFAULT,  "isLightweightPrimaryInitiated: %d",  (uint8_t *)&v48,  8u);
  }

  char v41 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation activitySessionManager](self, "activitySessionManager"));
  uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([v41 createActivitySessionWithTuActivitySession:v4]);

  if (v20)
  {
    -[CSDConversation _registerPluginsIfNecessary](self, "_registerPluginsIfNecessary");
    if ([v4 isLocallyInitiated])
    {
      char v42 = sub_1001704C4();
      unsigned int v43 = (os_log_s *)objc_claimAutoreleasedReturnValue(v42);
      if (os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v44 = (void *)objc_claimAutoreleasedReturnValue([v20 tuConversationActivitySession]);
        unsigned int v48 = 138412290;
        uint64_t v49 = v44;
        _os_log_impl( (void *)&_mh_execute_header,  v43,  OS_LOG_TYPE_DEFAULT,  "Not launching app for locally started activity %@",  (uint8_t *)&v48,  0xCu);
      }
    }

    else
    {
      -[CSDConversation _launchApplicationDueToActivityCreation:](self, "_launchApplicationDueToActivityCreation:", v20);
    }

    unint64_t v45 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation activitySessionManager](self, "activitySessionManager"));
    char v46 = (void *)objc_claimAutoreleasedReturnValue([v20 tuConversationActivitySession]);
    -[CSDConversation activitySessionManager:activitySessionChanged:]( self,  "activitySessionManager:activitySessionChanged:",  v45,  v46);

    -[CSDConversation postSharePlayActivityDidChangeNotificationIfNecessary:]( self,  "postSharePlayActivityDidChangeNotificationIfNecessary:",  v4);
  }

LABEL_49:
  return v20;
}

LABEL_33:
      uint64_t v20 = v56;
      goto LABEL_34;
    }

    char v37 = (void *)objc_claimAutoreleasedReturnValue( -[CSDConversation activeParticipantDestinationsByIdentifier]( self,  "activeParticipantDestinationsByIdentifier"));
    unsigned int v38 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedLongLong:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedLongLong:",  -[os_log_s identifier](v31, "identifier")));
    unint64_t v54 = (void *)objc_claimAutoreleasedReturnValue([v37 objectForKeyedSubscript:v38]);
    if (!v54)
    {
      char v51 = (void *)objc_claimAutoreleasedReturnValue( -[CSDConversation activeLightweightParticipantsByIdentifier]( self,  "activeLightweightParticipantsByIdentifier"));
      uint64_t v39 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedLongLong:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedLongLong:",  -[os_log_s identifier](v31, "identifier")));
      unint64_t v40 = objc_claimAutoreleasedReturnValue([v51 objectForKeyedSubscript:v39]);
      if (!v40)
      {

LABEL_29:
        char v46 = sub_1001704C4();
        char v47 = (os_log_s *)objc_claimAutoreleasedReturnValue(v46);
        if (os_log_type_enabled(v47, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412290;
          unint64_t v58 = v31;
          _os_log_impl( (void *)&_mh_execute_header,  v47,  OS_LOG_TYPE_DEFAULT,  "didReceiveDataBlob caching as pending-participant, csdConversationParticipant: %@",  buf,  0xCu);
        }

        unint64_t v35 = (os_log_s *)objc_claimAutoreleasedReturnValue( -[CSDConversation pendingConversationParticipantsByIdentifier]( self,  "pendingConversationParticipantsByIdentifier"));
        unsigned int v48 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedLongLong:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedLongLong:",  -[os_log_s participantIdentifier](v8, "participantIdentifier")));
        -[os_log_s setObject:forKeyedSubscript:](v35, "setObject:forKeyedSubscript:", v31, v48);

        goto LABEL_32;
      }

      uint64_t v49 = (void *)v40;
      unint64_t v50 = v39;
    }

    char v52 = v38;
    unsigned int v53 = v37;
    char v41 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation recentlyLeftParticipantIdentifiers](self, "recentlyLeftParticipantIdentifiers"));
    char v42 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedLongLong:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedLongLong:",  -[os_log_s identifier](v31, "identifier")));
    unsigned int v43 = [v41 containsObject:v42];

    if (v54)
    {
    }

    else
    {
    }

    if ((v43 & 1) == 0)
    {
      uint64_t v44 = sub_1001704C4();
      unint64_t v45 = (os_log_s *)objc_claimAutoreleasedReturnValue(v44);
      if (os_log_type_enabled(v45, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        unint64_t v58 = v31;
        _os_log_impl( (void *)&_mh_execute_header,  v45,  OS_LOG_TYPE_DEFAULT,  "didReceiveDataBlob adding as active-participant, csdConversationParticipant: %@",  buf,  0xCu);
      }

      -[CSDConversation addActiveParticipant:](self, "addActiveParticipant:", v31);
      goto LABEL_33;
    }

    goto LABEL_29;
  }

  char v22 = sub_1001704C4();
  uint64_t v20 = (os_log_s *)objc_claimAutoreleasedReturnValue(v22);
  if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
  {
    id v23 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s participantURI](v8, "participantURI"));
    int v24 = TULoggableStringForHandle();
    uint64_t v25 = (os_log_s *)objc_claimAutoreleasedReturnValue(v24);
    *(_DWORD *)buf = 138412290;
    unint64_t v58 = v25;
    _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEFAULT,  "[WARN] didReceiveDataBlob not processing because unable to create handle from URI: %@",  buf,  0xCu);
  }

  unsigned int v38 = (void *)objc_claimAutoreleasedReturnValue(-[CSDProviderCall featureFlags](self, "featureFlags"));
  if ([v38 conversationHandoffEnabled])
  {
    uint64_t v39 = (void *)objc_claimAutoreleasedReturnValue([v4 participantAssociation]);

    if (v39)
    {
      unint64_t v40 = (void *)objc_claimAutoreleasedReturnValue([v4 participantAssociation]);
      char v41 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedLongLong:]( NSNumber,  "numberWithUnsignedLongLong:",  [v40 identifier]));
      [v14 setAssociationIdentifier:v41];

      char v42 = (void *)objc_claimAutoreleasedReturnValue([v4 participantAssociation]);
      unsigned int v43 = (void *)objc_claimAutoreleasedReturnValue([v42 avcIdentifier]);
      [v14 setAssociationAVCIdentifier:v43];

      -[CSDCall setStartAsHandoff:](self, "setStartAsHandoff:", 1LL);
    }
  }

  else
  {
  }

  uint64_t v44 = (void *)objc_claimAutoreleasedReturnValue([v4 invitationPreferences]);
  unint64_t v45 = [v44 count];

  if (v45)
  {
    char v46 = sub_1001704C4();
    char v47 = (os_log_s *)objc_claimAutoreleasedReturnValue(v46);
    if (os_log_type_enabled(v47, OS_LOG_TYPE_DEFAULT))
    {
      unsigned int v48 = (void *)objc_claimAutoreleasedReturnValue([v4 invitationPreferences]);
      *(_DWORD *)buf = 138412290;
      char v52 = v48;
      _os_log_impl( (void *)&_mh_execute_header,  v47,  OS_LOG_TYPE_DEFAULT,  "Join request specifies invitation preferences: %@",  buf,  0xCu);
    }

    uint64_t v49 = (void *)objc_claimAutoreleasedReturnValue([v4 notificationStylesByHandleType]);
    [v14 setNotificationStylesByHandleType:v49];
  }

  [v7 performCallAction:v14 forCall:self];
  -[CSDProviderCall setUplinkMuted:](self, "setUplinkMuted:", [v4 isUplinkMuted]);
  -[CSDProviderCall setIsSendingVideo:](self, "setIsSendingVideo:", [v4 isVideoEnabled]);
  -[CSDCall propertiesChanged](self, "propertiesChanged");
}

      BOOL v9 = v113;
      if (v118)
      {
        uint64_t v44 = sub_1001704C4();
        unint64_t v45 = (os_log_s *)objc_claimAutoreleasedReturnValue(v44);
        char v8 = v114;
        if (os_log_type_enabled(v45, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412290;
          v144 = (unint64_t)v118;
          _os_log_impl( (void *)&_mh_execute_header,  v45,  OS_LOG_TYPE_DEFAULT,  "Found participant for update message: %@",  buf,  0xCu);
        }

        unint64_t v117 = (const __CFString *)[v118 audioVideoMode];
        char v46 = (int)[v17 avMode];
        char v47 = (const __CFString *)[v118 presentationMode];
        unsigned int v48 = v47;
        uint64_t v49 = v119;
        if (v117 == (const __CFString *)v46)
        {
          unint64_t v50 = sub_1001704C4();
          char v51 = (os_log_s *)objc_claimAutoreleasedReturnValue(v50);
          char v52 = os_log_type_enabled(v51, OS_LOG_TYPE_DEFAULT);
          if (v47 == v48)
          {
            if (v52)
            {
              *(_DWORD *)buf = 138412546;
              v144 = (unint64_t)v118;
              v145 = 2048;
              v146 = v117;
              _os_log_impl( (void *)&_mh_execute_header,  v51,  OS_LOG_TYPE_DEFAULT,  "Participant %@ is already in audioVideoMode: %ld... Not handling update!",  buf,  0x16u);
            }

            BOOL v9 = v113;
LABEL_102:

            goto LABEL_103;
          }

          unint64_t v112 = v17;
          uint64_t v116 = v10;
          if (v52)
          {
            *(_DWORD *)buf = 138412802;
            v144 = (unint64_t)v118;
            v145 = 2048;
            v146 = v48;
            v147 = 2048;
            v148 = (unint64_t)v47;
            _os_log_impl( (void *)&_mh_execute_header,  v51,  OS_LOG_TYPE_DEFAULT,  "Update presentationMode for participant %@ desiredPresentationMode:%lu oldPresentationMode:%lu",  buf,  0x20u);
          }

          unsigned int v110 = v19;

          unsigned int v71 = (void *)objc_claimAutoreleasedReturnValue([v118 tuConversationParticipant]);
          [v114 setParticipantAudioVideoMode:v117 presentationMode:v48 forParticipant:v71];
        }

        else
        {
          unint64_t v54 = (void *)objc_claimAutoreleasedReturnValue([v118 tuConversationParticipant]);
          [v114 setParticipantAudioVideoMode:v46 presentationMode:v48 forParticipant:v54];

          char v55 = (void *)objc_claimAutoreleasedReturnValue([v118 tuConversationParticipant]);
          char v56 = (void *)objc_claimAutoreleasedReturnValue( +[IDSDestination destinationWithTUConversationParticipant:]( &OBJC_CLASS___IDSDestination,  "destinationWithTUConversationParticipant:",  v55));
          -[os_log_s addObject:](v19, "addObject:", v56);

          unsigned int v57 = sub_1001704C4();
          unint64_t v58 = (os_log_s *)objc_claimAutoreleasedReturnValue(v57);
          if (os_log_type_enabled(v58, OS_LOG_TYPE_DEFAULT))
          {
            char v59 = (void *)objc_claimAutoreleasedReturnValue([v114 UUID]);
            char v60 = (const __CFString *)[v114 avMode];
            *(_DWORD *)buf = 138413058;
            v144 = (unint64_t)v59;
            v145 = 2048;
            v146 = v60;
            v147 = 2048;
            v148 = v46;
            v149 = 2048;
            v150 = v48;
            _os_log_impl( (void *)&_mh_execute_header,  v58,  OS_LOG_TYPE_DEFAULT,  "Conversation UUID: %@ has avMode: %lu and the desiredAudioVideoMode is %lu desiredPresentationMode is %lu",  buf,  0x2Au);
          }

          uint64_t v116 = v10;
          char v109 = v19;
          unint64_t v112 = v17;
          if (![v114 avMode] && (_DWORD)v46)
          {
            unsigned int v115 = v46;
            unsigned int v61 = (uint64_t (**)(void))objc_claimAutoreleasedReturnValue(-[CSDConversationManager activeLocalHandles](v119, "activeLocalHandles"));
            uint64_t v62 = v61[2]();
            unint64_t v63 = (void *)objc_claimAutoreleasedReturnValue(v62);
            char v64 = v10;
            char v65 = [v63 containsObject:v10];

            if ([v114 state] == (id)3) {
              unsigned int v66 = 0;
            }
            else {
              unsigned int v66 = v65;
            }
            if (objc_msgSend(v113, "invitationPreferencesCount", v19))
            {
              uint64_t v67 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversationManager invitationResolver](v119, "invitationResolver"));
              unint64_t v68 = (void *)objc_claimAutoreleasedReturnValue([v114 tuConversation]);
              char v69 = (void *)objc_claimAutoreleasedReturnValue([v113 tuInvitationPreferences]);
              char v70 = [v67 shouldShowInvitationRingingUIForConversation:v68 handle:v64 invitationMessagePreferences:v69] ^ 1;
            }

            else
            {
              char v70 = 1;
            }

            uint64_t v72 = sub_1001704C4();
            unint64_t v73 = (os_log_s *)objc_claimAutoreleasedReturnValue(v72);
            char v46 = v115;
            if (os_log_type_enabled(v73, OS_LOG_TYPE_DEFAULT))
            {
              char v74 = @"YES";
              if (v70) {
                char v75 = @"NO";
              }
              else {
                char v75 = @"YES";
              }
              if (v66) {
                char v74 = @"NO";
              }
              *(_DWORD *)buf = 138412546;
              v144 = (unint64_t)v75;
              v145 = 2112;
              v146 = v74;
              _os_log_impl( (void *)&_mh_execute_header,  v73,  OS_LOG_TYPE_DEFAULT,  "Evaluating if we should notify delegates shouldShowInvitationRingingUI: %@ shouldInvokeDelegateBasedOnRemoteHandle: %@",  buf,  0x16u);
            }

            uint64_t v49 = v119;
            char v8 = v114;
            if (((v70 | v66) & 1) == 0)
            {
              unsigned int v76 = sub_1001704C4();
              unint64_t v77 = (os_log_s *)objc_claimAutoreleasedReturnValue(v76);
              if (os_log_type_enabled(v77, OS_LOG_TYPE_DEFAULT))
              {
                *(_DWORD *)buf = 138412290;
                v144 = (unint64_t)v118;
                _os_log_impl( (void *)&_mh_execute_header,  v77,  OS_LOG_TYPE_DEFAULT,  "Triggering a ringing call for participant update from: %@",  buf,  0xCu);
              }

              char v78 = (void *)objc_claimAutoreleasedReturnValue([v114 tuConversation]);
              BOOL v133 = 0u;
              uint64_t v134 = 0u;
              v135 = 0u;
              v136 = 0u;
              char v79 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversationManager delegateToQueue](v119, "delegateToQueue"));
              unsigned int v80 = [v79 countByEnumeratingWithState:&v133 objects:v142 count:16];
              if (v80)
              {
                uint64_t v81 = v80;
                unint64_t v82 = *(void *)v134;
                do
                {
                  for (j = 0LL; j != v81; j = (char *)j + 1)
                  {
                    if (*(void *)v134 != v82) {
                      objc_enumerationMutation(v79);
                    }
                    char v84 = *(void *)(*((void *)&v133 + 1) + 8LL * (void)j);
                    if ((objc_opt_respondsToSelector( v84,  "conversationManager:avModeChanged:toAVMode:forParticipantWithHandle:forConversation:") & 1) != 0)
                    {
                      unsigned int v85 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversationManager delegateToQueue](v119, "delegateToQueue"));
                      uint64_t v86 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v85 objectForKey:v84]);

                      block[0] = _NSConcreteStackBlock;
                      block[1] = 3221225472LL;
                      block[2] = sub_1000EFEAC;
                      block[3] = &unk_1003D9E98;
                      block[4] = v84;
                      char v128 = v78;
                      unsigned int v129 = v119;
                      char v131 = v117;
                      uint64_t v132 = v115;
                      unint64_t v130 = v116;
                      dispatch_async(v86, block);
                    }
                  }

                  uint64_t v81 = [v79 countByEnumeratingWithState:&v133 objects:v142 count:16];
                }

                while (v81);
              }

              char v8 = v114;
              char v46 = v115;
              uint64_t v49 = v119;
            }
          }

          if (objc_msgSend(v8, "avMode", v109))
          {
            if (!(_DWORD)v46 && [v8 state] == (id)3)
            {
              unint64_t v87 = (void *)objc_claimAutoreleasedReturnValue([v8 remoteMembers]);
              char v88 = [v87 count];

              if (v88 == (id)1)
              {
                uint64_t v89 = sub_1001704C4();
                v90 = (os_log_s *)objc_claimAutoreleasedReturnValue(v89);
                if (os_log_type_enabled(v90, OS_LOG_TYPE_DEFAULT))
                {
                  *(_WORD *)buf = 0;
                  _os_log_impl( (void *)&_mh_execute_header,  v90,  OS_LOG_TYPE_DEFAULT,  "Received participant update message to downgrade, but we're in a U+1 call so we should also downgrade!",  buf,  2u);
                }

                char v91 = (void *)objc_claimAutoreleasedReturnValue([v8 UUID]);
                -[CSDConversationManager setLocalParticipantAudioVideoMode:forConversationUUID:]( v49,  "setLocalParticipantAudioVideoMode:forConversationUUID:",  0LL,  v91);
              }
            }
          }

          if (![v8 state] && (unint64_t)objc_msgSend(v8, "avMode") < v46)
          {
            unsigned int v92 = (uint64_t (**)(void, void))objc_claimAutoreleasedReturnValue( -[CSDConversationManager activeLocalHandlesForProvider]( v49,  "activeLocalHandlesForProvider"));
            uint64_t v93 = (void *)objc_claimAutoreleasedReturnValue([v8 provider]);
            unint64_t v94 = ((uint64_t (**)(void, void *))v92)[2](v92, v93);
            char v95 = (void *)objc_claimAutoreleasedReturnValue(v94);
            char v96 = [v95 containsObject:v116];

            if (v96)
            {
              unsigned int v97 = sub_1001704C4();
              uint64_t v98 = (os_log_s *)objc_claimAutoreleasedReturnValue(v97);
              if (os_log_type_enabled(v98, OS_LOG_TYPE_DEFAULT))
              {
                *(_DWORD *)buf = 134349056;
                v144 = v46;
                _os_log_impl( (void *)&_mh_execute_header,  v98,  OS_LOG_TYPE_DEFAULT,  "Changing conversation AVMode to %{public}lu since conversation is waiting",  buf,  0xCu);
              }

              [v8 setAvMode:v46];
            }
          }

          [v8 setRemoteParticipantType:(_DWORD)v46 != 0 participant:v118];
          [v8 updateOneToOneModeForParticipantUpdateType:(_DWORD)v46 != 0 participant:v118];
        }

        unint64_t v99 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversationManager persistenceController](v49, "persistenceController", v110));
        [v99 updateConversation:v8];

        char v100 = (void *)objc_claimAutoreleasedReturnValue([v8 tuConversation]);
        char v123 = 0u;
        unsigned int v124 = 0u;
        uint64_t v125 = 0u;
        unint64_t v126 = 0u;
        char v101 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversationManager delegateToQueue](v49, "delegateToQueue"));
        unsigned int v102 = [v101 countByEnumeratingWithState:&v123 objects:v141 count:16];
        if (v102)
        {
          unint64_t v103 = v102;
          char v104 = *(void *)v124;
          do
          {
            for (k = 0LL; k != v103; k = (char *)k + 1)
            {
              if (*(void *)v124 != v104) {
                objc_enumerationMutation(v101);
              }
              unsigned int v106 = *(void *)(*((void *)&v123 + 1) + 8LL * (void)k);
              if ((objc_opt_respondsToSelector(v106, "conversationManager:conversationChanged:") & 1) != 0)
              {
                unint64_t v107 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversationManager delegateToQueue](v119, "delegateToQueue"));
                char v108 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v107 objectForKey:v106]);

                v120[0] = _NSConcreteStackBlock;
                v120[1] = 3221225472LL;
                v120[2] = sub_1000EFFF4;
                v120[3] = &unk_1003D7828;
                v120[4] = v106;
                unint64_t v121 = v100;
                char v122 = v119;
                dispatch_async(v108, v120);
              }
            }

            unint64_t v103 = [v101 countByEnumeratingWithState:&v123 objects:v141 count:16];
          }

          while (v103);
        }

        BOOL v9 = v113;
        char v8 = v114;
        int v10 = v116;
        unsigned int v19 = v111;
        int v17 = v112;
        goto LABEL_102;
      }
    }

    else
    {
    }

    unsigned int v53 = sub_1001704C4();
    char v118 = (id)objc_claimAutoreleasedReturnValue(v53);
    char v8 = v114;
    if (os_log_type_enabled((os_log_t)v118, OS_LOG_TYPE_ERROR)) {
      sub_1002B60FC();
    }
    goto LABEL_102;
  }

  unint64_t v21 = sub_1001704C4();
  unsigned int v19 = (os_log_s *)objc_claimAutoreleasedReturnValue(v21);
  if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    v144 = (unint64_t)v9;
    uint64_t v20 = "[WARN] Ignoring message %@ because a participant was not specified.";
    goto LABEL_11;
  }

      goto LABEL_50;
    }

    char v31 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversationManager deviceSupport](self, "deviceSupport"));
    char v32 = [v31 isGreenTea];

    if (!v32)
    {
LABEL_28:
      switch((unint64_t)v27)
      {
        case 0uLL:
          uint64_t v49 = sub_1001704C4();
          char v47 = (os_log_s *)objc_claimAutoreleasedReturnValue(v49);
          if (!os_log_type_enabled(v47, OS_LOG_TYPE_DEFAULT)) {
            goto LABEL_32;
          }
          *(_WORD *)buf = 0;
          unsigned int v48 = "[WARN] Received unknown participant update message";
          goto LABEL_31;
        case 1uLL:
          if (v7) {
            unint64_t v50 = (void *)objc_claimAutoreleasedReturnValue([v7 senderCorrelationIdentifier]);
          }
          else {
            unint64_t v50 = 0LL;
          }
          unsigned int v53 = (os_log_s *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "originalGUID", v60));
          if (v53
            && (unint64_t v54 = (void *)objc_claimAutoreleasedReturnValue( -[CSDConversationManager incomingPendingMessageGUIDs]( self,  "incomingPendingMessageGUIDs")),  v55 = [v54 containsObject:v53],  v54,  v55))
          {
            char v56 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversationManager incomingPendingMessageGUIDs](self, "incomingPendingMessageGUIDs"));
            [v56 removeObject:v53];

            unsigned int v57 = sub_1001704C4();
            unint64_t v58 = (os_log_s *)objc_claimAutoreleasedReturnValue(v57);
            if (os_log_type_enabled(v58, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)buf = 138412290;
              char v64 = v53;
              _os_log_impl( (void *)&_mh_execute_header,  v58,  OS_LOG_TYPE_DEFAULT,  "fromPendingMessage, originalGUID: %@",  buf,  0xCu);
            }

            char v59 = 1LL;
          }

          else
          {
            char v59 = 0LL;
          }

          -[CSDConversationManager processJoinUpdate:fromHandle:senderCorrelationIdentifier:isFromPendingMessage:]( self,  "processJoinUpdate:fromHandle:senderCorrelationIdentifier:isFromPendingMessage:",  v6,  v30,  v50,  v59);

          goto LABEL_49;
        case 2uLL:
          char v51 = [v6 participantIdentifier];
          unint64_t v50 = (void *)objc_claimAutoreleasedReturnValue([v6 groupUUID]);
          -[CSDConversationManager handleParticipantWithIdentifier:leftConversationWithGroupUUID:fromHandle:withGroupSessionUpdate:]( self,  "handleParticipantWithIdentifier:leftConversationWithGroupUUID:fromHandle:withGroupSessionUpdate:",  v51,  v50,  v30,  v6);
LABEL_49:

          break;
        case 3uLL:
          -[CSDConversationManager processUpdateMembersUpdate:fromHandle:]( self,  "processUpdateMembersUpdate:fromHandle:",  v6,  v30);
          break;
        case 4uLL:
          -[CSDConversationManager processParticipantDataUpdate:fromHandle:]( self,  "processParticipantDataUpdate:fromHandle:",  v6,  v30);
          break;
        default:
          break;
      }

  sub_1001B2428();
  unsigned int v38 = v61[2];
  if (v38)
  {
    uint64_t v39 = v61 + 4;
    swift_retain(v61);
    while (1)
    {
      sub_1001B2450();
      unint64_t v40 = v63[24];
      sub_1001B2430();
      if (v40 == 1) {
        break;
      }
      v39 += 6;
      if (!--v38)
      {
        sub_1001B2444();
        goto LABEL_38;
      }
    }

    sub_1001B2444();
    char v41 = 1;
  }

  else
  {
    swift_release(v61);
LABEL_38:
    char v41 = 0;
  }

  char v42 = sub_1001704C4();
  unsigned int v43 = sub_1001AFF14((uint64_t *)&unk_100447E30);
  uint64_t v44 = swift_allocObject(v43, 192LL, 7LL);
  *(_OWORD *)(v44 + 16) = xmmword_10037B140;
  unint64_t v45 = [a1 identifier];
  char v46 = static String._unconditionallyBridgeFromObjectiveC(_:)(v45);
  unsigned int v48 = v47;

  *(void *)(v44 + 56) = &type metadata for String;
  uint64_t v49 = sub_1001B2330();
  *(void *)(v44 + 64) = v49;
  *(void *)(v44 + 32) = v46;
  *(void *)(v44 + 40) = v48;
  LOBYTE(v62) = v26;
  unint64_t v50 = sub_1001B2438();
  *(void *)(v44 + 96) = &type metadata for String;
  *(void *)(v44 + 104) = v49;
  *(void *)(v44 + 72) = v50;
  *(void *)(v44 + 80) = v51;
  LOBYTE(v62) = v41;
  char v52 = sub_1001B2438();
  *(void *)(v44 + 136) = &type metadata for String;
  *(void *)(v44 + 144) = v49;
  *(void *)(v44 + 112) = v52;
  *(void *)(v44 + 120) = v53;
  unint64_t v54 = sub_10023B2C4((uint64_t)v14);
  char v56 = v55;
  unsigned int v57 = sub_1001B2428();
  *(void *)(v44 + 176) = &type metadata for String;
  *(void *)(v44 + 184) = v49;
  *(void *)(v44 + 152) = v54;
  *(void *)(v44 + 160) = v56;
  unint64_t v58 = static os_log_type_t.default.getter(v57);
  os_log(_:dso:log:type:_:)( "Validating intent for call source: %@ callSourceHasReasonableUserIntent: %@ isUserIntentConfident: %@ (%@)",  106LL,  2LL,  &_mh_execute_header,  v42,  v58,  v44);

  swift_bridgeObjectRelease(v44);
  return v26;
}

    __break(1u);
    return result;
  }

  sub_1001A9670((uint64_t)v16, 1LL, 1LL, v17);
LABEL_17:
  sub_1001C6CE4((uint64_t)v16, (uint64_t *)&unk_10044A400);
LABEL_20:
  unint64_t v58 = v104;
  char v59 = (void *)swift_bridgeObjectRetain(v104);
  sub_1002A7838(v59);
  unsigned int v61 = v60;
  swift_bridgeObjectRelease(v58);
  sub_1002A7AFC(v48);
  unint64_t v63 = v62;
  char v64 = objc_allocWithZone(&OBJC_CLASS___RTCReporting);
  char v65 = sub_1001C6980(v61, v63, (uint64_t)_swiftEmptyArrayStorage);
  unsigned int v66 = sub_1001705A4();
  uint64_t v67 = sub_1001AFF14((uint64_t *)&unk_100447E30);
  if (v65)
  {
    unint64_t v68 = swift_allocObject(v67, 152LL, 7LL);
    *(_OWORD *)(v68 + 16) = xmmword_10037B6E0;
    v100[0] = v65;
    char v69 = sub_1001B4B94(0LL, &qword_100447B50, &OBJC_CLASS___RTCReporting_ptr);
    unint64_t v99 = (void (**)(void, char *, uint64_t))v65;
    char v70 = String.init<A>(reflecting:)(v100, v69);
    uint64_t v72 = v71;
    *(void *)(v68 + 56) = &type metadata for String;
    unint64_t v73 = sub_1001B2330();
    *(void *)(v68 + 64) = v73;
    *(void *)(v68 + 32) = v70;
    *(void *)(v68 + 40) = v72;
    v100[0] = v58;
    char v74 = sub_1001AFF14(&qword_100447B60);
    char v75 = String.init<A>(reflecting:)(v100, v74);
    *(void *)(v68 + 96) = &type metadata for String;
    *(void *)(v68 + 104) = v73;
    *(void *)(v68 + 72) = v75;
    *(void *)(v68 + 80) = v76;
    v100[0] = v48;
    unint64_t v77 = sub_1001AFF14((uint64_t *)&unk_100447B90);
    char v78 = String.init<A>(reflecting:)(v100, v77);
    *(void *)(v68 + 136) = &type metadata for String;
    *(void *)(v68 + 144) = v73;
    *(void *)(v68 + 112) = v78;
    *(void *)(v68 + 120) = v79;
    unsigned int v80 = static os_log_type_t.default.getter(v78);
    os_log(_:dso:log:type:_:)( "Created reporting session %@ with sessionInfo: %@, userInfo: %@",  63LL,  2LL,  &_mh_execute_header,  v66,  v80,  v68);

    swift_bridgeObjectRelease(v68);
    [v99 startConfigurationWithCompletionHandler:0];
  }

  else
  {
    uint64_t v81 = swift_allocObject(v67, 112LL, 7LL);
    *(_OWORD *)(v81 + 16) = v91;
    v100[0] = v58;
    unint64_t v82 = sub_1001AFF14(&qword_100447B60);
    char v83 = String.init<A>(reflecting:)(v100, v82);
    unsigned int v85 = v84;
    *(void *)(v81 + 56) = &type metadata for String;
    uint64_t v86 = sub_1001B2330();
    *(void *)(v81 + 64) = v86;
    *(void *)(v81 + 32) = v83;
    *(void *)(v81 + 40) = v85;
    v100[0] = v48;
    unint64_t v87 = sub_1001AFF14((uint64_t *)&unk_100447B90);
    char v88 = String.init<A>(reflecting:)(v100, v87);
    *(void *)(v81 + 96) = &type metadata for String;
    *(void *)(v81 + 104) = v86;
    *(void *)(v81 + 72) = v88;
    *(void *)(v81 + 80) = v89;
    v90 = static os_log_type_t.default.getter(v88);
    os_log(_:dso:log:type:_:)( "Failed to create reporting session with sessionInfo: %@, userInfo: %@",  69LL,  2LL,  &_mh_execute_header,  v66,  v90,  v81);

    swift_bridgeObjectRelease(v81);
  }

  return (uint64_t)v65;
}

    uint64_t v14 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v16 << 6);
    goto LABEL_33;
  }

  __break(1u);
}

    char v70 = (v41 - 1) & v41;
    unsigned int v33 = __clz(__rbit64(v41)) + (v34 << 6);
    goto LABEL_33;
  }

  __break(1u);
}

    int v10 = (v23 - 1) & v23;
    char v16 = __clz(__rbit64(v23)) + (v9 << 6);
    goto LABEL_33;
  }

  __break(1u);
}

  __break(1u);
  return result;
}

    id v11 = (v23 - 1) & v23;
    int v17 = __clz(__rbit64(v23)) + (v10 << 6);
    goto LABEL_33;
  }

  __break(1u);
}

            swift_unknownObjectRelease(v10);
            swift_bridgeObjectRelease(v13);
            goto LABEL_33;
          }

          int v17 = 1LL;
        }

    swift_once(&qword_100446908, sub_100258908);
    goto LABEL_10;
  }

  unsigned int v13 = Strong;
  if ([Strong state] != (id)3)
  {
    if (qword_100446908 != -1) {
      swift_once(&qword_100446908, sub_100258908);
    }
    char v42 = sub_1001B0E98();
    sub_1001B0D98(v42, (uint64_t)qword_100454138);
    unsigned int v43 = v2;
    sub_10021126C();
    uint64_t v44 = sub_1001B105C();
    if (sub_1001BB5B0(v44))
    {
      unint64_t v45 = sub_1001B0E78(12LL);
      char v78 = sub_1001B0E78(32LL);
      sub_1002111D8(4.8149e-34);
      char v46 = (id)v11;
      char v47 = sub_100211230();
      uint64_t v49 = v48;
      unint64_t v50 = sub_100211228(v47, v48);
      sub_1002111A8(v50);

      swift_bridgeObjectRelease(v49);
      sub_1002111C4( (void *)&_mh_execute_header,  v51,  v52,  "%s Conversation state is not joined, not executing deferred requests.");
      sub_1002111F8();
      sub_1001B0E60(v78);
      sub_1001B0E60(v45);
    }

    else
    {
    }

    char v55 = sub_100210F40();
    char v56 = sub_1001BB4C8((uint64_t)&unk_1003E1588, v55);
    *unsigned int v57 = 0;
    goto LABEL_30;
  }

  uint64_t v14 = [v13 localCSDParticipant];
  if (!v14)
  {
    if (qword_100446908 != -1) {
      swift_once(&qword_100446908, sub_100258908);
    }
    unint64_t v58 = sub_1001B0E98();
    sub_1001B0D98(v58, (uint64_t)qword_100454138);
    char v59 = v2;
    sub_10021126C();
    char v60 = sub_1001B105C();
    if (sub_1001BB5B0(v60))
    {
      unsigned int v61 = sub_1001B0E78(12LL);
      char v78 = sub_1001B0E78(32LL);
      sub_1002111D8(4.8149e-34);
      uint64_t v62 = (id)v11;
      unint64_t v63 = sub_100211230();
      char v65 = v64;
      unsigned int v66 = sub_100211228(v63, v64);
      sub_1002111A8(v66);

      swift_bridgeObjectRelease(v65);
      sub_1002111C4( (void *)&_mh_execute_header,  v67,  v68,  "%s Conversation state is joined but has no localParticipant.");
      sub_1002111F8();
      sub_1001B0E60(v78);
      sub_1001B0E60(v61);
    }

    else
    {
    }

    uint64_t v72 = sub_100210F40();
    char v56 = sub_1001BB4C8((uint64_t)&unk_1003E1588, v72);
    *unint64_t v73 = 1;
LABEL_30:
    swift_willThrow(v56);
    swift_unknownObjectRelease(v13);
    return;
  }

  unint64_t v15 = v14;
  if (qword_100446908 != -1) {
    swift_once(&qword_100446908, sub_100258908);
  }
  char v16 = sub_1001B0E98();
  int v17 = (os_log_s *)sub_1001B0D98(v16, (uint64_t)qword_100454138);
  char v18 = v2;
  unsigned int v19 = v17;
  Logger.logObject.getter(v18, v20, v21);
  char v22 = sub_1001B105C();
  if (os_log_type_enabled(v17, v22))
  {
    id v23 = (uint8_t *)sub_1001B0E78(12LL);
    char v74 = sub_1001B0E78(32LL);
    char v78 = v74;
    *(_DWORD *)id v23 = 136315138;
    unsigned int v76 = (uint64_t)v18;
    int v24 = type metadata accessor for ConversationLocalParticipantBlobTracker();
    char v75 = a1;
    uint64_t v25 = v18;
    uint64_t v26 = String.init<A>(reflecting:)(&v76, v24);
    unsigned int v28 = v27;
    unsigned int v76 = sub_100211228(v26, v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v76, &v77, v23 + 4, v23 + 12);

    a1 = v75;
    swift_bridgeObjectRelease(v28);
    _os_log_impl((void *)&_mh_execute_header, v19, v22, "%s Local participant blob will be updated", v23, 0xCu);
    swift_arrayDestroy(v74, 1LL);
    sub_1001B0E60(v74);
    sub_1001B0E60((uint64_t)v23);
  }

  else
  {
  }

  char v69 = (void *)swift_unknownObjectWeakLoadStrong(&v18[OBJC_IVAR___CSDConversationLocalParticipantBlobTracker_idsGroupSession]);
  char v70 = v69;
  unsigned int v71 = &selRef_sendLocalParticipant_;
  if ((a1 & 1) == 0) {
    unsigned int v71 = &selRef_updateLocalParticipantInfo_;
  }
  objc_msgSend(v69, *v71, v15);

  swift_unknownObjectRelease(v13);
}

    id v11 = (v23 - 1) & v23;
    int v17 = __clz(__rbit64(v23)) + (v10 << 6);
    goto LABEL_33;
  }

  __break(1u);
}

  __break(1u);
  return result;
}

              swift_unknownObjectRelease(a5);
              swift_bridgeObjectRelease(v28);
              goto LABEL_33;
            }

            char v32 = 2LL;
          }
        }

LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
}

            sub_1001B4B8C(v2);
            return;
          }
        }
      }
    }

LABEL_23:
  association = self->_association;
  id v11 = *((void *)v5 + 2);
  if (association)
  {
    if (!v11) {
      goto LABEL_38;
    }
    -[CSDMessagingConversationParticipantAssociation mergeFrom:](association, "mergeFrom:");
  }

  else
  {
    if (!v11) {
      goto LABEL_38;
    }
    -[CSDMessagingConversationParticipant setAssociation:](self, "setAssociation:");
  }

  unsigned int v5 = v14;
LABEL_38:
  char v12 = *((_DWORD *)v5 + 26);
  if ((v12 & 0x40000) != 0)
  {
    self->_isUPlusNDowngradeAvailable = *((_BYTE *)v5 + 97);
    *(_DWORD *)&self->_has |= 0x40000u;
    char v12 = *((_DWORD *)v5 + 26);
    if ((v12 & 2) == 0)
    {
LABEL_40:
      if ((v12 & 0x400000) == 0) {
        goto LABEL_41;
      }
      goto LABEL_58;
    }
  }

  else if ((v12 & 2) == 0)
  {
    goto LABEL_40;
  }

  self->_avMode = *((_DWORD *)v5 + 6);
  *(_DWORD *)&self->_has |= 2u;
  char v12 = *((_DWORD *)v5 + 26);
  if ((v12 & 0x400000) == 0)
  {
LABEL_41:
    if ((v12 & 0x100000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_42;
  }
}

  unsigned int v28 = (void *)objc_claimAutoreleasedReturnValue(-[CSDIDSGroupSessionProvider session](self, "session"));
  uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue(-[CSDIDSGroupSessionProvider queue](self, "queue"));
  [v28 setDelegate:self queue:v29];
}

  char v31 = -[NSData copyWithZone:](self->_dummyPayload, "copyWithZone:", a3);
  char v32 = (void *)v6[10];
  v6[10] = v31;

  unsigned int v33 = self->_has;
  if ((*(_BYTE *)&v33 & 1) != 0)
  {
    v6[1] = *(void *)&self->_hostCallCreationTime;
    *((_DWORD *)v6 + 100) |= 1u;
    unsigned int v33 = self->_has;
    if ((*(_BYTE *)&v33 & 2) == 0)
    {
LABEL_25:
      if ((*(_DWORD *)&v33 & 0x80000) == 0) {
        goto LABEL_26;
      }
      goto LABEL_124;
    }
  }

  else if ((*(_BYTE *)&v33 & 2) == 0)
  {
    goto LABEL_25;
  }

  _DWORD v6[2] = *(void *)&self->_messageSendTime;
  *((_DWORD *)v6 + 100) |= 2u;
  unsigned int v33 = self->_has;
  if ((*(_DWORD *)&v33 & 0x80000) == 0)
  {
LABEL_26:
    if ((*(_WORD *)&v33 & 0x8000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_125;
  }

  id v23 = 0LL;
  if ((*(_BYTE *)&v4 & 1) == 0) {
    goto LABEL_24;
  }
LABEL_19:
  char v22 = 2654435761LL * self->_sharePlayProtocolVersion;
  if ((*(_BYTE *)&v4 & 0x10) != 0)
  {
LABEL_20:
    unint64_t v21 = 2654435761LL * self->_isGFTDowngradeToOneToOneAvailable;
    goto LABEL_26;
  }

    uint64_t v25 = v66;
LABEL_24:
    [v25 addObjectsFromArray:v12];
    goto LABEL_25;
  }

  unint64_t v15 = sub_1001704C4();
  char v16 = (os_log_s *)objc_claimAutoreleasedReturnValue(v15);
  if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    char v84 = v8;
    _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "   ... sending calls were found so adding them to list of calls to disconnect: %@",  buf,  0xCu);
  }

  [v65 addObjectsFromArray:v8];
  if (![v10 count] && !objc_msgSend(v14, "count"))
  {
    uint64_t v26 = sub_1001704C4();
    char v22 = (os_log_s *)objc_claimAutoreleasedReturnValue(v26);
    if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      char v84 = v12;
      goto LABEL_22;
    }

    goto LABEL_23;
  }

  int v17 = sub_1001704C4();
  char v18 = (os_log_s *)objc_claimAutoreleasedReturnValue(v17);
  if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412546;
    char v84 = v10;
    unsigned int v85 = 2112;
    uint64_t v86 = v14;
    _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEFAULT,  "   ... and not unholding held calls because there are active calls %@ or ringing calls %@",  buf,  0x16u);
  }

LABEL_25:
  char v56 = v14;
  unsigned int v57 = v12;
  unint64_t v58 = v10;
  char v78 = 0u;
  char v79 = 0u;
  unsigned int v76 = 0u;
  unint64_t v77 = 0u;
  obj = [v65 copy];
  char v27 = [obj countByEnumeratingWithState:&v76 objects:v82 count:16];
  if (v27)
  {
    unsigned int v28 = v27;
    uint64_t v29 = *(void *)v77;
    char v60 = *(void *)v77;
    do
    {
      unint64_t v30 = 0LL;
      unsigned int v61 = v28;
      do
      {
        if (*(void *)v77 != v29) {
          objc_enumerationMutation(obj);
        }
        char v31 = *(void **)(*((void *)&v76 + 1) + 8LL * (void)v30);
        char v32 = (void *)objc_claimAutoreleasedReturnValue([v31 model]);
        unsigned int v33 = [v32 supportsUnambiguousMultiPartyState];

        if ((v33 & 1) == 0)
        {
          unint64_t v63 = v30;
          char v74 = 0u;
          char v75 = 0u;
          uint64_t v72 = 0u;
          unint64_t v73 = 0u;
          uint64_t v67 = [v66 copy];
          uint64_t v34 = [v67 countByEnumeratingWithState:&v72 objects:v81 count:16];
          if (v34)
          {
            unint64_t v35 = v34;
            char v36 = *(void *)v73;
            do
            {
              for (i = 0LL; i != v35; i = (char *)i + 1)
              {
                if (*(void *)v73 != v36) {
                  objc_enumerationMutation(v67);
                }
                unsigned int v38 = *(void **)(*((void *)&v72 + 1) + 8LL * (void)i);
                uint64_t v39 = (void *)objc_claimAutoreleasedReturnValue([v38 provider]);
                unint64_t v40 = (void *)objc_claimAutoreleasedReturnValue([v39 identifier]);
                char v41 = (void *)objc_claimAutoreleasedReturnValue([v31 provider]);
                char v42 = (void *)objc_claimAutoreleasedReturnValue([v41 identifier]);
                unsigned int v43 = [v40 isEqualToString:v42];

                if (v43)
                {
                  uint64_t v44 = sub_1001704C4();
                  unint64_t v45 = (os_log_s *)objc_claimAutoreleasedReturnValue(v44);
                  if (os_log_type_enabled(v45, OS_LOG_TYPE_DEFAULT))
                  {
                    *(_DWORD *)buf = 138412546;
                    char v84 = v38;
                    unsigned int v85 = 2112;
                    uint64_t v86 = v31;
                    _os_log_impl( (void *)&_mh_execute_header,  v45,  OS_LOG_TYPE_DEFAULT,  "   ... and moving call %@ from call to unhold to call to disconnect because a disconnected call fr om the same provider doesn't support unambiguous multi-party state: %@",  buf,  0x16u);
                  }

                  [v65 addObject:v38];
                  [v66 removeObject:v38];
                }
              }

              unint64_t v35 = [v67 countByEnumeratingWithState:&v72 objects:v81 count:16];
            }

            while (v35);
          }

          uint64_t v29 = v60;
          unsigned int v28 = v61;
          unint64_t v30 = v63;
        }

        unint64_t v30 = (char *)v30 + 1;
      }

      while (v30 != v28);
      unsigned int v28 = [obj countByEnumeratingWithState:&v76 objects:v82 count:16];
    }

    while (v28);
  }

  char v46 = (void *)objc_claimAutoreleasedReturnValue([v65 allObjects]);
  -[CSDCallDataSourceMap addCalls:forIdentifier:](v64, "addCalls:forIdentifier:", v46, @"callsToDisconnect");

  char v47 = (void *)objc_claimAutoreleasedReturnValue([v66 allObjects]);
  -[CSDCallDataSourceMap addCalls:forIdentifier:](v64, "addCalls:forIdentifier:", v47, @"callsToUnhold");

  char v70 = 0u;
  unsigned int v71 = 0u;
  unint64_t v68 = 0u;
  char v69 = 0u;
  unsigned int v48 = (void *)objc_claimAutoreleasedReturnValue(-[CSDCallDataSourceMap dataSources](v64, "dataSources"));
  uint64_t v49 = [v48 countByEnumeratingWithState:&v68 objects:v80 count:16];
  if (v49)
  {
    unint64_t v50 = v49;
    char v51 = *(void *)v69;
    do
    {
      for (j = 0LL; j != v50; j = (char *)j + 1)
      {
        if (*(void *)v69 != v51) {
          objc_enumerationMutation(v48);
        }
        unsigned int v53 = *(void **)(*((void *)&v68 + 1) + 8LL * (void)j);
        unint64_t v54 = (void *)objc_claimAutoreleasedReturnValue( -[CSDCallDataSourceMap callsForDataSource:identifier:]( v64,  "callsForDataSource:identifier:",  v53,  @"callsToDisconnect"));
        char v55 = (void *)objc_claimAutoreleasedReturnValue( -[CSDCallDataSourceMap callsForDataSource:identifier:]( v64,  "callsForDataSource:identifier:",  v53,  @"callsToUnhold"));
        [v53 disconnectCalls:v54 whileHoldingCalls:&__NSArray0__struct andUnholdingCalls:v55 andUngroupingCalls:&__NSArray0__struct];
      }

      unint64_t v50 = [v48 countByEnumeratingWithState:&v68 objects:v80 count:16];
    }

    while (v50);
  }
}

    unsigned int v19 = 1;
  }

  else
  {
    uint64_t v26 = 0u;
    char v27 = 0u;
    int v24 = 0u;
    uint64_t v25 = 0u;
    int v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "invitedMemberHandles", 0));
    id v11 = -[os_log_s countByEnumeratingWithState:objects:count:]( v10,  "countByEnumeratingWithState:objects:count:",  &v24,  v28,  16LL);
    if (v11)
    {
      char v12 = v11;
      unsigned int v13 = *(void *)v25;
      while (2)
      {
        for (i = 0LL; i != v12; i = (char *)i + 1)
        {
          if (*(void *)v25 != v13) {
            objc_enumerationMutation(v10);
          }
          unint64_t v15 = *(void *)(*((void *)&v24 + 1) + 8LL * (void)i);
          char v16 = (void *)objc_claimAutoreleasedReturnValue( -[CSDAbstractFaceTimeConversationProviderDelegate conversationManager]( self,  "conversationManager"));
          LODWORD(v15) = [v16 isValidLocalHandle:v15];

          if ((_DWORD)v15)
          {
            uint64_t v20 = sub_1001704C4();
            unint64_t v21 = (os_log_s *)objc_claimAutoreleasedReturnValue(v20);
            if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
            {
              char v22 = @"NO";
              if (v5) {
                char v22 = @"YES";
              }
              *(_DWORD *)buf = 138412290;
              unint64_t v30 = v22;
              _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEFAULT,  "Link was created locally: %@ using valid local handle (YES)",  buf,  0xCu);
            }

            goto LABEL_23;
          }
        }

        char v12 = -[os_log_s countByEnumeratingWithState:objects:count:]( v10,  "countByEnumeratingWithState:objects:count:",  &v24,  v28,  16LL);
        if (v12) {
          continue;
        }
        break;
      }
    }

    int v17 = sub_1001704C4();
    int v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v17);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      char v18 = @"YES";
      if (!v5) {
        char v18 = @"NO";
      }
      *(_DWORD *)buf = 138412546;
      unint64_t v30 = v18;
      char v31 = 2112;
      char v32 = @"NO";
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "Link was created locally: %@, using valid local handle: %@",  buf,  0x16u);
    }

    unsigned int v19 = 0;
  }

  return v19;
}

  swift_release(v2);
  if (qword_1004466B0 != -1) {
    swift_once(&qword_1004466B0, sub_1001C88E4);
  }
  unint64_t v15 = off_100447BE8;
  char v16 = (char *)off_100447BE8 + 64;
  int v17 = 1LL << *((_BYTE *)off_100447BE8 + 32);
  char v18 = -1LL;
  if (v17 < 64) {
    char v18 = ~(-1LL << v17);
  }
  unsigned int v19 = v18 & *((void *)off_100447BE8 + 8);
  uint64_t v20 = (unint64_t)(v17 + 63) >> 6;
  swift_bridgeObjectRetain(off_100447BE8);
  unint64_t v21 = 0LL;
  while (2)
  {
    if (v19)
    {
      char v22 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      id v23 = v22 | (v21 << 6);
LABEL_44:
      if ((*(void *)(v15[7] + 8 * v23) & ~*(void *)(v0 + v7)) == 0LL) {
        [v1 addObserver:v0 selector:"handleSharePlayTrigger:" name:*(void *)(v15[6] + 8 * v23) object:0];
      }
      continue;
    }

    break;
  }

  int v24 = v21 + 1;
  if (__OFADD__(v21, 1LL)) {
    goto LABEL_48;
  }
  if (v24 < v20)
  {
    uint64_t v25 = *(void *)&v16[8 * v24];
    ++v21;
    if (!v25)
    {
      unint64_t v21 = v24 + 1;
      if (v24 + 1 >= v20) {
        return swift_release(v15);
      }
      uint64_t v25 = *(void *)&v16[8 * v21];
      if (!v25)
      {
        unint64_t v21 = v24 + 2;
        if (v24 + 2 >= v20) {
          return swift_release(v15);
        }
        uint64_t v25 = *(void *)&v16[8 * v21];
        if (!v25)
        {
          uint64_t v26 = v24 + 3;
          if (v26 >= v20) {
            return swift_release(v15);
          }
          uint64_t v25 = *(void *)&v16[8 * v26];
          if (!v25)
          {
            while (1)
            {
              unint64_t v21 = v26 + 1;
              if (__OFADD__(v26, 1LL)) {
                goto LABEL_50;
              }
              if (v21 >= v20) {
                return swift_release(v15);
              }
              uint64_t v25 = *(void *)&v16[8 * v21];
              ++v26;
              if (v25) {
                goto LABEL_43;
              }
            }
          }

          unint64_t v21 = v26;
        }
      }
    }
}

    id v23 = sub_1001F8708();
    sub_1001A9670(v2, 1LL, 1LL, v23);
    uint64_t v62 = 0LL;
  }

  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v3);
  __break(1u);
}

    int v10 = 0LL;
    memset(v91, 0, sizeof(v91));
    v90 = 0u;
  }

  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

    sub_10024D88C();
  }

  unint64_t v15 = v14 + 3;
  if (v15 >= v3) {
    goto LABEL_26;
  }
  if (*(void *)(v2 + 8 * v15))
  {
    char v4 = v15;
    goto LABEL_23;
  }

  while (1)
  {
    char v4 = v15 + 1;
    if (__OFADD__(v15, 1LL)) {
      break;
    }
    if (v4 >= v3) {
      goto LABEL_26;
    }
    ++v15;
    if (*(void *)(v2 + 8 * v4)) {
      goto LABEL_23;
    }
  }

    sub_10024D88C();
  }

  char v16 = v15 + 3;
  if (v16 >= v4) {
    goto LABEL_26;
  }
  if (*(void *)(v3 + 8 * v16))
  {
    unsigned int v5 = v16;
    goto LABEL_23;
  }

  while (1)
  {
    unsigned int v5 = v16 + 1;
    if (__OFADD__(v16, 1LL)) {
      break;
    }
    if (v5 >= v4) {
      goto LABEL_26;
    }
    ++v16;
    if (*(void *)(v3 + 8 * v5)) {
      goto LABEL_23;
    }
  }

    id v11 = (v17 - 1) & v17;
  }

  char v18 = v16 + 3;
  if (v18 >= v12)
  {
LABEL_35:
    uint64_t result = swift_release(v3);
    id v2 = v28;
    goto LABEL_37;
  }

  int v17 = *(void *)(v8 + 8 * v18);
  if (v17)
  {
    unint64_t v7 = v18;
    goto LABEL_23;
  }

  while (1)
  {
    unint64_t v7 = v18 + 1;
    if (__OFADD__(v18, 1LL)) {
      break;
    }
    if (v7 >= v12) {
      goto LABEL_35;
    }
    int v17 = *(void *)(v8 + 8 * v7);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }

    int v10 = (v17 - 1) & v17;
  }

  char v18 = v16 + 3;
  if (v18 >= v32)
  {
LABEL_35:
    uint64_t result = swift_release_n(v3, 2LL);
    id v2 = v31;
    goto LABEL_37;
  }

  int v17 = *(void *)(v8 + 8 * v18);
  if (v17)
  {
    unsigned int v13 = v18;
    goto LABEL_23;
  }

  while (1)
  {
    unsigned int v13 = v18 + 1;
    if (__OFADD__(v18, 1LL)) {
      break;
    }
    if (v13 >= v32) {
      goto LABEL_35;
    }
    int v17 = *(void *)(v8 + 8 * v13);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }

    id v11 = (v17 - 1) & v17;
  }

  char v18 = v16 + 3;
  if (v18 >= v12)
  {
LABEL_35:
    uint64_t result = swift_release(v3);
    id v2 = v28;
    goto LABEL_37;
  }

  int v17 = *(void *)(v8 + 8 * v18);
  if (v17)
  {
    unint64_t v7 = v18;
    goto LABEL_23;
  }

  while (1)
  {
    unint64_t v7 = v18 + 1;
    if (__OFADD__(v18, 1LL)) {
      break;
    }
    if (v7 >= v12) {
      goto LABEL_35;
    }
    int v17 = *(void *)(v8 + 8 * v7);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }

    unint64_t v40 = (v15 - 1) & v15;
    char v41 = v16;
  }

  int v17 = v12 + 4;
  if (v12 + 4 >= v38)
  {
LABEL_35:
    uint64_t result = swift_release_n(v3, 2LL);
    goto LABEL_37;
  }

  unint64_t v15 = *(void *)(v37 + 8 * v17);
  if (v15)
  {
    char v16 = v12 + 4;
    goto LABEL_23;
  }

  while (1)
  {
    char v16 = v17 + 1;
    if (__OFADD__(v17, 1LL)) {
      break;
    }
    if (v16 >= v38) {
      goto LABEL_35;
    }
    unint64_t v15 = *(void *)(v37 + 8 * v16);
    ++v17;
    if (v15) {
      goto LABEL_23;
    }
  }

    id v11 = (v17 - 1) & v17;
  }

  char v18 = v16 + 3;
  if (v18 >= v12)
  {
LABEL_35:
    uint64_t result = swift_release(v3);
    id v2 = v28;
    goto LABEL_37;
  }

  int v17 = *(void *)(v8 + 8 * v18);
  if (v17)
  {
    unint64_t v7 = v18;
    goto LABEL_23;
  }

  while (1)
  {
    unint64_t v7 = v18 + 1;
    if (__OFADD__(v18, 1LL)) {
      break;
    }
    if (v7 >= v12) {
      goto LABEL_35;
    }
    int v17 = *(void *)(v8 + 8 * v7);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }

      char v12 = (v18 - 1) & v18;
    }
  }

  uint64_t result = swift_release(v3);
  void *v2 = v6;
  return result;
}

      BOOL v9 = (v17 - 1) & v17;
    }
  }

  uint64_t result = swift_release(v3);
  void *v2 = v6;
  return result;
}

      char v12 = (v18 - 1) & v18;
    }
  }

  uint64_t result = swift_release(v3);
  void *v2 = v6;
  return result;
}

      unint64_t v40 = (v15 - 1) & v15;
      char v41 = v16;
    }
  }

  uint64_t result = swift_release(v3);
  void *v2 = v6;
  return result;
}

      id v11 = (v17 - 1) & v17;
    }
  }

  uint64_t result = swift_release(v3);
  void *v2 = v6;
  return result;
}

    id v11 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    unsigned int v19 = *(void *)(v10 + 40);
    *(id *)(*(void *)(v5 + 48) + 8 * v15);
    NSObject._rawHashValue(seed:)(v19);
    sub_10024D998();
    if (((-1LL << v21) & ~*(void *)(v13 + 8 * v20)) == 0)
    {
      sub_100201674();
      while (1)
      {
        sub_10024D980();
        if (v25)
        {
          if ((v22 & 1) != 0) {
            break;
          }
        }

        if (v23 == v24) {
          id v23 = 0LL;
        }
        if (*(void *)(v13 + 8 * v23) != -1LL)
        {
          sub_100201660();
          goto LABEL_34;
        }
      }

      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }

    sub_100201688();
LABEL_34:
    sub_10023CAD8();
    *(void *)(v13 + v26) |= v27;
    sub_10024D874(v28);
    if (__OFSUB__(v6--, 1LL)) {
      goto LABEL_39;
    }
    if (!v6) {
      goto LABEL_36;
    }
  }

  char v18 = v16 + 3;
  if (v18 >= v7) {
    goto LABEL_36;
  }
  int v17 = v30[v18];
  if (v17)
  {
    char v12 = v18;
    goto LABEL_23;
  }

  while (1)
  {
    char v12 = v18 + 1;
    if (__OFADD__(v18, 1LL)) {
      break;
    }
    if (v12 >= v7) {
      goto LABEL_36;
    }
    int v17 = v30[v12];
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }

    int v10 = (v16 - 1) & v16;
    uint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    char v18 = *(void *)(*(void *)(v4 + 48) + 8 * v14);
    static Hasher._hash(seed:_:)(v9[5], v18);
    sub_10024D998();
    if (((-1LL << v20) & ~*(void *)(v12 + 8 * v19)) == 0)
    {
      sub_100201674();
      while (1)
      {
        sub_10024D980();
        if (v24)
        {
          if ((v21 & 1) != 0) {
            break;
          }
        }

        if (v22 == v23) {
          char v22 = 0LL;
        }
        if (*(void *)(v12 + 8 * v22) != -1LL)
        {
          sub_100201660();
          goto LABEL_34;
        }
      }

      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }

    sub_100201688();
LABEL_34:
    sub_10023CAD8();
    *(void *)(v12 + v25) |= v26;
    *(void *)(v9[6] + 8 * v27) = v18;
    ++v9[2];
    if (__OFSUB__(v5--, 1LL)) {
      goto LABEL_39;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }

  int v17 = v15 + 3;
  if (v17 >= v6) {
    goto LABEL_36;
  }
  char v16 = v7[v17];
  if (v16)
  {
    id v11 = v17;
    goto LABEL_23;
  }

  while (1)
  {
    id v11 = v17 + 1;
    if (__OFADD__(v17, 1LL)) {
      break;
    }
    if (v11 >= v6) {
      goto LABEL_36;
    }
    char v16 = v7[v11];
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }

      __break(1u);
      goto LABEL_24;
    }

    __break(1u);
    goto LABEL_23;
  }

  if ((a3 & 1) == 0)
  {
LABEL_25:
    __break(1u);
    return;
  }

  if (a4 < 0) {
    int v10 = a4;
  }
  else {
    int v10 = a4 & 0xFFFFFFFFFFFFFF8LL;
  }
  id v11 = __CocoaSet.element(at:)(a1, a2, v10);
  sub_1002510F4();
  unsigned int v13 = v12;
  swift_unknownObjectRetain(v11);
  swift_dynamicCast(&v28, &v27, (char *)&type metadata for Swift.AnyObject + 8, v13, 7LL);
  swift_unknownObjectRelease(v11);
  sub_1001C73F4();
}

    char v8 = (v13 - 1) & v13;
    id v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_24:
    unint64_t v15 = *(_DWORD *)(*(void *)(v3 + 56) + 4 * v11);
    uint64_t result = sub_1001D7048(*(unsigned int *)(*(void *)(v3 + 48) + 4 * v11));
    if ((v16 & 1) == 0 || *(_DWORD *)(*(void *)(a2 + 56) + 4 * result) != v15) {
      return 0LL;
    }
  }

  uint64_t v14 = v12 + 4;
  if (v14 >= v9) {
    return 1LL;
  }
  unsigned int v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    char v4 = v14;
    goto LABEL_23;
  }

  while (1)
  {
    char v4 = v14 + 1;
    if (__OFADD__(v14, 1LL)) {
      break;
    }
    if (v4 >= v9) {
      return 1LL;
    }
    unsigned int v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_23;
    }
  }

          BOOL v9 = (v15 - 1) & v15;
          unsigned int v13 = __clz(__rbit64(v15)) + (v16 << 6);
          char v4 = v16;
        }

        char v18 = *(void *)(*(void *)(a1 + 48) + 8 * v13);
        unsigned int v19 = static Hasher._hash(seed:_:)(*(void *)(v2 + 40), v18);
        uint64_t v20 = -1LL << *(_BYTE *)(v2 + 32);
        unint64_t v21 = v19 & ~v20;
      }

      while (((*(void *)(v11 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v21) & 1) == 0);
      char v22 = *(void *)(v2 + 48);
      if (*(void *)(v22 + 8 * v21) == v18) {
        break;
      }
      while (1)
      {
        unint64_t v21 = (v21 + 1) & ~v20;
        if (((*(void *)(v11 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v21) & 1) == 0) {
          break;
        }
        if (*(void *)(v22 + 8 * v21) == v18) {
          goto LABEL_28;
        }
      }
    }

  uint64_t v20 = 1;
  return v20 & 1;
}

LABEL_63:
  self->_visionCallEstablishmentVersion = *((_DWORD *)v5 + 20);
  *(_DWORD *)&self->_has |= 0x80u;
  unsigned int v13 = *((_DWORD *)v5 + 26);
  if ((v13 & 0x200000) == 0)
  {
LABEL_50:
    if ((v13 & 0x800000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_65;
  }

  *((_DWORD *)v4 + 20) = self->_protoDisconnectedReason;
  *((_DWORD *)v4 + 38) |= 2u;
  if ((*(_DWORD *)&self->_has & 0x100000) != 0)
  {
LABEL_15:
    *((_BYTE *)v4 + 149) = self->_protoVoicemail;
    *((_DWORD *)v4 + 38) |= 0x100000u;
  }

  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

LABEL_64:
  self->_isUPlusOneVisionToVisionAvailable = *((_BYTE *)v5 + 100);
  *(_DWORD *)&self->_has |= 0x200000u;
  unsigned int v13 = *((_DWORD *)v5 + 26);
  if ((v13 & 0x800000) == 0)
  {
LABEL_51:
    if ((v13 & 0x20) == 0) {
      goto LABEL_52;
    }
    goto LABEL_66;
  }

  self->_protoNeedsManualInCallSounds = *((_BYTE *)v5 + 389);
  *(_DWORD *)&self->_has |= 0x80000u;
  unint64_t v15 = *((_DWORD *)v5 + 100);
  if ((v15 & 0x8000) == 0)
  {
LABEL_48:
    if ((v15 & 0x20000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_49;
  }

          if ((v64 & 1) != 0) {
            goto LABEL_114;
          }
          uint64_t v72 = &v39[16 * v41];
          char v74 = *(void *)v72;
          unint64_t v73 = *((void *)v72 + 1);
          char v52 = __OFSUB__(v73, v74);
          char v75 = v73 - v74;
          if (v52) {
            goto LABEL_116;
          }
          if (v75 < v63) {
            goto LABEL_81;
          }
LABEL_72:
          unsigned int v80 = (unint64_t *)v10;
          uint64_t v81 = v41 - 1;
          if (v41 - 1 >= v38)
          {
            __break(1u);
LABEL_105:
            __break(1u);
LABEL_106:
            __break(1u);
LABEL_107:
            __break(1u);
LABEL_108:
            __break(1u);
LABEL_109:
            __break(1u);
LABEL_110:
            __break(1u);
LABEL_111:
            __break(1u);
LABEL_112:
            __break(1u);
LABEL_113:
            __break(1u);
LABEL_114:
            __break(1u);
LABEL_115:
            __break(1u);
LABEL_116:
            __break(1u);
LABEL_117:
            __break(1u);
LABEL_118:
            __break(1u);
            goto LABEL_119;
          }

          if (!v9) {
            goto LABEL_132;
          }
          unint64_t v82 = &v39[16 * v81];
          char v83 = *(void *)v82;
          char v84 = &v39[16 * v41];
          unsigned int v85 = *((void *)v84 + 1);
          sub_1001B0C0C((char *)(v9 + 32LL * *(void *)v82), (char *)(v9 + 32LL * *(void *)v84), v9 + 32 * v85, v103);
          if (v1)
          {
            int v10 = (char *)v80;
LABEL_87:
            swift_bridgeObjectRelease(v10);
            if (v101 >= -1)
            {
              *(void *)(v99 + 16) = 0LL;
              swift_bridgeObjectRelease(v99);
              return;
            }

LABEL_65:
  self->_supportsRequestToScreenShare = *((_BYTE *)v5 + 102);
  *(_DWORD *)&self->_has |= 0x800000u;
  unsigned int v13 = *((_DWORD *)v5 + 26);
  if ((v13 & 0x20) == 0)
  {
LABEL_52:
    if ((v13 & 0x8000) == 0) {
      goto LABEL_53;
    }
LABEL_67:
    self->_isPhotosSharePlayAvailable = *((_BYTE *)v5 + 94);
    *(_DWORD *)&self->_has |= 0x8000u;
    if ((*((_DWORD *)v5 + 26) & 8) == 0) {
      goto LABEL_55;
    }
    goto LABEL_54;
  }

  v150 = 0u;
  v151 = 0u;
  v148 = 0u;
  v149 = 0u;
  unint64_t v73 = self->_routes;
  char v74 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v73,  "countByEnumeratingWithState:objects:count:",  &v148,  v173,  16LL);
  if (v74)
  {
    char v75 = v74;
    unsigned int v76 = *(void *)v149;
    do
    {
      unint64_t v77 = 0LL;
      do
      {
        if (*(void *)v149 != v76) {
          objc_enumerationMutation(v73);
        }
        char v78 = [*(id *)(*((void *)&v148 + 1) + 8 * (void)v77) copyWithZone:a3];
        [v6 addRoutes:v78];

        unint64_t v77 = (char *)v77 + 1;
      }

      while (v75 != v77);
      char v75 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v73,  "countByEnumeratingWithState:objects:count:",  &v148,  v173,  16LL);
    }

    while (v75);
  }

  char v79 = -[CSDMessagingRoute copyWithZone:](self->_route, "copyWithZone:", a3);
  unsigned int v80 = (void *)v6[42];
  v6[42] = v79;

  v146 = 0u;
  v147 = 0u;
  v144 = 0u;
  v145 = 0u;
  uint64_t v81 = self->_endpointIDSDestinationURIs;
  unint64_t v82 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v81,  "countByEnumeratingWithState:objects:count:",  &v144,  v172,  16LL);
  if (v82)
  {
    char v83 = v82;
    char v84 = *(void *)v145;
    do
    {
      unsigned int v85 = 0LL;
      do
      {
        if (*(void *)v145 != v84) {
          objc_enumerationMutation(v81);
        }
        uint64_t v86 = [*(id *)(*((void *)&v144 + 1) + 8 * (void)v85) copyWithZone:a3];
        [v6 addEndpointIDSDestinationURIs:v86];

        unsigned int v85 = (char *)v85 + 1;
      }

      while (v83 != v85);
      char v83 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v81,  "countByEnumeratingWithState:objects:count:",  &v144,  v172,  16LL);
    }

    while (v83);
  }

  unint64_t v87 = -[NSString copyWithZone:](self->_isoCountryCode, "copyWithZone:", a3);
  char v88 = (void *)v6[19];
  v6[19] = v87;

  uint64_t v89 = self->_has;
  if ((*(_BYTE *)&v89 & 0x20) != 0)
  {
    *((_DWORD *)v6 + 67) = self->_protoPriority;
    *((_DWORD *)v6 + 100) |= 0x20u;
    uint64_t v89 = self->_has;
    if ((*(_BYTE *)&v89 & 0x10) == 0)
    {
LABEL_81:
      if ((*(_DWORD *)&v89 & 0x40000) == 0) {
        goto LABEL_82;
      }
      goto LABEL_136;
    }
  }

  else if ((*(_BYTE *)&v89 & 0x10) == 0)
  {
    goto LABEL_81;
  }

  *((_DWORD *)v6 + 66) = self->_protoOriginatingUIType;
  *((_DWORD *)v6 + 100) |= 0x10u;
  uint64_t v89 = self->_has;
  if ((*(_DWORD *)&v89 & 0x40000) == 0)
  {
LABEL_82:
    if ((*(_DWORD *)&v89 & 0x1000000) == 0) {
      goto LABEL_84;
    }
    goto LABEL_83;
  }

  self->_protoCannotRelayAudioOrVideoOnPairedDevice = *((_BYTE *)v5 + 385);
  *(_DWORD *)&self->_has |= 0x8000u;
  if ((*((_DWORD *)v5 + 100) & 0x20000) != 0)
  {
LABEL_49:
    self->_protoExpectedEndpointOnMessagingDevice = *((_BYTE *)v5 + 387);
    *(_DWORD *)&self->_has |= 0x20000u;
  }

        return 0LL;
      default:
        uint64_t result = PBReaderSkipValueWithTag(a2);
        if (!(_DWORD)result) {
          return result;
        }
        goto LABEL_63;
    }
  }

                    sub_1001BB464(v133, v27);
                    sub_1001B0F5C();

                    goto LABEL_75;
                  }

                  sub_1001B0F5C();
                  char v128 = v67;
                  sub_1001E09D0();
                  unsigned int v129 = sub_1001E0A4C();
                  if (sub_1001E0994(v129))
                  {
                    unint64_t v121 = (uint8_t *)sub_1001B0E78(12LL);
                    char v122 = sub_1001B0E78(8LL);
                    sub_1001E095C(5.7779e-34);
                    sub_1001E097C();
                    sub_1001E09E8();

                    char v123 = "ConversationLinkSync: Incoming sync message, type was recover but message was missing recover"
                           "Message {syncMessage: %@}";
                    goto LABEL_72;
                  }

                  break;
                case 2:
                  unint64_t v107 = sub_1001D8F68((uint64_t)v106, "checkInMessage");
                  if (v107)
                  {
                    char v108 = v107;
                    if (sub_1001E0A28(OBJC_IVAR____TtC13callservicesd33ConversationLinkSyncIDSInteractor_delegate))
                    {
                      char v109 = (void *)sub_1001E0A38();
                      sub_100287DF4(v109, v110, v111);
LABEL_61:
                      sub_1001BB464(v133, v27);
                      sub_1001B0F5C();

LABEL_62:
                      swift_unknownObjectRelease(v73);
LABEL_75:

                      return;
                    }

                    goto LABEL_65;
                  }

                  sub_1001B0F5C();
                  unsigned int v124 = v67;
                  sub_1001E09D0();
                  uint64_t v125 = sub_1001E0A4C();
                  if (sub_1001E0994(v125))
                  {
                    unint64_t v121 = (uint8_t *)sub_1001B0E78(12LL);
                    char v122 = sub_1001B0E78(8LL);
                    sub_1001E095C(5.7779e-34);
                    sub_1001E097C();
                    sub_1001E09E8();

                    char v123 = "ConversationLinkSync: Incoming sync message, type was checkIn but message was missing checkIn"
                           "Message {syncMessage: %@}";
                    goto LABEL_72;
                  }

                  break;
                default:
                  sub_1001B0F5C();
                  char v119 = v67;
                  unint64_t v73 = sub_1001E09D0();
                  unsigned int v120 = static os_log_type_t.default.getter(v73);
                  if (sub_1001E0994(v120))
                  {
                    unint64_t v121 = (uint8_t *)sub_1001B0E78(12LL);
                    char v122 = sub_1001B0E78(8LL);
                    sub_1001E095C(5.7779e-34);
                    sub_1001E097C();
                    sub_1001E09E8();

                    char v123 = "ConversationLinkSync: Incoming sync message, type was unknown {syncMessage: %@}";
LABEL_72:
                    sub_1001B0FD8((void *)&_mh_execute_header, (os_log_s *)v73, (os_log_type_t)v74, v123, v121);
                    sub_1001AFF14(&qword_100447E80);
                    sub_1001B0F64(v122);
                    sub_1001B0E60(v122);
                    sub_1001B0E60((uint64_t)v121);

                    sub_1001BB464(v133, v23);
                    return;
                  }

                  break;
              }

              sub_1001E09B8(v133);

              return;
            }

            sub_1001B92A4();
            sub_1001B0F5C();
            if (qword_100446930 != -1) {
              swift_once(&qword_100446930, sub_100258A18);
            }
            char v100 = sub_1001B0D98(v11, (uint64_t)qword_1004541B0);
            uint64_t v134 = (os_log_s *)Logger.logObject.getter(v100, v101, v102);
            char v104 = static os_log_type_t.error.getter(v134, v103);
            if (os_log_type_enabled(v134, v104))
            {
              char v105 = (uint8_t *)sub_1001B0E78(2LL);
              *(_WORD *)char v105 = 0;
              _os_log_impl( (void *)&_mh_execute_header,  v134,  v104,  "ConversationLinkSync: Incoming sync message, data no protobuf -- dropping",  v105,  2u);
              sub_1001B0E60((uint64_t)v105);
              sub_1001E0A08();
              sub_1001BB464(v133, v27);
              return;
            }

            sub_1001E09B8(v133);
LABEL_34:

            return;
          }

          sub_1001B92A4();
          sub_1001B0F5C();
          if (qword_100446930 != -1) {
            swift_once(&qword_100446930, sub_100258A18);
          }
          sub_1001B0D98(v11, (uint64_t)qword_1004541B0);
          uint64_t v134 = v134;
          Logger.logObject.getter(v134, v50, v51);
          char v52 = sub_1001B10E8();
          if (!sub_1001E0A10(v52))
          {

            sub_1001E0A08();
            goto LABEL_34;
          }

          uint64_t v44 = (uint8_t *)sub_1001B0E78(12LL);
          unsigned int v53 = sub_1001B0E78(32LL);
          v136 = (os_log_s *)v53;
          *(_DWORD *)uint64_t v44 = 136315138;
          unint64_t v54 = [v24 allAliases];
          char v55 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v54, &type metadata for String);

          char v56 = Array.description.getter(v55, &type metadata for String);
          unint64_t v58 = v57;
          sub_1001B92A4();
          char v59 = sub_1001D7CF0(v56, v58, (uint64_t *)&v136);
          char v60 = sub_1001E09A4(v59);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v60, v61, v44 + 4, v44 + 12);
          sub_1001E0A08();
          sub_1001E0A08();
          swift_bridgeObjectRelease(v58);
          sub_1001B0FD8( (void *)&_mh_execute_header,  (os_log_s *)a4,  v26,  "ConversationLinkSync: Incoming sync message, unknown destinationID -- dropping {destinationID: fromID, self. service.allAliases: %s}",  v44);
          sub_1001B0F64(v53);
          uint64_t v49 = v53;
LABEL_26:
          sub_1001B0E60(v49);
          sub_1001B0E60((uint64_t)v44);

          return;
        }

        sub_1001B92A4();
      }

      if (qword_100446930 != -1) {
        swift_once(&qword_100446930, sub_100258A18);
      }
      sub_1001B0D98(v11, (uint64_t)qword_1004541B0);
      unint64_t v40 = sub_1001B9234();
      Logger.logObject.getter(v40, v41, v42);
      unsigned int v43 = sub_1001B10E8();
      if (!sub_1001E0A10(v43))
      {

        sub_1001B4C54();
        return;
      }

      uint64_t v44 = (uint8_t *)sub_1001B0E78(12LL);
      unint64_t v45 = sub_1001B0E78(32LL);
      v136 = (os_log_s *)v45;
      *(_DWORD *)uint64_t v44 = 136315138;
      sub_1001B9234();
      char v46 = sub_1001E09C0();
      char v47 = sub_1001E09A4(v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v47, v48, v44 + 4, v44 + 12);
      sub_1001E09DC();
      sub_1001B0FD8( (void *)&_mh_execute_header,  (os_log_s *)a4,  (os_log_type_t)a3,  "ConversationLinkSync: Incoming sync message, invalid destinationID -- dropping {fromID: %s}",  v44);
      sub_1001B0F64(v45);
      uint64_t v49 = v45;
      goto LABEL_26;
    }

    sub_1001B0F5C();
  }

  if (qword_100446930 != -1) {
    swift_once(&qword_100446930, sub_100258A18);
  }
  unsigned int v28 = sub_1001B0D98(v11, (uint64_t)qword_1004541B0);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, v28, v11);
  uint64_t v29 = sub_1001B4C60();
  Logger.logObject.getter(v29, v30, v31);
  char v32 = sub_1001B10E8();
  if (!os_log_type_enabled((os_log_t)a4, v32))
  {

    sub_1001B4C54();
    goto LABEL_15;
  }

  unsigned int v33 = (uint8_t *)sub_1001B0E78(12LL);
  uint64_t v34 = sub_1001B0E78(32LL);
  v136 = (os_log_s *)v34;
  *(_DWORD *)unsigned int v33 = 136315138;
  if (a6)
  {
    unint64_t v35 = v34;
    sub_1001B9234();
    char v36 = sub_1001E09C0();
    char v37 = sub_1001E09A4(v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v37, v38, v33 + 4, v39);
    sub_1001E09DC();
    sub_1001B0FD8( (void *)&_mh_execute_header,  (os_log_s *)a4,  v32,  "ConversationLinkSync: Incoming sync message, invalid fromID -- dropping {fromID: %s}",  v33);
    sub_1001B0F64(v35);
    sub_1001B0E60(v35);
    sub_1001B0E60((uint64_t)v33);

LABEL_15:
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    return;
  }

  __break(1u);
LABEL_77:
  __break(1u);
}

LABEL_66:
  self->_spatialPersonaGenerationCounter = *((_DWORD *)v5 + 18);
  *(_DWORD *)&self->_has |= 0x20u;
  unsigned int v13 = *((_DWORD *)v5 + 26);
  if ((v13 & 0x8000) != 0) {
    goto LABEL_67;
  }
LABEL_53:
  if ((v13 & 8) != 0)
  {
LABEL_54:
    self->_presentationMode = *((_DWORD *)v5 + 16);
    *(_DWORD *)&self->_has |= 8u;
  }

  PBDataWriterWriteUint32Field(v5, self->_protoDisconnectedReason, 8LL);
  if ((*(_DWORD *)&self->_has & 0x100000) != 0) {
LABEL_15:
  }
    PBDataWriterWriteBOOLField(v5, self->_protoVoicemail, 9LL);
LABEL_16:
  callerNameFromNetwork = self->_callerNameFromNetwork;
  if (callerNameFromNetwork) {
    PBDataWriterWriteStringField(v5, callerNameFromNetwork, 10LL);
  }
  char v12 = self->_has;
  if ((*(_BYTE *)&v12 & 1) != 0)
  {
    PBDataWriterWriteDoubleField(v5, 11LL, self->_protoTimeConnected);
    char v12 = self->_has;
    if ((*(_WORD *)&v12 & 0x1000) == 0)
    {
LABEL_20:
      if ((*(_WORD *)&v12 & 0x4000) == 0) {
        goto LABEL_21;
      }
      goto LABEL_70;
    }
  }

  else if ((*(_WORD *)&v12 & 0x1000) == 0)
  {
    goto LABEL_20;
  }

  PBDataWriterWriteBOOLField(v5, self->_protoOutgoing, 12LL);
  char v12 = self->_has;
  if ((*(_WORD *)&v12 & 0x4000) == 0)
  {
LABEL_21:
    if ((*(_WORD *)&v12 & 0x800) == 0) {
      goto LABEL_22;
    }
    goto LABEL_71;
  }

  v20[119] = self->_isSpatialPersonaEnabled;
  *((_DWORD *)v20 + 32) |= 0x800u;
  unint64_t v21 = self->_has;
  if ((*(_WORD *)&v21 & 0x2000) == 0)
  {
LABEL_49:
    if ((*(_BYTE *)&v21 & 8) == 0) {
      goto LABEL_50;
    }
    goto LABEL_68;
  }

      sub_1001B4B8C(v92);
      uint64_t v111 = sub_1001704C4();
      unint64_t v112 = sub_1001AFF14((uint64_t *)&unk_100447E30);
      char v113 = sub_1001C7370(v112, 72LL);
      v229 = xmmword_10037B290;
      *(_OWORD *)(v113 + 16) = xmmword_10037B290;
      unint64_t v40 = v232;
      v235 = (unint64_t *)v232;
      sub_1001F859C();
      sub_1001AFF14(&qword_1004499A0);
      char v114 = sub_1001F851C((uint64_t)&v235);
      uint64_t v116 = v115;
      *(void *)(v113 + 56) = &type metadata for String;
      unint64_t v117 = sub_1001B2330();
      *(void *)(v113 + 64) = v117;
      *(void *)(v113 + 32) = v114;
      *(void *)(v113 + 40) = v116;
      char v118 = static os_log_type_t.default.getter(v117);
      os_log(_:dso:log:type:_:)( "Filtered in the following active handles from list of members eligible for link approval: %@",  92LL,  2LL,  &_mh_execute_header,  v111,  v118,  v113);

      sub_1001B2428();
      char v119 = sub_1001704C4();
      unsigned int v120 = sub_1001C7370(v112, 72LL);
      *(_OWORD *)(v120 + 16) = v229;
      v235 = v2;
      unint64_t v121 = sub_1001F851C((uint64_t)&v235);
      *(void *)(v120 + 56) = &type metadata for String;
      *(void *)(v120 + 64) = v117;
      *(void *)(v120 + 32) = v121;
      *(void *)(v120 + 40) = v122;
      char v123 = static os_log_type_t.default.getter(v121);
      sub_1001F8630((uint64_t)"active handles: %@", 18LL, 2LL, (uint64_t)&_mh_execute_header, (uint64_t)v119, v123);

      sub_1001B0EC0();
      unsigned int v124 = sub_1001704C4();
      uint64_t v125 = sub_1001C7370(v112, 72LL);
      *(_OWORD *)(v125 + 16) = v229;
      v235 = v209;
      unint64_t v126 = sub_1001F851C((uint64_t)&v235);
      *(void *)(v125 + 56) = &type metadata for String;
      *(void *)(v125 + 64) = v117;
      *(void *)(v125 + 32) = v126;
      *(void *)(v125 + 40) = v127;
      char v128 = static os_log_type_t.default.getter(v126);
      os_log(_:dso:log:type:_:)( "members eligible for link approval: %@",  38LL,  2LL,  &_mh_execute_header,  v124,  v128,  v125);

      unsigned int v129 = sub_1001AA9C8();
      unint64_t v130 = v211;
      char v131 = sub_1001B115C(v129, "groupUUID");
      static UUID._unconditionallyBridgeFromObjectiveC(_:)(v131);

LABEL_67:
      *(void *)&v229 = v40;
      uint64_t v132 = v226;
      BOOL v133 = Date.init()(v57);
      uint64_t v134 = (uint64_t)v223;
      UUID.init()(v133);
      v135 = v222;
      (*(void (**)(uint64_t, char *, unint64_t))(v213 + 16))(v134 + *(int *)(v222 + 28), v132, v212);
      v136 = (unint64_t *)(v134 + *(int *)(v135 + 20));
      v137 = v218;
      *v136 = v40;
      v136[1] = v137;
      v138 = v219;
      v136[2] = v219;
      v139 = v220;
      *(void *)(v134 + *(int *)(v135 + 24)) = v220;
      sub_1001F859C();
      sub_1001BB31C(v137, v138);
      v140 = v139;
      v141 = sub_1001704C4();
      v228 = sub_1001AFF14((uint64_t *)&unk_100447E30);
      v142 = sub_1001C7370(v228, 152LL);
      *(_OWORD *)(v142 + 16) = xmmword_10037B6E0;
      v143 = v221;
      sub_1001E8D80(v134, v221);
      v144 = sub_1001F84B8(v143);
      v146 = v145;
      *(void *)(v142 + 56) = &type metadata for String;
      v147 = sub_1001B2330();
      *(void *)(v142 + 64) = v147;
      *(void *)(v142 + 32) = v144;
      *(void *)(v142 + 40) = v146;
      v148 = v225;
      v149 = v215;
      sub_1001F87E8(v210, v225, v217[2]);
      v150 = sub_1001F8554();
      *(void *)(v142 + 96) = &type metadata for String;
      *(void *)(v142 + 104) = v147;
      *(void *)(v142 + 72) = v150;
      *(void *)(v142 + 80) = v151;
      v232 = (unint64_t)sub_1001D909C(v150, "handle");
      sub_1001B4C00(v232, &qword_10044A410, &OBJC_CLASS___TUHandle_ptr);
      v152 = sub_1001F87D8((uint64_t)&v232);
      *(void *)(v142 + 136) = &type metadata for String;
      *(void *)(v142 + 144) = v147;
      *(void *)(v142 + 112) = v152;
      *(void *)(v142 + 120) = v153;
      static os_log_type_t.default.getter(v152);
      sub_1001F8878();
      sub_1001F8630(v154, v155, v156, v157, v158, v159);

      sub_1001B0EC0();
      v160 = sub_1001F861C( (void *)(v224 + OBJC_IVAR___CSDPendingMembershipTracker_storage),  *(void *)(v224 + OBJC_IVAR___CSDPendingMembershipTracker_storage + 24));
      v161 = sub_1001D909C((uint64_t)v160, "handle");
      v162 = (unint64_t)v230;
      sub_1001F6698(v134, v148, (uint64_t)v161);
      if (v162)
      {

        swift_bridgeObjectRelease(v229);
        v163 = sub_1001704C4();
        v164 = sub_1001C7370(v228, 72LL);
        *(_OWORD *)(v164 + 16) = xmmword_10037B290;
        v232 = v162;
        swift_errorRetain(v162);
        v165 = sub_1001AFF14(&qword_100447B70);
        v166 = String.init<A>(reflecting:)(&v232, v165);
        *(void *)(v164 + 56) = &type metadata for String;
        *(void *)(v164 + 64) = v147;
        *(void *)(v164 + 32) = v166;
        *(void *)(v164 + 40) = v167;
        v168 = static os_log_type_t.default.getter(v166);
        sub_1001F8468( (uint64_t)"Issue storing pending membership info -- aborting {error: %@}",  61LL,  v169,  (uint64_t)&_mh_execute_header,  v170,  v168);

        sub_1001AA9C8();
        sub_1001F8524();
        sub_1001F854C();
        sub_1001F8560(*(uint64_t (**)(void, void))(v213 + 8));
        v171 = sub_1001F86C0();
        v173 = v149;
        goto LABEL_88;
      }

      char v4 = v213;

      isa = Date._bridgeToObjectiveC()().super.isa;
      sub_1001D8FD4(v140, "setDateReceivedLetMeIn:");

      v175 = Date._bridgeToObjectiveC()().super.isa;
      sub_1001D8FD4(v140, "setDateInitiatedLetMeIn:");

      char v31 = (uint64_t)v140;
      if (v227)
      {
        v176 = sub_1001AFF14((uint64_t *)&unk_1004475C0);
        inited = swift_initStackObject(v176, &v236);
        *(_OWORD *)(inited + 16) = xmmword_10037B200;
        *(void *)(inited + 32) = v140;
        v232 = inited;
        specialized Array._endMutation()(inited, v178, v179, v180, v181, v182, v183, v184, v208[0]);
        v185 = v232;
        if (v232 >> 62)
        {
          v206 = v227;
          v207 = v140;
          sub_1001E927C();
          v186 = sub_1001F8738();
          sub_1001AA9C8();
        }

        else
        {
          v186 = *(void *)((v232 & 0xFFFFFFFFFFFFF8LL) + 0x10);
          v187 = v227;
          v188 = v140;
        }

        if (v186) {
          sub_10024C2C8(v185);
        }
        else {
          swift_bridgeObjectRelease(v185);
        }
        sub_1001B4B94(0LL, (unint64_t *)&unk_100447E20, &OBJC_CLASS___TUConversationMember_ptr);
        sub_1001F7D5C( (unint64_t *)&qword_10044A420,  (unint64_t *)&unk_100447E20,  &OBJC_CLASS___TUConversationMember_ptr,  (uint64_t)&protocol conformance descriptor for NSObject);
        sub_10010B960();
        v196 = Set._bridgeToObjectiveC()().super.isa;
        sub_1001AA9C8();
        v197 = v227;
        sub_1001F8588(v227, "addPendingMembers:triggeredLocally:", (uint64_t)v196);

        uint64_t v29 = v215;
      }

      else
      {
        v189 = sub_1001F84C8(OBJC_IVAR___CSDPendingMembershipTracker_delegate);
        uint64_t v29 = v215;
        if (v189)
        {
          v190 = (void *)v189;
          v191 = sub_1001F8788().super.isa;
          [v190 pendingMembershipTracker:v224 didTrack:v31 forGroupUUID:v191];

          sub_1001F8730();
        }
      }

      if (qword_1004468E8 == -1)
      {
LABEL_82:
        if ((byte_100448941 & 1) != 0)
        {
          sub_1001B0F28();
          v198 = sub_1001704C4();
          v199 = sub_1001B11C8();
          sub_1001E43F4( (uint64_t)"Track pending member, delegation disabled",  41LL,  v200,  (uint64_t)&_mh_execute_header,  v201,  v199,  (uint64_t)_swiftEmptyArrayStorage);
        }

        else
        {
          v202 = sub_1001F84C8(OBJC_IVAR___CSDPendingMembershipTracker_messenger);
          if (v202)
          {
            v203 = (void *)v202;
            sub_1001F7D5C( (unint64_t *)&qword_100447ED0,  &qword_10044A410,  &OBJC_CLASS___TUHandle_ptr,  (uint64_t)&protocol conformance descriptor for NSObject);
            v204 = Set._bridgeToObjectiveC()().super.isa;
            sub_1001B0F28();
            v205 = UUID._bridgeToObjectiveC()().super.isa;
            [v203 sendDelegationMessageTo:v204 conversation:v227 link:v216 transactionUUID:v205 forMember:v31];
            sub_1001F8730();

            uint64_t v29 = v215;
          }

          else
          {
            sub_1001B0F28();
          }
        }

        sub_1001F854C();
        sub_1001F8560(*(uint64_t (**)(void, void))(v4 + 8));
        v171 = sub_1001F86C0();
        v173 = v29;
LABEL_88:
        v172(v171, v173);
LABEL_89:
        sub_1001B0FF8();
        return;
      }

void sub_10001615C(uint64_t a1)
{
  id v2 = objc_alloc(&OBJC_CLASS___CSDUserActivityManager);
  uint64_t v3 = *(void *)(a1 + 32);
  char v8 = objc_alloc_init(&OBJC_CLASS___CSDUserActivityCommunicator);
  char v4 = (void *)objc_claimAutoreleasedReturnValue(+[TUCallCenter sharedInstance](&OBJC_CLASS___TUCallCenter, "sharedInstance"));
  unsigned int v5 = objc_alloc_init(&OBJC_CLASS___TUFeatureFlags);
  unint64_t v6 = -[CSDUserActivityManager initWithQueue:activityCommunicator:callCenter:featureFlags:]( v2,  "initWithQueue:activityCommunicator:callCenter:featureFlags:",  v3,  v8,  v4,  v5);
  unint64_t v7 = (void *)qword_10044CE10;
  qword_10044CE10 = (uint64_t)v6;
}

BOOL sub_10001700C(id a1, TUCall *a2)
{
  id v2 = a2;
  else {
    LOBYTE(v3) = 0;
  }

  return v3;
}

id sub_100017144(uint64_t a1, void *a2)
{
  unsigned int v3 = (void *)objc_claimAutoreleasedReturnValue([a2 callGroupUUID]);
  char v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) groupUUID]);
  id v5 = [v3 isEqual:v4];

  return v5;
}

void sub_100019248(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 56);
  if (v2 == 5)
  {
    uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) featureFlags]);
    unsigned int v26 = [v25 conversationHandoffEnabled];

    if (v26)
    {
      char v27 = *(void **)(a1 + 32);
      if (v27)
      {
        int v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v27, "tu_handoffEligibility"));
        [v24 setOriginatingDeviceType:*(void *)(a1 + 48)];
        if (v24)
        {
          unsigned int v28 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
          [v28 postNotificationName:@"CSDUserActivityConversationHandoffRecommendationChangedNotification" object:v24 userInfo:0];
        }

        else
        {
          id v30 = sub_1001704C4();
          char v31 = (os_log_s *)objc_claimAutoreleasedReturnValue(v30);
          if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v32 = *(void *)(a1 + 32);
            *(_DWORD *)buf = 138412290;
            *(void *)unint64_t v40 = v32;
            _os_log_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_DEFAULT,  "[WARN] User activity manager could not parse eligibility from dynamicIdentifier %@",  buf,  0xCu);
          }
        }
      }

      else
      {
        id v29 = sub_1001704C4();
        int v24 = (void *)objc_claimAutoreleasedReturnValue(v29);
        if (os_log_type_enabled((os_log_t)v24, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v24,  OS_LOG_TYPE_DEFAULT,  "[WARN] Cannot process received broadcast for conversation handoff activity type because it did not have a dy namic identifier set.",  buf,  2u);
        }
      }

      goto LABEL_18;
    }
  }

  else if (v2 == 3)
  {
    unsigned int v33 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) componentsSeparatedByString:@"."]);
    unsigned int v3 = (void *)objc_claimAutoreleasedReturnValue([v33 lastObject]);
    __int128 v35 = 0u;
    __int128 v36 = 0u;
    __int128 v37 = 0u;
    __int128 v38 = 0u;
    char v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callCenter]);
    id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 audioAndVideoCallsWithStatus:4]);

    id v6 = [v5 countByEnumeratingWithState:&v35 objects:v43 count:16];
    if (v6)
    {
      id v7 = v6;
      uint64_t v8 = *(void *)v36;
      uint64_t v34 = v3;
      do
      {
        for (i = 0LL; i != v7; i = (char *)i + 1)
        {
          if (*(void *)v36 != v8) {
            objc_enumerationMutation(v5);
          }
          int v10 = *(void **)(*((void *)&v35 + 1) + 8LL * (void)i);
          id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 handle]);
          char v12 = (void *)objc_claimAutoreleasedReturnValue([v11 value]);
          unsigned int v13 = [v12 isEqualToString:v3];

          id v14 = sub_1001704C4();
          unint64_t v15 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
          BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);
          if (v13)
          {
            if (v16)
            {
              int v17 = *(_DWORD *)(a1 + 56);
              *(_DWORD *)buf = 67109634;
              *(_DWORD *)unint64_t v40 = v17;
              *(_WORD *)&v40[4] = 2112;
              *(void *)&v40[6] = v3;
              __int16 v41 = 2112;
              char v42 = v10;
              _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "Received broadcast for activity type %d and destination ID %@. Suppressing ringtone due to remote suppre ssion for call %@",  buf,  0x1Cu);
            }

            [v10 suppressRingtoneDueToRemoteSuppression];
          }

          else
          {
            if (v16)
            {
              id v18 = v7;
              uint64_t v19 = v8;
              uint64_t v20 = v5;
              int v21 = *(_DWORD *)(a1 + 56);
              char v22 = (void *)objc_claimAutoreleasedReturnValue([v10 handle]);
              id v23 = (void *)objc_claimAutoreleasedReturnValue([v22 value]);
              *(_DWORD *)buf = 67109634;
              *(_DWORD *)unint64_t v40 = v21;
              id v5 = v20;
              uint64_t v8 = v19;
              id v7 = v18;
              unsigned int v3 = v34;
              *(_WORD *)&v40[4] = 2112;
              *(void *)&v40[6] = v34;
              __int16 v41 = 2112;
              char v42 = v23;
              _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "Received broadcast for activity type %d but ignoring it because its destination ID (%@) does not match t his ringing call's desination ID (%@)",  buf,  0x1Cu);
            }
          }
        }

        id v7 = [v5 countByEnumeratingWithState:&v35 objects:v43 count:16];
      }

      while (v7);
    }

    int v24 = v33;
LABEL_18:
  }

void sub_100019674(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 40) == 5)
  {
    id v1 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) featureFlags]);
    unsigned int v2 = [v1 conversationHandoffEnabled];

    if (v2)
    {
      id v3 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
      [v3 postNotificationName:@"CSDUserActivityConversationHandoffRecommendationChangedNotification" object:0];
    }
  }

LABEL_6:
  char v12 = 0LL;
LABEL_10:

  return v12;
}

  id v11 = (void *)objc_claimAutoreleasedReturnValue([a1[5] mergedCallUpdate]);
  [v11 updateWithUpdate:a1[4]];

  char v105 = [a1[6] hasSet];
  LODWORD(v106) = v12;
  if ((v105 & 2) != 0)
  {
    unsigned int v13 = (void *)objc_claimAutoreleasedReturnValue([a1[5] activeRemoteParticipantForCallUpdate:a1[6]]);
    [a1[5] setActiveRemoteParticipant:v13];
  }

  unint64_t v103 = [a1[6] hasSet];
  LODWORD(v104) = v14;
  if ((v103 & 0x10) != 0)
  {
    unint64_t v15 = objc_claimAutoreleasedReturnValue([a1[5] activeRemoteParticipant]);
    if (!v15
      || (BOOL v16 = (void *)v15,
          int v17 = (void *)objc_claimAutoreleasedReturnValue([a1[5] activeRemoteParticipant]),
          id v18 = (void *)objc_claimAutoreleasedReturnValue([v17 sandboxExtendedImageURL]),
          v18,
          v17,
          v16,
          !v18))
    {
      uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([a1[6] localizedCallerImageURL]);
      uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([a1[5] displayContext]);

      if (v20)
      {
        int v21 = a1[5];
        if (v19)
        {
          char v22 = (void *)objc_claimAutoreleasedReturnValue([a1[6] localizedCallerImageURL]);
          id v23 = (void *)objc_claimAutoreleasedReturnValue([v21 imageURLForCXSandboxExtendedURL:v22]);
          int v24 = (void *)objc_claimAutoreleasedReturnValue([a1[5] dynamicDisplayContext]);
          [v24 setCompanyLogoURL:v23];
        }

        else
        {
          char v22 = (void *)objc_claimAutoreleasedReturnValue([a1[5] dynamicDisplayContext]);
          [v22 setCompanyLogoURL:0];
        }
      }
    }
  }

  char v101 = [a1[6] hasSet];
  LODWORD(v102) = v25;
  if (((unsigned __int16)v101 & 0x2000) != 0)
  {
    objc_msgSend(a1[5], "setVideo:", objc_msgSend(a1[6], "hasVideo"));
  }

  unint64_t v99 = [a1[6] hasSet];
  LODWORD(v100) = v26;
  if ((v26 & 1) != 0) {
    *((_BYTE *)a1[5] + 205) = [a1[6] isSendingVideo];
  }
  unsigned int v97 = (unint64_t)[a1[6] hasSet];
  LODWORD(v9_Block_object_dispose(va, 8) = v27;
  if ((v97 & 0x400000000000000LL) != 0) {
    *((_BYTE *)a1[5] + 196) = [a1[6] isSharingScreen];
  }
  char v95 = (unint64_t)[a1[6] hasSet];
  LODWORD(v96) = v28;
  if ((v95 & 0x40000000000000LL) != 0) {
    *((_BYTE *)a1[5] + 19_Block_object_dispose(va, 8) = [a1[6] mixesVoiceWithMedia];
  }
  uint64_t v93 = (unint64_t)[a1[6] hasSet];
  LODWORD(v94) = v29;
  if ((v93 & 0x80000000000000LL) != 0) {
    *((_BYTE *)a1[5] + 201) = [a1[6] prefersToPlayDuringWombat];
  }
  char v91 = (unint64_t)[a1[6] hasSet];
  LODWORD(v92) = v30;
  if ((v91 & 0x100000000000000LL) != 0) {
    *((_BYTE *)a1[5] + 199) = [a1[6] mediaPlaybackOnExternalDevice];
  }
  uint64_t v89 = (unint64_t)[a1[6] hasSet];
  LODWORD(v90) = v31;
  if ((v89 & 0x20000000000000LL) != 0) {
    objc_msgSend(a1[5], "setConversation:", objc_msgSend(a1[6], "isConversation"));
  }
  unint64_t v87 = [a1[6] hasSet];
  LODWORD(v8_Block_object_dispose(va, 8) = v32;
  if ((v32 & 4) != 0) {
    objc_msgSend(a1[5], "setIsKnownCaller:", objc_msgSend(a1[6], "isKnownCaller"));
  }
  unsigned int v85 = [a1[6] hasSet];
  LODWORD(v86) = v33;
  if ((v33 & 8) != 0) {
    objc_msgSend(a1[5], "setFilteredOutReason:", objc_msgSend(a1[6], "filteredOutReason"));
  }
  uint64_t v34 = (void *)objc_claimAutoreleasedReturnValue([a1[6] silencingUserInfo]);
  __int128 v35 = [v34 copy];
  [a1[5] setSilencingUserInfo:v35];

  char v83 = [a1[6] hasSet];
  LODWORD(v84) = v36;
  if ((v36 & 0x40) != 0) {
    objc_msgSend(a1[5], "setShouldSuppressRingtone:", objc_msgSend(a1[6], "suppressRingtone"));
  }
  uint64_t v81 = [a1[6] hasSet];
  LODWORD(v82) = v37;
  if ((v37 & 0x80) != 0) {
    objc_msgSend( a1[5],  "setCallSubType:",  sub_1000A162C((uint64_t)objc_msgSend( a1[6],  "callSubType",  v81,  v82,  v83,  v84,  v85,  v86,  v87,  v88,  v89,  v90,  v91,  v92,  v93,  v94,  v95,  v96,  v97,  v98,  v99,  v100,  v101,  v102,  v103,  v104,  v105,  v106,  v107,  v108)));
  }
  __int128 v38 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "mergedCallUpdate", v81, v82));
  uint64_t v39 = [v38 supportsHolding];
  unint64_t v40 = (void *)objc_claimAutoreleasedReturnValue([a1[5] model]);
  [v40 setSupportsHolding:v39];

  __int16 v41 = (void *)objc_claimAutoreleasedReturnValue([a1[5] mergedCallUpdate]);
  char v42 = [v41 supportsGrouping];
  unsigned int v43 = (void *)objc_claimAutoreleasedReturnValue([a1[5] model]);
  [v43 setSupportsGrouping:v42];

  uint64_t v44 = (void *)objc_claimAutoreleasedReturnValue([a1[5] mergedCallUpdate]);
  unint64_t v45 = [v44 supportsUngrouping];
  char v46 = (void *)objc_claimAutoreleasedReturnValue([a1[5] model]);
  [v46 setSupportsUngrouping:v45];

  char v47 = (void *)objc_claimAutoreleasedReturnValue([a1[5] mergedCallUpdate]);
  unsigned int v48 = [v47 supportsDTMF];
  uint64_t v49 = (void *)objc_claimAutoreleasedReturnValue([a1[5] model]);
  [v49 setSupportsDTMF:v48];

  unint64_t v50 = (void *)objc_claimAutoreleasedReturnValue([a1[5] mergedCallUpdate]);
  char v51 = [v50 supportsUnambiguousMultiPartyState];
  char v52 = (void *)objc_claimAutoreleasedReturnValue([a1[5] model]);
  [v52 setSupportsUnambiguousMultiPartyState:v51];

  unsigned int v53 = (void *)objc_claimAutoreleasedReturnValue([a1[5] mergedCallUpdate]);
  unint64_t v54 = [v53 supportsAddCall];
  char v55 = (void *)objc_claimAutoreleasedReturnValue([a1[5] model]);
  [v55 setSupportsAddCall:v54];

  char v56 = (void *)objc_claimAutoreleasedReturnValue([a1[5] mergedCallUpdate]);
  unsigned int v57 = [v56 supportsSendingToVoicemail];
  unint64_t v58 = (void *)objc_claimAutoreleasedReturnValue([a1[5] model]);
  [v58 setSupportsSendingToVoicemail:v57];

  char v59 = (void *)objc_claimAutoreleasedReturnValue([a1[5] mergedCallUpdate]);
  objc_msgSend(a1[5], "setSupportsDTMFUpdates:", objc_msgSend(v59, "supportsDTMFUpdates"));

  char v60 = (void *)objc_claimAutoreleasedReturnValue([a1[5] mergedCallUpdate]);
  objc_msgSend(a1[5], "setIsUnderlyingLinksConnected:", objc_msgSend(v60, "isUnderlyingLinksConnected"));

  unsigned int v61 = (void *)objc_claimAutoreleasedReturnValue([a1[5] mergedCallUpdate]);
  objc_msgSend(a1[5], "setVerificationStatus:", sub_1000A166C((uint64_t)objc_msgSend(v61, "verificationStatus")));

  uint64_t v62 = (void *)objc_claimAutoreleasedReturnValue([a1[5] mergedCallUpdate]);
  objc_msgSend(a1[5], "setPriority:", sub_1000A1658((BOOL)objc_msgSend(v62, "priority")));

  unint64_t v63 = (void *)objc_claimAutoreleasedReturnValue([a1[5] mergedCallUpdate]);
  objc_msgSend(a1[5], "setIdentificationCategory:", sub_1000A168C((uint64_t)objc_msgSend(v63, "identificationCategory")));

  char v64 = (void *)objc_claimAutoreleasedReturnValue([a1[5] mergedCallUpdate]);
  objc_msgSend(a1[5], "setJunkConfidence:", sub_1000A167C((uint64_t)objc_msgSend(v64, "junkConfidence")));

  char v65 = (void *)objc_claimAutoreleasedReturnValue([a1[5] mergedCallUpdate]);
  unsigned int v66 = objc_claimAutoreleasedReturnValue([v65 tuMediaTokens]);
  uint64_t v67 = a1[5];
  unint64_t v68 = (void *)v67[31];
  v67[31] = v66;

  char v69 = (void *)objc_claimAutoreleasedReturnValue([a1[5] mergedCallUpdate]);
  char v70 = objc_claimAutoreleasedReturnValue([v69 localMemberHandleValue]);
  unsigned int v71 = a1[5];
  uint64_t v72 = (void *)v71[34];
  v71[34] = v70;

  unint64_t v73 = (void *)objc_claimAutoreleasedReturnValue([a1[5] mergedCallUpdate]);
  *((void *)a1[5] + 35) = sub_1000A1640((uint64_t)[v73 screenSharingIntention]);

  char v74 = (void *)objc_claimAutoreleasedReturnValue([a1[6] screenShareAttributes]);
  if (v74)
  {
    char v75 = a1[5];
    unsigned int v76 = (void *)objc_claimAutoreleasedReturnValue([a1[6] screenShareAttributes]);
    unint64_t v77 = objc_claimAutoreleasedReturnValue([v75 tuScreenShareAttributesForScreenAttributes:v76]);

    char v78 = a1[5];
    char v79 = (void *)v78[30];
    v78[30] = v77;
  }

  uint64_t result = [a1[6] screenSharingType];
  if (result) {
    return objc_msgSend(a1[5], "setScreenSharingType:", objc_msgSend(a1[6], "screenSharingType"));
  }
  return result;
}

  unint64_t v15 = 1;
LABEL_10:

  return v15;
}

  int v10 = 0LL;
LABEL_13:

  return v10;
}

    id v14 = 0LL;
    goto LABEL_7;
  }

  uint64_t v8 = 0LL;
LABEL_4:
  v19[0] = v5;
  v19[1] = v5 + 32;
  v19[2] = v8;
  v19[3] = (2 * v7) | 1;
  swift_bridgeObjectRetain(v5);
  BOOL v9 = sub_1001AFF14(&qword_100448E70);
  int v10 = sub_10020106C();
  id v11 = Data.init<A>(bytes:)(v19, v9, v10);
  unsigned int v13 = v12;
  static String.Encoding.ascii.getter();
  id v14 = String.init(data:encoding:)(v11, v13, v4);
  sub_1001BB39C(v11, v13);
LABEL_7:
  swift_release(v6);
  return v14;
}

LABEL_13:
      LOBYTE(v22) = 0;
      goto LABEL_26;
    }

    char v12 = 0;
  }

    goto LABEL_14;
  }

  id v11 = [v10 identifier];
  if (v11 != [v4 identifier])
  {
    id v23 = sub_1001704C4();
    id v18 = (os_log_s *)objc_claimAutoreleasedReturnValue(v23);
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([v4 pluginName]);
      int v24 = (CSDConversation *)[v4 identifier];
      uint64_t v25 = 138412802;
      unsigned int v26 = v19;
      char v27 = 2048;
      unsigned int v28 = v24;
      id v29 = 2112;
      id v30 = self;
      uint64_t v20 = "[WARN] Trying to remove virtual participant for plugin %@ with different identifier %llu: %@";
      int v21 = v18;
      char v22 = 32;
      goto LABEL_12;
    }

    goto LABEL_13;
  }

  char v12 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation virtualParticipantsByPluginName](self, "virtualParticipantsByPluginName"));
  unsigned int v13 = (void *)objc_claimAutoreleasedReturnValue([v4 pluginName]);
  [v12 setObject:0 forKeyedSubscript:v13];

  id v14 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation delegate](self, "delegate"));
  [v14 conversationChanged:self];

  unint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v4 pluginName]);
  LODWORD(v13) = [v15 isEqualToString:@"PubSub"];

  if ((_DWORD)v13)
  {
    BOOL v16 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation activitySessionManager](self, "activitySessionManager"));
    [v16 updateVirtualParticipantIdentifier:0];
  }

  -[CSDConversation _registerPluginsIfNecessary](self, "_registerPluginsIfNecessary");
LABEL_14:
}

    -[CSDConversation leaveWithReason:](self, "leaveWithReason:", 3LL);
LABEL_14:
    LOBYTE(v3) = 1;
    return v3;
  }

  int v17 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation lightweightMembers](self, "lightweightMembers"));
  id v18 = [v17 count];

  if (v18) {
    goto LABEL_22;
  }
  if (-[CSDConversation isVideoEnabled](self, "isVideoEnabled"))
  {
    uint64_t v19 = sub_1001704C4();
    id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v19);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Ending the screening call because local upgrades to video",  buf,  2u);
    }

    goto LABEL_13;
  }

  __int128 v37 = 0u;
  __int128 v38 = 0u;
  __int128 v35 = 0u;
  __int128 v36 = 0u;
  id v23 = (void *)objc_claimAutoreleasedReturnValue( -[CSDConversation activeParticipantDestinationsByIdentifier]( self,  "activeParticipantDestinationsByIdentifier",  0LL));
  int v24 = [v23 countByEnumeratingWithState:&v35 objects:v39 count:16];
  if (v24)
  {
    uint64_t v25 = v24;
    unsigned int v26 = *(void *)v36;
    while (2)
    {
      for (i = 0LL; i != v25; i = (char *)i + 1)
      {
        if (*(void *)v36 != v26) {
          objc_enumerationMutation(v23);
        }
        unsigned int v28 = *(void *)(*((void *)&v35 + 1) + 8LL * (void)i);
        id v29 = (void *)objc_claimAutoreleasedReturnValue( -[CSDConversation activeRemoteParticipantsByIdentifier]( self,  "activeRemoteParticipantsByIdentifier"));
        id v30 = (void *)objc_claimAutoreleasedReturnValue([v29 objectForKeyedSubscript:v28]);

        if ([v30 isVideoEnabled])
        {
          char v31 = sub_1001704C4();
          uint64_t v32 = (os_log_s *)objc_claimAutoreleasedReturnValue(v31);
          if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
          {
            unsigned int v33 = -[CSDConversation state](self, "state");
            *(_DWORD *)buf = 134218242;
            __int16 v41 = (id)v33;
            char v42 = 2112;
            unsigned int v43 = v30;
            _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_DEFAULT,  "Ending the screening call because participant upgrades to video call, state: %ld, %@",  buf,  0x16u);
          }

          -[CSDConversation leaveWithReason:](self, "leaveWithReason:", 3LL);
          goto LABEL_14;
        }
      }

      uint64_t v25 = [v23 countByEnumeratingWithState:&v35 objects:v39 count:16];
      if (v25) {
        continue;
      }
      break;
    }
  }

  LOBYTE(v3) = 0;
  return v3;
}
}

  int v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", self->_supportsDTMF));
  [v3 setObject:v10 forKey:@"supportsDTMF"];

  has = (char)self->_has;
  if ((has & 0x20) == 0)
  {
LABEL_6:
    if ((has & 1) == 0) {
      goto LABEL_7;
    }
LABEL_15:
    char v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", self->_supportsAddCall));
    [v3 setObject:v12 forKey:@"supportsAddCall"];

    if ((*(_BYTE *)&self->_has & 0x10) == 0) {
      return v3;
    }
    goto LABEL_8;
  }

  PBDataWriterWriteBOOLField(v5, self->_supportsDTMF, 4LL);
  has = (char)self->_has;
  if ((has & 0x20) == 0)
  {
LABEL_6:
    if ((has & 1) == 0) {
      goto LABEL_7;
    }
LABEL_15:
    PBDataWriterWriteBOOLField(v5, self->_supportsAddCall, 7LL);
    if ((*(_BYTE *)&self->_has & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }

  v4[9] = self->_supportsDTMF;
  v4[16] |= 2u;
  has = (char)self->_has;
  if ((has & 0x20) == 0)
  {
LABEL_6:
    if ((has & 1) == 0) {
      goto LABEL_7;
    }
LABEL_15:
    v4[8] = self->_supportsAddCall;
    v4[16] |= 1u;
    if ((*(_BYTE *)&self->_has & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }

  *((_BYTE *)result + 9) = self->_supportsDTMF;
  *((_BYTE *)result + 16) |= 2u;
  has = (char)self->_has;
  if ((has & 0x20) == 0)
  {
LABEL_6:
    if ((has & 1) == 0) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }

  id v6 = 0LL;
  if ((*(_BYTE *)&self->_has & 1) == 0) {
    goto LABEL_14;
  }
LABEL_7:
  id v7 = 2654435761LL * self->_supportsAddCall;
  if ((*(_BYTE *)&self->_has & 0x10) == 0) {
    goto LABEL_15;
  }
LABEL_8:
  uint64_t v8 = 2654435761LL * self->_supportsSendingToVoicemail;
  return v3 ^ v2 ^ v4 ^ v5 ^ v6 ^ v7 ^ v8;
}

  self->_supportsDTMF = v4[9];
  *(_BYTE *)&self->_has |= 2u;
  id v5 = v4[16];
  if ((v5 & 0x20) == 0)
  {
LABEL_6:
    if (!v5) {
      goto LABEL_7;
    }
LABEL_15:
    self->_supportsAddCall = v4[8];
    *(_BYTE *)&self->_has |= 1u;
    if ((v4[16] & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }

      id v18 = (void *)objc_claimAutoreleasedReturnValue(-[CSDIDSChat conference](self, "conference"));

      if (!v18) {
        return -1LL;
      }
      uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(-[CSDIDSChat conference](self, "conference"));
      uint64_t v20 = (char *)[v19 endedReason];

      if (v20 == (char *)2)
      {
        unsigned int v26 = sub_1001704C4();
        BOOL v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v26);
        if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
        {
          char v27 = 134217984;
          unint64_t v15 = 2LL;
          unsigned int v28 = 2LL;
          _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "Using call ended reason remote ended because CSDAVConference ended reason is %ld",  (uint8_t *)&v27,  0xCu);
          goto LABEL_18;
        }

  id v5 = 0LL;
LABEL_14:
  id v6 = -[NSString hash](self->_ringtoneSoundURLString, "hash", v16);
  id v7 = -[NSString hash](self->_originalRingtoneSoundURLString, "hash");
  uint64_t v8 = (unint64_t)-[NSMutableArray hash](self->_handoffIdentifiers, "hash");
  BOOL v9 = PBRepeatedUInt32Hash(&self->_protoSupportedHandleTypes);
  int v10 = (unint64_t)-[NSMutableArray hash](self->_emergencyLabeledHandles, "hash");
  if ((*(_BYTE *)&self->_has & 0x20) != 0) {
    id v11 = 2654435761LL * self->_supportsRecents;
  }
  else {
    id v11 = 0LL;
  }
  char v12 = v21 ^ v22 ^ v20 ^ v19 ^ v18 ^ v17 ^ v3 ^ v4 ^ v5 ^ v6 ^ v7 ^ v8 ^ v9 ^ v10 ^ v11;
  unsigned int v13 = (unint64_t)-[NSMutableArray hash](self->_prioritizedSenderIdentities, "hash");
  id v14 = v13 ^ (unint64_t)-[NSMutableArray hash](self->_emergencyHandles, "hash");
  return v12 ^ v14 ^ -[NSString hash](self->_bundleIdentifier, "hash");
}

  if (!v21)
  {
    char v22 = 0LL;
    goto LABEL_17;
  }

  if ((TUObjectsAreEqualOrNil(v68, v8) & 1) == 0)
  {
    id v18 = sub_1001704C4();
    uint64_t v19 = (os_log_s *)objc_claimAutoreleasedReturnValue(v18);
    uint64_t v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);
    int v21 = TUCallCenterCallContinuityStateChangedNotification;
    if (v20)
    {
      *(_DWORD *)buf = 138413058;
      unint64_t v77 = (const __CFString *)TUCallCenterCallContinuityStateChangedNotification;
      char v78 = 2112;
      *(void *)char v79 = v68;
      *(_WORD *)&v79[8] = 2112;
      *(void *)unsigned int v80 = v8;
      *(_WORD *)&v80[8] = 2112;
      uint64_t v81 = self;
      _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEFAULT,  "Posting %@ because relayClientTransport changed from %@ to %@ for %@",  buf,  0x2Au);
    }

    char v22 = (void *)objc_claimAutoreleasedReturnValue(-[CSDCall notificationCenter](self, "notificationCenter"));
    [v22 postNotificationName:v21 object:self];
  }

  if (v57 != v9)
  {
    id v23 = sub_1001704C4();
    int v24 = (os_log_s *)objc_claimAutoreleasedReturnValue(v23);
    if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138413058;
      unint64_t v77 = @"CSDCallMayRequireBreakBeforeMakeChangedNotification";
      char v78 = 1024;
      *(_DWORD *)char v79 = v57;
      *(_WORD *)&v79[4] = 1024;
      *(_DWORD *)&v79[6] = v9;
      *(_WORD *)unsigned int v80 = 2112;
      *(void *)&v80[2] = self;
      _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEFAULT,  "Posting %@ because mayRequireBreakBeforeMake changed from %d to %d for %@",  buf,  0x22u);
    }

    uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue(-[CSDCall notificationCenter](self, "notificationCenter"));
    [v25 postNotificationName:@"CSDCallMayRequireBreakBeforeMakeChangedNotification" object:self];
  }

  if (v59 != v56)
  {
    unsigned int v26 = sub_1001704C4();
    char v27 = (os_log_s *)objc_claimAutoreleasedReturnValue(v26);
    if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138413058;
      unint64_t v77 = @"CSDCallHasStartedOutgoingChangedNotification";
      char v78 = 1024;
      *(_DWORD *)char v79 = v59;
      *(_WORD *)&v79[4] = 1024;
      *(_DWORD *)&v79[6] = v56;
      *(_WORD *)unsigned int v80 = 2112;
      *(void *)&v80[2] = self;
      _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_DEFAULT,  "Posting %@ because hasStartedOutgoing changed from %d to %d for %@",  buf,  0x22u);
    }

    unsigned int v28 = (void *)objc_claimAutoreleasedReturnValue(-[CSDCall notificationCenter](self, "notificationCenter"));
    [v28 postNotificationName:@"CSDCallHasStartedOutgoingChangedNotification" object:self];
  }

  if (v60 != v58)
  {
    id v29 = sub_1001704C4();
    id v30 = (os_log_s *)objc_claimAutoreleasedReturnValue(v29);
    if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138413058;
      unint64_t v77 = @"CSDCallHasAudioInterruptionChangedNotification";
      char v78 = 1024;
      *(_DWORD *)char v79 = v60;
      *(_WORD *)&v79[4] = 1024;
      *(_DWORD *)&v79[6] = v58;
      *(_WORD *)unsigned int v80 = 2112;
      *(void *)&v80[2] = self;
      _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_DEFAULT,  "Posting %@ because hasAudioInterruption changed from %d to %d for %@",  buf,  0x22u);
    }

    char v31 = (void *)objc_claimAutoreleasedReturnValue(-[CSDCall notificationCenter](self, "notificationCenter"));
    [v31 postNotificationName:@"CSDCallHasAudioInterruptionChangedNotification" object:self];
  }

  if ((-[__CFString isEqualToSet:](v6, "isEqualToSet:", v12) & 1) == 0)
  {
    uint64_t v32 = sub_1001704C4();
    unsigned int v33 = (os_log_s *)objc_claimAutoreleasedReturnValue(v32);
    if (os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412802;
      unint64_t v77 = v6;
      char v78 = 2112;
      *(void *)char v79 = v12;
      *(_WORD *)&v79[8] = 2112;
      *(void *)unsigned int v80 = self;
      _os_log_impl( (void *)&_mh_execute_header,  v33,  OS_LOG_TYPE_DEFAULT,  "activeRemoteParticipants changed from %@ to %@ for %@",  buf,  0x20u);
    }

    uint64_t v34 = [v12 mutableCopy];
    [v34 minusSet:v6];
    if ([v34 count])
    {
      __int128 v35 = sub_1001704C4();
      __int128 v36 = (os_log_s *)objc_claimAutoreleasedReturnValue(v35);
      if (os_log_type_enabled(v36, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        unint64_t v77 = @"CSDCallRemoteParticipantJoinedNotification";
        _os_log_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_DEFAULT, "Posting %@", buf, 0xCu);
      }

      __int128 v37 = (void *)objc_claimAutoreleasedReturnValue(-[CSDCall notificationCenter](self, "notificationCenter"));
      [v37 postNotificationName:@"CSDCallRemoteParticipantJoinedNotification" object:self];
    }

    __int128 v38 = -[__CFString mutableCopy](v6, "mutableCopy");
    [v38 minusSet:v12];
    if ([v38 count])
    {
      uint64_t v39 = sub_1001704C4();
      unint64_t v40 = (os_log_s *)objc_claimAutoreleasedReturnValue(v39);
      if (os_log_type_enabled(v40, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        unint64_t v77 = @"CSDCallRemoteParticipantLeftNotification";
        _os_log_impl((void *)&_mh_execute_header, v40, OS_LOG_TYPE_DEFAULT, "Posting %@", buf, 0xCu);
      }

      __int16 v41 = (void *)objc_claimAutoreleasedReturnValue(-[CSDCall notificationCenter](self, "notificationCenter"));
      [v41 postNotificationName:@"CSDCallRemoteParticipantLeftNotification" object:self];
    }
  }

  if (v63 != v61)
  {
    char v42 = sub_1001704C4();
    unsigned int v43 = (os_log_s *)objc_claimAutoreleasedReturnValue(v42);
    if (os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      unint64_t v77 = @"CSDCallOneToOneModeChangedNotification";
      _os_log_impl((void *)&_mh_execute_header, v43, OS_LOG_TYPE_DEFAULT, "Posting %@", buf, 0xCu);
    }

    uint64_t v44 = (void *)objc_claimAutoreleasedReturnValue(-[CSDCall notificationCenter](self, "notificationCenter"));
    [v44 postNotificationName:@"CSDCallOneToOneModeChangedNotification" object:self];
  }

  if (v65 != v62)
  {
    unint64_t v45 = sub_1001704C4();
    char v46 = (os_log_s *)objc_claimAutoreleasedReturnValue(v45);
    if (os_log_type_enabled(v46, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      unint64_t v77 = @"CSDMediaPlaybackOnExternalDeviceChangedNotification";
      _os_log_impl((void *)&_mh_execute_header, v46, OS_LOG_TYPE_DEFAULT, "Posting %@", buf, 0xCu);
    }

    char v47 = (void *)objc_claimAutoreleasedReturnValue(-[CSDCall notificationCenter](self, "notificationCenter"));
    [v47 postNotificationName:@"CSDMediaPlaybackOnExternalDeviceChangedNotification" object:self];
  }

  if (v67 != v64)
  {
    unsigned int v48 = sub_1001704C4();
    uint64_t v49 = (os_log_s *)objc_claimAutoreleasedReturnValue(v48);
    if (os_log_type_enabled(v49, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      unint64_t v77 = @"CSDCallTransmissionStateChangedNotification";
      _os_log_impl((void *)&_mh_execute_header, v49, OS_LOG_TYPE_DEFAULT, "Posting %@", buf, 0xCu);
    }

    unint64_t v50 = (void *)objc_claimAutoreleasedReturnValue(-[CSDCall notificationCenter](self, "notificationCenter"));
    [v50 postNotificationName:@"CSDCallTransmissionStateChangedNotification" object:self];
  }

  if (v69 != v66)
  {
    char v51 = sub_1001704C4();
    char v52 = (os_log_s *)objc_claimAutoreleasedReturnValue(v51);
    if (os_log_type_enabled(v52, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      unint64_t v77 = @"CSDCallPrefersToPlayDuringWombatChangedNotification";
      _os_log_impl((void *)&_mh_execute_header, v52, OS_LOG_TYPE_DEFAULT, "Posting %@", buf, 0xCu);
    }

    unsigned int v53 = (void *)objc_claimAutoreleasedReturnValue(-[CSDCall notificationCenter](self, "notificationCenter"));
    [v53 postNotificationName:@"CSDCallPrefersToPlayDuringWombatChangedNotification" object:self];
  }
}

  return (char)v6;
}

  uint64_t v20 = sub_1001704C4();
  int v21 = (os_log_s *)objc_claimAutoreleasedReturnValue(v20);
  if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412802;
    unsigned int v28 = v7;
    id v29 = 2112;
    id v30 = v11;
    char v31 = 2112;
    uint64_t v32 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEFAULT,  "callerIDHandleForSenderIdentityUUID: callerID: %@ handle: %@ for %@",  buf,  0x20u);
  }

  return v11;
}
}

  return v6;
}

  id v23 = *(void **)(a1 + 32);
  if (v23)
  {
    int v24 = (void *)objc_claimAutoreleasedReturnValue([v23 activityType]);
    uint64_t v25 = +[CSDUserActivity activityTypeForUserActivityTypeString:]( &OBJC_CLASS___CSDUserActivity,  "activityTypeForUserActivityTypeString:",  v24);

    if ((_DWORD)v25 && v5)
    {
      unsigned int v26 = sub_1001704C4();
      char v27 = (os_log_s *)objc_claimAutoreleasedReturnValue(v26);
      if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
      {
        unsigned int v28 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) activityType]);
        id v29 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) dynamicIdentifier]);
        uint64_t v32 = 67109634;
        *(_DWORD *)unsigned int v33 = v25;
        *(_WORD *)&v33[4] = 2112;
        *(void *)&v33[6] = v28;
        uint64_t v34 = 2112;
        __int128 v35 = v29;
        _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_DEFAULT,  "Firing delegate callback with activity type %d (%@) and dynamicIdentifier %@",  (uint8_t *)&v32,  0x1Cu);
      }

      id v30 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) dynamicIdentifier]);
      char v31 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) originatingDeviceType]);
      [v5 receivedBroadcastedActivityType:v25 dynamicIdentifier:v30 originatingDeviceType:v31];
    }

    [*(id *)(a1 + 40) setMostRecentBestAppSuggestion:*(void *)(a1 + 32)];
  }
}

  _Block_object_dispose(&v15, 8);
  return v12;
}

  BOOL v16 = sub_1001704C4();
  int v17 = (os_log_s *)objc_claimAutoreleasedReturnValue(v16);
  if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412546;
    uint64_t v44 = v6;
    unint64_t v45 = 2112;
    char v46 = v15;
    _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "Validated link for join call action %@ link: %@",  buf,  0x16u);
  }

LABEL_21:
  return v15;
}

  switch((unint64_t)[v5 state])
  {
    case 0uLL:
      uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue([v5 UUID]);
      unsigned int v26 = -[CSDAbstractFaceTimeConversationProviderDelegate _isWaitingToJoinForConversationUUID:]( v60,  "_isWaitingToJoinForConversationUUID:",  v25);

      if ((v26 & 1) != 0) {
        goto LABEL_28;
      }
      char v27 = objc_alloc_init(&OBJC_CLASS___CXCallFailureContext);
      -[CXCallFailureContext setFailureReason:](v27, "setFailureReason:", 0LL);
      -[CXCallFailureContext setProviderEndedReason:](v27, "setProviderEndedReason:", 504LL);
      unsigned int v28 = (void *)objc_claimAutoreleasedReturnValue([v5 UUID]);
      -[CSDAbstractFaceTimeConversationProviderDelegate cleanUpConversationIfNecessaryForConversationUUID:failureContext:]( v60,  "cleanUpConversationIfNecessaryForConversationUUID:failureContext:",  v28,  v27);

      goto LABEL_48;
    case 1uLL:
      -[CSDAbstractFaceTimeConversationProviderDelegate fullfillPendingJoinActionsForCallUUIDIfNecessary:]( v60,  "fullfillPendingJoinActionsForCallUUIDIfNecessary:",  v61);
      if (!v61) {
        goto LABEL_31;
      }
      goto LABEL_29;
    case 2uLL:
      if (v61)
      {
        if ([v5 isLocallyCreated])
        {
          if (([v5 isOneToOneModeEnabled] & 1) == 0)
          {
            -[CXCallUpdate setRequiresInCallSounds:](v9, "setRequiresInCallSounds:", 0LL);
            id v29 = (void *)objc_claimAutoreleasedReturnValue(-[CSDAbstractFaceTimeConversationProviderDelegate provider](v60, "provider"));
            id v30 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
            [v29 reportOutgoingCallWithUUID:v61 startedConnectingAtDate:v30];
          }

          char v31 = (void *)objc_claimAutoreleasedReturnValue(-[CSDAbstractFaceTimeConversationProviderDelegate provider](v60, "provider"));
          uint64_t v32 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
          [v31 reportOutgoingCallWithUUID:v61 sentInvitationAtDate:v32];
        }

        -[CSDAbstractFaceTimeConversationProviderDelegate fullfillPendingJoinActionsForCallUUIDIfNecessary:]( v60,  "fullfillPendingJoinActionsForCallUUIDIfNecessary:",  v61);
        goto LABEL_29;
      }

      __int128 v36 = sub_1001704C4();
      __int128 v35 = (os_log_s *)objc_claimAutoreleasedReturnValue(v36);
      if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR)) {
        sub_1002B8028((uint64_t)v5, v35, v37, v38, v39, v40, v41, v42);
      }
      goto LABEL_30;
    case 3uLL:
      if (!v61)
      {
        unsigned int v43 = sub_1001704C4();
        uint64_t v44 = (os_log_s *)objc_claimAutoreleasedReturnValue(v43);
        if (os_log_type_enabled(v44, OS_LOG_TYPE_ERROR)) {
          sub_1002B7FC0((uint64_t)v5, v44, v45, v46, v47, v48, v49, v50);
        }

        __int128 v35 = (os_log_s *)objc_claimAutoreleasedReturnValue( -[CSDAbstractFaceTimeConversationProviderDelegate conversationManager]( v60,  "conversationManager"));
        char v51 = (void *)objc_claimAutoreleasedReturnValue([v5 UUID]);
        -[os_log_s leaveConversationWithUUID:](v35, "leaveConversationWithUUID:", v51);

        goto LABEL_30;
      }

      if ([v5 isOneToOneModeEnabled])
      {
        unsigned int v33 = (void *)objc_claimAutoreleasedReturnValue( -[CSDAbstractFaceTimeConversationProviderDelegate faceTimeDemuxerDelegate]( v60,  "faceTimeDemuxerDelegate"));
        uint64_t v34 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
        [v33 providerDelegate:v60 callWithUUID:v61 connectedAtDate:v34];
      }

      else
      {
        unsigned int v33 = (void *)objc_claimAutoreleasedReturnValue(-[CSDAbstractFaceTimeConversationProviderDelegate provider](v60, "provider"));
        uint64_t v34 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
        [v33 reportOutgoingCallWithUUID:v61 connectedAtDate:v34];
      }

      char v52 = (void *)objc_claimAutoreleasedReturnValue(-[CSDAbstractFaceTimeConversationProviderDelegate provider](v60, "provider"));
      unint64_t v54 = objc_msgSend( v52,  "pendingCallActionsOfClass:withCallUUID:",  objc_opt_class(CXAnswerCallAction, v53),  v61);
      char v55 = (void *)objc_claimAutoreleasedReturnValue(v54);

      char v64 = 0u;
      char v65 = 0u;
      uint64_t v62 = 0u;
      unint64_t v63 = 0u;
      char v27 = v55;
      char v56 = -[CXCallFailureContext countByEnumeratingWithState:objects:count:]( v27,  "countByEnumeratingWithState:objects:count:",  &v62,  v70,  16LL);
      if (v56)
      {
        unsigned int v57 = v56;
        unint64_t v58 = *(void *)v63;
        do
        {
          for (j = 0LL; j != v57; j = (char *)j + 1)
          {
            if (*(void *)v63 != v58) {
              objc_enumerationMutation(v27);
            }
            [*(id *)(*((void *)&v62 + 1) + 8 * (void)j) fulfill];
          }

          unsigned int v57 = -[CXCallFailureContext countByEnumeratingWithState:objects:count:]( v27,  "countByEnumeratingWithState:objects:count:",  &v62,  v70,  16LL);
        }

        while (v57);
      }

LABEL_48:
      if (v61)
      {
LABEL_29:
        __int128 v35 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[CSDAbstractFaceTimeConversationProviderDelegate provider](v60, "provider"));
        -[os_log_s reportCallWithUUID:updated:](v35, "reportCallWithUUID:updated:", v61, v9);
LABEL_30:
      }

    goto LABEL_17;
  }

  id v14 = sub_1001704C4();
  unint64_t v15 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
  if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "No other unique proxy identifiers included. Assuming legacy behavior",  buf,  2u);
  }

  BOOL v16 = (void *)objc_claimAutoreleasedReturnValue(+[TUCallCenter sharedInstance](&OBJC_CLASS___TUCallCenter, "sharedInstance"));
  v26[0] = _NSConcreteStackBlock;
  v26[1] = 3221225472LL;
  v26[2] = sub_100152CF0;
  v26[3] = &unk_1003D79F0;
  int v17 = v6;
  char v27 = v17;
  id v18 = (void *)objc_claimAutoreleasedReturnValue([v16 callPassingTest:v26]);

  if (v18)
  {
    uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(+[TUCallCenter sharedInstance](&OBJC_CLASS___TUCallCenter, "sharedInstance"));
    [v19 groupCall:v17 withOtherCall:v18];
  }

  else
  {
    int v24 = sub_1001704C4();
    uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(v24);
    if (os_log_type_enabled((os_log_t)v19, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v25 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[CSDRelayController allCalls](self, "allCalls"));
      *(_DWORD *)buf = 138412290;
      id v29 = v25;
      _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v19,  OS_LOG_TYPE_DEFAULT,  "[WARN] Could not find another call to group with. All calls: %@",  buf,  0xCu);
    }
  }

  BOOL v9 = v27;
LABEL_17:
}
  }

  else
  {
    LOBYTE(v5) = 1;
  }

  return (char)v5;
}
  }

  return (char)v3;
}

  __break(1u);
  return result;
}

  char v22 = sub_100170614();
  id v23 = static os_log_type_t.default.getter(v22);
  os_log(_:dso:log:type:_:)( "Successfully started audio session",  34LL,  2LL,  &_mh_execute_header,  v22,  v23,  _swiftEmptyArrayStorage);

  memcpy(v34, __dst, 0x99uLL);
  ScreenSharingActivityManager.carPlayStartedConnectionAttempt()();
  sub_1001DE884((uint64_t)__src);
LABEL_20:
  sub_1001DEA24((uint64_t)v34, (uint64_t)v35, (uint64_t *)&unk_10044B7C0);
  uint64_t v32 = a4 + 16;
  sub_1001DEA24(v32, (uint64_t)v34, (uint64_t *)&unk_10044B7C0);
  sub_1001DEA24((uint64_t)v35, v32, (uint64_t *)&unk_10044B7C0);
  sub_1001DE914( (uint64_t)v35,  (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1001DE980);
  sub_1001DE914( (uint64_t)v34,  (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1001DE6C4);
  if (a5) {
    OS_dispatch_semaphore.signal()();
  }
  return sub_1001DE914( (uint64_t)v35,  (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1001DE6C4);
}

  __int128 v36 = (void *)Logger.logObject.getter(v28, v29, v30);
  __int128 v38 = static os_log_type_t.error.getter(v36, v37);
  if (os_log_type_enabled((os_log_t)v36, v38))
  {
    uint64_t v39 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v39 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v36,  v38,  "Did not find expected pending chat information",  v39,  2u);
    swift_slowDealloc(v39, -1LL, -1LL);
  }

  char v46 = sub_1001BB478(v36, (uint64_t *)&unk_10044A400);
  uint64_t v49 = (os_log_s *)Logger.logObject.getter(v46, v47, v48);
  char v51 = static os_log_type_t.error.getter(v49, v50);
  if (os_log_type_enabled(v49, v51))
  {
    char v52 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)char v52 = 0;
    _os_log_impl((void *)&_mh_execute_header, v49, v51, "Did not find expected pending chat uuid information", v52, 2u);
    swift_slowDealloc(v52, -1LL, -1LL);
  }
}

    uint64_t v8 = (v13 - 1) & v13;
    id v11 = __clz(__rbit64(v13)) + (v12 << 6);
    id v7 = v12;
  }

  __break(1u);
  return result;
}

  __break(1u);
  return result;
}
}

    swift_bridgeObjectRelease_n(a2, 2LL);
    int v21 = 0LL;
    id v23 = v41;
LABEL_14:
    int v24 = sub_1001704C4();
    unsigned int v26 = static os_log_type_t.error.getter(v24, v25);
    char v27 = sub_1001AFF14((uint64_t *)&unk_100447E30);
    unsigned int v28 = swift_allocObject(v27, 72LL, 7LL);
    *(_OWORD *)(v28 + 16) = xmmword_10037B290;
    sub_1001D8EA0(0LL, (unint64_t *)&qword_10044CAD0, &OBJC_CLASS___TURoute_ptr);
    *(void *)(v28 + 56) = v29;
    *(void *)(v28 + 64) = sub_1001F0B20();
    *(void *)(v28 + 32) = v23;
    id v30 = v23;
    os_log(_:dso:log:type:_:)( "Timed out waiting for route to become picked: %@",  48LL,  2LL,  &_mh_execute_header,  v24,  v26,  v28);

    swift_bridgeObjectRelease(v28);
    char v31 = *(void (**)(id))(v5 + OBJC_IVAR___CSDRouteController_timedOutPickingRouteHandler);
    if (v31)
    {
      uint64_t v32 = *(void *)(v5 + OBJC_IVAR___CSDRouteController_timedOutPickingRouteHandler + 8);
      swift_retain(v32);
      v31(v30);
      sub_1001B5D3C((uint64_t)v31, v32);
    }

  swift_bridgeObjectRelease(v13);
}

  char v31 = v2 + OBJC_IVAR____TtC13callservicesd23LocalAudioRouteProvider_routesDidChangeHandler;
  uint64_t v32 = *(void (**)(uint64_t))(v2
                                       + OBJC_IVAR____TtC13callservicesd23LocalAudioRouteProvider_routesDidChangeHandler);
  if (v32)
  {
    unsigned int v33 = *(void *)(v31 + 8);
    uint64_t v34 = swift_retain(v33);
    v32(v34);
    sub_1001B5D3C((uint64_t)v32, v33);
  }

void sub_10001A5AC(id a1, NSString *a2, double a3)
{
  char v4 = a2;
  id v5 = sub_1001704C4();
  id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    int v7 = 138412546;
    uint64_t v8 = v4;
    __int16 v9 = 2048;
    double v10 = a3;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Calling ADClientSetValueForDistributionKey() with key %@ and value %f",  (uint8_t *)&v7,  0x16u);
  }

  if (qword_10044CE28 != -1) {
    dispatch_once(&qword_10044CE28, &stru_1003D7A78);
  }
  off_10044CE20(v4, a3);
}

void sub_10001A6A8(id a1)
{
  off_10044CE20 = (_UNKNOWN *)CUTWeakLinkSymbol("ADClientSetValueForDistributionKey", @"AggregateDictionary");
}

id sub_10001A848(void *a1)
{
  id v1 = a1;
  unsigned int v2 = v1;
  if (v1)
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue([v1 conferenceID]);
    if ([v3 hasPrefix:@"ConferenceID:"])
    {
      uint64_t v4 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "substringFromIndex:", objc_msgSend(@"ConferenceID:", "length")));

      id v3 = (void *)v4;
    }

    if ([v3 length])
    {
      id v5 = v3;
    }

    else
    {
      id v6 = sub_1001704C4();
      int v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v2 conferenceID]);
        __int16 v9 = (void *)objc_claimAutoreleasedReturnValue([v2 GUID]);
        int v13 = 138412802;
        id v14 = v2;
        __int16 v15 = 2112;
        BOOL v16 = v8;
        __int16 v17 = 2112;
        id v18 = v9;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "[WARN] Tried to get the call history identifier for this call (%@) but no conference ID was available (%@), we 'll fall back to another method (GUID = %@). This call may now not sync properly between devices.",  (uint8_t *)&v13,  0x20u);
      }

      id v5 = (void *)objc_claimAutoreleasedReturnValue([v2 GUID]);
      if (![v5 length])
      {
        id v10 = sub_1001704C4();
        id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
        if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
          sub_1002B1CC4(v11);
        }
      }
    }
  }

  else
  {
    id v5 = 0LL;
  }

  return v5;
}

char *sub_10001A9F0(void *a1)
{
  id v1 = a1;
  unsigned int v2 = (void *)objc_claimAutoreleasedReturnValue([v1 dataUploaded]);
  id v3 = (char *)[v2 integerValue];
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v1 dataDownloaded]);

  id v5 = &v3[(void)[v4 integerValue]];
  return v5;
}

LABEL_70:
  -[CXCallUpdate setMediaPlaybackOnExternalDevice:](v5, "setMediaPlaybackOnExternalDevice:", v48);
  if ((v42 & 1) == 0 && (v54 | [v4 isScreenEnabled]) != 1)
  {
    -[CXCallUpdate setMixesVoiceWithMedia:](v5, "setMixesVoiceWithMedia:", 0LL);
    goto LABEL_75;
  }

  if (!v44)
  {
LABEL_75:
    -[CXCallUpdate setIgnoresBluetoothDeviceUID:](v5, "setIgnoresBluetoothDeviceUID:", 0LL);
    goto LABEL_76;
  }

  -[CXCallUpdate setMixesVoiceWithMedia:](v5, "setMixesVoiceWithMedia:", 1LL);
LABEL_76:
  unsigned int v57 = (void *)objc_claimAutoreleasedReturnValue([v4 selectiveSharingSessionUUID]);

  if (v57)
  {
    unint64_t v58 = objc_alloc_init(&OBJC_CLASS___CXScreenShareAttributes);
    char v59 = (void *)objc_claimAutoreleasedReturnValue([v4 selectiveSharingSessionUUID]);
    [v58 setWindowUUID:v59];

    -[CXCallUpdate setScreenShareAttributes:](v5, "setScreenShareAttributes:", v58);
  }

  char v60 = (void *)objc_claimAutoreleasedReturnValue([v4 handoffContext]);

  if (v60)
  {
    unsigned int v61 = (void *)objc_claimAutoreleasedReturnValue([v4 handoffContext]);
    -[CXCallUpdate setPrefersToPlayDuringWombat:]( v5,  "setPrefersToPlayDuringWombat:",  [v61 prefersToPlayDuringWombat]);
  }

  unsigned int v85 = v5;
  uint64_t v62 = objc_alloc_init(&OBJC_CLASS___CXCallTokens);
  objc_msgSend(v62, "setCombinedAudioStreamToken:", objc_msgSend(v4, "avcSessionToken"));
  objc_msgSend(v62, "setUplinkStreamToken:", objc_msgSend(v4, "localCaptionToken"));
  unint64_t v63 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  uint64_t v86 = 0u;
  unint64_t v87 = 0u;
  char v88 = 0u;
  uint64_t v89 = 0u;
  char v83 = v4;
  char v64 = (void *)objc_claimAutoreleasedReturnValue([v4 activeRemoteParticipants]);
  char v65 = [v64 countByEnumeratingWithState:&v86 objects:v102 count:16];
  if (v65)
  {
    unsigned int v66 = v65;
    uint64_t v67 = *(void *)v87;
    do
    {
      for (m = 0LL; m != v66; m = (char *)m + 1)
      {
        if (*(void *)v87 != v67) {
          objc_enumerationMutation(v64);
        }
        char v69 = *(void **)(*((void *)&v86 + 1) + 8LL * (void)m);
        char v70 = objc_alloc(&OBJC_CLASS___NSUUID);
        unsigned int v71 = (void *)objc_claimAutoreleasedReturnValue([v69 avcIdentifier]);
        uint64_t v72 = -[NSUUID initWithUUIDString:](v70, "initWithUUIDString:", v71);

        if (v72)
        {
          unint64_t v73 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInteger:]( NSNumber,  "numberWithInteger:",  [v69 captionsToken]));
          -[NSMutableDictionary setObject:forKeyedSubscript:](v63, "setObject:forKeyedSubscript:", v73, v72);
        }
      }

      unsigned int v66 = [v64 countByEnumeratingWithState:&v86 objects:v102 count:16];
    }

    while (v66);
  }

  char v74 = -[NSMutableDictionary copy](v63, "copy");
  [v62 setStreamTokensByParticipantID:v74];

  char v75 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableDictionary allValues](v63, "allValues"));
  unsigned int v76 = (void *)objc_claimAutoreleasedReturnValue([v75 firstObject]);
  objc_msgSend(v62, "setDownlinkStreamToken:", objc_msgSend(v76, "integerValue"));

  id v5 = v85;
  -[CXCallUpdate setCallTokens:](v85, "setCallTokens:", v62);
  uint64_t v4 = v83;
  unint64_t v77 = (void *)objc_claimAutoreleasedReturnValue([v83 report]);
  char v78 = (void *)objc_claimAutoreleasedReturnValue([v77 conversationID]);
  -[CXCallUpdate setConversationID:](v85, "setConversationID:", v78);

LABEL_90:
  return v5;
}

  PBDataWriterWriteBOOLField(v5, self->_protoShouldSuppressRingtone, 13LL);
  char v12 = self->_has;
  if ((*(_WORD *)&v12 & 0x800) == 0)
  {
LABEL_22:
    if ((*(_BYTE *)&v12 & 0x10) == 0) {
      goto LABEL_23;
    }
    goto LABEL_72;
  }

  *((_BYTE *)v4 + 137) = self->_protoEmergency;
  *((_DWORD *)v4 + 38) |= 0x100u;
  if ((*(_DWORD *)&self->_has & 0x400) != 0)
  {
LABEL_25:
    *((_BYTE *)v4 + 139) = self->_protoHasSentInvitation;
    *((_DWORD *)v4 + 38) |= 0x400u;
  }

  PBDataWriterWriteBOOLField(v5, self->_videoEnabled, 16LL);
  char v27 = self->_has;
  if ((*(_BYTE *)&v27 & 1) == 0)
  {
LABEL_46:
    if ((*(_BYTE *)&v27 & 0x10) == 0) {
      goto LABEL_48;
    }
    goto LABEL_47;
  }

BOOL sub_10001BE54(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (1)
    {
      if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      char v4 = 0;
      unsigned int v5 = 0;
      unint64_t v6 = 0LL;
      while (1)
      {
        unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v7 == -1LL || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v8 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
        v6 |= (unint64_t)(v8 & 0x7F) << v4;
        if ((v8 & 0x80) == 0) {
          goto LABEL_11;
        }
        v4 += 7;
        if (v5++ >= 9)
        {
          unint64_t v6 = 0LL;
          int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
          goto LABEL_13;
        }
      }

      *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
      int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
      if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        unint64_t v6 = 0LL;
      }
LABEL_13:
      if (v10 || (v6 & 7) == 4) {
        return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      if ((v6 >> 3) == 1)
      {
        char v12 = 0;
        unsigned int v13 = 0;
        uint64_t v14 = 0LL;
        *(_BYTE *)(a1 + 24) |= 2u;
        while (1)
        {
          unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v15 == -1LL || v15 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            id v18 = &OBJC_IVAR___CSDMessagingParticipantProminenceEntry__participantIdentifier;
            goto LABEL_37;
          }

          char v16 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
          v14 |= (unint64_t)(v16 & 0x7F) << v12;
          if ((v16 & 0x80) == 0) {
            break;
          }
          v12 += 7;
          BOOL v17 = v13++ > 8;
          if (v17)
          {
            uint64_t v14 = 0LL;
            id v18 = &OBJC_IVAR___CSDMessagingParticipantProminenceEntry__participantIdentifier;
            goto LABEL_40;
          }
        }

        id v18 = &OBJC_IVAR___CSDMessagingParticipantProminenceEntry__participantIdentifier;
LABEL_38:
        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v14 = 0LL;
        }
LABEL_40:
        *(void *)(a1 + *v1_Block_object_dispose(va, 8) = v14;
        goto LABEL_41;
      }

      if ((PBReaderSkipValueWithTag(a2) & 1) == 0) {
        return 0LL;
      }
LABEL_41:
      if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
    }

    char v19 = 0;
    unsigned int v20 = 0;
    uint64_t v14 = 0LL;
    *(_BYTE *)(a1 + 24) |= 1u;
    while (1)
    {
      unint64_t v21 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v21 == -1LL || v21 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v22 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v21);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v21 + 1;
      v14 |= (unint64_t)(v22 & 0x7F) << v19;
      if ((v22 & 0x80) == 0)
      {
        id v18 = &OBJC_IVAR___CSDMessagingParticipantProminenceEntry__audioPriority;
        goto LABEL_38;
      }

      v19 += 7;
      BOOL v17 = v20++ > 8;
      if (v17)
      {
        uint64_t v14 = 0LL;
        id v18 = &OBJC_IVAR___CSDMessagingParticipantProminenceEntry__audioPriority;
        goto LABEL_40;
      }
    }

    id v18 = &OBJC_IVAR___CSDMessagingParticipantProminenceEntry__audioPriority;
LABEL_37:
    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
    goto LABEL_38;
  }

  return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

LABEL_12:
  return v6;
}

    char v19 = 0;
    goto LABEL_13;
  }

  unint64_t v21 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation pendingRemoteMembers](self, "pendingRemoteMembers"));
  char v22 = [v21 containsObject:v4];

  if ((v22 & 1) == 0)
  {
    unsigned int v26 = sub_1001704C4();
    unint64_t v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v26);
    if (!os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_12;
    }
    BOOL v17 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation pendingRemoteMembers](self, "pendingRemoteMembers"));
    char v27 = 138412546;
    unsigned int v28 = v4;
    id v29 = 2112;
    id v30 = v17;
    id v18 = "member: %@ is not in pendingRemoteMembers: %@";
    goto LABEL_11;
  }

  id v23 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation pendingRemoteMembers](self, "pendingRemoteMembers"));
  [v23 removeObject:v4];

  int v24 = sub_1001704C4();
  unint64_t v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v24);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation pendingRemoteMembers](self, "pendingRemoteMembers"));
    char v27 = 138412546;
    unsigned int v28 = v4;
    id v29 = 2112;
    id v30 = v25;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Get matching memeber: %@ current pendingRemoteMembers: %@",  (uint8_t *)&v27,  0x16u);
  }

  char v19 = 1;
LABEL_13:

  return v19;
}

      return;
    }

    objc_initWeak(buf, self);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_10003574C;
    block[3] = &unk_1003D7DF0;
    objc_copyWeak(&v27, buf);
    BOOL v17 = dispatch_block_create((dispatch_block_flags_t)0LL, block);
    -[CSDConversation setNoConversationParticipantTimeoutBlock:](self, "setNoConversationParticipantTimeoutBlock:", v17);

    id v18 = sub_1001704C4();
    char v19 = (os_log_s *)objc_claimAutoreleasedReturnValue(v18);
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      unsigned int v20 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation serverBag](self, "serverBag"));
      unint64_t v21 = [v20 noConversationParticipantTimeout];
      *(_DWORD *)id v29 = 67109120;
      id v30 = v21;
      _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEFAULT,  "_endCallIfNecessary: started noConversationParticipantTimeout: %d",  v29,  8u);
    }

    char v22 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation serverBag](self, "serverBag"));
    id v23 = dispatch_time(0, 1000000000 * (void)[v22 noConversationParticipantTimeout]);
    int v24 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(-[CSDConversation queue](self, "queue"));
    uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue( -[CSDConversation noConversationParticipantTimeoutBlock]( self,  "noConversationParticipantTimeoutBlock"));
    dispatch_after(v23, v24, v25);

    objc_destroyWeak(&v27);
    objc_destroyWeak(buf);
  }

  else
  {
    unint64_t v7 = sub_1001704C4();
    char v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(buf[0]) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "disable noConversationParticipantEndCall due to server over-ride",  (uint8_t *)buf,  2u);
    }
  }

  -[NSMutableArray sortUsingSelector:](v3, "sortUsingSelector:", "caseInsensitiveCompare:");
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableArray componentsJoinedByString:](v3, "componentsJoinedByString:", @"-"));
  unint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v14 dataUsingEncoding:4]);
  char v16 = (void *)objc_claimAutoreleasedReturnValue([v15 SHA1HexString]);

  BOOL v17 = sub_1001704C4();
  id v18 = (os_log_s *)objc_claimAutoreleasedReturnValue(v17);
  if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
  {
    char v19 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation UUID](self, "UUID"));
    *(_DWORD *)buf = 138412546;
    unsigned int v26 = v16;
    char v27 = 2112;
    unsigned int v28 = v19;
    _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEFAULT,  "_stableExpanseIdentifier %@ for %@ ",  buf,  0x16u);
  }

  return v16;
}
}

  __int16 v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", self->_supportsUngrouping));
  [v3 setObject:v9 forKey:@"supportsUngrouping"];

  has = (char)self->_has;
  if ((has & 2) == 0)
  {
LABEL_5:
    if ((has & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }

  PBDataWriterWriteBOOLField(v5, self->_supportsUngrouping, 3LL);
  has = (char)self->_has;
  if ((has & 2) == 0)
  {
LABEL_5:
    if ((has & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }

  v4[14] = self->_supportsUngrouping;
  v4[16] |= 0x40u;
  has = (char)self->_has;
  if ((has & 2) == 0)
  {
LABEL_5:
    if ((has & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }

  *((_BYTE *)result + 14) = self->_supportsUngrouping;
  *((_BYTE *)result + 16) |= 0x40u;
  has = (char)self->_has;
  if ((has & 2) == 0)
  {
LABEL_5:
    if ((has & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }

  unsigned int v5 = 0LL;
  if ((*(_BYTE *)&self->_has & 0x20) != 0)
  {
LABEL_6:
    unint64_t v6 = 2654435761LL * self->_supportsUnambiguousMultiPartyState;
    if ((*(_BYTE *)&self->_has & 1) != 0) {
      goto LABEL_7;
    }
LABEL_14:
    unint64_t v7 = 0LL;
    if ((*(_BYTE *)&self->_has & 0x10) != 0) {
      goto LABEL_8;
    }
LABEL_15:
    char v8 = 0LL;
    return v3 ^ v2 ^ v4 ^ v5 ^ v6 ^ v7 ^ v8;
  }

  self->_supportsUngrouping = v4[14];
  *(_BYTE *)&self->_has |= 0x40u;
  unsigned int v5 = v4[16];
  if ((v5 & 2) == 0)
  {
LABEL_5:
    if ((v5 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
}

        char v12 = 1LL;
      }
  }

  else
  {
    LOBYTE(v10) = 0;
  }

  return (char)v10;
}
}

    unint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(-[CSDCallCapabilities state](self, "state"));
    char v16 = [v15 isRelayCallingEnabled];
    if ((v6 & 1) != 0 || (v16 & 1) != 0)
    {
    }

    else
    {
      BOOL v17 = defaultAppRelayTelephonySettingUserDefault();

      if (v17 == 2) {
        removeDefaultAppRelayTelephonySetting();
      }
    }
  }
  }

  protoUpgradeSessionUUID = self->_protoUpgradeSessionUUID;
  if (protoUpgradeSessionUUID)
  {
    PBDataWriterWriteStringField(v9, protoUpgradeSessionUUID, 9LL);
    char v4 = v9;
  }
}

  if (self->_protoUpgradeSessionUUID)
  {
    objc_msgSend(v7, "setProtoUpgradeSessionUUID:");
    char v4 = v7;
  }
}

    unint64_t v6 = 0;
  }

    int v10 = 1LL;
    goto LABEL_13;
  }

  if (([WeakRetained _doNotDisturbAllowsCallFromSourceAddress:v5 providerIdentifier:v6] & 1) == 0)
  {
    uint64_t v14 = sub_1001704C4();
    char v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      char v16 = 138412290;
      BOOL v17 = v5;
      unsigned int v13 = "Disallowing call with sourceAddress %@ since _doNotDisturbAllowsCallFromSourceAddress returned NO";
      goto LABEL_11;
    }

    goto LABEL_12;
  }

    char v22 = (void *)objc_claimAutoreleasedReturnValue(-[CSDRecentsController transactionManager](self, "transactionManager"));
    id v23 = (void *)objc_claimAutoreleasedReturnValue([v5 uniqueProxyIdentifier]);
    [v22 beginTransactionIfNecessaryForObject:v10 withReason:v23];
    goto LABEL_15;
  }

  [v12 setObject:0 forKeyedSubscript:v13];

  if (-[CSDRecentsController _canAddCallToCallHistory:](self, "_canAddCallToCallHistory:", v5))
  {
    -[CSDRecentsController _addCallToCallHistory:](self, "_addCallToCallHistory:", v5);
    -[CSDRecentsController _endTransactionForObjectAfterCallHistoryDatabaseChanges:]( self,  "_endTransactionForObjectAfterCallHistoryDatabaseChanges:",  v10);
  }

  else
  {
    int v24 = (void *)objc_claimAutoreleasedReturnValue(-[CSDRecentsController transactionManager](self, "transactionManager"));
    [v24 endTransactionIfNecessaryForObject:v10];
  }

  char v22 = (void *)objc_claimAutoreleasedReturnValue( -[CSDRecentsController cachedCallUUIDsToConversationAVMode]( self,  "cachedCallUUIDsToConversationAVMode"));
  id v23 = (void *)objc_claimAutoreleasedReturnValue([v5 uniqueProxyIdentifier]);
  [v22 setObject:0 forKeyedSubscript:v23];
LABEL_15:
}

    goto LABEL_42;
  }

  char v56 = v10;
  uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue(-[CSDAbstractFaceTimeConversationProviderDelegate invitationResolver](self, "invitationResolver"));
  unsigned int v26 = (void *)objc_claimAutoreleasedReturnValue(-[__CFString localMember](v9, "localMember"));
  char v27 = (void *)objc_claimAutoreleasedReturnValue([v26 handle]);
  unsigned int v28 = (void *)objc_claimAutoreleasedReturnValue([v8 tuInvitationPreferences]);
  id v29 = [v25 shouldShowInvitationRingingUIForConversation:v9 handle:v27 invitationMessagePreferences:v28];

  id v30 = sub_1001704C4();
  char v31 = (os_log_s *)objc_claimAutoreleasedReturnValue(v30);
  if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
  {
    if (v29) {
      uint64_t v32 = @"YES";
    }
    else {
      uint64_t v32 = @"NO";
    }
    unsigned int v33 = (__CFString *)objc_claimAutoreleasedReturnValue([v8 tuInvitationPreferences]);
    *(_DWORD *)buf = 138412546;
    unint64_t v58 = v32;
    char v59 = 2112;
    char v60 = v33;
    _os_log_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_DEFAULT,  "shouldRing = %@, tuInvitationPreferences: %@",  buf,  0x16u);
  }

  uint64_t v34 = (void *)objc_claimAutoreleasedReturnValue(-[__CFString invitationPreferences](v9, "invitationPreferences"));
  __int128 v35 = (void *)objc_claimAutoreleasedReturnValue([v8 tuInvitationPreferences]);
  __int128 v36 = [v34 isEqualToSet:v35];

  __int128 v37 = (void *)objc_claimAutoreleasedReturnValue([v8 tuInvitationPreferences]);
  if ([v37 count] && !v36)
  {

    if ((v29 & 1) == 0) {
      goto LABEL_39;
    }
LABEL_29:
    int v10 = v56;
    if ([v8 type] == 1)
    {
      uint64_t v44 = (void *)objc_claimAutoreleasedReturnValue(-[__CFString remoteMembers](v9, "remoteMembers"));
      if ([v44 count] != (id)1)
      {
LABEL_33:

        goto LABEL_34;
      }

      unint64_t v45 = (void *)objc_claimAutoreleasedReturnValue(-[__CFString activeRemoteParticipants](v9, "activeRemoteParticipants"));
      if ([v45 count])
      {

        goto LABEL_33;
      }

      char v46 = (void *)objc_claimAutoreleasedReturnValue(-[__CFString localMember](v9, "localMember"));
      char v47 = (void *)objc_claimAutoreleasedReturnValue([v46 handle]);
      char v55 = [v56 isEquivalentToHandle:v47];

      if (v55)
      {
        unsigned int v48 = sub_1001704C4();
        uint64_t v49 = (os_log_s *)objc_claimAutoreleasedReturnValue(v48);
        if (os_log_type_enabled(v49, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412290;
          unint64_t v58 = v9;
          _os_log_impl( (void *)&_mh_execute_header,  v49,  OS_LOG_TYPE_DEFAULT,  "This is a U+1 invite sent by the local account from a different device, not ringing on the local device for conversation: %@",  buf,  0xCu);
        }

        goto LABEL_39;
      }
    }

  unsigned int v26 = (void *)objc_opt_class(self, v15);
  char v27 = (void *)objc_claimAutoreleasedReturnValue([v5 attributes]);
  unsigned int v28 = (void *)objc_claimAutoreleasedReturnValue([v26 callScreenShareAttributesForAction:v27]);

  id v29 = (void *)objc_claimAutoreleasedReturnValue(-[CSDAbstractFaceTimeConversationProviderDelegate conversationManager](self, "conversationManager"));
  objc_msgSend( v29,  "setScreenEnabled:screenShareAttributes:forConversationWithUUID:",  objc_msgSend(v5, "isSharingScreen"),  v28,  v11);

  [v5 fulfill];
LABEL_25:
}

        unint64_t v6 = (char *)v6 + 1;
      }

      while (v4 != v6);
      char v4 = [obj countByEnumeratingWithState:&v16 objects:v20 count:16];
      if (!v4)
      {
LABEL_14:

        break;
      }
    }
  }
}

LABEL_13:
  char v19 = objc_msgSend((id)objc_opt_class(self, v18), "dataForProviders:", v11);
  unsigned int v20 = (void *)objc_claimAutoreleasedReturnValue(v19);
  [v9 saveData:v20 error:a5];

  return a5 == 0LL;
}
}

  return v6;
}

  return v6;
}
}
}

  return v6;
}

            unsigned int v20 = v22;
LABEL_9:
            unint64_t v15 = v14;
            uint64_t v62 = (v21 - 1) & v21;
            char v16 = __clz(__rbit64(v21)) + (v20 << 6);
            char v60 = v20;
            goto LABEL_5;
          }
        }
      }
    }

    id v3 = v2;
  }

  else
  {
    uint64_t v14 = 0;
    unsigned int v13 = 1LL;
  }

  BOOL v17 = *(void *)(v6 + 16);
  id v18 = v17 + v13;
  if (__OFADD__(v17, v13))
  {
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }

  char v19 = *(void *)(v6 + 24);
  if (v19 >= v18 && (a2 & 1) != 0)
  {
    if ((v14 & 1) == 0) {
      goto LABEL_33;
    }
    goto LABEL_30;
  }

  if ((a2 & 1) != 0)
  {
    sub_1002499C4();
  }

  else
  {
    if (v19 >= v18)
    {
      sub_100247D30();
      if ((v14 & 1) == 0)
      {
LABEL_33:
        char v31 = *v3;
        *(void *)(*v3 + 8 * (v9 >> 6) + 56) |= 1LL << v9;
        *(void *)(*(void *)(v31 + 48) + 8 * v9) = a1;
        uint64_t v32 = *(void *)(v31 + 16);
        unsigned int v33 = __OFADD__(v32, 1LL);
        uint64_t v34 = v32 + 1;
        if (!v33)
        {
          uint64_t result = 0LL;
          *(void *)(v31 + 16) = v34;
          return result;
        }

        goto LABEL_36;
      }

            BOOL v17 = v19;
LABEL_9:
            int v10 = (v18 - 1) & v18;
            uint64_t v14 = __clz(__rbit64(v18)) + (v17 << 6);
            id v11 = v17;
            goto LABEL_5;
          }
        }
      }
    }

  sub_1002734A0(0LL, (a1 & 0xC000000000000001LL) == 0, a1);
  if ((a1 & 0xC000000000000001LL) != 0) {
    char v47 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, a1);
  }
  else {
    char v47 = *(id *)(a1 + 32);
  }
  unsigned int v48 = v47;
  swift_bridgeObjectRelease(a1);
  uint64_t v49 = [v48 mutableCopy];

  _bridgeAnyObjectToAny(_:)(&aBlock, v49);
  swift_unknownObjectRelease(v49);
  unint64_t v50 = sub_1001B4B94(0LL, (unint64_t *)&unk_100449970, &OBJC_CLASS___TUMutableConversationLinkDescriptor_ptr);
  char v51 = (id)v167[0];
  char v52 = v154;
  unsigned int v53 = v153;
  if ((v153 & 1) != 0)
  {
    unint64_t v54 = v149;
    *v149 = (id)v167[0];
LABEL_43:
    unsigned int v102 = v51;
    unint64_t v103 = Date._bridgeToObjectiveC()().super.isa;
    [v102 setExpirationDate:v103];

    sub_10022A1E0(v44, *v54);
    char v104 = *v54;
    sub_10022A320(a3, (SEL *)&selRef_linkName);
    if (v105)
    {
      unsigned int v106 = v105;
      unint64_t v107 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v106);
    }

    else
    {
      unint64_t v107 = 0LL;
    }

    char v108 = v159;
    char v109 = v152;
    unsigned int v110 = v150;
    [v104 setName:v107];

    uint64_t v111 = (void *)swift_allocObject(&unk_1003E2338, 40LL, 7LL);
    v111[2] = v160;
    v111[3] = v108;
    v111[4] = v110;
    if ((v53 & 1) != 0)
    {
      swift_beginAccess(v54, v167, 0LL, 0LL);
      unint64_t v112 = *(void **)(v110 + 16);
      swift_retain(v108);
      swift_retain(v110);
      char v113 = v112;
      sub_10021611C();

      char v114 = *(void **)(v109 + OBJC_IVAR___CSDConversationLinkManager_dataSource);
      unsigned int v115 = sub_1001AFF14((uint64_t *)&unk_1004475C0);
      uint64_t v116 = swift_allocObject(v115, 40LL, 7LL);
      *(_OWORD *)(v116 + 16) = xmmword_10037B200;
      unint64_t v117 = *(void **)(v110 + 16);
      *(void *)(v116 + 32) = v117;
      aBlock = (void **)v116;
      specialized Array._endMutation()(v116, v118, v119, v120, v121, v122, v123, v124);
      uint64_t v125 = aBlock;
      sub_1001B4B94(0LL, &qword_1004475B0, &OBJC_CLASS___TUConversationLinkDescriptor_ptr);
      unint64_t v126 = v117;
      v127.super.isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v125);
      v165 = sub_10022C4A4;
      v166 = v111;
      aBlock = _NSConcreteStackBlock;
      v162 = 1107296256LL;
      v163 = sub_1002130EC;
      v164 = &unk_1003E2378;
      char v128 = _Block_copy(&aBlock);
      unsigned int v129 = v166;
      swift_retain(v111);
      swift_release(v129);
      [v114 addOrUpdateConversationLinkDescriptors:v127.super.isa completion:v128];
    }

    else
    {
      unint64_t v130 = *(void **)(v109 + OBJC_IVAR___CSDConversationLinkManager_dataSource);
      char v131 = sub_1001AFF14((uint64_t *)&unk_1004475C0);
      uint64_t v132 = swift_allocObject(v131, 40LL, 7LL);
      *(_OWORD *)(v132 + 16) = xmmword_10037B200;
      BOOL v133 = swift_beginAccess(v54, v167, 0LL, 0LL);
      uint64_t v134 = *(void **)(v110 + 16);
      *(void *)(v132 + 32) = v134;
      aBlock = (void **)v132;
      specialized Array._endMutation()(v133, v135, v136, v137, v138, v139, v140, v141);
      v142 = aBlock;
      sub_1001B4B94(0LL, &qword_1004475B0, &OBJC_CLASS___TUConversationLinkDescriptor_ptr);
      swift_retain(v108);
      swift_retain(v110);
      v143 = v134;
      v127.super.isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v142);
      v165 = sub_10022C4A4;
      v166 = v111;
      aBlock = _NSConcreteStackBlock;
      v162 = 1107296256LL;
      v163 = sub_1002130EC;
      v164 = &unk_1003E2350;
      char v128 = _Block_copy(&aBlock);
      v144 = v166;
      swift_retain(v111);
      swift_release(v144);
      [v130 addConversationLinkDescriptors:v127.super.isa completion:v128];
    }

    _Block_release(v128);

    sub_100285ED8();
    swift_release(v111);
    v145 = *(void (**)(char *, uint64_t))(v156 + 8);
    v146 = v151;
    v145(v154, v151);
    v145(v155, v146);
    (*(void (**)(char *, uint64_t))(v158 + 8))(v157, v25);
    return swift_release(v110);
  }

  swift_bridgeObjectRelease(v44);
  if (qword_100446930 != -1) {
    swift_once(&qword_100446930, sub_100258A18);
  }
  uint64_t v72 = type metadata accessor for Logger(0LL);
  sub_1001B0D98(v72, (uint64_t)qword_1004541B0);
  unint64_t v73 = (void **)v51;
  unsigned int v76 = (os_log_s *)Logger.logObject.getter(v73, v74, v75);
  unint64_t v77 = static os_log_type_t.default.getter(v76);
  if (os_log_type_enabled(v76, v77))
  {
    char v78 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    v153 = swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)char v78 = 138412290;
    aBlock = v73;
    char v79 = v73;
    char v52 = v154;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, &v162, v78 + 4, v78 + 12);
    unsigned int v80 = v153;
    *(void *)v153 = v73;

    _os_log_impl((void *)&_mh_execute_header, v76, v77, "%@ already existed and isUpdate: NO, ignoring", v78, 0xCu);
    sub_1001AFF14(&qword_100447E80);
    swift_arrayDestroy(v80, 1LL);
    swift_slowDealloc(v80, -1LL, -1LL);
    swift_slowDealloc(v78, -1LL, -1LL);
  }

  else
  {

    unsigned int v76 = (os_log_s *)v73;
  }

  uint64_t v81 = sub_10022B8F8();
  unint64_t v82 = swift_allocError(&type metadata for ConversationLinkManagerErrorType, v81, 0LL, 0LL);
  *char v83 = 5LL;
  v160(0LL, v82);
  swift_errorRelease(v82);

  char v84 = *(void (**)(char *, uint64_t))(v156 + 8);
  unsigned int v85 = v151;
  v84(v52, v151);
  v84(v155, v85);
  (*(void (**)(char *, uint64_t))(v158 + 8))(v157, v25);
  return swift_deallocUninitializedObject(v150, 24LL, 7LL);
}

  sub_1001B0FF8();
}

  id v23 = v30;
  int v24 = *v29;
  *(void *)(*v29 + 8 * (a2 >> 6) + 56) |= 1LL << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))( *(void *)(v24 + 48) + *(void *)(v7 + 72) * a2,  v23,  v6);
  unsigned int v26 = *(void *)(v24 + 16);
  char v27 = __OFADD__(v26, 1LL);
  unsigned int v28 = v26 + 1;
  if (!v27)
  {
    *(void *)(v24 + 16) = v28;
    return result;
  }

  __break(1u);
LABEL_15:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v6);
  __break(1u);
  return result;
}

        unsigned int v33 = __clz(__rbit64(v31));
        uint64_t v34 = v33 + (v32 << 6);
        if (v34 == v30) {
          goto LABEL_32;
        }
        if (v34 < 0 || v34 >= v30) {
          goto LABEL_45;
        }
        __int128 v35 = v19;
        __int128 v36 = v22;
        __int128 v37 = v16;
        __int128 v38 = v20;
        uint64_t v39 = v25;
        unint64_t v40 = *(void *)(*(void *)(v28 + 48) + 16 * v34 + 8);
        swift_bridgeObjectRetain(v40);
        swift_bridgeObjectRelease(v28);
        __int16 v41 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v40);
        char v42 = (id)TUHandleForIDSCanonicalAddress(v41);

        if (v42)
        {
          unsigned int v43 = [objc_allocWithZone(TUConversationMember) initWithHandle:v42];
          swift_unknownObjectRelease(a5);

          uint64_t v25 = v39;
          unsigned int v20 = v38;
          char v16 = v37;
          char v22 = v36;
          char v19 = v35;
          id v23 = v98;
          if (v43)
          {
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v44);
            char v46 = *(void *)((v99 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
            unint64_t v45 = *(void *)((v99 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
            if (v46 >= v45 >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v45 > 1, v46 + 1, 1LL);
            }
            char v47 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v46, v43);
            specialized Array._endMutation()(v47, v48, v49, v50, v51, v52, v53, v54);
          }
        }

        else
        {
          swift_unknownObjectRelease(a5);
          uint64_t v25 = v39;
          unsigned int v20 = v38;
          char v16 = v37;
          char v22 = v36;
          char v19 = v35;
          id v23 = v98;
        }

    sub_10029A1D0();
    sub_10029A1E0();
    sub_10029A21C();
    sub_10029A18C();
    __asm { BR              X0 }
  }

  _StringGuts.grow(_:)(46LL);
  swift_bridgeObjectRelease(0xE000000000000000LL);
  uint64_t result = [(id)objc_opt_self(FTDeviceSupport) sharedInstance];
  if (result)
  {
    __int128 v38 = *(void *)(v0 + 280);
    uint64_t v39 = *(void *)(v0 + 288);
    unsigned int v13 = *(void *)(v0 + 264);
    uint64_t v14 = sub_100299FAC(result);
    if (v15)
    {
      char v16 = v15;
    }

    else
    {
      uint64_t v14 = 0x6E776F6E6B6E55LL;
      char v16 = 0xE700000000000000LL;
    }

    BOOL v17 = v16;
    String.append(_:)(*(Swift::String *)&v14);
    swift_bridgeObjectRelease(v16);
    v18._countAndFlagsBits = 0xD000000000000025LL;
    v18._object = (void *)0x80000001003772A0LL;
    String.append(_:)(v18);
    *(void *)(v0 + 24_Block_object_dispose(va, 8) = v13;
    swift_errorRetain(v13);
    char v19 = sub_1001AFF14(&qword_100447B70);
    v20._countAndFlagsBits = String.init<A>(reflecting:)(v0 + 248, v19);
    object = v20._object;
    String.append(_:)(v20);
    swift_bridgeObjectRelease(object);
    char v22 = URL.path(percentEncoded:)(1);
    URLComponents.init()(v22._countAndFlagsBits);
    URLComponents.scheme.setter(0x722D6F742D706174LL, 0xEC00000072616461LL);
    URLComponents.host.setter(7824750LL, 0xE300000000000000LL);
    id v23 = sub_1001AFF14((uint64_t *)&unk_10044CD70);
    int v24 = type metadata accessor for URLQueryItem(0LL);
    uint64_t v25 = swift_allocObject( v23,  ((*(unsigned __int8 *)(*(void *)(v24 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v24 - 8) + 80LL))
          + 8LL * *(void *)(*(void *)(v24 - 8) + 72LL),
            *(unsigned __int8 *)(*(void *)(v24 - 8) + 80LL) | 7LL);
    *(_OWORD *)(v25 + 16) = xmmword_10037F2F0;
    URLQueryItem.init(name:value:)(0x656C746954LL, 0xE500000000000000LL, 0x203A525454LL, 0xE500000000000000LL);
    swift_bridgeObjectRelease(0xE500000000000000LL);
    URLQueryItem.init(name:value:)( 0x7470697263736544LL,  0xEB000000006E6F69LL,  0xD000000000000038LL,  0x80000001003772D0LL);
    URLQueryItem.init(name:value:)( 0x6966697373616C43LL,  0xEE006E6F69746163LL,  0xD000000000000014LL,  0x8000000100377310LL);
    URLQueryItem.init(name:value:)( 0x6375646F72706552LL,  0xEF7974696C696269LL,  0x74276E6469442049LL,  0xEC00000079725420LL);
    unsigned int v26 = sub_10029A26C();
    URLQueryItem.init(name:value:)(v26, 0xEB00000000444974LL, 0x32323433373131LL, 0xE700000000000000LL);
    char v27 = sub_10029A26C();
    URLQueryItem.init(name:value:)(v27, 0xED0000656D614E74LL, 0x616C506572616853LL, 0xE900000000000079LL);
    URLQueryItem.init(name:value:)(0xD000000000000010LL, 0x8000000100377330LL, 7105601LL, 0xE300000000000000LL);
    URLQueryItem.init(name:value:)(0x656D686361747441LL, 0xEB0000000073746ELL, v22._countAndFlagsBits, v22._object);
    swift_bridgeObjectRelease(v22._object);
    unsigned int v28 = URLComponents.queryItems.setter(v25);
    URLComponents.url.getter(v28);
    id v29 = sub_1001AB0AC(v38, 1LL, v39);
    id v30 = *(void *)(v0 + 280);
    if (v29 == 1)
    {
      (*(void (**)(void, void))(*(void *)(v0 + 320) + 8LL))( *(void *)(v0 + 328),  *(void *)(v0 + 312));

      sub_1001BB478(v30, (uint64_t *)&unk_100447DE0);
      goto LABEL_12;
    }

    (*(void (**)(void, void, void))(*(void *)(v0 + 296) + 32LL))( *(void *)(v0 + 304),  *(void *)(v0 + 280),  *(void *)(v0 + 288));
    uint64_t result = [(id)objc_opt_self(LSApplicationWorkspace) defaultWorkspace];
    *(void *)(v0 + 352) = result;
    if (result)
    {
      unsigned int v33 = result;
      URL._bridgeToObjectiveC()(v32);
      __int128 v35 = v34;
      *(void *)(v0 + 360) = v34;
      *(void *)(v0 + 120) = v0 + 232;
      *(void *)(v0 + 80) = v0;
      *(void *)(v0 + 8_Block_object_dispose(va, 8) = sub_100298938;
      __int128 v36 = swift_continuation_init(v0 + 80, 1LL);
      *(void *)(v0 + 144) = _NSConcreteStackBlock;
      __int128 v37 = (void *)(v0 + 144);
      v37[1] = 0x40000000LL;
      v37[2] = sub_100298B90;
      v37[3] = &unk_1003E6148;
      v37[4] = v36;
      [v33 openURL:v35 configuration:0 completionHandler:v37];
      sub_10029A18C();
      return (id)swift_continuation_await();
    }
  }

  else
  {
    __break(1u);
  }

  __break(1u);
  return result;
}

IMAccount *__cdecl sub_10001C4DC(id a1, CXStartCallAction *a2)
{
  if (-[CXStartCallAction isVideo](a2, "isVideo")) {
    uint64_t v2 = objc_claimAutoreleasedReturnValue(+[IMService facetimeService](&OBJC_CLASS___IMService, "facetimeService"));
  }
  else {
    uint64_t v2 = objc_claimAutoreleasedReturnValue(+[IMService callService](&OBJC_CLASS___IMService, "callService"));
  }
  id v3 = (void *)v2;
  if (qword_10044CE58 != -1) {
    dispatch_once(&qword_10044CE58, &stru_1003D7AD8);
  }
  uint64_t v4 = off_10044CE50(v3);
  unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue(v4);

  return (IMAccount *)v5;
}

void sub_10001C56C(id a1)
{
  off_10044CE50 = (_UNKNOWN *)IMWeakLinkSymbol("IMPreferredAccountForService", @"IMCore");
}

id sub_10001D524(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    uint64_t v5 = *(unsigned int *)(a1 + 40);
    int v7 = 138412546;
    uint64_t v8 = v4;
    __int16 v9 = 2048;
    uint64_t v10 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Calling endChatWithReason on chat %@ with reason %ld",  (uint8_t *)&v7,  0x16u);
  }

  return [*(id *)(a1 + 32) endChatWithReason:*(unsigned int *)(a1 + 40)];
}

void sub_10001D720(id *a1)
{
  id v2 = a1 + 4;
  id v3 = [a1[4] isVideo];
  if ((_DWORD)v3) {
    int v4 = 3;
  }
  else {
    int v4 = 2;
  }
  uint64_t v5 = objc_alloc_init(&OBJC_CLASS___TUCallProviderManager);
  unint64_t v6 = (uint64_t (**)(void, void))objc_claimAutoreleasedReturnValue([v2[1] imAccountForActionBlock]);
  uint64_t v7 = ((uint64_t (**)(void, id))v6)[2](v6, *v2);
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(v7);

  if (v8 && [v8 isRegistered])
  {
    id v9 = sub_1001704C4();
    uint64_t v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      id v59 = v8;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "Using account %@", buf, 0xCu);
    }

    id v11 = (void *)objc_claimAutoreleasedReturnValue([*v2 handle]);
    char v12 = (void *)objc_claimAutoreleasedReturnValue([v11 value]);
    unsigned int v13 = (void *)objc_claimAutoreleasedReturnValue([v8 imHandleWithID:v12]);

    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v13 ID]);
    id v15 = [v14 length];

    if (v15)
    {
      unsigned int v50 = v4;
      char v51 = v5;
      id v16 = objc_alloc((Class)CUTWeakLinkClass(@"IMAVChat", @"IMAVCore"));
      uint64_t v62 = v13;
      BOOL v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v62, 1LL));
      id v18 = [*v2 isRelay];
      char v19 = (void *)objc_claimAutoreleasedReturnValue([*v2 callUUID]);
      unsigned int v20 = (void *)objc_claimAutoreleasedReturnValue([v19 UUIDString]);
      id v21 = [v16 initOutgoingTo:v17 isVideo:v3 isRelayed:v18 GUID:v20];

      if (v21)
      {
        [v21 setConnectionTimeoutTime:(double)TUConnectionTimeoutForCallService(v50)];
        uint64_t v5 = v51;
        char v22 = (void *)objc_claimAutoreleasedReturnValue(-[TUCallProviderManager faceTimeProvider](v51, "faceTimeProvider"));
        objc_msgSend( v21,  "setInvitationTimeoutTime:",  (double)TUOutgoingInvitationTimeoutForCallProviderAndIsUpgrade(v22, v3, objc_msgSend(a1[4], "isUpgrade")));

        id v23 = a1[5];
        [a1[4] localLandscapeAspectRatio];
        double v25 = v24;
        double v27 = v26;
        [a1[4] localPortraitAspectRatio];
        objc_msgSend(v23, "_setLocalLandscapeAspectRatio:localPortraitAspectRatio:forChat:", v21, v25, v27, v28, v29);
        id v30 = sub_1001704C4();
        char v31 = (os_log_s *)objc_claimAutoreleasedReturnValue(v30);
        if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v32 = (void *)objc_claimAutoreleasedReturnValue([v21 otherIMHandle]);
          id v33 = a1[6];
          *(_DWORD *)buf = 138412546;
          id v59 = v32;
          __int16 v60 = 2112;
          id v61 = v33;
          _os_log_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_DEFAULT,  "Inviting handle %@ excluding push tokens %@",  buf,  0x16u);
        }

        uint64_t v34 = (void *)objc_claimAutoreleasedReturnValue([v21 otherIMHandle]);
        [v21 invite:v34 additionalPeers:&__NSArray0__struct excludingPushTokens:a1[6]];

        id v35 = sub_1001704C4();
        __int128 v36 = (os_log_s *)objc_claimAutoreleasedReturnValue(v35);
        if (os_log_type_enabled(v36, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412290;
          id v59 = v21;
          _os_log_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_DEFAULT, "Registering imav chat %@", buf, 0xCu);
        }

        [a1[5] registerChat:v21];
        __int128 v37 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([a1[5] queue]);
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472LL;
        block[2] = sub_10001DBF0;
        block[3] = &unk_1003D7B00;
        id v53 = a1[4];
        id v54 = a1[7];
        id v55 = v21;
        id v38 = a1[6];
        id v39 = a1[5];
        id v56 = v38;
        id v57 = v39;
        unint64_t v40 = (os_log_s *)v21;
        dispatch_async(v37, block);
      }

      else
      {
        id v49 = sub_1001704C4();
        unint64_t v40 = (os_log_s *)objc_claimAutoreleasedReturnValue(v49);
        uint64_t v5 = v51;
        if (os_log_type_enabled(v40, OS_LOG_TYPE_ERROR)) {
          sub_1002B1DEC(v2);
        }
      }
    }

    else
    {
      id v48 = sub_1001704C4();
      unint64_t v40 = (os_log_s *)objc_claimAutoreleasedReturnValue(v48);
      if (os_log_type_enabled(v40, OS_LOG_TYPE_ERROR)) {
        sub_1002B1D68(v2);
      }
    }
  }

  else
  {
    id v41 = sub_1001704C4();
    unsigned int v13 = (void *)objc_claimAutoreleasedReturnValue(v41);
    if (os_log_type_enabled((os_log_t)v13, OS_LOG_TYPE_ERROR)) {
      sub_1002B1D04((uint64_t)v8, (os_log_s *)v13, v42, v43, v44, v45, v46, v47);
    }
  }
}

void sub_10001DBF0(uint64_t a1)
{
  if (![*(id *)(a1 + 32) isComplete]
    || (id v2 = *(void **)(a1 + 40)) != 0 && ([v2 isComplete] & 1) == 0)
  {
    uint64_t v5 = -[CXCallUpdate initWithIMAVChat:]( objc_alloc(&OBJC_CLASS___CXCallUpdate),  "initWithIMAVChat:",  *(void *)(a1 + 48));
    if (![*(id *)(a1 + 56) count]) {
      -[CXCallUpdate setFaceTimeTransportType:](v5, "setFaceTimeTransportType:", 1LL);
    }
    id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 64) provider]);
    int v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) callUUID]);
    [v3 reportCallWithUUID:v4 updated:v5];

    [*(id *)(a1 + 32) fulfill];
    [*(id *)(a1 + 40) fulfill];
  }

id sub_10001E4AC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _requestPendingInvites];
}

void sub_10001E5F8(uint64_t a1)
{
  unsigned int v2 = [*(id *)(a1 + 32) state];
  switch(v2)
  {
    case 5u:
      [*(id *)(a1 + 40) _updateProviderForEndedChat:*(void *)(a1 + 32)];
      if ([*(id *)(a1 + 32) endedError])
      {
        uint64_t v3 = 1LL;
      }

      else
      {
        if (qword_10044CEB8 != -1) {
          dispatch_once(&qword_10044CEB8, &stru_1003D7B48);
        }
        uint64_t v4 = ((uint64_t (*)(id))off_10044CEB0)([*(id *)(a1 + 32) endedReason]);
        uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
        uint64_t v3 = -1LL;
        switch([*(id *)(a1 + 32) endedReason])
        {
          case 1u:
            else {
              uint64_t v3 = 2LL;
            }
            break;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 9u:
            id v8 = sub_1001704C4();
            id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
            if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
            {
              int v24 = 138412290;
              double v25 = v5;
              _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "Using call ended reason remote hangup because ended reason is %@",  (uint8_t *)&v24,  0xCu);
            }

            uint64_t v3 = 2LL;
            break;
          case 6u:
          case 7u:
          case 0xBu:
          case 0xCu:
          case 0xDu:
          case 0xEu:
          case 0xFu:
          case 0x10u:
          case 0x11u:
          case 0x12u:
          case 0x13u:
          case 0x14u:
          case 0x17u:
          case 0x18u:
          case 0x19u:
          case 0x1Au:
          case 0x1Cu:
          case 0x1Eu:
            id v6 = sub_1001704C4();
            uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
            if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
            {
              int v24 = 138412290;
              double v25 = v5;
              _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Using call ended reason failed because ended reason is %@",  (uint8_t *)&v24,  0xCu);
            }

            uint64_t v3 = 1LL;
            break;
          case 0x15u:
          case 0x16u:
            id v10 = sub_1001704C4();
            id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
            if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
            {
              int v24 = 138412290;
              double v25 = v5;
              _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "Using call ended reason unanswered because ended reason is %@",  (uint8_t *)&v24,  0xCu);
            }

            uint64_t v3 = 3LL;
            break;
          case 0x1Bu:
            id v12 = sub_1001704C4();
            unsigned int v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
            if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
            {
              int v24 = 138412290;
              double v25 = v5;
              _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "Using call ended reason answered elsewhere because ended reason is %@",  (uint8_t *)&v24,  0xCu);
            }

            uint64_t v3 = 4LL;
            break;
          case 0x1Du:
            id v14 = sub_1001704C4();
            id v15 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
            if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
            {
              int v24 = 138412290;
              double v25 = v5;
              _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "Using call ended reason declined elsewhere because ended reason is %@",  (uint8_t *)&v24,  0xCu);
            }

            uint64_t v3 = 5LL;
            break;
          default:
            break;
        }
      }

      id v16 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) faceTimeDemuxerDelegate]);
      uint64_t v17 = *(void *)(a1 + 40);
      id v18 = *(id *)(a1 + 32);
      char v19 = objc_alloc(&OBJC_CLASS___NSUUID);
      unsigned int v20 = (void *)objc_claimAutoreleasedReturnValue([v18 GUID]);

      id v21 = -[NSUUID initWithUUIDString:](v19, "initWithUUIDString:", v20);
      char v22 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) dateEnded]);
      id v23 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) failureContextForChat:*(void *)(a1 + 32)]);
      [v16 providerDelegate:v17 callWithUUID:v21 endedAtDate:v22 withReason:v3 failureContext:v23];

      break;
    case 4u:
      break;
    case 3u:
      _[*(id *)(a1 + 40) _updateProviderForConnectingChat:*(void *)(a1 + 32)];
      break;
  }

void sub_10001EA78(id a1)
{
  off_10044CEB0 = (_UNKNOWN *)CUTWeakLinkSymbol("_NSStringDescriptionForIMAVChatEndedReason", @"IMAVCore");
}

LABEL_80:
  -[CXCallFailureContext setProviderErrorCode:]( v6,  "setProviderErrorCode:",  [v4 endedReason]);
  return v6;
}

  self->_isSpatialPersonaEnabled = *((_BYTE *)v5 + 119);
  *(_DWORD *)&self->_has |= 0x800u;
  double v29 = *((_DWORD *)v5 + 32);
  if ((v29 & 0x2000) == 0)
  {
LABEL_72:
    if ((v29 & 8) == 0) {
      goto LABEL_73;
    }
    goto LABEL_82;
  }

void sub_10001F55C(uint64_t a1)
{
  if (([*(id *)(a1 + 32) isLocalParticipant] & 1) == 0)
  {
    unsigned int v2 = *(void **)(a1 + 40);
    id v3 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) avChat]);
    [v2 _updateProviderForConnectedChat:v3];
  }

void sub_10001F6D8(uint64_t a1)
{
  id v6 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) provider]);
  unsigned int v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) avChat]);
  id v3 = objc_alloc(&OBJC_CLASS___NSUUID);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v2 GUID]);
  uint64_t v5 = -[NSUUID initWithUUIDString:](v3, "initWithUUIDString:", v4);

  [v6 reportOutgoingCallWithUUID:v5 sentInvitationAtDate:0];
}

void sub_10001F8B8(id *a1)
{
  if ([a1[4] isVideo])
  {
    uint64_t v7 = objc_alloc_init(&OBJC_CLASS___CXCallUpdate);
    -[CXCallUpdate setVideoStreamToken:](v7, "setVideoStreamToken:", [a1[5] _activeCallID]);
    unsigned int v2 = (void *)objc_claimAutoreleasedReturnValue([a1[6] provider]);
    id v3 = a1[4];
    uint64_t v4 = objc_alloc(&OBJC_CLASS___NSUUID);
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v3 GUID]);

    id v6 = -[NSUUID initWithUUIDString:](v4, "initWithUUIDString:", v5);
    [v2 reportCallWithUUID:v6 updated:v7];
  }

void sub_10001FACC(uint64_t a1)
{
  id v9 = objc_alloc_init(&OBJC_CLASS___CXCallUpdate);
  id v2 = sub_10001A848(*(void **)(a1 + 32));
  id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  -[CXCallUpdate setCrossDeviceIdentifier:](v9, "setCrossDeviceIdentifier:", v3);

  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
  id v5 = *(id *)(a1 + 32);
  id v6 = objc_alloc(&OBJC_CLASS___NSUUID);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v5 GUID]);

  id v8 = -[NSUUID initWithUUIDString:](v6, "initWithUUIDString:", v7);
  [v4 reportCallWithUUID:v8 updated:v9];
}

void sub_10001FCC0(uint64_t a1)
{
  id v8 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) provider]);
  id v2 = *(id *)(a1 + 40);
  id v3 = objc_alloc(&OBJC_CLASS___NSUUID);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v2 GUID]);

  id v5 = -[NSUUID initWithUUIDString:](v3, "initWithUUIDString:", v4);
  id v6 = sub_10001A848(*(void **)(a1 + 40));
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
  [v8 reportCallWithUUID:v5 crossDeviceIdentifier:v7 changedBytesOfDataUsed:sub_10001A9F0(*(void **)(a1 + 40))];
}

void sub_10001FEA4(uint64_t a1)
{
  uint64_t v7 = objc_alloc_init(&OBJC_CLASS___CXCallUpdate);
  -[CXCallUpdate setMayRequireBreakBeforeMake:]( v7,  "setMayRequireBreakBeforeMake:",  [*(id *)(a1 + 32) mayRequireBreakBeforeMake]);
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
  id v3 = *(id *)(a1 + 32);
  uint64_t v4 = objc_alloc(&OBJC_CLASS___NSUUID);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v3 GUID]);

  id v6 = -[NSUUID initWithUUIDString:](v4, "initWithUUIDString:", v5);
  [v2 reportCallWithUUID:v6 updated:v7];
}

void sub_100020000(uint64_t a1)
{
  id v8 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) object]);
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v8 avChat]);
  uint64_t v4 = objc_alloc(&OBJC_CLASS___NSUUID);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v3 GUID]);
  id v6 = -[NSUUID initWithUUIDString:](v4, "initWithUUIDString:", v5);

  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v8 inFrequencyLevel]);
  [v2 reportCallWithUUID:v6 changedFrequencyData:v7 forDirection:2];
}

void sub_100020160(uint64_t a1)
{
  id v8 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) object]);
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v8 avChat]);
  uint64_t v4 = objc_alloc(&OBJC_CLASS___NSUUID);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v3 GUID]);
  id v6 = -[NSUUID initWithUUIDString:](v4, "initWithUUIDString:", v5);

  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v8 outFrequencyLevel]);
  [v2 reportCallWithUUID:v6 changedFrequencyData:v7 forDirection:1];
}

void sub_10002033C(uint64_t a1)
{
  id v2 = -[CXCallUpdate initWithIMAVChat:]( objc_alloc(&OBJC_CLASS___CXCallUpdate),  "initWithIMAVChat:",  *(void *)(a1 + 32));
  -[CXCallUpdate setFaceTimeTransportType:](v2, "setFaceTimeTransportType:", 1LL);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
  id v4 = *(id *)(a1 + 32);
  id v5 = objc_alloc(&OBJC_CLASS___NSUUID);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 GUID]);

  uint64_t v7 = -[NSUUID initWithUUIDString:](v5, "initWithUUIDString:", v6);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  _DWORD v10[2] = sub_10002044C;
  v10[3] = &unk_1003D7B70;
  id v8 = *(id *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  id v11 = v8;
  uint64_t v12 = v9;
  [v3 reportNewIncomingCallWithUUID:v7 update:v2 completion:v10];
}

void sub_10002044C(uint64_t a1, void *a2)
{
  id v3 = a2;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1000204E4;
  block[3] = &unk_1003D7828;
  id v6 = *(id *)(a1 + 32);
  id v7 = v3;
  uint64_t v8 = *(void *)(a1 + 40);
  id v4 = v3;
  dispatch_async(&_dispatch_main_q, block);
}

id sub_1000204E4(uint64_t a1)
{
  else {
    uint64_t v2 = 2LL;
  }
  id v3 = [*(id *)(a1 + 32) setConnectionTimeoutTime:(double)TUConnectionTimeoutForCallService(v2)];
  [*(id *)(a1 + 32) setInvitationTimeoutTime:(double)TUIncomingInvitationTimeout(v3)];
  if (!*(void *)(a1 + 40)) {
    return [*(id *)(a1 + 48) registerChat:*(void *)(a1 + 32)];
  }
  id v4 = sub_1001704C4();
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v7 = *(void *)(a1 + 32);
    uint64_t v6 = *(void *)(a1 + 40);
    int v9 = 138412546;
    uint64_t v10 = v6;
    __int16 v11 = 2112;
    uint64_t v12 = v7;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "Incoming call was denied with error %@ so declining chat with IMAVResponseFilteredCall: %@",  (uint8_t *)&v9,  0x16u);
  }

  return [*(id *)(a1 + 32) declineInvitationWithResponse:11];
}

void sub_10002070C(uint64_t a1)
{
  uint64_t v2 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) queue]);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100020788;
  block[3] = &unk_1003D7730;
  void block[4] = *(void *)(a1 + 32);
  dispatch_async(v2, block);
}

void sub_100020788(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) providerDidBegin]);

  if (v2)
  {
    id v3 = (void (**)(void))objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) providerDidBegin]);
    v3[2]();
  }

id sub_1000209A8(uint64_t a1)
{
  return _[*(id *)(a1 + 32) endChat];
}

id sub_100020B44(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  [*(id *)(a1 + 40) localLandscapeAspectRatio];
  double v4 = v3;
  double v6 = v5;
  [*(id *)(a1 + 40) localPortraitAspectRatio];
  objc_msgSend( v2,  "_setLocalLandscapeAspectRatio:localPortraitAspectRatio:forChat:",  *(void *)(a1 + 48),  v4,  v6,  v7,  v8);
  id v9 = sub_1001704C4();
  uint64_t v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v11 = *(void *)(a1 + 48);
    int v13 = 138412290;
    uint64_t v14 = v11;
    _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "Calling acceptInvitation on chat %@",  (uint8_t *)&v13,  0xCu);
  }

  return [*(id *)(a1 + 48) acceptInvitation];
}

id sub_100020DD4(uint64_t a1)
{
  return _[*(id *)(a1 + 32) endChat];
}

id sub_100020F80(uint64_t a1)
{
  id v2 = sub_1001704C4();
  double v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = *(unsigned __int8 *)(a1 + 40);
    uint64_t v5 = *(void *)(a1 + 32);
    v7[0] = 67109378;
    v7[1] = v4;
    __int16 v8 = 2112;
    uint64_t v9 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Calling setIsSendingAudio with %d for chat %@",  (uint8_t *)v7,  0x12u);
  }

  return [*(id *)(a1 + 32) setIsSendingAudio:*(unsigned __int8 *)(a1 + 40)];
}

id sub_100021194(uint64_t a1)
{
  id v2 = sub_1001704C4();
  double v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    unsigned int v4 = [*(id *)(a1 + 32) isSendingVideo];
    uint64_t v5 = *(void *)(a1 + 40);
    v7[0] = 67109378;
    v7[1] = v4;
    __int16 v8 = 2112;
    uint64_t v9 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Calling setIsSendingVideo with %d for chat %@",  (uint8_t *)v7,  0x12u);
  }

  return objc_msgSend(*(id *)(a1 + 40), "setIsSendingVideo:", objc_msgSend(*(id *)(a1 + 32), "isSendingVideo"));
}

id sub_100021514(uint64_t a1)
{
  id v2 = sub_1001704C4();
  double v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    [*(id *)(a1 + 32) videoPresentationSize];
    unsigned int v4 = NSStringFromSize(v13);
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
    uint64_t v6 = *(void *)(a1 + 40);
    int v9 = 138412546;
    uint64_t v10 = v5;
    __int16 v11 = 2112;
    uint64_t v12 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Calling setRemoteVideoPresentationSize with %@ for call %@",  (uint8_t *)&v9,  0x16u);
  }

  double v7 = *(void **)(a1 + 40);
  [*(id *)(a1 + 32) videoPresentationSize];
  return objc_msgSend(v7, "setRemoteVideoPresentationSize:");
}

id sub_10002174C(id *a1)
{
  id v2 = sub_1001704C4();
  double v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    id v4 = [a1[4] videoPresentationState];
    id v5 = a1[5];
    int v7 = 134218242;
    id v8 = v4;
    __int16 v9 = 2112;
    id v10 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Calling setRemoteVideoPresentationState with %ld for chat %@",  (uint8_t *)&v7,  0x16u);
  }

  return objc_msgSend( a1[5],  "setRemoteVideoPresentationState:",  objc_msgSend( a1[6],  "IMAVChatRemoteVideoPresentationStateFromCXVideoPresentationState:",  objc_msgSend(a1[4], "videoPresentationState")));
}

id sub_100021984(uint64_t a1)
{
  id v2 = sub_1001704C4();
  double v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    unsigned int v4 = [*(id *)(a1 + 32) isRelaying];
    uint64_t v5 = *(void *)(a1 + 40);
    v7[0] = 67109378;
    v7[1] = v4;
    __int16 v8 = 2112;
    uint64_t v9 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Calling setRelayed with %d for chat %@",  (uint8_t *)v7,  0x12u);
  }

  return objc_msgSend(*(id *)(a1 + 40), "setRelayed:", objc_msgSend(*(id *)(a1 + 32), "isRelaying"));
}

id sub_100021BA4(uint64_t a1)
{
  id v2 = sub_1001704C4();
  double v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    unsigned int v4 = [*(id *)(a1 + 32) isMuted];
    uint64_t v5 = *(void *)(a1 + 40);
    v7[0] = 67109378;
    v7[1] = v4;
    __int16 v8 = 2112;
    uint64_t v9 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Calling setMuted with %d for chat %@",  (uint8_t *)v7,  0x12u);
  }

  return objc_msgSend(*(id *)(a1 + 40), "setMute:", objc_msgSend(*(id *)(a1 + 32), "isMuted"));
}

void sub_100021D48( void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

  ;
}

  ;
}

void sub_100021F18(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[TUCallHistoryControllerXPCClient callHistoryControllerClientXPCInterface]( &OBJC_CLASS___TUCallHistoryControllerXPCClient,  "callHistoryControllerClientXPCInterface"));
  [*(id *)(*(void *)(a1 + 32) + 32) setRemoteObjectInterface:v2];

  double v3 = (void *)objc_claimAutoreleasedReturnValue( +[TUCallHistoryControllerXPCClient callHistoryControllerServerXPCInterface]( &OBJC_CLASS___TUCallHistoryControllerXPCClient,  "callHistoryControllerServerXPCInterface"));
  [*(id *)(*(void *)(a1 + 32) + 32) setExportedInterface:v3];

  objc_msgSend(*(id *)(*(void *)(a1 + 32) + 32), "setExportedObject:");
  [*(id *)(*(void *)(a1 + 32) + 32) setRequiredConnectionCapability:@"access-calls"];
  [*(id *)(*(void *)(a1 + 32) + 32) setInterruptionHandler:&stru_1003D7BB0];
  [*(id *)(*(void *)(a1 + 32) + 32) setInvalidationHandler:&stru_1003D7BD0];
  unsigned int v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientManager]);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v4 asynchronousExportedObjectProxy]);
  +[TUCallHistoryControllerXPCClient setAsynchronousServer:]( &OBJC_CLASS___TUCallHistoryControllerXPCClient,  "setAsynchronousServer:",  v5);

  id v7 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientManager]);
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v7 synchronousExportedObjectProxy]);
  +[TUCallHistoryControllerXPCClient setSynchronousServer:]( &OBJC_CLASS___TUCallHistoryControllerXPCClient,  "setSynchronousServer:",  v6);
}

void sub_10002203C(id a1, CSDClient *a2)
{
  id v2 = a2;
  id v3 = sub_1001704C4();
  unsigned int v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = 138412290;
    uint64_t v6 = v2;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "XPC connection interrupted from client %@",  (uint8_t *)&v5,  0xCu);
  }
}

void sub_1000220E4(id a1, CSDClient *a2)
{
  id v2 = a2;
  id v3 = sub_1001704C4();
  unsigned int v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = 138412290;
    uint64_t v6 = v2;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "XPC connection invalidated from client %@ for CSDCallHistoryControllerXPCServer",  (uint8_t *)&v5,  0xCu);
  }
}

id sub_10002218C(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientManager]);
  [v2 startListeningOnMachServiceWithName:@"com.apple.telephonyutilities.callservicesdaemon.callhistorycontroller"];

  notify_register_check("CSDCallHistoryControllerClientsShouldConnectNotification", (int *)(*(void *)(a1 + 32) + 8LL));
  notify_set_state(*(_DWORD *)(*(void *)(a1 + 32) + 8LL), 0LL);
  return [*(id *)(a1 + 32) notifyClientsToConnectIfNecessary];
}

void sub_100022330(uint64_t a1)
{
  id v1 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientManager]);
  [v1 invalidate];
}

void sub_10002248C(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientManager]);
  [v2 addLocalClientObject:*(void *)(a1 + 40)];
}

void sub_100022564(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientManager]);
  [v2 removeLocalClientObject:*(void *)(a1 + 40)];
}

void sub_10002263C(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    int v6 = 138412290;
    uint64_t v7 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "recent calls deleted: %@", (uint8_t *)&v6, 0xCu);
  }

  int v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callHistoryController]);
  [v5 recentCallsDeleted:*(void *)(a1 + 32)];
}

void sub_100022768(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "All recent calls deleted", v5, 2u);
  }

  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) callHistoryController]);
  [v4 allCallHistoryDeleted];
}

void sub_10002386C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,id location)
{
}

CSDAVCSession *sub_10002389C(uint64_t a1, void *a2, void *a3, void *a4, char a5, unsigned int a6, void *a7)
{
  id v10 = (id *)(a1 + 32);
  id v11 = a7;
  id v12 = a4;
  id v13 = a3;
  id v14 = a2;
  id WeakRetained = objc_loadWeakRetained(v10);
  id v16 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([WeakRetained queue]);
  dispatch_assert_queue_V2(v16);

  uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained reportingHierarchyToken]);
  id v18 = +[RTCReporting newHierarchyTokenFromParentToken:]( &OBJC_CLASS___RTCReporting,  "newHierarchyTokenFromParentToken:",  v17);
  [WeakRetained setReportingHierarchySubToken:v18];

  char v19 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained provider]);
  if ([v19 isDefaultProvider])
  {
    unsigned int v20 = 0LL;
  }

  else
  {
    id v21 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained provider]);
    unsigned int v20 = (void *)objc_claimAutoreleasedReturnValue([v21 identifier]);
  }

  char v22 = objc_alloc(&OBJC_CLASS___CSDAVCSession);
  id v23 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained reportingHierarchySubToken]);
  id v24 = [WeakRetained avMode];
  double v25 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained ABTestConfiguration]);
  LOBYTE(v2_Block_object_dispose(va, 8) = a5;
  double v26 = -[CSDAVCSession initWithTransportToken:delegate:queue:reportingHierarchyToken:oneToOneModeEnabled:avMode:videoEnabled:report:serviceName:ABTestConfiguration:]( v22,  "initWithTransportToken:delegate:queue:reportingHierarchyToken:oneToOneModeEnabled:avMode:videoEnabled:report:s erviceName:ABTestConfiguration:",  v14,  v13,  v12,  v23,  a6,  v24,  v28,  v11,  v20,  v25);

  return v26;
}

TUVideoDeviceController *sub_100023A40(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = objc_alloc(&OBJC_CLASS___TUVideoDeviceController);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained queue]);
  uint64_t v4 = -[TUVideoDeviceController initWithSerialQueue:](v2, "initWithSerialQueue:", v3);

  return v4;
}

NSData *__cdecl sub_100023AA8(id a1)
{
  return 0LL;
}

LABEL_11:
  return (char)v3;
}
}
}

  return v6;
}

    goto LABEL_12;
  }

  if (![v4 audioVideoMode])
  {
    id v13 = sub_1001704C4();
    id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v13);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      id v14 = 134217984;
      id v15 = [v4 identifier];
      id v12 = "Participant has no AV configured, ignoring to add the participant to the session: %llu";
      goto LABEL_10;
    }

    goto LABEL_11;
  }

  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation avcSession](self, "avcSession"));
  objc_msgSend( v9,  "addParticipant:withVideoEnabled:audioPaused:screenEnabled:",  v4,  +[TUConversationManager allowsVideo](TUConversationManager, "allowsVideo"),  -[CSDConversation isAudioPaused](self, "isAudioPaused"),  -[CSDConversation allowsScreenSharing](self, "allowsScreenSharing"));

LABEL_12:
}

  return (char)v6;
}

  uint64_t v4 = 0LL;
  if ((*(_BYTE *)&self->_has & 2) != 0)
  {
LABEL_5:
    int v5 = 2654435761LL * self->_supportsDTMF;
    if ((*(_BYTE *)&self->_has & 0x20) != 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
}

    -[CXCallFailureContext setFailureReason:](v11, "setFailureReason:", v12);
    return v7;
  }

  uint64_t v7 = objc_alloc_init(&OBJC_CLASS___CXCallFailureContext);
  -[CXCallFailureContext setFailureReason:](v7, "setFailureReason:", 0LL);
  __int16 v8 = (void *)objc_claimAutoreleasedReturnValue(-[CSDIDSChat session](self, "session"));
  -[CXCallFailureContext setProviderErrorCode:](v7, "setProviderErrorCode:", [v8 underlyingErrorCode]);

  return v7;
}

  uint64_t v17 = (id)objc_claimAutoreleasedReturnValue(-[CSDIDSChat delegate](self, "delegate"));
  id v14 = objc_claimAutoreleasedReturnValue(-[CSDIDSChat dateEnded](self, "dateEnded"));
  if (v14)
  {
    id v15 = (void *)v14;
    id v16 = objc_opt_respondsToSelector(v17, "chatEnded:");

    if ((v16 & 1) != 0) {
      [v17 chatEnded:self];
    }
  }
}

  id v3 = 0LL;
  if ((*(_BYTE *)&self->_has & 0x10) == 0) {
    goto LABEL_12;
  }
LABEL_6:
  uint64_t v4 = 2654435761LL * self->_supportsEmergency;
  if ((*(_BYTE *)&self->_has & 0x40) != 0)
  {
LABEL_7:
    int v5 = 2654435761LL * self->_supportsVoicemail;
    goto LABEL_14;
  }

  return v6;
}
}

  return (char)v6;
}

  return (char)v3;
}

  return v7;
}

  return v6;
}
}

  return (char)v4;
}
}
}
}
}

  return v7;
}

  return v8;
}
}

  return v6;
}

  return v6;
}

  return v8;
}
}

  return v8;
}

  return v7;
}

  return v7;
}

    uint64_t v7 = v15;
    uint64_t v9 = v24;
  }

  id v21 = [v7 identifier];
  if (v21 == [v14 participantIdentifier] || objc_msgSend(v14, "originType") == (id)1)
  {
    if (v14) {
      [v8 removeScreenSharingRequest:v14];
    }
  }

  else
  {
    char v22 = sub_1001704C4();
    id v23 = (os_log_s *)objc_claimAutoreleasedReturnValue(v22);
    if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEFAULT,  "[WARN] Originator of the screen share request does not match the participant who sent the request to cancel screen share",  buf,  2u);
    }
  }
}

  return v17;
}

  return v7;
}
}

  if (v5)
  {
    if (v8)
    {
      char v19 = TUBundleIdentifierCallServicesDaemon;
      char v22 = NSLocalizedDescriptionKey;
      id v23 = v8;
      unsigned int v20 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v23,  &v22,  1LL));
      id v21 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  v19,  1LL,  v20));
      v5[2](v5, v21);
    }

    else
    {
      v5[2](v5, 0LL);
    }
  }
}

  return (TUHandle *)v6;
}

  return (char)v8;
}

  return v7;
}

  return v7;
}

  return v7;
}

  return v7;
}

  return v8;
}

  return v8;
}
}

  sub_1001B0F5C();
  return 0LL;
}
}

  double v27 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v20);
  [v10 setSubtitle:v27];

  if (([a1 isVideoEnabled] & 1) != 0
    || (sub_1001D8EA0(0LL, (unint64_t *)&qword_100447BB0, &OBJC_CLASS___NSObject_ptr),
        uint64_t v28 = [a1 provider],
        double v29 = [(id)objc_opt_self(TUConversationProvider) expanseProvider],
        id v30 = static NSObject.== infix(_:_:)(v28, v29),
        v28,
        v29,
        (v30 & 1) == 0))
  {
    id v33 = sub_1001CD330((uint64_t)a1, 1);
    uint64_t v34 = [v33 URL];

    static URL._unconditionallyBridgeFromObjectiveC(_:)(v34);
    uint64_t v9 = v6;
    goto LABEL_16;
  }

  sub_1001D1044(a1, (uint64_t)v9);
  if (sub_1001AB0AC((uint64_t)v9, 1LL, v4) != 1)
  {
LABEL_16:
    URL._bridgeToObjectiveC()(v31);
    uint64_t v32 = v35;
    (*(void (**)(char *, uint64_t))(v51 + 8))(v9, v4);
    goto LABEL_17;
  }

  uint64_t v32 = 0LL;
LABEL_17:
  [v10 setDefaultActionURL:v32];

  return v10;
}

    id v16 = v13 & 1 | (v12 << 32);
    swift_bridgeObjectRetain(a3);
    id v14 = sub_1001FC600(v16, a2, a3, a4 & 1);
    goto LABEL_12;
  }

  sub_1001DE900(result, a2, 1LL);
  sub_1001DE900(v10, v9, v11);
  sub_1001DE740(v10, v9, v11);
  id v14 = &_swiftEmptyDictionarySingleton;
LABEL_12:
  sub_1001DE740(v8, a2, a3);
  uint64_t v17 = sub_100170614();
  id v18 = sub_1001AFF14((uint64_t *)&unk_100447E30);
  char v19 = swift_allocObject(v18, 112LL, 7LL);
  *(_OWORD *)(v19 + 16) = xmmword_10037B1B0;
  id v55 = a4;
  id v54 = a2;
  id v53 = v12;
  if (a3 == 1)
  {
    unsigned int v20 = 0xE300000000000000LL;
    id v21 = 7104878LL;
  }

  else
  {
    LOBYTE(v57) = v8 & 1;
    HIDWORD(v57) = v12;
    unint64_t v58 = a2;
    id v59 = a3;
    __int16 v60 = a4 & 1;
    swift_bridgeObjectRetain(a3);
    id v21 = String.init<A>(reflecting:)(&v57, &type metadata for AudioActivationContext);
    unsigned int v20 = v22;
  }

  *(void *)(v19 + 56) = &type metadata for String;
  id v23 = sub_1001B2330();
  *(void *)(v19 + 64) = v23;
  *(void *)(v19 + 32) = v21;
  *(void *)(v19 + 40) = v20;
  id v57 = v4;
  swift_retain(v4);
  id v24 = String.init<A>(reflecting:)(&v57, v56);
  *(void *)(v19 + 96) = &type metadata for String;
  *(void *)(v19 + 104) = v23;
  *(void *)(v19 + 72) = v24;
  *(void *)(v19 + 80) = v25;
  double v26 = static os_log_type_t.default.getter(v24);
  os_log(_:dso:log:type:_:)( "Setting audio activation context: %@ for provider %@",  52LL,  2LL,  &_mh_execute_header,  v17,  v26,  v19);

  swift_bridgeObjectRelease(v19);
  double v27 = (void *)v4[2];
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v14);
  id v57 = 0LL;
  double v29 = [v27 setActivationContext:isa error:&v57];

  id v30 = v57;
  if (v29)
  {
    char v31 = v57;
    uint64_t v32 = sub_100170614();
    id v33 = static os_log_type_t.default.getter(v32);
    os_log(_:dso:log:type:_:)( "Successfully set audio activation context",  41LL,  2LL,  &_mh_execute_header,  v32,  v33,  _swiftEmptyArrayStorage);

    uint64_t v34 = v4[4];
    id v35 = v4[5];
    __int128 v36 = v4[6];
    v4[4] = v8;
    v4[5] = v54;
    v4[6] = a3;
    *((_BYTE *)v4 + 56) = v55;
    return sub_1001DE740(v34, v35, v36);
  }

  else
  {
    __int128 v37 = v57;
    id v38 = (uint64_t *)_convertNSErrorToError(_:)(v30);

    swift_willThrow(v39);
    unint64_t v40 = sub_100170614();
    uint64_t v42 = static os_log_type_t.error.getter(v40, v41);
    uint64_t v43 = swift_allocObject(v18, 152LL, 7LL);
    *(_OWORD *)(v43 + 16) = xmmword_10037B6E0;
    if (a3 == 1)
    {
      uint64_t v44 = 0xE300000000000000LL;
      uint64_t v45 = 7104878LL;
    }

    else
    {
      LOBYTE(v57) = v8 & 1;
      HIDWORD(v57) = v53;
      unint64_t v58 = v54;
      id v59 = a3;
      __int16 v60 = v55 & 1;
      uint64_t v45 = String.init<A>(reflecting:)(&v57, &type metadata for AudioActivationContext);
    }

    *(void *)(v43 + 56) = &type metadata for String;
    *(void *)(v43 + 64) = v23;
    *(void *)(v43 + 32) = v45;
    *(void *)(v43 + 40) = v44;
    id v57 = v4;
    swift_retain(v4);
    uint64_t v46 = String.init<A>(reflecting:)(&v57, v56);
    *(void *)(v43 + 96) = &type metadata for String;
    *(void *)(v43 + 104) = v23;
    *(void *)(v43 + 72) = v46;
    *(void *)(v43 + 80) = v47;
    id v57 = v38;
    swift_errorRetain(v38);
    id v48 = sub_1001AFF14(&qword_100447B70);
    id v49 = String.init<A>(reflecting:)(&v57, v48);
    *(void *)(v43 + 136) = &type metadata for String;
    *(void *)(v43 + 144) = v23;
    *(void *)(v43 + 112) = v49;
    *(void *)(v43 + 120) = v50;
    os_log(_:dso:log:type:_:)( "Error setting audio activation context to %@ for provider %@: %@",  64LL,  2LL,  &_mh_execute_header,  v40,  v42,  v43);

    swift_bridgeObjectRelease(v43);
    return swift_errorRelease(v38);
  }

      id v18 = __clz(__rbit64(v16));
      char v19 = v18 + (v17 << 6);
      if (v19 == v15) {
        goto LABEL_26;
      }
      if (v19 < 0 || v19 >= v15) {
        goto LABEL_70;
      }
      unsigned int v20 = (uint64_t *)(*(void *)(v13 + 48) + 16 * v19);
      char v22 = *v20;
      id v21 = v20[1];
      swift_bridgeObjectRetain(v21);
LABEL_27:
      sub_1001E43E0();
      double v25 = sub_10026417C(v10);
      if (v21)
      {
        if (!v26) {
          goto LABEL_37;
        }
        if (v22 == v25 && v21 == v26)
        {
          sub_1002070C4();
          sub_1001D9020();
LABEL_66:
          sub_1001E43E0();
          goto LABEL_67;
        }

        uint64_t v28 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v21, v25, v26, 0LL);
        sub_1001D9020();
        sub_1001E43E0();
        if ((v28 & 1) == 0) {
          goto LABEL_38;
        }
      }

      else if (v26)
      {
LABEL_37:
        sub_1001E43E0();
LABEL_38:
        double v29 = [v2 destinationURIs];
        id v30 = static Set._unconditionallyBridgeFromObjectiveC(_:)( v29,  &type metadata for String,  &protocol witness table for String);

        char v31 = *(_BYTE *)(v30 + 32);
        uint64_t v32 = 1LL << v31;
        id v33 = *(void *)(v30 + 56);
        if (v33)
        {
          uint64_t v34 = 0LL;
LABEL_40:
          id v35 = __clz(__rbit64(v33)) + (v34 << 6);
          if (v35 != v32)
          {
            sub_100250E38(v35, *(_DWORD *)(v30 + 36), 0LL, v30);
            __int128 v37 = v36;
            id v39 = v38;
            sub_1001E43E0();
            unint64_t v40 = (void *)objc_opt_self(&OBJC_CLASS___TUHandle);
            id v41 = String._bridgeToObjectiveC()();
            uint64_t v42 = [v40 normalizedHandleWithDestinationID:v41];

            if (v42)
            {
              uint64_t v43 = swift_bridgeObjectRetain(*v3);
              sub_100201958(v43, v37, v39);
              uint64_t v45 = v44;
              uint64_t v46 = *(void *)(v44 + 16);
              if (v46)
              {
                uint64_t v47 = v42;
                id v48 = v44 + 40;
                swift_bridgeObjectRetain(v44);
                for (i = 0LL; i != v46; ++i)
                {
                  unsigned int v50 = *(void *)(v48 + 24 * i);
                  char v51 = static Hasher._hash(seed:_:)(*(void *)(v6 + 40), v50);
                  char v52 = -1LL << *(_BYTE *)(v6 + 32);
                  id v53 = v51 & ~v52;
                  if (((*(void *)(v6 + 56 + ((v53 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v53) & 1) != 0)
                  {
                    id v54 = *(void *)(v6 + 48);
                    if (*(void *)(v54 + 8 * v53) == v50)
                    {
LABEL_49:
                      unsigned int v85 = v6;
                      if ((swift_isUniquelyReferenced_nonNull_native(v6) & 1) == 0) {
                        sub_100247748();
                      }
                      sub_10028DCDC(v53);
                      int v6 = v85;
                      swift_bridgeObjectRelease(0x8000000000000000LL);
                    }

                    else
                    {
                      id v55 = ~v52;
                      while (1)
                      {
                        id v53 = (v53 + 1) & v55;
                        if (((*(void *)(v6 + 56 + ((v53 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v53) & 1) == 0) {
                          break;
                        }
                        if (*(void *)(v54 + 8 * v53) == v50) {
                          goto LABEL_49;
                        }
                      }
                    }
                  }
                }

                sub_1002070C4();

                swift_bridgeObjectRelease_n(v45, 2LL);
                id v3 = v77;
                uint64_t v7 = v78;
              }

              else
              {
                sub_1001D9020();
                unint64_t v63 = sub_10028E19C(-1LL, v56, v57, v58, v59, v60, v61, v62);
                sub_1001FE56C(v42, v63, 0LL, v63);
                sub_1002070C4();
              }

              __int16 v8 = v80;
              id v10 = v81;
            }

            else
            {
              sub_1001D9020();
              sub_1002070C4();
              id v10 = v81;
            }

            goto LABEL_67;
          }
        }

        else if ((v31 & 0x3Fu) >= 7)
        {
          id v33 = *(void *)(v30 + 64);
          if (v33)
          {
            uint64_t v34 = 1LL;
            goto LABEL_40;
          }

          char v64 = 9LL;
          while (v64 - 7 < (unint64_t)(v32 + 63) >> 6)
          {
            id v33 = *(void *)(v30 + 8 * v64++);
            if (v33)
            {
              uint64_t v34 = v64 - 8;
              goto LABEL_40;
            }
          }
        }

        sub_1002070C4();
        goto LABEL_66;
      }

      sub_1002070C4();
LABEL_67:
      if (v9 == v8) {
        goto LABEL_77;
      }
    }

    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    __break(1u);
LABEL_73:
    if (v7 < 0) {
      char v65 = v7;
    }
    else {
      char v65 = v7 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v7);
    __int16 v8 = _CocoaArrayWrapper.endIndex.getter(v65);
  }

  if (v5 < 0) {
    id v11 = v5;
  }
  else {
    id v11 = v5 & 0xFFFFFFFFFFFFFF8LL;
  }
  sub_10024DAEC();
  uint64_t v9 = _CocoaArrayWrapper.endIndex.getter(v11);
  sub_1001B92A4();
  if (!v9) {
    goto LABEL_31;
  }
LABEL_15:
  id v12 = 0LL;
  id v13 = (char *)(v8 + 7);
  __int128 v36 = v5 & 0xC000000000000001LL;
  id v30 = v5 + 32;
  char v31 = v5 & 0xFFFFFFFFFFFFFF8LL;
  uint64_t v32 = v9;
  id v33 = v5;
  while (1)
  {
    if (v36)
    {
      id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v12, v5);
    }

    else
    {
      if (v12 >= *(void *)(v31 + 16)) {
        goto LABEL_34;
      }
      id v14 = *(id *)(v30 + 8 * v12);
    }

    id v15 = v14;
    id v16 = __OFADD__(v12++, 1LL);
    if (v16) {
      break;
    }
    uint64_t v17 = NSObject._rawHashValue(seed:)(v8[5]);
    id v18 = -1LL << *((_BYTE *)v8 + 32);
    char v19 = v17 & ~v18;
    unsigned int v20 = v19 >> 6;
    id v21 = *(void *)&v13[8 * (v19 >> 6)];
    char v22 = 1LL << v19;
    if (((1LL << v19) & v21) != 0)
    {
      sub_1001B4B94(0LL, a3, a4);
      id v23 = sub_10024D930();
      id v24 = sub_10024D820((uint64_t)v23);

      if ((v24 & 1) != 0)
      {
LABEL_26:

        uint64_t v9 = v32;
        int v5 = v33;
        goto LABEL_30;
      }

      double v25 = ~v18;
      while (1)
      {
        char v19 = (v19 + 1) & v25;
        unsigned int v20 = v19 >> 6;
        id v21 = *(void *)&v13[8 * (v19 >> 6)];
        char v22 = 1LL << v19;
        if ((v21 & (1LL << v19)) == 0) {
          break;
        }
        double v26 = sub_10024D930();
        double v27 = sub_10024D820((uint64_t)v26);

        if ((v27 & 1) != 0) {
          goto LABEL_26;
        }
      }

      uint64_t v9 = v32;
      int v5 = v33;
    }

    *(void *)&v13[8 * v20] = v22 | v21;
    *(void *)(v8[6] + 8 * v19) = v15;
    uint64_t v28 = v8[2];
    id v16 = __OFADD__(v28, 1LL);
    double v29 = v28 + 1;
    if (v16) {
      goto LABEL_33;
    }
    v8[2] = v29;
LABEL_30:
    if (v12 == v9) {
      goto LABEL_31;
    }
  }

  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
}

  sub_1002011C8((uint64_t)v19, &qword_100447498);
  sub_1002011C8((uint64_t)v21, &qword_100447498);
}

  __break(1u);
  return result;
}

void sub_100028470(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if (v4)
  {
    id v5 = sub_1001704C4();
    int v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_1002B1F9C();
    }
  }

  TUOpenURL(*(void *)(a1 + 32));
}

LABEL_72:
        -[CSDConversation _removeMemberFromPendingMemberListForParticipant:]( val,  "_removeMemberFromPendingMemberListForParticipant:",  v4);
        -[CSDConversation _cancelInFlightAVCBlobRecoveryIfNecessary](val, "_cancelInFlightAVCBlobRecoveryIfNecessary");
        -[CSDConversation _endScreenCallIfNecessary](val, "_endScreenCallIfNecessary");
        goto LABEL_73;
      }
    }

    if ((id)-[CSDConversation state](val, "state") == (id)2 || (id)-[CSDConversation state](val, "state") == (id)3) {
      -[CSDConversation _emitRTCConnectionSetupEventForAddActiveParticipant:]( val,  "_emitRTCConnectionSetupEventForAddActiveParticipant:",  v4);
    }
    if ([v4 isLightweight])
    {
      unint64_t v77 = 0u;
      char v78 = 0u;
      char v75 = 0u;
      unsigned int v76 = 0u;
      char v31 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation lightweightMembers](val, "lightweightMembers"));
      uint64_t v32 = [v31 countByEnumeratingWithState:&v75 objects:v83 count:16];
      if (v32)
      {
        id v33 = *(void *)v76;
        do
        {
          for (i = 0LL; i != v32; i = (char *)i + 1)
          {
            if (*(void *)v76 != v33) {
              objc_enumerationMutation(v31);
            }
            id v35 = *(void **)(*((void *)&v75 + 1) + 8LL * (void)i);
            __int128 v36 = (void *)objc_claimAutoreleasedReturnValue([v35 handle]);
            __int128 v37 = (void *)objc_claimAutoreleasedReturnValue([v4 handle]);
            id v38 = [v36 isEquivalentToHandle:v37];

            if (v38)
            {
              id v39 = sub_1001704C4();
              unint64_t v40 = (os_log_s *)objc_claimAutoreleasedReturnValue(v39);
              if (os_log_type_enabled(v40, OS_LOG_TYPE_DEFAULT))
              {
                *(_DWORD *)buf = 138412546;
                unsigned int v80 = v35;
                uint64_t v81 = 2112;
                unint64_t v82 = v4;
                _os_log_impl( (void *)&_mh_execute_header,  v40,  OS_LOG_TYPE_DEFAULT,  "Found member: %@ representing participant: %@",  buf,  0x16u);
              }

              if ([v35 isLightweightMember])
              {
                id v41 = (void *)objc_claimAutoreleasedReturnValue([v35 lightweightPrimary]);
                uint64_t v42 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation localMember](val, "localMember"));
                uint64_t v43 = (void *)objc_claimAutoreleasedReturnValue([v42 handle]);
                if ([v41 isEquivalentToHandle:v43])
                {
                  uint64_t v44 = [v35 lightweightPrimaryParticipantIdentifier];
                  LODWORD(v44) = v44 == (id)-[CSDConversation localParticipantIdentifier]( val,  "localParticipantIdentifier");

                  if ((_DWORD)v44)
                  {
                    uint64_t v45 = sub_1001704C4();
                    uint64_t v46 = (os_log_s *)objc_claimAutoreleasedReturnValue(v45);
                    if (os_log_type_enabled(v46, OS_LOG_TYPE_DEFAULT))
                    {
                      *(_DWORD *)buf = 138412546;
                      unsigned int v80 = v4;
                      uint64_t v81 = 2112;
                      unint64_t v82 = v35;
                      _os_log_impl( (void *)&_mh_execute_header,  v46,  OS_LOG_TYPE_DEFAULT,  "AddedParticipant %@ for member: %@ is representing our localMember",  buf,  0x16u);
                    }

                    -[CSDConversation setSplitSessionSecondary:](val, "setSplitSessionSecondary:", v4);
                  }
                }

                else
                {
                }
              }
            }
          }

          uint64_t v32 = [v31 countByEnumeratingWithState:&v75 objects:v83 count:16];
        }

        while (v32);
      }

      uint64_t v47 = (void *)objc_claimAutoreleasedReturnValue( -[CSDConversation activeLightweightParticipantsByIdentifier]( val,  "activeLightweightParticipantsByIdentifier"));
      id v48 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedLongLong:]( NSNumber,  "numberWithUnsignedLongLong:",  [v4 identifier]));
      [v47 setObject:v4 forKeyedSubscript:v48];

      goto LABEL_69;
    }

    if (v21)
    {
      id v49 = sub_1001704C4();
      unsigned int v50 = (os_log_s *)objc_claimAutoreleasedReturnValue(v49);
      if (os_log_type_enabled(v50, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v50,  OS_LOG_TYPE_DEFAULT,  "Removing active participant and replacing it with one with the same identifier but a newer AVC data blob.",  buf,  2u);
      }

      char v51 = [v4 audioVideoMode];
      if (v51 != [v21 audioVideoMode])
      {
        char v52 = sub_1001704C4();
        id v53 = (os_log_s *)objc_claimAutoreleasedReturnValue(v52);
        if (os_log_type_enabled(v53, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v53,  OS_LOG_TYPE_DEFAULT,  "New participant blob's audioVideoMode is different than our current audioVideoMode. AVModeUpdates need to ha ppen with the explicit ParticipantUpdate message. Resetting to known audioVideoMode",  buf,  2u);
        }

        objc_msgSend(v4, "setAudioVideoMode:", objc_msgSend(v21, "audioVideoMode"));
      }

      id v54 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation avcSession](val, "avcSession"));
      [v54 removeParticipant:v21];

      goto LABEL_68;
    }

    id v55 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation deviceSupport](val, "deviceSupport"));
    if ([v55 isGreenTea])
    {
      id v56 = (void *)objc_claimAutoreleasedReturnValue( -[CSDConversation activeRemoteParticipantsByIdentifier]( val,  "activeRemoteParticipantsByIdentifier"));
      if ([v56 count])
      {
        if ((id)-[CSDConversation state](val, "state") == (id)2)
        {

          goto LABEL_61;
        }

        id v57 = (id)-[CSDConversation state](val, "state") == (id)3;

        if (v57)
        {
LABEL_61:
          unint64_t v58 = (void *)objc_claimAutoreleasedReturnValue([v4 association]);
          id v59 = v58 == 0LL;

          __int16 v60 = sub_1001704C4();
          id v61 = (os_log_s *)objc_claimAutoreleasedReturnValue(v60);
          uint64_t v62 = os_log_type_enabled(v61, OS_LOG_TYPE_DEFAULT);
          if (v59)
          {
            if (v62)
            {
              *(_WORD *)buf = 0;
              _os_log_impl( (void *)&_mh_execute_header,  v61,  OS_LOG_TYPE_DEFAULT,  "[WARN] GreenTea device cannot be in a call with more than one other participant, leaving",  buf,  2u);
            }

            unsigned int v66 = (void *)objc_claimAutoreleasedReturnValue( +[CSDConversationLeaveContext greenTeaLeaveContext]( &OBJC_CLASS___CSDConversationLeaveContext,  "greenTeaLeaveContext"));
            -[CSDConversation leaveUsingContext:](val, "leaveUsingContext:", v66);
          }

          else
          {
            if (v62)
            {
              *(_WORD *)buf = 0;
              _os_log_impl( (void *)&_mh_execute_header,  v61,  OS_LOG_TYPE_DEFAULT,  "GreenTea hand off eligible call, will leave shortly if handoff not completed",  buf,  2u);
            }

            objc_initWeak((id *)buf, val);
            unint64_t v63 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation serverBag](val, "serverBag"));
            char v64 = dispatch_time(0, 1000000000 * (void)[v63 greenTeaHandoffTimeout]);
            char v65 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(-[CSDConversation queue](val, "queue"));
            block[0] = _NSConcreteStackBlock;
            block[1] = 3221225472LL;
            block[2] = sub_10002940C;
            block[3] = &unk_1003D7CB0;
            objc_copyWeak(&v74, (id *)buf);
            void block[4] = val;
            dispatch_after(v64, v65, block);

            objc_destroyWeak(&v74);
            objc_destroyWeak((id *)buf);
          }
        }
      }

      else
      {
      }
    }

    else
    {
    }

  char v51 = v22;
  unsigned int v50 = -[NSString hash](self->_localSenderIdentityUUIDString, "hash");
  id v49 = (unint64_t)-[NSMutableArray hash](self->_remoteParticipantHandles, "hash");
  id v48 = -[NSString hash](self->_localSenderIdentityAccountUUIDString, "hash");
  id v23 = self->_has;
  if ((*(_WORD *)&v23 & 0x200) == 0)
  {
    uint64_t v47 = 0LL;
    if ((*(_DWORD *)&v23 & 0x2000000) != 0) {
      goto LABEL_74;
    }
LABEL_77:
    uint64_t v46 = 0LL;
    if ((*(_WORD *)&v23 & 0x800) != 0) {
      goto LABEL_75;
    }
    goto LABEL_78;
  }

  uint64_t v47 = 2654435761LL * self->_protoTTYType;
  if ((*(_DWORD *)&v23 & 0x2000000) == 0) {
    goto LABEL_77;
  }
LABEL_74:
  uint64_t v46 = 2654435761LL * self->_protoSupportsTTYWithVoice;
  if ((*(_WORD *)&v23 & 0x800) != 0)
  {
LABEL_75:
    uint64_t v45 = 2654435761LL * self->_requestActionType;
    goto LABEL_79;
  }

  unsigned int v50 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  self->_protoShouldSuppressRingtone));
  [v4 setObject:v50 forKey:@"protoShouldSuppressRingtone"];

  id v14 = self->_has;
  if ((*(_WORD *)&v14 & 0x800) == 0)
  {
LABEL_22:
    if ((*(_BYTE *)&v14 & 0x10) == 0) {
      goto LABEL_23;
    }
    goto LABEL_74;
  }

  PBDataWriterWriteUint32Field(v5, self->_protoSoundRegion, 15LL);
  id v12 = self->_has;
  if ((*(_WORD *)&v12 & 0x100) == 0)
  {
LABEL_24:
    if ((*(_WORD *)&v12 & 0x400) == 0) {
      goto LABEL_26;
    }
    goto LABEL_25;
  }

LABEL_68:
    uint64_t v67 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation activeRemoteParticipantsByIdentifier](val, "activeRemoteParticipantsByIdentifier"));
    unint64_t v68 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedLongLong:]( NSNumber,  "numberWithUnsignedLongLong:",  [v4 identifier]));
    [v67 setObject:v4 forKeyedSubscript:v68];

    -[CSDConversation _addRemoteParticipantToAVCSessionIfPossible:]( val,  "_addRemoteParticipantToAVCSessionIfPossible:",  v4);
LABEL_69:
    -[CSDConversation _updateParticipantTypesForAddedParticipant:]( val,  "_updateParticipantTypesForAddedParticipant:",  v4);
    if (-[CSDConversation activeRemoteParticipantCountMinusEligibleAVLess]( val,  "activeRemoteParticipantCountMinusEligibleAVLess") >= 2) {
      -[CSDConversation setOneToOneModeEnabled:](val, "setOneToOneModeEnabled:", 0LL);
    }
    char v69 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation activitySessionManager](val, "activitySessionManager"));
    [v69 refreshActivitySessionActiveParticipants];

    -[CSDConversation setServerProvidedParticipantIdentifiers:](val, "setServerProvidedParticipantIdentifiers:", 0LL);
    -[CSDConversation setServerProvidedLightweightParticipantIdentifiers:]( val,  "setServerProvidedLightweightParticipantIdentifiers:",  0LL);
    -[CSDConversation refreshActiveParticipantsList](val, "refreshActiveParticipantsList");
    char v70 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation serverBag](val, "serverBag"));
    -[CSDConversation setRebroadcastTimeThreshold:]( val,  "setRebroadcastTimeThreshold:",  [v70 rebroadcastTimeThreshold]);

    double v29 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[CSDConversation delegate](val, "delegate"));
    -[os_log_s conversation:addedActiveParticipant:](v29, "conversation:addedActiveParticipant:", val, v4);
    -[os_log_s conversationChanged:](v29, "conversationChanged:", val);
    goto LABEL_72;
  }

  __int16 v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults tu_defaults](&OBJC_CLASS___NSUserDefaults, "tu_defaults"));
  unsigned int v71 = (void *)objc_claimAutoreleasedReturnValue([v8 stringForKey:@"DefaultsRemovedURI"]);

  uint64_t v9 = v71;
  if (!v71
    || (id v10 = (void *)objc_claimAutoreleasedReturnValue([v4 handle]),
        id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 value]),
        id v12 = [v11 isEqualToString:v71],
        v11,
        v10,
        uint64_t v9 = v71,
        !v12))
  {
LABEL_10:

    goto LABEL_11;
  }

  id v13 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation remoteMemberHandles](val, "remoteMemberHandles"));
  id v14 = (void *)objc_claimAutoreleasedReturnValue([v4 handle]);
  id v15 = [v13 containsObject:v14];

  id v16 = sub_1001704C4();
  uint64_t v17 = (os_log_s *)objc_claimAutoreleasedReturnValue(v16);
  id v18 = os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT);
  if ((v15 & 1) != 0)
  {
    if (v18)
    {
      *(_DWORD *)buf = 138412290;
      unsigned int v80 = v71;
      _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "User defaults: added to remote member: %@, continue adding active participant",  buf,  0xCu);
    }

    uint64_t v9 = v71;
    goto LABEL_10;
  }

  if (v18)
  {
    *(_DWORD *)buf = 138412290;
    unsigned int v80 = v71;
    _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "User defaults: do not add %@ to participant",  buf,  0xCu);
  }

LABEL_73:
}

  uint64_t v47 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_protoDisconnectedReason));
  [v4 setObject:v47 forKey:@"protoDisconnectedReason"];

  if ((*(_DWORD *)&self->_has & 0x100000) != 0)
  {
LABEL_15:
    id v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", self->_protoVoicemail));
    [v4 setObject:v12 forKey:@"protoVoicemail"];
  }

  *((_BYTE *)v4 + 140) = self->_protoNeedsManualInCallSounds;
  *((_DWORD *)v4 + 38) |= 0x800u;
  uint64_t v7 = self->_has;
  if ((*(_BYTE *)&v7 & 0x10) == 0)
  {
LABEL_23:
    if ((*(_WORD *)&v7 & 0x100) == 0) {
      goto LABEL_24;
    }
    goto LABEL_70;
  }

  *((_DWORD *)v20 + 27) = self->_visionFeatureVersion;
  *((_DWORD *)v20 + 32) |= 8u;
  if ((*(_DWORD *)&self->_has & 4) != 0)
  {
LABEL_51:
    *((_DWORD *)v20 + 26) = self->_visionCallEstablishmentVersion;
    *((_DWORD *)v20 + 32) |= 4u;
  }

              sub_1001F0E0C();
              unsigned int v124 = v118;
            }

            else
            {
              sub_1001F0E0C();
              unsigned int v124 = v140;
              unsigned int v106 = v141;
              if (!v140) {
                goto LABEL_77;
              }
            }

            swift_bridgeObjectRelease(v124);
            goto LABEL_71;
          }

          unsigned int v106 = v141;
          if (!v118) {
            goto LABEL_76;
          }
          goto LABEL_68;
        }

        static os_log_type_t.error.getter(v102, v103);
        char v108 = sub_1001DEA68(v156);
        *(_OWORD *)(v108 + 16) = v154;
        char v109 = sub_1001F0E3C(v104);
        unsigned int v110 = v155;
        *(void *)(v108 + 56) = &type metadata for String;
        *(void *)(v108 + 64) = v110;
        *(void *)(v108 + 32) = v109;
        *(void *)(v108 + 40) = v111;
        sub_1001F0DDC( (uint64_t)"Could not convert NearbyDevice to NearbyDeviceRoute: %@",  55LL,  2LL,  (uint64_t)&_mh_execute_header);

        sub_1001B0F5C();
        sub_1001F0E34(v104, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
        id v38 = v104;
      }

      else
      {
LABEL_48:
        char v95 = sub_1001DEA68(v156);
        *(_OWORD *)(v95 + 16) = v154;
        char v96 = sub_1001F0E3C(v65);
        uint64_t v98 = sub_1001F0DFC(v96, v97);
        sub_1001F0DB0( (uint64_t)"filtering out device: %@ because it does not support GFT",  56LL,  2LL,  (uint64_t)&_mh_execute_header,  v99,  v98);
        sub_1001B2428();
        sub_1001F0E34(v65, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
        id v38 = v65;
      }

void sub_1000293F0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, id location)
{
}

void sub_10002940C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained activeRemoteParticipantsByIdentifier]);
  id v4 = [v3 count];

  if ((unint64_t)v4 >= 2)
  {
    id v5 = sub_1001704C4();
    int v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "[WARN] GreenTea device leaving handoff conversation after timeout",  v9,  2u);
    }

    uint64_t v7 = *(void **)(a1 + 32);
    __int16 v8 = (void *)objc_claimAutoreleasedReturnValue( +[CSDConversationLeaveContext greenTeaLeaveContext]( &OBJC_CLASS___CSDConversationLeaveContext,  "greenTeaLeaveContext"));
    [v7 leaveUsingContext:v8];
  }
}

LABEL_87:
        -[CSDConversation switchBackToOneToOneIfPossibleUsingDelay:]( self,  "switchBackToOneToOneIfPossibleUsingDelay:",  1LL);
LABEL_88:
        id v30 = v110;
LABEL_89:

        goto LABEL_90;
      }

      if ((v92 & 1) == 0) {
        goto LABEL_87;
      }
      goto LABEL_82;
    }

    id v30 = v110;
    if (v22)
    {
      char v31 = (void *)objc_claimAutoreleasedReturnValue([v110 handle]);
      *(_DWORD *)buf = 138412802;
      char v123 = (unint64_t)v31;
      unsigned int v124 = 2048;
      uint64_t v125 = a3;
      unint64_t v126 = 2112;
      char v127 = self;
      _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEFAULT,  "[WARN] removeParticipantWithIdentifier:fromHandle: Not removing participant handle (%@) didn't match, with identifier %lu: %@",  buf,  0x20u);
    }
  }

  else
  {
    id v41 = sub_1001704C4();
    id v30 = (void *)objc_claimAutoreleasedReturnValue(v41);
    if (os_log_type_enabled((os_log_t)v30, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v42 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation UUID](self, "UUID"));
      *(_DWORD *)buf = 134218242;
      char v123 = a3;
      unsigned int v124 = 2112;
      uint64_t v125 = (unint64_t)v42;
      _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v30,  OS_LOG_TYPE_DEFAULT,  "[WARN] removeParticipantWithIdentifier:fromHandle: Could not find participant with identifier %lu: %@",  buf,  0x16u);
    }
  }

  __int128 v37 = 0LL;
LABEL_88:
  double v25 = -[NSString hash](self->_groupUUIDString, "hash");
  double v26 = (unint64_t)-[NSMutableArray hash](self->_conversations, "hash");
  double v27 = -[NSString hash](self->_joinConversationRequestURLString, "hash");
  uint64_t v28 = -[NSString hash](self->_conversationUUIDString, "hash");
  double v29 = (unint64_t)-[NSMutableArray hash](self->_conversationMembers, "hash");
  id v30 = (unint64_t)-[NSMutableArray hash](self->_handlesToInvites, "hash");
  char v31 = (unint64_t)-[NSMutableArray hash](self->_prominenceEntrys, "hash");
  if ((*((_BYTE *)&self->_has + 2) & 0x80) != 0) {
    uint64_t v32 = 2654435761LL * self->_protoSupportsDTMFUpdates;
  }
  else {
    uint64_t v32 = 0LL;
  }
  id v33 = v89 ^ v90 ^ v88 ^ v87 ^ v86 ^ v85 ^ v84 ^ v83 ^ v82 ^ v81 ^ v80 ^ v79 ^ v78 ^ v77 ^ v76 ^ v75 ^ v74 ^ v73 ^ v72 ^ v71 ^ v6 ^ v70 ^ v69 ^ v68 ^ v67 ^ v66 ^ v65 ^ v64 ^ v63 ^ v62 ^ v61 ^ v60 ^ v59 ^ v58 ^ v57 ^ v56 ^ v55 ^ v54 ^ v53 ^ v52 ^ v51 ^ v50 ^ v49 ^ v48 ^ v47 ^ v46 ^ v45 ^ v44 ^ v43 ^ v42 ^ v41 ^ v40 ^ v39 ^ v38 ^ v37 ^ v25 ^ v26 ^ v27 ^ v28;
  uint64_t v34 = v29 ^ v30 ^ v31 ^ v32 ^ -[NSString hash](self->_dtmfUpdateDigits, "hash");
  id v35 = v34 ^ (unint64_t)-[NSData hash](self->_image, "hash");
  return v33 ^ v35 ^ -[NSString hash](self->_senderIDSIdentifier, "hash");
}

LABEL_90:
}
}

        return 0LL;
      case 0x14u:
        uint64_t v32 = 0;
        id v33 = 0;
        id v14 = 0LL;
        *(_BYTE *)(a1 + 152) |= 1u;
        while (2)
        {
          uint64_t v34 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v34 == -1LL || v34 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            id v35 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v34);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v34 + 1;
            v14 |= (unint64_t)(v35 & 0x7F) << v32;
            if (v35 < 0)
            {
              v32 += 7;
              uint64_t v9 = v33++ >= 9;
              if (v9)
              {
                LODWORD(v14) = 0;
                goto LABEL_87;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_87:
        __int128 v36 = 32LL;
LABEL_88:
        *(_DWORD *)(a1 + v36) = v14;
        goto LABEL_67;
      default:
        uint64_t result = PBReaderSkipValueWithTag(a2);
        if (!(_DWORD)result) {
          return result;
        }
        goto LABEL_67;
    }
  }

void sub_10002CD40(uint64_t a1)
{
  if ([*(id *)(a1 + 32) state] == (id)3)
  {
    id v1 = (void *)objc_claimAutoreleasedReturnValue(+[TUCallCenter sharedInstance](&OBJC_CLASS___TUCallCenter, "sharedInstance"));
    id v3 = (id)objc_claimAutoreleasedReturnValue([v1 frontmostAudioOrVideoCall]);

    if (v3)
    {
      id v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
      [v2 postNotificationName:TUCallCenterPendingMemberAddedNotification object:v3];
    }
  }

LABEL_14:
  return v8;
}

  id v11 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  self->_supportsUnambiguousMultiPartyState));
  [v3 setObject:v11 forKey:@"supportsUnambiguousMultiPartyState"];

  has = (char)self->_has;
  if ((has & 1) != 0) {
    goto LABEL_15;
  }
LABEL_7:
  if ((has & 0x10) != 0)
  {
LABEL_8:
    id v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  self->_supportsSendingToVoicemail));
    [v3 setObject:v5 forKey:@"supportsSendingToVoicemail"];
  }

  return v3;
}

  PBDataWriterWriteBOOLField(v5, self->_supportsUnambiguousMultiPartyState, 6LL);
  has = (char)self->_has;
  if ((has & 1) != 0) {
    goto LABEL_15;
  }
LABEL_7:
  if ((has & 0x10) != 0) {
LABEL_8:
  }
    PBDataWriterWriteBOOLField(v5, self->_supportsSendingToVoicemail, 8LL);
LABEL_9:
}

  v4[13] = self->_supportsUnambiguousMultiPartyState;
  v4[16] |= 0x20u;
  has = (char)self->_has;
  if ((has & 1) != 0) {
    goto LABEL_15;
  }
LABEL_7:
  if ((has & 0x10) != 0)
  {
LABEL_8:
    v4[12] = self->_supportsSendingToVoicemail;
    v4[16] |= 0x10u;
  }

  *((_BYTE *)result + 13) = self->_supportsUnambiguousMultiPartyState;
  *((_BYTE *)result + 16) |= 0x20u;
  has = (char)self->_has;
  if ((has & 1) == 0)
  {
LABEL_7:
    if ((has & 0x10) == 0) {
      return result;
    }
    goto LABEL_8;
  }

  self->_supportsUnambiguousMultiPartyState = v4[13];
  *(_BYTE *)&self->_has |= 0x20u;
  id v5 = v4[16];
  if (v5) {
    goto LABEL_15;
  }
LABEL_7:
  if ((v5 & 0x10) != 0)
  {
LABEL_8:
    self->_supportsSendingToVoicemail = v4[12];
    *(_BYTE *)&self->_has |= 0x10u;
  }

          goto LABEL_18;
        }

        if (v18)
        {
          *(_DWORD *)buf = 138412546;
          uint64_t v28 = v14;
          double v29 = 2112;
          id v30 = v12;
          _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "Updating call %@ with protoCall %@",  buf,  0x16u);
        }

        [v12 updateRelayCall:v14];
LABEL_18:
      }

      uint64_t v9 = [v7 countByEnumeratingWithState:&v23 objects:v31 count:16];
    }

    while (v9);
  }
}

          char v19 = (void *)objc_claimAutoreleasedReturnValue(-[CSDCallStateMonitor callCenter](self, "callCenter"));
          [v19 disconnectCall:v14];

          continue;
        }
      }
    }

    id v11 = [v8 countByEnumeratingWithState:&v34 objects:v38 count:16];
  }

  while (v11);
LABEL_22:

  -[CSDCallStateMonitor _disconnectOrPullExistingCallsForCallIfNecessary:]( self,  "_disconnectOrPullExistingCallsForCallIfNecessary:",  v4);
  -[CSDCallStateMonitor _pushCallToAlternateDestinationIfNecessary:]( self,  "_pushCallToAlternateDestinationIfNecessary:",  v4);
  id v21 = 0LL;
LABEL_32:
  -[CSDCallStateMonitor setHeySiriEnabled:](self, "setHeySiriEnabled:", v21, v33);
}

  return v7;
}

  ringtoneSoundURLuint64_t String = self->_ringtoneSoundURLString;
  if (ringtoneSoundURLString) {
    [v4 setObject:ringtoneSoundURLString forKey:@"ringtoneSoundURLString"];
  }
  originalRingtoneSoundURLuint64_t String = self->_originalRingtoneSoundURLString;
  if (originalRingtoneSoundURLString) {
    [v4 setObject:originalRingtoneSoundURLString forKey:@"originalRingtoneSoundURLString"];
  }
  handoffIdentifiers = self->_handoffIdentifiers;
  if (handoffIdentifiers) {
    [v4 setObject:handoffIdentifiers forKey:@"handoffIdentifier"];
  }
  id v13 = PBRepeatedUInt32NSArray(&self->_protoSupportedHandleTypes);
  id v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
  [v4 setObject:v14 forKey:@"protoSupportedHandleType"];

  if (-[NSMutableArray count](self->_emergencyLabeledHandles, "count"))
  {
    id v15 = -[NSMutableArray initWithCapacity:]( objc_alloc(&OBJC_CLASS___NSMutableArray),  "initWithCapacity:",  -[NSMutableArray count](self->_emergencyLabeledHandles, "count"));
    char v52 = 0u;
    id v53 = 0u;
    id v54 = 0u;
    id v55 = 0u;
    id v16 = self->_emergencyLabeledHandles;
    uint64_t v17 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v16,  "countByEnumeratingWithState:objects:count:",  &v52,  v58,  16LL);
    if (v17)
    {
      id v18 = v17;
      char v19 = *(void *)v53;
      do
      {
        for (i = 0LL; i != v18; i = (char *)i + 1)
        {
          if (*(void *)v53 != v19) {
            objc_enumerationMutation(v16);
          }
          id v21 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v52 + 1) + 8 * (void)i) dictionaryRepresentation]);
          -[NSMutableArray addObject:](v15, "addObject:", v21);
        }

        id v18 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v16,  "countByEnumeratingWithState:objects:count:",  &v52,  v58,  16LL);
      }

      while (v18);
    }

    [v4 setObject:v15 forKey:@"emergencyLabeledHandles"];
  }

  if ((*(_BYTE *)&self->_has & 0x20) != 0)
  {
    char v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", self->_supportsRecents));
    [v4 setObject:v22 forKey:@"supportsRecents"];
  }

  if (-[NSMutableArray count](self->_prioritizedSenderIdentities, "count"))
  {
    id v23 = -[NSMutableArray initWithCapacity:]( objc_alloc(&OBJC_CLASS___NSMutableArray),  "initWithCapacity:",  -[NSMutableArray count](self->_prioritizedSenderIdentities, "count"));
    id v48 = 0u;
    id v49 = 0u;
    unsigned int v50 = 0u;
    char v51 = 0u;
    id v24 = self->_prioritizedSenderIdentities;
    double v25 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v24,  "countByEnumeratingWithState:objects:count:",  &v48,  v57,  16LL);
    if (v25)
    {
      double v26 = v25;
      double v27 = *(void *)v49;
      do
      {
        for (j = 0LL; j != v26; j = (char *)j + 1)
        {
          if (*(void *)v49 != v27) {
            objc_enumerationMutation(v24);
          }
          double v29 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v48 + 1) + 8 * (void)j) dictionaryRepresentation]);
          -[NSMutableArray addObject:](v23, "addObject:", v29);
        }

        double v26 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v24,  "countByEnumeratingWithState:objects:count:",  &v48,  v57,  16LL);
      }

      while (v26);
    }

    [v4 setObject:v23 forKey:@"prioritizedSenderIdentities"];
  }

  if (-[NSMutableArray count](self->_emergencyHandles, "count"))
  {
    id v30 = -[NSMutableArray initWithCapacity:]( objc_alloc(&OBJC_CLASS___NSMutableArray),  "initWithCapacity:",  -[NSMutableArray count](self->_emergencyHandles, "count"));
    uint64_t v44 = 0u;
    uint64_t v45 = 0u;
    uint64_t v46 = 0u;
    uint64_t v47 = 0u;
    char v31 = self->_emergencyHandles;
    uint64_t v32 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v31,  "countByEnumeratingWithState:objects:count:",  &v44,  v56,  16LL);
    if (v32)
    {
      id v33 = v32;
      uint64_t v34 = *(void *)v45;
      do
      {
        for (k = 0LL; k != v33; k = (char *)k + 1)
        {
          if (*(void *)v45 != v34) {
            objc_enumerationMutation(v31);
          }
          __int128 v36 = (void *)objc_claimAutoreleasedReturnValue( objc_msgSend( *(id *)(*((void *)&v44 + 1) + 8 * (void)k),  "dictionaryRepresentation",  (void)v44));
          -[NSMutableArray addObject:](v30, "addObject:", v36);
        }

        id v33 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v31,  "countByEnumeratingWithState:objects:count:",  &v44,  v56,  16LL);
      }

      while (v33);
    }

    [v4 setObject:v30 forKey:@"emergencyHandles"];
  }

  bundleIdentifier = self->_bundleIdentifier;
  if (bundleIdentifier) {
    [v4 setObject:bundleIdentifier forKey:@"bundleIdentifier"];
  }
  return v4;
}

  if (self->_ringtoneSoundURLString) {
    objc_msgSend(v25, "setRingtoneSoundURLString:");
  }
  if (self->_originalRingtoneSoundURLString) {
    objc_msgSend(v25, "setOriginalRingtoneSoundURLString:");
  }
  if (-[CSDMessagingCallProvider handoffIdentifiersCount](self, "handoffIdentifiersCount"))
  {
    [v25 clearHandoffIdentifiers];
    int v6 = -[CSDMessagingCallProvider handoffIdentifiersCount](self, "handoffIdentifiersCount");
    if (v6)
    {
      uint64_t v7 = v6;
      for (i = 0LL; i != v7; ++i)
      {
        uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(-[CSDMessagingCallProvider handoffIdentifierAtIndex:](self, "handoffIdentifierAtIndex:", i));
        [v25 addHandoffIdentifier:v9];
      }
    }
  }

  if (-[CSDMessagingCallProvider protoSupportedHandleTypesCount](self, "protoSupportedHandleTypesCount"))
  {
    [v25 clearProtoSupportedHandleTypes];
    id v10 = -[CSDMessagingCallProvider protoSupportedHandleTypesCount](self, "protoSupportedHandleTypesCount");
    if (v10)
    {
      id v11 = v10;
      for (j = 0LL; j != v11; ++j)
        objc_msgSend( v25,  "addProtoSupportedHandleType:",  -[CSDMessagingCallProvider protoSupportedHandleTypeAtIndex:](self, "protoSupportedHandleTypeAtIndex:", j));
    }
  }

  if (-[CSDMessagingCallProvider emergencyLabeledHandlesCount](self, "emergencyLabeledHandlesCount"))
  {
    [v25 clearEmergencyLabeledHandles];
    id v13 = -[CSDMessagingCallProvider emergencyLabeledHandlesCount](self, "emergencyLabeledHandlesCount");
    if (v13)
    {
      id v14 = v13;
      for (k = 0LL; k != v14; ++k)
      {
        id v16 = (void *)objc_claimAutoreleasedReturnValue( -[CSDMessagingCallProvider emergencyLabeledHandlesAtIndex:]( self,  "emergencyLabeledHandlesAtIndex:",  k));
        [v25 addEmergencyLabeledHandles:v16];
      }
    }
  }

  if ((*(_BYTE *)&self->_has & 0x20) != 0)
  {
    v25[123] = self->_supportsRecents;
    v25[128] |= 0x20u;
  }

  if (-[CSDMessagingCallProvider prioritizedSenderIdentitiesCount](self, "prioritizedSenderIdentitiesCount"))
  {
    [v25 clearPrioritizedSenderIdentities];
    uint64_t v17 = -[CSDMessagingCallProvider prioritizedSenderIdentitiesCount](self, "prioritizedSenderIdentitiesCount");
    if (v17)
    {
      id v18 = v17;
      for (m = 0LL; m != v18; ++m)
      {
        unsigned int v20 = (void *)objc_claimAutoreleasedReturnValue( -[CSDMessagingCallProvider prioritizedSenderIdentitiesAtIndex:]( self,  "prioritizedSenderIdentitiesAtIndex:",  m));
        [v25 addPrioritizedSenderIdentities:v20];
      }
    }
  }

  if (-[CSDMessagingCallProvider emergencyHandlesCount](self, "emergencyHandlesCount"))
  {
    [v25 clearEmergencyHandles];
    id v21 = -[CSDMessagingCallProvider emergencyHandlesCount](self, "emergencyHandlesCount");
    if (v21)
    {
      char v22 = v21;
      for (n = 0LL; n != v22; ++n)
      {
        id v24 = (void *)objc_claimAutoreleasedReturnValue(-[CSDMessagingCallProvider emergencyHandlesAtIndex:](self, "emergencyHandlesAtIndex:", n));
        [v25 addEmergencyHandles:v24];
      }
    }
  }

  if (self->_bundleIdentifier) {
    objc_msgSend(v25, "setBundleIdentifier:");
  }
}

  if (*((void *)v4 + 14)) {
    -[CSDMessagingCallProvider setRingtoneSoundURLString:](self, "setRingtoneSoundURLString:");
  }
  if (*((void *)v4 + 12)) {
    -[CSDMessagingCallProvider setOriginalRingtoneSoundURLString:](self, "setOriginalRingtoneSoundURLString:");
  }
  uint64_t v43 = 0u;
  uint64_t v44 = 0u;
  id v41 = 0u;
  uint64_t v42 = 0u;
  int v6 = *((id *)v4 + 8);
  uint64_t v7 = [v6 countByEnumeratingWithState:&v41 objects:v48 count:16];
  if (v7)
  {
    __int16 v8 = v7;
    uint64_t v9 = *(void *)v42;
    do
    {
      for (i = 0LL; i != v8; i = (char *)i + 1)
      {
        if (*(void *)v42 != v9) {
          objc_enumerationMutation(v6);
        }
        -[CSDMessagingCallProvider addHandoffIdentifier:]( self,  "addHandoffIdentifier:",  *(void *)(*((void *)&v41 + 1) + 8LL * (void)i));
      }

      __int16 v8 = [v6 countByEnumeratingWithState:&v41 objects:v48 count:16];
    }

    while (v8);
  }

  id v11 = (char *)[v4 protoSupportedHandleTypesCount];
  if (v11)
  {
    id v12 = v11;
    for (j = 0LL; j != v12; ++j)
      -[CSDMessagingCallProvider addProtoSupportedHandleType:]( self,  "addProtoSupportedHandleType:",  [v4 protoSupportedHandleTypeAtIndex:j]);
  }

  id v39 = 0u;
  unint64_t v40 = 0u;
  __int128 v37 = 0u;
  id v38 = 0u;
  id v14 = *((id *)v4 + 7);
  id v15 = [v14 countByEnumeratingWithState:&v37 objects:v47 count:16];
  if (v15)
  {
    id v16 = v15;
    uint64_t v17 = *(void *)v38;
    do
    {
      for (k = 0LL; k != v16; k = (char *)k + 1)
      {
        if (*(void *)v38 != v17) {
          objc_enumerationMutation(v14);
        }
        -[CSDMessagingCallProvider addEmergencyLabeledHandles:]( self,  "addEmergencyLabeledHandles:",  *(void *)(*((void *)&v37 + 1) + 8LL * (void)k));
      }

      id v16 = [v14 countByEnumeratingWithState:&v37 objects:v47 count:16];
    }

    while (v16);
  }

  if ((*((_BYTE *)v4 + 128) & 0x20) != 0)
  {
    self->_supportsRecents = *((_BYTE *)v4 + 123);
    *(_BYTE *)&self->_has |= 0x20u;
  }

  id v35 = 0u;
  __int128 v36 = 0u;
  id v33 = 0u;
  uint64_t v34 = 0u;
  char v19 = *((id *)v4 + 13);
  unsigned int v20 = [v19 countByEnumeratingWithState:&v33 objects:v46 count:16];
  if (v20)
  {
    id v21 = v20;
    char v22 = *(void *)v34;
    do
    {
      for (m = 0LL; m != v21; m = (char *)m + 1)
      {
        if (*(void *)v34 != v22) {
          objc_enumerationMutation(v19);
        }
        -[CSDMessagingCallProvider addPrioritizedSenderIdentities:]( self,  "addPrioritizedSenderIdentities:",  *(void *)(*((void *)&v33 + 1) + 8LL * (void)m));
      }

      id v21 = [v19 countByEnumeratingWithState:&v33 objects:v46 count:16];
    }

    while (v21);
  }

  char v31 = 0u;
  uint64_t v32 = 0u;
  double v29 = 0u;
  id v30 = 0u;
  id v24 = *((id *)v4 + 6);
  double v25 = [v24 countByEnumeratingWithState:&v29 objects:v45 count:16];
  if (v25)
  {
    double v26 = v25;
    double v27 = *(void *)v30;
    do
    {
      for (n = 0LL; n != v26; n = (char *)n + 1)
      {
        if (*(void *)v30 != v27) {
          objc_enumerationMutation(v24);
        }
        -[CSDMessagingCallProvider addEmergencyHandles:]( self,  "addEmergencyHandles:",  *(void *)(*((void *)&v29 + 1) + 8LL * (void)n),  (void)v29);
      }

      double v26 = [v24 countByEnumeratingWithState:&v29 objects:v45 count:16];
    }

    while (v26);
  }

  if (*((void *)v4 + 4)) {
    -[CSDMessagingCallProvider setBundleIdentifier:](self, "setBundleIdentifier:");
  }
}
}

  unint64_t v40 = 0LL;
LABEL_15:
  id v39 = -[NSString hash](self->_callerNameFromNetwork, "hash");
  id v5 = self->_has;
  if ((*(_BYTE *)&v5 & 1) != 0)
  {
    protoTimeConnected = self->_protoTimeConnected;
    __int16 v8 = -protoTimeConnected;
    if (protoTimeConnected >= 0.0) {
      __int16 v8 = self->_protoTimeConnected;
    }
    uint64_t v9 = floor(v8 + 0.5);
    id v10 = (v8 - v9) * 1.84467441e19;
    int v6 = 2654435761u * (unint64_t)fmod(v9, 1.84467441e19);
    if (v10 >= 0.0)
    {
      if (v10 > 0.0) {
        v6 += (unint64_t)v10;
      }
    }

    else
    {
      v6 -= (unint64_t)fabs(v10);
    }
  }

  else
  {
    int v6 = 0LL;
  }

  if ((*(_WORD *)&v5 & 0x1000) != 0)
  {
    __int128 v37 = 2654435761LL * self->_protoOutgoing;
    if ((*(_WORD *)&v5 & 0x4000) != 0)
    {
LABEL_25:
      __int128 v36 = 2654435761LL * self->_protoShouldSuppressRingtone;
      if ((*(_WORD *)&v5 & 0x800) != 0) {
        goto LABEL_26;
      }
      goto LABEL_31;
    }
  }

  else
  {
    __int128 v37 = 0LL;
    if ((*(_WORD *)&v5 & 0x4000) != 0) {
      goto LABEL_25;
    }
  }

  __int128 v36 = 0LL;
  if ((*(_WORD *)&v5 & 0x800) != 0)
  {
LABEL_26:
    id v35 = 2654435761LL * self->_protoNeedsManualInCallSounds;
    if ((*(_BYTE *)&v5 & 0x10) != 0) {
      goto LABEL_27;
    }
LABEL_32:
    uint64_t v34 = 0LL;
    if ((*(_WORD *)&v5 & 0x100) != 0) {
      goto LABEL_28;
    }
    goto LABEL_33;
  }

  return v7;
}

  return (CSDAVConference *)v5;
}

  char v22 = v9;
LABEL_17:
  id v24 = v22;

  return v24;
}

  uUIDuint64_t String = self->_uUIDString;
  if (uUIDString) {
    [v3 setObject:uUIDString forKey:@"UUIDString"];
  }
  groupUUIDuint64_t String = self->_groupUUIDString;
  if (groupUUIDString) {
    [v3 setObject:groupUUIDString forKey:@"groupUUIDString"];
  }
  messagesGroupUUIDuint64_t String = self->_messagesGroupUUIDString;
  if (messagesGroupUUIDString) {
    [v3 setObject:messagesGroupUUIDString forKey:@"messagesGroupUUIDString"];
  }
  if ((*(_BYTE *)&self->_has & 0x10) != 0)
  {
    id v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", self->_locallyCreated));
    [v3 setObject:v13 forKey:@"locallyCreated"];
  }

  initiator = self->_initiator;
  if (initiator)
  {
    id v15 = (void *)objc_claimAutoreleasedReturnValue(-[CSDMessagingHandle dictionaryRepresentation](initiator, "dictionaryRepresentation"));
    [v3 setObject:v15 forKey:@"initiator"];
  }

  localMember = self->_localMember;
  if (localMember)
  {
    uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(-[CSDMessagingConversationMember dictionaryRepresentation](localMember, "dictionaryRepresentation"));
    [v3 setObject:v17 forKey:@"localMember"];
  }

  if (-[NSMutableArray count](self->_remoteMembers, "count"))
  {
    id v18 = -[NSMutableArray initWithCapacity:]( objc_alloc(&OBJC_CLASS___NSMutableArray),  "initWithCapacity:",  -[NSMutableArray count](self->_remoteMembers, "count"));
    id v41 = 0u;
    uint64_t v42 = 0u;
    uint64_t v43 = 0u;
    uint64_t v44 = 0u;
    char v19 = self->_remoteMembers;
    unsigned int v20 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v19,  "countByEnumeratingWithState:objects:count:",  &v41,  v46,  16LL);
    if (v20)
    {
      id v21 = v20;
      char v22 = *(void *)v42;
      do
      {
        for (i = 0LL; i != v21; i = (char *)i + 1)
        {
          if (*(void *)v42 != v22) {
            objc_enumerationMutation(v19);
          }
          id v24 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v41 + 1) + 8 * (void)i) dictionaryRepresentation]);
          -[NSMutableArray addObject:](v18, "addObject:", v24);
        }

        id v21 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v19,  "countByEnumeratingWithState:objects:count:",  &v41,  v46,  16LL);
      }

      while (v21);
    }

    [v3 setObject:v18 forKey:@"remoteMembers"];
  }

  if (-[NSMutableArray count](self->_activeParticipants, "count"))
  {
    double v25 = -[NSMutableArray initWithCapacity:]( objc_alloc(&OBJC_CLASS___NSMutableArray),  "initWithCapacity:",  -[NSMutableArray count](self->_activeParticipants, "count"));
    __int128 v37 = 0u;
    id v38 = 0u;
    id v39 = 0u;
    unint64_t v40 = 0u;
    double v26 = self->_activeParticipants;
    double v27 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v26,  "countByEnumeratingWithState:objects:count:",  &v37,  v45,  16LL);
    if (v27)
    {
      uint64_t v28 = v27;
      double v29 = *(void *)v38;
      do
      {
        for (j = 0LL; j != v28; j = (char *)j + 1)
        {
          if (*(void *)v38 != v29) {
            objc_enumerationMutation(v26);
          }
          char v31 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v37 + 1) + 8 * (void)j) dictionaryRepresentation]);
          -[NSMutableArray addObject:](v25, "addObject:", v31);
        }

        uint64_t v28 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v26,  "countByEnumeratingWithState:objects:count:",  &v37,  v45,  16LL);
      }

      while (v28);
    }

    [v3 setObject:v25 forKey:@"activeParticipants"];
  }

  if ((*(_BYTE *)&self->_has & 1) != 0)
  {
    avMode = self->_avMode;
    if (avMode >= 3) {
      id v33 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)",  self->_avMode));
    }
    else {
      id v33 = off_1003D9578[avMode];
    }
    [v3 setObject:v33 forKey:@"avMode"];
  }

  reportuint64_t Data = self->_reportData;
  if (reportData)
  {
    id v35 = (void *)objc_claimAutoreleasedReturnValue(-[CSDMessagingConversationReport dictionaryRepresentation](reportData, "dictionaryRepresentation"));
    [v3 setObject:v35 forKey:@"reportData"];
  }

  return v3;
}

LABEL_15:
    char v22 = sub_1001704C4();
    id v23 = (os_log_s *)objc_claimAutoreleasedReturnValue(v22);
    if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
    {
      id v24 = TULoggableStringForHandle(v5);
      double v25 = (void *)objc_claimAutoreleasedReturnValue(v24);
      *(_DWORD *)buf = 138412546;
      uint64_t v34 = v25;
      id v35 = 2112;
      __int128 v36 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEFAULT,  "[WARN] Couldn't find participant destination identifier %@ in members %@",  buf,  0x16u);
    }

    double v26 = 0LL;
    goto LABEL_19;
  }

  char v31 = 0u;
  uint64_t v32 = 0u;
  double v29 = 0u;
  id v30 = 0u;
  uint64_t v9 = (os_log_s *)v6;
  id v10 = -[os_log_s countByEnumeratingWithState:objects:count:]( v9,  "countByEnumeratingWithState:objects:count:",  &v29,  v37,  16LL);
  if (!v10) {
    goto LABEL_14;
  }
  id v11 = v10;
  uint64_t v28 = v6;
  id v12 = *(void *)v30;
LABEL_4:
  id v13 = 0LL;
  while (1)
  {
    if (*(void *)v30 != v12) {
      objc_enumerationMutation(v9);
    }
    id v14 = *(void **)(*((void *)&v29 + 1) + 8 * v13);
    id v15 = (void *)objc_claimAutoreleasedReturnValue([v14 handle]);
    id v16 = (void *)objc_claimAutoreleasedReturnValue([v15 normalizedValue]);

    if (v16)
    {
      uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v8 normalizedValue]);
      id v18 = [v17 isEqualToString:v16];

      if ((v18 & 1) != 0) {
        break;
      }
    }

    if (v11 == (id)++v13)
    {
      id v11 = -[os_log_s countByEnumeratingWithState:objects:count:]( v9,  "countByEnumeratingWithState:objects:count:",  &v29,  v37,  16LL);
      if (v11) {
        goto LABEL_4;
      }
      int v6 = v28;
      goto LABEL_14;
    }
  }

  double v26 = v14;

  int v6 = v28;
  if (!v26) {
    goto LABEL_15;
  }
LABEL_19:

  return v26;
}

    id v24 = 0LL;
    goto LABEL_20;
  }

  id v15 = (void *)objc_claimAutoreleasedReturnValue([v6 activity]);
  [v15 setTrustedFromHandle:0];

  id v14 = (os_log_s *)objc_claimAutoreleasedReturnValue([v12 createActivitySession:v6]);
  if (v14)
  {
    -[CSDConversationManager cancelPreviouslySentScreenShareRequests:]( self,  "cancelPreviouslySentScreenShareRequests:",  v12);
    id v16 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s tuConversationActivitySession](v14, "tuConversationActivitySession"));
    uint64_t v17 = objc_claimAutoreleasedReturnValue([v12 localParticipant]);
    -[CSDConversationManager postSessionStartedForSession:originator:conversation:]( self,  "postSessionStartedForSession:originator:conversation:",  v16,  v17,  v12);

    id v18 = (void *)objc_claimAutoreleasedReturnValue([v6 activity]);
    LOBYTE(v17) = [v18 isStaticActivity];

    if ((v17 & 1) != 0)
    {
      char v19 = sub_1001704C4();
      unsigned int v20 = (os_log_s *)objc_claimAutoreleasedReturnValue(v19);
      if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(v30) = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEFAULT,  "Not broadcasting activity session creation for static activity",  (uint8_t *)&v30,  2u);
      }
    }

    else
    {
      double v27 = objc_alloc(&OBJC_CLASS___CSDMessagingConversationMessage);
      uint64_t v28 = (void *)objc_claimAutoreleasedReturnValue([v12 groupUUID]);
      unsigned int v20 = -[CSDMessagingConversationMessage initWithType:groupUUID:link:]( v27,  "initWithType:groupUUID:link:",  8LL,  v28,  0LL);

      -[CSDConversationManager sendMessage:forConversation:withActivitySession:]( self,  "sendMessage:forConversation:withActivitySession:",  v20,  v12,  v14);
      -[CSDConversationManager broadcastImageForSession:onConversation:]( self,  "broadcastImageForSession:onConversation:",  v6,  v12);
    }

    id v14 = v14;
    id v24 = v14;
  }

  else
  {
    double v25 = sub_1001704C4();
    double v26 = (os_log_s *)objc_claimAutoreleasedReturnValue(v25);
    if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
      sub_1002B5FD8();
    }

    id v24 = 0LL;
  }

    if (![v9 count]) {
      goto LABEL_19;
    }
    id v23 = sub_1001704C4();
    id v24 = (os_log_s *)objc_claimAutoreleasedReturnValue(v23);
    if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
    {
      double v25 = (void *)objc_claimAutoreleasedReturnValue([v5 processName]);
      double v26 = 138412546;
      double v27 = v25;
      uint64_t v28 = 2112;
      double v29 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEFAULT,  "Updating client %@ with calls: %@",  (uint8_t *)&v26,  0x16u);
    }

    unsigned int v20 = v6;
    id v21 = v9;
    char v22 = 0LL;
LABEL_18:
    [v20 handleCurrentCallsChanged:v21 callDisconnected:v22];
    goto LABEL_19;
  }

  __int16 v8 = sub_1001704C4();
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
  if (os_log_type_enabled((os_log_t)v9, OS_LOG_TYPE_DEFAULT))
  {
    id v10 = (void *)objc_claimAutoreleasedReturnValue([v5 processName]);
    double v26 = 138412290;
    double v27 = v10;
    _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v9,  OS_LOG_TYPE_DEFAULT,  "Ignoring call update for client %@ because it's suspended",  (uint8_t *)&v26,  0xCu);
LABEL_19:
  }
}

  if (-[NSString length](self->_callerID, "length"))
  {
    -[CSDFaceTimeIMAccount _saveLastKnownFaceTimeCallerID](self, "_saveLastKnownFaceTimeCallerID");
    -[CSDFaceTimeIMAccount removeCallerIDFromPreferences](self, "removeCallerIDFromPreferences");
  }
}

  id v5 = 0LL;
  if ((has & 0x10) != 0)
  {
LABEL_5:
    int v6 = 2654435761LL * self->_holdAllowed;
    if ((has & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
      }

      __int16 v8 = [v5 countByEnumeratingWithState:&v17 objects:v23 count:16];
    }

    while (v8);
  }
}

  id v15 = sub_1001704C4();
  id v16 = (os_log_s *)objc_claimAutoreleasedReturnValue(v15);
  if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
  {
    v22[0] = 67109120;
    v22[1] = [v6 filteredOutReason];
    _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "Updated filtered out reason to %d",  (uint8_t *)v22,  8u);
  }

LABEL_17:
}

    goto LABEL_15;
  }

  unsigned int v20 = sub_1001704C4();
  id v21 = (os_log_s *)objc_claimAutoreleasedReturnValue(v20);
  if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
  {
    char v22 = (void *)objc_claimAutoreleasedReturnValue(-[CSDCallDataSource calls](self, "calls"));
    id v23 = (void *)objc_claimAutoreleasedReturnValue(-[CSDProviderCallDataSource _identifiersForCalls:](self, "_identifiersForCalls:", v22));
    double v25 = 138412802;
    double v26 = v8;
    double v27 = 2112;
    uint64_t v28 = v9;
    double v29 = 2112;
    id v30 = v23;
    _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEFAULT,  "[WARN] No call found for call source %@ and UUID %@. All calls: %@",  (uint8_t *)&v25,  0x20u);
  }

LABEL_15:
}

    goto LABEL_15;
  }

  unsigned int v20 = sub_1001704C4();
  id v21 = (os_log_s *)objc_claimAutoreleasedReturnValue(v20);
  if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
  {
    char v22 = (void *)objc_claimAutoreleasedReturnValue(-[CSDCallDataSource calls](self, "calls"));
    id v23 = (void *)objc_claimAutoreleasedReturnValue(-[CSDProviderCallDataSource _identifiersForCalls:](self, "_identifiersForCalls:", v22));
    double v25 = 138412802;
    double v26 = v8;
    double v27 = 2112;
    uint64_t v28 = v9;
    double v29 = 2112;
    id v30 = v23;
    _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEFAULT,  "[WARN] No call found for call source %@ and UUID %@. All calls: %@",  (uint8_t *)&v25,  0x20u);
  }

LABEL_15:
}

    id v5 = (v11 - 1) & v11;
    uint64_t v9 = __clz(__rbit64(v11)) + (v10 << 6);
    id v4 = v10;
LABEL_15:
    id v13 = (uint64_t *)(*(void *)(v35 + 48) + 16 * v9);
    id v15 = *v13;
    id v14 = v13[1];
    swift_beginAccess(v6, v36, 32LL, 0LL);
    id v16 = *(void *)v6;
    uint64_t v17 = *(void *)(*(void *)v6 + 16LL);
    swift_bridgeObjectRetain_n(v14, 2LL);
    if (v17 && (id v18 = sub_1001D7094(v15, v14), (v19 & 1) != 0))
    {
      unsigned int v20 = *(void **)(*(void *)(v16 + 56) + 8 * v18);
      swift_bridgeObjectRetain(v20);
    }

    else
    {
      unsigned int v20 = 0LL;
    }

    swift_endAccess(v36);
    swift_bridgeObjectRelease(v14);
    id v21 = (void *)sub_1001E610C(v15, v14);
    if (v20 && (sub_100252FE4(v20, v21), (v22 & 1) != 0))
    {
      swift_bridgeObjectRelease(v14);
      swift_bridgeObjectRelease(v21);
      uint64_t result = swift_bridgeObjectRelease(v20);
    }

    else
    {
      swift_beginAccess(v6, v36, 33LL, 0LL);
      swift_bridgeObjectRetain(v14);
      id v23 = swift_bridgeObjectRetain(v21);
      sub_1001FE4D4(v23, v15, v14, v24, v25, v26, v27, v28, v32, v33);
      swift_endAccess(v36);
      double v29 = swift_bridgeObjectRelease(v14);
      __chkstk_darwin(v29);
      id v30 = v38;
      sub_1001E4C50((uint64_t)v21, (uint64_t (*)(void, void))sub_1001E8EEC);
      id v38 = v30;
      swift_bridgeObjectRelease(v14);
      swift_bridgeObjectRelease(v21);
      uint64_t result = swift_bridgeObjectRelease(v20);
    }
  }

  __break(1u);
  return result;
}

        sub_1001E9128();
      }

      while (1)
      {
        char v19 = v18 + 1;
        if (__OFADD__(v18, 1LL)) {
          break;
        }
        if (v19 >= v7) {
          goto LABEL_28;
        }
        ++v18;
        if (*(void *)(v10 + 8 * v19)) {
          goto LABEL_14;
        }
      }
    }

    __break(1u);
  }

  else
  {
LABEL_28:
    sub_1001E9184();
    sub_1001E90C0();
  }

    sub_1001E919C();
    id v18 = v23;
  }

  id v18 = v22 + 3;
  if (v22 + 3 >= v31)
  {
    id v4 = 0LL;
    id v18 = v22 + 2;
    goto LABEL_32;
  }

  if (*(void *)(v16 + 8 * v18)) {
    goto LABEL_14;
  }
  double v25 = v22 + 4;
  if (v22 + 4 >= v31)
  {
LABEL_28:
    id v4 = 0LL;
LABEL_32:
    uint64_t v17 = v29;
    a1 = v30;
    goto LABEL_33;
  }

  if (*(void *)(v16 + 8 * v25)) {
    goto LABEL_14;
  }
  while (1)
  {
    double v26 = v25 + 1;
    if (__OFADD__(v25, 1LL)) {
      break;
    }
    if (v26 >= v31)
    {
      id v4 = 0LL;
      id v18 = v28;
      goto LABEL_32;
    }

    ++v25;
    if (*(void *)(v16 + 8 * v26)) {
      goto LABEL_14;
    }
  }

        sub_1001E9128();
      }

      while (1)
      {
        id v18 = v17 + 1;
        if (__OFADD__(v17, 1LL)) {
          break;
        }
        if (v18 >= v7) {
          goto LABEL_28;
        }
        ++v17;
        if (*(void *)(v10 + 8 * v18)) {
          goto LABEL_14;
        }
      }
    }

    __break(1u);
  }

  else
  {
LABEL_28:
    sub_1001E9184();
    sub_1001E90C0();
  }

    __int16 v8 = (v14 - 1) & v14;
    id v12 = __clz(__rbit64(v14)) + (v13 << 6);
    uint64_t v7 = v13;
LABEL_15:
    id v16 = (void *)(*(void *)(v6 + 56) + 16 * v12);
    uint64_t v17 = v16[1];
    v22[0] = *v16;
    v22[1] = v17;
    swift_bridgeObjectRetain(v17);
    id v18 = a1(v22);
    if (v3)
    {
      swift_release(v6);
      swift_bridgeObjectRelease(v17);
      return v21 & 1;
    }

    char v19 = v18;
    uint64_t result = swift_bridgeObjectRelease(v17);
    if ((v19 & 1) != 0)
    {
      swift_release(v6);
      id v21 = 1;
      return v21 & 1;
    }
  }

  __break(1u);
  return result;
}

  double v25 = *v7;
  *(void *)(*v7 + 8 * (v9 >> 6) + 56) |= 1LL << v9;
  *(void *)(*(void *)(v25 + 48) + 8 * v9) = v11;
  double v26 = *(void *)(v25 + 16);
  double v27 = __OFADD__(v26, 1LL);
  uint64_t v28 = v26 + 1;
  if (v27)
  {
    __break(1u);
  }

  else
  {
    *(void *)(v25 + 16) = v28;
    sub_1001B0FF8();
  }

  id v13 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1LL << a2;
  *(_DWORD *)(*(void *)(v13 + 48) + 4 * a2) = v5;
  id v14 = *(void *)(v13 + 16);
  id v15 = __OFADD__(v14, 1LL);
  id v16 = v14 + 1;
  if (v15) {
    __break(1u);
  }
  else {
    *(void *)(v13 + 16) = v16;
  }
  return result;
}

  id v14 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1LL << a2;
  *(void *)(*(void *)(v14 + 48) + 8 * a2) = a1;
  id v15 = *(void *)(v14 + 16);
  id v16 = __OFADD__(v15, 1LL);
  uint64_t v17 = v15 + 1;
  if (v16) {
    __break(1u);
  }
  else {
    *(void *)(v14 + 16) = v17;
  }
}

  id v14 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1LL << a2;
  *(void *)(*(void *)(v14 + 48) + 8 * a2) = v5;
  id v15 = *(void *)(v14 + 16);
  id v16 = __OFADD__(v15, 1LL);
  uint64_t v17 = v15 + 1;
  if (v16) {
    __break(1u);
  }
  else {
    *(void *)(v14 + 16) = v17;
  }
  return result;
}

    __break(1u);
LABEL_15:
    __break(1u);
    return;
  }

  swift_errorRelease(v2);
  sub_1001BB544(v3, 1LL);
LABEL_5:
  sub_1001BB478(v3, &qword_100447A30);
  if (qword_100446930 != -1) {
    swift_once(&qword_100446930, sub_100258A18);
  }
  double v27 = type metadata accessor for Logger(0LL);
  uint64_t v28 = sub_1001B0D98(v27, (uint64_t)qword_1004541B0);
  char v31 = (os_log_s *)Logger.logObject.getter(v28, v29, v30);
  id v33 = static os_log_type_t.error.getter(v31, v32);
  if (os_log_type_enabled(v31, v33))
  {
    uint64_t v34 = (uint8_t *)sub_1001BB5EC();
    *(_WORD *)uint64_t v34 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v31,  v33,  "Failed to derive public key from public key data, ignoring let me in",  v34,  2u);
    sub_1001B0E60((uint64_t)v34);
  }

  id v35 = sub_1001BB360();
  __int128 v36 = sub_1001BB4C8((uint64_t)&type metadata for ConversationLinkCryptoErrorType, v35);
  *__int128 v37 = 0;
  swift_willThrow(v36);
}

    uint64_t v9 = (v14 - 1) & v14;
    id v12 = __clz(__rbit64(v14)) + (v13 << 6);
    __int16 v8 = v13;
LABEL_15:
    id v16 = *(void *)(v57 + 56) + 24 * v12;
    id v18 = *(void **)v16;
    uint64_t v17 = *(void *)(v16 + 8);
    char v19 = *(_BYTE *)(v16 + 16);
    unsigned int v20 = *(unsigned __int8 *)(v16 + 17);
    if (a2 < 2) {
      goto LABEL_16;
    }
    if (*(void *)(a2 + 16))
    {
      id v35 = static Hasher._hash(seed:_:)(*(void *)(a2 + 40), v17);
      __int128 v36 = -1LL << *(_BYTE *)(a2 + 32);
      __int128 v37 = v35 & ~v36;
      if (((*(void *)(v10 + ((v37 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v37) & 1) != 0)
      {
        id v38 = *(void *)(a2 + 48);
        if (*(void *)(v38 + 8 * v37) == v17)
        {
LABEL_16:
          id v59 = v8;
          id v21 = objc_allocWithZone((Class)&OBJC_CLASS___CSDConversationParticipant);
          char v22 = v18;
          id v23 = sub_100264034(v17, v22, 0LL, 0xC000000000000000LL);
          [v23 setSpatialPersonaEnabled:v20];
          sub_1001D8EA0( 0LL,  (unint64_t *)&unk_10044AE10,  &OBJC_CLASS___TUConversationParticipantCapabilities_ptr);
          id v24 = sub_1002044DC(v19);
          [v23 setCapabilities:v24];

          [v23 setAudioVideoMode:2];
          double v25 = (uint64_t)v53;
          (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v53, v52, v55);
          double v26 = [v22 value];
          double v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
          double v29 = v28;

          id v30 = objc_allocWithZone(&OBJC_CLASS___IDSGroupSessionActiveParticipant);
          char v31 = sub_100263F2C(v25, v17, 1, v27, v29, 0LL, 0xF000000000000000LL);
          uint64_t v32 =  [(id)objc_opt_self(CSDMessagingConversationParticipant) participantWithCSDConversationParticipant:v23];
          sub_10028E3AC(v32);
          if (v34 >> 60 == 15)
          {
          }

          else
          {
            unint64_t v40 = v33;
            id v41 = v34;
            Strong = swift_unknownObjectWeakLoadStrong(v49);
            if (Strong)
            {
              uint64_t v43 = (void *)Strong;
              isa = Data._bridgeToObjectiveC()().super.isa;
              [v43 sessionProvider:v48 didReceiveDataBlob:isa forParticipant:v31];

              sub_1001BB464(v40, v41);
              a2 = v47;
              swift_unknownObjectRelease(v43);
            }

            else
            {

              sub_1001BB464(v40, v41);
            }
          }

          id v10 = v51;
          __int16 v8 = v59;
        }

        else
        {
          id v39 = ~v36;
          while (1)
          {
            __int128 v37 = (v37 + 1) & v39;
            if (((*(void *)(v10 + ((v37 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v37) & 1) == 0) {
              break;
            }
            if (*(void *)(v38 + 8 * v37) == v17) {
              goto LABEL_16;
            }
          }
        }
      }
    }
  }

  __break(1u);
}

    sub_1001B0FF8();
    return;
  }

  __break(1u);
}

void sub_10002E074(uint64_t a1, int a2)
{
  id v4 = sub_1001704C4();
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    int v6 = @"NO";
    uint64_t v7 = *(void *)(a1 + 32);
    if (a2) {
      int v6 = @"YES";
    }
    int v8 = 138412546;
    uint64_t v9 = v7;
    __int16 v10 = 2112;
    id v11 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "Session dismissal alert for activitySessionUUID %@ success: %@",  (uint8_t *)&v8,  0x16u);
  }
}

LABEL_16:
    unsigned int v20 = 0LL;
    goto LABEL_49;
  }

  uint64_t v9 = (os_log_s *)objc_claimAutoreleasedReturnValue([v4 activity]);
  id v11 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation serverBag](self, "serverBag"));
  id v12 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s activityIdentifier](v9, "activityIdentifier"));
  id v13 = (void *)objc_claimAutoreleasedReturnValue([v11 localBundleIDForActivityIdentifier:v12]);

  id v14 = sub_1001704C4();
  id v15 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
  if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
  {
    id v48 = 138412290;
    id v49 = v13;
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "BundleID override: %@", (uint8_t *)&v48, 0xCu);
  }

  if (v13) {
    -[os_log_s setBundleIdentifier:](v9, "setBundleIdentifier:", v13);
  }
  id v16 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s trustedFromHandle](v9, "trustedFromHandle"));
  if (v16)
  {
    uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s trustedFromHandle](v9, "trustedFromHandle"));
    id v18 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation memberWithHandle:](self, "memberWithHandle:", v17));
  }

  else
  {
    id v18 = 0LL;
  }

  id v21 = (void *)objc_claimAutoreleasedReturnValue([v18 association]);
  if (v18)
  {
    if ([v18 isLightweightMember]
      && [v18 isValidated]
      && (char v22 = (void *)objc_claimAutoreleasedReturnValue([v18 lightweightPrimary]),
          v22,
          v22))
    {
      id v23 = sub_1001704C4();
      id v24 = (os_log_s *)objc_claimAutoreleasedReturnValue(v23);
      if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
      {
        double v25 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s trustedFromHandle](v9, "trustedFromHandle"));
        double v26 = (void *)objc_claimAutoreleasedReturnValue([v18 lightweightPrimary]);
        id v48 = 138412802;
        id v49 = v25;
        unsigned int v50 = 2112;
        char v51 = v18;
        char v52 = 2112;
        id v53 = v26;
        _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEFAULT,  "Attempting to create Activity with trustedFromHandle: %@ on trusted lightweight member: %@. Overriding to ligh tweightPrimary. %@",  (uint8_t *)&v48,  0x20u);
      }

      double v27 = (void *)objc_claimAutoreleasedReturnValue([v18 lightweightPrimary]);
      uint64_t v28 = [v27 copy];
      -[os_log_s setTrustedFromHandle:](v9, "setTrustedFromHandle:", v28);
    }

    else
    {
      double v29 = (void *)objc_claimAutoreleasedReturnValue([v21 handle]);
      double v27 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation memberWithHandle:](self, "memberWithHandle:", v29));

      id v30 = sub_1001704C4();
      char v31 = (os_log_s *)objc_claimAutoreleasedReturnValue(v30);
      if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v32 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s trustedFromHandle](v9, "trustedFromHandle"));
        id v33 = (void *)objc_claimAutoreleasedReturnValue([v27 handle]);
        id v48 = 138412802;
        id v49 = v32;
        unsigned int v50 = 2112;
        char v51 = v27;
        char v52 = 2112;
        id v53 = v33;
        _os_log_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_DEFAULT,  "Attempting to create Activity with trustedFromHandle: %@ on trusted associated member: %@. Overriding to assoc iated member. %@",  (uint8_t *)&v48,  0x20u);
      }

      uint64_t v28 = (id)objc_claimAutoreleasedReturnValue([v27 handle]);
      uint64_t v34 = [v28 copy];
      -[os_log_s setTrustedFromHandle:](v9, "setTrustedFromHandle:", v34);
    }
  }
      }

      uint64_t v7 = [v4 countByEnumeratingWithState:&v23 objects:v29 count:16];
    }

    while (v7);
  }
}

  return v13;
}

        id v12 = 0LL;
      }

      else
      {
        if (v20)
        {
          *(_DWORD *)id v23 = 138412546;
          *(void *)&v23[4] = self;
          *(_WORD *)&v23[12] = 1024;
          *(_DWORD *)&v23[14] = 5;
LABEL_11:
          _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "Session %@ appears to have ended with a remote hangup reason: %d",  v23,  0x12u);
        }

  callerNameFromNetwork = self->_callerNameFromNetwork;
  if (callerNameFromNetwork) {
    [v4 setObject:callerNameFromNetwork forKey:@"callerNameFromNetwork"];
  }
  id v14 = self->_has;
  if ((*(_BYTE *)&v14 & 1) != 0)
  {
    id v48 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  self->_protoTimeConnected));
    [v4 setObject:v48 forKey:@"protoTimeConnected"];

    id v14 = self->_has;
    if ((*(_WORD *)&v14 & 0x1000) == 0)
    {
LABEL_20:
      if ((*(_WORD *)&v14 & 0x4000) == 0) {
        goto LABEL_21;
      }
      goto LABEL_72;
    }
  }

  else if ((*(_WORD *)&v14 & 0x1000) == 0)
  {
    goto LABEL_20;
  }

  id v49 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", self->_protoOutgoing));
  [v4 setObject:v49 forKey:@"protoOutgoing"];

  id v14 = self->_has;
  if ((*(_WORD *)&v14 & 0x4000) == 0)
  {
LABEL_21:
    if ((*(_WORD *)&v14 & 0x800) == 0) {
      goto LABEL_22;
    }
    goto LABEL_73;
  }

  if (self->_callerNameFromNetwork)
  {
    objc_msgSend(v16, "setCallerNameFromNetwork:");
    id v4 = v16;
  }

  uint64_t v7 = self->_has;
  if ((*(_BYTE *)&v7 & 1) != 0)
  {
    *((void *)v4 + 1) = *(void *)&self->_protoTimeConnected;
    *((_DWORD *)v4 + 38) |= 1u;
    uint64_t v7 = self->_has;
    if ((*(_WORD *)&v7 & 0x1000) == 0)
    {
LABEL_20:
      if ((*(_WORD *)&v7 & 0x4000) == 0) {
        goto LABEL_21;
      }
      goto LABEL_67;
    }
  }

  else if ((*(_WORD *)&v7 & 0x1000) == 0)
  {
    goto LABEL_20;
  }

  *((_BYTE *)v4 + 141) = self->_protoOutgoing;
  *((_DWORD *)v4 + 38) |= 0x1000u;
  uint64_t v7 = self->_has;
  if ((*(_WORD *)&v7 & 0x4000) == 0)
  {
LABEL_21:
    if ((*(_WORD *)&v7 & 0x800) == 0) {
      goto LABEL_22;
    }
    goto LABEL_68;
  }

  if (*((void *)v4 + 2)) {
    -[CSDMessagingCall setCallerNameFromNetwork:](self, "setCallerNameFromNetwork:");
  }
  uint64_t v7 = *((_DWORD *)v4 + 38);
  if ((v7 & 1) != 0)
  {
    self->_protoTimeConnected = *((double *)v4 + 1);
    *(_DWORD *)&self->_has |= 1u;
    uint64_t v7 = *((_DWORD *)v4 + 38);
    if ((v7 & 0x1000) == 0)
    {
LABEL_20:
      if ((v7 & 0x4000) == 0) {
        goto LABEL_21;
      }
      goto LABEL_35;
    }
  }

  else if ((v7 & 0x1000) == 0)
  {
    goto LABEL_20;
  }

  self->_protoOutgoing = *((_BYTE *)v4 + 141);
  *(_DWORD *)&self->_has |= 0x1000u;
  uint64_t v7 = *((_DWORD *)v4 + 38);
  if ((v7 & 0x4000) == 0)
  {
LABEL_21:
    if ((v7 & 0x800) == 0) {
      goto LABEL_22;
    }
    goto LABEL_36;
  }
}

      self = v33;
      id v11 = v34;
    }
  }

  if (!v16)
  {
    id v38 = 0u;
    id v39 = 0u;
    __int128 v36 = 0u;
    __int128 v37 = 0u;
    double v27 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversationManager mutableConversationsByUUID](self, "mutableConversationsByUUID"));
    uint64_t v28 = (void *)objc_claimAutoreleasedReturnValue([v27 allValues]);

    id v16 = [v28 countByEnumeratingWithState:&v36 objects:v44 count:16];
    if (v16)
    {
      double v29 = *(void *)v37;
      while (2)
      {
        for (j = 0LL; j != v16; j = (char *)j + 1)
        {
          if (*(void *)v37 != v29) {
            objc_enumerationMutation(v28);
          }
          char v31 = *(void **)(*((void *)&v36 + 1) + 8LL * (void)j);
          if ([v31 isRepresentedByRemoteMembers:v13 andLink:v14]
            && [v31 isVideo] == v35)
          {
            id v16 = v31;
            goto LABEL_30;
          }
        }

        id v16 = [v28 countByEnumeratingWithState:&v36 objects:v44 count:16];
        if (v16) {
          continue;
        }
        break;
      }
    }

    goto LABEL_17;
  }

  if (*(void *)(a1 + 56))
  {
    id v12 = sub_1001704C4();
    obj = (id)objc_claimAutoreleasedReturnValue(v12);
    if (os_log_type_enabled((os_log_t)obj, OS_LOG_TYPE_ERROR)) {
      sub_1002B5058();
    }
    goto LABEL_16;
  }
}

    id v16 = 1;
LABEL_17:

    goto LABEL_18;
  }

  id v16 = 1;
LABEL_18:

  return v16;
}
}

  __int16 v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", self->_holdAllowed));
  [v3 setObject:v10 forKey:@"holdAllowed"];

  has = (__int16)self->_has;
  if ((has & 2) == 0)
  {
LABEL_6:
    if ((has & 0x200) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }

  PBDataWriterWriteBOOLField(v5, self->_holdAllowed, 4LL);
  has = (__int16)self->_has;
  if ((has & 2) == 0)
  {
LABEL_6:
    if ((has & 0x200) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }

  *((_BYTE *)v4 + 15) = self->_holdAllowed;
  *((_WORD *)v4 + 12) |= 0x10u;
  has = (__int16)self->_has;
  if ((has & 2) == 0)
  {
LABEL_6:
    if ((has & 0x200) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }

  *((_BYTE *)result + 15) = self->_holdAllowed;
  *((_WORD *)result + 12) |= 0x10u;
  has = (__int16)self->_has;
  if ((has & 2) == 0)
  {
LABEL_6:
    if ((has & 0x200) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }

  uint64_t v7 = 0LL;
  if ((*(_WORD *)&self->_has & 0x200) != 0)
  {
LABEL_7:
    int v8 = 2654435761LL * self->_takingCallsPrivateAllowed;
    if ((has & 8) != 0) {
      goto LABEL_8;
    }
    goto LABEL_18;
  }

  self->_holdAllowed = *((_BYTE *)v4 + 15);
  *(_WORD *)&self->_has |= 0x10u;
  id v5 = *((_WORD *)v4 + 12);
  if ((v5 & 2) == 0)
  {
LABEL_6:
    if ((v5 & 0x200) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }

    uint64_t v7 = (v10 - 1) & v10;
  }

  uint64_t v32 = 0;
  id v33 = (unint64_t)(63 - v28) >> 6;
  while (++v30 != v33 || (v32 & 1) == 0)
  {
    uint64_t v34 = v30 == v33;
    if (v30 == v33) {
      id v30 = 0LL;
    }
    v32 |= v34;
    id v35 = *(void *)&v27[8 * v30];
    if (v35 != -1)
    {
      char v31 = __clz(__rbit64(~v35)) + (v30 << 6);
      goto LABEL_31;
    }
  }

  __break(1u);
LABEL_44:
  __break(1u);
  return result;
}

    __break(1u);
LABEL_17:
    __break(1u);
  }

  __break(1u);
  return result;
}

  char v52 = (void *)Logger.logObject.getter(v26, v27, v28);
  id v53 = static os_log_type_t.error.getter();
  if (os_log_type_enabled((os_log_t)v52, v53))
  {
    id v54 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)id v54 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v52,  v53,  "Did not find expected pending chat information",  v54,  2u);
    swift_slowDealloc(v54, -1LL, -1LL);
  }

  sub_1001B2428();
  id v12 = _swiftEmptyArrayStorage[2];
  if (v12)
  {
    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    id v13 = 0LL;
    do
    {
      id v14 = _swiftEmptyArrayStorage[v13++ + 4];
      swift_bridgeObjectRetain(v14);
      sub_1001FBB5C();
      sub_10028FFD4(v14, v15, v16, v17, v18, v19, v20, v21, v29);
      sub_1001B2428();
    }

    while (v12 != v13);
    sub_1001B0EB8();
  }

  char v22 = sub_1001B0EB8();
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    else {
      double v27 = (void *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL);
    }
    uint64_t v28 = sub_1001B4C00(v22, (unint64_t *)&qword_10044AB70, &OBJC_CLASS___TUCall_ptr);
    sub_1001FBB5C();
    double v25 = (void *)_bridgeCocoaArray<A>(_:)(v27, v28);
    sub_1001B2428();
  }

  else
  {
    id v23 = sub_1001FBB5C();
    id v24 = dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v23);
    sub_1001B4C00(v24, (unint64_t *)&qword_10044AB70, &OBJC_CLASS___TUCall_ptr);
    double v25 = _swiftEmptyArrayStorage;
  }

  double v26 = sub_1001B2428();
  sub_1001B4C00(v26, &qword_100448E50, &OBJC_CLASS___TUCallContainer_ptr);
  sub_1001FB48C((uint64_t)v25);
}

  __int128 v37 = v71;
  id v38 = *(int *)(v71 + 20);
  id v39 = (uint64_t)&v23[v38];
  unint64_t v40 = (uint64_t)&v11[*(int *)(v8 + 48)];
  sub_10021300C((uint64_t)&v26[v38], (uint64_t)v11);
  sub_10021300C(v39, v40);
  id v41 = v70;
  if (sub_1001AB0AC((uint64_t)v11, 1LL, v70) == 1)
  {
    sub_100274AE8();
    sub_100274B10();
    uint64_t v42 = sub_1001AB0AC(v40, 1LL, v41);
    uint64_t v43 = v72;
    if ((_DWORD)v42 == 1)
    {
      sub_1002523B0(v42, (uint64_t *)&unk_100447DE0);
      uint64_t v44 = v73;
      sub_100274B28((uint64_t)v31);
      sub_100274B6C(v32);
      uint64_t v45 = v74;
      __int128 v36 = (uint64_t)v75;
      goto LABEL_28;
    }

    goto LABEL_21;
  }

  uint64_t v46 = v68;
  sub_10021300C((uint64_t)v11, v68);
  if (sub_1001AB0AC(v40, 1LL, v41) == 1)
  {
    sub_100274AE8();
    sub_100274B10();
    uint64_t v42 = (*(uint64_t (**)(uint64_t, uint64_t))(v69 + 8))(v46, v41);
LABEL_21:
    sub_1002523B0(v42, &qword_10044B2D8);
    __int128 v36 = (uint64_t)v75;
    goto LABEL_22;
  }

  id v49 = v69;
  unsigned int v50 = v67;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v69 + 32))(v67, v40, v41);
  char v51 = sub_100274A00();
  char v52 = dispatch thunk of static Equatable.== infix(_:_:)(v46, v50, v41, v51);
  id v53 = *(void (**)(uint64_t, uint64_t))(v49 + 8);
  id v54 = v50;
  __int128 v37 = v71;
  v53(v54, v41);
  sub_100274AE8();
  sub_100274B10();
  id v55 = ((uint64_t (*)(uint64_t, uint64_t))v53)(v46, v41);
  sub_1002523B0(v55, (uint64_t *)&unk_100447DE0);
  uint64_t v44 = v73;
  sub_100274B28((uint64_t)v31);
  uint64_t v43 = v72;
  sub_100274B6C(v32);
  uint64_t v45 = v74;
  __int128 v36 = (uint64_t)v75;
  if ((v52 & 1) == 0) {
    goto LABEL_23;
  }
LABEL_28:
  id v56 = *(int *)(v37 + 24);
  id v57 = &v44[v56];
  unint64_t v58 = *(void *)&v44[v56 + 8];
  id v59 = &v43[v56];
  __int16 v60 = *((void *)v59 + 1);
  if (!v58)
  {
    swift_bridgeObjectRetain(*((void *)v59 + 1));
    sub_100274B44();
    sub_100274AE8();
    if (!v60)
    {
LABEL_41:
      sub_100274B30((uint64_t)v31);
      sub_100274B38();
LABEL_42:
      char v64 = v45[*(int *)(v37 + 28)];
      sub_100274B10();
      char v65 = *(_BYTE *)(v36 + *(int *)(v37 + 28));
      sub_1002749C4(v36);
      uint64_t v47 = v64 ^ v65 ^ 1;
      return v47 & 1;
    }

    unint64_t v63 = v60;
    goto LABEL_39;
  }

  if (!v60)
  {
    sub_1001EE280();
    sub_100274B44();
    sub_100274AE8();
    unint64_t v63 = v58;
LABEL_39:
    swift_bridgeObjectRelease(v63);
    goto LABEL_24;
  }

  if (*(void *)v57 == *(void *)v59 && v58 == v60)
  {
    sub_1001EE280();
    sub_100274B44();
    sub_100274AE8();
    sub_1001B0EB8();
    goto LABEL_41;
  }

  uint64_t v62 = _stringCompareWithSmolCheck(_:_:expecting:)(*(void *)v57, v58, *(void *)v59, *((void *)v59 + 1), 0LL);
  sub_1001EE280();
  sub_100274B44();
  sub_100274AE8();
  sub_1001B0EB8();
  sub_100274B30((uint64_t)v31);
  sub_100274B38();
  if ((v62 & 1) != 0) {
    goto LABEL_42;
  }
LABEL_25:
  sub_1002749C4(v36);
  sub_100274B10();
  uint64_t v47 = 0;
  return v47 & 1;
}

    sub_1001B2428();
    return 0LL;
  }

  if (v5 < 0) {
    int v6 = *v1;
  }
  else {
    int v6 = v5 & 0xFFFFFFFFFFFFFF8LL;
  }
  sub_1001FBB5C();
  uint64_t v7 = a1;
  int v8 = __CocoaSet.contains(_:)();

  if ((v8 & 1) == 0) {
    goto LABEL_16;
  }
  uint64_t v9 = sub_10028DB44(v6, v7);
  __int16 v10 = v5;
LABEL_15:
  swift_bridgeObjectRelease(v10);
  return v9;
}

void sub_10002F924(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  if ((a2 & 1) != 0)
  {
    int v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) queue]);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_10002F9F4;
    block[3] = &unk_1003D7730;
    __int16 v10 = (os_log_s *)*(id *)(a1 + 32);
    dispatch_async(v6, block);

    uint64_t v7 = v10;
  }

  else
  {
    id v8 = sub_1001704C4();
    uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_1002B218C();
    }
  }
}

id sub_10002F9F4(uint64_t a1)
{
  return [*(id *)(a1 + 32) permitJoin];
}

void sub_10002F9FC(id *a1, void *a2)
{
  id v3 = a2;
  id v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([a1[4] queue]);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_10002FACC;
  block[3] = &unk_1003D7D28;
  id v9 = v3;
  id v5 = a1[5];
  id v6 = a1[4];
  id v10 = v5;
  id v11 = v6;
  BOOL v13 = v3 != 0LL;
  id v12 = a1[6];
  id v7 = v3;
  dispatch_async(v4, block);
}

void sub_10002FACC(uint64_t a1)
{
  if (*(void *)(a1 + 32)) {
    [*(id *)(a1 + 40) updateApplicationState:1];
  }
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) delegate]);
  [v2 conversation:*(void *)(a1 + 48) appLaunchState:*(void *)(a1 + 64) forActivitySession:*(void *)(a1 + 56)];
}

void sub_10002FB24(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = sub_1001704C4();
  id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v7 = *(void *)(a1 + 32);
    int v8 = 138412546;
    uint64_t v9 = v7;
    __int16 v10 = 2112;
    id v11 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Launched pip for activity %@ error %@",  (uint8_t *)&v8,  0x16u);
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
}

LABEL_85:
    unsigned int v71 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation featureFlags](self, "featureFlags"));
    uint64_t v72 = [v71 conversationOneToOneModeEnabled];

    if (v72) {
      -[CSDConversation updateLocalAspectRatios](self, "updateLocalAspectRatios");
    }
    if (-[CSDConversation avMode](self, "avMode")) {
      -[CSDConversation setVideoEnabled:](self, "setVideoEnabled:", [v4 isVideoEnabled]);
    }
    unint64_t v73 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation setupNewAVCSession:](self, "setupNewAVCSession:", v51));
    -[CSDConversation setAvcSession:](self, "setAvcSession:", v73);

    -[CSDConversation setAvcSessionInProgress:](self, "setAvcSessionInProgress:", 0LL);
    -[CSDConversation setExpectedAudioEnabled:](self, "setExpectedAudioEnabled:", 0LL);
    -[CSDConversation setExpectedVideoEnabled:](self, "setExpectedVideoEnabled:", 0LL);
    -[CSDConversation setExpectedVideoPaused:](self, "setExpectedVideoPaused:", 0LL);
    -[CSDConversation setExpectedScreenEnabled:](self, "setExpectedScreenEnabled:", 0LL);
    char v74 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation avcSession](self, "avcSession"));

    char v75 = sub_1001704C4();
    unsigned int v76 = (os_log_s *)objc_claimAutoreleasedReturnValue(v75);
    unint64_t v77 = v76;
    if (!v74)
    {
      if (os_log_type_enabled(v76, OS_LOG_TYPE_ERROR)) {
        sub_1002B22A8();
      }

      -[CSDConversation _reportConversationFailedWithProviderEndedReason:]( self,  "_reportConversationFailedWithProviderEndedReason:",  502LL);
      goto LABEL_106;
    }

    if (os_log_type_enabled(v76, OS_LOG_TYPE_DEFAULT))
    {
      char v78 = (CSDConversation *)objc_claimAutoreleasedReturnValue(-[CSDConversation avcSession](self, "avcSession"));
      *(_DWORD *)buf = 138412290;
      uint64_t v98 = v78;
      _os_log_impl((void *)&_mh_execute_header, v77, OS_LOG_TYPE_DEFAULT, "Created CSDAVCSession %@", buf, 0xCu);
    }

    if ([v4 wantsStagingArea])
    {
      -[CSDConversation setState:](self, "setState:", 1LL);
      char v79 = sub_1001704C4();
      unsigned int v80 = (os_log_s *)objc_claimAutoreleasedReturnValue(v79);
      if (os_log_type_enabled(v80, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v80,  OS_LOG_TYPE_DEFAULT,  "Not joining IDS group session because wantsStagingArea is true, instead moving to preparing state",  buf,  2u);
      }

      goto LABEL_105;
    }

    if (-[CSDConversation avMode](self, "avMode")) {
      goto LABEL_101;
    }
    goto LABEL_102;
  }

  if ((id)-[CSDConversation state](self, "state") == (id)1)
  {
    if (-[CSDConversation avMode](self, "avMode"))
    {
      uint64_t v43 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation featureFlags](self, "featureFlags"));
      if ([v43 conversationHandoffEnabled])
      {
        uint64_t v44 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation localParticipantAssociation](self, "localParticipantAssociation"));

        if (!v44)
        {
LABEL_59:
          -[CSDConversation setVideoEnabled:](self, "setVideoEnabled:", [v4 isVideoEnabled]);
LABEL_101:
          -[CSDConversation setVideoPaused:](self, "setVideoPaused:", [v4 isVideoPaused]);
          goto LABEL_102;
        }

        uint64_t v43 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation localParticipantAssociation](self, "localParticipantAssociation"));
        [v4 setParticipantAssociation:v43];
      }

      goto LABEL_59;
    }

LABEL_102:
    -[CSDConversation setState:](self, "setState:", 2LL);
    -[CSDConversation _startIDSSessionWithContext:](self, "_startIDSSessionWithContext:", v4);
    uint64_t v81 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation featureFlags](self, "featureFlags"));
    unint64_t v82 = [v81 avLessSharePlayEnabled];

    if (v82) {
      -[CSDConversation setAvMode:](self, "setAvMode:", [v4 avMode]);
    }
    unsigned int v80 = (os_log_s *)objc_claimAutoreleasedReturnValue([v4 participantAssociation]);
    -[CSDConversation continueHandoffAudioRouteForIdentifier:participantLeft:]( self,  "continueHandoffAudioRouteForIdentifier:participantLeft:",  -[os_log_s identifier](v80, "identifier"),  0LL);
LABEL_105:

LABEL_106:
    [v9 conversationChanged:self];
    goto LABEL_107;
  }

  unint64_t v68 = sub_1001704C4();
  char v69 = (os_log_s *)objc_claimAutoreleasedReturnValue(v68);
  if (os_log_type_enabled(v69, OS_LOG_TYPE_DEFAULT))
  {
    char v70 = (CSDConversation *)objc_claimAutoreleasedReturnValue(-[CSDConversation UUID](self, "UUID"));
    *(_DWORD *)buf = 138412290;
    uint64_t v98 = v70;
    _os_log_impl( (void *)&_mh_execute_header,  v69,  OS_LOG_TYPE_DEFAULT,  "[WARN] Not joining conversation because it isn't waiting or preparing: %@",  buf,  0xCu);
  }

LABEL_107:
}

  swift_bridgeObjectRelease(v10);
  if (v101 < -1) {
    goto LABEL_130;
  }
  *(void *)(v99 + 16) = 0LL;
  swift_bridgeObjectRelease(v99);
}

id sub_100031A64(uint64_t a1, void *a2)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a2 handle]);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) handle]);
  id v5 = [v3 isEquivalentToHandle:v4];

  return v5;
}

id sub_100031CB4(uint64_t a1, void *a2)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a2 handle]);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) handle]);
  id v5 = [v3 isEquivalentToHandle:v4];

  return v5;
}

LABEL_17:
  char v70 = v11;
  id v30 = sub_1001704C4();
  char v31 = (os_log_s *)objc_claimAutoreleasedReturnValue(v30);
  uint64_t v32 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation idsSession](self, "idsSession"));
  id v33 = os_signpost_id_make_with_pointer(v31, v32);

  uint64_t v34 = sub_1001704C4();
  id v35 = (os_log_s *)objc_claimAutoreleasedReturnValue(v34);
  __int128 v36 = v35;
  if (v33 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v35))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v36,  OS_SIGNPOST_INTERVAL_BEGIN,  v33,  "idsSessionJoin",  "",  buf,  2u);
  }

  __int128 v37 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation report](self, "report"));
  -[CSDConversation _emitRTCConnectionSetupEvent:participantIdentifier:]( self,  "_emitRTCConnectionSetupEvent:participantIdentifier:",  1,  objc_msgSend( v37,  "hashForParticipantIdentifier:",  -[CSDConversation localParticipantIdentifier](self, "localParticipantIdentifier")));

  unint64_t v82 = 0u;
  char v83 = 0u;
  unsigned int v80 = 0u;
  uint64_t v81 = 0u;
  id v38 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation activeRemoteParticipantsByIdentifier](self, "activeRemoteParticipantsByIdentifier"));
  id v39 = (void *)objc_claimAutoreleasedReturnValue([v38 allValues]);

  unint64_t v40 = [v39 countByEnumeratingWithState:&v80 objects:v85 count:16];
  if (v40)
  {
    id v41 = v40;
    uint64_t v42 = *(void *)v81;
    do
    {
      for (i = 0LL; i != v41; i = (char *)i + 1)
      {
        if (*(void *)v81 != v42) {
          objc_enumerationMutation(v39);
        }
        -[CSDConversation _emitRTCConnectionSetupEventForAddActiveParticipant:]( self,  "_emitRTCConnectionSetupEventForAddActiveParticipant:",  *(void *)(*((void *)&v80 + 1) + 8LL * (void)i));
      }

      id v41 = [v39 countByEnumeratingWithState:&v80 objects:v85 count:16];
    }

    while (v41);
  }

  uint64_t v44 = objc_claimAutoreleasedReturnValue(-[CSDConversation stagedActivitySession](self, "stagedActivitySession"));
  if (v44
    && (uint64_t v45 = (void *)v44,
        uint64_t v46 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation stagedActivitySession](self, "stagedActivitySession")),
        uint64_t v47 = [v46 isLocallyInitiated],
        v46,
        v45,
        v47))
  {
    id v48 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation stagedActivitySession](self, "stagedActivitySession"));
    uint64_t v72 = (void *)objc_claimAutoreleasedReturnValue( +[CSDMessagingConversationActivitySession activitySessionWithTUConversationActivitySession:fromConversation:forStorage:]( &OBJC_CLASS___CSDMessagingConversationActivitySession,  "activitySessionWithTUConversationActivitySession:fromConversation:forStorage:",  v48,  self,  0LL));
  }

  else
  {
    uint64_t v72 = 0LL;
  }

  char v78 = 0u;
  char v79 = 0u;
  unsigned int v76 = 0u;
  unint64_t v77 = 0u;
  obj = (id)objc_claimAutoreleasedReturnValue(-[CSDConversation activitySessions](self, "activitySessions"));
  id v49 = [obj countByEnumeratingWithState:&v76 objects:v84 count:16];
  if (v49)
  {
    unsigned int v50 = v49;
    char v51 = *(void *)v77;
    while (2)
    {
      for (j = 0LL; j != v50; j = (char *)j + 1)
      {
        if (*(void *)v77 != v51) {
          objc_enumerationMutation(obj);
        }
        id v53 = *(void **)(*((void *)&v76 + 1) + 8LL * (void)j);
        id v54 = (void *)objc_claimAutoreleasedReturnValue([v53 activity]);
        id v55 = (void *)objc_claimAutoreleasedReturnValue([v54 UUID]);
        id v56 = (void *)objc_claimAutoreleasedReturnValue([v75 activity]);
        id v57 = (void *)objc_claimAutoreleasedReturnValue([v56 UUID]);
        unint64_t v58 = [v55 isEqual:v57];

        if (v58)
        {
          id v59 = objc_claimAutoreleasedReturnValue( +[CSDMessagingConversationActivitySession activitySessionWithCSDConversationActivitySession:fromConversation:]( &OBJC_CLASS___CSDMessagingConversationActivitySession,  "activitySessionWithCSDConversationActivitySession:fromConversation:",  v53,  self));
          goto LABEL_41;
        }
      }

      unsigned int v50 = [obj countByEnumeratingWithState:&v76 objects:v84 count:16];
      if (v50) {
        continue;
      }
      break;
    }
  }

  id v59 = 0LL;
LABEL_41:
  char v69 = (void *)v59;

  obja = (id)objc_claimAutoreleasedReturnValue(-[CSDConversation idsSession](self, "idsSession"));
  __int16 v60 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation localParticipantData](self, "localParticipantData"));
  id v61 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation otherInvitedHandles](self, "otherInvitedHandles"));
  uint64_t v62 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation link](self, "link"));
  unint64_t v63 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation report](self, "report"));
  char v64 = (uint64_t (**)(void))objc_claimAutoreleasedReturnValue( -[CSDConversation personaHandshakeBlobCreationBlock]( self,  "personaHandshakeBlobCreationBlock"));
  char v65 = v64[2]();
  unsigned int v66 = (void *)objc_claimAutoreleasedReturnValue(v65);
  unint64_t v68 = v59;
  BOOL v13 = v71;
  id v4 = v75;
  [obja joinUsingContext:v75 localParticipantAVCData:v60 members:v71 otherInvitedHandles:v61 participantDestinationIDs:v70 link:v62 report:v63 stagedAct ivitySession:v72 personaHandshakeBlob:v66 activitySession:v68];

  uint64_t v67 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation delegate](self, "delegate"));
  [v67 conversationDidTriggerJoin:self];

LABEL_42:
}

    -[CSDConversation _registerPluginsIfNecessary](self, "_registerPluginsIfNecessary");
    [v22 conversationConnectionDidStart:self];
    goto LABEL_18;
  }

  id v24 = sub_1001704C4();
  double v25 = (os_log_s *)objc_claimAutoreleasedReturnValue(v24);
  if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
    sub_1002B24D8();
  }

  -[CSDConversation setState:](self, "setState:", 0LL);
  -[CSDConversation _reportConversationFailedWithProviderEndedReason:]( self,  "_reportConversationFailedWithProviderEndedReason:",  (char *)[v10 code] + 2000);
LABEL_18:
  [v22 conversationChanged:self];
}
}
}
}
}

    uint64_t v17 = sub_1001704C4();
    id v18 = (os_log_s *)objc_claimAutoreleasedReturnValue(v17);
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v21) = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "store received link", (uint8_t *)&v21, 2u);
    }

    [*(id *)(a1 + 72) notifyDelegatesOfChangedLink:*(void *)(a1 + 48) conversation:*(void *)(a1 + 40)];
    return;
  }

  if (v8)
  {
    char v19 = *(const __CFString **)(a1 + 48);
    unsigned int v20 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) UUID]);
    id v21 = 138412546;
    char v22 = v19;
    id v23 = 2112;
    id v24 = v20;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "[WARN] Did not set conversation link %@ to conversation UUID %@",  (uint8_t *)&v21,  0x16u);
  }
}

        id v18 = 0;
        goto LABEL_18;
      }

      id v15 = (void *)objc_claimAutoreleasedReturnValue([v13 lightweightPrimary]);
      id v16 = (void *)objc_claimAutoreleasedReturnValue([v15 value]);
      uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue( -[CSDConversationManager memberExistsForParticipantDestination:members:]( self,  "memberExistsForParticipantDestination:members:",  v16,  v7));

      if (!v17)
      {
        char v22 = sub_1001704C4();
        unsigned int v20 = (os_log_s *)objc_claimAutoreleasedReturnValue(v22);
        if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412290;
          double v29 = v13;
          id v21 = "Lightweight member %@ doesn't have their primary in the conversation";
          goto LABEL_16;
        }

        goto LABEL_17;
      }
    }

    __int16 v10 = [v8 countByEnumeratingWithState:&v24 objects:v30 count:16];
    id v18 = 1;
    if (v10) {
      continue;
    }
    break;
  }
}

  v90 = 0u;
  char v91 = 0u;
  char v88 = 0u;
  uint64_t v89 = 0u;
  obj = (id)objc_claimAutoreleasedReturnValue(-[CSDConversationManager delegateToQueue](self, "delegateToQueue"));
  char v31 = [obj countByEnumeratingWithState:&v88 objects:v103 count:16];
  if (v31)
  {
    uint64_t v32 = v31;
    id v33 = *(void *)v89;
    do
    {
      for (j = 0LL; j != v32; j = (char *)j + 1)
      {
        if (*(void *)v89 != v33) {
          objc_enumerationMutation(obj);
        }
        id v35 = *(void *)(*((void *)&v88 + 1) + 8LL * (void)j);
        if ((objc_opt_respondsToSelector(v35, "conversationManager:conversation:addedActiveParticipant:") & 1) != 0)
        {
          __int128 v36 = (void *)objc_claimAutoreleasedReturnValue([v6 tuConversation]);
          __int128 v37 = (void *)objc_claimAutoreleasedReturnValue([v7 tuConversationParticipant]);
          id v38 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversationManager delegateToQueue](v83, "delegateToQueue"));
          id v39 = v33;
          unint64_t v40 = v7;
          id v41 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v38 objectForKey:v35]);

          block[0] = _NSConcreteStackBlock;
          block[1] = 3221225472LL;
          block[2] = sub_1000FC328;
          block[3] = &unk_1003D7B28;
          void block[4] = v35;
          unsigned int v85 = v36;
          uint64_t v86 = v83;
          unint64_t v87 = v37;
          uint64_t v42 = v37;
          id v6 = v82;
          uint64_t v43 = v42;
          uint64_t v44 = v36;
          dispatch_async(v41, block);

          uint64_t v7 = v40;
          id v33 = v39;
        }
      }

      uint64_t v32 = [obj countByEnumeratingWithState:&v88 objects:v103 count:16];
    }

    while (v32);
  }
}
}

  protoUpgradeSessionUUID = self->_protoUpgradeSessionUUID;
  if (protoUpgradeSessionUUID) {
    [v3 setObject:protoUpgradeSessionUUID forKey:@"protoUpgradeSessionUUID"];
  }
  return v3;
}

  return v6;
}

  return v5;
}

    id v5 = 0;
    goto LABEL_18;
  }

  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 activeRemoteParticipants]);
  id v5 = [v4 count] == 0;
LABEL_6:

LABEL_18:
  return v5;
}
}

  id v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", self->_addCallAllowed));
  [v3 setObject:v11 forKey:@"addCallAllowed"];

  has = (__int16)self->_has;
  if ((has & 0x200) == 0)
  {
LABEL_7:
    if ((has & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }

  PBDataWriterWriteBOOLField(v5, self->_addCallAllowed, 5LL);
  has = (__int16)self->_has;
  if ((has & 0x200) == 0)
  {
LABEL_7:
    if ((has & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }

  *((_BYTE *)v4 + 12) = self->_addCallAllowed;
  *((_WORD *)v4 + 12) |= 2u;
  has = (__int16)self->_has;
  if ((has & 0x200) == 0)
  {
LABEL_7:
    if ((has & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }

  *((_BYTE *)result + 12) = self->_addCallAllowed;
  *((_WORD *)result + 12) |= 2u;
  has = (__int16)self->_has;
  if ((has & 0x200) == 0)
  {
LABEL_7:
    if ((has & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }

  int v8 = 0LL;
  if ((has & 8) != 0)
  {
LABEL_8:
    uint64_t v9 = 2654435761LL * self->_hardPauseAvailable;
    if ((has & 4) != 0) {
      goto LABEL_9;
    }
    goto LABEL_19;
  }

  self->_addCallAllowed = *((_BYTE *)v4 + 12);
  *(_WORD *)&self->_has |= 2u;
  id v5 = *((_WORD *)v4 + 12);
  if ((v5 & 0x200) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }

      __int16 v10 = v38;
      int v8 = v39;
    }
  }

  if (v14
    || (double v26 = (void *)objc_claimAutoreleasedReturnValue(-[CSDProviderCallDataSource pendingPulledCallContexts](self, "pendingPulledCallContexts")),
        double v27 = (void *)objc_claimAutoreleasedReturnValue([v26 objectForKeyedSubscript:v9]),
        v26,
        id v14 = (void *)objc_claimAutoreleasedReturnValue([v27 call]),
        v27,
        v14))
  {
    uint64_t v28 = (void *)objc_claimAutoreleasedReturnValue([v14 isoCountryCode]);
    if (!v28)
    {
      double v29 = (void *)objc_claimAutoreleasedReturnValue([v10 ISOCountryCode]);

      if (v29) {
        goto LABEL_24;
      }
      uint64_t v28 = (void *)objc_claimAutoreleasedReturnValue(-[CSDProviderCallDataSource _ISOCountryCodeForCall:](self, "_ISOCountryCodeForCall:", v14));
      __int128 v36 = (void *)objc_claimAutoreleasedReturnValue([v10 ISOCountryCode]);
      __int128 v37 = TUStringsAreEqualOrNil(v36, v28);

      if ((v37 & 1) == 0) {
        [v10 setISOCountryCode:v28];
      }
    }

LABEL_24:
    [v14 updateWithCallUpdate:v10];
    id v30 = sub_1001704C4();
    char v31 = (os_log_s *)objc_claimAutoreleasedReturnValue(v30);
    if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v32 = (void *)objc_claimAutoreleasedReturnValue([v9 UUIDString]);
      *(_DWORD *)buf = 138413058;
      uint64_t v45 = v8;
      uint64_t v46 = 2112;
      uint64_t v47 = v32;
      id v48 = 2112;
      id v49 = v10;
      unsigned int v50 = 2112;
      char v51 = v14;
      _os_log_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_DEFAULT,  "Call source %@ updated call with UUID %@ with update %@ => %@",  buf,  0x2Au);
    }

    goto LABEL_27;
  }

  id v33 = sub_1001704C4();
  id v14 = (void *)objc_claimAutoreleasedReturnValue(v33);
  if (os_log_type_enabled((os_log_t)v14, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v34 = (void *)objc_claimAutoreleasedReturnValue([v9 UUIDString]);
    id v35 = (void *)objc_claimAutoreleasedReturnValue(-[CSDCallDataSource calls](self, "calls"));
    *(_DWORD *)buf = 138412802;
    uint64_t v45 = v8;
    uint64_t v46 = 2112;
    uint64_t v47 = v34;
    id v48 = 2112;
    id v49 = v35;
    _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v14,  OS_LOG_TYPE_DEFAULT,  "[WARN] No call found for call source %@ and UUID %@. All calls: %@",  buf,  0x20u);
  }

  id v6 = *a1;
  uint64_t v7 = v6 >= 2;
  id v5 = v6 - 2;
  if (!v7) {
    id v5 = -1;
  }
  return (v5 + 1);
}

  id v6 = *a1;
  uint64_t v7 = v6 >= 3;
  id v5 = v6 - 3;
  if (!v7) {
    id v5 = -1;
  }
  return (v5 + 1);
}

  swift_getObjectType(*(void *)&v31);
  sub_1001B9200();
  swift_unknownObjectRetain(*(void *)&v31);
  OS_dispatch_source.cancel()();
  unint64_t v112 = v33;
  sub_1001B0F5C();
  swift_unknownObjectRelease_n(*(void *)&v31, 2LL);
LABEL_20:
  sub_1001B804C();
  aBlock = COERCE_DOUBLE(_swiftEmptyArrayStorage);
  sub_1001A9F18( &qword_1004478A8,  (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_source.TimerFlags,  (uint64_t)&protocol conformance descriptor for OS_dispatch_source.TimerFlags);
  uint64_t v81 = v80;
  unint64_t v82 = sub_1001AFF14(&qword_1004478B0);
  sub_1001B90A8(&qword_1004478B8, &qword_1004478B0);
  char v83 = v113;
  char v84 = v115;
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v82, v85, v115, v81);
  uint64_t v86 = v117;
  unint64_t v87 = static OS_dispatch_source.makeTimerSource(flags:queue:)(v83, *(void *)(v117 + 16));
  (*(void (**)(uint64_t, uint64_t))(v114 + 8))(v83, v84);
  char v88 = (uint64_t)v134;
  uint64_t v89 = (*(double (**)(void, void))(v86 + 24))(v134[2], v130);
  ObjectType = swift_getObjectType(v87);
  char v91 = v126;
  static DispatchTime.now()(ObjectType);
  + infix(_:_:)(v91, v89);
  unsigned int v92 = *(void (**)(char *, uint64_t))(v127 + 8);
  v92(v91, v19);
  uint64_t v93 = v19;
  unint64_t v94 = v128;
  sub_1001B78EC(v128);
  OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)(v23, v94, ObjectType, v89);
  (*(void (**)(void *, uint64_t))(v129 + 8))(v94, v131);
  v92(v23, v93);
  char v95 = swift_allocObject(&unk_1003DE428, 24LL, 7LL);
  swift_weakInit(v95 + 16, v86);
  char v96 = (void *)swift_allocObject(&unk_1003DE450, 40LL, 7LL);
  unsigned int v97 = v132;
  uint64_t v98 = v133;
  v96[2] = v95;
  v96[3] = v97;
  v96[4] = v98;
  v140 = sub_1001B80D8;
  v141 = v96;
  aBlock = COERCE_DOUBLE(_NSConcreteStackBlock);
  v137 = 1107296256LL;
  v138 = sub_1002356BC;
  v139 = &unk_1003DE468;
  unint64_t v99 = _Block_copy(&aBlock);
  swift_retain(v95);
  char v100 = swift_retain(v98);
  char v101 = v118;
  static DispatchQoS.unspecified.getter(v100);
  unsigned int v102 = v121;
  sub_1001B7AF0();
  OS_dispatch_source.setEventHandler(qos:flags:handler:)(v101, v102, v99, ObjectType);
  _Block_release(v99);
  (*(void (**)(uint64_t, uint64_t))(v122 + 8))(v102, v123);
  (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v101, v120);
  unint64_t v103 = v141;
  swift_release(v95);
  swift_release(v103);
  OS_dispatch_source.resume()();
  char v104 = swift_unknownObjectRetain(v87);
  unint64_t v107 = (os_log_s *)Logger.logObject.getter(v104, v105, v106);
  char v108 = static os_log_type_t.default.getter(v107);
  if (os_log_type_enabled(v107, v108))
  {
    char v109 = (uint8_t *)sub_1001B0E78(12LL);
    *(_DWORD *)char v109 = 134217984;
    aBlock = v89;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, &v137, v109 + 4, v109 + 12);
    _os_log_impl( (void *)&_mh_execute_header,  v107,  v108,  "ConversationLinkSync: Scheduled action {interval: %f}",  v109,  0xCu);
    sub_1001B0E60((uint64_t)v109);
  }

  sub_1001B0E80(v124, (uint64_t)&aBlock, 33LL);
  swift_unknownObjectRetain(v87);
  sub_1001B9234();
  sub_1001FE358(v87, v88, 0LL);
  swift_endAccess(&aBlock);
  sub_1001B7FF4(*(uint64_t *)&v31, v112);
  sub_1001B0F5C();
  swift_unknownObjectRelease_n(v87, 2LL);
}

      char v78 = [(id)objc_opt_self(TUCallCenter) sharedInstance];
      char v79 = [v78 activeConversationForCall:v51 backedByGroupSession:1];

      unsigned int v80 = v223;
      uint64_t v81 = (uint64_t)v231;
      unint64_t v82 = v218;
      char v83 = v224;
      if (v79)
      {
        char v84 = sub_1001705A4();
        unsigned int v85 = static os_log_type_t.default.getter(v84);
        os_log(_:dso:log:type:_:)( "This is a GFT call",  18LL,  2LL,  &_mh_execute_header,  v84,  v85,  _swiftEmptyArrayStorage);

        uint64_t v86 = [v51 uniqueProxyIdentifierUUID];
        static UUID._unconditionallyBridgeFromObjectiveC(_:)(v86);

        unint64_t v87 = *(void (**)(uint64_t, uint64_t))(v83 + 8);
        v87(v81, v80);
        char v88 = [v51 uniqueProxyIdentifierUUID];
        static UUID._unconditionallyBridgeFromObjectiveC(_:)(v88);

        swift_beginAccess(v214, &aBlock, 33LL, 0LL);
        sub_1001FD4D4(v81, v89, v90, v91, v92, v93, v94, v95, (uint64_t)v208, (uint64_t)v209);
        unsigned int v97 = v96;
        v87(v81, v80);
        swift_endAccess(&aBlock);

        uint64_t v98 = [v79 groupUUID];
        unint64_t v99 = v222;
        static UUID._unconditionallyBridgeFromObjectiveC(_:)(v98);

        char v100 = &v82[OBJC_IVAR___CSDRTCReporter_groupUUIDToConversationInfo];
        swift_beginAccess(&v82[OBJC_IVAR___CSDRTCReporter_groupUUIDToConversationInfo], &aBlock, 32LL, 0LL);
        char v101 = sub_1001C9FB4(v99, *(void *)v100);
        if (v101)
        {
          unsigned int v102 = (void *)v101;
          swift_endAccess(&aBlock);
          v87((uint64_t)v99, v80);
          sub_1002A3E0C(v51);
        }

        else
        {
          swift_endAccess(&aBlock);
          v87((uint64_t)v99, v80);
        }

        char v109 = [v79 UUID];
        static UUID._unconditionallyBridgeFromObjectiveC(_:)(v109);

        swift_beginAccess(&v82[OBJC_IVAR___CSDRTCReporter_uuidToNWActivityConnecting], &aBlock, 33LL, 0LL);
        unsigned int v110 = sub_1001FD390(v81);
        swift_endAccess(&aBlock);
        v87(v81, v80);
        if (v110)
        {
          nw_activity_complete_with_reason(v110, 2LL);
          swift_unknownObjectRelease(v110);
        }
      }

      else
      {
        unint64_t v103 = [v51 provider];
        char v104 = [v103 isFaceTimeProvider];

        if ((v104 & 1) != 0)
        {
          char v105 = sub_1001705A4();
          unsigned int v106 = static os_log_type_t.default.getter(v105);
          os_log(_:dso:log:type:_:)( "This is a FT1:1 call",  20LL,  2LL,  &_mh_execute_header,  v105,  v106,  _swiftEmptyArrayStorage);

          unint64_t v107 = [v51 uniqueProxyIdentifierUUID];
          static UUID._unconditionallyBridgeFromObjectiveC(_:)(v107);

          swift_beginAccess(&v82[OBJC_IVAR___CSDRTCReporter_uuidToNWActivityConnecting], &aBlock, 33LL, 0LL);
          char v108 = sub_1001FD390(v81);
          swift_endAccess(&aBlock);
          (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v81, v80);
          if (v108)
          {
            nw_activity_complete_with_reason(v108, 2LL);
            swift_unknownObjectRelease(v108);
          }
        }
      }

      return;
    }
  }

  else if (v30 - 3 >= 2)
  {
    if (v30 != 1)
    {
      id v53 = v231;
      id v54 = v218;
      id v55 = v239;
      id v56 = v224;
      if (v30 != 6) {
        return;
      }
      char v52 = 1;
      goto LABEL_11;
    }

    goto LABEL_17;
  }

  unsigned int v71 = [(id)objc_opt_self(TUCallCenter) sharedInstance];
  uint64_t v72 = [v71 activeConversationForCall:v51 backedByGroupSession:1];

  unint64_t v73 = v223;
  char v74 = (uint64_t)v231;
  char v75 = v224;
  if (v72)
  {
    unsigned int v76 = [v51 uniqueProxyIdentifierUUID];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v76);

    unint64_t v77 = (void *)sub_1001BEF4C(v72, v74);
    (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v74, v73);
  }

  __break(1u);
  return result;
}

  __break(1u);
  return result;
}

  id v6 = *a1;
  uint64_t v7 = v6 >= 2;
  id v5 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    id v5 = -1;
  }
  return (v5 + 1);
}

  id v6 = *a1;
  uint64_t v7 = v6 >= 0x2C;
  id v5 = v6 - 44;
  if (!v7) {
    id v5 = -1;
  }
  return (v5 + 1);
}

  sub_1001B0FF8();
}

  id v6 = *a1;
  uint64_t v7 = v6 >= 0xA;
  id v5 = v6 - 10;
  if (!v7) {
    id v5 = -1;
  }
  return (v5 + 1);
}

  id v6 = *a1;
  uint64_t v7 = v6 >= 6;
  id v5 = v6 - 6;
  if (!v7) {
    id v5 = -1;
  }
  return (v5 + 1);
}

  id v6 = *a1;
  uint64_t v7 = v6 >= 4;
  id v5 = v6 - 4;
  if (!v7) {
    id v5 = -1;
  }
  return (v5 + 1);
}

    __int128 v36 = *(void **)v4;
    __int128 v37 = *(void *)(v4 + 8);
    *(void *)(v4 + _Block_object_dispose(va, 8) = 0LL;
    *(void *)(v4 + 16) = 0LL;
    *(void *)id v4 = 0LL;
    id v38 = sub_10025E68C(v36, v37);
    sub_10025BE84(v38);

    uint64_t v9 = v21;
  }
}

  id v6 = *a1;
  uint64_t v7 = v6 >= 5;
  id v5 = v6 - 5;
  if (!v7) {
    id v5 = -1;
  }
  return (v5 + 1);
}

  sub_100284B5C(v39);
  sub_100284B64(v40, v37);
LABEL_18:
  uint64_t v47 = (sub_100284B6C() >> 9) & 1;
LABEL_19:
  sub_100284B5C(v40);
  return v47;
}

    __break(1u);
LABEL_18:
    __break(1u);
    return;
  }

  double v25 = sub_100290EA4();
  if (v26)
  {
    double v27 = v26;
    v31[2] = v22;
    v31[3] = v24;
    v31[0] = v25;
    v31[1] = v26;
    uint64_t v28 = sub_1002683B8();
    double v29 = StringProtocol.contains<A>(_:)(v31, &type metadata for String, &type metadata for String, v28, v28);
    swift_bridgeObjectRelease(v27);
    if ((v29 & 1) != 0)
    {
      swift_bridgeObjectRelease(v24);
      if (!__OFADD__(*a6, 1LL))
      {
        ++*a6;
        goto LABEL_13;
      }

      goto LABEL_18;
    }
  }

  *a7 = v22;
  a7[1] = v24;
}

  id v6 = *a1;
  uint64_t v7 = v6 >= 0x24;
  id v5 = v6 - 36;
  if (!v7) {
    id v5 = -1;
  }
  return (v5 + 1);
}

void sub_1000351BC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_1000351DC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    id v4 = [WeakRetained state];
    id v5 = sub_1001704C4();
    id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    uint64_t v7 = v6;
    if (v4 == (id)4)
    {
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v8 = *(void *)(a1 + 32);
        *(_DWORD *)buf = 138412290;
        uint64_t v10 = v8;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "[WARN] Timed out waiting for session to stop after %@, moving to waiting state and cleaning up.",  buf,  0xCu);
      }

      +[CSDCrashReporter simulateCrashReportWithFormat:]( &OBJC_CLASS___CSDCrashReporter,  "simulateCrashReportWithFormat:",  @"Timed out waiting for sessions to end in leaving state (left conversation for reason: %@). Please file a bug on [TelephonyUtilities | New Bugs] so we can direct it to the appropriate team.",  *(void *)(a1 + 32));
      [v3 setState:0];
      [v3 setAvcSession:0];
      [v3 setAvcSessionInProgress:0];
      [v3 _reportConversationFailedWithProviderEndedReason:501];
      uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue([v3 delegate]);
      -[os_log_s conversationChanged:](v7, "conversationChanged:", v3);
    }

    else if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      sub_1002B23F4(v3);
    }

    [v3 setTimeoutBlock:0];
  }
}

void sub_10003571C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_10003574C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = WeakRetained;
  if (WeakRetained)
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained activeParticipantDestinationsByIdentifier]);
    if ((unint64_t)[v3 count] <= 1)
    {
    }

    else
    {
      id v4 = (void *)objc_claimAutoreleasedReturnValue([v2 activeRemoteParticipants]);
      id v5 = [v4 count];

      if (!v5)
      {
        id v6 = sub_1001704C4();
        uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
        if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v2 activeParticipantDestinationsByIdentifier]);
          int v9 = 138412290;
          uint64_t v10 = v8;
          _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "_endCallIfNecessary: The participant couldn't add any active participants in the session, end call,  activeP articipantDestinationsByIdentifier: %@",  (uint8_t *)&v9,  0xCu);
        }

        [v2 _reportConversationFailedWithProviderEndedReason:533];
        [v2 leave];
      }
    }

    [v2 setNoConversationParticipantTimeoutBlock:0];
  }
}

void sub_100035E88( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, id location)
{
}

void sub_100035EB0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
  __int128 v38 = 0u;
  __int128 v39 = 0u;
  __int128 v40 = 0u;
  __int128 v41 = 0u;
  id v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained pendingRemoteMembers]);
  id v37 = [v3 countByEnumeratingWithState:&v38 objects:v46 count:16];
  if (!v37)
  {
LABEL_23:

    goto LABEL_24;
  }

  char v33 = 0;
  uint64_t v36 = *(void *)v39;
  uint64_t v34 = WeakRetained;
  id obj = v3;
  do
  {
    id v4 = 0LL;
    do
    {
      if (*(void *)v39 != v36) {
        objc_enumerationMutation(obj);
      }
      id v5 = *(void **)(*((void *)&v38 + 1) + 8LL * (void)v4);
      uint64_t v6 = objc_claimAutoreleasedReturnValue([v5 handle]);
      if (!v6) {
        goto LABEL_10;
      }
      uint64_t v7 = (void *)v6;
      uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained remoteMemberHandles]);
      int v9 = (void *)objc_claimAutoreleasedReturnValue([v5 handle]);
      if ([v8 containsObject:v9])
      {

LABEL_10:
        id v16 = sub_1001704C4();
        uint64_t v17 = (os_log_s *)objc_claimAutoreleasedReturnValue(v16);
        if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
        {
          id v18 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained remoteMembers]);
          *(_DWORD *)buf = 138412546;
          uint64_t v43 = v5;
          __int16 v44 = 2112;
          uint64_t v45 = v18;
          _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "link based call, member: %@ is already added to remoteMembers: %@",  buf,  0x16u);
        }

        char v19 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained pendingMemberHandles]);
        unsigned int v20 = (void *)objc_claimAutoreleasedReturnValue([v5 handle]);
        unsigned int v21 = [v19 containsObject:v20];

        if (v21)
        {
          char v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithObject:](&OBJC_CLASS___NSSet, "setWithObject:", v5));
          [WeakRetained removePendingMembers:v22 triggeredLocally:1];
        }

        -[NSMutableSet addObject:](v2, "addObject:", v5);
        goto LABEL_15;
      }

      uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained localMember]);
      id v11 = v2;
      id v12 = v10;
      BOOL v13 = (void *)objc_claimAutoreleasedReturnValue([v10 handle]);
      id v14 = (void *)objc_claimAutoreleasedReturnValue([v5 handle]);
      unsigned __int8 v15 = [v13 isEquivalentToHandle:v14];

      id v2 = v11;
      id WeakRetained = v34;

      if ((v15 & 1) != 0) {
        goto LABEL_10;
      }
      id v23 = sub_1001704C4();
      id v24 = (os_log_s *)objc_claimAutoreleasedReturnValue(v23);
      if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
      {
        double v25 = (void *)objc_claimAutoreleasedReturnValue([v34 remoteMemberHandles]);
        *(_DWORD *)buf = 138412546;
        uint64_t v43 = v5;
        __int16 v44 = 2112;
        uint64_t v45 = v25;
        _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEFAULT,  "link based call, show up LMI request UI for %@, remoteHandles: %@",  buf,  0x16u);
      }

      double v26 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithObject:](&OBJC_CLASS___NSSet, "setWithObject:", v5));
      char v33 = 1;
      [v34 addPendingMembers:v26 triggeredLocally:1];

LABEL_15:
      id v4 = (char *)v4 + 1;
    }

    while (v37 != v4);
    id v27 = [obj countByEnumeratingWithState:&v38 objects:v46 count:16];
    id v37 = v27;
  }

  while (v27);

  if ((v33 & 1) != 0)
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue(+[CSDReportingController sharedInstance](&OBJC_CLASS___CSDReportingController, "sharedInstance"));
    uint64_t v28 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained tuConversation]);
    [v3 remoteMemberNotInMemberListForConversation:v28];

    goto LABEL_23;
  }

void sub_100036560( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_10003657C(uint64_t a1)
{
  id v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v4 = WeakRetained;
  if (WeakRetained)
  {
    id v5 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained activeParticipantDestinationsByIdentifier]);
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKeyedSubscript:*(void *)(a1 + 32)]);

    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v4 activeRemoteParticipantsByIdentifier]);
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v7 objectForKeyedSubscript:*(void *)(a1 + 32)]);
    if (v8)
    {
    }

    else
    {
      int v9 = (void *)objc_claimAutoreleasedReturnValue([v4 inflightAVCBlobRecoveryBlocksByIdentifier]);
      uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v9 objectForKeyedSubscript:*(void *)(a1 + 32)]);

      if (!v10 && v6)
      {
        id v11 = (void *)objc_claimAutoreleasedReturnValue(+[CSDReportingController sharedInstance](&OBJC_CLASS___CSDReportingController, "sharedInstance"));
        id v12 = (void *)objc_claimAutoreleasedReturnValue([v4 tuConversation]);
        [v11 avcBlobRecoveryStartedForConversation:v12];

        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472LL;
        block[2] = sub_100036770;
        block[3] = &unk_1003D7CB0;
        objc_copyWeak(&v20, v2);
        void block[4] = *(void *)(a1 + 32);
        dispatch_block_t v13 = dispatch_block_create((dispatch_block_flags_t)0LL, block);
        id v14 = (void *)objc_claimAutoreleasedReturnValue([v4 delegate]);
        v17[0] = _NSConcreteStackBlock;
        v17[1] = 3221225472LL;
        v17[2] = sub_1000368A4;
        v17[3] = &unk_1003D7E18;
        uint64_t v15 = *(void *)(a1 + 32);
        v17[4] = v4;
        v17[5] = v15;
        id v16 = v13;
        id v18 = v16;
        [v14 conversation:v4 requestBlobRecoveryForParticipantDestination:v6 completion:v17];

        objc_destroyWeak(&v20);
      }
    }
  }
}

void sub_10003675C(_Unwind_Exception *a1)
{
}

void sub_100036770(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue(+[CSDReportingController sharedInstance](&OBJC_CLASS___CSDReportingController, "sharedInstance"));
    id v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained tuConversation]);
    [v3 avcBlobRecoveryTimedOutForConversation:v4];

    id v5 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained activeRemoteParticipantsByIdentifier]);
    uint64_t v7 = *(void *)(a1 + 32);
    uint64_t v6 = (void *)(a1 + 32);
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKeyedSubscript:v7]);
    if (v8)
    {
    }

    else
    {
      int v9 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained activeParticipantDestinationsByIdentifier]);
      uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v9 objectForKeyedSubscript:*v6]);

      if (v10)
      {
        id v11 = sub_1001704C4();
        id v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
        if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
          sub_1002B2470((uint64_t)v6, v12, v13, v14, v15, v16, v17, v18);
        }

        [WeakRetained _reportConversationFailedWithProviderEndedReason:500];
        [WeakRetained leave];
      }
    }

    char v19 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained inflightAVCBlobRecoveryBlocksByIdentifier]);
    [v19 setObject:0 forKeyedSubscript:*v6];
  }
}

void sub_1000368A4(uint64_t a1, int a2)
{
  if (a2)
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) inflightAVCBlobRecoveryBlocksByIdentifier]);
    id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 objectForKeyedSubscript:*(void *)(a1 + 40)]);

    if (v4)
    {
      id v5 = sub_1001704C4();
      uint64_t v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v7 = *(void *)(a1 + 40);
        int v18 = 138412290;
        uint64_t v19 = v7;
        _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Replacing existing recovery timeout for participant with identifier %@",  (uint8_t *)&v18,  0xCu);
      }

      uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) inflightAVCBlobRecoveryBlocksByIdentifier]);
      int v9 = (void *)objc_claimAutoreleasedReturnValue([v8 objectForKeyedSubscript:*(void *)(a1 + 40)]);
      dispatch_block_cancel(v9);
    }

    id v10 = objc_retainBlock(*(id *)(a1 + 48));
    id v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) inflightAVCBlobRecoveryBlocksByIdentifier]);
    [v11 setObject:v10 forKeyedSubscript:*(void *)(a1 + 40)];

    id v12 = sub_1001704C4();
    uint64_t v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v14 = *(void *)(a1 + 40);
      int v18 = 138412290;
      uint64_t v19 = v14;
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "Setting up AVC blob recovery timeout for participant with identifier %@",  (uint8_t *)&v18,  0xCu);
    }

    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) serverBag]);
    dispatch_time_t v16 = dispatch_time(0, 1000000000 * (void)[v15 AVCBlobRecoveryTimeout]);
    uint64_t v17 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) queue]);
    dispatch_after(v16, v17, *(dispatch_block_t *)(a1 + 48));
  }

void sub_100036F34( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_100036F48(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v2 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v3 = objc_claimAutoreleasedReturnValue([WeakRetained serverProvidedParticipantIdentifiers]);
    if (v3)
    {
      id v4 = (void *)v3;
      id v5 = (void *)objc_claimAutoreleasedReturnValue([v2 serverProvidedLightweightParticipantIdentifiers]);

      if (v5)
      {
        uint64_t v6 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
        uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v2 serverProvidedParticipantIdentifiers]);
        -[NSMutableSet unionSet:](v6, "unionSet:", v7);

        uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v2 serverProvidedLightweightParticipantIdentifiers]);
        -[NSMutableSet unionSet:](v6, "unionSet:", v8);

        int v9 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
        id v10 = (void *)objc_claimAutoreleasedReturnValue([v2 activeRemoteParticipants]);
        -[NSMutableSet unionSet:](v9, "unionSet:", v10);

        id v11 = (void *)objc_claimAutoreleasedReturnValue([v2 activeLightweightParticipants]);
        -[NSMutableSet unionSet:](v9, "unionSet:", v11);

        id v12 = sub_1001704C4();
        uint64_t v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
        if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412290;
          uint64_t v34 = v6;
          _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "Pruning remote participants as necessary, current server identifiers: %@",  buf,  0xCu);
        }

        __int128 v30 = 0u;
        __int128 v31 = 0u;
        __int128 v28 = 0u;
        __int128 v29 = 0u;
        uint64_t v14 = v9;
        id v15 = -[NSMutableSet countByEnumeratingWithState:objects:count:]( v14,  "countByEnumeratingWithState:objects:count:",  &v28,  v32,  16LL);
        if (v15)
        {
          id v16 = v15;
          uint64_t v17 = *(void *)v29;
          do
          {
            for (i = 0LL; i != v16; i = (char *)i + 1)
            {
              if (*(void *)v29 != v17) {
                objc_enumerationMutation(v14);
              }
              uint64_t v19 = *(void **)(*((void *)&v28 + 1) + 8LL * (void)i);
              id v20 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedLongLong:]( NSNumber,  "numberWithUnsignedLongLong:",  [v19 identifier]));
              unsigned __int8 v21 = -[NSMutableSet containsObject:](v6, "containsObject:", v20);

              if ((v21 & 1) == 0)
              {
                char v22 = (void *)objc_claimAutoreleasedReturnValue([v2 activeRemoteParticipants]);
                if ([v22 containsObject:v19]
                  && [*(id *)(a1 + 32) isOneToOneModeEnabled])
                {
                  id v23 = [*(id *)(a1 + 32) state];

                  if (v23 == (id)3)
                  {
                    id v24 = sub_1001704C4();
                    double v25 = (os_log_s *)objc_claimAutoreleasedReturnValue(v24);
                    if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
                    {
                      *(_WORD *)buf = 0;
                      _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEFAULT,  "Joined in oneToOneMode, do not prune remote participant",  buf,  2u);
                    }

                    goto LABEL_19;
                  }
                }

                else
                {
                }

                id v26 = [v19 identifier];
                double v25 = (os_log_s *)objc_claimAutoreleasedReturnValue([v19 handle]);
                [v2 removeParticipantWithIdentifier:v26 fromHandle:v25 withReason:0];
LABEL_19:

                continue;
              }
            }

            id v16 = -[NSMutableSet countByEnumeratingWithState:objects:count:]( v14,  "countByEnumeratingWithState:objects:count:",  &v28,  v32,  16LL);
          }

          while (v16);
        }
      }
    }

    [v2 setWaitingToPruneParticipants:0];
  }
}

void sub_1000373D4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1000373F4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained setServerProvidedParticipantIdentifiers:0];
    [v3 setServerProvidedLightweightParticipantIdentifiers:0];
    id v2 = (void *)objc_claimAutoreleasedReturnValue([v3 idsSession]);
    [v2 requestActiveParticipants];

    [v3 setParticipantRefreshBlock:0];
    id WeakRetained = v3;
  }
}

LABEL_10:
    return;
  }

  if ((id)-[CSDConversation state](self, "state") != (id)3)
  {
    __int128 v31 = sub_1001704C4();
    uint64_t v17 = (os_log_s *)objc_claimAutoreleasedReturnValue(v31);
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "Returning - Conversation state is not Joined",  buf,  2u);
    }

    goto LABEL_10;
  }

  char v84 = 0u;
  unsigned int v85 = 0u;
  unint64_t v82 = 0u;
  char v83 = 0u;
  int v18 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation activeRemoteParticipants](self, "activeRemoteParticipants"));
  uint64_t v19 = 0LL;
  id v20 = [v18 countByEnumeratingWithState:&v82 objects:v87 count:16];
  if (v20)
  {
    unsigned __int8 v21 = *(void *)v83;
    do
    {
      for (i = 0LL; i != v20; i = (char *)i + 1)
      {
        if (*(void *)v83 != v21) {
          objc_enumerationMutation(v18);
        }
        id v23 = *(void **)(*((void *)&v82 + 1) + 8LL * (void)i);
        id v24 = (void *)objc_claimAutoreleasedReturnValue([v23 capabilities]);
        if ([v24 isUPlusOneAVLessAvailable])
        {
          double v25 = [v23 audioVideoMode] == 0;

          if (v25)
          {
            id v26 = sub_1001704C4();
            id v27 = (os_log_s *)objc_claimAutoreleasedReturnValue(v26);
            if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)buf = 138412290;
              *(void *)uint64_t v89 = v23;
              _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_DEFAULT,  "switchBackToOneToOneIfPossibleUsingDelay: remoteParticipant %@ is AVLess",  buf,  0xCu);
            }

            ++v19;
          }
        }

        else
        {
        }
      }

      id v20 = [v18 countByEnumeratingWithState:&v82 objects:v87 count:16];
    }

    while (v20);
  }

  if (v74 == 1)
  {
    __int128 v28 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation featureFlags](self, "featureFlags"));
    if ([v28 uPlusNDowngrade])
    {
      __int128 v29 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation serverBag](self, "serverBag"));
      __int128 v30 = [v29 isUPlusNDowngradeAvailable];
    }

    else
    {
      __int128 v30 = 0;
    }

    uint64_t v34 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation activeRemoteParticipants](self, "activeRemoteParticipants"));
    id v35 = (void *)objc_claimAutoreleasedReturnValue([v34 anyObject]);
    uint64_t v36 = (void *)objc_claimAutoreleasedReturnValue([v35 capabilities]);
    id v37 = [v36 isUPlusNDowngradeAvailable];

    __int128 v38 = sub_1001704C4();
    __int128 v39 = (os_log_s *)objc_claimAutoreleasedReturnValue(v38);
    if (os_log_type_enabled(v39, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 134217984;
      *(void *)uint64_t v89 = v19;
      _os_log_impl( (void *)&_mh_execute_header,  v39,  OS_LOG_TYPE_DEFAULT,  "switchBackToOneToOneIfPossibleUsingDelay: avLessParticipantCount: %lu",  buf,  0xCu);
    }

    if (v73 == (id)1 || v19)
    {
      __int128 v40 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation link](self, "link"));
      if (v40)
      {

        if ((v30 & v37 & 1) == 0) {
          return;
        }
      }
    }

    else if ((v30 & v37) != 1)
    {
      return;
    }

    if (-[CSDConversation isScreenEnabled](self, "isScreenEnabled")
      || (__int128 v41 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation activeRemoteParticipants](self, "activeRemoteParticipants")),
          uint64_t v42 = (void *)objc_claimAutoreleasedReturnValue([v41 anyObject]),
          uint64_t v43 = [v42 isScreenEnabled],
          v42,
          v41,
          (v43 & 1) != 0))
    {
      __int16 v44 = 0;
    }

    else
    {
      unsigned int v80 = 0u;
      uint64_t v81 = 0u;
      char v78 = 0u;
      char v79 = 0u;
      uint64_t v45 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversation activitySessions](self, "activitySessions"));
      uint64_t v46 = [v45 countByEnumeratingWithState:&v78 objects:v86 count:16];
      if (v46)
      {
        __int16 v44 = v43 ^ 1;
        uint64_t v47 = *(void *)v79;
        while (2)
        {
          for (j = 0LL; j != v46; j = (char *)j + 1)
          {
            if (*(void *)v79 != v47) {
              objc_enumerationMutation(v45);
            }
            id v49 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v78 + 1) + 8 * (void)j) activity]);
            unsigned int v50 = [v49 isScreenSharingActivity];

            if ((v50 & 1) != 0)
            {
              __int16 v44 = 0;
              goto LABEL_58;
            }
          }

          uint64_t v46 = [v45 countByEnumeratingWithState:&v78 objects:v86 count:16];
          if (v46) {
            continue;
          }
          break;
        }
      }

      else
      {
        __int16 v44 = 1;
      }

  id v16 = (void *)objc_claimAutoreleasedReturnValue(-[CSDIDSGroupSessionProvider session](self, "session"));
  [v16 joinWithOptions:v4];
}

  char v83 = 0LL;
LABEL_11:
  unint64_t v82 = (unint64_t)-[NSData hash](self->_protoDTMFKey, "hash");
  if ((*(_BYTE *)&self->_has & 8) != 0) {
    uint64_t v81 = 2654435761LL * self->_protoDisconnectedReason;
  }
  else {
    uint64_t v81 = 0LL;
  }
  unsigned int v80 = -[NSString hash](self->_oBSOLETEConferenceIdentifier, "hash");
  if ((*((_BYTE *)&self->_has + 3) & 0x10) != 0) {
    char v79 = 2654435761LL * self->_protoVoicemail;
  }
  else {
    char v79 = 0LL;
  }
  char v78 = -[NSString hash](self->_callerNameFromNetwork, "hash");
  unint64_t v77 = (unint64_t)-[NSMutableArray hash](self->_protoCalls, "hash");
  unsigned int v76 = -[NSString hash](self->_hardPauseDigits, "hash");
  id v4 = self->_has;
  if ((*(_BYTE *)&v4 & 4) != 0)
  {
    char v75 = 2654435761LL * self->_hardPauseState;
    if ((*(_WORD *)&v4 & 0x400) != 0)
    {
LABEL_19:
      char v74 = 2654435761LL * self->_receivedMessageType;
      if ((*(_BYTE *)&v4 & 0x40) != 0) {
        goto LABEL_20;
      }
LABEL_24:
      unint64_t v73 = 0LL;
      if ((*(_DWORD *)&v4 & 0x400000) != 0) {
        goto LABEL_21;
      }
      goto LABEL_25;
    }
  }

  else
  {
    char v75 = 0LL;
    if ((*(_WORD *)&v4 & 0x400) != 0) {
      goto LABEL_19;
    }
  }

  char v74 = 0LL;
  if ((*(_BYTE *)&v4 & 0x40) == 0) {
    goto LABEL_24;
  }
LABEL_20:
  unint64_t v73 = 2654435761LL * self->_protoProtocolVersion;
  if ((*(_DWORD *)&v4 & 0x400000) != 0)
  {
LABEL_21:
    uint64_t v72 = 2654435761LL * self->_protoShouldSuppressRingtone;
    goto LABEL_26;
  }

  id v16 = 0LL;
  if ((*(_BYTE *)&self->_has & 4) != 0)
  {
LABEL_5:
    id v3 = 2654435761LL * self->_supportsAudioAndVideo;
    if ((*(_BYTE *)&self->_has & 0x10) != 0) {
      goto LABEL_6;
    }
LABEL_12:
    id v4 = 0LL;
    if ((*(_BYTE *)&self->_has & 0x40) != 0) {
      goto LABEL_7;
    }
    goto LABEL_13;
  }

    -[CSDRelayMessagingController sendAnswerCallMessageToHostForCall:](self, "sendAnswerCallMessageToHostForCall:", v4);
    goto LABEL_11;
  }

  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue( +[CSDRelayConferenceInterface sharedInstance]( &OBJC_CLASS___CSDRelayConferenceInterface,  "sharedInstance"));
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v4 remoteInviteDictionary]);
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472LL;
  v17[2] = sub_100081A30;
  v17[3] = &unk_1003D8948;
  int v18 = v4;
  uint64_t v19 = self;
  [v13 prepareConferenceForCall:v18 remoteInviteDictionary:v14 completion:v17];

  id v11 = v18;
LABEL_11:
}

  uint64_t v14 = -[NSString copyWithZone:](self->_callerNameFromNetwork, "copyWithZone:", a3);
  id v15 = (void *)v5[2];
  v5[2] = v14;

  id v16 = self->_has;
  if ((*(_BYTE *)&v16 & 1) != 0)
  {
    v5[1] = *(void *)&self->_protoTimeConnected;
    *((_DWORD *)v5 + 38) |= 1u;
    id v16 = self->_has;
    if ((*(_WORD *)&v16 & 0x1000) == 0)
    {
LABEL_12:
      if ((*(_WORD *)&v16 & 0x4000) == 0) {
        goto LABEL_13;
      }
      goto LABEL_48;
    }
  }

  else if ((*(_WORD *)&v16 & 0x1000) == 0)
  {
    goto LABEL_12;
  }

  *((_BYTE *)v5 + 141) = self->_protoOutgoing;
  *((_DWORD *)v5 + 38) |= 0x1000u;
  id v16 = self->_has;
  if ((*(_WORD *)&v16 & 0x4000) == 0)
  {
LABEL_13:
    if ((*(_WORD *)&v16 & 0x800) == 0) {
      goto LABEL_14;
    }
    goto LABEL_49;
  }

  uint64_t v14 = 1;
LABEL_19:

  return v14;
}

    id v15 = sub_1001704C4();
    id v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
    if (os_log_type_enabled((os_log_t)v16, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412546;
      id v49 = v6;
      unsigned int v50 = 2112;
      char v51 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v16,  OS_LOG_TYPE_DEFAULT,  "Dismissing let me in because link has originator handle of %@, which is not one of our active local handles %@",  buf,  0x16u);
    }

    uint64_t v17 = 0LL;
    goto LABEL_11;
  }

  id v15 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversationManager linkManager](self, "linkManager"));
  id v16 = (void *)objc_claimAutoreleasedReturnValue([v12 pseudonym]);
  uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v15 activateLinkForPseudonym:v16 updateGroupUUID:v9 updateInvitedHandles:v10]);

  if (v17)
  {
    int v18 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversationManager linkManager](self, "linkManager"));
    [v18 generateInactiveLinkFor:v8 afterActivation:1];
  }

  id v11 = -[NSString copyWithZone:](self->_protoUpgradeSessionUUID, "copyWithZone:", a3);
  id v12 = (void *)v6[3];
  v6[3] = v11;

  return v6;
}
}
}
}

        unsigned __int8 v21 = sub_1001704C4();
        char v22 = (void *)objc_claimAutoreleasedReturnValue(v21);
        if (os_log_type_enabled((os_log_t)v22, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v22,  OS_LOG_TYPE_DEFAULT,  "Did not create session",  buf,  2u);
        }

        goto LABEL_12;
      }

      id v53 = sub_1001704C4();
      id v54 = (os_log_s *)objc_claimAutoreleasedReturnValue(v53);
      if (os_log_type_enabled(v54, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v54,  OS_LOG_TYPE_DEFAULT,  "We'll send this message via the existing session",  buf,  2u);
      }

      id v55 = (void *)objc_claimAutoreleasedReturnValue(-[CSDRelayIDSSessionMessenger currentSession](self, "currentSession"));
      [v55 addIdentifier:v12];

      id v20 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[CSDRelayIDSSessionMessenger currentSession](self, "currentSession"));
      id v56 = (void *)objc_claimAutoreleasedReturnValue([v59 data]);
      -[os_log_s sendData:waitUntilConnected:completion:](v20, "sendData:waitUntilConnected:completion:", v56, 1LL, 0LL);
    }

    else if (v27)
    {
      char v52 = @"NO";
      if (v8) {
        char v52 = @"YES";
      }
      *(_DWORD *)buf = 138412546;
      uint64_t v13 = v24;
      char v69 = v24;
      char v70 = 2112;
      unsigned int v71 = v52;
      _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEFAULT,  "[WARN] A session exists, but it's with a device that doesn't support provider %@ or requires conversation relay %@ and device does not support GFT relay. Not starting a new session",  buf,  0x16u);
    }

    else
    {
      uint64_t v13 = v24;
    }

      double v25 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s dateStarted](v16, "dateStarted"));
      [v11 setDateStartedOutgoing:v25];
LABEL_17:

      goto LABEL_41;
    }

    char v33 = [v11 faceTimeIDStatus];
    uint64_t v34 = sub_1001704C4();
    id v35 = (os_log_s *)objc_claimAutoreleasedReturnValue(v34);
    if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR)) {
      sub_1002BA944();
    }

    if (v33 == 1) {
      uint64_t v36 = 531LL;
    }
    else {
      uint64_t v36 = 508LL;
    }
    [v11 setProviderFailureReasonIfNecessary:v36];
    if (v6)
    {
      id v37 = v11;
      __int128 v38 = 51LL;
LABEL_40:
      [v37 disconnectWithReason:v38];
      goto LABEL_41;
    }

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v19, a3);
  *a5 = v21;
  a5[1] = v22;
  a5[2] = v23;
  a5[3] = v24;
  a5[4] = v32;
  a5[5] = 0LL;
  a5[6] = v31;
  return result;
}

  sub_1001B0FF8();
}

    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v9);
    __break(1u);
    return;
  }

        int v18 = __clz(__rbit64(v16));
        uint64_t v19 = v18 + (v17 << 6);
        if (v19 == v15) {
          goto LABEL_32;
        }
        if (v19 < 0 || v19 >= v15) {
          goto LABEL_40;
        }
        id v20 = v8;
        unsigned __int8 v21 = v5;
        char v22 = a3;
        id v23 = *(void *)(*(void *)(v13 + 48) + 16 * v19 + 8);
        swift_bridgeObjectRetain(v23);
        swift_bridgeObjectRelease(v13);
        id v24 = String._bridgeToObjectiveC()();
        double v25 = (id)TUCopyIDSCanonicalAddressForDestinationID();

        if (v25)
        {
          id v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
          __int128 v28 = v27;
          swift_bridgeObjectRelease(v23);

          a3 = v22;
          if (v22)
          {
            __int128 v29 = v26 == a2 && v28 == v22;
            id v5 = v21;
            if (v29)
            {
              swift_bridgeObjectRelease(a3);
              swift_bridgeObjectRelease(v21);
              swift_unknownObjectRelease(v10);
              char v33 = v28;
LABEL_36:
              swift_bridgeObjectRelease(v33);
              return 1LL;
            }

            __int128 v30 = _stringCompareWithSmolCheck(_:_:expecting:)(v26, v28, a2, a3, 0LL);
            swift_unknownObjectRelease(v10);
            swift_bridgeObjectRelease(v28);
            uint64_t v8 = v20;
            uint64_t v6 = v38;
            int v9 = &selRef_chat_outputFrequencyLevelChangedTo_;
            if ((v30 & 1) != 0)
            {
              swift_bridgeObjectRelease(a3);
              char v33 = v5;
              goto LABEL_36;
            }
          }

          else
          {
            swift_unknownObjectRelease(v10);
            swift_bridgeObjectRelease(v28);
            id v5 = v21;
            uint64_t v8 = v20;
            uint64_t v6 = v38;
            int v9 = &selRef_chat_outputFrequencyLevelChangedTo_;
          }
        }

        else
        {
          swift_bridgeObjectRelease(v23);
          int v9 = &selRef_chat_outputFrequencyLevelChangedTo_;
          if (!v22)
          {
            swift_bridgeObjectRelease(0LL);
            swift_bridgeObjectRelease(v21);
            swift_unknownObjectRelease(v10);
            return 1LL;
          }

          a3 = v22;
          swift_unknownObjectRelease(v10);
          id v5 = v21;
          uint64_t v8 = v20;
          uint64_t v6 = v38;
        }

      id v23 = sub_1002810FC();
      id v24 = sub_1002811F4(v23);

      if ((v24 & 1) != 0)
      {
        double v25 = *(void *)(v2 + v13);
        id v26 = swift_bridgeObjectRetain(v25);
        id v27 = sub_100283930( v26,  a1,  (void (*)(void, BOOL, uint64_t))sub_1002734A0,  &qword_10044BBA8,  &OBJC_CLASS___TUAudioRoute_ptr);
        swift_bridgeObjectRelease(v25);
        if ((v27 & 1) == 0)
        {
          __int128 v28 = sub_100170614();
          __int128 v29 = static os_log_type_t.default.getter(v28);
          os_log(_:dso:log:type:_:)( "Clearing last user picked route",  31LL,  2LL,  &_mh_execute_header,  v28,  v29,  _swiftEmptyArrayStorage);

          __int128 v30 = *(void **)(v2 + v17);
          *(void *)(v2 + v17) = 0LL;
        }
      }

      goto LABEL_13;
    }

    if (v19) {
      goto LABEL_10;
    }
  }

  swift_bridgeObjectRelease(v1);
  return 0LL;
}

            id v10 = v12;
LABEL_7:
            unsigned int v80 = v10;
            uint64_t v81 = (v11 - 1) & v11;
            uint64_t v6 = __clz(__rbit64(v11)) + (v10 << 6);
            goto LABEL_3;
          }
        }
      }
    }

    double v25 = type metadata accessor for UUID(0LL);
    uint64_t result = (void (*)(uint64_t **))KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v25);
    __break(1u);
    return result;
  }

    uint64_t result = (unint64_t (*)(unint64_t))KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for NotificationType);
    __break(1u);
    return result;
  }

void sub_100038230(_Unwind_Exception *a1)
{
}

void sub_100038258(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v4 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Delayed downgrade triggered, checking if we're still eligible",  v4,  2u);
  }

  [WeakRetained setDowngradeToOneToOneAfterDelayBlock:0];
  [WeakRetained switchBackToOneToOneIfPossibleUsingDelay:0];
}

LABEL_7:
}

  id v16 = -[NSData copyWithZone:](self->_protoDTMFKey, "copyWithZone:", a3);
  uint64_t v17 = (void *)v6[30];
  v6[30] = v16;

  if ((*(_BYTE *)&self->_has & 8) != 0)
  {
    *((_DWORD *)v6 + 62) = self->_protoDisconnectedReason;
    *((_DWORD *)v6 + 100) |= 8u;
  }

  int v18 = -[NSString copyWithZone:](self->_oBSOLETEConferenceIdentifier, "copyWithZone:", a3);
  uint64_t v19 = (void *)v6[23];
  v6[23] = v18;

  if ((*((_BYTE *)&self->_has + 3) & 0x10) != 0)
  {
    *((_BYTE *)v6 + 39_Block_object_dispose(va, 8) = self->_protoVoicemail;
    *((_DWORD *)v6 + 100) |= 0x10000000u;
  }

  id v20 = -[NSString copyWithZone:](self->_callerNameFromNetwork, "copyWithZone:", a3);
  unsigned __int8 v21 = (void *)v6[3];
  v6[3] = v20;

  v166 = 0u;
  v167 = 0u;
  v164 = 0u;
  v165 = 0u;
  char v22 = self->_protoCalls;
  id v23 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v22,  "countByEnumeratingWithState:objects:count:",  &v164,  v177,  16LL);
  if (v23)
  {
    id v24 = v23;
    double v25 = *(void *)v165;
    do
    {
      id v26 = 0LL;
      do
      {
        if (*(void *)v165 != v25) {
          objc_enumerationMutation(v22);
        }
        id v27 = [*(id *)(*((void *)&v164 + 1) + 8 * (void)v26) copyWithZone:a3];
        [v6 addProtoCall:v27];

        id v26 = (char *)v26 + 1;
      }

      while (v24 != v26);
      id v24 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v22,  "countByEnumeratingWithState:objects:count:",  &v164,  v177,  16LL);
    }

    while (v24);
  }

  __int128 v28 = -[NSString copyWithZone:](self->_hardPauseDigits, "copyWithZone:", a3);
  __int128 v29 = (void *)v6[15];
  v6[15] = v28;

  __int128 v30 = self->_has;
  if ((*(_BYTE *)&v30 & 4) != 0)
  {
    *((_DWORD *)v6 + 32) = self->_hardPauseState;
    *((_DWORD *)v6 + 100) |= 4u;
    __int128 v30 = self->_has;
    if ((*(_WORD *)&v30 & 0x400) == 0)
    {
LABEL_20:
      if ((*(_BYTE *)&v30 & 0x40) == 0) {
        goto LABEL_21;
      }
      goto LABEL_120;
    }
  }

  else if ((*(_WORD *)&v30 & 0x400) == 0)
  {
    goto LABEL_20;
  }

  *((_DWORD *)v6 + 7_Block_object_dispose(va, 8) = self->_receivedMessageType;
  *((_DWORD *)v6 + 100) |= 0x400u;
  __int128 v30 = self->_has;
  if ((*(_BYTE *)&v30 & 0x40) == 0)
  {
LABEL_21:
    if ((*(_DWORD *)&v30 & 0x400000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }

LABEL_8:
      -[CSDIDSDualSession setEndedReason:](self, "setEndedReason:", v12, *(_OWORD *)v23, *(void *)&v23[16]);
      uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(-[CSDIDSDualSession delegate](self, "delegate"));
      objc_msgSend(v13, "session:endedWithReason:", self, -[CSDIDSDualSession endedReason](self, "endedReason"));

      return;
    case 0xDu:
    case 0xFu:
      uint64_t v17 = sub_1001704C4();
      id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v17);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        sub_1002B4074();
      }
      id v12 = 5LL;
      goto LABEL_7;
    case 0x1Du:
      unsigned __int8 v21 = sub_1001704C4();
      id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v21);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)id v23 = 138412546;
        *(void *)&v23[4] = self;
        *(_WORD *)&v23[12] = 1024;
        *(_DWORD *)&v23[14] = 29;
        _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "Session %@ appears to have ended with an accepted elsewhere reason: %d",  v23,  0x12u);
      }

      id v12 = 2LL;
      goto LABEL_7;
    case 0x1Eu:
      char v22 = sub_1001704C4();
      id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v22);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)id v23 = 138412546;
        *(void *)&v23[4] = self;
        *(_WORD *)&v23[12] = 1024;
        *(_DWORD *)&v23[14] = 30;
        _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "Session %@ appears to have ended with a declined elsewhere reason: %d",  v23,  0x12u);
      }

      id v12 = 3LL;
      goto LABEL_7;
    default:
      id v12 = 1LL;
      goto LABEL_8;
  }

LABEL_8:
LABEL_9:
  id v15 = (void *)objc_claimAutoreleasedReturnValue(-[CSDFaceTimeProviderDelegate faceTimeIDSProviderDelegate](self, "faceTimeIDSProviderDelegate"));
  id v16 = (void *)objc_claimAutoreleasedReturnValue([v7 callUUID]);
  uint64_t v17 = [v15 isManagingCallWithUUID:v16];

  if (v17)
  {
    int v18 = (void *)objc_claimAutoreleasedReturnValue(-[CSDFaceTimeProviderDelegate faceTimeIDSProviderDelegate](self, "faceTimeIDSProviderDelegate"));
    [v18 provider:v6 performSetMutedCallAction:v7];
  }

  uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(-[CSDFaceTimeProviderDelegate faceTimeIMAVProviderDelegate](self, "faceTimeIMAVProviderDelegate"));
  id v20 = (void *)objc_claimAutoreleasedReturnValue([v7 callUUID]);
  unsigned __int8 v21 = [v19 isManagingCallWithUUID:v20];

  if (v21)
  {
    char v22 = (void *)objc_claimAutoreleasedReturnValue(-[CSDFaceTimeProviderDelegate faceTimeIMAVProviderDelegate](self, "faceTimeIMAVProviderDelegate"));
    [v22 provider:v6 performSetMutedCallAction:v7];
  }

  id v23 = (void *)objc_claimAutoreleasedReturnValue( -[CSDFaceTimeProviderDelegate faceTimeConversationProviderDelegate]( self,  "faceTimeConversationProviderDelegate"));
  id v24 = (void *)objc_claimAutoreleasedReturnValue([v7 callUUID]);
  double v25 = [v23 isManagingCallWithUUID:v24];

  if (v25)
  {
    id v26 = (void *)objc_claimAutoreleasedReturnValue( -[CSDFaceTimeProviderDelegate faceTimeConversationProviderDelegate]( self,  "faceTimeConversationProviderDelegate"));
    [v26 provider:v6 performSetMutedCallAction:v7];
  }

  id v27 = (void *)objc_claimAutoreleasedReturnValue( -[CSDFaceTimeProviderDelegate groupFaceTimeServiceProviderDelegate]( self,  "groupFaceTimeServiceProviderDelegate"));
  __int128 v28 = (void *)objc_claimAutoreleasedReturnValue([v7 callUUID]);
  __int128 v29 = [v27 isManagingCallWithUUID:v28];

  if (v29)
  {
    __int128 v30 = (void *)objc_claimAutoreleasedReturnValue( -[CSDFaceTimeProviderDelegate groupFaceTimeServiceProviderDelegate]( self,  "groupFaceTimeServiceProviderDelegate"));
    [v30 provider:v6 performSetMutedCallAction:v7];
  }

  uint64_t v13 = 0LL;
LABEL_8:
  id v3 = -[NSString hash](self->_uUIDString, "hash");
  id v4 = -[NSString hash](self->_groupUUIDString, "hash");
  id v5 = -[NSString hash](self->_messagesGroupUUIDString, "hash");
  if ((*(_BYTE *)&self->_has & 0x10) != 0) {
    uint64_t v6 = 2654435761LL * self->_locallyCreated;
  }
  else {
    uint64_t v6 = 0LL;
  }
  uint64_t v7 = -[CSDMessagingHandle hash](self->_initiator, "hash");
  uint64_t v8 = -[CSDMessagingConversationMember hash](self->_localMember, "hash");
  int v9 = (unint64_t)-[NSMutableArray hash](self->_remoteMembers, "hash");
  id v10 = (unint64_t)-[NSMutableArray hash](self->_activeParticipants, "hash");
  if ((*(_BYTE *)&self->_has & 1) != 0) {
    id v11 = 2654435761LL * self->_avMode;
  }
  else {
    id v11 = 0LL;
  }
  return v14 ^ v15 ^ v13 ^ v3 ^ v4 ^ v5 ^ v6 ^ v7 ^ v8 ^ v9 ^ v10 ^ v11 ^ -[CSDMessagingConversationReport hash]( self->_reportData,  "hash");
}

  id v5 = 0LL;
LABEL_8:
  uint64_t v6 = -[CSDMessagingAVConferenceInviteData hash](self->_inviteData, "hash");
  if ((*(_BYTE *)&self->_has & 4) != 0)
  {
    uint64_t v7 = 2654435761LL * self->_oBSOLETEProtoMomentsAvailable;
    if ((*(_BYTE *)&self->_has & 0x10) != 0)
    {
LABEL_10:
      uint64_t v8 = 2654435761LL * self->_protoSenderMuteUplink;
      if ((*(_BYTE *)&self->_has & 0x20) != 0) {
        goto LABEL_11;
      }
LABEL_15:
      int v9 = 0LL;
      if ((*(_BYTE *)&self->_has & 8) != 0) {
        goto LABEL_12;
      }
LABEL_16:
      id v10 = 0LL;
      return v4 ^ v3 ^ v5 ^ v7 ^ v8 ^ v9 ^ v10 ^ v6 ^ -[NSString hash](self->_protoUpgradeSessionUUID, "hash");
    }
  }

  else
  {
    uint64_t v7 = 0LL;
    if ((*(_BYTE *)&self->_has & 0x10) != 0) {
      goto LABEL_10;
    }
  }

  uint64_t v8 = 0LL;
  if ((*(_BYTE *)&self->_has & 0x20) == 0) {
    goto LABEL_15;
  }
LABEL_11:
  int v9 = 2654435761LL * self->_protoShouldSuppressInCallUI;
  if ((*(_BYTE *)&self->_has & 8) == 0) {
    goto LABEL_16;
  }
LABEL_12:
  id v10 = 2654435761LL * self->_protoMomentsV2Available;
  return v4 ^ v3 ^ v5 ^ v7 ^ v8 ^ v9 ^ v10 ^ v6 ^ -[NSString hash](self->_protoUpgradeSessionUUID, "hash");
}

  id v16 = (void *)objc_claimAutoreleasedReturnValue(-[CSDAVCSession captureSessionQueue](self, "captureSessionQueue"));
  [v16 removeAllObjects];
}

  uint64_t v32 = 0LL;
LABEL_8:
  __int128 v31 = (unint64_t)-[NSMutableArray hash](self->_activeParticipants, "hash");
  __int128 v30 = -[NSString hash](self->_conversationGroupUUIDString, "hash");
  __int128 v29 = (unint64_t)-[NSMutableArray hash](self->_addedMembers, "hash");
  if ((*(_WORD *)&self->_has & 2) != 0) {
    __int128 v28 = 2654435761LL * self->_disconnectedReason;
  }
  else {
    __int128 v28 = 0LL;
  }
  id v27 = -[NSString hash](self->_protoUpgradeSessionUUID, "hash");
  id v26 = (unint64_t)-[NSMutableArray hash](self->_activitySessions, "hash");
  double v25 = -[NSString hash](self->_nickname, "hash");
  id v24 = -[CSDMessagingConversationLink hash](self->_link, "hash");
  id v23 = -[CSDMessagingConversationReport hash](self->_reportData, "hash");
  if ((*(_WORD *)&self->_has & 0x100) != 0) {
    char v22 = 2654435761LL * self->_isLetMeInApproved;
  }
  else {
    char v22 = 0LL;
  }
  unsigned __int8 v21 = -[CSDMessagingEncryptedConversationMessage hash](self->_encryptedMessage, "hash");
  id v20 = -[NSString hash](self->_letMeInDelegationHandle, "hash");
  uint64_t v19 = -[NSString hash](self->_letMeInDelegationUUID, "hash");
  if ((*(_WORD *)&self->_has & 4) != 0) {
    int v18 = 2654435761LL * self->_enclosedEncryptedType;
  }
  else {
    int v18 = 0LL;
  }
  uint64_t v17 = (unint64_t)-[NSMutableArray hash](self->_invitationPreferences, "hash");
  id v16 = (unint64_t)-[NSMutableArray hash](self->_removedMembers, "hash");
  id v15 = (unint64_t)-[NSMutableArray hash](self->_lightweightMembers, "hash");
  id v4 = (unint64_t)-[NSMutableArray hash](self->_activeLightweightParticipants, "hash");
  if ((*(_WORD *)&self->_has & 0x80) != 0) {
    id v5 = 2654435761LL * self->_guestModeEnabled;
  }
  else {
    id v5 = 0LL;
  }
  uint64_t v6 = -[NSString hash](self->_highlightIdentifier, "hash");
  uint64_t v7 = -[CSDMessagingConversationJoinedMetadata hash](self->_joinedMetadata, "hash");
  uint64_t v8 = -[CSDMessagingConversationActivitySession hash](self->_stagedActivitySession, "hash");
  int v9 = (__int16)self->_has;
  if ((v9 & 1) != 0)
  {
    id v10 = 2654435761LL * self->_avMode;
    if ((v9 & 0x10) != 0) {
      goto LABEL_22;
    }
  }

  else
  {
    id v10 = 0LL;
    if ((v9 & 0x10) != 0)
    {
LABEL_22:
      id v11 = 2654435761LL * self->_requestBlobRecoveryOptions;
      goto LABEL_25;
    }
  }

  id v11 = 0LL;
LABEL_25:
  id v12 = -[CSDMessagingScreenShareContext hash](self->_screenShareContext, "hash");
  if ((*(_WORD *)&self->_has & 8) != 0) {
    uint64_t v13 = 2654435761LL * self->_presentationMode;
  }
  else {
    uint64_t v13 = 0LL;
  }
  return v33 ^ v34 ^ v32 ^ v31 ^ v30 ^ v29 ^ v28 ^ v27 ^ v26 ^ v25 ^ v24 ^ v23 ^ v22 ^ v21 ^ v20 ^ v19 ^ v18 ^ v17 ^ v16 ^ v15 ^ v4 ^ v5 ^ v6 ^ v7 ^ v8 ^ v10 ^ v11 ^ v12 ^ v13;
}

  __break(1u);
}

    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }

  if (v4 < 0xFFFFFFFF)
  {
    swift_release(a1[1]);
    goto LABEL_7;
  }

  id v5 = a2[1];
  uint64_t v6 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  swift_retain(v5);
  swift_release(v6);
  return a1;
}

    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }

  if (v4 < 0xFFFFFFFF)
  {
    swift_release(a1[1]);
    goto LABEL_7;
  }

  id v5 = a2[1];
  uint64_t v6 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  swift_release(v6);
  return a1;
}

    *a1 = v4;
    return a1;
  }

  if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    id v4 = *a2;
    goto LABEL_7;
  }

  *a1 = v4;
  id v5 = v4;

  return a1;
}

void sub_10003A300( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, id location)
{
}

void sub_10003A31C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) pendingConversationParticipantsByIdentifier]);
    id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 objectForKey:*(void *)(a1 + 40)]);

    id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) activeParticipantDestinationsByIdentifier]);
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKey:*(void *)(a1 + 40)]);

    if (v4 && v6)
    {
      [*(id *)(a1 + 32) addActiveParticipant:*(void *)(a1 + 48)];
      uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) pendingConversationParticipantsByIdentifier]);
      [v7 removeObjectForKey:*(void *)(a1 + 40)];
    }

    else
    {
      id v8 = sub_1001704C4();
      int v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        id v10 = @"YES";
        uint64_t v11 = *(void *)(a1 + 40);
        if (v4) {
          id v12 = @"YES";
        }
        else {
          id v12 = @"NO";
        }
        int v13 = 138412802;
        uint64_t v14 = v11;
        __int16 v15 = 2112;
        if (!v6) {
          id v10 = @"NO";
        }
        id v16 = v12;
        __int16 v17 = 2112;
        int v18 = v10;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "Not adding the participant: %@, participantPendingToBeAdded: %@, participantIsInActiveList: %@",  (uint8_t *)&v13,  0x20u);
      }
    }
  }
}

LABEL_71:
}

  PBDataWriterWriteBOOLField(v5, self->_protoNeedsManualInCallSounds, 14LL);
  id v12 = self->_has;
  if ((*(_BYTE *)&v12 & 0x10) == 0)
  {
LABEL_23:
    if ((*(_WORD *)&v12 & 0x100) == 0) {
      goto LABEL_24;
    }
    goto LABEL_73;
  }

  PBDataWriterWriteUint32Field(v5, self->_sharePlayProtocolVersion, 17LL);
  if ((*(_DWORD *)&self->_has & 0x10) != 0) {
LABEL_47:
  }
    PBDataWriterWriteBOOLField(v5, self->_isGFTDowngradeToOneToOneAvailable, 18LL);
LABEL_48:
  participantAssociation = self->_participantAssociation;
  if (participantAssociation) {
    PBDataWriterWriteSubmessage(v5, participantAssociation, 19LL);
  }
  if ((*((_BYTE *)&self->_has + 1) & 0x10) != 0) {
    PBDataWriterWriteBOOLField(v5, self->_isUPlusNDowngradeAvailable, 20LL);
  }
  collaborationIdentifier = self->_collaborationIdentifier;
  if (collaborationIdentifier) {
    PBDataWriterWriteStringField(v5, collaborationIdentifier, 21LL);
  }
  __int128 v30 = self->_has;
  if ((*(_DWORD *)&v30 & 0x10000) != 0)
  {
    PBDataWriterWriteBOOLField(v5, self->_supportsLeaveContext, 22LL);
    __int128 v30 = self->_has;
    if ((*(_WORD *)&v30 & 0x4000) == 0)
    {
LABEL_56:
      if ((*(_WORD *)&v30 & 0x800) == 0) {
        goto LABEL_57;
      }
      goto LABEL_75;
    }
  }

  else if ((*(_WORD *)&v30 & 0x4000) == 0)
  {
    goto LABEL_56;
  }

  PBDataWriterWriteBOOLField(v5, self->_isUPlusOneScreenSharingAvailable, 23LL);
  __int128 v30 = self->_has;
  if ((*(_WORD *)&v30 & 0x800) == 0)
  {
LABEL_57:
    if ((*(_WORD *)&v30 & 0x2000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_76;
  }

id sub_10003C714(uint64_t a1, void *a2)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a2 handle]);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) handle]);
  id v5 = [v3 isEquivalentToHandle:v4];

  return v5;
}

id sub_10003D04C(uint64_t a1, void *a2)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a2 handle]);
  id v4 = [v3 isEquivalentToHandle:*(void *)(a1 + 32)];

  return v4;
}

void sub_10004104C(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    if (*(_BYTE *)(a1 + 40)) {
      id v4 = @"YES";
    }
    else {
      id v4 = @"NO";
    }
    *(_DWORD *)buf = 138412290;
    double v25 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "sharePlayAllowedStateChanged: %@", buf, 0xCu);
  }

  [*(id *)(a1 + 32) updateScreenEnabledForRemoteParticipants:*(unsigned __int8 *)(a1 + 40)];
  if (!*(_BYTE *)(a1 + 40) && [*(id *)(a1 + 32) isScreenEnabled])
  {
    id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) tuConversation]);
    __int128 v19 = 0u;
    __int128 v20 = 0u;
    __int128 v21 = 0u;
    __int128 v22 = 0u;
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v5 activitySessions]);
    id v7 = [v6 countByEnumeratingWithState:&v19 objects:v23 count:16];
    if (v7)
    {
      id v8 = v7;
      uint64_t v9 = *(void *)v20;
      while (2)
      {
        for (i = 0LL; i != v8; i = (char *)i + 1)
        {
          if (*(void *)v20 != v9) {
            objc_enumerationMutation(v6);
          }
          uint64_t v11 = *(void **)(*((void *)&v19 + 1) + 8LL * (void)i);
          id v12 = (void *)objc_claimAutoreleasedReturnValue([v11 activity]);
          unsigned __int8 v13 = [v12 isScreenSharingActivity];

          if ((v13 & 1) != 0)
          {
            id v15 = v11;
            uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v15 activity]);

            if (v14)
            {
              id v16 = *(void **)(a1 + 32);
              v17[0] = _NSConcreteStackBlock;
              v17[1] = 3221225472LL;
              v17[2] = sub_10004128C;
              v17[3] = &unk_1003D7758;
              v17[4] = v16;
              id v15 = v15;
              id v18 = v15;
              [v16 postUserNotificationForUnsupportedScreenSharingActivity:v14 alternateReponseHandler:v17];
            }

            goto LABEL_19;
          }
        }

        id v8 = [v6 countByEnumeratingWithState:&v19 objects:v23 count:16];
        if (v8) {
          continue;
        }
        break;
      }
    }

    uint64_t v14 = 0LL;
    id v15 = 0LL;
LABEL_19:
  }

void sub_10004128C(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Stopping screen on local device since route does not support share play",  buf,  2u);
  }

  id v4 = *(void **)(a1 + 32);
  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[TUCallScreenShareAttributes defaultAttributes]( &OBJC_CLASS___TUCallScreenShareAttributes,  "defaultAttributes"));
  [v4 setScreenEnabled:0 attributes:v5];

  id v6 = sub_1001704C4();
  id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v10 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Leaving activity session for screen sharing since route does not support share play",  v10,  2u);
  }

  id v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) activitySessionManager]);
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) UUID]);
  [v8 leaveActivitySessionWithUUID:v9];
}

void sub_100041550(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (![v3 response])
  {
    id v4 = sub_1001704C4();
    id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "user requested to switch to speaker route",  buf,  2u);
    }

    id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) audioRoutePolicyManager]);
    [v6 switchToSpeakerRouteIfNecessary];
  }

  if ([v3 response] == (id)1)
  {
    id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) queue]);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_10004165C;
    block[3] = &unk_1003D7E90;
    id v9 = *(id *)(a1 + 40);
    dispatch_async(v7, block);
  }
}

uint64_t sub_10004165C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_100041E00(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) remoteParticipantForIdentifier:a2]);
  id v4 = (id)v3;
  if (!v3) {
    uint64_t v3 = *(void *)(a1 + 40);
  }
  (*(void (**)(void, uint64_t))(*(void *)(a1 + 48) + 16LL))(*(void *)(a1 + 48), v3);
}

void sub_1000434DC(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
}

  ;
}

void sub_1000434FC( void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

  ;
}

  ;
}

void sub_10004359C(uint64_t a1)
{
  id v1 = [objc_alloc(*(Class *)(a1 + 32)) initWithName:@"com.apple.private.alloy.phonecontinuity"];
  id v2 = (void *)qword_10044CEC0;
  qword_10044CEC0 = (uint64_t)v1;
}

LABEL_8:
}

  -[TUDialRequest setSOS:](v5, "setSOS:", -[CSDMessagingRelayMessage isSOS](self, "isSOS"));
  id v10 = (void *)objc_claimAutoreleasedReturnValue(-[CSDMessagingRelayMessage uniqueProxyIdentifier](self, "uniqueProxyIdentifier"));
  -[TUDialRequest setUniqueProxyIdentifier:](v5, "setUniqueProxyIdentifier:", v10);

  -[TUDialRequest setEndpointOnCurrentDevice:](v5, "setEndpointOnCurrentDevice:", 0LL);
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(-[CSDMessagingRelayMessage localSenderIdentityUUID](self, "localSenderIdentityUUID"));
  -[TUDialRequest setLocalSenderIdentityUUID:](v5, "setLocalSenderIdentityUUID:", v11);

  id v12 = (void *)objc_claimAutoreleasedReturnValue(-[CSDMessagingRelayMessage localSenderIdentityAccountUUID](self, "localSenderIdentityAccountUUID"));
  -[TUDialRequest setLocalSenderIdentityAccountUUID:](v5, "setLocalSenderIdentityAccountUUID:", v12);

  unsigned __int8 v13 = (void *)objc_claimAutoreleasedReturnValue(-[CSDMessagingRelayMessage localSenderIdentityUUID](self, "localSenderIdentityUUID"));
  if (v13)
  {
  }

  else
  {
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(-[CSDMessagingRelayMessage localSenderIdentityAccountUUID](self, "localSenderIdentityAccountUUID"));

    if (v14)
    {
      id v15 = sub_1001704C4();
      id v16 = (os_log_s *)objc_claimAutoreleasedReturnValue(v15);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
      {
        __int16 v17 = (void *)objc_claimAutoreleasedReturnValue( -[CSDMessagingRelayMessage localSenderIdentityAccountUUID]( self,  "localSenderIdentityAccountUUID"));
        double v25 = 138412290;
        id v26 = v17;
        _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "Fetching localSenderIdenity for localSenderIdentityAccountUUID %@",  (uint8_t *)&v25,  0xCu);
      }

      id v18 = (void *)objc_claimAutoreleasedReturnValue(+[TUCallCenter sharedInstance](&OBJC_CLASS___TUCallCenter, "sharedInstance"));
      __int128 v19 = (void *)objc_claimAutoreleasedReturnValue([v18 providerManager]);
      __int128 v20 = (void *)objc_claimAutoreleasedReturnValue([v19 telephonyProvider]);
      __int128 v21 = (void *)objc_claimAutoreleasedReturnValue(-[CSDMessagingRelayMessage localSenderIdentityAccountUUID](self, "localSenderIdentityAccountUUID"));
      __int128 v22 = (void *)objc_claimAutoreleasedReturnValue([v20 senderIdentityForAccountUUID:v21]);
      id v23 = (void *)objc_claimAutoreleasedReturnValue([v22 UUID]);
      -[TUDialRequest setLocalSenderIdentityUUID:](v5, "setLocalSenderIdentityUUID:", v23);
    }
  }

  -[TUDialRequest setTtyType:]( v5,  "setTtyType:",  TUDialRequestTTYTypeForTUCallTTYType(-[CSDMessagingRelayMessage ttyType](self, "ttyType")));
  -[TUDialRequest setOriginatingUIType:]( v5,  "setOriginatingUIType:",  -[CSDMessagingRelayMessage originatingUIType](self, "originatingUIType"));
  id v24 = (void *)objc_claimAutoreleasedReturnValue(-[CSDMessagingRelayMessage contactIdentifier](self, "contactIdentifier"));
  -[TUDialRequest setContactIdentifier:](v5, "setContactIdentifier:", v24);

  return v5;
}

  unsigned __int8 v13 = -[NSString copyWithZone:](self->_ringtoneSoundURLString, "copyWithZone:", a3);
  uint64_t v14 = (void *)v5[14];
  v5[14] = v13;

  id v15 = -[NSString copyWithZone:](self->_originalRingtoneSoundURLString, "copyWithZone:", a3);
  id v16 = (void *)v5[12];
  v5[12] = v15;

  unint64_t v58 = 0u;
  id v59 = 0u;
  id v56 = 0u;
  id v57 = 0u;
  __int16 v17 = self->_handoffIdentifiers;
  id v18 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v17,  "countByEnumeratingWithState:objects:count:",  &v56,  v63,  16LL);
  if (v18)
  {
    __int128 v19 = v18;
    __int128 v20 = *(void *)v57;
    do
    {
      for (i = 0LL; i != v19; i = (char *)i + 1)
      {
        if (*(void *)v57 != v20) {
          objc_enumerationMutation(v17);
        }
        __int128 v22 = [*(id *)(*((void *)&v56 + 1) + 8 * (void)i) copyWithZone:a3];
        [v5 addHandoffIdentifier:v22];
      }

      __int128 v19 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v17,  "countByEnumeratingWithState:objects:count:",  &v56,  v63,  16LL);
    }

    while (v19);
  }

  PBRepeatedUInt32Copy(v5 + 1, &self->_protoSupportedHandleTypes);
  id v54 = 0u;
  id v55 = 0u;
  char v52 = 0u;
  id v53 = 0u;
  id v23 = self->_emergencyLabeledHandles;
  id v24 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v23,  "countByEnumeratingWithState:objects:count:",  &v52,  v62,  16LL);
  if (v24)
  {
    double v25 = v24;
    id v26 = *(void *)v53;
    do
    {
      for (j = 0LL; j != v25; j = (char *)j + 1)
      {
        if (*(void *)v53 != v26) {
          objc_enumerationMutation(v23);
        }
        __int128 v28 = [*(id *)(*((void *)&v52 + 1) + 8 * (void)j) copyWithZone:a3];
        [v5 addEmergencyLabeledHandles:v28];
      }

      double v25 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v23,  "countByEnumeratingWithState:objects:count:",  &v52,  v62,  16LL);
    }

    while (v25);
  }

  if ((*(_BYTE *)&self->_has & 0x20) != 0)
  {
    *((_BYTE *)v5 + 123) = self->_supportsRecents;
    *((_BYTE *)v5 + 128) |= 0x20u;
  }

  unsigned int v50 = 0u;
  char v51 = 0u;
  id v48 = 0u;
  id v49 = 0u;
  __int128 v29 = self->_prioritizedSenderIdentities;
  __int128 v30 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v29,  "countByEnumeratingWithState:objects:count:",  &v48,  v61,  16LL);
  if (v30)
  {
    __int128 v31 = v30;
    uint64_t v32 = *(void *)v49;
    do
    {
      for (k = 0LL; k != v31; k = (char *)k + 1)
      {
        if (*(void *)v49 != v32) {
          objc_enumerationMutation(v29);
        }
        uint64_t v34 = [*(id *)(*((void *)&v48 + 1) + 8 * (void)k) copyWithZone:a3];
        [v5 addPrioritizedSenderIdentities:v34];
      }

      __int128 v31 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v29,  "countByEnumeratingWithState:objects:count:",  &v48,  v61,  16LL);
    }

    while (v31);
  }

  uint64_t v46 = 0u;
  uint64_t v47 = 0u;
  __int16 v44 = 0u;
  uint64_t v45 = 0u;
  id v35 = self->_emergencyHandles;
  uint64_t v36 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v35,  "countByEnumeratingWithState:objects:count:",  &v44,  v60,  16LL);
  if (v36)
  {
    id v37 = v36;
    __int128 v38 = *(void *)v45;
    do
    {
      for (m = 0LL; m != v37; m = (char *)m + 1)
      {
        if (*(void *)v45 != v38) {
          objc_enumerationMutation(v35);
        }
        __int128 v40 = objc_msgSend(*(id *)(*((void *)&v44 + 1) + 8 * (void)m), "copyWithZone:", a3, (void)v44);
        [v5 addEmergencyHandles:v40];
      }

      id v37 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v35,  "countByEnumeratingWithState:objects:count:",  &v44,  v60,  16LL);
    }

    while (v37);
  }

  __int128 v41 = -[NSString copyWithZone:](self->_bundleIdentifier, "copyWithZone:", a3);
  uint64_t v42 = (void *)v5[4];
  v5[4] = v41;

  return v5;
}

  __int128 v21 = -[CSDIDSDualSessionProvider initWithSession:queue:]( objc_alloc(&OBJC_CLASS___CSDIDSDualSessionProvider),  "initWithSession:queue:",  v15,  v11);

  return v21;
}

    id v7 = 0;
    goto LABEL_9;
  }

  if ((*((_BYTE *)v4 + 28) & 1) != 0) {
    goto LABEL_8;
  }
LABEL_14:
  preferredSceneSessionRole = self->_preferredSceneSessionRole;
  else {
    id v7 = 1;
  }
LABEL_9:

  return v7;
}

    LOBYTE(v12) = 0;
LABEL_13:

    goto LABEL_14;
  }

  if (v10 == v6)
  {
    id v9 = (void *)objc_claimAutoreleasedReturnValue(-[CSDFaceTimeProviderDelegate faceTimeIDSProviderDelegate](self, "faceTimeIDSProviderDelegate"));
    id v10 = v9;
    goto LABEL_7;
  }

  uint64_t v11 = (id)objc_claimAutoreleasedReturnValue( -[CSDFaceTimeProviderDelegate faceTimeConversationProviderDelegate]( self,  "faceTimeConversationProviderDelegate"));

  if (v11 == v6)
  {
    id v10 = (id)objc_claimAutoreleasedReturnValue(-[CSDFaceTimeProviderDelegate faceTimeIDSProviderDelegate](self, "faceTimeIDSProviderDelegate"));
    if (([v10 isManagingCallWithUUID:v7] & 1) == 0)
    {
      unsigned __int8 v13 = (void *)objc_claimAutoreleasedReturnValue(-[CSDFaceTimeProviderDelegate faceTimeIMAVProviderDelegate](self, "faceTimeIMAVProviderDelegate"));
      goto LABEL_12;
    }

    goto LABEL_8;
  }

  LOBYTE(v12) = 0;
LABEL_14:

  return v12;
}

    goto LABEL_23;
  }

  objc_initWeak(&location, *(id *)(a1 + 32));
  id v37 = _NSConcreteStackBlock;
  __int128 v38 = 3221225472LL;
  __int128 v39 = sub_1000E8988;
  __int128 v40 = &unk_1003D9D58;
  objc_copyWeak(&v44, &location);
  uint64_t v11 = v3;
  __int128 v41 = v11;
  uint64_t v45 = *(_BYTE *)(a1 + 56);
  uint64_t v42 = *(id *)(a1 + 48);
  uint64_t v43 = *(id *)(a1 + 40);
  id v12 = objc_retainBlock(&v37);
  if (!*(_BYTE *)(a1 + 56))
  {
    __int128 v21 = sub_1001704C4();
    __int128 v22 = (os_log_s *)objc_claimAutoreleasedReturnValue(v21);
    if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEFAULT,  "Removing all pending screenEnabled blocks since screenEnabled=NO",  buf,  2u);
    }

    id v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "screenCaptureQueue", v37, v38, v39, v40, v41, v42));
    [v23 setObject:0 forKeyedSubscript:*(void *)(a1 + 40)];

    goto LABEL_21;
  }

  unsigned __int8 v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "screenCaptureQueue", v37, v38, v39, v40));
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v13 objectForKeyedSubscript:*(void *)(a1 + 40)]);
  id v15 = v14 == 0LL;

  if (v15)
  {
    id v24 = (void *)objc_claimAutoreleasedReturnValue([v11 localParticipant]);
    double v25 = [v24 audioVideoMode] == 0;

    if (v25)
    {
      id v26 = sub_1001704C4();
      id v27 = (os_log_s *)objc_claimAutoreleasedReturnValue(v26);
      if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_DEFAULT,  "Upgrading to Audio mode since screenEnabled is YES",  buf,  2u);
      }

      __int128 v28 = *(void **)(a1 + 32);
      __int128 v29 = (void *)objc_claimAutoreleasedReturnValue([v11 UUID]);
      [v28 setLocalParticipantAudioVideoMode:1 forConversationUUID:v29];

      __int128 v30 = objc_retainBlock(v12);
      __int128 v31 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) screenCaptureQueue]);
      [v31 setObject:v30 forKeyedSubscript:*(void *)(a1 + 40)];

      uint64_t v32 = sub_1001704C4();
      char v33 = (os_log_s *)objc_claimAutoreleasedReturnValue(v32);
      if (os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v34 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) screenCaptureQueue]);
        id v35 = (void *)objc_claimAutoreleasedReturnValue([v34 objectForKeyedSubscript:*(void *)(a1 + 40)]);
        uint64_t v36 = objc_retainBlock(v35);
        *(_DWORD *)buf = 138412290;
        id v48 = v36;
        _os_log_impl( (void *)&_mh_execute_header,  v33,  OS_LOG_TYPE_DEFAULT,  "Queued up screenEnable request: %@",  buf,  0xCu);
      }

      goto LABEL_22;
    }
}

  if ((v8[2](v8, v13) & 1) == 0)
  {
    __int128 v28 = sub_1001704C4();
    __int128 v29 = (os_log_s *)objc_claimAutoreleasedReturnValue(v28);
    if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR)) {
      sub_1002B6D60();
    }

    if (a5)
    {
      __int128 v22 = TUScreenSharingRequestErrorDomain;
      id v23 = 3LL;
      goto LABEL_27;
    }

    id v7 = 0;
  }
}

  -[CSDUserActivity setDynamicIdentifier:](v13, "setDynamicIdentifier:", v10);
  __int128 v19 = (void *)objc_claimAutoreleasedReturnValue(-[CSDUserActivity userActivity](v13, "userActivity"));
  [v19 setUserInfo:v12];

  -[CSDUserActivity setOriginatingDeviceType:](v13, "setOriginatingDeviceType:", v11);
  return v13;
}

    if (v15) {
      v15[2](v15, v23, 1LL);
    }
    goto LABEL_10;
  }

  id v26 = sub_1001704C4();
  id v27 = (os_log_s *)objc_claimAutoreleasedReturnValue(v26);
  if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
  {
    __int128 v28 = (void *)objc_claimAutoreleasedReturnValue(-[CSDRelayIDSSessionMessenger currentSession](self, "currentSession"));
    *(_DWORD *)buf = 138412290;
    char v52 = v28;
    _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "A session exists: %@", buf, 0xCu);
  }

  __int128 v29 = (void *)objc_claimAutoreleasedReturnValue(-[CSDRelayIDSSessionMessenger currentSession](self, "currentSession"));
  __int128 v30 = [v29 remoteProtocolVersion];

  __int128 v31 = sub_1001704C4();
  uint64_t v32 = (os_log_s *)objc_claimAutoreleasedReturnValue(v31);
  char v33 = os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT);
  if (v30 > 0)
  {
    id v48 = v14;
    if (v33)
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_DEFAULT,  "Starting a new session to the destination of the device with an active session",  buf,  2u);
    }

    uint64_t v34 = (void *)objc_claimAutoreleasedReturnValue(-[CSDRelayIDSSessionMessenger deviceWithActiveSession](self, "deviceWithActiveSession"));
    id v35 = (void *)objc_claimAutoreleasedReturnValue([v34 destination]);

    if (!v35)
    {
      uint64_t v46 = sub_1001704C4();
      uint64_t v47 = (os_log_s *)objc_claimAutoreleasedReturnValue(v46);
      if (os_log_type_enabled(v47, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v47,  OS_LOG_TYPE_DEFAULT,  "[WARN] Cannot start a new session, no valid destination",  buf,  2u);
      }

      id v23 = 0LL;
      id v24 = 0LL;
      goto LABEL_8;
    }

    uint64_t v36 = (void *)objc_claimAutoreleasedReturnValue(-[CSDRelayIDSSessionMessenger deviceWithActiveSession](self, "deviceWithActiveSession"));
    id v37 = (void *)objc_claimAutoreleasedReturnValue([v36 destination]);
    __int128 v38 = a6;
    __int128 v39 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithObject:](&OBJC_CLASS___NSSet, "setWithObject:", v37));
    id v24 = (void *)objc_claimAutoreleasedReturnValue( -[CSDRelayIDSSessionMessenger _createSessionToDestinations:]( self,  "_createSessionToDestinations:",  v39));

    a6 = v38;
    uint64_t v14 = v48;
    goto LABEL_23;
  }

  if (v33)
  {
    *(_WORD *)buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_DEFAULT,  "Sending the message through the existing session",  buf,  2u);
  }

  uint64_t v43 = (void *)objc_claimAutoreleasedReturnValue(-[CSDRelayIDSSessionMessenger currentSession](self, "currentSession"));
  [v43 addIdentifiers:v13];

  __int16 v44 = (void *)objc_claimAutoreleasedReturnValue(-[CSDRelayIDSSessionMessenger currentSession](self, "currentSession"));
  uint64_t v45 = (void *)objc_claimAutoreleasedReturnValue([v12 data]);
  v49[0] = _NSConcreteStackBlock;
  v49[1] = 3221225472LL;
  v49[2] = sub_10018A664;
  v49[3] = &unk_1003DC208;
  unsigned int v50 = v15;
  [v44 sendData:v45 waitUntilConnected:1 completion:v49];

  id v24 = 0LL;
  id v15 = 0LL;
LABEL_10:
}
}

  sub_1002734A0(0LL, (v37 & 0xC000000000000001LL) == 0, v37);
  if ((v37 & 0xC000000000000001LL) != 0) {
    __int128 v38 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v37);
  }
  else {
    __int128 v38 = *(id *)(v37 + 32);
  }
  __int128 v39 = v38;
  swift_bridgeObjectRelease(v37);
  __int128 v40 = [v39 identifier];
  v372 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
  id v37 = v41;

  uint64_t v42 = [(id)objc_opt_self(CNContactFormatter) stringFromContact:v39 style:0];
  uint64_t v43 = (unint64_t)v42;
  if (v42)
  {
    __int16 v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
    uint64_t v46 = v45;
    swift_bridgeObjectRelease(v34);

    uint64_t v43 = v46;
    uint64_t v47 = HIBYTE(v46) & 0xF;
    if ((v46 & 0x2000000000000000LL) == 0) {
      uint64_t v47 = v44 & 0xFFFFFFFFFFFFLL;
    }
    if (v47) {
      goto LABEL_22;
    }
  }

  else
  {
    swift_bridgeObjectRelease(v34);

    __int16 v44 = 0LL;
  }

  __break(1u);
  return result;
}

  __break(1u);
}

    id v18 = v16;
    goto LABEL_9;
  }

  id v1 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "tu_defaults");
  id v2 = sub_1001D9318();
  uint64_t v3 = [v1 BOOLForKey:v2 withDefault:0];

  if ((v3 & 1) != 0)
  {
    id v7 = (os_log_s *)Logger.logObject.getter(v4, v5, v6);
    id v9 = static os_log_type_t.error.getter(v7, v8);
    if (os_log_type_enabled(v7, v9))
    {
      id v10 = (uint8_t *)sub_1001B0E78(2LL);
      *(_WORD *)id v10 = 0;
      sub_1001B0E60((uint64_t)v10);
    }

    uint64_t v11 = [(id)objc_opt_self(NSFileManager) defaultManager];
    URL._bridgeToObjectiveC()(v12);
    uint64_t v14 = v13;
    *(void *)(v0 + 136) = 0LL;
    id v15 = [v11 removeItemAtURL:v13 error:v0 + 136];

    id v16 = *(void **)(v0 + 136);
    if (!v15) {
      goto LABEL_6;
    }
    goto LABEL_8;
  }

  id v24 = (void *)objc_opt_self(&OBJC_CLASS___IMUserNotification);
  double v25 = sub_1001D9318();
  id v26 = sub_100299D74( (uint64_t)v25,  0xD000000000000018LL,  0x8000000100377200LL,  0xD000000000000058LL,  0x8000000100377220LL,  0x52206120656C6946LL,  0xEC00000072616461LL,  0x7373696D736944LL,  0xE700000000000000LL,  0LL,  v24);

  if (v26)
  {
    id v27 = *(void *)(v0 + 272);
    __int16 v44 = *(void *)(v0 + 232);
    uint64_t v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 248);
    __int128 v28 = *(void *)(v0 + 216);
    uint64_t v46 = *(void *)(v0 + 208);
    __int128 v30 = *(void *)(v0 + 192);
    __int128 v29 = *(void *)(v0 + 200);
    __int128 v31 = *(void *)(v0 + 184);
    _bridgeAnyObjectToAny(_:)((void *)(v0 + 16), v26);
    swift_unknownObjectRelease(v26);
    sub_1001B03EC((_OWORD *)(v0 + 16), (_OWORD *)(v0 + 48));
    uint64_t v32 = sub_1001B4B94(0LL, &qword_10044C218, &OBJC_CLASS___IMUserNotification_ptr);
    swift_dynamicCast(v0 + 128, v0 + 48, (char *)&type metadata for Any + 8, v32, 7LL);
    char v33 = *(void **)(v0 + 128);
    [v33 setUsesNotificationCenter:0];
    uint64_t v34 = type metadata accessor for TaskPriority(0LL);
    id v35 = v31;
    sub_10027E070(v31, v36, v37, v34);
    v45(v28, v44, v30);
    __int128 v38 = *(unsigned __int8 *)(v29 + 80);
    __int128 v39 = (v38 + 48) & ~v38;
    __int128 v40 = (char *)swift_allocObject(&unk_1003E6118, v39 + v46, v38 | 7);
    *((void *)v40 + 2) = 0LL;
    *((void *)v40 + 3) = 0LL;
    *((void *)v40 + 4) = v33;
    *((void *)v40 + 5) = v27;
    (*(void (**)(char *, uint64_t, uint64_t))(v29 + 32))(&v40[v39], v28, v30);
    __int128 v41 = v33;
    swift_errorRetain(v27);
    uint64_t v42 = sub_100298CA4(v35, (uint64_t)&unk_10044C228, (uint64_t)v40);
    uint64_t v43 = swift_release(v42);
    swift_willThrow(v43);

    goto LABEL_12;
  }

  __break(1u);
}

BOOL sub_100043C10(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0LL;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1LL || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        unint64_t v6 = 0LL;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0LL;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      break;
    }
    switch((v6 >> 3))
    {
      case 1u:
        char v12 = 0;
        unsigned int v13 = 0;
        uint64_t v14 = 0LL;
        *(_BYTE *)(a1 + 16) |= 8u;
        while (1)
        {
          unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v15 == -1LL || v15 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            id v18 = &OBJC_IVAR___CSDMessagingCallModel__supportsHolding;
            goto LABEL_76;
          }

          char v16 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
          v14 |= (unint64_t)(v16 & 0x7F) << v12;
          if ((v16 & 0x80) == 0) {
            break;
          }
          v12 += 7;
          BOOL v17 = v13++ > 8;
          if (v17)
          {
            uint64_t v14 = 0LL;
            id v18 = &OBJC_IVAR___CSDMessagingCallModel__supportsHolding;
            goto LABEL_79;
          }
        }

        id v18 = &OBJC_IVAR___CSDMessagingCallModel__supportsHolding;
        goto LABEL_77;
      case 2u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v14 = 0LL;
        *(_BYTE *)(a1 + 16) |= 4u;
        while (2)
        {
          unint64_t v21 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v21 == -1LL || v21 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            id v18 = &OBJC_IVAR___CSDMessagingCallModel__supportsGrouping;
            goto LABEL_76;
          }

          char v22 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v21);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v21 + 1;
          v14 |= (unint64_t)(v22 & 0x7F) << v19;
          if (v22 < 0)
          {
            v19 += 7;
            BOOL v17 = v20++ > 8;
            if (v17)
            {
              uint64_t v14 = 0LL;
              id v18 = &OBJC_IVAR___CSDMessagingCallModel__supportsGrouping;
              goto LABEL_79;
            }

            continue;
          }

          break;
        }

        id v18 = &OBJC_IVAR___CSDMessagingCallModel__supportsGrouping;
        goto LABEL_77;
      case 3u:
        char v31 = 0;
        unsigned int v32 = 0;
        uint64_t v14 = 0LL;
        *(_BYTE *)(a1 + 16) |= 0x40u;
        while (2)
        {
          unint64_t v33 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v33 == -1LL || v33 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            id v18 = &OBJC_IVAR___CSDMessagingCallModel__supportsUngrouping;
            goto LABEL_76;
          }

          char v34 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v33);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v33 + 1;
          v14 |= (unint64_t)(v34 & 0x7F) << v31;
          if (v34 < 0)
          {
            v31 += 7;
            BOOL v17 = v32++ > 8;
            if (v17)
            {
              uint64_t v14 = 0LL;
              id v18 = &OBJC_IVAR___CSDMessagingCallModel__supportsUngrouping;
              goto LABEL_79;
            }

            continue;
          }

          break;
        }

        id v18 = &OBJC_IVAR___CSDMessagingCallModel__supportsUngrouping;
        goto LABEL_77;
      case 4u:
        char v35 = 0;
        unsigned int v36 = 0;
        uint64_t v14 = 0LL;
        *(_BYTE *)(a1 + 16) |= 2u;
        while (2)
        {
          unint64_t v37 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v37 == -1LL || v37 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            id v18 = &OBJC_IVAR___CSDMessagingCallModel__supportsDTMF;
            goto LABEL_76;
          }

          char v38 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v37);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v37 + 1;
          v14 |= (unint64_t)(v38 & 0x7F) << v35;
          if (v38 < 0)
          {
            v35 += 7;
            BOOL v17 = v36++ > 8;
            if (v17)
            {
              uint64_t v14 = 0LL;
              id v18 = &OBJC_IVAR___CSDMessagingCallModel__supportsDTMF;
              goto LABEL_79;
            }

            continue;
          }

          break;
        }

        id v18 = &OBJC_IVAR___CSDMessagingCallModel__supportsDTMF;
        goto LABEL_77;
      case 6u:
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v14 = 0LL;
        *(_BYTE *)(a1 + 16) |= 0x20u;
        while (2)
        {
          unint64_t v41 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v41 == -1LL || v41 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            id v18 = &OBJC_IVAR___CSDMessagingCallModel__supportsUnambiguousMultiPartyState;
            goto LABEL_76;
          }

          char v42 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v41);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v41 + 1;
          v14 |= (unint64_t)(v42 & 0x7F) << v39;
          if (v42 < 0)
          {
            v39 += 7;
            BOOL v17 = v40++ > 8;
            if (v17)
            {
              uint64_t v14 = 0LL;
              id v18 = &OBJC_IVAR___CSDMessagingCallModel__supportsUnambiguousMultiPartyState;
              goto LABEL_79;
            }

            continue;
          }

          break;
        }

        id v18 = &OBJC_IVAR___CSDMessagingCallModel__supportsUnambiguousMultiPartyState;
        goto LABEL_77;
      case 7u:
        char v23 = 0;
        unsigned int v24 = 0;
        uint64_t v14 = 0LL;
        *(_BYTE *)(a1 + 16) |= 1u;
        while (2)
        {
          unint64_t v25 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v25 == -1LL || v25 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            id v18 = &OBJC_IVAR___CSDMessagingCallModel__supportsAddCall;
            goto LABEL_76;
          }

          char v26 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v25);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v25 + 1;
          v14 |= (unint64_t)(v26 & 0x7F) << v23;
          if (v26 < 0)
          {
            v23 += 7;
            BOOL v17 = v24++ > 8;
            if (v17)
            {
              uint64_t v14 = 0LL;
              id v18 = &OBJC_IVAR___CSDMessagingCallModel__supportsAddCall;
              goto LABEL_79;
            }

            continue;
          }

          break;
        }

        id v18 = &OBJC_IVAR___CSDMessagingCallModel__supportsAddCall;
        goto LABEL_77;
      case 8u:
        char v27 = 0;
        unsigned int v28 = 0;
        uint64_t v14 = 0LL;
        *(_BYTE *)(a1 + 16) |= 0x10u;
        break;
      default:
        if ((PBReaderSkipValueWithTag(a2) & 1) != 0) {
          continue;
        }
        return 0LL;
    }

    while (1)
    {
      unint64_t v29 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v29 == -1LL || v29 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v30 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v29);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v29 + 1;
      v14 |= (unint64_t)(v30 & 0x7F) << v27;
      if ((v30 & 0x80) == 0)
      {
        id v18 = &OBJC_IVAR___CSDMessagingCallModel__supportsSendingToVoicemail;
        goto LABEL_77;
      }

      v27 += 7;
      BOOL v17 = v28++ > 8;
      if (v17)
      {
        uint64_t v14 = 0LL;
        id v18 = &OBJC_IVAR___CSDMessagingCallModel__supportsSendingToVoicemail;
        goto LABEL_79;
      }
    }

    id v18 = &OBJC_IVAR___CSDMessagingCallModel__supportsSendingToVoicemail;
LABEL_76:
    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_77:
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      uint64_t v14 = 0LL;
    }
LABEL_79:
    *(_BYTE *)(a1 + *v1_Block_object_dispose(va, 8) = v14 != 0;
  }

  return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

LABEL_9:
}
}

    char v19 = v15;

    unint64_t v15 = 0LL;
    goto LABEL_10;
  }

  char v19 = v15;
LABEL_10:
  char v23 = v15;

  return v23;
}

LABEL_12:
  unsigned int v50 = 0u;
  char v51 = 0u;
  id v48 = 0u;
  id v49 = 0u;
  unsigned int v28 = v15;
  unint64_t v29 = [v28 countByEnumeratingWithState:&v48 objects:v56 count:16];
  if (!v29)
  {

    char v27 = 0LL;
    char v26 = 0LL;
LABEL_29:
    unsigned int v40 = v43;
    char v39 = v44;
    goto LABEL_30;
  }

  char v30 = v29;
  char v27 = 0LL;
  char v31 = *(void *)v49;
  do
  {
    for (i = 0LL; i != v30; i = (char *)i + 1)
    {
      if (*(void *)v49 != v31) {
        objc_enumerationMutation(v28);
      }
      unint64_t v33 = *(void **)(*((void *)&v48 + 1) + 8LL * (void)i);
      char v34 = (void *)objc_claimAutoreleasedReturnValue([v33 handle]);
      char v35 = -[CSDConversationManager isValidLocalHandle:activeLocalHandles:provider:]( self,  "isValidLocalHandle:activeLocalHandles:provider:",  v34,  v46,  v47);

      if (v35)
      {
        unsigned int v36 = (void *)objc_claimAutoreleasedReturnValue([v33 handle]);
        unint64_t v37 = [v36 isEqualToHandle:v45];

        char v26 = v33;
        if (!v37) {
          goto LABEL_23;
        }

        char v27 = v26;
      }
    }

    char v30 = [v28 countByEnumeratingWithState:&v48 objects:v56 count:16];
  }

  while (v30);
  char v26 = 0LL;
LABEL_23:

  if (v26) {
    char v38 = 1;
  }
  else {
    char v38 = v27 == 0LL;
  }
  unsigned int v40 = v43;
  char v39 = v44;
  if (!v38)
  {
    char v27 = v27;
    char v26 = v27;
  }
}

  return v7;
}
}

    unint64_t v7 = 1;
    goto LABEL_10;
  }

  if (([v4 isEqualToArray:v6] & 1) == 0)
  {
    char v12 = sub_1001704C4();
    id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v14 = 0;
      int v10 = "Subscription cache requires an update; secondary Thumper accounts changed";
      uint64_t v11 = (uint8_t *)&v14;
      goto LABEL_8;
    }

    goto LABEL_9;
  }

  unint64_t v7 = 0;
LABEL_10:

  return v7;
}

  return v6;
}

    goto LABEL_10;
  }

  char v39 = sub_1001704C4();
  unsigned int v40 = (os_log_s *)objc_claimAutoreleasedReturnValue(v39);
  if (os_log_type_enabled(v40, OS_LOG_TYPE_DEFAULT))
  {
    unint64_t v41 = @"NO";
    if (v8) {
      unint64_t v41 = @"YES";
    }
    *(_DWORD *)buf = 138412546;
    char v69 = v13;
    char v70 = 2112;
    unsigned int v71 = v41;
    _os_log_impl( (void *)&_mh_execute_header,  v40,  OS_LOG_TYPE_DEFAULT,  "No session exists. Starting a new one by inviting all devices that support provider %@ and support conversation re lay if necessary %@",  buf,  0x16u);
  }

  unint64_t v58 = v13;

  char v42 = (void *)objc_claimAutoreleasedReturnValue([v59 tuProvider]);
  uint64_t v43 = (void *)objc_claimAutoreleasedReturnValue( -[CSDRelayIDSSessionMessenger _createSessionsToAllDevicesSupportingProvider:requiresConversationRelaySupport:]( self,  "_createSessionsToAllDevicesSupportingProvider:requiresConversationRelaySupport:",  v42,  v8));

  uint64_t v62 = 0u;
  unint64_t v63 = 0u;
  __int16 v60 = 0u;
  id v61 = 0u;
  __int16 v44 = v43;
  uint64_t v45 = [v44 countByEnumeratingWithState:&v60 objects:v67 count:16];
  if (v45)
  {
    uint64_t v46 = v45;
    uint64_t v47 = *(void *)v61;
    do
    {
      for (i = 0LL; i != v46; i = (char *)i + 1)
      {
        if (*(void *)v61 != v47) {
          objc_enumerationMutation(v44);
        }
        id v49 = *(void *)(*((void *)&v60 + 1) + 8LL * (void)i);
        unsigned int v66 = v12;
        unsigned int v50 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v66, 1LL));
        -[CSDRelayIDSSessionMessenger _startSession:withMessage:identifiers:timeout:declineOnError:]( self,  "_startSession:withMessage:identifiers:timeout:declineOnError:",  v49,  v59,  v50,  a7,  0LL);
      }

      uint64_t v46 = [v44 countByEnumeratingWithState:&v60 objects:v67 count:16];
    }

    while (v46);
  }

  char v51 = [v44 count];
  unsigned int v13 = v58;
  if (!v51) {
    goto LABEL_10;
  }
LABEL_13:
}

  BOOL v17 = v13 - v6;
  if (__OFSUB__(v13, v6))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }

  sub_1001E812C((uint64_t)v21, v7, v13 - v6, a1);
  if (v18 < v3)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }

  char v19 = v18;
  if (!v18) {
    goto LABEL_14;
  }
  unsigned int v20 = (void *)(v6 + v18);
  if (__OFADD__(v6, v19)) {
    goto LABEL_20;
  }
  sub_1001B81F0(v20);
LABEL_14:
  if (v19 == v17)
  {
    v22[0] = v21[0];
    v22[1] = v21[1];
    v22[2] = v21[2];
    v22[3] = v21[3];
    v22[4] = v21[4];
    sub_1001B82A4(v22);
  }

  else
  {
    sub_1001B4B8C(v21[0]);
  }

  swift_unknownObjectRelease(a1);
  return v9;
}

  __break(1u);
  return result;
}

  sub_1001B0FF8();
}

  sub_10027D900((uint64_t)v19, (uint64_t)v13);
  swift_beginAccess(v22, v32, 33LL, 0LL);
  sub_10027DA3C((uint64_t)v13, v22, &qword_100447498);
  swift_endAccess(v32);
  char v26 = *(void (**)(char *, char *, void))(v3
                                                      + OBJC_IVAR____TtC13callservicesd13AudioResolver_resolutionChangedHandler);
  if (v26)
  {
    char v27 = *(void *)(v3 + OBJC_IVAR____TtC13callservicesd13AudioResolver_resolutionChangedHandler + 8);
    swift_retain(v27);
    v26(v21, v19, v30 & 1);
    sub_1001B5D3C((uint64_t)v26, v27);
  }

  char v42 = sub_100284B6C();
  uint64_t v43 = v52;
  sub_100284B64(v52, v36);
  if ((v42 & 1) == 0)
  {
    sub_100284B5C(v43);
    sub_100284B5C(v36);
    sub_100284B64(v39, v37);
    unsigned int v40 = (uint64_t)v54;
    goto LABEL_13;
  }

  LODWORD(v55) = sub_100284B6C();
  __int16 v44 = v50;
  sub_100284B64(v50, v43);
  if ((v55 & 4) != 0)
  {
    sub_100284B5C(v44);
    sub_100284B5C(v43);
    unsigned int v40 = (uint64_t)v54;
    goto LABEL_16;
  }

  LODWORD(v55) = sub_100284B6C();
  sub_100284B5C(v44);
  sub_100284B5C(v43);
  sub_100284B5C(v36);
  sub_100284B64(v39, v37);
  unsigned int v40 = (uint64_t)v54;
  if ((v55 & 8) == 0)
  {
LABEL_13:
    uint64_t v45 = (uint64_t)v51;
    (*(void (**)(uint64_t, uint64_t))(v38 + 56))(a1, v38);
    sub_100284B5C(v39);
    uint64_t v46 = type metadata accessor for UUID(0LL);
    uint64_t v47 = 1LL;
    id v48 = sub_1001AB0AC(v45, 1LL, v46);
    sub_1001AFF54(v45);
    sub_100284B64(v40, v37);
    if (v48 == 1) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }
}

  uint64_t result = sub_1002B1404();
  char v12 = result;
  *id v1 = result;
  if ((v2 & 0x8000000000000000LL) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if (v2 < *(void *)(v12 + 16))
  {
    sub_1002A6904( (uint64_t)v6,  v12 + ((*(unsigned __int8 *)(v4 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))
    + *(void *)(v4 + 72) * v2);
    return swift_endAccess(v14);
  }

void sub_100044EF0(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) uniqueProxyIdentifier]);
  char v4 = (void *)objc_claimAutoreleasedReturnValue([v2 callWithUniqueProxyIdentifier:v3]);

  if (v4 && [v4 status] == 4)
  {
    id v5 = sub_1001704C4();
    unint64_t v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      int v7 = 138412290;
      char v8 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "We still have a ringing call after 90 seconds, mark it as answered elsewhere, call %@",  (uint8_t *)&v7,  0xCu);
    }

    if (*(_BYTE *)(a1 + 48)) {
      [v4 setEndpointOnCurrentDevice:0];
    }
    else {
      [v4 setLocallyDisconnectedWithReasonIfNone:1];
    }
  }
}

void sub_100047A84( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, char a27)
{
}

id sub_100047AB0(uint64_t a1, uint64_t a2)
{
  id result = objc_retainBlock(*(id *)(a2 + 40));
  *(void *)(a1 + 40) = result;
  return result;
}

void sub_100047AD8(uint64_t a1)
{
}

void sub_100047AE0(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 40LL);
  if (v4)
  {
    (*(void (**)(uint64_t, id))(v4 + 16))(v4, v3);
    uint64_t v5 = *(void *)(*(void *)(a1 + 56) + 8LL);
    unint64_t v6 = *(void **)(v5 + 40);
    *(void *)(v5 + 40) = 0LL;
  }

  if (v3)
  {
    int v7 = *(void **)(a1 + 32);
    char v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) uniqueProxyIdentifier]);
    id v9 = (CSDRelayCall *)objc_claimAutoreleasedReturnValue([v7 callWithUniqueProxyIdentifier:v8]);

    if (!v9)
    {
      int v10 = objc_alloc(&OBJC_CLASS___CSDRelayCall);
      uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) uniqueProxyIdentifier]);
      id v9 = -[CSDRelayCall initWithUniqueProxyIdentifier:endpointOnCurrentDevice:]( v10,  "initWithUniqueProxyIdentifier:endpointOnCurrentDevice:",  v11,  0LL);

      char v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) callStateController]);
      [v12 setCallDelegatesIfNeeded:v9];

      [*(id *)(a1 + 40) updateRelayCall:v9];
      unsigned int v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) callStateController]);
      [v13 propertiesChangedForCall:v9];
    }

    id v14 = sub_1001704C4();
    unint64_t v15 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      int v17 = 138412290;
      id v18 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "Pulling remotely hosted call: %@",  (uint8_t *)&v17,  0xCu);
    }

    -[CSDRelayCall becomeEndpointForPullFromRemoteDevice](v9, "becomeEndpointForPullFromRemoteDevice");
  }

  else
  {
    id v16 = sub_1001704C4();
    id v9 = (CSDRelayCall *)objc_claimAutoreleasedReturnValue(v16);
    if (os_log_type_enabled((os_log_t)v9, OS_LOG_TYPE_ERROR)) {
      sub_1002B2A40(a1, (os_log_s *)v9);
    }
  }
}

void sub_100047D80(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if ([v6 isEqualToString:@"destinationID"])
  {
    [*(id *)(a1 + 32) setDestinationID:v5];
  }

  else if ([v6 isEqualToString:@"service"])
  {
    objc_msgSend(*(id *)(a1 + 32), "setService:", objc_msgSend(v5, "intValue"));
  }

  else if ([v6 isEqualToString:@"uniqueProxyIdentifier"])
  {
    [*(id *)(a1 + 32) setUniqueProxyIdentifier:v5];
  }

  else if ([v6 isEqualToString:@"sourceIdentifier"])
  {
    [*(id *)(a1 + 32) setSourceIdentifier:v5];
  }

  else if ([v6 isEqualToString:@"wantsHoldMusic"])
  {
    objc_msgSend(*(id *)(a1 + 32), "setWantsHoldMusic:", objc_msgSend(v5, "BOOLValue"));
  }

  else if ([v6 isEqualToString:@"dtmfKey"])
  {
    objc_msgSend(*(id *)(a1 + 32), "setDTMFKey:", objc_msgSend(v5, "intValue"));
  }

  else if ([v6 isEqualToString:@"disconnectedReason"])
  {
    objc_msgSend(*(id *)(a1 + 32), "setDisconnectedReason:", objc_msgSend(v5, "intValue"));
  }
}

uint64_t sub_10004A748(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (2)
    {
      if (!*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error))
      {
        char v4 = 0;
        unsigned int v5 = 0;
        unint64_t v6 = 0LL;
        while (1)
        {
          unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v7 == -1LL || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v8 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
          v6 |= (unint64_t)(v8 & 0x7F) << v4;
          if ((v8 & 0x80) == 0) {
            goto LABEL_11;
          }
          v4 += 7;
          BOOL v9 = v5++ >= 9;
          if (v9)
          {
            unint64_t v6 = 0LL;
            int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
            goto LABEL_13;
          }
        }

        *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          unint64_t v6 = 0LL;
        }
LABEL_13:
        if (v10) {
          BOOL v11 = 1;
        }
        else {
          BOOL v11 = (v6 & 7) == 4;
        }
        if (!v11)
        {
          switch((v6 >> 3))
          {
            case 1u:
              char v12 = 0;
              unsigned int v13 = 0;
              uint64_t v14 = 0LL;
              *(_BYTE *)(a1 + 40) |= 1u;
              break;
            case 2u:
              uint64_t String = PBReaderReadString(a2);
              uint64_t v18 = objc_claimAutoreleasedReturnValue(String);
              uint64_t v19 = 32LL;
              goto LABEL_30;
            case 4u:
              uint64_t v21 = PBReaderReadString(a2);
              uint64_t v18 = objc_claimAutoreleasedReturnValue(v21);
              uint64_t v19 = 8LL;
              goto LABEL_30;
            case 5u:
              uint64_t v22 = PBReaderReadString(a2);
              uint64_t v18 = objc_claimAutoreleasedReturnValue(v22);
              uint64_t v19 = 16LL;
LABEL_30:
              char v23 = *(void **)(a1 + v19);
              *(void *)(a1 + v19) = v18;

              goto LABEL_35;
            default:
              uint64_t result = PBReaderSkipValueWithTag(a2);
              if (!(_DWORD)result) {
                return result;
              }
LABEL_35:
              if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
                return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
              }
              continue;
          }

          while (1)
          {
            unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            if (v15 == -1LL || v15 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
              break;
            }
            char v16 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
            v14 |= (unint64_t)(v16 & 0x7F) << v12;
            if ((v16 & 0x80) == 0) {
              goto LABEL_32;
            }
            v12 += 7;
            BOOL v9 = v13++ >= 9;
            if (v9)
            {
              LODWORD(v14) = 0;
              goto LABEL_34;
            }
          }

          *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_32:
          if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
            LODWORD(v14) = 0;
          }
LABEL_34:
          *(_DWORD *)(a1 + 24) = v14;
          goto LABEL_35;
        }
      }

      break;
    }
  }

  return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

uint64_t sub_10004B0DC(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0LL;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1LL || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0LL;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0LL;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      break;
    }
    unint64_t v12 = v6 >> 3;
    if ((v6 >> 3) == 3)
    {
      uint64_t String = PBReaderReadString(a2);
      uint64_t v19 = objc_claimAutoreleasedReturnValue(String);
      unsigned int v20 = *(void **)(a1 + 8);
      *(void *)(a1 + _Block_object_dispose(va, 8) = v19;
    }

    else if ((_DWORD)v12 == 2)
    {
      uint64_t v21 = objc_alloc_init(&OBJC_CLASS___CSDMessagingConversationParticipant);
      objc_storeStrong((id *)(a1 + 16), v21);
      if (!PBReaderPlaceMark(a2, v23) || (sub_100012E30((uint64_t)v21, a2) & 1) == 0)
      {

        return 0LL;
      }

      PBReaderRecallMark(a2, v23);
    }

    else if ((_DWORD)v12 == 1)
    {
      char v13 = 0;
      unsigned int v14 = 0;
      uint64_t v15 = 0LL;
      *(_BYTE *)(a1 + 28) |= 1u;
      while (1)
      {
        unint64_t v16 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v16 == -1LL || v16 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v17 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v16);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v16 + 1;
        v15 |= (unint64_t)(v17 & 0x7F) << v13;
        if ((v17 & 0x80) == 0) {
          goto LABEL_34;
        }
        v13 += 7;
        BOOL v9 = v14++ >= 9;
        if (v9)
        {
          LODWORD(v15) = 0;
          goto LABEL_36;
        }
      }

      *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_34:
      if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        LODWORD(v15) = 0;
      }
LABEL_36:
      *(_DWORD *)(a1 + 24) = v15;
    }

    else
    {
      uint64_t result = PBReaderSkipValueWithTag(a2);
      if (!(_DWORD)result) {
        return result;
      }
    }
  }

  return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_10004C000( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

id sub_10004C020(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  unsigned int v5 = WeakRetained;
  if (WeakRetained) {
    unint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained _dialDelayForRequest:v3]);
  }
  else {
    unint64_t v6 = 0LL;
  }

  return v6;
}

void sub_10004CDF4(uint64_t a1)
{
  if ([*(id *)(a1 + 32) shouldHandleMuteRequests])
  {
    id v2 = (uint64_t (**)(void))objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) systemControllerUplinkMutedBlock]);
    uint64_t v3 = v2[2]();

    id v4 = sub_1001704C4();
    unsigned int v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v6 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) uniqueProxyIdentifier]);
      unint64_t v7 = (void *)v6;
      char v8 = @"NO";
      if ((_DWORD)v3) {
        char v8 = @"YES";
      }
      int v18 = 138412546;
      uint64_t v19 = v6;
      __int16 v20 = 2112;
      uint64_t v21 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "Call with UPI %@ responding to bottom-up mute notification mute=%@",  (uint8_t *)&v18,  0x16u);
    }

    BOOL v9 = (uint64_t (**)(void))objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) usesSystemMutingBlock]);
    int v10 = v9[2]();

    if (v10) {
      [*(id *)(a1 + 32) setUnderlyingUplinkMuted:v3 bottomUpMute:1];
    }
    if (([*(id *)(a1 + 32) isPTT] & 1) == 0)
    {
      BOOL v11 = objc_alloc(&OBJC_CLASS___CXSetMutedCallAction);
      unint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) uniqueProxyIdentifierUUID]);
      char v13 = -[CXSetMutedCallAction initWithCallUUID:muted:bottomUpMute:]( v11,  "initWithCallUUID:muted:bottomUpMute:",  v12,  v3,  1LL);

      unsigned int v14 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) providerCallDelegate]);
      [v14 performCallAction:v13 forCall:*(void *)(a1 + 32)];
    }

    [*(id *)(a1 + 32) propertiesChanged];
  }

  else
  {
    id v15 = sub_1001704C4();
    unint64_t v16 = (os_log_s *)objc_claimAutoreleasedReturnValue(v15);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      char v17 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) uniqueProxyIdentifier]);
      int v18 = 138412290;
      uint64_t v19 = (uint64_t)v17;
      _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "Call with UPI %@ is not handling systemMuteStatusChanged notification",  (uint8_t *)&v18,  0xCu);
    }
  }

id sub_10004D110(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = [WeakRetained usesSystemMuting];

  return v2;
}

BOOL sub_10004D188(id a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue( +[TUAudioSystemController sharedAudioSystemController]( &OBJC_CLASS___TUAudioSystemController,  "sharedAudioSystemController"));
  unsigned __int8 v2 = [v1 isUplinkMuted];

  return v2;
}

void sub_10004D208(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = (id)objc_claimAutoreleasedReturnValue( +[TUAudioSystemController sharedAudioSystemController]( &OBJC_CLASS___TUAudioSystemController,  "sharedAudioSystemController"));
  [v3 setUplinkMuted:v2];
}

id sub_10004D318(id *a1)
{
  id v107 = [a1[4] hasSet];
  LODWORD(v10_Block_object_dispose(va, 8) = v2;
  if ((v107 & 4) != 0)
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue([a1[4] remoteHandle]);
    id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 siriDisplayName]);
    if (![v4 length])
    {
      unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue([a1[5] mergedCallUpdate]);
      uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v5 remoteHandle]);
      unint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 siriDisplayName]);
      id v8 = [v7 length];

      if (!v8) {
        goto LABEL_6;
      }
      id v3 = (void *)objc_claimAutoreleasedReturnValue([a1[5] mergedCallUpdate]);
      id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 remoteHandle]);
      BOOL v9 = (void *)objc_claimAutoreleasedReturnValue([v4 siriDisplayName]);
      int v10 = (void *)objc_claimAutoreleasedReturnValue([a1[4] remoteHandle]);
      [v10 setSiriDisplayName:v9];
    }
  }

uint64_t sub_100050154(uint64_t result)
{
  *(_BYTE *)(*(void *)(result + 32) + 204LL) = *(_BYTE *)(result + 40);
  return result;
}

uint64_t sub_1000501E8(uint64_t result)
{
  *(_BYTE *)(*(void *)(result + 32) + 192LL) = *(_BYTE *)(result + 40);
  return result;
}

uint64_t sub_10005027C(uint64_t result)
{
  *(_BYTE *)(*(void *)(result + 32) + 205LL) = *(_BYTE *)(result + 40);
  return result;
}

uint64_t sub_100050310(uint64_t result)
{
  *(_BYTE *)(*(void *)(result + 32) + 194LL) = *(_BYTE *)(result + 40);
  return result;
}

void sub_1000503DC(uint64_t a1)
{
}

void sub_1000504B4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) mergedCallUpdate]);
  [v2 setParticipantGroupUUID:v1];
}

void sub_100050A1C(uint64_t a1)
{
  BOOL v2 = sub_1000A1608(*(void *)(a1 + 40));
  id v3 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) mergedCallUpdate]);
  [v3 setBluetoothAudioFormat:v2];
}

uint64_t sub_100050AF4(uint64_t result)
{
  *(_BYTE *)(*(void *)(result + 32) + 198LL) = *(_BYTE *)(result + 40);
  return result;
}

uint64_t sub_100050B98(uint64_t result)
{
  *(_BYTE *)(*(void *)(result + 32) + 199LL) = *(_BYTE *)(result + 40);
  return result;
}

id sub_100050E00(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) isVideoUpgradeFromCall:a2];
}

void sub_100051128( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_100051154(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained setStartCallBlock:0];
    [*(id *)(a1 + 32) performStartCallAction:*(void *)(a1 + 40) forCall:v3];
    [v3 propertiesChanged];
    id WeakRetained = v3;
  }
}

id sub_100051A4C(uint64_t a1)
{
  v3.receiver = *(id *)(a1 + 32);
  v3.super_class = (Class)&OBJC_CLASS___CSDProviderCall;
  objc_msgSendSuper2(&v3, "hold");
  return [*(id *)(a1 + 32) _setIsOnHold:1];
}

id sub_100051AEC(uint64_t a1)
{
  v3.receiver = *(id *)(a1 + 32);
  v3.super_class = (Class)&OBJC_CLASS___CSDProviderCall;
  objc_msgSendSuper2(&v3, "unhold");
  return [*(id *)(a1 + 32) _setIsOnHold:0];
}

void sub_100052304(uint64_t a1)
{
}

void sub_1000542D0( void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

void sub_1000542E4(void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
}

id sub_1000542F0(void *a1, const char *a2)
{
  return [a1 failureReason];
}

void sub_100054640(uint64_t a1, void *a2)
{
  id v3 = a2;
  +[CSDCallStateMonitor breakBeforeMakeTimeout](&OBJC_CLASS___CSDCallStateMonitor, "breakBeforeMakeTimeout");
  double v5 = v4;
  id v6 = sub_1001704C4();
  unint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    int v10 = 134217984;
    double v11 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Break before make timeout: %lfs",  (uint8_t *)&v10,  0xCu);
  }

  dispatch_time_t v8 = dispatch_time(0LL, (uint64_t)(v5 * 1000000000.0));
  BOOL v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) queue]);
  dispatch_after(v8, v9, v3);
}

void sub_100055488( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_10005549C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  BOOL v2 = WeakRetained;
  if (WeakRetained)
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained callContainer]);
    unsigned __int8 v4 = [v3 hasCurrentCalls];

    id v5 = sub_1001704C4();
    id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    BOOL v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);
    if ((v4 & 1) != 0)
    {
      if (v7)
      {
        *(_WORD *)dispatch_time_t v8 = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "There are calls on the system, not clearing system mute cache",  v8,  2u);
      }
    }

    else
    {
      if (v7)
      {
        *(_WORD *)buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "All calls ended. Clearing system uplink muted cache",  buf,  2u);
      }

      id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[TUAudioSystemController sharedAudioSystemController]( &OBJC_CLASS___TUAudioSystemController,  "sharedAudioSystemController"));
      -[os_log_s clearUplinkMutedCache](v6, "clearUplinkMutedCache");
    }
  }
}

void sub_100056AB0(uint64_t a1)
{
  BOOL v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) callContainer]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 callWithUniqueProxyIdentifier:*(void *)(a1 + 40)]);

  if (v3 && [v3 status] == 3)
  {
    __int128 v16 = 0u;
    __int128 v17 = 0u;
    __int128 v14 = 0u;
    __int128 v15 = 0u;
    unsigned __int8 v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) callContainer]);
    id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 currentAudioAndVideoCalls]);

    id v6 = [v5 countByEnumeratingWithState:&v14 objects:v20 count:16];
    if (v6)
    {
      id v7 = v6;
      uint64_t v8 = *(void *)v15;
      do
      {
        for (i = 0LL; i != v7; i = (char *)i + 1)
        {
          if (*(void *)v15 != v8) {
            objc_enumerationMutation(v5);
          }
          int v10 = *(void **)(*((void *)&v14 + 1) + 8LL * (void)i);
          if (v10 != v3)
          {
            id v11 = sub_1001704C4();
            int v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
            if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)buf = 138412290;
              uint64_t v19 = v10;
              _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "Disconnecting call because video call is still sending and break before make timeout fired: %@",  buf,  0xCu);
            }

            char v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) callCenter]);
            [v13 disconnectCall:v10];
          }
        }

        id v7 = [v5 countByEnumeratingWithState:&v14 objects:v20 count:16];
      }

      while (v7);
    }
  }
}

void sub_100056F44(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    unsigned __int8 v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained callContainer]);
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472LL;
    v12[2] = sub_1000570D4;
    v12[3] = &unk_1003D79F0;
    id v13 = *(id *)(a1 + 32);
    id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 callPassingTest:v12]);

    uint64_t v7 = objc_opt_class(&OBJC_CLASS___CSDCall, v6);
    if ((objc_opt_isKindOfClass(v5, v7) & 1) != 0) {
      [v5 setTimeoutTimer:0];
    }
    if ([v5 callStatus] == 4)
    {
      id v8 = sub_1001704C4();
      BOOL v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v10 = *(void *)(a1 + 32);
        *(_DWORD *)buf = 134218242;
        uint64_t v15 = 60LL;
        __int16 v16 = 2112;
        uint64_t v17 = v10;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "Exceeded ringing duration of %llu seconds; disconnecting call with identifier %@",
          buf,
          0x16u);
      }

      id v11 = (void *)objc_claimAutoreleasedReturnValue([v3 callCenter]);
      [v11 disconnectCall:v5];
    }
  }
}

id sub_1000570D4(uint64_t a1, void *a2)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a2 uniqueProxyIdentifier]);
  id v4 = [v3 isEqualToString:*(void *)(a1 + 32)];

  return v4;
}

void sub_10005732C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

BOOL sub_100057348(id a1, TUCall *a2)
{
  BOOL v2 = (void *)objc_claimAutoreleasedReturnValue(-[TUCall provider](a2, "provider"));
  unsigned __int8 v3 = [v2 hasRestrictionsInRetailEnvironment];

  return v3;
}

void sub_100057380(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    BOOL v2 = (dispatch_source_s *)objc_claimAutoreleasedReturnValue([WeakRetained callDurationLimitTimer]);
    dispatch_source_cancel(v2);

    [v3 _handleCallDurationTimerFired];
    id WeakRetained = v3;
  }
}

BOOL sub_100057684(id a1, TUCall *a2)
{
  BOOL v2 = (void *)objc_claimAutoreleasedReturnValue(-[TUCall provider](a2, "provider"));
  unsigned __int8 v3 = [v2 hasRestrictionsInRetailEnvironment];

  return v3;
}

LABEL_27:
}
}

        id v8 = v39;
      }
    }

    else if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
    {
      sub_1002B626C();
    }
  }

  else
  {
    int v28 = sub_1001704C4();
    __int16 v16 = (os_log_s *)objc_claimAutoreleasedReturnValue(v28);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "Ignoring guest mode message since guest mode is not currently supported",  buf,  2u);
    }
  }
}
}
}

  if ((_DWORD)v7) {
    __int16 v16 = v8;
  }
  else {
    __int16 v16 = v8 + 1;
  }
  memcpy(a1, a2, v16);
  return a1;
}

  if ((_DWORD)v7) {
    __int16 v16 = v8;
  }
  else {
    __int16 v16 = v8 + 1;
  }
  memcpy(a1, a2, v16);
  return a1;
}

              swift_release(v32);
              swift_release(v38);
              return (uint64_t)v42;
            }
          }
        }
      }
    }

    id v13 = (v20 - 1) & v20;
    __int128 v14 = __clz(__rbit64(v20)) + (v15 << 6);
    goto LABEL_28;
  }

  __break(1u);
}

  __break(1u);
}

  __break(1u);
  return result;
}

  __break(1u);
  return result;
}

  __break(1u);
  return result;
}

    BOOL v9 = (v20 - 1) & v20;
    __int128 v14 = __clz(__rbit64(v20)) + (v8 << 6);
    goto LABEL_28;
  }

  __break(1u);
}

              swift_release(v2);
              return;
            }
          }
        }
      }
    }

    unsigned __int8 v3 = *v1;
    BOOL v9 = *(void *)((*v1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    int v12 = v48[0];
    __int16 v16 = v48[1];
    int v18 = v49;
    BOOL v2 = v50;
    if (v51)
    {
      id v4 = (v51 - 1) & v51;
      int v32 = __clz(__rbit64(v51)) | (v50 << 6);
      int v33 = (unint64_t)(v49 + 64) >> 6;
      goto LABEL_29;
    }

    goto LABEL_59;
  }

  __break(1u);
LABEL_59:
  id v45 = v2 + 1;
  if (__OFADD__(v2, 1LL)) {
    goto LABEL_77;
  }
  int v33 = (unint64_t)(v18 + 64) >> 6;
  if (v45 >= v33)
  {
    uint64_t v22 = v12;
    goto LABEL_20;
  }

  if (*(void *)(v16 + 8 * v45)) {
    goto LABEL_62;
  }
  if (v2 + 2 >= v33) {
    goto LABEL_56;
  }
  if (*(void *)(v16 + 8 * (v2 + 2))) {
    goto LABEL_62;
  }
  if (v2 + 3 >= v33) {
    goto LABEL_56;
  }
  if (*(void *)(v16 + 8 * (v2 + 3))) {
    goto LABEL_62;
  }
  if (v2 + 4 >= v33) {
    goto LABEL_56;
  }
  if (*(void *)(v16 + 8 * (v2 + 4))) {
    goto LABEL_62;
  }
  if (v2 + 5 >= v33)
  {
LABEL_56:
    uint64_t v22 = v12;
    goto LABEL_20;
  }

  if (!*(void *)(v16 + 8 * (v2 + 5)))
  {
    uint64_t v46 = v2 + 6;
    while (v46 < v33)
    {
      if (*(void *)(v16 + 8 * v46++)) {
        goto LABEL_62;
      }
    }

    goto LABEL_56;
  }

    uint64_t v88 = v78 + 1;
    if (__OFADD__(v78, 1LL)) {
      continue;
    }
    break;
  }

  if (v88 >= v85) {
    goto LABEL_43;
  }
  unint64_t v89 = *(void *)(v81 + 8 * v88);
  ++v78;
  if (v89) {
    goto LABEL_40;
  }
  char v78 = v88 + 1;
  if (v88 + 1 >= v85) {
    goto LABEL_43;
  }
  unint64_t v89 = *(void *)(v81 + 8 * v78);
  if (v89) {
    goto LABEL_40;
  }
  char v78 = v88 + 2;
  if (v88 + 2 >= v85) {
    goto LABEL_43;
  }
  unint64_t v89 = *(void *)(v81 + 8 * v78);
  if (v89)
  {
LABEL_40:
    uint64_t v84 = (v89 - 1) & v89;
    id v87 = __clz(__rbit64(v89)) + (v78 << 6);
LABEL_41:
    unint64_t v91 = *(_BYTE *)(*(void *)(v79 + 48) + v87);
    uint64_t v92 = *(void *)(*(void *)(v79 + 56) + 8 * v87);
    swift_bridgeObjectRetain(v92);
    unint64_t v93 = sub_10029B78C(v91);
    unint64_t v95 = v94;
    uint64_t v96 = swift_getObjectType(v93);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v95 + 40))(v92, v96, v95);
    swift_unknownObjectRelease(v93);
    swift_bridgeObjectRelease(v92);
    sub_10029C014();
    if (v84) {
      goto LABEL_26;
    }
    goto LABEL_27;
  }

  uint64_t v90 = v88 + 3;
  if (v90 < v85)
  {
    unint64_t v89 = *(void *)(v81 + 8 * v90);
    if (!v89)
    {
      while (1)
      {
        char v78 = v90 + 1;
        if (__OFADD__(v90, 1LL)) {
          goto LABEL_55;
        }
        if (v78 >= v85) {
          goto LABEL_43;
        }
        unint64_t v89 = *(void *)(v81 + 8 * v78);
        ++v90;
        if (v89) {
          goto LABEL_40;
        }
      }
    }

    char v78 = v90;
    goto LABEL_40;
  }

void sub_10005C270(uint64_t a1)
{
  BOOL v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) blocksPendingTransportAvailability]);
  id v3 = objc_retainBlock(*(id *)(a1 + 40));
  unsigned int v4 = [v2 containsObject:v3];

  if (v4)
  {
    id v5 = sub_1001704C4();
    uint64_t v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      id v7 = objc_retainBlock(*(id *)(a1 + 40));
      int v10 = 138412290;
      id v11 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "[WARN] Transport availability block timed out: %@",  (uint8_t *)&v10,  0xCu);
    }

    (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
    id v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) blocksPendingTransportAvailability]);
    id v9 = objc_retainBlock(*(id *)(a1 + 40));
    [v8 removeObject:v9];
  }

LABEL_25:
}

  uint64_t v72 = 0LL;
LABEL_26:
  unsigned int v71 = (unint64_t)-[NSData hash](self->_dummyPayload, "hash");
  id v5 = self->_has;
  if ((*(_BYTE *)&v5 & 1) != 0)
  {
    hostCallCreationTime = self->_hostCallCreationTime;
    id v8 = -hostCallCreationTime;
    if (hostCallCreationTime >= 0.0) {
      id v8 = self->_hostCallCreationTime;
    }
    id v9 = floor(v8 + 0.5);
    int v10 = (v8 - v9) * 1.84467441e19;
    uint64_t v6 = 2654435761u * (unint64_t)fmod(v9, 1.84467441e19);
    if (v10 >= 0.0)
    {
      if (v10 > 0.0) {
        v6 += (unint64_t)v10;
      }
    }

    else
    {
      v6 -= (unint64_t)fabs(v10);
    }
  }

  else
  {
    uint64_t v6 = 0LL;
  }

  if ((*(_BYTE *)&v5 & 2) != 0)
  {
    messageSendTime = self->_messageSendTime;
    id v13 = -messageSendTime;
    if (messageSendTime >= 0.0) {
      id v13 = self->_messageSendTime;
    }
    __int128 v14 = floor(v13 + 0.5);
    uint64_t v15 = (v13 - v14) * 1.84467441e19;
    id v11 = 2654435761u * (unint64_t)fmod(v14, 1.84467441e19);
    if (v15 >= 0.0)
    {
      if (v15 > 0.0) {
        v11 += (unint64_t)v15;
      }
    }

    else
    {
      v11 -= (unint64_t)fabs(v15);
    }
  }

  else
  {
    id v11 = 0LL;
  }

  if ((*(_DWORD *)&v5 & 0x80000) != 0)
  {
    char v69 = 2654435761LL * self->_protoNeedsManualInCallSounds;
    if ((*(_WORD *)&v5 & 0x8000) != 0) {
      goto LABEL_44;
    }
  }

  else
  {
    char v69 = 0LL;
    if ((*(_WORD *)&v5 & 0x8000) != 0)
    {
LABEL_44:
      unint64_t v68 = 2654435761LL * self->_protoCannotRelayAudioOrVideoOnPairedDevice;
      goto LABEL_47;
    }
  }

  unint64_t v68 = 0LL;
LABEL_47:
  uint64_t v70 = v11;
  if ((*(_DWORD *)&v5 & 0x20000) != 0) {
    uint64_t v67 = 2654435761LL * self->_protoExpectedEndpointOnMessagingDevice;
  }
  else {
    uint64_t v67 = 0LL;
  }
  uint64_t v66 = -[NSString hash](self->_contactIdentifier, "hash");
  char v65 = -[CSDMessagingCallCapabilitiesState hash](self->_protoCallCapabilitiesState, "hash");
  __int16 v16 = self->_has;
  if ((*(_WORD *)&v16 & 0x100) != 0)
  {
    char v64 = 2654435761LL * self->_protoSoundRegion;
    if ((*(_DWORD *)&v16 & 0x10000) != 0) {
      goto LABEL_52;
    }
  }

  else
  {
    char v64 = 0LL;
    if ((*(_DWORD *)&v16 & 0x10000) != 0)
    {
LABEL_52:
      unint64_t v63 = 2654435761LL * self->_protoEmergency;
      goto LABEL_55;
    }
  }

  unint64_t v63 = 0LL;
LABEL_55:
  uint64_t v62 = (unint64_t)-[NSMutableArray hash](self->_otherUniqueProxyIdentifiers, "hash");
  id v61 = -[CSDMessagingCallModel hash](self->_protoCallModel, "hash");
  __int16 v60 = -[CSDMessagingHandle hash](self->_handle, "hash");
  if ((*((_BYTE *)&self->_has + 2) & 0x20) != 0) {
    id v59 = 2654435761LL * self->_protoSOS;
  }
  else {
    id v59 = 0LL;
  }
  unint64_t v58 = (unint64_t)-[NSMutableArray hash](self->_providers, "hash");
  id v57 = -[CSDMessagingCallDisplayContext hash](self->_protoDisplayContext, "hash");
  id v56 = -[CSDMessagingAVConferenceInviteData hash](self->_inviteData, "hash");
  id v55 = -[CSDMessagingCallProvider hash](self->_protoProvider, "hash");
  uint64_t v17 = self->_has;
  if ((*(_DWORD *)&v17 & 0x8000000) != 0)
  {
    id v54 = 2654435761LL * self->_protoVideo;
    if ((*(_DWORD *)&v17 & 0x4000000) != 0)
    {
LABEL_60:
      id v53 = 2654435761LL * self->_protoUplinkMuted;
      if ((*(_DWORD *)&v17 & 0x100000) != 0) {
        goto LABEL_61;
      }
LABEL_68:
      char v52 = 0LL;
      if ((*(_WORD *)&v17 & 0x1000) != 0) {
        goto LABEL_62;
      }
LABEL_69:
      uint64_t v22 = 0LL;
      goto LABEL_72;
    }
  }

  else
  {
    id v54 = 0LL;
    if ((*(_DWORD *)&v17 & 0x4000000) != 0) {
      goto LABEL_60;
    }
  }

  id v53 = 0LL;
  if ((*(_DWORD *)&v17 & 0x100000) == 0) {
    goto LABEL_68;
  }
LABEL_61:
  char v52 = 2654435761LL * self->_protoRemoteUplinkMuted;
  if ((*(_WORD *)&v17 & 0x1000) == 0) {
    goto LABEL_69;
  }
LABEL_62:
  systemVolume = self->_systemVolume;
  uint64_t v19 = -systemVolume;
  if (systemVolume >= 0.0) {
    uint64_t v19 = self->_systemVolume;
  }
  __int16 v20 = floorf(v19 + 0.5);
  id v21 = (float)(v19 - v20) * 1.8447e19;
  uint64_t v22 = 2654435761u * (unint64_t)fmodf(v20, 1.8447e19);
  if (v21 >= 0.0)
  {
    if (v21 > 0.0) {
      v22 += (unint64_t)v21;
    }
  }

  else
  {
    v22 -= (unint64_t)fabsf(v21);
  }

  id v21 = 0LL;
LABEL_26:
  __int16 v20 = -[CSDMessagingConversationParticipantAssociation hash](self->_participantAssociation, "hash");
  if ((*((_BYTE *)&self->_has + 1) & 0x10) != 0) {
    uint64_t v19 = 2654435761LL * self->_isUPlusNDowngradeAvailable;
  }
  else {
    uint64_t v19 = 0LL;
  }
  id v5 = -[NSString hash](self->_collaborationIdentifier, "hash");
  uint64_t v6 = self->_has;
  if ((*(_DWORD *)&v6 & 0x10000) != 0)
  {
    id v7 = 2654435761LL * self->_supportsLeaveContext;
    if ((*(_WORD *)&v6 & 0x4000) != 0)
    {
LABEL_31:
      id v8 = 2654435761LL * self->_isUPlusOneScreenSharingAvailable;
      if ((*(_WORD *)&v6 & 0x800) != 0) {
        goto LABEL_32;
      }
      goto LABEL_38;
    }
  }

  else
  {
    id v7 = 0LL;
    if ((*(_WORD *)&v6 & 0x4000) != 0) {
      goto LABEL_31;
    }
  }

  id v8 = 0LL;
  if ((*(_WORD *)&v6 & 0x800) != 0)
  {
LABEL_32:
    id v9 = 2654435761LL * self->_isSpatialPersonaEnabled;
    if ((*(_WORD *)&v6 & 0x2000) != 0) {
      goto LABEL_33;
    }
    goto LABEL_39;
  }

    goto LABEL_26;
  }
      }

      else
      {
        int v28 = sub_1001704C4();
        __int16 v16 = (os_log_s *)objc_claimAutoreleasedReturnValue(v28);
        if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
          sub_1002B6A20();
        }
      }

      int v27 = v39;
    }

    else
    {
      int v26 = sub_1001704C4();
      int v27 = (os_log_s *)objc_claimAutoreleasedReturnValue(v26);
      if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
        sub_1002B69C0();
      }
    }
  }

  else
  {
    int v25 = sub_1001704C4();
    id v9 = (void *)objc_claimAutoreleasedReturnValue(v25);
    if (os_log_type_enabled((os_log_t)v9, OS_LOG_TYPE_ERROR)) {
      sub_1002B6994();
    }
  }
}
}

  int v30 = (void *)objc_claimAutoreleasedReturnValue(-[__CFString localMemberHandleValue](v9, "localMemberHandleValue"));
  if (v30)
  {
    int v31 = (void *)objc_claimAutoreleasedReturnValue(-[__CFString localSenderSubscriptionIdentifier](v9, "localSenderSubscriptionIdentifier"));
    int v32 = v31 == 0LL;

    if (v32)
    {
      int v33 = (void *)objc_claimAutoreleasedReturnValue(-[CSDProviderCallDataSource coreTelephonyClient](self, "coreTelephonyClient"));
      char v34 = (void *)objc_claimAutoreleasedReturnValue([v33 telephonySubscriptions]);

      v166 = 0u;
      v167 = 0u;
      v164 = 0u;
      v165 = 0u;
      id v35 = v34;
      int v36 = [v35 countByEnumeratingWithState:&v164 objects:v185 count:16];
      if (v36)
      {
        int v37 = *(void *)v165;
        do
        {
          for (i = 0LL; i != v36; i = (char *)i + 1)
          {
            if (*(void *)v165 != v37) {
              objc_enumerationMutation(v35);
            }
            id v39 = *(void **)(*((void *)&v164 + 1) + 8LL * (void)i);
            unsigned int v40 = (void *)objc_claimAutoreleasedReturnValue([v39 phoneNumber]);
            if (v40)
            {
              unint64_t v41 = (void *)objc_claimAutoreleasedReturnValue([v39 phoneNumber]);
              id v42 = _FTAreIDsEquivalent(v41, v30);

              if (v42)
              {
                uint64_t v43 = (void *)objc_claimAutoreleasedReturnValue([v39 labelID]);
                -[__CFString setLocalSenderSubscriptionIdentifier:](v9, "setLocalSenderSubscriptionIdentifier:", v43);
              }
            }
          }

          int v36 = [v35 countByEnumeratingWithState:&v164 objects:v185 count:16];
        }

        while (v36);
      }
    }
  }

  __int16 v44 = objc_claimAutoreleasedReturnValue(-[__CFString ISOCountryCode](v9, "ISOCountryCode"));
  if (!v44)
  {
    __int16 v44 = objc_claimAutoreleasedReturnValue( -[CSDProviderCallDataSource _ISOCountryCodeForCallWithUUID:provider:callUpdate:]( self,  "_ISOCountryCodeForCallWithUUID:provider:callUpdate:",  v149,  v147,  v9));
    if (v44) {
      -[__CFString setISOCountryCode:](v9, "setISOCountryCode:", v44);
    }
  }

  v137 = (void *)v44;
  if (-[__CFString priority](v9, "priority") == (id)2 && [v147 isTelephonyProvider])
  {
    id v45 = objc_claimAutoreleasedReturnValue(-[CSDProviderCallDataSource _endMutuallyExclusiveCalls:](self, "_endMutuallyExclusiveCalls:", v9));
    uint64_t v46 = (void *)v169[5];
    v169[5] = v45;

    if (v169[5])
    {
      uint64_t v47 = 0;
      id v48 = 0;
      id v49 = 0;
    }

    else
    {
      unint64_t v89 = -[CSDProviderCall initIncomingWithBackingCallSource:UUID:update:]( objc_alloc(&OBJC_CLASS___CSDProviderCall),  "initIncomingWithBackingCallSource:UUID:update:",  v148,  v149,  v9);
      [v89 setLocalUserInHomeCountry:0];
      [v89 setAnsweringMachineAvailable:0];
      [v89 setIdentifiedSpamInCallerName:0];
      [v138 setCallDelegatesIfNeeded:v89];
      [v138 propertiesChangedForCall:v89];
      v142 = v89;
      uint64_t v47 = 0;
      id v48 = 0;
      id v49 = 1;
    }

    goto LABEL_85;
  }

  v141 = (void *)objc_claimAutoreleasedReturnValue(-[CSDProviderCallDataSource routeManager](self, "routeManager"));
  unsigned int v50 = (uint64_t (**)(void, void, void))objc_claimAutoreleasedReturnValue( -[CSDProviderCallDataSource dndAllowsCall]( self,  "dndAllowsCall"));
  id v51 = (void *)objc_claimAutoreleasedReturnValue(-[__CFString remoteHandle](v9, "remoteHandle"));
  char v52 = (void *)objc_claimAutoreleasedReturnValue([v51 value]);
  id v53 = (void *)objc_claimAutoreleasedReturnValue([v148 identifier]);
  id v54 = ((uint64_t (**)(void, void *, void *))v50)[2](v50, v52, v53);
  v139 = (void *)objc_claimAutoreleasedReturnValue(v54);

  id v55 = sub_1001704C4();
  id v56 = (os_log_s *)objc_claimAutoreleasedReturnValue(v55);
  if (os_log_type_enabled(v56, OS_LOG_TYPE_DEFAULT))
  {
    id v57 = (void *)objc_claimAutoreleasedReturnValue(-[__CFString remoteHandle](v9, "remoteHandle"));
    unint64_t v58 = (void *)objc_claimAutoreleasedReturnValue([v57 value]);
    id v59 = TULoggableStringForHandle(v58);
    __int16 v60 = (__CFString *)(id)objc_claimAutoreleasedReturnValue(v59);
    id v61 = (__CFString *)objc_claimAutoreleasedReturnValue([v148 identifier]);
    *(_DWORD *)buf = 138412802;
    *(void *)v175 = v139;
    *(_WORD *)&v175[8] = 2112;
    v176 = v60;
    v177 = 2112;
    v178 = v61;
    _os_log_impl( (void *)&_mh_execute_header,  v56,  OS_LOG_TYPE_DEFAULT,  "Query result: %@ for handle: %@ callSource: %@",  buf,  0x20u);
  }

  uint64_t v62 = [v139 allowCallForDestinationID];
  unint64_t v63 = [v141 isCarModeActive];
  else {
    char v64 = [v141 isAnyBluetoothHeadphoneRouteAvailableForAnyCall];
  }
  char v65 = v63 & v64;
  if ((v63 & v64 & 1) == 0 && ((v63 ^ 1) & 1) == 0) {
    char v65 = [v141 isCarPlayRouteAvailable];
  }
  if (!v147 || ([v147 isSystemProvider] & 1) != 0)
  {
LABEL_57:
    uint64_t v70 = (void *)objc_claimAutoreleasedReturnValue(-[CSDProviderCallDataSource protectedAppsUtilities](self, "protectedAppsUtilities"));
    unsigned int v71 = (void *)objc_claimAutoreleasedReturnValue([v148 bundleIdentifier]);
    uint64_t v72 = [v70 shouldBlockCallWithBundleIdentifier:v71];

    if (v72)
    {
      unint64_t v73 = sub_1001704C4();
      char v74 = (os_log_s *)objc_claimAutoreleasedReturnValue(v73);
      if (os_log_type_enabled(v74, OS_LOG_TYPE_DEFAULT))
      {
        id v75 = (void *)objc_claimAutoreleasedReturnValue([v148 bundleIdentifier]);
        *(_DWORD *)buf = 138412290;
        *(void *)v175 = v75;
        _os_log_impl( (void *)&_mh_execute_header,  v74,  OS_LOG_TYPE_DEFAULT,  "[WARN] Blocking incoming call UI because the originating app [Bundle Identifier: %@] responsible for the call is hidden and currently not foregrounded",  buf,  0xCu);
      }

      unsigned int v76 = objc_claimAutoreleasedReturnValue(+[NSError cx_incomingCallErrorWithCode:](&OBJC_CLASS___NSError, "cx_incomingCallErrorWithCode:", 6LL));
      uint64_t v77 = (void *)v169[5];
      v169[5] = v76;

LABEL_65:
      uint64_t v47 = 0;
      id v48 = 0;
LABEL_84:

      id v49 = v48;
LABEL_85:
      v151[0] = _NSConcreteStackBlock;
      v151[1] = 3221225472LL;
      v151[2] = sub_10019A9A8;
      v151[3] = &unk_1003DC5A0;
      id v99 = v138;
      v152 = v99;
      v159 = v47;
      v153 = v149;
      v154 = self;
      v158 = &v168;
      v157 = v144;
      v160 = v49;
      v155 = v148;
      v156 = v9;
      v161 = v48;
      v162 = 0;
      v163 = 0;
      uint64_t v100 = objc_retainBlock(v151);
      id v101 = sub_1001704C4();
      uint64_t v102 = (os_log_s *)objc_claimAutoreleasedReturnValue(v101);
      if (os_log_type_enabled(v102, OS_LOG_TYPE_DEFAULT))
      {
        if (v47) {
          id v103 = @"YES";
        }
        else {
          id v103 = @"NO";
        }
        uint64_t v104 = (void *)objc_claimAutoreleasedReturnValue([v99 callContainer]);
        id v105 = (void *)objc_claimAutoreleasedReturnValue([v104 _allCalls]);
        if ([v105 count]) {
          uint64_t v106 = @"NO";
        }
        else {
          uint64_t v106 = @"YES";
        }
        *(_DWORD *)buf = 138413314;
        *(void *)v175 = v103;
        *(_WORD *)&v175[8] = 2112;
        v176 = v106;
        v177 = 2112;
        v178 = @"NO";
        v179 = 2112;
        v180 = @"NO";
        v181 = 2112;
        v182 = @"NO";
        _os_log_impl( (void *)&_mh_execute_header,  v102,  OS_LOG_TYPE_DEFAULT,  "Should we screen? shouldSendToScreening=%@ noOtherCalls=%@ homeCountry=%@ hasSpamIdentifierInCarrierName=%@ is AnsweringMachineAvailable=%@",  buf,  0x34u);
      }

      id v107 = (void *)objc_claimAutoreleasedReturnValue([v99 featureFlags]);
      if (([v107 callScreeningEnabledM3] & v47) == 1)
      {
        uint64_t v108 = (void *)objc_claimAutoreleasedReturnValue([v99 callContainer]);
        char v109 = (void *)objc_claimAutoreleasedReturnValue([v108 _allCalls]);
        if (![v109 count]) {
          [v147 isTelephonyProvider];
        }
      }

      ((void (*)(void *))v100[2])(v100);
      _Block_object_dispose(&v168, 8);

      goto LABEL_98;
    }

    if ([v139 isFromBlockList])
    {
      char v78 = sub_1001704C4();
      char v79 = (os_log_s *)objc_claimAutoreleasedReturnValue(v78);
      if (os_log_type_enabled(v79, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v79,  OS_LOG_TYPE_DEFAULT,  "[WARN] Returning error for add incoming call request because it was on the block list",  buf,  2u);
      }

      unsigned int v80 = objc_claimAutoreleasedReturnValue(+[NSError cx_incomingCallErrorWithCode:](&OBJC_CLASS___NSError, "cx_incomingCallErrorWithCode:", 4LL));
      id v81 = (void *)v169[5];
      v169[5] = v80;

      goto LABEL_65;
    }

    if (-[CSDProviderCallDataSource _shouldBlockIfScreenSharing](self, "_shouldBlockIfScreenSharing"))
    {
      uint64_t v82 = sub_1001704C4();
      id v83 = (os_log_s *)objc_claimAutoreleasedReturnValue(v82);
      if (os_log_type_enabled(v83, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v83,  OS_LOG_TYPE_DEFAULT,  "[WARN] Blocking call because we are screen sharing and don't want to let that notification come through",  buf,  2u);
      }

      uint64_t v84 = objc_claimAutoreleasedReturnValue(+[NSError cx_incomingCallErrorWithCode:](&OBJC_CLASS___NSError, "cx_incomingCallErrorWithCode:", 104LL));
      id v85 = (void *)v169[5];
      v169[5] = v84;
    }

    else
    {
      if (((v62 | v65) & 1) == 0)
      {
        uint64_t v94 = sub_1001704C4();
        unint64_t v95 = (os_log_s *)objc_claimAutoreleasedReturnValue(v94);
        if (os_log_type_enabled(v95, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v96 = [v141 isCarPlayRouteAvailable];
          *(_DWORD *)buf = 67109632;
          *(_DWORD *)v175 = v63;
          *(_WORD *)&v175[4] = 1024;
          *(_DWORD *)&v175[6] = v64;
          LOWORD(v176) = 1024;
          *(_DWORD *)((char *)&v176 + 2) = v96;
          _os_log_impl( (void *)&_mh_execute_header,  v95,  OS_LOG_TYPE_DEFAULT,  "[WARN] Returning error for add incoming call request because call did not pass DND filter. CarMode (%d) BT A udio Route (%d), CarPlay (%d)",  buf,  0x14u);
        }

        unint64_t v97 = objc_claimAutoreleasedReturnValue(+[NSError cx_incomingCallErrorWithCode:](&OBJC_CLASS___NSError, "cx_incomingCallErrorWithCode:", 3LL));
        uint64_t v98 = (void *)v169[5];
        v169[5] = v97;

        uint64_t v47 = 1;
        goto LABEL_83;
      }

      if (!self->_sharingModeEnabled)
      {
        unsigned int v110 = (unsigned int (**)(void))objc_claimAutoreleasedReturnValue( -[CSDProviderCallDataSource supportsPrimaryCalling]( self,  "supportsPrimaryCalling"));
        if (v110[2]())
        {
        }

        else
        {
          uint64_t v111 = (uint64_t (**)(void, void, void))objc_claimAutoreleasedReturnValue( -[CSDProviderCallDataSource shouldPreferRelayOverDirectSecondaryCalling]( self,  "shouldPreferRelayOverDirectSecondaryCalling"));
          unint64_t v112 = ((uint64_t (**)(void, void *, id))v111)[2]( v111,  v147,  -[__CFString hasVideo](v9, "hasVideo"));

          if (v112)
          {
            char v113 = sub_1001704C4();
            char v114 = (os_log_s *)objc_claimAutoreleasedReturnValue(v113);
            if (os_log_type_enabled(v114, OS_LOG_TYPE_DEFAULT))
            {
              *(_WORD *)buf = 0;
              _os_log_impl( (void *)&_mh_execute_header,  v114,  OS_LOG_TYPE_DEFAULT,  "[WARN] Returning error for add incoming call request because it is a direct call to a secondary device a nd relay calling is preferred over direct calling",  buf,  2u);
            }

            unsigned int v115 = objc_claimAutoreleasedReturnValue( +[NSError cx_incomingCallErrorWithCode:]( &OBJC_CLASS___NSError,  "cx_incomingCallErrorWithCode:",  100LL));
            uint64_t v116 = (void *)v169[5];
            v169[5] = v115;

            goto LABEL_65;
          }
        }

        unint64_t v117 = (uint64_t (**)(void, void, void))objc_claimAutoreleasedReturnValue( -[CSDProviderCallDataSource shouldFilterCall]( self,  "shouldFilterCall"));
        char v118 = ((uint64_t (**)(void, __CFString *, void *))v117)[2](v117, v9, v147);

        if (!v118)
        {
          if (-[__CFString requiresAuthentication](v9, "requiresAuthentication"))
          {
            unint64_t v121 = sub_1001704C4();
            char v122 = (os_log_s *)objc_claimAutoreleasedReturnValue(v121);
            if (os_log_type_enabled(v122, OS_LOG_TYPE_DEFAULT))
            {
              *(_WORD *)buf = 0;
              _os_log_impl( (void *)&_mh_execute_header,  v122,  OS_LOG_TYPE_DEFAULT,  "[WARN] Update requires additional authentication before it can be answered",  buf,  2u);
            }

            char v123 = objc_alloc(&OBJC_CLASS___CSDIDSPendingChat);
            unsigned int v124 = (void *)objc_claimAutoreleasedReturnValue(-[__CFString UUID](v9, "UUID"));
            uint64_t v125 = -[__CFString hasVideo](v9, "hasVideo");
            unint64_t v126 = (void *)objc_claimAutoreleasedReturnValue(-[__CFString remoteHandle](v9, "remoteHandle"));
            char v127 = (void *)objc_claimAutoreleasedReturnValue([v126 tuHandle]);
            char v128 = -[CSDIDSPendingChat initWithUUID:isVideo:handle:]( v123,  "initWithUUID:isVideo:handle:",  v124,  v125,  v127);

            unsigned int v129 = -[CSDProviderCall initIncomingWithBackingCallSource:UUID:update:]( objc_alloc(&OBJC_CLASS___CSDProviderCall),  "initIncomingWithBackingCallSource:UUID:update:",  v148,  v149,  v9);
            [v129 setLocalUserInHomeCountry:0];
            [v129 setAnsweringMachineAvailable:0];
            [v129 setIdentifiedSpamInCallerName:0];
            [v138 setCallDelegatesIfNeeded:v129];
            unint64_t v130 = (void *)objc_claimAutoreleasedReturnValue(-[CSDProviderCallDataSource pendingCallsToChatUUIDs](self, "pendingCallsToChatUUIDs"));
            char v131 = (void *)objc_claimAutoreleasedReturnValue(-[CSDIDSPendingChat uuid](v128, "uuid"));
            [v130 setObject:v129 forKeyedSubscript:v131];

            uint64_t v132 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
            v183 = @"CSDIDSPendingChatKey";
            v184 = v128;
            BOOL v133 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v184,  &v183,  1LL));
            [v132 postNotificationName:@"CSDIDSPendingMessageDidReceiveInviteNotification" object:0 userInfo:v133];
          }

          else
          {
            uint64_t v134 = objc_claimAutoreleasedReturnValue(-[CSDProviderCallDataSource _endMutuallyExclusiveCalls:](self, "_endMutuallyExclusiveCalls:", v9));
            v135 = (void *)v169[5];
            v169[5] = v134;

            if (!v169[5])
            {
              v136 = -[CSDProviderCall initIncomingWithBackingCallSource:UUID:update:]( objc_alloc(&OBJC_CLASS___CSDProviderCall),  "initIncomingWithBackingCallSource:UUID:update:",  v148,  v149,  v9);
              [v136 setLocalUserInHomeCountry:0];
              [v136 setAnsweringMachineAvailable:0];
              [v136 setIdentifiedSpamInCallerName:0];
              [v138 setCallDelegatesIfNeeded:v136];
              [v138 propertiesChangedForCall:v136];
            }
          }

          goto LABEL_65;
        }

        char v119 = objc_claimAutoreleasedReturnValue(+[NSError cx_incomingCallErrorWithCode:](&OBJC_CLASS___NSError, "cx_incomingCallErrorWithCode:", 4LL));
        unsigned int v120 = (void *)v169[5];
        v169[5] = v119;

        uint64_t v47 = -[__CFString filteredOutReason](v9, "filteredOutReason") != 5;
LABEL_83:
        id v48 = 1;
        goto LABEL_84;
      }

      uint64_t v90 = sub_1001704C4();
      unint64_t v91 = (os_log_s *)objc_claimAutoreleasedReturnValue(v90);
      if (os_log_type_enabled(v91, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v91,  OS_LOG_TYPE_DEFAULT,  "[WARN] Returning error for add incoming call request because device is currently in sharing mode",  buf,  2u);
      }

      uint64_t v92 = objc_claimAutoreleasedReturnValue(+[NSError cx_incomingCallErrorWithCode:](&OBJC_CLASS___NSError, "cx_incomingCallErrorWithCode:", 5LL));
      unint64_t v93 = (void *)v169[5];
      v169[5] = v92;
    }

    uint64_t v47 = 0;
    goto LABEL_83;
  }

  uint64_t v66 = (void *)objc_claimAutoreleasedReturnValue([v147 bundleIdentifier]);
  uint64_t v67 = (void *)objc_claimAutoreleasedReturnValue([v138 voipApplicationController]);
  unint64_t v68 = [v67 shouldAllowIncomingCall:v66];

  if (v68)
  {
    char v69 = (void *)objc_claimAutoreleasedReturnValue([v138 voipApplicationController]);
    [v69 noteReportedNewIncomingVoIPCallForBundleIdentifier:v66];

    goto LABEL_57;
  }

  uint64_t v86 = sub_1001704C4();
  id v87 = (os_log_s *)objc_claimAutoreleasedReturnValue(v86);
  if (os_log_type_enabled(v87, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v87,  OS_LOG_TYPE_DEFAULT,  "[WARN] Ignoring add incoming call request because we are not allowing the app to receive calls: ",  buf,  2u);
  }

  uint64_t v88 = (void *)objc_claimAutoreleasedReturnValue( +[NSError cx_incomingCallErrorWithCode:]( &OBJC_CLASS___NSError,  "cx_incomingCallErrorWithCode:",  106LL));
  v144[2](v144, v88);

  _Block_object_dispose(&v168, 8);
LABEL_98:
}

      id v8 = (v30 - 1) & v30;
      int v28 = __clz(__rbit64(v30)) + (v29 << 6);
      id v7 = v29;
LABEL_26:
      int v33 = (void *)(*(void *)(v6 + 48) + 16 * v28);
      id v9 = (void *)*v33;
      int v10 = v33[1];
      if (v3 >= v23)
      {
        id result = (void *)swift_bridgeObjectRetain(v10);
        id v3 = v23;
        goto LABEL_45;
      }

      id result = (void *)swift_bridgeObjectRetain(v10);
    }
  }

  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
  return result;
}

          swift_release(v6);
          id v21 = 0;
          return v21 & 1;
        }
      }
    }

    sub_10023CB14();
    __int16 v16 = v19 + (v13 << 6);
LABEL_26:
    __int16 v20 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v22 = *v20;
    id v21 = v20[1];
    char v23 = *(void *)(*(void *)(v3 + 56) + 8 * v16);
    Hasher.init(_seed:)(v36, *(void *)(v11 + 40));
    swift_bridgeObjectRetain(v21);
    swift_bridgeObjectRetain(v23);
    String.hash(into:)(v36, v22, v21);
    unsigned int v24 = Hasher._finalize()() & ~(-1LL << *(_BYTE *)(v11 + 32));
    if (((-1LL << v24) & ~*(void *)(v14 + 8 * (v24 >> 6))) == 0)
    {
      sub_100201674();
      while (++v26 != v27 || (v25 & 1) == 0)
      {
        int v28 = v26 == v27;
        if (v26 == v27) {
          int v26 = 0LL;
        }
        v25 |= v28;
        if (*(void *)(v14 + 8 * v26) != -1LL)
        {
          sub_100201660();
          goto LABEL_35;
        }
      }

      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }

    sub_100201688();
LABEL_35:
    sub_10023CAD8();
    *(void *)(v14 + v29) |= v30;
    int v32 = (void *)(*(void *)(v11 + 48) + 16 * v31);
    *int v32 = v22;
    v32[1] = v21;
    *(void *)(*(void *)(v11 + 56) + 8 * v31) = v23;
    sub_10023CB00();
    if (v33) {
      goto LABEL_39;
    }
    if (!v4) {
      return;
    }
  }

  int v18 = v17 + 3;
  if (v18 >= v35) {
    return;
  }
  if (v34[v18])
  {
    id v13 = v18;
    goto LABEL_25;
  }

  while (1)
  {
    id v13 = v18 + 1;
    if (__OFADD__(v18, 1LL)) {
      break;
    }
    if (v13 >= v35) {
      return;
    }
    ++v18;
    if (v34[v13]) {
      goto LABEL_25;
    }
  }

    sub_10023CB14();
    __int16 v16 = v19 + (v13 << 6);
LABEL_26:
    sub_1001D8A64(*(void *)(v3 + 48) + 40 * v16, (uint64_t)v37);
    sub_1001B03FC(*(void *)(v3 + 56) + 32 * v16, (uint64_t)v36);
    int v33 = v37[0];
    char v34 = v37[1];
    id v35 = v38;
    sub_1001B03EC(v36, v32);
    __int16 v20 = AnyHashable._rawHashValue(seed:)(*(void *)(v11 + 40)) & ~(-1LL << *(_BYTE *)(v11 + 32));
    if (((-1LL << v20) & ~*(void *)(v14 + 8 * (v20 >> 6))) == 0)
    {
      sub_100201674();
      while (++v22 != v23 || (v21 & 1) == 0)
      {
        unsigned int v24 = v22 == v23;
        if (v22 == v23) {
          uint64_t v22 = 0LL;
        }
        v21 |= v24;
        if (*(void *)(v14 + 8 * v22) != -1LL)
        {
          sub_100201660();
          goto LABEL_35;
        }
      }

      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }

    sub_100201688();
LABEL_35:
    sub_10023CAD8();
    *(void *)(v14 + v25) |= v26;
    int v28 = *(void *)(v11 + 48) + 40 * v27;
    int v29 = v34;
    *(_OWORD *)int v28 = v33;
    *(_OWORD *)(v28 + 16) = v29;
    *(void *)(v28 + 32) = v35;
    sub_1001B03EC(v32, (_OWORD *)(*(void *)(v11 + 56) + 32 * v27));
    sub_10023CB00();
    if (v30) {
      goto LABEL_39;
    }
    if (!v4) {
      return;
    }
  }

  int v18 = v17 + 3;
  if (v18 >= v8) {
    return;
  }
  if (v31[v18])
  {
    id v13 = v18;
    goto LABEL_25;
  }

  while (1)
  {
    id v13 = v18 + 1;
    if (__OFADD__(v18, 1LL)) {
      break;
    }
    if (v13 >= v8) {
      return;
    }
    ++v18;
    if (v31[v13]) {
      goto LABEL_25;
    }
  }

    id v13 = (v18 - 1) & v18;
  }

  uint64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  int v18 = *(void *)(v2 + 8 * v19);
  if (v18)
  {
    int v10 = v19;
    goto LABEL_25;
  }

  while (1)
  {
    int v10 = v19 + 1;
    if (__OFADD__(v19, 1LL)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    int v18 = *(void *)(v2 + 8 * v10);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }

    int v12 = (v17 - 1) & v17;
  }

  int v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  uint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    id v9 = v18;
    goto LABEL_25;
  }

  while (1)
  {
    id v9 = v18 + 1;
    if (__OFADD__(v18, 1LL)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    uint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_25;
    }
  }

    id v13 = (v18 - 1) & v18;
  }

  uint64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  int v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    id v9 = v19;
    goto LABEL_25;
  }

  while (1)
  {
    id v9 = v19 + 1;
    if (__OFADD__(v19, 1LL)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_28;
    }
    int v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }

    uint64_t v17 = (v22 - 1) & v22;
  }

  char v23 = v21 + 3;
  if (v23 >= v18)
  {
LABEL_28:
    id result = (void *)swift_release(v6);
    uint64_t v1 = v26;
    goto LABEL_30;
  }

  uint64_t v22 = *(void *)(v10 + 8 * v23);
  if (v22)
  {
    id v13 = v23;
    goto LABEL_25;
  }

  while (1)
  {
    id v13 = v23 + 1;
    if (__OFADD__(v23, 1LL)) {
      break;
    }
    if (v13 >= v18) {
      goto LABEL_28;
    }
    uint64_t v22 = *(void *)(v10 + 8 * v13);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }

    int v12 = (v17 - 1) & v17;
  }

  int v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  uint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    id v9 = v18;
    goto LABEL_25;
  }

  while (1)
  {
    id v9 = v18 + 1;
    if (__OFADD__(v18, 1LL)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    uint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_25;
    }
  }

      int v32 = [v30 copy];
      _bridgeAnyObjectToAny(_:)(v108, v32);
      swift_unknownObjectRelease(v32);
      sub_1001D8EA0(0LL, (unint64_t *)&qword_10044CAD0, &OBJC_CLASS___TURoute_ptr);
      if ((swift_dynamicCast(&v107, v108, (char *)&type metadata for Any + 8, v33, 6LL) & 1) != 0)
      {
        unint64_t v97 = v11;
        char v34 = v107;
        id v35 = [v107 v12[359]];
        int v36 = v1;
        uint64_t v1 = (uint64_t *)static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
        char v38 = v37;

        swift_beginAccess(v36, v108, 33LL, 0LL);
        id v39 = v34;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v36);
        id v107 = (id)*v36;
        uint64_t v6 = (uint64_t)v107;
        unint64_t v41 = v36;
        *int v36 = 0x8000000000000000LL;
        id v42 = sub_1001D7094((uint64_t)v1, v38);
        __int16 v44 = *(void *)(v6 + 16);
        id v45 = (v43 & 1) == 0;
        unsigned int v4 = (void (**)(uint64_t, void, uint64_t))(v44 + v45);
        if (__OFADD__(v44, v45)) {
          goto LABEL_58;
        }
        BOOL v2 = v42;
        uint64_t v46 = v43;
        sub_1001AFF14(&qword_10044AD08);
        uint64_t v6 = (uint64_t)&v107;
        if (_NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, (Swift::Int)v4))
        {
          uint64_t v6 = (uint64_t)v107;
          uint64_t v47 = sub_1001D7094((uint64_t)v1, v38);
          if ((v46 & 1) != (v48 & 1))
          {
            KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
            __break(1u);
            return;
          }

          BOOL v2 = v47;
        }

        unsigned int v4 = (void (**)(uint64_t, void, uint64_t))v107;
        if ((v46 & 1) != 0)
        {
          id v49 = *((void *)v107 + 7);

          *(void *)(v49 + 8 * v2) = v39;
        }

        else
        {
          *((void *)v107 + (v2 >> 6) + 8) |= 1LL << v2;
          char v52 = (uint64_t **)((char *)v4[6] + 16 * v2);
          void *v52 = v1;
          v52[1] = (uint64_t *)v38;
          *((void *)v4[7] + v2) = v39;
          id v53 = v4[2];
          id v54 = __OFADD__(v53, 1LL);
          id v55 = (void (*)(uint64_t, void, uint64_t))((char *)v53 + 1);
          if (v54) {
            goto LABEL_59;
          }
          v4[2] = v55;
          swift_bridgeObjectRetain(v38);
        }

        uint64_t v1 = v41;
        id v56 = *v41;
        void *v41 = (uint64_t)v4;
        swift_bridgeObjectRelease(v38);
        swift_bridgeObjectRelease(v56);
        swift_endAccess(v108);

        BOOL v2 = v96;
        id v11 = v97;
        uint64_t v6 = v98;
        int v10 = v101;
        int v12 = &selRef_sharedPrivacyManager;
        unsigned int v4 = v106;
      }

      else
      {

        uint64_t v6 = v98;
      }

  sub_1001B4C00(v59, &qword_1004499B0, &OBJC_CLASS___NSCompoundPredicate_ptr);
  sub_10023D8E4(v76);
  sub_1001E90C0();
}

  __break(1u);
  return result;
}

uint64_t sub_10005DE5C(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0LL;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1LL || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0LL;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0LL;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    unint64_t v12 = v6 >> 3;
    if ((v6 >> 3) == 3)
    {
      char v16 = 0;
      unsigned int v17 = 0;
      uint64_t v18 = 0LL;
      *(_BYTE *)(a1 + 28) |= 1u;
      while (1)
      {
        unint64_t v19 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v19 == -1LL || v19 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v20 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v19);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v19 + 1;
        v18 |= (unint64_t)(v20 & 0x7F) << v16;
        if ((v20 & 0x80) == 0) {
          goto LABEL_38;
        }
        v16 += 7;
        BOOL v9 = v17++ >= 9;
        if (v9)
        {
          LODWORD(v1_Block_object_dispose(va, 8) = 0;
          goto LABEL_40;
        }
      }

      *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_38:
      if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        LODWORD(v1_Block_object_dispose(va, 8) = 0;
      }
LABEL_40:
      uint64_t v26 = 8LL;
    }

    else
    {
      if ((_DWORD)v12 != 2)
      {
        if ((_DWORD)v12 == 1)
        {
          uint64_t String = PBReaderReadString(a2);
          uint64_t v14 = objc_claimAutoreleasedReturnValue(String);
          uint64_t v15 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v14;
        }

        else
        {
          uint64_t result = PBReaderSkipValueWithTag(a2);
          if (!(_DWORD)result) {
            return result;
          }
        }

        continue;
      }

      char v21 = 0;
      unsigned int v22 = 0;
      uint64_t v18 = 0LL;
      *(_BYTE *)(a1 + 28) |= 2u;
      while (1)
      {
        unint64_t v23 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v23 == -1LL || v23 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v24 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v23);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v23 + 1;
        v18 |= (unint64_t)(v24 & 0x7F) << v21;
        if ((v24 & 0x80) == 0) {
          goto LABEL_42;
        }
        v21 += 7;
        BOOL v9 = v22++ >= 9;
        if (v9)
        {
          LODWORD(v1_Block_object_dispose(va, 8) = 0;
          goto LABEL_44;
        }
      }

      *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_42:
      if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        LODWORD(v1_Block_object_dispose(va, 8) = 0;
      }
LABEL_44:
      uint64_t v26 = 24LL;
    }

    *(_DWORD *)(a1 + v26) = v18;
  }

  return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

uint64_t sub_10005E6B0(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0LL;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1LL || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0LL;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0LL;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      break;
    }
    if ((v6 >> 3) == 1)
    {
      char v12 = 0;
      unsigned int v13 = 0;
      uint64_t v14 = 0LL;
      *(_BYTE *)(a1 + 12) |= 1u;
      while (1)
      {
        unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v15 == -1LL || v15 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v16 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
        v14 |= (unint64_t)(v16 & 0x7F) << v12;
        if ((v16 & 0x80) == 0) {
          goto LABEL_28;
        }
        v12 += 7;
        BOOL v9 = v13++ >= 9;
        if (v9)
        {
          uint64_t v14 = 0LL;
          goto LABEL_30;
        }
      }

      *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_28:
      if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        uint64_t v14 = 0LL;
      }
LABEL_30:
      *(_BYTE *)(a1 + _Block_object_dispose(va, 8) = v14 != 0;
    }

    else
    {
      uint64_t result = PBReaderSkipValueWithTag(a2);
      if (!(_DWORD)result) {
        return result;
      }
    }
  }

  return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

LABEL_5:
  return v6;
}

LABEL_6:
LABEL_7:
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(-[CSDFaceTimeProviderDelegate faceTimeIDSProviderDelegate](self, "faceTimeIDSProviderDelegate"));
  unint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v7 callUUID]);
  char v16 = [v14 isManagingCallWithUUID:v15];

  if (v16)
  {
    unsigned int v17 = (void *)objc_claimAutoreleasedReturnValue(-[CSDFaceTimeProviderDelegate faceTimeIDSProviderDelegate](self, "faceTimeIDSProviderDelegate"));
    [v17 provider:v6 performAnswerCallAction:v7];
  }

  uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(-[CSDFaceTimeProviderDelegate faceTimeIMAVProviderDelegate](self, "faceTimeIMAVProviderDelegate"));
  unint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([v7 callUUID]);
  char v20 = [v18 isManagingCallWithUUID:v19];

  if (v20)
  {
    char v21 = (void *)objc_claimAutoreleasedReturnValue(-[CSDFaceTimeProviderDelegate faceTimeIMAVProviderDelegate](self, "faceTimeIMAVProviderDelegate"));
    [v21 provider:v6 performAnswerCallAction:v7];
  }

  unsigned int v22 = (void *)objc_claimAutoreleasedReturnValue( -[CSDFaceTimeProviderDelegate faceTimeConversationProviderDelegate]( self,  "faceTimeConversationProviderDelegate"));
  unint64_t v23 = (void *)objc_claimAutoreleasedReturnValue([v7 callUUID]);
  char v24 = [v22 isManagingCallWithUUID:v23];

  if (v24)
  {
    int v25 = (void *)objc_claimAutoreleasedReturnValue( -[CSDFaceTimeProviderDelegate faceTimeConversationProviderDelegate]( self,  "faceTimeConversationProviderDelegate"));
    [v25 provider:v6 performAnswerCallAction:v7];
  }

  uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue( -[CSDFaceTimeProviderDelegate groupFaceTimeServiceProviderDelegate]( self,  "groupFaceTimeServiceProviderDelegate"));
  int v27 = (void *)objc_claimAutoreleasedReturnValue([v7 callUUID]);
  int v28 = [v26 isManagingCallWithUUID:v27];

  if (v28)
  {
    int v29 = (void *)objc_claimAutoreleasedReturnValue( -[CSDFaceTimeProviderDelegate groupFaceTimeServiceProviderDelegate]( self,  "groupFaceTimeServiceProviderDelegate"));
    [v29 provider:v6 performAnswerCallAction:v7];
  }

LABEL_6:
LABEL_7:
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(-[CSDFaceTimeProviderDelegate faceTimeIDSProviderDelegate](self, "faceTimeIDSProviderDelegate"));
  unint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v7 callUUID]);
  char v16 = [v14 isManagingCallWithUUID:v15];

  if (v16)
  {
    unsigned int v17 = (void *)objc_claimAutoreleasedReturnValue(-[CSDFaceTimeProviderDelegate faceTimeIDSProviderDelegate](self, "faceTimeIDSProviderDelegate"));
    [v17 provider:v6 performEndCallAction:v7];
  }

  uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(-[CSDFaceTimeProviderDelegate faceTimeIMAVProviderDelegate](self, "faceTimeIMAVProviderDelegate"));
  unint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([v7 callUUID]);
  char v20 = [v18 isManagingCallWithUUID:v19];

  if (v20)
  {
    char v21 = (void *)objc_claimAutoreleasedReturnValue(-[CSDFaceTimeProviderDelegate faceTimeIMAVProviderDelegate](self, "faceTimeIMAVProviderDelegate"));
    [v21 provider:v6 performEndCallAction:v7];
  }

  unsigned int v22 = (void *)objc_claimAutoreleasedReturnValue( -[CSDFaceTimeProviderDelegate faceTimeConversationProviderDelegate]( self,  "faceTimeConversationProviderDelegate"));
  unint64_t v23 = (void *)objc_claimAutoreleasedReturnValue([v7 callUUID]);
  char v24 = [v22 isManagingCallWithUUID:v23];

  if (v24)
  {
    int v25 = (void *)objc_claimAutoreleasedReturnValue( -[CSDFaceTimeProviderDelegate faceTimeConversationProviderDelegate]( self,  "faceTimeConversationProviderDelegate"));
    [v25 provider:v6 performEndCallAction:v7];
  }

  uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue( -[CSDFaceTimeProviderDelegate groupFaceTimeServiceProviderDelegate]( self,  "groupFaceTimeServiceProviderDelegate"));
  int v27 = (void *)objc_claimAutoreleasedReturnValue([v7 callUUID]);
  int v28 = [v26 isManagingCallWithUUID:v27];

  if (v28)
  {
    int v29 = (void *)objc_claimAutoreleasedReturnValue( -[CSDFaceTimeProviderDelegate groupFaceTimeServiceProviderDelegate]( self,  "groupFaceTimeServiceProviderDelegate"));
    [v29 provider:v6 performEndCallAction:v7];
  }

LABEL_6:
LABEL_7:
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(-[CSDFaceTimeProviderDelegate faceTimeIDSProviderDelegate](self, "faceTimeIDSProviderDelegate"));
  unint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v7 callUUID]);
  char v16 = [v14 isManagingCallWithUUID:v15];

  if (v16)
  {
    unsigned int v17 = (void *)objc_claimAutoreleasedReturnValue(-[CSDFaceTimeProviderDelegate faceTimeIDSProviderDelegate](self, "faceTimeIDSProviderDelegate"));
    [v17 provider:v6 performSetHeldCallAction:v7];
  }

  uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(-[CSDFaceTimeProviderDelegate faceTimeIMAVProviderDelegate](self, "faceTimeIMAVProviderDelegate"));
  unint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([v7 callUUID]);
  char v20 = [v18 isManagingCallWithUUID:v19];

  if (v20)
  {
    char v21 = (void *)objc_claimAutoreleasedReturnValue(-[CSDFaceTimeProviderDelegate faceTimeIMAVProviderDelegate](self, "faceTimeIMAVProviderDelegate"));
    [v21 provider:v6 performSetHeldCallAction:v7];
  }

  unsigned int v22 = (void *)objc_claimAutoreleasedReturnValue( -[CSDFaceTimeProviderDelegate faceTimeConversationProviderDelegate]( self,  "faceTimeConversationProviderDelegate"));
  unint64_t v23 = (void *)objc_claimAutoreleasedReturnValue([v7 callUUID]);
  char v24 = [v22 isManagingCallWithUUID:v23];

  if (v24)
  {
    int v25 = (void *)objc_claimAutoreleasedReturnValue( -[CSDFaceTimeProviderDelegate faceTimeConversationProviderDelegate]( self,  "faceTimeConversationProviderDelegate"));
    [v25 provider:v6 performSetHeldCallAction:v7];
  }

  uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue( -[CSDFaceTimeProviderDelegate groupFaceTimeServiceProviderDelegate]( self,  "groupFaceTimeServiceProviderDelegate"));
  int v27 = (void *)objc_claimAutoreleasedReturnValue([v7 callUUID]);
  int v28 = [v26 isManagingCallWithUUID:v27];

  if (v28)
  {
    int v29 = (void *)objc_claimAutoreleasedReturnValue( -[CSDFaceTimeProviderDelegate groupFaceTimeServiceProviderDelegate]( self,  "groupFaceTimeServiceProviderDelegate"));
    [v29 provider:v6 performSetHeldCallAction:v7];
  }

LABEL_6:
LABEL_7:
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(-[CSDFaceTimeProviderDelegate faceTimeIDSProviderDelegate](self, "faceTimeIDSProviderDelegate"));
  unint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v7 callUUID]);
  char v16 = [v14 isManagingCallWithUUID:v15];

  if (v16)
  {
    unsigned int v17 = (void *)objc_claimAutoreleasedReturnValue(-[CSDFaceTimeProviderDelegate faceTimeIDSProviderDelegate](self, "faceTimeIDSProviderDelegate"));
    [v17 provider:v6 performSetSendingVideoCallAction:v7];
  }

  uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(-[CSDFaceTimeProviderDelegate faceTimeIMAVProviderDelegate](self, "faceTimeIMAVProviderDelegate"));
  unint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([v7 callUUID]);
  char v20 = [v18 isManagingCallWithUUID:v19];

  if (v20)
  {
    char v21 = (void *)objc_claimAutoreleasedReturnValue(-[CSDFaceTimeProviderDelegate faceTimeIMAVProviderDelegate](self, "faceTimeIMAVProviderDelegate"));
    [v21 provider:v6 performSetSendingVideoCallAction:v7];
  }

  unsigned int v22 = (void *)objc_claimAutoreleasedReturnValue( -[CSDFaceTimeProviderDelegate faceTimeConversationProviderDelegate]( self,  "faceTimeConversationProviderDelegate"));
  unint64_t v23 = (void *)objc_claimAutoreleasedReturnValue([v7 callUUID]);
  char v24 = [v22 isManagingCallWithUUID:v23];

  if (v24)
  {
    int v25 = (void *)objc_claimAutoreleasedReturnValue( -[CSDFaceTimeProviderDelegate faceTimeConversationProviderDelegate]( self,  "faceTimeConversationProviderDelegate"));
    [v25 provider:v6 performSetSendingVideoCallAction:v7];
  }

  uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue( -[CSDFaceTimeProviderDelegate groupFaceTimeServiceProviderDelegate]( self,  "groupFaceTimeServiceProviderDelegate"));
  int v27 = (void *)objc_claimAutoreleasedReturnValue([v7 callUUID]);
  int v28 = [v26 isManagingCallWithUUID:v27];

  if (v28)
  {
    int v29 = (void *)objc_claimAutoreleasedReturnValue( -[CSDFaceTimeProviderDelegate groupFaceTimeServiceProviderDelegate]( self,  "groupFaceTimeServiceProviderDelegate"));
    [v29 provider:v6 performSetSendingVideoCallAction:v7];
  }

LABEL_6:
LABEL_7:
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(-[CSDFaceTimeProviderDelegate faceTimeIDSProviderDelegate](self, "faceTimeIDSProviderDelegate"));
  unint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v7 callUUID]);
  char v16 = [v14 isManagingCallWithUUID:v15];

  if (v16)
  {
    unsigned int v17 = (void *)objc_claimAutoreleasedReturnValue(-[CSDFaceTimeProviderDelegate faceTimeIDSProviderDelegate](self, "faceTimeIDSProviderDelegate"));
    [v17 provider:v6 performSetSharingScreenCallAction:v7];
  }

  uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(-[CSDFaceTimeProviderDelegate faceTimeIMAVProviderDelegate](self, "faceTimeIMAVProviderDelegate"));
  unint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([v7 callUUID]);
  char v20 = [v18 isManagingCallWithUUID:v19];

  if (v20)
  {
    char v21 = (void *)objc_claimAutoreleasedReturnValue(-[CSDFaceTimeProviderDelegate faceTimeIMAVProviderDelegate](self, "faceTimeIMAVProviderDelegate"));
    [v21 provider:v6 performSetSharingScreenCallAction:v7];
  }

  unsigned int v22 = (void *)objc_claimAutoreleasedReturnValue( -[CSDFaceTimeProviderDelegate faceTimeConversationProviderDelegate]( self,  "faceTimeConversationProviderDelegate"));
  unint64_t v23 = (void *)objc_claimAutoreleasedReturnValue([v7 callUUID]);
  char v24 = [v22 isManagingCallWithUUID:v23];

  if (v24)
  {
    int v25 = (void *)objc_claimAutoreleasedReturnValue( -[CSDFaceTimeProviderDelegate faceTimeConversationProviderDelegate]( self,  "faceTimeConversationProviderDelegate"));
    [v25 provider:v6 performSetSharingScreenCallAction:v7];
  }

  uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue( -[CSDFaceTimeProviderDelegate groupFaceTimeServiceProviderDelegate]( self,  "groupFaceTimeServiceProviderDelegate"));
  int v27 = (void *)objc_claimAutoreleasedReturnValue([v7 callUUID]);
  int v28 = [v26 isManagingCallWithUUID:v27];

  if (v28)
  {
    int v29 = (void *)objc_claimAutoreleasedReturnValue( -[CSDFaceTimeProviderDelegate groupFaceTimeServiceProviderDelegate]( self,  "groupFaceTimeServiceProviderDelegate"));
    [v29 provider:v6 performSetSharingScreenCallAction:v7];
  }

LABEL_6:
LABEL_7:
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(-[CSDFaceTimeProviderDelegate faceTimeIDSProviderDelegate](self, "faceTimeIDSProviderDelegate"));
  unint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v7 callUUID]);
  char v16 = [v14 isManagingCallWithUUID:v15];

  if (v16)
  {
    unsigned int v17 = (void *)objc_claimAutoreleasedReturnValue(-[CSDFaceTimeProviderDelegate faceTimeIDSProviderDelegate](self, "faceTimeIDSProviderDelegate"));
    [v17 provider:v6 performSetScreenShareAttributesCallAction:v7];
  }

  uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(-[CSDFaceTimeProviderDelegate faceTimeIMAVProviderDelegate](self, "faceTimeIMAVProviderDelegate"));
  unint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([v7 callUUID]);
  char v20 = [v18 isManagingCallWithUUID:v19];

  if (v20)
  {
    char v21 = (void *)objc_claimAutoreleasedReturnValue(-[CSDFaceTimeProviderDelegate faceTimeIMAVProviderDelegate](self, "faceTimeIMAVProviderDelegate"));
    [v21 provider:v6 performSetScreenShareAttributesCallAction:v7];
  }

  unsigned int v22 = (void *)objc_claimAutoreleasedReturnValue( -[CSDFaceTimeProviderDelegate faceTimeConversationProviderDelegate]( self,  "faceTimeConversationProviderDelegate"));
  unint64_t v23 = (void *)objc_claimAutoreleasedReturnValue([v7 callUUID]);
  char v24 = [v22 isManagingCallWithUUID:v23];

  if (v24)
  {
    int v25 = (void *)objc_claimAutoreleasedReturnValue( -[CSDFaceTimeProviderDelegate faceTimeConversationProviderDelegate]( self,  "faceTimeConversationProviderDelegate"));
    [v25 provider:v6 performSetScreenShareAttributesCallAction:v7];
  }

  uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue( -[CSDFaceTimeProviderDelegate groupFaceTimeServiceProviderDelegate]( self,  "groupFaceTimeServiceProviderDelegate"));
  int v27 = (void *)objc_claimAutoreleasedReturnValue([v7 callUUID]);
  int v28 = [v26 isManagingCallWithUUID:v27];

  if (v28)
  {
    int v29 = (void *)objc_claimAutoreleasedReturnValue( -[CSDFaceTimeProviderDelegate groupFaceTimeServiceProviderDelegate]( self,  "groupFaceTimeServiceProviderDelegate"));
    [v29 provider:v6 performSetScreenShareAttributesCallAction:v7];
  }

LABEL_6:
LABEL_7:
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(-[CSDFaceTimeProviderDelegate faceTimeIDSProviderDelegate](self, "faceTimeIDSProviderDelegate"));
  unint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v7 callUUID]);
  char v16 = [v14 isManagingCallWithUUID:v15];

  if (v16)
  {
    unsigned int v17 = (void *)objc_claimAutoreleasedReturnValue(-[CSDFaceTimeProviderDelegate faceTimeIDSProviderDelegate](self, "faceTimeIDSProviderDelegate"));
    [v17 provider:v6 performEnableVideoCallAction:v7];
  }

  uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(-[CSDFaceTimeProviderDelegate faceTimeIMAVProviderDelegate](self, "faceTimeIMAVProviderDelegate"));
  unint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([v7 callUUID]);
  char v20 = [v18 isManagingCallWithUUID:v19];

  if (v20)
  {
    char v21 = (void *)objc_claimAutoreleasedReturnValue(-[CSDFaceTimeProviderDelegate faceTimeIMAVProviderDelegate](self, "faceTimeIMAVProviderDelegate"));
    [v21 provider:v6 performEnableVideoCallAction:v7];
  }

  unsigned int v22 = (void *)objc_claimAutoreleasedReturnValue( -[CSDFaceTimeProviderDelegate faceTimeConversationProviderDelegate]( self,  "faceTimeConversationProviderDelegate"));
  unint64_t v23 = (void *)objc_claimAutoreleasedReturnValue([v7 callUUID]);
  char v24 = [v22 isManagingCallWithUUID:v23];

  if (v24)
  {
    int v25 = (void *)objc_claimAutoreleasedReturnValue( -[CSDFaceTimeProviderDelegate faceTimeConversationProviderDelegate]( self,  "faceTimeConversationProviderDelegate"));
    [v25 provider:v6 performEnableVideoCallAction:v7];
  }

  uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue( -[CSDFaceTimeProviderDelegate groupFaceTimeServiceProviderDelegate]( self,  "groupFaceTimeServiceProviderDelegate"));
  int v27 = (void *)objc_claimAutoreleasedReturnValue([v7 callUUID]);
  int v28 = [v26 isManagingCallWithUUID:v27];

  if (v28)
  {
    int v29 = (void *)objc_claimAutoreleasedReturnValue( -[CSDFaceTimeProviderDelegate groupFaceTimeServiceProviderDelegate]( self,  "groupFaceTimeServiceProviderDelegate"));
    [v29 provider:v6 performEnableVideoCallAction:v7];
  }

LABEL_6:
LABEL_7:
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(-[CSDFaceTimeProviderDelegate faceTimeIDSProviderDelegate](self, "faceTimeIDSProviderDelegate"));
  unint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v7 callUUID]);
  char v16 = [v14 isManagingCallWithUUID:v15];

  if (v16)
  {
    unsigned int v17 = (void *)objc_claimAutoreleasedReturnValue(-[CSDFaceTimeProviderDelegate faceTimeIDSProviderDelegate](self, "faceTimeIDSProviderDelegate"));
    [v17 provider:v6 performSetVideoPresentationSizeCallAction:v7];
  }

  uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(-[CSDFaceTimeProviderDelegate faceTimeIMAVProviderDelegate](self, "faceTimeIMAVProviderDelegate"));
  unint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([v7 callUUID]);
  char v20 = [v18 isManagingCallWithUUID:v19];

  if (v20)
  {
    char v21 = (void *)objc_claimAutoreleasedReturnValue(-[CSDFaceTimeProviderDelegate faceTimeIMAVProviderDelegate](self, "faceTimeIMAVProviderDelegate"));
    [v21 provider:v6 performSetVideoPresentationSizeCallAction:v7];
  }

  unsigned int v22 = (void *)objc_claimAutoreleasedReturnValue( -[CSDFaceTimeProviderDelegate faceTimeConversationProviderDelegate]( self,  "faceTimeConversationProviderDelegate"));
  unint64_t v23 = (void *)objc_claimAutoreleasedReturnValue([v7 callUUID]);
  char v24 = [v22 isManagingCallWithUUID:v23];

  if (v24)
  {
    int v25 = (void *)objc_claimAutoreleasedReturnValue( -[CSDFaceTimeProviderDelegate faceTimeConversationProviderDelegate]( self,  "faceTimeConversationProviderDelegate"));
    [v25 provider:v6 performSetVideoPresentationSizeCallAction:v7];
  }

  uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue( -[CSDFaceTimeProviderDelegate groupFaceTimeServiceProviderDelegate]( self,  "groupFaceTimeServiceProviderDelegate"));
  int v27 = (void *)objc_claimAutoreleasedReturnValue([v7 callUUID]);
  int v28 = [v26 isManagingCallWithUUID:v27];

  if (v28)
  {
    int v29 = (void *)objc_claimAutoreleasedReturnValue( -[CSDFaceTimeProviderDelegate groupFaceTimeServiceProviderDelegate]( self,  "groupFaceTimeServiceProviderDelegate"));
    [v29 provider:v6 performSetVideoPresentationSizeCallAction:v7];
  }

LABEL_6:
LABEL_7:
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(-[CSDFaceTimeProviderDelegate faceTimeIDSProviderDelegate](self, "faceTimeIDSProviderDelegate"));
  unint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v7 callUUID]);
  char v16 = [v14 isManagingCallWithUUID:v15];

  if (v16)
  {
    unsigned int v17 = (void *)objc_claimAutoreleasedReturnValue(-[CSDFaceTimeProviderDelegate faceTimeIDSProviderDelegate](self, "faceTimeIDSProviderDelegate"));
    [v17 provider:v6 performSetVideoPresentationStateCallAction:v7];
  }

  uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(-[CSDFaceTimeProviderDelegate faceTimeIMAVProviderDelegate](self, "faceTimeIMAVProviderDelegate"));
  unint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([v7 callUUID]);
  char v20 = [v18 isManagingCallWithUUID:v19];

  if (v20)
  {
    char v21 = (void *)objc_claimAutoreleasedReturnValue(-[CSDFaceTimeProviderDelegate faceTimeIMAVProviderDelegate](self, "faceTimeIMAVProviderDelegate"));
    [v21 provider:v6 performSetVideoPresentationStateCallAction:v7];
  }

  unsigned int v22 = (void *)objc_claimAutoreleasedReturnValue( -[CSDFaceTimeProviderDelegate faceTimeConversationProviderDelegate]( self,  "faceTimeConversationProviderDelegate"));
  unint64_t v23 = (void *)objc_claimAutoreleasedReturnValue([v7 callUUID]);
  char v24 = [v22 isManagingCallWithUUID:v23];

  if (v24)
  {
    int v25 = (void *)objc_claimAutoreleasedReturnValue( -[CSDFaceTimeProviderDelegate faceTimeConversationProviderDelegate]( self,  "faceTimeConversationProviderDelegate"));
    [v25 provider:v6 performSetVideoPresentationStateCallAction:v7];
  }

  uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue( -[CSDFaceTimeProviderDelegate groupFaceTimeServiceProviderDelegate]( self,  "groupFaceTimeServiceProviderDelegate"));
  int v27 = (void *)objc_claimAutoreleasedReturnValue([v7 callUUID]);
  int v28 = [v26 isManagingCallWithUUID:v27];

  if (v28)
  {
    int v29 = (void *)objc_claimAutoreleasedReturnValue( -[CSDFaceTimeProviderDelegate groupFaceTimeServiceProviderDelegate]( self,  "groupFaceTimeServiceProviderDelegate"));
    [v29 provider:v6 performSetVideoPresentationStateCallAction:v7];
  }

LABEL_6:
LABEL_7:
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(-[CSDFaceTimeProviderDelegate faceTimeIDSProviderDelegate](self, "faceTimeIDSProviderDelegate"));
  unint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v7 callUUID]);
  char v16 = [v14 isManagingCallWithUUID:v15];

  if (v16)
  {
    unsigned int v17 = (void *)objc_claimAutoreleasedReturnValue(-[CSDFaceTimeProviderDelegate faceTimeIDSProviderDelegate](self, "faceTimeIDSProviderDelegate"));
    [v17 provider:v6 performSetRelayingCallAction:v7];
  }

  uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(-[CSDFaceTimeProviderDelegate faceTimeIMAVProviderDelegate](self, "faceTimeIMAVProviderDelegate"));
  unint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([v7 callUUID]);
  char v20 = [v18 isManagingCallWithUUID:v19];

  if (v20)
  {
    char v21 = (void *)objc_claimAutoreleasedReturnValue(-[CSDFaceTimeProviderDelegate faceTimeIMAVProviderDelegate](self, "faceTimeIMAVProviderDelegate"));
    [v21 provider:v6 performSetRelayingCallAction:v7];
  }

  unsigned int v22 = (void *)objc_claimAutoreleasedReturnValue( -[CSDFaceTimeProviderDelegate faceTimeConversationProviderDelegate]( self,  "faceTimeConversationProviderDelegate"));
  unint64_t v23 = (void *)objc_claimAutoreleasedReturnValue([v7 callUUID]);
  char v24 = [v22 isManagingCallWithUUID:v23];

  if (v24)
  {
    int v25 = (void *)objc_claimAutoreleasedReturnValue( -[CSDFaceTimeProviderDelegate faceTimeConversationProviderDelegate]( self,  "faceTimeConversationProviderDelegate"));
    [v25 provider:v6 performSetRelayingCallAction:v7];
  }

  uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue( -[CSDFaceTimeProviderDelegate groupFaceTimeServiceProviderDelegate]( self,  "groupFaceTimeServiceProviderDelegate"));
  int v27 = (void *)objc_claimAutoreleasedReturnValue([v7 callUUID]);
  int v28 = [v26 isManagingCallWithUUID:v27];

  if (v28)
  {
    int v29 = (void *)objc_claimAutoreleasedReturnValue( -[CSDFaceTimeProviderDelegate groupFaceTimeServiceProviderDelegate]( self,  "groupFaceTimeServiceProviderDelegate"));
    [v29 provider:v6 performSetRelayingCallAction:v7];
  }

LABEL_6:
LABEL_7:
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(-[CSDFaceTimeProviderDelegate faceTimeIDSProviderDelegate](self, "faceTimeIDSProviderDelegate"));
  unint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v7 callUUID]);
  char v16 = [v14 isManagingCallWithUUID:v15];

  if (v16)
  {
    unsigned int v17 = (void *)objc_claimAutoreleasedReturnValue(-[CSDFaceTimeProviderDelegate faceTimeIDSProviderDelegate](self, "faceTimeIDSProviderDelegate"));
    [v17 provider:v6 performSetScreeningCallAction:v7];
  }

  uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(-[CSDFaceTimeProviderDelegate faceTimeIMAVProviderDelegate](self, "faceTimeIMAVProviderDelegate"));
  unint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([v7 callUUID]);
  char v20 = [v18 isManagingCallWithUUID:v19];

  if (v20)
  {
    char v21 = (void *)objc_claimAutoreleasedReturnValue(-[CSDFaceTimeProviderDelegate faceTimeIMAVProviderDelegate](self, "faceTimeIMAVProviderDelegate"));
    [v21 provider:v6 performSetScreeningCallAction:v7];
  }

  unsigned int v22 = (void *)objc_claimAutoreleasedReturnValue( -[CSDFaceTimeProviderDelegate faceTimeConversationProviderDelegate]( self,  "faceTimeConversationProviderDelegate"));
  unint64_t v23 = (void *)objc_claimAutoreleasedReturnValue([v7 callUUID]);
  char v24 = [v22 isManagingCallWithUUID:v23];

  if (v24)
  {
    int v25 = (void *)objc_claimAutoreleasedReturnValue( -[CSDFaceTimeProviderDelegate faceTimeConversationProviderDelegate]( self,  "faceTimeConversationProviderDelegate"));
    [v25 provider:v6 performSetScreeningCallAction:v7];
  }

  uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue( -[CSDFaceTimeProviderDelegate groupFaceTimeServiceProviderDelegate]( self,  "groupFaceTimeServiceProviderDelegate"));
  int v27 = (void *)objc_claimAutoreleasedReturnValue([v7 callUUID]);
  int v28 = [v26 isManagingCallWithUUID:v27];

  if (v28)
  {
    int v29 = (void *)objc_claimAutoreleasedReturnValue( -[CSDFaceTimeProviderDelegate groupFaceTimeServiceProviderDelegate]( self,  "groupFaceTimeServiceProviderDelegate"));
    [v29 provider:v6 performSetScreeningCallAction:v7];
  }

LABEL_6:
LABEL_7:
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(-[CSDFaceTimeProviderDelegate faceTimeIDSProviderDelegate](self, "faceTimeIDSProviderDelegate"));
  unint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v7 callUUID]);
  char v16 = [v14 isManagingCallWithUUID:v15];

  if (v16)
  {
    unsigned int v17 = (void *)objc_claimAutoreleasedReturnValue(-[CSDFaceTimeProviderDelegate faceTimeIDSProviderDelegate](self, "faceTimeIDSProviderDelegate"));
    [v17 provider:v6 performSetAllowUplinkAudioInjectionAction:v7];
  }

  uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(-[CSDFaceTimeProviderDelegate faceTimeIMAVProviderDelegate](self, "faceTimeIMAVProviderDelegate"));
  unint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([v7 callUUID]);
  char v20 = [v18 isManagingCallWithUUID:v19];

  if (v20)
  {
    char v21 = (void *)objc_claimAutoreleasedReturnValue(-[CSDFaceTimeProviderDelegate faceTimeIMAVProviderDelegate](self, "faceTimeIMAVProviderDelegate"));
    [v21 provider:v6 performSetAllowUplinkAudioInjectionAction:v7];
  }

  unsigned int v22 = (void *)objc_claimAutoreleasedReturnValue( -[CSDFaceTimeProviderDelegate faceTimeConversationProviderDelegate]( self,  "faceTimeConversationProviderDelegate"));
  unint64_t v23 = (void *)objc_claimAutoreleasedReturnValue([v7 callUUID]);
  char v24 = [v22 isManagingCallWithUUID:v23];

  if (v24)
  {
    int v25 = (void *)objc_claimAutoreleasedReturnValue( -[CSDFaceTimeProviderDelegate faceTimeConversationProviderDelegate]( self,  "faceTimeConversationProviderDelegate"));
    [v25 provider:v6 performSetAllowUplinkAudioInjectionAction:v7];
  }

  uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue( -[CSDFaceTimeProviderDelegate groupFaceTimeServiceProviderDelegate]( self,  "groupFaceTimeServiceProviderDelegate"));
  int v27 = (void *)objc_claimAutoreleasedReturnValue([v7 callUUID]);
  int v28 = [v26 isManagingCallWithUUID:v27];

  if (v28)
  {
    int v29 = (void *)objc_claimAutoreleasedReturnValue( -[CSDFaceTimeProviderDelegate groupFaceTimeServiceProviderDelegate]( self,  "groupFaceTimeServiceProviderDelegate"));
    [v29 provider:v6 performSetAllowUplinkAudioInjectionAction:v7];
  }

  unint64_t v15 = v4;
  if (self->_uUIDString)
  {
    objc_msgSend(v4, "setUUIDString:");
    char v4 = v15;
  }

  if (self->_groupUUIDString)
  {
    objc_msgSend(v15, "setGroupUUIDString:");
    char v4 = v15;
  }

  if (self->_messagesGroupUUIDString)
  {
    objc_msgSend(v15, "setMessagesGroupUUIDString:");
    char v4 = v15;
  }

  if ((*(_BYTE *)&self->_has & 0x10) != 0)
  {
    *((_BYTE *)v4 + 92) = self->_locallyCreated;
    *((_BYTE *)v4 + 96) |= 0x10u;
  }

  if (self->_initiator) {
    objc_msgSend(v15, "setInitiator:");
  }
  if (self->_localMember) {
    objc_msgSend(v15, "setLocalMember:");
  }
  if (-[CSDMessagingConversationRelayMessage remoteMembersCount](self, "remoteMembersCount"))
  {
    [v15 clearRemoteMembers];
    unint64_t v6 = -[CSDMessagingConversationRelayMessage remoteMembersCount](self, "remoteMembersCount");
    if (v6)
    {
      unint64_t v7 = v6;
      for (i = 0LL; i != v7; ++i)
      {
        BOOL v9 = (void *)objc_claimAutoreleasedReturnValue(-[CSDMessagingConversationRelayMessage remoteMembersAtIndex:](self, "remoteMembersAtIndex:", i));
        [v15 addRemoteMembers:v9];
      }
    }
  }

  if (-[CSDMessagingConversationRelayMessage activeParticipantsCount](self, "activeParticipantsCount"))
  {
    [v15 clearActiveParticipants];
    int v10 = -[CSDMessagingConversationRelayMessage activeParticipantsCount](self, "activeParticipantsCount");
    if (v10)
    {
      id v11 = v10;
      for (j = 0LL; j != v11; ++j)
      {
        unsigned int v13 = (void *)objc_claimAutoreleasedReturnValue( -[CSDMessagingConversationRelayMessage activeParticipantsAtIndex:]( self,  "activeParticipantsAtIndex:",  j));
        [v15 addActiveParticipants:v13];
      }
    }
  }

  uint64_t v14 = v15;
  if ((*(_BYTE *)&self->_has & 1) != 0)
  {
    v15[4] = self->_avMode;
    *((_BYTE *)v15 + 96) |= 1u;
  }

  if (self->_reportData)
  {
    objc_msgSend(v15, "setReportData:");
    uint64_t v14 = v15;
  }
}

  char v8 = -[NSString copyWithZone:](self->_uUIDString, "copyWithZone:", a3);
  BOOL v9 = (void *)v6[10];
  v6[10] = v8;

  int v10 = -[NSString copyWithZone:](self->_groupUUIDString, "copyWithZone:", a3);
  id v11 = (void *)v6[3];
  v6[3] = v10;

  char v12 = -[NSString copyWithZone:](self->_messagesGroupUUIDString, "copyWithZone:", a3);
  unsigned int v13 = (void *)v6[6];
  v6[6] = v12;

  if ((*(_BYTE *)&self->_has & 0x10) != 0)
  {
    *((_BYTE *)v6 + 92) = self->_locallyCreated;
    *((_BYTE *)v6 + 96) |= 0x10u;
  }

  uint64_t v14 = -[CSDMessagingHandle copyWithZone:](self->_initiator, "copyWithZone:", a3);
  unint64_t v15 = (void *)v6[4];
  v6[4] = v14;

  char v16 = -[CSDMessagingConversationMember copyWithZone:](self->_localMember, "copyWithZone:", a3);
  unsigned int v17 = (void *)v6[5];
  v6[5] = v16;

  id v39 = 0u;
  unsigned int v40 = 0u;
  int v37 = 0u;
  char v38 = 0u;
  uint64_t v18 = self->_remoteMembers;
  unint64_t v19 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v18,  "countByEnumeratingWithState:objects:count:",  &v37,  v42,  16LL);
  if (v19)
  {
    char v20 = v19;
    char v21 = *(void *)v38;
    do
    {
      for (i = 0LL; i != v20; i = (char *)i + 1)
      {
        if (*(void *)v38 != v21) {
          objc_enumerationMutation(v18);
        }
        unint64_t v23 = [*(id *)(*((void *)&v37 + 1) + 8 * (void)i) copyWithZone:a3];
        [v6 addRemoteMembers:v23];
      }

      char v20 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v18,  "countByEnumeratingWithState:objects:count:",  &v37,  v42,  16LL);
    }

    while (v20);
  }

  id v35 = 0u;
  int v36 = 0u;
  int v33 = 0u;
  char v34 = 0u;
  char v24 = self->_activeParticipants;
  int v25 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v24,  "countByEnumeratingWithState:objects:count:",  &v33,  v41,  16LL);
  if (v25)
  {
    uint64_t v26 = v25;
    int v27 = *(void *)v34;
    do
    {
      for (j = 0LL; j != v26; j = (char *)j + 1)
      {
        if (*(void *)v34 != v27) {
          objc_enumerationMutation(v24);
        }
        int v29 = objc_msgSend(*(id *)(*((void *)&v33 + 1) + 8 * (void)j), "copyWithZone:", a3, (void)v33);
        [v6 addActiveParticipants:v29];
      }

      uint64_t v26 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v24,  "countByEnumeratingWithState:objects:count:",  &v33,  v41,  16LL);
    }

    while (v26);
  }

  if ((*(_BYTE *)&self->_has & 1) != 0)
  {
    *((_DWORD *)v6 + 4) = self->_avMode;
    *((_BYTE *)v6 + 96) |= 1u;
  }

  int v30 = -[CSDMessagingConversationReport copyWithZone:](self->_reportData, "copyWithZone:", a3, (void)v33);
  int v31 = (void *)v6[8];
  v6[8] = v30;

  return v6;
}

  if (*((void *)v4 + 10)) {
    -[CSDMessagingConversationRelayMessage setUUIDString:](self, "setUUIDString:");
  }
  if (*((void *)v5 + 3)) {
    -[CSDMessagingConversationRelayMessage setGroupUUIDString:](self, "setGroupUUIDString:");
  }
  if (*((void *)v5 + 6)) {
    -[CSDMessagingConversationRelayMessage setMessagesGroupUUIDString:](self, "setMessagesGroupUUIDString:");
  }
  if ((*((_BYTE *)v5 + 96) & 0x10) != 0)
  {
    self->_locallyCreated = *((_BYTE *)v5 + 92);
    *(_BYTE *)&self->_has |= 0x10u;
  }

  initiator = self->_initiator;
  char v8 = *((void *)v5 + 4);
  if (initiator)
  {
    if (v8) {
      -[CSDMessagingHandle mergeFrom:](initiator, "mergeFrom:");
    }
  }

  else if (v8)
  {
    -[CSDMessagingConversationRelayMessage setInitiator:](self, "setInitiator:");
  }

  localMember = self->_localMember;
  int v10 = *((void *)v5 + 5);
  if (localMember)
  {
    if (v10) {
      -[CSDMessagingConversationMember mergeFrom:](localMember, "mergeFrom:");
    }
  }

  else if (v10)
  {
    -[CSDMessagingConversationRelayMessage setLocalMember:](self, "setLocalMember:");
  }

  int v29 = 0u;
  int v30 = 0u;
  int v27 = 0u;
  int v28 = 0u;
  id v11 = *((id *)v5 + 7);
  char v12 = [v11 countByEnumeratingWithState:&v27 objects:v32 count:16];
  if (v12)
  {
    unsigned int v13 = v12;
    uint64_t v14 = *(void *)v28;
    do
    {
      for (i = 0LL; i != v13; i = (char *)i + 1)
      {
        if (*(void *)v28 != v14) {
          objc_enumerationMutation(v11);
        }
        -[CSDMessagingConversationRelayMessage addRemoteMembers:]( self,  "addRemoteMembers:",  *(void *)(*((void *)&v27 + 1) + 8LL * (void)i));
      }

      unsigned int v13 = [v11 countByEnumeratingWithState:&v27 objects:v32 count:16];
    }

    while (v13);
  }

  int v25 = 0u;
  uint64_t v26 = 0u;
  unint64_t v23 = 0u;
  char v24 = 0u;
  char v16 = *((id *)v5 + 1);
  unsigned int v17 = [v16 countByEnumeratingWithState:&v23 objects:v31 count:16];
  if (v17)
  {
    uint64_t v18 = v17;
    unint64_t v19 = *(void *)v24;
    do
    {
      for (j = 0LL; j != v18; j = (char *)j + 1)
      {
        if (*(void *)v24 != v19) {
          objc_enumerationMutation(v16);
        }
        -[CSDMessagingConversationRelayMessage addActiveParticipants:]( self,  "addActiveParticipants:",  *(void *)(*((void *)&v23 + 1) + 8LL * (void)j),  (void)v23);
      }

      uint64_t v18 = [v16 countByEnumeratingWithState:&v23 objects:v31 count:16];
    }

    while (v18);
  }

  if ((*((_BYTE *)v5 + 96) & 1) != 0)
  {
    self->_avMode = *((_DWORD *)v5 + 4);
    *(_BYTE *)&self->_has |= 1u;
  }

  reportuint64_t Data = self->_reportData;
  unsigned int v22 = *((void *)v5 + 8);
  if (reportData)
  {
    if (v22) {
      -[CSDMessagingConversationReport mergeFrom:](reportData, "mergeFrom:");
    }
  }

  else if (v22)
  {
    -[CSDMessagingConversationRelayMessage setReportData:](self, "setReportData:");
  }
}

  inviteuint64_t Data = self->_inviteData;
  if (inviteData)
  {
    PBDataWriterWriteSubmessage(v9, inviteData, 4LL);
    char v4 = v9;
  }

  unint64_t v7 = (char)self->_has;
  if ((v7 & 4) != 0)
  {
    PBDataWriterWriteBOOLField(v9, self->_oBSOLETEProtoMomentsAvailable, 5LL);
    char v4 = v9;
    unint64_t v7 = (char)self->_has;
    if ((v7 & 0x10) == 0)
    {
LABEL_9:
      if ((v7 & 0x20) == 0) {
        goto LABEL_10;
      }
      goto LABEL_20;
    }
  }

  else if ((*(_BYTE *)&self->_has & 0x10) == 0)
  {
    goto LABEL_9;
  }

  PBDataWriterWriteBOOLField(v9, self->_protoSenderMuteUplink, 6LL);
  char v4 = v9;
  unint64_t v7 = (char)self->_has;
  if ((v7 & 0x20) == 0)
  {
LABEL_10:
    if ((v7 & 8) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }

  unint64_t v7 = v4;
  if (self->_inviteData)
  {
    objc_msgSend(v4, "setInviteData:");
    char v4 = v7;
  }

  unint64_t v6 = (char)self->_has;
  if ((v6 & 4) != 0)
  {
    *((_BYTE *)v4 + 36) = self->_oBSOLETEProtoMomentsAvailable;
    *((_BYTE *)v4 + 44) |= 4u;
    unint64_t v6 = (char)self->_has;
    if ((v6 & 0x10) == 0)
    {
LABEL_9:
      if ((v6 & 0x20) == 0) {
        goto LABEL_10;
      }
      goto LABEL_20;
    }
  }

  else if ((*(_BYTE *)&self->_has & 0x10) == 0)
  {
    goto LABEL_9;
  }

  *((_BYTE *)v4 + 3_Block_object_dispose(va, 8) = self->_protoSenderMuteUplink;
  *((_BYTE *)v4 + 44) |= 0x10u;
  unint64_t v6 = (char)self->_has;
  if ((v6 & 0x20) == 0)
  {
LABEL_10:
    if ((v6 & 8) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }

  char v8 = -[CSDMessagingAVConferenceInviteData copyWithZone:](self->_inviteData, "copyWithZone:", a3);
  BOOL v9 = (void *)v6[1];
  v6[1] = v8;

  int v10 = (char)self->_has;
  if ((v10 & 4) != 0)
  {
    *((_BYTE *)v6 + 36) = self->_oBSOLETEProtoMomentsAvailable;
    *((_BYTE *)v6 + 44) |= 4u;
    int v10 = (char)self->_has;
    if ((v10 & 0x10) == 0)
    {
LABEL_7:
      if ((v10 & 0x20) == 0) {
        goto LABEL_8;
      }
LABEL_16:
      *((_BYTE *)v6 + 39) = self->_protoShouldSuppressInCallUI;
      *((_BYTE *)v6 + 44) |= 0x20u;
      if ((*(_BYTE *)&self->_has & 8) == 0) {
        goto LABEL_10;
      }
      goto LABEL_9;
    }
  }

  else if ((*(_BYTE *)&self->_has & 0x10) == 0)
  {
    goto LABEL_7;
  }

  *((_BYTE *)v6 + 3_Block_object_dispose(va, 8) = self->_protoSenderMuteUplink;
  *((_BYTE *)v6 + 44) |= 0x10u;
  int v10 = (char)self->_has;
  if ((v10 & 0x20) != 0) {
    goto LABEL_16;
  }
LABEL_8:
  if ((v10 & 8) != 0)
  {
LABEL_9:
    *((_BYTE *)v6 + 37) = self->_protoMomentsV2Available;
    *((_BYTE *)v6 + 44) |= 8u;
  }

  inviteuint64_t Data = self->_inviteData;
  char v8 = *((void *)v5 + 1);
  int v10 = v5;
  if (inviteData)
  {
    if (!v8) {
      goto LABEL_14;
    }
    -[CSDMessagingAVConferenceInviteData mergeFrom:](inviteData, "mergeFrom:");
  }

  else
  {
    if (!v8) {
      goto LABEL_14;
    }
    -[CSDMessagingCallMessage setInviteData:](self, "setInviteData:");
  }

  unsigned int v5 = v10;
LABEL_14:
  BOOL v9 = *((_BYTE *)v5 + 44);
  if ((v9 & 4) != 0)
  {
    self->_oBSOLETEProtoMomentsAvailable = *((_BYTE *)v5 + 36);
    *(_BYTE *)&self->_has |= 4u;
    BOOL v9 = *((_BYTE *)v5 + 44);
    if ((v9 & 0x10) == 0)
    {
LABEL_16:
      if ((v9 & 0x20) == 0) {
        goto LABEL_17;
      }
      goto LABEL_24;
    }
  }

  else if ((*((_BYTE *)v5 + 44) & 0x10) == 0)
  {
    goto LABEL_16;
  }

  self->_protoSenderMuteUplink = *((_BYTE *)v5 + 38);
  *(_BYTE *)&self->_has |= 0x10u;
  BOOL v9 = *((_BYTE *)v5 + 44);
  if ((v9 & 0x20) == 0)
  {
LABEL_17:
    if ((v9 & 8) == 0) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }
}
}
}

  if (-[NSMutableArray count](self->_activeParticipants, "count"))
  {
    unint64_t v6 = -[NSMutableArray initWithCapacity:]( objc_alloc(&OBJC_CLASS___NSMutableArray),  "initWithCapacity:",  -[NSMutableArray count](self->_activeParticipants, "count"));
    char v113 = 0u;
    char v114 = 0u;
    unsigned int v115 = 0u;
    uint64_t v116 = 0u;
    unint64_t v7 = self->_activeParticipants;
    char v8 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v7,  "countByEnumeratingWithState:objects:count:",  &v113,  v123,  16LL);
    if (v8)
    {
      BOOL v9 = v8;
      int v10 = *(void *)v114;
      do
      {
        for (i = 0LL; i != v9; i = (char *)i + 1)
        {
          if (*(void *)v114 != v10) {
            objc_enumerationMutation(v7);
          }
          char v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v113 + 1) + 8 * (void)i) dictionaryRepresentation]);
          -[NSMutableArray addObject:](v6, "addObject:", v12);
        }

        BOOL v9 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v7,  "countByEnumeratingWithState:objects:count:",  &v113,  v123,  16LL);
      }

      while (v9);
    }

    [v3 setObject:v6 forKey:@"activeParticipants"];
  }

  conversationGroupUUIDuint64_t String = self->_conversationGroupUUIDString;
  if (conversationGroupUUIDString) {
    [v3 setObject:conversationGroupUUIDString forKey:@"conversationGroupUUIDString"];
  }
  if (-[NSMutableArray count](self->_addedMembers, "count"))
  {
    uint64_t v14 = -[NSMutableArray initWithCapacity:]( objc_alloc(&OBJC_CLASS___NSMutableArray),  "initWithCapacity:",  -[NSMutableArray count](self->_addedMembers, "count"));
    char v109 = 0u;
    unsigned int v110 = 0u;
    uint64_t v111 = 0u;
    unint64_t v112 = 0u;
    unint64_t v15 = self->_addedMembers;
    char v16 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v15,  "countByEnumeratingWithState:objects:count:",  &v109,  v122,  16LL);
    if (v16)
    {
      unsigned int v17 = v16;
      uint64_t v18 = *(void *)v110;
      do
      {
        for (j = 0LL; j != v17; j = (char *)j + 1)
        {
          if (*(void *)v110 != v18) {
            objc_enumerationMutation(v15);
          }
          char v20 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v109 + 1) + 8 * (void)j) dictionaryRepresentation]);
          -[NSMutableArray addObject:](v14, "addObject:", v20);
        }

        unsigned int v17 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v15,  "countByEnumeratingWithState:objects:count:",  &v109,  v122,  16LL);
      }

      while (v17);
    }

    [v3 setObject:v14 forKey:@"addedMembers"];
  }

  if ((*(_WORD *)&self->_has & 2) != 0)
  {
    char v21 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_disconnectedReason));
    [v3 setObject:v21 forKey:@"disconnectedReason"];
  }

  protoUpgradeSessionUUID = self->_protoUpgradeSessionUUID;
  if (protoUpgradeSessionUUID) {
    [v3 setObject:protoUpgradeSessionUUID forKey:@"protoUpgradeSessionUUID"];
  }
  if (-[NSMutableArray count](self->_activitySessions, "count"))
  {
    unint64_t v23 = -[NSMutableArray initWithCapacity:]( objc_alloc(&OBJC_CLASS___NSMutableArray),  "initWithCapacity:",  -[NSMutableArray count](self->_activitySessions, "count"));
    id v105 = 0u;
    uint64_t v106 = 0u;
    id v107 = 0u;
    uint64_t v108 = 0u;
    char v24 = self->_activitySessions;
    int v25 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v24,  "countByEnumeratingWithState:objects:count:",  &v105,  v121,  16LL);
    if (v25)
    {
      uint64_t v26 = v25;
      int v27 = *(void *)v106;
      do
      {
        for (k = 0LL; k != v26; k = (char *)k + 1)
        {
          if (*(void *)v106 != v27) {
            objc_enumerationMutation(v24);
          }
          int v29 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v105 + 1) + 8 * (void)k) dictionaryRepresentation]);
          -[NSMutableArray addObject:](v23, "addObject:", v29);
        }

        uint64_t v26 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v24,  "countByEnumeratingWithState:objects:count:",  &v105,  v121,  16LL);
      }

      while (v26);
    }

    [v3 setObject:v23 forKey:@"activitySessions"];
  }

  nickname = self->_nickname;
  if (nickname) {
    [v3 setObject:nickname forKey:@"nickname"];
  }
  link = self->_link;
  if (link)
  {
    int v32 = (void *)objc_claimAutoreleasedReturnValue(-[CSDMessagingConversationLink dictionaryRepresentation](link, "dictionaryRepresentation"));
    [v3 setObject:v32 forKey:@"link"];
  }

  reportuint64_t Data = self->_reportData;
  if (reportData)
  {
    char v34 = (void *)objc_claimAutoreleasedReturnValue(-[CSDMessagingConversationReport dictionaryRepresentation](reportData, "dictionaryRepresentation"));
    [v3 setObject:v34 forKey:@"reportData"];
  }

  if ((*(_WORD *)&self->_has & 0x100) != 0)
  {
    id v35 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", self->_isLetMeInApproved));
    [v3 setObject:v35 forKey:@"isLetMeInApproved"];
  }

  encryptedMessage = self->_encryptedMessage;
  if (encryptedMessage)
  {
    int v37 = (void *)objc_claimAutoreleasedReturnValue( -[CSDMessagingEncryptedConversationMessage dictionaryRepresentation]( encryptedMessage,  "dictionaryRepresentation"));
    [v3 setObject:v37 forKey:@"encryptedMessage"];
  }

  letMeInDelegationHandle = self->_letMeInDelegationHandle;
  if (letMeInDelegationHandle) {
    [v3 setObject:letMeInDelegationHandle forKey:@"letMeInDelegationHandle"];
  }
  letMeInDelegationUUID = self->_letMeInDelegationUUID;
  if (letMeInDelegationUUID) {
    [v3 setObject:letMeInDelegationUUID forKey:@"letMeInDelegationUUID"];
  }
  if ((*(_WORD *)&self->_has & 4) != 0)
  {
    enclosedEncryptedType = self->_enclosedEncryptedType;
    else {
      unint64_t v41 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)",  self->_enclosedEncryptedType));
    }
    [v3 setObject:v41 forKey:@"enclosedEncryptedType"];
  }

  if (-[NSMutableArray count](self->_invitationPreferences, "count"))
  {
    id v45 = -[NSMutableArray initWithCapacity:]( objc_alloc(&OBJC_CLASS___NSMutableArray),  "initWithCapacity:",  -[NSMutableArray count](self->_invitationPreferences, "count"));
    id v101 = 0u;
    uint64_t v102 = 0u;
    id v103 = 0u;
    uint64_t v104 = 0u;
    uint64_t v46 = self->_invitationPreferences;
    uint64_t v47 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v46,  "countByEnumeratingWithState:objects:count:",  &v101,  v120,  16LL);
    if (v47)
    {
      id v48 = v47;
      id v49 = *(void *)v102;
      do
      {
        for (m = 0LL; m != v48; m = (char *)m + 1)
        {
          if (*(void *)v102 != v49) {
            objc_enumerationMutation(v46);
          }
          id v51 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v101 + 1) + 8 * (void)m) dictionaryRepresentation]);
          -[NSMutableArray addObject:](v45, "addObject:", v51);
        }

        id v48 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v46,  "countByEnumeratingWithState:objects:count:",  &v101,  v120,  16LL);
      }

      while (v48);
    }

    [v3 setObject:v45 forKey:@"invitationPreferences"];
  }

  if (-[NSMutableArray count](self->_removedMembers, "count"))
  {
    char v52 = -[NSMutableArray initWithCapacity:]( objc_alloc(&OBJC_CLASS___NSMutableArray),  "initWithCapacity:",  -[NSMutableArray count](self->_removedMembers, "count"));
    unint64_t v97 = 0u;
    uint64_t v98 = 0u;
    id v99 = 0u;
    uint64_t v100 = 0u;
    id v53 = self->_removedMembers;
    id v54 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v53,  "countByEnumeratingWithState:objects:count:",  &v97,  v119,  16LL);
    if (v54)
    {
      id v55 = v54;
      id v56 = *(void *)v98;
      do
      {
        for (n = 0LL; n != v55; n = (char *)n + 1)
        {
          if (*(void *)v98 != v56) {
            objc_enumerationMutation(v53);
          }
          unint64_t v58 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v97 + 1) + 8 * (void)n) dictionaryRepresentation]);
          -[NSMutableArray addObject:](v52, "addObject:", v58);
        }

        id v55 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v53,  "countByEnumeratingWithState:objects:count:",  &v97,  v119,  16LL);
      }

      while (v55);
    }

    [v3 setObject:v52 forKey:@"removedMembers"];
  }

  if (-[NSMutableArray count](self->_lightweightMembers, "count"))
  {
    id v59 = -[NSMutableArray initWithCapacity:]( objc_alloc(&OBJC_CLASS___NSMutableArray),  "initWithCapacity:",  -[NSMutableArray count](self->_lightweightMembers, "count"));
    unint64_t v93 = 0u;
    uint64_t v94 = 0u;
    unint64_t v95 = 0u;
    uint64_t v96 = 0u;
    __int16 v60 = self->_lightweightMembers;
    id v61 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v60,  "countByEnumeratingWithState:objects:count:",  &v93,  v118,  16LL);
    if (v61)
    {
      uint64_t v62 = v61;
      unint64_t v63 = *(void *)v94;
      do
      {
        for (ii = 0LL; ii != v62; ii = (char *)ii + 1)
        {
          if (*(void *)v94 != v63) {
            objc_enumerationMutation(v60);
          }
          char v65 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v93 + 1) + 8 * (void)ii) dictionaryRepresentation]);
          -[NSMutableArray addObject:](v59, "addObject:", v65);
        }

        uint64_t v62 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v60,  "countByEnumeratingWithState:objects:count:",  &v93,  v118,  16LL);
      }

      while (v62);
    }

    [v3 setObject:v59 forKey:@"lightweightMembers"];
  }

  if (-[NSMutableArray count](self->_activeLightweightParticipants, "count"))
  {
    uint64_t v66 = -[NSMutableArray initWithCapacity:]( objc_alloc(&OBJC_CLASS___NSMutableArray),  "initWithCapacity:",  -[NSMutableArray count](self->_activeLightweightParticipants, "count"));
    unint64_t v89 = 0u;
    uint64_t v90 = 0u;
    unint64_t v91 = 0u;
    uint64_t v92 = 0u;
    uint64_t v67 = self->_activeLightweightParticipants;
    unint64_t v68 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v67,  "countByEnumeratingWithState:objects:count:",  &v89,  v117,  16LL);
    if (v68)
    {
      char v69 = v68;
      uint64_t v70 = *(void *)v90;
      do
      {
        for (jj = 0LL; jj != v69; jj = (char *)jj + 1)
        {
          if (*(void *)v90 != v70) {
            objc_enumerationMutation(v67);
          }
          uint64_t v72 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v89 + 1) + 8 * (void)jj) dictionaryRepresentation]);
          -[NSMutableArray addObject:](v66, "addObject:", v72);
        }

        char v69 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v67,  "countByEnumeratingWithState:objects:count:",  &v89,  v117,  16LL);
      }

      while (v69);
    }

    [v3 setObject:v66 forKey:@"activeLightweightParticipants"];
  }

  if ((*(_WORD *)&self->_has & 0x80) != 0)
  {
    unint64_t v73 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", self->_guestModeEnabled));
    [v3 setObject:v73 forKey:@"guestModeEnabled"];
  }

  highlightIdentifier = self->_highlightIdentifier;
  if (highlightIdentifier) {
    [v3 setObject:highlightIdentifier forKey:@"highlightIdentifier"];
  }
  joinedMetadata = self->_joinedMetadata;
  if (joinedMetadata)
  {
    unsigned int v76 = (void *)objc_claimAutoreleasedReturnValue( -[CSDMessagingConversationJoinedMetadata dictionaryRepresentation]( joinedMetadata,  "dictionaryRepresentation"));
    [v3 setObject:v76 forKey:@"joinedMetadata"];
  }

  stagedActivitySession = self->_stagedActivitySession;
  if (stagedActivitySession)
  {
    char v78 = (void *)objc_claimAutoreleasedReturnValue( -[CSDMessagingConversationActivitySession dictionaryRepresentation]( stagedActivitySession,  "dictionaryRepresentation"));
    [v3 setObject:v78 forKey:@"stagedActivitySession"];
  }

  char v79 = (__int16)self->_has;
  if ((v79 & 1) != 0)
  {
    avMode = self->_avMode;
    if (avMode >= 3) {
      id v81 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)",  self->_avMode));
    }
    else {
      id v81 = *(&off_1003DBAC0 + avMode);
    }
    [v3 setObject:v81 forKey:@"avMode"];

    char v79 = (__int16)self->_has;
  }

  if ((v79 & 0x10) != 0)
  {
    uint64_t v82 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  self->_requestBlobRecoveryOptions));
    [v3 setObject:v82 forKey:@"requestBlobRecoveryOptions"];
  }

  screenShareContext = self->_screenShareContext;
  if (screenShareContext)
  {
    uint64_t v84 = (void *)objc_claimAutoreleasedReturnValue( -[CSDMessagingScreenShareContext dictionaryRepresentation]( screenShareContext,  "dictionaryRepresentation"));
    [v3 setObject:v84 forKey:@"screenShareContext"];
  }

  if ((*(_WORD *)&self->_has & 8) != 0)
  {
    presentationMode = self->_presentationMode;
    if (presentationMode >= 3) {
      uint64_t v86 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)",  self->_presentationMode));
    }
    else {
      uint64_t v86 = *(&off_1003DBAD8 + presentationMode);
    }
    [v3 setObject:v86 forKey:@"presentationMode"];
  }

  id v87 = v3;

  return v87;
}

  int v37 = v4;
  if (-[CSDMessagingConversationMessage activeParticipantsCount](self, "activeParticipantsCount"))
  {
    [v37 clearActiveParticipants];
    unint64_t v6 = -[CSDMessagingConversationMessage activeParticipantsCount](self, "activeParticipantsCount");
    if (v6)
    {
      unint64_t v7 = v6;
      for (i = 0LL; i != v7; ++i)
      {
        BOOL v9 = (void *)objc_claimAutoreleasedReturnValue( -[CSDMessagingConversationMessage activeParticipantsAtIndex:]( self,  "activeParticipantsAtIndex:",  i));
        [v37 addActiveParticipants:v9];
      }
    }
  }

  if (self->_conversationGroupUUIDString) {
    objc_msgSend(v37, "setConversationGroupUUIDString:");
  }
  if (-[CSDMessagingConversationMessage addedMembersCount](self, "addedMembersCount"))
  {
    [v37 clearAddedMembers];
    int v10 = -[CSDMessagingConversationMessage addedMembersCount](self, "addedMembersCount");
    if (v10)
    {
      id v11 = v10;
      for (j = 0LL; j != v11; ++j)
      {
        unsigned int v13 = (void *)objc_claimAutoreleasedReturnValue(-[CSDMessagingConversationMessage addedMembersAtIndex:](self, "addedMembersAtIndex:", j));
        [v37 addAddedMembers:v13];
      }
    }
  }

  if ((*(_WORD *)&self->_has & 2) != 0)
  {
    *((_DWORD *)v37 + 14) = self->_disconnectedReason;
    *((_WORD *)v37 + 102) |= 2u;
  }

  if (self->_protoUpgradeSessionUUID) {
    objc_msgSend(v37, "setProtoUpgradeSessionUUID:");
  }
  if (-[CSDMessagingConversationMessage activitySessionsCount](self, "activitySessionsCount"))
  {
    [v37 clearActivitySessions];
    uint64_t v14 = -[CSDMessagingConversationMessage activitySessionsCount](self, "activitySessionsCount");
    if (v14)
    {
      unint64_t v15 = v14;
      for (k = 0LL; k != v15; ++k)
      {
        unsigned int v17 = (void *)objc_claimAutoreleasedReturnValue(-[CSDMessagingConversationMessage activitySessionsAtIndex:](self, "activitySessionsAtIndex:", k));
        [v37 addActivitySessions:v17];
      }
    }
  }

  if (self->_nickname) {
    objc_msgSend(v37, "setNickname:");
  }
  uint64_t v18 = v37;
  if (self->_link)
  {
    objc_msgSend(v37, "setLink:");
    uint64_t v18 = v37;
  }

  if (self->_reportData)
  {
    objc_msgSend(v37, "setReportData:");
    uint64_t v18 = v37;
  }

  if ((*(_WORD *)&self->_has & 0x100) != 0)
  {
    v18[201] = self->_isLetMeInApproved;
    *((_WORD *)v18 + 102) |= 0x100u;
  }

  if (self->_encryptedMessage)
  {
    objc_msgSend(v37, "setEncryptedMessage:");
    uint64_t v18 = v37;
  }

  if (self->_letMeInDelegationHandle)
  {
    objc_msgSend(v37, "setLetMeInDelegationHandle:");
    uint64_t v18 = v37;
  }

  if (self->_letMeInDelegationUUID)
  {
    objc_msgSend(v37, "setLetMeInDelegationUUID:");
    uint64_t v18 = v37;
  }

  if ((*(_WORD *)&self->_has & 4) != 0)
  {
    *((_DWORD *)v18 + 15) = self->_enclosedEncryptedType;
    *((_WORD *)v18 + 102) |= 4u;
  }

  if (-[CSDMessagingConversationMessage invitationPreferencesCount](self, "invitationPreferencesCount"))
  {
    [v37 clearInvitationPreferences];
    unint64_t v19 = -[CSDMessagingConversationMessage invitationPreferencesCount](self, "invitationPreferencesCount");
    if (v19)
    {
      char v20 = v19;
      for (m = 0LL; m != v20; ++m)
      {
        unsigned int v22 = (void *)objc_claimAutoreleasedReturnValue( -[CSDMessagingConversationMessage invitationPreferencesAtIndex:]( self,  "invitationPreferencesAtIndex:",  m));
        [v37 addInvitationPreferences:v22];
      }
    }
  }

  if (-[CSDMessagingConversationMessage removedMembersCount](self, "removedMembersCount"))
  {
    [v37 clearRemovedMembers];
    unint64_t v23 = -[CSDMessagingConversationMessage removedMembersCount](self, "removedMembersCount");
    if (v23)
    {
      char v24 = v23;
      for (n = 0LL; n != v24; ++n)
      {
        uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue(-[CSDMessagingConversationMessage removedMembersAtIndex:](self, "removedMembersAtIndex:", n));
        [v37 addRemovedMembers:v26];
      }
    }
  }

  if (-[CSDMessagingConversationMessage lightweightMembersCount](self, "lightweightMembersCount"))
  {
    [v37 clearLightweightMembers];
    int v27 = -[CSDMessagingConversationMessage lightweightMembersCount](self, "lightweightMembersCount");
    if (v27)
    {
      int v28 = v27;
      for (ii = 0LL; ii != v28; ++ii)
      {
        int v30 = (void *)objc_claimAutoreleasedReturnValue( -[CSDMessagingConversationMessage lightweightMembersAtIndex:]( self,  "lightweightMembersAtIndex:",  ii));
        [v37 addLightweightMembers:v30];
      }
    }
  }

  if (-[CSDMessagingConversationMessage activeLightweightParticipantsCount](self, "activeLightweightParticipantsCount"))
  {
    [v37 clearActiveLightweightParticipants];
    int v31 = -[CSDMessagingConversationMessage activeLightweightParticipantsCount]( self,  "activeLightweightParticipantsCount");
    if (v31)
    {
      int v32 = v31;
      for (jj = 0LL; jj != v32; ++jj)
      {
        char v34 = (void *)objc_claimAutoreleasedReturnValue( -[CSDMessagingConversationMessage activeLightweightParticipantsAtIndex:]( self,  "activeLightweightParticipantsAtIndex:",  jj));
        [v37 addActiveLightweightParticipants:v34];
      }
    }
  }

  id v35 = v37;
  if ((*(_WORD *)&self->_has & 0x80) != 0)
  {
    *((_BYTE *)v37 + 200) = self->_guestModeEnabled;
    *((_WORD *)v37 + 102) |= 0x80u;
  }

  if (self->_highlightIdentifier)
  {
    objc_msgSend(v37, "setHighlightIdentifier:");
    id v35 = v37;
  }

  if (self->_joinedMetadata)
  {
    objc_msgSend(v37, "setJoinedMetadata:");
    id v35 = v37;
  }

  if (self->_stagedActivitySession)
  {
    objc_msgSend(v37, "setStagedActivitySession:");
    id v35 = v37;
  }

  int v36 = (__int16)self->_has;
  if ((v36 & 1) != 0)
  {
    v35[10] = self->_avMode;
    *((_WORD *)v35 + 102) |= 1u;
    int v36 = (__int16)self->_has;
  }

  if ((v36 & 0x10) != 0)
  {
    v35[42] = self->_requestBlobRecoveryOptions;
    *((_WORD *)v35 + 102) |= 0x10u;
  }

  if (self->_screenShareContext)
  {
    objc_msgSend(v37, "setScreenShareContext:");
    id v35 = v37;
  }

  if ((*(_WORD *)&self->_has & 8) != 0)
  {
    v35[34] = self->_presentationMode;
    *((_WORD *)v35 + 102) |= 8u;
  }
}

  uint64_t v102 = 0u;
  id v103 = 0u;
  uint64_t v100 = 0u;
  id v101 = 0u;
  char v8 = self->_activeParticipants;
  BOOL v9 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v8,  "countByEnumeratingWithState:objects:count:",  &v100,  v110,  16LL);
  if (v9)
  {
    int v10 = v9;
    id v11 = *(void *)v101;
    do
    {
      char v12 = 0LL;
      do
      {
        if (*(void *)v101 != v11) {
          objc_enumerationMutation(v8);
        }
        unsigned int v13 = [*(id *)(*((void *)&v100 + 1) + 8 * (void)v12) copyWithZone:a3];
        [v6 addActiveParticipants:v13];

        char v12 = (char *)v12 + 1;
      }

      while (v10 != v12);
      int v10 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v8,  "countByEnumeratingWithState:objects:count:",  &v100,  v110,  16LL);
    }

    while (v10);
  }

  uint64_t v14 = -[NSString copyWithZone:](self->_conversationGroupUUIDString, "copyWithZone:", a3);
  unint64_t v15 = (void *)*((void *)v6 + 6);
  *((void *)v6 + 6) = v14;

  uint64_t v98 = 0u;
  id v99 = 0u;
  uint64_t v96 = 0u;
  unint64_t v97 = 0u;
  char v16 = self->_addedMembers;
  unsigned int v17 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v16,  "countByEnumeratingWithState:objects:count:",  &v96,  v109,  16LL);
  if (v17)
  {
    uint64_t v18 = v17;
    unint64_t v19 = *(void *)v97;
    do
    {
      char v20 = 0LL;
      do
      {
        if (*(void *)v97 != v19) {
          objc_enumerationMutation(v16);
        }
        char v21 = [*(id *)(*((void *)&v96 + 1) + 8 * (void)v20) copyWithZone:a3];
        [v6 addAddedMembers:v21];

        char v20 = (char *)v20 + 1;
      }

      while (v18 != v20);
      uint64_t v18 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v16,  "countByEnumeratingWithState:objects:count:",  &v96,  v109,  16LL);
    }

    while (v18);
  }

  if ((*(_WORD *)&self->_has & 2) != 0)
  {
    *((_DWORD *)v6 + 14) = self->_disconnectedReason;
    *((_WORD *)v6 + 102) |= 2u;
  }

  unsigned int v22 = -[NSString copyWithZone:](self->_protoUpgradeSessionUUID, "copyWithZone:", a3);
  unint64_t v23 = (void *)*((void *)v6 + 18);
  *((void *)v6 + 1_Block_object_dispose(va, 8) = v22;

  uint64_t v94 = 0u;
  unint64_t v95 = 0u;
  uint64_t v92 = 0u;
  unint64_t v93 = 0u;
  char v24 = self->_activitySessions;
  int v25 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v24,  "countByEnumeratingWithState:objects:count:",  &v92,  v108,  16LL);
  if (v25)
  {
    uint64_t v26 = v25;
    int v27 = *(void *)v93;
    do
    {
      int v28 = 0LL;
      do
      {
        if (*(void *)v93 != v27) {
          objc_enumerationMutation(v24);
        }
        int v29 = [*(id *)(*((void *)&v92 + 1) + 8 * (void)v28) copyWithZone:a3];
        [v6 addActivitySessions:v29];

        int v28 = (char *)v28 + 1;
      }

      while (v26 != v28);
      uint64_t v26 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v24,  "countByEnumeratingWithState:objects:count:",  &v92,  v108,  16LL);
    }

    while (v26);
  }

  int v30 = -[NSString copyWithZone:](self->_nickname, "copyWithZone:", a3);
  int v31 = (void *)*((void *)v6 + 16);
  *((void *)v6 + 16) = v30;

  int v32 = -[CSDMessagingConversationLink copyWithZone:](self->_link, "copyWithZone:", a3);
  int v33 = (void *)*((void *)v6 + 15);
  *((void *)v6 + 15) = v32;

  char v34 = -[CSDMessagingConversationReport copyWithZone:](self->_reportData, "copyWithZone:", a3);
  id v35 = (void *)*((void *)v6 + 20);
  *((void *)v6 + 20) = v34;

  if ((*(_WORD *)&self->_has & 0x100) != 0)
  {
    *((_BYTE *)v6 + 201) = self->_isLetMeInApproved;
    *((_WORD *)v6 + 102) |= 0x100u;
  }

  int v36 = -[CSDMessagingEncryptedConversationMessage copyWithZone:](self->_encryptedMessage, "copyWithZone:", a3);
  int v37 = (void *)*((void *)v6 + 8);
  *((void *)v6 + _Block_object_dispose(va, 8) = v36;

  char v38 = -[NSString copyWithZone:](self->_letMeInDelegationHandle, "copyWithZone:", a3);
  id v39 = (void *)*((void *)v6 + 12);
  *((void *)v6 + 12) = v38;

  unsigned int v40 = -[NSString copyWithZone:](self->_letMeInDelegationUUID, "copyWithZone:", a3);
  unint64_t v41 = (void *)*((void *)v6 + 13);
  *((void *)v6 + 13) = v40;

  if ((*(_WORD *)&self->_has & 4) != 0)
  {
    *((_DWORD *)v6 + 15) = self->_enclosedEncryptedType;
    *((_WORD *)v6 + 102) |= 4u;
  }

  uint64_t v90 = 0u;
  unint64_t v91 = 0u;
  uint64_t v88 = 0u;
  unint64_t v89 = 0u;
  id v42 = self->_invitationPreferences;
  uint64_t v43 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v42,  "countByEnumeratingWithState:objects:count:",  &v88,  v107,  16LL);
  if (v43)
  {
    __int16 v44 = v43;
    id v45 = *(void *)v89;
    do
    {
      uint64_t v46 = 0LL;
      do
      {
        if (*(void *)v89 != v45) {
          objc_enumerationMutation(v42);
        }
        uint64_t v47 = [*(id *)(*((void *)&v88 + 1) + 8 * (void)v46) copyWithZone:a3];
        [v6 addInvitationPreferences:v47];

        uint64_t v46 = (char *)v46 + 1;
      }

      while (v44 != v46);
      __int16 v44 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v42,  "countByEnumeratingWithState:objects:count:",  &v88,  v107,  16LL);
    }

    while (v44);
  }

  uint64_t v86 = 0u;
  id v87 = 0u;
  uint64_t v84 = 0u;
  id v85 = 0u;
  id v48 = self->_removedMembers;
  id v49 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v48,  "countByEnumeratingWithState:objects:count:",  &v84,  v106,  16LL);
  if (v49)
  {
    unsigned int v50 = v49;
    id v51 = *(void *)v85;
    do
    {
      char v52 = 0LL;
      do
      {
        if (*(void *)v85 != v51) {
          objc_enumerationMutation(v48);
        }
        id v53 = [*(id *)(*((void *)&v84 + 1) + 8 * (void)v52) copyWithZone:a3];
        [v6 addRemovedMembers:v53];

        char v52 = (char *)v52 + 1;
      }

      while (v50 != v52);
      unsigned int v50 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v48,  "countByEnumeratingWithState:objects:count:",  &v84,  v106,  16LL);
    }

    while (v50);
  }

  uint64_t v82 = 0u;
  id v83 = 0u;
  unsigned int v80 = 0u;
  id v81 = 0u;
  id v54 = self->_lightweightMembers;
  id v55 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v54,  "countByEnumeratingWithState:objects:count:",  &v80,  v105,  16LL);
  if (v55)
  {
    id v56 = v55;
    id v57 = *(void *)v81;
    do
    {
      unint64_t v58 = 0LL;
      do
      {
        if (*(void *)v81 != v57) {
          objc_enumerationMutation(v54);
        }
        id v59 = [*(id *)(*((void *)&v80 + 1) + 8 * (void)v58) copyWithZone:a3];
        [v6 addLightweightMembers:v59];

        unint64_t v58 = (char *)v58 + 1;
      }

      while (v56 != v58);
      id v56 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v54,  "countByEnumeratingWithState:objects:count:",  &v80,  v105,  16LL);
    }

    while (v56);
  }

  char v78 = 0u;
  char v79 = 0u;
  unsigned int v76 = 0u;
  uint64_t v77 = 0u;
  __int16 v60 = self->_activeLightweightParticipants;
  id v61 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v60,  "countByEnumeratingWithState:objects:count:",  &v76,  v104,  16LL);
  if (v61)
  {
    uint64_t v62 = v61;
    unint64_t v63 = *(void *)v77;
    do
    {
      char v64 = 0LL;
      do
      {
        if (*(void *)v77 != v63) {
          objc_enumerationMutation(v60);
        }
        char v65 = objc_msgSend(*(id *)(*((void *)&v76 + 1) + 8 * (void)v64), "copyWithZone:", a3, (void)v76);
        [v6 addActiveLightweightParticipants:v65];

        char v64 = (char *)v64 + 1;
      }

      while (v62 != v64);
      uint64_t v62 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v60,  "countByEnumeratingWithState:objects:count:",  &v76,  v104,  16LL);
    }

    while (v62);
  }

  if ((*(_WORD *)&self->_has & 0x80) != 0)
  {
    *((_BYTE *)v6 + 200) = self->_guestModeEnabled;
    *((_WORD *)v6 + 102) |= 0x80u;
  }

  uint64_t v66 = -[NSString copyWithZone:](self->_highlightIdentifier, "copyWithZone:", a3, (void)v76);
  uint64_t v67 = (void *)*((void *)v6 + 9);
  *((void *)v6 + 9) = v66;

  unint64_t v68 = -[CSDMessagingConversationJoinedMetadata copyWithZone:](self->_joinedMetadata, "copyWithZone:", a3);
  char v69 = (void *)*((void *)v6 + 11);
  *((void *)v6 + 11) = v68;

  uint64_t v70 = -[CSDMessagingConversationActivitySession copyWithZone:](self->_stagedActivitySession, "copyWithZone:", a3);
  unsigned int v71 = (void *)*((void *)v6 + 23);
  *((void *)v6 + 23) = v70;

  uint64_t v72 = (__int16)self->_has;
  if ((v72 & 1) != 0)
  {
    *((_DWORD *)v6 + 10) = self->_avMode;
    *((_WORD *)v6 + 102) |= 1u;
    uint64_t v72 = (__int16)self->_has;
  }

  if ((v72 & 0x10) != 0)
  {
    *((_DWORD *)v6 + 42) = self->_requestBlobRecoveryOptions;
    *((_WORD *)v6 + 102) |= 0x10u;
  }

  unint64_t v73 = -[CSDMessagingScreenShareContext copyWithZone:](self->_screenShareContext, "copyWithZone:", a3);
  char v74 = (void *)*((void *)v6 + 22);
  *((void *)v6 + 22) = v73;

  if ((*(_WORD *)&self->_has & 8) != 0)
  {
    *((_DWORD *)v6 + 34) = self->_presentationMode;
    *((_WORD *)v6 + 102) |= 8u;
  }

  return v6;
}

  id v81 = 0u;
  uint64_t v82 = 0u;
  char v79 = 0u;
  unsigned int v80 = 0u;
  unint64_t v7 = *((id *)v4 + 2);
  char v8 = [v7 countByEnumeratingWithState:&v79 objects:v89 count:16];
  if (v8)
  {
    BOOL v9 = v8;
    int v10 = *(void *)v80;
    do
    {
      for (i = 0LL; i != v9; i = (char *)i + 1)
      {
        if (*(void *)v80 != v10) {
          objc_enumerationMutation(v7);
        }
        -[CSDMessagingConversationMessage addActiveParticipants:]( self,  "addActiveParticipants:",  *(void *)(*((void *)&v79 + 1) + 8LL * (void)i));
      }

      BOOL v9 = [v7 countByEnumeratingWithState:&v79 objects:v89 count:16];
    }

    while (v9);
  }

  if (*((void *)v5 + 6)) {
    -[CSDMessagingConversationMessage setConversationGroupUUIDString:](self, "setConversationGroupUUIDString:");
  }
  uint64_t v77 = 0u;
  char v78 = 0u;
  id v75 = 0u;
  unsigned int v76 = 0u;
  char v12 = *((id *)v5 + 4);
  unsigned int v13 = [v12 countByEnumeratingWithState:&v75 objects:v88 count:16];
  if (v13)
  {
    uint64_t v14 = v13;
    unint64_t v15 = *(void *)v76;
    do
    {
      for (j = 0LL; j != v14; j = (char *)j + 1)
      {
        if (*(void *)v76 != v15) {
          objc_enumerationMutation(v12);
        }
        -[CSDMessagingConversationMessage addAddedMembers:]( self,  "addAddedMembers:",  *(void *)(*((void *)&v75 + 1) + 8LL * (void)j));
      }

      uint64_t v14 = [v12 countByEnumeratingWithState:&v75 objects:v88 count:16];
    }

    while (v14);
  }

  if ((*((_WORD *)v5 + 102) & 2) != 0)
  {
    self->_disconnectedReason = *((_DWORD *)v5 + 14);
    *(_WORD *)&self->_has |= 2u;
  }

  if (*((void *)v5 + 18)) {
    -[CSDMessagingConversationMessage setProtoUpgradeSessionUUID:](self, "setProtoUpgradeSessionUUID:");
  }
  unint64_t v73 = 0u;
  char v74 = 0u;
  unsigned int v71 = 0u;
  uint64_t v72 = 0u;
  unsigned int v17 = *((id *)v5 + 3);
  uint64_t v18 = [v17 countByEnumeratingWithState:&v71 objects:v87 count:16];
  if (v18)
  {
    unint64_t v19 = v18;
    char v20 = *(void *)v72;
    do
    {
      for (k = 0LL; k != v19; k = (char *)k + 1)
      {
        if (*(void *)v72 != v20) {
          objc_enumerationMutation(v17);
        }
        -[CSDMessagingConversationMessage addActivitySessions:]( self,  "addActivitySessions:",  *(void *)(*((void *)&v71 + 1) + 8LL * (void)k));
      }

      unint64_t v19 = [v17 countByEnumeratingWithState:&v71 objects:v87 count:16];
    }

    while (v19);
  }

  if (*((void *)v5 + 16)) {
    -[CSDMessagingConversationMessage setNickname:](self, "setNickname:");
  }
  link = self->_link;
  unint64_t v23 = *((void *)v5 + 15);
  if (link)
  {
    if (v23) {
      -[CSDMessagingConversationLink mergeFrom:](link, "mergeFrom:");
    }
  }

  else if (v23)
  {
    -[CSDMessagingConversationMessage setLink:](self, "setLink:");
  }

  reportuint64_t Data = self->_reportData;
  int v25 = *((void *)v5 + 20);
  if (reportData)
  {
    if (v25) {
      -[CSDMessagingConversationReport mergeFrom:](reportData, "mergeFrom:");
    }
  }

  else if (v25)
  {
    -[CSDMessagingConversationMessage setReportData:](self, "setReportData:");
  }

  if ((*((_WORD *)v5 + 102) & 0x100) != 0)
  {
    self->_isLetMeInApproved = *((_BYTE *)v5 + 201);
    *(_WORD *)&self->_has |= 0x100u;
  }

  encryptedMessage = self->_encryptedMessage;
  int v27 = *((void *)v5 + 8);
  if (encryptedMessage)
  {
    if (v27) {
      -[CSDMessagingEncryptedConversationMessage mergeFrom:](encryptedMessage, "mergeFrom:");
    }
  }

  else if (v27)
  {
    -[CSDMessagingConversationMessage setEncryptedMessage:](self, "setEncryptedMessage:");
  }

  if (*((void *)v5 + 12)) {
    -[CSDMessagingConversationMessage setLetMeInDelegationHandle:](self, "setLetMeInDelegationHandle:");
  }
  if (*((void *)v5 + 13)) {
    -[CSDMessagingConversationMessage setLetMeInDelegationUUID:](self, "setLetMeInDelegationUUID:");
  }
  if ((*((_WORD *)v5 + 102) & 4) != 0)
  {
    self->_enclosedEncryptedType = *((_DWORD *)v5 + 15);
    *(_WORD *)&self->_has |= 4u;
  }

  char v69 = 0u;
  uint64_t v70 = 0u;
  uint64_t v67 = 0u;
  unint64_t v68 = 0u;
  int v28 = *((id *)v5 + 10);
  int v29 = [v28 countByEnumeratingWithState:&v67 objects:v86 count:16];
  if (v29)
  {
    int v30 = v29;
    int v31 = *(void *)v68;
    do
    {
      for (m = 0LL; m != v30; m = (char *)m + 1)
      {
        if (*(void *)v68 != v31) {
          objc_enumerationMutation(v28);
        }
        -[CSDMessagingConversationMessage addInvitationPreferences:]( self,  "addInvitationPreferences:",  *(void *)(*((void *)&v67 + 1) + 8LL * (void)m));
      }

      int v30 = [v28 countByEnumeratingWithState:&v67 objects:v86 count:16];
    }

    while (v30);
  }

  char v65 = 0u;
  uint64_t v66 = 0u;
  unint64_t v63 = 0u;
  char v64 = 0u;
  int v33 = *((id *)v5 + 19);
  char v34 = [v33 countByEnumeratingWithState:&v63 objects:v85 count:16];
  if (v34)
  {
    id v35 = v34;
    int v36 = *(void *)v64;
    do
    {
      for (n = 0LL; n != v35; n = (char *)n + 1)
      {
        if (*(void *)v64 != v36) {
          objc_enumerationMutation(v33);
        }
        -[CSDMessagingConversationMessage addRemovedMembers:]( self,  "addRemovedMembers:",  *(void *)(*((void *)&v63 + 1) + 8LL * (void)n));
      }

      id v35 = [v33 countByEnumeratingWithState:&v63 objects:v85 count:16];
    }

    while (v35);
  }

  id v61 = 0u;
  uint64_t v62 = 0u;
  id v59 = 0u;
  __int16 v60 = 0u;
  char v38 = *((id *)v5 + 14);
  id v39 = [v38 countByEnumeratingWithState:&v59 objects:v84 count:16];
  if (v39)
  {
    unsigned int v40 = v39;
    unint64_t v41 = *(void *)v60;
    do
    {
      for (ii = 0LL; ii != v40; ii = (char *)ii + 1)
      {
        if (*(void *)v60 != v41) {
          objc_enumerationMutation(v38);
        }
        -[CSDMessagingConversationMessage addLightweightMembers:]( self,  "addLightweightMembers:",  *(void *)(*((void *)&v59 + 1) + 8LL * (void)ii));
      }

      unsigned int v40 = [v38 countByEnumeratingWithState:&v59 objects:v84 count:16];
    }

    while (v40);
  }

  id v57 = 0u;
  unint64_t v58 = 0u;
  id v55 = 0u;
  id v56 = 0u;
  uint64_t v43 = *((id *)v5 + 1);
  __int16 v44 = [v43 countByEnumeratingWithState:&v55 objects:v83 count:16];
  if (v44)
  {
    id v45 = v44;
    uint64_t v46 = *(void *)v56;
    do
    {
      for (jj = 0LL; jj != v45; jj = (char *)jj + 1)
      {
        if (*(void *)v56 != v46) {
          objc_enumerationMutation(v43);
        }
        -[CSDMessagingConversationMessage addActiveLightweightParticipants:]( self,  "addActiveLightweightParticipants:",  *(void *)(*((void *)&v55 + 1) + 8LL * (void)jj),  (void)v55);
      }

      id v45 = [v43 countByEnumeratingWithState:&v55 objects:v83 count:16];
    }

    while (v45);
  }

  if ((*((_WORD *)v5 + 102) & 0x80) != 0)
  {
    self->_guestModeEnabled = *((_BYTE *)v5 + 200);
    *(_WORD *)&self->_has |= 0x80u;
  }

  if (*((void *)v5 + 9)) {
    -[CSDMessagingConversationMessage setHighlightIdentifier:](self, "setHighlightIdentifier:");
  }
  joinedMetadata = self->_joinedMetadata;
  id v49 = *((void *)v5 + 11);
  if (joinedMetadata)
  {
    if (v49) {
      -[CSDMessagingConversationJoinedMetadata mergeFrom:](joinedMetadata, "mergeFrom:");
    }
  }

  else if (v49)
  {
    -[CSDMessagingConversationMessage setJoinedMetadata:](self, "setJoinedMetadata:");
  }

  stagedActivitySession = self->_stagedActivitySession;
  id v51 = *((void *)v5 + 23);
  if (stagedActivitySession)
  {
    if (v51) {
      -[CSDMessagingConversationActivitySession mergeFrom:](stagedActivitySession, "mergeFrom:");
    }
  }

  else if (v51)
  {
    -[CSDMessagingConversationMessage setStagedActivitySession:](self, "setStagedActivitySession:");
  }

  char v52 = *((_WORD *)v5 + 102);
  if ((v52 & 1) != 0)
  {
    self->_avMode = *((_DWORD *)v5 + 10);
    *(_WORD *)&self->_has |= 1u;
    char v52 = *((_WORD *)v5 + 102);
  }

  if ((v52 & 0x10) != 0)
  {
    self->_requestBlobRecoveryOptions = *((_DWORD *)v5 + 42);
    *(_WORD *)&self->_has |= 0x10u;
  }

  screenShareContext = self->_screenShareContext;
  id v54 = *((void *)v5 + 22);
  if (screenShareContext)
  {
    if (v54) {
      -[CSDMessagingScreenShareContext mergeFrom:](screenShareContext, "mergeFrom:");
    }
  }

  else if (v54)
  {
    -[CSDMessagingConversationMessage setScreenShareContext:](self, "setScreenShareContext:");
  }

  if ((*((_WORD *)v5 + 102) & 8) != 0)
  {
    self->_presentationMode = *((_DWORD *)v5 + 34);
    *(_WORD *)&self->_has |= 8u;
  }
}

  char v21 = *v3;
  if ((v18 & 1) != 0)
  {
    unsigned int v22 = *(void *)(v21 + 56);

    *(void *)(v22 + 8 * v17) = v24;
  }

  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v7, v9);
    sub_100200CDC(v17, (uint64_t)v12, v24, v21);
  }

  sub_1001B0FF8();
}

  *a3 = result;
  a3[1] = v5;
  return result;
}

  v8[3] = v17;
  if ((v18 & 1) != 0)
  {
    char v21 = *(void *)(*v4 + 56LL);
    unsigned int v22 = type metadata accessor for SimulatedConversationManager.SimulatedGroupSession(0LL);
    sub_100206928(v21 + *(void *)(*(void *)(v22 - 8) + 72LL) * v17, (uint64_t)v10);
    unint64_t v23 = 0LL;
  }

  else
  {
    unsigned int v22 = type metadata accessor for SimulatedConversationManager.SimulatedGroupSession(0LL);
    unint64_t v23 = 1LL;
  }

  sub_1001A9670((uint64_t)v10, v23, 1LL, v22);
  return sub_10029E694;
}

  *(void *)(a1 + 16) = v14;
  if ((v15 & 1) != 0) {
    uint64_t v18 = *(void *)(*(void *)(*v4 + 56LL) + 8 * v14);
  }
  else {
    uint64_t v18 = 0LL;
  }
  *(void *)a1 = v18;
  return sub_10029E7D4;
}

uint64_t sub_10005EEC0(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0LL;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1LL || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0LL;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0LL;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        char v12 = 0;
        unsigned int v13 = 0;
        uint64_t v14 = 0LL;
        *(_BYTE *)(a1 + 44) |= 2u;
        while (1)
        {
          unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v15 == -1LL || v15 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v16 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
          v14 |= (unint64_t)(v16 & 0x7F) << v12;
          if ((v16 & 0x80) == 0) {
            goto LABEL_44;
          }
          v12 += 7;
          BOOL v9 = v13++ >= 9;
          if (v9)
          {
            LODWORD(v14) = 0;
            goto LABEL_46;
          }
        }

        *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_44:
        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_46:
        uint64_t v23 = 40LL;
        goto LABEL_51;
      case 2u:
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v14 = 0LL;
        *(_BYTE *)(a1 + 44) |= 1u;
        while (2)
        {
          unint64_t v20 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v20 == -1LL || v20 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v21 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v20);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v20 + 1;
            v14 |= (unint64_t)(v21 & 0x7F) << v18;
            if (v21 < 0)
            {
              v18 += 7;
              BOOL v9 = v19++ >= 9;
              if (v9)
              {
                LODWORD(v14) = 0;
                goto LABEL_50;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_50:
        uint64_t v23 = 24LL;
LABEL_51:
        *(_DWORD *)(a1 + v23) = v14;
        goto LABEL_52;
      case 3u:
        unsigned int v22 = objc_alloc_init(&OBJC_CLASS___CSDMessagingLinkSyncUpdateMessage);
        objc_storeStrong((id *)(a1 + 32), v22);
        goto LABEL_42;
      case 4u:
        unsigned int v22 = objc_alloc_init(&OBJC_CLASS___CSDMessagingLinkSyncCheckInMessage);
        objc_storeStrong((id *)(a1 + 8), v22);
        goto LABEL_42;
      case 5u:
        unsigned int v22 = objc_alloc_init(&OBJC_CLASS___CSDMessagingLinkSyncRecoverMessage);
        objc_storeStrong((id *)(a1 + 16), v22);
        if (PBReaderPlaceMark(a2, v24) && (sub_10000709C((uint64_t)v22, a2) & 1) != 0)
        {
LABEL_42:
          PBReaderRecallMark(a2, v24);

LABEL_52:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }

id sub_10005FA28(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _checkIfDevicesShouldBeUnenrolled];
}

id sub_100060D14(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _checkIfDevicesShouldBeUnenrolled];
}

void sub_100060DB4(id a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[IMUserNotificationCenter sharedInstance](&OBJC_CLASS___IMUserNotificationCenter, "sharedInstance"));
  id v2 = [v1 countForIdentifier:@"com.apple.telephonyutilities.callservicesd.thumperpushhandler.secondarydevicethumpersupported"];

  if (v2)
  {
    id v3 = sub_1001704C4();
    char v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)unint64_t v6 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Removing existing reminder notification",  v6,  2u);
    }

    unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue(+[IMUserNotificationCenter sharedInstance](&OBJC_CLASS___IMUserNotificationCenter, "sharedInstance"));
    [v5 removeNotificationsForServiceIdentifier:@"com.apple.telephonyutilities.callservicesd.thumperpushhandler.secondarydevicethumpersupported"];
  }

void sub_100060EE4(id a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[IMUserNotificationCenter sharedInstance](&OBJC_CLASS___IMUserNotificationCenter, "sharedInstance"));
  id v2 = [v1 countForIdentifier:@"com.apple.telephonyutilities.callservicesd.thumperpushhandler.secondarydevicethumperenabled"];

  if (v2)
  {
    id v3 = sub_1001704C4();
    char v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)unint64_t v6 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Removing existing emergency address disclaimer",  v6,  2u);
    }

    unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue(+[IMUserNotificationCenter sharedInstance](&OBJC_CLASS___IMUserNotificationCenter, "sharedInstance"));
    [v5 removeNotificationsForServiceIdentifier:@"com.apple.telephonyutilities.callservicesd.thumperpushhandler.secondarydevicethumperenabled"];
  }

void sub_100062750(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[CSDFaceTimeVideoIDSService sharedInstance]( &OBJC_CLASS___CSDFaceTimeVideoIDSService,  "sharedInstance"));
  [v2 addServiceDelegate:*(void *)(a1 + 32) queue:*(void *)(*(void *)(a1 + 32) + 24)];

  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
  uint64_t v4 = *(void *)(a1 + 32);
  unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue(+[CSDRelayIDSService sharedInstance](&OBJC_CLASS___CSDRelayIDSService, "sharedInstance"));
  [v3 addObserver:v4 selector:"devicesChanged:" name:@"CSDIDSDeviceListChangedNotification" object:v5];

  unint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
  uint64_t v7 = *(void *)(a1 + 32);
  char v8 = (void *)objc_claimAutoreleasedReturnValue( +[CSDFaceTimeVideoIDSService sharedInstance]( &OBJC_CLASS___CSDFaceTimeVideoIDSService,  "sharedInstance"));
  [v6 addObserver:v7 selector:"callerIDChanged:" name:@"CSDIDSServiceCallerIDChangedNotification" object:v8];

  BOOL v9 = (void *)objc_claimAutoreleasedReturnValue( +[FTCServiceAvailabilityCenter sharedInstance]( &OBJC_CLASS___FTCServiceAvailabilityCenter,  "sharedInstance"));
  [v9 addListenerID:@"com.apple.telephonyutilities.callservicesd.accountscontroller" forService:0];

  int v10 = (void *)objc_claimAutoreleasedReturnValue( +[FTCServiceAvailabilityCenter sharedInstance]( &OBJC_CLASS___FTCServiceAvailabilityCenter,  "sharedInstance"));
  [v10 addListenerID:@"com.apple.telephonyutilities.callservicesd.accountscontroller" forService:2];

  id v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
  [v11 addObserver:*(void *)(a1 + 32) selector:"serviceAvailabilityChanged:" name:FTCServiceAvailabilityDidChangeNotification object:0];

  id v12 = sub_1001704C4();
  unsigned int v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
  {
    id v14 = [*(id *)(a1 + 32) _faceTimeAudioAvailability];
    id v15 = [*(id *)(a1 + 32) _faceTimeVideoAvailability];
    int v21 = 134218240;
    id v22 = v14;
    __int16 v23 = 2048;
    id v24 = v15;
    _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "FaceTime Audio availability is %ld. FaceTime Video availability is %ld",  (uint8_t *)&v21,  0x16u);
  }

  [*(id *)(a1 + 32) _updateOutgoingCallerID];
  id v16 = sub_1001704C4();
  unsigned int v17 = (os_log_s *)objc_claimAutoreleasedReturnValue(v16);
  if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
  {
    unsigned int v19 = (void *)objc_opt_class(*(void *)(a1 + 32), v18);
    int v21 = 138412290;
    id v22 = v19;
    id v20 = v19;
    _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "Initialized %@", (uint8_t *)&v21, 0xCu);
  }
}

id sub_100062D20(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    int v6 = 138412290;
    uint64_t v7 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Received caller ID changed notification: %@",  (uint8_t *)&v6,  0xCu);
  }

  return [*(id *)(a1 + 40) updateOutgoingCallerIDAndSendDelegateCallbacksIfNecessary];
}

void sub_100062E64(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    int v6 = 138412290;
    uint64_t v7 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Received service availability changed notification: %@",  (uint8_t *)&v6,  0xCu);
  }

  unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) delegate]);
  [v5 faceTimeAvailabilityChanged];
}

id sub_100062FB8(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    int v6 = 138412290;
    uint64_t v7 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Received devices changed notification: %@",  (uint8_t *)&v6,  0xCu);
  }

  return [*(id *)(a1 + 40) updateOutgoingCallerIDAndSendDelegateCallbacksIfNecessary];
}

void sub_100063394( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_1000633AC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1000633BC(uint64_t a1)
{
}

void sub_1000633C4(uint64_t a1)
{
}

void sub_1000634D4(uint64_t a1)
{
  id v4 = *(id *)(*(void *)(a1 + 32) + 16LL);
  [*(id *)(a1 + 32) _updateOutgoingCallerID];
  id v2 = *(id *)(*(void *)(a1 + 32) + 16LL);
  if ((TUStringsAreEqualOrNil(v4, v2) & 1) == 0)
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);
    [v3 outgoingCallerIDChanged];
  }
}

id sub_1000639F8(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) isValidOutgoingCallerID:a2];
}

id sub_100063A04(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) isValidOutgoingCallerID:a2];
}

void sub_100063A88(id a1)
{
  off_10044CED0 = (_UNKNOWN *)CUTWeakLinkSymbol("IMStringIsPhoneNumber", @"IMFoundation");
}

void sub_1000648EC(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[TUConversationProviderManagerXPCClient conversationProviderManagerClientXPCInterface]( &OBJC_CLASS___TUConversationProviderManagerXPCClient,  "conversationProviderManagerClientXPCInterface"));
  [*(id *)(*(void *)(a1 + 32) + 48) setRemoteObjectInterface:v2];

  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[TUConversationProviderManagerXPCClient conversationProviderManagerServerXPCInterface]( &OBJC_CLASS___TUConversationProviderManagerXPCClient,  "conversationProviderManagerServerXPCInterface"));
  [*(id *)(*(void *)(a1 + 32) + 48) setExportedInterface:v3];

  objc_msgSend(*(id *)(*(void *)(a1 + 32) + 48), "setExportedObject:");
  [*(id *)(*(void *)(a1 + 32) + 48) setRequiredConnectionCapability:@"register-gft-service"];
  [*(id *)(*(void *)(a1 + 32) + 48) setInterruptionHandler:&stru_1003D83C0];
  objc_initWeak(&location, *(id *)(a1 + 32));
  char v8 = _NSConcreteStackBlock;
  uint64_t v9 = 3221225472LL;
  int v10 = sub_100064B38;
  id v11 = &unk_1003D83E8;
  objc_copyWeak(&v12, &location);
  [*(id *)(*(void *)(a1 + 32) + 48) setInvalidationHandler:&v8];
  id v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "clientManager", v8, v9, v10, v11));
  unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue([v4 asynchronousExportedObjectProxy]);
  +[TUConversationProviderManagerXPCClient setAsynchronousServer:]( &OBJC_CLASS___TUConversationProviderManagerXPCClient,  "setAsynchronousServer:",  v5);

  int v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientManager]);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 synchronousExportedObjectProxy]);
  +[TUConversationProviderManagerXPCClient setSynchronousServer:]( &OBJC_CLASS___TUConversationProviderManagerXPCClient,  "setSynchronousServer:",  v7);

  objc_destroyWeak(&v12);
  objc_destroyWeak(&location);
}

void sub_100064A70( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_100064A90(id a1, CSDClient *a2)
{
  id v2 = a2;
  id v3 = sub_1001704C4();
  id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = 138412290;
    int v6 = v2;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "XPC connection interrupted from client %@",  (uint8_t *)&v5,  0xCu);
  }
}

void sub_100064B38(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_1001704C4();
  int v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    id v40 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "XPC connection invalidated from client %@ for CSDConversationProviderManagerXPCServer",  buf,  0xCu);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v3 capabilities]);
  char v8 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained featureFlags]);
  unsigned int v9 = [v8 groupFacetimeAsAServiceEnabled];

  if (v9)
  {
    __int128 v36 = 0u;
    __int128 v37 = 0u;
    __int128 v34 = 0u;
    __int128 v35 = 0u;
    int v10 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained conversationManager]);
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v10 activeConversations]);

    id v11 = [v7 countByEnumeratingWithState:&v34 objects:v38 count:16];
    if (v11)
    {
      id v13 = v11;
      uint64_t v14 = *(void *)v35;
      *(void *)&__int128 v12 = 138412290LL;
      __int128 v32 = v12;
      do
      {
        id v15 = 0LL;
        id v33 = v13;
        do
        {
          if (*(void *)v35 != v14) {
            objc_enumerationMutation(v7);
          }
          id v16 = *(void **)(*((void *)&v34 + 1) + 8LL * (void)v15);
          unsigned int v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "provider", v32));
          unsigned __int8 v18 = [v17 isDefaultProvider];

          if ((v18 & 1) == 0)
          {
            unsigned int v19 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained providerManager]);
            id v20 = (void *)objc_claimAutoreleasedReturnValue([v19 providerIdentifiersForClient:v3]);

            if ([v20 count])
            {
              int v21 = (void *)objc_claimAutoreleasedReturnValue([v16 provider]);
              uint64_t v22 = v14;
              id v23 = WeakRetained;
              id v24 = v7;
              id v25 = v3;
              uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue([v21 identifier]);
              unsigned int v27 = [v20 containsObject:v26];

              id v3 = v25;
              uint64_t v7 = v24;
              id WeakRetained = v23;
              uint64_t v14 = v22;
              id v13 = v33;

              if (v27)
              {
                id v28 = sub_1001704C4();
                int v29 = (os_log_s *)objc_claimAutoreleasedReturnValue(v28);
                if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
                {
                  *(_DWORD *)buf = v32;
                  id v40 = v16;
                  _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_DEFAULT,  "Leaving since client got invalidated conversation: %@",  buf,  0xCu);
                }

                int v30 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained conversationManager]);
                int v31 = (void *)objc_claimAutoreleasedReturnValue([v16 UUID]);
                [v30 leaveConversationWithUUID:v31];
              }
            }
          }

          id v15 = (char *)v15 + 1;
        }

        while (v13 != v15);
        id v13 = [v7 countByEnumeratingWithState:&v34 objects:v38 count:16];
      }

      while (v13);
    }

id sub_100064E38(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientManager]);
  [v2 startListeningOnMachServiceWithName:@"com.apple.telephonyutilities.callservicesdaemon.conversationprovidermanager"];

  notify_register_check( "CSDConversationProviderManagerClientsShouldConnectNotification",  (int *)(*(void *)(a1 + 32) + 8LL));
  notify_set_state(*(_DWORD *)(*(void *)(a1 + 32) + 8LL), 0LL);
  return [*(id *)(a1 + 32) notifyClientsToConnectIfNecessary];
}

void sub_100064FDC(uint64_t a1)
{
  id v1 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientManager]);
  [v1 invalidate];
}

void sub_1000651B8(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientManager]);
  [v2 addLocalClientObject:*(void *)(a1 + 40)];
}

void sub_100065290(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientManager]);
  [v2 removeLocalClientObject:*(void *)(a1 + 40)];
}

void sub_10006538C(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    int v8 = 138412290;
    uint64_t v9 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "conversationProviderForIdentifier: %@",  (uint8_t *)&v8,  0xCu);
  }

  int v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) providerManager]);
  int v6 = (void *)objc_claimAutoreleasedReturnValue([v5 conversationProviderForIdentifier:*(void *)(a1 + 32)]);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 tuProvider]);

  (*(void (**)(void))(*(void *)(a1 + 48) + 16LL))();
}

void sub_100065574(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = TULoggableStringForHandle(*(void *)(a1 + 32));
    int v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
    int v7 = 138412290;
    int v8 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "generatePseudonymHandleForConversationProviderURI: %@",  (uint8_t *)&v7,  0xCu);
  }

  int v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) providerManager]);
  [v6 generatePseudonymHandleForConversationProvider:*(void *)(a1 + 48) expiryDuration:*(void *)(a1 + 32) URI:*(void *)(a1 + 56) completionHandler:*(double *)(a1 + 64)];
}

void sub_10006575C(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    int v6 = 138412290;
    uint64_t v7 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "renewPseudonymHandle: %@", (uint8_t *)&v6, 0xCu);
  }

  int v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) providerManager]);
  [v5 renewPseudonymHandle:*(void *)(a1 + 32) forConversationProvider:*(void *)(a1 + 48) expirationDate:*(void *)(a1 + 56) completionHandler:*(void *)(a1 + 64)];
}

void sub_100065908(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    int v6 = 138412290;
    uint64_t v7 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "revokePseudonymHandle: %@",  (uint8_t *)&v6,  0xCu);
  }

  int v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) providerManager]);
  [v5 revokePseudonymHandle:*(void *)(a1 + 32) forConversationProvider:*(void *)(a1 + 48) completionHandler:*(void *)(a1 + 56)];
}

void sub_100065AB0(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    int v6 = 138412290;
    uint64_t v7 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "doesHandleCorrespondToConversationProvider: %@",  (uint8_t *)&v6,  0xCu);
  }

  int v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) providerManager]);
  [v5 doesHandle:*(void *)(a1 + 32) correspondToConversationProvider:*(void *)(a1 + 48) completionHandler:*(void *)(a1 + 56)];
}

void sub_100065E18(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = objc_alloc_init(&OBJC_CLASS___TUCallServicesClientCapabilities);
  int v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) providerConfiguration]);
  -[TUCallServicesClientCapabilities setWantsCallDisconnectionOnInvalidation:]( v4,  "setWantsCallDisconnectionOnInvalidation:",  [v5 wantsLeaveOnInvalidation]);

  id v6 = sub_1001704C4();
  uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    int v12 = 138412290;
    id v13 = v4;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "clientCapabilities: %@", (uint8_t *)&v12, 0xCu);
  }

  [*(id *)(a1 + 40) setCapabilities:v4];
  int v8 = (void *)objc_claimAutoreleasedReturnValue( +[CSDConversationProviderManager sharedInstance]( &OBJC_CLASS___CSDConversationProviderManager,  "sharedInstance"));
  uint64_t v9 = *(void *)(a1 + 40);
  int v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) identifier]);
  [v8 startTrackingClient:v9 forProviderIdentifier:v10];

  uint64_t v11 = *(void *)(a1 + 48);
  if (v11) {
    (*(void (**)(uint64_t, id))(v11 + 16))(v11, v3);
  }
}

void sub_1000664F4(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[TUCallProviderManagerXPCClient callProviderManagerClientXPCInterface]( &OBJC_CLASS___TUCallProviderManagerXPCClient,  "callProviderManagerClientXPCInterface"));
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientManager]);
  [v3 setRemoteObjectInterface:v2];

  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue( +[TUCallProviderManagerXPCClient callProviderManagerServerXPCInterface]( &OBJC_CLASS___TUCallProviderManagerXPCClient,  "callProviderManagerServerXPCInterface"));
  int v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientManager]);
  [v5 setExportedInterface:v4];

  id v6 = *(void **)(a1 + 32);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 clientManager]);
  [v7 setExportedObject:v6];

  uint64_t v8 = TUEntitlementsAccessCallProvidersCapability;
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientManager]);
  [v9 setRequiredConnectionCapability:v8];

  int v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientManager]);
  [v10 setInterruptionHandler:&stru_1003D84D0];

  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientManager]);
  [v11 setInvalidationHandler:&stru_1003D84F0];

  int v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientManager]);
  id v13 = (void *)objc_claimAutoreleasedReturnValue([v12 asynchronousExportedObjectProxy]);
  +[TUCallProviderManagerXPCClient setAsynchronousServer:]( &OBJC_CLASS___TUCallProviderManagerXPCClient,  "setAsynchronousServer:",  v13);

  id v15 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientManager]);
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v15 synchronousExportedObjectProxy]);
  +[TUCallProviderManagerXPCClient setSynchronousServer:]( &OBJC_CLASS___TUCallProviderManagerXPCClient,  "setSynchronousServer:",  v14);
}

void sub_10006666C(id a1, CSDClient *a2)
{
  id v2 = a2;
  id v3 = sub_1001704C4();
  uint64_t v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = 138412290;
    id v6 = v2;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "XPC connection interrupted from client %@",  (uint8_t *)&v5,  0xCu);
  }
}

void sub_100066714(id a1, CSDClient *a2)
{
  id v2 = a2;
  id v3 = sub_1001704C4();
  uint64_t v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = 138412290;
    id v6 = v2;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "XPC connection invalidated from client %@",  (uint8_t *)&v5,  0xCu);
  }
}

void sub_1000667BC(uint64_t a1)
{
  id v1 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientManager]);
  [v1 startListeningOnMachServiceWithName:@"com.apple.telephonyutilities.callservicesdaemon.callprovidermanager"];
}

void sub_100066860(uint64_t a1)
{
  id v1 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientManager]);
  [v1 invalidate];
}

void sub_100066F60(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientManager]);
  [v2 addLocalClientObject:*(void *)(a1 + 40)];
}

void sub_100067038(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientManager]);
  [v2 removeLocalClientObject:*(void *)(a1 + 40)];
}

void sub_10006711C(uint64_t a1, void *a2, void *a3)
{
  int v5 = *(void **)(a1 + 32);
  id v6 = a3;
  id v7 = a2;
  id v10 = (id)objc_claimAutoreleasedReturnValue([v5 providersByIdentifierForClient:v7]);
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) localProvidersByIdentifierForClient:v7]);
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) pairedHostDeviceProvidersByIdentifierForClient:v7]);

  [v6 updateProvidersByIdentifier:v10 localProvidersByIdentifier:v8 pairedHostDeviceProvidersByIdentifier:v9];
}

void sub_10006728C(uint64_t a1)
{
  id v1 = [objc_alloc(*(Class *)(a1 + 32)) initWithName:@"com.apple.private.alloy.facetime.video"];
  id v2 = (void *)qword_10044CEE0;
  qword_10044CEE0 = (uint64_t)v1;
}

void sub_1000676F0(id a1)
{
  uint64_t v1 = TUPreferredFaceTimeBundleIdentifier(a1);
  id v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[LSApplicationRecord csd_applicationRecordForBundleIdentifier:]( &OBJC_CLASS___LSApplicationRecord,  "csd_applicationRecordForBundleIdentifier:",  v2));
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 machOUUIDs]);
  uint64_t v5 = objc_claimAutoreleasedReturnValue([v4 firstObject]);
  id v6 = (void *)qword_10044CEF0;
  qword_10044CEF0 = v5;

  if (!qword_10044CEF0)
  {
    id v7 = sub_1001704C4();
    uint64_t v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_1002B36B4((uint64_t)v2, v8, v9);
    }
  }
}

CSDAVConference *__cdecl sub_1000678C0(id a1)
{
  return objc_alloc_init(&OBJC_CLASS___CSDAVConference);
}

void sub_100068654(id a1)
{
  if (CFPreferencesGetAppBooleanValue( @"disableFaceTimeKeyExchange",  TUBundleIdentifierTelephonyUtilitiesFramework,  &keyExistsAndHasValidFormat))
  {
    BOOL v1 = keyExistsAndHasValidFormat == 0;
  }

  else
  {
    BOOL v1 = 1;
  }

  char v2 = !v1;
  byte_10044CF00 = v2;
  if (!v1)
  {
    id v3 = sub_1001704C4();
    uint64_t v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      id v7 = @"disableFaceTimeKeyExchange";
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "[WARN] Disabling key exchange because %@ default is set to YES",  buf,  0xCu);
    }
  }

void sub_10006A950(uint64_t a1)
{
  char v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) dateReceivedFirstRemoteFrame]);

  if (!v2)
  {
    id v3 = sub_1001704C4();
    uint64_t v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      int v8 = 134218242;
      uint64_t v9 = 0x4008000000000000LL;
      __int16 v10 = 2112;
      uint64_t v11 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "[WARN] First frame not received after %f seconds for %@",  (uint8_t *)&v8,  0x16u);
    }

    id v6 = *(void **)(a1 + 32);
    id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 conference]);
    [v6 receivedFirstRemoteFrameForConference:v7];
  }

BOOL sub_10006B42C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (1)
    {
      if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      char v4 = 0;
      unsigned int v5 = 0;
      unint64_t v6 = 0LL;
      while (1)
      {
        unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v7 == -1LL || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v8 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
        v6 |= (unint64_t)(v8 & 0x7F) << v4;
        if ((v8 & 0x80) == 0) {
          goto LABEL_11;
        }
        v4 += 7;
        if (v5++ >= 9)
        {
          unint64_t v6 = 0LL;
          int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
          goto LABEL_13;
        }
      }

      *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
      int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
      if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        unint64_t v6 = 0LL;
      }
LABEL_13:
      if (v10 || (v6 & 7) == 4) {
        return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      switch((v6 >> 3))
      {
        case 1u:
          uint64_t String = PBReaderReadString(a2);
          uint64_t v13 = objc_claimAutoreleasedReturnValue(String);
          uint64_t v14 = 24LL;
          goto LABEL_24;
        case 2u:
          uint64_t v15 = PBReaderReadString(a2);
          uint64_t v13 = objc_claimAutoreleasedReturnValue(v15);
          uint64_t v14 = 8LL;
          goto LABEL_24;
        case 3u:
          uint64_t v16 = PBReaderReadString(a2);
          uint64_t v13 = objc_claimAutoreleasedReturnValue(v16);
          uint64_t v14 = 32LL;
          goto LABEL_24;
        case 4u:
          uint64_t v17 = PBReaderReadString(a2);
          uint64_t v13 = objc_claimAutoreleasedReturnValue(v17);
          uint64_t v14 = 16LL;
LABEL_24:
          unsigned __int8 v18 = *(void **)(a1 + v14);
          *(void *)(a1 + v14) = v13;

          goto LABEL_25;
        default:
          if ((PBReaderSkipValueWithTag(a2) & 1) == 0) {
            return 0LL;
          }
LABEL_25:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          break;
      }
    }
  }

  return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_10006BBCC(uint64_t a1)
{
  BOOL v1 = -[CSDCallDirectoryManager initWithQueue:]( objc_alloc(&OBJC_CLASS___CSDCallDirectoryManager),  "initWithQueue:",  *(void *)(a1 + 32));
  char v2 = (void *)qword_10044CF10;
  qword_10044CF10 = (uint64_t)v1;
}

void sub_10006BDC0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
}

void sub_10006BDE0(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)unint64_t v6 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Device first unlock block invoked, initializing CXCallDirectoryManager...",  v6,  2u);
  }

  char v4 = objc_alloc_init(&OBJC_CLASS___CXCallDirectoryManager);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setManager:v4];
}

void sub_10006BE74(uint64_t a1, void *a2)
{
  id v3 = a2;
  xpc_activity_state_t state = xpc_activity_get_state(v3);
  if (state == 2)
  {
    [*(id *)(a1 + 32) beginDailyMaintenanceWithActivity:v3];
  }

  else if (!state)
  {
    id v5 = sub_1001704C4();
    unint64_t v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      xpc_object_t v7 = xpc_activity_copy_criteria(v3);
      int v8 = 138412290;
      xpc_object_t v9 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "XPC activity checked in. Criteria: %@",  (uint8_t *)&v8,  0xCu);
    }
  }
}

void sub_10006C3B8(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) manager]);

  id v3 = sub_1001704C4();
  char v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);
  if (v2)
  {
    if (v5)
    {
      uint64_t v6 = *(void *)(a1 + 40);
      *(_DWORD *)buf = 138412290;
      uint64_t v21 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Beginning daily maintenance with activity %@",  buf,  0xCu);
    }

    xpc_object_t v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) manager]);
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3221225472LL;
    _DWORD v18[2] = sub_10006C54C;
    v18[3] = &unk_1003D7B70;
    int v8 = *(void **)(a1 + 40);
    v18[4] = *(void *)(a1 + 32);
    id v19 = v8;
    [v7 compactStoreWithCompletionHandler:v18];
  }

  else
  {
    if (v5)
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Setting activity state to XPC_ACTIVITY_STATE_DONE",  buf,  2u);
    }

    if (!xpc_activity_set_state(*(xpc_activity_t *)(a1 + 40), 5LL))
    {
      id v9 = sub_1001704C4();
      int v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_1002B38C8(v10, v11, v12, v13, v14, v15, v16, v17);
      }
    }
  }

void sub_10006C54C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_1001704C4();
  BOOL v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  uint64_t v6 = v5;
  if (v3)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_1002B38F8();
    }
  }

  else if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Successfully compacted store", buf, 2u);
  }

  xpc_object_t v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) manager]);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  v8[2] = sub_10006C648;
  v8[3] = &unk_1003D8600;
  id v9 = *(id *)(a1 + 40);
  [v7 cleanUpLiveLookupDataWithCompletionHandler:v8];
}

void sub_10006C648(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_1001704C4();
  BOOL v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  uint64_t v6 = v5;
  if (v3)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_1002B3958();
    }
  }

  else if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Cleaned up LiveLookupData", buf, 2u);
  }

  id v7 = sub_1001704C4();
  int v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)unsigned __int8 v18 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "Setting activity state to XPC_ACTIVITY_STATE_DONE",  v18,  2u);
  }

  if (!xpc_activity_set_state(*(xpc_activity_t *)(a1 + 32), 5LL))
  {
    id v9 = sub_1001704C4();
    int v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      sub_1002B38C8(v10, v11, v12, v13, v14, v15, v16, v17);
    }
  }
}

void sub_10006C8C0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_1001704C4();
  BOOL v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  uint64_t v6 = v5;
  if (v3)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_1002B3A18();
    }
  }

  else if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Successfully synchronized call directory extensions",  buf,  2u);
  }

  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) queue]);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_10006C9BC;
  block[3] = &unk_1003D7730;
  id v9 = *(id *)(a1 + 40);
  dispatch_async(v7, block);
}

void sub_10006C9BC(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue(+[CSDTransactionManager sharedInstance](&OBJC_CLASS___CSDTransactionManager, "sharedInstance"));
  [v2 endTransactionIfNecessaryForObject:*(void *)(a1 + 32)];
}

LABEL_126:
  id v85 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_protoProtocolVersion));
  [v3 setObject:v85 forKey:@"protoProtocolVersion"];

  if ((*(_DWORD *)&self->_has & 0x400000) != 0)
  {
LABEL_43:
    unsigned int v27 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  self->_protoShouldSuppressRingtone));
    [v3 setObject:v27 forKey:@"protoShouldSuppressRingtone"];
  }

            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
            goto LABEL_129;
          }

          if (v85 < v83) {
            goto LABEL_105;
          }
          if (v41 > v80[2]) {
            goto LABEL_106;
          }
          *(void *)uint64_t v82 = v83;
          *(void *)&v39[16 * v81 + 8] = v85;
          uint64_t v86 = v80[2];
          if (v41 >= v86) {
            goto LABEL_107;
          }
          int v10 = (char *)v80;
          char v38 = v86 - 1;
          memmove(&v39[16 * v41], v84 + 16, 16 * (v86 - 1 - v41));
          v80[2] = v86 - 1;
          id v9 = v102;
          if (v86 <= 2) {
            goto LABEL_81;
          }
        }
      }

      char v38 = 1LL;
LABEL_81:
      BOOL v5 = v100;
      id v3 = v101;
      if (v8 >= v101) {
        goto LABEL_91;
      }
    }
  }

  int v10 = (char *)&_swiftEmptyArrayStorage;
  char v38 = *((void *)&_swiftEmptyArrayStorage + 2);
LABEL_91:
  if (v38 >= 2)
  {
    unint64_t v89 = *v98;
    while (1)
    {
      uint64_t v90 = v38 - 2;
      if (v38 < 2) {
        break;
      }
      if (!v89) {
        goto LABEL_134;
      }
      unint64_t v91 = *(void *)&v10[16 * v90 + 32];
      uint64_t v92 = *(void *)&v10[16 * v38 + 24];
      sub_1001B0C0C( (char *)(v89 + 32 * v91),  (char *)(v89 + 32LL * *(void *)&v10[16 * v38 + 16]),  v89 + 32 * v92,  v103);
      if (v1) {
        goto LABEL_87;
      }
      if (v92 < v91) {
        goto LABEL_120;
      }
      if ((swift_isUniquelyReferenced_nonNull_native(v10) & 1) == 0)
      {
        sub_10022A0D0((uint64_t)v10);
        int v10 = v95;
      }

      if (v90 >= *((void *)v10 + 2)) {
        goto LABEL_121;
      }
      unint64_t v93 = &v10[16 * v90 + 32];
      *(void *)unint64_t v93 = v91;
      *((void *)v93 + 1) = v92;
      uint64_t v94 = *((void *)v10 + 2);
      if (v38 > v94) {
        goto LABEL_122;
      }
      memmove(&v10[16 * v38 + 16], &v10[16 * v38 + 32], 16 * (v94 - v38));
      *((void *)v10 + 2) = v94 - 1;
      char v38 = v94 - 1;
      if (v94 <= 2) {
        goto LABEL_102;
      }
    }

LABEL_113:
  unsigned int v76 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  self->_protoNeedsManualInCallSounds));
  [v3 setObject:v76 forKey:@"protoNeedsManualInCallSounds"];

  int v29 = self->_has;
  if ((*(_WORD *)&v29 & 0x8000) == 0)
  {
LABEL_50:
    if ((*(_DWORD *)&v29 & 0x20000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_51;
  }

LABEL_114:
  uint64_t v77 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  self->_protoCannotRelayAudioOrVideoOnPairedDevice));
  [v3 setObject:v77 forKey:@"protoCannotRelayAudioOrVideoOnPairedDevice"];

  if ((*(_DWORD *)&self->_has & 0x20000) != 0)
  {
LABEL_51:
    int v30 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  self->_protoExpectedEndpointOnMessagingDevice));
    [v3 setObject:v30 forKey:@"protoExpectedEndpointOnMessagingDevice"];
  }

  id v103 = swift_beginAccess(v10, &v182, 0LL, 0LL);
  id v105 = *v10;
  if ((unint64_t)*v10 >> 62)
  {
    if (v105 < 0) {
      v146 = *v10;
    }
    else {
      v146 = v105 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(*v10);
    uint64_t v106 = _CocoaArrayWrapper.endIndex.getter(v146);
    id v103 = swift_bridgeObjectRelease(v105);
  }

  else
  {
    uint64_t v106 = *(void *)((v105 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  }

  id v107 = v193 + v187;
  if (__OFADD__(v193, v187))
  {
    __break(1u);
    goto LABEL_135;
  }

  unint64_t v89 = __OFADD__(v107, v194);
  uint64_t v108 = v107 + v194;
  if (v89)
  {
LABEL_135:
    __break(1u);
    goto LABEL_136;
  }

  v157 = v193;
  a6 = v187;
  a2 = v194;
  uint64_t v11 = (int64_t)&OBJC_IVAR____TtC13callservicesd28FaceTimeNotificationProvider_replace;
  if (v106 == v108) {
    goto LABEL_121;
  }
  v155 = v87;
  v156 = v86;
  if (qword_1004468F0 != -1) {
    goto LABEL_152;
  }
LABEL_120:
  v154 = *(void *)(v11 + 24);
  char v109 = static os_log_type_t.error.getter(v103, v104);
  unsigned int v110 = sub_1001AFF14((uint64_t *)&unk_100447E30);
  uint64_t v111 = swift_allocObject(v110, 112LL, 7LL);
  *(_OWORD *)(v111 + 16) = xmmword_10037B1B0;
  swift_beginAccess(v10, v181, 0LL, 0LL);
  v180[0] = *v10;
  swift_bridgeObjectRetain(v180[0]);
  unint64_t v112 = sub_1001AFF14(&qword_10044C048);
  char v113 = String.init<A>(reflecting:)(v180, v112);
  unsigned int v115 = v114;
  *(void *)(v111 + 56) = &type metadata for String;
  uint64_t v116 = sub_1001B2330();
  *(void *)(v111 + 64) = v116;
  *(void *)(v111 + 32) = v113;
  *(void *)(v111 + 40) = v115;
  int v10 = v164;
  swift_beginAccess(v163, v180, 0LL, 0LL);
  v179[0] = *v163;
  swift_bridgeObjectRetain(v179[0]);
  unint64_t v117 = String.init<A>(reflecting:)(v179, v112);
  *(void *)(v111 + 96) = &type metadata for String;
  *(void *)(v111 + 104) = v116;
  *(void *)(v111 + 72) = v117;
  *(void *)(v111 + 80) = v118;
  os_log(_:dso:log:type:_:)( "all of the gftOneToOneEndpoints did not show up in the modernFTDestinations. gftOneToOneEndpoints: %@ modernFTEndpoints: %@",  123LL,  2LL,  &_mh_execute_header,  v154,  v109,  v111);
  swift_bridgeObjectRelease(v111);
  id v87 = v155;
  uint64_t v86 = v156;
LABEL_121:
  if (qword_1004468F0 != -1) {
LABEL_136:
  }
    swift_once(&qword_1004468F0, sub_100208418);
  char v119 = sub_1001AFF14((uint64_t *)&unk_100447E30);
  unsigned int v120 = swift_allocObject(v119, 792LL, 7LL);
  *(_OWORD *)(v120 + 16) = xmmword_10037F150;
  swift_beginAccess(v10, v179, 0LL, 0LL);
  unint64_t v121 = *v10;
  if ((unint64_t)*v10 >> 62)
  {
    if (v121 < 0) {
      v147 = *v10;
    }
    else {
      v147 = v121 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v121);
    char v122 = _CocoaArrayWrapper.endIndex.getter(v147);
    swift_bridgeObjectRelease(v121);
  }

  else
  {
    char v122 = *(void *)((v121 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  }

  *(void *)(v120 + 56) = &type metadata for Int;
  *(void *)(v120 + 64) = &protocol witness table for Int;
  *(void *)(v120 + 32) = v122;
  swift_beginAccess(v163, v178, 0LL, 0LL);
  char v123 = *v163;
  if ((unint64_t)*v163 >> 62)
  {
    if (v123 < 0) {
      v148 = *v163;
    }
    else {
      v148 = v123 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v123);
    unsigned int v124 = _CocoaArrayWrapper.endIndex.getter(v148);
    swift_bridgeObjectRelease(v123);
  }

  else
  {
    unsigned int v124 = *(void *)((v123 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  }

  *(void *)(v120 + 96) = &type metadata for Int;
  *(void *)(v120 + 104) = &protocol witness table for Int;
  *(void *)(v120 + 72) = v124;
  swift_beginAccess(a5, v177, 0LL, 0LL);
  uint64_t v125 = *a5;
  if ((unint64_t)*a5 >> 62)
  {
    if (v125 < 0) {
      v149 = *a5;
    }
    else {
      v149 = v125 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v125);
    unint64_t v126 = _CocoaArrayWrapper.endIndex.getter(v149);
    swift_bridgeObjectRelease(v125);
  }

  else
  {
    unint64_t v126 = *(void *)((v125 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  }

  *(void *)(v120 + 136) = &type metadata for Int;
  *(void *)(v120 + 144) = &protocol witness table for Int;
  *(void *)(v120 + 112) = v126;
  *(void *)(v120 + 176) = &type metadata for Int;
  *(void *)(v120 + 184) = &protocol witness table for Int;
  *(void *)(v120 + 152) = v87;
  char v127 = *(void *)(v30 + 16);
  *(void *)(v120 + 216) = &type metadata for Int;
  *(void *)(v120 + 224) = &protocol witness table for Int;
  *(void *)(v120 + 192) = v127;
  unsigned int v129 = v165;
  char v128 = (uint64_t)a4;
  unint64_t v130 = a4[2];
  *(void *)(v120 + 256) = &type metadata for Int;
  *(void *)(v120 + 264) = &protocol witness table for Int;
  *(void *)(v120 + 232) = v130;
  char v131 = v165[2];
  *(void *)(v120 + 296) = &type metadata for Int;
  *(void *)(v120 + 304) = &protocol witness table for Int;
  *(void *)(v120 + 272) = v131;
  uint64_t v132 = v199;
  *(void *)(v120 + 336) = &type metadata for Int;
  *(void *)(v120 + 344) = &protocol witness table for Int;
  *(void *)(v120 + 312) = v132;
  BOOL v133 = v198;
  *(void *)(v120 + 376) = &type metadata for Int;
  *(void *)(v120 + 384) = &protocol witness table for Int;
  *(void *)(v120 + 352) = v133;
  uint64_t v134 = v197;
  *(void *)(v120 + 416) = &type metadata for Int;
  *(void *)(v120 + 424) = &protocol witness table for Int;
  *(void *)(v120 + 392) = v134;
  v135 = v196;
  *(void *)(v120 + 456) = &type metadata for Int;
  *(void *)(v120 + 464) = &protocol witness table for Int;
  *(void *)(v120 + 432) = v135;
  *(void *)(v120 + 496) = &type metadata for Int;
  *(void *)(v120 + 504) = &protocol witness table for Int;
  *(void *)(v120 + 472) = v157;
  v136 = v192;
  *(void *)(v120 + 536) = &type metadata for Int;
  *(void *)(v120 + 544) = &protocol witness table for Int;
  *(void *)(v120 + 512) = v136;
  v137 = v191;
  *(void *)(v120 + 576) = &type metadata for Int;
  *(void *)(v120 + 584) = &protocol witness table for Int;
  *(void *)(v120 + 552) = v137;
  v138 = v188;
  *(void *)(v120 + 616) = &type metadata for Int;
  *(void *)(v120 + 624) = &protocol witness table for Int;
  *(void *)(v120 + 592) = v138;
  *(void *)(v120 + 656) = &type metadata for Int;
  *(void *)(v120 + 664) = &protocol witness table for Int;
  *(void *)(v120 + 632) = a6;
  v139 = v186;
  *(void *)(v120 + 696) = &type metadata for Int;
  *(void *)(v120 + 704) = &protocol witness table for Int;
  *(void *)(v120 + 672) = v139;
  *(void *)(v120 + 736) = &type metadata for Int;
  *(void *)(v120 + 744) = &protocol witness table for Int;
  *(void *)(v120 + 712) = a2;
  v140 = swift_beginAccess(v86, v176, 0LL, 0LL);
  v141 = *v86;
  *(void *)(v120 + 776) = &type metadata for Int;
  *(void *)(v120 + 784) = &protocol witness table for Int;
  *(void *)(v120 + 752) = v141;
  static os_log_type_t.default.getter(v140);
  os_log(_:dso:log:type:_:)( "allGFTOneToOneEndpoints.count=%ld allModernFTEndpoints.count=%ld allIMAVFTEndpoints.count=%ld gftOneToOneDestination s.count=%ld modernFTDestinations.count=%ld imavDestinations.count=%ld screenSharingRemoteControlDestinations.count=% ld removedNonUPlusOneTokens: %d removedSelfDestinations: %d removedGreenTeaDestinations: %d noGFTParticipantDestinat ion: %d removedGFTDestinations: %d removedSelfModernDestinations: %d noModernParticipantDestination: %d noIMAVPartic ipantDestination: %d removedGFTOrModernDestination: %d removedSelfIMAVDestinations: %d removedNonScreenSharingRemote ControlDestinations: %d subError: %d",  v153,  v154,  v155,  v156,  v157,  a8,  a7,  a6,  (_DWORD)a5,  (_DWORD)v163,  (_DWORD)v164,  (_DWORD)v165,  (_DWORD)a4,  a2,  (_DWORD)v168,  v170[0],  v170[2],  v170[4],  v171[0]);
  swift_bridgeObjectRelease(v120);
  v175[0] = v30;
  sub_100290AEC(v128);
  v142 = v175[0];
  swift_beginAccess(v86, v175, 0LL, 0LL);
  v160(v142, v169, v129, *v86);
  swift_bridgeObjectRelease(v142);
  swift_bridgeObjectRelease(v129);
  return swift_bridgeObjectRelease(v169);
}

LABEL_118:
  unsigned int v80 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", self->_protoRemoteUplinkMuted));
  [v3 setObject:v80 forKey:@"protoRemoteUplinkMuted"];

  if ((*(_DWORD *)&self->_has & 0x1000) != 0)
  {
LABEL_87:
    *(float *)&uint64_t v43 = self->_systemVolume;
    unint64_t v58 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:", v43));
    [v3 setObject:v58 forKey:@"systemVolume"];
  }

LABEL_88:
  localSenderIdentityUUIDuint64_t String = self->_localSenderIdentityUUIDString;
  if (localSenderIdentityUUIDString) {
    [v3 setObject:localSenderIdentityUUIDString forKey:@"localSenderIdentityUUIDString"];
  }
  if (-[NSMutableArray count](self->_remoteParticipantHandles, "count"))
  {
    __int16 v60 = -[NSMutableArray initWithCapacity:]( objc_alloc(&OBJC_CLASS___NSMutableArray),  "initWithCapacity:",  -[NSMutableArray count](self->_remoteParticipantHandles, "count"));
    v159 = 0u;
    v160 = 0u;
    v161 = 0u;
    v162 = 0u;
    id v61 = self->_remoteParticipantHandles;
    uint64_t v62 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v61,  "countByEnumeratingWithState:objects:count:",  &v159,  v176,  16LL);
    if (v62)
    {
      unint64_t v63 = v62;
      char v64 = *(void *)v160;
      do
      {
        for (k = 0LL; k != v63; k = (char *)k + 1)
        {
          if (*(void *)v160 != v64) {
            objc_enumerationMutation(v61);
          }
          uint64_t v66 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v159 + 1) + 8 * (void)k) dictionaryRepresentation]);
          -[NSMutableArray addObject:](v60, "addObject:", v66);
        }

        unint64_t v63 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v61,  "countByEnumeratingWithState:objects:count:",  &v159,  v176,  16LL);
      }

      while (v63);
    }

    [v3 setObject:v60 forKey:@"remoteParticipantHandles"];
  }

  localSenderIdentityAccountUUIDuint64_t String = self->_localSenderIdentityAccountUUIDString;
  if (localSenderIdentityAccountUUIDString) {
    [v3 setObject:localSenderIdentityAccountUUIDString forKey:@"localSenderIdentityAccountUUIDString"];
  }
  unint64_t v68 = self->_has;
  if ((*(_WORD *)&v68 & 0x200) != 0)
  {
    id v81 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_protoTTYType));
    [v3 setObject:v81 forKey:@"protoTTYType"];

    unint64_t v68 = self->_has;
    if ((*(_DWORD *)&v68 & 0x2000000) == 0)
    {
LABEL_103:
      if ((*(_WORD *)&v68 & 0x800) == 0) {
        goto LABEL_130;
      }
      goto LABEL_122;
    }
  }

  else if ((*(_DWORD *)&v68 & 0x2000000) == 0)
  {
    goto LABEL_103;
  }

  uint64_t v82 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  self->_protoSupportsTTYWithVoice));
  [v3 setObject:v82 forKey:@"protoSupportsTTYWithVoice"];

  if ((*(_DWORD *)&self->_has & 0x800) == 0) {
    goto LABEL_130;
  }
LABEL_122:
  requestActionType = self->_requestActionType;
  if (requestActionType >= 0x39) {
    uint64_t v84 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)",  self->_requestActionType));
  }
  else {
    uint64_t v84 = off_1003D8620[requestActionType];
  }
  [v3 setObject:v84 forKey:@"requestActionType"];

LABEL_130:
  if (-[NSMutableArray count](self->_routes, "count"))
  {
    uint64_t v86 = -[NSMutableArray initWithCapacity:]( objc_alloc(&OBJC_CLASS___NSMutableArray),  "initWithCapacity:",  -[NSMutableArray count](self->_routes, "count"));
    v155 = 0u;
    v156 = 0u;
    v157 = 0u;
    v158 = 0u;
    id v87 = self->_routes;
    uint64_t v88 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v87,  "countByEnumeratingWithState:objects:count:",  &v155,  v175,  16LL);
    if (v88)
    {
      unint64_t v89 = v88;
      uint64_t v90 = *(void *)v156;
      do
      {
        for (m = 0LL; m != v89; m = (char *)m + 1)
        {
          if (*(void *)v156 != v90) {
            objc_enumerationMutation(v87);
          }
          uint64_t v92 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v155 + 1) + 8 * (void)m) dictionaryRepresentation]);
          -[NSMutableArray addObject:](v86, "addObject:", v92);
        }

        unint64_t v89 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v87,  "countByEnumeratingWithState:objects:count:",  &v155,  v175,  16LL);
      }

      while (v89);
    }

    [v3 setObject:v86 forKey:@"routes"];
  }

  route = self->_route;
  if (route)
  {
    uint64_t v94 = (void *)objc_claimAutoreleasedReturnValue(-[CSDMessagingRoute dictionaryRepresentation](route, "dictionaryRepresentation"));
    [v3 setObject:v94 forKey:@"route"];
  }

  endpointIDSDestinationURIs = self->_endpointIDSDestinationURIs;
  isoCountryCode = self->_isoCountryCode;
  if (isoCountryCode) {
    [v3 setObject:isoCountryCode forKey:@"isoCountryCode"];
  }
  unint64_t v97 = self->_has;
  if ((*(_BYTE *)&v97 & 0x20) != 0)
  {
    v136 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_protoPriority));
    [v3 setObject:v136 forKey:@"protoPriority"];

    unint64_t v97 = self->_has;
    if ((*(_BYTE *)&v97 & 0x10) == 0)
    {
LABEL_147:
      if ((*(_DWORD *)&v97 & 0x40000) == 0) {
        goto LABEL_148;
      }
      goto LABEL_203;
    }
  }

  else if ((*(_BYTE *)&v97 & 0x10) == 0)
  {
    goto LABEL_147;
  }

  v137 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_protoOriginatingUIType));
  [v3 setObject:v137 forKey:@"protoOriginatingUIType"];

  unint64_t v97 = self->_has;
  if ((*(_DWORD *)&v97 & 0x40000) == 0)
  {
LABEL_148:
    if ((*(_DWORD *)&v97 & 0x1000000) == 0) {
      goto LABEL_150;
    }
    goto LABEL_149;
  }

LABEL_203:
  v138 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", self->_protoFailureExpected));
  [v3 setObject:v138 forKey:@"protoFailureExpected"];

  if ((*(_DWORD *)&self->_has & 0x1000000) != 0)
  {
LABEL_149:
    uint64_t v98 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  self->_protoSupportsEmergencyFallback));
    [v3 setObject:v98 forKey:@"protoSupportsEmergencyFallback"];
  }

LABEL_150:
  groupUUIDuint64_t String = self->_groupUUIDString;
  if (groupUUIDString) {
    [v3 setObject:groupUUIDString forKey:@"groupUUIDString"];
  }
  if (-[NSMutableArray count](self->_conversations, "count"))
  {
    uint64_t v100 = -[NSMutableArray initWithCapacity:]( objc_alloc(&OBJC_CLASS___NSMutableArray),  "initWithCapacity:",  -[NSMutableArray count](self->_conversations, "count"));
    v151 = 0u;
    v152 = 0u;
    v153 = 0u;
    v154 = 0u;
    id v101 = self->_conversations;
    uint64_t v102 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v101,  "countByEnumeratingWithState:objects:count:",  &v151,  v174,  16LL);
    if (v102)
    {
      id v103 = v102;
      uint64_t v104 = *(void *)v152;
      do
      {
        for (n = 0LL; n != v103; n = (char *)n + 1)
        {
          if (*(void *)v152 != v104) {
            objc_enumerationMutation(v101);
          }
          uint64_t v106 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v151 + 1) + 8 * (void)n) dictionaryRepresentation]);
          -[NSMutableArray addObject:](v100, "addObject:", v106);
        }

        id v103 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v101,  "countByEnumeratingWithState:objects:count:",  &v151,  v174,  16LL);
      }

      while (v103);
    }

    [v3 setObject:v100 forKey:@"conversations"];
  }

  joinConversationRequestURLuint64_t String = self->_joinConversationRequestURLString;
  if (joinConversationRequestURLString) {
    [v3 setObject:joinConversationRequestURLString forKey:@"joinConversationRequestURLString"];
  }
  conversationUUIDuint64_t String = self->_conversationUUIDString;
  if (conversationUUIDString) {
    [v3 setObject:conversationUUIDString forKey:@"conversationUUIDString"];
  }
  if (-[NSMutableArray count](self->_conversationMembers, "count"))
  {
    char v109 = -[NSMutableArray initWithCapacity:]( objc_alloc(&OBJC_CLASS___NSMutableArray),  "initWithCapacity:",  -[NSMutableArray count](self->_conversationMembers, "count"));
    v147 = 0u;
    v148 = 0u;
    v149 = 0u;
    v150 = 0u;
    unsigned int v110 = self->_conversationMembers;
    uint64_t v111 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v110,  "countByEnumeratingWithState:objects:count:",  &v147,  v173,  16LL);
    if (v111)
    {
      unint64_t v112 = v111;
      char v113 = *(void *)v148;
      do
      {
        for (ii = 0LL; ii != v112; ii = (char *)ii + 1)
        {
          if (*(void *)v148 != v113) {
            objc_enumerationMutation(v110);
          }
          unsigned int v115 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v147 + 1) + 8 * (void)ii) dictionaryRepresentation]);
          -[NSMutableArray addObject:](v109, "addObject:", v115);
        }

        unint64_t v112 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v110,  "countByEnumeratingWithState:objects:count:",  &v147,  v173,  16LL);
      }

      while (v112);
    }

    [v3 setObject:v109 forKey:@"conversationMembers"];
  }

  if (-[NSMutableArray count](self->_handlesToInvites, "count"))
  {
    uint64_t v116 = -[NSMutableArray initWithCapacity:]( objc_alloc(&OBJC_CLASS___NSMutableArray),  "initWithCapacity:",  -[NSMutableArray count](self->_handlesToInvites, "count"));
    v143 = 0u;
    v144 = 0u;
    v145 = 0u;
    v146 = 0u;
    unint64_t v117 = self->_handlesToInvites;
    char v118 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v117,  "countByEnumeratingWithState:objects:count:",  &v143,  v172,  16LL);
    if (v118)
    {
      char v119 = v118;
      unsigned int v120 = *(void *)v144;
      do
      {
        for (jj = 0LL; jj != v119; jj = (char *)jj + 1)
        {
          if (*(void *)v144 != v120) {
            objc_enumerationMutation(v117);
          }
          char v122 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v143 + 1) + 8 * (void)jj) dictionaryRepresentation]);
          -[NSMutableArray addObject:](v116, "addObject:", v122);
        }

        char v119 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v117,  "countByEnumeratingWithState:objects:count:",  &v143,  v172,  16LL);
      }

      while (v119);
    }

    [v3 setObject:v116 forKey:@"handlesToInvite"];
  }

  if (-[NSMutableArray count](self->_prominenceEntrys, "count"))
  {
    char v123 = -[NSMutableArray initWithCapacity:]( objc_alloc(&OBJC_CLASS___NSMutableArray),  "initWithCapacity:",  -[NSMutableArray count](self->_prominenceEntrys, "count"));
    v139 = 0u;
    v140 = 0u;
    v141 = 0u;
    v142 = 0u;
    unsigned int v124 = self->_prominenceEntrys;
    uint64_t v125 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v124,  "countByEnumeratingWithState:objects:count:",  &v139,  v171,  16LL);
    if (v125)
    {
      unint64_t v126 = v125;
      char v127 = *(void *)v140;
      do
      {
        for (kk = 0LL; kk != v126; kk = (char *)kk + 1)
        {
          if (*(void *)v140 != v127) {
            objc_enumerationMutation(v124);
          }
          unsigned int v129 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v139 + 1) + 8 * (void)kk) dictionaryRepresentation]);
          -[NSMutableArray addObject:](v123, "addObject:", v129);
        }

        unint64_t v126 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v124,  "countByEnumeratingWithState:objects:count:",  &v139,  v171,  16LL);
      }

      while (v126);
    }

    [v3 setObject:v123 forKey:@"prominenceEntry"];
  }

  if ((*((_BYTE *)&self->_has + 2) & 0x80) != 0)
  {
    unint64_t v130 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  self->_protoSupportsDTMFUpdates));
    [v3 setObject:v130 forKey:@"protoSupportsDTMFUpdates"];
  }

  dtmfUpdateDigits = self->_dtmfUpdateDigits;
  if (dtmfUpdateDigits) {
    [v3 setObject:dtmfUpdateDigits forKey:@"dtmfUpdateDigits"];
  }
  image = self->_image;
  if (image) {
    [v3 setObject:image forKey:@"image"];
  }
  senderIDSIdentifier = self->_senderIDSIdentifier;
  if (senderIDSIdentifier) {
    [v3 setObject:senderIDSIdentifier forKey:@"senderIDSIdentifier"];
  }
  uint64_t v134 = v3;

  return v134;
}

uint64_t sub_100070DF8(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0LL;
    while (1)
    {
      uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v8 = v7 + 1;
      if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v9 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
      v6 |= (unint64_t)(v9 & 0x7F) << v4;
      if ((v9 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v10 = v5++ >= 9;
      if (v10)
      {
        unint64_t v6 = 0LL;
        int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0LL;
    }
LABEL_13:
    if (v11 || (v6 & 7) == 4) {
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        char v13 = 0;
        unsigned int v14 = 0;
        uint64_t v15 = 0LL;
        *(_DWORD *)(a1 + 400) |= 0x2000u;
        while (1)
        {
          uint64_t v16 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v17 = v16 + 1;
          if (v16 == -1 || v17 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v18 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v16);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v17;
          v15 |= (unint64_t)(v18 & 0x7F) << v13;
          if ((v18 & 0x80) == 0) {
            goto LABEL_286;
          }
          v13 += 7;
          BOOL v10 = v14++ >= 9;
          if (v10)
          {
            LODWORD(v15) = 0;
            goto LABEL_288;
          }
        }

        *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_286:
        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v15) = 0;
        }
LABEL_288:
        uint64_t v195 = 372LL;
        goto LABEL_381;
      case 2u:
        uint64_t String = PBReaderReadString(a2);
        uint64_t v20 = objc_claimAutoreleasedReturnValue(String);
        uint64_t v21 = 376LL;
        goto LABEL_284;
      case 3u:
        uint64_t v22 = PBReaderReadString(a2);
        uint64_t v20 = objc_claimAutoreleasedReturnValue(v22);
        uint64_t v21 = 64LL;
        goto LABEL_284;
      case 4u:
        uint64_t v23 = PBReaderReadString(a2);
        uint64_t v20 = objc_claimAutoreleasedReturnValue(v23);
        uint64_t v21 = 360LL;
        goto LABEL_284;
      case 5u:
        id v24 = objc_alloc_init(&OBJC_CLASS___CSDMessagingCallModelState);
        objc_storeStrong((id *)(a1 + 224), v24);
        goto LABEL_272;
      case 6u:
        char v25 = 0;
        unsigned int v26 = 0;
        uint64_t v15 = 0LL;
        *(_DWORD *)(a1 + 400) |= 0x80u;
        while (2)
        {
          uint64_t v27 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v28 = v27 + 1;
          if (v27 == -1 || v28 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v29 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v27);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v28;
            v15 |= (unint64_t)(v29 & 0x7F) << v25;
            if (v29 < 0)
            {
              v25 += 7;
              BOOL v10 = v26++ >= 9;
              if (v10)
              {
                LODWORD(v15) = 0;
                goto LABEL_292;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v15) = 0;
        }
LABEL_292:
        uint64_t v195 = 288LL;
        goto LABEL_381;
      case 7u:
        char v30 = 0;
        unsigned int v31 = 0;
        uint64_t v32 = 0LL;
        *(_DWORD *)(a1 + 400) |= 0x20000000u;
        while (2)
        {
          uint64_t v33 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v34 = v33 + 1;
          if (v33 == -1 || v34 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v35 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v33);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v34;
            v32 |= (unint64_t)(v35 & 0x7F) << v30;
            if (v35 < 0)
            {
              v30 += 7;
              BOOL v10 = v31++ >= 9;
              if (v10)
              {
                uint64_t v32 = 0LL;
                goto LABEL_296;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v32 = 0LL;
        }
LABEL_296:
        BOOL v196 = v32 != 0;
        uint64_t v197 = 399LL;
        goto LABEL_394;
      case 8u:
        char v36 = 0;
        unsigned int v37 = 0;
        uint64_t v38 = 0LL;
        *(_DWORD *)(a1 + 400) |= 0x4000u;
        while (2)
        {
          uint64_t v39 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v40 = v39 + 1;
          if (v39 == -1 || v40 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v41 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v39);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v40;
            v38 |= (unint64_t)(v41 & 0x7F) << v36;
            if (v41 < 0)
            {
              v36 += 7;
              BOOL v10 = v37++ >= 9;
              if (v10)
              {
                uint64_t v38 = 0LL;
                goto LABEL_300;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v38 = 0LL;
        }
LABEL_300:
        BOOL v196 = v38 != 0;
        uint64_t v197 = 384LL;
        goto LABEL_394;
      case 9u:
        uint64_t Data = PBReaderReadData(a2);
        uint64_t v20 = objc_claimAutoreleasedReturnValue(Data);
        uint64_t v21 = 240LL;
        goto LABEL_284;
      case 0xAu:
        char v43 = 0;
        unsigned int v44 = 0;
        uint64_t v15 = 0LL;
        *(_DWORD *)(a1 + 400) |= 8u;
        while (2)
        {
          uint64_t v45 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v46 = v45 + 1;
          if (v45 == -1 || v46 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v47 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v45);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v46;
            v15 |= (unint64_t)(v47 & 0x7F) << v43;
            if (v47 < 0)
            {
              v43 += 7;
              BOOL v10 = v44++ >= 9;
              if (v10)
              {
                LODWORD(v15) = 0;
                goto LABEL_304;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v15) = 0;
        }
LABEL_304:
        uint64_t v195 = 248LL;
        goto LABEL_381;
      case 0xBu:
        uint64_t v48 = PBReaderReadString(a2);
        uint64_t v20 = objc_claimAutoreleasedReturnValue(v48);
        uint64_t v21 = 184LL;
        goto LABEL_284;
      case 0xCu:
        char v49 = 0;
        unsigned int v50 = 0;
        uint64_t v51 = 0LL;
        *(_DWORD *)(a1 + 400) |= 0x10000000u;
        while (2)
        {
          uint64_t v52 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v53 = v52 + 1;
          if (v52 == -1 || v53 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v54 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v52);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v53;
            v51 |= (unint64_t)(v54 & 0x7F) << v49;
            if (v54 < 0)
            {
              v49 += 7;
              BOOL v10 = v50++ >= 9;
              if (v10)
              {
                uint64_t v51 = 0LL;
                goto LABEL_308;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v51 = 0LL;
        }
LABEL_308:
        BOOL v196 = v51 != 0;
        uint64_t v197 = 398LL;
        goto LABEL_394;
      case 0xDu:
        uint64_t v55 = PBReaderReadString(a2);
        uint64_t v20 = objc_claimAutoreleasedReturnValue(v55);
        uint64_t v21 = 24LL;
        goto LABEL_284;
      case 0xEu:
        id v24 = objc_alloc_init(&OBJC_CLASS___CSDMessagingCall);
        [(id)a1 addProtoCall:v24];
        goto LABEL_272;
      case 0xFu:
        uint64_t v56 = PBReaderReadString(a2);
        uint64_t v20 = objc_claimAutoreleasedReturnValue(v56);
        uint64_t v21 = 120LL;
        goto LABEL_284;
      case 0x10u:
        char v57 = 0;
        unsigned int v58 = 0;
        uint64_t v15 = 0LL;
        *(_DWORD *)(a1 + 400) |= 4u;
        while (2)
        {
          uint64_t v59 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v60 = v59 + 1;
          if (v59 == -1 || v60 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v61 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v59);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v60;
            v15 |= (unint64_t)(v61 & 0x7F) << v57;
            if (v61 < 0)
            {
              v57 += 7;
              BOOL v10 = v58++ >= 9;
              if (v10)
              {
                LODWORD(v15) = 0;
                goto LABEL_312;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v15) = 0;
        }
LABEL_312:
        uint64_t v195 = 128LL;
        goto LABEL_381;
      case 0x11u:
        char v62 = 0;
        unsigned int v63 = 0;
        uint64_t v15 = 0LL;
        *(_DWORD *)(a1 + 400) |= 0x400u;
        while (2)
        {
          uint64_t v64 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v65 = v64 + 1;
          if (v64 == -1 || v65 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v66 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v64);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v65;
            v15 |= (unint64_t)(v66 & 0x7F) << v62;
            if (v66 < 0)
            {
              v62 += 7;
              BOOL v10 = v63++ >= 9;
              if (v10)
              {
                LODWORD(v15) = 0;
                goto LABEL_316;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v15) = 0;
        }
LABEL_316:
        uint64_t v195 = 312LL;
        goto LABEL_381;
      case 0x12u:
        char v67 = 0;
        unsigned int v68 = 0;
        uint64_t v15 = 0LL;
        *(_DWORD *)(a1 + 400) |= 0x40u;
        while (2)
        {
          uint64_t v69 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v70 = v69 + 1;
          if (v69 == -1 || v70 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v71 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v69);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v70;
            v15 |= (unint64_t)(v71 & 0x7F) << v67;
            if (v71 < 0)
            {
              v67 += 7;
              BOOL v10 = v68++ >= 9;
              if (v10)
              {
                LODWORD(v15) = 0;
                goto LABEL_320;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v15) = 0;
        }
LABEL_320:
        uint64_t v195 = 272LL;
        goto LABEL_381;
      case 0x13u:
        char v72 = 0;
        unsigned int v73 = 0;
        uint64_t v74 = 0LL;
        *(_DWORD *)(a1 + 400) |= 0x400000u;
        while (2)
        {
          uint64_t v75 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v76 = v75 + 1;
          if (v75 == -1 || v76 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v77 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v75);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v76;
            v74 |= (unint64_t)(v77 & 0x7F) << v72;
            if (v77 < 0)
            {
              v72 += 7;
              BOOL v10 = v73++ >= 9;
              if (v10)
              {
                uint64_t v74 = 0LL;
                goto LABEL_324;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v74 = 0LL;
        }
LABEL_324:
        BOOL v196 = v74 != 0;
        uint64_t v197 = 392LL;
        goto LABEL_394;
      case 0x14u:
        uint64_t v78 = PBReaderReadData(a2);
        uint64_t v20 = objc_claimAutoreleasedReturnValue(v78);
        uint64_t v21 = 80LL;
        goto LABEL_284;
      case 0x15u:
        *(_DWORD *)(a1 + 400) |= 1u;
        unint64_t v79 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v79 <= 0xFFFFFFFFFFFFFFF7LL && v79 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v80 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v79);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v79 + 8;
        }

        else
        {
          *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v80 = 0LL;
        }

        uint64_t v198 = 8LL;
        goto LABEL_401;
      case 0x16u:
        *(_DWORD *)(a1 + 400) |= 2u;
        unint64_t v81 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v81 <= 0xFFFFFFFFFFFFFFF7LL && v81 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v80 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v81);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v81 + 8;
        }

        else
        {
          *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v80 = 0LL;
        }

        uint64_t v198 = 16LL;
LABEL_401:
        *(void *)(a1 + v19_Block_object_dispose(va, 8) = v80;
        goto LABEL_395;
      case 0x17u:
        char v82 = 0;
        unsigned int v83 = 0;
        uint64_t v84 = 0LL;
        *(_DWORD *)(a1 + 400) |= 0x80000u;
        while (2)
        {
          uint64_t v85 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v86 = v85 + 1;
          if (v85 == -1 || v86 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v87 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v85);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v86;
            v84 |= (unint64_t)(v87 & 0x7F) << v82;
            if (v87 < 0)
            {
              v82 += 7;
              BOOL v10 = v83++ >= 9;
              if (v10)
              {
                uint64_t v84 = 0LL;
                goto LABEL_328;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v84 = 0LL;
        }
LABEL_328:
        BOOL v196 = v84 != 0;
        uint64_t v197 = 389LL;
        goto LABEL_394;
      case 0x18u:
        char v88 = 0;
        unsigned int v89 = 0;
        uint64_t v90 = 0LL;
        *(_DWORD *)(a1 + 400) |= 0x8000u;
        while (2)
        {
          uint64_t v91 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v92 = v91 + 1;
          if (v91 == -1 || v92 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v93 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v91);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v92;
            v90 |= (unint64_t)(v93 & 0x7F) << v88;
            if (v93 < 0)
            {
              v88 += 7;
              BOOL v10 = v89++ >= 9;
              if (v10)
              {
                uint64_t v90 = 0LL;
                goto LABEL_332;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v90 = 0LL;
        }
LABEL_332:
        BOOL v196 = v90 != 0;
        uint64_t v197 = 385LL;
        goto LABEL_394;
      case 0x19u:
        char v94 = 0;
        unsigned int v95 = 0;
        uint64_t v96 = 0LL;
        *(_DWORD *)(a1 + 400) |= 0x20000u;
        while (2)
        {
          uint64_t v97 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v98 = v97 + 1;
          if (v97 == -1 || v98 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v99 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v97);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v98;
            v96 |= (unint64_t)(v99 & 0x7F) << v94;
            if (v99 < 0)
            {
              v94 += 7;
              BOOL v10 = v95++ >= 9;
              if (v10)
              {
                uint64_t v96 = 0LL;
                goto LABEL_336;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v96 = 0LL;
        }
LABEL_336:
        BOOL v196 = v96 != 0;
        uint64_t v197 = 387LL;
        goto LABEL_394;
      case 0x1Au:
        uint64_t v100 = PBReaderReadString(a2);
        uint64_t v20 = objc_claimAutoreleasedReturnValue(v100);
        uint64_t v21 = 32LL;
        goto LABEL_284;
      case 0x1Bu:
        id v24 = objc_alloc_init(&OBJC_CLASS___CSDMessagingCallCapabilitiesState);
        objc_storeStrong((id *)(a1 + 208), v24);
        goto LABEL_272;
      case 0x1Cu:
        char v101 = 0;
        unsigned int v102 = 0;
        uint64_t v15 = 0LL;
        *(_DWORD *)(a1 + 400) |= 0x100u;
        while (2)
        {
          uint64_t v103 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v104 = v103 + 1;
          if (v103 == -1 || v104 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v105 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v103);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v104;
            v15 |= (unint64_t)(v105 & 0x7F) << v101;
            if (v105 < 0)
            {
              v101 += 7;
              BOOL v10 = v102++ >= 9;
              if (v10)
              {
                LODWORD(v15) = 0;
                goto LABEL_340;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v15) = 0;
        }
LABEL_340:
        uint64_t v195 = 292LL;
        goto LABEL_381;
      case 0x1Du:
        char v106 = 0;
        unsigned int v107 = 0;
        uint64_t v108 = 0LL;
        *(_DWORD *)(a1 + 400) |= 0x10000u;
        while (2)
        {
          uint64_t v109 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v110 = v109 + 1;
          if (v109 == -1 || v110 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v111 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v109);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v110;
            v108 |= (unint64_t)(v111 & 0x7F) << v106;
            if (v111 < 0)
            {
              v106 += 7;
              BOOL v10 = v107++ >= 9;
              if (v10)
              {
                uint64_t v108 = 0LL;
                goto LABEL_344;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v108 = 0LL;
        }
LABEL_344:
        BOOL v196 = v108 != 0;
        uint64_t v197 = 386LL;
        goto LABEL_394;
      case 0x1Fu:
        uint64_t v113 = PBReaderReadString(a2);
        id v24 = (CSDMessagingCallModelState *)objc_claimAutoreleasedReturnValue(v113);
        if (v24) {
          [(id)a1 addOtherUniqueProxyIdentifiers:v24];
        }
        goto LABEL_273;
      case 0x20u:
        id v24 = objc_alloc_init(&OBJC_CLASS___CSDMessagingCallModel);
        objc_storeStrong((id *)(a1 + 216), v24);
        goto LABEL_272;
      case 0x21u:
        id v24 = objc_alloc_init(&OBJC_CLASS___CSDMessagingHandle);
        objc_storeStrong((id *)(a1 + 104), v24);
        goto LABEL_267;
      case 0x22u:
        char v114 = 0;
        unsigned int v115 = 0;
        uint64_t v116 = 0LL;
        *(_DWORD *)(a1 + 400) |= 0x200000u;
        while (2)
        {
          uint64_t v117 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v118 = v117 + 1;
          if (v117 == -1 || v118 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v119 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v117);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v118;
            v116 |= (unint64_t)(v119 & 0x7F) << v114;
            if (v119 < 0)
            {
              v114 += 7;
              BOOL v10 = v115++ >= 9;
              if (v10)
              {
                uint64_t v116 = 0LL;
                goto LABEL_348;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v116 = 0LL;
        }
LABEL_348:
        BOOL v196 = v116 != 0;
        uint64_t v197 = 391LL;
        goto LABEL_394;
      case 0x23u:
        id v24 = objc_alloc_init(&OBJC_CLASS___CSDMessagingCallProvider);
        [(id)a1 addProviders:v24];
        goto LABEL_170;
      case 0x24u:
        id v24 = objc_alloc_init(&OBJC_CLASS___CSDMessagingCallDisplayContext);
        objc_storeStrong((id *)(a1 + 256), v24);
        goto LABEL_272;
      case 0x25u:
        id v24 = objc_alloc_init(&OBJC_CLASS___CSDMessagingAVConferenceInviteData);
        objc_storeStrong((id *)(a1 + 144), v24);
        goto LABEL_272;
      case 0x26u:
        id v24 = objc_alloc_init(&OBJC_CLASS___CSDMessagingCallProvider);
        objc_storeStrong((id *)(a1 + 280), v24);
LABEL_170:
        goto LABEL_272;
      case 0x27u:
        char v120 = 0;
        unsigned int v121 = 0;
        uint64_t v122 = 0LL;
        *(_DWORD *)(a1 + 400) |= 0x8000000u;
        while (2)
        {
          uint64_t v123 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v124 = v123 + 1;
          if (v123 == -1 || v124 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v125 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v123);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v124;
            v122 |= (unint64_t)(v125 & 0x7F) << v120;
            if (v125 < 0)
            {
              v120 += 7;
              BOOL v10 = v121++ >= 9;
              if (v10)
              {
                uint64_t v122 = 0LL;
                goto LABEL_352;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v122 = 0LL;
        }
LABEL_352:
        BOOL v196 = v122 != 0;
        uint64_t v197 = 397LL;
        goto LABEL_394;
      case 0x28u:
        char v126 = 0;
        unsigned int v127 = 0;
        uint64_t v128 = 0LL;
        *(_DWORD *)(a1 + 400) |= 0x4000000u;
        while (2)
        {
          uint64_t v129 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v130 = v129 + 1;
          if (v129 == -1 || v130 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v131 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v129);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v130;
            v128 |= (unint64_t)(v131 & 0x7F) << v126;
            if (v131 < 0)
            {
              v126 += 7;
              BOOL v10 = v127++ >= 9;
              if (v10)
              {
                uint64_t v128 = 0LL;
                goto LABEL_356;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v128 = 0LL;
        }
LABEL_356:
        BOOL v196 = v128 != 0;
        uint64_t v197 = 396LL;
        goto LABEL_394;
      case 0x29u:
        char v132 = 0;
        unsigned int v133 = 0;
        uint64_t v134 = 0LL;
        *(_DWORD *)(a1 + 400) |= 0x100000u;
        while (2)
        {
          uint64_t v135 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v136 = v135 + 1;
          if (v135 == -1 || v136 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v137 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v135);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v136;
            v134 |= (unint64_t)(v137 & 0x7F) << v132;
            if (v137 < 0)
            {
              v132 += 7;
              BOOL v10 = v133++ >= 9;
              if (v10)
              {
                uint64_t v134 = 0LL;
                goto LABEL_360;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v134 = 0LL;
        }
LABEL_360:
        BOOL v196 = v134 != 0;
        uint64_t v197 = 390LL;
        goto LABEL_394;
      case 0x2Au:
        *(_DWORD *)(a1 + 400) |= 0x1000u;
        unint64_t v138 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v138 <= 0xFFFFFFFFFFFFFFFBLL && v138 + 4 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          int v139 = *(_DWORD *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v138);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v138 + 4;
        }

        else
        {
          *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          int v139 = 0;
        }

        *(_DWORD *)(a1 + 36_Block_object_dispose(va, 8) = v139;
        goto LABEL_395;
      case 0x2Bu:
        uint64_t v140 = PBReaderReadString(a2);
        uint64_t v20 = objc_claimAutoreleasedReturnValue(v140);
        uint64_t v21 = 176LL;
        goto LABEL_284;
      case 0x2Cu:
        id v24 = objc_alloc_init(&OBJC_CLASS___CSDMessagingHandle);
        [(id)a1 addRemoteParticipantHandles:v24];
        goto LABEL_267;
      case 0x2Du:
        uint64_t v141 = PBReaderReadString(a2);
        uint64_t v20 = objc_claimAutoreleasedReturnValue(v141);
        uint64_t v21 = 168LL;
        goto LABEL_284;
      case 0x2Eu:
        char v142 = 0;
        unsigned int v143 = 0;
        uint64_t v15 = 0LL;
        *(_DWORD *)(a1 + 400) |= 0x200u;
        while (2)
        {
          uint64_t v144 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v145 = v144 + 1;
          if (v144 == -1 || v145 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v146 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v144);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v145;
            v15 |= (unint64_t)(v146 & 0x7F) << v142;
            if (v146 < 0)
            {
              v142 += 7;
              BOOL v10 = v143++ >= 9;
              if (v10)
              {
                LODWORD(v15) = 0;
                goto LABEL_364;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v15) = 0;
        }
LABEL_364:
        uint64_t v195 = 296LL;
        goto LABEL_381;
      case 0x2Fu:
        char v147 = 0;
        unsigned int v148 = 0;
        uint64_t v149 = 0LL;
        *(_DWORD *)(a1 + 400) |= 0x2000000u;
        while (2)
        {
          uint64_t v150 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v151 = v150 + 1;
          if (v150 == -1 || v151 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v152 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v150);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v151;
            v149 |= (unint64_t)(v152 & 0x7F) << v147;
            if (v152 < 0)
            {
              v147 += 7;
              BOOL v10 = v148++ >= 9;
              if (v10)
              {
                uint64_t v149 = 0LL;
                goto LABEL_368;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v149 = 0LL;
        }
LABEL_368:
        BOOL v196 = v149 != 0;
        uint64_t v197 = 395LL;
        goto LABEL_394;
      case 0x30u:
        char v153 = 0;
        unsigned int v154 = 0;
        uint64_t v15 = 0LL;
        *(_DWORD *)(a1 + 400) |= 0x800u;
        while (2)
        {
          uint64_t v155 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v156 = v155 + 1;
          if (v155 == -1 || v156 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v157 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v155);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v156;
            v15 |= (unint64_t)(v157 & 0x7F) << v153;
            if (v157 < 0)
            {
              v153 += 7;
              BOOL v10 = v154++ >= 9;
              if (v10)
              {
                LODWORD(v15) = 0;
                goto LABEL_372;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v15) = 0;
        }
LABEL_372:
        uint64_t v195 = 328LL;
        goto LABEL_381;
      case 0x31u:
        id v24 = objc_alloc_init(&OBJC_CLASS___CSDMessagingRoute);
        [(id)a1 addRoutes:v24];
        goto LABEL_223;
      case 0x32u:
        id v24 = objc_alloc_init(&OBJC_CLASS___CSDMessagingRoute);
        objc_storeStrong((id *)(a1 + 336), v24);
LABEL_223:
        goto LABEL_272;
      case 0x33u:
        uint64_t v158 = PBReaderReadString(a2);
        id v24 = (CSDMessagingCallModelState *)objc_claimAutoreleasedReturnValue(v158);
        if (v24) {
          [(id)a1 addEndpointIDSDestinationURIs:v24];
        }
        goto LABEL_273;
      case 0x34u:
        uint64_t v159 = PBReaderReadString(a2);
        uint64_t v20 = objc_claimAutoreleasedReturnValue(v159);
        uint64_t v21 = 152LL;
        goto LABEL_284;
      case 0x35u:
        char v160 = 0;
        unsigned int v161 = 0;
        uint64_t v15 = 0LL;
        *(_DWORD *)(a1 + 400) |= 0x20u;
        while (2)
        {
          uint64_t v162 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v163 = v162 + 1;
          if (v162 == -1 || v163 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v164 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v162);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v163;
            v15 |= (unint64_t)(v164 & 0x7F) << v160;
            if (v164 < 0)
            {
              v160 += 7;
              BOOL v10 = v161++ >= 9;
              if (v10)
              {
                LODWORD(v15) = 0;
                goto LABEL_376;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v15) = 0;
        }
LABEL_376:
        uint64_t v195 = 268LL;
        goto LABEL_381;
      case 0x36u:
        char v165 = 0;
        unsigned int v166 = 0;
        uint64_t v15 = 0LL;
        *(_DWORD *)(a1 + 400) |= 0x10u;
        while (2)
        {
          uint64_t v167 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v168 = v167 + 1;
          if (v167 == -1 || v168 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v169 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v167);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v168;
            v15 |= (unint64_t)(v169 & 0x7F) << v165;
            if (v169 < 0)
            {
              v165 += 7;
              BOOL v10 = v166++ >= 9;
              if (v10)
              {
                LODWORD(v15) = 0;
                goto LABEL_380;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v15) = 0;
        }
LABEL_380:
        uint64_t v195 = 264LL;
LABEL_381:
        *(_DWORD *)(a1 + v195) = v15;
        goto LABEL_395;
      case 0x37u:
        char v170 = 0;
        unsigned int v171 = 0;
        uint64_t v172 = 0LL;
        *(_DWORD *)(a1 + 400) |= 0x40000u;
        while (2)
        {
          uint64_t v173 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v174 = v173 + 1;
          if (v173 == -1 || v174 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v175 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v173);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v174;
            v172 |= (unint64_t)(v175 & 0x7F) << v170;
            if (v175 < 0)
            {
              v170 += 7;
              BOOL v10 = v171++ >= 9;
              if (v10)
              {
                uint64_t v172 = 0LL;
                goto LABEL_385;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v172 = 0LL;
        }
LABEL_385:
        BOOL v196 = v172 != 0;
        uint64_t v197 = 388LL;
        goto LABEL_394;
      case 0x38u:
        char v176 = 0;
        unsigned int v177 = 0;
        uint64_t v178 = 0LL;
        *(_DWORD *)(a1 + 400) |= 0x1000000u;
        while (2)
        {
          uint64_t v179 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v180 = v179 + 1;
          if (v179 == -1 || v180 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v181 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v179);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v180;
            v178 |= (unint64_t)(v181 & 0x7F) << v176;
            if (v181 < 0)
            {
              v176 += 7;
              BOOL v10 = v177++ >= 9;
              if (v10)
              {
                uint64_t v178 = 0LL;
                goto LABEL_389;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v178 = 0LL;
        }
LABEL_389:
        BOOL v196 = v178 != 0;
        uint64_t v197 = 394LL;
        goto LABEL_394;
      case 0x39u:
        uint64_t v182 = PBReaderReadString(a2);
        uint64_t v20 = objc_claimAutoreleasedReturnValue(v182);
        uint64_t v21 = 96LL;
        goto LABEL_284;
      case 0x3Au:
        id v24 = objc_alloc_init(&OBJC_CLASS___CSDMessagingConversationRelayMessage);
        [(id)a1 addConversations:v24];
        goto LABEL_272;
      case 0x3Bu:
        uint64_t v183 = PBReaderReadString(a2);
        uint64_t v20 = objc_claimAutoreleasedReturnValue(v183);
        uint64_t v21 = 160LL;
        goto LABEL_284;
      case 0x3Cu:
        uint64_t v184 = PBReaderReadString(a2);
        uint64_t v20 = objc_claimAutoreleasedReturnValue(v184);
        uint64_t v21 = 48LL;
        goto LABEL_284;
      case 0x3Du:
        id v24 = objc_alloc_init(&OBJC_CLASS___CSDMessagingConversationMember);
        [(id)a1 addConversationMembers:v24];
        goto LABEL_272;
      case 0x3Eu:
        id v24 = objc_alloc_init(&OBJC_CLASS___CSDMessagingHandle);
        [(id)a1 addHandlesToInvite:v24];
LABEL_267:
        goto LABEL_272;
      case 0x3Fu:
        id v24 = objc_alloc_init(&OBJC_CLASS___CSDMessagingParticipantProminenceEntry);
        [(id)a1 addProminenceEntry:v24];
        if (PBReaderPlaceMark(a2, v199) && sub_10001BE54((uint64_t)v24, a2))
        {
LABEL_272:
          PBReaderRecallMark(a2, v199);
LABEL_273:

LABEL_395:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }

LABEL_405:
        return 0LL;
      case 0x40u:
        char v185 = 0;
        unsigned int v186 = 0;
        uint64_t v187 = 0LL;
        *(_DWORD *)(a1 + 400) |= 0x800000u;
        while (2)
        {
          uint64_t v188 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v189 = v188 + 1;
          if (v188 == -1 || v189 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v190 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v188);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v189;
            v187 |= (unint64_t)(v190 & 0x7F) << v185;
            if (v190 < 0)
            {
              v185 += 7;
              BOOL v10 = v186++ >= 9;
              if (v10)
              {
                uint64_t v187 = 0LL;
                goto LABEL_393;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v187 = 0LL;
        }
LABEL_393:
        BOOL v196 = v187 != 0;
        uint64_t v197 = 393LL;
LABEL_394:
        *(_BYTE *)(a1 + v197) = v196;
        goto LABEL_395;
      case 0x41u:
        uint64_t v191 = PBReaderReadString(a2);
        uint64_t v20 = objc_claimAutoreleasedReturnValue(v191);
        uint64_t v21 = 72LL;
        goto LABEL_284;
      case 0x42u:
        uint64_t v192 = PBReaderReadData(a2);
        uint64_t v20 = objc_claimAutoreleasedReturnValue(v192);
        uint64_t v21 = 136LL;
        goto LABEL_284;
      case 0x43u:
        uint64_t v193 = PBReaderReadString(a2);
        uint64_t v20 = objc_claimAutoreleasedReturnValue(v193);
        uint64_t v21 = 352LL;
LABEL_284:
        v194 = *(void **)(a1 + v21);
        *(void *)(a1 + v21) = v20;

        goto LABEL_395;
      default:
        uint64_t result = PBReaderSkipValueWithTag(a2);
        if (!(_DWORD)result) {
          return result;
        }
        goto LABEL_395;
    }
  }

LABEL_172:
  PBDataWriterWriteUint32Field(v5, self->_protoProtocolVersion, 18LL);
  if ((*(_DWORD *)&self->_has & 0x400000) != 0) {
LABEL_38:
  }
    PBDataWriterWriteBOOLField(v5, self->_protoShouldSuppressRingtone, 19LL);
LABEL_39:
  dummyPayload = self->_dummyPayload;
  if (dummyPayload) {
    PBDataWriterWriteDataField(v5, dummyPayload, 20LL);
  }
  uint64_t v22 = self->_has;
  if ((*(_BYTE *)&v22 & 1) != 0)
  {
    PBDataWriterWriteDoubleField(v5, 21LL, self->_hostCallCreationTime);
    uint64_t v22 = self->_has;
    if ((*(_BYTE *)&v22 & 2) == 0)
    {
LABEL_43:
      if ((*(_DWORD *)&v22 & 0x80000) == 0) {
        goto LABEL_44;
      }
      goto LABEL_176;
    }
  }

  else if ((*(_BYTE *)&v22 & 2) == 0)
  {
    goto LABEL_43;
  }

  PBDataWriterWriteDoubleField(v5, 22LL, self->_messageSendTime);
  uint64_t v22 = self->_has;
  if ((*(_DWORD *)&v22 & 0x80000) == 0)
  {
LABEL_44:
    if ((*(_WORD *)&v22 & 0x8000) == 0) {
      goto LABEL_45;
    }
    goto LABEL_177;
  }

    uint64_t v27 = 0;
    goto LABEL_173;
  }

  uint64_t v27 = (*((_DWORD *)v4 + 32) & 0x200) == 0;
LABEL_173:

  return v27;
}

LABEL_176:
  PBDataWriterWriteBOOLField(v5, self->_protoNeedsManualInCallSounds, 23LL);
  uint64_t v22 = self->_has;
  if ((*(_WORD *)&v22 & 0x8000) == 0)
  {
LABEL_45:
    if ((*(_DWORD *)&v22 & 0x20000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_46;
  }

LABEL_181:
  PBDataWriterWriteBOOLField(v5, self->_protoRemoteUplinkMuted, 41LL);
  if ((*(_DWORD *)&self->_has & 0x1000) != 0) {
LABEL_85:
  }
    PBDataWriterWriteFloatField(v5, 42LL, self->_systemVolume);
LABEL_86:
  localSenderIdentityUUIDuint64_t String = self->_localSenderIdentityUUIDString;
  if (localSenderIdentityUUIDString) {
    PBDataWriterWriteStringField(v5, localSenderIdentityUUIDString, 43LL);
  }
  unsigned int v115 = 0u;
  uint64_t v116 = 0u;
  uint64_t v113 = 0u;
  char v114 = 0u;
  char v43 = self->_remoteParticipantHandles;
  unsigned int v44 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v43,  "countByEnumeratingWithState:objects:count:",  &v113,  v135,  16LL);
  if (v44)
  {
    uint64_t v45 = v44;
    unint64_t v46 = *(void *)v114;
    do
    {
      char v47 = 0LL;
      do
      {
        if (*(void *)v114 != v46) {
          objc_enumerationMutation(v43);
        }
        PBDataWriterWriteSubmessage(v5, *(void *)(*((void *)&v113 + 1) + 8LL * (void)v47), 44LL);
        char v47 = (char *)v47 + 1;
      }

      while (v45 != v47);
      uint64_t v45 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v43,  "countByEnumeratingWithState:objects:count:",  &v113,  v135,  16LL);
    }

    while (v45);
  }

  localSenderIdentityAccountUUIDuint64_t String = self->_localSenderIdentityAccountUUIDString;
  if (localSenderIdentityAccountUUIDString) {
    PBDataWriterWriteStringField(v5, localSenderIdentityAccountUUIDString, 45LL);
  }
  char v49 = self->_has;
  if ((*(_WORD *)&v49 & 0x200) != 0)
  {
    PBDataWriterWriteUint32Field(v5, self->_protoTTYType, 46LL);
    char v49 = self->_has;
    if ((*(_DWORD *)&v49 & 0x2000000) == 0)
    {
LABEL_99:
      if ((*(_WORD *)&v49 & 0x800) == 0) {
        goto LABEL_101;
      }
      goto LABEL_100;
    }
  }

  else if ((*(_DWORD *)&v49 & 0x2000000) == 0)
  {
    goto LABEL_99;
  }

  PBDataWriterWriteBOOLField(v5, self->_protoSupportsTTYWithVoice, 47LL);
  if ((*(_DWORD *)&self->_has & 0x800) != 0) {
LABEL_100:
  }
    PBDataWriterWriteInt32Field(v5, self->_requestActionType, 48LL);
LABEL_101:
  char v111 = 0u;
  unint64_t v112 = 0u;
  uint64_t v109 = 0u;
  unint64_t v110 = 0u;
  unsigned int v50 = self->_routes;
  uint64_t v51 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v50,  "countByEnumeratingWithState:objects:count:",  &v109,  v134,  16LL);
  if (v51)
  {
    uint64_t v52 = v51;
    unint64_t v53 = *(void *)v110;
    do
    {
      char v54 = 0LL;
      do
      {
        if (*(void *)v110 != v53) {
          objc_enumerationMutation(v50);
        }
        PBDataWriterWriteSubmessage(v5, *(void *)(*((void *)&v109 + 1) + 8LL * (void)v54), 49LL);
        char v54 = (char *)v54 + 1;
      }

      while (v52 != v54);
      uint64_t v52 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v50,  "countByEnumeratingWithState:objects:count:",  &v109,  v134,  16LL);
    }

    while (v52);
  }

  route = self->_route;
  if (route) {
    PBDataWriterWriteSubmessage(v5, route, 50LL);
  }
  unsigned int v107 = 0u;
  uint64_t v108 = 0u;
  char v105 = 0u;
  char v106 = 0u;
  uint64_t v56 = self->_endpointIDSDestinationURIs;
  char v57 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v56,  "countByEnumeratingWithState:objects:count:",  &v105,  v133,  16LL);
  if (v57)
  {
    unsigned int v58 = v57;
    uint64_t v59 = *(void *)v106;
    do
    {
      unint64_t v60 = 0LL;
      do
      {
        if (*(void *)v106 != v59) {
          objc_enumerationMutation(v56);
        }
        PBDataWriterWriteStringField(v5, *(void *)(*((void *)&v105 + 1) + 8LL * (void)v60), 51LL);
        unint64_t v60 = (char *)v60 + 1;
      }

      while (v58 != v60);
      unsigned int v58 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v56,  "countByEnumeratingWithState:objects:count:",  &v105,  v133,  16LL);
    }

    while (v58);
  }

  isoCountryCode = self->_isoCountryCode;
  if (isoCountryCode) {
    PBDataWriterWriteStringField(v5, isoCountryCode, 52LL);
  }
  char v62 = self->_has;
  if ((*(_BYTE *)&v62 & 0x20) != 0)
  {
    PBDataWriterWriteUint32Field(v5, self->_protoPriority, 53LL);
    char v62 = self->_has;
    if ((*(_BYTE *)&v62 & 0x10) == 0)
    {
LABEL_121:
      if ((*(_DWORD *)&v62 & 0x40000) == 0) {
        goto LABEL_122;
      }
      goto LABEL_188;
    }
  }

  else if ((*(_BYTE *)&v62 & 0x10) == 0)
  {
    goto LABEL_121;
  }

  PBDataWriterWriteUint32Field(v5, self->_protoOriginatingUIType, 54LL);
  char v62 = self->_has;
  if ((*(_DWORD *)&v62 & 0x40000) == 0)
  {
LABEL_122:
    if ((*(_DWORD *)&v62 & 0x1000000) == 0) {
      goto LABEL_124;
    }
    goto LABEL_123;
  }

    unint64_t v28 = 0;
    goto LABEL_182;
  }

  unint64_t v28 = (*((_DWORD *)v4 + 38) & 0x8000) == 0;
LABEL_182:

  return v28;
}

LABEL_188:
  PBDataWriterWriteBOOLField(v5, self->_protoFailureExpected, 55LL);
  if ((*(_DWORD *)&self->_has & 0x1000000) != 0) {
LABEL_123:
  }
    PBDataWriterWriteBOOLField(v5, self->_protoSupportsEmergencyFallback, 56LL);
LABEL_124:
  groupUUIDuint64_t String = self->_groupUUIDString;
  if (groupUUIDString) {
    PBDataWriterWriteStringField(v5, groupUUIDString, 57LL);
  }
  uint64_t v103 = 0u;
  unint64_t v104 = 0u;
  char v101 = 0u;
  unsigned int v102 = 0u;
  uint64_t v64 = self->_conversations;
  unint64_t v65 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v64,  "countByEnumeratingWithState:objects:count:",  &v101,  v132,  16LL);
  if (v65)
  {
    char v66 = v65;
    char v67 = *(void *)v102;
    do
    {
      unsigned int v68 = 0LL;
      do
      {
        if (*(void *)v102 != v67) {
          objc_enumerationMutation(v64);
        }
        PBDataWriterWriteSubmessage(v5, *(void *)(*((void *)&v101 + 1) + 8LL * (void)v68), 58LL);
        unsigned int v68 = (char *)v68 + 1;
      }

      while (v66 != v68);
      char v66 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v64,  "countByEnumeratingWithState:objects:count:",  &v101,  v132,  16LL);
    }

    while (v66);
  }

  joinConversationRequestURLuint64_t String = self->_joinConversationRequestURLString;
  if (joinConversationRequestURLString) {
    PBDataWriterWriteStringField(v5, joinConversationRequestURLString, 59LL);
  }
  conversationUUIDuint64_t String = self->_conversationUUIDString;
  if (conversationUUIDString) {
    PBDataWriterWriteStringField(v5, conversationUUIDString, 60LL);
  }
  char v99 = 0u;
  uint64_t v100 = 0u;
  uint64_t v97 = 0u;
  unint64_t v98 = 0u;
  char v71 = self->_conversationMembers;
  char v72 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v71,  "countByEnumeratingWithState:objects:count:",  &v97,  v131,  16LL);
  if (v72)
  {
    unsigned int v73 = v72;
    uint64_t v74 = *(void *)v98;
    do
    {
      uint64_t v75 = 0LL;
      do
      {
        if (*(void *)v98 != v74) {
          objc_enumerationMutation(v71);
        }
        PBDataWriterWriteSubmessage(v5, *(void *)(*((void *)&v97 + 1) + 8LL * (void)v75), 61LL);
        uint64_t v75 = (char *)v75 + 1;
      }

      while (v73 != v75);
      unsigned int v73 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v71,  "countByEnumeratingWithState:objects:count:",  &v97,  v131,  16LL);
    }

    while (v73);
  }

  unsigned int v95 = 0u;
  uint64_t v96 = 0u;
  char v93 = 0u;
  char v94 = 0u;
  unint64_t v76 = self->_handlesToInvites;
  char v77 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v76,  "countByEnumeratingWithState:objects:count:",  &v93,  v130,  16LL);
  if (v77)
  {
    uint64_t v78 = v77;
    unint64_t v79 = *(void *)v94;
    do
    {
      uint64_t v80 = 0LL;
      do
      {
        if (*(void *)v94 != v79) {
          objc_enumerationMutation(v76);
        }
        PBDataWriterWriteSubmessage(v5, *(void *)(*((void *)&v93 + 1) + 8LL * (void)v80), 62LL);
        uint64_t v80 = (char *)v80 + 1;
      }

      while (v78 != v80);
      uint64_t v78 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v76,  "countByEnumeratingWithState:objects:count:",  &v93,  v130,  16LL);
    }

    while (v78);
  }

  uint64_t v91 = 0u;
  unint64_t v92 = 0u;
  unsigned int v89 = 0u;
  uint64_t v90 = 0u;
  unint64_t v81 = self->_prominenceEntrys;
  char v82 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v81,  "countByEnumeratingWithState:objects:count:",  &v89,  v129,  16LL);
  if (v82)
  {
    unsigned int v83 = v82;
    uint64_t v84 = *(void *)v90;
    do
    {
      uint64_t v85 = 0LL;
      do
      {
        if (*(void *)v90 != v84) {
          objc_enumerationMutation(v81);
        }
        PBDataWriterWriteSubmessage(v5, *(void *)(*((void *)&v89 + 1) + 8LL * (void)v85), 63LL);
        uint64_t v85 = (char *)v85 + 1;
      }

      while (v83 != v85);
      unsigned int v83 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v81,  "countByEnumeratingWithState:objects:count:",  &v89,  v129,  16LL);
    }

    while (v83);
  }

  if ((*((_BYTE *)&self->_has + 2) & 0x80) != 0) {
    PBDataWriterWriteBOOLField(v5, self->_protoSupportsDTMFUpdates, 64LL);
  }
  dtmfUpdateDigits = self->_dtmfUpdateDigits;
  if (dtmfUpdateDigits) {
    PBDataWriterWriteStringField(v5, dtmfUpdateDigits, 65LL);
  }
  image = self->_image;
  if (image) {
    PBDataWriterWriteDataField(v5, image, 66LL);
  }
  senderIDSIdentifier = self->_senderIDSIdentifier;
  if (senderIDSIdentifier) {
    PBDataWriterWriteStringField(v5, senderIDSIdentifier, 67LL);
  }
}

LABEL_142:
  v55[68] = self->_protoProtocolVersion;
  v55[100] |= 0x40u;
  if ((*(_DWORD *)&self->_has & 0x400000) != 0)
  {
LABEL_35:
    *((_BYTE *)v55 + 392) = self->_protoShouldSuppressRingtone;
    v55[100] |= 0x400000u;
  }

LABEL_146:
  *((_BYTE *)v11 + 389) = self->_protoNeedsManualInCallSounds;
  *((_DWORD *)v11 + 100) |= 0x80000u;
  uint64_t v12 = self->_has;
  if ((*(_WORD *)&v12 & 0x8000) == 0)
  {
LABEL_42:
    if ((*(_DWORD *)&v12 & 0x20000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_43;
  }

  self->_protoRemoteUplinkMuted = *((_BYTE *)v5 + 390);
  *(_DWORD *)&self->_has |= 0x100000u;
  if ((*((_DWORD *)v5 + 100) & 0x1000) != 0)
  {
LABEL_118:
    self->_systemVolume = *((float *)v5 + 92);
    *(_DWORD *)&self->_has |= 0x1000u;
  }

            __break(1u);
LABEL_147:
            __break(1u);
            goto LABEL_148;
          }

          if (v83 < v81) {
            goto LABEL_125;
          }
          if (v40 > *((void *)v110 + 2)) {
            goto LABEL_126;
          }
          *uint64_t v80 = v81;
          v38[2 * v79 + 1] = v83;
          uint64_t v84 = *((void *)v110 + 2);
          if (v40 >= v84) {
            goto LABEL_127;
          }
          unint64_t v34 = v110;
          unsigned int v37 = v84 - 1;
          memmove(&v38[2 * v40], v82 + 2, 16 * (v84 - 1 - v40));
          *((void *)v110 + 2) = v84 - 1;
          if (v84 <= 2) {
            goto LABEL_90;
          }
        }
      }

      unsigned int v37 = 1LL;
LABEL_90:
      id v3 = v108;
      if (v8 >= v108) {
        goto LABEL_111;
      }
    }

    char v18 = v10 + 2;
    if (v10 + 2 >= v3) {
      goto LABEL_31;
    }
    unint64_t v17 = 0;
LABEL_13:
    id v19 = (uint64_t *)(v104 + 16 * v18);
    do
    {
      uint64_t v20 = *(v19 - 1);
      uint64_t v21 = *v19;
      uint64_t v22 = (void *)(v9 + 16 * v8);
      uint64_t v23 = v22[1];
      if (v20 == *v22 && v21 == v23)
      {
        if ((v17 & 1) != 0) {
          goto LABEL_24;
        }
      }

      else if (((v17 ^ _stringCompareWithSmolCheck(_:_:expecting:)(v20, v21, *v22, v23, 1LL)) & 1) != 0)
      {
        goto LABEL_23;
      }

      v19 += 2;
      char v25 = v18 + 1;
      unint64_t v8 = v18;
      char v18 = v25;
    }

    while (v25 < v3);
    char v18 = v25;
    goto LABEL_23;
  }

  unint64_t v110 = (char *)_swiftEmptyArrayStorage;
  unsigned int v37 = _swiftEmptyArrayStorage[2];
LABEL_111:
  if (v37 >= 2)
  {
    uint64_t v97 = *v105;
    while (1)
    {
      unint64_t v98 = v37 - 2;
      if (v37 < 2) {
        break;
      }
      if (!v97) {
        goto LABEL_154;
      }
      uint64_t v96 = v110;
      char v99 = *(void *)&v110[16 * v98 + 32];
      uint64_t v100 = *(void *)&v110[16 * v37 + 24];
      sub_100229E48( (char *)(v97 + 16 * v99),  (char *)(v97 + 16LL * *(void *)&v110[16 * v37 + 16]),  v97 + 16 * v100,  v109);
      if (v1) {
        goto LABEL_107;
      }
      if (v100 < v99) {
        goto LABEL_140;
      }
      if ((swift_isUniquelyReferenced_nonNull_native(v110) & 1) == 0)
      {
        sub_10022A0D0((uint64_t)v110);
        uint64_t v96 = v103;
      }

      if (v98 >= *((void *)v96 + 2)) {
        goto LABEL_141;
      }
      char v101 = &v96[16 * v98 + 32];
      *(void *)char v101 = v99;
      *((void *)v101 + 1) = v100;
      unsigned int v102 = *((void *)v96 + 2);
      if (v37 > v102) {
        goto LABEL_142;
      }
      memmove(&v96[16 * v37 + 16], &v96[16 * v37 + 32], 16 * (v102 - v37));
      unint64_t v110 = v96;
      *((void *)v96 + 2) = v102 - 1;
      unsigned int v37 = v102 - 1;
      id v3 = v108;
      if (v102 <= 2) {
        goto LABEL_122;
      }
    }

LABEL_147:
  *((_BYTE *)v11 + 385) = self->_protoCannotRelayAudioOrVideoOnPairedDevice;
  *((_DWORD *)v11 + 100) |= 0x8000u;
  if ((*(_DWORD *)&self->_has & 0x20000) != 0)
  {
LABEL_43:
    *((_BYTE *)v11 + 387) = self->_protoExpectedEndpointOnMessagingDevice;
    *((_DWORD *)v11 + 100) |= 0x20000u;
  }

LABEL_151:
  v22[390] = self->_protoRemoteUplinkMuted;
  *((_DWORD *)v22 + 100) |= 0x100000u;
  if ((*(_DWORD *)&self->_has & 0x1000) != 0)
  {
LABEL_76:
    *((_DWORD *)v22 + 92) = LODWORD(self->_systemVolume);
    *((_DWORD *)v22 + 100) |= 0x1000u;
  }

        return 0LL;
      case 0x12u:
        unsigned int v63 = PBReaderReadString(a2);
        unsigned int v14 = objc_claimAutoreleasedReturnValue(v63);
        uint64_t v15 = 32LL;
LABEL_103:
        uint64_t v64 = *(void **)&a1[v15];
        *(void *)&a1[v15] = v14;

        goto LABEL_134;
      default:
        if ((PBReaderSkipValueWithTag(a2) & 1) == 0) {
          return 0LL;
        }
        goto LABEL_134;
    }
  }

LABEL_77:
  if (self->_localSenderIdentityUUIDString) {
    objc_msgSend(v55, "setLocalSenderIdentityUUIDString:");
  }
  if (-[CSDMessagingRelayMessage remoteParticipantHandlesCount](self, "remoteParticipantHandlesCount"))
  {
    [v55 clearRemoteParticipantHandles];
    id v24 = -[CSDMessagingRelayMessage remoteParticipantHandlesCount](self, "remoteParticipantHandlesCount");
    if (v24)
    {
      char v25 = v24;
      for (m = 0LL; m != v25; ++m)
      {
        uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue( -[CSDMessagingRelayMessage remoteParticipantHandlesAtIndex:]( self,  "remoteParticipantHandlesAtIndex:",  m));
        [v55 addRemoteParticipantHandles:v27];
      }
    }
  }

  if (self->_localSenderIdentityAccountUUIDString) {
    objc_msgSend(v55, "setLocalSenderIdentityAccountUUIDString:");
  }
  unint64_t v28 = self->_has;
  if ((*(_WORD *)&v28 & 0x200) == 0)
  {
    if ((*(_DWORD *)&v28 & 0x2000000) == 0) {
      goto LABEL_87;
    }
LABEL_154:
    *((_BYTE *)v55 + 395) = self->_protoSupportsTTYWithVoice;
    v55[100] |= 0x2000000u;
    if ((*(_DWORD *)&self->_has & 0x800) == 0) {
      goto LABEL_89;
    }
    goto LABEL_88;
  }

  v55[74] = self->_protoTTYType;
  v55[100] |= 0x200u;
  unint64_t v28 = self->_has;
  if ((*(_DWORD *)&v28 & 0x2000000) != 0) {
    goto LABEL_154;
  }
LABEL_87:
  if ((*(_WORD *)&v28 & 0x800) != 0)
  {
LABEL_88:
    v55[82] = self->_requestActionType;
    v55[100] |= 0x800u;
  }

  uint64_t v55 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_sharePlayProtocolVersion,  (void)v63));
  [v3 setObject:v55 forKey:@"sharePlayProtocolVersion"];

  if ((*(_DWORD *)&self->_has & 0x10) != 0)
  {
LABEL_53:
    uint64_t v39 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  self->_isGFTDowngradeToOneToOneAvailable,  (void)v63));
    [v3 setObject:v39 forKey:@"isGFTDowngradeToOneToOneAvailable"];
  }

  PBDataWriterWriteUint32Field(v5, self->_visionFeatureVersion, 26LL);
  if ((*(_DWORD *)&self->_has & 4) != 0) {
LABEL_60:
  }
    PBDataWriterWriteUint32Field(v5, self->_visionCallEstablishmentVersion, 27LL);
LABEL_61:
  screenSharingRequest = self->_screenSharingRequest;
  if (screenSharingRequest) {
    PBDataWriterWriteSubmessage(v5, screenSharingRequest, 28LL);
  }
  uint64_t v32 = self->_has;
  if ((*(_WORD *)&v32 & 0x8000) == 0)
  {
    if ((*(_DWORD *)&v32 & 0x20000) == 0) {
      goto LABEL_65;
    }
LABEL_80:
    PBDataWriterWriteBOOLField(v5, self->_supportsRequestToScreenShare, 30LL);
    if ((*(_DWORD *)&self->_has & 0x200) == 0) {
      goto LABEL_67;
    }
    goto LABEL_66;
  }

  PBDataWriterWriteBOOLField(v5, self->_isUPlusOneVisionToVisionAvailable, 29LL);
  uint64_t v32 = self->_has;
  if ((*(_DWORD *)&v32 & 0x20000) != 0) {
    goto LABEL_80;
  }
LABEL_65:
  if ((*(_WORD *)&v32 & 0x200) != 0) {
LABEL_66:
  }
    PBDataWriterWriteBOOLField(v5, self->_isPhotosSharePlayAvailable, 31LL);
LABEL_67:
}

  swift_bridgeObjectRelease(v7);
  char v66 = swift_bridgeObjectRetain(v6);
  sub_100201F68(v66, v79);
  sub_1001B0EB8();
  char v67 = sub_100170684();
  unsigned int v68 = sub_1001AFF14((uint64_t *)&unk_100447E30);
  uint64_t v69 = sub_1001C7370(v68, 72LL);
  *(_OWORD *)(v69 + 16) = xmmword_10037B290;
  uint64_t v85 = *v3;
  swift_bridgeObjectRetain(v85);
  unint64_t v70 = sub_1001AFF14(&qword_100449210);
  char v71 = String.init<A>(reflecting:)(&v85, v70);
  unsigned int v73 = v72;
  *(void *)(v69 + 56) = &type metadata for String;
  uint64_t v74 = sub_1001B2330();
  *(void *)(v69 + 64) = v74;
  *(void *)(v69 + 32) = v71;
  *(void *)(v69 + 40) = v73;
  uint64_t v75 = static os_log_type_t.default.getter(v74);
  os_log(_:dso:log:type:_:)("Updated active remote participants %@", 37LL, 2LL, &_mh_execute_header, v67, v75, v69);
  sub_1001B0EB8();

  return swift_bridgeObjectRelease(v69);
}

  __break(1u);
LABEL_78:
  swift_once(&qword_100446920, sub_1002589D4);
LABEL_33:
  unsigned int v89 = sub_1001B0E98();
  sub_1001B0D98(v89, (uint64_t)qword_100454180);
  p_opt_inst_meths = (__objc2_meth_list **)sub_1002AB874();
  unint64_t v92 = (void *)Logger.logObject.getter(p_opt_inst_meths, v90, v91);
  char v94 = static os_log_type_t.error.getter(v92, v93);
  if (!sub_1001D9224(v94))
  {

    goto LABEL_69;
  }

  unsigned int v95 = (uint8_t *)sub_1001B0E78(12LL);
  uint64_t v96 = sub_1001B0E78(32LL);
  char v152 = (__objc2_meth_list **)v96;
  v156[0] = v96;
  unint64_t v151 = v95;
  *(_DWORD *)unsigned int v95 = 136315138;
  uint64_t v150 = v95 + 4;
  uint64_t v97 = sub_1001D92AC(v96, "provider");
  unint64_t v98 = [v97 identifier];

  char v99 = static String._unconditionallyBridgeFromObjectiveC(_:)(v98);
  char v101 = v100;

  *(void *)&char v157 = sub_1001D7CF0(v99, v101, v156);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v157, (char *)&v157 + 8, v150, v95 + 12);

  sub_1001E43E0();
  unsigned int v102 = v77;
  uint64_t v103 = v151;
  sub_1001B0FD8( (void *)&_mh_execute_header,  (os_log_s *)v92,  v102,  "Connection time is negative, %s is likely processing a callkit action incorrectly",  v151);
  p_opt_inst_meths = v152;
  sub_1001B0F64((uint64_t)v152);
  sub_1001B0E60((uint64_t)p_opt_inst_meths);
  sub_1001B0E60((uint64_t)v103);

  unint64_t v104 = *(void (**)(uint64_t, uint64_t))(v153 + 8);
  v104((uint64_t)v142, v12);
LABEL_70:
  v104((uint64_t)v147, v12);
LABEL_40:
  sub_1002AAB38(a1);
  sub_1002AB438();
  sub_1002AB658();
  sub_10020051C();
  char v105 = sub_1002AB428();
  char v106 = (uint64_t)sub_1001B115C(v105, "disconnectedReason");
  [sub_1002AB444() initWithInt:v106];
  sub_1002AB438();
  sub_1002AB53C();
  sub_10020051C();
  sub_1002AB428();
  unsigned int v107 = sub_1002AB820();
  if (!v107) {
    goto LABEL_55;
  }
  uint64_t v108 = sub_1001B115C(v107, "provider");
  p_opt_inst_meths = (__objc2_meth_list **)[v108 isFaceTimeProvider];

  if ((_DWORD)p_opt_inst_meths)
  {
    unsigned int v154 = static String._unconditionallyBridgeFromObjectiveC(_:)(TUCallFaceTimeTransportTypeKey);
    uint64_t v155 = v109;
    AnyHashable.init<A>(_:)(v156, &v154, &type metadata for String, &protocol witness table for String);
    sub_1002AB718();
    sub_1001B0EB8();
    sub_1001D8504((uint64_t)v156);
    if (*((void *)&v158 + 1))
    {
      type metadata accessor for TUCallFaceTimeTransportType(0LL);
      if ((swift_dynamicCast(&v154, &v157, (char *)&type metadata for Any + 8, v110, 6LL) & 1) != 0)
      {
        if (v154 == 2) {
          char v106 = 2LL;
        }
        else {
          char v106 = v154 == 1;
        }
        goto LABEL_52;
      }
    }

    else
    {
      sub_1001BB478((uint64_t)&v157, (uint64_t *)&unk_1004474B0);
    }

    char v106 = 0LL;
LABEL_52:
    char v114 = sub_1002AB444();
    sub_10028EA98(v114, "initWithInteger:");
    sub_1002AB438();
    sub_1002AB6E0();
    sub_1002AB47C();
    sub_1002AB428();
    goto LABEL_55;
  }

  char v111 = sub_1001B0EB8();
  char v106 = (uint64_t)sub_1001B115C(v111, "provider");
  [(id)v106 isTelephonyProvider];
  sub_1001D9294();
  if ((_DWORD)v108)
  {
    if (sub_1002AB820())
    {
      sub_1002AB698();
      *(void *)&char v157 = v112;
      *((void *)&v157 + 1) = v113;
      AnyHashable.init<A>(_:)(v156, &v157, &type metadata for String, &protocol witness table for String);
      sub_1002AB718();
      sub_1001B0EB8();
      sub_1001D8504((uint64_t)v156);
    }

    else
    {
      char v157 = 0u;
      uint64_t v158 = 0u;
    }

    char v106 = sub_1002AA9E8((uint64_t)&v157);
    unsigned int v115 = sub_1002AB444();
    sub_10028EA98(v115, "initWithInteger:");
    sub_1002AB438();
    sub_1002AB6E0();
    sub_1002AB47C();
    sub_1002AB428();
    sub_1001BB478((uint64_t)&v157, (uint64_t *)&unk_1004474B0);
  }

LABEL_89:
  if (-[CSDMessagingRelayMessage routesCount](self, "routesCount"))
  {
    [v55 clearRoutes];
    char v29 = -[CSDMessagingRelayMessage routesCount](self, "routesCount");
    if (v29)
    {
      char v30 = v29;
      for (n = 0LL; n != v30; ++n)
      {
        uint64_t v32 = (void *)objc_claimAutoreleasedReturnValue(-[CSDMessagingRelayMessage routesAtIndex:](self, "routesAtIndex:", n));
        [v55 addRoutes:v32];
      }
    }
  }

  if (self->_route) {
    objc_msgSend(v55, "setRoute:");
  }
  if (-[CSDMessagingRelayMessage endpointIDSDestinationURIsCount](self, "endpointIDSDestinationURIsCount"))
  {
    [v55 clearEndpointIDSDestinationURIs];
    uint64_t v33 = -[CSDMessagingRelayMessage endpointIDSDestinationURIsCount](self, "endpointIDSDestinationURIsCount");
    if (v33)
    {
      unint64_t v34 = v33;
      for (ii = 0LL; ii != v34; ++ii)
      {
        char v36 = (void *)objc_claimAutoreleasedReturnValue( -[CSDMessagingRelayMessage endpointIDSDestinationURIsAtIndex:]( self,  "endpointIDSDestinationURIsAtIndex:",  ii));
        [v55 addEndpointIDSDestinationURIs:v36];
      }
    }
  }

  if (self->_isoCountryCode) {
    objc_msgSend(v55, "setIsoCountryCode:");
  }
  unsigned int v37 = self->_has;
  if ((*(_BYTE *)&v37 & 0x20) != 0)
  {
    v55[67] = self->_protoPriority;
    v55[100] |= 0x20u;
    unsigned int v37 = self->_has;
    if ((*(_BYTE *)&v37 & 0x10) == 0)
    {
LABEL_103:
      if ((*(_DWORD *)&v37 & 0x40000) == 0) {
        goto LABEL_104;
      }
      goto LABEL_158;
    }
  }

  else if ((*(_BYTE *)&v37 & 0x10) == 0)
  {
    goto LABEL_103;
  }

  v55[66] = self->_protoOriginatingUIType;
  v55[100] |= 0x10u;
  unsigned int v37 = self->_has;
  if ((*(_DWORD *)&v37 & 0x40000) == 0)
  {
LABEL_104:
    if ((*(_DWORD *)&v37 & 0x1000000) == 0) {
      goto LABEL_106;
    }
    goto LABEL_105;
  }

LABEL_158:
  *((_BYTE *)v55 + 38_Block_object_dispose(va, 8) = self->_protoFailureExpected;
  v55[100] |= 0x40000u;
  if ((*(_DWORD *)&self->_has & 0x1000000) != 0)
  {
LABEL_105:
    *((_BYTE *)v55 + 394) = self->_protoSupportsEmergencyFallback;
    v55[100] |= 0x1000000u;
  }

LABEL_106:
  if (self->_groupUUIDString) {
    objc_msgSend(v55, "setGroupUUIDString:");
  }
  if (-[CSDMessagingRelayMessage conversationsCount](self, "conversationsCount"))
  {
    [v55 clearConversations];
    uint64_t v38 = -[CSDMessagingRelayMessage conversationsCount](self, "conversationsCount");
    if (v38)
    {
      uint64_t v39 = v38;
      for (jj = 0LL; jj != v39; ++jj)
      {
        char v41 = (void *)objc_claimAutoreleasedReturnValue(-[CSDMessagingRelayMessage conversationsAtIndex:](self, "conversationsAtIndex:", jj));
        [v55 addConversations:v41];
      }
    }
  }

  if (self->_joinConversationRequestURLString) {
    objc_msgSend(v55, "setJoinConversationRequestURLString:");
  }
  if (self->_conversationUUIDString) {
    objc_msgSend(v55, "setConversationUUIDString:");
  }
  if (-[CSDMessagingRelayMessage conversationMembersCount](self, "conversationMembersCount"))
  {
    [v55 clearConversationMembers];
    id v42 = -[CSDMessagingRelayMessage conversationMembersCount](self, "conversationMembersCount");
    if (v42)
    {
      char v43 = v42;
      for (kk = 0LL; kk != v43; ++kk)
      {
        uint64_t v45 = (void *)objc_claimAutoreleasedReturnValue(-[CSDMessagingRelayMessage conversationMembersAtIndex:](self, "conversationMembersAtIndex:", kk));
        [v55 addConversationMembers:v45];
      }
    }
  }

  if (-[CSDMessagingRelayMessage handlesToInvitesCount](self, "handlesToInvitesCount"))
  {
    [v55 clearHandlesToInvites];
    unint64_t v46 = -[CSDMessagingRelayMessage handlesToInvitesCount](self, "handlesToInvitesCount");
    if (v46)
    {
      char v47 = v46;
      for (mm = 0LL; mm != v47; ++mm)
      {
        char v49 = (void *)objc_claimAutoreleasedReturnValue(-[CSDMessagingRelayMessage handlesToInviteAtIndex:](self, "handlesToInviteAtIndex:", mm));
        [v55 addHandlesToInvite:v49];
      }
    }
  }

  if (-[CSDMessagingRelayMessage prominenceEntrysCount](self, "prominenceEntrysCount"))
  {
    [v55 clearProminenceEntrys];
    unsigned int v50 = -[CSDMessagingRelayMessage prominenceEntrysCount](self, "prominenceEntrysCount");
    if (v50)
    {
      uint64_t v51 = v50;
      for (nn = 0LL; nn != v51; ++nn)
      {
        unint64_t v53 = (void *)objc_claimAutoreleasedReturnValue(-[CSDMessagingRelayMessage prominenceEntryAtIndex:](self, "prominenceEntryAtIndex:", nn));
        [v55 addProminenceEntry:v53];
      }
    }
  }

  char v54 = v55;
  if ((*((_BYTE *)&self->_has + 2) & 0x80) != 0)
  {
    *((_BYTE *)v55 + 393) = self->_protoSupportsDTMFUpdates;
    v55[100] |= 0x800000u;
  }

  if (self->_dtmfUpdateDigits)
  {
    objc_msgSend(v55, "setDtmfUpdateDigits:");
    char v54 = v55;
  }

  if (self->_image)
  {
    objc_msgSend(v55, "setImage:");
    char v54 = v55;
  }

  if (self->_senderIDSIdentifier)
  {
    objc_msgSend(v55, "setSenderIDSIdentifier:");
    char v54 = v55;
  }
}

LABEL_120:
  *((_DWORD *)v6 + 6_Block_object_dispose(va, 8) = self->_protoProtocolVersion;
  *((_DWORD *)v6 + 100) |= 0x40u;
  if ((*(_DWORD *)&self->_has & 0x400000) != 0)
  {
LABEL_22:
    *((_BYTE *)v6 + 392) = self->_protoShouldSuppressRingtone;
    *((_DWORD *)v6 + 100) |= 0x400000u;
  }

LABEL_124:
  *((_BYTE *)v6 + 389) = self->_protoNeedsManualInCallSounds;
  *((_DWORD *)v6 + 100) |= 0x80000u;
  uint64_t v33 = self->_has;
  if ((*(_WORD *)&v33 & 0x8000) == 0)
  {
LABEL_27:
    if ((*(_DWORD *)&v33 & 0x20000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_28;
  }

LABEL_125:
  *((_BYTE *)v6 + 385) = self->_protoCannotRelayAudioOrVideoOnPairedDevice;
  *((_DWORD *)v6 + 100) |= 0x8000u;
  if ((*(_DWORD *)&self->_has & 0x20000) != 0)
  {
LABEL_28:
    *((_BYTE *)v6 + 387) = self->_protoExpectedEndpointOnMessagingDevice;
    *((_DWORD *)v6 + 100) |= 0x20000u;
  }

    __break(1u);
    goto LABEL_126;
  }

  unsigned int v5 = v4;
  sub_10023BCDC(v3 / 2);
  unint64_t v98 = a1;
  char v99 = v6;
  uint64_t v103 = v7;
  char v101 = v3;
  if (v3 > 0)
  {
    unint64_t v8 = 0LL;
    char v9 = *a1;
    uint64_t v96 = *a1 + 24;
    uint64_t v97 = *a1 + 64;
    BOOL v10 = (char *)&_swiftEmptyArrayStorage;
    uint64_t v100 = v5;
    unsigned int v102 = *a1;
    while (1)
    {
      int v11 = v8++;
      if (v8 < v3)
      {
        uint64_t v12 = *(void *)(v9 + 32 * v8);
        char v13 = 32 * v11;
        unsigned int v14 = *(void *)(v9 + 32 * v11);
        unint64_t v8 = v11 + 2;
        if (v11 + 2 < v3)
        {
          uint64_t v15 = (unint64_t *)(v97 + 32 * v11);
          uint64_t v16 = v12;
          while (1)
          {
            char v18 = *v15;
            v15 += 4;
            unint64_t v17 = v18;
            if (v12 < v14 == v18 >= v16) {
              break;
            }
            ++v8;
            uint64_t v16 = v17;
            if (v8 >= v3)
            {
              unint64_t v8 = v3;
              break;
            }
          }
        }

        if (v12 < v14)
        {
          if (v8 < v11) {
            goto LABEL_127;
          }
          if (v11 < v8)
          {
            id v19 = 32 * v8;
            uint64_t v20 = v8;
            uint64_t v21 = v11;
            do
            {
              if (v21 != --v20)
              {
                if (!v9) {
                  goto LABEL_133;
                }
                uint64_t v22 = (_OWORD *)(v9 + v13);
                uint64_t v23 = v9 + v19;
                id v24 = *(_OWORD *)(v9 + v13);
                char v25 = *(_OWORD *)(v9 + v13 + 16);
                unsigned int v26 = *(_OWORD *)(v9 + v19 - 16);
                *uint64_t v22 = *(_OWORD *)(v9 + v19 - 32);
                v22[1] = v26;
                *(_OWORD *)(v23 - 32) = v24;
                *(_OWORD *)(v23 - 16) = v25;
              }

              ++v21;
              v19 -= 32LL;
              v13 += 32LL;
            }

            while (v21 < v20);
          }
        }
      }

      if (v8 < v3)
      {
        if (__OFSUB__(v8, v11)) {
          goto LABEL_124;
        }
        if (v8 - v11 < v5)
        {
          uint64_t v27 = v11 + v5;
          if (__OFADD__(v11, v5)) {
            goto LABEL_128;
          }
          if (v27 >= v3) {
            uint64_t v27 = v3;
          }
          if (v27 < v11)
          {
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
            return;
          }

          if (v8 != v27)
          {
            unint64_t v28 = v96 + 32 * v8;
            do
            {
              char v29 = *(void *)(v9 + 32 * v8);
              char v30 = v11;
              unsigned int v31 = v28;
              do
              {
                uint64_t v32 = (__int128 *)(v31 - 56);
                if (v29 >= *(void *)(v31 - 56)) {
                  break;
                }
                if (!v9) {
                  goto LABEL_131;
                }
                unint64_t v34 = *v32;
                uint64_t v33 = *(_OWORD *)(v31 - 40);
                *(void *)(v31 - 32) = *(void *)v31;
                v31 -= 32LL;
                char v35 = *(_OWORD *)(v31 + 16);
                v32[2] = v34;
                v32[3] = v33;
                *(void *)(v31 - 24) = v29;
                *(_OWORD *)(v31 - 16) = v35;
                ++v30;
              }

              while (v8 != v30);
              ++v8;
              v28 += 32LL;
            }

            while (v8 != v27);
            unint64_t v8 = v27;
          }
        }
      }

      if (v8 < v11) {
        goto LABEL_123;
      }
      if ((swift_isUniquelyReferenced_nonNull_native(v10) & 1) == 0)
      {
        sub_100229FEC(0, *((void *)v10 + 2) + 1LL, 1, v10);
        BOOL v10 = v87;
      }

      unsigned int v37 = *((void *)v10 + 2);
      char v36 = *((void *)v10 + 3);
      uint64_t v38 = v37 + 1;
      char v9 = v102;
      if (v37 >= v36 >> 1)
      {
        sub_100229FEC(v36 > 1, v37 + 1, 1, v10);
        char v9 = v102;
        BOOL v10 = v88;
      }

      *((void *)v10 + 2) = v38;
      uint64_t v39 = v10 + 32;
      unint64_t v40 = (Swift::Int *)&v10[16 * v37 + 32];
      *unint64_t v40 = v11;
      v40[1] = v8;
      if (v37)
      {
        while (1)
        {
          char v41 = v38 - 1;
          if (v38 >= 4)
          {
            unint64_t v46 = &v39[16 * v38];
            char v47 = *((void *)v46 - 8);
            uint64_t v48 = *((void *)v46 - 7);
            uint64_t v52 = __OFSUB__(v48, v47);
            char v49 = v48 - v47;
            if (v52) {
              goto LABEL_108;
            }
            uint64_t v51 = *((void *)v46 - 6);
            unsigned int v50 = *((void *)v46 - 5);
            uint64_t v52 = __OFSUB__(v50, v51);
            unsigned int v44 = v50 - v51;
            uint64_t v45 = v52;
            if (v52) {
              goto LABEL_109;
            }
            unint64_t v53 = v38 - 2;
            char v54 = &v39[16 * v38 - 32];
            uint64_t v56 = *(void *)v54;
            uint64_t v55 = *((void *)v54 + 1);
            uint64_t v52 = __OFSUB__(v55, v56);
            char v57 = v55 - v56;
            if (v52) {
              goto LABEL_110;
            }
            uint64_t v52 = __OFADD__(v44, v57);
            unsigned int v58 = v44 + v57;
            if (v52) {
              goto LABEL_112;
            }
            if (v58 >= v49)
            {
              unint64_t v76 = &v39[16 * v41];
              uint64_t v78 = *(void *)v76;
              char v77 = *((void *)v76 + 1);
              uint64_t v52 = __OFSUB__(v77, v78);
              unint64_t v79 = v77 - v78;
              if (v52) {
                goto LABEL_118;
              }
              uint64_t v69 = v44 < v79;
              goto LABEL_70;
            }
          }

          else
          {
            if (v38 != 3)
            {
              unint64_t v70 = *((void *)v10 + 4);
              char v71 = *((void *)v10 + 5);
              uint64_t v52 = __OFSUB__(v71, v70);
              unsigned int v63 = v71 - v70;
              uint64_t v64 = v52;
              goto LABEL_64;
            }

            char v43 = *((void *)v10 + 4);
            id v42 = *((void *)v10 + 5);
            uint64_t v52 = __OFSUB__(v42, v43);
            unsigned int v44 = v42 - v43;
            uint64_t v45 = v52;
          }

          if ((v45 & 1) != 0) {
            goto LABEL_111;
          }
          unint64_t v53 = v38 - 2;
          uint64_t v59 = &v39[16 * v38 - 32];
          char v61 = *(void *)v59;
          unint64_t v60 = *((void *)v59 + 1);
          char v62 = __OFSUB__(v60, v61);
          unsigned int v63 = v60 - v61;
          uint64_t v64 = v62;
          if (v62) {
            goto LABEL_113;
          }
          unint64_t v65 = &v39[16 * v41];
          char v67 = *(void *)v65;
          char v66 = *((void *)v65 + 1);
          uint64_t v52 = __OFSUB__(v66, v67);
          unsigned int v68 = v66 - v67;
          if (v52) {
            goto LABEL_115;
          }
          if (__OFADD__(v63, v68)) {
            goto LABEL_117;
          }
          if (v63 + v68 >= v44)
          {
            uint64_t v69 = v44 < v68;
LABEL_70:
            if (v69) {
              char v41 = v53;
            }
            goto LABEL_72;
          }

LABEL_129:
  *((_BYTE *)v6 + 390) = self->_protoRemoteUplinkMuted;
  *((_DWORD *)v6 + 100) |= 0x100000u;
  if ((*(_DWORD *)&self->_has & 0x1000) != 0)
  {
LABEL_53:
    *((_DWORD *)v6 + 92) = LODWORD(self->_systemVolume);
    *((_DWORD *)v6 + 100) |= 0x1000u;
  }

LABEL_136:
  *((_BYTE *)v6 + 38_Block_object_dispose(va, 8) = self->_protoFailureExpected;
  *((_DWORD *)v6 + 100) |= 0x40000u;
  if ((*(_DWORD *)&self->_has & 0x1000000) != 0)
  {
LABEL_83:
    *((_BYTE *)v6 + 394) = self->_protoSupportsEmergencyFallback;
    *((_DWORD *)v6 + 100) |= 0x1000000u;
  }

LABEL_84:
  uint64_t v90 = -[NSString copyWithZone:](self->_groupUUIDString, "copyWithZone:", a3);
  uint64_t v91 = (void *)v6[12];
  v6[12] = v90;

  char v142 = 0u;
  unsigned int v143 = 0u;
  uint64_t v140 = 0u;
  uint64_t v141 = 0u;
  unint64_t v92 = self->_conversations;
  char v93 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v92,  "countByEnumeratingWithState:objects:count:",  &v140,  v171,  16LL);
  if (v93)
  {
    char v94 = v93;
    unsigned int v95 = *(void *)v141;
    do
    {
      uint64_t v96 = 0LL;
      do
      {
        if (*(void *)v141 != v95) {
          objc_enumerationMutation(v92);
        }
        uint64_t v97 = [*(id *)(*((void *)&v140 + 1) + 8 * (void)v96) copyWithZone:a3];
        [v6 addConversations:v97];

        uint64_t v96 = (char *)v96 + 1;
      }

      while (v94 != v96);
      char v94 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v92,  "countByEnumeratingWithState:objects:count:",  &v140,  v171,  16LL);
    }

    while (v94);
  }

  unint64_t v98 = -[NSString copyWithZone:](self->_joinConversationRequestURLString, "copyWithZone:", a3);
  char v99 = (void *)v6[20];
  v6[20] = v98;

  uint64_t v100 = -[NSString copyWithZone:](self->_conversationUUIDString, "copyWithZone:", a3);
  char v101 = (void *)v6[6];
  v6[6] = v100;

  unint64_t v138 = 0u;
  int v139 = 0u;
  unint64_t v136 = 0u;
  char v137 = 0u;
  unsigned int v102 = self->_conversationMembers;
  uint64_t v103 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v102,  "countByEnumeratingWithState:objects:count:",  &v136,  v170,  16LL);
  if (v103)
  {
    unint64_t v104 = v103;
    char v105 = *(void *)v137;
    do
    {
      char v106 = 0LL;
      do
      {
        if (*(void *)v137 != v105) {
          objc_enumerationMutation(v102);
        }
        unsigned int v107 = [*(id *)(*((void *)&v136 + 1) + 8 * (void)v106) copyWithZone:a3];
        [v6 addConversationMembers:v107];

        char v106 = (char *)v106 + 1;
      }

      while (v104 != v106);
      unint64_t v104 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v102,  "countByEnumeratingWithState:objects:count:",  &v136,  v170,  16LL);
    }

    while (v104);
  }

  uint64_t v134 = 0u;
  uint64_t v135 = 0u;
  char v132 = 0u;
  unsigned int v133 = 0u;
  uint64_t v108 = self->_handlesToInvites;
  uint64_t v109 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v108,  "countByEnumeratingWithState:objects:count:",  &v132,  v169,  16LL);
  if (v109)
  {
    unint64_t v110 = v109;
    char v111 = *(void *)v133;
    do
    {
      unint64_t v112 = 0LL;
      do
      {
        if (*(void *)v133 != v111) {
          objc_enumerationMutation(v108);
        }
        uint64_t v113 = [*(id *)(*((void *)&v132 + 1) + 8 * (void)v112) copyWithZone:a3];
        [v6 addHandlesToInvite:v113];

        unint64_t v112 = (char *)v112 + 1;
      }

      while (v110 != v112);
      unint64_t v110 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v108,  "countByEnumeratingWithState:objects:count:",  &v132,  v169,  16LL);
    }

    while (v110);
  }

  unint64_t v130 = 0u;
  char v131 = 0u;
  uint64_t v128 = 0u;
  uint64_t v129 = 0u;
  char v114 = self->_prominenceEntrys;
  unsigned int v115 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v114,  "countByEnumeratingWithState:objects:count:",  &v128,  v168,  16LL);
  if (v115)
  {
    uint64_t v116 = v115;
    uint64_t v117 = *(void *)v129;
    do
    {
      unint64_t v118 = 0LL;
      do
      {
        if (*(void *)v129 != v117) {
          objc_enumerationMutation(v114);
        }
        char v119 = objc_msgSend(*(id *)(*((void *)&v128 + 1) + 8 * (void)v118), "copyWithZone:", a3, (void)v128);
        [v6 addProminenceEntry:v119];

        unint64_t v118 = (char *)v118 + 1;
      }

      while (v116 != v118);
      uint64_t v116 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v114,  "countByEnumeratingWithState:objects:count:",  &v128,  v168,  16LL);
    }

    while (v116);
  }

  if ((*((_BYTE *)&self->_has + 2) & 0x80) != 0)
  {
    *((_BYTE *)v6 + 393) = self->_protoSupportsDTMFUpdates;
    *((_DWORD *)v6 + 100) |= 0x800000u;
  }

  char v120 = -[NSString copyWithZone:](self->_dtmfUpdateDigits, "copyWithZone:", a3, (void)v128);
  unsigned int v121 = (void *)v6[9];
  v6[9] = v120;

  uint64_t v122 = -[NSData copyWithZone:](self->_image, "copyWithZone:", a3);
  uint64_t v123 = (void *)v6[17];
  v6[17] = v122;

  unint64_t v124 = -[NSString copyWithZone:](self->_senderIDSIdentifier, "copyWithZone:", a3);
  char v125 = (void *)v6[44];
  v6[44] = v124;

  char v126 = v6;
  return v126;
}

LABEL_275:
    unint64_t v60 = 0;
    goto LABEL_276;
  }

  if ((v56 & 0x800000) != 0) {
    goto LABEL_275;
  }
LABEL_269:
  dtmfUpdateDigits = self->_dtmfUpdateDigits;
  if ((unint64_t)dtmfUpdateDigits | *((void *)v4 + 9)
    && !-[NSString isEqual:](dtmfUpdateDigits, "isEqual:"))
  {
    goto LABEL_275;
  }

  image = self->_image;
  if ((unint64_t)image | *((void *)v4 + 17))
  {
  }

  senderIDSIdentifier = self->_senderIDSIdentifier;
  else {
    unint64_t v60 = 1;
  }
LABEL_276:

  return v60;
}

LABEL_78:
  uint64_t v45 = 0LL;
LABEL_79:
  unsigned int v44 = (unint64_t)-[NSMutableArray hash](self->_routes, "hash");
  char v43 = -[CSDMessagingRoute hash](self->_route, "hash");
  id v42 = (unint64_t)-[NSMutableArray hash](self->_endpointIDSDestinationURIs, "hash");
  char v41 = -[NSString hash](self->_isoCountryCode, "hash");
  id v24 = self->_has;
  if ((*(_BYTE *)&v24 & 0x20) != 0)
  {
    unint64_t v40 = 2654435761LL * self->_protoPriority;
    if ((*(_BYTE *)&v24 & 0x10) != 0)
    {
LABEL_81:
      uint64_t v39 = 2654435761LL * self->_protoOriginatingUIType;
      if ((*(_DWORD *)&v24 & 0x40000) != 0) {
        goto LABEL_82;
      }
LABEL_86:
      uint64_t v38 = 0LL;
      if ((*(_DWORD *)&v24 & 0x1000000) != 0) {
        goto LABEL_83;
      }
      goto LABEL_87;
    }
  }

  else
  {
    unint64_t v40 = 0LL;
    if ((*(_BYTE *)&v24 & 0x10) != 0) {
      goto LABEL_81;
    }
  }

  uint64_t v39 = 0LL;
  if ((*(_DWORD *)&v24 & 0x40000) == 0) {
    goto LABEL_86;
  }
LABEL_82:
  uint64_t v38 = 2654435761LL * self->_protoFailureExpected;
  if ((*(_DWORD *)&v24 & 0x1000000) != 0)
  {
LABEL_83:
    unsigned int v37 = 2654435761LL * self->_protoSupportsEmergencyFallback;
    goto LABEL_88;
  }

LABEL_60:
  self->_protoProtocolVersion = *((_DWORD *)v5 + 68);
  *(_DWORD *)&self->_has |= 0x40u;
  if ((*((_DWORD *)v5 + 100) & 0x400000) != 0)
  {
LABEL_41:
    self->_protoShouldSuppressRingtone = *((_BYTE *)v5 + 392);
    *(_DWORD *)&self->_has |= 0x400000u;
  }

  *((_BYTE *)v6 + 121) = self->_isUPlusOneAVLessAvailable;
  *((_DWORD *)v6 + 32) |= 0x2000u;
  char v41 = self->_has;
  if ((*(_BYTE *)&v41 & 8) == 0)
  {
LABEL_45:
    if ((*(_BYTE *)&v41 & 4) == 0) {
      goto LABEL_47;
    }
    goto LABEL_46;
  }

  self->_sharePlayProtocolVersion = *((_DWORD *)v5 + 24);
  *(_DWORD *)&self->_has |= 1u;
  if ((*((_DWORD *)v5 + 32) & 0x10) != 0)
  {
LABEL_53:
    self->_isGFTDowngradeToOneToOneAvailable = *((_BYTE *)v5 + 112);
    *(_DWORD *)&self->_has |= 0x10u;
  }

    sub_1001E7E1C(v8);
    unsigned int v133 = v141;
    swift_bridgeObjectRelease(v8);
    goto LABEL_49;
  }

  if (qword_100446930 != -1) {
    swift_once(&qword_100446930, sub_100258A18);
  }
  char v18 = type metadata accessor for Logger(0LL);
  sub_1001B0D98(v18, (uint64_t)qword_1004541B0);
  swift_errorRetain(a2);
  id v19 = swift_errorRetain(a2);
  unint64_t v151 = (os_log_s *)Logger.logObject.getter(v19, v20, v21);
  uint64_t v23 = static os_log_type_t.error.getter(v151, v22);
  if (os_log_type_enabled(v151, v23))
  {
    id v24 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    char v25 = (void *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)id v24 = 138412290;
    if (a2)
    {
      swift_errorRetain(a2);
      unsigned int v26 = (void *)_swift_stdlib_bridgeErrorToNSError(a2);
      aBlock = v26;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, &v156, v24 + 4, v24 + 12);
    }

    else
    {
      aBlock = 0LL;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, &v156, v24 + 4, v24 + 12);
      unsigned int v26 = 0LL;
    }

    *char v25 = v26;
    swift_errorRelease(a2);
    swift_errorRelease(a2);
    _os_log_impl( (void *)&_mh_execute_header,  v151,  v23,  "No descriptors fetched -- validation over {error: %@}",  v24,  0xCu);
    sub_1001AFF14(&qword_100447E80);
    swift_arrayDestroy(v25, 1LL);
    swift_slowDealloc(v25, -1LL, -1LL);
    swift_slowDealloc(v24, -1LL, -1LL);
  }

  else
  {
    swift_errorRelease(a2);
    swift_errorRelease(a2);
  }

  sub_1001B4B8C(a2);
  uint64_t v12 = (unint64_t)a1;
  uint64_t v52 = [a1 mutableCopy];
  _bridgeAnyObjectToAny(_:)(&v92, v52);
  unint64_t v53 = swift_unknownObjectRelease(v52);
  char v54 = sub_1001B4C00(v53, (unint64_t *)&unk_100449970, &OBJC_CLASS___TUMutableConversationLinkDescriptor_ptr);
  if (swift_dynamicCast(&v90, &v92, (char *)&type metadata for Any + 8, v54, 6LL))
  {
    uint64_t v55 = v90;
    sub_10022A1E0(v91, v90);
    sub_10021611C();
    uint64_t v56 = *(void **)(v86 + OBJC_IVAR___CSDConversationLinkManager_dataSource);
    char v57 = sub_1001AFF14((uint64_t *)&unk_1004475C0);
    unsigned int v58 = sub_1001C7370(v57, 40LL);
    *(_OWORD *)(v58 + 16) = xmmword_10037B200;
    *(void *)(v58 + 32) = v55;
    unint64_t v92 = (id)v58;
    char v66 = specialized Array._endMutation()(v58, v59, v60, v61, v62, v63, v64, v65);
    char v67 = v92;
    sub_1001B4C00(v66, &qword_1004475B0, &OBJC_CLASS___TUConversationLinkDescriptor_ptr);
    unsigned int v68 = v55;
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v67);
    unint64_t v92 = 0LL;
    LOBYTE(v56) = [v56 addOrUpdateConversationLinkDescriptors:isa error:&v92];

    if ((v56 & 1) != 0)
    {
      unint64_t v70 = v92;
      sub_100285E64();
      char v71 = [objc_allocWithZone(TUConversationLink) initWithDescriptor:v68];
    }

    else
    {
      char v71 = v92;
      sub_10022D190();

      swift_willThrow(v81);
    }
  }

  else
  {
    swift_bridgeObjectRelease(v91);
    if (p_opt_inst_meths[294] != (__objc2_meth_list *)-1LL) {
LABEL_72:
    }
      swift_once(&qword_100446930, sub_100258A18);
    char v72 = sub_1001B0E98();
    char v71 = (_DWORD *)sub_1001B0D98(v72, (uint64_t)qword_1004541B0);
    unsigned int v73 = (id)v12;
    unint64_t v76 = (os_log_s *)Logger.logObject.getter(v73, v74, v75);
    uint64_t v78 = static os_log_type_t.error.getter(v76, v77);
    if (os_log_type_enabled(v76, v78))
    {
      char v71 = (_DWORD *)sub_1001B0E78(12LL);
      unint64_t v79 = (void *)sub_1001B0E78(8LL);
      *char v71 = 138412290;
      unint64_t v92 = v73;
      uint64_t v80 = v73;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v92, &v93, v71 + 1, v71 + 3);
      *unint64_t v79 = v73;

      sub_1001B0FD8( (void *)&_mh_execute_header,  v76,  v78,  "Could not create mutable descriptor from descriptor %@",  (uint8_t *)v71);
      sub_1001AFF14(&qword_100447E80);
      sub_1001B0F64((uint64_t)v79);
      sub_1001B0E60((uint64_t)v79);
      sub_1001B0E60((uint64_t)v71);
    }

    else
    {

      unint64_t v76 = (os_log_s *)v73;
    }

    char v82 = sub_10022B8F8();
    unsigned int v83 = swift_allocError(&type metadata for ConversationLinkManagerErrorType, v82, 0LL, 0LL);
    *uint64_t v84 = 3LL;
    swift_willThrow(v83);
  }

  return v71;
}

LABEL_119:
  if (*((void *)v5 + 22)) {
    -[CSDMessagingRelayMessage setLocalSenderIdentityUUIDString:](self, "setLocalSenderIdentityUUIDString:");
  }
  char v105 = 0u;
  char v106 = 0u;
  uint64_t v103 = 0u;
  unint64_t v104 = 0u;
  unint64_t v40 = *((id *)v5 + 40);
  char v41 = [v40 countByEnumeratingWithState:&v103 objects:v125 count:16];
  if (v41)
  {
    id v42 = v41;
    char v43 = *(void *)v104;
    do
    {
      for (m = 0LL; m != v42; m = (char *)m + 1)
      {
        if (*(void *)v104 != v43) {
          objc_enumerationMutation(v40);
        }
        -[CSDMessagingRelayMessage addRemoteParticipantHandles:]( self,  "addRemoteParticipantHandles:",  *(void *)(*((void *)&v103 + 1) + 8LL * (void)m));
      }

      id v42 = [v40 countByEnumeratingWithState:&v103 objects:v125 count:16];
    }

    while (v42);
  }

  if (*((void *)v5 + 21)) {
    -[CSDMessagingRelayMessage setLocalSenderIdentityAccountUUIDString:]( self,  "setLocalSenderIdentityAccountUUIDString:");
  }
  uint64_t v45 = *((_DWORD *)v5 + 100);
  if ((v45 & 0x200) != 0)
  {
    self->_protoTTYType = *((_DWORD *)v5 + 74);
    *(_DWORD *)&self->_has |= 0x200u;
    uint64_t v45 = *((_DWORD *)v5 + 100);
    if ((v45 & 0x2000000) == 0)
    {
LABEL_132:
      if ((v45 & 0x800) == 0) {
        goto LABEL_134;
      }
      goto LABEL_133;
    }
  }

  else if ((v45 & 0x2000000) == 0)
  {
    goto LABEL_132;
  }

  self->_protoSupportsTTYWithVoice = *((_BYTE *)v5 + 395);
  *(_DWORD *)&self->_has |= 0x2000000u;
  if ((*((_DWORD *)v5 + 100) & 0x800) != 0)
  {
LABEL_133:
    self->_requestActionType = *((_DWORD *)v5 + 82);
    *(_DWORD *)&self->_has |= 0x800u;
  }

    __break(1u);
LABEL_120:
    __break(1u);
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
    goto LABEL_125;
  }

LABEL_134:
  char v101 = 0u;
  unsigned int v102 = 0u;
  char v99 = 0u;
  uint64_t v100 = 0u;
  unint64_t v46 = *((id *)v5 + 43);
  char v47 = [v46 countByEnumeratingWithState:&v99 objects:v124 count:16];
  if (v47)
  {
    uint64_t v48 = v47;
    char v49 = *(void *)v100;
    do
    {
      for (n = 0LL; n != v48; n = (char *)n + 1)
      {
        if (*(void *)v100 != v49) {
          objc_enumerationMutation(v46);
        }
        -[CSDMessagingRelayMessage addRoutes:](self, "addRoutes:", *(void *)(*((void *)&v99 + 1) + 8LL * (void)n));
      }

      uint64_t v48 = [v46 countByEnumeratingWithState:&v99 objects:v124 count:16];
    }

    while (v48);
  }

  route = self->_route;
  uint64_t v52 = *((void *)v5 + 42);
  if (route)
  {
    if (v52) {
      -[CSDMessagingRoute mergeFrom:](route, "mergeFrom:");
    }
  }

  else if (v52)
  {
    -[CSDMessagingRelayMessage setRoute:](self, "setRoute:");
  }

  uint64_t v97 = 0u;
  unint64_t v98 = 0u;
  unsigned int v95 = 0u;
  uint64_t v96 = 0u;
  unint64_t v53 = *((id *)v5 + 11);
  char v54 = [v53 countByEnumeratingWithState:&v95 objects:v123 count:16];
  if (v54)
  {
    uint64_t v55 = v54;
    uint64_t v56 = *(void *)v96;
    do
    {
      for (ii = 0LL; ii != v55; ii = (char *)ii + 1)
      {
        if (*(void *)v96 != v56) {
          objc_enumerationMutation(v53);
        }
        -[CSDMessagingRelayMessage addEndpointIDSDestinationURIs:]( self,  "addEndpointIDSDestinationURIs:",  *(void *)(*((void *)&v95 + 1) + 8LL * (void)ii));
      }

      uint64_t v55 = [v53 countByEnumeratingWithState:&v95 objects:v123 count:16];
    }

    while (v55);
  }

  if (*((void *)v5 + 19)) {
    -[CSDMessagingRelayMessage setIsoCountryCode:](self, "setIsoCountryCode:");
  }
  unsigned int v58 = *((_DWORD *)v5 + 100);
  if ((v58 & 0x20) != 0)
  {
    self->_protoPriority = *((_DWORD *)v5 + 67);
    *(_DWORD *)&self->_has |= 0x20u;
    unsigned int v58 = *((_DWORD *)v5 + 100);
    if ((v58 & 0x10) == 0)
    {
LABEL_164:
      if ((v58 & 0x40000) == 0) {
        goto LABEL_165;
      }
      goto LABEL_212;
    }
  }

  else if ((v58 & 0x10) == 0)
  {
    goto LABEL_164;
  }

  self->_protoOriginatingUIType = *((_DWORD *)v5 + 66);
  *(_DWORD *)&self->_has |= 0x10u;
  unsigned int v58 = *((_DWORD *)v5 + 100);
  if ((v58 & 0x40000) == 0)
  {
LABEL_165:
    if ((v58 & 0x1000000) == 0) {
      goto LABEL_167;
    }
    goto LABEL_166;
  }

LABEL_212:
  self->_protoFailureExpected = *((_BYTE *)v5 + 388);
  *(_DWORD *)&self->_has |= 0x40000u;
  if ((*((_DWORD *)v5 + 100) & 0x1000000) != 0)
  {
LABEL_166:
    self->_protoSupportsEmergencyFallback = *((_BYTE *)v5 + 394);
    *(_DWORD *)&self->_has |= 0x1000000u;
  }

LABEL_167:
  if (*((void *)v5 + 12)) {
    -[CSDMessagingRelayMessage setGroupUUIDString:](self, "setGroupUUIDString:");
  }
  char v93 = 0u;
  char v94 = 0u;
  uint64_t v91 = 0u;
  unint64_t v92 = 0u;
  uint64_t v59 = *((id *)v5 + 7);
  unint64_t v60 = [v59 countByEnumeratingWithState:&v91 objects:v122 count:16];
  if (v60)
  {
    char v61 = v60;
    char v62 = *(void *)v92;
    do
    {
      for (jj = 0LL; jj != v61; jj = (char *)jj + 1)
      {
        if (*(void *)v92 != v62) {
          objc_enumerationMutation(v59);
        }
        -[CSDMessagingRelayMessage addConversations:]( self,  "addConversations:",  *(void *)(*((void *)&v91 + 1) + 8LL * (void)jj));
      }

      char v61 = [v59 countByEnumeratingWithState:&v91 objects:v122 count:16];
    }

    while (v61);
  }

  if (*((void *)v5 + 20)) {
    -[CSDMessagingRelayMessage setJoinConversationRequestURLString:](self, "setJoinConversationRequestURLString:");
  }
  if (*((void *)v5 + 6)) {
    -[CSDMessagingRelayMessage setConversationUUIDString:](self, "setConversationUUIDString:");
  }
  unsigned int v89 = 0u;
  uint64_t v90 = 0u;
  char v87 = 0u;
  char v88 = 0u;
  uint64_t v64 = *((id *)v5 + 5);
  unint64_t v65 = [v64 countByEnumeratingWithState:&v87 objects:v121 count:16];
  if (v65)
  {
    char v66 = v65;
    char v67 = *(void *)v88;
    do
    {
      for (kk = 0LL; kk != v66; kk = (char *)kk + 1)
      {
        if (*(void *)v88 != v67) {
          objc_enumerationMutation(v64);
        }
        -[CSDMessagingRelayMessage addConversationMembers:]( self,  "addConversationMembers:",  *(void *)(*((void *)&v87 + 1) + 8LL * (void)kk));
      }

      char v66 = [v64 countByEnumeratingWithState:&v87 objects:v121 count:16];
    }

    while (v66);
  }

  uint64_t v85 = 0u;
  unint64_t v86 = 0u;
  unsigned int v83 = 0u;
  uint64_t v84 = 0u;
  uint64_t v69 = *((id *)v5 + 14);
  unint64_t v70 = [v69 countByEnumeratingWithState:&v83 objects:v120 count:16];
  if (v70)
  {
    char v71 = v70;
    char v72 = *(void *)v84;
    do
    {
      for (mm = 0LL; mm != v71; mm = (char *)mm + 1)
      {
        if (*(void *)v84 != v72) {
          objc_enumerationMutation(v69);
        }
        -[CSDMessagingRelayMessage addHandlesToInvite:]( self,  "addHandlesToInvite:",  *(void *)(*((void *)&v83 + 1) + 8LL * (void)mm));
      }

      char v71 = [v69 countByEnumeratingWithState:&v83 objects:v120 count:16];
    }

    while (v71);
  }

  unint64_t v81 = 0u;
  char v82 = 0u;
  unint64_t v79 = 0u;
  uint64_t v80 = 0u;
  uint64_t v74 = *((id *)v5 + 25);
  uint64_t v75 = [v74 countByEnumeratingWithState:&v79 objects:v119 count:16];
  if (v75)
  {
    unint64_t v76 = v75;
    char v77 = *(void *)v80;
    do
    {
      for (nn = 0LL; nn != v76; nn = (char *)nn + 1)
      {
        if (*(void *)v80 != v77) {
          objc_enumerationMutation(v74);
        }
        -[CSDMessagingRelayMessage addProminenceEntry:]( self,  "addProminenceEntry:",  *(void *)(*((void *)&v79 + 1) + 8LL * (void)nn),  (void)v79);
      }

      unint64_t v76 = [v74 countByEnumeratingWithState:&v79 objects:v119 count:16];
    }

    while (v76);
  }

  if ((*((_BYTE *)v5 + 402) & 0x80) != 0)
  {
    self->_protoSupportsDTMFUpdates = *((_BYTE *)v5 + 393);
    *(_DWORD *)&self->_has |= 0x800000u;
  }

  if (*((void *)v5 + 9)) {
    -[CSDMessagingRelayMessage setDtmfUpdateDigits:](self, "setDtmfUpdateDigits:");
  }
  if (*((void *)v5 + 17)) {
    -[CSDMessagingRelayMessage setImage:](self, "setImage:");
  }
  if (*((void *)v5 + 44)) {
    -[CSDMessagingRelayMessage setSenderIDSIdentifier:](self, "setSenderIDSIdentifier:");
  }
}

uint64_t sub_100078B50(_BYTE *a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0LL;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1LL || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0LL;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0LL;
    }
LABEL_13:
    int v11 = v6 & 7;
    if (v10 || v11 == 4) {
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t String = PBReaderReadString(a2);
        uint64_t v14 = objc_claimAutoreleasedReturnValue(String);
        uint64_t v15 = 72LL;
        goto LABEL_103;
      case 2u:
        uint64_t v16 = PBReaderReadString(a2);
        uint64_t v14 = objc_claimAutoreleasedReturnValue(v16);
        uint64_t v15 = 80LL;
        goto LABEL_103;
      case 3u:
        uint64_t v17 = PBReaderReadString(a2);
        uint64_t v14 = objc_claimAutoreleasedReturnValue(v17);
        uint64_t v15 = 40LL;
        goto LABEL_103;
      case 4u:
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0LL;
        a1[128] |= 1u;
        while (2)
        {
          unint64_t v21 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v21 == -1LL || v21 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v22 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v21);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v21 + 1;
            v20 |= (unint64_t)(v22 & 0x7F) << v18;
            if (v22 < 0)
            {
              v18 += 7;
              BOOL v9 = v19++ >= 9;
              if (v9)
              {
                LODWORD(v20) = 0;
                goto LABEL_107;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v20) = 0;
        }
LABEL_107:
        uint64_t v65 = 88LL;
        goto LABEL_112;
      case 5u:
        char v23 = 0;
        unsigned int v24 = 0;
        uint64_t v20 = 0LL;
        a1[128] |= 2u;
        while (2)
        {
          unint64_t v25 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v25 == -1LL || v25 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v26 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v25);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v25 + 1;
            v20 |= (unint64_t)(v26 & 0x7F) << v23;
            if (v26 < 0)
            {
              v23 += 7;
              BOOL v9 = v24++ >= 9;
              if (v9)
              {
                LODWORD(v20) = 0;
                goto LABEL_111;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v20) = 0;
        }
LABEL_111:
        uint64_t v65 = 92LL;
LABEL_112:
        *(_DWORD *)&a1[v65] = v20;
        goto LABEL_134;
      case 6u:
        char v27 = 0;
        unsigned int v28 = 0;
        uint64_t v29 = 0LL;
        a1[128] |= 8u;
        while (2)
        {
          unint64_t v30 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v30 == -1LL || v30 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v31 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v30);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v30 + 1;
            v29 |= (unint64_t)(v31 & 0x7F) << v27;
            if (v31 < 0)
            {
              v27 += 7;
              BOOL v9 = v28++ >= 9;
              if (v9)
              {
                uint64_t v29 = 0LL;
                goto LABEL_116;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v29 = 0LL;
        }
LABEL_116:
        BOOL v66 = v29 != 0;
        uint64_t v67 = 121LL;
        goto LABEL_133;
      case 7u:
        char v32 = 0;
        unsigned int v33 = 0;
        uint64_t v34 = 0LL;
        a1[128] |= 4u;
        while (2)
        {
          unint64_t v35 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v35 == -1LL || v35 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v36 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v35);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v35 + 1;
            v34 |= (unint64_t)(v36 & 0x7F) << v32;
            if (v36 < 0)
            {
              v32 += 7;
              BOOL v9 = v33++ >= 9;
              if (v9)
              {
                uint64_t v34 = 0LL;
                goto LABEL_120;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v34 = 0LL;
        }
LABEL_120:
        BOOL v66 = v34 != 0;
        uint64_t v67 = 120LL;
        goto LABEL_133;
      case 8u:
        char v37 = 0;
        unsigned int v38 = 0;
        uint64_t v39 = 0LL;
        a1[128] |= 0x10u;
        while (2)
        {
          unint64_t v40 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v40 == -1LL || v40 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v41 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v40);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v40 + 1;
            v39 |= (unint64_t)(v41 & 0x7F) << v37;
            if (v41 < 0)
            {
              v37 += 7;
              BOOL v9 = v38++ >= 9;
              if (v9)
              {
                uint64_t v39 = 0LL;
                goto LABEL_124;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v39 = 0LL;
        }
LABEL_124:
        BOOL v66 = v39 != 0;
        uint64_t v67 = 122LL;
        goto LABEL_133;
      case 9u:
        char v42 = 0;
        unsigned int v43 = 0;
        uint64_t v44 = 0LL;
        a1[128] |= 0x40u;
        while (2)
        {
          unint64_t v45 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v45 == -1LL || v45 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v46 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v45);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v45 + 1;
            v44 |= (unint64_t)(v46 & 0x7F) << v42;
            if (v46 < 0)
            {
              v42 += 7;
              BOOL v9 = v43++ >= 9;
              if (v9)
              {
                uint64_t v44 = 0LL;
                goto LABEL_128;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v44 = 0LL;
        }
LABEL_128:
        BOOL v66 = v44 != 0;
        uint64_t v67 = 124LL;
        goto LABEL_133;
      case 0xAu:
        uint64_t v47 = PBReaderReadString(a2);
        uint64_t v14 = objc_claimAutoreleasedReturnValue(v47);
        uint64_t v15 = 112LL;
        goto LABEL_103;
      case 0xBu:
        uint64_t v48 = PBReaderReadString(a2);
        uint64_t v14 = objc_claimAutoreleasedReturnValue(v48);
        uint64_t v15 = 96LL;
        goto LABEL_103;
      case 0xCu:
        uint64_t v49 = PBReaderReadString(a2);
        unsigned int v50 = (CSDMessagingLabeledHandle *)objc_claimAutoreleasedReturnValue(v49);
        if (v50) {
          [a1 addHandoffIdentifier:v50];
        }
        goto LABEL_101;
      case 0xDu:
        if (v11 == 2)
        {
          uint64_t result = PBReaderPlaceMark(a2, v74);
          if (!(_DWORD)result) {
            return result;
          }
          while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length)
               && !*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error))
          {
            char v52 = 0;
            unsigned int v53 = 0;
            uint64_t v54 = 0LL;
            while (1)
            {
              unint64_t v55 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
              if (v55 == -1LL || v55 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
                break;
              }
              char v56 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v55);
              *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v55 + 1;
              v54 |= (unint64_t)(v56 & 0x7F) << v52;
              if ((v56 & 0x80) == 0) {
                goto LABEL_81;
              }
              v52 += 7;
              BOOL v9 = v53++ >= 9;
              if (v9)
              {
                uint64_t v57 = 0LL;
                goto LABEL_84;
              }
            }

            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_81:
            if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
              uint64_t v57 = 0LL;
            }
            else {
              uint64_t v57 = v54;
            }
LABEL_84:
            PBRepeatedUInt32Add(a1 + 8, v57);
          }

          PBReaderRecallMark(a2, v74);
        }

        else
        {
          char v68 = 0;
          unsigned int v69 = 0;
          uint64_t v70 = 0LL;
          while (1)
          {
            unint64_t v71 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            if (v71 == -1LL || v71 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
              break;
            }
            char v72 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v71);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v71 + 1;
            v70 |= (unint64_t)(v72 & 0x7F) << v68;
            if ((v72 & 0x80) == 0) {
              goto LABEL_145;
            }
            v68 += 7;
            BOOL v9 = v69++ >= 9;
            if (v9)
            {
              uint64_t v73 = 0LL;
              goto LABEL_148;
            }
          }

          *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_145:
          if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
            uint64_t v73 = 0LL;
          }
          else {
            uint64_t v73 = v70;
          }
LABEL_148:
          PBRepeatedUInt32Add(a1 + 8, v73);
        }

        goto LABEL_134;
      case 0xEu:
        unsigned int v50 = objc_alloc_init(&OBJC_CLASS___CSDMessagingLabeledHandle);
        [a1 addEmergencyLabeledHandles:v50];
        goto LABEL_100;
      case 0xFu:
        char v58 = 0;
        unsigned int v59 = 0;
        uint64_t v60 = 0LL;
        a1[128] |= 0x20u;
        while (2)
        {
          unint64_t v61 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v61 == -1LL || v61 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v62 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v61);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v61 + 1;
            v60 |= (unint64_t)(v62 & 0x7F) << v58;
            if (v62 < 0)
            {
              v58 += 7;
              BOOL v9 = v59++ >= 9;
              if (v9)
              {
                uint64_t v60 = 0LL;
                goto LABEL_132;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v60 = 0LL;
        }
LABEL_132:
        BOOL v66 = v60 != 0;
        uint64_t v67 = 123LL;
LABEL_133:
        a1[v67] = v66;
        goto LABEL_134;
      case 0x10u:
        unsigned int v50 = objc_alloc_init(&OBJC_CLASS___CSDMessagingSenderIdentity);
        [a1 addPrioritizedSenderIdentities:v50];
        goto LABEL_100;
      case 0x11u:
        unsigned int v50 = objc_alloc_init(&OBJC_CLASS___CSDMessagingHandle);
        [a1 addEmergencyHandles:v50];
        if (PBReaderPlaceMark(a2, v74) && (sub_10004A748((uint64_t)v50, a2) & 1) != 0)
        {
LABEL_100:
          PBReaderRecallMark(a2, v74);
LABEL_101:

LABEL_134:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }

LABEL_73:
    uint64_t v16 = 0;
    goto LABEL_74;
  }

  if ((v4[128] & 0x20) != 0) {
    goto LABEL_73;
  }
LABEL_67:
  prioritizedSenderIdentities = self->_prioritizedSenderIdentities;
  if ((unint64_t)prioritizedSenderIdentities | *((void *)v4 + 13)
    && !-[NSMutableArray isEqual:](prioritizedSenderIdentities, "isEqual:"))
  {
    goto LABEL_73;
  }

  emergencyHandles = self->_emergencyHandles;
  if ((unint64_t)emergencyHandles | *((void *)v4 + 6))
  {
  }

  bundleIdentifier = self->_bundleIdentifier;
  else {
    uint64_t v16 = 1;
  }
LABEL_74:

  return v16;
}

  uint64_t v51 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  self->_protoNeedsManualInCallSounds));
  [v4 setObject:v51 forKey:@"protoNeedsManualInCallSounds"];

  uint64_t v14 = self->_has;
  if ((*(_BYTE *)&v14 & 0x10) == 0)
  {
LABEL_23:
    if ((*(_WORD *)&v14 & 0x100) == 0) {
      goto LABEL_24;
    }
    goto LABEL_75;
  }

  PBDataWriterWriteBOOLField(v5, self->_protoEmergency, 16LL);
  if ((*(_DWORD *)&self->_has & 0x400) != 0) {
LABEL_25:
  }
    PBDataWriterWriteBOOLField(v5, self->_protoHasSentInvitation, 17LL);
LABEL_26:
  handle = self->_handle;
  if (handle) {
    PBDataWriterWriteSubmessage(v5, handle, 18LL);
  }
  if ((*((_BYTE *)&self->_has + 1) & 0x20) != 0) {
    PBDataWriterWriteBOOLField(v5, self->_protoSOS, 19LL);
  }
  protoProvider = self->_protoProvider;
  if (protoProvider) {
    PBDataWriterWriteSubmessage(v5, protoProvider, 20LL);
  }
  uint64_t v15 = self->_has;
  if ((*(_DWORD *)&v15 & 0x80000) != 0)
  {
    PBDataWriterWriteBOOLField(v5, self->_protoVideo, 21LL);
    uint64_t v15 = self->_has;
  }

  if ((*(_DWORD *)&v15 & 0x40000) != 0) {
    PBDataWriterWriteBOOLField(v5, self->_protoUplinkMuted, 22LL);
  }
  protoCallModel = self->_protoCallModel;
  if (protoCallModel) {
    PBDataWriterWriteSubmessage(v5, protoCallModel, 23LL);
  }
  localSenderIdentityUUIDuint64_t String = self->_localSenderIdentityUUIDString;
  if (localSenderIdentityUUIDString) {
    PBDataWriterWriteStringField(v5, localSenderIdentityUUIDString, 24LL);
  }
  unint64_t v30 = 0u;
  char v31 = 0u;
  unsigned int v28 = 0u;
  uint64_t v29 = 0u;
  char v18 = self->_remoteParticipantHandles;
  unsigned int v19 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v18,  "countByEnumeratingWithState:objects:count:",  &v28,  v32,  16LL);
  if (v19)
  {
    uint64_t v20 = v19;
    unint64_t v21 = *(void *)v29;
    do
    {
      char v22 = 0LL;
      do
      {
        if (*(void *)v29 != v21) {
          objc_enumerationMutation(v18);
        }
        PBDataWriterWriteSubmessage(v5, *(void *)(*((void *)&v28 + 1) + 8LL * (void)v22), 25LL);
        char v22 = (char *)v22 + 1;
      }

      while (v20 != v22);
      uint64_t v20 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v18,  "countByEnumeratingWithState:objects:count:",  &v28,  v32,  16LL);
    }

    while (v20);
  }

  localSenderIdentityAccountUUIDuint64_t String = self->_localSenderIdentityAccountUUIDString;
  if (localSenderIdentityAccountUUIDString) {
    PBDataWriterWriteStringField(v5, localSenderIdentityAccountUUIDString, 26LL);
  }
  unsigned int v24 = self->_has;
  if ((*(_BYTE *)&v24 & 0x40) != 0)
  {
    PBDataWriterWriteUint32Field(v5, self->_protoTTYType, 27LL);
    unsigned int v24 = self->_has;
  }

  if ((*(_DWORD *)&v24 & 0x20000) != 0) {
    PBDataWriterWriteBOOLField(v5, self->_protoSupportsTTYWithVoice, 28LL);
  }
  isoCountryCode = self->_isoCountryCode;
  if (isoCountryCode) {
    PBDataWriterWriteStringField(v5, isoCountryCode, 29LL);
  }
  char v26 = self->_has;
  if ((*(_BYTE *)&v26 & 4) != 0)
  {
    PBDataWriterWriteUint32Field(v5, self->_protoOriginatingUIType, 30LL);
    char v26 = self->_has;
    if ((*(_WORD *)&v26 & 0x200) == 0)
    {
LABEL_57:
      if ((*(_DWORD *)&v26 & 0x10000) == 0) {
        goto LABEL_59;
      }
      goto LABEL_58;
    }
  }

  else if ((*(_WORD *)&v26 & 0x200) == 0)
  {
    goto LABEL_57;
  }

  PBDataWriterWriteBOOLField(v5, self->_protoFailureExpected, 31LL);
  if ((*(_DWORD *)&self->_has & 0x10000) != 0) {
LABEL_58:
  }
    PBDataWriterWriteBOOLField(v5, self->_protoSupportsEmergencyFallback, 32LL);
LABEL_59:
  groupUUIDuint64_t String = self->_groupUUIDString;
  if (groupUUIDString) {
    PBDataWriterWriteStringField(v5, groupUUIDString, 33LL);
  }
  if ((*((_BYTE *)&self->_has + 1) & 0x80) != 0) {
    PBDataWriterWriteBOOLField(v5, self->_protoSupportsDTMFUpdates, 34LL);
  }
}

  unsigned int v50 = v3;

  return v50;
}

      [v12 resetClientCallProvisionalStates];
      goto LABEL_41;
    }

    if (os_log_type_enabled(v73, OS_LOG_TYPE_ERROR)) {
      sub_1002BAA80();
    }

    unint64_t v45 = v11;
    char v46 = 513LL;
LABEL_38:
    [v45 setProviderFailureReasonIfNecessary:v46];
    goto LABEL_39;
  }

  BOOL v66 = objc_opt_class(&OBJC_CLASS___CXPlayDTMFCallAction, v56);
  if ((objc_opt_isKindOfClass(v10, v66) & 1) != 0)
  {
    uint64_t v16 = (os_log_s *)v10;
    char v68 = -[os_log_s state](v16, "state");
    unsigned int v69 = sub_1001704C4();
    uint64_t v70 = (os_log_s *)objc_claimAutoreleasedReturnValue(v69);
    unint64_t v71 = v70;
    if (v68 == (id)1)
    {
      if (os_log_type_enabled(v70, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)char v106 = 138412290;
        *(void *)&v106[4] = v16;
        _os_log_impl( (void *)&_mh_execute_header,  v71,  OS_LOG_TYPE_DEFAULT,  "Play DTMF call action fulfilled: %@",  v106,  0xCu);
      }
    }

    else if (os_log_type_enabled(v70, OS_LOG_TYPE_ERROR))
    {
      sub_1002BAB7C();
    }

    if (-[os_log_s type](v16, "type") == (id)2 || -[os_log_s type](v16, "type") == (id)3) {
      [v11 dequeueNextPauseDigits];
    }
    goto LABEL_41;
  }

  uint64_t v74 = objc_opt_class(&OBJC_CLASS___CXSetSendingVideoCallAction, v67);
  if ((objc_opt_isKindOfClass(v10, v74) & 1) != 0)
  {
    uint64_t v16 = (os_log_s *)v10;
    unint64_t v76 = -[os_log_s state](v16, "state");
    char v77 = sub_1001704C4();
    uint64_t v78 = (os_log_s *)objc_claimAutoreleasedReturnValue(v77);
    unint64_t v25 = v78;
    if (v76 == (id)1)
    {
      if (os_log_type_enabled(v78, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)char v106 = 138412290;
        *(void *)&v106[4] = v16;
        _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v25,  OS_LOG_TYPE_DEFAULT,  "Set sending video call action fulfilled: %@",  v106,  0xCu);
      }

      objc_msgSend(v11, "setSendingVideo:", -[os_log_s isSendingVideo](v16, "isSendingVideo"));
      goto LABEL_41;
    }

    if (os_log_type_enabled(v78, OS_LOG_TYPE_ERROR)) {
      sub_1002BABDC();
    }
    goto LABEL_17;
  }

  unint64_t v79 = objc_opt_class(&OBJC_CLASS___CXSetMutedCallAction, v75);
  if ((objc_opt_isKindOfClass(v10, v79) & 1) != 0)
  {
    uint64_t v16 = (os_log_s *)v10;
    unint64_t v81 = -[os_log_s state](v16, "state");
    char v82 = sub_1001704C4();
    unsigned int v83 = (os_log_s *)objc_claimAutoreleasedReturnValue(v82);
    uint64_t v84 = v83;
    if (v81 == (id)1)
    {
      if (os_log_type_enabled(v83, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)char v106 = 138412290;
        *(void *)&v106[4] = v16;
        _os_log_impl( (void *)&_mh_execute_header,  v84,  OS_LOG_TYPE_DEFAULT,  "Set muted call action fulfilled: %@",  v106,  0xCu);
      }

      objc_msgSend( v11,  "setUnderlyingUplinkMuted:bottomUpMute:",  -[os_log_s isMuted](v16, "isMuted"),  -[os_log_s isBottomUpMute](v16, "isBottomUpMute"));
    }

    else
    {
      if (os_log_type_enabled(v83, OS_LOG_TYPE_ERROR)) {
        sub_1002BAC3C((uint64_t)v16, v84);
      }
    }

    goto LABEL_41;
  }

  uint64_t v85 = objc_opt_class(&OBJC_CLASS___CXSetTTYTypeCallAction, v80);
  if ((objc_opt_isKindOfClass(v10, v85) & 1) != 0)
  {
    uint64_t v16 = (os_log_s *)v10;
    char v87 = -[os_log_s state](v16, "state");
    char v88 = sub_1001704C4();
    unsigned int v89 = (os_log_s *)objc_claimAutoreleasedReturnValue(v88);
    unint64_t v25 = v89;
    if (v87 == (id)1)
    {
      if (os_log_type_enabled(v89, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)char v106 = 138412290;
        *(void *)&v106[4] = v16;
        _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v25,  OS_LOG_TYPE_DEFAULT,  "Set tty call action fulfilled: %@",  v106,  0xCu);
      }

      objc_msgSend(v11, "setTtyType:", sub_1000A1614((uint64_t)-[os_log_s ttyType](v16, "ttyType")));
      goto LABEL_41;
    }

    if (os_log_type_enabled(v89, OS_LOG_TYPE_ERROR)) {
      sub_1002BACF8();
    }
    goto LABEL_17;
  }

  uint64_t v90 = objc_opt_class(&OBJC_CLASS___CXSetRelayingCallAction, v86);
  if ((objc_opt_isKindOfClass(v10, v90) & 1) == 0)
  {
    char v94 = objc_opt_class(&OBJC_CLASS___CXSetScreeningCallAction, v91);
    if ((objc_opt_isKindOfClass(v10, v94) & 1) != 0)
    {
      uint64_t v16 = (os_log_s *)v10;
      uint64_t v96 = -[os_log_s state](v16, "state");
      uint64_t v97 = sub_1001704C4();
      unint64_t v98 = (os_log_s *)objc_claimAutoreleasedReturnValue(v97);
      unint64_t v25 = v98;
      if (v96 == (id)1)
      {
        if (os_log_type_enabled(v98, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)char v106 = 138412290;
          *(void *)&v106[4] = v16;
          _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v25,  OS_LOG_TYPE_DEFAULT,  "Set screening call action fulfilled: %@",  v106,  0xCu);
        }

        objc_msgSend(v11, "setScreening:", -[os_log_s isScreening](v16, "isScreening"));
        goto LABEL_41;
      }

      if (os_log_type_enabled(v98, OS_LOG_TYPE_ERROR)) {
        sub_1002BAD58();
      }
      goto LABEL_17;
    }

    char v99 = objc_opt_class(&OBJC_CLASS___CXSetAllowUplinkAudioInjectionAction, v95);
    if ((objc_opt_isKindOfClass(v10, v99) & 1) != 0)
    {
      uint64_t v16 = (os_log_s *)v10;
      uint64_t v100 = -[os_log_s state](v16, "state");
      char v101 = sub_1001704C4();
      unsigned int v102 = (os_log_s *)objc_claimAutoreleasedReturnValue(v101);
      unint64_t v25 = v102;
      if (v100 == (id)1)
      {
        if (os_log_type_enabled(v102, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)char v106 = 138412290;
          *(void *)&v106[4] = v16;
          _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v25,  OS_LOG_TYPE_DEFAULT,  "Allow audio injection action fulfilled: %@",  v106,  0xCu);
        }

        objc_msgSend(v11, "setInjectingAudio:", -[os_log_s willInject](v16, "willInject"));
        goto LABEL_41;
      }

      if (os_log_type_enabled(v102, OS_LOG_TYPE_ERROR)) {
        sub_1002BADB8();
      }
      goto LABEL_17;
    }

    uint64_t v103 = [v10 state];
    unint64_t v104 = sub_1001704C4();
    char v105 = (os_log_s *)objc_claimAutoreleasedReturnValue(v104);
    uint64_t v16 = v105;
    if (v103 != (id)1)
    {
      if (os_log_type_enabled(v105, OS_LOG_TYPE_ERROR)) {
        sub_1002BAE18();
      }
      goto LABEL_41;
    }

    if (!os_log_type_enabled(v105, OS_LOG_TYPE_DEFAULT))
    {
LABEL_41:

      goto LABEL_42;
    }

    *(_DWORD *)char v106 = 138412290;
    *(void *)&v106[4] = v10;
    char v93 = "Action fulfilled: %@";
LABEL_132:
    _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, v93, v106, 0xCu);
    goto LABEL_41;
  }

  if ([v10 state] == (id)2)
  {
    unint64_t v92 = sub_1001704C4();
    uint64_t v16 = (os_log_s *)objc_claimAutoreleasedReturnValue(v92);
    if (!os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_41;
    }
    *(_DWORD *)char v106 = 138412290;
    *(void *)&v106[4] = v10;
    char v93 = "Set relaying call action failed: %@";
    goto LABEL_132;
  }

          if ((v63 & 1) != 0) {
            goto LABEL_134;
          }
          unint64_t v71 = &v38[2 * v40];
          uint64_t v73 = *v71;
          char v72 = v71[1];
          uint64_t v51 = __OFSUB__(v72, v73);
          uint64_t v74 = v72 - v73;
          if (v51) {
            goto LABEL_136;
          }
          if (v74 < v62) {
            goto LABEL_90;
          }
LABEL_81:
          unint64_t v79 = v40 - 1;
          if (v40 - 1 >= v37)
          {
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
            goto LABEL_139;
          }

          if (!v9) {
            goto LABEL_152;
          }
          uint64_t v80 = &v38[2 * v79];
          unint64_t v81 = *v80;
          char v82 = &v38[2 * v40];
          unsigned int v83 = v82[1];
          sub_100229E48((char *)(v9 + 16 * *v80), (char *)(v9 + 16LL * *v82), v9 + 16 * v83, v109);
          if (v1)
          {
            uint64_t v96 = v110;
LABEL_107:
            swift_bridgeObjectRelease(v96);
            if (v108 >= -1)
            {
              *(void *)(v107 + 16) = 0LL;
              swift_bridgeObjectRelease(v107);
              return;
            }

  unint64_t v156 = sub_1001B115C(v89, "filteredOutReason");
  char v157 = &v41[OBJC_IVAR____TtC13callservicesd14RTCCSDCallInfo_filteredOutReason];
  *(_DWORD *)char v157 = (_DWORD)v156;
  v157[4] = 0;
  uint64_t v158 = sub_1001B115C((uint64_t)v156, "verificationStatus");
  sub_100235658((uint64_t)v158, OBJC_IVAR____TtC13callservicesd14RTCCSDCallInfo_verficationStatus);
  uint64_t v159 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "tu_defaults");
  char v160 = [v159 silenceUnknownCallersEnabled];

  v41[OBJC_IVAR____TtC13callservicesd14RTCCSDCallInfo_knownCallerStatus] = v160;
  uint64_t v162 = sub_1001B115C(v161, "silencingUserInfo");
  sub_1001B1528();
  sub_100235638((uint64_t)v162, (uint64_t)&type metadata for String, v163, (uint64_t)&protocol witness table for String);
  sub_10022D294();
  char v164 = static String._unconditionallyBridgeFromObjectiveC(_:)(@"CSDCallMetricsReturnedCall");
  sub_1002355B4(v164, v165);
  sub_1002355C0();
  unsigned int v166 = sub_1001B0F5C();
  if (v162)
  {
    sub_1002355A8();
    sub_10022D294();
  }

  else
  {
    unsigned int v28 = 2LL;
  }

  v41[OBJC_IVAR____TtC13callservicesd14RTCCSDCallInfo_returnedCall] = v28;
  uint64_t v167 = sub_1001B115C(v166, "silencingUserInfo");
  sub_100235638((uint64_t)v167, (uint64_t)&type metadata for String, v168, (uint64_t)&protocol witness table for String);
  sub_10022D294();
  char v169 = static String._unconditionallyBridgeFromObjectiveC(_:)(@"CSDCallMetricsSiriSuggested");
  sub_1002355B4(v169, v170);
  sub_1002355C0();
  unsigned int v171 = sub_1001B0F5C();
  if (v167)
  {
    sub_1002355A8();
    sub_10022D294();
  }

  else
  {
    unsigned int v28 = 2LL;
  }

  v41[OBJC_IVAR____TtC13callservicesd14RTCCSDCallInfo_isSiriSuggested] = v28;
  uint64_t v172 = sub_1001B115C(v171, "silencingUserInfo");
  sub_100235638((uint64_t)v172, (uint64_t)&type metadata for String, v173, (uint64_t)&protocol witness table for String);
  sub_10022D294();
  unint64_t v174 = static String._unconditionallyBridgeFromObjectiveC(_:)(@"CSDCallMetricsKnownContact");
  sub_1002355B4(v174, v175);
  sub_1002355C0();
  char v176 = sub_1001B0F5C();
  if (v172)
  {
    sub_1002355A8();
    sub_10022D294();
  }

  else
  {
    unsigned int v28 = 2LL;
  }

  v41[OBJC_IVAR____TtC13callservicesd14RTCCSDCallInfo_isKnownContact] = v28;
  unsigned int v177 = sub_1001B115C(v176, "silencingUserInfo");
  sub_100235638((uint64_t)v177, (uint64_t)&type metadata for String, v178, (uint64_t)&protocol witness table for String);
  sub_10022D294();
  uint64_t v179 = static String._unconditionallyBridgeFromObjectiveC(_:)(@"CSDCallMetricsOwnNumber");
  sub_1002355B4(v179, v180);
  sub_1002355C0();
  char v181 = sub_1001B0F5C();
  if (v177)
  {
    sub_1002355A8();
    sub_10022D294();
  }

  else
  {
    unsigned int v28 = 2LL;
  }

  uint64_t v182 = v246;
  v41[OBJC_IVAR____TtC13callservicesd14RTCCSDCallInfo_isOwnNumber] = v28;
  uint64_t v183 = sub_1001B115C(v181, "silencingUserInfo");
  sub_100235638((uint64_t)v183, (uint64_t)&type metadata for String, v184, (uint64_t)&protocol witness table for String);
  sub_10022D294();
  char v185 = static String._unconditionallyBridgeFromObjectiveC(_:)(@"CSDCallMetricsVerifiedAppleCare");
  uint64_t v187 = v186;
  uint64_t v188 = (void *)sub_1001CA024(v185, v186, v28);
  swift_bridgeObjectRelease(v187);
  unint64_t v189 = sub_1001B0F5C();
  if (v188)
  {
    char v190 = [v188 BOOLValue];
  }

  else
  {
    char v190 = 2;
  }

  uint64_t v192 = (uint64_t)v244;
  uint64_t v191 = v245;
  v41[OBJC_IVAR____TtC13callservicesd14RTCCSDCallInfo_isVerifiedAppleCare] = v190;
  uint64_t v193 = sub_1001B115C(v189, "junkConfidence");
  v194 = sub_100235658((uint64_t)v193, OBJC_IVAR____TtC13callservicesd14RTCCSDCallInfo_junkConfidence);
  uint64_t v195 = sub_1001B115C(v194, "identificationCategory");
  BOOL v196 = sub_100235658((uint64_t)v195, OBJC_IVAR____TtC13callservicesd14RTCCSDCallInfo_identificationCategory);
  uint64_t v197 = sub_1001B115C(v196, "isKnownCaller");
  v41[OBJC_IVAR____TtC13callservicesd14RTCCSDCallInfo_isKnownCaller] = (_BYTE)v197;
  uint64_t v198 = sub_1001B115C((uint64_t)v197, "imageURL");
  if (v198)
  {
    v199 = v198;
    v200 = v238;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v198);

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v240 + 32))(v192, v200, v182);
    v201 = 1LL;
    sub_1001BB544(v192, 0LL);
    v202 = sub_1001AB0AC(v192, 1LL, v182);
    if ((_DWORD)v202 != 1)
    {
      sub_1001D9348(v202, (uint64_t *)&unk_100447DE0);
      v41[OBJC_IVAR____TtC13callservicesd14RTCCSDCallInfo_brandedCall] = 1;
      v204 = sub_1001B115C(v203, "imageURL");
      if (v204)
      {
        v205 = v204;
        static URL._unconditionallyBridgeFromObjectiveC(_:)(v204);

        v201 = 0LL;
      }

      sub_1001BB544(v191, v201);
      v206 = (uint64_t)v229;
      sub_1001F7DD4(v191, (uint64_t)v229, (uint64_t *)&unk_100447DE0);
      v207 = sub_1001AB0AC(v206, 1LL, v182);
      if ((_DWORD)v207 == 1)
      {
        sub_1001D9348(v207, (uint64_t *)&unk_100447DE0);
        v209 = 0;
      }

      else
      {
        v213 = URL.relativePath.getter();
        v215 = v214;
        (*(void (**)(uint64_t, uint64_t))(v240 + 8))(v206, v182);
        v216 = v213 == 0x6B636F74732FLL && v215 == 0xE600000000000000LL;
        if (v216)
        {
          v208 = swift_bridgeObjectRelease(0xE600000000000000LL);
          v209 = 1;
        }

        else
        {
          v209 = _stringCompareWithSmolCheck(_:_:expecting:)(v213, v215, 0x6B636F74732FLL, 0xE600000000000000LL, 0LL);
          v208 = swift_bridgeObjectRelease(v215);
        }
      }

      goto LABEL_96;
    }
  }

  else
  {
    v202 = sub_1001BB544(v192, 1LL);
  }

  sub_1001D9348(v202, (uint64_t *)&unk_100447DE0);
  v209 = 0;
  v41[OBJC_IVAR____TtC13callservicesd14RTCCSDCallInfo_brandedCall] = 0;
LABEL_96:
  v41[OBJC_IVAR____TtC13callservicesd14RTCCSDCallInfo_brandedCallWithImage] = v209 & 1;
  v210 = (uint64_t)sub_1001B115C(v208, "wasScreened");
  if ((_DWORD)v210)
  {
    v210 = (uint64_t)sub_1001B115C(v210, "isScreening");
    v211 = v210 ^ 1;
  }

  else
  {
    v211 = 0;
  }

  v212 = v243;
  v41[OBJC_IVAR____TtC13callservicesd14RTCCSDCallInfo_screenedThenAnswered] = v211;
  v41[OBJC_IVAR____TtC13callservicesd14RTCCSDCallInfo_screenedUnanswered] = sub_1001B115C( v210,  "isScreening");

  v251.receiver = v41;
  v251.super_class = v212;
  objc_msgSendSuper2(&v251, "init");

  swift_bridgeObjectRelease(v253);
  sub_1001B5D3C((uint64_t)v241, v242);
}

    swift_once(&qword_100446940, sub_100258A50);
    goto LABEL_8;
  }

  uint64_t v191 = v40;
  uint64_t v193 = a2;
  memcpy(v221, v220, 0x99uLL);
  uint64_t v57 = [*(id *)(v6 + 96) nonInterruptingCalls];
  if ((_DWORD)v57)
  {
    char v58 = sub_1001F0E20((uint64_t)v57, "status");
    if ((_DWORD)v58 == 4 && (sub_1001F0E20((uint64_t)v58, "hasAudioInterruption") & 1) == 0)
    {
      unsigned int v59 = *(void *)(v6 + 64);
      uint64_t v60 = *(void *)(v6 + 72);
      unint64_t v61 = sub_1001B204C((void *)(v6 + 40), v59);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v60 + 48))(v59, v60) & 1) != 0)
      {
        if (qword_100446940 != -1) {
          swift_once(&qword_100446940, sub_100258A50);
        }
        char v62 = sub_1001B0E98();
        sub_1001B0D98(v62, (uint64_t)qword_1004541E0);
        uint64_t v63 = sub_10027E0CC();
        sub_10022D0E8();
        uint64_t v64 = sub_1001B105C();
        if (sub_1001BB5B0(v64))
        {
          uint64_t v65 = sub_1001B0E78(12LL);
          BOOL v66 = sub_1001B0E78(32LL);
          v213 = v66;
          sub_10027E0B8(4.8149e-34);
          char v68 = sub_1001B115C(v67, "uniqueProxyIdentifier");
          static String._unconditionallyBridgeFromObjectiveC(_:)(v68);
          sub_10027E0AC();
          v216 = a2;
          v217[0] = 12LL;
          unsigned int v69 = String.init<A>(reflecting:)(&v216, &type metadata for String);
          v216 = sub_1001D7CF0(v69, v70, &v213);
          sub_10027E098((uint64_t)&v216, (uint64_t)v217);

          sub_1001B0EC0();
          sub_1002111C4( (void *)&_mh_execute_header,  v71,  v72,  "Other session requested no ringtone interruption, ending currentDescriptor(context:) method for call with un ique proxy identifier %s");
          sub_1002111F8();
          sub_1001B0E60(v66);
          sub_1001B0E60(v65);

          sub_10027E04C();
        }

        else
        {

          sub_10027E04C();
        }

        goto LABEL_27;
      }
    }
  }

  BOOL v196 = (unsigned __int8 *)v6;
  v209 = v5;
  uint64_t v73 = v211;
  uint64_t v74 = (uint64_t)v209 + v211[5];
  uint64_t v75 = type metadata accessor for AudioInterruptionDeferredEndDescriptor(0LL);
  sub_1001A9670(v74, 1LL, 1LL, v75);
  unint64_t v76 = (uint64_t)v209 + v73[6];
  unint64_t v189 = type metadata accessor for RingtoneDescriptor(0LL);
  char v190 = v76;
  sub_10027E070(v76, v77, v78, v189);
  unint64_t v79 = (uint64_t)v209 + v73[7];
  v194 = sub_1001AFF14(&qword_100447FC0);
  sub_1001A9670(v79, 1LL, 2LL, v194);
  uint64_t v80 = (void *)v73[8];
  *((_BYTE *)v80 + (void)v209) = 1;
  unint64_t v81 = v73[9];
  char v82 = v209;
  uint64_t v195 = v81;
  *((_BYTE *)v209 + v81) = 1;
  memcpy(v82, v221, 0x99uLL);
  sub_10027D948((uint64_t)v218, (uint64_t)&v216);
  unsigned int v83 = sub_1001DE884((uint64_t)&v216);
  uint64_t v84 = (uint64_t)sub_10027BD68(v83);
  if ((v84 & 1) != 0)
  {
    uint64_t v85 = sub_1001F0E20(v84, "uniqueProxyIdentifierUUID");
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v85);

    unint64_t v86 = sub_10027E07C();
    sub_1001A9670(v86, v87, v88, v75);
    sub_10027DA3C((uint64_t)v4, v74, &qword_100447488);
  }

  unsigned int v89 = v196;
  uint64_t v192 = v196[88];
  if (v192 == 1)
  {
    uint64_t v90 = sub_1001F0E20(v84, "provider");
    uint64_t v91 = [v90 supportsRinging];

    if (v91)
    {
      uint64_t v84 = (uint64_t)sub_1001F0E20(v84, "status");
      if ((_DWORD)v84 == 4)
      {
        uint64_t v84 = (uint64_t)sub_1001F0E20(v84, "shouldSuppressRingtone");
        if ((v84 & 1) == 0)
        {
          unint64_t v92 = [v191 hasInEarRouteInTipiWithAndSmartRoutedToCompanionWatch];
          if ((_DWORD)v92)
          {
            char v93 = sub_1001F0E20((uint64_t)v92, "provider");
            char v94 = [v93 isSystemProvider];
          }

          else
          {
            char v94 = 0;
          }

          unsigned int v95 = v198;
          sub_10027401C(v45, v94, v198);
          uint64_t v96 = sub_10027E07C();
          sub_1001A9670(v96, v97, v98, v189);
          sub_10027DA3C((uint64_t)v95, v190, (uint64_t *)&unk_10044B7B0);
        }
      }
    }
  }

  if (a1)
  {
    uint64_t v198 = v80;
    char v99 = a1;
    uint64_t v100 = v207;
    sub_1001D956C(v99, v193, v207);
    sub_10027D9F8(v100, v79);
    char v101 = v208;
    sub_1001DBD08(v79, v208, type metadata accessor for SoundDescriptorAction);
    if (sub_1001AB0AC(v101, 2LL, v194))
    {

      unsigned int v102 = type metadata accessor for SoundDescriptorAction;
      uint64_t v103 = v101;
LABEL_35:
      sub_10020E8B0(v103, v102);
LABEL_55:
      uint64_t v80 = v198;
      goto LABEL_56;
    }

    v207 = v79;
    unint64_t v104 = (uint64_t *)v206;
    sub_1001DBCDC(v101, v206, type metadata accessor for SoundDescriptor);
    char v105 = *v104;
    char v106 = (uint64_t *)v202;
    sub_10027E01C((uint64_t)v104);
    if (v105 == 8)
    {
      sub_1002727F4((uint64_t)v106);
      unsigned int v107 = (uint64_t *)v203;
      sub_10027E08C((uint64_t)v104);
      uint64_t v108 = (uint64_t *)v204;
    }

    else
    {
      uint64_t v109 = *v106;
      sub_1002727F4((uint64_t)v106);
      unint64_t v110 = (uint64_t *)v203;
      sub_10027E01C((uint64_t)v104);
      char v111 = v109 == 9;
      unsigned int v107 = v110;
      uint64_t v108 = (uint64_t *)v204;
      if (!v111)
      {
        uint64_t v134 = (uint64_t)v107;
        uint64_t v135 = *v107;
        sub_1002727F4(v134);
        sub_10027E01C((uint64_t)v104);
        if (v135 != 13)
        {
          unint64_t v136 = *v108;
          sub_10020E8B0((uint64_t)v108, type metadata accessor for SoundDescriptor);
          if (v136 != 17)
          {
            sub_10020E8B0((uint64_t)v104, type metadata accessor for SoundDescriptor);

            goto LABEL_55;
          }

void sub_10007B570(uint64_t a1)
{
  id v1 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) sessionMessenger]);
  [v1 prepareConnectedSessionsToEnd];
}

void sub_10007B6B4(uint64_t a1)
{
  id v1 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) sessionMessenger]);
  [v1 endEndingSessions];
}

void sub_10007B77C(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) userInfo]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue( [v2 objectForKeyedSubscript:@"CSDRelayConferenceConnectionDidReceiveDataNotificationDataKey"]);

  char v4 = -[CSDMessagingRelayMessage initWithData:]( objc_alloc(&OBJC_CLASS___CSDMessagingRelayMessage),  "initWithData:",  v3);
  if (v4)
  {
    unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
    [v5 timeIntervalSince1970];
    double v7 = v6;
    -[CSDMessagingRelayMessage messageSendTime](v4, "messageSendTime");
    double v9 = v8;

    id v10 = sub_1001704C4();
    int v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) name]);
      int v17 = 138412802;
      char v18 = v12;
      __int16 v19 = 2112;
      uint64_t v20 = v4;
      __int16 v21 = 2048;
      unint64_t v22 = (unint64_t)((v7 - v9) * 1000.0);
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "Handling %@ with message: %@ latency: %llu",  (uint8_t *)&v17,  0x20u);
    }

    unsigned int v13 = -[CSDMessagingRelayMessage type](v4, "type");
    if (v13 == 38)
    {
      uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) commonMessagingDelegate]);
      [v14 handleSetUplinkMutedMessage:v4];
    }

    else if (v13 == 39)
    {
      uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) clientMessagingDelegate]);
      [v14 handleUpdateRemoteUplinkMutedMessageFromHost:v4];
    }

    else
    {
      id v16 = sub_1001704C4();
      uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(v16);
      if (os_log_type_enabled((os_log_t)v14, OS_LOG_TYPE_ERROR)) {
        sub_1002B3AB8(v4, (os_log_s *)v14);
      }
    }
  }

  else
  {
    id v15 = sub_1001704C4();
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(v15);
    if (os_log_type_enabled((os_log_t)v14, OS_LOG_TYPE_ERROR)) {
      sub_1002B3A78((os_log_t)v14);
    }
  }
}

CSDMessagingRelayMessage *sub_10007C430(uint64_t a1)
{
  id v2 = objc_alloc(&OBJC_CLASS___CSDMessagingRelayMessage);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) uniqueProxyIdentifier]);
  char v4 = -[CSDMessagingRelayMessage initWithType:uniqueProxyIdentifier:]( v2,  "initWithType:uniqueProxyIdentifier:",  1LL,  v3);

  unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) handle]);
  -[CSDMessagingRelayMessage setTuHandle:](v4, "setTuHandle:", v5);

  double v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) isoCountryCode]);
  -[CSDMessagingRelayMessage setIsoCountryCode:](v4, "setIsoCountryCode:", v6);

  double v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) provider]);
  -[CSDMessagingRelayMessage setTuProvider:isVideo:]( v4,  "setTuProvider:isVideo:",  v7,  [*(id *)(a1 + 32) isVideo]);

  double v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) sourceIdentifier]);
  -[CSDMessagingRelayMessage setSourceIdentifier:](v4, "setSourceIdentifier:", v8);

  double v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) model]);
  -[CSDMessagingRelayMessage setCallModel:](v4, "setCallModel:", v9);

  id v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) callerNameFromNetwork]);
  -[CSDMessagingRelayMessage setCallerNameFromNetwork:](v4, "setCallerNameFromNetwork:", v10);

  -[CSDMessagingRelayMessage setShouldSuppressRingtone:]( v4,  "setShouldSuppressRingtone:",  [*(id *)(a1 + 32) shouldSuppressRingtone]);
  -[CSDMessagingRelayMessage setNeedsManualInCallSounds:]( v4,  "setNeedsManualInCallSounds:",  [*(id *)(a1 + 32) needsManualInCallSounds]);
  -[CSDMessagingRelayMessage setSoundRegion:](v4, "setSoundRegion:", [*(id *)(a1 + 32) soundRegion]);
  -[CSDMessagingRelayMessage setCannotRelayAudioOrVideoOnPairedDevice:]( v4,  "setCannotRelayAudioOrVideoOnPairedDevice:",  *(unsigned __int8 *)(a1 + 40));
  int v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) displayContext]);
  -[CSDMessagingRelayMessage setDisplayContext:](v4, "setDisplayContext:", v11);

  -[CSDMessagingRelayMessage setFailureExpected:]( v4,  "setFailureExpected:",  [*(id *)(a1 + 32) isFailureExpected]);
  -[CSDMessagingRelayMessage setSupportsEmergencyFallback:]( v4,  "setSupportsEmergencyFallback:",  [*(id *)(a1 + 32) supportsEmergencyFallback]);
  -[CSDMessagingRelayMessage setSupportsDTMFUpdates:]( v4,  "setSupportsDTMFUpdates:",  [*(id *)(a1 + 32) supportsDTMFUpdates]);
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) localSenderIdentityUUID]);
  -[CSDMessagingRelayMessage setLocalSenderIdentityUUID:](v4, "setLocalSenderIdentityUUID:", v12);

  unsigned int v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) localSenderIdentityAccountUUID]);
  -[CSDMessagingRelayMessage setLocalSenderIdentityAccountUUID:](v4, "setLocalSenderIdentityAccountUUID:", v13);

  -[CSDMessagingRelayMessage setRemoteUplinkMuted:]( v4,  "setRemoteUplinkMuted:",  [*(id *)(a1 + 32) isRemoteUplinkMuted]);
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) remoteParticipantHandles]);
  -[CSDMessagingRelayMessage setRemoteParticipantTUHandles:](v4, "setRemoteParticipantTUHandles:", v14);

  -[CSDMessagingRelayMessage setTtyType:](v4, "setTtyType:", [*(id *)(a1 + 32) ttyType]);
  -[CSDMessagingRelayMessage setSupportsTTYWithVoice:]( v4,  "setSupportsTTYWithVoice:",  [*(id *)(a1 + 32) supportsTTYWithVoice]);
  -[CSDMessagingRelayMessage setPriority:](v4, "setPriority:", [*(id *)(a1 + 32) priority]);
  -[CSDMessagingRelayMessage setOriginatingUIType:]( v4,  "setOriginatingUIType:",  [*(id *)(a1 + 32) originatingUIType]);
  id v15 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) callGroupUUID]);
  id v16 = (void *)objc_claimAutoreleasedReturnValue([v15 UUIDString]);
  -[CSDMessagingRelayMessage setGroupUUIDString:](v4, "setGroupUUIDString:", v16);

  int v17 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) imageURL]);
  if (v17)
  {
    char v18 = objc_alloc(&OBJC_CLASS___NSData);
    __int16 v19 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) imageURL]);
    uint64_t v20 = -[NSData initWithContentsOfURL:](v18, "initWithContentsOfURL:", v19);

    -[CSDMessagingRelayMessage setImage:](v4, "setImage:", v20);
    id v21 = sub_1001704C4();
    unint64_t v22 = (os_log_s *)objc_claimAutoreleasedReturnValue(v21);
    if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
    {
      char v23 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) imageURL]);
      int v28 = 138412290;
      uint64_t v29 = v23;
      _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEFAULT,  "(IDSMessaging Host->Client) Sending url to client: %@",  (uint8_t *)&v28,  0xCu);
    }
  }

  unsigned int v24 = (void *)objc_claimAutoreleasedReturnValue(+[CSDRelayIDSService sharedInstance](&OBJC_CLASS___CSDRelayIDSService, "sharedInstance"));
  unsigned int v25 = [v24 pairedDeviceExists];

  if (v25)
  {
    char v26 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) dateCreated]);
    [v26 timeIntervalSince1970];
    -[CSDMessagingRelayMessage setHostCallCreationTime:](v4, "setHostCallCreationTime:");
  }

  return v4;
}

void sub_10007C834(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([*(id *)(a1 + 32) status] != 4)
  {
    id v11 = sub_1001704C4();
    unsigned int v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
    if (!os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_9;
    }
    uint64_t v12 = *(void *)(a1 + 32);
    int v16 = 138412290;
    uint64_t v17 = v12;
    unsigned int v13 = "Not sending out incoming call invitation because call is no longer ringing: %@";
LABEL_8:
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, v13, (uint8_t *)&v16, 0xCu);
    goto LABEL_9;
  }

  if (!v3)
  {
    id v14 = sub_1001704C4();
    unsigned int v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
    if (!os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_9;
    }
    uint64_t v15 = *(void *)(a1 + 32);
    int v16 = 138412290;
    uint64_t v17 = v15;
    unsigned int v13 = "[WARN] Failed to prepare conference for call %@. Not sending incoming call message to relay clients";
    goto LABEL_8;
  }

  uint64_t v4 = (*(uint64_t (**)(void))(*(void *)(a1 + 48) + 16LL))();
  unsigned int v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  double v6 = -[CSDMessagingAVConferenceInviteData initWithRelayInviteDictionary:]( objc_alloc(&OBJC_CLASS___CSDMessagingAVConferenceInviteData),  "initWithRelayInviteDictionary:",  v3);
  -[os_log_s setInviteData:](v5, "setInviteData:", v6);

  double v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) sessionMessenger]);
  double v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) uniqueProxyIdentifier]);
  double v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) provider]);
  id v10 = [*(id *)(a1 + 32) needsConversationRelaySupport];
  [v7 sendMessage:v5 andStartSessionIfNecessaryForIdentifier:v8 toDevicesSupportingProvider:v9 requiresConversationRelay:v10 withTimeout:TUIncomingInvitationTimeout(v10)];

LABEL_9:
}

CSDMessagingRelayMessage *sub_10007CCEC(uint64_t a1)
{
  id v2 = -[CSDMessagingRelayMessage initWithType:]( objc_alloc(&OBJC_CLASS___CSDMessagingRelayMessage),  "initWithType:",  49LL);
  id v3 = -[CSDMessagingConversationRelayMessage initWithConversation:]( objc_alloc(&OBJC_CLASS___CSDMessagingConversationRelayMessage),  "initWithConversation:",  *(void *)(a1 + 32));
  -[CSDMessagingConversationRelayMessage setType:](v3, "setType:", *(unsigned int *)(a1 + 40));
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(-[CSDMessagingRelayMessage conversations](v2, "conversations"));

  if (!v4)
  {
    unsigned int v5 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    -[CSDMessagingRelayMessage setConversations:](v2, "setConversations:", v5);
  }

  double v6 = (void *)objc_claimAutoreleasedReturnValue(-[CSDMessagingRelayMessage conversations](v2, "conversations"));
  [v6 addObject:v3];

  return v2;
}

CSDMessagingRelayMessage *sub_10007CEDC(uint64_t a1)
{
  id v2 = -[CSDMessagingRelayMessage initWithType:]( objc_alloc(&OBJC_CLASS___CSDMessagingRelayMessage),  "initWithType:",  53LL);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) UUID]);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 UUIDString]);
  -[CSDMessagingRelayMessage setConversationUUIDString:](v2, "setConversationUUIDString:", v4);

  unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
  __int128 v14 = 0u;
  __int128 v15 = 0u;
  __int128 v16 = 0u;
  __int128 v17 = 0u;
  double v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "activeRemoteParticipants", 0));
  id v7 = [v6 countByEnumeratingWithState:&v14 objects:v18 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v15;
    do
    {
      id v10 = 0LL;
      do
      {
        if (*(void *)v15 != v9) {
          objc_enumerationMutation(v6);
        }
        id v11 = *(void **)(*((void *)&v14 + 1) + 8LL * (void)v10);
        uint64_t v12 = objc_alloc_init(&OBJC_CLASS___CSDMessagingParticipantProminenceEntry);
        -[CSDMessagingParticipantProminenceEntry setParticipantIdentifier:]( v12,  "setParticipantIdentifier:",  [v11 identifier]);
        -[CSDMessagingParticipantProminenceEntry setAudioPriority:]( v12,  "setAudioPriority:",  [v11 audioPriority]);
        [v5 addObject:v12];

        id v10 = (char *)v10 + 1;
      }

      while (v8 != v10);
      id v8 = [v6 countByEnumeratingWithState:&v14 objects:v18 count:16];
    }

    while (v8);
  }

  -[CSDMessagingRelayMessage setProminenceEntrys:](v2, "setProminenceEntrys:", v5);
  return v2;
}

void sub_10007D4B8(id a1, int a2, BOOL *a3)
{
  *a3 = a2 < 2;
}

void sub_10007F398(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    __int128 v13 = 0u;
    __int128 v14 = 0u;
    __int128 v11 = 0u;
    __int128 v12 = 0u;
    id v4 = *(id *)(a1 + 32);
    id v5 = [v4 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v5)
    {
      id v6 = v5;
      uint64_t v7 = *(void *)v12;
      do
      {
        id v8 = 0LL;
        do
        {
          if (*(void *)v12 != v7) {
            objc_enumerationMutation(v4);
          }
          objc_msgSend(*(id *)(a1 + 40), "addCall:", *(void *)(*((void *)&v11 + 1) + 8 * (void)v8), (void)v11);
          id v8 = (char *)v8 + 1;
        }

        while (v6 != v8);
        id v6 = [v4 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }

      while (v6);
    }

    uint64_t v9 = -[CSDMessagingAVConferenceInviteData initWithRelayInviteDictionary:]( objc_alloc(&OBJC_CLASS___CSDMessagingAVConferenceInviteData),  "initWithRelayInviteDictionary:",  v3);
    [*(id *)(a1 + 40) setInviteData:v9];

    id v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) sessionMessenger]);
    [v10 sendMessage:*(void *)(a1 + 40) andStartSessionIfNecessaryForIdentifiers:*(void *)(a1 + 56) toDestination:*(void *)(a1 + 64) timeout:TUTransferTimeout() completionHandler:0];
  }
}

void sub_10007FF80(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (uint64_t *)(a1 + 32);
  if ([*(id *)(a1 + 32) status] == 3)
  {
    if (v3)
    {
      id v5 = objc_alloc(&OBJC_CLASS___CSDMessagingRelayMessage);
      id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) uniqueProxyIdentifier]);
      uint64_t v7 = -[CSDMessagingRelayMessage initWithType:uniqueProxyIdentifier:]( v5,  "initWithType:uniqueProxyIdentifier:",  2LL,  v6);

      id v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) handle]);
      -[CSDMessagingRelayMessage setTuHandle:](v7, "setTuHandle:", v8);

      uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) isoCountryCode]);
      -[CSDMessagingRelayMessage setIsoCountryCode:](v7, "setIsoCountryCode:", v9);

      id v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) provider]);
      -[CSDMessagingRelayMessage setTuProvider:isVideo:]( v7,  "setTuProvider:isVideo:",  v10,  [*(id *)(a1 + 32) isVideo]);

      __int128 v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) sourceIdentifier]);
      -[CSDMessagingRelayMessage setSourceIdentifier:](v7, "setSourceIdentifier:", v11);

      -[CSDMessagingRelayMessage setCannotRelayAudioOrVideoOnPairedDevice:]( v7,  "setCannotRelayAudioOrVideoOnPairedDevice:",  [*(id *)(a1 + 32) isEndpointOnCurrentDevice] ^ 1);
      -[CSDMessagingRelayMessage setVoicemail:](v7, "setVoicemail:", [*(id *)(a1 + 32) isVoicemail]);
      -[CSDMessagingRelayMessage setEmergency:](v7, "setEmergency:", [*(id *)(a1 + 32) isEmergency]);
      -[CSDMessagingRelayMessage setFailureExpected:]( v7,  "setFailureExpected:",  [*(id *)(a1 + 32) isFailureExpected]);
      -[CSDMessagingRelayMessage setSupportsEmergencyFallback:]( v7,  "setSupportsEmergencyFallback:",  [*(id *)(a1 + 32) supportsEmergencyFallback]);
      -[CSDMessagingRelayMessage setSOS:](v7, "setSOS:", [*(id *)(a1 + 32) isSOS]);
      __int128 v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) localSenderIdentityUUID]);
      -[CSDMessagingRelayMessage setLocalSenderIdentityUUID:](v7, "setLocalSenderIdentityUUID:", v12);

      __int128 v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) localSenderIdentityAccountUUID]);
      -[CSDMessagingRelayMessage setLocalSenderIdentityAccountUUID:](v7, "setLocalSenderIdentityAccountUUID:", v13);

      -[CSDMessagingRelayMessage setTtyType:](v7, "setTtyType:", [*(id *)(a1 + 32) ttyType]);
      -[CSDMessagingRelayMessage setSupportsTTYWithVoice:]( v7,  "setSupportsTTYWithVoice:",  [*(id *)(a1 + 32) supportsTTYWithVoice]);
      -[CSDMessagingRelayMessage setOriginatingUIType:]( v7,  "setOriginatingUIType:",  [*(id *)(a1 + 32) originatingUIType]);
      __int128 v14 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) dialRequest]);
      __int128 v15 = (void *)objc_claimAutoreleasedReturnValue([v14 contactIdentifier]);
      -[CSDMessagingRelayMessage setContactIdentifier:](v7, "setContactIdentifier:", v15);

      __int128 v16 = -[CSDMessagingAVConferenceInviteData initWithRelayInviteDictionary:]( objc_alloc(&OBJC_CLASS___CSDMessagingAVConferenceInviteData),  "initWithRelayInviteDictionary:",  v3);
      -[CSDMessagingRelayMessage setInviteData:](v7, "setInviteData:", v16);

      __int128 v17 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) sessionMessenger]);
      char v18 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) uniqueProxyIdentifier]);
      __int16 v19 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) dialingIDSDestination]);
      uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) provider]);
      objc_msgSend( v17,  "sendMessage:andStartSessionIfNecessaryForIdentifier:toDestination:timeout:completionHandler:",  v7,  v18,  v19,  TUOutgoingInvitationTimeoutForCallProvider(v20, objc_msgSend(*(id *)(a1 + 32), "isVideo")),  *(void *)(a1 + 48));
    }

    else
    {
      id v24 = sub_1001704C4();
      unsigned int v25 = (os_log_s *)objc_claimAutoreleasedReturnValue(v24);
      if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
        sub_1002B3BA0();
      }

      uint64_t v7 = (CSDMessagingRelayMessage *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callCenter]);
      -[CSDMessagingRelayMessage disconnectCall:withReason:]( v7,  "disconnectCall:withReason:",  *(void *)(a1 + 32),  8LL);
    }
  }

  else
  {
    id v21 = sub_1001704C4();
    unint64_t v22 = (os_log_s *)objc_claimAutoreleasedReturnValue(v21);
    if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v23 = *v4;
      int v26 = 138412290;
      uint64_t v27 = v23;
      _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEFAULT,  "Not sending out dial call invitation because call is no longer sending: %@",  (uint8_t *)&v26,  0xCu);
    }
  }
}

void sub_10008051C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (uint64_t *)(a1 + 32);
  if ([*(id *)(a1 + 32) status] == 3)
  {
    if (v3)
    {
      id v5 = objc_alloc(&OBJC_CLASS___CSDMessagingRelayMessage);
      id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) uniqueProxyIdentifier]);
      uint64_t v7 = -[CSDMessagingRelayMessage initWithType:uniqueProxyIdentifier:]( v5,  "initWithType:uniqueProxyIdentifier:",  50LL,  v6);

      id v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) joinConversationRequest]);
      uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v8 URL]);
      id v10 = (void *)objc_claimAutoreleasedReturnValue([v9 absoluteString]);
      -[CSDMessagingRelayMessage setJoinConversationRequestURLString:](v7, "setJoinConversationRequestURLString:", v10);

      __int128 v11 = -[CSDMessagingAVConferenceInviteData initWithRelayInviteDictionary:]( objc_alloc(&OBJC_CLASS___CSDMessagingAVConferenceInviteData),  "initWithRelayInviteDictionary:",  v3);
      -[CSDMessagingRelayMessage setInviteData:](v7, "setInviteData:", v11);

      __int128 v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) sessionMessenger]);
      __int128 v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) uniqueProxyIdentifier]);
      __int128 v14 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) dialingIDSDestination]);
      __int128 v15 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) provider]);
      objc_msgSend( v12,  "sendMessage:andStartSessionIfNecessaryForIdentifier:toDestination:timeout:completionHandler:",  v7,  v13,  v14,  TUOutgoingInvitationTimeoutForCallProvider(v15, objc_msgSend(*(id *)(a1 + 32), "isVideo")),  *(void *)(a1 + 48));
    }

    else
    {
      id v19 = sub_1001704C4();
      uint64_t v20 = (os_log_s *)objc_claimAutoreleasedReturnValue(v19);
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
        sub_1002B3BA0();
      }

      uint64_t v7 = (CSDMessagingRelayMessage *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callCenter]);
      -[CSDMessagingRelayMessage disconnectCall:withReason:]( v7,  "disconnectCall:withReason:",  *(void *)(a1 + 32),  8LL);
    }
  }

  else
  {
    id v16 = sub_1001704C4();
    __int128 v17 = (os_log_s *)objc_claimAutoreleasedReturnValue(v16);
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v18 = *v4;
      int v21 = 138412290;
      uint64_t v22 = v18;
      _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "Not sending out TUJoinConversationRequest invitation because call is no longer sending: %@",  (uint8_t *)&v21,  0xCu);
    }
  }
}

CSDMessagingRelayMessage *sub_100080960(uint64_t a1)
{
  id v2 = objc_alloc(&OBJC_CLASS___CSDMessagingRelayMessage);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) uniqueProxyIdentifier]);
  id v4 = -[CSDMessagingRelayMessage initWithType:uniqueProxyIdentifier:]( v2,  "initWithType:uniqueProxyIdentifier:",  4LL,  v3);

  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) sourceIdentifier]);
  -[CSDMessagingRelayMessage setSourceIdentifier:](v4, "setSourceIdentifier:", v5);

  -[CSDMessagingRelayMessage setWantsHoldMusic:]( v4,  "setWantsHoldMusic:",  [*(id *)(a1 + 32) wantsHoldMusic]);
  -[CSDMessagingRelayMessage setVideo:](v4, "setVideo:", [*(id *)(a1 + 32) isVideo]);
  -[CSDMessagingRelayMessage setCannotRelayAudioOrVideoOnPairedDevice:]( v4,  "setCannotRelayAudioOrVideoOnPairedDevice:",  [*(id *)(a1 + 32) cannotRelayAudioOrVideo]);
  -[CSDMessagingRelayMessage setExpectedEndpointOnMessagingDevice:]( v4,  "setExpectedEndpointOnMessagingDevice:",  [*(id *)(a1 + 32) cannotRelayAudioOrVideo]);
  return v4;
}

void sub_100080A30(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    uint64_t v4 = (*(uint64_t (**)(void))(*(void *)(a1 + 48) + 16LL))();
    id v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
    id v6 = -[CSDMessagingAVConferenceInviteData initWithRelayInviteDictionary:]( objc_alloc(&OBJC_CLASS___CSDMessagingAVConferenceInviteData),  "initWithRelayInviteDictionary:",  v3);
    [v5 setInviteData:v6];

    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) sessionMessenger]);
    id v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) uniqueProxyIdentifier]);
    [v7 sendMessage:v5 andAcceptInvitationIfNecessaryForIdentifier:v8];
  }

  else
  {
    id v9 = sub_1001704C4();
    id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      sub_1002B3C04();
    }

    id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) callCenter]);
    [v5 disconnectCall:*(void *)(a1 + 40) withReason:8];
  }
}

void sub_10008145C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    uint64_t v4 = objc_alloc(&OBJC_CLASS___CSDMessagingRelayMessage);
    id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) uniqueProxyIdentifier]);
    id v6 = -[CSDMessagingRelayMessage initWithType:uniqueProxyIdentifier:]( v4,  "initWithType:uniqueProxyIdentifier:",  19LL,  v5);

    uint64_t v7 = -[CSDMessagingAVConferenceInviteData initWithRelayInviteDictionary:]( objc_alloc(&OBJC_CLASS___CSDMessagingAVConferenceInviteData),  "initWithRelayInviteDictionary:",  v3);
    -[CSDMessagingRelayMessage setInviteData:](v6, "setInviteData:", v7);

    id v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) sessionMessenger]);
    id v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) uniqueProxyIdentifier]);
    [v8 sendMessage:v6 andAcceptInvitationIfNecessaryForIdentifier:v9];

    if ([*(id *)(a1 + 40) _shouldSendToPairedIDSDevice])
    {
      id v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) pairedDeviceMessenger]);
      [v10 sendMessage:v6 completionHandler:0];
    }
  }

  else
  {
    id v11 = sub_1001704C4();
    __int128 v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_1002B3C68();
    }

    id v6 = (CSDMessagingRelayMessage *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callCenter]);
    -[CSDMessagingRelayMessage disconnectCall:withReason:](v6, "disconnectCall:withReason:", *(void *)(a1 + 32), 8LL);
  }
}

void sub_1000816E0(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    uint64_t v4 = objc_alloc(&OBJC_CLASS___CSDMessagingRelayMessage);
    id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) uniqueProxyIdentifier]);
    id v6 = -[CSDMessagingRelayMessage initWithType:uniqueProxyIdentifier:]( v4,  "initWithType:uniqueProxyIdentifier:",  20LL,  v5);

    uint64_t v7 = -[CSDMessagingAVConferenceInviteData initWithRelayInviteDictionary:]( objc_alloc(&OBJC_CLASS___CSDMessagingAVConferenceInviteData),  "initWithRelayInviteDictionary:",  v3);
    -[CSDMessagingRelayMessage setInviteData:](v6, "setInviteData:", v7);

    id v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) sessionMessenger]);
    id v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) uniqueProxyIdentifier]);
    [v8 sendMessage:v6 andAcceptInvitationIfNecessaryForIdentifier:v9];

    if ([*(id *)(a1 + 40) _shouldSendToPairedIDSDevice])
    {
      id v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) pairedDeviceMessenger]);
      [v10 sendMessage:v6 completionHandler:0];
    }
  }

  else
  {
    id v11 = sub_1001704C4();
    __int128 v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_1002B3C68();
    }

    id v6 = (CSDMessagingRelayMessage *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callCenter]);
    -[CSDMessagingRelayMessage disconnectCall:withReason:](v6, "disconnectCall:withReason:", *(void *)(a1 + 32), 8LL);
  }
}

void sub_100081A30(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    uint64_t v4 = objc_alloc(&OBJC_CLASS___CSDMessagingRelayMessage);
    id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) uniqueProxyIdentifier]);
    id v6 = -[CSDMessagingRelayMessage initWithType:uniqueProxyIdentifier:]( v4,  "initWithType:uniqueProxyIdentifier:",  36LL,  v5);

    uint64_t v7 = -[CSDMessagingAVConferenceInviteData initWithRelayInviteDictionary:]( objc_alloc(&OBJC_CLASS___CSDMessagingAVConferenceInviteData),  "initWithRelayInviteDictionary:",  v3);
    -[CSDMessagingRelayMessage setInviteData:](v6, "setInviteData:", v7);

    id v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) sessionMessenger]);
    id v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) uniqueProxyIdentifier]);
    [v8 sendMessage:v6 andAcceptInvitationIfNecessaryForIdentifier:v9];

    if ([*(id *)(a1 + 40) _shouldSendToPairedIDSDevice])
    {
      id v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) pairedDeviceMessenger]);
      [v10 sendMessage:v6 completionHandler:0];
    }
  }

  else
  {
    id v11 = sub_1001704C4();
    __int128 v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_1002B3C68();
    }

    id v6 = (CSDMessagingRelayMessage *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callCenter]);
    -[CSDMessagingRelayMessage disconnectCall:withReason:](v6, "disconnectCall:withReason:", *(void *)(a1 + 32), 8LL);
  }
}

void sub_1000821B0(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    uint64_t v4 = -[CSDMessagingAVConferenceInviteData initWithRelayInviteDictionary:]( objc_alloc(&OBJC_CLASS___CSDMessagingAVConferenceInviteData),  "initWithRelayInviteDictionary:",  v3);
    [*(id *)(a1 + 32) setInviteData:v4];

    id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) sessionMessenger]);
    uint64_t v6 = *(void *)(a1 + 32);
    uint64_t v7 = *(void *)(a1 + 48);
    id v8 = (void *)objc_claimAutoreleasedReturnValue(+[CSDRelayIDSService sharedInstance](&OBJC_CLASS___CSDRelayIDSService, "sharedInstance"));
    id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 pairedDevice]);
    id v10 = (void *)objc_claimAutoreleasedReturnValue([v9 destination]);
    [v5 sendMessage:v6 andStartSessionIfNecessaryForIdentifiers:v7 toDestination:v10 timeout:TUTransferTimeout() completionHandler:0];
  }

  else
  {
    id v11 = sub_1001704C4();
    __int128 v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)__int128 v13 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "[WARN] Failed to prepare conference while pulling calls",  v13,  2u);
    }
  }
}

void sub_100083C64(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v4 = *(void **)(a1 + 32);
  if (a2)
  {
    _[v4 _handleRetrievedLocalInviteDictionary:a3 forMessage:*(void *)(a1 + 40)];
  }

  else
  {
    id v7 = (id)objc_claimAutoreleasedReturnValue([v4 sessionMessenger]);
    id v5 = -[CSDMessagingRelayMessage initWithType:]( objc_alloc(&OBJC_CLASS___CSDMessagingRelayMessage),  "initWithType:",  10LL);
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) uniqueProxyIdentifier]);
    [v7 sendMessage:v5 andCancelOrDeclineInvitationIfNecessaryForIdentifier:v6];
  }

id sub_100083CF4(uint64_t a1, uint64_t a2)
{
  return _[*(id *)(a1 + 32) _handleRetrievedLocalInviteDictionary:a2 forMessage:*(void *)(a1 + 40)];
}

id sub_100083D04(uint64_t a1, uint64_t a2)
{
  return _[*(id *)(a1 + 32) _handleRetrievedLocalInviteDictionary:a2 forMessage:*(void *)(a1 + 40)];
}

BOOL sub_1000845E4(id a1, TUCall *a2)
{
  return -[TUCall isEndpointOnCurrentDevice](a2, "isEndpointOnCurrentDevice");
}

void sub_100085014(uint64_t a1)
{
  id v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _setUpSandbox];
  id v3 = objc_alloc_init(&OBJC_CLASS___TUFeatureFlags);
  [WeakRetained setFeatureFlags:v3];

  uint64_t v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([WeakRetained queue]);
  xpc_set_event_stream_handler("com.apple.notifyd.matching", v4, &stru_1003D8BC0);

  id v5 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([WeakRetained queue]);
  handler[0] = _NSConcreteStackBlock;
  handler[1] = 3221225472LL;
  handler[2] = sub_100085BA8;
  handler[3] = &unk_1003D85D8;
  uint64_t v6 = WeakRetained;
  id v106 = v6;
  xpc_set_event_stream_handler("com.apple.distnoted.matching", v5, handler);

  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v6 queue]);
  xpc_set_event_stream_handler("com.apple.CTTelephonyCenter", v7, &stru_1003D8BE0);

  id v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
  [v6 setSignalHandlerDispatchSources:v8];

  v103[0] = _NSConcreteStackBlock;
  v103[1] = 3221225472LL;
  v103[2] = sub_100085D70;
  v103[3] = &unk_1003D7DF0;
  objc_copyWeak(&v104, v1);
  [v6 _observeSignal:29 usingHandler:v103];
  [v6 _observeSignal:30 usingHandler:&stru_1003D8C00];
  [v6 _observeSignal:31 usingHandler:&stru_1003D8C20];
  id v9 = signal(15, 0LL);
  uint64_t Default = CTTelephonyCenterGetDefault(v9);
  id v11 = sub_1001704C4();
  __int128 v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
  if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    uint64_t v108 = Default;
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "Created call center: %@", buf, 0xCu);
  }

  __int128 v13 = objc_alloc_init(&OBJC_CLASS___TUUserConfiguration);
  __int128 v14 = (void *)objc_claimAutoreleasedReturnValue([v6 queue]);
  -[TUUserConfiguration addDelegate:queue:](v13, "addDelegate:queue:", v6, v14);

  [v6 setUserConfiguration:v13];
  __int128 v15 = objc_alloc(&OBJC_CLASS___CSDVoiceOverObserver);
  id v16 = (void *)objc_claimAutoreleasedReturnValue([v6 queue]);
  __int128 v17 = -[CSDVoiceOverObserver initWithQueue:](v15, "initWithQueue:", v16);
  [v6 setVoiceOverObserver:v17];

  id v18 = +[CSDCallCapabilities sharedInstance](&OBJC_CLASS___CSDCallCapabilities, "sharedInstance");
  id v19 = objc_alloc_init(&OBJC_CLASS___CHManager);
  [v6 setChManager:v19];

  uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([v6 queue]);
  int v21 = (void *)objc_claimAutoreleasedReturnValue( +[CSDReportingController sharedInstanceWithQueue:]( &OBJC_CLASS___CSDReportingController,  "sharedInstanceWithQueue:",  v20));

  uint64_t v22 = objc_alloc(&OBJC_CLASS___CSDCallStateController);
  uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue([v6 queue]);
  id v24 = (void *)objc_claimAutoreleasedReturnValue([v6 chManager]);
  unsigned int v25 = -[CSDCallStateController initWithQueue:chManager:](v22, "initWithQueue:chManager:", v23, v24);
  [v6 setCallStateController:v25];

  int v26 = objc_alloc(&OBJC_CLASS___CSDCallStateMonitor);
  uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue([v6 callStateController]);
  int v28 = (void *)objc_claimAutoreleasedReturnValue([v27 callCenter]);
  uint64_t v29 = -[CSDCallStateMonitor initWithCallCenter:](v26, "initWithCallCenter:", v28);
  [v6 setCallStateMonitor:v29];

  unint64_t v30 = objc_alloc(&OBJC_CLASS___CSDRelayMessagingController);
  char v31 = (void *)objc_claimAutoreleasedReturnValue([v6 queue]);
  char v32 = (void *)objc_claimAutoreleasedReturnValue([v6 callStateController]);
  unsigned int v33 = (void *)objc_claimAutoreleasedReturnValue([v32 localRouteController]);
  uint64_t v34 = -[CSDRelayMessagingController initWithQueue:localRouteController:]( v30,  "initWithQueue:localRouteController:",  v31,  v33);
  [v6 setRelayMessagingController:v34];

  dispatch_queue_attr_t v35 = dispatch_queue_attr_make_with_qos_class(0LL, QOS_CLASS_BACKGROUND, 0);
  char v36 = (dispatch_queue_attr_s *)objc_claimAutoreleasedReturnValue(v35);
  dispatch_queue_t v37 = dispatch_queue_create("com.apple.telephonyutilities.callservicesd.reportingcontroller", v36);

  unsigned int v38 = objc_alloc_init(&OBJC_CLASS___CSDPowerLogReporter);
  [v21 addReporter:v38];

  uint64_t v39 = objc_alloc_init(&OBJC_CLASS___CSDAggregateDictionaryReporter);
  [v21 addReporter:v39];

  unint64_t v40 = -[CSDABCReporter initWithQueue:](objc_alloc(&OBJC_CLASS___CSDABCReporter), "initWithQueue:", v37);
  [v21 addReporter:v40];

  char v41 = objc_alloc(&OBJC_CLASS___CSDRTCReporter);
  char v42 = (void *)objc_claimAutoreleasedReturnValue([v6 chManager]);
  unsigned int v43 = -[CSDRTCReporter initWithQueue:chManager:](v41, "initWithQueue:chManager:", v37, v42);
  [v21 addReporter:v43];

  uint64_t v44 = objc_alloc_init(&OBJC_CLASS___CSDAnalyticsReporter);
  [v21 addReporter:v44];

  unint64_t v45 = (void *)objc_claimAutoreleasedReturnValue([v6 featureFlags]);
  LODWORD(v43) = [v45 conversationHandoffEnabled];

  if ((_DWORD)v43)
  {
    char v46 = objc_alloc_init(&OBJC_CLASS___CSDHandoffAudioController);
    [v6 setHandoffAudioController:v46];
  }

  uint64_t v47 = objc_alloc_init(&OBJC_CLASS___CSDVoIPApplicationController);
  [v6 setVoipApplicationController:v47];

  uint64_t v48 = (void *)objc_claimAutoreleasedReturnValue([v6 callStateController]);
  uint64_t v49 = (void *)objc_claimAutoreleasedReturnValue([v6 voipApplicationController]);
  [v49 setCallStateController:v48];

  unsigned int v50 = (void *)objc_claimAutoreleasedReturnValue([v6 voipApplicationController]);
  uint64_t v51 = (void *)objc_claimAutoreleasedReturnValue([v6 callStateController]);
  [v51 setVoipApplicationController:v50];

  char v52 = (void *)objc_claimAutoreleasedReturnValue([v6 relayMessagingController]);
  unsigned int v53 = (void *)objc_claimAutoreleasedReturnValue([v6 callStateController]);
  [v53 setRelayMessagingController:v52];

  uint64_t v54 = objc_alloc(&OBJC_CLASS___CSDRelayClientController);
  unint64_t v55 = (void *)objc_claimAutoreleasedReturnValue([v6 queue]);
  char v56 = -[CSDRelayClientController initWithQueue:](v54, "initWithQueue:", v55);
  [v6 setRelayClientController:v56];

  uint64_t v57 = (void *)objc_claimAutoreleasedReturnValue([v6 callStateController]);
  char v58 = (void *)objc_claimAutoreleasedReturnValue([v6 relayClientController]);
  [v58 setCallStateController:v57];

  unsigned int v59 = objc_alloc(&OBJC_CLASS___CSDRelayHostController);
  uint64_t v60 = (void *)objc_claimAutoreleasedReturnValue([v6 queue]);
  unint64_t v61 = (void *)objc_claimAutoreleasedReturnValue(+[TUCallCenter sharedInstance](&OBJC_CLASS___TUCallCenter, "sharedInstance"));
  char v62 = (void *)objc_claimAutoreleasedReturnValue([v61 conversationManager]);
  uint64_t v63 = (void *)objc_claimAutoreleasedReturnValue([v6 featureFlags]);
  uint64_t v64 = -[CSDRelayHostController initWithQueue:conversationManager:featureFlags:]( v59,  "initWithQueue:conversationManager:featureFlags:",  v60,  v62,  v63);
  [v6 setRelayHostController:v64];

  uint64_t v65 = (void *)objc_claimAutoreleasedReturnValue([v6 callStateController]);
  BOOL v66 = (void *)objc_claimAutoreleasedReturnValue([v6 relayHostController]);
  [v66 setCallStateController:v65];

  uint64_t v67 = objc_alloc(&OBJC_CLASS___CSDRelayCommonController);
  char v68 = (void *)objc_claimAutoreleasedReturnValue([v6 queue]);
  unsigned int v69 = -[CSDRelayCommonController initWithQueue:](v67, "initWithQueue:", v68);
  [v6 setRelayCommonController:v69];

  uint64_t v70 = (void *)objc_claimAutoreleasedReturnValue([v6 callStateController]);
  unint64_t v71 = (void *)objc_claimAutoreleasedReturnValue([v6 relayCommonController]);
  [v71 setCallStateController:v70];

  char v72 = (void *)objc_claimAutoreleasedReturnValue([v6 callStateController]);
  uint64_t v73 = (void *)objc_claimAutoreleasedReturnValue([v6 relayMessagingController]);
  [v73 setDelegate:v72];

  uint64_t v74 = (void *)objc_claimAutoreleasedReturnValue([v6 relayClientController]);
  uint64_t v75 = (void *)objc_claimAutoreleasedReturnValue([v6 relayMessagingController]);
  [v75 setClientMessagingDelegate:v74];

  unint64_t v76 = (void *)objc_claimAutoreleasedReturnValue([v6 relayHostController]);
  char v77 = (void *)objc_claimAutoreleasedReturnValue([v6 relayMessagingController]);
  [v77 setHostMessagingDelegate:v76];

  uint64_t v78 = (void *)objc_claimAutoreleasedReturnValue([v6 relayCommonController]);
  unint64_t v79 = (void *)objc_claimAutoreleasedReturnValue([v6 relayMessagingController]);
  [v79 setCommonMessagingDelegate:v78];

  uint64_t v80 = (void *)objc_claimAutoreleasedReturnValue([v6 queue]);
  id v81 =  +[CSDTransactionManager sharedInstanceWithQueue:]( &OBJC_CLASS___CSDTransactionManager,  "sharedInstanceWithQueue:",  v80);

  char v82 = (void *)objc_claimAutoreleasedReturnValue([v6 queue]);
  id v83 =  +[CSDUserActivityManager sharedInstanceWithQueue:]( &OBJC_CLASS___CSDUserActivityManager,  "sharedInstanceWithQueue:",  v82);

  id v84 = +[CSDRouteManager sharedInstance](&OBJC_CLASS___CSDRouteManager, "sharedInstance");
  uint64_t v85 = (void *)objc_claimAutoreleasedReturnValue( +[CPApplicationPolicyManager sharedInstance]( &OBJC_CLASS___CPApplicationPolicyManager,  "sharedInstance"));
  [v6 setApplicationPolicyManager:v85];

  unint64_t v86 = objc_alloc(&OBJC_CLASS___CSDAudioController);
  char v87 = (void *)objc_claimAutoreleasedReturnValue([v6 voiceOverObserver]);
  char v88 = -[CSDAudioController initWithVoiceOverObserver:](v86, "initWithVoiceOverObserver:", v87);
  [v6 setAudioController:v88];

  unsigned int v89 = (void *)objc_claimAutoreleasedReturnValue([v6 audioController]);
  uint64_t v90 = (void *)objc_claimAutoreleasedReturnValue([v6 callStateController]);
  [v90 setAudioController:v89];

  [v6 _setUpLanguageChangeListener];
  notify_register_check("com.apple.telephonyutilities.callservicesdaemon.connectionrequest", (int *)buf);
  notify_set_state(*(int *)buf, 1uLL);
  notify_post("com.apple.telephonyutilities.callservicesdaemon.connectionrequest");
  uint64_t v91 = objc_alloc(&OBJC_CLASS___CSDUserNotificationController);
  unint64_t v92 = (void *)objc_claimAutoreleasedReturnValue([v6 callStateController]);
  char v93 = (void *)objc_claimAutoreleasedReturnValue([v92 callFilterController]);
  char v94 = -[CSDUserNotificationController initWithCallFilterController:](v91, "initWithCallFilterController:", v93);
  unsigned int v95 = (void *)v6[13];
  v6[13] = v94;

  uint64_t v96 = objc_alloc(&OBJC_CLASS___CSDConversationProviderManagerXPCServer);
  uint64_t v97 = (void *)objc_claimAutoreleasedReturnValue( +[CSDConversationProviderManager sharedInstance]( &OBJC_CLASS___CSDConversationProviderManager,  "sharedInstance"));
  unint64_t v98 = -[CSDConversationProviderManagerXPCServer initWithConversationProviderManager:]( v96,  "initWithConversationProviderManager:",  v97);
  char v99 = (void *)v6[2];
  _DWORD v6[2] = v98;

  id v100 = sub_1001704C4();
  char v101 = (os_log_s *)objc_claimAutoreleasedReturnValue(v100);
  if (os_log_type_enabled(v101, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)unsigned int v102 = 0;
    _os_log_impl((void *)&_mh_execute_header, v101, OS_LOG_TYPE_DEFAULT, "Initialized CSDDaemon", v102, 2u);
  }

  objc_destroyWeak(&v104);
}

void sub_100085AE4(_Unwind_Exception *a1)
{
}

void sub_100085B20(id a1, OS_xpc_object *a2)
{
  string = xpc_dictionary_get_string(a2, _xpc_event_key_name);
  if (!strcmp(string, "com.apple.telephonyutilities.callservicesd.kFZACAppBundleIdentifierLaunchNotification"))
  {
    id v3 = sub_1001704C4();
    uint64_t v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Launched by IMDaemon notification", v5, 2u);
    }
  }

void sub_100085BA8(uint64_t a1, void *a2)
{
  id v3 = a2;
  string = xpc_dictionary_get_string(v3, _xpc_event_key_name);
  if (!strcmp(string, "com.apple.callhistory.save.distributed.notification"))
  {
    id v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) callStateController]);
    __int128 v12 = (void *)objc_claimAutoreleasedReturnValue([v11 recentsController]);
    [v12 clearNotificationsIfNecessary];

LABEL_11:
    goto LABEL_12;
  }

  if (!strcmp(string, "com.apple.telephonyutilities.callservicesdaemon.app-installed"))
  {
    id v13 = sub_1001704C4();
    id v11 = (void *)objc_claimAutoreleasedReturnValue(v13);
    if (os_log_type_enabled((os_log_t)v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v11,  OS_LOG_TYPE_DEFAULT,  "Launched by application installed notification",  buf,  2u);
    }

    goto LABEL_11;
  }

  if (!strcmp(string, "com.apple.telephonyutilities.callservicesdaemon.app-uninstalled"))
  {
    id v5 = sub_1001704C4();
    uint64_t v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)__int128 v15 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Launched by application uninstalled notification",  v15,  2u);
    }

    uint64_t v7 = TUNotificationFromXPCObject(v3);
    id v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
    if (v8)
    {
      id v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) voipApplicationController]);
      [v9 handleApplicationUninstalledNotification:v8];

      id v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) applicationPolicyManager]);
      [v10 handleApplicationUninstalledNotification:v8];
    }

    else
    {
      id v14 = sub_1001704C4();
      id v10 = (void *)objc_claimAutoreleasedReturnValue(v14);
      if (os_log_type_enabled((os_log_t)v10, OS_LOG_TYPE_ERROR)) {
        sub_1002B3DD4((uint64_t)v3, (os_log_s *)v10);
      }
    }
  }

void sub_100085D5C(id a1, OS_xpc_object *a2)
{
}

void sub_100085D70(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v_Block_object_dispose(va, 8) = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Caught SIGINFO. Dumping debug info.",  (uint8_t *)&v8,  2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v5 = sub_1001704C4();
  uint64_t v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained debugDescription]);
    int v8 = 138412290;
    id v9 = v7;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "%@", (uint8_t *)&v8, 0xCu);
  }
}

void sub_100085E80(id a1)
{
  id v1 = sub_1001704C4();
  id v2 = (os_log_s *)objc_claimAutoreleasedReturnValue(v1);
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Caught SIGUSR1", v3, 2u);
  }
}

void sub_100085EE4(id a1)
{
  id v1 = sub_1001704C4();
  id v2 = (os_log_s *)objc_claimAutoreleasedReturnValue(v1);
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Caught SIGUSR2", v3, 2u);
  }
}

void sub_1000862D0(id a1, int a2)
{
  id v3 = sub_1001704C4();
  uint64_t v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Calling xpc_transaction_exit_clean() due to language change",  v6,  2u);
  }

  uint64_t v5 = notify_cancel(a2);
  xpc_transaction_exit_clean(v5);
}

void sub_100086758( void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

  ;
}

void sub_10008692C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

CSDIDSDualSessionProvider *__cdecl sub_100086948(id a1, IDSSession *a2, OS_dispatch_queue *a3)
{
  uint64_t v4 = a3;
  uint64_t v5 = a2;
  uint64_t v6 = -[CSDIDSDualSessionProvider initWithSession:queue:]( objc_alloc(&OBJC_CLASS___CSDIDSDualSessionProvider),  "initWithSession:queue:",  v5,  v4);

  return v6;
}

id sub_1000869A8(uint64_t a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  int v8 = (id *)(a1 + 32);
  id v9 = a5;
  id v10 = a3;
  id v11 = a2;
  id WeakRetained = objc_loadWeakRetained(v8);
  id v13 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([WeakRetained queue]);
  dispatch_assert_queue_V2(v13);

  id v14 = -[CSDIDSChat initIncomingWithSession:remoteHandle:wantsVideo:remoteInviteDictionary:]( objc_alloc(&OBJC_CLASS___CSDIDSChat),  "initIncomingWithSession:remoteHandle:wantsVideo:remoteInviteDictionary:",  v11,  v10,  a4,  v9);
  return v14;
}

void sub_1000872A4(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    id v4 = sub_1001704C4();
    uint64_t v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v6 = *(void *)(a1 + 32);
      int v7 = 138412546;
      id v8 = v3;
      __int16 v9 = 2112;
      uint64_t v10 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "Incoming call was denied with error %@ so ignoring chat: %@",  (uint8_t *)&v7,  0x16u);
    }
  }
}

void sub_100087B60(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  if (v3)
  {
    id v5 = [v3 code];
    id v6 = sub_1001704C4();
    int v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);
    if (v5 == (id)102)
    {
      if (v8)
      {
        uint64_t v9 = *(void *)(a1 + 40);
        int v11 = 138412546;
        __int128 v12 = v4;
        __int16 v13 = 2112;
        uint64_t v14 = v9;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Incoming call was denied with error %@ so declining chat: %@",  (uint8_t *)&v11,  0x16u);
      }

      [*(id *)(a1 + 48) declineInvitation];
    }

    else
    {
      if (v8)
      {
        uint64_t v10 = *(void *)(a1 + 40);
        int v11 = 138412546;
        __int128 v12 = v4;
        __int16 v13 = 2112;
        uint64_t v14 = v10;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Incoming call was denied with error %@ so ignoring chat: %@",  (uint8_t *)&v11,  0x16u);
      }
    }
  }

  else
  {
    [*(id *)(a1 + 32) updateCacheWithChat:*(void *)(a1 + 40)];
  }
}

BOOL sub_100089894(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (1)
    {
      if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      char v4 = 0;
      unsigned int v5 = 0;
      unint64_t v6 = 0LL;
      while (1)
      {
        unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v7 == -1LL || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v8 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
        v6 |= (unint64_t)(v8 & 0x7F) << v4;
        if ((v8 & 0x80) == 0) {
          goto LABEL_11;
        }
        v4 += 7;
        if (v5++ >= 9)
        {
          unint64_t v6 = 0LL;
          int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
          goto LABEL_13;
        }
      }

      *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
      int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
      if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        unint64_t v6 = 0LL;
      }
LABEL_13:
      if (v10 || (v6 & 7) == 4) {
        return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      unint64_t v12 = v6 >> 3;
      if ((_DWORD)v12 == 2)
      {
        uint64_t Data = PBReaderReadData(a2);
        uint64_t v14 = objc_claimAutoreleasedReturnValue(Data);
        uint64_t v15 = 16LL;
        goto LABEL_23;
      }

      if ((_DWORD)v12 == 1)
      {
        uint64_t v13 = PBReaderReadData(a2);
        uint64_t v14 = objc_claimAutoreleasedReturnValue(v13);
        uint64_t v15 = 24LL;
LABEL_23:
        id v18 = *(void **)(a1 + v15);
        *(void *)(a1 + v15) = v14;

        goto LABEL_25;
      }

      if ((PBReaderSkipValueWithTag(a2) & 1) == 0) {
        return 0LL;
      }
LABEL_25:
      if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
    }

    uint64_t v16 = PBReaderReadData(a2);
    uint64_t v14 = objc_claimAutoreleasedReturnValue(v16);
    uint64_t v15 = 8LL;
    goto LABEL_23;
  }

  return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_10008BC54(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
}

  ;
}

NSString *__cdecl sub_10008C950(id a1, NSString *a2)
{
  return (NSString *)TUISOCountryCodeForMCC(a2);
}

void sub_10008CD9C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

CSDIDSService *__cdecl sub_10008CDB8(id a1, BOOL a2)
{
  id v2 = off_1003D5DA8;
  if (!a2) {
    id v2 = off_1003D5D98;
  }
  return (CSDIDSService *)(id)objc_claimAutoreleasedReturnValue(-[__objc2_class sharedInstance](*v2, "sharedInstance"));
}

BOOL sub_10008CDEC(id a1, IDSAccount *a2)
{
  return -[IDSAccount canSend](a2, "canSend");
}

CSDIDSDualSessionProvider *sub_10008CDF4(uint64_t a1, void *a2, void *a3, void *a4, int a5, void *a6)
{
  id v11 = a6;
  id v12 = a4;
  id v13 = a3;
  id v14 = a2;
  uint64_t v15 = -[IDSSession initWithAccount:destinations:options:]( objc_alloc(&OBJC_CLASS___IDSSession),  "initWithAccount:destinations:options:",  v14,  v13,  v12);

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  __int128 v17 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained featureFlags]);
  if (![v17 uPlusOneSessionWithCapabilitiesEnabled])
  {
LABEL_7:

    goto LABEL_8;
  }

  id v18 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained conversationServerBag]);
  unsigned int v19 = [v18 isUPlusOneSessionCapabilitiesEnabled];

  if (v19)
  {
    if (a5) {
      uint64_t v20 = objc_claimAutoreleasedReturnValue( +[NSSet setWithObjects:]( &OBJC_CLASS___NSSet,  "setWithObjects:",  IDSRegistrationPropertySupportsSSRC,  IDSRegistrationPropertySupportsModernGFT,  0LL));
    }
    else {
      uint64_t v20 = objc_claimAutoreleasedReturnValue(+[NSSet setWithObject:](&OBJC_CLASS___NSSet, "setWithObject:", IDSRegistrationPropertySupportsModernGFT));
    }
    __int128 v17 = (void *)v20;
    -[IDSSession setRequiredCapabilities:requiredLackOfCapabilities:]( v15,  "setRequiredCapabilities:requiredLackOfCapabilities:",  0LL,  v20);
    goto LABEL_7;
  }

CSDIDSChat *__cdecl sub_10008CF60( id a1, CSDExternalIDSDualSession *a2, NSUUID *a3, TUHandle *a4, BOOL a5, BOOL a6, NSUUID *a7)
{
  BOOL v7 = a6;
  BOOL v8 = a5;
  id v12 = a7;
  id v13 = a4;
  id v14 = a3;
  uint64_t v15 = a2;
  id v16 = -[CSDIDSChat initOutgoingWithSession:UUID:remoteHandle:wantsVideo:isRelaying:]( objc_alloc(&OBJC_CLASS___CSDIDSChat),  "initOutgoingWithSession:UUID:remoteHandle:wantsVideo:isRelaying:",  v15,  v14,  v13,  v8,  v7);

  [v16 setLocalSenderIdentityUUID:v12];
  return (CSDIDSChat *)v16;
}

void sub_10008DC94(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_1001704C4();
  unsigned int v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  unint64_t v6 = v5;
  if (v3)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_1002B41DC(a1, (uint64_t)v3, v6);
    }

    [*(id *)(a1 + 40) endCallWithUUID:*(void *)(a1 + 32)];
  }

  else
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)BOOL v7 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Successfully requested transaction to answer already-ringing call",  v7,  2u);
    }
  }
}

id sub_10008E6D0(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    int v6 = 138412290;
    uint64_t v7 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Ending chat that is being upgraded: %@",  (uint8_t *)&v6,  0xCu);
  }

  return [*(id *)(a1 + 32) end];
}

id sub_100091318(uint64_t a1)
{
  return [*(id *)(a1 + 32) transferFileAtTemporaryURL:*(void *)(a1 + 40) toDestinations:*(void *)(a1 + 48) withMetadata:*(void *)(a1 + 56) fromMember:0];
}

void sub_100091434(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) URL]);
  [v2 transferFileAtTemporaryURL:v3 toDestinations:*(void *)(a1 + 48) withMetadata:*(void *)(a1 + 56) fromMember:*(void *)(a1 + 64)];
}

void sub_1000915E4(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void **)(a1 + 48);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  v5[2] = sub_100091684;
  v5[3] = &unk_1003D8E68;
  id v6 = v4;
  id v7 = *(id *)(a1 + 56);
  [v2 performFileCopierOperation:1 onInputURL:v3 outputURL:v6 completion:v5];
}

void sub_100091684(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
  uint64_t v3 = *(void *)(a1 + 32);
  id v24 = 0LL;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue( [v2 contentsOfDirectoryAtURL:v3 includingPropertiesForKeys:0 options:0 error:&v24]);
  id v5 = v24;

  if (v4)
  {
    __int128 v22 = 0u;
    __int128 v23 = 0u;
    __int128 v20 = 0u;
    __int128 v21 = 0u;
    id v6 = v4;
    id v7 = [v6 countByEnumeratingWithState:&v20 objects:v29 count:16];
    if (v7)
    {
      id v18 = v5;
      uint64_t v19 = a1;
      uint64_t v8 = *(void *)v21;
      do
      {
        for (i = 0LL; i != v7; i = (char *)i + 1)
        {
          if (*(void *)v21 != v8) {
            objc_enumerationMutation(v6);
          }
          int v10 = *(void **)(*((void *)&v20 + 1) + 8LL * (void)i);
          buf[0] = 0;
          id v11 = (void *)objc_claimAutoreleasedReturnValue( +[NSFileManager defaultManager]( &OBJC_CLASS___NSFileManager,  "defaultManager",  v18,  v19,  (void)v20));
          id v12 = (void *)objc_claimAutoreleasedReturnValue([v10 path]);
          unsigned int v13 = [v11 fileExistsAtPath:v12 isDirectory:buf];

          if (v13) {
            BOOL v14 = buf[0] == 0;
          }
          else {
            BOOL v14 = 1;
          }
          if (!v14)
          {
            id v7 = v10;
            goto LABEL_14;
          }
        }

        id v7 = [v6 countByEnumeratingWithState:&v20 objects:v29 count:16];
      }

      while (v7);
LABEL_14:
      id v5 = v18;
      a1 = v19;
    }

    id v15 = sub_1001704C4();
    id v16 = (os_log_s *)objc_claimAutoreleasedReturnValue(v15);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412546;
      id v26 = v6;
      __int16 v27 = 2112;
      id v28 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "new directory urls: %@, unzippedDirectoryURL: %@",  buf,  0x16u);
    }
  }

  else
  {
    id v17 = sub_1001704C4();
    id v16 = (os_log_s *)objc_claimAutoreleasedReturnValue(v17);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
      sub_1002B4334();
    }
    id v7 = 0LL;
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
}

void sub_100091BC4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_1001704C4();
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v6 = *(void *)(a1 + 32);
    uint64_t v7 = *(void *)(a1 + 40);
    *(_DWORD *)buf = 138412802;
    id v27 = v3;
    __int16 v28 = 2112;
    uint64_t v29 = v6;
    __int16 v30 = 2112;
    uint64_t v31 = v7;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "Sending resource at URL %@ to destinations %@ with metadata %@",  buf,  0x20u);
  }

  if (v3)
  {
    uint64_t v8 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    uint64_t v9 = *(void **)(a1 + 48);
    if (v9)
    {
      int v10 = (void *)objc_claimAutoreleasedReturnValue([v9 idsFromID]);
      -[NSMutableDictionary setObject:forKeyedSubscript:]( v8,  "setObject:forKeyedSubscript:",  v10,  IDSSendMessageOptionFromIDKey);
    }

    id v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) service]);
    id v12 = (void *)objc_claimAutoreleasedReturnValue([v11 service]);
    uint64_t v14 = *(void *)(a1 + 32);
    uint64_t v13 = *(void *)(a1 + 40);
    id v24 = 0LL;
    id v25 = 0LL;
    unsigned int v15 = [v12 sendResourceAtURL:v3 metadata:v13 toDestinations:v14 priority:300 options:v8 identifier:&v25 error:&v24];
    id v16 = v25;
    id v17 = v24;

    if (v15)
    {
      uint64_t v18 = *(void *)(a1 + 64);
      uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) clientFileURLByIdentifier]);
      [v19 setObject:v18 forKeyedSubscript:v16];

      id v20 = sub_1001704C4();
      __int128 v21 = (os_log_s *)objc_claimAutoreleasedReturnValue(v20);
      if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        id v27 = v16;
        _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEFAULT,  "Successfully started sending resource with identifier %@",  buf,  0xCu);
      }
    }

    else
    {
      [*(id *)(a1 + 56) cleanUpTemporaryFileIfExistsForClientFileURL:*(void *)(a1 + 64)];
      id v22 = sub_1001704C4();
      __int128 v23 = (os_log_s *)objc_claimAutoreleasedReturnValue(v22);
      if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
        sub_1002B4414();
      }

      __int128 v21 = (os_log_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) delegate]);
      -[os_log_s fileTransferer:didTransferFileAtURL:successfully:]( v21,  "fileTransferer:didTransferFileAtURL:successfully:",  *(void *)(a1 + 56),  *(void *)(a1 + 64),  0LL);
    }
  }
}

void sub_100091E20(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v6 = a2;
  id v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v3 queue]);
  dispatch_assert_queue_V2(v4);

  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) temporaryFileURLByClientFileURL]);
  [v5 setObject:v6 forKeyedSubscript:*(void *)(a1 + 40)];

  (*(void (**)(void))(*(void *)(a1 + 48) + 16LL))();
}

uint64_t sub_100092A24(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0)
  {
    id v3 = sub_1001704C4();
    id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_1002B4594();
    }
  }

  return (*(uint64_t (**)(void))(*(void *)(a1 + 48) + 16LL))();
}

uint64_t sub_100092C4C(void *a1, void *a2)
{
  id v3 = a2;
  unsigned int v4 = [v3 didErrorOccur];
  id v5 = sub_1001704C4();
  id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
  uint64_t v7 = v6;
  if (v4)
  {
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_1002B4604();
    }
  }

  else if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = a1[7];
    uint64_t v9 = a1[4];
    uint64_t v10 = a1[5];
    int v14 = 134218498;
    uint64_t v15 = v8;
    __int16 v16 = 2112;
    uint64_t v17 = v9;
    __int16 v18 = 2112;
    uint64_t v19 = v10;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "completed operation: %ld, inputURL: %@, outputURL: %@",  (uint8_t *)&v14,  0x20u);
  }

  [v3 cleanup];
  uint64_t v11 = a1[6];
  unsigned int v12 = [v3 didErrorOccur];

  return (*(uint64_t (**)(uint64_t, void))(v11 + 16))(v11, v12 ^ 1);
}

void sub_10009361C(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) pendingCompletions]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 objectForKeyedSubscript:*(void *)(a1 + 40)]);

  id v4 = objc_retainBlock(*(id *)(a1 + 48));
  unsigned int v5 = [v3 containsObject:v4];

  if (v5)
  {
    id v6 = sub_1001704C4();
    uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = *(void *)(a1 + 40);
      int v10 = 138412290;
      uint64_t v11 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "[WARN] Timed out waiting for call source with identifier %@ to check in",  (uint8_t *)&v10,  0xCu);
    }

    id v9 = objc_retainBlock(*(id *)(a1 + 48));
    [v3 removeObject:v9];

    (*(void (**)(void))(*(void *)(a1 + 56) + 16LL))();
  }
}

void sub_100093EE4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 responseInformation]);
  unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue([v4 objectForKey:IMUserNotificationTextFieldValuesKey]);
  uint64_t v7 = objc_opt_class(&OBJC_CLASS___NSString, v6);
  if ((objc_opt_isKindOfClass(v5, v7) & 1) != 0) {
    id v8 = v5;
  }
  else {
    id v8 = 0LL;
  }
  id v9 = sub_1001704C4();
  int v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    int v12 = 134218242;
    id v13 = [v3 response];
    __int16 v14 = 2112;
    id v15 = v8;
    _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "User notification has been completed with response %lu and entered PIN %@",  (uint8_t *)&v12,  0x16u);
  }

  uint64_t v11 = *(void *)(a1 + 32);
  if (v11) {
    (*(void (**)(uint64_t, BOOL, id))(v11 + 16))(v11, [v3 response] == 0, v8);
  }
}

uint64_t sub_1000942B8(uint64_t a1, void *a2)
{
  id v3 = [a2 response];
  id v4 = sub_1001704C4();
  unsigned int v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);
  if (v3)
  {
    if (v6)
    {
      *(_WORD *)id v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Canceling pin request from iPhone", v9, 2u);
    }

    uint64_t result = *(void *)(a1 + 32);
    if (result)
    {
      id v8 = *(uint64_t (**)(void))(result + 16);
      return v8();
    }
  }

  else
  {
    if (v6)
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Requesting pin from iPhone", buf, 2u);
    }

    uint64_t result = *(void *)(a1 + 32);
    if (result)
    {
      id v8 = *(uint64_t (**)(void))(result + 16);
      return v8();
    }
  }

  return result;
}

void sub_100094898(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_1001704C4();
  unsigned int v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "User tapped cancel on the Pin Display Alert",  v7,  2u);
  }

  uint64_t v6 = *(void *)(a1 + 32);
  if (v6) {
    (*(void (**)(uint64_t, BOOL))(v6 + 16))(v6, [v3 response] == 0);
  }
}

LABEL_74:
  char v52 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_protoSoundRegion));
  [v4 setObject:v52 forKey:@"protoSoundRegion"];

  __int16 v14 = self->_has;
  if ((*(_WORD *)&v14 & 0x100) == 0)
  {
LABEL_24:
    if ((*(_WORD *)&v14 & 0x400) == 0) {
      goto LABEL_26;
    }
    goto LABEL_25;
  }

    id v8 = 0;
    goto LABEL_75;
  }

  id v8 = (v7 & 0x80) == 0;
LABEL_75:

  return v8;
}

LABEL_75:
  unsigned int v53 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", self->_protoEmergency));
  [v4 setObject:v53 forKey:@"protoEmergency"];

  if ((*(_DWORD *)&self->_has & 0x400) != 0)
  {
LABEL_25:
    id v15 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  self->_protoHasSentInvitation));
    [v4 setObject:v15 forKey:@"protoHasSentInvitation"];
  }

  PBDataWriterWriteBOOLField(v5, self->_isSpatialPersonaEnabled, 24LL);
  __int16 v30 = self->_has;
  if ((*(_WORD *)&v30 & 0x2000) == 0)
  {
LABEL_58:
    if ((*(_BYTE *)&v30 & 8) == 0) {
      goto LABEL_59;
    }
    goto LABEL_77;
  }

  screenSharingRequest = self->_screenSharingRequest;
  uint64_t v31 = *((void *)v5 + 11);
  if (screenSharingRequest)
  {
    if (v31) {
      -[CSDMessagingScreenShareContext mergeFrom:](screenSharingRequest, "mergeFrom:");
    }
  }

  else if (v31)
  {
    -[CSDMessagingConversationParticipantDidJoinContext setScreenSharingRequest:](self, "setScreenSharingRequest:");
  }

  char v32 = *((_DWORD *)v5 + 32);
  if ((v32 & 0x8000) == 0)
  {
    if ((v32 & 0x20000) == 0) {
      goto LABEL_88;
    }
LABEL_92:
    self->_supportsRequestToScreenShare = *((_BYTE *)v5 + 125);
    *(_DWORD *)&self->_has |= 0x20000u;
    if ((*((_DWORD *)v5 + 32) & 0x200) == 0) {
      goto LABEL_90;
    }
    goto LABEL_89;
  }

  self->_isUPlusOneVisionToVisionAvailable = *((_BYTE *)v5 + 123);
  *(_DWORD *)&self->_has |= 0x8000u;
  char v32 = *((_DWORD *)v5 + 32);
  if ((v32 & 0x20000) != 0) {
    goto LABEL_92;
  }
LABEL_88:
  if ((v32 & 0x200) != 0)
  {
LABEL_89:
    self->_isPhotosSharePlayAvailable = *((_BYTE *)v5 + 117);
    *(_DWORD *)&self->_has |= 0x200u;
  }

      return;
    case 4uLL:
      -[CXCallUpdate setMixesVoiceWithMedia:](v90, "setMixesVoiceWithMedia:", 0LL);
      goto LABEL_70;
    default:
LABEL_70:
      if (v41) {
        goto LABEL_71;
      }
      goto LABEL_75;
  }

LABEL_61:
  groupUUIDuint64_t String = self->_groupUUIDString;
  if (groupUUIDString) {
    [v4 setObject:groupUUIDString forKey:@"groupUUIDString"];
  }
  if ((*((_BYTE *)&self->_has + 1) & 0x80) != 0)
  {
    char v42 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  self->_protoSupportsDTMFUpdates));
    [v4 setObject:v42 forKey:@"protoSupportsDTMFUpdates"];
  }

  unsigned int v43 = v4;

  return v43;
}

  *((_BYTE *)v23 + 127) = self->_videoEnabled;
  *((_DWORD *)v23 + 32) |= 0x80000u;
  uint64_t v19 = self->_has;
  if ((*(_BYTE *)&v19 & 1) == 0)
  {
LABEL_37:
    if ((*(_BYTE *)&v19 & 0x10) == 0) {
      goto LABEL_39;
    }
    goto LABEL_38;
  }

  *((_DWORD *)v6 + 27) = self->_visionFeatureVersion;
  *((_DWORD *)v6 + 32) |= 8u;
  if ((*(_DWORD *)&self->_has & 4) != 0)
  {
LABEL_46:
    *((_DWORD *)v6 + 26) = self->_visionCallEstablishmentVersion;
    *((_DWORD *)v6 + 32) |= 4u;
  }

          goto LABEL_62;
        }

uint64_t sub_100095E84(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0LL;
    while (1)
    {
      uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v8 = v7 + 1;
      if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v9 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
      v6 |= (unint64_t)(v9 & 0x7F) << v4;
      if ((v9 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v10 = v5++ >= 9;
      if (v10)
      {
        unint64_t v6 = 0LL;
        int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0LL;
    }
LABEL_13:
    if (v11 || (v6 & 7) == 4) {
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t String = PBReaderReadString(a2);
        uint64_t v14 = objc_claimAutoreleasedReturnValue(String);
        uint64_t v15 = 128LL;
        goto LABEL_182;
      case 2u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0LL;
        *(_DWORD *)(a1 + 152) |= 0x20u;
        while (2)
        {
          uint64_t v20 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v21 = v20 + 1;
          if (v20 == -1 || v21 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v22 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v20);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v21;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if (v22 < 0)
            {
              v17 += 7;
              BOOL v10 = v18++ >= 9;
              if (v10)
              {
                LODWORD(v19) = 0;
                goto LABEL_193;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v19) = 0;
        }
LABEL_193:
        uint64_t v149 = 104LL;
        goto LABEL_262;
      case 3u:
        char v23 = 0;
        unsigned int v24 = 0;
        uint64_t v25 = 0LL;
        *(_DWORD *)(a1 + 152) |= 0x80u;
        while (2)
        {
          uint64_t v26 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v27 = v26 + 1;
          if (v26 == -1 || v27 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v28 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v26);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v27;
            v25 |= (unint64_t)(v28 & 0x7F) << v23;
            if (v28 < 0)
            {
              v23 += 7;
              BOOL v10 = v24++ >= 9;
              if (v10)
              {
                uint64_t v25 = 0LL;
                goto LABEL_197;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v25 = 0LL;
        }
LABEL_197:
        BOOL v150 = v25 != 0;
        uint64_t v151 = 136LL;
        goto LABEL_275;
      case 4u:
        uint64_t v29 = PBReaderReadString(a2);
        uint64_t v14 = objc_claimAutoreleasedReturnValue(v29);
        uint64_t v15 = 24LL;
        goto LABEL_182;
      case 5u:
        uint64_t v30 = PBReaderReadString(a2);
        uint64_t v14 = objc_claimAutoreleasedReturnValue(v30);
        uint64_t v15 = 120LL;
        goto LABEL_182;
      case 6u:
        char v31 = 0;
        unsigned int v32 = 0;
        uint64_t v19 = 0LL;
        *(_DWORD *)(a1 + 152) |= 8u;
        while (2)
        {
          uint64_t v33 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v34 = v33 + 1;
          if (v33 == -1 || v34 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v35 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v33);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v34;
            v19 |= (unint64_t)(v35 & 0x7F) << v31;
            if (v35 < 0)
            {
              v31 += 7;
              BOOL v10 = v32++ >= 9;
              if (v10)
              {
                LODWORD(v19) = 0;
                goto LABEL_201;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v19) = 0;
        }
LABEL_201:
        uint64_t v149 = 96LL;
        goto LABEL_262;
      case 7u:
        char v36 = 0;
        unsigned int v37 = 0;
        uint64_t v38 = 0LL;
        *(_DWORD *)(a1 + 152) |= 0x200000u;
        while (2)
        {
          uint64_t v39 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v40 = v39 + 1;
          if (v39 == -1 || v40 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v41 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v39);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v40;
            v38 |= (unint64_t)(v41 & 0x7F) << v36;
            if (v41 < 0)
            {
              v36 += 7;
              BOOL v10 = v37++ >= 9;
              if (v10)
              {
                uint64_t v38 = 0LL;
                goto LABEL_205;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v38 = 0LL;
        }
LABEL_205:
        BOOL v150 = v38 != 0;
        uint64_t v151 = 150LL;
        goto LABEL_275;
      case 8u:
        char v42 = 0;
        unsigned int v43 = 0;
        uint64_t v19 = 0LL;
        *(_DWORD *)(a1 + 152) |= 2u;
        while (2)
        {
          uint64_t v44 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v46 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v44);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v45;
            v19 |= (unint64_t)(v46 & 0x7F) << v42;
            if (v46 < 0)
            {
              v42 += 7;
              BOOL v10 = v43++ >= 9;
              if (v10)
              {
                LODWORD(v19) = 0;
                goto LABEL_209;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v19) = 0;
        }
LABEL_209:
        uint64_t v149 = 80LL;
        goto LABEL_262;
      case 9u:
        char v47 = 0;
        unsigned int v48 = 0;
        uint64_t v49 = 0LL;
        *(_DWORD *)(a1 + 152) |= 0x100000u;
        while (2)
        {
          uint64_t v50 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v51 = v50 + 1;
          if (v50 == -1 || v51 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v52 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v50);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v51;
            v49 |= (unint64_t)(v52 & 0x7F) << v47;
            if (v52 < 0)
            {
              v47 += 7;
              BOOL v10 = v48++ >= 9;
              if (v10)
              {
                uint64_t v49 = 0LL;
                goto LABEL_213;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v49 = 0LL;
        }
LABEL_213:
        BOOL v150 = v49 != 0;
        uint64_t v151 = 149LL;
        goto LABEL_275;
      case 0xAu:
        uint64_t v53 = PBReaderReadString(a2);
        uint64_t v14 = objc_claimAutoreleasedReturnValue(v53);
        uint64_t v15 = 16LL;
        goto LABEL_182;
      case 0xBu:
        *(_DWORD *)(a1 + 152) |= 1u;
        unint64_t v54 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v54 <= 0xFFFFFFFFFFFFFFF7LL && v54 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v55 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v54);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v54 + 8;
        }

        else
        {
          *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v55 = 0LL;
        }

        *(void *)(a1 + _Block_object_dispose(va, 8) = v55;
        goto LABEL_276;
      case 0xCu:
        char v56 = 0;
        unsigned int v57 = 0;
        uint64_t v58 = 0LL;
        *(_DWORD *)(a1 + 152) |= 0x1000u;
        while (2)
        {
          uint64_t v59 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v60 = v59 + 1;
          if (v59 == -1 || v60 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v61 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v59);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v60;
            v58 |= (unint64_t)(v61 & 0x7F) << v56;
            if (v61 < 0)
            {
              v56 += 7;
              BOOL v10 = v57++ >= 9;
              if (v10)
              {
                uint64_t v58 = 0LL;
                goto LABEL_217;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v58 = 0LL;
        }
LABEL_217:
        BOOL v150 = v58 != 0;
        uint64_t v151 = 141LL;
        goto LABEL_275;
      case 0xDu:
        char v62 = 0;
        unsigned int v63 = 0;
        uint64_t v64 = 0LL;
        *(_DWORD *)(a1 + 152) |= 0x4000u;
        while (2)
        {
          uint64_t v65 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v66 = v65 + 1;
          if (v65 == -1 || v66 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v67 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v65);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v66;
            v64 |= (unint64_t)(v67 & 0x7F) << v62;
            if (v67 < 0)
            {
              v62 += 7;
              BOOL v10 = v63++ >= 9;
              if (v10)
              {
                uint64_t v64 = 0LL;
                goto LABEL_221;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v64 = 0LL;
        }
LABEL_221:
        BOOL v150 = v64 != 0;
        uint64_t v151 = 143LL;
        goto LABEL_275;
      case 0xEu:
        char v68 = 0;
        unsigned int v69 = 0;
        uint64_t v70 = 0LL;
        *(_DWORD *)(a1 + 152) |= 0x800u;
        while (2)
        {
          uint64_t v71 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v72 = v71 + 1;
          if (v71 == -1 || v72 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v73 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v71);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v72;
            v70 |= (unint64_t)(v73 & 0x7F) << v68;
            if (v73 < 0)
            {
              v68 += 7;
              BOOL v10 = v69++ >= 9;
              if (v10)
              {
                uint64_t v70 = 0LL;
                goto LABEL_225;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v70 = 0LL;
        }
LABEL_225:
        BOOL v150 = v70 != 0;
        uint64_t v151 = 140LL;
        goto LABEL_275;
      case 0xFu:
        char v74 = 0;
        unsigned int v75 = 0;
        uint64_t v19 = 0LL;
        *(_DWORD *)(a1 + 152) |= 0x10u;
        while (2)
        {
          uint64_t v76 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v77 = v76 + 1;
          if (v76 == -1 || v77 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v78 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v76);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v77;
            v19 |= (unint64_t)(v78 & 0x7F) << v74;
            if (v78 < 0)
            {
              v74 += 7;
              BOOL v10 = v75++ >= 9;
              if (v10)
              {
                LODWORD(v19) = 0;
                goto LABEL_229;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v19) = 0;
        }
LABEL_229:
        uint64_t v149 = 100LL;
        goto LABEL_262;
      case 0x10u:
        char v79 = 0;
        unsigned int v80 = 0;
        uint64_t v81 = 0LL;
        *(_DWORD *)(a1 + 152) |= 0x100u;
        while (2)
        {
          uint64_t v82 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v83 = v82 + 1;
          if (v82 == -1 || v83 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v84 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v82);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v83;
            v81 |= (unint64_t)(v84 & 0x7F) << v79;
            if (v84 < 0)
            {
              v79 += 7;
              BOOL v10 = v80++ >= 9;
              if (v10)
              {
                uint64_t v81 = 0LL;
                goto LABEL_233;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v81 = 0LL;
        }
LABEL_233:
        BOOL v150 = v81 != 0;
        uint64_t v151 = 137LL;
        goto LABEL_275;
      case 0x11u:
        char v85 = 0;
        unsigned int v86 = 0;
        uint64_t v87 = 0LL;
        *(_DWORD *)(a1 + 152) |= 0x400u;
        while (2)
        {
          uint64_t v88 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v89 = v88 + 1;
          if (v88 == -1 || v89 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v90 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v88);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v89;
            v87 |= (unint64_t)(v90 & 0x7F) << v85;
            if (v90 < 0)
            {
              v85 += 7;
              BOOL v10 = v86++ >= 9;
              if (v10)
              {
                uint64_t v87 = 0LL;
                goto LABEL_237;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v87 = 0LL;
        }
LABEL_237:
        BOOL v150 = v87 != 0;
        uint64_t v151 = 139LL;
        goto LABEL_275;
      case 0x12u:
        uint64_t v91 = objc_alloc_init(&OBJC_CLASS___CSDMessagingHandle);
        objc_storeStrong((id *)(a1 + 40), v91);
        goto LABEL_141;
      case 0x13u:
        char v92 = 0;
        unsigned int v93 = 0;
        uint64_t v94 = 0LL;
        *(_DWORD *)(a1 + 152) |= 0x2000u;
        while (2)
        {
          uint64_t v95 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v96 = v95 + 1;
          if (v95 == -1 || v96 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v97 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v95);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v96;
            v94 |= (unint64_t)(v97 & 0x7F) << v92;
            if (v97 < 0)
            {
              v92 += 7;
              BOOL v10 = v93++ >= 9;
              if (v10)
              {
                uint64_t v94 = 0LL;
                goto LABEL_241;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v94 = 0LL;
        }
LABEL_241:
        BOOL v150 = v94 != 0;
        uint64_t v151 = 142LL;
        goto LABEL_275;
      case 0x14u:
        uint64_t v91 = objc_alloc_init(&OBJC_CLASS___CSDMessagingCallProvider);
        objc_storeStrong((id *)(a1 + 88), v91);
        goto LABEL_143;
      case 0x15u:
        char v98 = 0;
        unsigned int v99 = 0;
        uint64_t v100 = 0LL;
        *(_DWORD *)(a1 + 152) |= 0x80000u;
        while (2)
        {
          uint64_t v101 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v102 = v101 + 1;
          if (v101 == -1 || v102 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v103 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v101);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v102;
            v100 |= (unint64_t)(v103 & 0x7F) << v98;
            if (v103 < 0)
            {
              v98 += 7;
              BOOL v10 = v99++ >= 9;
              if (v10)
              {
                uint64_t v100 = 0LL;
                goto LABEL_245;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v100 = 0LL;
        }
LABEL_245:
        BOOL v150 = v100 != 0;
        uint64_t v151 = 148LL;
        goto LABEL_275;
      case 0x16u:
        char v104 = 0;
        unsigned int v105 = 0;
        uint64_t v106 = 0LL;
        *(_DWORD *)(a1 + 152) |= 0x40000u;
        while (2)
        {
          uint64_t v107 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v108 = v107 + 1;
          if (v107 == -1 || v108 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v109 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v107);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v108;
            v106 |= (unint64_t)(v109 & 0x7F) << v104;
            if (v109 < 0)
            {
              v104 += 7;
              BOOL v10 = v105++ >= 9;
              if (v10)
              {
                uint64_t v106 = 0LL;
                goto LABEL_249;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v106 = 0LL;
        }
LABEL_249:
        BOOL v150 = v106 != 0;
        uint64_t v151 = 147LL;
        goto LABEL_275;
      case 0x17u:
        uint64_t v91 = objc_alloc_init(&OBJC_CLASS___CSDMessagingCallModel);
        objc_storeStrong((id *)(a1 + 72), v91);
        goto LABEL_143;
      case 0x18u:
        uint64_t v110 = PBReaderReadString(a2);
        uint64_t v14 = objc_claimAutoreleasedReturnValue(v110);
        uint64_t v15 = 64LL;
        goto LABEL_182;
      case 0x19u:
        uint64_t v91 = objc_alloc_init(&OBJC_CLASS___CSDMessagingHandle);
        [(id)a1 addRemoteParticipantHandles:v91];
LABEL_141:
        if (PBReaderPlaceMark(a2, v152) && (sub_10004A748((uint64_t)v91, a2) & 1) != 0)
        {
LABEL_143:
          PBReaderRecallMark(a2, v152);

LABEL_276:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }

LABEL_281:
        return 0LL;
      case 0x1Au:
        uint64_t v111 = PBReaderReadString(a2);
        uint64_t v14 = objc_claimAutoreleasedReturnValue(v111);
        uint64_t v15 = 56LL;
        goto LABEL_182;
      case 0x1Bu:
        char v112 = 0;
        unsigned int v113 = 0;
        uint64_t v19 = 0LL;
        *(_DWORD *)(a1 + 152) |= 0x40u;
        while (2)
        {
          uint64_t v114 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v115 = v114 + 1;
          if (v114 == -1 || v115 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v116 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v114);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v115;
            v19 |= (unint64_t)(v116 & 0x7F) << v112;
            if (v116 < 0)
            {
              v112 += 7;
              BOOL v10 = v113++ >= 9;
              if (v10)
              {
                LODWORD(v19) = 0;
                goto LABEL_253;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v19) = 0;
        }
LABEL_253:
        uint64_t v149 = 108LL;
        goto LABEL_262;
      case 0x1Cu:
        char v117 = 0;
        unsigned int v118 = 0;
        uint64_t v119 = 0LL;
        *(_DWORD *)(a1 + 152) |= 0x20000u;
        while (2)
        {
          uint64_t v120 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v121 = v120 + 1;
          if (v120 == -1 || v121 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v122 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v120);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v121;
            v119 |= (unint64_t)(v122 & 0x7F) << v117;
            if (v122 < 0)
            {
              v117 += 7;
              BOOL v10 = v118++ >= 9;
              if (v10)
              {
                uint64_t v119 = 0LL;
                goto LABEL_257;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v119 = 0LL;
        }
LABEL_257:
        BOOL v150 = v119 != 0;
        uint64_t v151 = 146LL;
        goto LABEL_275;
      case 0x1Du:
        uint64_t v123 = PBReaderReadString(a2);
        uint64_t v14 = objc_claimAutoreleasedReturnValue(v123);
        uint64_t v15 = 48LL;
        goto LABEL_182;
      case 0x1Eu:
        char v124 = 0;
        unsigned int v125 = 0;
        uint64_t v19 = 0LL;
        *(_DWORD *)(a1 + 152) |= 4u;
        while (2)
        {
          uint64_t v126 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v127 = v126 + 1;
          if (v126 == -1 || v127 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v128 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v126);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v127;
            v19 |= (unint64_t)(v128 & 0x7F) << v124;
            if (v128 < 0)
            {
              v124 += 7;
              BOOL v10 = v125++ >= 9;
              if (v10)
              {
                LODWORD(v19) = 0;
                goto LABEL_261;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v19) = 0;
        }
LABEL_261:
        uint64_t v149 = 84LL;
LABEL_262:
        *(_DWORD *)(a1 + v149) = v19;
        goto LABEL_276;
      case 0x1Fu:
        char v129 = 0;
        unsigned int v130 = 0;
        uint64_t v131 = 0LL;
        *(_DWORD *)(a1 + 152) |= 0x200u;
        while (2)
        {
          uint64_t v132 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v133 = v132 + 1;
          if (v132 == -1 || v133 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v134 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v132);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v133;
            v131 |= (unint64_t)(v134 & 0x7F) << v129;
            if (v134 < 0)
            {
              v129 += 7;
              BOOL v10 = v130++ >= 9;
              if (v10)
              {
                uint64_t v131 = 0LL;
                goto LABEL_266;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v131 = 0LL;
        }
LABEL_266:
        BOOL v150 = v131 != 0;
        uint64_t v151 = 138LL;
        goto LABEL_275;
      case 0x20u:
        char v135 = 0;
        unsigned int v136 = 0;
        uint64_t v137 = 0LL;
        *(_DWORD *)(a1 + 152) |= 0x10000u;
        while (2)
        {
          uint64_t v138 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v139 = v138 + 1;
          if (v138 == -1 || v139 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v140 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v138);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v139;
            v137 |= (unint64_t)(v140 & 0x7F) << v135;
            if (v140 < 0)
            {
              v135 += 7;
              BOOL v10 = v136++ >= 9;
              if (v10)
              {
                uint64_t v137 = 0LL;
                goto LABEL_270;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v137 = 0LL;
        }
LABEL_270:
        BOOL v150 = v137 != 0;
        uint64_t v151 = 145LL;
        goto LABEL_275;
      case 0x21u:
        uint64_t v141 = PBReaderReadString(a2);
        uint64_t v14 = objc_claimAutoreleasedReturnValue(v141);
        uint64_t v15 = 32LL;
LABEL_182:
        char v142 = *(void **)(a1 + v15);
        *(void *)(a1 + v15) = v14;

        goto LABEL_276;
      case 0x22u:
        char v143 = 0;
        unsigned int v144 = 0;
        uint64_t v145 = 0LL;
        *(_DWORD *)(a1 + 152) |= 0x8000u;
        while (2)
        {
          uint64_t v146 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v147 = v146 + 1;
          if (v146 == -1 || v147 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v148 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v146);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v147;
            v145 |= (unint64_t)(v148 & 0x7F) << v143;
            if (v148 < 0)
            {
              v143 += 7;
              BOOL v10 = v144++ >= 9;
              if (v10)
              {
                uint64_t v145 = 0LL;
                goto LABEL_274;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v145 = 0LL;
        }
LABEL_274:
        BOOL v150 = v145 != 0;
        uint64_t v151 = 144LL;
LABEL_275:
        *(_BYTE *)(a1 + v151) = v150;
        goto LABEL_276;
      default:
        uint64_t result = PBReaderSkipValueWithTag(a2);
        if (!(_DWORD)result) {
          return result;
        }
        goto LABEL_276;
    }
  }

LABEL_67:
  *((_BYTE *)v4 + 143) = self->_protoShouldSuppressRingtone;
  *((_DWORD *)v4 + 38) |= 0x4000u;
  uint64_t v7 = self->_has;
  if ((*(_WORD *)&v7 & 0x800) == 0)
  {
LABEL_22:
    if ((*(_BYTE *)&v7 & 0x10) == 0) {
      goto LABEL_23;
    }
    goto LABEL_69;
  }

  screenSharingRequest = self->_screenSharingRequest;
  if (screenSharingRequest)
  {
    char v47 = (void *)objc_claimAutoreleasedReturnValue( -[CSDMessagingScreenShareContext dictionaryRepresentation]( screenSharingRequest,  "dictionaryRepresentation"));
    [v3 setObject:v47 forKey:@"screenSharingRequest"];
  }

  unsigned int v48 = self->_has;
  if ((*(_WORD *)&v48 & 0x8000) == 0)
  {
    if ((*(_DWORD *)&v48 & 0x20000) == 0) {
      goto LABEL_71;
    }
LABEL_86:
    char v62 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  self->_supportsRequestToScreenShare,  (void)v63));
    [v3 setObject:v62 forKey:@"supportsRequestToScreenShare"];

    if ((*(_DWORD *)&self->_has & 0x200) == 0) {
      goto LABEL_73;
    }
    goto LABEL_72;
  }

  char v61 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  self->_isUPlusOneVisionToVisionAvailable));
  [v3 setObject:v61 forKey:@"isUPlusOneVisionToVisionAvailable"];

  unsigned int v48 = self->_has;
  if ((*(_DWORD *)&v48 & 0x20000) != 0) {
    goto LABEL_86;
  }
LABEL_71:
  if ((*(_WORD *)&v48 & 0x200) != 0)
  {
LABEL_72:
    uint64_t v49 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  self->_isPhotosSharePlayAvailable,  (void)v63));
    [v3 setObject:v49 forKey:@"isPhotosSharePlayAvailable"];
  }

  v20[121] = self->_isUPlusOneAVLessAvailable;
  *((_DWORD *)v20 + 32) |= 0x2000u;
  unint64_t v21 = self->_has;
  if ((*(_BYTE *)&v21 & 8) == 0)
  {
LABEL_50:
    if ((*(_BYTE *)&v21 & 4) == 0) {
      goto LABEL_52;
    }
    goto LABEL_51;
  }

                    sub_1001C6CE4(v138, (uint64_t *)&unk_10044A400);
                    goto LABEL_73;
                  }
                }

                else
                {
                  sub_1002354FC((uint64_t)&v251);
                }

                sub_10023568C();
                unsigned int v118 = sub_100235674((uint64_t)v228, v127);
              }
            }

            else
            {
              unsigned int v118 = sub_1002354FC((uint64_t)&v254);
            }

            sub_100235640(v118, &qword_100447EA0);
            unsigned int v125 = 0LL;
            char v124 = 1;
            p_class_meths = &OBJC_PROTOCOL___OS_nw_activity.class_meths;
            goto LABEL_46;
          }
        }

        else
        {
          char v104 = sub_1002354FC((uint64_t)&v255);
          char v85 = v247;
          char v103 = (uint64_t)v237;
        }

        sub_100235640(v104, &qword_100447EA0);
        char v112 = 0LL;
        uint64_t v111 = 1;
        goto LABEL_31;
      }

LABEL_51:
  *((_BYTE *)v5 + 137) = self->_protoEmergency;
  *((_DWORD *)v5 + 38) |= 0x100u;
  if ((*(_DWORD *)&self->_has & 0x400) != 0)
  {
LABEL_17:
    *((_BYTE *)v5 + 139) = self->_protoHasSentInvitation;
    *((_DWORD *)v5 + 38) |= 0x400u;
  }

    char v22 = 0;
    goto LABEL_52;
  }

  if ((*((_BYTE *)v4 + 152) & 4) != 0) {
    goto LABEL_51;
  }
LABEL_21:
  initiator = self->_initiator;
  localMember = self->_localMember;
  if ((unint64_t)localMember | *((void *)v4 + 11))
  {
    if (!-[CSDMessagingConversationMember isEqual:](localMember, "isEqual:")) {
      goto LABEL_51;
    }
  }

  remoteMembers = self->_remoteMembers;
  if ((unint64_t)remoteMembers | *((void *)v4 + 14))
  {
  }

  activeRemoteParticipants = self->_activeRemoteParticipants;
  if ((unint64_t)activeRemoteParticipants | *((void *)v4 + 2))
  {
  }

  activitySessions = self->_activitySessions;
  if ((unint64_t)activitySessions | *((void *)v4 + 3))
  {
  }

  link = self->_link;
  if ((unint64_t)link | *((void *)v4 + 10))
  {
    if (!-[CSDMessagingConversationLink isEqual:](link, "isEqual:")) {
      goto LABEL_51;
    }
  }

  reportuint64_t Data = self->_reportData;
  if ((unint64_t)reportData | *((void *)v4 + 15))
  {
    if (!-[CSDMessagingConversationReport isEqual:](reportData, "isEqual:")) {
      goto LABEL_51;
    }
  }

  conversationProviderIdentifier = self->_conversationProviderIdentifier;
  if ((unint64_t)conversationProviderIdentifier | *((void *)v4 + 5))
  {
  }

  otherInvitedHandles = self->_otherInvitedHandles;
  if ((unint64_t)otherInvitedHandles | *((void *)v4 + 13))
  {
  }

  lightweightMembers = self->_lightweightMembers;
  if ((unint64_t)lightweightMembers | *((void *)v4 + 9))
  {
  }

  activeLightweightParticipants = self->_activeLightweightParticipants;
  if ((unint64_t)activeLightweightParticipants | *((void *)v4 + 1))
  {
  }

  highlightIdentifier = self->_highlightIdentifier;
  if ((unint64_t)highlightIdentifier | *((void *)v4 + 7))
  {
  }

  stagedActivitySession = self->_stagedActivitySession;
  if ((unint64_t)stagedActivitySession | *((void *)v4 + 16))
  {
    if (!-[CSDMessagingConversationActivitySession isEqual:](stagedActivitySession, "isEqual:")) {
      goto LABEL_51;
    }
  }

  char v22 = (*((_BYTE *)v4 + 152) & 1) == 0;
  if ((*(_BYTE *)&self->_has & 1) != 0)
  {
    if ((*((_BYTE *)v4 + 152) & 1) == 0 || self->_avMode != *((_DWORD *)v4 + 8)) {
      goto LABEL_51;
    }
    char v22 = 1;
  }
        }

        char v67 = -[os_log_s countByEnumeratingWithState:objects:count:]( log,  "countByEnumeratingWithState:objects:count:",  &v82,  v93,  16LL);
        if (!v67) {
          goto LABEL_56;
        }
      }
    }
  }

  else
  {
    if (v14)
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_DEFAULT,  "[WARN] Message did not contain a valid activitySession.",  buf,  2u);
    }
}
}

  if (v87 >= 1)
  {
    uint64_t v88 = 0LL;
    while (1)
    {
      if ((v86 & 0xC000000000000001LL) != 0)
      {
        unint64_t v89 = (uint64_t *)specialized _ArrayBuffer._getElementSlowPath(_:)(v88, v86);
      }

      else
      {
        unint64_t v89 = *(uint64_t **)(v86 + 8 * v88 + 32);
        swift_retain(v89);
      }

      swift_release(v89);
LABEL_73:
      if (v87 == ++v88) {
        goto LABEL_74;
      }
    }

    sub_10020EA68((uint64_t)v89, *v89, (uint64_t)&protocol descriptor for AudioInterruptionPriorityProvider);
    swift_retain(v89);
    char v90 = sub_100170614();
    uint64_t v91 = sub_1001AFF14((uint64_t *)&unk_100447E30);
    char v92 = swift_allocObject(v91, 72LL, 7LL);
    *(_OWORD *)(v92 + 16) = xmmword_10037B290;
    v132[0] = v89;
    unsigned int v93 = type metadata accessor for AVAudioSessionInterruptionProvider();
    swift_retain(v89);
    uint64_t v94 = String.init<A>(reflecting:)(v132, v93);
    unint64_t v96 = v95;
    *(void *)(v92 + 56) = &type metadata for String;
    char v97 = sub_1001B2330();
    *(void *)(v92 + 64) = v97;
    *(void *)(v92 + 32) = v94;
    *(void *)(v92 + 40) = v96;
    char v9 = v130;
    char v98 = static os_log_type_t.default.getter(v97);
    os_log(_:dso:log:type:_:)( "Decreasing priority of other AVAudioSession interruption provider %@ to Default",  79LL,  2LL,  &_mh_execute_header,  v90,  v98,  v92);

    swift_bridgeObjectRelease(v92);
    sub_1001E35A8(0);
    sub_10020E9EC((uint64_t)(v89 + 8), (uint64_t)v135, (uint64_t *)&unk_10044B7C0);
    sub_10020E9EC((uint64_t)v135, (uint64_t)v136, (uint64_t *)&unk_10044B7C0);
    unsigned int v99 = sub_1001E42E0((uint64_t)v136);
    uint64_t v100 = 0LL;
    if ((_DWORD)v99 != 1)
    {
      uint64_t v100 = v137;
      if (v137) {
        unsigned int v99 = swift_unknownObjectRetain(v137);
      }
    }

    (*(void (**)(void *__return_ptr, uint64_t))(v130 + 72))(v148, v99);
    sub_10020E9EC((uint64_t)v148, (uint64_t)v150, (uint64_t *)&unk_10044B7C0);
    if (sub_1001E42E0((uint64_t)v150) == 1)
    {
      uint64_t v101 = 0LL;
      if (v100)
      {
LABEL_62:
        swift_unknownObjectRelease(v100);
        if (v101)
        {
          swift_unknownObjectRelease(v101);
          if (v100 == v101) {
            goto LABEL_72;
          }
        }

        goto LABEL_69;
      }
    }

    else
    {
      memcpy(v151, v150, 0x99uLL);
      sub_10020E9EC((uint64_t)&v151[9], (uint64_t)v159, &qword_100449410);
      sub_10020EA18(v159);
      sub_10020E840((uint64_t)v148);
      sub_10020E9EC((uint64_t)v159, (uint64_t)&v161, &qword_100449410);
      uint64_t v101 = v161;
      if (v100) {
        goto LABEL_62;
      }
    }

    if (!v101)
    {
LABEL_72:
      swift_release_n(v89, 2LL);
      goto LABEL_73;
    }

    swift_unknownObjectRelease(v101);
LABEL_69:
    sub_10020E9EC((uint64_t)(v89 + 8), (uint64_t)v131, (uint64_t *)&unk_10044B7C0);
    sub_10020E9EC((uint64_t)v131, (uint64_t)v132, (uint64_t *)&unk_10044B7C0);
    if (sub_1001E42E0((uint64_t)v132) != 1)
    {
      unint64_t v102 = v133;
      if (v133)
      {
        char v103 = v134;
        char v104 = swift_getObjectType(v133);
        swift_unknownObjectRetain(v102);
        sub_1002954D8(0, v104, v103);
        swift_unknownObjectRelease(v102);
      }
    }

    goto LABEL_72;
  }

  __break(1u);
  return result;
}

  unint64_t v83 = [objc_allocWithZone(UNMutableNotificationContent) init];
  sub_100242E28((void *)a1);
  char v85 = v84;
  unsigned int v86 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v85);
  [v83 setBody:v86];

  uint64_t v87 = *(void *)(a1 + 24);
  uint64_t v88 = *(void *)(a1 + 32);
  sub_1001B204C((void *)a1, v87);
  (*(void (**)(uint64_t, uint64_t))(v88 + 32))(v87, v88);
  unint64_t v89 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(0xEB000000006C6C61LL);
  v373 = v83;
  [v83 setCategoryIdentifier:v89];

  char v90 = *(void *)(a1 + 24);
  uint64_t v91 = *(void *)(a1 + 32);
  sub_1001B204C((void *)a1, v90);
  (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v90, v91);
  char v92 = type metadata accessor for Date(0LL);
  isa = 0LL;
  if (sub_1001AB0AC((uint64_t)v23, 1LL, v92) != 1)
  {
    isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(*(void *)(v92 - 8) + 8LL))(v23, v92);
  }

  uint64_t v94 = v373;
  [v373 setDate:isa];

  uint64_t v95 = *(void *)(a1 + 24);
  unint64_t v96 = *(void *)(a1 + 32);
  sub_1001B204C((void *)a1, v95);
  (*(void (**)(uint64_t, uint64_t))(v96 + 40))(v95, v96);
  char v98 = v97;
  unsigned int v99 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v98);
  [v94 setThreadIdentifier:v99];

  if (v43)
  {
    uint64_t v100 = v43;
  }

  else
  {
    sub_1001F88F0(0x4E574F4E4B4E55LL, (void *)0xE700000000000000LL);
    uint64_t v100 = v101;
  }

  v367 = v29;
  v364 = v43;
  swift_bridgeObjectRetain(v43);
  unint64_t v102 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v100);
  [v94 setTitle:v102];

  sub_100243268();
  sub_10024D004();
  char v103 = *(void *)(a1 + 24);
  char v104 = *(void *)(a1 + 32);
  sub_1001B204C((void *)a1, v103);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v104 + 64))(v103, v104) & 1) != 0)
  {
    unsigned int v105 = *(void *)(a1 + 24);
    uint64_t v106 = *(void *)(a1 + 32);
    sub_1001B204C((void *)a1, v105);
    uint64_t v107 = (*(uint64_t (**)(uint64_t, uint64_t))(v106 + 72))(v105, v106);
    if (v108)
    {
      char v109 = v108;
    }

    else
    {
      uint64_t v107 = 0x554A5F454259414DLL;
      char v109 = (void *)0xEA00000000004B4ELL;
    }

    sub_1001F88F0(v107, v109);
    uint64_t v111 = v110;
    swift_bridgeObjectRelease(v109);
    char v112 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v111);
    [v94 setSubtitle:v112];
  }

  *(void *)&v378 = 0xD000000000000016LL;
  *((void *)&v378 + 1) = 0x80000001003737E0LL;
  AnyHashable.init<A>(_:)(v381, &v378, &type metadata for String, &protocol witness table for String);
  unsigned int v113 = *(void *)(a1 + 24);
  uint64_t v114 = *(void *)(a1 + 32);
  sub_1001B204C((void *)a1, v113);
  unint64_t v115 = (*(uint64_t (**)(uint64_t, uint64_t))(v114 + 16))(v113, v114);
  *((void *)&v379 + 1) = &type metadata for String;
  *(void *)&v378 = v115;
  *((void *)&v378 + 1) = v116;
  char v117 = [v94 userInfo];
  unsigned int v118 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)( v117,  &type metadata for AnyHashable,  (char *)&type metadata for Any + 8,  &protocol witness table for AnyHashable);

  *(void *)&v376 = v118;
  sub_1001FC358((uint64_t)&v378, (uint64_t)v381);
  uint64_t v119 = v376;
  uint64_t v120 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v119);
  [v94 setUserInfo:v120];

  *(void *)&v378 = 0xD000000000000013LL;
  *((void *)&v378 + 1) = 0x8000000100373800LL;
  AnyHashable.init<A>(_:)(v381, &v378, &type metadata for String, &protocol witness table for String);
  if (v37)
  {
    *((void *)&v379 + 1) = &type metadata for String;
    *(void *)&v378 = v372;
    *((void *)&v378 + 1) = v37;
  }

  else
  {
    v378 = 0u;
    v379 = 0u;
  }

  unint64_t v121 = (unint64_t)v366;
  char v122 = [v94 userInfo];
  uint64_t v123 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)( v122,  &type metadata for AnyHashable,  (char *)&type metadata for Any + 8,  &protocol witness table for AnyHashable);

  *(void *)&v376 = v123;
  sub_1001FC358((uint64_t)&v378, (uint64_t)v381);
  char v124 = v376;
  unsigned int v125 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v124);
  [v94 setUserInfo:v125];

  uint64_t v126 = *(void *)(a1 + 24);
  unint64_t v127 = *(void *)(a1 + 32);
  sub_1001B204C((void *)a1, v126);
  char v128 = (*(uint64_t (**)(uint64_t, uint64_t))(v127 + 80))(v126, v127);
  v365 = a1;
  if (!v128)
  {
LABEL_67:
    unsigned int v130 = sub_1001AFF14((uint64_t *)&unk_1004478C0);
    uint64_t v131 = swift_allocObject(v130, 48LL, 7LL);
    *(_OWORD *)(v131 + 16) = xmmword_10037B290;
    *(void *)(v131 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(TUCallFilterUnknownCallerAddress);
    *(void *)(v131 + 40) = v132;
LABEL_111:
    sub_10024D040();
    sub_1001F8064(a1, (uint64_t)&v378);
    uint64_t v173 = sub_1001AFF14((uint64_t *)&unk_10044CD80);
    unint64_t v174 = sub_1001B4B94(0LL, (unint64_t *)&unk_100448550, &OBJC_CLASS___CHRecentCall_ptr);
    if (swift_dynamicCast(&v376, &v378, v173, v174, 6LL))
    {
      char v175 = (void *)v376;
      [v94 setShouldAuthenticateDefaultAction:sub_10023E610()];
      [v94 setShouldBackgroundDefaultAction:1];
      sub_10023E520();
      LODWORD(v372) = (v176 & 0x1FFFFFFFFLL) == 2;
      if ((v176 & 0x1FFFFFFFFLL) == 2)
      {
        unsigned int v177 = sub_1001704C4();
        uint64_t v178 = sub_1001AFF14((uint64_t *)&unk_100447E30);
        uint64_t v179 = swift_allocObject(v178, 72LL, 7LL);
        *(_OWORD *)(v179 + 16) = xmmword_10037B290;
        *(void *)&v378 = v175;
        unint64_t v180 = v175;
        char v181 = String.init<A>(reflecting:)(&v378, v174);
        uint64_t v183 = v182;
        *(void *)(v179 + 56) = &type metadata for String;
        uint64_t v184 = sub_1001B2330();
        *(void *)(v179 + 64) = v184;
        *(void *)(v179 + 32) = v181;
        *(void *)(v179 + 40) = v183;
        char v185 = static os_log_type_t.default.getter(v184);
        os_log(_:dso:log:type:_:)( "Recent call was a silenced unknown caller; displaying notification as an alert (%@)",
          83LL,
          2LL,
          &_mh_execute_header,
          v177,
          v185,
          v179);

        swift_bridgeObjectRelease(v179);
      }

      sub_1001A9670(v369, 1LL, 1LL, (uint64_t)v370);
      unsigned int v186 = *(uint64_t (**)(unint64_t))&v374[OBJC_IVAR____TtC13callservicesd31CallHistoryNotificationProvider_findConversationLink];
      if (v186)
      {
        uint64_t v187 = *(void *)&v374[OBJC_IVAR____TtC13callservicesd31CallHistoryNotificationProvider_findConversationLink
                              + 8];
        swift_retain(v187);
        uint64_t v188 = [v175 participantGroupUUID];
        if (v188)
        {
          unint64_t v189 = v188;
          static UUID._unconditionallyBridgeFromObjectiveC(_:)(v188);

          char v190 = 0LL;
        }

        else
        {
          char v190 = 1LL;
        }

        uint64_t v192 = type metadata accessor for UUID(0LL);
        sub_1001A9670(v121, v190, 1LL, v192);
        uint64_t v191 = (char *)v186(v121);
        sub_1001B5D3C((uint64_t)v186, v187);
        sub_1001C6CE4(v121, (uint64_t *)&unk_10044A400);
      }

      else
      {
        uint64_t v191 = 0LL;
      }

      uint64_t v193 = *(void **)&v374[OBJC_IVAR____TtC13callservicesd31CallHistoryNotificationProvider_callProviderManager];
      v374 = v191;
      v194 = sub_10023FC3C(v193, v191);
      if (v194)
      {
        uint64_t v195 = v194;
        BOOL v196 = [v194 URL];
        uint64_t v197 = (uint64_t)v359;
        static URL._unconditionallyBridgeFromObjectiveC(_:)(v196);

        uint64_t v198 = (uint64_t)v370;
        sub_1001A9670(v197, 0LL, 1LL, (uint64_t)v370);
        v199 = v197;
        v200 = v369;
        sub_10024D488(v199, v369, (uint64_t *)&unk_100447DE0);
        v201 = v200;
        v202 = v360;
        sub_10020F1FC(v201, v360, (uint64_t *)&unk_100447DE0);
        if (sub_1001AB0AC(v202, 1LL, v198) == 1)
        {
          v204 = 0LL;
        }

        else
        {
          URL._bridgeToObjectiveC()(v203);
          v204 = v213;
          (*(void (**)(uint64_t, uint64_t))(v362 + 8))(v202, v198);
        }

        [v94 setDefaultActionURL:v204];
      }

      else
      {
        sub_10023FE20();
        if (v205)
        {
          v206 = v205;
          v207 = [v205 URL];

          if (v207)
          {
            v208 = v351;
            static URL._unconditionallyBridgeFromObjectiveC(_:)(v207);

            v209 = (uint64_t)v208;
            v210 = 0LL;
            v211 = v369;
            v212 = v352;
          }

          else
          {
            v210 = 1LL;
            v211 = v369;
            v212 = v352;
            v209 = (uint64_t)v351;
          }

          sub_1001A9670(v209, v210, 1LL, (uint64_t)v370);
          sub_10024D4B4(v209, v212);
        }

        else
        {
          v212 = v352;
          sub_1001A9670(v352, 1LL, 1LL, (uint64_t)v370);
          v211 = v369;
        }

        sub_10024D488(v212, v211, (uint64_t *)&unk_100447DE0);
        URLComponents.init()(v214);
        v215 = *(void *)(a1 + 24);
        v216 = *(void *)(a1 + 32);
        sub_1001B204C((void *)a1, v215);
        v217 = (void *)(*(uint64_t (**)(void *, uint64_t, uint64_t))(v216 + 128))(v193, v215, v216);
        if (v217
          && (v218 = v217, v219 = [v217 isFaceTimeProvider], v218, v219))
        {
          v220 = 0x8000000100373860LL;
          v221 = 0xD000000000000010LL;
        }

        else
        {
          v221 = 0xD000000000000013LL;
          v220 = 0x8000000100373820LL;
        }

        URLComponents.scheme.setter(v221, v220);
        v222 = v354;
        v223 = v353;
        v224 = [v175 uniqueId];
        v225 = static String._unconditionallyBridgeFromObjectiveC(_:)(v224);
        v227 = v226;

        URLQueryItem.init(name:value:)(0x6449657571696E75LL, 0xE800000000000000LL, v225, v227);
        swift_bridgeObjectRelease(v227);
        v228 = sub_1002B0240();
        v229 = *(void *)(v228 + 16);
        if (v229 >= *(void *)(v228 + 24) >> 1) {
          v228 = sub_1002B0240();
        }
        *(void *)(v228 + 16) = v229 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v223 + 32))( v228 + ((*(unsigned __int8 *)(v223 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v223 + 80))
        + *(void *)(v223 + 72) * v229,
          v361,
          v222);
        v230 = URLComponents.queryItems.setter(v228);
        v231 = (uint64_t)v357;
        URLComponents.url.getter(v230);
        v232 = (uint64_t)v370;
        if (sub_1001AB0AC(v231, 1LL, (uint64_t)v370) == 1)
        {
          v234 = 0LL;
        }

        else
        {
          URL._bridgeToObjectiveC()(v233);
          v234 = v235;
          (*(void (**)(uint64_t, uint64_t))(v362 + 8))(v231, v232);
        }

        v236 = v356;
        v237 = v355;
        [v94 setDefaultActionURL:v234];

        (*(void (**)(char *, uint64_t))(v237 + 8))(v363, v236);
      }

      *(void *)&v376 = 0xD000000000000010LL;
      *((void *)&v376 + 1) = 0x8000000100373840LL;
      AnyHashable.init<A>(_:)(&v378, &v376, &type metadata for String, &protocol witness table for String);
      v238 = v369;
      v239 = (uint64_t)v370;
      if (sub_1001AB0AC(v369, 1LL, (uint64_t)v370))
      {
        v376 = 0u;
        v377 = 0u;
      }

      else
      {
        v240 = v362;
        v241 = v358;
        v242 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v362 + 16))(v358, v238, v239);
        v243 = URL.absoluteString.getter(v242);
        v245 = v244;
        (*(void (**)(char *, uint64_t))(v240 + 8))(v241, v239);
        *((void *)&v377 + 1) = &type metadata for String;
        *(void *)&v376 = v243;
        *((void *)&v376 + 1) = v245;
      }

      v246 = [v94 userInfo];
      v247 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)( v246,  &type metadata for AnyHashable,  (char *)&type metadata for Any + 8,  &protocol witness table for AnyHashable);

      v375 = v247;
      sub_1001FC358((uint64_t)&v376, (uint64_t)&v378);
      v248 = v375;
      v249 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v248);
      [v94 setUserInfo:v249];

      sub_1001C6CE4(v238, (uint64_t *)&unk_100447DE0);
    }

    else
    {
      LODWORD(v372) = 0;
    }

    v250 = *(void *)(a1 + 24);
    v251 = *(void *)(a1 + 32);
    sub_1001B204C((void *)a1, v250);
    v252 = (*(uint64_t (**)(uint64_t, uint64_t))(v251 + 24))(v250, v251);
    if (v252)
    {
      unint64_t v121 = v252;
      if (qword_100446950 != -1) {
        goto LABEL_177;
      }
      goto LABEL_148;
    }

    if (qword_100446950 != -1) {
      swift_once(&qword_100446950, sub_100258A88);
    }
    v270 = type metadata accessor for Logger(0LL);
    sub_1001B0D98(v270, (uint64_t)qword_100454210);
    sub_1001F8064(a1, (uint64_t)&v378);
    v274 = (os_log_s *)Logger.logObject.getter(v271, v272, v273);
    v275 = static os_log_type_t.default.getter(v274);
    if (os_log_type_enabled(v274, v275))
    {
      v276 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      v277 = swift_slowAlloc(32LL, -1LL);
      *(void *)&v376 = v277;
      *(_DWORD *)v276 = 136315138;
      v278 = a1;
      v279 = *((void *)&v379 + 1);
      v280 = v380;
      sub_1001B204C(&v378, *((uint64_t *)&v379 + 1));
      v281 = *(uint64_t (**)(uint64_t, uint64_t))(v280 + 16);
      v282 = v279;
      a1 = v278;
      v283 = v280;
      uint64_t v94 = v373;
      v284 = v281(v282, v283);
      v286 = v285;
      v375 = sub_1001D7CF0(v284, v285, (uint64_t *)&v376);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v375, &v376, v276 + 4, v276 + 12);
      swift_bridgeObjectRelease(v286);
      sub_1001B0438(&v378);
      _os_log_impl( (void *)&_mh_execute_header,  v274,  v275,  "Cound not retrieve interaction; using original notification content for call with identifier %s",
        v276,
        0xCu);
      swift_arrayDestroy(v277, 1LL);
      swift_slowDealloc(v277, -1LL, -1LL);
      swift_slowDealloc(v276, -1LL, -1LL);
    }

    else
    {
      sub_1001B0438(&v378);
    }

    v315 = v367;
    v318 = v94;
    goto LABEL_172;
  }

  char v129 = v128;
  if (sub_10023DC08(v128))
  {
    swift_bridgeObjectRelease(v129);
    goto LABEL_67;
  }

  *(void *)&v378 = 0x49746361746E6F63LL;
  *((void *)&v378 + 1) = 0xEB000000006F666ELL;
  AnyHashable.init<A>(_:)(v381, &v378, &type metadata for String, &protocol witness table for String);
  swift_bridgeObjectRetain(v129);
  sub_10023D970();
  char v134 = v133;
  swift_bridgeObjectRelease(v129);
  if (v134)
  {
    char v135 = [v134 value];

    unsigned int v136 = static String._unconditionallyBridgeFromObjectiveC(_:)(v135);
    uint64_t v138 = v137;

    *((void *)&v379 + 1) = &type metadata for String;
    *(void *)&v378 = v136;
    *((void *)&v378 + 1) = v138;
  }

  else
  {
    v378 = 0u;
    v379 = 0u;
  }

  unint64_t v139 = [v94 userInfo];
  char v140 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)( v139,  &type metadata for AnyHashable,  (char *)&type metadata for Any + 8,  &protocol witness table for AnyHashable);

  *(void *)&v376 = v140;
  sub_1001FC358((uint64_t)&v378, (uint64_t)v381);
  uint64_t v141 = v376;
  char v142 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v141);
  [v94 setUserInfo:v142];

  if ((v129 & 0xC000000000000001LL) != 0)
  {
    if (v129 >= 0) {
      unsigned int v144 = v129 & 0xFFFFFFFFFFFFFF8LL;
    }
    else {
      unsigned int v144 = v129;
    }
    uint64_t v145 = __CocoaSet.makeIterator()(v144);
    uint64_t v146 = sub_1001B4B94(0LL, &qword_100447E60, &OBJC_CLASS___CHHandle_ptr);
    sub_10022B8BC(&qword_10044A3F8, &qword_100447E60, &OBJC_CLASS___CHHandle_ptr);
    char v143 = Set.Iterator.init(_cocoa:)(v381, v145, v146, v147);
    char v129 = v381[0];
    v372 = v381[1];
    char v148 = v381[2];
    uint64_t v149 = v381[3];
    a1 = v381[4];
  }

  else
  {
    uint64_t v149 = 0LL;
    BOOL v150 = -1LL << *(_BYTE *)(v129 + 32);
    uint64_t v151 = *(void *)(v129 + 56);
    v372 = v129 + 56;
    char v148 = ~v150;
    char v152 = -v150;
    if (v152 < 64) {
      char v153 = ~(-1LL << v152);
    }
    else {
      char v153 = -1LL;
    }
    a1 = v153 & v151;
  }

  v350[1] = v148;
  unsigned int v154 = _swiftEmptyArrayStorage;
  v371 = (uint8_t *)((unint64_t)(v148 + 64) >> 6);
  v368 = (char *)&type metadata for Swift.AnyObject + 8;
  if (v129 < 0) {
    goto LABEL_83;
  }
  while (1)
  {
    if (a1)
    {
      uint64_t v94 = (id)((a1 - 1) & a1);
      uint64_t v155 = __clz(__rbit64(a1)) | (v149 << 6);
      unint64_t v156 = v149;
      goto LABEL_100;
    }

    unsigned int v161 = v149 + 1;
    if (__OFADD__(v149, 1LL)) {
      break;
    }
    uint64_t v162 = *(void *)(v372 + 8 * v161);
    unint64_t v156 = v149 + 1;
    if (!v162)
    {
      unint64_t v156 = v149 + 2;
      uint64_t v162 = *(void *)(v372 + 8 * v156);
      if (!v162)
      {
        unint64_t v156 = v149 + 3;
        uint64_t v162 = *(void *)(v372 + 8 * v156);
        if (!v162)
        {
          unint64_t v156 = v149 + 4;
          uint64_t v162 = *(void *)(v372 + 8 * v156);
          if (!v162)
          {
            unint64_t v163 = v149 + 5;
            while (v163 < (uint64_t)v371)
            {
              uint64_t v162 = *(void *)(v372 + 8 * v163++);
              if (v162)
              {
                unint64_t v156 = v163 - 1;
                goto LABEL_99;
              }
            }

LABEL_39:
  uint64_t v38 = -[NSString copyWithZone:](self->_groupUUIDString, "copyWithZone:", a3);
  uint64_t v39 = (void *)v5[4];
  void v5[4] = v38;

  if ((*((_BYTE *)&self->_has + 1) & 0x80) != 0)
  {
    *((_BYTE *)v5 + 144) = self->_protoSupportsDTMFUpdates;
    *((_DWORD *)v5 + 38) |= 0x8000u;
  }

  return v5;
}

  if (self->_participantAssociation)
  {
    objc_msgSend(v23, "setParticipantAssociation:");
    uint64_t v20 = v23;
  }

  if ((*((_BYTE *)&self->_has + 1) & 0x10) != 0)
  {
    v20[120] = self->_isUPlusNDowngradeAvailable;
    *((_DWORD *)v20 + 32) |= 0x1000u;
  }

  if (self->_collaborationIdentifier)
  {
    objc_msgSend(v23, "setCollaborationIdentifier:");
    uint64_t v20 = v23;
  }

  unint64_t v21 = self->_has;
  if ((*(_DWORD *)&v21 & 0x10000) != 0)
  {
    v20[124] = self->_supportsLeaveContext;
    *((_DWORD *)v20 + 32) |= 0x10000u;
    unint64_t v21 = self->_has;
    if ((*(_WORD *)&v21 & 0x4000) == 0)
    {
LABEL_47:
      if ((*(_WORD *)&v21 & 0x800) == 0) {
        goto LABEL_48;
      }
      goto LABEL_66;
    }
  }

  else if ((*(_WORD *)&v21 & 0x4000) == 0)
  {
    goto LABEL_47;
  }

  v20[122] = self->_isUPlusOneScreenSharingAvailable;
  *((_DWORD *)v20 + 32) |= 0x4000u;
  unint64_t v21 = self->_has;
  if ((*(_WORD *)&v21 & 0x800) == 0)
  {
LABEL_48:
    if ((*(_WORD *)&v21 & 0x2000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_67;
  }

  BOOL v10 = 0LL;
  if ((*(_BYTE *)&v6 & 8) == 0) {
    goto LABEL_40;
  }
LABEL_34:
  int v11 = 2654435761LL * self->_visionFeatureVersion;
  if ((*(_BYTE *)&v6 & 4) != 0)
  {
LABEL_35:
    int v12 = 2654435761LL * self->_visionCallEstablishmentVersion;
    goto LABEL_42;
  }

    unsigned int v24 = obj;

    id v13 = v43;
    int v11 = v44;
    uint64_t v14 = v42;
    goto LABEL_40;
  }

  if ((v27 & ([v14 failureReason] != (id)4)) == 0)
  {
    if (a6 == -1) {
      goto LABEL_30;
    }
    goto LABEL_26;
  }
}

  return v12;
}

    unsigned int v37 = v11;
    uint64_t v38 = 14LL;
    goto LABEL_40;
  }

  unint64_t v27 = objc_opt_class(&OBJC_CLASS___CXAnswerCallAction, v23);
  if ((objc_opt_isKindOfClass(v10, v27) & 1) != 0)
  {
    __int16 v16 = (os_log_s *)v10;
    uint64_t v29 = -[os_log_s state](v16, "state");
    uint64_t v30 = sub_1001704C4();
    char v31 = (os_log_s *)objc_claimAutoreleasedReturnValue(v30);
    unsigned int v32 = v31;
    if (v29 == (id)1)
    {
      if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)uint64_t v106 = 138412290;
        *(void *)&v106[4] = v16;
        _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_DEFAULT,  "Answer call action fulfilled: %@",  v106,  0xCu);
      }

      uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s dateConnected](v16, "dateConnected"));
      [v11 setDateConnected:v25];
      goto LABEL_17;
    }

    if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR)) {
      sub_1002BA9C0();
    }

    unint64_t v45 = v11;
    char v46 = 509LL;
    goto LABEL_38;
  }

  uint64_t v39 = objc_opt_class(&OBJC_CLASS___CXEndCallAction, v28);
  if ((objc_opt_isKindOfClass(v10, v39) & 1) != 0)
  {
    __int16 v16 = (os_log_s *)v10;
    char v41 = -[os_log_s state](v16, "state");
    char v42 = sub_1001704C4();
    unsigned int v43 = (os_log_s *)objc_claimAutoreleasedReturnValue(v42);
    uint64_t v44 = v43;
    if (v41 != (id)1)
    {
      if (os_log_type_enabled(v43, OS_LOG_TYPE_ERROR)) {
        sub_1002BAA20();
      }

      [v11 setEndedReason:1];
      unint64_t v54 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
      [v11 setDateEnded:v54];

      [v11 setProviderFailureReasonIfNecessary:520];
      goto LABEL_41;
    }

    if (os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t v106 = 138412290;
      *(void *)&v106[4] = v16;
      _os_log_impl((void *)&_mh_execute_header, v44, OS_LOG_TYPE_DEFAULT, "End call action fulfilled: %@", v106, 0xCu);
    }

    uint64_t v26 = objc_claimAutoreleasedReturnValue(-[os_log_s dateEnded](v16, "dateEnded"));
    goto LABEL_16;
  }

  unsigned int v48 = objc_opt_class(&OBJC_CLASS___CXSetHeldCallAction, v40);
  if ((objc_opt_isKindOfClass(v10, v48) & 1) != 0)
  {
    __int16 v16 = (os_log_s *)v10;
    uint64_t v50 = -[os_log_s state](v16, "state");
    unint64_t v51 = sub_1001704C4();
    char v52 = (os_log_s *)objc_claimAutoreleasedReturnValue(v51);
    uint64_t v53 = v52;
    if (v50 == (id)1)
    {
      if (os_log_type_enabled(v52, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)uint64_t v106 = 138412290;
        *(void *)&v106[4] = v16;
        _os_log_impl( (void *)&_mh_execute_header,  v53,  OS_LOG_TYPE_DEFAULT,  "Set held call action fulfilled: %@",  v106,  0xCu);
      }

      objc_msgSend(v11, "setHeld:", -[os_log_s isOnHold](v16, "isOnHold"));
      goto LABEL_41;
    }

    if (v7)
    {
      if (os_log_type_enabled(v52, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)uint64_t v106 = 138412290;
        *(void *)&v106[4] = v16;
        uint64_t v65 = "[WARN] Set held call action failed but reverting state is allowed: %@";
LABEL_72:
        _os_log_impl((void *)&_mh_execute_header, v53, OS_LOG_TYPE_DEFAULT, v65, v106, 0xCu);
        goto LABEL_73;
      }

      goto LABEL_73;
    }

    if (os_log_type_enabled(v52, OS_LOG_TYPE_ERROR)) {
      sub_1002BAA80();
    }

    unint64_t v45 = v11;
    char v46 = 512LL;
    goto LABEL_38;
  }

  uint64_t v55 = objc_opt_class(&OBJC_CLASS___CXSetGroupCallAction, v49);
  if ((objc_opt_isKindOfClass(v10, v55) & 1) != 0)
  {
    __int16 v16 = (os_log_s *)v10;
    if (-[os_log_s state](v16, "state") == (id)1)
    {
      unsigned int v57 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s callUUIDToGroupWith](v16, "callUUIDToGroupWith"));

      if (v57)
      {
        uint64_t v58 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s callUUIDToGroupWith](v16, "callUUIDToGroupWith"));
        uint64_t v59 = (void *)objc_claimAutoreleasedReturnValue(-[CSDProviderCallDataSource _callWithUUID:](self, "_callWithUUID:", v58));

        unint64_t v60 = sub_1001704C4();
        char v61 = (os_log_s *)objc_claimAutoreleasedReturnValue(v60);
        char v62 = v61;
        if (v59)
        {
          if (os_log_type_enabled(v61, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)uint64_t v106 = 138412290;
            *(void *)&v106[4] = v16;
            _os_log_impl( (void *)&_mh_execute_header,  v62,  OS_LOG_TYPE_DEFAULT,  "Set group call action fulfilled: %@",  v106,  0xCu);
          }

          unsigned int v63 = (void *)objc_claimAutoreleasedReturnValue([v59 callGroupUUID]);
          if (!v63)
          {
            uint64_t v64 = (void *)objc_claimAutoreleasedReturnValue(+[NSUUID UUID](&OBJC_CLASS___NSUUID, "UUID"));
            [v59 setCallGroupUUID:v64];
          }

          char v62 = (os_log_s *)objc_claimAutoreleasedReturnValue([v59 callGroupUUID]);
          [v11 setCallGroupUUID:v62];
        }

        else if (os_log_type_enabled(v61, OS_LOG_TYPE_ERROR))
        {
          sub_1002BAAE0((uint64_t)v16, self, v62);
        }
      }

      else
      {
        [v11 setCallGroupUUID:0];
      }

      goto LABEL_41;
    }

    unint64_t v72 = sub_1001704C4();
    char v73 = (os_log_s *)objc_claimAutoreleasedReturnValue(v72);
    uint64_t v53 = v73;
    if (v7)
    {
      if (os_log_type_enabled(v73, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)uint64_t v106 = 138412290;
        *(void *)&v106[4] = v16;
        uint64_t v65 = "[WARN] Set group call action failed but reverting state is allowed: %@";
        goto LABEL_72;
      }

    goto LABEL_40;
  }

  uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue([v15 remoteMembers]);
  unint64_t v27 = [v26 count];

  char v28 = sub_1001704C4();
  unsigned int v18 = (os_log_s *)objc_claimAutoreleasedReturnValue(v28);
  if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v19 = (CSDAbstractFaceTimeConversationProviderDelegate *)objc_claimAutoreleasedReturnValue([v15 remoteMembers]);
    *(_DWORD *)buf = 138412290;
    uint64_t v101 = v19;
    uint64_t v20 = "[WARN] GreenTea device does not support multiple remote members. remoteMembers = %@";
    goto LABEL_16;
  }

              sub_1001B4B8C(v1);
              return;
            }
          }
        }
      }
    }

    sub_1001B4B8C(v5);
    return;
  }

  __break(1u);
}

  __break(1u);
  return result;
}

  __break(1u);
  return result;
}

  __break(1u);
  return result;
}

    sub_1001B4B8C(v5);
    return;
  }

  __break(1u);
}

  __break(1u);
  return result;
}

      uint64_t v38 = __clz(__rbit64(v41)) + (v42 << 6);
      uint64_t v30 = *(unsigned int *)(v25 + 36);
      if (v38 == v28) {
        goto LABEL_49;
      }
    }

    unsigned int v43 = v26 != 0;
    sub_100250C24(v38, v30, v26 != 0, v25);
    unint64_t v45 = v44;
    sub_1001D8CA0(v38, v30, v43);
LABEL_50:
    swift_bridgeObjectRelease(v25);
    char v47 = [(id)objc_opt_self(CXHandle) handleWithTUHandle:v45];

    unint64_t v8 = v14;
    char v9 = v39;
    if (v47)
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      uint64_t v49 = *(void *)((v66 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
      unsigned int v48 = *(void *)((v66 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
      if (v49 >= v48 >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v48 > 1, v49 + 1, 1LL);
      }
      uint64_t v50 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v49, v47);
      uint64_t v7 = (void *)specialized Array._endMutation()(v50, v51, v52, v53, v54, v55, v56, v57, v58);
      unint64_t v8 = v14;
      char v9 = v39;
    }
  }

  if (v9)
  {
    int v12 = (v9 - 1) & v9;
    id v13 = __clz(__rbit64(v9)) | (v8 << 6);
    uint64_t v14 = v8;
LABEL_30:
    unsigned int v18 = *(id *)(*(void *)(v2 + 48) + 8 * v13);
    if (!v18) {
      goto LABEL_54;
    }
    goto LABEL_31;
  }

  uint64_t v19 = v8 + 1;
  if (!__OFADD__(v8, 1LL))
  {
    if (v19 >= v59) {
      goto LABEL_54;
    }
    uint64_t v20 = *(void *)(v60 + 8 * v19);
    uint64_t v14 = v8 + 1;
    if (!v20)
    {
      uint64_t v14 = v8 + 2;
      if (v8 + 2 >= v59) {
        goto LABEL_54;
      }
      uint64_t v20 = *(void *)(v60 + 8 * v14);
      if (!v20)
      {
        uint64_t v14 = v8 + 3;
        if (v8 + 3 >= v59) {
          goto LABEL_54;
        }
        uint64_t v20 = *(void *)(v60 + 8 * v14);
        if (!v20)
        {
          uint64_t v14 = v8 + 4;
          if (v8 + 4 >= v59) {
            goto LABEL_54;
          }
          uint64_t v20 = *(void *)(v60 + 8 * v14);
          if (!v20)
          {
            uint64_t v14 = v8 + 5;
            if (v8 + 5 >= v59) {
              goto LABEL_54;
            }
            uint64_t v20 = *(void *)(v60 + 8 * v14);
            if (!v20)
            {
              unint64_t v21 = v8 + 6;
              while (v21 < v59)
              {
                uint64_t v20 = *(void *)(v60 + 8 * v21++);
                if (v20)
                {
                  uint64_t v14 = v21 - 1;
                  goto LABEL_29;
                }
              }

  __break(1u);
}

LABEL_79:
  if (*((void *)v4 + 4)) {
    -[CSDMessagingCall setGroupUUIDString:](self, "setGroupUUIDString:");
  }
  if ((*((_BYTE *)v4 + 153) & 0x80) != 0)
  {
    self->_protoSupportsDTMFUpdates = *((_BYTE *)v4 + 144);
    *(_DWORD *)&self->_has |= 0x8000u;
  }
}

uint64_t sub_10009A2E4(uint64_t result)
{
  *(_DWORD *)(*(void *)(result + 32) + 204LL) = *(_DWORD *)(result + 40);
  return result;
}

uint64_t sub_10009A378(uint64_t result)
{
  *(_BYTE *)(*(void *)(result + 32) + 196LL) = *(_BYTE *)(result + 40);
  return result;
}

uint64_t sub_10009A40C(uint64_t result)
{
  *(_BYTE *)(*(void *)(result + 32) + 197LL) = *(_BYTE *)(result + 40);
  return result;
}

uint64_t sub_10009A4A0(uint64_t result)
{
  *(_BYTE *)(*(void *)(result + 32) + 199LL) = *(_BYTE *)(result + 40);
  return result;
}

uint64_t sub_10009A534(uint64_t result)
{
  *(_BYTE *)(*(void *)(result + 32) + 200LL) = *(_BYTE *)(result + 40);
  return result;
}

uint64_t sub_10009A5C8(uint64_t result)
{
  *(_DWORD *)(*(void *)(result + 32) + 208LL) = *(_DWORD *)(result + 40);
  return result;
}

uint64_t sub_10009A65C(uint64_t result)
{
  *(_BYTE *)(*(void *)(result + 32) + 201LL) = *(_BYTE *)(result + 40);
  return result;
}

uint64_t sub_10009A6EC(uint64_t result)
{
  *(void *)(*(void *)(result + 32) + 296LL) = *(void *)(result + 40);
  return result;
}

void sub_10009A7B4(uint64_t a1)
{
}

void sub_10009A87C(uint64_t a1)
{
}

void sub_10009A944(uint64_t a1)
{
}

void sub_10009AA0C(uint64_t a1)
{
}

id sub_10009AA9C(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 40);
  v3.receiver = *(id *)(a1 + 32);
  v3.super_class = (Class)&OBJC_CLASS___CSDRelayCall;
  return objc_msgSendSuper2(&v3, "setHardPauseDigitsState:", v1);
}

id sub_10009AB88(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  v3.receiver = *(id *)(a1 + 40);
  v3.super_class = (Class)&OBJC_CLASS___CSDRelayCall;
  return objc_msgSendSuper2(&v3, "setHardPauseDigits:", v1);
}

void sub_10009B9B8(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  unint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) relayDelegate]);
  id v7 = sub_1001704C4();
  unint64_t v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
  BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
  if (a2)
  {
    if (v9)
    {
      uint64_t v10 = *(void *)(a1 + 32);
      int v12 = 138412290;
      uint64_t v13 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "Started conference successfully for answered relay call %@",  (uint8_t *)&v12,  0xCu);
    }

    [v6 relayCallConferenceDidStartSuccessfullyForIncomingAnsweredCall:*(void *)(a1 + 32)];
  }

  else
  {
    if (v9)
    {
      uint64_t v11 = *(void *)(a1 + 32);
      int v12 = 138412546;
      uint64_t v13 = v11;
      __int16 v14 = 2112;
      id v15 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "[WARN] Failed to start conference connection when answering call %@: %@",  (uint8_t *)&v12,  0x16u);
    }

    [v6 relayCallConferenceFailedToStart:*(void *)(a1 + 32)];
  }
}

void sub_10009BAFC(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = sub_1001704C4();
  id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    v10[0] = 67109634;
    v10[1] = a2;
    __int16 v11 = 2112;
    uint64_t v12 = v8;
    __int16 v13 = 2112;
    id v14 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Conference connection stopped (cleanly=%d) for answered call %@: %@",  (uint8_t *)v10,  0x1Cu);
  }

  BOOL v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) relayDelegate]);
  [v9 relayCallConferenceDidStop:*(void *)(a1 + 32) cleanly:a2 error:v5];
}

void sub_10009BCD0(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) relayDelegate]);
  id v7 = sub_1001704C4();
  uint64_t v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
  BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
  if (a2)
  {
    if (v9)
    {
      uint64_t v10 = *(void *)(a1 + 32);
      int v12 = 138412290;
      uint64_t v13 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "Started conference successfully for dialed relay call %@",  (uint8_t *)&v12,  0xCu);
    }

    [v6 relayCallConferenceDidStartSuccessfullyForOutgoingDialedCall:*(void *)(a1 + 32)];
  }

  else
  {
    if (v9)
    {
      uint64_t v11 = *(void *)(a1 + 32);
      int v12 = 138412546;
      uint64_t v13 = v11;
      __int16 v14 = 2112;
      id v15 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "[WARN] Failed to start conference connection when dialing call %@: %@",  (uint8_t *)&v12,  0x16u);
    }

    [v6 relayCallConferenceFailedToStart:*(void *)(a1 + 32)];
  }
}

void sub_10009BE14(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = sub_1001704C4();
  id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    v10[0] = 67109634;
    v10[1] = a2;
    __int16 v11 = 2112;
    uint64_t v12 = v8;
    __int16 v13 = 2112;
    id v14 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Conference connection stopped (cleanly=%d) for dialed call %@: %@",  (uint8_t *)v10,  0x1Cu);
  }

  BOOL v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) relayDelegate]);
  [v9 relayCallConferenceDidStop:*(void *)(a1 + 32) cleanly:a2 error:v5];
}

void sub_10009BFE8(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  id v6 = sub_1001704C4();
  id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  uint64_t v8 = v7;
  if (a2)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      int v11 = 138412290;
      uint64_t v12 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "Started conference successfully for pulled relay call %@",  (uint8_t *)&v11,  0xCu);
    }

    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) relayDelegate]);
    [v10 relayCallConferenceDidStartSuccessfullyForPulledCall:*(void *)(a1 + 32)];
  }

  else
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_1002B4684(a1, (uint64_t)v5, v8);
    }

    [*(id *)(a1 + 32) setEndpointOnCurrentDevice:0];
  }
}

void sub_10009C0F8(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = sub_1001704C4();
  id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    v10[0] = 67109634;
    v10[1] = a2;
    __int16 v11 = 2112;
    uint64_t v12 = v8;
    __int16 v13 = 2112;
    id v14 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Conference connection stopped (cleanly=%d) for pulled call %@: %@",  (uint8_t *)v10,  0x1Cu);
  }

  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) relayDelegate]);
  [v9 relayCallConferenceDidStop:*(void *)(a1 + 32) cleanly:a2 error:v5];
}

id sub_10009C34C(uint64_t a1)
{
  return [*(id *)(a1 + 32) setCallStatus:2];
}

id sub_10009C45C(uint64_t a1)
{
  return [*(id *)(a1 + 32) setCallStatus:1];
}

void sub_10009CD04(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[TUCallHistoryManagerXPCClient callHistoryManagerClientXPCInterface]( &OBJC_CLASS___TUCallHistoryManagerXPCClient,  "callHistoryManagerClientXPCInterface"));
  [*(id *)(*(void *)(a1 + 32) + 24) setRemoteObjectInterface:v2];

  objc_super v3 = (void *)objc_claimAutoreleasedReturnValue( +[TUCallHistoryManagerXPCClient callHistoryManagerServerXPCInterface]( &OBJC_CLASS___TUCallHistoryManagerXPCClient,  "callHistoryManagerServerXPCInterface"));
  [*(id *)(*(void *)(a1 + 32) + 24) setExportedInterface:v3];

  objc_msgSend(*(id *)(*(void *)(a1 + 32) + 24), "setExportedObject:");
  [*(id *)(*(void *)(a1 + 32) + 24) setRequiredConnectionCapability:@"access-call-history"];
  [*(id *)(*(void *)(a1 + 32) + 24) setInterruptionHandler:&stru_1003D8F50];
  [*(id *)(*(void *)(a1 + 32) + 24) setInvalidationHandler:&stru_1003D8F70];
  char v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 24) asynchronousExportedObjectProxy]);
  +[TUCallHistoryManagerXPCClient setAsynchronousServer:]( &OBJC_CLASS___TUCallHistoryManagerXPCClient,  "setAsynchronousServer:",  v4);

  id v5 = (id)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 24) synchronousExportedObjectProxy]);
  +[TUCallHistoryManagerXPCClient setSynchronousServer:]( &OBJC_CLASS___TUCallHistoryManagerXPCClient,  "setSynchronousServer:",  v5);
}

void sub_10009CE10(id a1, CSDClient *a2)
{
  id v2 = a2;
  id v3 = sub_1001704C4();
  char v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = 138412290;
    id v6 = v2;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "XPC connection interrupted from client %@",  (uint8_t *)&v5,  0xCu);
  }
}

void sub_10009CEB8(id a1, CSDClient *a2)
{
  id v2 = a2;
  id v3 = sub_1001704C4();
  char v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = 138412290;
    id v6 = v2;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "XPC connection invalidated from client %@",  (uint8_t *)&v5,  0xCu);
  }
}

id sub_10009CF60(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 24) startListeningOnMachServiceWithName:@"com.apple.telephonyutilities.callservicesdaemon.callhistorymanager"];
}

void sub_10009CFE0(uint64_t a1)
{
  id v1 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientManager]);
  [v1 invalidate];
}

void sub_10009D11C(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) callHistoryManager]);
  [v2 reportRecentCallForConversation:*(void *)(a1 + 40) withStartDate:*(void *)(a1 + 48) avMode:*(void *)(a1 + 56)];
}

void sub_10009D268(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) callHistoryManager]);
  [v2 updateOutgoingLocalParticipantUUID:*(void *)(a1 + 40) forCallsWithOutgoingLocalParticipantUUID:*(void *)(a1 + 48)];
}

void sub_10009D340(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientManager]);
  [v2 addLocalClientObject:*(void *)(a1 + 40)];
}

void sub_10009D418(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientManager]);
  [v2 removeLocalClientObject:*(void *)(a1 + 40)];
}

void sub_10009DAE0(id a1)
{
  id v6 = (id)objc_claimAutoreleasedReturnValue( +[NSCharacterSet characterSetWithCharactersInString:]( &OBJC_CLASS___NSCharacterSet,  "characterSetWithCharactersInString:",  @","));
  uint64_t v1 = objc_claimAutoreleasedReturnValue( +[NSCharacterSet characterSetWithCharactersInString:]( &OBJC_CLASS___NSCharacterSet,  "characterSetWithCharactersInString:",  @";"));
  id v2 = (void *)qword_10044CF30;
  qword_10044CF30 = v1;

  id v3 = objc_alloc_init(&OBJC_CLASS___NSMutableCharacterSet);
  -[NSMutableCharacterSet formUnionWithCharacterSet:](v3, "formUnionWithCharacterSet:", v6);
  -[NSMutableCharacterSet formUnionWithCharacterSet:](v3, "formUnionWithCharacterSet:", qword_10044CF30);
  id v4 = -[NSMutableCharacterSet copy](v3, "copy");
  int v5 = (void *)qword_10044CF38;
  qword_10044CF38 = (uint64_t)v4;
}

void sub_10009E0E0(uint64_t a1)
{
  id v2 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) queue]);
  dispatch_async(v2, *(dispatch_block_t *)(a1 + 40));
}

void sub_10009F820(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) identifiersWaitingForAcknowledgement]);
  unsigned int v3 = [v2 containsObject:*(void *)(a1 + 40)];

  id v4 = sub_1001704C4();
  int v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);
  if (v3)
  {
    if (v6)
    {
      uint64_t v7 = *(void *)(a1 + 40);
      int v9 = 138412290;
      uint64_t v10 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "Received acknowledgement for message with identifier: %@. Removing from waiting messages.",  (uint8_t *)&v9,  0xCu);
    }

    int v5 = (os_log_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) identifiersWaitingForAcknowledgement]);
    -[os_log_s removeObject:](v5, "removeObject:", *(void *)(a1 + 40));
  }

  else if (v6)
  {
    uint64_t v8 = *(void *)(a1 + 40);
    int v9 = 138412290;
    uint64_t v10 = v8;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "[WARN] Received acknowledgement for unknown message with identifier: %@",  (uint8_t *)&v9,  0xCu);
  }
}

void sub_10009FA38(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 56);
  id v3 = sub_1001704C4();
  id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
  int v5 = v4;
  if (v2)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v6 = *(void *)(a1 + 32);
      uint64_t v7 = *(void *)(a1 + 40);
      int v8 = 138412546;
      uint64_t v9 = v6;
      __int16 v10 = 2112;
      uint64_t v11 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "Received successful didSend for message with identifier %@ using account %@",  (uint8_t *)&v8,  0x16u);
    }
  }

  else if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    sub_1002B47B8((void *)a1, v5);
  }
}

void sub_10009FDFC(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);
  [v2 messenger:*(void *)(a1 + 32) handledMessage:*(void *)(a1 + 40) fromDestination:*(void *)(a1 + 48) device:*(void *)(a1 + 56)];
}

void sub_1000A02F4(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[CSDRelayIDSService sharedInstance](&OBJC_CLASS___CSDRelayIDSService, "sharedInstance"));
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 pairedDevice]);

  if (v3)
  {
    unint64_t v40 = v3;
    id v4 = (void *)IDSCopyIDForDevice(v3);
    int v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(+[NSSet setWithObject:](&OBJC_CLASS___NSSet, "setWithObject:", v4));

    uint64_t v6 = objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 32) _sendMessageOptionsWithTimeout:*(unsigned __int8 *)(a1 + 72) wantsAcknowledgement:*(double *)(a1 + 56)]);
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[CSDRelayIDSService sharedInstance](&OBJC_CLASS___CSDRelayIDSService, "sharedInstance"));
    int v8 = (void *)objc_claimAutoreleasedReturnValue([v7 service]);
    uint64_t v9 = (id *)(a1 + 40);
    __int16 v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) data]);
    id v52 = 0LL;
    id v51 = 0LL;
    char v41 = (void *)v6;
    unsigned int v11 = [v8 sendData:v10 toDestinations:v5 priority:300 options:v6 identifier:&v52 error:&v51];
    uint64_t v12 = (__CFString *)v52;
    id v13 = v51;

    id v14 = sub_1001704C4();
    id v15 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      __int16 v16 = (__CFString *)objc_claimAutoreleasedReturnValue([*v9 typeString]);
      *(_DWORD *)buf = 138413058;
      unint64_t v54 = v16;
      __int16 v55 = 2112;
      char v56 = v12;
      __int16 v57 = 2112;
      uint64_t v58 = v41;
      __int16 v59 = 2112;
      unint64_t v60 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "Sending %@ message with identifier %@ and options %@ to destinations %@",  buf,  0x2Au);
    }

    id v17 = sub_1001704C4();
    unsigned int v18 = (os_log_s *)objc_claimAutoreleasedReturnValue(v17);
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v19 = (__CFString *)*v9;
      *(_DWORD *)buf = 138412546;
      unint64_t v54 = v12;
      __int16 v55 = 2112;
      char v56 = v19;
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "identifier %@ message %@", buf, 0x16u);
    }

    id v20 = sub_1001704C4();
    unint64_t v21 = (os_log_s *)objc_claimAutoreleasedReturnValue(v20);
    char v22 = v21;
    char v23 = v13;
    if (v11)
    {
      id v3 = v40;
      if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
      {
        unsigned int v24 = (__CFString *)objc_claimAutoreleasedReturnValue([*v9 typeString]);
        *(_DWORD *)buf = 138412290;
        unint64_t v54 = v24;
        _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "Successfully sent %@ message", buf, 0xCu);
      }

      if (*(void *)(a1 + 48))
      {
        uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue(+[TUCallCenter sharedInstance](&OBJC_CLASS___TUCallCenter, "sharedInstance"));
        uint64_t v26 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v25 queue]);
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472LL;
        block[2] = sub_1000A08DC;
        block[3] = &unk_1003D7E90;
        id v50 = *(id *)(a1 + 48);
        dispatch_async(v26, block);
      }

      if (!*(_BYTE *)(a1 + 72)) {
        goto LABEL_25;
      }
      id v27 = sub_1001704C4();
      char v28 = (os_log_s *)objc_claimAutoreleasedReturnValue(v27);
      if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
      {
        id v29 = [*v9 type];
        if (v29 >= 0x39) {
          uint64_t v30 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)",  v29));
        }
        else {
          uint64_t v30 = off_1003D9050[(int)v29];
        }
        char v36 = *(void **)(a1 + 64);
        *(_DWORD *)buf = 138412802;
        unint64_t v54 = v30;
        __int16 v55 = 2112;
        char v56 = v12;
        __int16 v57 = 2048;
        uint64_t v58 = v36;
        _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_DEFAULT,  "Setting up reliable message delivery for %@ message with identifier: %@ and retry attempts left: %lu",  buf,  0x20u);
      }

      unsigned int v37 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) identifiersWaitingForAcknowledgement]);
      [v37 addObject:v12];

      dispatch_time_t v38 = dispatch_time(0LL, (uint64_t)(*(double *)(a1 + 56) * 1000000000.0));
      uint64_t v39 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) queue]);
      v44[0] = _NSConcreteStackBlock;
      v44[1] = 3221225472LL;
      v44[2] = sub_1000A08EC;
      v44[3] = &unk_1003D9008;
      v44[4] = *(void *)(a1 + 32);
      unint64_t v45 = v12;
      id v46 = *(id *)(a1 + 40);
      uint64_t v47 = *(void *)(a1 + 56);
      uint64_t v48 = *(void *)(a1 + 64);
      dispatch_after(v38, v39, v44);

      char v35 = v45;
    }

    else
    {
      id v3 = v40;
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
        sub_1002B4848((id *)(a1 + 40), (uint64_t)v23, v22);
      }

      if (!*(void *)(a1 + 48)) {
        goto LABEL_25;
      }
      uint64_t v33 = (void *)objc_claimAutoreleasedReturnValue(+[TUCallCenter sharedInstance](&OBJC_CLASS___TUCallCenter, "sharedInstance"));
      unint64_t v34 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v33 queue]);
      v42[0] = _NSConcreteStackBlock;
      v42[1] = 3221225472LL;
      v42[2] = sub_1000A0904;
      v42[3] = &unk_1003D7E90;
      unsigned int v43 = (__CFString *)*(id *)(a1 + 48);
      dispatch_async(v34, v42);

      char v35 = v43;
    }

LABEL_25:
    goto LABEL_26;
  }

  id v31 = sub_1001704C4();
  int v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v31);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    unsigned int v32 = (__CFString *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) typeString]);
    *(_DWORD *)buf = 138412290;
    unint64_t v54 = v32;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "[WARN] No paired device, so unable to send message %@",  buf,  0xCu);
  }

uint64_t sub_1000A08DC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

id sub_1000A08EC(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _retryReliableMessageWithIdentifierIfNecessary:*(void *)(a1 + 40) message:*(void *)(a1 + 48) timeout:*(void *)(a1 + 64) maximumRetryAttempts:*(double *)(a1 + 56)];
}

uint64_t sub_1000A0904(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_1000A0B74(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0LL;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1LL || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0LL;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0LL;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    unint64_t v12 = v6 >> 3;
    if ((v6 >> 3) == 3)
    {
      uint64_t String = PBReaderReadString(a2);
      uint64_t v14 = objc_claimAutoreleasedReturnValue(String);
      uint64_t v15 = 8LL;
    }

    else
    {
      if ((_DWORD)v12 == 2)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0LL;
        *(_BYTE *)(a1 + 28) |= 1u;
        while (1)
        {
          unint64_t v21 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v21 == -1LL || v21 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v22 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v21);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v21 + 1;
          v20 |= (unint64_t)(v22 & 0x7F) << v18;
          if ((v22 & 0x80) == 0) {
            goto LABEL_33;
          }
          v18 += 7;
          BOOL v9 = v19++ >= 9;
          if (v9)
          {
            uint64_t v20 = 0LL;
            goto LABEL_35;
          }
        }

        *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_33:
        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v20 = 0LL;
        }
LABEL_35:
        *(_BYTE *)(a1 + 24) = v20 != 0;
        continue;
      }

      if ((_DWORD)v12 != 1)
      {
        uint64_t result = PBReaderSkipValueWithTag(a2);
        if (!(_DWORD)result) {
          return result;
        }
        continue;
      }

      uint64_t v13 = PBReaderReadString(a2);
      uint64_t v14 = objc_claimAutoreleasedReturnValue(v13);
      uint64_t v15 = 16LL;
    }

    id v17 = *(void **)(a1 + v15);
    *(void *)(a1 + v15) = v14;
  }

  return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

uint64_t sub_1000A15D8(uint64_t a1)
{
  if (a1 == 3) {
    return 2LL;
  }
  else {
    return a1 == 2;
  }
}

uint64_t sub_1000A15F0(int a1)
{
  if (a1 == 1) {
    return 1LL;
  }
  else {
    return 2LL * (a1 == 2);
  }
}

BOOL sub_1000A1608(uint64_t a1)
{
  return a1 == 1;
}

uint64_t sub_1000A1614(uint64_t a1)
{
  if (a1 == 1) {
    return 1LL;
  }
  else {
    return 2 * (a1 == 2);
  }
}

uint64_t sub_1000A162C(uint64_t a1)
{
  else {
    return (a1 + 1);
  }
}

uint64_t sub_1000A1640(uint64_t a1)
{
  if (a1 == 1) {
    return 1LL;
  }
  else {
    return 2LL * (a1 == 2);
  }
}

BOOL sub_1000A1658(BOOL result)
{
  if (result != 2) {
    return result == 1;
  }
  return result;
}

uint64_t sub_1000A166C(uint64_t result)
{
  return result;
}

uint64_t sub_1000A167C(uint64_t result)
{
  return result;
}

uint64_t sub_1000A168C(uint64_t result)
{
  return result;
}

id sub_1000A32AC(CSDMessagingConversationParticipantDidJoinContext *self, SEL a2)
{
  v8.receiver = self;
  v8.super_class = (Class)&OBJC_CLASS___CSDMessagingConversationParticipantDidJoinContext;
  id v3 = -[CSDMessagingConversationParticipantDidJoinContext description](&v8, "description");
  char v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue( -[CSDMessagingConversationParticipantDidJoinContext dictionaryRepresentation]( self,  "dictionaryRepresentation"));
  unint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", @"%@ %@", v4, v5));

  return v6;
}

LABEL_76:
  unint64_t v54 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  self->_videoEnabled,  (void)v63));
  [v3 setObject:v54 forKey:@"videoEnabled"];

  dispatch_time_t v38 = self->_has;
  if ((*(_BYTE *)&v38 & 1) == 0)
  {
LABEL_52:
    if ((*(_BYTE *)&v38 & 0x10) == 0) {
      goto LABEL_54;
    }
    goto LABEL_53;
  }

  PBDataWriterWriteBOOLField(v5, self->_isUPlusOneAVLessAvailable, 25LL);
  uint64_t v30 = self->_has;
  if ((*(_BYTE *)&v30 & 8) == 0)
  {
LABEL_59:
    if ((*(_BYTE *)&v30 & 4) == 0) {
      goto LABEL_61;
    }
    goto LABEL_60;
  }

LABEL_81:
  uint64_t v58 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  self->_isSpatialPersonaEnabled,  (void)v63));
  [v3 setObject:v58 forKey:@"isSpatialPersonaEnabled"];

  uint64_t v44 = self->_has;
  if ((*(_WORD *)&v44 & 0x2000) == 0)
  {
LABEL_64:
    if ((*(_BYTE *)&v44 & 8) == 0) {
      goto LABEL_65;
    }
    goto LABEL_83;
  }

  self->_isUPlusOneAVLessAvailable = *((_BYTE *)v5 + 121);
  *(_DWORD *)&self->_has |= 0x2000u;
  id v29 = *((_DWORD *)v5 + 32);
  if ((v29 & 8) == 0)
  {
LABEL_73:
    if ((v29 & 4) == 0) {
      goto LABEL_75;
    }
    goto LABEL_74;
  }

      char v36 = v166[0];
      if (v36 == sub_1001F0E14()) {
        goto LABEL_7;
      }
    }
  }

  uint64_t v39 = sub_1001C7370(v156, 112LL);
  *(_OWORD *)(v39 + 16) = xmmword_10037B1B0;
  LOBYTE(v181[0]) = v32 & 1;
  unint64_t v40 = sub_1001F0E28();
  AssociatedTypeWitness = &type metadata for String;
  char v41 = v155;
  *(void *)(v39 + 56) = &type metadata for String;
  *(void *)(v39 + 64) = v41;
  *(void *)(v39 + 32) = v40;
  *(void *)(v39 + 40) = v42;
  LOBYTE(v181[0]) = v33 & 1;
  unsigned int v43 = sub_1001F0E28();
  *(void *)(v39 + 96) = &type metadata for String;
  *(void *)(v39 + 104) = v41;
  *(void *)(v39 + 72) = v43;
  *(void *)(v39 + 80) = v44;
  unint64_t v45 = static os_log_type_t.default.getter(v43);
  sub_1001F0DB0( (uint64_t)"Current calls do not support nearby devices (%@) or device doesn't support primary calling (%@)",  95LL,  2LL,  (uint64_t)&_mh_execute_header,  v46,  v45);
  sub_1001B2428();
LABEL_9:
  uint64_t v47 = *(void **)((char *)v162 + qword_100448800);
  if (!v47 || (uint64_t v48 = [v47 v34[404]]) == 0)
  {
LABEL_86:
    sub_1001EEA04((uint64_t)v164);
    sub_1001B0FF8();
    return;
  }

  uint64_t v49 = 0LL;
  id v50 = 1LL << v164[32];
  id v51 = -1LL;
  if (v50 < 64) {
    id v51 = ~(-1LL << v50);
  }
  id v52 = v164 + 56;
  uint64_t v53 = v51 & *((void *)v164 + 7);
  unint64_t v54 = (unint64_t)(v50 + 63) >> 6;
  while (v53)
  {
    __int16 v55 = __clz(__rbit64(v53));
    v53 &= v53 - 1;
    char v56 = v55 | (v49 << 6);
LABEL_34:
    if (*(_BYTE *)(*((void *)v164 + 6) + 56 * v56 + 40) == 1)
    {

      goto LABEL_86;
    }
  }

  __int16 v57 = v49 + 1;
  if (__OFADD__(v49, 1LL))
  {
    __break(1u);
    goto LABEL_88;
  }

  if (v57 >= v54) {
    goto LABEL_85;
  }
  uint64_t v58 = *(void *)&v52[8 * v57];
  ++v49;
  if (v58) {
    goto LABEL_33;
  }
  uint64_t v49 = v57 + 1;
  if (v57 + 1 >= v54) {
    goto LABEL_85;
  }
  uint64_t v58 = *(void *)&v52[8 * v49];
  if (v58) {
    goto LABEL_33;
  }
  uint64_t v49 = v57 + 2;
  if (v57 + 2 >= v54) {
    goto LABEL_85;
  }
  uint64_t v58 = *(void *)&v52[8 * v49];
  if (v58) {
    goto LABEL_33;
  }
  uint64_t v49 = v57 + 3;
  if (v57 + 3 >= v54) {
    goto LABEL_85;
  }
  uint64_t v58 = *(void *)&v52[8 * v49];
  if (v58) {
    goto LABEL_33;
  }
  uint64_t v49 = v57 + 4;
  if (v57 + 4 >= v54) {
    goto LABEL_85;
  }
  uint64_t v58 = *(void *)&v52[8 * v49];
  if (v58)
  {
LABEL_33:
    uint64_t v53 = (v58 - 1) & v58;
    char v56 = __clz(__rbit64(v58)) + (v49 << 6);
    goto LABEL_34;
  }

  __int16 v59 = v57 + 5;
  if (v59 >= v54)
  {
LABEL_85:
    unint64_t v133 = v48;
    sub_1001B9A24(v133, (uint64_t)v166);
    char v134 = v167;
    char v135 = v169;
    v178[0] = v166[0];
    v178[1] = v166[1];
    v178[2] = v166[2];
    v178[3] = v167;
    v178[4] = v168;
    uint64_t v179 = 1;
    unint64_t v180 = v169;
    sub_1001B9234();
    swift_bridgeObjectRetain(v134);
    unsigned int v136 = v135;
    sub_10024AC78();

    uint64_t v137 = v163;
    sub_1001D9020();
    sub_1001B0F5C();

    sub_1001B2428();
    sub_1001AA9C8();
    goto LABEL_86;
  }

  uint64_t v58 = *(void *)&v52[8 * v59];
  if (v58)
  {
    uint64_t v49 = v59;
    goto LABEL_33;
  }

  while (1)
  {
    uint64_t v49 = v59 + 1;
    if (__OFADD__(v59, 1LL)) {
      break;
    }
    if (v49 >= v54) {
      goto LABEL_85;
    }
    uint64_t v58 = *(void *)&v52[8 * v49];
    ++v59;
    if (v58) {
      goto LABEL_33;
    }
  }

  __break(1u);
LABEL_91:
  __break(1u);
}

              __break(1u);
              return;
            }

            __break(1u);
            goto LABEL_81;
          }
        }

        else
        {
          char v85 = v144;
          sub_1002AB56C((uint64_t)v144);
        }

        char v74 = &OBJC_PROTOCOL___CSDCoreTelephonyClient.opt_inst_meths;
        (*(void (**)(char *, uint64_t))(v75 + 8))(v147, v12);
LABEL_39:
        sub_1001BB478((uint64_t)v85, &qword_100447EA0);
        goto LABEL_40;
      }
    }

    else
    {
      char v85 = v149;
      sub_1002AB56C((uint64_t)v149);
    }

    char v74 = &OBJC_PROTOCOL___CSDCoreTelephonyClient.opt_inst_meths;
    goto LABEL_39;
  }

  if (!sub_1001B115C(v73, "dateSentInvitation"))
  {
    uint64_t v76 = v146;
    sub_1002AB56C(v146);
    goto LABEL_26;
  }

  sub_1002AB5CC();

  unint64_t v72 = *(id *)(v75 + 32);
  uint64_t v76 = v146;
  ((void (*)(uint64_t, __objc2_meth_list **, uint64_t))v72)(v146, v74, v12);
  sub_1001A9670(v76, 0LL, 1LL, v12);
  if (sub_1001AB0AC(v76, 1LL, v12) == 1)
  {
LABEL_26:
    char v73 = sub_1001BB478(v76, &qword_100447EA0);
    goto LABEL_27;
  }

  unint64_t v77 = v143;
  char v78 = ((uint64_t (*)(char *, uint64_t, uint64_t))v72)(v143, v76, v12);
  char v79 = sub_1001B115C(v78, "dateCreated");
  sub_1002AB5CC();

  Date.timeIntervalSince(_:)(v74);
  unsigned int v80 = *(void (**)(__objc2_meth_list **, uint64_t))(v75 + 8);
  v80(v74, v12);
  sub_1002355DC();
  if (v49)
  {
    __break(1u);
    goto LABEL_76;
  }

  if (v81 <= -9.22337204e18)
  {
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }

  if (v81 < 9.22337204e18)
  {
    unint64_t v72 = (id)(uint64_t)v81;
    uint64_t v82 = sub_1002AB444();
    sub_10028EA98(v82, "initWithLongLong:");
    sub_1002AB438();
    sub_1002AB524();
    sub_1002AB728();
    sub_1002AB428();
    char v73 = ((uint64_t (*)(char *, uint64_t))v80)(v143, v12);
    goto LABEL_27;
  }

LABEL_82:
  __int16 v59 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  self->_isUPlusOneAVLessAvailable,  (void)v63));
  [v3 setObject:v59 forKey:@"isUPlusOneAVLessAvailable"];

  uint64_t v44 = self->_has;
  if ((*(_BYTE *)&v44 & 8) == 0)
  {
LABEL_65:
    if ((*(_BYTE *)&v44 & 4) == 0) {
      goto LABEL_67;
    }
    goto LABEL_66;
  }

  self->_visionFeatureVersion = *((_DWORD *)v5 + 27);
  *(_DWORD *)&self->_has |= 8u;
  if ((*((_DWORD *)v5 + 32) & 4) != 0)
  {
LABEL_74:
    self->_visionCallEstablishmentVersion = *((_DWORD *)v5 + 26);
    *(_DWORD *)&self->_has |= 4u;
  }

LABEL_83:
  unint64_t v60 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_visionFeatureVersion,  (void)v63));
  [v3 setObject:v60 forKey:@"visionFeatureVersion"];

  if ((*(_DWORD *)&self->_has & 4) != 0)
  {
LABEL_66:
    unint64_t v45 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_visionCallEstablishmentVersion,  (void)v63));
    [v3 setObject:v45 forKey:@"visionCallEstablishmentVersion"];
  }

uint64_t sub_1000A3D10(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0LL;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1LL || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0LL;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0LL;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        char v12 = 0;
        unsigned int v13 = 0;
        uint64_t v14 = 0LL;
        *(_DWORD *)(a1 + 128) |= 2u;
        while (1)
        {
          unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v15 == -1LL || v15 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v16 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
          v14 |= (unint64_t)(v16 & 0x7F) << v12;
          if ((v16 & 0x80) == 0) {
            goto LABEL_186;
          }
          v12 += 7;
          BOOL v9 = v13++ >= 9;
          if (v9)
          {
            LODWORD(v14) = 0;
            goto LABEL_188;
          }
        }

        *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_186:
        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_188:
        uint64_t v118 = 100LL;
        goto LABEL_253;
      case 2u:
        char v18 = objc_alloc_init(&OBJC_CLASS___CSDMessagingConversationMember);
        [(id)a1 addMembers:v18];
        goto LABEL_69;
      case 3u:
        char v18 = objc_alloc_init(&OBJC_CLASS___CSDMessagingConversationMessage);
        objc_storeStrong((id *)(a1 + 40), v18);
        goto LABEL_163;
      case 4u:
        uint64_t String = PBReaderReadString(a2);
        uint64_t v20 = objc_claimAutoreleasedReturnValue(String);
        uint64_t v21 = 56LL;
        goto LABEL_118;
      case 5u:
        uint64_t v22 = PBReaderReadString(a2);
        uint64_t v20 = objc_claimAutoreleasedReturnValue(v22);
        uint64_t v21 = 48LL;
        goto LABEL_118;
      case 6u:
        char v23 = 0;
        unsigned int v24 = 0;
        uint64_t v25 = 0LL;
        *(_DWORD *)(a1 + 128) |= 0x80u;
        while (2)
        {
          unint64_t v26 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v26 == -1LL || v26 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v27 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v26);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v26 + 1;
            v25 |= (unint64_t)(v27 & 0x7F) << v23;
            if (v27 < 0)
            {
              v23 += 7;
              BOOL v9 = v24++ >= 9;
              if (v9)
              {
                uint64_t v25 = 0LL;
                goto LABEL_192;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v25 = 0LL;
        }
LABEL_192:
        BOOL v119 = v25 != 0;
        uint64_t v120 = 115LL;
        goto LABEL_266;
      case 7u:
        char v18 = objc_alloc_init(&OBJC_CLASS___CSDMessagingConversationActivitySession);
        objc_storeStrong((id *)(a1 + 8), v18);
        goto LABEL_163;
      case 8u:
        char v28 = 0;
        unsigned int v29 = 0;
        uint64_t v30 = 0LL;
        *(_DWORD *)(a1 + 128) |= 0x40000u;
        while (2)
        {
          unint64_t v31 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v31 == -1LL || v31 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v32 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v31);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v31 + 1;
            v30 |= (unint64_t)(v32 & 0x7F) << v28;
            if (v32 < 0)
            {
              v28 += 7;
              BOOL v9 = v29++ >= 9;
              if (v9)
              {
                uint64_t v30 = 0LL;
                goto LABEL_196;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v30 = 0LL;
        }
LABEL_196:
        BOOL v119 = v30 != 0;
        uint64_t v120 = 126LL;
        goto LABEL_266;
      case 9u:
        char v33 = 0;
        unsigned int v34 = 0;
        uint64_t v35 = 0LL;
        *(_DWORD *)(a1 + 128) |= 0x400u;
        while (2)
        {
          unint64_t v36 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v36 == -1LL || v36 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v37 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v36);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v36 + 1;
            v35 |= (unint64_t)(v37 & 0x7F) << v33;
            if (v37 < 0)
            {
              v33 += 7;
              BOOL v9 = v34++ >= 9;
              if (v9)
              {
                uint64_t v35 = 0LL;
                goto LABEL_200;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v35 = 0LL;
        }
LABEL_200:
        BOOL v119 = v35 != 0;
        uint64_t v120 = 118LL;
        goto LABEL_266;
      case 0xAu:
        uint64_t v38 = PBReaderReadString(a2);
        uint64_t v20 = objc_claimAutoreleasedReturnValue(v38);
        uint64_t v21 = 80LL;
        goto LABEL_118;
      case 0xBu:
        char v18 = objc_alloc_init(&OBJC_CLASS___CSDMessagingHandle);
        [(id)a1 addOtherInvitedHandles:v18];
        goto LABEL_163;
      case 0xCu:
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0LL;
        *(_DWORD *)(a1 + 128) |= 0x100u;
        while (2)
        {
          unint64_t v42 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v42 == -1LL || v42 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v43 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v42);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v42 + 1;
            v41 |= (unint64_t)(v43 & 0x7F) << v39;
            if (v43 < 0)
            {
              v39 += 7;
              BOOL v9 = v40++ >= 9;
              if (v9)
              {
                uint64_t v41 = 0LL;
                goto LABEL_204;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v41 = 0LL;
        }
LABEL_204:
        BOOL v119 = v41 != 0;
        uint64_t v120 = 116LL;
        goto LABEL_266;
      case 0xDu:
        char v18 = objc_alloc_init(&OBJC_CLASS___CSDMessagingConversationMember);
        [(id)a1 addLightweightMembers:v18];
LABEL_69:
        goto LABEL_163;
      case 0xEu:
        char v44 = 0;
        unsigned int v45 = 0;
        uint64_t v46 = 0LL;
        *(_DWORD *)(a1 + 128) |= 0x40u;
        while (2)
        {
          unint64_t v47 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v47 == -1LL || v47 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v48 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v47);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v47 + 1;
            v46 |= (unint64_t)(v48 & 0x7F) << v44;
            if (v48 < 0)
            {
              v44 += 7;
              BOOL v9 = v45++ >= 9;
              if (v9)
              {
                uint64_t v46 = 0LL;
                goto LABEL_208;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v46 = 0LL;
        }
LABEL_208:
        BOOL v119 = v46 != 0;
        uint64_t v120 = 114LL;
        goto LABEL_266;
      case 0xFu:
        char v49 = 0;
        unsigned int v50 = 0;
        uint64_t v51 = 0LL;
        *(_DWORD *)(a1 + 128) |= 0x20u;
        while (2)
        {
          unint64_t v52 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v52 == -1LL || v52 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v53 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v52);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v52 + 1;
            v51 |= (unint64_t)(v53 & 0x7F) << v49;
            if (v53 < 0)
            {
              v49 += 7;
              BOOL v9 = v50++ >= 9;
              if (v9)
              {
                uint64_t v51 = 0LL;
                goto LABEL_212;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v51 = 0LL;
        }
LABEL_212:
        BOOL v119 = v51 != 0;
        uint64_t v120 = 113LL;
        goto LABEL_266;
      case 0x10u:
        char v54 = 0;
        unsigned int v55 = 0;
        uint64_t v56 = 0LL;
        *(_DWORD *)(a1 + 128) |= 0x80000u;
        while (2)
        {
          unint64_t v57 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v57 == -1LL || v57 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v58 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v57);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v57 + 1;
            v56 |= (unint64_t)(v58 & 0x7F) << v54;
            if (v58 < 0)
            {
              v54 += 7;
              BOOL v9 = v55++ >= 9;
              if (v9)
              {
                uint64_t v56 = 0LL;
                goto LABEL_216;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v56 = 0LL;
        }
LABEL_216:
        BOOL v119 = v56 != 0;
        uint64_t v120 = 127LL;
        goto LABEL_266;
      case 0x11u:
        char v59 = 0;
        unsigned int v60 = 0;
        uint64_t v14 = 0LL;
        *(_DWORD *)(a1 + 128) |= 1u;
        while (2)
        {
          unint64_t v61 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v61 == -1LL || v61 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v62 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v61);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v61 + 1;
            v14 |= (unint64_t)(v62 & 0x7F) << v59;
            if (v62 < 0)
            {
              v59 += 7;
              BOOL v9 = v60++ >= 9;
              if (v9)
              {
                LODWORD(v14) = 0;
                goto LABEL_220;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_220:
        uint64_t v118 = 96LL;
        goto LABEL_253;
      case 0x12u:
        char v63 = 0;
        unsigned int v64 = 0;
        uint64_t v65 = 0LL;
        *(_DWORD *)(a1 + 128) |= 0x10u;
        while (2)
        {
          unint64_t v66 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v66 == -1LL || v66 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v67 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v66);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v66 + 1;
            v65 |= (unint64_t)(v67 & 0x7F) << v63;
            if (v67 < 0)
            {
              v63 += 7;
              BOOL v9 = v64++ >= 9;
              if (v9)
              {
                uint64_t v65 = 0LL;
                goto LABEL_224;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v65 = 0LL;
        }
LABEL_224:
        BOOL v119 = v65 != 0;
        uint64_t v120 = 112LL;
        goto LABEL_266;
      case 0x13u:
        char v18 = objc_alloc_init(&OBJC_CLASS___CSDMessagingConversationParticipantAssociation);
        objc_storeStrong((id *)(a1 + 72), v18);
        goto LABEL_163;
      case 0x14u:
        char v68 = 0;
        unsigned int v69 = 0;
        uint64_t v70 = 0LL;
        *(_DWORD *)(a1 + 128) |= 0x1000u;
        while (2)
        {
          unint64_t v71 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v71 == -1LL || v71 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v72 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v71);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v71 + 1;
            v70 |= (unint64_t)(v72 & 0x7F) << v68;
            if (v72 < 0)
            {
              v68 += 7;
              BOOL v9 = v69++ >= 9;
              if (v9)
              {
                uint64_t v70 = 0LL;
                goto LABEL_228;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v70 = 0LL;
        }
LABEL_228:
        BOOL v119 = v70 != 0;
        uint64_t v120 = 120LL;
        goto LABEL_266;
      case 0x15u:
        uint64_t v73 = PBReaderReadString(a2);
        uint64_t v20 = objc_claimAutoreleasedReturnValue(v73);
        uint64_t v21 = 16LL;
LABEL_118:
        char v74 = *(void **)(a1 + v21);
        *(void *)(a1 + v21) = v20;

        goto LABEL_267;
      case 0x16u:
        char v75 = 0;
        unsigned int v76 = 0;
        uint64_t v77 = 0LL;
        *(_DWORD *)(a1 + 128) |= 0x10000u;
        while (2)
        {
          unint64_t v78 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v78 == -1LL || v78 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v79 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v78);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v78 + 1;
            v77 |= (unint64_t)(v79 & 0x7F) << v75;
            if (v79 < 0)
            {
              v75 += 7;
              BOOL v9 = v76++ >= 9;
              if (v9)
              {
                uint64_t v77 = 0LL;
                goto LABEL_232;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v77 = 0LL;
        }
LABEL_232:
        BOOL v119 = v77 != 0;
        uint64_t v120 = 124LL;
        goto LABEL_266;
      case 0x17u:
        char v80 = 0;
        unsigned int v81 = 0;
        uint64_t v82 = 0LL;
        *(_DWORD *)(a1 + 128) |= 0x4000u;
        while (2)
        {
          unint64_t v83 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v83 == -1LL || v83 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v84 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v83);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v83 + 1;
            v82 |= (unint64_t)(v84 & 0x7F) << v80;
            if (v84 < 0)
            {
              v80 += 7;
              BOOL v9 = v81++ >= 9;
              if (v9)
              {
                uint64_t v82 = 0LL;
                goto LABEL_236;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v82 = 0LL;
        }
LABEL_236:
        BOOL v119 = v82 != 0;
        uint64_t v120 = 122LL;
        goto LABEL_266;
      case 0x18u:
        char v85 = 0;
        unsigned int v86 = 0;
        uint64_t v87 = 0LL;
        *(_DWORD *)(a1 + 128) |= 0x800u;
        while (2)
        {
          unint64_t v88 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v88 == -1LL || v88 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v89 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v88);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v88 + 1;
            v87 |= (unint64_t)(v89 & 0x7F) << v85;
            if (v89 < 0)
            {
              v85 += 7;
              BOOL v9 = v86++ >= 9;
              if (v9)
              {
                uint64_t v87 = 0LL;
                goto LABEL_240;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v87 = 0LL;
        }
LABEL_240:
        BOOL v119 = v87 != 0;
        uint64_t v120 = 119LL;
        goto LABEL_266;
      case 0x19u:
        char v90 = 0;
        unsigned int v91 = 0;
        uint64_t v92 = 0LL;
        *(_DWORD *)(a1 + 128) |= 0x2000u;
        while (2)
        {
          unint64_t v93 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v93 == -1LL || v93 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v94 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v93);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v93 + 1;
            v92 |= (unint64_t)(v94 & 0x7F) << v90;
            if (v94 < 0)
            {
              v90 += 7;
              BOOL v9 = v91++ >= 9;
              if (v9)
              {
                uint64_t v92 = 0LL;
                goto LABEL_244;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v92 = 0LL;
        }
LABEL_244:
        BOOL v119 = v92 != 0;
        uint64_t v120 = 121LL;
        goto LABEL_266;
      case 0x1Au:
        char v95 = 0;
        unsigned int v96 = 0;
        uint64_t v14 = 0LL;
        *(_DWORD *)(a1 + 128) |= 8u;
        while (2)
        {
          unint64_t v97 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v97 == -1LL || v97 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v98 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v97);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v97 + 1;
            v14 |= (unint64_t)(v98 & 0x7F) << v95;
            if (v98 < 0)
            {
              v95 += 7;
              BOOL v9 = v96++ >= 9;
              if (v9)
              {
                LODWORD(v14) = 0;
                goto LABEL_248;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_248:
        uint64_t v118 = 108LL;
        goto LABEL_253;
      case 0x1Bu:
        char v99 = 0;
        unsigned int v100 = 0;
        uint64_t v14 = 0LL;
        *(_DWORD *)(a1 + 128) |= 4u;
        while (2)
        {
          unint64_t v101 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v101 == -1LL || v101 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v102 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v101);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v101 + 1;
            v14 |= (unint64_t)(v102 & 0x7F) << v99;
            if (v102 < 0)
            {
              v99 += 7;
              BOOL v9 = v100++ >= 9;
              if (v9)
              {
                LODWORD(v14) = 0;
                goto LABEL_252;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_252:
        uint64_t v118 = 104LL;
LABEL_253:
        *(_DWORD *)(a1 + v11_Block_object_dispose(va, 8) = v14;
        goto LABEL_267;
      case 0x1Cu:
        char v18 = objc_alloc_init(&OBJC_CLASS___CSDMessagingScreenShareContext);
        objc_storeStrong((id *)(a1 + 88), v18);
        if (PBReaderPlaceMark(a2, v121) && (sub_10005DE5C((uint64_t)v18, a2) & 1) != 0)
        {
LABEL_163:
          PBReaderRecallMark(a2, v121);

LABEL_267:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }

LABEL_269:
        return 0LL;
      case 0x1Du:
        char v103 = 0;
        unsigned int v104 = 0;
        uint64_t v105 = 0LL;
        *(_DWORD *)(a1 + 128) |= 0x8000u;
        while (2)
        {
          unint64_t v106 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v106 == -1LL || v106 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v107 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v106);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v106 + 1;
            v105 |= (unint64_t)(v107 & 0x7F) << v103;
            if (v107 < 0)
            {
              v103 += 7;
              BOOL v9 = v104++ >= 9;
              if (v9)
              {
                uint64_t v105 = 0LL;
                goto LABEL_257;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v105 = 0LL;
        }
LABEL_257:
        BOOL v119 = v105 != 0;
        uint64_t v120 = 123LL;
        goto LABEL_266;
      case 0x1Eu:
        char v108 = 0;
        unsigned int v109 = 0;
        uint64_t v110 = 0LL;
        *(_DWORD *)(a1 + 128) |= 0x20000u;
        while (2)
        {
          unint64_t v111 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v111 == -1LL || v111 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v112 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v111);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v111 + 1;
            v110 |= (unint64_t)(v112 & 0x7F) << v108;
            if (v112 < 0)
            {
              v108 += 7;
              BOOL v9 = v109++ >= 9;
              if (v9)
              {
                uint64_t v110 = 0LL;
                goto LABEL_261;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v110 = 0LL;
        }
LABEL_261:
        BOOL v119 = v110 != 0;
        uint64_t v120 = 125LL;
        goto LABEL_266;
      case 0x1Fu:
        char v113 = 0;
        unsigned int v114 = 0;
        uint64_t v115 = 0LL;
        *(_DWORD *)(a1 + 128) |= 0x200u;
        while (2)
        {
          unint64_t v116 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v116 == -1LL || v116 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v117 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v116);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v116 + 1;
            v115 |= (unint64_t)(v117 & 0x7F) << v113;
            if (v117 < 0)
            {
              v113 += 7;
              BOOL v9 = v114++ >= 9;
              if (v9)
              {
                uint64_t v115 = 0LL;
                goto LABEL_265;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v115 = 0LL;
        }
LABEL_265:
        BOOL v119 = v115 != 0;
        uint64_t v120 = 117LL;
LABEL_266:
        *(_BYTE *)(a1 + v120) = v119;
        goto LABEL_267;
      default:
        uint64_t result = PBReaderSkipValueWithTag(a2);
        if (!(_DWORD)result) {
          return result;
        }
        goto LABEL_267;
    }
  }

LABEL_59:
  *((_BYTE *)v6 + 119) = self->_isSpatialPersonaEnabled;
  *((_DWORD *)v6 + 32) |= 0x800u;
  uint64_t v41 = self->_has;
  if ((*(_WORD *)&v41 & 0x2000) == 0)
  {
LABEL_44:
    if ((*(_BYTE *)&v41 & 8) == 0) {
      goto LABEL_45;
    }
    goto LABEL_61;
  }

  self->_videoEnabled = *((_BYTE *)v5 + 127);
  *(_DWORD *)&self->_has |= 0x80000u;
  unint64_t v26 = *((_DWORD *)v5 + 32);
  if ((v26 & 1) == 0)
  {
LABEL_52:
    if ((v26 & 0x10) == 0) {
      goto LABEL_54;
    }
    goto LABEL_53;
  }

  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
  return result;
}

  uint64_t v87 = sub_1001DBDC4((uint64_t)&unk_1003DF6A0);
  sub_1001DBDE4(v87, (uint64_t)sub_1001DBC98);
  if ((sub_1001DBE50() & 1) == 0)
  {
    sub_1001DBDAC();
    isEscapingClosureAtFileLocation = v115;
  }

  sub_1001DBE18();
  if (v67)
  {
    sub_1001DBDD0();
    unsigned int v91 = v88;
  }

  sub_1001DBE2C(v88, v89, v90, v91);
  *(void *)(v92 + 32) = sub_1001DBDA8;
  *(void *)(v92 + 40) = v87;
  if ((a2 & 0x400000) != 0) {
    goto LABEL_64;
  }
LABEL_37:
  unsigned int v60 = isEscapingClosureAtFileLocation;
  unint64_t v61 = *(void *)(isEscapingClosureAtFileLocation + 16);
  if (v61)
  {
LABEL_69:
    swift_beginAccess(v126, aBlock, 1LL, 0LL);
    unint64_t v97 = v60;
    char v98 = (uint64_t *)(v60 + 40);
    do
    {
      unsigned int v100 = (void (*)(void *, uint64_t *))*(v98 - 1);
      char v99 = *v98;
      v130[0] = v128;
      uint64_t v131 = a2;
      sub_1001D8F58();
      v100(v130, &v131);
      swift_release(v99);
      if (sub_1001AB0AC((uint64_t)v9, 1LL, v129) == 1)
      {
        sub_1001DBBD8((uint64_t)v9);
      }

      else
      {
        sub_1001DBCDC((uint64_t)v9, (uint64_t)v19, type metadata accessor for SoundDescriptorAction);
        sub_1001DBE64(v126, (uint64_t)v16);
        unint64_t v101 = v124;
        sub_1001DBE64((uint64_t)v16, v124);
        char v102 = sub_1001DBE6C(v101);
        if (v102)
        {
          if (v102 == 1) {
            char v103 = 1LL;
          }
          else {
            char v103 = 2LL;
          }
        }

        else
        {
          sub_1001DBC18(v124, type metadata accessor for SoundDescriptor);
          char v103 = 3LL;
        }

        unsigned int v104 = v125;
        sub_1001DBE64((uint64_t)v19, v125);
        uint64_t v105 = sub_1001DBE6C(v104);
        if (v105)
        {
          if (v105 == 1) {
            unint64_t v106 = 1LL;
          }
          else {
            unint64_t v106 = 2LL;
          }
        }

        else
        {
          sub_1001DBC18(v125, type metadata accessor for SoundDescriptor);
          unint64_t v106 = 3LL;
        }

        sub_1001DBC18((uint64_t)v16, type metadata accessor for SoundDescriptorAction);
        if (v103 < v106) {
          sub_1001DBC50((uint64_t)v19, v126);
        }
        sub_1001DBC18((uint64_t)v19, type metadata accessor for SoundDescriptorAction);
      }

      v98 += 2;
      --v61;
    }

    while (v61);
    unsigned int v60 = v97;
  }

  swift_bridgeObjectRelease(v60);

  char v107 = v126;
  swift_beginAccess(v126, v130, 0LL, 0LL);
  sub_1001DBD08(v107, v123, type metadata accessor for SoundDescriptorAction);
  swift_release(v121);
  return swift_release(v122);
}

  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
  return result;
}

void sub_1000A7688( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
}

uint64_t sub_1000A76A8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1000A76B8(uint64_t a1)
{
}

void sub_1000A76C0(void *a1)
{
  id v2 = objc_msgSend((id)CUTWeakLinkClass(@"PHAssetCreationRequest", @"Photos"), "creationRequestForAsset");
  id v7 = (id)objc_claimAutoreleasedReturnValue(v2);
  id v3 = objc_alloc_init((Class)CUTWeakLinkClass(@"PHAssetResourceCreationOptions", @"Photos"));
  [v3 setShouldMoveFile:1];
  [v7 addResourceWithType:1 fileURL:a1[4] options:v3];
  [v7 addResourceWithType:9 fileURL:a1[5] options:v3];
  uint64_t v4 = objc_claimAutoreleasedReturnValue([v7 placeholderForCreatedAsset]);
  uint64_t v5 = *(void *)(a1[6] + 8LL);
  unint64_t v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v4;
}

void sub_1000A7778(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = sub_1001704C4();
  unint64_t v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    id v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) localIdentifier]);
    int v10 = 138412546;
    unsigned int v11 = v7;
    __int16 v12 = 2112;
    id v13 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "saved photo with localIdentifier: %@ error: %@",  (uint8_t *)&v10,  0x16u);
  }

  uint64_t v8 = *(void *)(a1 + 32);
  if (v8)
  {
    BOOL v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) localIdentifier]);
    (*(void (**)(uint64_t, void *, id))(v8 + 16))(v8, v9, v4);
  }
}

void sub_1000A7A3C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
}

void sub_1000A7A5C(uint64_t a1)
{
  id v2 = objc_msgSend( (id)CUTWeakLinkClass(@"PHAssetCreationRequest", @"PHPhotoLibrary"),  "creationRequestForAsset");
  id v7 = (id)objc_claimAutoreleasedReturnValue(v2);
  id v3 = objc_alloc_init((Class)CUTWeakLinkClass(@"PHAssetResourceCreationOptions", @"PHPhotoLibrary"));
  [v3 setShouldMoveFile:1];
  [v7 addResourceWithType:2 fileURL:*(void *)(a1 + 32) options:v3];
  uint64_t v4 = objc_claimAutoreleasedReturnValue([v7 placeholderForCreatedAsset]);
  uint64_t v5 = *(void *)(*(void *)(a1 + 40) + 8LL);
  unint64_t v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v4;
}

void sub_1000A7B00(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = sub_1001704C4();
  unint64_t v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    id v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) localIdentifier]);
    int v10 = 138412546;
    unsigned int v11 = v7;
    __int16 v12 = 2112;
    id v13 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Saved video with localIdentifier: %@ error: %@",  (uint8_t *)&v10,  0x16u);
  }

  uint64_t v8 = *(void *)(a1 + 32);
  if (v8)
  {
    BOOL v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) localIdentifier]);
    (*(void (**)(uint64_t, void *, id))(v8 + 16))(v8, v9, v4);
  }
}

void sub_1000A7DCC(id a1, NSString *a2, NSDictionary *a3)
{
  id v4 = a2;
  id v5 = a3;
  id v6 = sub_1001705A4();
  id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    int v8 = 138412546;
    BOOL v9 = v4;
    __int16 v10 = 2112;
    unsigned int v11 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Logging power log event name=%@ dictionary=%@",  (uint8_t *)&v8,  0x16u);
  }

  if (qword_10044CF68 != -1) {
    dispatch_once(&qword_10044CF68, &stru_1003D92E8);
  }
  off_10044CF60(36LL, v4, v5, 0LL);
}

void sub_1000A7EDC(id a1)
{
  off_10044CF60 = (_UNKNOWN *)CUTWeakLinkSymbol("PLLogRegisteredEvent", @"PowerLog");
}

unint64_t sub_1000A7F08(id a1)
{
  return clock_gettime_nsec_np(_CLOCK_UPTIME_RAW);
}

void sub_1000A9698( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_1000A96B4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v5 = sub_1001704C4();
    id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      id v7 = (void *)objc_claimAutoreleasedReturnValue([v3 service]);
      int v8 = (void *)objc_claimAutoreleasedReturnValue([v7 description]);
      int v10 = 138412290;
      unsigned int v11 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Called begin listening block:%@",  (uint8_t *)&v10,  0xCu);
    }

    BOOL v9 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained conversationManager]);
    [v9 beginListeningOnService:v3];
  }
}

void sub_1000A9A04(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) provider]);
  [v2 reportAudioFinishedForCallWithUUID:*(void *)(a1 + 40)];
}

void sub_1000AB3C8(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  id v8 = a2;
  id v9 = a3;
  unint64_t v15 = _NSConcreteStackBlock;
  uint64_t v16 = 3221225472LL;
  id v17 = sub_1000AB4F0;
  char v18 = &unk_1003D9380;
  int v10 = *(void **)(a1 + 40);
  uint64_t v19 = *(void *)(a1 + 32);
  id v20 = v10;
  id v21 = v8;
  id v22 = v9;
  id v23 = *(id *)(a1 + 48);
  id v24 = *(id *)(a1 + 56);
  id v25 = *(id *)(a1 + 64);
  uint64_t v26 = a5;
  id v11 = v9;
  id v12 = v8;
  dispatch_block_t v13 = dispatch_block_create_with_qos_class( DISPATCH_BLOCK_ENFORCE_QOS_CLASS|DISPATCH_BLOCK_ASSIGN_CURRENT,  QOS_CLASS_USER_INITIATED,  0,  &v15);
  uint64_t v14 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "queue", v15, v16, v17, v18, v19));
  dispatch_async(v14, v13);
}

void sub_1000AB4F0(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) callDataSource]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callUUID]);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v2 _callWithUUID:v3]);

  if (v4)
  {
    id v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSMutableArray arrayWithArray:]( &OBJC_CLASS___NSMutableArray,  "arrayWithArray:",  *(void *)(a1 + 48)));
    id v6 = sub_1001704C4();
    id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v40 = 138412290;
      uint64_t v41 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "modernFTDestinations: %@",  (uint8_t *)&v40,  0xCu);
    }

    id v8 = sub_1001704C4();
    id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      int v10 = *(void **)(a1 + 56);
      int v40 = 138412290;
      uint64_t v41 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "gftOneToOneDestinations: %@",  (uint8_t *)&v40,  0xCu);
    }

    if ([*(id *)(a1 + 56) count])
    {
      id v11 = (void *)objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 32) _createJoinCallAction:*(void *)(a1 + 40) outgoingCallerID:*(void *)(a1 + 64) gftOneToOneDestinations:*(void *)(a1 + 56)]);
      id v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate now](&OBJC_CLASS___NSDate, "now"));
      [v12 timeIntervalSinceDate:*(void *)(a1 + 72)];
      double v14 = v13 * 1000.0;

      if (v14 > 5000.0)
      {
        uint64_t v44 = TUCallTUStartCallActionDuration;
        unint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v14));
        uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v15 stringValue]);
        id v17 = (void *)objc_claimAutoreleasedReturnValue([v16 stringByAppendingString:@"ms duration"]);
        unsigned int v45 = v17;
        char v18 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v45,  &v44,  1LL));

        id v19 = sub_1001704C4();
        id v20 = (os_log_s *)objc_claimAutoreleasedReturnValue(v19);
        if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
        {
          int v40 = 138412290;
          uint64_t v41 = v18;
          _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEFAULT,  "reportJoinDurationLongerThanThreasholdForCallUUID: %@",  (uint8_t *)&v40,  0xCu);
        }

        id v21 = (void *)objc_claimAutoreleasedReturnValue(+[CSDReportingController sharedInstance](&OBJC_CLASS___CSDReportingController, "sharedInstance"));
        id v22 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callUUID]);
        [v21 reportJoinDurationLongerThanThreasholdForCallUUID:v22 report:v18];
      }

      id v23 = sub_1001704C4();
      id v24 = (os_log_s *)objc_claimAutoreleasedReturnValue(v23);
      if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v25 = *(void *)(a1 + 56);
        int v40 = 138412546;
        uint64_t v41 = v11;
        __int16 v42 = 2112;
        uint64_t v43 = v25;
        _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEFAULT,  "Created join call action: %@ for gftOneToOneDestinations: %@",  (uint8_t *)&v40,  0x16u);
      }

      [*(id *)(a1 + 32) provider:*(void *)(a1 + 80) performJoinCallAction:v11 shouldUseIDSDemuxer:0];
      if (![v5 count])
      {
        uint64_t v26 = objc_alloc_init(&OBJC_CLASS___CXCallUpdate);
        -[CXCallUpdate setConversation:](v26, "setConversation:", 1LL);
        char v27 = *(void **)(a1 + 80);
        char v28 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callUUID]);
        [v27 reportCallWithUUID:v28 updated:v26];
      }
    }

    if ([v5 count]) {
      [*(id *)(a1 + 32) initiateModernFTInviteForAction:*(void *)(a1 + 40) destinations:v5 excludedIMAVDestinations:*(void *)(a1 + 56) joinCallActionToFulfill:0];
    }
    if (![*(id *)(a1 + 56) count] && !objc_msgSend(v5, "count"))
    {
      id v29 = sub_1001704C4();
      uint64_t v30 = (os_log_s *)objc_claimAutoreleasedReturnValue(v29);
      if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR)) {
        sub_1002B48F8();
      }

      unint64_t v31 = objc_alloc_init(&OBJC_CLASS___CXCallFailureContext);
      -[CXCallFailureContext setProviderErrorCode:](v31, "setProviderErrorCode:", *(void *)(a1 + 88));
      if ((TUIsIDSAvailableForFaceTime(-[CXCallFailureContext setFailureReason:](v31, "setFailureReason:", 11LL)) & 1) == 0)
      {
        -[CXCallFailureContext setFailureReason:](v31, "setFailureReason:", 22LL);
        id v32 = sub_1001704C4();
        char v33 = (os_log_s *)objc_claimAutoreleasedReturnValue(v32);
        if (os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT))
        {
          LOWORD(v40) = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v33,  OS_LOG_TYPE_DEFAULT,  "TUIsIDSAvailableForFaceTime returns false for start call action",  (uint8_t *)&v40,  2u);
        }
      }

      unsigned int v34 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) provider]);
      uint64_t v35 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callUUID]);
      unint64_t v36 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate now](&OBJC_CLASS___NSDate, "now"));
      [v34 reportCallWithUUID:v35 failedAtDate:v36 withContext:v31];

      [*(id *)(a1 + 40) fail];
    }

    char v37 = *(void **)(a1 + 32);
    uint64_t v38 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callUUID]);
    [v37 _processDelayedActionList:v38 provider:*(void *)(a1 + 80)];
  }

  else
  {
    id v39 = sub_1001704C4();
    id v5 = (void *)objc_claimAutoreleasedReturnValue(v39);
    if (os_log_type_enabled((os_log_t)v5, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v40) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v5,  OS_LOG_TYPE_DEFAULT,  "Skipping to invite remote destinations since we don't have a call tracking any longer",  (uint8_t *)&v40,  2u);
    }
  }
}

void sub_1000ABB58(uint64_t a1, void *a2, int a3)
{
  id v5 = a2;
  id v6 = sub_1001704C4();
  id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412546;
    id v42 = v5;
    __int16 v43 = 1024;
    int v44 = a3;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Invited push tokens via IDS: %@ wasCanceled: %d",  buf,  0x12u);
  }

  id v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) callDataSource]);
  id v9 = (id *)(a1 + 40);
  int v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callUUID]);
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v8 _callWithUUID:v10]);

  if (v11)
  {
    if ((a3 & 1) != 0)
    {
      id v12 = sub_1001704C4();
      double v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "Not sending IMAV invites because IDS session was canceled",  buf,  2u);
      }
    }

    else
    {
      double v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(+[NSMutableArray arrayWithArray:](&OBJC_CLASS___NSMutableArray, "arrayWithArray:", v5));
      __int128 v36 = 0u;
      __int128 v37 = 0u;
      __int128 v38 = 0u;
      __int128 v39 = 0u;
      id v17 = *(id *)(a1 + 48);
      id v18 = [v17 countByEnumeratingWithState:&v36 objects:v40 count:16];
      if (v18)
      {
        id v19 = v18;
        uint64_t v20 = *(void *)v37;
        do
        {
          id v21 = 0LL;
          do
          {
            if (*(void *)v37 != v20) {
              objc_enumerationMutation(v17);
            }
            id v22 = *(void **)(*((void *)&v36 + 1) + 8LL * (void)v21);
            id v35 = 0LL;
            id v23 = [v22 _stripPotentialTokenURIWithToken:&v35];
            id v24 = v35;
            -[os_log_s addObject:](v13, "addObject:", v24);

            id v21 = (char *)v21 + 1;
          }

          while (v19 != v21);
          id v19 = [v17 countByEnumeratingWithState:&v36 objects:v40 count:16];
        }

        while (v19);
      }

      uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) faceTimeIMAVProviderDelegate]);
      uint64_t v26 = *(void *)(a1 + 40);
      id v27 = -[os_log_s copy](v13, "copy");
      [v25 inviteIMAVPeersWithAction:v26 tokensToExclude:v27 joinCallActionToFulfill:*(void *)(a1 + 56)];

      char v28 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) faceTimeIDSProviderDelegate]);
      id v29 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callUUID]);
      if ([v28 isManagingCallWithUUID:v29])
      {
      }

      else
      {
        uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) faceTimeIMAVProviderDelegate]);
        unint64_t v31 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callUUID]);
        unsigned __int8 v32 = [v30 isManagingCallWithUUID:v31];

        if ((v32 & 1) == 0)
        {
          id v33 = sub_1001704C4();
          unsigned int v34 = (os_log_s *)objc_claimAutoreleasedReturnValue(v33);
          if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR)) {
            sub_1002B49A4(v9);
          }

          [*v9 fail];
        }
      }
    }
  }

  else
  {
    id v14 = sub_1001704C4();
    unint64_t v15 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
      sub_1002B4924((id *)(a1 + 40));
    }

    double v13 = (os_log_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) faceTimeIDSProviderDelegate]);
    uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callUUID]);
    -[os_log_s endCallWithUUIDAsLocalHangup:](v13, "endCallWithUUIDAsLocalHangup:", v16);
  }
}

void sub_1000AC8C0(uint64_t a1, void *a2, void *a3, void *a4, uint64_t a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1000AC9E8;
  block[3] = &unk_1003D93F8;
  id v12 = *(void **)(a1 + 40);
  void block[4] = *(void *)(a1 + 32);
  id v19 = v12;
  id v20 = v9;
  id v21 = v10;
  id v22 = v11;
  id v23 = *(id *)(a1 + 48);
  uint64_t v24 = a5;
  id v13 = v11;
  id v14 = v10;
  id v15 = v9;
  dispatch_block_t v16 = dispatch_block_create_with_qos_class( DISPATCH_BLOCK_ENFORCE_QOS_CLASS|DISPATCH_BLOCK_ASSIGN_CURRENT,  QOS_CLASS_USER_INITIATED,  0,  block);
  id v17 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) queue]);
  dispatch_async(v17, v16);
}

void sub_1000AC9E8(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) callDataSource]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callUUID]);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v2 _callWithUUID:v3]);

  id v5 = sub_1001704C4();
  id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
  BOOL v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);
  if (v4)
  {
    if (v7)
    {
      id v8 = *(CXStartCallAction **)(a1 + 48);
      int v45 = 138412290;
      uint64_t v46 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "modernFTDestinations: %@",  (uint8_t *)&v45,  0xCu);
    }

    id v9 = sub_1001704C4();
    id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      id v11 = *(CXStartCallAction **)(a1 + 56);
      int v45 = 138412290;
      uint64_t v46 = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "gftOneToOneDestinations: %@",  (uint8_t *)&v45,  0xCu);
    }

    id v12 = sub_1001704C4();
    id v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      id v14 = *(CXStartCallAction **)(a1 + 64);
      int v45 = 138412290;
      uint64_t v46 = v14;
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "screenSharingRemoteControlDestinations: %@",  (uint8_t *)&v45,  0xCu);
    }

    id v15 = *(id *)(a1 + 56);
    id v16 = *(id *)(a1 + 48);
    id v17 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) featureFlags]);
    if ([v17 usesModernScreenSharingFromMessages])
    {
      id v18 = [*(id *)(a1 + 40) screenShareRequestType];

      if (v18)
      {
        id v6 = (os_log_s *)*(id *)(a1 + 64);

        id v19 = [*(id *)(a1 + 64) count];
        if (v19 < [*(id *)(a1 + 56) count] || objc_msgSend(*(id *)(a1 + 48), "count")) {
          [*(id *)(a1 + 40) setShouldSendLegacyScreenSharingInvite:1];
        }
        id v16 = &__NSArray0__struct;
        goto LABEL_18;
      }
    }

    else
    {
    }

    id v6 = (os_log_s *)v15;
LABEL_18:
    if (-[os_log_s count](v6, "count"))
    {
      id v20 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](&OBJC_CLASS___NSSet, "setWithArray:", v6));
      [*(id *)(a1 + 40) setRemotePushTokens:v20];

      id v21 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) faceTimeConversationProviderDelegate]);
      [v21 provider:*(void *)(a1 + 72) performJoinCallAction:*(void *)(a1 + 40)];
    }

    if ([v16 count])
    {
      id v22 = objc_alloc(&OBJC_CLASS___CXStartCallAction);
      id v23 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callUUID]);
      uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) remoteMembers]);
      uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue([v24 anyObject]);
      uint64_t v26 = -[CXStartCallAction initWithCallUUID:handle:](v22, "initWithCallUUID:handle:", v23, v25);

      -[CXStartCallAction setVideo:](v26, "setVideo:", [*(id *)(a1 + 40) isVideo]);
      id v27 = sub_1001704C4();
      char v28 = (os_log_s *)objc_claimAutoreleasedReturnValue(v27);
      if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v29 = *(void *)(a1 + 48);
        int v45 = 138412546;
        uint64_t v46 = v26;
        __int16 v47 = 2112;
        uint64_t v48 = v29;
        _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_DEFAULT,  "Created start call action: %@ for modernFTDestinations: %@",  (uint8_t *)&v45,  0x16u);
      }

      uint64_t v30 = *(void **)(a1 + 32);
      if (-[os_log_s count](v6, "count")) {
        uint64_t v31 = 0LL;
      }
      else {
        uint64_t v31 = *(void *)(a1 + 40);
      }
      [v30 initiateModernFTInviteForAction:v26 destinations:v16 excludedIMAVDestinations:v6 joinCallActionToFulfill:v31];
      if (!-[os_log_s count](v6, "count"))
      {
        unsigned __int8 v32 = objc_alloc_init(&OBJC_CLASS___CXCallUpdate);
        -[CXCallUpdate setConversation:](v32, "setConversation:", 0LL);
        id v33 = *(void **)(a1 + 72);
        unsigned int v34 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callUUID]);
        [v33 reportCallWithUUID:v34 updated:v32];
      }
    }

    if (!-[os_log_s count](v6, "count") && ![v16 count])
    {
      id v35 = sub_1001704C4();
      __int128 v36 = (os_log_s *)objc_claimAutoreleasedReturnValue(v35);
      if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR)) {
        sub_1002B4AA8();
      }

      __int128 v37 = objc_alloc_init(&OBJC_CLASS___CXCallFailureContext);
      -[CXCallFailureContext setProviderErrorCode:](v37, "setProviderErrorCode:", *(void *)(a1 + 80));
      if ((TUIsIDSAvailableForFaceTime(-[CXCallFailureContext setFailureReason:](v37, "setFailureReason:", 11LL)) & 1) == 0)
      {
        id v38 = sub_1001704C4();
        __int128 v39 = (os_log_s *)objc_claimAutoreleasedReturnValue(v38);
        if (os_log_type_enabled(v39, OS_LOG_TYPE_DEFAULT))
        {
          LOWORD(v45) = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v39,  OS_LOG_TYPE_DEFAULT,  "TUIsIDSAvailableForFaceTime returns false for join call action",  (uint8_t *)&v45,  2u);
        }

        -[CXCallFailureContext setFailureReason:](v37, "setFailureReason:", 22LL);
      }

      int v40 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) provider]);
      uint64_t v41 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callUUID]);
      id v42 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate now](&OBJC_CLASS___NSDate, "now"));
      [v40 reportCallWithUUID:v41 failedAtDate:v42 withContext:v37];

      [*(id *)(a1 + 40) fail];
    }

    __int16 v43 = *(void **)(a1 + 32);
    int v44 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callUUID]);
    [v43 _processDelayedActionList:v44 provider:*(void *)(a1 + 72)];

    goto LABEL_39;
  }

  if (v7)
  {
    LOWORD(v45) = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Skipping to invite remote destinations since we don't have a call tracking any longer",  (uint8_t *)&v45,  2u);
  }

uint64_t sub_1000B1C28(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0LL;
    while (1)
    {
      uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v8 = v7 + 1;
      if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v9 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
      v6 |= (unint64_t)(v9 & 0x7F) << v4;
      if ((v9 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        unint64_t v6 = 0LL;
        int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0LL;
    }
LABEL_13:
    if (v11 || (v6 & 7) == 4) {
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t String = PBReaderReadString(a2);
        uint64_t v14 = objc_claimAutoreleasedReturnValue(String);
        id v15 = *(void **)(a1 + 24);
        *(void *)(a1 + 24) = v14;

        goto LABEL_32;
      case 2u:
        id v17 = objc_alloc_init(&OBJC_CLASS___CSDMessagingConversationActivity);
        objc_storeStrong((id *)(a1 + 16), v17);
        goto LABEL_29;
      case 3u:
        *(_BYTE *)(a1 + 40) |= 1u;
        unint64_t v18 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v18 <= 0xFFFFFFFFFFFFFFF7LL && v18 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v19 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v18);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v18 + 8;
        }

        else
        {
          *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v19 = 0LL;
        }

        *(void *)(a1 + _Block_object_dispose(va, 8) = v19;
        goto LABEL_32;
      case 4u:
        id v17 = objc_alloc_init(&OBJC_CLASS___CSDMessagingConversationActivitySessionLocallyPersistedMetadata);
        objc_storeStrong((id *)(a1 + 32), v17);
        if (PBReaderPlaceMark(a2, v20) && (sub_10005E6B0((uint64_t)v17, a2) & 1) != 0)
        {
LABEL_29:
          PBReaderRecallMark(a2, v20);

LABEL_32:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }

BOOL sub_1000B270C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0LL;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1LL || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        unint64_t v6 = 0LL;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0LL;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t String = PBReaderReadString(a2);
        uint64_t v13 = objc_claimAutoreleasedReturnValue(String);
        uint64_t v14 = 32LL;
        goto LABEL_26;
      case 2u:
        uint64_t v15 = PBReaderReadString(a2);
        uint64_t v13 = objc_claimAutoreleasedReturnValue(v15);
        uint64_t v14 = 16LL;
        goto LABEL_26;
      case 3u:
        uint64_t v16 = PBReaderReadString(a2);
        uint64_t v13 = objc_claimAutoreleasedReturnValue(v16);
        uint64_t v14 = 24LL;
        goto LABEL_26;
      case 4u:
        uint64_t v17 = PBReaderReadString(a2);
        uint64_t v13 = objc_claimAutoreleasedReturnValue(v17);
        uint64_t v14 = 8LL;
        goto LABEL_26;
      case 5u:
        uint64_t v18 = PBReaderReadString(a2);
        uint64_t v13 = objc_claimAutoreleasedReturnValue(v18);
        uint64_t v14 = 40LL;
        goto LABEL_26;
      case 6u:
        uint64_t v19 = PBReaderReadString(a2);
        uint64_t v13 = objc_claimAutoreleasedReturnValue(v19);
        uint64_t v14 = 48LL;
LABEL_26:
        id v20 = *(CSDMessagingPersonNameComponents **)(a1 + v14);
        *(void *)(a1 + v14) = v13;
        goto LABEL_27;
      case 7u:
        id v20 = objc_alloc_init(&OBJC_CLASS___CSDMessagingPersonNameComponents);
        objc_storeStrong((id *)(a1 + 56), v20);
        if (PBReaderPlaceMark(a2, v22) && (sub_1000B270C(v20, a2) & 1) != 0)
        {
          PBReaderRecallMark(a2, v22);
LABEL_27:

LABEL_28:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }

        return 0LL;
      default:
        if ((PBReaderSkipValueWithTag(a2) & 1) == 0) {
          return 0LL;
        }
        goto LABEL_28;
    }
  }

uint64_t sub_1000B349C(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0LL;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1LL || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0LL;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0LL;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      break;
    }
    if ((v6 >> 3) == 2)
    {
      uint64_t v17 = objc_alloc_init(&OBJC_CLASS___CSDMessagingConversationLink);
      [(id)a1 addLink:v17];
      if (!PBReaderPlaceMark(a2, v19) || (sub_10000960C((uint64_t)v17, a2) & 1) == 0)
      {

        return 0LL;
      }

      PBReaderRecallMark(a2, v19);
    }

    else if ((v6 >> 3) == 1)
    {
      char v12 = 0;
      unsigned int v13 = 0;
      uint64_t v14 = 0LL;
      *(_BYTE *)(a1 + 20) |= 1u;
      while (1)
      {
        unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v15 == -1LL || v15 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v16 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
        v14 |= (unint64_t)(v16 & 0x7F) << v12;
        if ((v16 & 0x80) == 0) {
          goto LABEL_32;
        }
        v12 += 7;
        BOOL v9 = v13++ >= 9;
        if (v9)
        {
          LODWORD(v14) = 0;
          goto LABEL_34;
        }
      }

      *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_32:
      if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        LODWORD(v14) = 0;
      }
LABEL_34:
      *(_DWORD *)(a1 + 16) = v14;
    }

    else
    {
      uint64_t result = PBReaderSkipValueWithTag(a2);
      if (!(_DWORD)result) {
        return result;
      }
    }
  }

  return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_1000B3DA8(uint64_t a1)
{
  uint64_t v1 = -[CSDRelayConferenceInterface initWithSerialQueue:]( objc_alloc(&OBJC_CLASS___CSDRelayConferenceInterface),  "initWithSerialQueue:",  *(void *)(a1 + 32));
  id v2 = (void *)qword_10044CF70;
  qword_10044CF70 = (uint64_t)v1;
}

CSDAVConference *__cdecl sub_1000B3EEC(id a1)
{
  return objc_alloc_init(&OBJC_CLASS___CSDAVConference);
}

void sub_1000B3F9C(id a1)
{
  id v1 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
  [v1 postNotificationName:@"CSDRelayConferenceMutedChangedNotification" object:0];
}

void sub_1000B544C(uint64_t a1)
{
  id v2 = (id *)(a1 + 32);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) conferenceConnections]);
  uint64_t v5 = *(void *)(a1 + 40);
  char v4 = (void **)(a1 + 40);
  unsigned int v6 = [v3 containsObject:v5];

  if (v6)
  {
    id v7 = sub_1001704C4();
    char v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_1002B4BF0(v2, v4, v8);
    }

    id v9 = *v2;
    int v10 = (void *)objc_claimAutoreleasedReturnValue([*v4 conference]);
    [v9 _cleanUpAllConferenceConnectionsForConference:v10 withError:0];
  }

void sub_1000B6B60(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) conferencesAwaitingConnectionClose]);
  unsigned int v3 = [v2 containsObject:*(void *)(a1 + 40)];

  if (v3)
  {
    id v4 = sub_1001704C4();
    uint64_t v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v6 = *(void *)(a1 + 40);
      int v7 = 138412290;
      uint64_t v8 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "[WARN] Timed out waiting for conference %@ to close connection after receiving end",  (uint8_t *)&v7,  0xCu);
    }

    [*(id *)(a1 + 32) _postDidCloseNotificationForConferenceIfNecessary:*(void *)(a1 + 40)];
  }

uint64_t sub_1000B8644(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0LL;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1LL || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0LL;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0LL;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        char v12 = 0;
        unsigned int v13 = 0;
        uint64_t v14 = 0LL;
        *(_BYTE *)(a1 + 96) |= 8u;
        while (1)
        {
          unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v15 == -1LL || v15 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v16 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
          v14 |= (unint64_t)(v16 & 0x7F) << v12;
          if ((v16 & 0x80) == 0) {
            goto LABEL_74;
          }
          v12 += 7;
          BOOL v9 = v13++ >= 9;
          if (v9)
          {
            LODWORD(v14) = 0;
            goto LABEL_76;
          }
        }

        *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_74:
        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_76:
        uint64_t v42 = 88LL;
        goto LABEL_93;
      case 2u:
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v14 = 0LL;
        *(_BYTE *)(a1 + 96) |= 4u;
        while (2)
        {
          unint64_t v20 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v20 == -1LL || v20 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v21 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v20);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v20 + 1;
            v14 |= (unint64_t)(v21 & 0x7F) << v18;
            if (v21 < 0)
            {
              v18 += 7;
              BOOL v9 = v19++ >= 9;
              if (v9)
              {
                LODWORD(v14) = 0;
                goto LABEL_80;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_80:
        uint64_t v42 = 76LL;
        goto LABEL_93;
      case 3u:
        char v22 = 0;
        unsigned int v23 = 0;
        uint64_t v14 = 0LL;
        *(_BYTE *)(a1 + 96) |= 2u;
        while (2)
        {
          unint64_t v24 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v24 == -1LL || v24 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v25 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v24);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v24 + 1;
            v14 |= (unint64_t)(v25 & 0x7F) << v22;
            if (v25 < 0)
            {
              v22 += 7;
              BOOL v9 = v23++ >= 9;
              if (v9)
              {
                LODWORD(v14) = 0;
                goto LABEL_84;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_84:
        uint64_t v42 = 72LL;
        goto LABEL_93;
      case 4u:
        uint64_t String = PBReaderReadString(a2);
        uint64_t v27 = objc_claimAutoreleasedReturnValue(String);
        uint64_t v28 = 80LL;
        goto LABEL_44;
      case 5u:
        uint64_t v29 = PBReaderReadString(a2);
        uint64_t v27 = objc_claimAutoreleasedReturnValue(v29);
        uint64_t v28 = 24LL;
        goto LABEL_44;
      case 6u:
        uint64_t v30 = PBReaderReadString(a2);
        uint64_t v27 = objc_claimAutoreleasedReturnValue(v30);
        uint64_t v28 = 48LL;
LABEL_44:
        uint64_t v31 = *(void **)(a1 + v28);
        *(void *)(a1 + v2_Block_object_dispose(va, 8) = v27;

        goto LABEL_94;
      case 7u:
        char v32 = 0;
        unsigned int v33 = 0;
        uint64_t v34 = 0LL;
        *(_BYTE *)(a1 + 96) |= 0x10u;
        while (2)
        {
          unint64_t v35 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v35 == -1LL || v35 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v36 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v35);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v35 + 1;
            v34 |= (unint64_t)(v36 & 0x7F) << v32;
            if (v36 < 0)
            {
              v32 += 7;
              BOOL v9 = v33++ >= 9;
              if (v9)
              {
                uint64_t v34 = 0LL;
                goto LABEL_88;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v34 = 0LL;
        }
LABEL_88:
        *(_BYTE *)(a1 + 92) = v34 != 0;
        goto LABEL_94;
      case 8u:
        __int128 v37 = objc_alloc_init(&OBJC_CLASS___CSDMessagingHandle);
        objc_storeStrong((id *)(a1 + 32), v37);
        goto LABEL_72;
      case 9u:
        __int128 v37 = objc_alloc_init(&OBJC_CLASS___CSDMessagingConversationMember);
        objc_storeStrong((id *)(a1 + 40), v37);
        goto LABEL_57;
      case 0xAu:
        __int128 v37 = objc_alloc_init(&OBJC_CLASS___CSDMessagingConversationMember);
        [(id)a1 addRemoteMembers:v37];
LABEL_57:
        goto LABEL_72;
      case 0xBu:
        __int128 v37 = objc_alloc_init(&OBJC_CLASS___CSDMessagingConversationParticipant);
        [(id)a1 addActiveParticipants:v37];
        goto LABEL_72;
      case 0xCu:
        char v38 = 0;
        unsigned int v39 = 0;
        uint64_t v14 = 0LL;
        *(_BYTE *)(a1 + 96) |= 1u;
        while (2)
        {
          unint64_t v40 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v40 == -1LL || v40 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v41 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v40);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v40 + 1;
            v14 |= (unint64_t)(v41 & 0x7F) << v38;
            if (v41 < 0)
            {
              v38 += 7;
              BOOL v9 = v39++ >= 9;
              if (v9)
              {
                LODWORD(v14) = 0;
                goto LABEL_92;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_92:
        uint64_t v42 = 16LL;
LABEL_93:
        *(_DWORD *)(a1 + v42) = v14;
        goto LABEL_94;
      case 0xDu:
        __int128 v37 = objc_alloc_init(&OBJC_CLASS___CSDMessagingConversationReport);
        objc_storeStrong((id *)(a1 + 64), v37);
        if (PBReaderPlaceMark(a2, v43) && (sub_1000CEEDC((uint64_t)v37, a2) & 1) != 0)
        {
LABEL_72:
          PBReaderRecallMark(a2, v43);

LABEL_94:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }

LABEL_96:
        return 0LL;
      default:
        uint64_t result = PBReaderSkipValueWithTag(a2);
        if (!(_DWORD)result) {
          return result;
        }
        goto LABEL_94;
    }
  }

id *sub_1000BA128(id *result, int a2)
{
  if (a2) {
    return (id *)[result[4] sendIDSAction:@"CSDPinExchangeActionRequestPIN" toDevice:result[5]];
  }
  return result;
}

void sub_1000BA708( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
}

void sub_1000BA734(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    if (a2)
    {
      unint64_t v7 = objc_alloc_init(&OBJC_CLASS___NSNumberFormatter);
      char v8 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained pendingCodesToDevicesForApproval]);
      BOOL v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) uniqueID]);
      int v10 = (void *)objc_claimAutoreleasedReturnValue([v8 _numberForKey:v9]);

      int v11 = (void *)objc_claimAutoreleasedReturnValue(-[NSNumberFormatter numberFromString:](v7, "numberFromString:", v5));
      if (v11 && v10 && [v10 isEqualToNumber:v11])
      {
        id v12 = sub_1001704C4();
        unsigned int v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
        if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
        {
          LOWORD(v2_Block_object_dispose(va, 8) = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "The entered PIN code is correct",  (uint8_t *)&v28,  2u);
        }

        uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained pinExchangeDelegate]);
        [v14 enrollDevice:*(void *)(a1 + 32) forSenderIdentityUUID:*(void *)(a1 + 40)];

        id v15 = sub_1001704C4();
        char v16 = (os_log_s *)objc_claimAutoreleasedReturnValue(v15);
        if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v17 = *(void *)(a1 + 32);
          int v28 = 138412290;
          uint64_t v29 = v17;
          _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "Activated Thumper for requesting device %@",  (uint8_t *)&v28,  0xCu);
        }

        uint64_t v18 = 1LL;
      }

      else
      {
        id v21 = sub_1001704C4();
        char v22 = (os_log_s *)objc_claimAutoreleasedReturnValue(v21);
        if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
        {
          LOWORD(v2_Block_object_dispose(va, 8) = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEFAULT,  "[WARN] The entered PIN code is incorrect, could not register device.",  (uint8_t *)&v28,  2u);
        }

        [WeakRetained displayPinErrorNotification];
        uint64_t v18 = 0LL;
      }
    }

    else
    {
      id v19 = sub_1001704C4();
      unint64_t v20 = (os_log_s *)objc_claimAutoreleasedReturnValue(v19);
      if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(v2_Block_object_dispose(va, 8) = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEFAULT,  "The user entered no code... or the code entered was not an NSString",  (uint8_t *)&v28,  2u);
      }

      unint64_t v7 = (NSNumberFormatter *)objc_claimAutoreleasedReturnValue([WeakRetained pinExchangeDelegate]);
      -[NSNumberFormatter unenrollDevice:](v7, "unenrollDevice:", *(void *)(a1 + 32));
      uint64_t v18 = 0LL;
    }

    [WeakRetained sendApprovalResponseToDevice:*(void *)(a1 + 32) enteredCorrectly:v18 wasCancelled:a2 ^ 1u];
    unsigned int v23 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained pendingCodesToDevicesForApproval]);
    unint64_t v24 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) uniqueID]);
    char v25 = (void *)objc_claimAutoreleasedReturnValue([v23 objectForKey:v24]);

    if (v25)
    {
      uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained pendingCodesToDevicesForApproval]);
      uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) uniqueID]);
      [v26 removeObjectForKey:v27];

      [WeakRetained setPendingCodesToDevicesForApproval:0];
    }
  }
}

void sub_1000BB324(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue(+[IMUserNotificationCenter sharedInstance](&OBJC_CLASS___IMUserNotificationCenter, "sharedInstance"));
  [v2 addUserNotification:*(void *)(a1 + 32) listener:0 completionHandler:0];
}

id *sub_1000BBEEC(id *result, int a2)
{
  if (a2) {
    return (id *)[result[4] cancelPinRequests];
  }
  return result;
}

uint64_t sub_1000BC4A4(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0LL;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1LL || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0LL;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0LL;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        char v12 = 0;
        unsigned int v13 = 0;
        uint64_t v14 = 0LL;
        *(_BYTE *)(a1 + 56) |= 4u;
        while (1)
        {
          unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v15 == -1LL || v15 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v16 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
          v14 |= (unint64_t)(v16 & 0x7F) << v12;
          if ((v16 & 0x80) == 0) {
            goto LABEL_50;
          }
          v12 += 7;
          BOOL v9 = v13++ >= 9;
          if (v9)
          {
            LODWORD(v14) = 0;
            goto LABEL_52;
          }
        }

        *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_50:
        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_52:
        uint64_t v34 = 52LL;
        goto LABEL_61;
      case 2u:
        uint64_t v18 = objc_alloc_init(&OBJC_CLASS___CSDMessagingHandle);
        uint64_t v19 = 40LL;
        goto LABEL_37;
      case 3u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0LL;
        *(_BYTE *)(a1 + 56) |= 1u;
        while (2)
        {
          unint64_t v23 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v23 == -1LL || v23 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v24 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v23);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v23 + 1;
            v22 |= (unint64_t)(v24 & 0x7F) << v20;
            if (v24 < 0)
            {
              v20 += 7;
              BOOL v9 = v21++ >= 9;
              if (v9)
              {
                uint64_t v22 = 0LL;
                goto LABEL_56;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v22 = 0LL;
        }
LABEL_56:
        *(void *)(a1 + _Block_object_dispose(va, 8) = v22;
        goto LABEL_62;
      case 4u:
        uint64_t String = PBReaderReadString(a2);
        uint64_t v26 = objc_claimAutoreleasedReturnValue(String);
        uint64_t v27 = 32LL;
        goto LABEL_41;
      case 5u:
        uint64_t v18 = objc_alloc_init(&OBJC_CLASS___CSDMessagingHandle);
        uint64_t v19 = 16LL;
LABEL_37:
        objc_storeStrong((id *)(a1 + v19), v18);
        if (PBReaderPlaceMark(a2, v35) && (sub_10004A748((uint64_t)v18, a2) & 1) != 0)
        {
          PBReaderRecallMark(a2, v35);

LABEL_62:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }

        return 0LL;
      case 6u:
        uint64_t v28 = PBReaderReadString(a2);
        uint64_t v26 = objc_claimAutoreleasedReturnValue(v28);
        uint64_t v27 = 24LL;
LABEL_41:
        uint64_t v29 = *(void **)(a1 + v27);
        *(void *)(a1 + v27) = v26;

        goto LABEL_62;
      case 7u:
        char v30 = 0;
        unsigned int v31 = 0;
        uint64_t v14 = 0LL;
        *(_BYTE *)(a1 + 56) |= 2u;
        while (2)
        {
          unint64_t v32 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v32 == -1LL || v32 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v33 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v32);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v32 + 1;
            v14 |= (unint64_t)(v33 & 0x7F) << v30;
            if (v33 < 0)
            {
              v30 += 7;
              BOOL v9 = v31++ >= 9;
              if (v9)
              {
                LODWORD(v14) = 0;
                goto LABEL_60;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_60:
        uint64_t v34 = 48LL;
LABEL_61:
        *(_DWORD *)(a1 + v34) = v14;
        goto LABEL_62;
      default:
        uint64_t result = PBReaderSkipValueWithTag(a2);
        if (!(_DWORD)result) {
          return result;
        }
        goto LABEL_62;
    }
  }

void sub_1000BD188(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  id v2 = (void *)qword_10044CF80;
  qword_10044CF80 = (uint64_t)v1;
}

void sub_1000BD4D0(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[TUCallCapabilitiesXPCClient callCapabilitiesClientXPCInterface]( &OBJC_CLASS___TUCallCapabilitiesXPCClient,  "callCapabilitiesClientXPCInterface"));
  unsigned int v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientManager]);
  [v3 setRemoteObjectInterface:v2];

  char v4 = (void *)objc_claimAutoreleasedReturnValue( +[TUCallCapabilitiesXPCClient callCapabilitiesServerXPCInterface]( &OBJC_CLASS___TUCallCapabilitiesXPCClient,  "callCapabilitiesServerXPCInterface"));
  unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientManager]);
  [v5 setExportedInterface:v4];

  unint64_t v6 = *(void **)(a1 + 32);
  unint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 clientManager]);
  [v7 setExportedObject:v6];

  char v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientManager]);
  [v8 setInterruptionHandler:&stru_1003D95E0];

  BOOL v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientManager]);
  [v9 setInvalidationHandler:&stru_1003D9600];

  int v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientManager]);
  int v11 = (void *)objc_claimAutoreleasedReturnValue([v10 asynchronousExportedObjectProxy]);
  +[TUCallCapabilitiesXPCClient setAsynchronousServer:]( &OBJC_CLASS___TUCallCapabilitiesXPCClient,  "setAsynchronousServer:",  v11);

  id v13 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientManager]);
  char v12 = (void *)objc_claimAutoreleasedReturnValue([v13 synchronousExportedObjectProxy]);
  +[TUCallCapabilitiesXPCClient setSynchronousServer:]( &OBJC_CLASS___TUCallCapabilitiesXPCClient,  "setSynchronousServer:",  v12);
}

void sub_1000BD620(id a1, CSDClient *a2)
{
  id v2 = a2;
  id v3 = sub_1001704C4();
  char v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = 138412290;
    unint64_t v6 = v2;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "XPC connection interrupted from client %@",  (uint8_t *)&v5,  0xCu);
  }
}

void sub_1000BD6C8(id a1, CSDClient *a2)
{
  id v2 = a2;
  id v3 = sub_1001704C4();
  char v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = 138412290;
    unint64_t v6 = v2;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "XPC connection invalidated from client %@",  (uint8_t *)&v5,  0xCu);
  }
}

void sub_1000BD770(uint64_t a1)
{
  id v2 = objc_alloc_init(&OBJC_CLASS___TUCallCapabilitiesState);
  [*(id *)(a1 + 32) setState:v2];

  [*(id *)(a1 + 32) _initializePairedHostDeviceState];
  [*(id *)(a1 + 32) _updateState];
  id v3 = sub_1001704C4();
  char v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) state]);
    int v8 = 138412290;
    BOOL v9 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Initialized capability state: %@",  (uint8_t *)&v8,  0xCu);
  }

  unint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) thumperCapabilitiesMonitor]);
  [v6 updateState];

  unint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientManager]);
  [v7 startListeningOnMachServiceWithName:@"com.apple.telephonyutilities.callservicesdaemon.callcapabilities"];
}

void sub_1000BD954(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) state]);
  char v4 = (void *)objc_claimAutoreleasedReturnValue([v3 debugDescription]);
  [v2 appendFormat:@"State: %@\n", v4];

  int v5 = *(void **)(a1 + 32);
  unint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) telephonyCallCapabilities]);
  unint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 debugDescription]);
  [v5 appendFormat:@"Telephony capabilities: %@\n", v7];

  int v8 = *(void **)(a1 + 32);
  BOOL v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) accountsController]);
  int v10 = (void *)objc_claimAutoreleasedReturnValue([v9 debugDescription]);
  [v8 appendFormat:@"Accounts controller: %@\n", v10];

  int v11 = *(void **)(a1 + 32);
  id v13 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) pairedHostDeviceState]);
  char v12 = (void *)objc_claimAutoreleasedReturnValue([v13 debugDescription]);
  [v11 appendFormat:@"Paired Host Device State: %@\n", v12];
}

void sub_1000BDC9C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void *)(a1 + 48);
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 16);
  id v9 = a3;
  int v7 = v6(v5, a2);
  uint64_t v8 = 40LL;
  if (v7) {
    uint64_t v8 = 32LL;
  }
  [v9 capabilityStateUpdated:*(void *)(a1 + v8)];
}

void sub_1000BDDD0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_1000BDDE8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1000BDDF8(uint64_t a1)
{
}

void sub_1000BDE00(uint64_t a1)
{
  uint64_t v2 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) state]);
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8LL);
  char v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

id sub_1000BDED0(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) _isWatchDevice];
  if ((_DWORD)result)
  {
    id v3 = sub_1001704C4();
    char v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Updating paired host device state", v5, 2u);
    }

    [*(id *)(a1 + 32) setPairedHostDeviceState:*(void *)(a1 + 40)];
    [*(id *)(a1 + 32) _updateDynamicCapabilitiesAndUpdateClients];
    [*(id *)(a1 + 32) _updateClientsWithState];
    return [*(id *)(a1 + 32) _savePairedHostDeviceState];
  }

  return result;
}

void sub_1000BE114( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
}

void sub_1000BE134(uint64_t a1)
{
  id v5 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) state]);
  id v2 = [v5 copy];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8LL);
  char v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_1000BE184(uint64_t a1)
{
  id v5 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) state]);
  uint64_t v2 = objc_claimAutoreleasedReturnValue([v5 publiclyAccessibleCopy]);
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8LL);
  char v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

id sub_1000BE280(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = *(unsigned __int8 *)(a1 + 40);
    v6[0] = 67109120;
    v6[1] = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "TUCallCapabilitiesXPCServer - setRelayCallingEnabled: %d",  (uint8_t *)v6,  8u);
  }

  return [*(id *)(a1 + 32) _setRelayCallingEnabled:*(unsigned __int8 *)(a1 + 40)];
}

id sub_1000BE404(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = *(unsigned __int8 *)(a1 + 48);
    uint64_t v5 = *(void *)(a1 + 32);
    v7[0] = 67109378;
    v7[1] = v4;
    __int16 v8 = 2112;
    uint64_t v9 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "TUCallCapabilitiesXPCServer - setRelayCallingEnabled: %d forDeviceWithID: %@",  (uint8_t *)v7,  0x12u);
  }

  return [*(id *)(a1 + 40) _setRelayCallingEnabled:*(unsigned __int8 *)(a1 + 48) forDeviceWithID:*(void *)(a1 + 32)];
}

id sub_1000BE598(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = *(unsigned __int8 *)(a1 + 48);
    uint64_t v5 = *(void *)(a1 + 32);
    v7[0] = 67109378;
    v7[1] = v4;
    __int16 v8 = 2112;
    uint64_t v9 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "TUCallCapabilitiesXPCServer - setWiFiCallingEnabled: %d senderIdentityUUID: %@",  (uint8_t *)v7,  0x12u);
  }

  return [*(id *)(a1 + 40) _setWiFiCallingEnabled:*(unsigned __int8 *)(a1 + 48) forSenderIdentityWithUUID:*(void *)(a1 + 32)];
}

id sub_1000BE72C(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = *(unsigned __int8 *)(a1 + 48);
    uint64_t v5 = *(void *)(a1 + 32);
    v7[0] = 67109378;
    v7[1] = v4;
    __int16 v8 = 2112;
    uint64_t v9 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "TUCallCapabilitiesXPCServer - setWiFiCallingRoamingEnabled: %d senderIdentityUUID: %@",  (uint8_t *)v7,  0x12u);
  }

  return [*(id *)(a1 + 40) _setWiFiCallingRoamingEnabled:*(unsigned __int8 *)(a1 + 48) forSenderIdentityWithUUID:*(void *)(a1 + 32)];
}

id sub_1000BE8C0(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = *(unsigned __int8 *)(a1 + 48);
    uint64_t v5 = *(void *)(a1 + 32);
    v7[0] = 67109378;
    v7[1] = v4;
    __int16 v8 = 2112;
    uint64_t v9 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "TUCallCapabilitiesXPCServer - setVoLTECallingEnabled: %d senderIdentityUUID: %@",  (uint8_t *)v7,  0x12u);
  }

  return [*(id *)(a1 + 40) _setVoLTECallingEnabled:*(unsigned __int8 *)(a1 + 48) forSenderIdentityWithUUID:*(void *)(a1 + 32)];
}

id sub_1000BEA54(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = *(unsigned __int8 *)(a1 + 48);
    uint64_t v5 = *(void *)(a1 + 32);
    v7[0] = 67109378;
    v7[1] = v4;
    __int16 v8 = 2112;
    uint64_t v9 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "TUCallCapabilitiesXPCServer - setThumperCallingEnabled: %d senderIdentityUUID: %@",  (uint8_t *)v7,  0x12u);
  }

  return [*(id *)(a1 + 40) _setThumperCallingEnabled:*(unsigned __int8 *)(a1 + 48) forSenderIdentityWithUUID:*(void *)(a1 + 32)];
}

id sub_1000BEC0C(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = *(unsigned __int8 *)(a1 + 56);
    uint64_t v5 = *(void *)(a1 + 32);
    uint64_t v6 = *(void *)(a1 + 40);
    v8[0] = 67109634;
    v8[1] = v4;
    __int16 v9 = 2112;
    uint64_t v10 = v5;
    __int16 v11 = 2112;
    uint64_t v12 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "TUCallCapabilitiesXPCServer - setThumperCallingAllowed: %d secondaryDeviceID: %@ senderIdentityUUID: %@",  (uint8_t *)v8,  0x1Cu);
  }

  return [*(id *)(a1 + 48) _setThumperCallingAllowed:*(unsigned __int8 *)(a1 + 56) onSecondaryDeviceWithID:*(void *)(a1 + 32) forSenderIdentityWithUUID:*(void *)(a1 + 40)];
}

id sub_1000BEDAC(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = *(unsigned __int8 *)(a1 + 48);
    uint64_t v5 = *(void *)(a1 + 32);
    v7[0] = 67109378;
    v7[1] = v4;
    __int16 v8 = 2112;
    uint64_t v9 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "TUCallCapabilitiesXPCServer - setThumperCallingAllowedOnDefaultPairedDevice: %d senderIdentityUUID: %@",  (uint8_t *)v7,  0x12u);
  }

  return [*(id *)(a1 + 40) _setThumperCallingAllowedOnDefaultPairedDevice:*(unsigned __int8 *)(a1 + 48) forSenderIdentityWithUUID:*(void *)(a1 + 32)];
}

void sub_1000BEF24(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "TUCallCapabilitiesXPCServer - endEmergencyCallbackMode",  v5,  2u);
  }

  int v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) telephonyCallCapabilities]);
  [v4 endEmergencyCallbackMode];
}

void sub_1000BF068(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    int v6 = 138412290;
    uint64_t v7 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "TUCallCapabilitiesXPCServer - invalidateAndRefreshWiFiCallingProvisioningURLForSenderIdentityUUID: %@",  (uint8_t *)&v6,  0xCu);
  }

  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) telephonyCallCapabilities]);
  [v5 invalidateAndRefreshWiFiCallingCapabilitiesForSenderIdentityWithUUID:*(void *)(a1 + 32)];
}

void sub_1000BF1EC(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    int v6 = 138412290;
    uint64_t v7 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "TUCallCapabilitiesXPCServer - invalidateAndRefreshThumperCallingProvisioningURLForSenderIdentityUUID: %@",  (uint8_t *)&v6,  0xCu);
  }

  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) telephonyCallCapabilities]);
  [v5 invalidateAndRefreshThumperCallingCapabilitiesForSenderIdentityWithUUID:*(void *)(a1 + 32)];
}

void sub_1000BF34C(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v17) = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "TUCallCapabilitiesXPCServer - requestPinFromPrimaryDevice",  (uint8_t *)&v17,  2u);
  }

  uint64_t v5 = *(void **)(a1 + 32);
  uint64_t v4 = (id *)(a1 + 32);
  int v6 = (void *)objc_claimAutoreleasedReturnValue([v5 _primaryThumperAccountRequiringAvailableDeviceSlots]);
  id v7 = sub_1001704C4();
  __int16 v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
  BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
  if (v6)
  {
    if (v9)
    {
      int v17 = 138412290;
      uint64_t v18 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "Using the following account for the PIN request: %@",  (uint8_t *)&v17,  0xCu);
    }

    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([*v4 thumperService]);
    __int16 v11 = (void *)objc_claimAutoreleasedReturnValue([v6 primaryDeviceID]);
    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v10 deviceWithUniqueID:v11]);

    if (v12)
    {
      id v13 = (void *)objc_claimAutoreleasedReturnValue([*v4 thumperPinExchangeController]);
      [v13 requestPinFromDevice:v12];
    }

    else
    {
      id v16 = sub_1001704C4();
      id v13 = (void *)objc_claimAutoreleasedReturnValue(v16);
      if (os_log_type_enabled((os_log_t)v13, OS_LOG_TYPE_ERROR)) {
        sub_1002B4F0C((uint64_t)v6, v4, (os_log_s *)v13);
      }
    }
  }

  else
  {
    if (v9)
    {
      uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([*v4 telephonyCallCapabilities]);
      unint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v14 secondaryThumperAccounts]);
      int v17 = 138412290;
      uint64_t v18 = v15;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "[WARN] No primary Thumper account found for PIN request. This should only happen because an account exists but h as no empty device slots. All accounts: %@",  (uint8_t *)&v17,  0xCu);
    }

    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([*v4 thumperPinExchangeController]);
    [v12 displaySlotsFullNotification];
  }
}

void sub_1000BF600(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "TUCallCapabilitiesXPCServer - cancelPinRequestFromPrimaryDevice",  v5,  2u);
  }

  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) thumperPinExchangeController]);
  [v4 cancelPinRequests];
}

void sub_1000BF718(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientManager]);
  [v2 addLocalClientObject:*(void *)(a1 + 40)];
}

void sub_1000BF7F0(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientManager]);
  [v2 removeLocalClientObject:*(void *)(a1 + 40)];
}

id sub_1000BF930(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateDynamicCapabilitiesAndUpdateClients];
}

id sub_1000BFA38(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateClientsWithState];
}

id sub_1000BFB14(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateDynamicCapabilitiesAndUpdateClients];
}

id sub_1000BFBD0(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateDynamicCapabilitiesAndUpdateClients];
}

void sub_1000BFC8C(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _outgoingCallerID]);
  if ([v2 length])
  {
    uint64_t v19 = v2;
    uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) state]);
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 senderIdentityCapabilitiesStateByUUID]);

    __int128 v22 = 0u;
    __int128 v23 = 0u;
    __int128 v20 = 0u;
    __int128 v21 = 0u;
    uint64_t v18 = v4;
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v4 allValues]);
    id v6 = [v5 countByEnumeratingWithState:&v20 objects:v26 count:16];
    if (v6)
    {
      id v7 = v6;
      uint64_t v8 = *(void *)v21;
      do
      {
        for (i = 0LL; i != v7; i = (char *)i + 1)
        {
          if (*(void *)v21 != v8) {
            objc_enumerationMutation(v5);
          }
          uint64_t v10 = *(void **)(*((void *)&v20 + 1) + 8LL * (void)i);
          __int16 v11 = (void *)objc_claimAutoreleasedReturnValue([v10 thumperCallingCapabilitiesState]);
          uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v11 accountID]);

          if (v12)
          {
            id v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) telephonyCallCapabilities]);
            uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v13 secondaryThumperAccountForAccountID:v12]);

            if (v14)
            {
              unint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v10 senderIdentityUUID]);
              id v16 = sub_1001704C4();
              int v17 = (os_log_s *)objc_claimAutoreleasedReturnValue(v16);
              if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
              {
                *(_DWORD *)buf = 138412290;
                char v25 = v15;
                _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "Disabling Thumper for subscription with UUID %@",  buf,  0xCu);
              }

              [*(id *)(a1 + 32) _setThumperCallingEnabled:0 forSenderIdentityWithUUID:v15];
            }
          }
        }

        id v7 = [v5 countByEnumeratingWithState:&v20 objects:v26 count:16];
      }

      while (v7);
    }

    id v2 = v19;
  }

  [*(id *)(a1 + 32) _updateDynamicCapabilitiesAndUpdateClients];
}

id sub_1000C0260(uint64_t a1)
{
  return [*(id *)(a1 + 32) _setThumperCallingAllowed:1 onSecondaryDeviceWithID:*(void *)(a1 + 40) forSenderIdentityWithUUID:*(void *)(a1 + 48)];
}

id sub_1000C04C0(uint64_t a1)
{
  return [*(id *)(a1 + 32) _setThumperCallingAllowed:0 onSecondaryDeviceWithID:*(void *)(a1 + 40) forSenderIdentityWithUUID:*(void *)(a1 + 48)];
}

id sub_1000C04D4(uint64_t a1)
{
  return [*(id *)(a1 + 32) _setThumperCallingAllowed:0 onSecondaryDeviceWithID:*(void *)(a1 + 40) forSenderIdentityWithUUID:*(void *)(a1 + 48)];
}

void sub_1000C05B0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_1000C05C8(uint64_t a1)
{
  id v5 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) telephonyCallCapabilities]);
  uint64_t v2 = objc_claimAutoreleasedReturnValue([v5 localThumperAccounts]);
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8LL);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_1000C06E4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_1000C06FC(uint64_t a1)
{
  id v5 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) telephonyCallCapabilities]);
  uint64_t v2 = objc_claimAutoreleasedReturnValue([v5 secondaryThumperAccounts]);
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8LL);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_1000C0840( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_1000C0858(uint64_t a1)
{
  id v5 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) telephonyCallCapabilities]);
  uint64_t v2 = objc_claimAutoreleasedReturnValue([v5 secondaryThumperAccountForAccountID:*(void *)(a1 + 40)]);
  uint64_t v3 = *(void *)(*(void *)(a1 + 48) + 8LL);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_1000C0B30( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_1000C0B48(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) telephonyCallCapabilities]);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([v2 senderIdentityCapabilitiesStateByUUID]);

  __int128 v14 = 0u;
  __int128 v15 = 0u;
  __int128 v12 = 0u;
  __int128 v13 = 0u;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "allKeys", 0));
  id v5 = [v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v13;
    do
    {
      for (i = 0LL; i != v6; i = (char *)i + 1)
      {
        if (*(void *)v13 != v7) {
          objc_enumerationMutation(v4);
        }
        uint64_t v9 = *(void *)(*((void *)&v12 + 1) + 8LL * (void)i);
        uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v3 objectForKeyedSubscript:v9]);
        __int16 v11 = (void *)objc_claimAutoreleasedReturnValue([v10 thumperCallingCapabilitiesState]);
        [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) setObject:v11 forKeyedSubscript:v9];
      }

      id v6 = [v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
    }

    while (v6);
  }
}

void sub_1000C0D14(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) state]);
    int v5 = 138412290;
    id v6 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "updateState: capability state: %@",  (uint8_t *)&v5,  0xCu);
  }
}

id sub_1000C1150(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) _defaultOverrideForDisableDefault:@"disableSupportsPrimaryCalling" forceDefault:@"forceSupportsPrimaryCalling"];
  byte_10044CF90 = (char)result;
  return result;
}

id sub_1000C1224(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) _defaultOverrideForDisableDefault:@"disableSupportsBasebandCalling" forceDefault:@"forceSupportsBasebandCalling"];
  byte_10044CFA0 = (char)result;
  return result;
}

id sub_1000C1318(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) _defaultOverrideForDisableDefault:@"disableSupportsCellularData" forceDefault:@"forceSupportsCellularData"];
  byte_10044CFB0 = (char)result;
  return result;
}

id sub_1000C13C4(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) _defaultOverrideForDisableDefault:@"disableDisplayingTelephonyCallSupport" forceDefault:@"forceDisplayingTelephonyCallSupport"];
  byte_10044CFC0 = (char)result;
  return result;
}

id sub_1000C14B8(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) _defaultOverrideForDisableDefault:@"disableDisplayingFaceTimeAudioCallSupport" forceDefault:@"forceDisplayingFaceTimeAudioCallSupport"];
  byte_10044CFD0 = (char)result;
  return result;
}

id sub_1000C15AC(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) _defaultOverrideForDisableDefault:@"disableDisplayingFaceTimeVideoCallSupport" forceDefault:@"forceDisplayingFaceTimeVideoCallSupport"];
  byte_10044CFE0 = (char)result;
  return result;
}

id sub_1000C1CA4(uint64_t a1)
{
  byte_10044CFF0 = [*(id *)(a1 + 32) _defaultOverrideForDisableDefault:@"disableCanEnableWiFiCalling" forceDefault:@"forceCanEnableWiFiCalling"];
  byte_10044CFF1 = [*(id *)(a1 + 32) _defaultOverrideForDisableDefault:@"disableCanEnableVoLTECalling" forceDefault:@"forceCanEnableVoLTECalling"];
  id result = [*(id *)(a1 + 32) _defaultOverrideForDisableDefault:@"disableCanEnableThumperCalling" forceDefault:@"forceCanEnableThumperCalling"];
  byte_10044CFF2 = (char)result;
  return result;
}

int64_t sub_1000C36B8(id a1, TUCloudCallingDevice *a2, TUCloudCallingDevice *a3)
{
  uint64_t v4 = a3;
  int v5 = (void *)objc_claimAutoreleasedReturnValue(-[TUCloudCallingDevice uniqueID](a2, "uniqueID"));
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[TUCloudCallingDevice uniqueID](v4, "uniqueID"));

  id v7 = [v5 compare:v6];
  return (int64_t)v7;
}

void sub_1000C4FAC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_1000C4FD8(uint64_t a1, void *a2, char a3, void *a4)
{
  id v7 = a2;
  id v8 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v10 = WeakRetained;
  if (WeakRetained)
  {
    __int16 v11 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained queue]);

    if (v11)
    {
      __int128 v12 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v10 queue]);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_1000C50DC;
      block[3] = &unk_1003D9780;
      char v18 = a3;
      id v14 = v8;
      id v15 = v7;
      id v16 = v10;
      id v17 = *(id *)(a1 + 32);
      dispatch_async(v12, block);
    }
  }
}

id sub_1000C50DC(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = *(unsigned __int8 *)(a1 + 64);
    uint64_t v5 = *(void *)(a1 + 32);
    uint64_t v6 = *(void *)(a1 + 40);
    v8[0] = 67109634;
    v8[1] = v4;
    __int16 v9 = 2112;
    uint64_t v10 = v5;
    __int16 v11 = 2112;
    uint64_t v12 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Coordinated alert request came back with bestIsMe: %d info: %@ error: %@",  (uint8_t *)v8,  0x1Cu);
  }

  if (*(_BYTE *)(a1 + 64)) {
    [*(id *)(a1 + 48) setShouldSuppressRingtone:0];
  }
  [*(id *)(a1 + 56) invalidate];
  return [*(id *)(a1 + 56) setCompletionHandler:0];
}

uint64_t sub_1000C52B0(uint64_t result)
{
  *(_BYTE *)(*(void *)(result + 32) + 16LL) = *(_BYTE *)(result + 40);
  return result;
}

void sub_1000C537C(uint64_t a1)
{
}

id sub_1000C540C(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 40);
  v3.receiver = *(id *)(a1 + 32);
  v3.super_class = (Class)&OBJC_CLASS___CSDCall;
  return objc_msgSendSuper2(&v3, "setTransitionStatus:", v1);
}

id sub_1000C54C4(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 40);
  v3.receiver = *(id *)(a1 + 32);
  v3.super_class = (Class)&OBJC_CLASS___CSDCall;
  return objc_msgSendSuper2(&v3, "setWantsHoldMusic:", v1);
}

id sub_1000C557C(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 40);
  v3.receiver = *(id *)(a1 + 32);
  v3.super_class = (Class)&OBJC_CLASS___CSDCall;
  return objc_msgSendSuper2(&v3, "setWasDialAssisted:", v1);
}

id sub_1000C5634(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 40);
  v3.receiver = *(id *)(a1 + 32);
  v3.super_class = (Class)&OBJC_CLASS___CSDCall;
  return objc_msgSendSuper2(&v3, "setScreeningAnnouncementHasFinished:", v1);
}

id sub_1000C56EC(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 40);
  v3.receiver = *(id *)(a1 + 32);
  v3.super_class = (Class)&OBJC_CLASS___CSDCall;
  return objc_msgSendSuper2(&v3, "setDisconnectedReason:", v1);
}

id sub_1000C57A4(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 40);
  v3.receiver = *(id *)(a1 + 32);
  v3.super_class = (Class)&OBJC_CLASS___CSDCall;
  return objc_msgSendSuper2(&v3, "setShouldSuppressRingtone:", v1);
}

id sub_1000C585C(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 40);
  v3.receiver = *(id *)(a1 + 32);
  v3.super_class = (Class)&OBJC_CLASS___CSDCall;
  return objc_msgSendSuper2(&v3, "setFaceTimeIDStatus:", v1);
}

id sub_1000C5910(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  v3.receiver = *(id *)(a1 + 32);
  v3.super_class = (Class)&OBJC_CLASS___CSDCall;
  return objc_msgSendSuper2(&v3, "setSoundRegion:", v1);
}

id sub_1000C59EC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  v3.receiver = *(id *)(a1 + 40);
  v3.super_class = (Class)&OBJC_CLASS___CSDCall;
  return objc_msgSendSuper2(&v3, "setModel:", v1);
}

id sub_1000C5A9C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  v3.receiver = *(id *)(a1 + 32);
  v3.super_class = (Class)&OBJC_CLASS___CSDCall;
  return objc_msgSendSuper2(&v3, "setAnsweringMachineStreamToken:", v1);
}

id sub_1000C5B50(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 40);
  v3.receiver = *(id *)(a1 + 32);
  v3.super_class = (Class)&OBJC_CLASS___CSDCall;
  return objc_msgSendSuper2(&v3, "setSupportsDTMFUpdates:", v1);
}

id sub_1000C5C08(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 40);
  v3.receiver = *(id *)(a1 + 32);
  v3.super_class = (Class)&OBJC_CLASS___CSDCall;
  return objc_msgSendSuper2(&v3, "setEndpointOnCurrentDevice:", v1);
}

id sub_1000C5CD4(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 40);
  v3.receiver = *(id *)(a1 + 32);
  v3.super_class = (Class)&OBJC_CLASS___CSDCall;
  return objc_msgSendSuper2(&v3, "setScreening:", v1);
}

void sub_1000C6100(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  objc_super v3 = *(void **)(v2 + 96);
  *(void *)(v2 + 96) = 0LL;

  objc_storeStrong((id *)(*(void *)(a1 + 32) + 80LL), *(id *)(a1 + 40));
}

uint64_t sub_1000C6550(uint64_t result)
{
  *(void *)(*(void *)(result + 32) + 160LL) = *(void *)(result + 40);
  return result;
}

void sub_1000C6AA0(uint64_t a1, unint64_t a2)
{
  id v4 = sub_1001704C4();
  uint64_t v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) handle]);
    uint64_t v7 = TUCopyIDSCanonicalAddressForHandle();
    id v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
    __int16 v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", a2));
    int v10 = 138412546;
    __int16 v11 = v8;
    __int16 v12 = 2112;
    __int128 v13 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "faceTimeIDSStatus for destinationID: %@ is: %@",  (uint8_t *)&v10,  0x16u);
  }

  if (a2 <= 2) {
    [*(id *)(a1 + 32) setFaceTimeIDStatus:dword_100379214[a2]];
  }
}

void sub_1000C7FE0(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  uint64_t v2 = (void *)qword_10044D000;
  qword_10044D000 = (uint64_t)v1;
}

void sub_1000C80EC(uint64_t a1)
{
  v14[0] = AVSystemController_PickableRoutesDidChangeNotification;
  v14[1] = AVSystemController_PreferredExternalRouteDidChangeNotification;
  v14[2] = AVSystemController_CarPlayIsConnectedDidChangeNotification;
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v14, 3LL));
  objc_super v3 = (void *)objc_claimAutoreleasedReturnValue( +[AVSystemController sharedAVSystemController]( &OBJC_CLASS___AVSystemController,  "sharedAVSystemController"));
  [v3 setAttribute:v2 forKey:AVSystemController_SubscribeToNotificationsAttribute error:0];

  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
  [v4 addObserver:*(void *)(a1 + 32) selector:"pickableRoutesDidChangeNotification:" name:AVSystemController_PickableRoutesDidChangeNotification object:0];
  [v4 addObserver:*(void *)(a1 + 32) selector:"preferredExternalRouteDidChangeNotification:" name:AVSystemController_PreferredExternalRouteDidChangeNotification object:0];
  [v4 addObserver:*(void *)(a1 + 32) selector:"carPlayIsConnectedChanged:" name:AVSystemController_CarPlayIsConnectedDidChangeNotification object:0];
  if (qword_10044D010
    || ((uint64_t v5 = (void **)CUTWeakLinkSymbol("AVAudioSessionMediaServicesWereResetNotification", @"AVFoundation")) == 0LL
      ? (uint64_t v6 = 0LL)
      : (uint64_t v6 = *v5),
        objc_storeStrong((id *)&qword_10044D010, v6),
        qword_10044D010))
  {
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
    uint64_t v8 = *(void *)(a1 + 32);
    uint64_t v9 = qword_10044D010;
    int v10 = (void *)objc_claimAutoreleasedReturnValue(+[AVAudioSession sharedInstance](&OBJC_CLASS___AVAudioSession, "sharedInstance"));
    [v7 addObserver:v8 selector:"mediaServicesWereResetNotification:" name:v9 object:v10];
  }

  else
  {
    id v11 = sub_1001704C4();
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(v11);
    if (os_log_type_enabled((os_log_t)v7, OS_LOG_TYPE_DEFAULT))
    {
      int v12 = 138412290;
      __int128 v13 = @"AVAudioSessionMediaServicesWereResetNotification";
      _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v7,  OS_LOG_TYPE_DEFAULT,  "[WARN] Could not weak link notification string '%@'. Not observing notifications for it.",  (uint8_t *)&v12,  0xCu);
    }
  }
}

void sub_1000C84A0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_1000C84B8(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _audioRouteCollectionForCall:*(void *)(a1 + 40)]);
  *(_BYTE *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = [v2 isAnyRouteAvailableWithUniqueIdentifier:*(void *)(a1 + 48)];
}

void sub_1000C85F8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

uint64_t sub_1000C8610(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1000C8620(uint64_t a1)
{
}

void sub_1000C8628(uint64_t a1)
{
  id v5 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _audioRouteCollectionForCall:*(void *)(a1 + 40)]);
  uint64_t v2 = objc_claimAutoreleasedReturnValue([v5 preferredRoute]);
  uint64_t v3 = *(void *)(*(void *)(a1 + 48) + 8LL);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_1000C8724( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_1000C873C(uint64_t a1)
{
  *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [*(id *)(a1 + 32) isCarPlayDeviceConnected];
  if (!*(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL))
  {
    __int128 v10 = 0u;
    __int128 v11 = 0u;
    __int128 v8 = 0u;
    __int128 v9 = 0u;
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "audioRouteCollections", 0));
    uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([v2 allValues]);

    id v4 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
    if (v4)
    {
      id v5 = v4;
      uint64_t v6 = *(void *)v9;
      while (2)
      {
        for (i = 0LL; i != v5; i = (char *)i + 1)
        {
          if (*(void *)v9 != v6) {
            objc_enumerationMutation(v3);
          }
          if ([*(id *)(*((void *)&v8 + 1) + 8 * (void)i) isInEarAudioRouteAvailable])
          {
            *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = 1;
            goto LABEL_12;
          }
        }

        id v5 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
        if (v5) {
          continue;
        }
        break;
      }
    }

void sub_1000C8920( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_1000C8938(uint64_t a1)
{
  __int128 v8 = 0u;
  __int128 v9 = 0u;
  __int128 v10 = 0u;
  __int128 v11 = 0u;
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "audioRouteCollections", 0));
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([v2 allValues]);

  id v4 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v9;
    while (2)
    {
      for (i = 0LL; i != v5; i = (char *)i + 1)
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v3);
        }
        if ([*(id *)(*((void *)&v8 + 1) + 8 * (void)i) hasInEarRouteInTipiWithAndSmartRoutedToCompanionWatch])
        {
          *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = 1;
          goto LABEL_11;
        }
      }

      id v5 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
      if (v5) {
        continue;
      }
      break;
    }
  }

void sub_1000C8AF8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_1000C8B10(uint64_t a1)
{
  __int128 v8 = 0u;
  __int128 v9 = 0u;
  __int128 v10 = 0u;
  __int128 v11 = 0u;
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "audioRouteCollections", 0));
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([v2 allValues]);

  id v4 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v9;
    while (2)
    {
      for (i = 0LL; i != v5; i = (char *)i + 1)
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v3);
        }
        if ([*(id *)(*((void *)&v8 + 1) + 8 * (void)i) hasInEarRouteInTipiWithCompanionWatch])
        {
          *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = 1;
          goto LABEL_11;
        }
      }

      id v5 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
      if (v5) {
        continue;
      }
      break;
    }
  }

void sub_1000C8CF8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_1000C8D10(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 48) + 8LL);
  if (*(_BYTE *)(v1 + 24)) {
    goto LABEL_4;
  }
  if ([*(id *)(a1 + 32) isCarPlayDeviceConnected])
  {
    uint64_t v1 = *(void *)(*(void *)(a1 + 48) + 8LL);
LABEL_4:
    *(_BYTE *)(v1 + 24) = 1;
    return;
  }

  id v3 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _audioRouteCollectionForCall:*(void *)(a1 + 40)]);
  *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = [v3 isInEarAudioRouteAvailable];
}

void sub_1000C8E84( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_1000C8E9C(uint64_t a1)
{
  id v5 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _audioRouteCollectionForCall:*(void *)(a1 + 40)]);
  uint64_t v2 = objc_claimAutoreleasedReturnValue([v5 preferredAndActiveRoute]);
  uint64_t v3 = *(void *)(*(void *)(a1 + 48) + 8LL);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_1000C8FC0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_1000C8FD8(uint64_t a1)
{
  id v3 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _audioRouteCollectionForCall:*(void *)(a1 + 40)]);
  else {
    unsigned __int8 v2 = [v3 isAnyRouteAvailableWithBluetoothEndpointType:2];
  }
  *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = v2;
}

void sub_1000C90E4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_1000C90FC(uint64_t a1)
{
  __int128 v8 = 0u;
  __int128 v9 = 0u;
  __int128 v10 = 0u;
  __int128 v11 = 0u;
  unsigned __int8 v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "audioRouteCollections", 0));
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 allValues]);

  id v4 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v9;
    while (2)
    {
      for (i = 0LL; i != v5; i = (char *)i + 1)
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v3);
        }
        if ([*(id *)(*((void *)&v8 + 1) + 8 * (void)i) isAnyRouteAvailableWithBluetoothEndpointType:1])
        {
          *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = 1;
          goto LABEL_11;
        }
      }

      id v5 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
      if (v5) {
        continue;
      }
      break;
    }
  }

void sub_1000C92C0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

id sub_1000C92D8(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) isCarPlayDeviceConnected];
  *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = (_BYTE)result;
  return result;
}

void sub_1000C93AC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_1000C93C4(uint64_t a1)
{
  __int128 v8 = 0u;
  __int128 v9 = 0u;
  __int128 v10 = 0u;
  __int128 v11 = 0u;
  unsigned __int8 v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "audioRouteCollections", 0));
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 allValues]);

  id v4 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v9;
    while (2)
    {
      for (i = 0LL; i != v5; i = (char *)i + 1)
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v3);
        }
        if ([*(id *)(*((void *)&v8 + 1) + 8 * (void)i) isAnyRouteAvailableWithBluetoothEndpointType:2])
        {
          *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = 1;
          goto LABEL_11;
        }
      }

      id v5 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
      if (v5) {
        continue;
      }
      break;
    }
  }

id sub_1000C960C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updatePickableRoutes];
}

id sub_1000C9734(uint64_t a1)
{
  return [*(id *)(a1 + 32) _postNotificationName:@"CSDRouteManagerPreferredRouteChangedNotification"];
}

id sub_1000C9884(uint64_t a1)
{
  return [*(id *)(a1 + 32) _postNotificationName:@"CSDRouteManagerPreferredRouteChangedNotification"];
}

id sub_1000C99D4(uint64_t a1)
{
  return [*(id *)(a1 + 32) _postNotificationName:@"CSDRouteManagerPreferredRouteChangedNotification"];
}

id sub_1000C9A78(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Audio device list changed", v5, 2u);
  }

  return [*(id *)(a1 + 32) _postNotificationName:@"CSDRouteManagerPreferredRouteChangedNotification"];
}

id sub_1000CA89C(CSDMessagingConversationMember *self, SEL a2)
{
  v8.receiver = self;
  v8.super_class = (Class)&OBJC_CLASS___CSDMessagingConversationMember;
  id v3 = -[CSDMessagingConversationMember description](&v8, "description");
  id v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[CSDMessagingConversationMember dictionaryRepresentation](self, "dictionaryRepresentation"));
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", @"%@ %@", v4, v5));

  return v6;
}

uint64_t sub_1000CAB1C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0LL;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1LL || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0LL;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0LL;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        char v12 = 0;
        unsigned int v13 = 0;
        uint64_t v14 = 0LL;
        *(_BYTE *)(a1 + 56) |= 4u;
        while (1)
        {
          unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v15 == -1LL || v15 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v16 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
          v14 |= (unint64_t)(v16 & 0x7F) << v12;
          if ((v16 & 0x80) == 0) {
            goto LABEL_51;
          }
          v12 += 7;
          BOOL v9 = v13++ >= 9;
          if (v9)
          {
            LODWORD(v14) = 0;
            goto LABEL_53;
          }
        }

        *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_51:
        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_53:
        uint64_t v32 = 52LL;
        goto LABEL_62;
      case 2u:
        char v18 = objc_alloc_init(&OBJC_CLASS___CSDMessagingHandle);
        uint64_t v19 = 24LL;
        goto LABEL_30;
      case 3u:
        uint64_t String = PBReaderReadString(a2);
        uint64_t v21 = objc_claimAutoreleasedReturnValue(String);
        __int128 v22 = *(void **)(a1 + 40);
        *(void *)(a1 + 40) = v21;

        goto LABEL_63;
      case 4u:
        char v18 = objc_alloc_init(&OBJC_CLASS___CSDMessagingHandle);
        uint64_t v19 = 32LL;
LABEL_30:
        objc_storeStrong((id *)(a1 + v19), v18);
        goto LABEL_49;
      case 5u:
        char v23 = 0;
        unsigned int v24 = 0;
        uint64_t v25 = 0LL;
        *(_BYTE *)(a1 + 56) |= 1u;
        while (2)
        {
          unint64_t v26 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v26 == -1LL || v26 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v27 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v26);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v26 + 1;
            v25 |= (unint64_t)(v27 & 0x7F) << v23;
            if (v27 < 0)
            {
              v23 += 7;
              BOOL v9 = v24++ >= 9;
              if (v9)
              {
                uint64_t v25 = 0LL;
                goto LABEL_57;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v25 = 0LL;
        }
LABEL_57:
        *(void *)(a1 + _Block_object_dispose(va, 8) = v25;
        goto LABEL_63;
      case 6u:
        char v28 = 0;
        unsigned int v29 = 0;
        uint64_t v14 = 0LL;
        *(_BYTE *)(a1 + 56) |= 2u;
        while (2)
        {
          unint64_t v30 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v30 == -1LL || v30 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v31 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v30);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v30 + 1;
            v14 |= (unint64_t)(v31 & 0x7F) << v28;
            if (v31 < 0)
            {
              v28 += 7;
              BOOL v9 = v29++ >= 9;
              if (v9)
              {
                LODWORD(v14) = 0;
                goto LABEL_61;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_61:
        uint64_t v32 = 48LL;
LABEL_62:
        *(_DWORD *)(a1 + v32) = v14;
        goto LABEL_63;
      case 7u:
        char v18 = objc_alloc_init(&OBJC_CLASS___CSDMessagingVoucher);
        objc_storeStrong((id *)(a1 + 16), v18);
        if (PBReaderPlaceMark(a2, v33) && sub_10010BE5C((uint64_t)v18, a2))
        {
LABEL_49:
          PBReaderRecallMark(a2, v33);

LABEL_63:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }

uint64_t sub_1000CC80C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0LL;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1LL || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0LL;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0LL;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        char v12 = 0;
        unsigned int v13 = 0;
        uint64_t v14 = 0LL;
        *(_BYTE *)(a1 + 152) |= 2u;
        while (1)
        {
          unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v15 == -1LL || v15 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v16 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
          v14 |= (unint64_t)(v16 & 0x7F) << v12;
          if ((v16 & 0x80) == 0) {
            goto LABEL_77;
          }
          v12 += 7;
          BOOL v9 = v13++ >= 9;
          if (v9)
          {
            LODWORD(v14) = 0;
            goto LABEL_79;
          }
        }

        *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_77:
        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_79:
        uint64_t v36 = 144LL;
        goto LABEL_88;
      case 2u:
        uint64_t String = PBReaderReadString(a2);
        uint64_t v18 = objc_claimAutoreleasedReturnValue(String);
        uint64_t v19 = 136LL;
        goto LABEL_62;
      case 3u:
        uint64_t v20 = PBReaderReadString(a2);
        uint64_t v18 = objc_claimAutoreleasedReturnValue(v20);
        uint64_t v19 = 48LL;
        goto LABEL_62;
      case 4u:
        uint64_t v21 = PBReaderReadString(a2);
        uint64_t v18 = objc_claimAutoreleasedReturnValue(v21);
        uint64_t v19 = 96LL;
        goto LABEL_62;
      case 5u:
        char v22 = 0;
        unsigned int v23 = 0;
        uint64_t v24 = 0LL;
        *(_BYTE *)(a1 + 152) |= 4u;
        while (2)
        {
          unint64_t v25 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v25 == -1LL || v25 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v26 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v25);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v25 + 1;
            v24 |= (unint64_t)(v26 & 0x7F) << v22;
            if (v26 < 0)
            {
              v22 += 7;
              BOOL v9 = v23++ >= 9;
              if (v9)
              {
                uint64_t v24 = 0LL;
                goto LABEL_83;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v24 = 0LL;
        }
LABEL_83:
        *(_BYTE *)(a1 + 14_Block_object_dispose(va, 8) = v24 != 0;
        goto LABEL_67;
      case 6u:
        char v27 = objc_alloc_init(&OBJC_CLASS___CSDMessagingHandle);
        objc_storeStrong((id *)(a1 + 64), v27);
        goto LABEL_50;
      case 7u:
        char v27 = objc_alloc_init(&OBJC_CLASS___CSDMessagingConversationMember);
        objc_storeStrong((id *)(a1 + 88), v27);
        goto LABEL_54;
      case 8u:
        char v27 = objc_alloc_init(&OBJC_CLASS___CSDMessagingConversationMember);
        [(id)a1 addRemoteMembers:v27];
        goto LABEL_54;
      case 9u:
        char v27 = objc_alloc_init(&OBJC_CLASS___CSDMessagingConversationParticipant);
        [(id)a1 addActiveRemoteParticipants:v27];
        goto LABEL_58;
      case 0xAu:
        char v27 = objc_alloc_init(&OBJC_CLASS___CSDMessagingConversationActivitySession);
        [(id)a1 addActivitySessions:v27];
        goto LABEL_64;
      case 0xBu:
        char v27 = objc_alloc_init(&OBJC_CLASS___CSDMessagingConversationLink);
        objc_storeStrong((id *)(a1 + 80), v27);
        goto LABEL_66;
      case 0xCu:
        char v27 = objc_alloc_init(&OBJC_CLASS___CSDMessagingConversationReport);
        objc_storeStrong((id *)(a1 + 120), v27);
        goto LABEL_66;
      case 0xEu:
        uint64_t v29 = PBReaderReadString(a2);
        uint64_t v18 = objc_claimAutoreleasedReturnValue(v29);
        uint64_t v19 = 40LL;
        goto LABEL_62;
      case 0xFu:
        char v27 = objc_alloc_init(&OBJC_CLASS___CSDMessagingHandle);
        [(id)a1 addOtherInvitedHandles:v27];
LABEL_50:
        goto LABEL_66;
      case 0x10u:
        char v27 = objc_alloc_init(&OBJC_CLASS___CSDMessagingConversationMember);
        [(id)a1 addLightweightMembers:v27];
LABEL_54:
        goto LABEL_66;
      case 0x11u:
        char v27 = objc_alloc_init(&OBJC_CLASS___CSDMessagingConversationParticipant);
        [(id)a1 addActiveLightweightParticipants:v27];
LABEL_58:
        goto LABEL_66;
      case 0x12u:
        uint64_t v30 = PBReaderReadString(a2);
        uint64_t v18 = objc_claimAutoreleasedReturnValue(v30);
        uint64_t v19 = 56LL;
LABEL_62:
        char v31 = *(void **)(a1 + v19);
        *(void *)(a1 + v19) = v18;

        goto LABEL_67;
      case 0x13u:
        char v27 = objc_alloc_init(&OBJC_CLASS___CSDMessagingConversationActivitySession);
        objc_storeStrong((id *)(a1 + 128), v27);
LABEL_64:
        if (PBReaderPlaceMark(a2, v37) && (sub_1000B1C28((uint64_t)v27, a2) & 1) != 0)
        {
LABEL_66:
          PBReaderRecallMark(a2, v37);

LABEL_67:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }

uint64_t sub_1000CEEDC(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0LL;
    while (1)
    {
      uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v8 = v7 + 1;
      if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v9 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
      v6 |= (unint64_t)(v9 & 0x7F) << v4;
      if ((v9 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        unint64_t v6 = 0LL;
        int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0LL;
    }
LABEL_13:
    if (v11 || (v6 & 7) == 4) {
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    unint64_t v13 = v6 >> 3;
    if ((v6 >> 3) == 3)
    {
      uint64_t String = PBReaderReadString(a2);
      uint64_t v15 = objc_claimAutoreleasedReturnValue(String);
      uint64_t v16 = 24LL;
    }

    else
    {
      if ((_DWORD)v13 == 2)
      {
        *(_BYTE *)(a1 + 32) |= 1u;
        unint64_t v19 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v19 <= 0xFFFFFFFFFFFFFFF7LL && v19 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v20 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v19);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v19 + 8;
        }

        else
        {
          *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v20 = 0LL;
        }

        *(void *)(a1 + _Block_object_dispose(va, 8) = v20;
        continue;
      }

      if ((_DWORD)v13 != 1)
      {
        uint64_t result = PBReaderSkipValueWithTag(a2);
        if (!(_DWORD)result) {
          return result;
        }
        continue;
      }

      uint64_t v14 = PBReaderReadString(a2);
      uint64_t v15 = objc_claimAutoreleasedReturnValue(v14);
      uint64_t v16 = 16LL;
    }

    uint64_t v18 = *(void **)(a1 + v16);
    *(void *)(a1 + v16) = v15;
  }

  return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_1000D01C8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, id *a11, id *a12, id *a13, id *a14)
{
}

BOOL sub_1000D0240(id a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[CSDCallCapabilities sharedInstance](&OBJC_CLASS___CSDCallCapabilities, "sharedInstance"));
  id v2 = (void *)objc_claimAutoreleasedReturnValue([v1 callCapabilitiesState]);
  BOOL v3 = [v2 relayCallingAvailability] == 2;

  return v3;
}

void sub_1000D0298(uint64_t a1)
{
  id v2 = -[CSDDeviceLockStateObserver initWithQueue:]( objc_alloc(&OBJC_CLASS___CSDDeviceLockStateObserver),  "initWithQueue:",  *(void *)(*(void *)(a1 + 32) + 224LL));
  uint64_t v3 = *(void *)(a1 + 32);
  char v4 = *(void **)(v3 + 136);
  *(void *)(v3 + 136) = v2;

  unsigned int v5 = *(void **)(*(void *)(a1 + 32) + 136LL);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  _DWORD v6[2] = sub_1000D035C;
  v6[3] = &unk_1003D7DF0;
  objc_copyWeak(&v7, (id *)(a1 + 40));
  [v5 performBlockAfterFirstUnlock:v6];
  objc_destroyWeak(&v7);
}

void sub_1000D0348(_Unwind_Exception *a1)
{
}

void sub_1000D035C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = sub_1001704C4();
    uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Device first unlock block invoked, attempting to retrieve active conversations",  buf,  2u);
    }

    [WeakRetained retreiveActiveConversations];
    [WeakRetained removeNonIndefiniteLinks];
    char v4 = (dispatch_queue_s *)WeakRetained[28];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1000D0444;
    block[3] = &unk_1003D7730;
    unsigned int v5 = WeakRetained;
    id v7 = v5;
    dispatch_async(v4, block);
    [v5 setupPendingConversationCleanupTimer];
  }
}

void sub_1000D0444(uint64_t a1)
{
  id v1 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) linkManager]);
  [v1 validateAllLinks];
}

id sub_1000D0474( uint64_t a1, void *a2, void *a3, void *a4, void *a5, void *a6, unsigned int a7, void *a8, __int16 a9, void *a10, char a11)
{
  id v17 = (id *)(a1 + 32);
  id v18 = a10;
  id v19 = a8;
  id v20 = a6;
  id v21 = a5;
  id v22 = a4;
  id v23 = a3;
  id v24 = a2;
  id WeakRetained = objc_loadWeakRetained(v17);
  char v26 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained service]);
  LOBYTE(v30) = a11;
  LOWORD(v29) = a9;
  char v27 = (void *)objc_claimAutoreleasedReturnValue( objc_msgSend( v26,  "createGroupSessionProviderWithGroupID:participantDestinationIDs:callerID:account:queue:isOneToOneMod eEnabled:localMember:avLess:isScreenSharingRequest:ABTestConfiguration:isInitiator:",  v24,  v23,  v22,  v21,  v20,  a7,  v19,  v29,  v18,  v30));

  return v27;
}

IMNickname *__cdecl sub_1000D05A0(id a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue(+[IMNicknameController sharedInstance](&OBJC_CLASS___IMNicknameController, "sharedInstance"));
  id v2 = (void *)objc_claimAutoreleasedReturnValue([v1 personalNickname]);

  return (IMNickname *)v2;
}

CSDConversation *sub_1000D05E0( uint64_t a1, void *a2, void *a3, void *a4, void *a5, void *a6, unsigned int a7, void *a8, void *a9, void *a10, void *a11, void *a12, void *a13, void *a14, void *a15, void *a16, void *a17, void *a18, char a19, uint64_t a20, uint64_t a21, void *a22)
{
  unint64_t v40 = (id *)(a1 + 32);
  id v39 = a22;
  id v41 = a18;
  id v38 = a17;
  id v22 = a16;
  id v37 = a15;
  id v34 = a14;
  id v31 = a13;
  id v30 = a12;
  id v28 = a11;
  id v55 = a10;
  id v54 = a9;
  id v53 = a8;
  id v27 = a6;
  id v51 = a5;
  id v49 = a4;
  id v47 = a3;
  id v45 = a2;
  id WeakRetained = objc_loadWeakRetained(v40);
  uint64_t v36 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained cpApplicationController]);
  unsigned int v33 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained sharePlaySystemStateObserver]);
  char v32 = (void *)objc_claimAutoreleasedReturnValue( +[CPApplicationPolicyManager sharedInstance]( &OBJC_CLASS___CPApplicationPolicyManager,  "sharedInstance"));
  id v24 = objc_alloc(&OBJC_CLASS___CSDConversation);
  uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained featureFlags]);
  LOBYTE(v26) = a19;
  __int16 v43 = -[CSDConversation initWithQueue:UUID:groupUUID:groupSession:messagesGroupUUID:locallyCreated:localMember:initiator:remoteMembers:pendingMembers:otherInvitedHandles:lightweightMembers:remotePushTokens:activity:link:report:fromStorage:avMode:presentationMode:applicationController:featureFlags:systemStateObserver:applicationPolicyManager:screenSharingRequest:testConfiguration:]( v24,  "initWithQueue:UUID:groupUUID:groupSession:messagesGroupUUID:locallyCreated:localMember:initiator:remoteMembers :pendingMembers:otherInvitedHandles:lightweightMembers:remotePushTokens:activity:link:report:fromStorage:avMod e:presentationMode:applicationController:featureFlags:systemStateObserver:applicationPolicyManager:screenShari ngRequest:testConfiguration:",  v45,  v47,  v49,  v51,  v27,  a7,  v53,  v54,  v55,  v28,  v30,  v31,  v34,  v37,  v22,  v41,  v26,  a20,  a21,  v36,  v29,  v33,  v32,  v38,  v39);

  return v43;
}

id sub_1000D0890( uint64_t a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8, void *a9)
{
  id v74 = a2;
  id v15 = a3;
  id v16 = a4;
  id v17 = a5;
  id v18 = a6;
  id v19 = a8;
  id v20 = a9;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v22 = WeakRetained;
  if (WeakRetained)
  {
    char v72 = v19;
    id v23 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained featureFlags]);
    unsigned int v24 = [v23 groupFacetimeAsAServiceEnabled];

    if (v20 && v24)
    {
      unint64_t v25 = (void *)objc_claimAutoreleasedReturnValue( +[CSDConversationProviderManager sharedInstance]( &OBJC_CLASS___CSDConversationProviderManager,  "sharedInstance"));
      uint64_t v26 = objc_claimAutoreleasedReturnValue([v25 serviceForProvider:v20]);
    }

    else
    {
      uint64_t v26 = objc_claimAutoreleasedReturnValue([v22 service]);
    }

    id v68 = v18;
    id v29 = [v18 mutableCopy];
    id v30 = v29;
    if (v29) {
      id v31 = (NSMutableDictionary *)v29;
    }
    else {
      id v31 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    }
    char v32 = v31;

    unsigned int v33 = (void *)objc_claimAutoreleasedReturnValue([v17 idsFromID]);
    -[NSMutableDictionary setObject:forKeyedSubscript:]( v32,  "setObject:forKeyedSubscript:",  v33,  IDSSendMessageOptionFromIDKey);

    id v34 = sub_1001704C4();
    char v35 = (os_log_s *)objc_claimAutoreleasedReturnValue(v34);
    if (os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      *(void *)char v80 = v32;
      _os_log_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_DEFAULT, "sendDataBlock options: %@", buf, 0xCu);
    }

    uint64_t v36 = (void *)objc_claimAutoreleasedReturnValue( -[NSMutableDictionary objectForKeyedSubscript:]( v32,  "objectForKeyedSubscript:",  @"kCSDConversationGroupUUID"));
    if (v36)
    {
      uint64_t v73 = (void *)objc_claimAutoreleasedReturnValue( -[NSMutableDictionary objectForKeyedSubscript:]( v32,  "objectForKeyedSubscript:",  @"kCSDConversationGroupUUID"));
      -[NSMutableDictionary removeObjectForKey:](v32, "removeObjectForKey:", @"kCSDConversationGroupUUID");
    }

    else
    {
      id v37 = sub_1001704C4();
      id v38 = (os_log_s *)objc_claimAutoreleasedReturnValue(v37);
      if (os_log_type_enabled(v38, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v38, OS_LOG_TYPE_DEFAULT, "invalid conversationGroupUUID", buf, 2u);
      }

      uint64_t v73 = 0LL;
    }

    id v69 = v17;
    id v70 = v15;
    id v75 = 0LL;
    id v76 = 0LL;
    char v67 = (void *)v26;
    id v39 = (void *)v26;
    id v28 = v74;
    id v27 = [v39 sendData:v74 fromAccount:v15 toDestinations:v16 priority:300 options:v32 identifier:&v76 error:&v75];
    id v40 = v76;
    id v41 = v75;
    uint64_t v42 = v41;
    id v19 = v72;
    if ((_DWORD)v27)
    {
      id v65 = v41;
      unint64_t v66 = v16;
      if (v72)
      {
        __int16 v43 = (void *)objc_claimAutoreleasedReturnValue([v22 mutableSendDataCallbacksByRequestIdentifiers]);
        id v44 = [v72 copy];
        id v45 = objc_retainBlock(v44);
        [v43 setObject:v45 forKey:v40];
      }

      id v46 = sub_1001704C4();
      id v47 = (os_log_s *)objc_claimAutoreleasedReturnValue(v46);
      if (os_log_type_enabled(v47, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v48 = (void *)objc_claimAutoreleasedReturnValue([v66 allObjects]);
        uint64_t v49 = TULoggableStringForHandles(v48);
        unsigned int v50 = (void *)objc_claimAutoreleasedReturnValue(v49);
        *(_DWORD *)buf = 138412546;
        *(void *)char v80 = v40;
        *(_WORD *)&v80[8] = 2112;
        *(void *)&v80[10] = v50;
        _os_log_impl( (void *)&_mh_execute_header,  v47,  OS_LOG_TYPE_DEFAULT,  "Sent message with identifier %@ to %@",  buf,  0x16u);
      }

      id v51 = -[CSDMessagingConversationMessage initWithData:]( objc_alloc(&OBJC_CLASS___CSDMessagingConversationMessage),  "initWithData:",  v74);
      id v52 = (id)objc_claimAutoreleasedReturnValue( -[NSMutableDictionary objectForKeyedSubscript:]( v32,  "objectForKeyedSubscript:",  @"kCSDConversationIsLetMeInApproved"));

      if (v52)
      {
        id v53 = (void *)objc_claimAutoreleasedReturnValue( -[NSMutableDictionary objectForKeyedSubscript:]( v32,  "objectForKeyedSubscript:",  @"kCSDConversationIsLetMeInApproved"));
        id v52 = [v53 BOOLValue];

        -[NSMutableDictionary removeObjectForKey:]( v32,  "removeObjectForKey:",  @"kCSDConversationIsLetMeInApproved");
      }

      if (-[CSDMessagingConversationMessage enclosedEncryptedType](v51, "enclosedEncryptedType") == 16 && v73)
      {
        v77[1] = @"kCSDConversationIsLetMeInApproved";
        v78[0] = v73;
        v77[0] = @"kCSDConversationGroupUUID";
        id v54 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", v52));
        v78[1] = v54;
        id v55 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v78,  v77,  2LL));
        uint64_t v56 = (void *)objc_claimAutoreleasedReturnValue([v22 outIdentifierToConversationInfo]);
        [v56 setObject:v55 forKeyedSubscript:v40];

        id v57 = sub_1001704C4();
        char v58 = (os_log_s *)objc_claimAutoreleasedReturnValue(v57);
        if (os_log_type_enabled(v58, OS_LOG_TYPE_DEFAULT))
        {
          char v59 = (void *)objc_claimAutoreleasedReturnValue([v22 outIdentifierToConversationInfo]);
          *(_DWORD *)buf = 138412290;
          *(void *)char v80 = v59;
          _os_log_impl( (void *)&_mh_execute_header,  v58,  OS_LOG_TYPE_DEFAULT,  "outIdentifierToConversationInfo: %@",  buf,  0xCu);
        }

        id v28 = v74;
        unsigned int v60 = a7;
        id v19 = v72;
      }

      else
      {
        id v62 = sub_1001704C4();
        char v58 = (os_log_s *)objc_claimAutoreleasedReturnValue(v62);
        id v28 = v74;
        unsigned int v60 = a7;
        id v19 = v72;
        if (os_log_type_enabled(v58, OS_LOG_TYPE_DEFAULT))
        {
          unsigned int v63 = -[CSDMessagingConversationMessage enclosedEncryptedType](v51, "enclosedEncryptedType");
          *(_DWORD *)buf = 67109378;
          *(_DWORD *)char v80 = v63;
          *(_WORD *)&v80[4] = 2112;
          *(void *)&v80[6] = v73;
          _os_log_impl( (void *)&_mh_execute_header,  v58,  OS_LOG_TYPE_DEFAULT,  "message type: %d, groupUUID: %@",  buf,  0x12u);
        }
      }

      if (v60) {
        *unsigned int v60 = v40;
      }
      uint64_t v42 = v65;
      id v16 = v66;
    }

    else
    {
      id v61 = sub_1001704C4();
      id v51 = (CSDMessagingConversationMessage *)objc_claimAutoreleasedReturnValue(v61);
      if (os_log_type_enabled((os_log_t)v51, OS_LOG_TYPE_ERROR)) {
        sub_1002B4FCC();
      }
    }

    id v17 = v69;
    id v15 = v70;
    id v18 = v68;
  }

  else
  {
    id v27 = 0LL;
    id v28 = v74;
  }

  return v27;
}

void sub_1000D0E9C(uint64_t a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  id v18 = a2;
  id v11 = a3;
  id v12 = a4;
  id v13 = a5;
  id v14 = a6;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v16 = WeakRetained;
  if (WeakRetained)
  {
    id v17 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained pendingMembershipTracker]);
    [v17 handleDelegatedPendingMember:v18 forConversation:v11 withGroupUUID:v12 from:v13 transactionUUID:v14];
  }
}

id sub_1000D0F5C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableSet set](&OBJC_CLASS___NSMutableSet, "set"));
  if (WeakRetained)
  {
    unint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained pushTokenForSelf]);
    id v7 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained featureFlags]);
    unsigned int v8 = [v7 groupFacetimeAsAServiceEnabled];

    id v25 = v3;
    if (v3 && v8)
    {
      char v9 = (void *)objc_claimAutoreleasedReturnValue( +[CSDConversationProviderManager sharedInstance]( &OBJC_CLASS___CSDConversationProviderManager,  "sharedInstance"));
      int v10 = (void *)objc_claimAutoreleasedReturnValue([v9 serviceForProvider:v3]);
    }

    else
    {
      int v10 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained service]);
    }

    __int128 v28 = 0u;
    __int128 v29 = 0u;
    __int128 v26 = 0u;
    __int128 v27 = 0u;
    id v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "aliases", v10));
    id v12 = [v11 countByEnumeratingWithState:&v26 objects:v30 count:16];
    if (v12)
    {
      id v13 = v12;
      uint64_t v14 = *(void *)v27;
      do
      {
        id v15 = 0LL;
        do
        {
          if (*(void *)v27 != v14) {
            objc_enumerationMutation(v11);
          }
          uint64_t v16 = TUHandleForIDSCanonicalAddress(*(void *)(*((void *)&v26 + 1) + 8LL * (void)v15));
          id v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
          if (v17) {
            [v5 addObject:v17];
          }
          uint64_t v18 = TUCopyIDSCanonicalAddressForHandle(v17);
          id v19 = (void *)objc_claimAutoreleasedReturnValue(v18);
          id v20 = (void *)IDSCopyIDForTokenWithID(v6, v19);

          uint64_t v21 = TUHandleForIDSCanonicalAddress(v20);
          id v22 = (void *)objc_claimAutoreleasedReturnValue(v21);
          if (v22) {
            [v5 addObject:v22];
          }

          id v15 = (char *)v15 + 1;
        }

        while (v13 != v15);
        id v13 = [v11 countByEnumeratingWithState:&v26 objects:v30 count:16];
      }

      while (v13);
    }

    id v3 = v25;
  }

  return v5;
}

id sub_1000D1184(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = WeakRetained;
  if (WeakRetained)
  {
    id v3 = (uint64_t (**)(void, void))objc_claimAutoreleasedReturnValue([WeakRetained activeLocalHandlesForProvider]);
    uint64_t v4 = v3[2](v3, 0LL);
    unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  }

  else
  {
    unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableSet set](&OBJC_CLASS___NSMutableSet, "set"));
  }

  return v5;
}

id sub_1000D11FC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = WeakRetained;
  if (WeakRetained)
  {
    id v3 = (uint64_t (**)(void, void))objc_claimAutoreleasedReturnValue([WeakRetained localCallerIDForProvider]);
    uint64_t v4 = v3[2](v3, 0LL);
    unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  }

  else
  {
    id v6 = sub_1001704C4();
    id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)char v9 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Using local callerID: nil, could not get strong self",  v9,  2u);
    }

    unsigned int v5 = 0LL;
  }

  return v5;
}

id sub_1000D12B0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained callProviderManager]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 faceTimeProvider]);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 prioritizedSenderIdentities]);

  return v4;
}

id sub_1000D1310(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  unsigned int v5 = WeakRetained;
  if (WeakRetained)
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained featureFlags]);
    unsigned int v7 = [v6 groupFacetimeAsAServiceEnabled];

    if (v3 && v7)
    {
      unsigned int v8 = (void *)objc_claimAutoreleasedReturnValue( +[CSDConversationProviderManager sharedInstance]( &OBJC_CLASS___CSDConversationProviderManager,  "sharedInstance"));
      char v9 = (void *)objc_claimAutoreleasedReturnValue([v8 serviceForProvider:v3]);
    }

    else
    {
      char v9 = (void *)objc_claimAutoreleasedReturnValue([v5 service]);
    }

    id v11 = (void *)objc_claimAutoreleasedReturnValue([v9 callerID]);
    id v12 = (void *)objc_claimAutoreleasedReturnValue( +[TUHandle normalizedHandleWithDestinationID:]( &OBJC_CLASS___TUHandle,  "normalizedHandleWithDestinationID:",  v11));
    unsigned int v13 = [v5 isValidLocalHandle:v12 forProvider:v3];

    if (v11 && v13)
    {
      int v10 = (void *)objc_claimAutoreleasedReturnValue( +[TUHandle normalizedHandleWithDestinationID:]( &OBJC_CLASS___TUHandle,  "normalizedHandleWithDestinationID:",  v11));
    }

    else
    {
      uint64_t v14 = (uint64_t (**)(void, void))objc_claimAutoreleasedReturnValue([v5 activeLocalHandlesForProvider]);
      uint64_t v15 = ((uint64_t (**)(void, id))v14)[2](v14, v3);
      uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
      id v17 = (void *)objc_claimAutoreleasedReturnValue([v16 anyObject]);

      uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([v17 value]);
      id v19 = (void *)IDSCopyAddressDestinationForDestination(v18);
      id v20 = (void *)IDSCopyRawAddressForDestination(v19);
      int v10 = (void *)objc_claimAutoreleasedReturnValue( +[TUHandle normalizedHandleWithDestinationID:]( &OBJC_CLASS___TUHandle,  "normalizedHandleWithDestinationID:",  v20));
    }
  }

  else
  {
    int v10 = 0LL;
  }

  id v21 = sub_1001704C4();
  id v22 = (os_log_s *)objc_claimAutoreleasedReturnValue(v21);
  if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
  {
    int v24 = 138412290;
    id v25 = v10;
    _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEFAULT,  "Using local callerID: %@",  (uint8_t *)&v24,  0xCu);
  }

  return v10;
}

uint64_t sub_1000D1544(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  unsigned int v5 = WeakRetained;
  if (WeakRetained)
  {
    id v6 = (uint64_t (**)(void))objc_claimAutoreleasedReturnValue([WeakRetained activeLocalHandles]);
    uint64_t v7 = v6[2]();
    unsigned int v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
    uint64_t v9 = TUNormalizedHandleForTUHandle(v3);
    int v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
    unsigned int v11 = [v8 containsObject:v10];

    if (v11)
    {
      id v12 = sub_1001704C4();
      unsigned int v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        int v22 = 138412290;
        id v23 = v3;
        _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "%@ is eligible for screen sharing because it's a local handle",  (uint8_t *)&v22,  0xCu);
      }

      uint64_t v14 = 1LL;
    }

    else
    {
      id v15 = objc_alloc(&OBJC_CLASS___TUContactsDataProvider);
      uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(+[TUCallCenter sharedInstance](&OBJC_CLASS___TUCallCenter, "sharedInstance"));
      id v17 = (void *)objc_claimAutoreleasedReturnValue([v16 contactStore]);
      unsigned int v13 = (os_log_s *)[v15 initWithContactsDataSource:v17];

      uint64_t v14 = (uint64_t)-[os_log_s isHandleEligibleForScreenSharingRequests:]( v13,  "isHandleEligibleForScreenSharingRequests:",  v3);
      id v18 = sub_1001704C4();
      id v19 = (os_log_s *)objc_claimAutoreleasedReturnValue(v18);
      if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
      {
        id v20 = @"NO";
        if ((_DWORD)v14) {
          id v20 = @"YES";
        }
        int v22 = 138412546;
        id v23 = v3;
        __int16 v24 = 2112;
        id v25 = v20;
        _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEFAULT,  "%@ is eligible for screen sharing: %@",  (uint8_t *)&v22,  0x16u);
      }
    }
  }

  else
  {
    uint64_t v14 = 0LL;
  }

  return v14;
}

void sub_1000D2390( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
}

void sub_1000D23B4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained mutableConversationsByUUID]);
  unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) UUID]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 objectForKeyedSubscript:v5]);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue( +[TUConversationInvitationPreference letMeInResponseInvitationPreferences]( &OBJC_CLASS___TUConversationInvitationPreference,  "letMeInResponseInvitationPreferences"));
  uint64_t v10 = IDSSendMessageOptionRequireAllRegistrationPropertiesKey;
  unsigned int v8 = (void *)objc_claimAutoreleasedReturnValue( +[NSSet setWithObject:]( &OBJC_CLASS___NSSet,  "setWithObject:",  IDSRegistrationPropertySupportsModernGFT));
  unsigned int v11 = v8;
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v11,  &v10,  1LL));
  [WeakRetained sendInvitationMessageToMember:v3 forConversation:v6 includeAllAttributes:1 invitationPreferences:v7 additionalOptions:v9];
}

CSDAVCSession *__cdecl sub_1000D4154( id a1, NSString *a2, CSDAVCSessionDelegate *a3, OS_dispatch_queue *a4, BOOL a5, BOOL a6, TUConversationReport *a7)
{
  BOOL v7 = a6;
  BOOL v8 = a5;
  uint64_t v10 = a4;
  unsigned int v11 = a3;
  id v12 = -[CSDSimulatedAVCSession initWithDelegate:queue:videoEnabled:oneToOneModeEnabled:]( objc_alloc(&OBJC_CLASS___CSDSimulatedAVCSession),  "initWithDelegate:queue:videoEnabled:oneToOneModeEnabled:",  v11,  v10,  v8,  v7);

  return (CSDAVCSession *)v12;
}

void sub_1000D42BC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

uint64_t sub_1000D42D4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1000D42E4(uint64_t a1)
{
}

void sub_1000D42EC(uint64_t a1)
{
  __int128 v15 = 0u;
  __int128 v16 = 0u;
  __int128 v17 = 0u;
  __int128 v18 = 0u;
  id v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mutablePendingConversationsByPseudonym", 0));
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([v2 allValues]);

  id v4 = [v3 countByEnumeratingWithState:&v15 objects:v19 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v16;
    while (2)
    {
      for (i = 0LL; i != v5; i = (char *)i + 1)
      {
        if (*(void *)v16 != v6) {
          objc_enumerationMutation(v3);
        }
        BOOL v8 = *(void **)(*((void *)&v15 + 1) + 8LL * (void)i);
        uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v8 link]);
        uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v9 pseudonym]);
        unsigned int v11 = [v10 isEqualToString:*(void *)(a1 + 40)];

        if (v11)
        {
          uint64_t v12 = objc_claimAutoreleasedReturnValue([v8 temporaryGroupUUID]);
          uint64_t v13 = *(void *)(*(void *)(a1 + 48) + 8LL);
          uint64_t v14 = *(void **)(v13 + 40);
          *(void *)(v13 + 40) = v12;

          goto LABEL_11;
        }
      }

      id v5 = [v3 countByEnumeratingWithState:&v15 objects:v19 count:16];
      if (v5) {
        continue;
      }
      break;
    }
  }

void sub_1000D4544( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_1000D455C(uint64_t a1)
{
  uint64_t v2 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _removePendingConversationWithPseudonym:*(void *)(a1 + 40)]);
  uint64_t v3 = *(void *)(*(void *)(a1 + 48) + 8LL);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_1000D4848(uint64_t a1)
{
  id v1 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) mutablePendingConversationsByPseudonym]);
  [v1 removeAllObjects];
}

void sub_1000D5030( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_1000D5048(uint64_t a1)
{
  __int128 v9 = 0u;
  __int128 v10 = 0u;
  __int128 v11 = 0u;
  __int128 v12 = 0u;
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mutableConversationsByUUID", 0));
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([v2 allValues]);

  id v4 = [v3 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v10;
    while (2)
    {
      for (i = 0LL; i != v5; i = (char *)i + 1)
      {
        if (*(void *)v10 != v6) {
          objc_enumerationMutation(v3);
        }
        BOOL v8 = *(void **)(*((void *)&v9 + 1) + 8LL * (void)i);
        if ([v8 isRepresentedByRemoteMembers:*(void *)(a1 + 40) andLink:*(void *)(a1 + 48)])
        {
          objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 40LL), v8);
          goto LABEL_11;
        }
      }

      id v5 = [v3 countByEnumeratingWithState:&v9 objects:v13 count:16];
      if (v5) {
        continue;
      }
      break;
    }
  }

void sub_1000D5268( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_1000D5280(uint64_t a1)
{
  __int128 v15 = 0u;
  __int128 v16 = 0u;
  __int128 v17 = 0u;
  __int128 v18 = 0u;
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mutableConversationsByUUID", 0));
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([v2 allValues]);

  id v4 = [v3 countByEnumeratingWithState:&v15 objects:v19 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v16;
    do
    {
      for (i = 0LL; i != v5; i = (char *)i + 1)
      {
        if (*(void *)v16 != v6) {
          objc_enumerationMutation(v3);
        }
        BOOL v8 = *(void **)(*((void *)&v15 + 1) + 8LL * (void)i);
        __int128 v9 = (void *)objc_claimAutoreleasedReturnValue([v8 link]);
        if (v9 && [v8 letMeInRequestState] == (id)3)
        {
          __int128 v10 = (void *)objc_claimAutoreleasedReturnValue([v8 link]);
          unsigned int v11 = [v10 isEquivalentToConversationLink:*(void *)(a1 + 40)];

          if (v11)
          {
            uint64_t v12 = objc_claimAutoreleasedReturnValue([v8 tuConversation]);
            uint64_t v13 = *(void *)(*(void *)(a1 + 48) + 8LL);
            uint64_t v14 = *(void **)(v13 + 40);
            *(void *)(v13 + 40) = v12;

            goto LABEL_13;
          }
        }

        else
        {
        }
      }

      id v5 = [v3 countByEnumeratingWithState:&v15 objects:v19 count:16];
    }

    while (v5);
  }

void sub_1000D57C8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_1000D57E0(uint64_t a1)
{
  uint64_t v2 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) findConversationLinkMatchingPseudonym:*(void *)(a1 + 40)]);
  uint64_t v3 = *(void *)(*(void *)(a1 + 48) + 8LL);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_1000D61CC(uint64_t a1)
{
  char v2 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");
  uint64_t v3 = *(void **)(a1 + 32);
  if ((v2 & 1) != 0)
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    if ([v3 shouldHandleUpdateForProvider:v4])
    {
    }

    else
    {
      char v5 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");

      if ((v5 & 1) != 0) {
        return;
      }
    }
  }

  else if ((objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:") & 1) != 0)
  {
    return;
  }

  id v6 = sub_1001704C4();
  BOOL v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    __int128 v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    int v10 = 138412546;
    uint64_t v11 = v8;
    __int16 v12 = 2112;
    uint64_t v13 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Delegate should handle conversation update: %@ for provider: %@",  (uint8_t *)&v10,  0x16u);
  }

  [*(id *)(a1 + 32) conversationManager:*(void *)(a1 + 48) conversation:*(void *)(a1 + 40) receivedMessage:*(void *)(a1 + 56) fromHandle:*(void *)(a1 + 64) withUpdate:*(void *)(a1 + 72)];
}

void sub_1000D650C(uint64_t a1)
{
  char v2 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");
  uint64_t v3 = *(void **)(a1 + 32);
  if ((v2 & 1) != 0)
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    if ([v3 shouldHandleUpdateForProvider:v4])
    {
    }

    else
    {
      char v5 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");

      if ((v5 & 1) != 0) {
        return;
      }
    }
  }

  else if ((objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:") & 1) != 0)
  {
    return;
  }

  id v6 = sub_1001704C4();
  BOOL v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    __int128 v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    int v10 = 138412546;
    uint64_t v11 = v8;
    __int16 v12 = 2112;
    uint64_t v13 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Delegate should handle conversation update: %@ for provider: %@",  (uint8_t *)&v10,  0x16u);
  }

  [*(id *)(a1 + 32) conversationManager:*(void *)(a1 + 48) reportedNewIncomingConversation:*(void *)(a1 + 40) fromHandle:*(void *)(a1 + 56)];
}

void sub_1000D6830(uint64_t a1)
{
  char v2 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");
  uint64_t v3 = *(void **)(a1 + 32);
  if ((v2 & 1) != 0)
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    if ([v3 shouldHandleUpdateForProvider:v4])
    {
    }

    else
    {
      char v5 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");

      if ((v5 & 1) != 0) {
        return;
      }
    }
  }

  else if ((objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:") & 1) != 0)
  {
    return;
  }

  id v6 = sub_1001704C4();
  BOOL v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    __int128 v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    int v10 = 138412546;
    uint64_t v11 = v8;
    __int16 v12 = 2112;
    uint64_t v13 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Delegate should handle conversation update: %@ for provider: %@",  (uint8_t *)&v10,  0x16u);
  }

  [*(id *)(a1 + 32) conversationManager:*(void *)(a1 + 48) avModeChanged:*(void *)(a1 + 56) toAVMode:*(void *)(a1 + 64) forConversation:*(void *)(a1 + 40)];
}

id sub_1000D6B14(uint64_t a1)
{
  return _[*(id *)(a1 + 32) conversationManager:*(void *)(a1 + 40) removedConversationWithUUID:*(void *)(a1 + 48)];
}

id sub_1000D6D00(uint64_t a1)
{
  return _[*(id *)(a1 + 32) conversationManager:*(void *)(a1 + 40) trackedPendingMember:*(void *)(a1 + 48) forConversationLink:*(void *)(a1 + 56)];
}

id sub_1000D6EC8(uint64_t a1)
{
  return _[*(id *)(a1 + 32) conversationManager:*(void *)(a1 + 40) updateIncomingPendingConversationsByGroupUUID:*(void *)(a1 + 48)];
}

void sub_1000D70DC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  BOOL v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) queue]);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  _DWORD v10[2] = sub_1000D71AC;
  v10[3] = &unk_1003D7B28;
  id v11 = *(id *)(a1 + 40);
  id v12 = v5;
  uint64_t v13 = *(void *)(a1 + 32);
  id v14 = v6;
  id v8 = v6;
  id v9 = v5;
  dispatch_async(v7, v10);
}

void sub_1000D71AC(uint64_t a1)
{
  char v2 = *(void **)(a1 + 32);
  if (v2) {
    uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([v2 tuConversation]);
  }
  else {
    uint64_t v3 = 0LL;
  }
  if (*(void *)(a1 + 40))
  {
    __int128 v21 = 0u;
    __int128 v22 = 0u;
    __int128 v19 = 0u;
    __int128 v20 = 0u;
    id obj = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) delegateToQueue]);
    id v4 = [obj countByEnumeratingWithState:&v19 objects:v23 count:16];
    if (v4)
    {
      id v5 = v4;
      uint64_t v6 = *(void *)v20;
      do
      {
        for (i = 0LL; i != v5; i = (char *)i + 1)
        {
          if (*(void *)v20 != v6) {
            objc_enumerationMutation(obj);
          }
          uint64_t v8 = *(void *)(*((void *)&v19 + 1) + 8LL * (void)i);
          id v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) delegateToQueue]);
          int v10 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v9 objectForKey:v8]);

          block[0] = _NSConcreteStackBlock;
          block[1] = 3221225472LL;
          block[2] = sub_1000D73A4;
          block[3] = &unk_1003D7B28;
          id v16 = v3;
          uint64_t v17 = v8;
          int8x16_t v14 = *(int8x16_t *)(a1 + 40);
          id v11 = (id)v14.i64[0];
          int8x16_t v18 = vextq_s8(v14, v14, 8uLL);
          dispatch_async(v10, block);
        }

        id v5 = [obj countByEnumeratingWithState:&v19 objects:v23 count:16];
      }

      while (v5);
    }

uint64_t sub_1000D73A4(uint64_t a1)
{
  if (!*(void *)(a1 + 32)) {
    goto LABEL_13;
  }
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    int v14 = 138412290;
    uint64_t v15 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "activatedLinksWithCompleted: tuconversation: %@",  (uint8_t *)&v14,  0xCu);
  }

  char v5 = objc_opt_respondsToSelector(*(void *)(a1 + 40), "shouldHandleUpdateForProvider:");
  uint64_t v6 = *(void **)(a1 + 40);
  if ((v5 & 1) != 0)
  {
    BOOL v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) provider]);
    if ([v6 shouldHandleUpdateForProvider:v7])
    {
    }

    else
    {
      char v8 = objc_opt_respondsToSelector(*(void *)(a1 + 40), "shouldHandleUpdateForProvider:");

      if ((v8 & 1) != 0) {
        goto LABEL_13;
      }
    }
  }

  else if ((objc_opt_respondsToSelector(*(void *)(a1 + 40), "shouldHandleUpdateForProvider:") & 1) != 0)
  {
    goto LABEL_13;
  }

  id v9 = sub_1001704C4();
  int v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v11 = *(void *)(a1 + 40);
    id v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) provider]);
    int v14 = 138412546;
    uint64_t v15 = v11;
    __int16 v16 = 2112;
    uint64_t v17 = v12;
    _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "Delegate should handle conversation update: %@ for provider: %@",  (uint8_t *)&v14,  0x16u);
  }

  [*(id *)(a1 + 40) conversationManager:*(void *)(a1 + 48) conversationChanged:*(void *)(a1 + 32)];
LABEL_13:
  uint64_t result = objc_opt_respondsToSelector(*(void *)(a1 + 40), "conversationManager:activatedConversationLinksChanged:");
  if ((result & 1) != 0) {
    return (uint64_t)[*(id *)(a1 + 40) conversationManager:*(void *)(a1 + 48) activatedConversationLinksChanged:*(void *)(a1 + 56)];
  }
  return result;
}

uint64_t sub_1000D772C(uint64_t a1)
{
  uint64_t result = objc_opt_respondsToSelector( *(void *)(a1 + 32),  "conversationManager:remoteScreenShareAttributesChanged:isLocallySharing:");
  if ((result & 1) != 0) {
    return (uint64_t)_[*(id *)(a1 + 32) conversationManager:*(void *)(a1 + 40) remoteScreenShareAttributesChanged:*(void *)(a1 + 48) isLocallySharing:*(unsigned __int8 *)(a1 + 56)];
  }
  return result;
}

uint64_t sub_1000D7934(uint64_t a1)
{
  uint64_t result = objc_opt_respondsToSelector(*(void *)(a1 + 32), "conversationManager:remoteScreenShareEndedWithReason:");
  if ((result & 1) != 0) {
    return (uint64_t)_[*(id *)(a1 + 32) conversationManager:*(void *)(a1 + 40) remoteScreenShareEndedWithReason:*(void *)(a1 + 48)];
  }
  return result;
}

void sub_1000D7B34(uint64_t a1)
{
  if ((objc_opt_respondsToSelector( *(void *)(a1 + 32),  "conversationManager:reportedLetMeInRejectedForPendingConversation:") & 1) != 0)
  {
    char v2 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");
    uint64_t v3 = *(void **)(a1 + 32);
    if ((v2 & 1) != 0)
    {
      uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
      if ([v3 shouldHandleUpdateForProvider:v4])
      {
      }

      else
      {
        char v5 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");

        if ((v5 & 1) != 0) {
          return;
        }
      }
    }

    else if ((objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:") & 1) != 0)
    {
      return;
    }

    id v6 = sub_1001704C4();
    BOOL v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = *(void *)(a1 + 32);
      id v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
      int v10 = 138412546;
      uint64_t v11 = v8;
      __int16 v12 = 2112;
      uint64_t v13 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Delegate should handle conversation update: %@ for provider: %@",  (uint8_t *)&v10,  0x16u);
    }

    [*(id *)(a1 + 32) conversationManager:*(void *)(a1 + 48) reportedLetMeInRejectedForPendingConversation:*(void *)(a1 + 40)];
  }

void sub_1000D7E48(uint64_t a1)
{
  if ((objc_opt_respondsToSelector( *(void *)(a1 + 32),  "conversationManager:reportedInvalidLinkForPendingConversation:") & 1) != 0)
  {
    char v2 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");
    uint64_t v3 = *(void **)(a1 + 32);
    if ((v2 & 1) != 0)
    {
      uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
      if ([v3 shouldHandleUpdateForProvider:v4])
      {
      }

      else
      {
        char v5 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");

        if ((v5 & 1) != 0) {
          return;
        }
      }
    }

    else if ((objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:") & 1) != 0)
    {
      return;
    }

    id v6 = sub_1001704C4();
    BOOL v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = *(void *)(a1 + 32);
      id v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
      int v10 = 138412546;
      uint64_t v11 = v8;
      __int16 v12 = 2112;
      uint64_t v13 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Delegate should handle conversation update: %@ for provider: %@",  (uint8_t *)&v10,  0x16u);
    }

    [*(id *)(a1 + 32) conversationManager:*(void *)(a1 + 48) reportedInvalidLinkForPendingConversation:*(void *)(a1 + 40)];
  }

id sub_1000D85B8(uint64_t a1)
{
  return _[*(id *)(a1 + 32) updateConversationHandoffEligibility:*(void *)(a1 + 40)];
}

void sub_1000D8BA0(uint64_t a1)
{
  char v2 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");
  uint64_t v3 = *(void **)(a1 + 32);
  if ((v2 & 1) != 0)
  {
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    if ([v3 shouldHandleUpdateForProvider:v4])
    {
    }

    else
    {
      char v5 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");

      if ((v5 & 1) != 0) {
        return;
      }
    }
  }

  else if ((objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:") & 1) != 0)
  {
    return;
  }

  id v6 = sub_1001704C4();
  BOOL v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    id v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    int v10 = 138412546;
    uint64_t v11 = v8;
    __int16 v12 = 2112;
    uint64_t v13 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Delegate should handle conversation update: %@ for provider: %@",  (uint8_t *)&v10,  0x16u);
  }

  [*(id *)(a1 + 32) conversationManager:*(void *)(a1 + 48) conversationChanged:*(void *)(a1 + 40)];
}

void sub_1000D8DAC(_Unwind_Exception *a1)
{
}

void sub_1000D8DC0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    uint64_t v3 = (CSDMessagingConversationMessage *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) object]);
    __int128 v68 = 0u;
    __int128 v69 = 0u;
    __int128 v70 = 0u;
    __int128 v71 = 0u;
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained mutableConversationsByUUID]);
    char v5 = (void *)objc_claimAutoreleasedReturnValue([v4 allValues]);

    id v6 = [v5 countByEnumeratingWithState:&v68 objects:v77 count:16];
    if (v6)
    {
      id v7 = v6;
      uint64_t v8 = 0LL;
      uint64_t v9 = *(void *)v69;
      do
      {
        for (i = 0LL; i != v7; i = (char *)i + 1)
        {
          if (*(void *)v69 != v9) {
            objc_enumerationMutation(v5);
          }
          uint64_t v11 = *(void **)(*((void *)&v68 + 1) + 8LL * (void)i);
          if ([v11 state] == (id)3)
          {
            id v12 = v11;

            uint64_t v8 = v12;
          }
        }

        id v7 = [v5 countByEnumeratingWithState:&v68 objects:v77 count:16];
      }

      while (v7);

      if (v8)
      {
        id v13 = sub_1001704C4();
        int v14 = (os_log_s *)objc_claimAutoreleasedReturnValue(v13);
        BOOL v15 = os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT);
        if (v3)
        {
          if (!v15) {
            goto LABEL_21;
          }
          __int16 v16 = (CSDMessagingConversationMessage *)objc_claimAutoreleasedReturnValue([v8 UUID]);
          *(_DWORD *)buf = 138412546;
          id v74 = v3;
          __int16 v75 = 2112;
          id v76 = v16;
          uint64_t v17 = "Conversation manager alerted to new selected audio route ID %@, letting my other devices know for conversation UUID %@";
          int8x16_t v18 = v14;
          uint32_t v19 = 22;
        }

        else
        {
          if (!v15) {
            goto LABEL_21;
          }
          __int16 v16 = (CSDMessagingConversationMessage *)objc_claimAutoreleasedReturnValue([v8 UUID]);
          *(_DWORD *)buf = 138412290;
          id v74 = v16;
          uint64_t v17 = "Conversation manager alerted to unselected audio route, letting my other devices know for conversation UUID %@";
          int8x16_t v18 = v14;
          uint32_t v19 = 12;
        }

        _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, v17, buf, v19);

LABEL_21:
        __int128 v21 = objc_alloc(&OBJC_CLASS___CSDMessagingConversationMessage);
        __int128 v22 = (void *)objc_claimAutoreleasedReturnValue([v8 groupUUID]);
        id v23 = -[CSDMessagingConversationMessage initWithType:groupUUID:link:]( v21,  "initWithType:groupUUID:link:",  32LL,  v22,  0LL);

        __int16 v24 = objc_alloc_init(&OBJC_CLASS___CSDMessagingConversationJoinedMetadata);
        unsigned int v63 = v3;
        -[CSDMessagingConversationJoinedMetadata setAudioRouteUniqueIdentifier:]( v24,  "setAudioRouteUniqueIdentifier:",  v3);
        id v25 = objc_alloc(&OBJC_CLASS___CSDConversationParticipant);
        id v26 = [v8 localParticipantIdentifier];
        __int128 v27 = (void *)objc_claimAutoreleasedReturnValue([v8 localMember]);
        __int128 v28 = (void *)objc_claimAutoreleasedReturnValue([v27 handle]);
        __int128 v29 = (void *)objc_claimAutoreleasedReturnValue(+[NSData data](&OBJC_CLASS___NSData, "data"));
        id v30 = -[CSDConversationParticipant initWithIdentifier:handle:avcData:]( v25,  "initWithIdentifier:handle:avcData:",  v26,  v28,  v29);

        id v61 = v30;
        id v31 = (void *)objc_claimAutoreleasedReturnValue( +[CSDMessagingConversationParticipant participantWithCSDConversationParticipant:]( &OBJC_CLASS___CSDMessagingConversationParticipant,  "participantWithCSDConversationParticipant:",  v30));
        -[CSDMessagingConversationJoinedMetadata setSender:](v24, "setSender:", v31);

        char v32 = v23;
        id v62 = v24;
        -[CSDMessagingConversationMessage setJoinedMetadata:](v23, "setJoinedMetadata:", v24);
        unsigned int v33 = (CSDMessagingConversationMessage *)objc_claimAutoreleasedReturnValue(+[NSMutableSet set](&OBJC_CLASS___NSMutableSet, "set"));
        __int128 v64 = 0u;
        __int128 v65 = 0u;
        __int128 v66 = 0u;
        __int128 v67 = 0u;
        id v34 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained service]);
        char v35 = (void *)objc_claimAutoreleasedReturnValue([v34 devices]);

        id v36 = [v35 countByEnumeratingWithState:&v64 objects:v72 count:16];
        if (v36)
        {
          id v37 = v36;
          uint64_t v38 = *(void *)v65;
          do
          {
            for (j = 0LL; j != v37; j = (char *)j + 1)
            {
              if (*(void *)v65 != v38) {
                objc_enumerationMutation(v35);
              }
              id v41 = (void *)objc_claimAutoreleasedReturnValue([v40 destinationURIs]);
              -[CSDMessagingConversationMessage unionSet:](v33, "unionSet:", v41);
            }

            id v37 = [v35 countByEnumeratingWithState:&v64 objects:v72 count:16];
          }

          while (v37);
        }

        id v42 = sub_1001704C4();
        __int16 v43 = (os_log_s *)objc_claimAutoreleasedReturnValue(v42);
        if (os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412546;
          id v74 = v32;
          __int16 v75 = 2112;
          id v76 = v33;
          _os_log_impl( (void *)&_mh_execute_header,  v43,  OS_LOG_TYPE_DEFAULT,  "Sending UpdateJoinedMetadata message %@ to my other devices: %@",  buf,  0x16u);
        }

        id v44 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained featureFlags]);
        if ([v44 groupFacetimeAsAServiceEnabled])
        {
          id v45 = (void *)objc_claimAutoreleasedReturnValue([v8 provider]);

          if (v45)
          {
            id v46 = (void *)objc_claimAutoreleasedReturnValue( +[CSDConversationProviderManager sharedInstance]( &OBJC_CLASS___CSDConversationProviderManager,  "sharedInstance"));
            id v47 = (void *)objc_claimAutoreleasedReturnValue([v8 provider]);
            uint64_t v48 = (void *)objc_claimAutoreleasedReturnValue([v46 serviceForProvider:v47]);

LABEL_35:
            uint64_t v49 = (void *)objc_claimAutoreleasedReturnValue([v8 localMember]);
            unsigned int v50 = (void *)objc_claimAutoreleasedReturnValue([v49 handle]);
            id v51 = (void *)objc_claimAutoreleasedReturnValue([v50 value]);
            id v52 = (void *)objc_claimAutoreleasedReturnValue([v48 accountWithCallerID:v51]);

            id v53 = (void (**)(void, void, void, void, void, void, void, void, void))objc_claimAutoreleasedReturnValue([WeakRetained sendDataBlock]);
            id v54 = v32;
            id v55 = (void *)objc_claimAutoreleasedReturnValue(-[CSDMessagingConversationMessage data](v32, "data"));
            uint64_t v56 = (void *)objc_claimAutoreleasedReturnValue([v8 localMember]);
            id v57 = (void *)objc_claimAutoreleasedReturnValue([v8 capabilitySendMessageOptions]);
            id v60 = WeakRetained;
            char v58 = v48;
            char v59 = (void *)objc_claimAutoreleasedReturnValue([v8 provider]);
            ((void (**)(void, void *, void *, CSDMessagingConversationMessage *, void *, void *, void, void, void *))v53)[2]( v53,  v55,  v52,  v33,  v56,  v57,  0LL,  0LL,  v59);

            id WeakRetained = v60;
            uint64_t v3 = v63;
LABEL_36:

            goto LABEL_37;
          }
        }

        else
        {
        }

        uint64_t v48 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained service]);
        goto LABEL_35;
      }
    }

    else
    {
    }

    id v20 = sub_1001704C4();
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(v20);
    if (os_log_type_enabled((os_log_t)v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v8,  OS_LOG_TYPE_DEFAULT,  "Ignoring route identifier change for handoff as no conversations are currently joined.",  buf,  2u);
    }

    goto LABEL_36;
  }

void sub_1000D9E14(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  int v10 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) queue]);
  block[0] = _NSConcreteStackBlock;
  block[2] = sub_1000D9F34;
  block[3] = &unk_1003D9B50;
  uint64_t v11 = *(void *)(a1 + 32);
  id v12 = *(void **)(a1 + 40);
  id v19 = v8;
  uint64_t v20 = v11;
  block[1] = 3221225472LL;
  id v17 = v9;
  id v18 = v7;
  id v21 = v12;
  id v22 = *(id *)(a1 + 48);
  id v23 = *(id *)(a1 + 56);
  id v13 = v8;
  id v14 = v7;
  id v15 = v9;
  dispatch_async(v10, block);
}

void sub_1000D9F34(uint64_t a1)
{
  if (!*(void *)(a1 + 32) && (uint64_t v4 = *(void **)(a1 + 40)) != 0LL && *(void *)(a1 + 48))
  {
    if ([v4 type] == 10)
    {
      char v5 = *(void **)(a1 + 56);
      uint64_t v6 = *(void *)(a1 + 64);
      uint64_t v7 = *(void *)(a1 + 40);
      uint64_t v8 = *(void *)(a1 + 48);
      uint64_t v9 = *(void *)(a1 + 72);
      id v13 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 80) serverReceivedTime]);
      objc_msgSend( v5,  "handleReceivedLetMeInRequest:toPseudonym:fromHandle:responseKeyData:dateInitiated:",  v7,  v6,  v9,  v8);
    }

    else
    {
      id v10 = sub_1001704C4();
      uint64_t v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        unsigned int v12 = [*(id *)(a1 + 40) type];
        *(_DWORD *)buf = 67109120;
        unsigned int v15 = v12;
        _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "[WARN] Decrypted conversation message but was not a let me in request: messageType: %d",  buf,  8u);
      }
    }
  }

  else
  {
    id v1 = sub_1001704C4();
    char v2 = (os_log_s *)objc_claimAutoreleasedReturnValue(v1);
    if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
      sub_1002B50B8();
    }
  }

void sub_1000DA6E4(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([a1[4] queue]);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  _DWORD v10[2] = sub_1000DA808;
  v10[3] = &unk_1003D9BA0;
  id v11 = v5;
  id v12 = a1[5];
  id v13 = v6;
  id v14 = a1[4];
  id v15 = a1[6];
  id v16 = a1[7];
  id v17 = a1[8];
  id v18 = a1[9];
  id v8 = v6;
  id v9 = v5;
  dispatch_async(v7, v10);
}

void sub_1000DA808(uint64_t a1)
{
  char v2 = *(void **)(a1 + 32);
  if (v2)
  {
    uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([v2 originator]);
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 handle]);
    id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 value]);
    id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[TUHandle normalizedHandleWithDestinationID:]( &OBJC_CLASS___TUHandle,  "normalizedHandleWithDestinationID:",  v5));

    uint64_t v7 = (uint64_t (**)(void))objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) activeLocalHandles]);
    uint64_t v8 = v7[2]();
    id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);

    __int128 v45 = 0u;
    __int128 v46 = 0u;
    __int128 v43 = 0u;
    __int128 v44 = 0u;
    id v10 = v9;
    id v11 = [v10 countByEnumeratingWithState:&v43 objects:v47 count:16];
    if (v11)
    {
      id v12 = v11;
      uint64_t v13 = *(void *)v44;
LABEL_4:
      uint64_t v14 = 0LL;
      while (1)
      {
        if (*(void *)v44 != v13) {
          objc_enumerationMutation(v10);
        }
        if (objc_msgSend( *(id *)(*((void *)&v43 + 1) + 8 * v14),  "isEquivalentToHandle:",  v6,  (void)v43)) {
          break;
        }
        if (v12 == (id)++v14)
        {
          id v12 = [v10 countByEnumeratingWithState:&v43 objects:v47 count:16];
          if (v12) {
            goto LABEL_4;
          }
          goto LABEL_10;
        }
      }

      id v17 = *(void **)(a1 + 56);
      id v18 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) groupUUID]);
      id v16 = (void *)objc_claimAutoreleasedReturnValue([v17 conversationWithGroupUUID:v18]);

      [v16 setHasReceivedLetMeInRequest:1];
      id v19 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) deviceSupport]);
      if ([v19 isGreenTea])
      {
        uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([v16 remoteMembers]);
        id v21 = [v20 count];

        if (v21)
        {
          id v22 = sub_1001704C4();
          id v23 = (os_log_s *)objc_claimAutoreleasedReturnValue(v22);
          if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
          {
            __int16 v24 = (os_log_s *)objc_claimAutoreleasedReturnValue([v16 remoteMembers]);
            *(_DWORD *)buf = 138412290;
            uint64_t v49 = v24;
            _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEFAULT,  "[WARN] GreenTea device does not support multiple remote members. remoteMembers = %@",  buf,  0xCu);
          }

void sub_1000DB270(id *a1)
{
  if ([a1[4] type] == 11 || objc_msgSend(a1[4], "type") == 26)
  {
    if ([a1[4] hasLink])
    {
      char v2 = (void *)objc_claimAutoreleasedReturnValue([a1[4] conversationGroupUUID]);
      uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([a1[4] link]);
      uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 groupUUID]);
      unsigned __int8 v5 = [v2 isEqual:v4];

      if ((v5 & 1) != 0)
      {
        unsigned int v6 = [a1[4] type];
        BOOL v7 = v6 == 26;
        uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([a1[4] link]);
        id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 tuConversationLink]);

        if (!v9)
        {
          id v26 = sub_1001704C4();
          uint64_t v14 = (os_log_s *)objc_claimAutoreleasedReturnValue(v26);
          if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
          {
            *(_WORD *)buf = 0;
            _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "[WARN] Invalid TUConversationLink for link created/changed message (it was nil)",  buf,  2u);
          }

          goto LABEL_44;
        }

        id v10 = a1[5];
        id v11 = (void *)objc_claimAutoreleasedReturnValue([v9 originatorHandle]);
        LOBYTE(v10) = [v10 isEquivalentToHandle:v11];

        if ((v10 & 1) == 0)
        {
          id v27 = sub_1001704C4();
          uint64_t v14 = (os_log_s *)objc_claimAutoreleasedReturnValue(v27);
          if (!os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
          {
LABEL_44:

            goto LABEL_45;
          }

          id v28 = a1[5];
          id v17 = (os_log_s *)objc_claimAutoreleasedReturnValue([v9 originatorHandle]);
          id v29 = a1[4];
          *(_DWORD *)buf = 138412802;
          *(void *)uint64_t v73 = v28;
          *(_WORD *)&v73[8] = 2112;
          *(void *)id v74 = v17;
          *(_WORD *)&v74[8] = 2112;
          v75[0] = v29;
          id v30 = "[WARN] Sender %@ did not match link's originator handle %@ for link created/changed message %@";
          id v31 = v14;
          uint32_t v32 = 32;
          goto LABEL_18;
        }

        id v12 = a1[6];
        uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([a1[4] conversationGroupUUID]);
        uint64_t v14 = (os_log_s *)objc_claimAutoreleasedReturnValue([v12 conversationWithGroupUUID:v13]);

        if (v14)
        {
          if (v6 != 26)
          {
            id v15 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s link](v14, "link"));

            if (v15)
            {
              id v16 = sub_1001704C4();
              id v17 = (os_log_s *)objc_claimAutoreleasedReturnValue(v16);
              if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
              {
                id v18 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s UUID](v14, "UUID"));
                id v19 = a1[4];
                *(_DWORD *)buf = 138412546;
                *(void *)uint64_t v73 = v18;
                *(_WORD *)&v73[8] = 2112;
                *(void *)id v74 = v19;
                _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "[WARN] Link already exists on conversation %@ for link created message %@",  buf,  0x16u);
              }

              goto LABEL_19;
            }
          }

          unsigned int v33 = (void *)objc_claimAutoreleasedReturnValue([a1[6] deviceSupport]);
          if ([v33 isGreenTea])
          {
            id v34 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s remoteMembers](v14, "remoteMembers"));
            id v35 = [v34 count];

            if (v35)
            {
              id v36 = sub_1001704C4();
              id v17 = (os_log_s *)objc_claimAutoreleasedReturnValue(v36);
              if (!os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT)) {
                goto LABEL_19;
              }
              id v37 = a1[4];
              *(_DWORD *)buf = 138412290;
              *(void *)uint64_t v73 = v37;
              id v30 = "[WARN] GreenTea device does not support link created/changed message because invitedMemberHandles > 1, message: %@";
              goto LABEL_30;
            }
          }

          else
          {
          }

          unsigned int v59 = v6;
          BOOL v60 = v6 == 26;
          __int128 v69 = 0u;
          __int128 v70 = 0u;
          __int128 v67 = 0u;
          __int128 v68 = 0u;
          id v61 = v14;
          __int128 v46 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s remoteMembers](v14, "remoteMembers"));
          id v47 = [v46 countByEnumeratingWithState:&v67 objects:v71 count:16];
          if (!v47)
          {
LABEL_40:

            uint64_t v14 = v61;
LABEL_46:
            id v56 = sub_1001704C4();
            id v17 = (os_log_s *)objc_claimAutoreleasedReturnValue(v56);
            if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
            {
              id v57 = a1[5];
              char v58 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s UUID](v14, "UUID"));
              *(_DWORD *)buf = 138412546;
              *(void *)uint64_t v73 = v57;
              *(_WORD *)&v73[8] = 2112;
              *(void *)id v74 = v58;
              _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "[WARN] Sender %@ is not part of conversation UUID %@.",  buf,  0x16u);
            }

            goto LABEL_19;
          }

          id v48 = v47;
          uint64_t v49 = *(void *)v68;
LABEL_34:
          uint64_t v50 = 0LL;
          while (1)
          {
            if (*(void *)v68 != v49) {
              objc_enumerationMutation(v46);
            }
            id v51 = *(void **)(*((void *)&v67 + 1) + 8 * v50);
            id v52 = (void *)objc_claimAutoreleasedReturnValue([v51 handle]);
            unsigned __int8 v53 = [v52 isEqualToHandle:a1[5]];

            if ((v53 & 1) != 0) {
              break;
            }
            if (v48 == (id)++v50)
            {
              id v48 = [v46 countByEnumeratingWithState:&v67 objects:v71 count:16];
              if (v48) {
                goto LABEL_34;
              }
              goto LABEL_40;
            }
          }

          id v41 = v51;

          uint64_t v14 = v61;
          unsigned int v6 = v59;
          BOOL v7 = v60;
          if (!v41) {
            goto LABEL_46;
          }
        }

        else
        {
          id v38 = sub_1001704C4();
          uint64_t v39 = (os_log_s *)objc_claimAutoreleasedReturnValue(v38);
          if (os_log_type_enabled(v39, OS_LOG_TYPE_DEFAULT))
          {
            id v40 = a1[5];
            *(_DWORD *)buf = 138412546;
            *(void *)uint64_t v73 = v40;
            *(_WORD *)&v73[8] = 2112;
            *(void *)id v74 = v9;
            _os_log_impl( (void *)&_mh_execute_header,  v39,  OS_LOG_TYPE_DEFAULT,  "[In-Advance] Received link created/changed message from %@ with link %@",  buf,  0x16u);
          }

          id v41 = (id)objc_claimAutoreleasedReturnValue([a1[6] deviceSupport]);
          if ([v41 isGreenTea])
          {
            id v42 = (void *)objc_claimAutoreleasedReturnValue([v9 invitedMemberHandles]);
            id v43 = [v42 count];

            if ((unint64_t)v43 >= 2)
            {
              id v44 = sub_1001704C4();
              id v17 = (os_log_s *)objc_claimAutoreleasedReturnValue(v44);
              if (!os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT)) {
                goto LABEL_19;
              }
              id v45 = a1[4];
              *(_DWORD *)buf = 138412290;
              *(void *)uint64_t v73 = v45;
              id v30 = "[WARN] GreenTea device does not support link creation message %@ because invitedMemberHandles > 1";
LABEL_30:
              id v31 = v17;
              uint32_t v32 = 12;
LABEL_18:
              _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEFAULT, v30, buf, v32);
LABEL_19:

              goto LABEL_44;
            }

void sub_1000DB974(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  BOOL v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) queue]);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1000DBA74;
  block[3] = &unk_1003D9BF0;
  id v13 = v6;
  id v14 = *(id *)(a1 + 40);
  id v15 = v5;
  char v19 = *(_BYTE *)(a1 + 64);
  id v16 = *(id *)(a1 + 48);
  id v8 = *(id *)(a1 + 56);
  uint64_t v9 = *(void *)(a1 + 32);
  id v17 = v8;
  uint64_t v18 = v9;
  id v10 = v5;
  id v11 = v6;
  dispatch_async(v7, block);
}

void sub_1000DBA74(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    id v1 = sub_1001704C4();
    char v2 = (os_log_s *)objc_claimAutoreleasedReturnValue(v1);
    if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
      sub_1002B5118();
    }

    return;
  }

  uint64_t v4 = *(void **)(a1 + 40);
  if (!v4)
  {
    id v13 = sub_1001704C4();
    BOOL v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v13);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      if (*(_BYTE *)(a1 + 80)) {
        id v14 = @"YES";
      }
      else {
        id v14 = @"NO";
      }
      id v15 = *(void **)(a1 + 56);
      uint64_t v16 = *(void *)(a1 + 64);
      int v21 = 138543874;
      unsigned int v22 = v14;
      __int16 v23 = 2112;
      __int16 v24 = v15;
      __int16 v25 = 2112;
      uint64_t v26 = v16;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "[In-Advance] Link successfully stored (update: %{public}@) from %@ with linkDescriptor %@",  (uint8_t *)&v21,  0x20u);
    }

    goto LABEL_17;
  }

  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithObject:](&OBJC_CLASS___NSSet, "setWithObject:", IDSRegistrationPropertySupportsGondola));
  [v4 addRequiredCapabilities:v5 requiredLackOfCapabilities:0];

  LODWORD(v5) = [*(id *)(a1 + 40) setConversationLink:*(void *)(a1 + 48) allowUpdate:*(unsigned __int8 *)(a1 + 80)];
  id v6 = sub_1001704C4();
  BOOL v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);
  if ((_DWORD)v5)
  {
    if (v8)
    {
      if (*(_BYTE *)(a1 + 80)) {
        uint64_t v9 = @"YES";
      }
      else {
        uint64_t v9 = @"NO";
      }
      id v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) UUID]);
      uint64_t v11 = *(void *)(a1 + 56);
      uint64_t v12 = *(void *)(a1 + 64);
      int v21 = 138544130;
      unsigned int v22 = v9;
      __int16 v23 = 2112;
      __int16 v24 = v10;
      __int16 v25 = 2112;
      uint64_t v26 = v11;
      __int16 v27 = 2112;
      uint64_t v28 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "[Ongoing] Received link created/changed (update: %{public}@) message for conversation UUID %@ from %@ with linkDescriptor %@",  (uint8_t *)&v21,  0x2Au);
    }

void sub_1000DBDE8(uint64_t a1)
{
  if ([*(id *)(a1 + 32) type] == 24
    && ([*(id *)(a1 + 32) hasLink] & 1) != 0)
  {
    char v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) link]);
    uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([v2 tuConversationLink]);

    if (v3)
    {
      uint64_t v4 = *(void **)(a1 + 40);
      id v5 = (void *)objc_claimAutoreleasedReturnValue([v3 originatorHandle]);
      LOBYTE(v4) = [v4 isEquivalentToHandle:v5];

      if ((v4 & 1) != 0)
      {
        id v6 = *(void **)(a1 + 48);
        BOOL v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) conversationGroupUUID]);
        BOOL v8 = (os_log_s *)objc_claimAutoreleasedReturnValue([v6 conversationWithGroupUUID:v7]);

        uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) linkManager]);
        id v37 = 0LL;
        id v10 = (void *)objc_claimAutoreleasedReturnValue([v9 fetchActivatedLinksWithError:&v37]);
        id v11 = v37;

        if (v11)
        {
          id v12 = sub_1001704C4();
          id v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
          if (os_log_type_enabled(v13, OS_LOG_TYPE_FAULT)) {
            sub_1002B5178();
          }
        }

        else
        {
          __int128 v35 = 0u;
          __int128 v36 = 0u;
          __int128 v33 = 0u;
          __int128 v34 = 0u;
          uint32_t v32 = v10;
          id v22 = v10;
          id v23 = [v22 countByEnumeratingWithState:&v33 objects:v38 count:16];
          if (v23)
          {
            id v24 = v23;
            uint64_t v25 = *(void *)v34;
LABEL_16:
            uint64_t v26 = 0LL;
            while (1)
            {
              if (*(void *)v34 != v25) {
                objc_enumerationMutation(v22);
              }
              __int16 v27 = *(void **)(*((void *)&v33 + 1) + 8 * v26);
              if (v24 == (id)++v26)
              {
                id v24 = [v22 countByEnumeratingWithState:&v33 objects:v38 count:16];
                if (v24) {
                  goto LABEL_16;
                }
                goto LABEL_22;
              }
            }

            id v13 = v27;

            if (!v13) {
              goto LABEL_27;
            }
            id v28 = sub_1001704C4();
            id v29 = (os_log_s *)objc_claimAutoreleasedReturnValue(v28);
            if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)buf = 138412290;
              id v40 = v13;
              _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_DEFAULT,  "handleReceivedLinkInvalidatedMessage: remove link: %@",  buf,  0xCu);
            }

            [*(id *)(a1 + 48) removeLink:v13 reason:8 withConversation:v8];
          }

          else
          {
LABEL_22:

LABEL_27:
            id v30 = sub_1001704C4();
            id v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v30);
            if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
            {
              id v31 = *(os_log_s **)(a1 + 32);
              *(_DWORD *)buf = 138412290;
              id v40 = v31;
              _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "We are not tracking any stored link for link invalidation message %@",  buf,  0xCu);
            }
          }

          id v10 = v32;
        }
      }

      else
      {
        id v18 = sub_1001704C4();
        BOOL v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v18);
        if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
        {
          char v19 = *(os_log_s **)(a1 + 40);
          id v20 = (void *)objc_claimAutoreleasedReturnValue([v3 originatorHandle]);
          uint64_t v21 = *(void *)(a1 + 32);
          *(_DWORD *)buf = 138412802;
          id v40 = v19;
          __int16 v41 = 2112;
          id v42 = v20;
          __int16 v43 = 2112;
          uint64_t v44 = v21;
          _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "[WARN] Sender %@ did not match link's originator handle %@ for link invalidation message %@",  buf,  0x20u);
        }
      }
    }

    else
    {
      id v16 = sub_1001704C4();
      BOOL v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v16);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        id v17 = *(os_log_s **)(a1 + 32);
        *(_DWORD *)buf = 138412290;
        id v40 = v17;
        _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "[WARN] Invalid TUConversationLink for link invalidation message %@",  buf,  0xCu);
      }
    }
  }

  else
  {
    id v14 = sub_1001704C4();
    uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v14);
    if (os_log_type_enabled((os_log_t)v3, OS_LOG_TYPE_DEFAULT))
    {
      id v15 = *(os_log_s **)(a1 + 32);
      *(_DWORD *)buf = 138412290;
      id v40 = v15;
      _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v3,  OS_LOG_TYPE_DEFAULT,  "Not sufficiently formed link invalidation message %@",  buf,  0xCu);
    }
  }
}

void sub_1000DC2D0(id *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([a1[4] queue]);
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  _DWORD v9[2] = sub_1000DC394;
  v9[3] = &unk_1003D7B28;
  id v10 = v4;
  id v6 = a1[5];
  id v7 = a1[4];
  id v11 = v6;
  id v12 = v7;
  id v13 = a1[6];
  id v8 = v4;
  dispatch_async(v5, v9);
}

void sub_1000DC394(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = sub_1001704C4();
  id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
  id v5 = v4;
  if (v2)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_1002B51E4();
    }
  }

  else
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v6 = *(void *)(a1 + 40);
      int v7 = 138412290;
      uint64_t v8 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "removeLink completed for %@ ",  (uint8_t *)&v7,  0xCu);
    }

    [*(id *)(a1 + 48) notifyDelegatesOfChangedLink:*(void *)(a1 + 40) conversation:*(void *)(a1 + 56)];
  }

void sub_1000E1A60(uint64_t a1)
{
  __int128 v8 = 0u;
  __int128 v9 = 0u;
  __int128 v10 = 0u;
  __int128 v11 = 0u;
  id v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mutableConversationsByUUID", 0));
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([v1 allValues]);

  id v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      for (i = 0LL; i != v4; i = (char *)i + 1)
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        int v7 = *(void **)(*((void *)&v8 + 1) + 8LL * (void)i);
      }

      id v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }

    while (v4);
  }
}

void sub_1000E1C38( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_1000E1C50(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) mutableConversationsByUUID]);
  uint64_t v3 = objc_claimAutoreleasedReturnValue( +[NSMutableDictionary dictionaryWithCapacity:]( NSMutableDictionary,  "dictionaryWithCapacity:",  [v2 count]));
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8LL);
  uint64_t v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;

  __int128 v32 = 0u;
  __int128 v33 = 0u;
  __int128 v30 = 0u;
  __int128 v31 = 0u;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) mutableConversationsByUUID]);
  int v7 = (void *)objc_claimAutoreleasedReturnValue([v6 allValues]);

  id v8 = [v7 countByEnumeratingWithState:&v30 objects:v35 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = *(void *)v31;
    do
    {
      for (i = 0LL; i != v9; i = (char *)i + 1)
      {
        if (*(void *)v31 != v10) {
          objc_enumerationMutation(v7);
        }
        id v12 = *(void **)(*((void *)&v30 + 1) + 8LL * (void)i);
        if (([v12 isFromStorage] & 1) == 0)
        {
          id v13 = (void *)objc_claimAutoreleasedReturnValue([v12 tuConversation]);
          id v14 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL);
          id v15 = (void *)objc_claimAutoreleasedReturnValue([v12 groupUUID]);
          [v14 setObject:v13 forKeyedSubscript:v15];
        }
      }

      id v9 = [v7 countByEnumeratingWithState:&v30 objects:v35 count:16];
    }

    while (v9);
  }

  __int128 v28 = 0u;
  __int128 v29 = 0u;
  __int128 v26 = 0u;
  __int128 v27 = 0u;
  id v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mutablePendingConversationsByPseudonym", 0));
  id v17 = (void *)objc_claimAutoreleasedReturnValue([v16 allValues]);

  id v18 = [v17 countByEnumeratingWithState:&v26 objects:v34 count:16];
  if (v18)
  {
    id v19 = v18;
    uint64_t v20 = *(void *)v27;
    do
    {
      for (j = 0LL; j != v19; j = (char *)j + 1)
      {
        if (*(void *)v27 != v20) {
          objc_enumerationMutation(v17);
        }
        id v22 = *(void **)(*((void *)&v26 + 1) + 8LL * (void)j);
        id v23 = (void *)objc_claimAutoreleasedReturnValue([v22 tuConversation]);
        id v24 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL);
        uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue([v22 temporaryGroupUUID]);
        [v24 setObject:v23 forKeyedSubscript:v25];
      }

      id v19 = [v17 countByEnumeratingWithState:&v26 objects:v34 count:16];
    }

    while (v19);
  }
}

void sub_1000E1FA0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_1000E1FB8(uint64_t a1)
{
  uint64_t v2 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _incomingPendingConversationsByGroupUUID]);
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8LL);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_1000E240C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_1000E2424(uint64_t a1)
{
  id v5 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) mutablePseudonymsByCallUUID]);
  uint64_t v2 = objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithDictionary:](&OBJC_CLASS___NSDictionary, "dictionaryWithDictionary:", v5));
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8LL);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_1000E2558( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_1000E2570(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) mutableConversationsByUUID]);
  uint64_t v3 = objc_claimAutoreleasedReturnValue( +[NSMutableDictionary dictionaryWithCapacity:]( NSMutableDictionary,  "dictionaryWithCapacity:",  [v2 count]));
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8LL);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;

  __int128 v32 = 0u;
  __int128 v33 = 0u;
  __int128 v30 = 0u;
  __int128 v31 = 0u;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) mutableConversationsByUUID]);
  int v7 = (void *)objc_claimAutoreleasedReturnValue([v6 allValues]);

  id v8 = [v7 countByEnumeratingWithState:&v30 objects:v35 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = *(void *)v31;
    do
    {
      for (i = 0LL; i != v9; i = (char *)i + 1)
      {
        if (*(void *)v31 != v10) {
          objc_enumerationMutation(v7);
        }
        id v12 = *(void **)(*((void *)&v30 + 1) + 8LL * (void)i);
        if (*(_BYTE *)(a1 + 48)
          || ([*(id *)(*((void *)&v30 + 1) + 8 * (void)i) isFromStorage] & 1) == 0)
        {
          id v13 = (void *)objc_claimAutoreleasedReturnValue([v12 tuConversation]);
          id v14 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL);
          id v15 = (void *)objc_claimAutoreleasedReturnValue([v12 UUID]);
          [v14 setObject:v13 forKeyedSubscript:v15];
        }
      }

      id v9 = [v7 countByEnumeratingWithState:&v30 objects:v35 count:16];
    }

    while (v9);
  }

  __int128 v28 = 0u;
  __int128 v29 = 0u;
  __int128 v26 = 0u;
  __int128 v27 = 0u;
  id v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mutablePendingConversationsByPseudonym", 0));
  id v17 = (void *)objc_claimAutoreleasedReturnValue([v16 allValues]);

  id v18 = [v17 countByEnumeratingWithState:&v26 objects:v34 count:16];
  if (v18)
  {
    id v19 = v18;
    uint64_t v20 = *(void *)v27;
    do
    {
      for (j = 0LL; j != v19; j = (char *)j + 1)
      {
        if (*(void *)v27 != v20) {
          objc_enumerationMutation(v17);
        }
        id v22 = *(void **)(*((void *)&v26 + 1) + 8LL * (void)j);
        id v23 = (void *)objc_claimAutoreleasedReturnValue([v22 tuConversation]);
        id v24 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL);
        uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue([v22 temporaryGroupUUID]);
        [v24 setObject:v23 forKeyedSubscript:v25];
      }

      id v19 = [v17 countByEnumeratingWithState:&v26 objects:v34 count:16];
    }

    while (v19);
  }
}

void sub_1000E2A30(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegateToQueue]);
  [v2 setObject:*(void *)(a1 + 40) forKey:*(void *)(a1 + 48)];
}

void sub_1000E2B08(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegateToQueue]);
  [v2 removeObjectForKey:*(void *)(a1 + 40)];
}

void sub_1000E2C04(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) observerToQueue]);
  [v2 setObject:*(void *)(a1 + 40) forKey:*(void *)(a1 + 48)];
}

void sub_1000E2CDC(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) service]);
    id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 description]);
    *(_DWORD *)buf = 138412290;
    id v12 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "CSDConversationManager beginning to listen on service:%@",  buf,  0xCu);
  }

  uint64_t v6 = *(void **)(a1 + 32);
  int v7 = *(void **)(a1 + 40);
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 queue]);
  [v6 addServiceDelegate:v7 queue:v8];

  id v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) lockStateObserver]);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  _DWORD v10[2] = sub_1000E2E20;
  v10[3] = &unk_1003D7730;
  void v10[4] = *(void *)(a1 + 40);
  [v9 performBlockAfterFirstUnlock:v10];
}

id sub_1000E2E20(uint64_t a1)
{
  return [*(id *)(a1 + 32) retreiveActiveConversations];
}

void sub_1000E2F60( uint64_t a1, void *a2, void *a3, void *a4, unsigned int a5, void *a6, void *a7, void *a8, void *a9, void *a10, void *a11, void *a12, void *a13, void *a14, void *a15, void *a16, uint64_t a17, uint64_t a18)
{
  id v92 = a2;
  id v24 = a3;
  id v91 = a4;
  id v25 = a6;
  id v90 = a7;
  id v26 = a8;
  __int128 v27 = v24;
  id v28 = a9;
  id v89 = a10;
  __int128 v29 = v26;
  id v88 = a11;
  id v30 = a12;
  id v87 = a13;
  id v86 = a14;
  id v85 = a15;
  id v84 = a16;
  __int128 v31 = *(void **)(a1 + 32);
  __int128 v32 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](&OBJC_CLASS___NSSet, "setWithArray:", v29));
  __int128 v33 = v31;
  __int128 v34 = v30;
  uint64_t v35 = objc_claimAutoreleasedReturnValue([v33 conversationWithGroupUUID:v27 orRepresentedByRemoteMembers:v32 andLink:v30]);

  unint64_t v83 = (void *)v35;
  if (v35)
  {
    id v36 = sub_1001704C4();
    id v37 = (os_log_s *)objc_claimAutoreleasedReturnValue(v36);
    id v38 = v83;
    if (os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v39 = v34;
      id v40 = (void *)objc_claimAutoreleasedReturnValue([v83 UUID]);
      *(_DWORD *)buf = 138412546;
      id v104 = v92;
      __int16 v105 = 2112;
      unint64_t v106 = v40;
      _os_log_impl( (void *)&_mh_execute_header,  v37,  OS_LOG_TYPE_DEFAULT,  "[WARN] Not adding cached conversation with UUID %@ because we already added equivalent conversation with UUID %@",  buf,  0x16u);

      __int128 v34 = v39;
    }

    __int16 v41 = v84;
  }

  else
  {
    uint64_t v42 = a5;
    char v79 = v34;
    id v80 = v28;
    if (v34)
    {
      __int16 v43 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) pendingMembershipTracker]);
      uint64_t v78 = objc_claimAutoreleasedReturnValue([v43 retrievePendingMembersFor:v27]);
    }

    else
    {
      uint64_t v78 = objc_claimAutoreleasedReturnValue(+[NSSet set](&OBJC_CLASS___NSSet, "set"));
    }

    id v82 = v25;
    uint64_t v44 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) conversationProviderManager]);
    uint64_t v77 = (void *)objc_claimAutoreleasedReturnValue([v44 tuConversationProviderForIdentifier:v85]);

    id v45 = sub_1001704C4();
    __int128 v46 = (os_log_s *)objc_claimAutoreleasedReturnValue(v45);
    if (os_log_type_enabled(v46, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412802;
      id v104 = v27;
      __int16 v105 = 2112;
      unint64_t v106 = v29;
      __int16 v107 = 2112;
      id v108 = v28;
      _os_log_impl( (void *)&_mh_execute_header,  v46,  OS_LOG_TYPE_DEFAULT,  "Reviving cached conversation with groupUUID: %@ remoteMembers: %@ lightweightMembers: %@",  buf,  0x20u);
    }

    id v47 = *(void **)(a1 + 32);
    id v48 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](&OBJC_CLASS___NSSet, "setWithArray:", v29));
    uint64_t v49 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](&OBJC_CLASS___NSSet, "setWithArray:", v89));
    uint64_t v50 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](&OBJC_CLASS___NSSet, "setWithArray:", v28));
    LOWORD(v74) = 1;
    LOBYTE(v73) = 1;
    id v76 = v27;
    id v51 = (void *)objc_claimAutoreleasedReturnValue( objc_msgSend( v47,  "createConversationWithUUID:groupUUID:messagesGroupUUID:locallyCreated:localMember:initiator:remote Members:pendingMembers:otherInvitedHandles:remotePushTokens:lightweightMembers:activity:link:repor t:fromStorage:avMode:presentationMode:provider:screenSharingRequest:isInitiator:isOldMessage:",  v92,  v27,  v91,  v42,  v82,  v90,  v48,  v78,  v49,  0,  v50,  0,  v79,  v87,  v73,  a17,  a18,  v77,  0,  v74));

    __int128 v99 = 0u;
    __int128 v100 = 0u;
    __int128 v97 = 0u;
    __int128 v98 = 0u;
    id v52 = v88;
    id v53 = [v52 countByEnumeratingWithState:&v97 objects:v102 count:16];
    if (v53)
    {
      id v54 = v53;
      uint64_t v55 = *(void *)v98;
      do
      {
        for (i = 0LL; i != v54; i = (char *)i + 1)
        {
          if (*(void *)v98 != v55) {
            objc_enumerationMutation(v52);
          }
          [v51 addActiveParticipant:*(void *)(*((void *)&v97 + 1) + 8 * (void)i)];
        }

        id v54 = [v52 countByEnumeratingWithState:&v97 objects:v102 count:16];
      }

      while (v54);
    }

    __int16 v75 = v29;

    __int128 v95 = 0u;
    __int128 v96 = 0u;
    __int128 v93 = 0u;
    __int128 v94 = 0u;
    id v57 = v86;
    id v58 = [v57 countByEnumeratingWithState:&v93 objects:v101 count:16];
    if (v58)
    {
      id v59 = v58;
      uint64_t v60 = *(void *)v94;
      do
      {
        for (j = 0LL; j != v59; j = (char *)j + 1)
        {
          if (*(void *)v94 != v60) {
            objc_enumerationMutation(v57);
          }
          id v62 = *(void **)(*((void *)&v93 + 1) + 8LL * (void)j);
          unsigned int v63 = (void *)objc_claimAutoreleasedReturnValue([v62 activity]);
          id v64 = (void *)objc_claimAutoreleasedReturnValue([v63 fromHandle]);
          id v65 = (void *)objc_claimAutoreleasedReturnValue([v64 tuHandle]);

          if (v65
            || (BOOL v66 = (void *)objc_claimAutoreleasedReturnValue([v62 locallyPersistedMetadata]),
                unsigned int v67 = [v66 locallyInitiated],
                v66,
                v67))
          {
            __int128 v68 = (os_log_s *)objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 32) createActivitySession:v62 onConversation:v51 fromHandle:v65]);
            if (!v68)
            {
              id v69 = sub_1001704C4();
              __int128 v70 = (os_log_s *)objc_claimAutoreleasedReturnValue(v69);
              if (os_log_type_enabled(v70, OS_LOG_TYPE_DEFAULT))
              {
                *(_DWORD *)buf = 138412290;
                id v104 = v62;
                _os_log_impl( (void *)&_mh_execute_header,  v70,  OS_LOG_TYPE_DEFAULT,  "[WARN] Failed to create newActivitySession for activitySession %@",  buf,  0xCu);
              }
            }
          }

          else
          {
            id v71 = sub_1001704C4();
            __int128 v68 = (os_log_s *)objc_claimAutoreleasedReturnValue(v71);
            if (os_log_type_enabled(v68, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)buf = 138412290;
              id v104 = v62;
              _os_log_error_impl( (void *)&_mh_execute_header,  v68,  OS_LOG_TYPE_ERROR,  "Failed to create activitySession from persistence since we couldn't find the trusted fromHandle on activitySession: %@",  buf,  0xCu);
            }
          }
        }

        id v59 = [v57 countByEnumeratingWithState:&v93 objects:v101 count:16];
      }

      while (v59);
    }

    __int16 v41 = v84;
    if (v84)
    {
      char v72 = (void *)objc_claimAutoreleasedReturnValue([v84 tuConversationActivitySession]);
      [v51 setStagedActivitySessionForActivitySession:v72];
    }

    __int128 v29 = v75;
    __int128 v27 = v76;
    id v28 = v80;
    id v25 = v82;
    id v37 = (os_log_s *)v78;
    __int128 v34 = v79;
    id v38 = 0LL;
  }
}

void sub_1000E3888(_Unwind_Exception *a1)
{
}

void sub_1000E38A0(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    id v5 = *(void **)(a1 + 40);
    uint64_t v6 = *(void *)(a1 + 48);
    *(_DWORD *)buf = 138412802;
    *(void *)unint64_t v83 = v4;
    *(_WORD *)&v83[8] = 2112;
    id v84 = v5;
    __int16 v85 = 2112;
    uint64_t v86 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "groupUUID: %@ remoteMembers: %@, conversationProvider: %@",  buf,  0x20u);
  }

  int v7 = (void *)objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 56) conversationWithGroupUUID:*(void *)(a1 + 32) orRepresentedByRemoteMembers:*(void *)(a1 + 40) andLink:*(void *)(a1 + 64)]);
  if ([v7 state] == (id)4 && objc_msgSend(*(id *)(a1 + 40), "count") == (id)1 && !*(void *)(a1 + 64))
  {
    id v8 = sub_1001704C4();
    id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v7 UUID]);
      *(_DWORD *)buf = 138412290;
      *(void *)unint64_t v83 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "Found existing conversation %@ but not reusing it since it's leaving and we're trying to join a U+1 call",  buf,  0xCu);
    }

    int v7 = 0LL;
  }

  if ([v7 state] == (id)3)
  {
    __int128 v11 = (void *)objc_claimAutoreleasedReturnValue([v7 remoteMembers]);
    if ([v11 count] == (id)1
      && [*(id *)(a1 + 40) count] == (id)1
      && *(void *)(a1 + 128) == 2LL)
    {
      unsigned int v12 = [v7 isVideo] ^ 1;
    }

    else
    {
      unsigned int v12 = 0;
    }
  }

  else
  {
    unsigned int v12 = 0;
  }

  id v13 = sub_1001704C4();
  id v14 = (os_log_s *)objc_claimAutoreleasedReturnValue(v13);
  BOOL v15 = os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT);
  if (!v7 || v12)
  {
    if (v15)
    {
      *(_DWORD *)buf = 67109376;
      *(_DWORD *)unint64_t v83 = v7 == 0LL;
      *(_WORD *)&v83[4] = 1024;
      *(_DWORD *)&v83[6] = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "No conversation currently exists to join: %d, so creating a new one isConversationVideoUpgrade: %d",  buf,  0xEu);
    }

    id v23 = (uint64_t (**)(void, void))objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) activeLocalHandlesForProvider]);
    uint64_t v24 = v23[2](v23, *(void *)(a1 + 48));
    id v25 = (void *)objc_claimAutoreleasedReturnValue(v24);

    id v26 = (uint64_t (**)(void, void))objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) localCallerIDForProvider]);
    uint64_t v27 = v26[2](v26, *(void *)(a1 + 48));
    id v28 = (void *)objc_claimAutoreleasedReturnValue(v27);

    __int128 v29 = (TUConversationMember *)*(id *)(a1 + 72);
    id v30 = v29;
    if (v29 || !v28)
    {
      if (!v29) {
        goto LABEL_49;
      }
      __int128 v31 = *(void **)(a1 + 56);
      __int128 v32 = (void *)objc_claimAutoreleasedReturnValue(-[TUConversationMember handle](v29, "handle"));
      LOBYTE(v31) = [v31 isValidLocalHandle:v32 forProvider:*(void *)(a1 + 48)];

      if ((v31 & 1) == 0)
      {
        id v42 = sub_1001704C4();
        __int16 v43 = (os_log_s *)objc_claimAutoreleasedReturnValue(v42);
        if (os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412546;
          *(void *)unint64_t v83 = v30;
          *(_WORD *)&v83[8] = 2112;
          id v84 = v25;
          _os_log_impl( (void *)&_mh_execute_header,  v43,  OS_LOG_TYPE_DEFAULT,  "[WARN] The request specified that local member %@ should be used, but the useable handles for FaceTime are % @. We cannot proceed with a handle that's not registered for FaceTime on this device.",  buf,  0x16u);
        }

        goto LABEL_49;
      }
    }

    else
    {
      id v30 = -[TUConversationMember initWithHandle:nickname:]( objc_alloc(&OBJC_CLASS___TUConversationMember),  "initWithHandle:nickname:",  v28,  0LL);
      if (!v30)
      {
LABEL_49:
        id v44 = sub_1001704C4();
        id v30 = (TUConversationMember *)objc_claimAutoreleasedReturnValue(v44);
        if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR)) {
          sub_1002B5BA0();
        }
LABEL_75:

        goto LABEL_76;
      }
    }

    __int128 v33 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) featureFlags]);
    uint64_t v74 = v7;
    __int128 v34 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) featureFlags]);
    if ([v34 nameAndPhotoBackwardsCompatibilityEnabled])
    {
      uint64_t v35 = (void *)objc_claimAutoreleasedReturnValue(-[TUConversationMember nickname](v30, "nickname"));

      if (v35)
      {
LABEL_55:
        id v49 = [*(id *)(a1 + 40) mutableCopy];
        uint64_t v75 = a1;
        char v72 = v28;
        uint64_t v73 = v25;
        if (_TUIsInternalInstall())
        {
          uint64_t v50 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults tu_defaults](&OBJC_CLASS___NSUserDefaults, "tu_defaults"));
          id v76 = (void *)objc_claimAutoreleasedReturnValue([v50 stringForKey:@"DefaultsRemovedURI"]);
        }

        else
        {
          id v76 = 0LL;
        }

        id v51 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
        __int128 v77 = 0u;
        __int128 v78 = 0u;
        __int128 v79 = 0u;
        __int128 v80 = 0u;
        id v52 = v49;
        id v53 = [v52 countByEnumeratingWithState:&v77 objects:v81 count:16];
        if (v53)
        {
          id v54 = v53;
          uint64_t v55 = *(void *)v78;
          do
          {
            for (i = 0LL; i != v54; i = (char *)i + 1)
            {
              if (*(void *)v78 != v55) {
                objc_enumerationMutation(v52);
              }
              id v57 = *(void **)(*((void *)&v77 + 1) + 8LL * (void)i);
              id v58 = (void *)objc_claimAutoreleasedReturnValue([v57 handle]);
              id v59 = (void *)objc_claimAutoreleasedReturnValue(-[TUConversationMember handle](v30, "handle"));
              unsigned __int8 v60 = [v58 isEqualToHandle:v59];

              if ((v60 & 1) == 0)
              {
                id v61 = (void *)objc_claimAutoreleasedReturnValue([v57 handle]);
                id v62 = (void *)objc_claimAutoreleasedReturnValue([v61 value]);
                unsigned int v63 = [v76 isEqualToString:v62];

                if (!v63) {
                  continue;
                }
              }

              -[NSMutableSet addObject:](v51, "addObject:", v57);
            }

            id v54 = [v52 countByEnumeratingWithState:&v77 objects:v81 count:16];
          }

          while (v54);
        }

        if (-[NSMutableSet count](v51, "count")) {
          [v52 minusSet:v51];
        }
        a1 = v75;
        id v25 = v73;
        if (*(void *)(v75 + 64))
        {
          id v64 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(v75 + 56) pendingMembershipTracker]);
          id v65 = (void *)objc_claimAutoreleasedReturnValue([v64 retrievePendingMembersFor:*(void *)(v75 + 32)]);
        }

        else
        {
          id v65 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet set](&OBJC_CLASS___NSSet, "set"));
        }

        BOOL v66 = *(void **)(v75 + 56);
        unsigned int v67 = (void *)objc_claimAutoreleasedReturnValue(+[NSUUID UUID](&OBJC_CLASS___NSUUID, "UUID"));
        uint64_t v68 = objc_claimAutoreleasedReturnValue( [v66 createConversationIfNecessaryWithUUID:v67 groupUUID:*(void *)(v75 + 32) messagesGroupUUID:*(void *)(v75 + 80) locallyCreated:1 localMember:v30 remoteMem bers:v52 pendingMembers:v65 otherInvitedHandles:*(void *)(v75 + 88) remotePushTokens:*(void *)(v75 + 96) lightweightMembers:0 link:*(void *)(v75 + 64) activity:*(void *)(v75 + 104) avMode:*(void *)(v75 + 128) prese ntationMode:*(void *)(v75 + 136) provider:*(void *)(v75 + 48) screenSharingRequest:*(void *)(v75 + 112)]);

        int v7 = (void *)v68;
        id v28 = v72;
        goto LABEL_75;
      }

      id v36 = (uint64_t (**)(void))objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) getPersonalNicknameBlock]);
      uint64_t v37 = v36[2]();
      __int128 v33 = (void *)objc_claimAutoreleasedReturnValue(v37);

      id v38 = sub_1001704C4();
      uint64_t v39 = (os_log_s *)objc_claimAutoreleasedReturnValue(v38);
      if (os_log_type_enabled(v39, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412546;
        *(void *)unint64_t v83 = v30;
        *(_WORD *)&v83[8] = 2112;
        id v84 = v33;
        _os_log_impl( (void *)&_mh_execute_header,  v39,  OS_LOG_TYPE_DEFAULT,  "Attempting to update localMember: %@ with nickname: %@",  buf,  0x16u);
      }

      id v40 = (void *)objc_claimAutoreleasedReturnValue([v33 firstName]);
      if ([v40 length])
      {
      }

      else
      {
        id v45 = (void *)objc_claimAutoreleasedReturnValue([v33 lastName]);
        id v46 = [v45 length];

        if (!v46)
        {
LABEL_54:

          goto LABEL_55;
        }
      }

      __int128 v34 = (void *)objc_claimAutoreleasedReturnValue([v33 firstName]);
      id v47 = (void *)objc_claimAutoreleasedReturnValue([v33 lastName]);
      id v48 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%@ %@",  v34,  v47));
      -[TUConversationMember setNickname:](v30, "setNickname:", v48);
    }

    goto LABEL_54;
  }

  if (v15)
  {
    id v16 = (void *)objc_claimAutoreleasedReturnValue([v7 UUID]);
    id v17 = (void *)objc_claimAutoreleasedReturnValue([v7 groupUUID]);
    *(_DWORD *)buf = 138412546;
    *(void *)unint64_t v83 = v16;
    *(_WORD *)&v83[8] = 2112;
    id v84 = v17;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "Found existing conversation with UUID: %@, groupUUID: %@",  buf,  0x16u);
  }

  if ([v7 isFromStorage])
  {
    id v18 = sub_1001704C4();
    id v19 = (os_log_s *)objc_claimAutoreleasedReturnValue(v18);
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([v7 UUID]);
      *(_DWORD *)buf = 138412290;
      *(void *)unint64_t v83 = v20;
      _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEFAULT,  "Activating cached conversation from storage with UUID: %@ as someone seems to be interested in it.",  buf,  0xCu);
    }

    [v7 setFromStorage:0];
  }

  uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) featureFlags]);
  else {
    char v22 = 0;
  }

  if (*(void *)(a1 + 104) && (v22 & 1) == 0) {
    id v41 = objc_msgSend(v7, "createStagedActivitySessionForActivity:");
  }
LABEL_76:
  [v7 setProvider:*(void *)(a1 + 48)];
  uint64_t v69 = objc_claimAutoreleasedReturnValue([v7 tuConversation]);
  uint64_t v70 = *(void *)(*(void *)(a1 + 120) + 8LL);
  id v71 = *(void **)(v70 + 40);
  *(void *)(v70 + 40) = v69;
}

void sub_1000E4260(id *a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    id v4 = a1[4];
    id v5 = a1[5];
    *(_DWORD *)buf = 138412546;
    id v58 = v4;
    __int16 v59 = 2112;
    id v60 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "joinExistingConversationWithUUID: %@ context: %@",  buf,  0x16u);
  }

  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([a1[6] mutableConversationsByUUID]);
  int v7 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:a1[4]]);

  if (!v7)
  {
    id v17 = sub_1001704C4();
    id v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v17);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      id v18 = a1[4];
      *(_DWORD *)buf = 138412290;
      id v58 = v18;
      id v16 = "[WARN] Could not find conversation with UUID: %@";
      goto LABEL_14;
    }

void sub_1000E4874(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if ([v6 state] == (id)2 || objc_msgSend(v6, "state") == (id)3)
  {
    int v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) activitySessions]);
    if ([v7 count])
    {
      BOOL v8 = 1;
    }

    else
    {
      unsigned __int8 v9 = (void *)objc_claimAutoreleasedReturnValue([v6 activitySessions]);
      BOOL v8 = [v9 count] != 0;
    }

    if ([v6 state] == (id)3
      && [v6 isOneToOneModeEnabled]
      && (unsigned int v10 = [*(id *)(a1 + 32) isOneToOneModeEnabled], (v8 | v10 ^ 1) != 1))
    {
      unsigned int v14 = v10;
      id v15 = sub_1001704C4();
      id v16 = (os_log_s *)objc_claimAutoreleasedReturnValue(v15);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
      {
        id v17 = @"YES";
        if (!v14) {
          id v17 = @"NO";
        }
        int v18 = 138412546;
        id v19 = @"NO";
        __int16 v20 = 2112;
        uint64_t v21 = v17;
        _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "Not leaving converastion because hasAnyActivitySessions: %@, isOneToOneEnabled: %@",  (uint8_t *)&v18,  0x16u);
      }
    }

    else
    {
      id v11 = sub_1001704C4();
      id v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        id v13 = *(const __CFString **)(a1 + 40);
        int v18 = 138412546;
        id v19 = v5;
        __int16 v20 = 2112;
        uint64_t v21 = v13;
        _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "[WARN] Leaving existing conversation with UUID: %@ in favor of new conversation with UUID: %@",  (uint8_t *)&v18,  0x16u);
      }

      [v6 leave];
    }
  }
}

void sub_1000E4B88( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
}

void sub_1000E4BA0(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    uint64_t v5 = *(void *)(a1 + 40);
    *(_DWORD *)buf = 138412546;
    uint64_t v45 = v4;
    __int16 v46 = 2112;
    uint64_t v47 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "LMI: Creating pending conversation for link: %@, localMember: %@",  buf,  0x16u);
  }

  id v6 = (TUConversationMember *)*(id *)(a1 + 40);
  int v7 = *(void **)(a1 + 40);
  if (!v7
    || (BOOL v8 = (void *)objc_claimAutoreleasedReturnValue([v7 handle]),
        unsigned __int8 v9 = (void *)objc_claimAutoreleasedReturnValue([v8 value]),
        id v10 = [v9 length],
        v9,
        v8,
        !v10))
  {
    id v11 = objc_alloc(&OBJC_CLASS___TUConversationMember);
    id v12 = (uint64_t (**)(void))objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) localCallerID]);
    uint64_t v13 = v12[2]();
    unsigned int v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
    id v15 = -[TUConversationMember initWithHandle:nickname:](v11, "initWithHandle:nickname:", v14, 0LL);

    id v6 = v15;
  }

  id v16 = (void *)objc_claimAutoreleasedReturnValue(-[TUConversationMember handle](v6, "handle"));

  if (v16)
  {
    id v17 = objc_alloc(&OBJC_CLASS___CSDPendingConversation);
    uint64_t v18 = *(void *)(a1 + 32);
    id v19 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) queue]);
    __int16 v20 = -[CSDPendingConversation initWithConversationLink:localMember:queue:]( v17,  "initWithConversationLink:localMember:queue:",  v18,  v6,  v19);

    -[CSDPendingConversation setVideoEnabled:](v20, "setVideoEnabled:", *(unsigned __int8 *)(a1 + 64));
    -[CSDPendingConversation setLetMeInRequestState:](v20, "setLetMeInRequestState:", 1LL);
    uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) mutablePendingConversationsByPseudonym]);
    id v22 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) pseudonym]);
    [v21 setObject:v20 forKeyedSubscript:v22];

    __int128 v41 = 0u;
    __int128 v42 = 0u;
    __int128 v39 = 0u;
    __int128 v40 = 0u;
    id obj = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) delegateToQueue]);
    id v23 = [obj countByEnumeratingWithState:&v39 objects:v43 count:16];
    if (v23)
    {
      id v24 = v23;
      uint64_t v25 = *(void *)v40;
      do
      {
        for (i = 0LL; i != v24; i = (char *)i + 1)
        {
          if (*(void *)v40 != v25) {
            objc_enumerationMutation(obj);
          }
          uint64_t v27 = *(void *)(*((void *)&v39 + 1) + 8LL * (void)i);
          id v28 = (void *)objc_claimAutoreleasedReturnValue(-[CSDPendingConversation tuConversation](v20, "tuConversation"));
          __int128 v29 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) delegateToQueue]);
          id v30 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v29 objectForKey:v27]);

          block[0] = _NSConcreteStackBlock;
          block[1] = 3221225472LL;
          block[2] = sub_1000E4F08;
          block[3] = &unk_1003D7828;
          void block[4] = v27;
          id v37 = v28;
          uint64_t v38 = *(void *)(a1 + 48);
          id v31 = v28;
          dispatch_async(v30, block);
        }

        id v24 = [obj countByEnumeratingWithState:&v39 objects:v43 count:16];
      }

      while (v24);
    }

    uint64_t v32 = objc_claimAutoreleasedReturnValue(-[CSDPendingConversation tuConversation](v20, "tuConversation"));
    uint64_t v33 = *(void *)(*(void *)(a1 + 56) + 8LL);
    uint64_t v34 = *(void **)(v33 + 40);
    *(void *)(v33 + 40) = v32;
  }
}

void sub_1000E4F08(uint64_t a1)
{
  char v2 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");
  uint64_t v3 = *(void **)(a1 + 32);
  if ((v2 & 1) != 0)
  {
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    if ([v3 shouldHandleUpdateForProvider:v4])
    {
    }

    else
    {
      char v5 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");

      if ((v5 & 1) != 0) {
        return;
      }
    }
  }

  else if ((objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:") & 1) != 0)
  {
    return;
  }

  id v6 = sub_1001704C4();
  int v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    unsigned __int8 v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    int v10 = 138412546;
    uint64_t v11 = v8;
    __int16 v12 = 2112;
    uint64_t v13 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Delegate should handle conversation update: %@ for provider: %@",  (uint8_t *)&v10,  0x16u);
  }

  [*(id *)(a1 + 32) conversationManager:*(void *)(a1 + 48) conversationChanged:*(void *)(a1 + 40)];
}

void sub_1000E50E4(uint64_t a1)
{
  if ([*(id *)(a1 + 32) _linksEnabled])
  {
    __int128 v27 = 0u;
    __int128 v28 = 0u;
    __int128 v25 = 0u;
    __int128 v26 = 0u;
    char v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) mutablePendingConversationsByPseudonym]);
    uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([v2 allValues]);

    id v4 = [v3 countByEnumeratingWithState:&v25 objects:v31 count:16];
    if (v4)
    {
      id v5 = v4;
      uint64_t v6 = *(void *)v26;
LABEL_4:
      uint64_t v7 = 0LL;
      while (1)
      {
        if (*(void *)v26 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = *(void **)(*((void *)&v25 + 1) + 8 * v7);
        unsigned __int8 v9 = (void *)objc_claimAutoreleasedReturnValue([v8 link]);
        int v10 = (void *)objc_claimAutoreleasedReturnValue([v9 pseudonym]);
        unsigned __int8 v11 = [v10 isEqualToString:*(void *)(a1 + 40)];

        if ((v11 & 1) != 0) {
          break;
        }
        if (v5 == (id)++v7)
        {
          id v5 = [v3 countByEnumeratingWithState:&v25 objects:v31 count:16];
          if (v5) {
            goto LABEL_4;
          }
          goto LABEL_10;
        }
      }

      id v12 = v8;

      if (!v12) {
        goto LABEL_15;
      }
      id v13 = sub_1001704C4();
      unsigned int v14 = (os_log_s *)objc_claimAutoreleasedReturnValue(v13);
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        id v15 = (void *)objc_claimAutoreleasedReturnValue([v12 link]);
        *(_DWORD *)buf = 138412290;
        id v30 = v15;
        _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "LMI: Requesting membership in pending conversation for link %@",  buf,  0xCu);
      }

      id v16 = objc_alloc(&OBJC_CLASS___CSDMessagingConversationMessage);
      id v17 = (void *)objc_claimAutoreleasedReturnValue([v12 link]);
      uint64_t v18 = -[CSDMessagingConversationMessage initWithType:groupUUID:link:]( v16,  "initWithType:groupUUID:link:",  10LL,  0LL,  v17);

      id v19 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) linkManager]);
      __int16 v20 = (void *)objc_claimAutoreleasedReturnValue([v12 link]);
      v23[0] = _NSConcreteStackBlock;
      v23[1] = 3221225472LL;
      v23[2] = sub_1000E539C;
      v23[3] = &unk_1003D9D30;
      v23[4] = *(void *)(a1 + 32);
      id v24 = v12;
      uint64_t v21 = (os_log_s *)v12;
      [v19 encryptLetMeInRequest:v18 link:v20 completionHandler:v23];
    }

    else
    {
LABEL_10:

LABEL_15:
      id v22 = sub_1001704C4();
      uint64_t v21 = (os_log_s *)objc_claimAutoreleasedReturnValue(v22);
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
        sub_1002B5C00();
      }
    }
  }

void sub_1000E539C(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  int v10 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) queue]);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1000E5498;
  block[3] = &unk_1003D7B00;
  id v17 = v9;
  id v18 = v7;
  id v19 = v8;
  id v11 = *(id *)(a1 + 40);
  uint64_t v12 = *(void *)(a1 + 32);
  id v20 = v11;
  uint64_t v21 = v12;
  id v13 = v8;
  id v14 = v7;
  id v15 = v9;
  dispatch_async(v10, block);
}

void sub_1000E5498(uint64_t a1)
{
  if (!*(void *)(a1 + 32) && *(void *)(a1 + 40) && *(void *)(a1 + 48))
  {
    objc_msgSend(*(id *)(a1 + 56), "setLetMeInKeyAgreement:");
    id v4 = objc_alloc(&OBJC_CLASS___CSDMessagingConversationMessage);
    uint64_t v5 = *(void *)(a1 + 40);
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) link]);
    char v2 = -[CSDMessagingConversationMessage initWithEncryptedMessage:enclosedType:link:]( v4,  "initWithEncryptedMessage:enclosedType:link:",  v5,  10LL,  v6);

    id v7 = (void *)objc_claimAutoreleasedReturnValue(-[CSDMessagingConversationMessage data](v2, "data"));
    id v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) localMember]);
    id v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 64) service]);
    int v10 = (void *)objc_claimAutoreleasedReturnValue([v8 handle]);
    id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 value]);
    uint64_t v12 = objc_claimAutoreleasedReturnValue([v9 accountWithCallerID:v11]);

    id v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) link]);
    id v14 = (void *)objc_claimAutoreleasedReturnValue([v13 pseudonym]);
    id v15 = v8;
    uint64_t v16 = objc_claimAutoreleasedReturnValue( +[TUHandle normalizedGenericHandleForValue:]( &OBJC_CLASS___TUHandle,  "normalizedGenericHandleForValue:",  v14));

    id v17 = (void *)v12;
    id v18 = objc_alloc(&OBJC_CLASS___NSDictionary);
    id v19 = -[NSDictionary initWithObjectsAndKeys:]( v18,  "initWithObjectsAndKeys:",  &off_1003F1768,  IDSSendMessageOptionForceQuery,  0LL);
    id v20 = (uint64_t (**)(void, void, void, void, void, void, void, void, void))objc_claimAutoreleasedReturnValue([*(id *)(a1 + 64) sendDataBlock]);
    uint64_t v47 = (void *)v16;
    uint64_t v21 = TUCopyIDSCanonicalAddressForHandle(v16);
    id v22 = (void *)objc_claimAutoreleasedReturnValue(v21);
    id v23 = v19;
    id v24 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithObject:](&OBJC_CLASS___NSSet, "setWithObject:", v22));
    id v56 = 0LL;
    LOBYTE(v19) = ((uint64_t (**)(void, void *, void *, void *, void *, NSDictionary *, id *, void, void))v20)[2]( v20,  v7,  v17,  v24,  v15,  v19,  &v56,  0LL,  0LL);
    id v48 = v56;

    id v25 = sub_1001704C4();
    __int128 v26 = (os_log_s *)objc_claimAutoreleasedReturnValue(v25);
    __int128 v27 = v26;
    if ((v19 & 1) != 0)
    {
      if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
      {
        __int128 v28 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) link]);
        *(_DWORD *)buf = 138412290;
        __int16 v59 = v28;
        _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_DEFAULT,  "Sent let me in request for link %@",  buf,  0xCu);
      }

      [*(id *)(a1 + 56) setLetMeInRequestState:2];
      if (v48)
      {
        __int128 v29 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) link]);
        id v30 = (void *)objc_claimAutoreleasedReturnValue([v29 pseudonym]);
        id v31 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 64) mutablePseudonymsByRequestIdentifiers]);
        [v31 setObject:v30 forKeyedSubscript:v48];
      }

      __int128 v54 = 0u;
      __int128 v55 = 0u;
      __int128 v52 = 0u;
      __int128 v53 = 0u;
      __int128 v27 = (os_log_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 64) delegateToQueue]);
      id v32 = -[os_log_s countByEnumeratingWithState:objects:count:]( v27,  "countByEnumeratingWithState:objects:count:",  &v52,  v57,  16LL);
      if (v32)
      {
        id v33 = v32;
        id v43 = v23;
        id v44 = v17;
        uint64_t v45 = v15;
        __int16 v46 = v7;
        uint64_t v34 = *(void *)v53;
        do
        {
          for (i = 0LL; i != v33; i = (char *)i + 1)
          {
            if (*(void *)v53 != v34) {
              objc_enumerationMutation(v27);
            }
            uint64_t v36 = *(void *)(*((void *)&v52 + 1) + 8LL * (void)i);
            id v37 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) tuConversation]);
            uint64_t v38 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 64) delegateToQueue]);
            __int128 v39 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v38 objectForKey:v36]);

            block[0] = _NSConcreteStackBlock;
            block[1] = 3221225472LL;
            block[2] = sub_1000E594C;
            block[3] = &unk_1003D7828;
            void block[4] = v36;
            id v50 = v37;
            uint64_t v51 = *(void *)(a1 + 64);
            id v40 = v37;
            dispatch_async(v39, block);
          }

          id v33 = -[os_log_s countByEnumeratingWithState:objects:count:]( v27,  "countByEnumeratingWithState:objects:count:",  &v52,  v57,  16LL);
        }

        while (v33);
        id v7 = v46;
        id v17 = v44;
        id v15 = v45;
        __int128 v41 = v47;
        __int128 v42 = v48;
        id v23 = v43;
        goto LABEL_23;
      }
    }

    else if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
    {
      sub_1002B5CC4();
    }

    __int128 v41 = v47;
    __int128 v42 = v48;
LABEL_23:

    goto LABEL_4;
  }

  id v1 = sub_1001704C4();
  char v2 = (CSDMessagingConversationMessage *)objc_claimAutoreleasedReturnValue(v1);
  if (os_log_type_enabled((os_log_t)v2, OS_LOG_TYPE_ERROR)) {
    sub_1002B5C64();
  }
LABEL_4:
}

void sub_1000E594C(uint64_t a1)
{
  char v2 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");
  uint64_t v3 = *(void **)(a1 + 32);
  if ((v2 & 1) != 0)
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    if ([v3 shouldHandleUpdateForProvider:v4])
    {
    }

    else
    {
      char v5 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");

      if ((v5 & 1) != 0) {
        return;
      }
    }
  }

  else if ((objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:") & 1) != 0)
  {
    return;
  }

  id v6 = sub_1001704C4();
  id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    id v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    int v10 = 138412546;
    uint64_t v11 = v8;
    __int16 v12 = 2112;
    id v13 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Delegate should handle conversation update: %@ for provider: %@",  (uint8_t *)&v10,  0x16u);
  }

  [*(id *)(a1 + 32) conversationManager:*(void *)(a1 + 48) conversationChanged:*(void *)(a1 + 40)];
}

void sub_1000E6088(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 138412290;
    uint64_t v31 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "UUID: %@", buf, 0xCu);
  }

  char v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) mutableConversationsByUUID]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKeyedSubscript:*(void *)(a1 + 32)]);

  if (v6)
  {
    [v6 setLetMeInRequestState:*(void *)(a1 + 56)];
    [v6 setLink:*(void *)(a1 + 48)];
    __int128 v28 = 0u;
    __int128 v29 = 0u;
    __int128 v26 = 0u;
    __int128 v27 = 0u;
    id v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) delegateToQueue]);
    id v8 = [v7 countByEnumeratingWithState:&v26 objects:v34 count:16];
    if (v8)
    {
      id v9 = v8;
      uint64_t v10 = *(void *)v27;
      do
      {
        for (i = 0LL; i != v9; i = (char *)i + 1)
        {
          if (*(void *)v27 != v10) {
            objc_enumerationMutation(v7);
          }
          uint64_t v12 = *(void *)(*((void *)&v26 + 1) + 8LL * (void)i);
          id v13 = v6;
          id v14 = (void *)objc_claimAutoreleasedReturnValue([v6 tuConversation]);
          id v15 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) delegateToQueue]);
          uint64_t v16 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v15 objectForKey:v12]);

          block[0] = _NSConcreteStackBlock;
          block[1] = 3221225472LL;
          block[2] = sub_1000E633C;
          block[3] = &unk_1003D7828;
          void block[4] = v12;
          id v24 = v14;
          uint64_t v25 = *(void *)(a1 + 40);
          id v17 = v14;
          id v6 = v13;
          id v18 = v17;
          dispatch_async(v16, block);
        }

        id v9 = [v7 countByEnumeratingWithState:&v26 objects:v34 count:16];
      }

      while (v9);
    }
  }

  else
  {
    id v19 = sub_1001704C4();
    id v7 = (void *)objc_claimAutoreleasedReturnValue(v19);
    if (os_log_type_enabled((os_log_t)v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v20 = *(void *)(a1 + 32);
      uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) mutableConversationsByUUID]);
      id v22 = (void *)objc_claimAutoreleasedReturnValue([v21 allKeys]);
      *(_DWORD *)buf = 138412546;
      uint64_t v31 = v20;
      __int16 v32 = 2112;
      id v33 = v22;
      _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v7,  OS_LOG_TYPE_DEFAULT,  "[WARN] Could not find conversation with UUID %@. All conversation UUIDs: %@",  buf,  0x16u);
    }
  }
}

void sub_1000E633C(uint64_t a1)
{
  char v2 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");
  uint64_t v3 = *(void **)(a1 + 32);
  if ((v2 & 1) != 0)
  {
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    if ([v3 shouldHandleUpdateForProvider:v4])
    {
    }

    else
    {
      char v5 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");

      if ((v5 & 1) != 0) {
        return;
      }
    }
  }

  else if ((objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:") & 1) != 0)
  {
    return;
  }

  id v6 = sub_1001704C4();
  id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    id v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    int v10 = 138412546;
    uint64_t v11 = v8;
    __int16 v12 = 2112;
    id v13 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Delegate should handle conversation update: %@ for provider: %@",  (uint8_t *)&v10,  0x16u);
  }

  [*(id *)(a1 + 32) conversationManager:*(void *)(a1 + 48) conversationChanged:*(void *)(a1 + 40)];
}

void sub_1000E6A24(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    int v12 = 138412290;
    uint64_t v13 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "UUID: %@", (uint8_t *)&v12, 0xCu);
  }

  char v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) mutableConversationsByUUID]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKeyedSubscript:*(void *)(a1 + 32)]);

  if (v6)
  {
    [v6 startAudio];
  }

  else
  {
    id v7 = sub_1001704C4();
    uint64_t v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      int v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) mutableConversationsByUUID]);
      uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v10 allKeys]);
      int v12 = 138412546;
      uint64_t v13 = v9;
      __int16 v14 = 2112;
      id v15 = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "[WARN] Could not find conversation with UUID %@. All conversations UUIDs: %@",  (uint8_t *)&v12,  0x16u);
    }
  }
}

void sub_1000E6E04(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) mutableConversationsByUUID]);
  id v5 = (id)objc_claimAutoreleasedReturnValue([v2 objectForKeyedSubscript:*(void *)(a1 + 40)]);

  uint64_t v3 = *(void **)(a1 + 32);
  if (v5) {
    [v3 _leaveConversation:v5 withContext:*(void *)(a1 + 48)];
  }
  else {
    id v4 = [v3 _removePendingConversationsWithTemporaryGroupUUIDIfNecessary:*(void *)(a1 + 40)];
  }
}

void sub_1000E6EE8(uint64_t a1)
{
  __int128 v8 = 0u;
  __int128 v9 = 0u;
  __int128 v10 = 0u;
  __int128 v11 = 0u;
  id v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mutableConversationsByUUID", 0));
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([v2 allValues]);

  id v4 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v9;
    do
    {
      id v7 = 0LL;
      do
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v3);
        }
        [*(id *)(a1 + 32) _leaveConversation:*(void *)(*((void *)&v8 + 1) + 8 * (void)v7)];
        id v7 = (char *)v7 + 1;
      }

      while (v5 != v7);
      id v5 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }

    while (v5);
  }
}

void sub_1000E70AC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  id v3 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) mutablePseudonymsByCallUUID]);
  [v3 setObject:v2 forKeyedSubscript:*(void *)(a1 + 40)];
}

void sub_1000E718C(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) mutablePseudonymsByCallUUID]);
  [v2 removeObjectForKey:*(void *)(a1 + 40)];
}

void sub_1000E726C(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) mutableConversationsByUUID]);
  id v3 = (id)objc_claimAutoreleasedReturnValue([v2 objectForKeyedSubscript:*(void *)(a1 + 40)]);

  [v3 setUplinkMuted:*(unsigned __int8 *)(a1 + 48)];
}

void sub_1000E7364(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) mutableConversationsByUUID]);
  id v3 = (id)objc_claimAutoreleasedReturnValue([v2 objectForKeyedSubscript:*(void *)(a1 + 40)]);

  [v3 setVideo:*(unsigned __int8 *)(a1 + 48)];
}

void sub_1000E7454(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) mutableConversationsByUUID]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 objectForKeyedSubscript:*(void *)(a1 + 40)]);

  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 remoteMembers]);
  id v5 = [v4 count];

  if (v5 == (id)1)
  {
    uint64_t v6 = objc_alloc(&OBJC_CLASS___TUConversationMember);
    id v7 = (void *)objc_claimAutoreleasedReturnValue([v3 activeRemoteParticipants]);
    __int128 v8 = (void *)objc_claimAutoreleasedReturnValue([v7 allObjects]);
    __int128 v9 = (void *)objc_claimAutoreleasedReturnValue([v8 firstObject]);
    __int128 v10 = (void *)objc_claimAutoreleasedReturnValue([v9 tuConversationParticipant]);
    __int128 v11 = (void *)objc_claimAutoreleasedReturnValue([v10 handle]);
    int v12 = -[TUConversationMember initWithHandle:](v6, "initWithHandle:", v11);

    uint64_t v13 = objc_alloc(&OBJC_CLASS___CSDMessagingConversationMessage);
    __int16 v14 = (void *)objc_claimAutoreleasedReturnValue([v3 groupUUID]);
    id v15 = -[CSDMessagingConversationMessage initWithType:groupUUID:link:]( v13,  "initWithType:groupUUID:link:",  22LL,  v14,  0LL);

    uint64_t v16 = *(void **)(a1 + 32);
    id v17 = (void *)objc_claimAutoreleasedReturnValue(-[CSDMessagingConversationMessage data](v15, "data"));
    [v16 sendData:v17 onConversation:v3 toMember:v12];
  }

  else
  {
    id v18 = sub_1001704C4();
    id v19 = (os_log_s *)objc_claimAutoreleasedReturnValue(v18);
    if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
      sub_1002B5D1C();
    }
  }
}

void sub_1000E7684(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) mutableConversationsByUUID]);
  id v3 = (id)objc_claimAutoreleasedReturnValue([v2 objectForKeyedSubscript:*(void *)(a1 + 40)]);

  [v3 setVideoEnabled:*(unsigned __int8 *)(a1 + 48)];
}

void sub_1000E777C(uint64_t a1)
{
  __int128 v23 = 0u;
  __int128 v24 = 0u;
  __int128 v25 = 0u;
  __int128 v26 = 0u;
  id v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mutablePendingConversationsByPseudonym", 0));
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 allValues]);

  id v4 = [v3 countByEnumeratingWithState:&v23 objects:v31 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = 0LL;
    uint64_t v7 = *(void *)v24;
    do
    {
      for (i = 0LL; i != v5; i = (char *)i + 1)
      {
        if (*(void *)v24 != v7) {
          objc_enumerationMutation(v3);
        }
        __int128 v9 = *(void **)(*((void *)&v23 + 1) + 8LL * (void)i);
        __int128 v10 = (void *)objc_claimAutoreleasedReturnValue([v9 temporaryGroupUUID]);
        unsigned int v11 = [v10 isEqual:*(void *)(a1 + 40)];

        if (v11)
        {
          id v12 = v9;

          [v12 setUplinkMuted:*(unsigned __int8 *)(a1 + 48)];
          uint64_t v6 = v12;
        }
      }

      id v5 = [v3 countByEnumeratingWithState:&v23 objects:v31 count:16];
    }

    while (v5);
  }

  else
  {
    uint64_t v6 = 0LL;
  }

  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v6 link]);
  __int16 v14 = (void *)objc_claimAutoreleasedReturnValue([v13 pseudonym]);

  if (v14)
  {
    id v15 = sub_1001704C4();
    uint64_t v16 = (os_log_s *)objc_claimAutoreleasedReturnValue(v15);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      id v17 = (void *)objc_claimAutoreleasedReturnValue([v6 link]);
      id v18 = (void *)objc_claimAutoreleasedReturnValue([v17 pseudonym]);
      id v19 = (void *)objc_claimAutoreleasedReturnValue([v6 conversationGroupUUID]);
      *(_DWORD *)buf = 138412546;
      __int128 v28 = v18;
      __int16 v29 = 2112;
      id v30 = v19;
      _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "Updating pending conversation with pseudonym: %@, conversation group UUID: %@",  buf,  0x16u);
    }

    uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) mutablePendingConversationsByPseudonym]);
    uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue([v6 link]);
    id v22 = (void *)objc_claimAutoreleasedReturnValue([v21 pseudonym]);
    [v20 setObject:v6 forKeyedSubscript:v22];
  }
}

void sub_1000E7A80(uint64_t a1)
{
  __int128 v23 = 0u;
  __int128 v24 = 0u;
  __int128 v25 = 0u;
  __int128 v26 = 0u;
  id v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mutablePendingConversationsByPseudonym", 0));
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 allValues]);

  id v4 = [v3 countByEnumeratingWithState:&v23 objects:v31 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = 0LL;
    uint64_t v7 = *(void *)v24;
    do
    {
      for (i = 0LL; i != v5; i = (char *)i + 1)
      {
        if (*(void *)v24 != v7) {
          objc_enumerationMutation(v3);
        }
        __int128 v9 = *(void **)(*((void *)&v23 + 1) + 8LL * (void)i);
        __int128 v10 = (void *)objc_claimAutoreleasedReturnValue([v9 temporaryGroupUUID]);
        unsigned int v11 = [v10 isEqual:*(void *)(a1 + 40)];

        if (v11)
        {
          id v12 = v9;

          [v12 setVideoEnabled:*(unsigned __int8 *)(a1 + 48)];
          uint64_t v6 = v12;
        }
      }

      id v5 = [v3 countByEnumeratingWithState:&v23 objects:v31 count:16];
    }

    while (v5);
  }

  else
  {
    uint64_t v6 = 0LL;
  }

  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v6 link]);
  __int16 v14 = (void *)objc_claimAutoreleasedReturnValue([v13 pseudonym]);

  if (v14)
  {
    id v15 = sub_1001704C4();
    uint64_t v16 = (os_log_s *)objc_claimAutoreleasedReturnValue(v15);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      id v17 = (void *)objc_claimAutoreleasedReturnValue([v6 link]);
      id v18 = (void *)objc_claimAutoreleasedReturnValue([v17 pseudonym]);
      id v19 = (void *)objc_claimAutoreleasedReturnValue([v6 conversationGroupUUID]);
      *(_DWORD *)buf = 138412546;
      __int128 v28 = v18;
      __int16 v29 = 2112;
      id v30 = v19;
      _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "Updating pending conversation with pseudonym: %@, conversation group UUID: %@",  buf,  0x16u);
    }

    uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) mutablePendingConversationsByPseudonym]);
    uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue([v6 link]);
    id v22 = (void *)objc_claimAutoreleasedReturnValue([v21 pseudonym]);
    [v20 setObject:v6 forKeyedSubscript:v22];
  }
}

void sub_1000E7DE8(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    int v20 = 138412290;
    uint64_t v21 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Asked for participant to share their screen: %@",  (uint8_t *)&v20,  0xCu);
  }

  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) handle]);
  uint64_t v6 = TUNormalizedHandleForTUHandle(v5);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(v6);

  __int128 v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) mutableConversationsByUUID]);
  __int128 v9 = (void *)objc_claimAutoreleasedReturnValue([v8 objectForKeyedSubscript:*(void *)(a1 + 48)]);

  if (v9)
  {
    __int128 v10 = (os_log_s *)objc_claimAutoreleasedReturnValue([v9 remoteParticipantForHandle:v7]);
    if (v10)
    {
      if ([*(id *)(a1 + 40) conversationContainsScreenShareRequest:v9 localRequest:1 requestHandle:v7])
      {
        id v11 = sub_1001704C4();
        id v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
        if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
          sub_1002B5DD4();
        }
      }

      else
      {
        [*(id *)(a1 + 40) cancelPreviouslySentScreenShareRequests:v9];
        id v18 = objc_alloc(&OBJC_CLASS___TUScreenSharingRequest);
        id v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSUUID UUID](&OBJC_CLASS___NSUUID, "UUID"));
        id v12 = -[TUScreenSharingRequest initWithHandle:type:originType:UUID:participantIdentifier:]( v18,  "initWithHandle:type:originType:UUID:participantIdentifier:",  v7,  1,  2,  v19,  [*(id *)(a1 + 32) identifier]);

        [v9 addScreenSharingRequest:v12];
        [*(id *)(a1 + 40) requestParticipant:*(void *)(a1 + 32) toScreenShareWithRequest:v12 conversation:v9];
      }
    }

    else
    {
      id v17 = sub_1001704C4();
      id v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v17);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_1002B5D74();
      }
    }
  }

  else
  {
    id v13 = sub_1001704C4();
    __int128 v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v13);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v14 = *(void *)(a1 + 48);
      id v15 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) mutableConversationsByUUID]);
      uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v15 allKeys]);
      int v20 = 138412546;
      uint64_t v21 = v14;
      __int16 v22 = 2112;
      __int128 v23 = v16;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "[WARN] Could not find conversation with conversationUUID %@. All conversations UUIDs: %@",  (uint8_t *)&v20,  0x16u);
    }
  }
}

void sub_1000E8128(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) mutableConversationsByUUID]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 objectForKeyedSubscript:*(void *)(a1 + 40)]);

  if (!v3)
  {
    id v9 = sub_1001704C4();
    id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
    if (!os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_14;
    }
    uint64_t v10 = *(void *)(a1 + 40);
    id v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) mutableConversationsByUUID]);
    id v12 = (void *)objc_claimAutoreleasedReturnValue([v11 allKeys]);
    int v17 = 138412546;
    uint64_t v18 = v10;
    __int16 v19 = 2112;
    int v20 = v12;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "[WARN] Could not find conversation with conversationUUID %@. All conversations UUIDs: %@",  (uint8_t *)&v17,  0x16u);

LABEL_9:
    goto LABEL_14;
  }

  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) handle]);
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue([v3 remoteParticipantForHandle:v4]);

  if (!v5)
  {
    id v13 = sub_1001704C4();
    id v11 = (void *)objc_claimAutoreleasedReturnValue(v13);
    if (os_log_type_enabled((os_log_t)v11, OS_LOG_TYPE_ERROR)) {
      sub_1002B5E34();
    }
    goto LABEL_9;
  }

  unsigned int v6 = [*(id *)(a1 + 48) isLocallyOriginated];
  uint64_t v7 = *(void **)(a1 + 32);
  uint64_t v8 = *(void *)(a1 + 48);
  if (v6) {
    [v7 requestParticipant:v5 toCancelScreenShareRequest:v8 conversation:v3];
  }
  else {
    [v7 denyScreenShareRequestFrom:v5 screenShareRequest:v8 conversation:v3];
  }
  id v14 = sub_1001704C4();
  id v15 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
  if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v16 = *(void *)(a1 + 48);
    int v17 = 138412546;
    uint64_t v18 = v16;
    __int16 v19 = 2112;
    int v20 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "Cancel screen share request: %@ from conversation: %@",  (uint8_t *)&v17,  0x16u);
  }

  [v3 removeScreenSharingRequest:*(void *)(a1 + 48)];
LABEL_14:
}

void sub_1000E8460(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) mutableConversationsByUUID]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 objectForKeyedSubscript:*(void *)(a1 + 40)]);

  if (!v3)
  {
    id v9 = sub_1001704C4();
    unsigned int v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = *(const __CFString **)(a1 + 40);
      *(_DWORD *)buf = 138412290;
      id v48 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Unable to find conversation with UUID: %@",  buf,  0xCu);
    }

    goto LABEL_8;
  }

  int v4 = *(unsigned __int8 *)(a1 + 56);
  if (v4 == [v3 isScreenEnabled])
  {
    id v5 = sub_1001704C4();
    unsigned int v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      if (*(_BYTE *)(a1 + 56)) {
        uint64_t v7 = @"YES";
      }
      else {
        uint64_t v7 = @"NO";
      }
      uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v3 UUID]);
      *(_DWORD *)buf = 138412546;
      id v48 = v7;
      __int16 v49 = 2112;
      id v50 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Not setting screenEnabled to %@ because conversation %@ is already in that state",  buf,  0x16u);
    }

void sub_1000E894C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
}

void sub_1000E8988(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    [*(id *)(a1 + 32) setScreenEnabled:*(unsigned __int8 *)(a1 + 64) attributes:*(void *)(a1 + 40)];
    id v3 = sub_1001704C4();
    int v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      if (*(_BYTE *)(a1 + 64)) {
        id v5 = @"YES";
      }
      else {
        id v5 = @"NO";
      }
      uint64_t v6 = *(void *)(a1 + 40);
      uint64_t v7 = *(void *)(a1 + 48);
      int v13 = 138412802;
      id v14 = v5;
      __int16 v15 = 2112;
      uint64_t v16 = v6;
      __int16 v17 = 2112;
      uint64_t v18 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Setting screen enabled %@ with attributes %@ for conversation UUID: %@",  (uint8_t *)&v13,  0x20u);
    }

    int v8 = *(unsigned __int8 *)(a1 + 64);
    id v9 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained screenSharingActivityManager]);
    uint64_t v10 = v9;
    if (v8)
    {
      id v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) localMember]);
      id v12 = (void *)objc_claimAutoreleasedReturnValue([v11 handle]);
      [v10 startActivitySessionFor:v12 with:*(void *)(a1 + 40)];
    }

    else
    {
      [v9 stopActivitySession];
    }

    [WeakRetained conversationChanged:*(void *)(a1 + 32)];
  }
}

void sub_1000E8B94(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) mutableConversationsByUUID]);
  id v3 = (id)objc_claimAutoreleasedReturnValue([v2 objectForKeyedSubscript:*(void *)(a1 + 40)]);

  [v3 setVideoPaused:*(unsigned __int8 *)(a1 + 48)];
}

void sub_1000E8C8C(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) mutableConversationsByUUID]);
  id v3 = (id)objc_claimAutoreleasedReturnValue([v2 objectForKeyedSubscript:*(void *)(a1 + 40)]);

  [v3 setAudioPaused:*(unsigned __int8 *)(a1 + 48)];
}

void sub_1000E8D84(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) mutableConversationsByUUID]);
  id v3 = (id)objc_claimAutoreleasedReturnValue([v2 objectForKeyedSubscript:*(void *)(a1 + 40)]);

  [v3 setRelaying:*(unsigned __int8 *)(a1 + 48)];
}

void sub_1000E8E7C(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) featureFlags]);
  int v3 = TUCallScreeningEnabled(v2, 0LL);

  if (v3)
  {
    int v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) mutableConversationsByUUID]);
    id v5 = (id)objc_claimAutoreleasedReturnValue([v4 objectForKeyedSubscript:*(void *)(a1 + 40)]);

    [v5 setScreening:*(unsigned __int8 *)(a1 + 48)];
  }

void sub_1000E8FB4(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) mutableConversationsByUUID]);
  id v3 = (id)objc_claimAutoreleasedReturnValue([v2 objectForKeyedSubscript:*(void *)(a1 + 40)]);

  [v3 setAudioInjectionAllowed:*(unsigned __int8 *)(a1 + 48)];
}

void sub_1000E912C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_1000E9144(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) mutableConversationsByUUID]);
  id v3 = (id)objc_claimAutoreleasedReturnValue([v2 objectForKeyedSubscript:*(void *)(a1 + 40)]);

  *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = [v3 isRelaying];
}

void sub_1000E9270( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_1000E9288(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) mutableConversationsByUUID]);
  id v3 = (id)objc_claimAutoreleasedReturnValue([v2 objectForKeyedSubscript:*(void *)(a1 + 40)]);

  *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = [v3 isScreening];
}

void sub_1000E9388(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) mutableConversationsByUUID]);
  id v3 = (id)objc_claimAutoreleasedReturnValue([v2 objectForKeyedSubscript:*(void *)(a1 + 40)]);

  [v3 setSplitSessionUserProfileState:*(void *)(a1 + 48)];
}

void sub_1000E94B0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_1000E94C8(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) mutableConversationsByUUID]);
  id v3 = (id)objc_claimAutoreleasedReturnValue([v2 objectForKeyedSubscript:*(void *)(a1 + 40)]);

  *(_DWORD *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = [v3 presentationState];
}

void sub_1000E95C8(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) mutableConversationsByUUID]);
  id v3 = (id)objc_claimAutoreleasedReturnValue([v2 objectForKeyedSubscript:*(void *)(a1 + 40)]);

  [v3 setPresentationState:*(unsigned int *)(a1 + 48)];
}

void sub_1000E96E0(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) mutableConversationsByUUID]);
  id v3 = (id)objc_claimAutoreleasedReturnValue([v2 objectForKeyedSubscript:*(void *)(a1 + 40)]);

  objc_msgSend( v3,  "setPresentationRect:",  *(double *)(a1 + 48),  *(double *)(a1 + 56),  *(double *)(a1 + 64),  *(double *)(a1 + 72));
}

void sub_1000E97DC(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) mutableConversationsByUUID]);
  id v3 = (id)objc_claimAutoreleasedReturnValue([v2 objectForKeyedSubscript:*(void *)(a1 + 40)]);

  [v3 setConversationGridDisplayMode:*(void *)(a1 + 48)];
}

void sub_1000E98F0(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) mutableConversationsByUUID]);
  id v4 = (id)objc_claimAutoreleasedReturnValue([v2 objectForKeyedSubscript:*(void *)(a1 + 40)]);

  [v4 setScreenShareAttributes:*(void *)(a1 + 48)];
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) screenSharingActivityManager]);
  [v3 broadcastAttributes:*(void *)(a1 + 48)];
}

void sub_1000E9A20(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    id v5 = *(void **)(a1 + 40);
    int v13 = 138412546;
    uint64_t v14 = v4;
    __int16 v15 = 2112;
    uint64_t v16 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "conversationUUID: %@ remoteMembers: %@",  (uint8_t *)&v13,  0x16u);
  }

  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) mutableConversationsByUUID]);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:*(void *)(a1 + 32)]);

  if (v7)
  {
    [v7 removeRemoteMembers:*(void *)(a1 + 40) triggeredLocally:0];
  }

  else
  {
    id v8 = sub_1001704C4();
    id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = *(void *)(a1 + 32);
      id v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) mutableConversationsByUUID]);
      id v12 = (void *)objc_claimAutoreleasedReturnValue([v11 allKeys]);
      int v13 = 138412546;
      uint64_t v14 = v10;
      __int16 v15 = 2112;
      uint64_t v16 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "[WARN] Could not find conversation with conversationUUID %@. All conversations UUIDs: %@",  (uint8_t *)&v13,  0x16u);
    }
  }
}

void sub_1000E9D00(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    id v5 = *(void **)(a1 + 40);
    *(_DWORD *)buf = 138412546;
    uint64_t v32 = v4;
    __int16 v33 = 2112;
    uint64_t v34 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "conversationUUID: %@ remoteMembers: %@",  buf,  0x16u);
  }

  id v6 = sub_1001704C4();
  uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    id v9 = *(void **)(a1 + 48);
    *(_DWORD *)buf = 138412546;
    uint64_t v32 = v8;
    __int16 v33 = 2112;
    uint64_t v34 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "conversationUUID: %@ otherInvitedHandles: %@",  buf,  0x16u);
  }

  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) mutableConversationsByUUID]);
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 objectForKeyedSubscript:*(void *)(a1 + 32)]);

  if (v11)
  {
    id v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) deviceSupport]);
    if ([v12 isGreenTea])
    {
      int v13 = (void *)objc_claimAutoreleasedReturnValue([v11 remoteMembers]);
      id v14 = [v13 count];

      if (v14 == (id)1)
      {
        id v15 = sub_1001704C4();
        uint64_t v16 = (os_log_s *)objc_claimAutoreleasedReturnValue(v15);
        if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
          sub_1002B5E94(v11, v16);
        }

        __int16 v17 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[CSDConversationLeaveContext greenTeaLeaveContext]( &OBJC_CLASS___CSDConversationLeaveContext,  "greenTeaLeaveContext"));
        [v11 leaveUsingContext:v17];
        goto LABEL_15;
      }
    }

    else
    {
    }

    __int16 v22 = *(void **)(a1 + 56);
    uint64_t v23 = *(void *)(a1 + 40);
    v26[0] = _NSConcreteStackBlock;
    v26[1] = 3221225472LL;
    v26[2] = sub_1000E9FF0;
    v26[3] = &unk_1003D7B28;
    __int128 v27 = v11;
    id v28 = *(id *)(a1 + 40);
    id v24 = *(id *)(a1 + 48);
    uint64_t v25 = *(void *)(a1 + 56);
    id v29 = v24;
    uint64_t v30 = v25;
    [v22 maybeAddComplementaryAssociationVoucherFor:v23 toLocalMemberOf:v27 completion:v26];

    __int16 v17 = v27;
    goto LABEL_15;
  }

  id v18 = sub_1001704C4();
  __int16 v17 = (os_log_s *)objc_claimAutoreleasedReturnValue(v18);
  if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v19 = *(void *)(a1 + 32);
    int v20 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) mutableConversationsByUUID]);
    id v21 = (void *)objc_claimAutoreleasedReturnValue([v20 allKeys]);
    *(_DWORD *)buf = 138412546;
    uint64_t v32 = v19;
    __int16 v33 = 2112;
    uint64_t v34 = v21;
    _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "[WARN] Could not find conversation with conversationUUID %@. All conversations UUIDs: %@",  buf,  0x16u);
  }

void sub_1000E9FF0(uint64_t a1)
{
  id v2 = *(void **)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) link]);
  [v2 addInvitedMemberHandlesFromAddedRemoteMembers:v3 toConversationLink:v4];

  __int128 v21 = 0u;
  __int128 v22 = 0u;
  __int128 v19 = 0u;
  __int128 v20 = 0u;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) delegateToQueue]);
  id v6 = [v5 countByEnumeratingWithState:&v19 objects:v23 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v20;
    do
    {
      for (i = 0LL; i != v7; i = (char *)i + 1)
      {
        if (*(void *)v20 != v8) {
          objc_enumerationMutation(v5);
        }
        uint64_t v10 = *(void *)(*((void *)&v19 + 1) + 8LL * (void)i);
        if ((objc_opt_respondsToSelector(v10, "conversationManager:conversation:addedMembersLocally:") & 1) != 0)
        {
          id v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) tuConversation]);
          id v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) delegateToQueue]);
          int v13 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v12 objectForKey:v10]);

          v15[0] = _NSConcreteStackBlock;
          v15[1] = 3221225472LL;
          v15[2] = sub_1000EA1E8;
          v15[3] = &unk_1003D7B28;
          v15[4] = v10;
          id v16 = v11;
          uint64_t v17 = *(void *)(a1 + 56);
          id v18 = *(id *)(a1 + 40);
          id v14 = v11;
          dispatch_async(v13, v15);
        }
      }

      id v7 = [v5 countByEnumeratingWithState:&v19 objects:v23 count:16];
    }

    while (v7);
  }
}

void sub_1000EA1E8(uint64_t a1)
{
  char v2 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");
  uint64_t v3 = *(void **)(a1 + 32);
  if ((v2 & 1) != 0)
  {
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    if ([v3 shouldHandleUpdateForProvider:v4])
    {
    }

    else
    {
      char v5 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");

      if ((v5 & 1) != 0) {
        return;
      }
    }
  }

  else if ((objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:") & 1) != 0)
  {
    return;
  }

  id v6 = sub_1001704C4();
  id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    id v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    int v10 = 138412546;
    uint64_t v11 = v8;
    __int16 v12 = 2112;
    int v13 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Delegate should handle conversation update: %@ for provider: %@",  (uint8_t *)&v10,  0x16u);
  }

  [*(id *)(a1 + 32) conversationManager:*(void *)(a1 + 48) conversation:*(void *)(a1 + 40) addedMembersLocally:*(void *)(a1 + 56)];
}

void sub_1000EA3E8(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    char v5 = *(void **)(a1 + 40);
    *(_DWORD *)buf = 138412546;
    uint64_t v39 = v4;
    __int16 v40 = 2112;
    id v41 = v5;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "conversationUUID: %@ context: %@", buf, 0x16u);
  }

  id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) mutableConversationsByUUID]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:*(void *)(a1 + 32)]);

  if (v7)
  {
    uint64_t v8 = (os_log_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) presentationContext]);
    id v9 = v8;
    if (v8) {
      objc_msgSend(v7, "setPresentationMode:", -[os_log_s mode](v8, "mode"));
    }
    id v28 = v9;
    [v7 setHandoffContext:*(void *)(a1 + 40)];
    int v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) mutableConversationsRequestingUpgradeWithPreferences]);
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) invitationPreferences]);
    [v10 setObject:v11 forKey:*(void *)(a1 + 32)];

    __int128 v35 = 0u;
    __int128 v36 = 0u;
    __int128 v33 = 0u;
    __int128 v34 = 0u;
    id obj = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) delegateToQueue]);
    id v12 = [obj countByEnumeratingWithState:&v33 objects:v37 count:16];
    if (v12)
    {
      id v13 = v12;
      uint64_t v14 = *(void *)v34;
      do
      {
        id v15 = 0LL;
        do
        {
          if (*(void *)v34 != v14) {
            objc_enumerationMutation(obj);
          }
          uint64_t v16 = *(void *)(*((void *)&v33 + 1) + 8LL * (void)v15);
          uint64_t v17 = v7;
          id v18 = (void *)objc_claimAutoreleasedReturnValue([v7 tuConversation]);
          __int128 v19 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) delegateToQueue]);
          __int128 v20 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v19 objectForKey:v16]);

          block[0] = _NSConcreteStackBlock;
          block[1] = 3221225472LL;
          block[2] = sub_1000EA714;
          block[3] = &unk_1003D7828;
          void block[4] = v16;
          id v31 = v18;
          uint64_t v32 = *(void *)(a1 + 48);
          id v21 = v18;
          id v7 = v17;
          id v22 = v21;
          dispatch_async(v20, block);

          id v15 = (char *)v15 + 1;
        }

        while (v13 != v15);
        id v13 = [obj countByEnumeratingWithState:&v33 objects:v37 count:16];
      }

      while (v13);
    }

    uint64_t v23 = v28;
  }

  else
  {
    id v24 = sub_1001704C4();
    uint64_t v23 = (os_log_s *)objc_claimAutoreleasedReturnValue(v24);
    if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v25 = *(void *)(a1 + 32);
      id v26 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) mutableConversationsByUUID]);
      __int128 v27 = (void *)objc_claimAutoreleasedReturnValue([v26 allKeys]);
      *(_DWORD *)buf = 138412546;
      uint64_t v39 = v25;
      __int16 v40 = 2112;
      id v41 = v27;
      _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEFAULT,  "[WARN] Could not find conversation with conversationUUID %@. All conversations UUIDs: %@",  buf,  0x16u);
    }
  }
}

void sub_1000EA714(uint64_t a1)
{
  char v2 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");
  uint64_t v3 = *(void **)(a1 + 32);
  if ((v2 & 1) != 0)
  {
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    if ([v3 shouldHandleUpdateForProvider:v4])
    {
    }

    else
    {
      char v5 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");

      if ((v5 & 1) != 0) {
        return;
      }
    }
  }

  else if ((objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:") & 1) != 0)
  {
    return;
  }

  id v6 = sub_1001704C4();
  id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    id v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    int v10 = 138412546;
    uint64_t v11 = v8;
    __int16 v12 = 2112;
    id v13 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Delegate should handle conversation update: %@ for provider: %@",  (uint8_t *)&v10,  0x16u);
  }

  [*(id *)(a1 + 32) conversationManager:*(void *)(a1 + 48) conversationChanged:*(void *)(a1 + 40)];
}

void sub_1000EA8F8(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = *(unsigned __int8 *)(a1 + 48);
    uint64_t v5 = *(void *)(a1 + 32);
    int v13 = 67109378;
    *(_DWORD *)uint64_t v14 = v4;
    *(_WORD *)&v14[4] = 2112;
    *(void *)&v14[6] = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "setSharePlayHandedOff: %d onConversationWithUUID: %@",  (uint8_t *)&v13,  0x12u);
  }

  id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) mutableConversationsByUUID]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:*(void *)(a1 + 32)]);

  if (v7)
  {
    [v7 setSharePlayHandedOff:*(unsigned __int8 *)(a1 + 48)];
  }

  else
  {
    id v8 = sub_1001704C4();
    id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = *(void *)(a1 + 32);
      uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) mutableConversationsByUUID]);
      __int16 v12 = (void *)objc_claimAutoreleasedReturnValue([v11 allKeys]);
      int v13 = 138412546;
      *(void *)uint64_t v14 = v10;
      *(_WORD *)&v14[8] = 2112;
      *(void *)&v14[10] = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "[WARN] Could not find conversation with conversationUUID %@. All conversations UUIDs: %@",  (uint8_t *)&v13,  0x16u);
    }
  }
}

void sub_1000EAE90(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = sub_1001704C4();
  id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
  id v9 = v8;
  if (v5)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) handle]);
      uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v10 value]);
      int v18 = 138412546;
      __int128 v19 = v11;
      __int16 v20 = 2112;
      id v21 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "Signed complementary association voucher for member %@: %@",  (uint8_t *)&v18,  0x16u);
    }

    __int16 v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) localMember]);
    [v12 setValidationSource:2];

    int v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) localMember]);
    [v13 setAssociationVoucher:v5];

    uint64_t v14 = *(void **)(a1 + 48);
    id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) localMember]);
    id v15 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s handle](v9, "handle"));
    uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v14 tuAssociationForHandle:v15]);
    uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) localMember]);
    [v17 setAssociation:v16];
  }

  else if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
  {
    sub_1002B5F40();
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 56));
}

void sub_1000EB618( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_1000EB630(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) activeConversation]);
  if (v2)
  {
    id v3 = v2;
    *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [v2 allParticipantsSupportSharePlay];
    id v2 = v3;
  }
}

void sub_1000EB784(uint64_t a1, uint64_t a2)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = TUBundle(a1, a2);
  id v5 = (id)objc_claimAutoreleasedReturnValue(v3);
  int v4 = (void *)objc_claimAutoreleasedReturnValue( [v5 localizedStringForKey:@"SHAREPLAY_INCOMPATIBLE_MESSAGE" value:&stru_1003E7718 table:@"TelephonyUtilities"]);
  [v2 _displaySharePlayUnableToStartWithMessage:v4];
}

void sub_1000EBA20(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue(+[IMUserNotificationCenter sharedInstance](&OBJC_CLASS___IMUserNotificationCenter, "sharedInstance"));
  [v2 addUserNotification:*(void *)(a1 + 32) listener:0 completionHandler:0];
}

void sub_1000EBB48(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    id v5 = *(void **)(a1 + 40);
    *(_DWORD *)buf = 138412546;
    uint64_t v31 = v4;
    __int16 v32 = 2112;
    __int128 v33 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "conversationUUID: %@ update messagesGroupName: %@",  buf,  0x16u);
  }

  id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) mutableConversationsByUUID]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:*(void *)(a1 + 32)]);

  if (v7)
  {
    [v7 updateMessagesGroupName:*(void *)(a1 + 40)];
    __int128 v27 = 0u;
    __int128 v28 = 0u;
    __int128 v25 = 0u;
    __int128 v26 = 0u;
    id v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) delegateToQueue]);
    id v9 = [v8 countByEnumeratingWithState:&v25 objects:v29 count:16];
    if (v9)
    {
      id v10 = v9;
      uint64_t v11 = *(void *)v26;
      do
      {
        for (i = 0LL; i != v10; i = (char *)i + 1)
        {
          if (*(void *)v26 != v11) {
            objc_enumerationMutation(v8);
          }
          uint64_t v13 = *(void *)(*((void *)&v25 + 1) + 8LL * (void)i);
          uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v7 tuConversation]);
          id v15 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) delegateToQueue]);
          uint64_t v16 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v15 objectForKey:v13]);

          block[0] = _NSConcreteStackBlock;
          block[1] = 3221225472LL;
          block[2] = sub_1000EBDFC;
          block[3] = &unk_1003D7828;
          void block[4] = v13;
          id v23 = v14;
          uint64_t v24 = *(void *)(a1 + 48);
          id v17 = v14;
          dispatch_async(v16, block);
        }

        id v10 = [v8 countByEnumeratingWithState:&v25 objects:v29 count:16];
      }

      while (v10);
    }
  }

  else
  {
    id v18 = sub_1001704C4();
    id v8 = (void *)objc_claimAutoreleasedReturnValue(v18);
    if (os_log_type_enabled((os_log_t)v8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v19 = *(void *)(a1 + 32);
      __int16 v20 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) mutableConversationsByUUID]);
      id v21 = (void *)objc_claimAutoreleasedReturnValue([v20 allKeys]);
      *(_DWORD *)buf = 138412546;
      uint64_t v31 = v19;
      __int16 v32 = 2112;
      __int128 v33 = v21;
      _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v8,  OS_LOG_TYPE_DEFAULT,  "[WARN] Could not find conversation with conversationUUID %@. All conversations UUIDs: %@",  buf,  0x16u);
    }
  }
}

void sub_1000EBDFC(uint64_t a1)
{
  char v2 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");
  uint64_t v3 = *(void **)(a1 + 32);
  if ((v2 & 1) != 0)
  {
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    if ([v3 shouldHandleUpdateForProvider:v4])
    {
    }

    else
    {
      char v5 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");

      if ((v5 & 1) != 0) {
        return;
      }
    }
  }

  else if ((objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:") & 1) != 0)
  {
    return;
  }

  id v6 = sub_1001704C4();
  id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    id v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    int v10 = 138412546;
    uint64_t v11 = v8;
    __int16 v12 = 2112;
    uint64_t v13 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Delegate should handle conversation update: %@ for provider: %@",  (uint8_t *)&v10,  0x16u);
  }

  [*(id *)(a1 + 32) conversationManager:*(void *)(a1 + 48) conversationChanged:*(void *)(a1 + 40)];
}

void sub_1000EBFD8(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 138412290;
    uint64_t v30 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "conversationUUID: %@ update group photo",  buf,  0xCu);
  }

  char v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) mutableConversationsByUUID]);
  uint64_t v6 = objc_claimAutoreleasedReturnValue([v5 objectForKeyedSubscript:*(void *)(a1 + 32)]);

  id v21 = (void *)v6;
  if (v6)
  {
    __int128 v27 = 0u;
    __int128 v28 = 0u;
    __int128 v25 = 0u;
    __int128 v26 = 0u;
    id v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) delegateToQueue]);
    id v8 = [v7 countByEnumeratingWithState:&v25 objects:v33 count:16];
    if (v8)
    {
      id v9 = v8;
      uint64_t v10 = *(void *)v26;
      do
      {
        for (i = 0LL; i != v9; i = (char *)i + 1)
        {
          if (*(void *)v26 != v10) {
            objc_enumerationMutation(v7);
          }
          uint64_t v12 = *(void *)(*((void *)&v25 + 1) + 8LL * (void)i);
          if ((objc_opt_respondsToSelector(v12, "conversationManager:conversationUpdateMessagesGroupPhoto:") & 1) != 0)
          {
            uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v21 tuConversation]);
            uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) delegateToQueue]);
            id v15 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v14 objectForKey:v12]);

            block[0] = _NSConcreteStackBlock;
            block[1] = 3221225472LL;
            block[2] = sub_1000EC28C;
            block[3] = &unk_1003D7828;
            void block[4] = v12;
            id v23 = v13;
            uint64_t v24 = *(void *)(a1 + 40);
            id v16 = v13;
            dispatch_async(v15, block);
          }
        }

        id v9 = [v7 countByEnumeratingWithState:&v25 objects:v33 count:16];
      }

      while (v9);
    }
  }

  else
  {
    id v17 = sub_1001704C4();
    id v7 = (void *)objc_claimAutoreleasedReturnValue(v17);
    if (os_log_type_enabled((os_log_t)v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v18 = *(void *)(a1 + 32);
      uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) mutableConversationsByUUID]);
      __int16 v20 = (void *)objc_claimAutoreleasedReturnValue([v19 allKeys]);
      *(_DWORD *)buf = 138412546;
      uint64_t v30 = v18;
      __int16 v31 = 2112;
      __int16 v32 = v20;
      _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v7,  OS_LOG_TYPE_DEFAULT,  "[WARN] Could not find conversation with conversationUUID %@. All conversations UUIDs: %@",  buf,  0x16u);
    }
  }
}

void sub_1000EC28C(uint64_t a1)
{
  char v2 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");
  uint64_t v3 = *(void **)(a1 + 32);
  if ((v2 & 1) != 0)
  {
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    if ([v3 shouldHandleUpdateForProvider:v4])
    {
    }

    else
    {
      char v5 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");

      if ((v5 & 1) != 0) {
        return;
      }
    }
  }

  else if ((objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:") & 1) != 0)
  {
    return;
  }

  id v6 = sub_1001704C4();
  id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    id v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    int v10 = 138412546;
    uint64_t v11 = v8;
    __int16 v12 = 2112;
    uint64_t v13 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Delegate should handle conversation update: %@ for provider: %@",  (uint8_t *)&v10,  0x16u);
  }

  [*(id *)(a1 + 32) conversationManager:*(void *)(a1 + 48) conversationUpdateMessagesGroupPhoto:*(void *)(a1 + 40)];
}

void sub_1000ECA9C(uint64_t a1)
{
  char v2 = (void *)objc_claimAutoreleasedReturnValue(+[IDSCurrentServerTime sharedInstance](&OBJC_CLASS___IDSCurrentServerTime, "sharedInstance"));
  id v14 = (id)objc_claimAutoreleasedReturnValue([v2 currentServerTimeDate]);

  [*(id *)(a1 + 32) setTimestamp:v14];
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSUUID UUID](&OBJC_CLASS___NSUUID, "UUID"));
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) mutableConversationsByUUID]);
  char v5 = (void *)objc_claimAutoreleasedReturnValue([v4 objectForKeyedSubscript:*(void *)(a1 + 48)]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 groupUUID]);

  if ([*(id *)(a1 + 32) isStaticActivity] && v6)
  {
    id v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) staticIdentifier]);
    uint64_t v8 = objc_claimAutoreleasedReturnValue( +[NSUUID tu_UUIDv5ForString:namespaceUUID:]( &OBJC_CLASS___NSUUID,  "tu_UUIDv5ForString:namespaceUUID:",  v7,  v6));

    uint64_t v3 = (void *)v8;
  }

  id v9 = -[TUConversationActivitySession initWithActivity:uuid:locallyInitiated:timestamp:isFirstJoin:]( objc_alloc(&OBJC_CLASS___TUConversationActivitySession),  "initWithActivity:uuid:locallyInitiated:timestamp:isFirstJoin:",  *(void *)(a1 + 32),  v3,  1LL,  v14,  1LL);
  int v10 = (void *)objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 40) createCPActivitySessionForActivitySession:v9 onConversationWithUUID:*(void *)(a1 + 48)]);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(a1 + 56);
  if (v12)
  {
    uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v10 tuConversationActivitySession]);
    (*(void (**)(uint64_t, void *))(v12 + 16))(v12, v13);
  }
}

void sub_1000ECC0C(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  if (v5 || (a2 & 1) == 0)
  {
    id v7 = sub_1001704C4();
    uint64_t v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      int v11 = 138412290;
      uint64_t v12 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "[WARN] User declined authorization to create activity session for activity: %@",  (uint8_t *)&v11,  0xCu);
    }

    uint64_t v10 = *(void *)(a1 + 48);
    if (v10) {
      (*(void (**)(uint64_t, void))(v10 + 16))(v10, 0LL);
    }
  }

  else
  {
    id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) queue]);
    dispatch_async(v6, *(dispatch_block_t *)(a1 + 56));
  }
}

void sub_1000ECD04(uint64_t a1)
{
  char v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) mutableConversationsByUUID]);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([v2 objectForKeyedSubscript:*(void *)(a1 + 40)]);

  if (!v3)
  {
    id v4 = sub_1001704C4();
    id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v6 = *(void *)(a1 + 40);
      id v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) mutableConversationsByUUID]);
      uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v7 allKeys]);
      int v11 = 138412546;
      uint64_t v12 = v6;
      __int16 v13 = 2112;
      id v14 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "[WARN] Could not find conversation with conversationUUID %@. All conversations UUIDs: %@",  (uint8_t *)&v11,  0x16u);
    }

    (*(void (**)(void))(*(void *)(a1 + 56) + 16LL))();
  }

  uint64_t v9 = *(void *)(a1 + 56);
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v3 createStagedActivitySessionForActivity:*(void *)(a1 + 48)]);
  (*(void (**)(uint64_t, void *))(v9 + 16))(v9, v10);
}

void sub_1000ECF04(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    id v5 = *(void **)(a1 + 40);
    int v13 = 138412546;
    uint64_t v14 = v4;
    __int16 v15 = 2112;
    id v16 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "leave conversationUUID: %@ activitySession: %@",  (uint8_t *)&v13,  0x16u);
  }

  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) mutableConversationsByUUID]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:*(void *)(a1 + 32)]);

  if (v7)
  {
    uint64_t v8 = (os_log_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) UUID]);
    [v7 leaveActivitySessionWithUUID:v8];
  }

  else
  {
    id v9 = sub_1001704C4();
    uint64_t v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = *(void *)(a1 + 32);
      int v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) mutableConversationsByUUID]);
      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v11 allKeys]);
      int v13 = 138412546;
      uint64_t v14 = v10;
      __int16 v15 = 2112;
      id v16 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "[WARN] Could not find conversation with conversationUUID %@. All conversations UUIDs: %@",  (uint8_t *)&v13,  0x16u);
    }
  }
}

void sub_1000ED150(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    id v5 = *(void **)(a1 + 40);
    int v13 = 138412546;
    uint64_t v14 = v4;
    __int16 v15 = 2112;
    id v16 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "end conversationUUID: %@ activitySession: %@",  (uint8_t *)&v13,  0x16u);
  }

  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) mutableConversationsByUUID]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:*(void *)(a1 + 32)]);

  if (v7)
  {
    uint64_t v8 = (os_log_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) UUID]);
    [v7 removeActivitySessionWithUUID:v8 usingTerminatingHandle:0];
  }

  else
  {
    id v9 = sub_1001704C4();
    uint64_t v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = *(void *)(a1 + 32);
      int v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) mutableConversationsByUUID]);
      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v11 allKeys]);
      int v13 = 138412546;
      uint64_t v14 = v10;
      __int16 v15 = 2112;
      id v16 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "[WARN] Could not find conversation with conversationUUID %@. All conversations UUIDs: %@",  (uint8_t *)&v13,  0x16u);
    }
  }
}

void sub_1000ED3A0(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    id v5 = *(void **)(a1 + 40);
    int v13 = 138412546;
    uint64_t v14 = v4;
    __int16 v15 = 2112;
    id v16 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Asked to present dismissal alert for activitySessionUUID: %@ conversationUUID: %@",  (uint8_t *)&v13,  0x16u);
  }

  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) mutableConversationsByUUID]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:*(void *)(a1 + 40)]);

  if (v7)
  {
    [v7 presentDismissalAlertForActivitySessionWithUUID:*(void *)(a1 + 32)];
  }

  else
  {
    id v8 = sub_1001704C4();
    id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = *(void *)(a1 + 40);
      int v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) mutableConversationsByUUID]);
      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v11 allKeys]);
      int v13 = 138412546;
      uint64_t v14 = v10;
      __int16 v15 = 2112;
      id v16 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "[WARN] Could not find conversation with conversationUUID %@. All conversations UUIDs: %@",  (uint8_t *)&v13,  0x16u);
    }
  }
}

void sub_1000ED77C(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) featureFlags]);
  unsigned __int8 v3 = [v2 sharePlayWithAirplayEnabled];

  id v4 = sub_1001704C4();
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);
  if ((v3 & 1) != 0)
  {
    if (v6)
    {
      id v7 = *(void **)(a1 + 40);
      if (*(_BYTE *)(a1 + 56)) {
        id v8 = @"YES";
      }
      else {
        id v8 = @"NO";
      }
      int v16 = 138543618;
      id v17 = v8;
      __int16 v18 = 2112;
      uint64_t v19 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "Setting using airplay: %{public}@ on activity session: %@",  (uint8_t *)&v16,  0x16u);
    }

    id v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) mutableConversationsByUUID]);
    id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue([v9 objectForKeyedSubscript:*(void *)(a1 + 48)]);

    if (v5)
    {
      uint64_t v10 = *(unsigned __int8 *)(a1 + 56);
      int v11 = (os_log_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) UUID]);
      -[os_log_s setUsingAirplay:forActivitySessionUUID:](v5, "setUsingAirplay:forActivitySessionUUID:", v10, v11);
    }

    else
    {
      id v12 = sub_1001704C4();
      int v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        int v13 = *(const __CFString **)(a1 + 48);
        uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) mutableConversationsByUUID]);
        __int16 v15 = (void *)objc_claimAutoreleasedReturnValue([v14 allKeys]);
        int v16 = 138412546;
        id v17 = v13;
        __int16 v18 = 2112;
        uint64_t v19 = v15;
        _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "[WARN] Could not find conversation with conversationUUID %@. All conversations UUIDs: %@",  (uint8_t *)&v16,  0x16u);
      }
    }
  }

  else if (v6)
  {
    LOWORD(v16) = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "SharePlayWithAirplay ff is turned off, not changing activity session airplay state",  (uint8_t *)&v16,  2u);
  }
}

void sub_1000EDE4C(uint64_t a1)
{
  __int128 v14 = 0u;
  __int128 v15 = 0u;
  __int128 v16 = 0u;
  __int128 v17 = 0u;
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegateToQueue]);
  id v3 = [v2 countByEnumeratingWithState:&v14 objects:v18 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v15;
    do
    {
      for (i = 0LL; i != v4; i = (char *)i + 1)
      {
        if (*(void *)v15 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v7 = *(void *)(*((void *)&v14 + 1) + 8LL * (void)i);
        if ((objc_opt_respondsToSelector(v7, "conversationManager:joinConversationWithRequest:") & 1) != 0)
        {
          id v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegateToQueue]);
          id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v8 objectForKey:v7]);

          block[0] = _NSConcreteStackBlock;
          block[1] = 3221225472LL;
          block[2] = sub_1000EDFE0;
          block[3] = &unk_1003D7828;
          uint64_t v10 = *(void *)(a1 + 32);
          int v11 = *(void **)(a1 + 40);
          void block[4] = v7;
          void block[5] = v10;
          id v13 = v11;
          dispatch_async(v9, block);
        }
      }

      id v4 = [v2 countByEnumeratingWithState:&v14 objects:v18 count:16];
    }

    while (v4);
  }
}

id sub_1000EDFE0(uint64_t a1)
{
  return _[*(id *)(a1 + 32) conversationManager:*(void *)(a1 + 40) joinConversationWithRequest:*(void *)(a1 + 48)];
}

void sub_1000EE0C4(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    if (*(_BYTE *)(a1 + 56)) {
      uint64_t v5 = @"YES";
    }
    else {
      uint64_t v5 = @"NO";
    }
    *(_DWORD *)buf = 138412546;
    uint64_t v90 = v4;
    __int16 v91 = 2112;
    id v92 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Received launchApplication request for UUID: %@ forceBackground: %@",  buf,  0x16u);
  }

  __int128 v81 = 0u;
  __int128 v82 = 0u;
  __int128 v79 = 0u;
  __int128 v80 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) mutableConversationsByUUID]);
  id v67 = [obj countByEnumeratingWithState:&v79 objects:v88 count:16];
  id v7 = 0LL;
  if (!v67)
  {
LABEL_36:

    id v42 = sub_1001704C4();
    id v43 = (os_log_s *)objc_claimAutoreleasedReturnValue(v42);
    if (os_log_type_enabled(v43, OS_LOG_TYPE_ERROR)) {
      sub_1002B6038();
    }

    uint64_t v44 = *(void *)(a1 + 48);
    if (v44)
    {
      uint64_t v45 = TUErrorDomain;
      NSErrorUserInfoKey v85 = NSLocalizedDescriptionKey;
      uint64_t v86 = @"Failed to find conversation with activitySession";
      __int16 v46 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v86,  &v85,  1LL));
      uint64_t v47 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  v45,  1LL,  v46));
      (*(void (**)(uint64_t, void *))(v44 + 16))(v44, v47);

      id v21 = 0LL;
      id v48 = 0LL;
LABEL_49:
    }

    else
    {
      id v21 = 0LL;
      id v48 = 0LL;
    }

    goto LABEL_50;
  }

  uint64_t v65 = *(void *)v80;
  *(void *)&__int128 v6 = 138412546LL;
  __int128 v63 = v6;
LABEL_8:
  uint64_t v8 = 0LL;
  while (1)
  {
    if (*(void *)v80 != v65) {
      objc_enumerationMutation(obj);
    }
    uint64_t v9 = *(void *)(*((void *)&v79 + 1) + 8 * v8);
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "mutableConversationsByUUID", v63));
    uint64_t v66 = v9;
    int v11 = (void *)objc_claimAutoreleasedReturnValue([v10 objectForKeyedSubscript:v9]);

    __int128 v77 = 0u;
    __int128 v78 = 0u;
    __int128 v75 = 0u;
    __int128 v76 = 0u;
    uint64_t v68 = v11;
    id v12 = (void *)objc_claimAutoreleasedReturnValue([v11 activitySessions]);
    id v13 = [v12 countByEnumeratingWithState:&v75 objects:v87 count:16];
    if (v13)
    {
      id v14 = v13;
      uint64_t v15 = *(void *)v76;
      do
      {
        for (i = 0LL; i != v14; i = (char *)i + 1)
        {
          if (*(void *)v76 != v15) {
            objc_enumerationMutation(v12);
          }
          __int128 v17 = *(void **)(*((void *)&v75 + 1) + 8LL * (void)i);
          __int16 v18 = (void *)objc_claimAutoreleasedReturnValue([v17 identifier]);
          unsigned int v19 = [v18 isEqual:*(void *)(a1 + 32)];

          if (v19)
          {
            id v20 = v17;

            id v7 = v20;
          }
        }

        id v14 = [v12 countByEnumeratingWithState:&v75 objects:v87 count:16];
      }

      while (v14);
    }

    id v21 = v68;
    if (!v7)
    {
      id v22 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) featureFlags]);
      unsigned int v23 = [v22 mochiEnabled];

      if (!v23
        || (uint64_t v24 = *(void **)(a1 + 32),
            __int128 v25 = (void *)objc_claimAutoreleasedReturnValue([v68 stagedActivitySession]),
            __int128 v26 = (void *)objc_claimAutoreleasedReturnValue([v25 UUID]),
            LODWORD(v24) = [v24 isEqual:v26],
            v26,
            v25,
            !(_DWORD)v24))
      {
        id v7 = 0LL;
        goto LABEL_31;
      }

      id v27 = sub_1001704C4();
      __int128 v28 = (os_log_s *)objc_claimAutoreleasedReturnValue(v27);
      if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v29 = *(void *)(a1 + 32);
        uint64_t v30 = (__CFString *)objc_claimAutoreleasedReturnValue([v68 stagedActivitySession]);
        *(_DWORD *)buf = v63;
        uint64_t v90 = v29;
        __int16 v91 = 2112;
        id v92 = v30;
        _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_DEFAULT,  "Launch request for UUID: %@ is trying to activate a staged activitySession. %@",  buf,  0x16u);
      }

      __int16 v31 = (void *)objc_claimAutoreleasedReturnValue([v68 stagedActivitySession]);
      __int16 v32 = (void *)objc_claimAutoreleasedReturnValue([v31 activity]);
      unsigned int v33 = [v32 isPlaceholderActivity];

      if (!v33)
      {
        id v37 = (void *)objc_claimAutoreleasedReturnValue([v68 stagedActivitySession]);
        id v38 = [v37 mutableCopy];

        [v38 setIsLocallyInitiated:1];
        uint64_t v39 = *(void **)(a1 + 40);
        id v40 = [v38 copy];
        id v7 = (id)objc_claimAutoreleasedReturnValue([v39 createCPActivitySessionForActivitySession:v40 onConversationWithUUID:v66]);

        goto LABEL_31;
      }

      id v34 = sub_1001704C4();
      __int128 v35 = (os_log_s *)objc_claimAutoreleasedReturnValue(v34);
      if (os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v35,  OS_LOG_TYPE_DEFAULT,  "Tried to launch placeholder activity.",  buf,  2u);
      }

      uint64_t v36 = objc_claimAutoreleasedReturnValue([v68 stagedActivitySession]);
      id v7 = 0LL;
      if (v36) {
        break;
      }
    }

void sub_1000EE7E0(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = *(void *)(a1 + 64);
  if (v6) {
    (*(void (**)(uint64_t, id))(v6 + 16))(v6, v5);
  }
  if ((a2 & 1) == 0)
  {
    uint64_t v15 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) queue]);
    v30[0] = _NSConcreteStackBlock;
    v30[1] = 3221225472LL;
    v30[2] = sub_1000EEAC0;
    v30[3] = &unk_1003D7730;
    id v31 = *(id *)(a1 + 40);
    dispatch_sync(v15, v30);

    id v14 = v31;
LABEL_10:

    goto LABEL_11;
  }

  if (*(void *)(a1 + 40))
  {
    if (*(_BYTE *)(a1 + 72))
    {
      id v7 = sub_1001704C4();
      uint64_t v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v9 = *(void *)(a1 + 56);
        *(_DWORD *)buf = 138412290;
        uint64_t v33 = v9;
        _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "Authorizing session UUID due to external authorization: %@",  buf,  0xCu);
      }

      uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue( +[CPApplicationPolicyManager sharedInstance]( &OBJC_CLASS___CPApplicationPolicyManager,  "sharedInstance"));
      int v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) activity]);
      id v12 = (void *)objc_claimAutoreleasedReturnValue([v11 bundleIdentifier]);
      [v10 setAuthorization:1 forBundleID:v12];

      id v13 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) queue]);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_1000EEACC;
      block[3] = &unk_1003D7730;
      id v29 = *(id *)(a1 + 40);
      dispatch_sync(v13, block);

      id v14 = v29;
    }

    else
    {
      unsigned int v19 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) activityAuthorizationManager]);
      id v20 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) activity]);
      v24[0] = _NSConcreteStackBlock;
      v24[1] = 3221225472LL;
      v24[2] = sub_1000EEAD4;
      v24[3] = &unk_1003D9C40;
      id v21 = *(id *)(a1 + 56);
      uint64_t v22 = *(void *)(a1 + 32);
      unsigned int v23 = *(void **)(a1 + 40);
      id v25 = v21;
      uint64_t v26 = v22;
      id v27 = v23;
      [v19 requestAuthorizationForApplicationLaunchWithActivity:v20 completionHandler:v24];

      id v14 = v25;
    }

    goto LABEL_10;
  }

  id v16 = sub_1001704C4();
  __int128 v17 = (os_log_s *)objc_claimAutoreleasedReturnValue(v16);
  if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v18 = *(void *)(a1 + 48);
    *(_DWORD *)buf = 138412290;
    uint64_t v33 = v18;
    _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "Not requesting authorization since we don't have a CPActivitySession for: %@",  buf,  0xCu);
  }

LABEL_11:
}

id sub_1000EEAC0(uint64_t a1)
{
  return [*(id *)(a1 + 32) updateApplicationState:1];
}

id sub_1000EEACC(uint64_t a1)
{
  return [*(id *)(a1 + 32) permitJoin];
}

void sub_1000EEAD4(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  if (v5)
  {
    id v6 = sub_1001704C4();
    id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_1002B609C();
    }
LABEL_8:

    goto LABEL_9;
  }

  if (a2)
  {
    id v8 = sub_1001704C4();
    uint64_t v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138412290;
      uint64_t v15 = v10;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Authorizing session UUID: %@", buf, 0xCu);
    }

    int v11 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) queue]);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1000EEC20;
    block[3] = &unk_1003D7730;
    id v13 = (os_log_s *)*(id *)(a1 + 48);
    dispatch_sync(v11, block);

    id v7 = v13;
    goto LABEL_8;
  }

id sub_1000EEC20(uint64_t a1)
{
  return [*(id *)(a1 + 32) permitJoin];
}

void sub_1000EEDF0(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 138412290;
    uint64_t v19 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Revoking background authorization for bundle ID for %@",  buf,  0xCu);
  }

  __int128 v15 = 0u;
  __int128 v16 = 0u;
  __int128 v13 = 0u;
  __int128 v14 = 0u;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "mutableConversationsByUUID", 0));
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 allValues]);

  id v7 = [v6 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v14;
    do
    {
      uint64_t v10 = 0LL;
      do
      {
        if (*(void *)v14 != v9) {
          objc_enumerationMutation(v6);
        }
        int v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v13 + 1) + 8 * (void)v10) activitySessionManager]);
        id v12 = (void *)objc_claimAutoreleasedReturnValue([v11 applicationLauncher]);
        [v12 revokeBackgroundAuthorizationForBundleID:*(void *)(a1 + 32)];

        uint64_t v10 = (char *)v10 + 1;
      }

      while (v8 != v10);
      id v8 = [v6 countByEnumeratingWithState:&v13 objects:v17 count:16];
    }

    while (v8);
  }
}

void sub_1000EF00C(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    int v7 = 138412290;
    uint64_t v8 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Resetting activity session scene associations for bundle ID for %@",  (uint8_t *)&v7,  0xCu);
  }

  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) activeConversation]);
  id v6 = v5;
  if (v5) {
    [v5 resetActivitySessionSceneAssociationsForBundleID:*(void *)(a1 + 32)];
  }
}

LABEL_103:
}

void sub_1000EFEAC(uint64_t a1)
{
  char v2 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");
  id v3 = *(void **)(a1 + 32);
  if ((v2 & 1) != 0)
  {
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    if ([v3 shouldHandleUpdateForProvider:v4])
    {
    }

    else
    {
      char v5 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");

      if ((v5 & 1) != 0) {
        return;
      }
    }
  }

  else if ((objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:") & 1) != 0)
  {
    return;
  }

  id v6 = sub_1001704C4();
  int v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    int v10 = 138412546;
    uint64_t v11 = v8;
    __int16 v12 = 2112;
    __int128 v13 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Delegate should handle conversation update: %@ for provider: %@",  (uint8_t *)&v10,  0x16u);
  }

  [*(id *)(a1 + 32) conversationManager:*(void *)(a1 + 48) avModeChanged:*(void *)(a1 + 64) toAVMode:*(void *)(a1 + 72) forParticipantWithHandle:*(void *)(a1 + 56) forConversation:*(void *)(a1 + 40)];
}

void sub_1000EFFF4(uint64_t a1)
{
  char v2 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");
  id v3 = *(void **)(a1 + 32);
  if ((v2 & 1) != 0)
  {
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    if ([v3 shouldHandleUpdateForProvider:v4])
    {
    }

    else
    {
      char v5 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");

      if ((v5 & 1) != 0) {
        return;
      }
    }
  }

  else if ((objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:") & 1) != 0)
  {
    return;
  }

  id v6 = sub_1001704C4();
  int v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    int v10 = 138412546;
    uint64_t v11 = v8;
    __int16 v12 = 2112;
    __int128 v13 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Delegate should handle conversation update: %@ for provider: %@",  (uint8_t *)&v10,  0x16u);
  }

  [*(id *)(a1 + 32) conversationManager:*(void *)(a1 + 48) conversationChanged:*(void *)(a1 + 40)];
}

void sub_1000F1678(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5)
  {
    int v7 = *(void **)(a1 + 32);
    if (!v7)
    {
LABEL_7:
      if (*(void *)(a1 + 64))
      {
        id v16 = sub_1001704C4();
        __int128 v17 = (os_log_s *)objc_claimAutoreleasedReturnValue(v16);
        if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v18 = *(void *)(a1 + 64);
          int v28 = 138412290;
          uint64_t v29 = v18;
          _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "Updating activity image for staged activity session: %@",  (uint8_t *)&v28,  0xCu);
        }

        uint64_t v19 = *(void *)(a1 + 56);
        id v20 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 64) activity]);
        id v21 = (void *)objc_claimAutoreleasedReturnValue([v20 metadata]);
        [v21 setImageData:v19];

        uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 64) activity]);
        unsigned int v23 = (void *)objc_claimAutoreleasedReturnValue([v22 metadata]);
        [v23 saveImageToDisk];

        [*(id *)(a1 + 72) conversationChanged:*(void *)(a1 + 80)];
      }

      goto LABEL_17;
    }

    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v7 activity]);
    uint64_t v9 = *(void **)(a1 + 40);
    int v10 = (void *)objc_claimAutoreleasedReturnValue([v8 UUID]);
    unsigned __int8 v11 = [v9 isEqual:v10];

    id v12 = sub_1001704C4();
    __int128 v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
    BOOL v14 = os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT);
    if ((v11 & 1) != 0)
    {
      if (v14)
      {
        uint64_t v15 = *(void *)(a1 + 48);
        int v28 = 138412290;
        uint64_t v29 = v15;
        _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "Updating activity image for activity session with UUID: %@",  (uint8_t *)&v28,  0xCu);
      }

      [*(id *)(a1 + 32) updateActivityImage:*(void *)(a1 + 56)];
      goto LABEL_7;
    }

    if (v14)
    {
      uint64_t v26 = *(void *)(a1 + 40);
      id v27 = (void *)objc_claimAutoreleasedReturnValue([v8 UUID]);
      int v28 = 138412546;
      uint64_t v29 = v26;
      __int16 v30 = 2112;
      id v31 = v27;
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "[WARN] Not updating image for activity UUID: %@ activity session currently has different activity UUID: %@",  (uint8_t *)&v28,  0x16u);
    }
  }

  else
  {
    id v24 = sub_1001704C4();
    id v25 = (os_log_s *)objc_claimAutoreleasedReturnValue(v24);
    if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
      sub_1002B620C();
    }
  }

void sub_1000F18F0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  int v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) queue]);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1000F19BC;
  block[3] = &unk_1003D9EE8;
  id v8 = *(id *)(a1 + 40);
  id v13 = v6;
  id v14 = v8;
  id v12 = v5;
  id v9 = v6;
  id v10 = v5;
  dispatch_async(v7, block);
}

uint64_t sub_1000F19BC(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(a1[6] + 16LL))(a1[6], a1[4], a1[5]);
}

void sub_1000F231C(uint64_t a1)
{
  char v2 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");
  id v3 = *(void **)(a1 + 32);
  if ((v2 & 1) != 0)
  {
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    if ([v3 shouldHandleUpdateForProvider:v4])
    {
    }

    else
    {
      char v5 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");

      if ((v5 & 1) != 0) {
        return;
      }
    }
  }

  else if ((objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:") & 1) != 0)
  {
    return;
  }

  id v6 = sub_1001704C4();
  int v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    id v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    int v10 = 138412546;
    uint64_t v11 = v8;
    __int16 v12 = 2112;
    id v13 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Delegate should handle conversation update: %@ for provider: %@",  (uint8_t *)&v10,  0x16u);
  }

  [*(id *)(a1 + 32) conversationManager:*(void *)(a1 + 48) conversationChanged:*(void *)(a1 + 40)];
}

void sub_1000F251C(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    char v5 = *(void **)(a1 + 40);
    int v13 = 138412546;
    uint64_t v14 = v4;
    __int16 v15 = 2112;
    id v16 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "conversationUUID: %@ presentationContexts: %@",  (uint8_t *)&v13,  0x16u);
  }

  id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) mutableConversationsByUUID]);
  int v7 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:*(void *)(a1 + 32)]);

  if (v7)
  {
    [v7 updateParticipantPresentationContexts:*(void *)(a1 + 40)];
  }

  else
  {
    id v8 = sub_1001704C4();
    id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = *(void *)(a1 + 32);
      uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) mutableConversationsByUUID]);
      __int16 v12 = (void *)objc_claimAutoreleasedReturnValue([v11 allKeys]);
      int v13 = 138412546;
      uint64_t v14 = v10;
      __int16 v15 = 2112;
      id v16 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "[WARN] Could not find conversation with conversationUUID %@. All conversations UUIDs: %@",  (uint8_t *)&v13,  0x16u);
    }
  }
}

void sub_1000F2758(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    char v5 = *(void **)(a1 + 40);
    *(_DWORD *)buf = 138412546;
    uint64_t v35 = v4;
    __int16 v36 = 2112;
    id v37 = v5;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "conversationUUID: %@ member: %@", buf, 0x16u);
  }

  id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) mutableConversationsByUUID]);
  int v7 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:*(void *)(a1 + 32)]);

  if (v7)
  {
    uint64_t v9 = *(void *)(a1 + 40);
    id v8 = *(void **)(a1 + 48);
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue( +[TUConversationInvitationPreference incomingCallInvitationPreferences]( &OBJC_CLASS___TUConversationInvitationPreference,  "incomingCallInvitationPreferences"));
    [v8 sendInvitationMessageToMember:v9 forConversation:v7 includeAllAttributes:0 invitationPreferences:v10 additionalOptions:0];

    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v7 tuConversation]);
    __int128 v29 = 0u;
    __int128 v30 = 0u;
    __int128 v31 = 0u;
    __int128 v32 = 0u;
    __int16 v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) delegateToQueue]);
    id v13 = [v12 countByEnumeratingWithState:&v29 objects:v33 count:16];
    if (v13)
    {
      id v14 = v13;
      uint64_t v15 = *(void *)v30;
      do
      {
        for (i = 0LL; i != v14; i = (char *)i + 1)
        {
          if (*(void *)v30 != v15) {
            objc_enumerationMutation(v12);
          }
          uint64_t v17 = *(void *)(*((void *)&v29 + 1) + 8LL * (void)i);
          if ((objc_opt_respondsToSelector(v17, "conversationManager:conversation:buzzedMember:") & 1) != 0)
          {
            uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) delegateToQueue]);
            uint64_t v19 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v18 objectForKey:v17]);

            block[0] = _NSConcreteStackBlock;
            block[1] = 3221225472LL;
            block[2] = sub_1000F2A74;
            block[3] = &unk_1003D7B28;
            void block[4] = v17;
            id v27 = v11;
            int8x16_t v25 = *(int8x16_t *)(a1 + 40);
            id v20 = (id)v25.i64[0];
            int8x16_t v28 = vextq_s8(v25, v25, 8uLL);
            dispatch_async(v19, block);
          }
        }

        id v14 = [v12 countByEnumeratingWithState:&v29 objects:v33 count:16];
      }

      while (v14);
    }
  }

  else
  {
    id v21 = sub_1001704C4();
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(v21);
    if (os_log_type_enabled((os_log_t)v11, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v22 = *(void *)(a1 + 32);
      unsigned int v23 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) mutableConversationsByUUID]);
      id v24 = (void *)objc_claimAutoreleasedReturnValue([v23 allKeys]);
      *(_DWORD *)buf = 138412546;
      uint64_t v35 = v22;
      __int16 v36 = 2112;
      id v37 = v24;
      _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v11,  OS_LOG_TYPE_DEFAULT,  "[WARN] Could not find conversation with conversationUUID %@. All conversations UUIDs: %@",  buf,  0x16u);
    }
  }
}

void sub_1000F2A74(uint64_t a1)
{
  char v2 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");
  id v3 = *(void **)(a1 + 32);
  if ((v2 & 1) != 0)
  {
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    if ([v3 shouldHandleUpdateForProvider:v4])
    {
    }

    else
    {
      char v5 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");

      if ((v5 & 1) != 0) {
        return;
      }
    }
  }

  else if ((objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:") & 1) != 0)
  {
    return;
  }

  id v6 = sub_1001704C4();
  int v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    int v10 = 138412546;
    uint64_t v11 = v8;
    __int16 v12 = 2112;
    id v13 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Delegate should handle conversation update: %@ for provider: %@",  (uint8_t *)&v10,  0x16u);
  }

  [*(id *)(a1 + 32) conversationManager:*(void *)(a1 + 48) conversation:*(void *)(a1 + 40) buzzedMember:*(void *)(a1 + 56)];
}

void sub_1000F2C74(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    char v5 = *(void **)(a1 + 40);
    int v16 = 138412546;
    uint64_t v17 = v4;
    __int16 v18 = 2112;
    uint64_t v19 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "conversationUUID: %@ member: %@",  (uint8_t *)&v16,  0x16u);
  }

  id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) mutableConversationsByUUID]);
  int v7 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:*(void *)(a1 + 32)]);

  id v8 = sub_1001704C4();
  uint64_t v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
  BOOL v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);
  if (v7)
  {
    if (v10)
    {
      __int16 v12 = *(void **)(a1 + 32);
      uint64_t v11 = *(void *)(a1 + 40);
      int v16 = 138412546;
      uint64_t v17 = v11;
      __int16 v18 = 2112;
      uint64_t v19 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "Kicking member %@ from conversation %@",  (uint8_t *)&v16,  0x16u);
    }

    [v7 kickMember:*(void *)(a1 + 40)];
  }

  else
  {
    if (v10)
    {
      uint64_t v13 = *(void *)(a1 + 32);
      id v14 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) mutableConversationsByUUID]);
      uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v14 allKeys]);
      int v16 = 138412546;
      uint64_t v17 = v13;
      __int16 v18 = 2112;
      uint64_t v19 = v15;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "[WARN] Could not find conversation with conversationUUID %@. All conversations UUIDs: %@",  (uint8_t *)&v16,  0x16u);
    }
  }
}

void sub_1000F3078(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) mutableConversationsByUUID]);
  __int128 v32 = (void *)objc_claimAutoreleasedReturnValue([v2 objectForKeyedSubscript:*(void *)(a1 + 40)]);

  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) value]);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue( +[TUHandle normalizedHandleWithDestinationID:]( &OBJC_CLASS___TUHandle,  "normalizedHandleWithDestinationID:",  v3));

  id v5 = sub_1001704C4();
  id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
  BOOL v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);
  if (v4)
  {
    if (v7)
    {
      id v8 = *(void **)(a1 + 56);
      uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v32 UUID]);
      *(_DWORD *)buf = 138412802;
      uint64_t v47 = v8;
      __int16 v48 = 2112;
      __int16 v49 = v4;
      __int16 v50 = 2112;
      id v51 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Received nickname update message, set nickname to %@ from handle %@ for conversation UUID %@",  buf,  0x20u);
    }

    __int128 v42 = 0u;
    __int128 v43 = 0u;
    __int128 v41 = 0u;
    __int128 v40 = 0u;
    BOOL v10 = (void *)objc_claimAutoreleasedReturnValue([v32 remoteMembers]);
    id v11 = [v10 countByEnumeratingWithState:&v40 objects:v45 count:16];
    if (v11)
    {
      id v12 = v11;
      uint64_t v13 = *(void *)v41;
      while (2)
      {
        for (i = 0LL; i != v12; i = (char *)i + 1)
        {
          if (*(void *)v41 != v13) {
            objc_enumerationMutation(v10);
          }
          uint64_t v15 = *(void **)(*((void *)&v40 + 1) + 8LL * (void)i);
          int v16 = (void *)objc_claimAutoreleasedReturnValue([v15 handle]);
          unsigned int v17 = [v16 isEquivalentToHandle:v4];

          if (v17)
          {
            id v20 = [*(id *)(a1 + 56) copy];
            [v15 setNickname:v20];

            __int128 v38 = 0u;
            __int128 v39 = 0u;
            __int128 v36 = 0u;
            __int128 v37 = 0u;
            id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegateToQueue]);
            id v21 = -[os_log_s countByEnumeratingWithState:objects:count:]( v6,  "countByEnumeratingWithState:objects:count:",  &v36,  v44,  16LL);
            if (v21)
            {
              id v22 = v21;
              __int128 v31 = v4;
              uint64_t v23 = *(void *)v37;
              do
              {
                for (j = 0LL; j != v22; j = (char *)j + 1)
                {
                  if (*(void *)v37 != v23) {
                    objc_enumerationMutation(v6);
                  }
                  uint64_t v25 = *(void *)(*((void *)&v36 + 1) + 8LL * (void)j);
                  uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue([v32 tuConversation]);
                  id v27 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegateToQueue]);
                  int8x16_t v28 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v27 objectForKey:v25]);

                  block[0] = _NSConcreteStackBlock;
                  block[1] = 3221225472LL;
                  block[2] = sub_1000F3480;
                  block[3] = &unk_1003D7828;
                  void block[4] = v25;
                  id v34 = v26;
                  uint64_t v35 = *(void *)(a1 + 32);
                  id v29 = v26;
                  dispatch_async(v28, block);
                }

                id v22 = -[os_log_s countByEnumeratingWithState:objects:count:]( v6,  "countByEnumeratingWithState:objects:count:",  &v36,  v44,  16LL);
              }

              while (v22);
              uint64_t v4 = v31;
            }

            goto LABEL_24;
          }
        }

        id v12 = [v10 countByEnumeratingWithState:&v40 objects:v45 count:16];
        if (v12) {
          continue;
        }
        break;
      }
    }

    id v18 = sub_1001704C4();
    id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v18);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([v32 remoteMembers]);
      *(_DWORD *)buf = 138412546;
      uint64_t v47 = v4;
      __int16 v48 = 2112;
      __int16 v49 = v19;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Ignoring nickname update message because the from-handle %@ did not match any remote members %@",  buf,  0x16u);
    }
  }

  else if (v7)
  {
    __int128 v30 = *(void **)(a1 + 48);
    *(_DWORD *)buf = 138412290;
    uint64_t v47 = v30;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "[WARN] Ignoring nickname update message because the from-handle %@ could not be normalized.",  buf,  0xCu);
  }

void sub_1000F3480(uint64_t a1)
{
  char v2 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");
  id v3 = *(void **)(a1 + 32);
  if ((v2 & 1) != 0)
  {
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    if ([v3 shouldHandleUpdateForProvider:v4])
    {
    }

    else
    {
      char v5 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");

      if ((v5 & 1) != 0) {
        return;
      }
    }
  }

  else if ((objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:") & 1) != 0)
  {
    return;
  }

  id v6 = sub_1001704C4();
  BOOL v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    int v10 = 138412546;
    uint64_t v11 = v8;
    __int16 v12 = 2112;
    uint64_t v13 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Delegate should handle conversation update: %@ for provider: %@",  (uint8_t *)&v10,  0x16u);
  }

  [*(id *)(a1 + 32) conversationManager:*(void *)(a1 + 48) conversationChanged:*(void *)(a1 + 40)];
}

void sub_1000F36A8(id *a1)
{
  __int128 v17 = 0u;
  __int128 v18 = 0u;
  __int128 v19 = 0u;
  __int128 v20 = 0u;
  char v2 = (void *)objc_claimAutoreleasedReturnValue([a1[4] delegateToQueue]);
  id v3 = [v2 countByEnumeratingWithState:&v17 objects:v21 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v18;
    do
    {
      for (i = 0LL; i != v4; i = (char *)i + 1)
      {
        if (*(void *)v18 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v7 = *(void *)(*((void *)&v17 + 1) + 8LL * (void)i);
        if ((objc_opt_respondsToSelector(v7, "conversationManager:conversation:participant:addedNotice:") & 1) != 0)
        {
          uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([a1[5] tuConversation]);
          uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([a1[4] delegateToQueue]);
          int v10 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v9 objectForKey:v7]);

          block[0] = _NSConcreteStackBlock;
          block[1] = 3221225472LL;
          block[2] = sub_1000F387C;
          block[3] = &unk_1003D7B00;
          void block[4] = v7;
          id v13 = v8;
          id v14 = a1[4];
          id v15 = a1[6];
          id v16 = a1[7];
          id v11 = v8;
          dispatch_async(v10, block);
        }
      }

      id v4 = [v2 countByEnumeratingWithState:&v17 objects:v21 count:16];
    }

    while (v4);
  }
}

void sub_1000F387C(uint64_t a1)
{
  char v2 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");
  id v3 = *(void **)(a1 + 32);
  if ((v2 & 1) != 0)
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    if ([v3 shouldHandleUpdateForProvider:v4])
    {
    }

    else
    {
      char v5 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");

      if ((v5 & 1) != 0) {
        return;
      }
    }
  }

  else if ((objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:") & 1) != 0)
  {
    return;
  }

  id v6 = sub_1001704C4();
  uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    int v10 = 138412546;
    uint64_t v11 = v8;
    __int16 v12 = 2112;
    id v13 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Delegate should handle conversation update: %@ for provider: %@",  (uint8_t *)&v10,  0x16u);
  }

  [*(id *)(a1 + 32) conversationManager:*(void *)(a1 + 48) conversation:*(void *)(a1 + 40) participant:*(void *)(a1 + 56) addedNotice:*(void *)(a1 + 64)];
}

void sub_1000F3A64(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    int v5 = *(unsigned __int8 *)(a1 + 48);
    int v13 = 138412546;
    uint64_t v14 = v4;
    __int16 v15 = 1024;
    LODWORD(v16) = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "conversationUUID: %@ downlinkMuted: %d",  (uint8_t *)&v13,  0x12u);
  }

  id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) mutableConversationsByUUID]);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:*(void *)(a1 + 32)]);

  if (v7)
  {
    [v7 setRemoteParticipantsDownlinkMuted:*(unsigned __int8 *)(a1 + 48)];
  }

  else
  {
    id v8 = sub_1001704C4();
    uint64_t v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = *(void *)(a1 + 32);
      uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) mutableConversationsByUUID]);
      __int16 v12 = (void *)objc_claimAutoreleasedReturnValue([v11 allKeys]);
      int v13 = 138412546;
      uint64_t v14 = v10;
      __int16 v15 = 2112;
      id v16 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "[WARN] Could not find conversation with conversationUUID %@. All conversation UUIDs: %@",  (uint8_t *)&v13,  0x16u);
    }
  }
}

void sub_1000F3CA0(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) mutableConversationsByUUID]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 objectForKeyedSubscript:*(void *)(a1 + 40)]);

  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 localMember]);
  int v5 = (void *)objc_claimAutoreleasedReturnValue([v4 nickname]);
  unsigned int v6 = [v5 isEqualToString:*(void *)(a1 + 48)];

  id v7 = sub_1001704C4();
  id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
  BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
  if (v6)
  {
    if (v9)
    {
      uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v3 localMember]);
      uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v10 nickname]);
      int v23 = 138412290;
      id v24 = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "Ignoring local member's nickname update request because their nickname %@ is already identical",  (uint8_t *)&v23,  0xCu);
    }
  }

  else
  {
    if (v9)
    {
      __int16 v12 = *(void **)(a1 + 40);
      uint64_t v13 = *(void *)(a1 + 48);
      uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v3 localMember]);
      __int16 v15 = (void *)objc_claimAutoreleasedReturnValue([v14 nickname]);
      int v23 = 138412802;
      id v24 = v12;
      __int16 v25 = 2112;
      uint64_t v26 = v13;
      __int16 v27 = 2112;
      int8x16_t v28 = v15;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "conversationUUID: %@ set local member's nickname to %@, previously %@",  (uint8_t *)&v23,  0x20u);
    }

    id v16 = [*(id *)(a1 + 48) copy];
    __int128 v17 = (void *)objc_claimAutoreleasedReturnValue([v3 localMember]);
    [v17 setNickname:v16];

    __int128 v18 = objc_alloc(&OBJC_CLASS___CSDMessagingConversationMessage);
    __int128 v19 = (void *)objc_claimAutoreleasedReturnValue([v3 groupUUID]);
    id v8 = -[CSDMessagingConversationMessage initWithType:groupUUID:link:]( v18,  "initWithType:groupUUID:link:",  12LL,  v19,  0LL);

    id v20 = [*(id *)(a1 + 48) copy];
    -[os_log_s setNickname:](v8, "setNickname:", v20);

    id v21 = *(void **)(a1 + 32);
    id v22 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s data](v8, "data"));
    [v21 broadcastData:v22 onConversation:v3];
  }
}

void sub_1000F4088(uint64_t a1)
{
  if ([*(id *)(a1 + 32) _linksEnabled])
  {
    id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) linkManager]);
    uint64_t v3 = *(unsigned __int8 *)(a1 + 48);
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472LL;
    _DWORD v6[2] = sub_1000F4158;
    v6[3] = &unk_1003D9F38;
    uint64_t v4 = *(void **)(a1 + 40);
    void v6[4] = *(void *)(a1 + 32);
    id v7 = v4;
    [v2 getActiveLinksWithCreatedOnly:v3 completionHandler:v6];
  }

  else
  {
    uint64_t v5 = *(void *)(a1 + 40);
    if (v5) {
      (*(void (**)(uint64_t, void, void))(v5 + 16))(v5, 0LL, 0LL);
    }
  }

void sub_1000F4158(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) queue]);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1000F4224;
  block[3] = &unk_1003D8410;
  id v11 = v5;
  id v12 = v6;
  id v13 = *(id *)(a1 + 40);
  id v8 = v6;
  id v9 = v5;
  dispatch_async(v7, block);
}

uint64_t sub_1000F4224(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    id v4 = [*(id *)(a1 + 32) count];
    uint64_t v5 = *(void *)(a1 + 32);
    int v10 = 134218242;
    id v11 = v4;
    __int16 v12 = 2112;
    uint64_t v13 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Retrieved %lu conversation link descriptors %@",  (uint8_t *)&v10,  0x16u);
  }

  if (*(void *)(a1 + 40))
  {
    id v6 = sub_1001704C4();
    id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      id v8 = *(void **)(a1 + 40);
      int v10 = 138412290;
      id v11 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Failed to retrieve links with error %@",  (uint8_t *)&v10,  0xCu);
    }
  }

  return (*(uint64_t (**)(void))(*(void *)(a1 + 48) + 16LL))();
}

void sub_1000F4410(uint64_t a1)
{
  if ([*(id *)(a1 + 32) _linksEnabled])
  {
    id v2 = sub_1001704C4();
    uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      id v4 = *(void **)(a1 + 40);
      *(_DWORD *)buf = 138412290;
      __int16 v46 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Received request from TU client to generate link for conversation UUID: %@",  buf,  0xCu);
    }

    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) mutableConversationsByUUID]);
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKeyedSubscript:*(void *)(a1 + 40)]);

    if (!v6)
    {
      id v13 = sub_1001704C4();
      id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v13);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v14 = *(void **)(a1 + 40);
        __int16 v15 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) mutableConversationsByUUID]);
        id v16 = (void *)objc_claimAutoreleasedReturnValue([v15 allKeys]);
        *(_DWORD *)buf = 138412546;
        __int16 v46 = v14;
        __int16 v47 = 2112;
        __int16 v48 = v16;
        _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "[WARN] Could not find conversation with conversationUUID %@. All conversation UUIDs: %@",  buf,  0x16u);
      }

      goto LABEL_31;
    }

    id v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) deviceSupport]);
    if ([v7 isGreenTea])
    {
      id v8 = (void *)objc_claimAutoreleasedReturnValue([v6 remoteMembers]);
      id v9 = [v8 count];

      if ((unint64_t)v9 >= 2)
      {
        id v10 = sub_1001704C4();
        id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
        if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "GreenTea devices cannot generate conversation links for Group FaceTime (remoteMembers > 1)",  buf,  2u);
        }

        goto LABEL_31;
      }
    }

    else
    {
    }

    __int128 v17 = (void *)objc_claimAutoreleasedReturnValue([v6 messagesGroupUUID]);

    if (v17)
    {
      id v18 = sub_1001704C4();
      __int128 v19 = (os_log_s *)objc_claimAutoreleasedReturnValue(v18);
      if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
      {
        id v20 = (void *)objc_claimAutoreleasedReturnValue([v6 messagesGroupUUID]);
        *(_DWORD *)buf = 138412290;
        __int16 v46 = v20;
        _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEFAULT,  "Conversation was initiated from messages, a link cannot be generated in this case. {messagesGroupUUID: %@}",  buf,  0xCu);
      }

      uint64_t v21 = *(void *)(a1 + 48);
      if (!v21) {
        goto LABEL_32;
      }
      id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  @"callservicesd.ConversationLinkManagerErrorType",  14LL,  0LL));
      (*(void (**)(uint64_t, void, os_log_s *))(v21 + 16))(v21, 0LL, v11);
    }

    else
    {
      id v22 = (void *)objc_claimAutoreleasedReturnValue([v6 link]);

      if (v22)
      {
        id v23 = sub_1001704C4();
        id v24 = (os_log_s *)objc_claimAutoreleasedReturnValue(v23);
        if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
        {
          __int16 v25 = *(void **)(a1 + 40);
          *(_DWORD *)buf = 138412290;
          __int16 v46 = v25;
          _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEFAULT,  "Link for conversation with UUID %@ already exists.",  buf,  0xCu);
        }

        uint64_t v26 = *(void *)(a1 + 48);
        if (!v26) {
          goto LABEL_32;
        }
        id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue([v6 link]);
        (*(void (**)(uint64_t, os_log_s *, void))(v26 + 16))(v26, v11, 0LL);
      }

      else
      {
        __int16 v27 = (void *)objc_claimAutoreleasedReturnValue([v6 localMember]);
        int8x16_t v28 = (void *)objc_claimAutoreleasedReturnValue([v27 handle]);
        id v11 = (os_log_s *)[v28 copy];

        id v29 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s normalizedValue](v11, "normalizedValue"));
        if (!v29)
        {
          __int128 v30 = (void *)objc_claimAutoreleasedReturnValue([v6 localMember]);
          __int128 v31 = (void *)objc_claimAutoreleasedReturnValue([v30 handle]);
          uint64_t v32 = TUNormalizedHandleForTUHandle(v31);
          uint64_t v33 = objc_claimAutoreleasedReturnValue(v32);

          id v11 = (os_log_s *)v33;
        }

        id v34 = *(void **)(a1 + 32);
        uint64_t v35 = (void *)objc_claimAutoreleasedReturnValue([v6 groupUUID]);
        __int128 v36 = (void *)objc_claimAutoreleasedReturnValue([v6 memberHandlesEligibleForLinkApproval]);
        __int128 v37 = (void *)objc_claimAutoreleasedReturnValue( [v34 _getActivatedLinkWithHandle:v11 updateGroupUUID:v35 updateInvitedHandles:v36]);

        __int128 v38 = *(void **)(a1 + 32);
        if (v37)
        {
          [v38 setConversationLink:v37 forConversation:v6 replyToCompletionHandler:*(void *)(a1 + 48)];
        }

        else
        {
          __int128 v39 = (void *)objc_claimAutoreleasedReturnValue([v38 linkManager]);
          __int128 v40 = (void *)objc_claimAutoreleasedReturnValue([v6 groupUUID]);
          __int128 v41 = (void *)objc_claimAutoreleasedReturnValue([v6 memberHandlesEligibleForLinkApproval]);
          v42[0] = _NSConcreteStackBlock;
          v42[1] = 3221225472LL;
          v42[2] = sub_1000F4940;
          v42[3] = &unk_1003D9FB0;
          void v42[4] = *(void *)(a1 + 32);
          id v43 = v6;
          id v44 = *(id *)(a1 + 48);
          [v39 generateLinkWithGroupUUID:v40 invitedHandles:v41 originatorHandle:v11 linkLifetimeScope:0 completionHandler:v42];
        }
      }
    }

void sub_1000F4940(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([a1[4] queue]);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1000F4A28;
  block[3] = &unk_1003D9F88;
  id v13 = v6;
  id v14 = a1[5];
  id v8 = a1[6];
  id v9 = a1[4];
  id v15 = v5;
  id v16 = v9;
  id v17 = v8;
  id v10 = v5;
  id v11 = v6;
  dispatch_async(v7, block);
}

id *sub_1000F4A28(id *result)
{
  id v1 = result;
  if (result[4])
  {
    id v2 = sub_1001704C4();
    uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      id v4 = (void *)objc_claimAutoreleasedReturnValue([v1[5] groupUUID]);
      id v5 = v1[4];
      int v6 = 138412546;
      id v7 = v4;
      __int16 v8 = 2112;
      id v9 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Failed to generate link for groupUUID %@ with error %@",  (uint8_t *)&v6,  0x16u);
    }

    uint64_t result = (id *)v1[8];
    if (result) {
      return (id *)((uint64_t (*)(id *, void, id))result[2])(result, 0LL, v1[4]);
    }
  }

  else if (result[6])
  {
    return (id *)objc_msgSend(result[7], "setConversationLink:forConversation:replyToCompletionHandler:");
  }

  return result;
}

void sub_1000F5014(uint64_t a1)
{
  if ([*(id *)(a1 + 32) _linksEnabled])
  {
    id v2 = sub_1001704C4();
    uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      id v4 = *(void **)(a1 + 40);
      *(_DWORD *)buf = 138412290;
      __int128 v54 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Received request from TU client to generate link with invitedMemberHandles: %@",  buf,  0xCu);
    }

    id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) deviceSupport]);
    if ([v5 isGreenTea])
    {
      id v6 = [*(id *)(a1 + 40) count];

      if ((unint64_t)v6 >= 2)
      {
        id v7 = sub_1001704C4();
        __int16 v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
        if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "GreenTea devices cannot generate conversation links for Group FaceTime (invitedMemberHandles > 1)",  buf,  2u);
        }

        goto LABEL_49;
      }
    }

    else
    {
    }

    __int16 v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(+[NSMutableSet set](&OBJC_CLASS___NSMutableSet, "set"));
    __int128 v49 = 0u;
    __int128 v50 = 0u;
    __int128 v51 = 0u;
    __int128 v52 = 0u;
    id v10 = *(id *)(a1 + 40);
    id v11 = [v10 countByEnumeratingWithState:&v49 objects:v57 count:16];
    if (v11)
    {
      id v12 = v11;
      uint64_t v13 = *(void *)v50;
      do
      {
        for (i = 0LL; i != v12; i = (char *)i + 1)
        {
          if (*(void *)v50 != v13) {
            objc_enumerationMutation(v10);
          }
          id v15 = *(void **)(*((void *)&v49 + 1) + 8LL * (void)i);
          if (((unint64_t)[v15 type] & 0xFFFFFFFFFFFFFFFELL) == 2)
          {
            uint64_t v16 = TUNormalizedHandleForTUHandle(v15);
            id v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
            id v18 = v17;
            if (v17)
            {
              __int128 v19 = (void *)objc_claimAutoreleasedReturnValue([v17 normalizedValue]);

              if (v19) {
                -[os_log_s addObject:](v8, "addObject:", v18);
              }
            }
          }

          else
          {
            id v18 = 0LL;
          }
        }

        id v12 = [v10 countByEnumeratingWithState:&v49 objects:v57 count:16];
      }

      while (v12);
    }

    if (!-[os_log_s count](v8, "count") && [*(id *)(a1 + 40) count])
    {
      id v40 = sub_1001704C4();
      __int128 v41 = (os_log_s *)objc_claimAutoreleasedReturnValue(v40);
      if (os_log_type_enabled(v41, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v41,  OS_LOG_TYPE_DEFAULT,  "[WARN] No invited member handles were of eligible handle types and/or had normalized values, canceling link generation",  buf,  2u);
      }

      uint64_t v42 = *(void *)(a1 + 48);
      if (!v42) {
        goto LABEL_49;
      }
      uint64_t v43 = 11LL;
      goto LABEL_47;
    }

    id v20 = (uint64_t (**)(void))objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) localCallerID]);
    uint64_t v21 = v20[2]();
    id v22 = (void *)objc_claimAutoreleasedReturnValue(v21);

    if (!v22)
    {
      id v23 = (uint64_t (**)(void))objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) activeLocalHandles]);
      uint64_t v24 = v23[2]();
      __int16 v25 = (void *)objc_claimAutoreleasedReturnValue(v24);
      id v26 = [v25 count];

      if (!v26)
      {
        id v44 = sub_1001704C4();
        uint64_t v45 = (os_log_s *)objc_claimAutoreleasedReturnValue(v44);
        if (os_log_type_enabled(v45, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v45,  OS_LOG_TYPE_DEFAULT,  "[WARN] Local user has no active handles, cannot proceed with link generation",  buf,  2u);
        }

        uint64_t v42 = *(void *)(a1 + 48);
        if (!v42) {
          goto LABEL_49;
        }
        uint64_t v43 = 12LL;
LABEL_47:
        id v22 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  @"callservicesd.ConversationLinkManagerErrorType",  v43,  0LL));
        (*(void (**)(uint64_t, void, void *))(v42 + 16))(v42, 0LL, v22);
LABEL_48:

LABEL_49:
        return;
      }

      __int16 v27 = (uint64_t (**)(void))objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) activeLocalHandles]);
      uint64_t v28 = v27[2]();
      id v29 = (void *)objc_claimAutoreleasedReturnValue(v28);
      id v22 = (void *)objc_claimAutoreleasedReturnValue([v29 anyObject]);
    }

    __int128 v30 = (void *)objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 32) _getActivatedLinkWithHandle:v22 updateGroupUUID:0 updateInvitedHandles:v8]);
    id v31 = sub_1001704C4();
    uint64_t v32 = (os_log_s *)objc_claimAutoreleasedReturnValue(v31);
    if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412546;
      __int128 v54 = v22;
      __int16 v55 = 2112;
      id v56 = v30;
      _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_DEFAULT,  "Getting activated link for callerID %@, activatedLink: %@",  buf,  0x16u);
    }

    if (!v30) {
      goto LABEL_36;
    }
    id v33 = sub_1001704C4();
    id v34 = (os_log_s *)objc_claimAutoreleasedReturnValue(v33);
    if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_DEFAULT,  "We activated an inactive link, returning that.",  buf,  2u);
    }

    [*(id *)(a1 + 32) notifyDelegatesOfChangedLink:v30 conversation:0];
    [*(id *)(a1 + 32) sendMessagesForCreatedOrChangedLink:v30 conversation:0 messageType:11];
    if (*(void *)(a1 + 48))
    {
      id v35 = sub_1001704C4();
      __int128 v36 = (os_log_s *)objc_claimAutoreleasedReturnValue(v35);
      if (os_log_type_enabled(v36, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        __int128 v54 = v30;
        _os_log_impl( (void *)&_mh_execute_header,  v36,  OS_LOG_TYPE_DEFAULT,  "Link generation complete, returning to completionHandler for: %@",  buf,  0xCu);
      }

      (*(void (**)(void))(*(void *)(a1 + 48) + 16LL))();
    }

    else
    {
LABEL_36:
      __int128 v37 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) linkManager]);
      uint64_t v38 = *(void *)(a1 + 56);
      v46[0] = _NSConcreteStackBlock;
      v46[1] = 3221225472LL;
      v46[2] = sub_1000F5618;
      v46[3] = &unk_1003D9FB0;
      __int128 v39 = *(void **)(a1 + 40);
      v46[4] = *(void *)(a1 + 32);
      id v47 = v39;
      id v48 = *(id *)(a1 + 48);
      [v37 generateLinkWithInvitedHandles:v8 originatorHandle:v22 linkLifetimeScope:v38 completionHandler:v46];
    }

    goto LABEL_48;
  }

  uint64_t v9 = *(void *)(a1 + 48);
  if (v9) {
    (*(void (**)(uint64_t, void, void))(v9 + 16))(v9, 0LL, 0LL);
  }
}

void sub_1000F5618(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([a1[4] queue]);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1000F56FC;
  block[3] = &unk_1003D8460;
  id v13 = v6;
  id v14 = v5;
  id v8 = a1[5];
  id v9 = a1[4];
  id v15 = v8;
  id v16 = v9;
  id v17 = a1[6];
  id v10 = v5;
  id v11 = v6;
  dispatch_async(v7, block);
}

void sub_1000F56FC(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    id v2 = sub_1001704C4();
    uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) groupUUID]);
      uint64_t v5 = *(void *)(a1 + 48);
      uint64_t v6 = *(void *)(a1 + 32);
      int v11 = 138412802;
      id v12 = v4;
      __int16 v13 = 2112;
      uint64_t v14 = v5;
      __int16 v15 = 2112;
      uint64_t v16 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Creation of converation link with groupUUID %@ invited handles %@ failed with error %@",  (uint8_t *)&v11,  0x20u);
    }
  }

  uint64_t v7 = *(void *)(a1 + 40);
  if (v7)
  {
    [*(id *)(a1 + 56) notifyDelegatesOfChangedLink:v7 conversation:0];
    [*(id *)(a1 + 56) sendMessagesForCreatedOrChangedLink:*(void *)(a1 + 40) conversation:0 messageType:11];
  }

  if (*(void *)(a1 + 64))
  {
    id v8 = sub_1001704C4();
    id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      id v10 = *(void **)(a1 + 40);
      int v11 = 138412290;
      id v12 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "Link generation complete, returning to completionHandler for: %@",  (uint8_t *)&v11,  0xCu);
    }

    (*(void (**)(void))(*(void *)(a1 + 64) + 16LL))();
  }

void sub_1000F5954(id *a1)
{
  if ([a1[4] _linksEnabled])
  {
    objc_initWeak(&location, a1[4]);
    id v2 = (void *)objc_claimAutoreleasedReturnValue([a1[4] linkManager]);
    id v3 = a1[5];
    id v4 = (void *)objc_claimAutoreleasedReturnValue([a1[6] pseudonym]);
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472LL;
    _DWORD v6[2] = sub_1000F5ABC;
    v6[3] = &unk_1003DA050;
    objc_copyWeak(&v10, &location);
    id v7 = a1[5];
    id v8 = a1[6];
    id v9 = a1[7];
    [v2 addInvitedHandles:v3 pseudonym:v4 completionHandler:v6];

    objc_destroyWeak(&v10);
    objc_destroyWeak(&location);
  }

  else
  {
    id v5 = a1[7];
    if (v5) {
      (*((void (**)(id, void, void))v5 + 2))(v5, 0LL, 0LL);
    }
  }

void sub_1000F5A98(_Unwind_Exception *a1)
{
}

void sub_1000F5ABC(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained(a1 + 7);
  id v8 = WeakRetained;
  if (WeakRetained)
  {
    id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([WeakRetained queue]);
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472LL;
    _DWORD v10[2] = sub_1000F5BC8;
    v10[3] = &unk_1003DA028;
    id v11 = v6;
    id v12 = a1[4];
    id v13 = a1[5];
    id v14 = v5;
    __int16 v15 = v8;
    id v16 = a1[6];
    dispatch_async(v9, v10);
  }
}

uint64_t sub_1000F5BC8(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    id v2 = sub_1001704C4();
    id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v5 = *(void *)(a1 + 40);
      uint64_t v4 = *(void *)(a1 + 48);
      uint64_t v6 = *(void *)(a1 + 32);
      int v11 = 138412802;
      uint64_t v12 = v5;
      __int16 v13 = 2112;
      uint64_t v14 = v4;
      __int16 v15 = 2112;
      uint64_t v16 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Adding invited handles %@ to %@ failed with error %@",  (uint8_t *)&v11,  0x20u);
    }
  }

  if (*(void *)(a1 + 56))
  {
    id v7 = *(void **)(a1 + 64);
    id v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) groupUUID]);
    id v9 = (void *)objc_claimAutoreleasedReturnValue([v7 conversationWithGroupUUID:v8]);

    if (v9) {
      [v9 setConversationLink:*(void *)(a1 + 56) allowUpdate:1];
    }
    [*(id *)(a1 + 64) notifyDelegatesOfChangedLink:*(void *)(a1 + 56) conversation:v9];
    [*(id *)(a1 + 64) sendMessagesForCreatedOrChangedLink:*(void *)(a1 + 56) conversation:v9 messageType:26];
  }

  uint64_t result = *(void *)(a1 + 72);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, void))(result + 16))( result,  *(void *)(a1 + 56),  *(void *)(a1 + 32));
  }
  return result;
}

void sub_1000F5DDC(uint64_t a1)
{
  if ([*(id *)(a1 + 32) _linksEnabled])
  {
    id v2 = *(void **)(a1 + 32);
    id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) pseudonym]);
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v2 findConversationLinkMatchingPseudonym:v3]);

    id v5 = sub_1001704C4();
    uint64_t v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    BOOL v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);
    if (v4)
    {
      if (v7)
      {
        *(_DWORD *)buf = 138412290;
        id v18 = v4;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Asked to invalidate link %@", buf, 0xCu);
      }

      id v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) linkManager]);
      id v9 = (void *)objc_claimAutoreleasedReturnValue([v4 pseudonym]);
      uint64_t v10 = *(void *)(a1 + 56);
      v14[0] = _NSConcreteStackBlock;
      v14[1] = 3221225472LL;
      v14[2] = sub_1000F601C;
      void v14[3] = &unk_1003DA0C8;
      v14[4] = *(void *)(a1 + 32);
      id v15 = v4;
      id v16 = *(id *)(a1 + 48);
      [v8 invalidateLinkWithPseudonym:v9 deleteReason:v10 completionHandler:v14];
    }

    else
    {
      if (v7)
      {
        *(_WORD *)buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Not invalidating link since it's not being tracked by our link manager.",  buf,  2u);
      }

      uint64_t v12 = *(void *)(a1 + 48);
      if (v12)
      {
        __int16 v13 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  @"callservicesd.ConversationLinkManagerErrorType",  3LL,  0LL));
        (*(void (**)(uint64_t, void, void *))(v12 + 16))(v12, 0LL, v13);
      }
    }
  }

  else
  {
    uint64_t v11 = *(void *)(a1 + 48);
    if (v11) {
      (*(void (**)(uint64_t, void, void))(v11 + 16))(v11, 0LL, 0LL);
    }
  }

void sub_1000F601C(id *a1, char a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([a1[4] queue]);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1000F60E4;
  block[3] = &unk_1003DA0A0;
  char v16 = a2;
  id v7 = a1[5];
  id v8 = a1[4];
  id v12 = v7;
  id v13 = v8;
  id v9 = a1[6];
  id v14 = v5;
  id v15 = v9;
  id v10 = v5;
  dispatch_async(v6, block);
}

uint64_t sub_1000F60E4(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 64))
  {
    id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) groupUUID]);
    if (v2)
    {
      id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) conversationWithGroupUUID:v2]);
      uint64_t v4 = v3;
      if (v3) {
        [v3 setLink:0];
      }
    }

    else
    {
      uint64_t v4 = 0LL;
    }

    id v5 = sub_1001704C4();
    uint64_t v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v7 = *(void *)(a1 + 32);
      int v9 = 138412290;
      uint64_t v10 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "completed invalidate the link: %@",  (uint8_t *)&v9,  0xCu);
    }

    [*(id *)(a1 + 40) notifyDelegatesOfChangedLink:*(void *)(a1 + 32) conversation:v4];
    [*(id *)(a1 + 40) sendMessagesForInvalidatedLink:*(void *)(a1 + 32)];
  }

  uint64_t result = *(void *)(a1 + 56);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, void))(result + 16))( result,  *(unsigned __int8 *)(a1 + 64),  *(void *)(a1 + 48));
  }
  return result;
}

void sub_1000F62C8(id *a1)
{
  if ([a1[4] _linksEnabled])
  {
    id v2 = sub_1001704C4();
    id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      id v4 = a1[5];
      *(_DWORD *)buf = 138412290;
      id v13 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Renewing link %@ if needed", buf, 0xCu);
    }

    objc_initWeak((id *)buf, a1[4]);
    id v5 = (void *)objc_claimAutoreleasedReturnValue([a1[4] linkManager]);
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([a1[5] pseudonym]);
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472LL;
    _DWORD v8[2] = sub_1000F64B0;
    v8[3] = &unk_1003DA0F0;
    objc_copyWeak(&v11, (id *)buf);
    id v9 = a1[5];
    id v10 = a1[6];
    [v5 renewPseudonymIfNeeded:v6 completionHandler:v8];

    objc_destroyWeak(&v11);
    objc_destroyWeak((id *)buf);
  }

  else
  {
    id v7 = a1[6];
    if (v7) {
      (*((void (**)(id, void, void))v7 + 2))(v7, 0LL, 0LL);
    }
  }

void sub_1000F6484( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
}

void sub_1000F64B0(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  id v8 = WeakRetained;
  if (WeakRetained)
  {
    id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([WeakRetained queue]);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1000F65A8;
    block[3] = &unk_1003D8460;
    id v11 = v6;
    id v12 = a1[4];
    id v13 = v5;
    id v14 = v8;
    id v15 = a1[5];
    dispatch_async(v9, block);
  }
}

uint64_t sub_1000F65A8(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    id v2 = sub_1001704C4();
    id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
      sub_1002B6298();
    }
  }

  else
  {
    id v3 = (os_log_s *)[*(id *)(a1 + 40) copy];
    -[os_log_s setExpirationDate:](v3, "setExpirationDate:", *(void *)(a1 + 48));
    id v4 = *(void **)(a1 + 56);
    id v5 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s groupUUID](v3, "groupUUID"));
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 conversationWithGroupUUID:v5]);

    if (v6) {
      [v6 setConversationLink:v3 allowUpdate:1];
    }
    id v7 = sub_1001704C4();
    id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      id v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) pseudonym]);
      int v11 = 138412290;
      id v12 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "completed renewPseudonym %@",  (uint8_t *)&v11,  0xCu);
    }

    [*(id *)(a1 + 56) notifyDelegatesOfChangedLink:v3 conversation:v6];
    [*(id *)(a1 + 56) sendMessagesForCreatedOrChangedLink:v3 conversation:v6 messageType:26];
  }

  uint64_t result = *(void *)(a1 + 64);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, void))(result + 16))( result,  *(void *)(a1 + 48),  *(void *)(a1 + 32));
  }
  return result;
}

void sub_1000F6828(uint64_t a1)
{
  if ([*(id *)(a1 + 32) _linksEnabled])
  {
    id v2 = sub_1001704C4();
    id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(a1 + 64);
      *(_DWORD *)buf = 134217984;
      uint64_t v15 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Renewing link for reason %lu", buf, 0xCu);
    }

    objc_initWeak((id *)buf, *(id *)(a1 + 32));
    id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) linkManager]);
    id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) pseudonym]);
    uint64_t v7 = *(void *)(a1 + 48);
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472LL;
    _DWORD v9[2] = sub_1000F6A3C;
    v9[3] = &unk_1003DA140;
    objc_copyWeak(&v13, (id *)buf);
    id v10 = *(id *)(a1 + 40);
    id v11 = *(id *)(a1 + 48);
    id v12 = *(id *)(a1 + 56);
    [v5 renewLinkWithPseudonym:v6 expirationDate:v7 completionHandler:v9];

    objc_destroyWeak(&v13);
    objc_destroyWeak((id *)buf);
  }

  else
  {
    uint64_t v8 = *(void *)(a1 + 56);
    if (v8) {
      (*(void (**)(uint64_t, void, void))(v8 + 16))(v8, 0LL, 0LL);
    }
  }

void sub_1000F6A10( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
}

void sub_1000F6A3C(id *a1, char a2, void *a3)
{
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained(a1 + 7);
  uint64_t v7 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([WeakRetained queue]);
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472LL;
    _DWORD v9[2] = sub_1000F6B30;
    v9[3] = &unk_1003DA118;
    id v10 = v5;
    id v11 = a1[4];
    char v15 = a2;
    id v12 = a1[5];
    id v13 = v7;
    id v14 = a1[6];
    dispatch_async(v8, v9);
  }
}

uint64_t sub_1000F6B30(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    id v2 = sub_1001704C4();
    id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
      sub_1002B6298();
    }
  }

  if (*(_BYTE *)(a1 + 72))
  {
    id v4 = [*(id *)(a1 + 40) copy];
    [v4 setExpirationDate:*(void *)(a1 + 48)];
    id v5 = *(void **)(a1 + 56);
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 groupUUID]);
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v5 conversationWithGroupUUID:v6]);

    if (v7) {
      [v7 setConversationLink:v4 allowUpdate:1];
    }
    id v8 = sub_1001704C4();
    id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      int v11 = 138412290;
      id v12 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "renewLinkWithPseudonym succeeded: %@",  (uint8_t *)&v11,  0xCu);
    }

    [*(id *)(a1 + 56) notifyDelegatesOfChangedLink:v4 conversation:v7];
    [*(id *)(a1 + 56) sendMessagesForCreatedOrChangedLink:v4 conversation:v7 messageType:26];
  }

  uint64_t result = *(void *)(a1 + 64);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, void))(result + 16))( result,  *(unsigned __int8 *)(a1 + 72),  *(void *)(a1 + 32));
  }
  return result;
}

void sub_1000F6D70(uint64_t a1)
{
  if ([*(id *)(a1 + 32) _linksEnabled])
  {
    id v4 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) linkManager]);
    id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) pseudonym]);
    [v4 checkLinkValidityWithPseudonym:v2 completionHandler:*(void *)(a1 + 48)];
  }

  else
  {
    uint64_t v3 = *(void *)(a1 + 48);
    if (v3) {
      (*(void (**)(uint64_t, void, void, void))(v3 + 16))(v3, 0LL, 0LL, 0LL);
    }
  }

void sub_1000F6E7C(uint64_t a1)
{
  id v2 = (uint64_t (**)(void))objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) localCallerID]);
  uint64_t v3 = v2[2]();
  id v4 = (void *)objc_claimAutoreleasedReturnValue(v3);

  id v5 = sub_1001704C4();
  id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    int v8 = 138412290;
    id v9 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Generating cache of inactive links for originator handle %@",  (uint8_t *)&v8,  0xCu);
  }

  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) linkManager]);
  [v7 generateAllInactiveLinksFor:v4];
}

void sub_1000F7000(uint64_t a1)
{
  if ([*(id *)(a1 + 32) _linksEnabled])
  {
    id v2 = (uint64_t (**)(void))objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) localCallerID]);
    uint64_t v3 = v2[2]();
    id v4 = (void *)objc_claimAutoreleasedReturnValue(v3);

    id v5 = sub_1001704C4();
    id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      id v17 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Asked to retrieve inactive link for handle %@",  buf,  0xCu);
    }

    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) linkManager]);
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472LL;
    v12[2] = sub_1000F7198;
    v12[3] = &unk_1003D9FB0;
    uint64_t v8 = *(void *)(a1 + 32);
    id v9 = *(void **)(a1 + 40);
    id v13 = v4;
    uint64_t v14 = v8;
    id v15 = v9;
    id v10 = v4;
    [v7 getInactiveLinkForHandle:v10 completionHandler:v12];
  }

  else
  {
    uint64_t v11 = *(void *)(a1 + 40);
    if (v11) {
      (*(void (**)(uint64_t, void, void))(v11 + 16))(v11, 0LL, 0LL);
    }
  }

void sub_1000F7198(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (!v5)
  {
    id v7 = sub_1001704C4();
    uint64_t v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      int v11 = 138412290;
      uint64_t v12 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "Failed to fetch inactive link, generating more for handle %@",  (uint8_t *)&v11,  0xCu);
    }

    id v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) linkManager]);
    [v10 generateAllInactiveLinksFor:*(void *)(a1 + 32)];
  }

  (*(void (**)(void))(*(void *)(a1 + 48) + 16LL))();
}

void sub_1000F7350(uint64_t a1)
{
  if ([*(id *)(a1 + 32) _linksEnabled])
  {
    id v2 = sub_1001704C4();
    uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(a1 + 40);
      int v12 = 138412290;
      uint64_t v13 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Asked to activate conversation link %@",  (uint8_t *)&v12,  0xCu);
    }

    id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) linkManager]);
    id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) pseudonym]);
    [v5 activateLinkForPseudonym:v6 completionHandler:*(void *)(a1 + 48)];

    id v7 = (uint64_t (**)(void))objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) localCallerID]);
    uint64_t v8 = v7[2]();
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(v8);

    id v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) linkManager]);
    [v10 generateInactiveLinkFor:v9 afterActivation:1];

    [*(id *)(a1 + 32) notifyDelegatesOfChangedLink:*(void *)(a1 + 40) conversation:0];
  }

  else
  {
    uint64_t v11 = *(void *)(a1 + 48);
    if (v11) {
      (*(void (**)(uint64_t, void, void))(v11 + 16))(v11, 0LL, 0LL);
    }
  }

void sub_1000F75BC(uint64_t a1)
{
  if ([*(id *)(a1 + 32) _linksEnabled])
  {
    id v2 = sub_1001704C4();
    uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(a1 + 40);
      uint64_t v5 = *(void *)(a1 + 48);
      *(_DWORD *)buf = 138412546;
      uint64_t v15 = v4;
      __int16 v16 = 2112;
      uint64_t v17 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Asked to set name %@ for link %@",  buf,  0x16u);
    }

    objc_initWeak((id *)buf, *(id *)(a1 + 32));
    id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) linkManager]);
    uint64_t v7 = *(void *)(a1 + 48);
    uint64_t v8 = *(void *)(a1 + 40);
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472LL;
    _DWORD v10[2] = sub_1000F77B8;
    v10[3] = &unk_1003DA190;
    objc_copyWeak(&v13, (id *)buf);
    id v11 = *(id *)(a1 + 48);
    id v12 = *(id *)(a1 + 56);
    [v6 setLinkName:v8 forLink:v7 completionHandler:v10];

    objc_destroyWeak(&v13);
    objc_destroyWeak((id *)buf);
  }

  else
  {
    uint64_t v9 = *(void *)(a1 + 56);
    if (v9) {
      (*(void (**)(uint64_t, void, void))(v9 + 16))(v9, 0LL, 0LL);
    }
  }

void sub_1000F778C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
}

void sub_1000F77B8(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  uint64_t v8 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([WeakRetained queue]);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1000F78B0;
    block[3] = &unk_1003D8460;
    id v11 = v6;
    id v12 = a1[4];
    id v13 = v5;
    uint64_t v14 = v8;
    id v15 = a1[5];
    dispatch_async(v9, block);
  }
}

uint64_t sub_1000F78B0(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    id v2 = sub_1001704C4();
    uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(a1 + 32);
      int v9 = 138412290;
      uint64_t v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "[WARN] Link name setting provided error %@",  (uint8_t *)&v9,  0xCu);
    }
  }

  if (*(void *)(a1 + 40))
  {
    id v5 = sub_1001704C4();
    id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v7 = *(void *)(a1 + 48);
      int v9 = 138412290;
      uint64_t v10 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Link name successfully set for updated link %@",  (uint8_t *)&v9,  0xCu);
    }

    [*(id *)(a1 + 56) notifyDelegatesOfChangedLink:*(void *)(a1 + 48) conversation:0];
  }

  uint64_t result = *(void *)(a1 + 64);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, void))(result + 16))( result,  *(void *)(a1 + 48),  *(void *)(a1 + 32));
  }
  return result;
}

void sub_1000F7A58(uint64_t a1)
{
  if ([*(id *)(a1 + 32) _linksEnabled])
  {
    id v2 = sub_1001704C4();
    uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      if (*(_BYTE *)(a1 + 40)) {
        uint64_t v4 = @"YES";
      }
      else {
        uint64_t v4 = @"NO";
      }
      int v6 = 138412290;
      uint64_t v7 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "TU client asked to schedule a syncing of activated conversation links {initial: %@}",  (uint8_t *)&v6,  0xCu);
    }

    id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) linkManager]);
    [v5 scheduleConversationLinkCheckInInitial:*(unsigned __int8 *)(a1 + 40)];
  }

void sub_1000F7BD4(uint64_t a1)
{
  if ([*(id *)(a1 + 32) _linksEnabled])
  {
    id v2 = sub_1001704C4();
    uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(a1 + 40);
      int v6 = 138412290;
      uint64_t v7 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Sending recovery messages to local user's other devices in an attempt to recover links for pseudonyms %@",  (uint8_t *)&v6,  0xCu);
    }

    id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) linkManager]);
    [v5 recoverLinksForPseudonyms:*(void *)(a1 + 40)];
  }

void sub_1000F7D40(uint64_t a1)
{
  if ([*(id *)(a1 + 32) _linksEnabled])
  {
    id v2 = sub_1001704C4();
    uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      if (*(_BYTE *)(a1 + 48)) {
        uint64_t v4 = @"YES";
      }
      else {
        uint64_t v4 = @"NO";
      }
      int v6 = 138412290;
      uint64_t v7 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "TU client asked for link sync state {includeLinks: %@}",  (uint8_t *)&v6,  0xCu);
    }

    id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) linkManager]);
    [v5 linkSyncStateWithIncludeLinks:*(unsigned __int8 *)(a1 + 48) completion:*(void *)(a1 + 40)];
  }

void sub_1000F7EE4(uint64_t a1)
{
  if ([*(id *)(a1 + 32) _linksEnabled])
  {
    id v2 = sub_1001704C4();
    uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(a1 + 40);
      uint64_t v5 = *(void *)(a1 + 48);
      int v14 = 138412546;
      uint64_t v15 = v4;
      __int16 v16 = 2112;
      uint64_t v17 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "For conversationUUID: %@, user has approved let me in for pending member: %@",  (uint8_t *)&v14,  0x16u);
    }

    int v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) mutableConversationsByUUID]);
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:*(void *)(a1 + 40)]);

    if (v7)
    {
      [*(id *)(a1 + 48) setJoinedFromLetMeIn:1];
      uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) pendingMembershipTracker]);
      [v8 handleLocalApprovalOfMember:*(void *)(a1 + 48) forConversation:v7];
    }

    else
    {
      id v9 = sub_1001704C4();
      uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(v9);
      if (os_log_type_enabled((os_log_t)v8, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v11 = *(void *)(a1 + 40);
        uint64_t v10 = *(void *)(a1 + 48);
        id v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) mutableConversationsByUUID]);
        id v13 = (void *)objc_claimAutoreleasedReturnValue([v12 allKeys]);
        int v14 = 138412802;
        uint64_t v15 = v10;
        __int16 v16 = 2112;
        uint64_t v17 = v11;
        __int16 v18 = 2112;
        __int128 v19 = v13;
        _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v8,  OS_LOG_TYPE_DEFAULT,  "[WARN] Failed to approve let me in request for pending member %@. Could not find conversation with conversatio nUUID %@. All conversation UUIDs: %@",  (uint8_t *)&v14,  0x20u);
      }
    }
  }

void sub_1000F8150(uint64_t a1)
{
  if ([*(id *)(a1 + 32) _linksEnabled])
  {
    id v2 = sub_1001704C4();
    uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(a1 + 40);
      uint64_t v5 = *(void *)(a1 + 48);
      int v14 = 138412546;
      uint64_t v15 = v4;
      __int16 v16 = 2112;
      uint64_t v17 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "For conversationUUID: %@, user has rejected let me in for pending member: %@",  (uint8_t *)&v14,  0x16u);
    }

    int v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) mutableConversationsByUUID]);
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:*(void *)(a1 + 40)]);

    if (v7)
    {
      uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) pendingMembershipTracker]);
      [v8 handleLocalRejectionOfMember:*(void *)(a1 + 48) forConversation:v7];
    }

    else
    {
      id v9 = sub_1001704C4();
      uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(v9);
      if (os_log_type_enabled((os_log_t)v8, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v11 = *(void *)(a1 + 40);
        uint64_t v10 = *(void *)(a1 + 48);
        id v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) mutableConversationsByUUID]);
        id v13 = (void *)objc_claimAutoreleasedReturnValue([v12 allKeys]);
        int v14 = 138412802;
        uint64_t v15 = v10;
        __int16 v16 = 2112;
        uint64_t v17 = v11;
        __int16 v18 = 2112;
        __int128 v19 = v13;
        _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v8,  OS_LOG_TYPE_DEFAULT,  "[WARN] Failed to reject let me in request for pending member %@. Could not find conversation with conversation UUID %@. All conversation UUIDs: %@",  (uint8_t *)&v14,  0x20u);
      }
    }
  }

void sub_1000F8394(uint64_t a1)
{
  if ([*(id *)(a1 + 32) _linksEnabled])
  {
    id v2 = sub_1001704C4();
    uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(a1 + 40);
      *(_DWORD *)buf = 138412290;
      uint64_t v30 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "For conversationUUID: %@, user has requested to ignore all LMI requests.",  buf,  0xCu);
    }

    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) mutableConversationsByUUID]);
    int v6 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKeyedSubscript:*(void *)(a1 + 40)]);

    if (v6)
    {
      [v6 setIgnoreLMIRequests:*(unsigned __int8 *)(a1 + 48)];
      __int128 v19 = v6;
      uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 tuConversation]);
      __int128 v25 = 0u;
      __int128 v26 = 0u;
      __int128 v27 = 0u;
      __int128 v28 = 0u;
      id obj = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegateToQueue]);
      id v8 = [obj countByEnumeratingWithState:&v25 objects:v33 count:16];
      if (v8)
      {
        id v9 = v8;
        uint64_t v10 = *(void *)v26;
        do
        {
          uint64_t v11 = 0LL;
          do
          {
            if (*(void *)v26 != v10) {
              objc_enumerationMutation(obj);
            }
            uint64_t v12 = *(void *)(*((void *)&v25 + 1) + 8LL * (void)v11);
            id v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegateToQueue]);
            int v14 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v13 objectForKey:v12]);

            block[0] = _NSConcreteStackBlock;
            block[1] = 3221225472LL;
            block[2] = sub_1000F8648;
            block[3] = &unk_1003D7828;
            id v22 = v7;
            uint64_t v23 = v12;
            uint64_t v24 = *(void *)(a1 + 32);
            dispatch_async(v14, block);

            uint64_t v11 = (char *)v11 + 1;
          }

          while (v9 != v11);
          id v9 = [obj countByEnumeratingWithState:&v25 objects:v33 count:16];
        }

        while (v9);
      }

      int v6 = v19;
    }

    else
    {
      id v15 = sub_1001704C4();
      uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(v15);
      if (os_log_type_enabled((os_log_t)v7, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v16 = *(void *)(a1 + 40);
        uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) mutableConversationsByUUID]);
        __int16 v18 = (void *)objc_claimAutoreleasedReturnValue([v17 allKeys]);
        *(_DWORD *)buf = 138412546;
        uint64_t v30 = v16;
        __int16 v31 = 2112;
        uint64_t v32 = v18;
        _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v7,  OS_LOG_TYPE_DEFAULT,  "[WARN] Failed to ignore let me in requests. Could not find conversation with conversationUUID %@. All conversation UUIDs: %@",  buf,  0x16u);
      }
    }
  }

void sub_1000F8648(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    char v2 = objc_opt_respondsToSelector(*(void *)(a1 + 40), "shouldHandleUpdateForProvider:");
    uint64_t v3 = *(void **)(a1 + 40);
    if ((v2 & 1) != 0)
    {
      uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) provider]);
      if ([v3 shouldHandleUpdateForProvider:v4])
      {
      }

      else
      {
        char v5 = objc_opt_respondsToSelector(*(void *)(a1 + 40), "shouldHandleUpdateForProvider:");

        if ((v5 & 1) != 0) {
          return;
        }
      }
    }

    else if ((objc_opt_respondsToSelector(*(void *)(a1 + 40), "shouldHandleUpdateForProvider:") & 1) != 0)
    {
      return;
    }

    id v6 = sub_1001704C4();
    uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = *(void *)(a1 + 40);
      id v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) provider]);
      int v10 = 138412546;
      uint64_t v11 = v8;
      __int16 v12 = 2112;
      id v13 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Delegate should handle conversation update: %@ for provider: %@",  (uint8_t *)&v10,  0x16u);
    }

    [*(id *)(a1 + 40) conversationManager:*(void *)(a1 + 48) conversationChanged:*(void *)(a1 + 32)];
  }

void sub_1000F8834(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 48);
    char v5 = *(void **)(a1 + 32);
    *(_DWORD *)buf = 134218242;
    uint64_t v32 = v4;
    __int16 v33 = 2112;
    id v34 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Updating screen sharing type to %lu for conversationUUID: %@.",  buf,  0x16u);
  }

  id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) mutableConversationsByUUID]);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:*(void *)(a1 + 32)]);

  if (v7)
  {
    [v7 addScreenSharingType:*(void *)(a1 + 48)];
    id v20 = v7;
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v7 tuConversation]);
    __int128 v26 = 0u;
    __int128 v27 = 0u;
    __int128 v28 = 0u;
    __int128 v29 = 0u;
    id obj = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) delegateToQueue]);
    id v9 = [obj countByEnumeratingWithState:&v26 objects:v30 count:16];
    if (v9)
    {
      id v10 = v9;
      uint64_t v11 = *(void *)v27;
      do
      {
        __int16 v12 = 0LL;
        do
        {
          if (*(void *)v27 != v11) {
            objc_enumerationMutation(obj);
          }
          uint64_t v13 = *(void *)(*((void *)&v26 + 1) + 8LL * (void)v12);
          int v14 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) delegateToQueue]);
          id v15 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v14 objectForKey:v13]);

          block[0] = _NSConcreteStackBlock;
          block[1] = 3221225472LL;
          block[2] = sub_1000F8AF0;
          block[3] = &unk_1003D7828;
          id v23 = v8;
          uint64_t v24 = v13;
          uint64_t v25 = *(void *)(a1 + 40);
          dispatch_async(v15, block);

          __int16 v12 = (char *)v12 + 1;
        }

        while (v10 != v12);
        id v10 = [obj countByEnumeratingWithState:&v26 objects:v30 count:16];
      }

      while (v10);
    }

    uint64_t v7 = v20;
  }

  else
  {
    id v16 = sub_1001704C4();
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(v16);
    if (os_log_type_enabled((os_log_t)v8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v17 = *(void *)(a1 + 32);
      __int16 v18 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) mutableConversationsByUUID]);
      __int128 v19 = (void *)objc_claimAutoreleasedReturnValue([v18 allKeys]);
      *(_DWORD *)buf = 138412546;
      uint64_t v32 = v17;
      __int16 v33 = 2112;
      id v34 = v19;
      _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v8,  OS_LOG_TYPE_DEFAULT,  "[WARN] Failed to ignore let me in requests. Could not find conversation with conversationUUID %@. All conversation UUIDs: %@",  buf,  0x16u);
    }
  }
}

void sub_1000F8AF0(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    char v2 = objc_opt_respondsToSelector(*(void *)(a1 + 40), "shouldHandleUpdateForProvider:");
    uint64_t v3 = *(void **)(a1 + 40);
    if ((v2 & 1) != 0)
    {
      uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) provider]);
      if ([v3 shouldHandleUpdateForProvider:v4])
      {
      }

      else
      {
        char v5 = objc_opt_respondsToSelector(*(void *)(a1 + 40), "shouldHandleUpdateForProvider:");

        if ((v5 & 1) != 0) {
          return;
        }
      }
    }

    else if ((objc_opt_respondsToSelector(*(void *)(a1 + 40), "shouldHandleUpdateForProvider:") & 1) != 0)
    {
      return;
    }

    id v6 = sub_1001704C4();
    uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = *(void *)(a1 + 40);
      id v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) provider]);
      int v10 = 138412546;
      uint64_t v11 = v8;
      __int16 v12 = 2112;
      uint64_t v13 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Delegate should handle conversation update: %@ for provider: %@",  (uint8_t *)&v10,  0x16u);
    }

    [*(id *)(a1 + 40) conversationManager:*(void *)(a1 + 48) conversationChanged:*(void *)(a1 + 32)];
  }

void sub_1000F8CD4(uint64_t a1)
{
  char v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) conversationNoticeManger]);
  id v3 = (id)objc_claimAutoreleasedReturnValue([v2 fetchUpcomingNoticeFromQueue]);

  (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
}

void sub_1000F8DEC(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) conversationNoticeManger]);
  [v2 activateConversationNoticeWithActionURL:*(void *)(a1 + 40) bundleIdentifier:*(void *)(a1 + 48)];
}

void sub_1000F8EC4(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) conversationNoticeManger]);
  [v2 removeConversationNoticeWithUUID:*(void *)(a1 + 40)];
}

void sub_1000F8FC0(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    char v5 = *(void **)(a1 + 40);
    int v13 = 138412546;
    uint64_t v14 = v4;
    __int16 v15 = 2112;
    id v16 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "conversationUUID: %@ messagesGroupName: %@",  (uint8_t *)&v13,  0x16u);
  }

  id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) mutableConversationsByUUID]);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:*(void *)(a1 + 32)]);

  if (v7)
  {
    [v7 setMessagesGroupName:*(void *)(a1 + 40)];
  }

  else
  {
    id v8 = sub_1001704C4();
    id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = *(void *)(a1 + 32);
      uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) mutableConversationsByUUID]);
      __int16 v12 = (void *)objc_claimAutoreleasedReturnValue([v11 allKeys]);
      int v13 = 138412546;
      uint64_t v14 = v10;
      __int16 v15 = 2112;
      id v16 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "[WARN] Could not find conversation with conversationUUID %@. All conversation UUIDs: %@",  (uint8_t *)&v13,  0x16u);
    }
  }
}

void sub_1000F91B0(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) queue]);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  _DWORD v7[2] = sub_1000F924C;
  v7[3] = &unk_1003D7758;
  uint64_t v5 = *(void *)(a1 + 32);
  id v8 = v3;
  uint64_t v9 = v5;
  id v6 = v3;
  dispatch_async(v4, v7);
}

void sub_1000F924C(uint64_t a1)
{
  __int128 v23 = 0u;
  __int128 v24 = 0u;
  __int128 v25 = 0u;
  __int128 v26 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v23 objects:v31 count:16];
  if (v3)
  {
    id v5 = v3;
    uint64_t v6 = *(void *)v24;
    *(void *)&__int128 v4 = 134218242LL;
    __int128 v20 = v4;
    do
    {
      for (i = 0LL; i != v5; i = (char *)i + 1)
      {
        if (*(void *)v24 != v6) {
          objc_enumerationMutation(v2);
        }
        id v8 = *(void **)(*((void *)&v23 + 1) + 8LL * (void)i);
        if (objc_msgSend(v8, "linkLifetimeScope", v20))
        {
          uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) mutableConversationsByUUID]);
          uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v8 groupUUID]);
          uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v9 objectForKeyedSubscript:v10]);

          if (!v11) {
            goto LABEL_10;
          }
          id v12 = (id)objc_claimAutoreleasedReturnValue([v11 activeRemoteParticipants]);
          if ([v12 count])
          {
LABEL_13:
          }

          else
          {
            id v13 = [v11 state];

            if (!v13)
            {
LABEL_10:
              uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v8 pseudonym]);
              id v15 = sub_1001704C4();
              id v16 = (os_log_s *)objc_claimAutoreleasedReturnValue(v15);
              if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
              {
                id v17 = [v8 linkLifetimeScope];
                *(_DWORD *)buf = v20;
                id v28 = v17;
                __int16 v29 = 2112;
                uint64_t v30 = v8;
                _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "%ld conversationLink should be removed, not needed anymore %@",  buf,  0x16u);
              }

              __int16 v18 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) linkManager]);
              __int128 v19 = (void *)objc_claimAutoreleasedReturnValue([v8 pseudonym]);
              v21[0] = _NSConcreteStackBlock;
              v21[1] = 3221225472LL;
              v21[2] = sub_1000F94C4;
              v21[3] = &unk_1003D7C88;
              id v22 = v14;
              id v12 = v14;
              [v18 invalidateLinkWithPseudonym:v19 deleteReason:6 completionHandler:v21];

              goto LABEL_13;
            }
          }

          continue;
        }
      }

      id v5 = [v2 countByEnumeratingWithState:&v23 objects:v31 count:16];
    }

    while (v5);
  }
}

void sub_1000F94C4(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  id v6 = sub_1001704C4();
  uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    uint64_t v9 = @"NO";
    int v10 = 138412802;
    if (a2) {
      uint64_t v9 = @"YES";
    }
    uint64_t v11 = v8;
    __int16 v12 = 2112;
    id v13 = v9;
    __int16 v14 = 2112;
    id v15 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "conversationLink was removed since it was not needed anymore {pseudonym: %@, success: %@, error: %@}",  (uint8_t *)&v10,  0x20u);
  }
}

void sub_1000F9644(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    int v12 = 138412290;
    uint64_t v13 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "removeConversationWithUUID: %@",  (uint8_t *)&v12,  0xCu);
  }

  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) mutableConversationsByUUID]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKeyedSubscript:*(void *)(a1 + 32)]);

  if (v6)
  {
    [*(id *)(a1 + 40) conversationInvalidated:v6];
  }

  else
  {
    id v7 = sub_1001704C4();
    uint64_t v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      int v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) mutableConversationsByUUID]);
      uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v10 allKeys]);
      int v12 = 138412546;
      uint64_t v13 = v9;
      __int16 v14 = 2112;
      id v15 = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "[WARN] Could not find conversation with conversationUUID %@. All conversation UUIDs: %@",  (uint8_t *)&v12,  0x16u);
    }
  }
}

void sub_1000F9870(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) mutableConversationsByUUID]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) UUID]);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v2 objectForKeyedSubscript:v3]);

  if (v4)
  {
    [v4 addAliasesToConversationContainer:*(void *)(a1 + 40) forBundleIdentifier:*(void *)(a1 + 48)];
  }

  else
  {
    id v5 = sub_1001704C4();
    id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      id v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) UUID]);
      uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) mutableConversationsByUUID]);
      uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v8 allKeys]);
      int v10 = 138412546;
      uint64_t v11 = v7;
      __int16 v12 = 2112;
      uint64_t v13 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "[WARN] Could not find conversation for container with UUID %@. All conversation UUIDs: %@",  (uint8_t *)&v10,  0x16u);
    }
  }
}

void sub_1000F9A74(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    int v12 = 138412290;
    uint64_t v13 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "includeMetricsReport onConversationWithUUID: %@",  (uint8_t *)&v12,  0xCu);
  }

  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) mutableConversationsByUUID]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKeyedSubscript:*(void *)(a1 + 32)]);

  if (v6)
  {
    id v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) reportingController]);
    uint64_t v16 = *(void *)(a1 + 48);
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v16, 1LL));
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v6 tuConversation]);
    [v7 groupActivitiesReportsReceived:v8 forConversation:v9];
LABEL_7:

    goto LABEL_8;
  }

  id v10 = sub_1001704C4();
  id v7 = (void *)objc_claimAutoreleasedReturnValue(v10);
  if (os_log_type_enabled((os_log_t)v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v11 = *(void *)(a1 + 32);
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) mutableConversationsByUUID]);
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v8 allKeys]);
    int v12 = 138412546;
    uint64_t v13 = v11;
    __int16 v14 = 2112;
    id v15 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v7,  OS_LOG_TYPE_DEFAULT,  "[WARN] Dropping metrics report, could not find conversation with conversationUUID %@. All conversation UUIDs: %@",  (uint8_t *)&v12,  0x16u);
    goto LABEL_7;
  }

void sub_1000F9CE4(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) mutableConversationsByUUID]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 objectForKeyedSubscript:*(void *)(a1 + 40)]);

  if (!v3) {
    goto LABEL_20;
  }
  __int128 v27 = 0u;
  __int128 v28 = 0u;
  __int128 v25 = 0u;
  __int128 v26 = 0u;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 tuActivitySessions]);
  id v5 = [v4 countByEnumeratingWithState:&v25 objects:v29 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v26;
LABEL_4:
    uint64_t v8 = 0LL;
    while (1)
    {
      if (*(void *)v26 != v7) {
        objc_enumerationMutation(v4);
      }
      uint64_t v9 = *(void **)(*((void *)&v25 + 1) + 8 * v8);
      if ([v9 state] == (id)1)
      {
        id v10 = (void *)objc_claimAutoreleasedReturnValue([v9 activity]);
        unsigned int v11 = [v10 isScreenSharingActivity];

        if (v11) {
          break;
        }
      }

      if (v6 == (id)++v8)
      {
        id v6 = [v4 countByEnumeratingWithState:&v25 objects:v29 count:16];
        if (v6) {
          goto LABEL_4;
        }
        goto LABEL_11;
      }
    }

    if (!*(void *)(a1 + 48)) {
      goto LABEL_13;
    }
  }

  else
  {
LABEL_11:

    if (!*(void *)(a1 + 48))
    {
      int v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) featureFlags]);
      unsigned __int8 v13 = [v12 avLessSharePlayEnabled];

      if ((v13 & 1) == 0)
      {
LABEL_13:
        id v14 = sub_1001704C4();
        id v15 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
        if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
          sub_1002B6300();
        }

        uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(+[TUCallCenter sharedInstance](&OBJC_CLASS___TUCallCenter, "sharedInstance"));
        id v17 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v16 queue]);
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472LL;
        block[2] = sub_1000F9FB4;
        block[3] = &unk_1003D7730;
        id v24 = v3;
        dispatch_async(v17, block);

        goto LABEL_20;
      }
    }
  }

  __int16 v18 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) mutableConversationsRequestingUpgradeWithPreferences]);
  __int128 v19 = (void *)objc_claimAutoreleasedReturnValue([v18 objectForKey:*(void *)(a1 + 40)]);

  if (!v19)
  {
    __int128 v20 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) mutableConversationsRequestingUpgradeWithPreferences]);
    uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue( +[TUConversationInvitationPreference incomingCallInvitationPreferences]( &OBJC_CLASS___TUConversationInvitationPreference,  "incomingCallInvitationPreferences"));
    [v20 setObject:v21 forKey:*(void *)(a1 + 40)];
  }

  id v22 = [v3 avMode];
  [v3 setLocalParticipantAudioVideoMode:*(void *)(a1 + 48) presentationMode:*(void *)(a1 + 56)];
  [v3 setVideoEnabled:*(void *)(a1 + 48) == 2];
  [*(id *)(a1 + 32) notifyDelegatesOfAVModeChanged:v22 toAVMode:*(void *)(a1 + 48) forConversation:v3];
LABEL_20:
}

void sub_1000F9FB4(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[TUCallCenter sharedInstance](&OBJC_CLASS___TUCallCenter, "sharedInstance"));
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) groupUUID]);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v2 callsWithGroupUUID:v3]);

  __int128 v16 = 0u;
  __int128 v17 = 0u;
  __int128 v14 = 0u;
  __int128 v15 = 0u;
  id v5 = v4;
  id v6 = [v5 countByEnumeratingWithState:&v14 objects:v19 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v15;
    do
    {
      uint64_t v9 = 0LL;
      do
      {
        if (*(void *)v15 != v8) {
          objc_enumerationMutation(v5);
        }
        uint64_t v10 = *(void *)(*((void *)&v14 + 1) + 8LL * (void)v9);
        id v11 = sub_1001704C4();
        int v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
        if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
          sub_1002B632C((uint64_t)v18, v10);
        }

        unsigned __int8 v13 = (void *)objc_claimAutoreleasedReturnValue(+[TUCallCenter sharedInstance](&OBJC_CLASS___TUCallCenter, "sharedInstance", (void)v14));
        [v13 disconnectCall:v10];

        uint64_t v9 = (char *)v9 + 1;
      }

      while (v7 != v9);
      id v7 = [v5 countByEnumeratingWithState:&v14 objects:v19 count:16];
    }

    while (v7);
  }
}

void sub_1000FA1EC(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) mutableConversationsByUUID]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 objectForKeyedSubscript:*(void *)(a1 + 40)]);

  id v4 = sub_1001704C4();
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  id v6 = v5;
  if (v3)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Found conversation that we want to register the messagesGroupUUID on",  buf,  2u);
    }

    [v3 registerMessagesGroupAssociation];
    id v7 = objc_alloc(&OBJC_CLASS___CSDMessagingConversationMessage);
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v3 groupUUID]);
    id v6 = -[CSDMessagingConversationMessage initWithType:groupUUID:link:]( v7,  "initWithType:groupUUID:link:",  34LL,  v8,  0LL);

    v17[0] = IDSSendMessageOptionPublicMessageIntentKey;
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", 34LL));
    v18[0] = v9;
    v17[1] = IDSSendMessageOptionQueueOneIdentifierKey;
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s conversationGroupUUIDString](v6, "conversationGroupUUIDString"));
    id v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", 34LL));
    int v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", @"%@:%@", v10, v11));
    v18[1] = v12;
    unsigned __int8 v13 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v18,  v17,  2LL));

    __int128 v14 = *(void **)(a1 + 32);
    __int128 v15 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s data](v6, "data"));
    [v14 broadcastData:v15 onConversation:v3 additionalOptions:v13];
  }

  else if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
  {
    sub_1002B637C();
  }
}

void sub_1000FA644( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_1000FA670(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained cleanupExpiredPendingConversations];
    id WeakRetained = v2;
  }
}

void sub_1000FACD0(uint64_t a1)
{
  char v2 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");
  id v3 = *(void **)(a1 + 32);
  if ((v2 & 1) != 0)
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    if ([v3 shouldHandleUpdateForProvider:v4])
    {
    }

    else
    {
      char v5 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");

      if ((v5 & 1) != 0) {
        return;
      }
    }
  }

  else if ((objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:") & 1) != 0)
  {
    return;
  }

  id v6 = sub_1001704C4();
  id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    int v10 = 138412546;
    uint64_t v11 = v8;
    __int16 v12 = 2112;
    unsigned __int8 v13 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Delegate should handle conversation update: %@ for provider: %@",  (uint8_t *)&v10,  0x16u);
  }

  [*(id *)(a1 + 32) conversationManager:*(void *)(a1 + 48) conversationChanged:*(void *)(a1 + 40)];
}

id sub_1000FAE14(uint64_t a1)
{
  return [*(id *)(a1 + 32) conversationManager:*(void *)(a1 + 40) conversationChanged:*(void *)(a1 + 48)];
}

void sub_1000FB058(uint64_t a1)
{
  char v2 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");
  id v3 = *(void **)(a1 + 32);
  if ((v2 & 1) != 0)
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    if ([v3 shouldHandleUpdateForProvider:v4])
    {
    }

    else
    {
      char v5 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");

      if ((v5 & 1) != 0) {
        return;
      }
    }
  }

  else if ((objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:") & 1) != 0)
  {
    return;
  }

  id v6 = sub_1001704C4();
  id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    int v10 = 138412546;
    uint64_t v11 = v8;
    __int16 v12 = 2112;
    unsigned __int8 v13 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Delegate should handle conversation update: %@ for provider: %@",  (uint8_t *)&v10,  0x16u);
  }

  [*(id *)(a1 + 32) conversationManager:*(void *)(a1 + 48) connectionDidStartForConversation:*(void *)(a1 + 40)];
}

void sub_1000FB3A0(id a1, BOOL a2, NSError *a3)
{
  BOOL v3 = a2;
  id v4 = a3;
  id v5 = sub_1001704C4();
  id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    id v7 = @"NO";
    if (v3) {
      id v7 = @"YES";
    }
    int v8 = 138412546;
    uint64_t v9 = v7;
    __int16 v10 = 2112;
    uint64_t v11 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "conversationLink finished removing after call was invalidated {success: %@, error: %@}",  (uint8_t *)&v8,  0x16u);
  }
}

void sub_1000FBE9C(id *a1)
{
  char v2 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([a1[4] queue]);
  dispatch_assert_queue_V2(v2);

  __int128 v20 = 0u;
  __int128 v21 = 0u;
  __int128 v18 = 0u;
  __int128 v19 = 0u;
  BOOL v3 = (void *)objc_claimAutoreleasedReturnValue([a1[4] delegateToQueue]);
  id v4 = [v3 countByEnumeratingWithState:&v18 objects:v22 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v19;
    do
    {
      for (i = 0LL; i != v5; i = (char *)i + 1)
      {
        if (*(void *)v19 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = *(void *)(*((void *)&v18 + 1) + 8LL * (void)i);
        if ((objc_opt_respondsToSelector( v8,  "conversationManager:reportedHandedOffConversation:replacedByIdentifier:localizedHandoffRecipientDeviceCategory:") & 1) != 0)
        {
          uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([a1[5] tuConversation]);
          __int16 v10 = (void *)objc_claimAutoreleasedReturnValue([a1[4] delegateToQueue]);
          uint64_t v11 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v10 objectForKey:v8]);

          block[0] = _NSConcreteStackBlock;
          block[1] = 3221225472LL;
          block[2] = sub_1000FC088;
          block[3] = &unk_1003D7B00;
          void block[4] = v8;
          id v14 = v9;
          id v15 = a1[4];
          id v16 = a1[6];
          id v17 = a1[7];
          id v12 = v9;
          dispatch_async(v11, block);
        }
      }

      id v5 = [v3 countByEnumeratingWithState:&v18 objects:v22 count:16];
    }

    while (v5);
  }
}

void sub_1000FC088(uint64_t a1)
{
  char v2 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");
  BOOL v3 = *(void **)(a1 + 32);
  if ((v2 & 1) != 0)
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    if ([v3 shouldHandleUpdateForProvider:v4])
    {
    }

    else
    {
      char v5 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");

      if ((v5 & 1) != 0) {
        return;
      }
    }
  }

  else if ((objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:") & 1) != 0)
  {
    return;
  }

  id v6 = sub_1001704C4();
  id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    int v10 = 138412546;
    uint64_t v11 = v8;
    __int16 v12 = 2112;
    unsigned __int8 v13 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Delegate should handle conversation update: %@ for provider: %@",  (uint8_t *)&v10,  0x16u);
  }

  objc_msgSend( *(id *)(a1 + 32),  "conversationManager:reportedHandedOffConversation:replacedByIdentifier:localizedHandoffRecipientDeviceCategory:",  *(void *)(a1 + 48),  *(void *)(a1 + 40),  objc_msgSend(*(id *)(a1 + 56), "identifier"),  *(void *)(a1 + 64));
}

void sub_1000FC1E4(uint64_t a1)
{
  char v2 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");
  BOOL v3 = *(void **)(a1 + 32);
  if ((v2 & 1) != 0)
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    if ([v3 shouldHandleUpdateForProvider:v4])
    {
    }

    else
    {
      char v5 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");

      if ((v5 & 1) != 0) {
        return;
      }
    }
  }

  else if ((objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:") & 1) != 0)
  {
    return;
  }

  id v6 = sub_1001704C4();
  id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    int v10 = 138412546;
    uint64_t v11 = v8;
    __int16 v12 = 2112;
    unsigned __int8 v13 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Delegate should handle conversation update: %@ for provider: %@",  (uint8_t *)&v10,  0x16u);
  }

  [*(id *)(a1 + 32) conversationManager:*(void *)(a1 + 48) reportedRemoteDoesHandedOffForConversation:*(void *)(a1 + 40)];
}

void sub_1000FC328(uint64_t a1)
{
  char v2 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");
  BOOL v3 = *(void **)(a1 + 32);
  if ((v2 & 1) != 0)
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    if ([v3 shouldHandleUpdateForProvider:v4])
    {
    }

    else
    {
      char v5 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");

      if ((v5 & 1) != 0) {
        return;
      }
    }
  }

  else if ((objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:") & 1) != 0)
  {
    return;
  }

  id v6 = sub_1001704C4();
  id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    int v10 = 138412546;
    uint64_t v11 = v8;
    __int16 v12 = 2112;
    unsigned __int8 v13 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Delegate should handle conversation update: %@ for provider: %@",  (uint8_t *)&v10,  0x16u);
  }

  [*(id *)(a1 + 32) conversationManager:*(void *)(a1 + 48) conversation:*(void *)(a1 + 40) addedActiveParticipant:*(void *)(a1 + 56)];
}

void sub_1000FCE0C(uint64_t a1)
{
  char v2 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");
  BOOL v3 = *(void **)(a1 + 32);
  if ((v2 & 1) != 0)
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    if ([v3 shouldHandleUpdateForProvider:v4])
    {
    }

    else
    {
      char v5 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");

      if ((v5 & 1) != 0) {
        return;
      }
    }
  }

  else if ((objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:") & 1) != 0)
  {
    return;
  }

  id v6 = sub_1001704C4();
  id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    int v10 = 138412546;
    uint64_t v11 = v8;
    __int16 v12 = 2112;
    unsigned __int8 v13 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Delegate should handle conversation update: %@ for provider: %@",  (uint8_t *)&v10,  0x16u);
  }

  [*(id *)(a1 + 32) conversationManager:*(void *)(a1 + 48) conversation:*(void *)(a1 + 40) removedActiveParticipant:*(void *)(a1 + 56)];
}

void sub_1000FCF50(uint64_t a1)
{
  char v2 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");
  BOOL v3 = *(void **)(a1 + 32);
  if ((v2 & 1) != 0)
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    if ([v3 shouldHandleUpdateForProvider:v4])
    {
    }

    else
    {
      char v5 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");

      if ((v5 & 1) != 0) {
        return;
      }
    }
  }

  else if ((objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:") & 1) != 0)
  {
    return;
  }

  id v6 = sub_1001704C4();
  id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    int v10 = 138412546;
    uint64_t v11 = v8;
    __int16 v12 = 2112;
    unsigned __int8 v13 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Delegate should handle conversation update: %@ for provider: %@",  (uint8_t *)&v10,  0x16u);
  }

  [*(id *)(a1 + 32) conversationManager:*(void *)(a1 + 48) conversation:*(void *)(a1 + 40) removedActiveParticipant:*(void *)(a1 + 56) withReason:*(void *)(a1 + 64)];
}

void sub_1000FD2C8(uint64_t a1)
{
  char v2 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");
  BOOL v3 = *(void **)(a1 + 32);
  if ((v2 & 1) != 0)
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    if ([v3 shouldHandleUpdateForProvider:v4])
    {
    }

    else
    {
      char v5 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");

      if ((v5 & 1) != 0) {
        return;
      }
    }
  }

  else if ((objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:") & 1) != 0)
  {
    return;
  }

  id v6 = sub_1001704C4();
  id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    int v10 = 138412546;
    uint64_t v11 = v8;
    __int16 v12 = 2112;
    unsigned __int8 v13 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Delegate should handle conversation update: %@ for provider: %@",  (uint8_t *)&v10,  0x16u);
  }

  [*(id *)(a1 + 32) conversationManager:*(void *)(a1 + 48) conversationChanged:*(void *)(a1 + 40)];
}

void sub_1000FD604(uint64_t a1)
{
  char v2 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");
  BOOL v3 = *(void **)(a1 + 32);
  if ((v2 & 1) != 0)
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    if ([v3 shouldHandleUpdateForProvider:v4])
    {
    }

    else
    {
      char v5 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");

      if ((v5 & 1) != 0) {
        return;
      }
    }
  }

  else if ((objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:") & 1) != 0)
  {
    return;
  }

  id v6 = sub_1001704C4();
  id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    int v14 = 138412546;
    uint64_t v15 = v8;
    __int16 v16 = 2112;
    id v17 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Delegate should handle conversation update: %@ for provider: %@",  (uint8_t *)&v14,  0x16u);
  }

  int v10 = *(void **)(a1 + 32);
  uint64_t v11 = *(void *)(a1 + 40);
  uint64_t v12 = *(void *)(a1 + 48);
  unsigned __int8 v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) tuConversationParticipant]);
  [v10 conversationManager:v12 conversationScreenSharingChanged:v11 forParticipant:v13];
}

void sub_1000FDA30(uint64_t a1)
{
  char v2 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");
  BOOL v3 = *(void **)(a1 + 32);
  if ((v2 & 1) != 0)
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    if ([v3 shouldHandleUpdateForProvider:v4])
    {
    }

    else
    {
      char v5 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");

      if ((v5 & 1) != 0) {
        return;
      }
    }
  }

  else if ((objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:") & 1) != 0)
  {
    return;
  }

  id v6 = sub_1001704C4();
  id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    int v10 = 138412546;
    uint64_t v11 = v8;
    __int16 v12 = 2112;
    unsigned __int8 v13 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Delegate should handle conversation update: %@ for provider: %@",  (uint8_t *)&v10,  0x16u);
  }

  [*(id *)(a1 + 32) conversationManager:*(void *)(a1 + 48) conversation:*(void *)(a1 + 40) mediaPrioritiesDidChangeForParticipant:*(void *)(a1 + 56)];
}

void sub_1000FDDA8(uint64_t a1)
{
  char v2 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");
  BOOL v3 = *(void **)(a1 + 32);
  if ((v2 & 1) != 0)
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    if ([v3 shouldHandleUpdateForProvider:v4])
    {
    }

    else
    {
      char v5 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");

      if ((v5 & 1) != 0) {
        return;
      }
    }
  }

  else if ((objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:") & 1) != 0)
  {
    return;
  }

  id v6 = sub_1001704C4();
  id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    int v10 = 138412546;
    uint64_t v11 = v8;
    __int16 v12 = 2112;
    unsigned __int8 v13 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Delegate should handle conversation update: %@ for provider: %@",  (uint8_t *)&v10,  0x16u);
  }

  [*(id *)(a1 + 32) conversationManager:*(void *)(a1 + 48) conversation:*(void *)(a1 + 40) participant:*(void *)(a1 + 56) didReact:*(void *)(a1 + 64)];
}

void sub_1000FE0FC(uint64_t a1)
{
  char v2 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");
  BOOL v3 = *(void **)(a1 + 32);
  if ((v2 & 1) != 0)
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    if ([v3 shouldHandleUpdateForProvider:v4])
    {
    }

    else
    {
      char v5 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");

      if ((v5 & 1) != 0) {
        return;
      }
    }
  }

  else if ((objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:") & 1) != 0)
  {
    return;
  }

  id v6 = sub_1001704C4();
  id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    int v10 = 138412546;
    uint64_t v11 = v8;
    __int16 v12 = 2112;
    unsigned __int8 v13 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Delegate should handle conversation update: %@ for provider: %@",  (uint8_t *)&v10,  0x16u);
  }

  [*(id *)(a1 + 32) conversationManager:*(void *)(a1 + 48) conversation:*(void *)(a1 + 40) participantDidStopReacting:*(void *)(a1 + 56)];
}

void sub_1000FE728(uint64_t a1)
{
  char v2 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");
  BOOL v3 = *(void **)(a1 + 32);
  if ((v2 & 1) != 0)
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    if ([v3 shouldHandleUpdateForProvider:v4])
    {
    }

    else
    {
      char v5 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");

      if ((v5 & 1) != 0) {
        return;
      }
    }
  }

  else if ((objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:") & 1) != 0)
  {
    return;
  }

  id v6 = sub_1001704C4();
  id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    int v10 = 138412546;
    uint64_t v11 = v8;
    __int16 v12 = 2112;
    unsigned __int8 v13 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Delegate should handle conversation update: %@ for provider: %@",  (uint8_t *)&v10,  0x16u);
  }

  [*(id *)(a1 + 32) conversationManager:*(void *)(a1 + 48) conversation:*(void *)(a1 + 40) failedWithContext:*(void *)(a1 + 56)];
}

void sub_1000FEA88(uint64_t a1)
{
  char v2 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");
  BOOL v3 = *(void **)(a1 + 32);
  if ((v2 & 1) != 0)
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    if ([v3 shouldHandleUpdateForProvider:v4])
    {
    }

    else
    {
      char v5 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");

      if ((v5 & 1) != 0) {
        return;
      }
    }
  }

  else if ((objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:") & 1) != 0)
  {
    return;
  }

  id v6 = sub_1001704C4();
  id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    int v10 = 138412546;
    uint64_t v11 = v8;
    __int16 v12 = 2112;
    unsigned __int8 v13 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Delegate should handle conversation update: %@ for provider: %@",  (uint8_t *)&v10,  0x16u);
  }

  [*(id *)(a1 + 32) conversationManager:*(void *)(a1 + 48) conversation:*(void *)(a1 + 40) receivedActivitySessionEvent:*(void *)(a1 + 56)];
}

void sub_1000FEF14(uint64_t a1)
{
  char v2 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");
  BOOL v3 = *(void **)(a1 + 32);
  if ((v2 & 1) != 0)
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    if ([v3 shouldHandleUpdateForProvider:v4])
    {
    }

    else
    {
      char v5 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");

      if ((v5 & 1) != 0) {
        return;
      }
    }
  }

  else if ((objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:") & 1) != 0)
  {
    return;
  }

  id v6 = sub_1001704C4();
  id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    int v10 = 138412546;
    uint64_t v11 = v8;
    __int16 v12 = 2112;
    unsigned __int8 v13 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Delegate should handle conversation update: %@ for provider: %@",  (uint8_t *)&v10,  0x16u);
  }

  [*(id *)(a1 + 32) conversationManager:*(void *)(a1 + 48) conversation:*(void *)(a1 + 40) didChangeStateForActivitySession:*(void *)(a1 + 56)];
}

void sub_1000FF2A4(uint64_t a1)
{
  char v2 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");
  BOOL v3 = *(void **)(a1 + 32);
  if ((v2 & 1) != 0)
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    if ([v3 shouldHandleUpdateForProvider:v4])
    {
    }

    else
    {
      char v5 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");

      if ((v5 & 1) != 0) {
        return;
      }
    }
  }

  else if ((objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:") & 1) != 0)
  {
    return;
  }

  id v6 = sub_1001704C4();
  id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    int v10 = 138412546;
    uint64_t v11 = v8;
    __int16 v12 = 2112;
    unsigned __int8 v13 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Delegate should handle conversation update: %@ for provider: %@",  (uint8_t *)&v10,  0x16u);
  }

  [*(id *)(a1 + 32) conversationManager:*(void *)(a1 + 48) conversation:*(void *)(a1 + 40) didChangeSceneAssociationForActivitySession:*(void *)(a1 + 56)];
}

void sub_1000FF66C(uint64_t a1)
{
  char v2 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");
  BOOL v3 = *(void **)(a1 + 32);
  if ((v2 & 1) != 0)
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    if ([v3 shouldHandleUpdateForProvider:v4])
    {
    }

    else
    {
      char v5 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");

      if ((v5 & 1) != 0) {
        return;
      }
    }
  }

  else if ((objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:") & 1) != 0)
  {
    return;
  }

  id v6 = sub_1001704C4();
  id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    int v10 = 138412546;
    uint64_t v11 = v8;
    __int16 v12 = 2112;
    unsigned __int8 v13 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Delegate should handle conversation update: %@ for provider: %@",  (uint8_t *)&v10,  0x16u);
  }

  [*(id *)(a1 + 32) conversationManager:*(void *)(a1 + 48) conversation:*(void *)(a1 + 40) appLaunchState:*(void *)(a1 + 64) forActivitySession:*(void *)(a1 + 56)];
}

void sub_1000FFCC8(uint64_t a1)
{
  char v2 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");
  BOOL v3 = *(void **)(a1 + 32);
  if ((v2 & 1) != 0)
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    if ([v3 shouldHandleUpdateForProvider:v4])
    {
    }

    else
    {
      char v5 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");

      if ((v5 & 1) != 0) {
        return;
      }
    }
  }

  else if ((objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:") & 1) != 0)
  {
    return;
  }

  id v6 = sub_1001704C4();
  id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    int v10 = 138412546;
    uint64_t v11 = v8;
    __int16 v12 = 2112;
    unsigned __int8 v13 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Delegate should handle conversation update: %@ for provider: %@",  (uint8_t *)&v10,  0x16u);
  }

  [*(id *)(a1 + 32) conversationManager:*(void *)(a1 + 48) conversation:*(void *)(a1 + 40) changedBytesOfDataUsed:*(void *)(a1 + 56)];
}

void sub_100100CC4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, char a38)
{
}

id sub_100100CF4(uint64_t a1, uint64_t a2)
{
  id result = objc_retainBlock(*(id *)(a2 + 40));
  *(void *)(a1 + 40) = result;
  return result;
}

void sub_100100D1C(uint64_t a1)
{
}

void sub_100100D24(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 56);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  _DWORD v7[2] = sub_100100DBC;
  v7[3] = &unk_1003DA250;
  void v7[4] = v2;
  __int128 v6 = *(_OWORD *)(a1 + 64);
  id v5 = (id)v6;
  __int128 v8 = v6;
  [v1 conversationManager:v2 requestedEndpointWithIdentifier:v3 activitySession:v4 completion:v7];
}

void sub_100100DBC(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) queue]);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100100E74;
  block[3] = &unk_1003DA228;
  id v9 = v3;
  __int128 v7 = *(_OWORD *)(a1 + 40);
  id v5 = (id)v7;
  __int128 v10 = v7;
  id v6 = v3;
  dispatch_async(v4, block);
}

void sub_100100E74(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    uint64_t v2 = *(void *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 40LL);
    if (v2)
    {
      (*(void (**)(void))(v2 + 16))();
      uint64_t v3 = *(void *)(*(void *)(a1 + 48) + 8LL);
      uint64_t v4 = *(void **)(v3 + 40);
      *(void *)(v3 + 40) = 0LL;
    }
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

uint64_t sub_100100EC8(uint64_t a1)
{
  uint64_t result = *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 40LL);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0LL);
  }
  return result;
}

void sub_100101240(uint64_t a1)
{
  char v2 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");
  uint64_t v3 = *(void **)(a1 + 32);
  if ((v2 & 1) != 0)
  {
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    if ([v3 shouldHandleUpdateForProvider:v4])
    {
    }

    else
    {
      char v5 = objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:");

      if ((v5 & 1) != 0) {
        return;
      }
    }
  }

  else if ((objc_opt_respondsToSelector(*(void *)(a1 + 32), "shouldHandleUpdateForProvider:") & 1) != 0)
  {
    return;
  }

  id v6 = sub_1001704C4();
  __int128 v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    id v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
    int v10 = 138412546;
    uint64_t v11 = v8;
    __int16 v12 = 2112;
    unsigned __int8 v13 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Delegate should handle conversation update: %@ for provider: %@",  (uint8_t *)&v10,  0x16u);
  }

  [*(id *)(a1 + 32) conversationManager:*(void *)(a1 + 48) remoteMembersChanged:*(void *)(a1 + 56) forConversation:*(void *)(a1 + 40)];
}

uint64_t sub_1001027C8(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    char v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInteger:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInteger:",  *(void *)(a1 + 64)));
    int v9 = 138412546;
    uint64_t v10 = v4;
    __int16 v11 = 2112;
    __int16 v12 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Retrying message (%@) for attempt #%@",  (uint8_t *)&v9,  0x16u);
  }

  id v6 = (void *)objc_claimAutoreleasedReturnValue(+[CSDReportingController sharedInstance](&OBJC_CLASS___CSDReportingController, "sharedInstance"));
  [v6 messageRetryStartedForConversationGroupUUID:*(void *)(a1 + 40)];

  if ([*(id *)(a1 + 48) type] == 4)
  {
    __int128 v7 = (void *)objc_claimAutoreleasedReturnValue(+[CSDReportingController sharedInstance](&OBJC_CLASS___CSDReportingController, "sharedInstance"));
    [v7 avcBlobRequestMessageRetryStartedForConversationGroupUUID:*(void *)(a1 + 40)];
  }

  return (*(uint64_t (**)(void))(*(void *)(a1 + 56) + 16LL))();
}

LABEL_109:
LABEL_110:
LABEL_111:

      goto LABEL_112;
    }

    __int128 v39 = sub_1001704C4();
    uint64_t v30 = (CSDMessagingConversationMessage *)objc_claimAutoreleasedReturnValue(v39);
    if (os_log_type_enabled((os_log_t)v30, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      uint64_t v38 = "[WARN] service:account:incomingData:fromID:context: Empty data. Dropping message.";
      goto LABEL_14;
    }
  }

  else
  {
    __int128 v37 = sub_1001704C4();
    uint64_t v30 = (CSDMessagingConversationMessage *)objc_claimAutoreleasedReturnValue(v37);
    if (os_log_type_enabled((os_log_t)v30, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      uint64_t v38 = "[WARN] service:account:incomingData:fromID:context: Empty from ID. Dropping message.";
LABEL_14:
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)v30, OS_LOG_TYPE_DEFAULT, v38, buf, 2u);
    }
  }

LABEL_112:
}

id sub_100103984(uint64_t a1)
{
  return [*(id *)(a1 + 32) _service:*(void *)(a1 + 40) account:*(void *)(a1 + 48) incomingData:*(void *)(a1 + 56) fromID:*(void *)(a1 + 64) context:*(void *)(a1 + 72) attemptCount:*(void *)(a1 + 80) + 1];
}

id sub_1001039A0(uint64_t a1)
{
  return [*(id *)(a1 + 32) _service:*(void *)(a1 + 40) account:*(void *)(a1 + 48) incomingData:*(void *)(a1 + 56) fromID:*(void *)(a1 + 64) context:*(void *)(a1 + 72) attemptCount:*(void *)(a1 + 80) + 1];
}

void sub_100103C10(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) queue]);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100103CBC;
  block[3] = &unk_1003D7828;
  char v5 = *(void **)(a1 + 40);
  void block[4] = *(void *)(a1 + 32);
  id v8 = v3;
  id v9 = v5;
  id v6 = v3;
  dispatch_async(v4, block);
}

id sub_100103CBC(uint64_t a1)
{
  return [*(id *)(a1 + 32) processGroupSessionParticipantUpdate:*(void *)(a1 + 40) context:*(void *)(a1 + 48)];
}

LABEL_255:
        v231 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s provider](v177, "provider"));
        v372 = v177;
        v343 = v123;
        if (v231)
        {
          v232 = (__CFString *)objc_claimAutoreleasedReturnValue(-[os_log_s provider](v177, "provider"));
          unsigned int v177 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[TUConversationProvider unknownProvider]( &OBJC_CLASS___TUConversationProvider,  "unknownProvider"));
          if ((-[__CFString isEqual:](v232, "isEqual:", v177) & 1) == 0)
          {

            goto LABEL_265;
          }

          v365 = v232;
        }

        v233 = (void *)objc_claimAutoreleasedReturnValue([v14 providerIdentifier]);
        v234 = [v233 length];

        if (v231)
        {
        }

        unsigned __int8 v13 = v358;
        if (!v234)
        {
LABEL_266:
          if (!v372)
          {
            id v24 = v354;
            char v103 = v350;
            char v102 = v375;
            uint64_t v123 = v343;

LABEL_374:
LABEL_375:

LABEL_376:
            __int16 v12 = v353;
            id v17 = v364;
            id v57 = (os_log_s *)v355;
LABEL_377:

            goto LABEL_378;
          }

          v240 = sub_1001704C4();
          v241 = (os_log_s *)objc_claimAutoreleasedReturnValue(v240);
          if (os_log_type_enabled(v241, OS_LOG_TYPE_DEFAULT))
          {
            else {
              v242 = @"NO";
            }
            else {
              v243 = @"NO";
            }
            *(_DWORD *)buf = 138412546;
            *(void *)v435 = v242;
            *(_WORD *)&v435[8] = 2112;
            *(void *)v436 = v243;
            _os_log_impl( (void *)&_mh_execute_header,  v241,  OS_LOG_TYPE_DEFAULT,  "isFromStorage: %@, participantUpdate.fromServer: %@",  buf,  0x16u);
          }

          v244 = v346;
          if (-[os_log_s isFromStorage](v372, "isFromStorage")
            && ([v13 fromServer] & 1) == 0)
          {
            v245 = sub_1001704C4();
            v246 = (os_log_s *)objc_claimAutoreleasedReturnValue(v245);
            if (os_log_type_enabled(v246, OS_LOG_TYPE_DEFAULT))
            {
              v247 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s UUID](v372, "UUID"));
              *(_DWORD *)buf = 138412290;
              *(void *)v435 = v247;
              _os_log_impl( (void *)&_mh_execute_header,  v246,  OS_LOG_TYPE_DEFAULT,  "Activating cached conversation with UUID: %@ since participants are joining.",  buf,  0xCu);
            }

            -[os_log_s setFromStorage:](v372, "setFromStorage:", 0LL);
            v248 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s messagesGroupUUID](v372, "messagesGroupUUID"));
            v249 = [v248 isEqual:v352];

            if (v249)
            {
              v250 = sub_1001704C4();
              v251 = (os_log_s *)objc_claimAutoreleasedReturnValue(v250);
              if (os_log_type_enabled(v251, OS_LOG_TYPE_DEFAULT))
              {
                v252 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s UUID](v372, "UUID"));
                *(_DWORD *)buf = 138412290;
                *(void *)v435 = v252;
                _os_log_impl( (void *)&_mh_execute_header,  v251,  OS_LOG_TYPE_DEFAULT,  "Updating remoteMembers for conversation with UUID: %@",  buf,  0xCu);
              }

              v253 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s remoteMembers](v372, "remoteMembers"));
              v254 = [v253 mutableCopy];

              [v254 unionSet:v350];
              v255 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s localMember](v372, "localMember"));
              [v254 removeObject:v255];

              v256 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet set](&OBJC_CLASS___NSSet, "set"));
              -[os_log_s addRemoteMembers:otherInvitedHandles:triggeredLocally:]( v372,  "addRemoteMembers:otherInvitedHandles:triggeredLocally:",  v254,  v256,  0LL);
            }
          }

          v257 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversationManager serverBag](v178, "serverBag"));
          if ([v257 isParticipantIDToURIIncludedInPush])
          {

            v258 = v372;
          }

          else
          {
            v259 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversationManager featureFlags](v178, "featureFlags"));
            v260 = [v259 participantIDToURIRemovedEnabled];

            v258 = v372;
            if ((v260 & 1) != 0) {
              goto LABEL_288;
            }
          }

          -[os_log_s setMemberIdentifiers:](v258, "setMemberIdentifiers:", v58);
LABEL_288:
          v261 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversationManager featureFlags](v178, "featureFlags"));
          if ([v261 shouldRingForIncomingCallEnabled])
          {
            v262 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversationManager serverBag](v178, "serverBag"));
            v263 = [v262 shouldRingForIncomingCallEnabled];

            if ((v263 & 1) != 0)
            {
              v264 = v358;
              goto LABEL_296;
            }
          }

          else
          {
          }

          v264 = v358;
          v265 = (void *)objc_claimAutoreleasedReturnValue( +[NSDate dateWithTimeIntervalSinceNow:]( &OBJC_CLASS___NSDate,  "dateWithTimeIntervalSinceNow:",  -30.0));
          v266 = (void *)objc_claimAutoreleasedReturnValue([v358 serverDate]);
          v267 = [v265 compare:v266];

          v264 = v358;
          if (v267 != (id)1) {
            goto LABEL_297;
          }
LABEL_296:
          if (-[os_log_s state](v372, "state") != (id)3)
          {
            v329 = sub_1001704C4();
            v269 = (os_log_s *)objc_claimAutoreleasedReturnValue(v329);
            if (os_log_type_enabled(v269, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)buf = 138412290;
              v274 = v372;
              *(void *)v435 = v372;
              _os_log_impl( (void *)&_mh_execute_header,  v269,  OS_LOG_TYPE_DEFAULT,  "Not ringing for cached conversation since message is from server storage and is older than 30 seconds. Conversation: %@",  buf,  0xCu);
              v275 = 1LL;
              goto LABEL_299;
            }

            v275 = 1LL;
LABEL_301:
            v276 = v357;
            v274 = v372;
LABEL_302:

            -[os_log_s setFromStorage:](v274, "setFromStorage:", v275);
            v277 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversationManager featureFlags](v178, "featureFlags"));
            if ([v277 shouldRingForIncomingCallEnabled])
            {
              v278 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversationManager serverBag](v178, "serverBag"));
              v279 = [v278 shouldRingForIncomingCallEnabled];

              v274 = v372;
              if ((v279 & 1) != 0)
              {
                v280 = -[CSDConversationManager _shouldRingForIncomingCallWithHandle:conversation:isFromPendingMessage:isOldMessage:isLetMeInApproved:]( v178,  "_shouldRingForIncomingCallWithHandle:conversation:isFromPendingMessage:isOldMessage:isLetMeInApproved:",  v377,  v372,  v360,  v341 == (id)1,  [v276 isLetMeInApproved]);
                goto LABEL_313;
              }
            }

            else
            {
            }

            v281 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s provider](v274, "provider"));
            if (-[CSDConversationManager isValidLocalHandle:forProvider:]( v178,  "isValidLocalHandle:forProvider:",  v377,  v281))
            {
              v280 = 0;
            }

            else
            {
              v282 = (void *)objc_claimAutoreleasedReturnValue(-[CSDConversationManager invitationResolver](v178, "invitationResolver"));
              v283 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s tuConversation](v274, "tuConversation"));
              v284 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s localMember](v274, "localMember"));
              v285 = (void *)objc_claimAutoreleasedReturnValue([v284 handle]);
              else {
                v280 = 0;
              }

              v244 = v346;
              v276 = v357;
            }

LABEL_313:
            v286 = [v276 isLetMeInApproved];
            if ([v358 participantUpdateType] != (id)1
              || (-[os_log_s isLocallyCreated](v372, "isLocallyCreated") & 1) != 0
              || -[os_log_s state](v372, "state"))
            {
              v366 = 0;
            }

            else
            {
              v366 = obj & (-[os_log_s hasJoined](v372, "hasJoined") ^ 1);
            }

            v287 = v280 & ~v286;
            v288 = -[CSDConversationManager _shouldNotifyDelegatesOfMessage:localHandleAdded:isFromStorage:]( v178,  "_shouldNotifyDelegatesOfMessage:localHandleAdded:isFromStorage:",  v276,  v244,  -[os_log_s isFromStorage](v372, "isFromStorage"));
            v289 = sub_1001704C4();
            v290 = (os_log_s *)objc_claimAutoreleasedReturnValue(v289);
            if (os_log_type_enabled(v290, OS_LOG_TYPE_DEFAULT))
            {
              if (v288) {
                v291 = @"YES";
              }
              else {
                v291 = @"NO";
              }
              if (v366) {
                v292 = @"YES";
              }
              else {
                v292 = @"NO";
              }
              objb = v292;
              if (v287) {
                v293 = @"YES";
              }
              else {
                v293 = @"NO";
              }
              v361 = v293;
              v294 = v287;
              v295 = [v357 type];
              v296 = -[os_log_s isFromStorage](v372, "isFromStorage");
              *(_DWORD *)buf = 138413314;
              if (v296) {
                v297 = @"YES";
              }
              else {
                v297 = @"NO";
              }
              *(void *)v435 = v291;
              *(_WORD *)&v435[8] = 2112;
              *(void *)v436 = objb;
              uint64_t v178 = v369;
              *(_WORD *)&v436[8] = 2112;
              v437 = v361;
              v438 = 1024;
              *(_DWORD *)v439 = v295;
              v287 = v294;
              *(_WORD *)&v439[4] = 2112;
              *(void *)&v439[6] = v297;
              _os_log_impl( (void *)&_mh_execute_header,  v290,  OS_LOG_TYPE_DEFAULT,  "shouldNotifyDelegatesOfMessage: %@, isJoinUpdateForNewConverstion: %@, shouldNotifyDelegatesOfNewConvers ation: %@, message.type: %d, isFromStorage: %@",  buf,  0x30u);
            }

            if (v288)
            {
              v298 = v372;
              -[CSDConversationManager notifyDelegatesOfMessage:fromHandle:forConversation:withUpdate:]( v178,  "notifyDelegatesOfMessage:fromHandle:forConversation:withUpdate:",  v357,  v377,  v372,  v358);
              v299 = v359;
            }

            else
            {
              v299 = v359;
              v298 = v372;
              if ((v366 & v287) == 1) {
                -[CSDConversationManager notifyDelegatesOfNewConversation:fromHandle:]( v178,  "notifyDelegatesOfNewConversation:fromHandle:",  v372,  v377);
              }
            }

            v300 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s remoteMembers](v298, "remoteMembers"));
            if ([v300 count] == (id)1
              && [v299 hasVideo]
              && ([v299 video] & 1) == 0
              && -[os_log_s isVideo](v298, "isVideo"))
            {

              if (v344)
              {
                v301 = sub_1001704C4();
                v302 = (os_log_s *)objc_claimAutoreleasedReturnValue(v301);
                if (os_log_type_enabled(v302, OS_LOG_TYPE_DEFAULT))
                {
                  *(_WORD *)buf = 0;
                  _os_log_impl( (void *)&_mh_execute_header,  v302,  OS_LOG_TYPE_DEFAULT,  "Downgrading U+1 call to audio because remote party joined as audio-only (remote members count is 1, join context had video=NO, conversation had video=YES, and not AVLess)",  buf,  2u);
                }

                -[os_log_s setVideo:](v298, "setVideo:", 0LL);
              }
            }

            else
            {
            }

            v384 = 0u;
            v385 = 0u;
            v382 = 0u;
            v383 = 0u;
            v367 = v353;
            v303 = [v367 countByEnumeratingWithState:&v382 objects:v428 count:16];
            if (v303)
            {
              v304 = v303;
              v305 = *(void *)v383;
              do
              {
                for (i1 = 0LL; i1 != v304; i1 = (char *)i1 + 1)
                {
                  if (*(void *)v383 != v305) {
                    objc_enumerationMutation(v367);
                  }
                  v307 = *(void **)(*((void *)&v382 + 1) + 8LL * (void)i1);
                  v308 = -[os_log_s localParticipantIdentifier](v298, "localParticipantIdentifier");
                  if (v308 != [v307 identifier])
                  {
                    -[os_log_s updateConversationParticipantToHaveMatchingSiriDisplayName:]( v298,  "updateConversationParticipantToHaveMatchingSiriDisplayName:",  v307);
                    -[CSDConversationManager removePendingMemberMatchingActiveParticipant:conversation:]( v178,  "removePendingMemberMatchingActiveParticipant:conversation:",  v307,  v298);
                    v309 = (void *)objc_claimAutoreleasedReturnValue([v307 handle]);
                    v310 = -[os_log_s containsMemberWithHandle:](v298, "containsMemberWithHandle:", v309);

                    if (v310)
                    {
                      -[os_log_s addActiveParticipant:](v298, "addActiveParticipant:", v307);
                    }

                    else
                    {
                      v311 = sub_1001704C4();
                      v312 = (os_log_s *)objc_claimAutoreleasedReturnValue(v311);
                      if (os_log_type_enabled(v312, OS_LOG_TYPE_DEFAULT))
                      {
                        v313 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s remoteMembers](v298, "remoteMembers"));
                        v314 = (__CFString *)objc_claimAutoreleasedReturnValue(-[os_log_s lightweightMembers](v298, "lightweightMembers"));
                        *(_DWORD *)buf = 138412802;
                        *(void *)v435 = v307;
                        *(_WORD *)&v435[8] = 2112;
                        *(void *)v436 = v313;
                        *(_WORD *)&v436[8] = 2112;
                        v437 = v314;
                        _os_log_impl( (void *)&_mh_execute_header,  v312,  OS_LOG_TYPE_DEFAULT,  "[WARN] activeParticipant: %@ is not in the validConversation: %@, lightweight members: %@",  buf,  0x20u);

                        v298 = v372;
                      }
                    }

                    uint64_t v178 = v369;
                    -[CSDConversationManager prepareAdditionOfActiveParticipant:toInvitedMembersForLinkOnConversation:]( v369,  "prepareAdditionOfActiveParticipant:toInvitedMembersForLinkOnConversation:",  v307,  v298);
                  }
                }

                v304 = [v367 countByEnumeratingWithState:&v382 objects:v428 count:16];
              }

              while (v304);
            }

            v380 = 0u;
            v381 = 0u;
            v378 = 0u;
            v379 = 0u;
            v315 = (void *)objc_claimAutoreleasedReturnValue([v357 activitySessions]);
            v316 = [v315 countByEnumeratingWithState:&v378 objects:v427 count:16];
            unsigned __int8 v13 = v358;
            uint64_t v123 = v343;
            if (v316)
            {
              v317 = v316;
              v318 = *(void *)v379;
              do
              {
                for (i2 = 0LL; i2 != v317; i2 = (char *)i2 + 1)
                {
                  if (*(void *)v379 != v318) {
                    objc_enumerationMutation(v315);
                  }
                  v320 =  -[CSDConversationManager createActivitySession:onConversation:fromHandle:]( v178,  "createActivitySession:onConversation:fromHandle:",  *(void *)(*((void *)&v378 + 1) + 8LL * (void)i2),  v372,  v377);
                }

                v317 = [v315 countByEnumeratingWithState:&v378 objects:v427 count:16];
              }

              while (v317);
            }

            id v22 = v357;
            v321 = (void *)objc_claimAutoreleasedReturnValue([v357 stagedActivitySession]);

            if (v321)
            {
              v322 = (void *)objc_claimAutoreleasedReturnValue([v357 stagedActivitySession]);
              v323 = (void *)objc_claimAutoreleasedReturnValue([v322 tuConversationActivitySession]);
              v324 = -[os_log_s setStagedActivitySessionForActivitySession:]( v372,  "setStagedActivitySessionForActivitySession:",  v323);

              int v14 = v359;
              if ((v324 & 1) == 0)
              {
                v325 = sub_1001704C4();
                v326 = (os_log_s *)objc_claimAutoreleasedReturnValue(v325);
                v345 = v326;
                if (os_log_type_enabled(v326, OS_LOG_TYPE_DEFAULT))
                {
                  v327 = (void *)objc_claimAutoreleasedReturnValue([v357 stagedActivitySession]);
                  v328 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s UUID](v372, "UUID"));
                  *(_DWORD *)buf = 138412546;
                  *(void *)v435 = v327;
                  *(_WORD *)&v435[8] = 2112;
                  *(void *)v436 = v328;
                  _os_log_impl( (void *)&_mh_execute_header,  v326,  OS_LOG_TYPE_DEFAULT,  "[WARN] Couldn't set staged activity session %@ on conversation UUID %@",  buf,  0x16u);
                }

LABEL_369:
                id v24 = v354;
                char v103 = v350;
LABEL_370:
                char v102 = v375;

LABEL_373:
                goto LABEL_374;
              }
            }

            else
            {
              int v14 = v359;
            }

            id v24 = v354;
            char v103 = v350;
            char v102 = v375;
            goto LABEL_373;
          }

LABEL_378:
}

void sub_10010859C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
}

void sub_1001085CC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    __int128 v21 = 0u;
    __int128 v22 = 0u;
    __int128 v19 = 0u;
    __int128 v20 = 0u;
    id v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "kickedMembers", 0));
    id v4 = [v3 countByEnumeratingWithState:&v19 objects:v29 count:16];
    if (v4)
    {
      id v5 = v4;
      uint64_t v6 = *(void *)v20;
LABEL_4:
      uint64_t v7 = 0LL;
      while (1)
      {
        if (*(void *)v20 != v6) {
          objc_enumerationMutation(v3);
        }
        id v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v19 + 1) + 8 * v7) handle]);
        unsigned __int8 v9 = [v8 isEquivalentToHandle:*(void *)(a1 + 40)];

        if ((v9 & 1) != 0) {
          break;
        }
        if (v5 == (id)++v7)
        {
          id v5 = [v3 countByEnumeratingWithState:&v19 objects:v29 count:16];
          if (v5) {
            goto LABEL_4;
          }
          goto LABEL_10;
        }
      }

      id v17 = sub_1001704C4();
      uint64_t v15 = (os_log_s *)objc_claimAutoreleasedReturnValue(v17);
      if (!os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_16;
      }
      uint64_t v18 = *(void *)(a1 + 40);
      __int16 v16 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) UUID]);
      *(_DWORD *)buf = 138412546;
      uint64_t v24 = v18;
      __int16 v25 = 2112;
      __int128 v26 = v16;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "It would have been time to add LMI approved handle %@ on conversation UUID %@ to link's invited members, but they were kicked.",  buf,  0x16u);
    }

    else
    {
LABEL_10:

      id v10 = sub_1001704C4();
      __int16 v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v12 = *(void *)(a1 + 40);
        unsigned __int8 v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) link]);
        int v14 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) UUID]);
        *(_DWORD *)buf = 138412802;
        uint64_t v24 = v12;
        __int16 v25 = 2112;
        __int128 v26 = v13;
        __int16 v27 = 2112;
        __int128 v28 = v14;
        _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "Adding LMI approved handle %@ to invited member handles for link %@ after their kick timeout elapsed for conversation UUID %@",  buf,  0x20u);
      }

      uint64_t v15 = (os_log_s *)objc_claimAutoreleasedReturnValue(+[NSSet setWithObject:](&OBJC_CLASS___NSSet, "setWithObject:", *(void *)(a1 + 40)));
      __int16 v16 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) link]);
      [WeakRetained addInvitedMemberHandles:v15 toConversationLink:v16 completionHandler:0];
    }

LABEL_16:
  }
}

id sub_100108B20(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    unsigned int v4 = [*(id *)(a1 + 32) count];
    v6[0] = 67109120;
    v6[1] = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "linkManager:updatedLinksFromSync: -- updating delegates {linkDescriptors.count: %d}",  (uint8_t *)v6,  8u);
  }

  return [*(id *)(a1 + 40) notifyDelegatesOfChangedLinkDescriptors:*(void *)(a1 + 32)];
}

id sub_100108C68(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    unsigned int v4 = [*(id *)(a1 + 32) count];
    v6[0] = 67109120;
    v6[1] = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "linkManager:removedLinkDescriptorsFromIDSSignal: -- updating delegates {linkDescriptors.count: %d}",  (uint8_t *)v6,  8u);
  }

  return [*(id *)(a1 + 40) handleRemovedLinkDescriptors:*(void *)(a1 + 32)];
}

id sub_100108DB0(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    unsigned int v4 = [*(id *)(a1 + 32) count];
    uint64_t v5 = *(void *)(a1 + 32);
    v7[0] = 67109378;
    v7[1] = v4;
    __int16 v8 = 2112;
    uint64_t v9 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "linkManager:updatedLinkDescriptorsFromIDSSignal: -- updating delegates {linkDescriptors.count: %d} %@",  (uint8_t *)v7,  0x12u);
  }

  return [*(id *)(a1 + 40) notifyDelegatesOfChangedLinkDescriptors:*(void *)(a1 + 32)];
}

id sub_100108F08(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    unsigned int v4 = [*(id *)(a1 + 32) count];
    v6[0] = 67109120;
    v6[1] = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "linkManager:removedLinkDescriptorsFromValidityCheck: -- updating delegates {linkDescriptors.count: %d}",  (uint8_t *)v6,  8u);
  }

  return [*(id *)(a1 + 40) handleRemovedLinkDescriptors:*(void *)(a1 + 32)];
}

void sub_1001092B0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
}

void sub_1001092D4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained mutableConversationsByUUID]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) UUID]);
  unsigned int v4 = (void *)objc_claimAutoreleasedReturnValue([v2 objectForKeyedSubscript:v3]);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithObject:](&OBJC_CLASS___NSSet, "setWithObject:", *(void *)(a1 + 40)));
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet set](&OBJC_CLASS___NSSet, "set"));
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue( +[TUConversationInvitationPreference letMeInResponseInvitationPreferences]( &OBJC_CLASS___TUConversationInvitationPreference,  "letMeInResponseInvitationPreferences"));
  [v4 addRemoteMembers:v5 otherInvitedHandles:v6 invitationPreferences:v7 addingFromLetMeIn:1 triggeredLocally:1];
}

void sub_100109710(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_1001704C4();
  uint64_t v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v6 = *(void *)(a1 + 32);
    int v7 = 138412546;
    uint64_t v8 = v6;
    __int16 v9 = 2112;
    id v10 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "Membership reported rejection {member: %@, error: %@}",  (uint8_t *)&v7,  0x16u);
  }
}

void sub_10010A11C(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    uint64_t v5 = @"YES";
    if (!*(_BYTE *)(a1 + 48)) {
      uint64_t v5 = @"NO";
    }
    int v6 = 138412546;
    uint64_t v7 = v4;
    __int16 v8 = 2112;
    __int16 v9 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Notifying delegates of received remote attributes %@ (isLocallySharing: %@)",  (uint8_t *)&v6,  0x16u);
  }

  if (!*(_BYTE *)(a1 + 48)) {
    [*(id *)(a1 + 40) notifyDelegatesOfRemoteScreenShareAttributes:*(void *)(a1 + 32) isLocallySharing:0];
  }
}

void sub_10010A29C(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Asking screen sharing activity manager to resume observing after invalidation",  buf,  2u);
  }

  if (*(_BYTE *)(a1 + 48))
  {
    __int128 v20 = 0u;
    __int128 v21 = 0u;
    __int128 v18 = 0u;
    __int128 v19 = 0u;
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) mutableConversationsByUUID]);
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v4 allValues]);

    id v6 = [v5 countByEnumeratingWithState:&v18 objects:v24 count:16];
    if (v6)
    {
      id v8 = v6;
      uint64_t v9 = *(void *)v19;
      *(void *)&__int128 v7 = 138412290LL;
      __int128 v17 = v7;
      do
      {
        for (i = 0LL; i != v8; i = (char *)i + 1)
        {
          if (*(void *)v19 != v9) {
            objc_enumerationMutation(v5);
          }
          __int16 v11 = *(void **)(*((void *)&v18 + 1) + 8LL * (void)i);
          if (objc_msgSend(v11, "state", v17) == (id)3 && objc_msgSend(v11, "isScreenEnabled"))
          {
            id v12 = sub_1001704C4();
            unsigned __int8 v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
            if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
            {
              int v14 = (void *)objc_claimAutoreleasedReturnValue([v11 UUID]);
              *(_DWORD *)buf = v17;
              __int128 v23 = v14;
              _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "Disabling screensharing forConversationWithUUID:%@ since screen sharing session got invalidated",  buf,  0xCu);
            }

            uint64_t v15 = *(void **)(a1 + 32);
            __int16 v16 = (void *)objc_claimAutoreleasedReturnValue([v11 UUID]);
            [v15 setScreenEnabled:0 forConversationWithUUID:v16];
          }
        }

        id v8 = [v5 countByEnumeratingWithState:&v18 objects:v24 count:16];
      }

      while (v8);
    }
  }

  else
  {
    [*(id *)(a1 + 32) notifyDelegatesOfRemoteScreenShareEndedWithReason:*(void *)(a1 + 40)];
  }

id sub_10010A670(uint64_t a1)
{
  return _[*(id *)(a1 + 32) conversationManager:*(void *)(a1 + 40) activityAuthorizationChangedForBundleIdentifier:*(void *)(a1 + 48)];
}

id sub_10010A994(uint64_t a1)
{
  return _[*(id *)(a1 + 32) conversationManager:*(void *)(a1 + 40) sharePlayAvailableChanged:*(unsigned __int8 *)(a1 + 48)];
}

id sub_10010A9A4(uint64_t a1)
{
  return _[*(id *)(a1 + 32) conversationManager:*(void *)(a1 + 40) sharePlayAllowedChanged:*(unsigned __int8 *)(a1 + 48)];
}

id sub_10010ACC8(uint64_t a1)
{
  return _[*(id *)(a1 + 32) conversationManager:*(void *)(a1 + 40) screenSharingAvailableChanged:*(unsigned __int8 *)(a1 + 48)];
}

id sub_10010ACD8(uint64_t a1)
{
  return _[*(id *)(a1 + 32) conversationManager:*(void *)(a1 + 40) screenSharingAllowedChanged:*(unsigned __int8 *)(a1 + 48)];
}

void sub_10010ADCC(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 138412290;
    uint64_t v42 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Received resource at url %@", buf, 0xCu);
  }

  uint64_t v5 = objc_alloc(&OBJC_CLASS___NSUUID);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) objectForKeyedSubscript:@"resourceTransferConversationIDKey"]);
  __int128 v7 = -[NSUUID initWithUUIDString:](v5, "initWithUUIDString:", v6);

  if (v7)
  {
    id v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) conversationWithGroupUUID:v7]);
    uint64_t v9 = v8;
    if (v8)
    {
      id v10 = (void *)objc_claimAutoreleasedReturnValue([v8 activeRemoteParticipants]);
      v38[0] = _NSConcreteStackBlock;
      v38[1] = 3221225472LL;
      v38[2] = sub_10010B154;
      v38[3] = &unk_1003DA2F0;
      __int128 v39 = (os_log_s *)*(id *)(a1 + 56);
      __int16 v11 = (void *)objc_claimAutoreleasedReturnValue([v10 objectsPassingTest:v38]);
      id v12 = (void *)objc_claimAutoreleasedReturnValue([v11 allObjects]);
      unsigned __int8 v13 = (void *)objc_claimAutoreleasedReturnValue([v12 firstObject]);

      if (v13)
      {
        int v14 = objc_alloc(&OBJC_CLASS___NSUUID);
        uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) objectForKey:@"resourceTransferActivitySessionIDKey"]);
        __int16 v16 = -[NSUUID initWithUUIDString:](v14, "initWithUUIDString:", v15);

        if (v16)
        {
          __int128 v36 = 0u;
          __int128 v37 = 0u;
          __int128 v34 = 0u;
          __int128 v35 = 0u;
          __int128 v17 = (void *)objc_claimAutoreleasedReturnValue([v9 activitySessions]);
          id v18 = [v17 countByEnumeratingWithState:&v34 objects:v40 count:16];
          if (v18)
          {
            id v19 = v18;
            uint64_t v32 = v13;
            __int16 v33 = v7;
            uint64_t v20 = *(void *)v35;
            while (2)
            {
              for (i = 0LL; i != v19; i = (char *)i + 1)
              {
                if (*(void *)v35 != v20) {
                  objc_enumerationMutation(v17);
                }
                __int128 v22 = *(void **)(*((void *)&v34 + 1) + 8LL * (void)i);
                __int128 v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "identifier", v32));
                unsigned int v24 = [v23 isEqual:v16];

                if (v24)
                {
                  uint64_t v29 = *(void *)(a1 + 32);
                  uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 40) objectForKey:@"resourceTransferClientMetadataKey"]);
                  unsigned __int8 v13 = v32;
                  objc_msgSend( v22,  "receivedResourceAtURL:withMetadata:fromParticipantIdentifier:",  v29,  v30,  objc_msgSend(v32, "identifier"));

                  __int128 v7 = v33;
                  goto LABEL_25;
                }
              }

              id v19 = [v17 countByEnumeratingWithState:&v34 objects:v40 count:16];
              if (v19) {
                continue;
              }
              break;
            }

            unsigned __int8 v13 = v32;
            __int128 v7 = v33;
          }
        }

        else
        {
          id v31 = sub_1001704C4();
          __int128 v17 = (void *)objc_claimAutoreleasedReturnValue(v31);
          if (os_log_type_enabled((os_log_t)v17, OS_LOG_TYPE_ERROR)) {
            sub_1002B6A4C();
          }
        }

id sub_10010B154(uint64_t a1, void *a2)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a2 activeIDSDestination]);
  id v4 = [v3 isEqualToString:*(void *)(a1 + 32)];

  return v4;
}

void sub_10010B2AC(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) resourceTransferCallbacks]);
  id v3 = (void (**)(void, void))objc_claimAutoreleasedReturnValue([v2 objectForKeyedSubscript:*(void *)(a1 + 40)]);

  if (v3)
  {
    v3[2](v3, 0LL);
  }

  else
  {
    id v4 = sub_1001704C4();
    uint64_t v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_1002B6A78();
    }
  }

  id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) resourceTransferCallbacks]);
  [v6 removeObjectForKey:*(void *)(a1 + 40)];
}

void sub_10010B8E8( void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

void sub_10010B8F8( void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

void sub_10010B908(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
}

id sub_10010B91C(void *a1, const char *a2)
{
  return [a1 type];
}

void sub_10010B924( void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

void sub_10010B938(uint64_t a1@<X8>)
{
  *(void *)(v1 - _Block_object_dispose(va, 8) = a1;
}

  ;
}

  ;
}

uint64_t sub_10010B960()
{
  return v0;
}

  ;
}

  ;
}

uint64_t sub_10010B984(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_10010BAC4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_10010BAE0(id a1, NSError *a2)
{
  id v2 = a2;
  if (v2)
  {
    uint64_t v3 = TUDefaultLog();
    id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_1002B6AA4((uint64_t)v2, v4);
    }
  }
}

void sub_10010BB34(uint64_t a1, int a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v6 = WeakRetained;
    uint64_t v4 = objc_claimAutoreleasedReturnValue([WeakRetained delegate]);
    uint64_t v5 = (void *)v4;
    if (a2 == 1 && (objc_opt_respondsToSelector(v4, "continuityCameraDidConnect") & 1) != 0) {
      [v5 continuityCameraDidConnect];
    }

    id WeakRetained = v6;
  }
}

BOOL sub_10010BE5C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0LL;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1LL || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        unint64_t v6 = 0LL;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0LL;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        id v12 = objc_alloc_init(&OBJC_CLASS___CSDMessagingHandle);
        objc_storeStrong((id *)(a1 + 16), v12);
        if (PBReaderPlaceMark(a2, v19) && (sub_10004A748((uint64_t)v12, a2) & 1) != 0)
        {
          PBReaderRecallMark(a2, v19);
          goto LABEL_27;
        }

        return 0LL;
      case 2u:
        uint64_t String = PBReaderReadString(a2);
        uint64_t v14 = objc_claimAutoreleasedReturnValue(String);
        uint64_t v15 = 24LL;
        goto LABEL_26;
      case 3u:
        uint64_t Data = PBReaderReadData(a2);
        uint64_t v14 = objc_claimAutoreleasedReturnValue(Data);
        uint64_t v15 = 32LL;
        goto LABEL_26;
      case 4u:
        uint64_t v17 = PBReaderReadData(a2);
        uint64_t v14 = objc_claimAutoreleasedReturnValue(v17);
        uint64_t v15 = 8LL;
LABEL_26:
        id v12 = *(CSDMessagingHandle **)(a1 + v15);
        *(void *)(a1 + v15) = v14;
LABEL_27:

        goto LABEL_28;
      default:
        if ((PBReaderSkipValueWithTag(a2) & 1) != 0)
        {
LABEL_28:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }

        return 0LL;
    }
  }

LABEL_105:
  unsigned int v114 = (void *)objc_claimAutoreleasedReturnValue([v100 provider]);
  uint64_t v115 = [v114 isFaceTimeProvider];

  if (v115)
  {
    unint64_t v116 = (void *)objc_claimAutoreleasedReturnValue([v100 callGroupUUID]);
    -[CHRecentCall setParticipantGroupUUID:](v120, "setParticipantGroupUUID:", v116);
  }

  -[CHRecentCall setScreenSharingType:]( v120,  "setScreenSharingType:",  (unint64_t)[v100 screenSharingType] & 3);

LABEL_108:
  char v117 = v6;

  return v117;
}

BOOL sub_10010D794(id a1, TUHandle *a2)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(-[TUHandle value](a2, "value"));
  char v3 = [v2 destinationIdIsPseudonym] ^ 1;

  return v3;
}

uint64_t sub_10010E0D4(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  char v4 = &OBJC_IVAR___CSDMessagingConversationParticipantDidJoinContext__isUPlusNDowngradeAvailable;
  unsigned int v5 = &OBJC_IVAR___CSDMessagingConversationParticipantDidJoinContext__isUPlusNDowngradeAvailable;
  while (2)
  {
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v6 = 0;
    unsigned int v7 = 0;
    unint64_t v8 = 0LL;
    while (1)
    {
      unint64_t v9 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v9 == -1LL || v9 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v10 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v9);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v9 + 1;
      v8 |= (unint64_t)(v10 & 0x7F) << v6;
      if ((v10 & 0x80) == 0) {
        goto LABEL_12;
      }
      v6 += 7;
      BOOL v11 = v7++ >= 9;
      if (v11)
      {
        unint64_t v8 = 0LL;
        int v12 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_14;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_12:
    int v12 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v8 = 0LL;
    }
LABEL_14:
    if (v12 || (v8 & 7) == 4) {
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v8 >> 3))
    {
      case 1u:
        char v14 = 0;
        unsigned int v15 = 0;
        uint64_t v16 = 0LL;
        *(_BYTE *)(a1 + v4[238]) |= 2u;
        while (1)
        {
          unint64_t v17 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v17 == -1LL || v17 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v18 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v17);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v17 + 1;
          v16 |= (unint64_t)(v18 & 0x7F) << v14;
          if ((v18 & 0x80) == 0) {
            goto LABEL_75;
          }
          v14 += 7;
          BOOL v11 = v15++ >= 9;
          if (v11)
          {
            LODWORD(v16) = 0;
            goto LABEL_77;
          }
        }

        *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_75:
        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v16) = 0;
        }
LABEL_77:
        uint64_t v55 = v5[239];
        goto LABEL_82;
      case 2u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v16 = 0LL;
        *(_BYTE *)(a1 + v4[238]) |= 1u;
        while (2)
        {
          unint64_t v22 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v22 == -1LL || v22 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v23 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v22);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v22 + 1;
            v16 |= (unint64_t)(v23 & 0x7F) << v20;
            if (v23 < 0)
            {
              v20 += 7;
              BOOL v11 = v21++ >= 9;
              if (v11)
              {
                LODWORD(v16) = 0;
                goto LABEL_81;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v16) = 0;
        }
LABEL_81:
        uint64_t v55 = 16LL;
LABEL_82:
        *(_DWORD *)(a1 + v55) = v16;
        goto LABEL_104;
      case 3u:
        char v24 = 0;
        unsigned int v25 = 0;
        uint64_t v26 = 0LL;
        *(_BYTE *)(a1 + v4[238]) |= 0x40u;
        while (2)
        {
          unint64_t v27 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v27 == -1LL || v27 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v28 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v27);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v27 + 1;
            v26 |= (unint64_t)(v28 & 0x7F) << v24;
            if (v28 < 0)
            {
              v24 += 7;
              BOOL v11 = v25++ >= 9;
              if (v11)
              {
                uint64_t v26 = 0LL;
                goto LABEL_86;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v26 = 0LL;
        }
LABEL_86:
        BOOL v56 = v26 != 0;
        uint64_t v57 = 40LL;
        goto LABEL_103;
      case 4u:
        uint64_t v29 = v4;
        uint64_t v30 = v5;
        id v31 = objc_alloc_init(&OBJC_CLASS___CSDMessagingAVConferenceInviteData);
        objc_storeStrong((id *)(a1 + 8), v31);
        if (PBReaderPlaceMark(a2, v58) && sub_100089894((uint64_t)v31, a2))
        {
          PBReaderRecallMark(a2, v58);

          unsigned int v5 = v30;
          char v4 = v29;
LABEL_104:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }

        return 0LL;
      case 5u:
        char v32 = 0;
        unsigned int v33 = 0;
        uint64_t v34 = 0LL;
        *(_BYTE *)(a1 + v4[238]) |= 4u;
        while (2)
        {
          unint64_t v35 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v35 == -1LL || v35 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v36 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v35);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v35 + 1;
            v34 |= (unint64_t)(v36 & 0x7F) << v32;
            if (v36 < 0)
            {
              v32 += 7;
              BOOL v11 = v33++ >= 9;
              if (v11)
              {
                uint64_t v34 = 0LL;
                goto LABEL_90;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v34 = 0LL;
        }
LABEL_90:
        BOOL v56 = v34 != 0;
        uint64_t v57 = 36LL;
        goto LABEL_103;
      case 6u:
        char v37 = 0;
        unsigned int v38 = 0;
        uint64_t v39 = 0LL;
        *(_BYTE *)(a1 + v4[238]) |= 0x10u;
        while (2)
        {
          unint64_t v40 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v40 == -1LL || v40 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v41 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v40);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v40 + 1;
            v39 |= (unint64_t)(v41 & 0x7F) << v37;
            if (v41 < 0)
            {
              v37 += 7;
              BOOL v11 = v38++ >= 9;
              if (v11)
              {
                uint64_t v39 = 0LL;
                goto LABEL_94;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v39 = 0LL;
        }
LABEL_94:
        BOOL v56 = v39 != 0;
        uint64_t v57 = 38LL;
        goto LABEL_103;
      case 7u:
        char v42 = 0;
        unsigned int v43 = 0;
        uint64_t v44 = 0LL;
        *(_BYTE *)(a1 + v4[238]) |= 0x20u;
        while (2)
        {
          unint64_t v45 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v45 == -1LL || v45 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v46 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v45);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v45 + 1;
            v44 |= (unint64_t)(v46 & 0x7F) << v42;
            if (v46 < 0)
            {
              v42 += 7;
              BOOL v11 = v43++ >= 9;
              if (v11)
              {
                uint64_t v44 = 0LL;
                goto LABEL_98;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v44 = 0LL;
        }
LABEL_98:
        BOOL v56 = v44 != 0;
        uint64_t v57 = 39LL;
        goto LABEL_103;
      case 8u:
        char v47 = 0;
        unsigned int v48 = 0;
        uint64_t v49 = 0LL;
        *(_BYTE *)(a1 + v4[238]) |= 8u;
        while (2)
        {
          unint64_t v50 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v50 == -1LL || v50 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v51 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v50);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v50 + 1;
            v49 |= (unint64_t)(v51 & 0x7F) << v47;
            if (v51 < 0)
            {
              v47 += 7;
              BOOL v11 = v48++ >= 9;
              if (v11)
              {
                uint64_t v49 = 0LL;
                goto LABEL_102;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v49 = 0LL;
        }
LABEL_102:
        BOOL v56 = v49 != 0;
        uint64_t v57 = 37LL;
LABEL_103:
        *(_BYTE *)(a1 + v57) = v56;
        goto LABEL_104;
      case 9u:
        uint64_t String = PBReaderReadString(a2);
        uint64_t v53 = objc_claimAutoreleasedReturnValue(String);
        __int128 v54 = *(void **)(a1 + 24);
        *(void *)(a1 + 24) = v53;

        goto LABEL_104;
      default:
        uint64_t result = PBReaderSkipValueWithTag(a2);
        if (!(_DWORD)result) {
          return result;
        }
        goto LABEL_104;
    }
  }

BOOL sub_10010F2D0(id a1, TURoute *a2)
{
  id v2 = a2;
  else {
    unsigned __int8 v3 = 0;
  }

  return v3;
}

BOOL sub_10010F4B4(id a1, TURoute *a2)
{
  return -[TURoute isReceiver](a2, "isReceiver");
}

BOOL sub_10010F4C8(id a1, TURoute *a2)
{
  return -[TURoute isSpeaker](a2, "isSpeaker");
}

BOOL sub_10010F4DC(id a1, TURoute *a2)
{
  return -[TURoute isWirelessHeadset](a2, "isWirelessHeadset");
}

BOOL sub_10010F4F0(id a1, TURoute *a2)
{
  return -[TURoute isAirTunes](a2, "isAirTunes");
}

BOOL sub_10010F504(id a1, TURoute *a2)
{
  return -[TURoute isCarAudio](a2, "isCarAudio");
}

BOOL sub_10010F518(id a1, TURoute *a2)
{
  return -[TURoute isBluetooth](a2, "isBluetooth");
}

BOOL sub_10010F570(uint64_t a1, void *a2)
{
  return [a2 bluetoothEndpointType] == *(id *)(a1 + 32);
}

id sub_10010F620(uint64_t a1, void *a2)
{
  unsigned __int8 v3 = (void *)objc_claimAutoreleasedReturnValue([a2 uniqueIdentifier]);
  id v4 = [v3 isEqualToString:*(void *)(a1 + 32)];

  return v4;
}

void sub_10010F824(uint64_t a1, void *a2)
{
  id v3 = a2;
}

void sub_10010F944( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_10010F95C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_10010F96C(uint64_t a1)
{
}

void sub_10010F974(uint64_t a1, void *a2, _BYTE *a3)
{
  *a3 = 1;
}

void sub_10010FA48( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_10010FA60(uint64_t result, uint64_t a2, _BYTE *a3)
{
  *(_BYTE *)(*(void *)(*(void *)(result + 32) + 8LL) + 24LL) = 1;
  *a3 = 1;
  return result;
}

void sub_10010FEA0(uint64_t a1)
{
  id v1 = [objc_alloc(*(Class *)(a1 + 32)) initWithName:@"com.apple.private.alloy.facetime.audio"];
  id v2 = (void *)qword_10044D038;
  qword_10044D038 = (uint64_t)v1;
}

id sub_1001100D4(CSDMessagingConversationActivity *self, SEL a2)
{
  v8.receiver = self;
  v8.super_class = (Class)&OBJC_CLASS___CSDMessagingConversationActivity;
  id v3 = -[CSDMessagingConversationActivity description](&v8, "description");
  id v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue(-[CSDMessagingConversationActivity dictionaryRepresentation](self, "dictionaryRepresentation"));
  char v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", @"%@ %@", v4, v5));

  return v6;
}

uint64_t sub_1001103F8(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0LL;
    while (1)
    {
      uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v8 = v7 + 1;
      if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v9 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
      v6 |= (unint64_t)(v9 & 0x7F) << v4;
      if ((v9 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v10 = v5++ >= 9;
      if (v10)
      {
        unint64_t v6 = 0LL;
        int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0LL;
    }
LABEL_13:
    if (v11 || (v6 & 7) == 4) {
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t String = PBReaderReadString(a2);
        uint64_t v14 = objc_claimAutoreleasedReturnValue(String);
        uint64_t v15 = 80LL;
        goto LABEL_33;
      case 2u:
        uint64_t Data = PBReaderReadData(a2);
        uint64_t v14 = objc_claimAutoreleasedReturnValue(Data);
        uint64_t v15 = 48LL;
        goto LABEL_33;
      case 3u:
        uint64_t v17 = PBReaderReadString(a2);
        uint64_t v14 = objc_claimAutoreleasedReturnValue(v17);
        uint64_t v15 = 56LL;
        goto LABEL_33;
      case 4u:
        uint64_t v18 = PBReaderReadString(a2);
        uint64_t v14 = objc_claimAutoreleasedReturnValue(v18);
        uint64_t v15 = 32LL;
        goto LABEL_33;
      case 5u:
        uint64_t v19 = PBReaderReadData(a2);
        uint64_t v14 = objc_claimAutoreleasedReturnValue(v19);
        uint64_t v15 = 88LL;
        goto LABEL_33;
      case 7u:
        unsigned int v21 = objc_alloc_init(&OBJC_CLASS___CSDMessagingConversationActivityContext);
        objc_storeStrong((id *)(a1 + 24), v21);
        goto LABEL_50;
      case 8u:
        unsigned int v21 = objc_alloc_init(&OBJC_CLASS___CSDMessagingHandle);
        uint64_t v22 = 96LL;
        goto LABEL_48;
      case 9u:
        *(_BYTE *)(a1 + 108) |= 2u;
        unint64_t v23 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v23 <= 0xFFFFFFFFFFFFFFF7LL && v23 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v24 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v23);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v23 + 8;
        }

        else
        {
          *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v24 = 0LL;
        }

        uint64_t v34 = 16LL;
        goto LABEL_59;
      case 0xAu:
        uint64_t v25 = PBReaderReadString(a2);
        uint64_t v14 = objc_claimAutoreleasedReturnValue(v25);
        uint64_t v15 = 64LL;
LABEL_33:
        uint64_t v26 = *(void **)(a1 + v15);
        *(void *)(a1 + v15) = v14;

        goto LABEL_60;
      case 0xBu:
        unsigned int v21 = objc_alloc_init(&OBJC_CLASS___CSDMessagingConversationActivityMetadata);
        objc_storeStrong((id *)(a1 + 40), v21);
        goto LABEL_50;
      case 0xCu:
        char v27 = 0;
        unsigned int v28 = 0;
        uint64_t v29 = 0LL;
        *(_BYTE *)(a1 + 108) |= 4u;
        while (2)
        {
          uint64_t v30 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v32 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v30);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v31;
            v29 |= (unint64_t)(v32 & 0x7F) << v27;
            if (v32 < 0)
            {
              v27 += 7;
              BOOL v10 = v28++ >= 9;
              if (v10)
              {
                uint64_t v29 = 0LL;
                goto LABEL_54;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v29 = 0LL;
        }
LABEL_54:
        *(_BYTE *)(a1 + 104) = v29 != 0;
        goto LABEL_60;
      case 0xDu:
        *(_BYTE *)(a1 + 108) |= 1u;
        unint64_t v33 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v33 <= 0xFFFFFFFFFFFFFFF7LL && v33 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v24 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v33);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v33 + 8;
        }

        else
        {
          *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v24 = 0LL;
        }

        uint64_t v34 = 8LL;
LABEL_59:
        *(void *)(a1 + v34) = v24;
        goto LABEL_60;
      case 0xEu:
        unsigned int v21 = objc_alloc_init(&OBJC_CLASS___CSDMessagingHandle);
        uint64_t v22 = 72LL;
LABEL_48:
        objc_storeStrong((id *)(a1 + v22), v21);
        if (PBReaderPlaceMark(a2, v35) && (sub_10004A748((uint64_t)v21, a2) & 1) != 0)
        {
LABEL_50:
          PBReaderRecallMark(a2, v35);

LABEL_60:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }

BOOL sub_100111B44(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (1)
    {
      if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      char v4 = 0;
      unsigned int v5 = 0;
      unint64_t v6 = 0LL;
      while (1)
      {
        unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v7 == -1LL || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v8 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
        v6 |= (unint64_t)(v8 & 0x7F) << v4;
        if ((v8 & 0x80) == 0) {
          goto LABEL_11;
        }
        v4 += 7;
        if (v5++ >= 9)
        {
          unint64_t v6 = 0LL;
          int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
          goto LABEL_13;
        }
      }

      *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
      int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
      if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        unint64_t v6 = 0LL;
      }
LABEL_13:
      if (v10 || (v6 & 7) == 4) {
        return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      unint64_t v12 = v6 >> 3;
      if ((v6 >> 3) == 3)
      {
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v15 = 0LL;
        *(_BYTE *)(a1 + 20) |= 2u;
        while (1)
        {
          unint64_t v22 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v22 == -1LL || v22 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v23 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v22);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v22 + 1;
          v15 |= (unint64_t)(v23 & 0x7F) << v20;
          if ((v23 & 0x80) == 0)
          {
            uint64_t v19 = &OBJC_IVAR___CSDMessagingConversationInvitationPreference__notificationStyles;
            goto LABEL_47;
          }

          v20 += 7;
          BOOL v18 = v21++ > 8;
          if (v18)
          {
            LODWORD(v15) = 0;
            uint64_t v19 = &OBJC_IVAR___CSDMessagingConversationInvitationPreference__notificationStyles;
            goto LABEL_49;
          }
        }

        uint64_t v19 = &OBJC_IVAR___CSDMessagingConversationInvitationPreference__notificationStyles;
LABEL_46:
        *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
        goto LABEL_47;
      }

      if ((_DWORD)v12 == 2) {
        break;
      }
      if ((_DWORD)v12 == 1)
      {
        char v13 = 0;
        unsigned int v14 = 0;
        uint64_t v15 = 0LL;
        *(_BYTE *)(a1 + 20) |= 4u;
        while (1)
        {
          unint64_t v16 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v16 == -1LL || v16 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            uint64_t v19 = &OBJC_IVAR___CSDMessagingConversationInvitationPreference__version;
            goto LABEL_46;
          }

          char v17 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v16);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v16 + 1;
          v15 |= (unint64_t)(v17 & 0x7F) << v13;
          if ((v17 & 0x80) == 0) {
            break;
          }
          v13 += 7;
          BOOL v18 = v14++ > 8;
          if (v18)
          {
            LODWORD(v15) = 0;
            uint64_t v19 = &OBJC_IVAR___CSDMessagingConversationInvitationPreference__version;
            goto LABEL_49;
          }
        }

        uint64_t v19 = &OBJC_IVAR___CSDMessagingConversationInvitationPreference__version;
        goto LABEL_47;
      }

      if ((PBReaderSkipValueWithTag(a2) & 1) == 0) {
        return 0LL;
      }
LABEL_50:
      if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
    }

    char v24 = 0;
    unsigned int v25 = 0;
    uint64_t v15 = 0LL;
    *(_BYTE *)(a1 + 20) |= 1u;
    while (1)
    {
      unint64_t v26 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v26 == -1LL || v26 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
      {
        uint64_t v19 = &OBJC_IVAR___CSDMessagingConversationInvitationPreference__handleType;
        goto LABEL_46;
      }

      char v27 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v26);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v26 + 1;
      v15 |= (unint64_t)(v27 & 0x7F) << v24;
      if ((v27 & 0x80) == 0) {
        break;
      }
      v24 += 7;
      BOOL v18 = v25++ > 8;
      if (v18)
      {
        LODWORD(v15) = 0;
        uint64_t v19 = &OBJC_IVAR___CSDMessagingConversationInvitationPreference__handleType;
        goto LABEL_49;
      }
    }

    uint64_t v19 = &OBJC_IVAR___CSDMessagingConversationInvitationPreference__handleType;
LABEL_47:
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      LODWORD(v15) = 0;
    }
LABEL_49:
    *(_DWORD *)(a1 + *v19) = v15;
    goto LABEL_50;
  }

  return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

BOOL sub_10011254C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (1)
    {
      if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      char v4 = 0;
      unsigned int v5 = 0;
      unint64_t v6 = 0LL;
      while (1)
      {
        unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v7 == -1LL || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v8 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
        v6 |= (unint64_t)(v8 & 0x7F) << v4;
        if ((v8 & 0x80) == 0) {
          goto LABEL_11;
        }
        v4 += 7;
        if (v5++ >= 9)
        {
          unint64_t v6 = 0LL;
          int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
          goto LABEL_13;
        }
      }

      *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
      int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
      if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        unint64_t v6 = 0LL;
      }
LABEL_13:
      if (v10 || (v6 & 7) == 4) {
        return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      if ((v6 >> 3) == 1)
      {
        char v12 = 0;
        unsigned int v13 = 0;
        uint64_t v14 = 0LL;
        *(_BYTE *)(a1 + 12) |= 1u;
        while (1)
        {
          unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v15 == -1LL || v15 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            BOOL v18 = &OBJC_IVAR___CSDMessagingCallCapabilitiesState__faceTimeAudioAvailable;
            goto LABEL_37;
          }

          char v16 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
          v14 |= (unint64_t)(v16 & 0x7F) << v12;
          if ((v16 & 0x80) == 0) {
            break;
          }
          v12 += 7;
          BOOL v17 = v13++ > 8;
          if (v17)
          {
            uint64_t v14 = 0LL;
            BOOL v18 = &OBJC_IVAR___CSDMessagingCallCapabilitiesState__faceTimeAudioAvailable;
            goto LABEL_40;
          }
        }

        BOOL v18 = &OBJC_IVAR___CSDMessagingCallCapabilitiesState__faceTimeAudioAvailable;
LABEL_38:
        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v14 = 0LL;
        }
LABEL_40:
        *(_BYTE *)(a1 + *v1_Block_object_dispose(va, 8) = v14 != 0;
        goto LABEL_41;
      }

      if ((PBReaderSkipValueWithTag(a2) & 1) == 0) {
        return 0LL;
      }
LABEL_41:
      if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
    }

    char v19 = 0;
    unsigned int v20 = 0;
    uint64_t v14 = 0LL;
    *(_BYTE *)(a1 + 12) |= 2u;
    while (1)
    {
      unint64_t v21 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v21 == -1LL || v21 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v22 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v21);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v21 + 1;
      v14 |= (unint64_t)(v22 & 0x7F) << v19;
      if ((v22 & 0x80) == 0)
      {
        BOOL v18 = &OBJC_IVAR___CSDMessagingCallCapabilitiesState__faceTimeVideoAvailable;
        goto LABEL_38;
      }

      v19 += 7;
      BOOL v17 = v20++ > 8;
      if (v17)
      {
        uint64_t v14 = 0LL;
        BOOL v18 = &OBJC_IVAR___CSDMessagingCallCapabilitiesState__faceTimeVideoAvailable;
        goto LABEL_40;
      }
    }

    BOOL v18 = &OBJC_IVAR___CSDMessagingCallCapabilitiesState__faceTimeVideoAvailable;
LABEL_37:
    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
    goto LABEL_38;
  }

  return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

uint64_t sub_100114CC4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_100114CD4(uint64_t a1)
{
}

void sub_100114CDC(uint64_t a1)
{
  int v10 = objc_alloc_init(&OBJC_CLASS___CSDIncomingCallFilterDataSource);
  id v2 = -[CSDDeviceLockStateObserver initWithQueue:]( objc_alloc(&OBJC_CLASS___CSDDeviceLockStateObserver),  "initWithQueue:",  *(void *)(a1 + 32));
  id v3 = objc_alloc_init(&OBJC_CLASS___CSDCallCenterObserver);
  id v4 = *(id *)(a1 + 40);
  unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue(+[TUCallCenter sharedInstance](&OBJC_CLASS___TUCallCenter, "sharedInstance"));
  unint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v5 contactStore]);
  id v7 = [v4 initWithDataSource:v10 deviceLockObserver:v2 callCenterObserver:v3 callDirectoryStoreBuilder:&stru_1003DA768 callDirectoryManager:0 contactStore:v6 queue:*(void *)(a1 + 32)];
  uint64_t v8 = *(void *)(*(void *)(a1 + 48) + 8LL);
  char v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = v7;
}

CXCallDirectoryStore *__cdecl sub_100114DC8(id a1)
{
  id v8 = 0LL;
  id v1 = -[CXCallDirectoryStore initForReadingWithError:]( objc_alloc(&OBJC_CLASS___CXCallDirectoryStore),  "initForReadingWithError:",  &v8);
  id v2 = v8;
  id v3 = sub_1001704C4();
  id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
  unsigned int v5 = v4;
  if (v1)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v7 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "Initialized CXCallDirectoryStore for reading",  v7,  2u);
    }
  }

  else if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    sub_1002B6DC0((uint64_t)v2, v5);
  }

  return (CXCallDirectoryStore *)v1;
}

uint64_t sub_100115050(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (!WeakRetained) {
    goto LABEL_6;
  }
  id v8 = sub_1001704C4();
  char v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    int v16 = 138412546;
    id v17 = v5;
    __int16 v18 = 2112;
    id v19 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "Incoming call filter block called with sourceAddress: %@ providerIdentifier: %@",  (uint8_t *)&v16,  0x16u);
  }

  if (([WeakRetained callDirectoryAllowsCallFromSourceAddress:v5] & 1) == 0)
  {
    id v11 = sub_1001704C4();
    char v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      int v16 = 138412290;
      id v17 = v5;
      unsigned int v13 = "Blocking call with sourceAddress %@ since callDirectoryAllowsCallFromSourceAddress returned NO";
LABEL_11:
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, v13, (uint8_t *)&v16, 0xCu);
    }

id sub_1001165E8(uint64_t a1)
{
  return _[*(id *)(a1 + 32) providersChangedForProviderManager:*(void *)(*(void *)(a1 + 32) + 48)];
}

id sub_1001166EC(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    int v6 = 138412290;
    uint64_t v7 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Call history changed: %@", (uint8_t *)&v6, 0xCu);
  }

  return [*(id *)(a1 + 40) _handleCallHistoryChanged];
}

void sub_100116B50(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    int v7 = 138412290;
    uint64_t v8 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Requested to report call ended for conversation %@",  (uint8_t *)&v7,  0xCu);
  }

  id v5 = -[CHRecentCall initWithConversation:startDate:avMode:]( objc_alloc(&OBJC_CLASS___CHRecentCall),  "initWithConversation:startDate:avMode:",  *(void *)(a1 + 32),  *(void *)(a1 + 40),  *(void *)(a1 + 56));
  int v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) recentsManager]);
  [v6 addToCallHistory:v5];
}

void sub_100117378(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) transactionObjectsAwaitingCallHistory]);
  unsigned int v3 = [v2 containsObject:*(void *)(a1 + 40)];

  if (v3)
  {
    id v4 = sub_1001704C4();
    id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v6 = *(void *)(a1 + 40);
      int v9 = 138412290;
      uint64_t v10 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "[WARN] Ending transaction for %@ because we timed out waiting for a call history database changed notification",  (uint8_t *)&v9,  0xCu);
    }

    int v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) transactionObjectsAwaitingCallHistory]);
    [v7 removeObject:*(void *)(a1 + 40)];

    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) transactionManager]);
    [v8 endTransactionIfNecessaryForObject:*(void *)(a1 + 40)];
  }

void sub_100117730(uint64_t a1, uint64_t a2)
{
  id v4 = sub_1001704C4();
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v6 = *(void *)(a1 + 32);
    int v7 = 134218242;
    uint64_t v8 = a2;
    __int16 v9 = 2112;
    uint64_t v10 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "Deleted %ld recent calls matching predicate %@",  (uint8_t *)&v7,  0x16u);
  }
}

uint64_t sub_100117DA0(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0LL;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1LL || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0LL;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0LL;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      break;
    }
    if ((v6 >> 3) == 2)
    {
      char v15 = 0;
      unsigned int v16 = 0;
      uint64_t v17 = 0LL;
      *(_BYTE *)(a1 + 20) |= 1u;
      while (1)
      {
        unint64_t v18 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v18 == -1LL || v18 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v19 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v18);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v18 + 1;
        v17 |= (unint64_t)(v19 & 0x7F) << v15;
        if ((v19 & 0x80) == 0) {
          goto LABEL_30;
        }
        v15 += 7;
        BOOL v9 = v16++ >= 9;
        if (v9)
        {
          LODWORD(v17) = 0;
          goto LABEL_32;
        }
      }

      *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_30:
      if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        LODWORD(v17) = 0;
      }
LABEL_32:
      *(_DWORD *)(a1 + 16) = v17;
    }

    else if ((v6 >> 3) == 1)
    {
      uint64_t String = PBReaderReadString(a2);
      uint64_t v13 = objc_claimAutoreleasedReturnValue(String);
      id v14 = *(void **)(a1 + 8);
      *(void *)(a1 + _Block_object_dispose(va, 8) = v13;
    }

    else
    {
      uint64_t result = PBReaderSkipValueWithTag(a2);
      if (!(_DWORD)result) {
        return result;
      }
    }
  }

  return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

BOOL sub_100119094(id *a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0LL;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1LL || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        unint64_t v6 = 0LL;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0LL;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t String = PBReaderReadString(a2);
        uint64_t v13 = objc_claimAutoreleasedReturnValue(String);
        uint64_t v14 = 14LL;
        goto LABEL_39;
      case 2u:
        char v15 = objc_alloc_init(&OBJC_CLASS___CSDMessagingPersonNameComponents);
        objc_storeStrong(a1 + 15, v15);
        if (PBReaderPlaceMark(a2, v31) && sub_1000B270C((uint64_t)v15, a2))
        {
          PBReaderRecallMark(a2, v31);
LABEL_40:

LABEL_41:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }

        return 0LL;
      case 3u:
        uint64_t v16 = PBReaderReadString(a2);
        uint64_t v13 = objc_claimAutoreleasedReturnValue(v16);
        uint64_t v14 = 16LL;
        goto LABEL_39;
      case 4u:
        uint64_t v17 = PBReaderReadString(a2);
        uint64_t v13 = objc_claimAutoreleasedReturnValue(v17);
        uint64_t v14 = 11LL;
        goto LABEL_39;
      case 5u:
        uint64_t v18 = PBReaderReadString(a2);
        uint64_t v13 = objc_claimAutoreleasedReturnValue(v18);
        uint64_t v14 = 6LL;
        goto LABEL_39;
      case 6u:
        uint64_t v19 = PBReaderReadString(a2);
        uint64_t v13 = objc_claimAutoreleasedReturnValue(v19);
        uint64_t v14 = 13LL;
        goto LABEL_39;
      case 7u:
        uint64_t v20 = PBReaderReadString(a2);
        uint64_t v13 = objc_claimAutoreleasedReturnValue(v20);
        uint64_t v14 = 12LL;
        goto LABEL_39;
      case 8u:
        uint64_t v21 = PBReaderReadString(a2);
        uint64_t v13 = objc_claimAutoreleasedReturnValue(v21);
        uint64_t v14 = 10LL;
        goto LABEL_39;
      case 9u:
        uint64_t v22 = PBReaderReadString(a2);
        uint64_t v13 = objc_claimAutoreleasedReturnValue(v22);
        uint64_t v14 = 9LL;
        goto LABEL_39;
      case 0xAu:
        uint64_t v23 = PBReaderReadString(a2);
        uint64_t v13 = objc_claimAutoreleasedReturnValue(v23);
        uint64_t v14 = 2LL;
        goto LABEL_39;
      case 0xBu:
        uint64_t v24 = PBReaderReadString(a2);
        uint64_t v13 = objc_claimAutoreleasedReturnValue(v24);
        uint64_t v14 = 3LL;
        goto LABEL_39;
      case 0xCu:
        uint64_t v25 = PBReaderReadString(a2);
        uint64_t v13 = objc_claimAutoreleasedReturnValue(v25);
        uint64_t v14 = 1LL;
        goto LABEL_39;
      case 0xDu:
        uint64_t v26 = PBReaderReadString(a2);
        uint64_t v13 = objc_claimAutoreleasedReturnValue(v26);
        uint64_t v14 = 7LL;
        goto LABEL_39;
      case 0xEu:
        uint64_t v27 = PBReaderReadString(a2);
        char v15 = (CSDMessagingPersonNameComponents *)objc_claimAutoreleasedReturnValue(v27);
        if (v15) {
          [a1 addContactIdentifiers:v15];
        }
        goto LABEL_40;
      case 0xFu:
        uint64_t v28 = PBReaderReadString(a2);
        uint64_t v13 = objc_claimAutoreleasedReturnValue(v28);
        uint64_t v14 = 4LL;
        goto LABEL_39;
      case 0x10u:
        uint64_t v29 = PBReaderReadString(a2);
        uint64_t v13 = objc_claimAutoreleasedReturnValue(v29);
        uint64_t v14 = 5LL;
LABEL_39:
        char v15 = (CSDMessagingPersonNameComponents *)a1[v14];
        a1[v14] = (id)v13;
        goto LABEL_40;
      default:
        if ((PBReaderSkipValueWithTag(a2) & 1) == 0) {
          return 0LL;
        }
        goto LABEL_41;
    }
  }

void sub_10011A774( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_10011A78C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_10011A79C(uint64_t a1)
{
}

void sub_10011A7A4(uint64_t a1)
{
}

void sub_10011A89C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_10011A8B4(uint64_t a1)
{
  __int128 v12 = 0u;
  __int128 v13 = 0u;
  __int128 v14 = 0u;
  __int128 v15 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) activityQueue]);
  id v2 = [obj countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = *(void *)v13;
    do
    {
      for (i = 0LL; i != v3; i = (char *)i + 1)
      {
        if (*(void *)v13 != v4) {
          objc_enumerationMutation(obj);
        }
        unint64_t v6 = *(void **)(*((void *)&v12 + 1) + 8LL * (void)i);
        unint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 userActivity]);
        char v8 = (void *)objc_claimAutoreleasedReturnValue([v7 activityType]);
        unsigned int v9 = +[CSDUserActivity activityTypeForUserActivityTypeString:]( &OBJC_CLASS___CSDUserActivity,  "activityTypeForUserActivityTypeString:",  v8);
        int v10 = *(_DWORD *)(a1 + 48);

        if (v9 == v10) {
          [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) addObject:v6];
        }
      }

      id v3 = [obj countByEnumeratingWithState:&v12 objects:v16 count:16];
    }

    while (v3);
  }
}

id sub_10011AAD0(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _broadcastActivity:*(void *)(a1 + 40) withTimeout:*(unsigned __int8 *)(a1 + 56) shouldPrioritize:*(double *)(a1 + 48)];
}

id sub_10011AB7C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _stopBroadcastingActivity:*(void *)(a1 + 40)];
}

id sub_10011AC28(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _listenForActivityType:*(unsigned int *)(a1 + 48) dynamicIdentifier:*(void *)(a1 + 40)];
}

id sub_10011ACD8(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _stopListeningForActivityType:*(unsigned int *)(a1 + 48) dynamicIdentifier:*(void *)(a1 + 40)];
}

id sub_10011AD88(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _stopListeningForActivityType:*(unsigned int *)(a1 + 48) matchingDynamicIdentifierSubstring:*(void *)(a1 + 40)];
}

id sub_10011B0C8(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _stopBroadcastingActivity:*(void *)(a1 + 40)];
}

void sub_10011BF98(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    int v32 = 138412290;
    *(void *)unint64_t v33 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Best app suggestion changed to %@",  (uint8_t *)&v32,  0xCu);
  }

  unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) delegate]);
  unint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) mostRecentBestAppSuggestion]);
  if (v6)
  {
    unint64_t v7 = v6;
    if (*(void *)(a1 + 32))
    {
      char v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) mostRecentBestAppSuggestion]);
      unsigned int v9 = (void *)objc_claimAutoreleasedReturnValue([v8 activityType]);
      int v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) activityType]);
      unsigned __int8 v11 = [v9 isEqualToString:v10];

      if ((v11 & 1) != 0) {
        goto LABEL_13;
      }
    }

    else
    {
    }

    __int128 v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) mostRecentBestAppSuggestion]);
    __int128 v13 = (void *)objc_claimAutoreleasedReturnValue([v12 activityType]);
    uint64_t v14 = +[CSDUserActivity activityTypeForUserActivityTypeString:]( &OBJC_CLASS___CSDUserActivity,  "activityTypeForUserActivityTypeString:",  v13);

    if (v5)
    {
      id v15 = sub_1001704C4();
      uint64_t v16 = (os_log_s *)objc_claimAutoreleasedReturnValue(v15);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) mostRecentBestAppSuggestion]);
        uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([v17 activityType]);
        uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) mostRecentBestAppSuggestion]);
        uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([v19 dynamicIdentifier]);
        int v32 = 67109634;
        *(_DWORD *)unint64_t v33 = v14;
        *(_WORD *)&v33[4] = 2112;
        *(void *)&v33[6] = v18;
        __int16 v34 = 2112;
        unint64_t v35 = v20;
        _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "Firing delegate callback for stopped activity type %d (%@) and dynamicIdentifier %@",  (uint8_t *)&v32,  0x1Cu);
      }

      uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) mostRecentBestAppSuggestion]);
      uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue([v21 dynamicIdentifier]);
      [v5 stoppedReceivingActivityType:v14 dynamicIdentifier:v22];
    }

    [*(id *)(a1 + 40) setMostRecentBestAppSuggestion:0];
  }

void sub_10011C904(uint64_t a1)
{
  id v1 = [objc_alloc(*(Class *)(a1 + 32)) initWithName:@"com.apple.private.alloy.phone.auth"];
  id v2 = (void *)qword_10044D048;
  qword_10044D048 = (uint64_t)v1;
}

void sub_10011E9C8(uint64_t a1, int a2)
{
  id v4 = sub_1001704C4();
  unsigned int v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    unint64_t v6 = @"NO";
    if (a2) {
      unint64_t v6 = @"YES";
    }
    *(_DWORD *)buf = 138412290;
    char v8 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "Query for capabilities returned any destinations with web only endpoints: %@",  buf,  0xCu);
  }

  if (a2) {
    [*(id *)(a1 + 32) addMembers:*(void *)(a1 + 40) toExistingMembers:*(void *)(a1 + 48) participantDestinationIDs:*(void *)(a1 + 56) webDestinationIDs:*(void *)(a1 + 64) activeParticipants:*(void *)(a1 + 72) activitySessions:*(void *)(a1 + 80) link:*(void *)(a1 + 88)  otherInvitedHandles:*(void *)(a1 + 96) report:*(void *)(a1 + 104) invitationPreferences:*(void *)(a1 + 112)];
  }
}

void sub_1001222C8(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = sub_1001704C4();
  unint64_t v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    uint64_t v13 = a3;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Handling %@ by requesting handoff for all calls",  buf,  0xCu);
  }

  id v7 = a2;
  char v8 = v7;
  if (v7)
  {
    unsigned int v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v7 queue]);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1001360D0;
    block[3] = &unk_1003D7730;
    id v11 = v8;
    dispatch_async(v9, block);
  }
}

void sub_100122A74( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location)
{
}

void sub_100122B28(id a1, CSDClient *a2)
{
  id v2 = a2;
  id v3 = sub_1001704C4();
  id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = 138412290;
    unint64_t v6 = v2;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "XPC connection interrupted from client %@",  (uint8_t *)&v5,  0xCu);
  }
}

void sub_100122BD0(uint64_t a1, void *a2)
{
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained updateClientsWithCall:v5];
    [v4 updateAudioArbitration];
  }
}

void sub_100122C28(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = WeakRetained;
  if (WeakRetained)
  {
    id v3 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([WeakRetained queue]);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_100122CB8;
    block[3] = &unk_1003D7730;
    id v5 = v2;
    dispatch_async(v3, block);
  }
}

void sub_100122CB8(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientManager]);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  v5[2] = sub_100122D64;
  v5[3] = &unk_1003DA8B8;
  id v6 = *(id *)(a1 + 32);
  id v3 = NSStringFromSelector("handleRoutesByUniqueIdentifierUpdated:");
  id v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  [v2 performBlockOnClients:v5 coalescedByIdentifier:v4];
}

void sub_100122D64(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a3;
  id v6 = (id)objc_claimAutoreleasedReturnValue([v3 localRouteController]);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v6 routesByUniqueIdentifier]);
  [v4 handleLocalRoutesByUniqueIdentifierUpdated:v5];
}

void sub_100122DC4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v5 = WeakRetained;
  if (WeakRetained)
  {
    id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([WeakRetained queue]);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_100122E6C;
    block[3] = &unk_1003D7730;
    id v8 = v3;
    dispatch_async(v6, block);
  }
}

void sub_100122E6C(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue(+[CSDReportingController sharedInstance](&OBJC_CLASS___CSDReportingController, "sharedInstance"));
  [v2 reportRouteWasPickedByAnyTrigger:*(void *)(a1 + 32)];
}

void sub_100122EB0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v5 = WeakRetained;
  if (WeakRetained)
  {
    id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([WeakRetained queue]);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_100122F58;
    block[3] = &unk_1003D7730;
    id v8 = v3;
    dispatch_async(v6, block);
  }
}

void sub_100122F58(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue(+[CSDReportingController sharedInstance](&OBJC_CLASS___CSDReportingController, "sharedInstance"));
  [v2 reportRouteWasPicked:*(void *)(a1 + 32)];
}

void sub_100122F9C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v5 = WeakRetained;
  if (WeakRetained)
  {
    id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([WeakRetained queue]);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_100123044;
    block[3] = &unk_1003D7730;
    id v8 = v3;
    dispatch_async(v6, block);
  }
}

void sub_100123044(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue(+[CSDReportingController sharedInstance](&OBJC_CLASS___CSDReportingController, "sharedInstance"));
  [v2 reportTimedOutPickingRoute:*(void *)(a1 + 32)];
}

void sub_100123088(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = WeakRetained;
  if (WeakRetained)
  {
    id v3 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([WeakRetained queue]);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_100123118;
    block[3] = &unk_1003D7730;
    id v5 = v2;
    dispatch_async(v3, block);
  }
}

void sub_100123118(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientManager]);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  v5[2] = sub_1001231B8;
  v5[3] = &unk_1003DA8B8;
  id v6 = *(id *)(a1 + 32);
  id v3 = NSStringFromSelector("handleRoutesByUniqueIdentifierUpdated:");
  id v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  [v2 performBlockOnClients:v5 coalescedByIdentifier:v4];
}

void sub_1001231B8(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a3;
  id v6 = (id)objc_claimAutoreleasedReturnValue([v3 pairedHostDeviceRouteController]);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v6 routesByUniqueIdentifier]);
  [v4 handlePairedHostDeviceRoutesByUniqueIdentifierUpdated:v5];
}

void sub_100123218(id a1, TURoute *a2)
{
  id v2 = a2;
  id v3 = (id)objc_claimAutoreleasedReturnValue(+[CSDReportingController sharedInstance](&OBJC_CLASS___CSDReportingController, "sharedInstance"));
  [v3 reportRouteWasPickedByAnyTrigger:v2];
}

void sub_100123268(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v5 = WeakRetained;
  if (WeakRetained)
  {
    id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([WeakRetained queue]);
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472LL;
    _DWORD v7[2] = sub_100123320;
    v7[3] = &unk_1003D7758;
    id v8 = v5;
    id v9 = v3;
    dispatch_async(v6, v7);
  }
}

void sub_100123320(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) relayMessagingController]);
  [v2 sendPickRouteMessageToHostForRoute:*(void *)(a1 + 40)];

  id v3 = (id)objc_claimAutoreleasedReturnValue(+[CSDReportingController sharedInstance](&OBJC_CLASS___CSDReportingController, "sharedInstance"));
  [v3 reportRouteWasPicked:*(void *)(a1 + 40)];
}

void sub_100123380(id a1, TURoute *a2)
{
  id v2 = a2;
  id v3 = (id)objc_claimAutoreleasedReturnValue(+[CSDReportingController sharedInstance](&OBJC_CLASS___CSDReportingController, "sharedInstance"));
  [v3 reportTimedOutPickingRoute:v2];
}

void sub_1001234A8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_1001704C4();
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v3 capabilities]);
    *(_DWORD *)buf = 138412546;
    id v35 = v3;
    __int16 v36 = 2112;
    char v37 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "XPC connection invalidated from client: %@ capabilities: %@",  buf,  0x16u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v3 capabilities]);
  unsigned int v9 = [v8 wantsCallDisconnectionOnInvalidation];

  if (v9)
  {
    id v10 = sub_1001704C4();
    id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      __int128 v12 = (void *)objc_claimAutoreleasedReturnValue([v3 processName]);
      *(_DWORD *)buf = 138412290;
      id v35 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "Disconnecting all calls because wantsCallDisconnectionOnInvalidation=YES for %@",  buf,  0xCu);
    }

    uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained callCenter]);
    [v13 disconnectAllCalls];
  }

  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v3 capabilities]);
  unsigned int v15 = [v14 wantsCallStopStreamingOnInvalidation];

  if (v15)
  {
    __int128 v31 = 0u;
    __int128 v32 = 0u;
    __int128 v29 = 0u;
    __int128 v30 = 0u;
    id v28 = WeakRetained;
    uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained callContainer]);
    uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v16 currentVideoCalls]);

    id v18 = [v17 countByEnumeratingWithState:&v29 objects:v33 count:16];
    if (v18)
    {
      id v19 = v18;
      uint64_t v20 = *(void *)v30;
      do
      {
        for (i = 0LL; i != v19; i = (char *)i + 1)
        {
          if (*(void *)v30 != v20) {
            objc_enumerationMutation(v17);
          }
          uint64_t v22 = *(void **)(*((void *)&v29 + 1) + 8LL * (void)i);
          uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue([v22 provider]);
          if ([v23 isSystemProvider])
          {
            unsigned int v24 = [v22 status];

            if (v24 == 1)
            {
              id v25 = sub_1001704C4();
              id v26 = (os_log_s *)objc_claimAutoreleasedReturnValue(v25);
              if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
              {
                uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue([v3 processName]);
                *(_DWORD *)buf = 138412546;
                id v35 = v22;
                __int16 v36 = 2112;
                char v37 = v27;
                _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_DEFAULT,  "Setting isSendingVideo:NO isSharingScreen:NO on call: %@ because wantsCallStopStreamingOnInvalidation=YES for %@",  buf,  0x16u);
              }

              [v22 setIsSendingVideo:0];
              [v22 setSharingScreen:0];
            }
          }

          else
          {
          }
        }

        id v19 = [v17 countByEnumeratingWithState:&v29 objects:v33 count:16];
      }

      while (v19);
    }

    id WeakRetained = v28;
  }
}

void sub_1001238E8(uint64_t a1)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_1001239DC;
  v4[3] = &unk_1003D7DF0;
  objc_copyWeak(&v5, &location);
  +[AVAudioClient registerSecureMicrophoneEngagedHandler:]( &OBJC_CLASS___AVAudioClient,  "registerSecureMicrophoneEngagedHandler:",  v4);
  id v1 = sub_1001704C4();
  id v2 = (os_log_s *)objc_claimAutoreleasedReturnValue(v1);
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v3 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "Registered for registerSecureMicrophoneEngagedHandler",  v3,  2u);
  }

  objc_destroyWeak(&v5);
  objc_destroyWeak(&location);
}

void sub_1001239BC(_Unwind_Exception *a1)
{
}

void sub_1001239DC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = WeakRetained;
  if (WeakRetained)
  {
    id v3 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([WeakRetained queue]);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_100123A5C;
    block[3] = &unk_1003D7730;
    void block[4] = v2;
    dispatch_async(v3, block);
  }
}

void sub_100123A5C(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v6 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Received AVAudioClient secure microphone interruption",  v6,  2u);
  }

  id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) shouldHandleSecureMicrophoneEvents]);
  unsigned int v5 = [v4 BOOLValue];

  if (v5) {
    [*(id *)(a1 + 32) performDisconnectAllCallsWithReason:39];
  }
}

void sub_100124008(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    int v5 = 138412290;
    uint64_t v6 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Received LocaleDidChange notification: %@",  (uint8_t *)&v5,  0xCu);
  }
}

void sub_100124144(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    int v13 = 138412290;
    uint64_t v14 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Received AudioSession Interruption notification: %@",  (uint8_t *)&v13,  0xCu);
  }

  int v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) shouldHandleSecureMicrophoneEvents]);
  unsigned int v6 = [v5 BOOLValue];

  if (v6)
  {
    id v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) userInfo]);
    id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 valueForKey:AVAudioSessionInterruptionReasonKey]);
    unsigned int v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", 2LL));
    unsigned int v10 = [v8 isEqualToNumber:v9];

    if (v10)
    {
      id v11 = sub_1001704C4();
      __int128 v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(v13) = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "Determined that audio interruption was caused due to built in mic muted, ending all calls",  (uint8_t *)&v13,  2u);
      }

      [*(id *)(a1 + 40) performDisconnectAllCallsWithReason:40];
    }
  }

void sub_100124360(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) description]);
    int v29 = 138412290;
    __int128 v30 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Received CarPlay hardware control: %@",  (uint8_t *)&v29,  0xCu);
  }

  if ([*(id *)(a1 + 40) shouldHandleCarPlayControlEvents])
  {
    int v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) userInfo]);
    unsigned int v6 = (void *)objc_claimAutoreleasedReturnValue([v5 valueForKey:kTUCarPlayHardwareControlButtonKey]);

    id v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callContainer]);
    id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 callPassingTest:&stru_1003DA960]);

    unsigned int v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callContainer]);
    unsigned int v10 = (void *)objc_claimAutoreleasedReturnValue([v9 callPassingTest:&stru_1003DA980]);

    id v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callContainer]);
    __int128 v12 = (void *)objc_claimAutoreleasedReturnValue([v11 callPassingTest:&stru_1003DA9A0]);

    id v13 = sub_1001704C4();
    uint64_t v14 = (os_log_s *)objc_claimAutoreleasedReturnValue(v13);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      int v29 = 138413058;
      __int128 v30 = v8;
      __int16 v31 = 2112;
      __int128 v32 = v10;
      __int16 v33 = 2112;
      __int16 v34 = v12;
      __int16 v35 = 2112;
      uint64_t v36 = 0LL;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "Updating calls in response to CarPlay hardware control: incomingCall %@, activeCall %@, heldCall %@ bargeCall %@",  (uint8_t *)&v29,  0x2Au);
    }

    if (v8)
    {
      if (v6 == (void *)kTUCarPlayHardwareControlButtonWhiteTelephoneLongPress)
      {
        unsigned int v15 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callCenter]);
        [v15 disconnectCall:v8];
      }

      else
      {
        if (v6 == (void *)kTUCarPlayHardwareControlButtonGreenTelephone
          || v6 == (void *)kTUCarPlayHardwareControlButtonWhiteTelephone)
        {
          if (!v10)
          {
            if ([v8 status] == 4)
            {
              uint64_t v23 = *(void **)(a1 + 40);
              else {
                uint64_t v24 = 0LL;
              }
              [v23 _answerIncomingCall:v8 withBehavior:v24];
            }

            else if ([v8 isConversation])
            {
              [*(id *)(a1 + 40) _answerIncomingCallAsConversation:v8];
            }

            goto LABEL_44;
          }

          if ([v8 isConversation])
          {
            unsigned int v20 = [v8 status];
            uint64_t v21 = *(void **)(a1 + 40);
            uint64_t v22 = v8;
            if (v20 == 3)
            {
              [v21 _answerIncomingCallAsConversation:v8];
              goto LABEL_42;
            }

            uint64_t v25 = 0LL;
          }

          else
          {
            uint64_t v21 = *(void **)(a1 + 40);
            uint64_t v22 = v8;
            if (v12) {
              uint64_t v25 = 1LL;
            }
            else {
              uint64_t v25 = 2LL;
            }
          }

          [v21 _answerIncomingCall:v22 withBehavior:v25];
LABEL_42:
          goto LABEL_44;
        }

        unsigned int v15 = (void *)objc_claimAutoreleasedReturnValue(+[TUCallCenter sharedInstance](&OBJC_CLASS___TUCallCenter, "sharedInstance"));
        [v15 disconnectCall:v8 withReason:2];
      }

      goto LABEL_40;
    }

    if (v6 != (void *)kTUCarPlayHardwareControlButtonWhiteTelephoneLongPress
      && v6 != (void *)kTUCarPlayHardwareControlButtonRedTelephone)
    {
      if (v6 != (void *)kTUCarPlayHardwareControlButtonWhiteTelephone)
      {
        uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v10 model]);
        if ([v16 supportsHolding])
        {
          uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callCenter]);
          id v18 = [v17 currentCallCount];

          if ((unint64_t)v18 >= 2)
          {
            id v19 = (void *)objc_claimAutoreleasedReturnValue(+[TUCallCenter sharedInstance](&OBJC_CLASS___TUCallCenter, "sharedInstance"));
LABEL_34:
            unsigned int v15 = v19;
            [v19 swapCalls];
LABEL_40:

LABEL_41:
            if (v10) {
              goto LABEL_42;
            }
LABEL_44:

            return;
          }
        }

        else
        {
        }

        if (v12)
        {
          unsigned int v15 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callCenter]);
          [v15 unholdCall:v12];
        }

        else
        {
          if (!v10) {
            goto LABEL_44;
          }
          unsigned int v15 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callCenter]);
          [v15 holdCall:v10];
        }

        goto LABEL_40;
      }

      id v26 = (void *)objc_claimAutoreleasedReturnValue([v10 model]);
      if ([v26 supportsHolding])
      {
        uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callCenter]);
        id v28 = [v27 currentCallCount];

        if ((unint64_t)v28 >= 2)
        {
          id v19 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callCenter]);
          goto LABEL_34;
        }
      }

      else
      {
      }
    }

    unsigned int v15 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callCenter]);
    [v15 disconnectCurrentCallAndActivateHeld];
    goto LABEL_40;
  }

BOOL sub_100124818(id a1, TUCall *a2)
{
  id v2 = a2;
  if (-[TUCall status](v2, "status") == 4)
  {
    unsigned __int8 v3 = 1;
  }

  else if (-[TUCall status](v2, "status") == 3)
  {
    unsigned __int8 v3 = -[TUCall isConversation](v2, "isConversation");
  }

  else
  {
    unsigned __int8 v3 = 0;
  }

  return v3;
}

BOOL sub_100124878(id a1, TUCall *a2)
{
  return -[TUCall status](a2, "status") == 1;
}

BOOL sub_100124898(id a1, TUCall *a2)
{
  return -[TUCall status](a2, "status") == 2;
}

void sub_10012520C(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientManager]);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_1001252BC;
  v4[3] = &unk_1003DA9C8;
  unsigned __int8 v3 = *(void **)(a1 + 40);
  void v4[4] = *(void *)(a1 + 32);
  id v5 = v3;
  id v6 = *(id *)(a1 + 48);
  id v7 = *(id *)(a1 + 56);
  [v2 performBlockOnClients:v4];
}

void sub_1001252BC(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v5 capabilities]);
  if (![v7 wantsCallNotificationsDisabledWhileSuspended]
    || ![v5 isProcessSuspended])
  {

    +[CSDSignposts trace:](&OBJC_CLASS___CSDSignposts, "trace:", 3LL);
    unsigned int v11 = [v5 isRemote];
    __int128 v12 = (void *)a1[4];
    if (v11)
    {
      unsigned int v9 = (void *)objc_claimAutoreleasedReturnValue([v12 eligibleCallsByFilteringCalls:a1[5] forClient:v5]);
      uint64_t v14 = a1[6];
      id v13 = (id *)(a1 + 6);
      if (([*(v13 - 2) isCallEligible:v14 forClient:v5] & 1) == 0)
      {
        unsigned int v10 = 0LL;
        goto LABEL_14;
      }
    }

    else
    {
      unsigned int v15 = (void *)objc_claimAutoreleasedReturnValue([v12 callContainer]);
      unsigned int v9 = (void *)objc_claimAutoreleasedReturnValue([v15 _allCalls]);

      id v13 = (id *)(a1 + 7);
    }

    id v16 = *v13;
    unsigned int v10 = v16;
    if (v16 && [v16 status] == 6)
    {
      id v17 = sub_1001704C4();
      id v18 = (os_log_s *)objc_claimAutoreleasedReturnValue(v17);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
      {
        id v19 = (void *)objc_claimAutoreleasedReturnValue([v5 processName]);
        int v26 = 138412802;
        uint64_t v27 = v19;
        __int16 v28 = 2112;
        int v29 = v10;
        __int16 v30 = 2112;
        __int16 v31 = v9;
        _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEFAULT,  "Updating client %@ with disconnected call: %@ calls: %@",  (uint8_t *)&v26,  0x20u);
      }

      unsigned int v20 = v6;
      uint64_t v21 = v9;
      uint64_t v22 = v10;
      goto LABEL_18;
    }

void sub_100125AA4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_100125ABC(uint64_t result)
{
  *(_BYTE *)(*(void *)(*(void *)(result + 32) + 8LL) + 24LL) = 1;
  return result;
}

void sub_100125B9C(uint64_t a1)
{
  id v2 = NSStringFromSelector("handleFrequencyChangedTo:inDirection:forCallsWithUniqueProxyIdentifiers:");
  unsigned __int8 v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%@-%d",  v3,  *(unsigned int *)(a1 + 56)));

  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientManager]);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  _DWORD v7[2] = sub_100125CD0;
  v7[3] = &unk_1003DAA30;
  id v6 = *(void **)(a1 + 40);
  void v7[4] = *(void *)(a1 + 32);
  id v8 = v6;
  id v9 = *(id *)(a1 + 48);
  int v10 = *(_DWORD *)(a1 + 56);
  [v5 filterClientsUsingPredicate:&stru_1003DAA08 andPerformBlock:v7 coalescedByIdentifier:v4];
}

BOOL sub_100125C98(id a1, CSDClient *a2)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(-[CSDClient capabilities](a2, "capabilities"));
  unsigned __int8 v3 = [v2 wantsFrequencyChangeNotifications];

  return v3;
}

void sub_100125CD0(uint64_t a1, uint64_t a2, void *a3)
{
  id v7 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) eligibleCallsByFilteringCalls:*(void *)(a1 + 40) forClient:a2]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 arrayByApplyingSelector:"uniqueProxyIdentifier"]);
  if ([v6 count]) {
    [v7 handleFrequencyChangedTo:*(void *)(a1 + 48) inDirection:*(unsigned int *)(a1 + 56) forCallsWithUniqueProxyIdentifiers:v6];
  }
}

void sub_100125E08(uint64_t a1)
{
  id v2 = NSStringFromSelector("handleMeterLevelChangedTo:inDirection:forCallsWithUniqueProxyIdentifiers:");
  unsigned __int8 v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%@-%d",  v3,  *(unsigned int *)(a1 + 48)));

  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientManager]);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  _DWORD v7[2] = sub_100125F00;
  v7[3] = &unk_1003DAA78;
  id v6 = *(void **)(a1 + 40);
  void v7[4] = *(void *)(a1 + 32);
  id v8 = v6;
  int v9 = *(_DWORD *)(a1 + 52);
  int v10 = *(_DWORD *)(a1 + 48);
  [v5 filterClientsUsingPredicate:&stru_1003DAA50 andPerformBlock:v7 coalescedByIdentifier:v4];
}

BOOL sub_100125EF8(id a1, CSDClient *a2)
{
  return 0;
}

void sub_100125F00(uint64_t a1, uint64_t a2, void *a3)
{
  id v8 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) eligibleCallsByFilteringCalls:*(void *)(a1 + 40) forClient:a2]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 arrayByApplyingSelector:"uniqueProxyIdentifier"]);
  if ([v6 count])
  {
    LODWORD(v7) = *(_DWORD *)(a1 + 48);
    [v8 handleMeterLevelChangedTo:*(unsigned int *)(a1 + 52) inDirection:v6 forCallsWithUniqueProxyIdentifiers:v7];
  }
}

void sub_100125FF4(uint64_t a1)
{
  id v3 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientManager]);
  id v1 = NSStringFromSelector("resetCallProvisionalStates");
  id v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  [v3 performBlockOnClients:&stru_1003DAAB8 coalescedByIdentifier:v2];
}

void sub_100126054(id a1, CSDClient *a2, TUCallServicesXPCClient *a3)
{
}

void sub_100126154(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  if (v2) {
    id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 uniqueProxyIdentifier]);
  }
  else {
    id v3 = 0LL;
  }
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) clientManager]);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  _DWORD v8[2] = sub_100126248;
  v8[3] = &unk_1003DAAE0;
  int8x16_t v7 = *(int8x16_t *)(a1 + 32);
  id v5 = (id)v7.i64[0];
  int8x16_t v9 = vextq_s8(v7, v7, 8uLL);
  id v10 = *(id *)(a1 + 48);
  id v11 = v3;
  id v12 = *(id *)(a1 + 56);
  id v6 = v3;
  [v4 performBlockOnClients:v8];
}

void sub_100126248(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  if ([*(id *)(a1 + 32) isCallEligible:*(void *)(a1 + 40) forClient:a2]) {
    [v5 handleNotificationName:*(void *)(a1 + 48) forCallWithUniqueProxyIdentifier:*(void *)(a1 + 56) userInfo:*(void *)(a1 + 64)];
  }
}

void sub_1001263D4(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  if (v2) {
    id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 uniqueProxyIdentifier]);
  }
  else {
    id v3 = 0LL;
  }
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) clientManager]);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  _DWORD v8[2] = sub_1001264B4;
  v8[3] = &unk_1003DA9C8;
  int8x16_t v7 = *(int8x16_t *)(a1 + 32);
  id v5 = (id)v7.i64[0];
  int8x16_t v9 = vextq_s8(v7, v7, 8uLL);
  id v10 = *(id *)(a1 + 48);
  id v11 = v3;
  id v6 = v3;
  [v4 performBlockOnClients:v8];
}

void sub_1001264B4(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  if ([*(id *)(a1 + 32) isCallEligible:*(void *)(a1 + 40) forClient:a2]) {
    [v5 handleReceivedCallDTMFUpdate:*(void *)(a1 + 48) forCallWithUniqueProxyIdentifier:*(void *)(a1 + 56)];
  }
}

id sub_100127ED0(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    int v6 = 138412290;
    uint64_t v7 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "notification: %@", (uint8_t *)&v6, 0xCu);
  }

  return [*(id *)(a1 + 40) _requestCallStateFromHost];
}

void sub_100128018(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void **)(a1 + 32);
    *(_DWORD *)buf = 138412290;
    int v26 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "notification: %@", buf, 0xCu);
  }

  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callContainer]);
  int v6 = (void *)objc_claimAutoreleasedReturnValue([v5 callsPassingTest:&stru_1003DAB00]);

  __int128 v23 = 0u;
  __int128 v24 = 0u;
  __int128 v21 = 0u;
  __int128 v22 = 0u;
  id v7 = v6;
  id v8 = [v7 countByEnumeratingWithState:&v21 objects:v29 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = *(void *)v22;
    while (2)
    {
      for (i = 0LL; i != v9; i = (char *)i + 1)
      {
        if (*(void *)v22 != v10) {
          objc_enumerationMutation(v7);
        }
        id v12 = *(void **)(*((void *)&v21 + 1) + 8LL * (void)i);
        id v13 = (void *)objc_claimAutoreleasedReturnValue(+[CSDRouteManager sharedInstance](&OBJC_CLASS___CSDRouteManager, "sharedInstance", (void)v21));
        unsigned __int8 v14 = [v13 isEligibleRouteAvailableForCall:v12];

        unsigned int v15 = (void *)objc_claimAutoreleasedReturnValue([v12 expectedRelayClientDestination]);
        if (v15 && (v14 & 1) == 0)
        {
          id v16 = sub_1001704C4();
          id v17 = (os_log_s *)objc_claimAutoreleasedReturnValue(v16);
          if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
          {
            id v18 = (void *)objc_claimAutoreleasedReturnValue([v12 expectedRelayClientDestination]);
            *(_DWORD *)buf = 138412546;
            int v26 = v18;
            __int16 v27 = 2112;
            __int16 v28 = v12;
            _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "Pushing all calls to device with destination %@ because an eligible audio route is not available and we fo und a call hosted here with its expected endpoint on another device: %@",  buf,  0x16u);
          }

          id v19 = *(void **)(a1 + 40);
          unsigned int v20 = (void *)objc_claimAutoreleasedReturnValue([v12 expectedRelayClientDestination]);
          [v19 performPushHostedCallsToDestination:v20];

          goto LABEL_16;
        }
      }

      id v9 = [v7 countByEnumeratingWithState:&v21 objects:v29 count:16];
      if (v9) {
        continue;
      }
      break;
    }
  }

BOOL sub_100128264(id a1, TUCall *a2)
{
  return -[TUCall isHostedOnCurrentDevice](a2, "isHostedOnCurrentDevice");
}

void sub_100129A0C(uint64_t a1, uint64_t a2)
{
  id v2 = *(void **)(a1 + 32);
  id v4 = (id)objc_claimAutoreleasedReturnValue( +[TUHandle normalizedGenericHandleForValue:]( &OBJC_CLASS___TUHandle,  "normalizedGenericHandleForValue:",  a2));
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v4 normalizedValue]);
  [v2 addObject:v3];
}

BOOL sub_10012A710(id a1, TUCall *a2)
{
  id v2 = a2;
  else {
    LOBYTE(v3) = 0;
  }

  return v3;
}

BOOL sub_10012A758(id a1, TUCall *a2)
{
  return -[TUCall isOnHold](a2, "isOnHold");
}

BOOL sub_10012CEF4(id a1, TUCall *a2)
{
  id v2 = a2;
  else {
    unsigned __int8 v3 = 0;
  }

  return v3;
}

BOOL sub_10012D0E0(id a1, TUCall *a2)
{
  id v2 = a2;
  if ((-[TUCall isHostedOnCurrentDevice](v2, "isHostedOnCurrentDevice") & 1) != 0
    || (-[TUCall isEndpointOnCurrentDevice](v2, "isEndpointOnCurrentDevice") & 1) != 0)
  {
    unsigned __int8 v3 = 0;
  }

  else
  {
    unsigned __int8 v3 = -[TUCall hasRelaySupport:](v2, "hasRelaySupport:", 2LL);
  }

  return v3;
}

void sub_10012D52C(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 callUpdate]);
  int v6 = (void *)objc_claimAutoreleasedReturnValue([v4 provider]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v4 callUUID]);

  id v8 = (id)objc_claimAutoreleasedReturnValue([v5 tuCallUpdateWithProvider:v6 withCallUUID:v7]);
  [*(id *)(a1 + 32) addObject:v8];
}

void sub_10012D6EC(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) pendingCallInfoDict]);
  unsigned __int8 v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callUUID]);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v2 objectForKeyedSubscript:v3]);

  if (!v4)
  {
    id v12 = sub_1001704C4();
    uint64_t v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
    if (!os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_11;
    }
    id v13 = (CXAnswerCallAction *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callUUID]);
    int v22 = 138412290;
    __int128 v23 = v13;
    _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "[WARN] Did not find any pending call info for callUUID: %@",  (uint8_t *)&v22,  0xCu);
LABEL_10:

    goto LABEL_11;
  }

  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) pendingCallInfoDict]);
  [v5 removeAllObjects];

  int v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) callContainer]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 _allCalls]);
  id v8 = [v7 count];

  id v9 = sub_1001704C4();
  uint64_t v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
  BOOL v11 = os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT);
  if (!v8)
  {
    if (v11)
    {
      LOWORD(v22) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "Creating call to screen",  (uint8_t *)&v22,  2u);
    }

    unsigned __int8 v14 = objc_alloc(&OBJC_CLASS___CSDProviderCall);
    unsigned int v15 = (void *)objc_claimAutoreleasedReturnValue([v4 callSource]);
    id v16 = (void *)objc_claimAutoreleasedReturnValue([v4 callUUID]);
    id v17 = (void *)objc_claimAutoreleasedReturnValue([v4 callUpdate]);
    uint64_t v10 = -[CSDProviderCall initIncomingWithBackingCallSource:UUID:update:]( v14,  "initIncomingWithBackingCallSource:UUID:update:",  v15,  v16,  v17);

    [*(id *)(a1 + 32) setCallDelegatesIfNeeded:v10];
    -[os_log_s setScreening:](v10, "setScreening:", 1LL);
    [*(id *)(a1 + 32) propertiesChangedForCall:v10];
    id v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
    -[os_log_s setDateStartedConnecting:](v10, "setDateStartedConnecting:", v18);

    id v19 = objc_alloc(&OBJC_CLASS___CXAnswerCallAction);
    unsigned int v20 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s uniqueProxyIdentifierUUID](v10, "uniqueProxyIdentifierUUID"));
    id v13 = -[CXAnswerCallAction initWithCallUUID:](v19, "initWithCallUUID:", v20);

    -[CXAnswerCallAction setPauseVideoToStart:](v13, "setPauseVideoToStart:", 1LL);
    -[CXAnswerCallAction setScreening:](v13, "setScreening:", 1LL);
    -[CXAnswerCallAction setDowngradeToAudio:](v13, "setDowngradeToAudio:", 1LL);
    __int128 v21 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s providerCallDelegate](v10, "providerCallDelegate"));
    [v21 performCallAction:v13 forCall:v10];

    goto LABEL_10;
  }

  if (v11)
  {
    LOWORD(v22) = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "Not screening call because we have another call on the system",  (uint8_t *)&v22,  2u);
  }

void sub_10012DAF8(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientManager]);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472LL;
  v3[2] = sub_10012DB80;
  v3[3] = &unk_1003DA8B8;
  v3[4] = *(void *)(a1 + 32);
  [v2 filterClientsEntitledForCapability:@"access-calls" andPerformBlock:v3];
}

void sub_10012DB80(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = sub_1001704C4();
  id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    int v10 = 138412290;
    id v11 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "handleUIXPCEndpointChanged client: %@",  (uint8_t *)&v10,  0xCu);
  }

  id v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) uiXPCEndpoint]);
  [v6 handleUIXPCEndpointChanged:v9];
}

void sub_10012DFC0(uint64_t a1)
{
  id v2 = sub_1001704C4();
  unsigned __int8 v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 138412290;
    uint64_t v14 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "dialRequest: %@", buf, 0xCu);
  }

  uint64_t v6 = *(void *)(a1 + 32);
  id v5 = *(void **)(a1 + 40);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  _DWORD v10[2] = sub_10012E0DC;
  v10[3] = &unk_1003DABF8;
  id v7 = *(id *)(a1 + 56);
  uint64_t v8 = *(void *)(a1 + 40);
  id v9 = *(void **)(a1 + 48);
  id v12 = v7;
  void v10[4] = v8;
  id v11 = v9;
  [v5 _dial:v6 displayContext:0 completion:v10];
}

void sub_10012E0DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 48);
  id v5 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) callForClient:*(void *)(a1 + 40) usingCall:a2]);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) currentCallsForClient:*(void *)(a1 + 40)]);
  (*(void (**)(uint64_t, id, void *))(v3 + 16))(v3, v5, v4);
}

void sub_10012E148(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 48);
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) currentCallsForClient:*(void *)(a1 + 40)]);
  (*(void (**)(uint64_t, void, id))(v1 + 16))(v1, 0LL, v2);
}

id sub_10012E288(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    uint64_t v5 = *(void *)(a1 + 40);
    int v7 = 138412546;
    uint64_t v8 = v4;
    __int16 v9 = 2112;
    uint64_t v10 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "dialRequest: %@ displayContext: %@",  (uint8_t *)&v7,  0x16u);
  }

  return [*(id *)(a1 + 48) _dial:*(void *)(a1 + 32) displayContext:*(void *)(a1 + 40) completion:0];
}

void sub_10012E534(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void **)(a1 + 32);
    int v15 = 138412290;
    id v16 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "answerRequest: %@", (uint8_t *)&v15, 0xCu);
  }

  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callContainer]);
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) uniqueProxyIdentifier]);
  int v7 = (void *)objc_claimAutoreleasedReturnValue([v5 callWithUniqueProxyIdentifier:v6]);

  id v8 = sub_1001704C4();
  __int16 v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
  BOOL v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);
  if (v7)
  {
    if (v10)
    {
      id v11 = *(void **)(a1 + 32);
      int v15 = 138412546;
      id v16 = v11;
      __int16 v17 = 2112;
      id v18 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "Performing answer request %@ for call %@",  (uint8_t *)&v15,  0x16u);
    }

    +[CSDSignposts trace:](&OBJC_CLASS___CSDSignposts, "trace:", 6LL);
    [*(id *)(a1 + 40) performAnswerCall:v7 withRequest:*(void *)(a1 + 32)];
  }

  else
  {
    if (v10)
    {
      id v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) uniqueProxyIdentifier]);
      id v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callContainer]);
      uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v13 _allCalls]);
      int v15 = 138412546;
      id v16 = v12;
      __int16 v17 = 2112;
      id v18 = v14;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "[WARN] Could not find call for uniqueProxyIdentifier %@. All calls: %@",  (uint8_t *)&v15,  0x16u);
    }
  }
}

void sub_10012E7F0(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    int v12 = 138412290;
    uint64_t v13 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Holding call with identifier: %@",  (uint8_t *)&v12,  0xCu);
  }

  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callContainer]);
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v5 callWithUniqueProxyIdentifier:*(void *)(a1 + 32)]);

  if (v6)
  {
    [*(id *)(a1 + 40) performHoldCall:v6];
  }

  else
  {
    id v7 = sub_1001704C4();
    id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      BOOL v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callContainer]);
      id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 _allCalls]);
      int v12 = 138412546;
      uint64_t v13 = v9;
      __int16 v14 = 2112;
      int v15 = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "[WARN] Could not find call for uniqueProxyIdentifier %@. All calls: %@",  (uint8_t *)&v12,  0x16u);
    }
  }
}

void sub_10012EA24(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    int v12 = 138412290;
    uint64_t v13 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Unholding call with identifier: %@",  (uint8_t *)&v12,  0xCu);
  }

  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callContainer]);
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v5 callWithUniqueProxyIdentifier:*(void *)(a1 + 32)]);

  if (v6)
  {
    [*(id *)(a1 + 40) performUnholdCall:v6];
  }

  else
  {
    id v7 = sub_1001704C4();
    id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      BOOL v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callContainer]);
      id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 _allCalls]);
      int v12 = 138412546;
      uint64_t v13 = v9;
      __int16 v14 = 2112;
      int v15 = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "[WARN] Could not find call for uniqueProxyIdentifier %@. All calls: %@",  (uint8_t *)&v12,  0x16u);
    }
  }
}

void sub_10012EC58(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void **)(a1 + 32);
    *(_DWORD *)buf = 138412290;
    uint64_t v36 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Requesting video upgrade for call with identifier: %@",  buf,  0xCu);
  }

  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callContainer]);
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v5 callWithUniqueProxyIdentifier:*(void *)(a1 + 32)]);

  if (v6)
  {
    id v7 = objc_alloc(&OBJC_CLASS___CXEnableVideoCallAction);
    id v8 = (void *)objc_claimAutoreleasedReturnValue([v6 uniqueProxyIdentifierUUID]);
    uint64_t v9 = (os_log_s *)[v7 initWithCallUUID:v8 videoEnabled:1];

    BOOL v10 = (void *)objc_claimAutoreleasedReturnValue([v6 providerCallDelegate]);
    __int16 v30 = v9;
    [v10 performCallAction:v9 forCall:v6];

    [v6 setVideo:1];
    __int128 v33 = 0u;
    __int128 v34 = 0u;
    __int128 v31 = 0u;
    __int128 v32 = 0u;
    id v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callContainer]);
    int v12 = (void *)objc_claimAutoreleasedReturnValue([v11 currentAudioAndVideoCalls]);

    id v13 = [v12 countByEnumeratingWithState:&v31 objects:v39 count:16];
    if (v13)
    {
      id v14 = v13;
      uint64_t v15 = *(void *)v32;
      do
      {
        for (i = 0LL; i != v14; i = (char *)i + 1)
        {
          if (*(void *)v32 != v15) {
            objc_enumerationMutation(v12);
          }
          __int16 v17 = *(void **)(*((void *)&v31 + 1) + 8LL * (void)i);
          id v18 = (void *)objc_claimAutoreleasedReturnValue([v17 uniqueProxyIdentifier]);
          id v19 = (void *)objc_claimAutoreleasedReturnValue([v6 uniqueProxyIdentifier]);
          unsigned __int8 v20 = [v18 isEqualToString:v19];

          if ((v20 & 1) == 0)
          {
            id v21 = sub_1001704C4();
            int v22 = (os_log_s *)objc_claimAutoreleasedReturnValue(v21);
            if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
            {
              __int128 v23 = (void *)objc_claimAutoreleasedReturnValue([v17 uniqueProxyIdentifier]);
              __int128 v24 = (void *)objc_claimAutoreleasedReturnValue([v6 uniqueProxyIdentifier]);
              *(_DWORD *)buf = 138412546;
              uint64_t v36 = v23;
              __int16 v37 = 2112;
              unsigned int v38 = v24;
              _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEFAULT,  "Requesting to disconnect call %@ since also requesting call %@ to upgrade to video",  buf,  0x16u);
            }

            [*(id *)(a1 + 40) performDisconnectCall:v17];
          }
        }

        id v14 = [v12 countByEnumeratingWithState:&v31 objects:v39 count:16];
      }

      while (v14);
    }

    uint64_t v25 = v30;
  }

  else
  {
    id v26 = sub_1001704C4();
    uint64_t v25 = (os_log_s *)objc_claimAutoreleasedReturnValue(v26);
    if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
    {
      __int16 v27 = *(void **)(a1 + 32);
      __int16 v28 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callContainer]);
      int v29 = (void *)objc_claimAutoreleasedReturnValue([v28 _allCalls]);
      *(_DWORD *)buf = 138412546;
      uint64_t v36 = v27;
      __int16 v37 = 2112;
      unsigned int v38 = v29;
      _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEFAULT,  "[WARN] Could not find call for uniqueProxyIdentifier %@. All calls: %@",  buf,  0x16u);
    }
  }
}

void sub_10012F084(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    uint64_t v5 = *(void **)(a1 + 40);
    int v13 = 138412546;
    uint64_t v14 = v4;
    __int16 v15 = 2112;
    id v16 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Disconnecting call with identifier: %@, client: %@",  (uint8_t *)&v13,  0x16u);
  }

  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) callContainer]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 callWithUniqueProxyIdentifier:*(void *)(a1 + 32)]);

  if (v7)
  {
    [*(id *)(a1 + 48) performDisconnectCall:v7];
  }

  else
  {
    id v8 = sub_1001704C4();
    uint64_t v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = *(void *)(a1 + 32);
      id v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) callContainer]);
      int v12 = (void *)objc_claimAutoreleasedReturnValue([v11 _allCalls]);
      int v13 = 138412546;
      uint64_t v14 = v10;
      __int16 v15 = 2112;
      id v16 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "[WARN] Could not find call for uniqueProxyIdentifier %@. All calls: %@",  (uint8_t *)&v13,  0x16u);
    }
  }
}

void sub_10012F2F4(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(os_log_s **)(a1 + 32);
    uint64_t v5 = *(void *)(a1 + 40);
    int v17 = 138412546;
    id v18 = v4;
    __int16 v19 = 2112;
    *(void *)unsigned __int8 v20 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Grouping calls with identifiers %@ %@",  (uint8_t *)&v17,  0x16u);
  }

  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) callContainer]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 callWithUniqueProxyIdentifier:*(void *)(a1 + 32)]);

  id v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) callContainer]);
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v8 callWithUniqueProxyIdentifier:*(void *)(a1 + 40)]);

  if (v7 && v9)
  {
    uint64_t v10 = (os_log_s *)objc_claimAutoreleasedReturnValue([v7 dataSource]);
    id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue([v9 dataSource]);
    if (v10 == v11)
    {
      [*(id *)(a1 + 48) performGroupCall:v7 withCall:v9];
    }

    else
    {
      id v12 = sub_1001704C4();
      int v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        int v17 = 138412546;
        id v18 = v10;
        __int16 v19 = 2112;
        *(void *)unsigned __int8 v20 = v11;
        _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "[WARN] Asked to group call with data source %@ with another call with a different data source %@",  (uint8_t *)&v17,  0x16u);
      }
    }
  }

  else
  {
    id v14 = sub_1001704C4();
    uint64_t v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      __int16 v15 = *(os_log_s **)(a1 + 32);
      uint64_t v16 = *(void *)(a1 + 40);
      int v17 = 138413058;
      id v18 = v15;
      __int16 v19 = 1024;
      *(_DWORD *)unsigned __int8 v20 = v7 == 0LL;
      *(_WORD *)&v20[4] = 2112;
      *(void *)&v20[6] = v16;
      __int16 v21 = 1024;
      BOOL v22 = v9 == 0LL;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "[WARN] Could not find call for uniqueProxyIdentifier %@ (%d) or could not find call for otherUniqueProxyIdentifier %@ (%d)",  (uint8_t *)&v17,  0x22u);
    }
  }
}

void sub_10012F5F4(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    int v12 = 138412290;
    uint64_t v13 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Ungrouping call with identifier: %@",  (uint8_t *)&v12,  0xCu);
  }

  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callContainer]);
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v5 callWithUniqueProxyIdentifier:*(void *)(a1 + 32)]);

  if (v6)
  {
    [*(id *)(a1 + 40) performUngroupCall:v6];
  }

  else
  {
    id v7 = sub_1001704C4();
    id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callContainer]);
      id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 _allCalls]);
      int v12 = 138412546;
      uint64_t v13 = v9;
      __int16 v14 = 2112;
      __int16 v15 = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "[WARN] Could not find call for uniqueProxyIdentifier %@. All calls: %@",  (uint8_t *)&v12,  0x16u);
    }
  }
}

id sub_10012F804(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Swapping calls", v5, 2u);
  }

  return [*(id *)(a1 + 32) performSwapCalls];
}

void sub_10012F948(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    int v5 = *(unsigned __int8 *)(a1 + 48);
    int v13 = 138412546;
    uint64_t v14 = v4;
    __int16 v15 = 1024;
    LODWORD(v16) = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Playing DTMF tone for call with identifier: %@ key: %d",  (uint8_t *)&v13,  0x12u);
  }

  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callContainer]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 callWithUniqueProxyIdentifier:*(void *)(a1 + 32)]);

  if (v7)
  {
    [*(id *)(a1 + 40) performPlayDTMFToneForCall:v7 key:*(unsigned __int8 *)(a1 + 48)];
  }

  else
  {
    id v8 = sub_1001704C4();
    uint64_t v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = *(void *)(a1 + 32);
      id v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callContainer]);
      int v12 = (void *)objc_claimAutoreleasedReturnValue([v11 _allCalls]);
      int v13 = 138412546;
      uint64_t v14 = v10;
      __int16 v15 = 2112;
      uint64_t v16 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "[WARN] Could not find call for uniqueProxyIdentifier %@. All calls: %@",  (uint8_t *)&v13,  0x16u);
    }
  }
}

id sub_10012FB6C(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int v5 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Disconnecting current call and activating held call",  v5,  2u);
  }

  return [*(id *)(a1 + 32) performDisconnectCurrentCallAndActivateHeld];
}

id sub_10012FC7C(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Disconnecting all calls", v5, 2u);
  }

  return [*(id *)(a1 + 32) performDisconnectAllCallsWithReason:41];
}

void sub_10012FDC4(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = *(_DWORD *)(a1 + 48);
    uint64_t v5 = *(void *)(a1 + 32);
    v8[0] = 67109378;
    v8[1] = v4;
    __int16 v9 = 2112;
    uint64_t v10 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Setting TTY type to %d for call with identifier %@",  (uint8_t *)v8,  0x12u);
  }

  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callContainer]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 callWithUniqueProxyIdentifier:*(void *)(a1 + 32)]);

  [*(id *)(a1 + 40) performSetTTYType:*(unsigned int *)(a1 + 48) forCall:v7];
}

void sub_10012FF8C(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 48);
    uint64_t v5 = *(void *)(a1 + 32);
    int v8 = 134218242;
    uint64_t v9 = v4;
    __int16 v10 = 2112;
    uint64_t v11 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Setting TTY TULiveVoicemailUnavailableReason to %d for call with identifier %@",  (uint8_t *)&v8,  0x16u);
  }

  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callContainer]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 callWithUniqueProxyIdentifier:*(void *)(a1 + 32)]);

  if (![v7 liveVoicemailUnavailableReason]) {
    [*(id *)(a1 + 40) performSetLiveVoicemailUnavailableReason:*(void *)(a1 + 48) forCall:v7];
  }
}

id sub_100130128(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Pulling relaying calls from client", v5, 2u);
  }

  return [*(id *)(a1 + 32) performPullRelayingCallsFromClientAndUpdateEndpoint:1 updateExpectedDestination:1];
}

id sub_100130240(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Pulling relaying GFT calls from client if endpoint does not support GFT relay",  v5,  2u);
  }

  return [*(id *)(a1 + 32) performPullRelayingCallsFromClientAndUpdateEndpoint:1 updateExpectedDestination:1 onlyIfNeedsEndpointConversationRelaySupport:1];
}

id sub_100130380(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    int v6 = 138412290;
    uint64_t v7 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Pushing relaying calls to host with source identifier: %@",  (uint8_t *)&v6,  0xCu);
  }

  return [*(id *)(a1 + 40) performPushRelayingCallsToHostWithSourceIdentifier:*(void *)(a1 + 32)];
}

void sub_1001305A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 48);
  id v5 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) callForClient:*(void *)(a1 + 40) usingCall:a2]);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) currentCallsForClient:*(void *)(a1 + 40)]);
  (*(void (**)(uint64_t, id, void *))(v3 + 16))(v3, v5, v4);
}

id sub_10013060C(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    int v6 = 138412290;
    uint64_t v7 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Pulling calls from client using handoff info %@",  (uint8_t *)&v6,  0xCu);
  }

  return [*(id *)(a1 + 40) performPullCallFromClientUsingHandoffActivityUserInfo:*(void *)(a1 + 32) completion:*(void *)(a1 + 48)];
}

uint64_t sub_1001306BC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

id sub_100130790(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    int v6 = 138412290;
    uint64_t v7 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Sending MMI or USSD code for dial request: %@",  (uint8_t *)&v6,  0xCu);
  }

  return [*(id *)(a1 + 40) performSendMMIOrUSSDCodeWithRequest:*(void *)(a1 + 32)];
}

void sub_100130910(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = *(unsigned __int8 *)(a1 + 48);
    uint64_t v5 = *(void *)(a1 + 32);
    int v13 = 67109378;
    *(_DWORD *)uint64_t v14 = v4;
    *(_WORD *)&v14[4] = 2112;
    *(void *)&v14[6] = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Setting uplink muted (%d) for call with identifier %@",  (uint8_t *)&v13,  0x12u);
  }

  int v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callContainer]);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 callWithUniqueProxyIdentifier:*(void *)(a1 + 32)]);

  if (v7)
  {
    [*(id *)(a1 + 40) performSetUplinkMuted:*(unsigned __int8 *)(a1 + 48) forCall:v7];
  }

  else
  {
    id v8 = sub_1001704C4();
    uint64_t v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = *(void *)(a1 + 32);
      uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callContainer]);
      int v12 = (void *)objc_claimAutoreleasedReturnValue([v11 _allCalls]);
      int v13 = 138412546;
      *(void *)uint64_t v14 = v10;
      *(_WORD *)&v14[8] = 2112;
      *(void *)&v14[10] = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "[WARN] Could not find call for uniqueProxyIdentifier %@. All calls: %@",  (uint8_t *)&v13,  0x16u);
    }
  }
}

void sub_100130B68(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = *(unsigned __int8 *)(a1 + 48);
    uint64_t v5 = *(void *)(a1 + 32);
    int v13 = 67109378;
    *(_DWORD *)uint64_t v14 = v4;
    *(_WORD *)&v14[4] = 2112;
    *(void *)&v14[6] = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Setting downlink muted (%d) for call with identifier %@",  (uint8_t *)&v13,  0x12u);
  }

  int v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callContainer]);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 callWithUniqueProxyIdentifier:*(void *)(a1 + 32)]);

  if (v7)
  {
    [v7 setDownlinkMuted:*(unsigned __int8 *)(a1 + 48)];
  }

  else
  {
    id v8 = sub_1001704C4();
    uint64_t v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = *(void *)(a1 + 32);
      uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callContainer]);
      int v12 = (void *)objc_claimAutoreleasedReturnValue([v11 _allCalls]);
      int v13 = 138412546;
      *(void *)uint64_t v14 = v10;
      *(_WORD *)&v14[8] = 2112;
      *(void *)&v14[10] = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "[WARN] Could not find call for uniqueProxyIdentifier %@. All calls: %@",  (uint8_t *)&v13,  0x16u);
    }
  }
}

void sub_100130DBC(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = *(unsigned __int8 *)(a1 + 48);
    uint64_t v5 = *(void *)(a1 + 32);
    int v14 = 67109378;
    *(_DWORD *)__int16 v15 = v4;
    *(_WORD *)&v15[4] = 2112;
    *(void *)&v15[6] = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Setting is sending video (%d) for call with identifier %@",  (uint8_t *)&v14,  0x12u);
  }

  if (*(_BYTE *)(a1 + 48) && ([*(id *)(a1 + 40) isInCallUIActive] & 1) == 0)
  {
    id v8 = sub_1001704C4();
    uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_1002B7488((unsigned __int8 *)(a1 + 48), v7);
    }
  }

  else
  {
    int v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callContainer]);
    uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue([v6 callWithUniqueProxyIdentifier:*(void *)(a1 + 32)]);

    if (v7)
    {
      -[os_log_s setIsSendingVideo:](v7, "setIsSendingVideo:", *(unsigned __int8 *)(a1 + 48));
    }

    else
    {
      id v9 = sub_1001704C4();
      uint64_t v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v11 = *(void *)(a1 + 32);
        int v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callContainer]);
        int v13 = (void *)objc_claimAutoreleasedReturnValue([v12 _allCalls]);
        int v14 = 138412546;
        *(void *)__int16 v15 = v11;
        *(_WORD *)&v15[8] = 2112;
        *(void *)&v15[10] = v13;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "[WARN] Could not find call for uniqueProxyIdentifier %@. All calls: %@",  (uint8_t *)&v14,  0x16u);
      }
    }
  }
}

void sub_100131050(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = *(unsigned __int8 *)(a1 + 48);
    uint64_t v5 = *(void *)(a1 + 32);
    int v13 = 67109378;
    *(_DWORD *)int v14 = v4;
    *(_WORD *)&v14[4] = 2112;
    *(void *)&v14[6] = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Settings mixes voice with media (%d) for call with identifier %@",  (uint8_t *)&v13,  0x12u);
  }

  int v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callContainer]);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 callWithUniqueProxyIdentifier:*(void *)(a1 + 32)]);

  if (v7)
  {
    [v7 setMixesVoiceWithMedia:*(unsigned __int8 *)(a1 + 48)];
  }

  else
  {
    id v8 = sub_1001704C4();
    id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = *(void *)(a1 + 32);
      uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callContainer]);
      int v12 = (void *)objc_claimAutoreleasedReturnValue([v11 _allCalls]);
      int v13 = 138412546;
      *(void *)int v14 = v10;
      *(_WORD *)&v14[8] = 2112;
      *(void *)&v14[10] = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "[WARN] Could not find call for uniqueProxyIdentifier %@. All calls: %@",  (uint8_t *)&v13,  0x16u);
    }
  }
}

void sub_1001312A4(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = *(unsigned __int8 *)(a1 + 48);
    uint64_t v5 = *(void *)(a1 + 32);
    int v13 = 67109378;
    *(_DWORD *)int v14 = v4;
    *(_WORD *)&v14[4] = 2112;
    *(void *)&v14[6] = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Setting sharing screen (%d) for call with identifier %@",  (uint8_t *)&v13,  0x12u);
  }

  int v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callContainer]);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 callWithUniqueProxyIdentifier:*(void *)(a1 + 32)]);

  if (v7)
  {
    [v7 setSharingScreen:*(unsigned __int8 *)(a1 + 48)];
  }

  else
  {
    id v8 = sub_1001704C4();
    id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = *(void *)(a1 + 32);
      uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callContainer]);
      int v12 = (void *)objc_claimAutoreleasedReturnValue([v11 _allCalls]);
      int v13 = 138412546;
      *(void *)int v14 = v10;
      *(_WORD *)&v14[8] = 2112;
      *(void *)&v14[10] = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "[WARN] Could not find call for uniqueProxyIdentifier %@. All calls: %@",  (uint8_t *)&v13,  0x16u);
    }
  }
}

void sub_1001314F8(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = *(unsigned __int8 *)(a1 + 48);
    uint64_t v5 = *(void *)(a1 + 32);
    int v13 = 67109378;
    *(_DWORD *)int v14 = v4;
    *(_WORD *)&v14[4] = 2112;
    *(void *)&v14[6] = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Setting has emergency video stream (%d) for call with identifier %@",  (uint8_t *)&v13,  0x12u);
  }

  int v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callContainer]);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 callWithUniqueProxyIdentifier:*(void *)(a1 + 32)]);

  if (v7)
  {
    [v7 setHasEmergencyVideoStream:*(unsigned __int8 *)(a1 + 48)];
  }

  else
  {
    id v8 = sub_1001704C4();
    id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = *(void *)(a1 + 32);
      uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callContainer]);
      int v12 = (void *)objc_claimAutoreleasedReturnValue([v11 _allCalls]);
      int v13 = 138412546;
      *(void *)int v14 = v10;
      *(_WORD *)&v14[8] = 2112;
      *(void *)&v14[10] = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "[WARN] Could not find call for uniqueProxyIdentifier %@. All calls: %@",  (uint8_t *)&v13,  0x16u);
    }
  }
}

void sub_100131768(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    uint64_t v5 = *(void **)(a1 + 40);
    int v13 = 138412546;
    uint64_t v14 = v4;
    __int16 v15 = 2112;
    uint64_t v16 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Setting emergency media items (%@) for call with identifier %@",  (uint8_t *)&v13,  0x16u);
  }

  int v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) callContainer]);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 callWithUniqueProxyIdentifier:*(void *)(a1 + 40)]);

  if (v7)
  {
    id v8 = (os_log_s *)[*(id *)(a1 + 32) copy];
    [v7 setEmergencyMediaItems:v8];
  }

  else
  {
    id v9 = sub_1001704C4();
    id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = *(void *)(a1 + 40);
      uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) callContainer]);
      int v12 = (void *)objc_claimAutoreleasedReturnValue([v11 _allCalls]);
      int v13 = 138412546;
      uint64_t v14 = v10;
      __int16 v15 = 2112;
      uint64_t v16 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "[WARN] Could not find call for uniqueProxyIdentifier %@. All calls: %@",  (uint8_t *)&v13,  0x16u);
    }
  }
}

id sub_1001319B4(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    int v6 = 138412290;
    uint64_t v7 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Pusing hosted calls to destination %@",  (uint8_t *)&v6,  0xCu);
  }

  return [*(id *)(a1 + 40) performPushHostedCallsToDestination:*(void *)(a1 + 32)];
}

id sub_100131B00(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Pulling calls hosted on paired device", v5, 2u);
  }

  return [*(id *)(a1 + 32) performPullHostedCallsFromPairedHostDevice];
}

void sub_100131C34(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    int v7 = 138412290;
    uint64_t v8 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Sending hard pause digits for call with identifier %@",  (uint8_t *)&v7,  0xCu);
  }

  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callContainer]);
  int v6 = (void *)objc_claimAutoreleasedReturnValue([v5 callWithUniqueProxyIdentifier:*(void *)(a1 + 32)]);

  [v6 sendHardPauseDigits];
}

id sub_100131DCC(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    int v6 = 138412290;
    uint64_t v7 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Updating call with proxy call %@",  (uint8_t *)&v6,  0xCu);
  }

  return [*(id *)(a1 + 40) performUpdateCallWithProxy:*(void *)(a1 + 32)];
}

void sub_100131F3C(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    int v9 = 138412290;
    uint64_t v10 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Entered foreground for call with identifier %@",  (uint8_t *)&v9,  0xCu);
  }

  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callContainer]);
  int v6 = (void *)objc_claimAutoreleasedReturnValue([v5 callWithUniqueProxyIdentifier:*(void *)(a1 + 32)]);

  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[CSDReportingController sharedInstance](&OBJC_CLASS___CSDReportingController, "sharedInstance"));
  [v7 reportCallEnteredForeground:v6];

  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
  [v8 postNotificationName:@"CSDCallEnteredForegroundNotification" object:v6];
}

void sub_1001320BC(id a1)
{
  id v1 = sub_1001704C4();
  id v2 = (os_log_s *)objc_claimAutoreleasedReturnValue(v1);
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Entering background for all calls", v4, 2u);
  }

  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
  [v3 postNotificationName:@"CSDCallsWillEnterBackgroundNotification" object:0];
}

void sub_1001321B4(id a1)
{
  id v1 = sub_1001704C4();
  id v2 = (os_log_s *)objc_claimAutoreleasedReturnValue(v1);
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Entered background for all calls", v4, 2u);
  }

  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(+[CSDReportingController sharedInstance](&OBJC_CLASS___CSDReportingController, "sharedInstance"));
  [v3 reportAllCallsBackgrounded];
}

void sub_10013230C(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = NSStringFromSize(*(NSSize *)(a1 + 48));
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
    uint64_t v6 = *(void *)(a1 + 32);
    int v9 = 138412546;
    uint64_t v10 = v5;
    __int16 v11 = 2112;
    uint64_t v12 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Setting remote video presentation size to %@ for call with identifier %@",  (uint8_t *)&v9,  0x16u);
  }

  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callContainer]);
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v7 callWithUniqueProxyIdentifier:*(void *)(a1 + 32)]);

  objc_msgSend(v8, "setRemoteVideoPresentationSize:", *(double *)(a1 + 48), *(double *)(a1 + 56));
}

void sub_1001324E0(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = *(_DWORD *)(a1 + 48);
    uint64_t v5 = *(void *)(a1 + 32);
    v8[0] = 67109378;
    v8[1] = v4;
    __int16 v9 = 2112;
    uint64_t v10 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Setting remote video presentation state to %d for call with identifier %@",  (uint8_t *)v8,  0x12u);
  }

  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callContainer]);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 callWithUniqueProxyIdentifier:*(void *)(a1 + 32)]);

  [v7 setRemoteVideoPresentationState:*(unsigned int *)(a1 + 48)];
}

void sub_1001326C0(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    uint64_t v5 = *(void *)(a1 + 40);
    int v8 = 138412546;
    uint64_t v9 = v4;
    __int16 v10 = 2112;
    uint64_t v11 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Setting screen share attributes to %@ for call with identifier %@",  (uint8_t *)&v8,  0x16u);
  }

  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) callContainer]);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 callWithUniqueProxyIdentifier:*(void *)(a1 + 40)]);

  [v7 setScreenShareAttributes:*(void *)(a1 + 32)];
}

void sub_1001328A4(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = *(unsigned __int8 *)(a1 + 56);
    uint64_t v5 = *(void *)(a1 + 32);
    uint64_t v6 = *(void *)(a1 + 40);
    v9[0] = 67109634;
    v9[1] = v4;
    __int16 v10 = 2112;
    uint64_t v11 = v5;
    __int16 v12 = 2112;
    uint64_t v13 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Setting screen sharing to (%d) and attributes to %@ for call with identifier %@",  (uint8_t *)v9,  0x1Cu);
  }

  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) callContainer]);
  int v8 = (void *)objc_claimAutoreleasedReturnValue([v7 callWithUniqueProxyIdentifier:*(void *)(a1 + 40)]);

  [v8 setSharingScreen:*(unsigned __int8 *)(a1 + 56) attributes:*(void *)(a1 + 32)];
}

void sub_100132A74(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 48);
    uint64_t v5 = *(void *)(a1 + 32);
    int v10 = 134218242;
    uint64_t v11 = v4;
    __int16 v12 = 2112;
    uint64_t v13 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Setting Bluetooth audio format to %ld for call with identifier %@",  (uint8_t *)&v10,  0x16u);
  }

  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callContainer]);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 callWithUniqueProxyIdentifier:*(void *)(a1 + 32)]);

  id v8 = [v7 bluetoothAudioFormat];
  if (v8 != *(id *)(a1 + 48))
  {
    if (objc_msgSend(v7, "bluetoothAudioFormat", v8) == (id)1 || (id v8 = *(id *)(a1 + 48), v8 == (id)1))
    {
      uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue( +[TUAudioSystemController sharedAudioSystemController]( &OBJC_CLASS___TUAudioSystemController,  "sharedAudioSystemController"));
      [v9 switchBluetoothAudioFormats];

      id v8 = *(id *)(a1 + 48);
    }
  }

  [v7 setBluetoothAudioFormat:v8];
}

id sub_100132D68(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    int v6 = 138412290;
    uint64_t v7 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "CSDCallStateController: joinConversationWithRequest: %@",  (uint8_t *)&v6,  0xCu);
  }

  return [*(id *)(a1 + 40) performJoinConversation:*(void *)(a1 + 32)];
}

void sub_100132EE0(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    int v7 = 138412290;
    uint64_t v8 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Setting current audio input to device with UID %@",  (uint8_t *)&v7,  0xCu);
  }

  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callCenter]);
  int v6 = (void *)objc_claimAutoreleasedReturnValue([v5 audioDeviceController]);
  [v6 setCurrentAudioInputDeviceToDeviceWithUID:*(void *)(a1 + 32)];
}

void sub_10013307C(uint64_t a1)
{
  id v2 = sub_1001704C4();
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    int v7 = 138412290;
    uint64_t v8 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Setting current audio output to device with UID %@",  (uint8_t *)&v7,  0xCu);
  }

  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) callCenter]);
  int v6 = (void *)objc_claimAutoreleasedReturnValue([v5 audioDeviceController]);
  [v6 setCurrentAudioOutputDeviceToDeviceWithUID:*(void *)(a1 + 32)];
}

void sub_100133218(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  id v3 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) localRouteController]);
  id v2 = (void *)objc_claimAutoreleasedReturnValue([v3 routesByUniqueIdentifier]);
  (*(void (**)(uint64_t, void *))(v1 + 16))(v1, v2);
}

void sub_100133330(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  id v3 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) pairedHostDeviceRouteController]);
  id v2 = (void *)objc_claimAutoreleasedReturnValue([v3 routesByUniqueIdentifier]);
  (*(void (**)(uint64_t, void *))(v1 + 16))(v1, v2);
}

void sub_100133458(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    int v6 = 138412290;
    uint64_t v7 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Picking local route with identifier: %@",  (uint8_t *)&v6,  0xCu);
  }

  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) localRouteController]);
  [v5 pickRouteWithUniqueIdentifier:*(void *)(a1 + 32) shouldWaitUntilAvailable:*(unsigned __int8 *)(a1 + 48)];
}

void sub_1001335F0(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    int v6 = 138412290;
    uint64_t v7 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Picking paired device with identifier %@",  (uint8_t *)&v6,  0xCu);
  }

  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) pairedHostDeviceRouteController]);
  [v5 pickRouteWithUniqueIdentifier:*(void *)(a1 + 32) shouldWaitUntilAvailable:*(unsigned __int8 *)(a1 + 48)];
}

void sub_1001337D4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  id v4 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) providerCallDataSource]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v4 callFilterController]);
  (*(void (**)(uint64_t, id))(v2 + 16))( v2,  [v3 containsOutgoingRestrictedHandle:*(void *)(a1 + 40) forBundleIdentifier:*(void *)(a1 + 48) performSynchronously:*(unsigned __int8 *)(a1 + 64)]);
}

uint64_t sub_100133908(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_100133A2C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  id v5 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) providerCallDataSource]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v5 callFilterController]);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) allObjects]);
  (*(void (**)(uint64_t, id))(v2 + 16))( v2,  [v3 willRestrictAddresses:v4 forBundleIdentifier:*(void *)(a1 + 48)]);
}

uint64_t sub_100133B78(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_100133CC4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 64);
  id v4 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) providerCallDataSource]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v4 callFilterController]);
  (*(void (**)(uint64_t, id))(v2 + 16))( v2,  [v3 isUnknownAddress:*(void *)(a1 + 40) normalizedAddress:*(void *)(a1 + 48) forBundleIdentifier:*(void *)(a1 + 56)]);
}

void sub_100133E44(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  id v5 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) providerCallDataSource]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v5 callFilterController]);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) allObjects]);
  (*(void (**)(uint64_t, id))(v2 + 16))( v2,  [v3 filterStatusForAddresses:v4 withBundleIdentifier:*(void *)(a1 + 48)]);
}

BOOL sub_1001340BC(id a1, TUCall *a2, NSDictionary *a3)
{
  id v3 = a2;
  else {
    unsigned __int8 v4 = -[TUCall isEndpointOnCurrentDevice](v3, "isEndpointOnCurrentDevice");
  }

  return v4;
}

BOOL sub_1001341B4(id a1, TUCall *a2, NSDictionary *a3)
{
  return -[TUCall isHostedOnCurrentDevice](a2, "isHostedOnCurrentDevice", a3) ^ 1;
}

BOOL sub_100134284(id a1, TUCall *a2, NSDictionary *a3)
{
  id v3 = a2;
  unsigned __int8 v4 = -[TUCall isHostedOnCurrentDevice](v3, "isHostedOnCurrentDevice");
  unsigned __int8 v5 = -[TUCall isEndpointOnCurrentDevice](v3, "isEndpointOnCurrentDevice");

  return v4 ^ v5;
}

BOOL sub_100134354(id a1, TUCall *a2)
{
  uint64_t v2 = a2;
  BOOL v3 = -[TUCall status](v2, "status") == 2
    || -[TUCall status](v2, "status") == 1
    || -[TUCall status](v2, "status") == 3;

  return v3;
}

void sub_1001346DC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_1001346F4(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) callContainer]);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_1001347A4;
  v4[3] = &unk_1003D79F0;
  id v5 = *(id *)(a1 + 40);
  BOOL v3 = (void *)objc_claimAutoreleasedReturnValue([v2 callsPassingTest:v4]);

  *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = [v3 count] != 0;
}

id sub_1001347A4(uint64_t a1, void *a2)
{
  id v3 = a2;
  unsigned __int8 v4 = (void *)objc_claimAutoreleasedReturnValue([v3 provider]);
  if ([v4 isSystemProvider])
  {
    id v5 = 0LL;
  }

  else
  {
    int v6 = (void *)objc_claimAutoreleasedReturnValue([v3 provider]);
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 bundleIdentifier]);
    id v5 = [v7 isEqualToString:*(void *)(a1 + 32)];
  }

  return v5;
}

void sub_100134DF0(id a1)
{
  dispatch_queue_attr_t v1 = dispatch_queue_attr_make_with_autorelease_frequency(0LL, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  unsigned __int8 v4 = (dispatch_queue_attr_s *)objc_claimAutoreleasedReturnValue(v1);
  dispatch_queue_t v2 = dispatch_queue_create("CSDCallStateController-AutomaticNameAndPhotoQueue", v4);
  id v3 = (void *)qword_10044D060;
  qword_10044D060 = (uint64_t)v2;
}

void sub_100134F34(id *a1)
{
  id v2 = a1[4];
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a1[5] value]);
  unsigned __int8 v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithObject:](&OBJC_CLASS___NSSet, "setWithObject:", v3));
  id v5 = (void *)objc_claimAutoreleasedReturnValue([a1[6] provider]);
  LODWORD(v2) = [v2 shouldAutomaticallySendNameAndPhotoToHandles:v4 callProvider:v5];

  if ((_DWORD)v2) {
    _[a1[4] sendNameAndPhotoUsingDialRequest:a1[6]];
  }
}

void sub_100135098(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) sanitizedHandles]);
  unsigned __int8 v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) provider]);
  LODWORD(v2) = [v2 shouldAutomaticallySendNameAndPhotoToHandles:v3 conversationProvider:v4];

  if ((_DWORD)v2) {
    _[*(id *)(a1 + 32) sendNameAndPhotoUsingJoinRequest:*(void *)(a1 + 40)];
  }
}

void sub_1001360D0(uint64_t a1)
{
  id v1 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) callCenter]);
  [v1 pullRelayingCallsFromClient];
}

void sub_1001362D0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
}

BOOL sub_1001362FC(id a1)
{
  if (qword_10044D078 != -1) {
    dispatch_once(&qword_10044D078, &stru_1003DADD8);
  }
  return off_10044D070() == 1;
}

void sub_100136348(id a1)
{
  off_10044D070 = (uint64_t (*)(void))CUTWeakLinkSymbol("MKBDeviceUnlockedSinceBoot", @"MobileKeyBag");
}

int sub_100136374(id a1)
{
  if (qword_10044D088 != -1) {
    dispatch_once(&qword_10044D088, &stru_1003DAE38);
  }
  return off_10044D080(0LL);
}

void sub_1001363B8(id a1)
{
  off_10044D080 = (uint64_t (*)(void))CUTWeakLinkSymbol("MKBGetDeviceLockState", @"MobileKeyBag");
}

void sub_1001363E4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _handleDeviceFirstUnlockNotification];
}

void sub_100136410(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _handleDeviceLockStatusNotification];
}

void sub_100137408( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_100137424(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v5 = (void *)objc_claimAutoreleasedReturnValue([v3 objectForKeyedSubscript:BKSApplicationStateDisplayIDKey]);
    uint64_t v7 = objc_opt_class(&OBJC_CLASS___NSString, v6);
    if ((objc_opt_isKindOfClass(v5, v7) & 1) != 0) {
      id v8 = v5;
    }
    else {
      id v8 = 0LL;
    }
    if ([v8 length])
    {
      uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v3 objectForKeyedSubscript:BKSApplicationStateKey]);

      uint64_t v11 = objc_opt_class(&OBJC_CLASS___NSNumber, v10);
      if ((objc_opt_isKindOfClass(v9, v11) & 1) != 0)
      {
        [WeakRetained setApplicationState:v9 forBundleIdentifier:v8];
      }

      else
      {
        id v20 = sub_1001704C4();
        __int16 v21 = (os_log_s *)objc_claimAutoreleasedReturnValue(v20);
        if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
          sub_1002B7624((uint64_t)v3, v21, v22, v23, v24, v25, v26, v27);
        }
      }
    }

    else
    {
      id v12 = sub_1001704C4();
      uint64_t v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        sub_1002B75BC((uint64_t)v3, v13, v14, v15, v16, v17, v18, v19);
      }

      uint64_t v9 = v5;
    }
  }
}

BOOL sub_10013A078(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (1)
    {
      if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      char v4 = 0;
      unsigned int v5 = 0;
      unint64_t v6 = 0LL;
      while (1)
      {
        unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v7 == -1LL || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v8 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
        v6 |= (unint64_t)(v8 & 0x7F) << v4;
        if ((v8 & 0x80) == 0) {
          goto LABEL_11;
        }
        v4 += 7;
        if (v5++ >= 9)
        {
          unint64_t v6 = 0LL;
          int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
          goto LABEL_13;
        }
      }

      *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
      int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
      if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        unint64_t v6 = 0LL;
      }
LABEL_13:
      if (v10 || (v6 & 7) == 4) {
        return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      if ((v6 >> 3) == 1)
      {
        id v12 = objc_alloc_init(&OBJC_CLASS___CSDMessagingHandle);
        objc_storeStrong((id *)(a1 + 8), v12);
        if (!PBReaderPlaceMark(a2, v16) || (sub_10004A748((uint64_t)v12, a2) & 1) == 0)
        {

          return 0LL;
        }

        PBReaderRecallMark(a2, v16);
        goto LABEL_23;
      }

      if ((PBReaderSkipValueWithTag(a2) & 1) == 0) {
        return 0LL;
      }
LABEL_25:
      if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
    }

    uint64_t String = PBReaderReadString(a2);
    uint64_t v14 = objc_claimAutoreleasedReturnValue(String);
    id v12 = *(CSDMessagingHandle **)(a1 + 16);
    *(void *)(a1 + 16) = v14;
LABEL_23:

    goto LABEL_25;
  }

  return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_10013A960(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) identifiersWithPendingCoalescingBlocks]);
  [v2 removeObject:*(void *)(a1 + 40)];

  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) blockToExecuteAfterPendingCoalescingBlocksByIdentifier]);
  id v5 = (id)objc_claimAutoreleasedReturnValue([v3 objectForKeyedSubscript:*(void *)(a1 + 40)]);

  if (v5)
  {
    char v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) blockToExecuteAfterPendingCoalescingBlocksByIdentifier]);
    [v4 setObject:0 forKeyedSubscript:*(void *)(a1 + 40)];

    [*(id *)(a1 + 32) performBlock:v5 coalescedByIdentifier:*(void *)(a1 + 40)];
  }
}

uint64_t sub_10013B0F8(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  char v4 = &OBJC_IVAR___CSDMessagingConversationParticipantDidJoinContext__isUPlusNDowngradeAvailable;
  id v5 = &OBJC_IVAR___CSDMessagingConversationParticipantDidJoinContext__isUPlusNDowngradeAvailable;
  while (2)
  {
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v6 = 0;
    unsigned int v7 = 0;
    unint64_t v8 = 0LL;
    while (1)
    {
      unint64_t v9 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v9 == -1LL || v9 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v10 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v9);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v9 + 1;
      v8 |= (unint64_t)(v10 & 0x7F) << v6;
      if ((v10 & 0x80) == 0) {
        goto LABEL_12;
      }
      v6 += 7;
      BOOL v11 = v7++ >= 9;
      if (v11)
      {
        unint64_t v8 = 0LL;
        int v12 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_14;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_12:
    int v12 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v8 = 0LL;
    }
LABEL_14:
    if (v12 || (v8 & 7) == 4) {
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v8 >> 3))
    {
      case 1u:
        uint64_t String = PBReaderReadString(a2);
        uint64_t v15 = objc_claimAutoreleasedReturnValue(String);
        uint64_t v16 = v4[432];
        goto LABEL_32;
      case 2u:
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0LL;
        *(_BYTE *)(a1 + v5[433]) |= 8u;
        while (2)
        {
          unint64_t v21 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v21 == -1LL || v21 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v22 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v21);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v21 + 1;
            v20 |= (unint64_t)(v22 & 0x7F) << v18;
            if (v22 < 0)
            {
              v18 += 7;
              BOOL v11 = v19++ >= 9;
              if (v11)
              {
                uint64_t v20 = 0LL;
                goto LABEL_60;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v20 = 0LL;
        }
LABEL_60:
        BOOL v44 = v20 != 0;
        uint64_t v45 = 57LL;
        goto LABEL_69;
      case 3u:
        uint64_t v23 = PBReaderReadString(a2);
        uint64_t v15 = objc_claimAutoreleasedReturnValue(v23);
        uint64_t v16 = 48LL;
        goto LABEL_32;
      case 4u:
        uint64_t v24 = PBReaderReadString(a2);
        uint64_t v15 = objc_claimAutoreleasedReturnValue(v24);
        uint64_t v16 = 40LL;
        goto LABEL_32;
      case 5u:
        uint64_t Data = PBReaderReadData(a2);
        uint64_t v15 = objc_claimAutoreleasedReturnValue(Data);
        uint64_t v16 = 16LL;
LABEL_32:
        uint64_t v26 = *(void **)(a1 + v16);
        *(void *)(a1 + v16) = v15;

        goto LABEL_75;
      case 6u:
        char v27 = 0;
        unsigned int v28 = 0;
        uint64_t v29 = 0LL;
        *(_BYTE *)(a1 + v5[433]) |= 2u;
        while (2)
        {
          unint64_t v30 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v30 == -1LL || v30 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v31 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v30);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v30 + 1;
            v29 |= (unint64_t)(v31 & 0x7F) << v27;
            if (v31 < 0)
            {
              v27 += 7;
              BOOL v11 = v28++ >= 9;
              if (v11)
              {
                LODWORD(v29) = 0;
                goto LABEL_64;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v29) = 0;
        }
LABEL_64:
        uint64_t v46 = 28LL;
        goto LABEL_74;
      case 7u:
        __int128 v32 = v5;
        __int128 v33 = v4;
        __int128 v34 = objc_alloc_init(&OBJC_CLASS___CSDMessagingConversationActivitySceneAssociationBehavior);
        objc_storeStrong((id *)(a1 + 32), v34);
        if (PBReaderPlaceMark(a2, v47) && (sub_1000A0B74((uint64_t)v34, a2) & 1) != 0)
        {
          PBReaderRecallMark(a2, v47);

          char v4 = v33;
          id v5 = v32;
LABEL_75:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }

        return 0LL;
      case 8u:
        char v35 = 0;
        unsigned int v36 = 0;
        uint64_t v37 = 0LL;
        *(_BYTE *)(a1 + v5[433]) |= 4u;
        while (2)
        {
          unint64_t v38 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v38 == -1LL || v38 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v39 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v38);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v38 + 1;
            v37 |= (unint64_t)(v39 & 0x7F) << v35;
            if (v39 < 0)
            {
              v35 += 7;
              BOOL v11 = v36++ >= 9;
              if (v11)
              {
                uint64_t v37 = 0LL;
                goto LABEL_68;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v37 = 0LL;
        }
LABEL_68:
        BOOL v44 = v37 != 0;
        uint64_t v45 = 56LL;
LABEL_69:
        *(_BYTE *)(a1 + v45) = v44;
        goto LABEL_75;
      case 9u:
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v29 = 0LL;
        *(_BYTE *)(a1 + v5[433]) |= 1u;
        while (2)
        {
          unint64_t v42 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v42 == -1LL || v42 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v43 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v42);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v42 + 1;
            v29 |= (unint64_t)(v43 & 0x7F) << v40;
            if (v43 < 0)
            {
              v40 += 7;
              BOOL v11 = v41++ >= 9;
              if (v11)
              {
                LODWORD(v29) = 0;
                goto LABEL_73;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v29) = 0;
        }
LABEL_73:
        uint64_t v46 = 24LL;
LABEL_74:
        *(_DWORD *)(a1 + v46) = v29;
        goto LABEL_75;
      default:
        uint64_t result = PBReaderSkipValueWithTag(a2);
        if (!(_DWORD)result) {
          return result;
        }
        goto LABEL_75;
    }
  }

void sub_10013C32C(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[TUConversationManagerXPCClient conversationManagerClientXPCInterface]( &OBJC_CLASS___TUConversationManagerXPCClient,  "conversationManagerClientXPCInterface"));
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientManager]);
  [v3 setRemoteObjectInterface:v2];

  char v4 = (void *)objc_claimAutoreleasedReturnValue( +[TUConversationManagerXPCClient conversationManagerServerXPCInterface]( &OBJC_CLASS___TUConversationManagerXPCClient,  "conversationManagerServerXPCInterface"));
  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientManager]);
  [v5 setExportedInterface:v4];

  char v6 = *(void **)(a1 + 32);
  unsigned int v7 = (void *)objc_claimAutoreleasedReturnValue([v6 clientManager]);
  [v7 setExportedObject:v6];

  unint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientManager]);
  [v8 setRequiredConnectionCapability:@"access-calls"];

  unint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientManager]);
  [v9 setInterruptionHandler:&stru_1003DAE80];

  char v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientManager]);
  [v10 setInvalidationHandler:&stru_1003DAEA0];

  BOOL v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientManager]);
  [v11 setSupportsClientAssertions:1];

  int v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientManager]);
  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v12 asynchronousExportedObjectProxy]);
  +[TUConversationManagerXPCClient setAsynchronousServer:]( &OBJC_CLASS___TUConversationManagerXPCClient,  "setAsynchronousServer:",  v13);

  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientManager]);
  uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v14 synchronousExportedObjectProxy]);
  +[TUConversationManagerXPCClient setSynchronousServer:]( &OBJC_CLASS___TUConversationManagerXPCClient,  "setSynchronousServer:",  v15);

  if (qword_10044D090 != -1) {
    dispatch_once(&qword_10044D090, &stru_1003DAEC0);
  }
}

void sub_10013C4E8(id a1, CSDClient *a2)
{
  id v2 = a2;
  id v3 = sub_1001704C4();
  char v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = 138412290;
    char v6 = v2;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "XPC connection interrupted from client %@",  (uint8_t *)&v5,  0xCu);
  }
}

void sub_10013C590(id a1, CSDClient *a2)
{
  id v2 = a2;
  id v3 = sub_1001704C4();
  char v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = 138412290;
    char v6 = v2;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "XPC connection invalidated from client %@",  (uint8_t *)&v5,  0xCu);
  }
}

void sub_10013C638(id a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
  [v1 postNotificationName:TUConversationManagerDidBecomeAvailableNotification object:0];

  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)char v4 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "CPSystemStateObserver XPC post notification success",  v4,  2u);
  }
}

id sub_10013C6C8(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientManager]);
  [v2 startListeningOnMachServiceWithName:@"com.apple.telephonyutilities.callservicesdaemon.conversationmanager"];

  notify_register_check("CSDConversationManagerClientsShouldConnectNotification", (int *)(*(void *)(a1 + 32) + 8LL));
  notify_set_state(*(_DWORD *)(*(void *)(a1 + 32) + 8LL), 0LL);
  return [*(id *)(a1 + 32) notifyClientsToConnectIfNecessary];
}

void sub_10013C7E0(uint64_t a1)
{
  id v1 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientManager]);
  [v1 invalidate];
}

void sub_10013D240( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_10013D25C(uint64_t result)
{
  *(_BYTE *)(*(void *)(*(void *)(result + 32) + 8LL) + 24LL) = 1;
  return result;
}

void sub_10013D46C(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) conversationManager]);
  [v2 setUsingAirplay:*(unsigned __int8 *)(a1 + 56) onActivitySession:*(void *)(a1 + 40) onConversationWithUUID:*(void *)(a1 + 48)];
}

void sub_10013D754( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_10013D76C(uint64_t result)
{
  *(_BYTE *)(*(void *)(*(void *)(result + 32) + 8LL) + 24LL) = 1;
  return result;
}

void sub_10013E65C(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientManager]);
  [v2 addLocalClientObject:*(void *)(a1 + 40)];
}

void sub_10013E734(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientManager]);
  [v2 removeLocalClientObject:*(void *)(a1 + 40)];
}

BOOL sub_10013EC58(id a1, CSDClient *a2)
{
  return -[CSDClient supportsMessagesGroupProviding](a2, "supportsMessagesGroupProviding");
}

id sub_10013EC60(uint64_t a1, uint64_t a2, void *a3)
{
  return _[a3 getMessagesGroupDetailsForMessagesGroupUUID:*(void *)(a1 + 32) completionHandler:*(void *)(a1 + 40)];
}

id sub_10013F0C0(uint64_t a1, uint64_t a2, void *a3)
{
  return _[a3 conversation:*(void *)(a1 + 32) addedMembersLocally:*(void *)(a1 + 40)];
}

id sub_10013F1C8(uint64_t a1, uint64_t a2, void *a3)
{
  return _[a3 conversation:*(void *)(a1 + 32) buzzedMember:*(void *)(a1 + 40)];
}

id sub_10013F2B0(uint64_t a1, uint64_t a2, void *a3)
{
  return _[a3 conversationUpdatedMessagesGroupPhoto:*(void *)(a1 + 32)];
}

id sub_10013F398(uint64_t a1, uint64_t a2, void *a3)
{
  return _[a3 updateIncomingPendingConversationsByGroupUUID:*(void *)(a1 + 32)];
}

id sub_10013F480(uint64_t a1, uint64_t a2, void *a3)
{
  return _[a3 updateActivatedConversationLinks:*(void *)(a1 + 32)];
}

void sub_10013F544(uint64_t a1, uint64_t a2, void *a3)
{
  char v4 = *(void **)(a1 + 32);
  id v5 = a3;
  id v6 = (id)objc_claimAutoreleasedReturnValue([v4 _conversationsByGroupUUIDFilteredForClient:a2]);
  [v5 updateConversationsByGroupUUID:v6];
}

BOOL sub_10013F684(id a1, CSDClient *a2)
{
  return -[CSDClient isEntitledForCapability:](a2, "isEntitledForCapability:", @"access-media-priorities");
}

id sub_10013F698(uint64_t a1, uint64_t a2, void *a3)
{
  return _[a3 mediaPrioritiesChangedForConversation:*(void *)(a1 + 32)];
}

BOOL sub_10013F7CC(id a1, CSDClient *a2)
{
  return -[CSDClient isEntitledForCapability:](a2, "isEntitledForCapability:", @"access-participant-reactions");
}

id sub_10013F7E0(void *a1, uint64_t a2, void *a3)
{
  return [a3 conversation:a1[4] participant:a1[5] didReact:a1[6]];
}

BOOL sub_10013F8EC(id a1, CSDClient *a2)
{
  return -[CSDClient isEntitledForCapability:](a2, "isEntitledForCapability:", @"access-participant-reactions");
}

id sub_10013F900(uint64_t a1, uint64_t a2, void *a3)
{
  return [a3 conversation:*(void *)(a1 + 32) participantDidStopReacting:*(void *)(a1 + 40)];
}

id sub_10013FA1C(void *a1, uint64_t a2, void *a3)
{
  return _[a3 conversation:a1[4] participant:a1[5] addedNotice:a1[6]];
}

id sub_10013FB10(uint64_t a1, uint64_t a2, void *a3)
{
  return [a3 conversation:*(void *)(a1 + 32) receivedActivitySessionEvent:*(void *)(a1 + 40)];
}

id sub_10013FBE8(void *a1, uint64_t a2, void *a3)
{
  return [a3 conversation:a1[4] appLaunchState:a1[6] forActivitySession:a1[5]];
}

void sub_10013FCBC(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a3;
  id v5 = (id)objc_claimAutoreleasedReturnValue([v3 activityAuthorizedBundleIdentifierState]);
  [v4 updateActivityAuthorizedBundleIdentifierState:v5];
}

id sub_10013FDEC(uint64_t a1, uint64_t a2, void *a3)
{
  return _[a3 receivedTrackedPendingMember:*(void *)(a1 + 32) forConversationLink:*(void *)(a1 + 40)];
}

id sub_10013FEB4(uint64_t a1, uint64_t a2, void *a3)
{
  return _[a3 conversation:*(void *)(a1 + 32) screenSharingChangedForParticipant:*(void *)(a1 + 40)];
}

id sub_10013FF9C(uint64_t a1, uint64_t a2, void *a3)
{
  return [a3 conversation:*(void *)(a1 + 32) didChangeStateForActivitySession:*(void *)(a1 + 40)];
}

id sub_100140064(uint64_t a1, uint64_t a2, void *a3)
{
  return [a3 conversation:*(void *)(a1 + 32) didChangeSceneAssociationForActivitySession:*(void *)(a1 + 40)];
}

id sub_10014013C(uint64_t a1, uint64_t a2, void *a3)
{
  return _[a3 remoteScreenShareAttributesChanged:*(void *)(a1 + 32) isLocallySharing:*(unsigned __int8 *)(a1 + 40)];
}

id sub_100140210(uint64_t a1, uint64_t a2, void *a3)
{
  return _[a3 remoteScreenShareEndedWithReason:*(void *)(a1 + 32)];
}

id sub_1001402AC(uint64_t a1, uint64_t a2, void *a3)
{
  return _[a3 sharePlayAvailableChanged:*(unsigned __int8 *)(a1 + 32)];
}

id sub_100140348(uint64_t a1, uint64_t a2, void *a3)
{
  return _[a3 screenSharingAvailableChanged:*(unsigned __int8 *)(a1 + 32)];
}

void sub_10014068C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_1001406A8(uint64_t a1)
{
  id v2 = -[CSDDeviceLockStateObserver initWithQueue:]( objc_alloc(&OBJC_CLASS___CSDDeviceLockStateObserver),  "initWithQueue:",  *(void *)(*(void *)(a1 + 32) + 16LL));
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = *(void **)(v3 + 64);
  *(void *)(v3 + 64) = v2;

  id v5 = *(void **)(*(void *)(a1 + 32) + 64LL);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  _DWORD v6[2] = sub_10014076C;
  v6[3] = &unk_1003D7DF0;
  objc_copyWeak(&v7, (id *)(a1 + 40));
  [v5 performBlockAfterFirstUnlock:v6];
  objc_destroyWeak(&v7);
}

void sub_100140758(_Unwind_Exception *a1)
{
}

void sub_10014076C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = sub_1001704C4();
    uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v4 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Device first unlock block invoked, attempting to retrieve saved providers",  v4,  2u);
    }

    [WeakRetained retrieveSavedProvidersByIdentifierAndNotify:1 unregister:0];
  }
}

id sub_100140878(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) localProvidersByIdentifier]);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) dataSource]);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 registeredLocalProvidersByIdentifier]);
  [v2 addEntriesFromDictionary:v4];

  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) pairedHostDeviceProvidersByIdentifier]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) dataSource]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 registeredPairedHostDeviceProvidersByIdentifier]);
  [v5 addEntriesFromDictionary:v7];

  __int128 v29 = 0u;
  __int128 v30 = 0u;
  __int128 v27 = 0u;
  __int128 v28 = 0u;
  unint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "localProvidersByIdentifier", 0));
  unint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v8 allKeys]);

  id v10 = [v9 countByEnumeratingWithState:&v27 objects:v33 count:16];
  if (v10)
  {
    id v11 = v10;
    uint64_t v12 = *(void *)v28;
    uint64_t v13 = TUBundleIdentifierPhoneApplication;
    do
    {
      for (i = 0LL; i != v11; i = (char *)i + 1)
      {
        if (*(void *)v28 != v12) {
          objc_enumerationMutation(v9);
        }
        uint64_t v15 = *(void **)(*((void *)&v27 + 1) + 8LL * (void)i);
        if ([v15 isEqualToString:@"com.apple.coretelephony"])
        {
          uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) localProvidersByIdentifier]);
          uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v16 objectForKeyedSubscript:v15]);
          [v17 setBundleIdentifier:v13];
        }
      }

      id v11 = [v9 countByEnumeratingWithState:&v27 objects:v33 count:16];
    }

    while (v11);
  }

  id v18 = sub_1001704C4();
  unsigned int v19 = (os_log_s *)objc_claimAutoreleasedReturnValue(v18);
  if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "Loaded registered providers", buf, 2u);
  }

  id v20 = sub_1001704C4();
  unint64_t v21 = (os_log_s *)objc_claimAutoreleasedReturnValue(v20);
  if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
  {
    char v22 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) localProvidersByIdentifier]);
    *(_DWORD *)buf = 138412290;
    __int128 v32 = v22;
    _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEFAULT,  "Loaded registered local providers: %@",  buf,  0xCu);
  }

  id v23 = sub_1001704C4();
  uint64_t v24 = (os_log_s *)objc_claimAutoreleasedReturnValue(v23);
  if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) pairedHostDeviceProvidersByIdentifier]);
    *(_DWORD *)buf = 138412290;
    __int128 v32 = v25;
    _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEFAULT,  "Loaded registered relay providers: %@",  buf,  0xCu);
  }

  if (*(_BYTE *)(a1 + 40)) {
    [*(id *)(a1 + 32) _unregisterUninstalledProvidersAndNotify:*(unsigned __int8 *)(a1 + 41)];
  }
  return [*(id *)(a1 + 32) _updateProvidersByIdentifierAndNotify:*(unsigned __int8 *)(a1 + 41)];
}

id sub_100140DE0(uint64_t a1)
{
  return _[*(id *)(a1 + 32) providersChangedForProviderManager:*(void *)(a1 + 40)];
}

void sub_10014146C(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegateToQueue]);
  [v2 setObject:*(void *)(a1 + 40) forKey:*(void *)(a1 + 48)];
}

void sub_100141544(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegateToQueue]);
  [v2 removeObjectForKey:*(void *)(a1 + 40)];
}

void sub_100141654( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

uint64_t sub_10014166C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_10014167C(uint64_t a1)
{
}

void sub_100141684(uint64_t a1)
{
  uint64_t v2 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _providersByIdentifierForRemoteClients:*(unsigned __int8 *)(a1 + 48)]);
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8LL);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_100141820( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_100141838(uint64_t a1, uint64_t a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 48);
  id v4 = *(void **)(a1 + 32);
  if (v3)
  {
    id v5 = (void *)objc_opt_class(v4, a2);
    id v9 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) localProvidersByIdentifier]);
    id v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "_providersByIdentifierByFilteringForRemoteClientsFromProvidersByIdentifier:"));
  }

  else
  {
    id v9 = (id)objc_claimAutoreleasedReturnValue([v4 localProvidersByIdentifier]);
    id v6 = [v9 copy];
  }

  uint64_t v7 = *(void *)(*(void *)(a1 + 40) + 8LL);
  unint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v6;
}

void sub_10014198C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_1001419A4(uint64_t a1, uint64_t a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 48);
  id v4 = *(void **)(a1 + 32);
  if (v3)
  {
    id v5 = (void *)objc_opt_class(v4, a2);
    id v9 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) pairedHostDeviceProvidersByIdentifier]);
    id v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "_providersByIdentifierByFilteringForRemoteClientsFromProvidersByIdentifier:"));
  }

  else
  {
    id v9 = (id)objc_claimAutoreleasedReturnValue([v4 pairedHostDeviceProvidersByIdentifier]);
    id v6 = [v9 copy];
  }

  uint64_t v7 = *(void *)(*(void *)(a1 + 40) + 8LL);
  unint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v6;
}

void sub_100141AF8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_100141B10(uint64_t a1)
{
  uint64_t v2 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _sortedProvidersForRemoteClients:*(unsigned __int8 *)(a1 + 48)]);
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8LL);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

int64_t sub_100141C78(id a1, TUCallProvider *a2, TUCallProvider *a3)
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[TUCallProvider localizedName](a2, "localizedName"));
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[TUCallProvider localizedName](v4, "localizedName"));

  id v7 = [v5 localizedStandardCompare:v6];
  return (int64_t)v7;
}

id sub_100141CE4(uint64_t a1, void *a2)
{
  return [a2 isEqualToCallProvider:*(void *)(a1 + 32)];
}

void sub_100141E50( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_100141E74(uint64_t a1)
{
  uint64_t v2 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _defaultAppProviderForRemoteClients:*(unsigned __int8 *)(a1 + 48)]);
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8LL);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_100141FA4(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) originalRingtoneSoundURL]);
  uint64_t v3 = objc_claimAutoreleasedReturnValue([v2 lastPathComponent]);
  id v4 = (void *)v3;
  if (v2) {
    BOOL v5 = v3 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5)
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) uniqueRingtoneSoundLinkFilenameWithOriginalFilename:v3]);
    id v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) dataSource]);
    unsigned __int8 v8 = [v7 isSymbolicLinkAtURL:v2];

    if ((v8 & 1) != 0)
    {
      id v9 = sub_1001704C4();
      id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        __int128 v52 = v2;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "[WARN] Skipping Sandboxing URL as the passed in URL turns out to be a symbolic link: %@",  buf,  0xCu);
      }
    }

    else
    {
      id v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) dataSource]);
      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v11 createLinkIfNecessaryWithFilename:v6 toURL:v2]);
      [*(id *)(a1 + 32) setRingtoneSoundURL:v12];

      if ((uint64_t)[*(id *)(a1 + 32) sandboxExtensionHandle] >= 1)
      {
        id v13 = sub_1001704C4();
        uint64_t v14 = (os_log_s *)objc_claimAutoreleasedReturnValue(v13);
        if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v15 = *(void **)(a1 + 32);
          *(_DWORD *)buf = 138412290;
          __int128 v52 = v15;
          _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "Releasing sandboxExtensionHandle for provider: %@",  buf,  0xCu);
        }

        sandbox_extension_release([*(id *)(a1 + 32) sandboxExtensionHandle]);
      }
    }
  }

  uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) localProvidersByIdentifier]);
  uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) identifier]);
  id v18 = (void *)objc_claimAutoreleasedReturnValue([v16 objectForKeyedSubscript:v17]);
  unsigned __int8 v19 = [v18 isEqualToCallProvider:*(void *)(a1 + 32)];

  if ((v19 & 1) == 0)
  {
    uint64_t v45 = v4;
    id v20 = sub_1001704C4();
    unint64_t v21 = (os_log_s *)objc_claimAutoreleasedReturnValue(v20);
    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
    {
      char v22 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) localProvidersByIdentifier]);
      id v23 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) identifier]);
      uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue([v22 objectForKeyedSubscript:v23]);
      uint64_t v25 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138412546;
      __int128 v52 = v24;
      __int16 v53 = 2112;
      uint64_t v54 = v25;
      _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "Updating provider from %@ to %@", buf, 0x16u);
    }

    uint64_t v26 = *(void *)(a1 + 32);
    __int128 v27 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) localProvidersByIdentifier]);
    __int128 v28 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) identifier]);
    [v27 setObject:v26 forKeyedSubscript:v28];

    __int128 v29 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) localProvidersByIdentifier]);
    __int128 v30 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) dataSource]);
    [v30 setRegisteredLocalProvidersByIdentifier:v29];

    char v31 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) localProvidersByIdentifier]);
    __int128 v32 = (void *)objc_claimAutoreleasedReturnValue( +[NSMutableArray arrayWithCapacity:]( NSMutableArray,  "arrayWithCapacity:",  [v31 count]));

    __int128 v48 = 0u;
    __int128 v49 = 0u;
    __int128 v46 = 0u;
    __int128 v47 = 0u;
    __int128 v33 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) localProvidersByIdentifier]);
    id v34 = [v33 countByEnumeratingWithState:&v46 objects:v50 count:16];
    if (v34)
    {
      id v35 = v34;
      uint64_t v36 = *(void *)v47;
      do
      {
        for (i = 0LL; i != v35; i = (char *)i + 1)
        {
          if (*(void *)v47 != v36) {
            objc_enumerationMutation(v33);
          }
          uint64_t v38 = *(void *)(*((void *)&v46 + 1) + 8LL * (void)i);
          char v39 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) localProvidersByIdentifier]);
          char v40 = (void *)objc_claimAutoreleasedReturnValue([v39 objectForKeyedSubscript:v38]);

          unsigned int v41 = (void *)objc_claimAutoreleasedReturnValue([v40 ringtoneSoundURL]);
          unint64_t v42 = (void *)objc_claimAutoreleasedReturnValue([v41 lastPathComponent]);

          if (v42) {
            [v32 addObject:v42];
          }
        }

        id v35 = [v33 countByEnumeratingWithState:&v46 objects:v50 count:16];
      }

      while (v35);
    }

    char v43 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) dataSource]);
    id v44 = [v32 copy];
    [v43 removeLinksForFilenamesNotInArray:v44];

    [*(id *)(a1 + 40) _updateProvidersByIdentifierAndNotify:1];
    id v4 = v45;
  }
}

void sub_1001424D4(uint64_t a1)
{
  __int128 v25 = 0u;
  __int128 v26 = 0u;
  __int128 v27 = 0u;
  __int128 v28 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v25 objects:v33 count:16];
  if (v3)
  {
    id v5 = v3;
    char v6 = 0;
    uint64_t v7 = *(void *)v26;
    *(void *)&__int128 v4 = 138412546LL;
    __int128 v23 = v4;
    id obj = v2;
    do
    {
      for (i = 0LL; i != v5; i = (char *)i + 1)
      {
        if (*(void *)v26 != v7) {
          objc_enumerationMutation(obj);
        }
        id v9 = *(void **)(*((void *)&v25 + 1) + 8LL * (void)i);
        id v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "pairedHostDeviceProvidersByIdentifier", v23));
        id v11 = (void *)objc_claimAutoreleasedReturnValue([v9 identifier]);
        uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v10 objectForKeyedSubscript:v11]);
        unsigned __int8 v13 = [v12 isEqualToCallProvider:v9];

        if ((v13 & 1) == 0)
        {
          id v14 = sub_1001704C4();
          uint64_t v15 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
          if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) pairedHostDeviceProvidersByIdentifier]);
            uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v9 identifier]);
            id v18 = (void *)objc_claimAutoreleasedReturnValue([v16 objectForKeyedSubscript:v17]);
            *(_DWORD *)buf = v23;
            __int128 v30 = v18;
            __int16 v31 = 2112;
            __int128 v32 = v9;
            _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "Updating relay provider from %@ to %@",  buf,  0x16u);
          }

          unsigned __int8 v19 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) pairedHostDeviceProvidersByIdentifier]);
          id v20 = (void *)objc_claimAutoreleasedReturnValue([v9 identifier]);
          [v19 setObject:v9 forKeyedSubscript:v20];

          char v6 = 1;
        }
      }

      id v5 = [obj countByEnumeratingWithState:&v25 objects:v33 count:16];
    }

    while (v5);

    if ((v6 & 1) != 0)
    {
      unint64_t v21 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) pairedHostDeviceProvidersByIdentifier]);
      char v22 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) dataSource]);
      [v22 setRegisteredPairedHostDeviceProvidersByIdentifier:v21];

      [*(id *)(a1 + 40) _updateProvidersByIdentifierAndNotify:1];
    }
  }

  else
  {
  }

id sub_1001427E8(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _donateUserIntentForProviderWithIdentifier:*(void *)(a1 + 40)];
}

void sub_1001428C0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_1001428D8(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) userIntentManager]);
  *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = [v2 validateUserIntentForCallSource:*(void *)(a1 + 40)];
}

void sub_1001429DC(uint64_t a1)
{
  id v2 = sub_1001704C4();
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    __int128 v4 = *(void **)(a1 + 32);
    *(_DWORD *)buf = 138412290;
    __int128 v25 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "dialRequest: %@", buf, 0xCu);
  }

  id v5 = (void (**)(id, void *))objc_retainBlock(*(id *)(a1 + 40));
  if ([*(id *)(a1 + 32) isValid])
  {
    char v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) provider]);
    unsigned __int8 v7 = [v6 isSystemProvider];

    if ((v7 & 1) != 0)
    {
      unsigned __int8 v8 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Cannot launch app for dial request with a system provider: %@",  *(void *)(a1 + 32)));
      id v9 = sub_1001704C4();
      id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        goto LABEL_11;
      }
      goto LABEL_6;
    }

    unsigned __int8 v8 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Launching an app for a dial request with a non-system provider is unsupported on this platform"));
    id v18 = sub_1001704C4();
    id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v18);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      __int128 v25 = v8;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "[WARN] %@", buf, 0xCu);
    }
  }

  else
  {
    unsigned __int8 v8 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Cannot launch app for invalid dial request: %@",  *(void *)(a1 + 32)));
    id v17 = sub_1001704C4();
    id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v17);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
LABEL_6:
    }
      sub_1002B77B4((uint64_t)v8, v10, v11, v12, v13, v14, v15, v16);
  }

BOOL sub_1001430AC(id a1)
{
  return +[TUConversationManager allowsScreenSharing]( &OBJC_CLASS___TUConversationManager,  "allowsScreenSharing");
}

void sub_100143310( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
}

void sub_10014332C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = sub_1001704C4();
    __int128 v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      char v6 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained recentlyDeletedCallUUIDsByConversationUUID]);
      unsigned __int8 v7 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:*(void *)(a1 + 32)]);
      int v9 = 138412546;
      uint64_t v10 = v5;
      __int16 v11 = 2112;
      uint64_t v12 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "setting recentlyDeletedCallUUIDsByConversationUUID[%@]: %@ to nil",  (uint8_t *)&v9,  0x16u);
    }

    unsigned __int8 v8 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained recentlyDeletedCallUUIDsByConversationUUID]);
    [v8 setObject:0 forKeyedSubscript:*(void *)(a1 + 32)];
  }
}

void sub_10014469C( uint64_t a1, void *a2, int a3, unsigned int a4, unsigned int a5, void *a6, void *a7, void *a8)
{
  id v93 = a2;
  id v12 = a6;
  id v13 = a7;
  id v14 = a8;
  uint64_t v15 = (id *)(a1 + 32);
  if ([*(id *)(a1 + 32) hasProtoUpgradeSessionUUID])
  {
    uint64_t v16 = objc_alloc(&OBJC_CLASS___NSUUID);
    id v17 = (void *)objc_claimAutoreleasedReturnValue([*v15 protoUpgradeSessionUUID]);
    id v18 = -[NSUUID initWithUUIDString:](v16, "initWithUUIDString:", v17);

    if (v18) {
      goto LABEL_8;
    }
    id v19 = sub_1001704C4();
    id v20 = (os_log_s *)objc_claimAutoreleasedReturnValue(v19);
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
      sub_1002B781C((id *)(a1 + 32), v20);
    }
  }

  else
  {
    id v21 = sub_1001704C4();
    id v20 = (os_log_s *)objc_claimAutoreleasedReturnValue(v21);
    if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
    {
      id v22 = *v15;
      *(_DWORD *)buf = 138412290;
      id v102 = v22;
      _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEFAULT,  "[WARN] Did not receive protoUpgradeSessionUUID part of message %@",  buf,  0xCu);
    }
  }

  id v18 = 0LL;
LABEL_8:
  id v23 = sub_1001704C4();
  uint64_t v24 = (os_log_s *)objc_claimAutoreleasedReturnValue(v23);
  if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v25 = *(void *)(a1 + 40);
    uint64_t v26 = TULoggableStringForHandle(v14);
    __int128 v27 = (void *)objc_claimAutoreleasedReturnValue(v26);
    id v88 = v14;
    __int128 v28 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) participantDestinationID]);
    uint64_t v29 = TULoggableStringForHandle(v28);
    uint64_t v30 = a1;
    id v31 = v13;
    __int128 v32 = v18;
    __int128 v33 = (void *)objc_claimAutoreleasedReturnValue(v29);
    *(_DWORD *)buf = 138413826;
    id v102 = v93;
    __int16 v103 = 2112;
    id v104 = v12;
    __int16 v105 = 2112;
    unint64_t v106 = v32;
    __int16 v107 = 2112;
    id v108 = v31;
    __int16 v109 = 2112;
    uint64_t v110 = v25;
    __int16 v111 = 2112;
    char v112 = v27;
    __int16 v113 = 2112;
    unsigned int v114 = v33;
    _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEFAULT,  "Current callUUID: %@, upgradeSessionUUID: %@, conversationUpgradeSessionUUID: %@, existingHandle: %@, upgradeMessa geHandle: %@, participantDestination: %@, fromDestination: %@",  buf,  0x48u);

    id v14 = v88;
    id v18 = v32;
    id v13 = v31;
    a1 = v30;
  }

  id v90 = v13;

  id v34 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) participantDestinationID]);
  id v99 = 0LL;
  id v35 = [v34 _stripPotentialTokenURIWithToken:&v99];
  id v36 = v99;

  id v98 = 0LL;
  id v37 = [v14 _stripPotentialTokenURIWithToken:&v98];
  id v38 = v98;
  __int16 v91 = v38;
  id v92 = v12;
  if (v93)
  {
    id v39 = v38;
    char v40 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) callUUIDsByConversationUUID]);
    unsigned int v41 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 64) UUID]);
    uint64_t v42 = objc_claimAutoreleasedReturnValue([v40 objectForKeyedSubscript:v41]);
    char v43 = (void *)v42;
    if (v12 && !v42 && v18 && v39 && v36 && ([v36 isEqualToData:v39] & 1) != 0)
    {
      unsigned int v44 = [v12 isEqual:v18];

      if (v44)
      {
        id v84 = v36;
        id v89 = v14;
        uint64_t v45 = *(void **)(a1 + 56);
        __int128 v46 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 64) UUID]);
        [v45 associateCallUUID:v93 withConversationUUID:v46 waitingToJoin:1];

        __int128 v47 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 64) remoteMembers]);
        __int128 v48 = (void *)objc_claimAutoreleasedReturnValue( +[NSMutableSet setWithCapacity:]( NSMutableSet,  "setWithCapacity:",  [v47 count]));

        __int128 v96 = 0u;
        __int128 v97 = 0u;
        __int128 v94 = 0u;
        __int128 v95 = 0u;
        __int128 v49 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 64) remoteMembers]);
        id v50 = [v49 countByEnumeratingWithState:&v94 objects:v100 count:16];
        if (v50)
        {
          id v51 = v50;
          uint64_t v52 = *(void *)v95;
          do
          {
            for (i = 0LL; i != v51; i = (char *)i + 1)
            {
              if (*(void *)v95 != v52) {
                objc_enumerationMutation(v49);
              }
              uint64_t v55 = (void *)objc_claimAutoreleasedReturnValue([v54 anyObject]);
              BOOL v56 = (void *)objc_claimAutoreleasedReturnValue(+[CXHandle handleWithTUHandle:](&OBJC_CLASS___CXHandle, "handleWithTUHandle:", v55));
              [v48 addObject:v56];
            }

            id v51 = [v49 countByEnumeratingWithState:&v94 objects:v100 count:16];
          }

          while (v51);
        }

        uint64_t v57 = -[CXCallUpdate initWithTUConversation:]( objc_alloc(&OBJC_CLASS___CXCallUpdate),  "initWithTUConversation:",  *(void *)(a1 + 64));
        -[CXCallUpdate setRemoteParticipantHandles:](v57, "setRemoteParticipantHandles:", v48);
        id v58 = (void *)objc_claimAutoreleasedReturnValue(-[CXCallUpdate localSenderIdentityUUID](v57, "localSenderIdentityUUID"));

        if (!v58)
        {
          __int16 v59 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) conversationManager]);
          uint64_t v60 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 64) initiator]);
          uint64_t v61 = (void *)objc_claimAutoreleasedReturnValue([v59 senderIdentityUUIDForCallerIDHandle:v60]);
          -[CXCallUpdate setLocalSenderIdentityUUID:](v57, "setLocalSenderIdentityUUID:", v61);
        }

        id v62 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) provider]);
        [v62 reportCallWithUUID:v93 updated:v57];

        __int128 v63 = objc_alloc_init(&OBJC_CLASS___CSDConversationJoinContext);
        -[CSDConversationJoinContext setVideoEnabled:](v63, "setVideoEnabled:", a4);
        -[CSDConversationJoinContext setVideo:](v63, "setVideo:", a5);
        if (a5) {
          uint64_t v64 = 2LL;
        }
        else {
          uint64_t v64 = 1LL;
        }
        -[CSDConversationJoinContext setAvMode:](v63, "setAvMode:", v64);
        -[CSDConversationJoinContext setPresentationMode:](v63, "setPresentationMode:", 0LL);
        uint64_t v65 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 64) provider]);
        -[CSDConversationJoinContext setProvider:](v63, "setProvider:", v65);

        uint64_t v66 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) conversationManager]);
        id v67 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 64) UUID]);
        [v66 joinExistingConversationWithUUID:v67 context:v63];

        id v68 = sub_1001704C4();
        uint64_t v69 = (os_log_s *)objc_claimAutoreleasedReturnValue(v68);
        id v36 = v84;
        if (os_log_type_enabled(v69, OS_LOG_TYPE_DEFAULT))
        {
          id v70 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 64) UUID]);
          *(_DWORD *)buf = 138412290;
          id v102 = v70;
          _os_log_impl( (void *)&_mh_execute_header,  v69,  OS_LOG_TYPE_DEFAULT,  "Starting audio for conversation with conversationUUID %@",  buf,  0xCu);
        }

        id v71 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) conversationManager]);
        id v72 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 64) UUID]);
        [v71 startAudioForConversationWithUUID:v72];

        id v14 = v89;
        if (a3)
        {
          id v73 = sub_1001704C4();
          char v74 = (os_log_s *)objc_claimAutoreleasedReturnValue(v73);
          if (os_log_type_enabled(v74, OS_LOG_TYPE_DEFAULT))
          {
            __int128 v75 = *(void **)(a1 + 64);
            *(_DWORD *)buf = 138412290;
            id v102 = v75;
            _os_log_impl( (void *)&_mh_execute_header,  v74,  OS_LOG_TYPE_DEFAULT,  "Determined that current uplink is muted - muting conversation %@",  buf,  0xCu);
          }

          __int128 v76 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) conversationManager]);
          __int128 v77 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 64) UUID]);
          [v76 setUplinkMuted:1 forConversationWithUUID:v77];
        }

        [*(id *)(a1 + 56) declineRemoteDevicesForConversation:*(void *)(a1 + 64) reason:4];

        __int128 v78 = v90;
LABEL_42:

        goto LABEL_43;
      }
    }

    else
    {
    }
  }

  __int128 v79 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) conversationManager]);
  unsigned __int8 v80 = [v79 isValidLocalHandle:*(void *)(a1 + 40)];

  __int128 v78 = v90;
  if ((v80 & 1) == 0)
  {
    __int128 v81 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) conversationManager]);
    __int128 v82 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 64) remoteMembers]);
    NSErrorUserInfoKey v83 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 64) link]);
    __int128 v48 = (void *)objc_claimAutoreleasedReturnValue([v81 conversationRepresentedByRemoteMembers:v82 andLink:v83]);

    if (!v48 || ![v48 state]) {
      [*(id *)(a1 + 56) reportNewIncomingCallForConversation:*(void *)(a1 + 64) fromHandle:*(void *)(a1 + 40) isReRing:0];
    }
    goto LABEL_42;
  }

void sub_100145CD4(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[TUCallCenter sharedInstance](&OBJC_CLASS___TUCallCenter, "sharedInstance"));
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) UUIDString]);
  id v5 = (id)objc_claimAutoreleasedReturnValue([v2 callWithCallUUID:v3]);

  if (v5)
  {
    __int128 v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
    [v4 postNotificationName:TUCallCenterHaveBeenLetInNotification object:v5];
  }
}

void sub_100146444(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) conversationManager]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 conversationsByUUID]);
  __int128 v4 = (void *)objc_claimAutoreleasedReturnValue([v3 objectForKeyedSubscript:*(void *)(a1 + 40)]);

  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) callUUIDsByConversationUUID]);
  char v6 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKeyedSubscript:*(void *)(a1 + 40)]);
  unsigned int v7 = [v6 isEqual:*(void *)(a1 + 48)];

  if (!v7) {
    goto LABEL_15;
  }
  unsigned __int8 v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) conversationUUIDsUpgradedFromAVLess]);
  if (![v8 containsObject:*(void *)(a1 + 40)]
    || [*(id *)(a1 + 56) state] != (id)3)
  {
    goto LABEL_10;
  }

  int v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) remoteMembers]);
  if ([v9 count] != (id)1)
  {

LABEL_10:
    goto LABEL_11;
  }

  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) activeRemoteParticipants]);
  if (![v10 count])
  {

LABEL_17:
    id v18 = sub_1001704C4();
    id v19 = (os_log_s *)objc_claimAutoreleasedReturnValue(v18);
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v20 = *(void *)(a1 + 40);
      int v24 = 138412290;
      uint64_t v25 = v20;
      _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEFAULT,  "Downgrading local participant since remote participant did not upgrade before the timeout: %@",  (uint8_t *)&v24,  0xCu);
    }

    id v21 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) conversationManager]);
    id v22 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) UUID]);
    [v21 updateLocalParticipantToAVLessWithPresentationMode:1 forConversationUUID:v22];

    id v23 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) conversationUUIDsUpgradedFromAVLess]);
    [v23 removeObject:*(void *)(a1 + 40)];

    goto LABEL_12;
  }

  __int16 v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) activeRemoteParticipants]);
  id v12 = (void *)objc_claimAutoreleasedReturnValue([v11 anyObject]);
  id v13 = [v12 audioVideoMode];

  if (!v13) {
    goto LABEL_17;
  }
LABEL_11:
  [*(id *)(a1 + 32) cleanupConversationWithCallUUID:*(void *)(a1 + 48)];
LABEL_12:
  id v14 = sub_1001704C4();
  uint64_t v15 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
  if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v16 = *(void *)(a1 + 40);
    int v24 = 138412290;
    uint64_t v25 = v16;
    _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "Ending unanswered outgoing call for conversation with UUID: %@",  (uint8_t *)&v24,  0xCu);
  }

  id v17 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) provider]);
  [v17 reportCallWithUUID:*(void *)(a1 + 48) endedAtDate:0 reason:3];

LABEL_15:
}

void sub_10014BE80(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = sub_1001704C4();
  unsigned __int8 v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
  int v9 = v8;
  if (v6)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_1002B7D64();
    }
  }

  else if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v10 = *(void *)(a1 + 32);
    int v11 = 138412546;
    uint64_t v12 = v10;
    __int16 v13 = 2112;
    id v14 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "Renewed link %@ with new expiration date %@",  (uint8_t *)&v11,  0x16u);
  }
}

void sub_10014ED58( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_10014ED74(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = WeakRetained;
  if (WeakRetained)
  {
    __int128 v18 = 0u;
    __int128 v19 = 0u;
    __int128 v16 = 0u;
    __int128 v17 = 0u;
    id obj = (id)objc_claimAutoreleasedReturnValue([WeakRetained callUUIDsByConversationUUID]);
    id v3 = [obj countByEnumeratingWithState:&v16 objects:v20 count:16];
    if (!v3) {
      goto LABEL_14;
    }
    id v4 = v3;
    uint64_t v5 = *(void *)v17;
    while (1)
    {
      id v6 = 0LL;
      do
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(obj);
        }
        uint64_t v7 = *(void *)(*((void *)&v16 + 1) + 8LL * (void)v6);
        unsigned __int8 v8 = (void *)objc_claimAutoreleasedReturnValue([v2 conversationManager]);
        int v9 = (void *)objc_claimAutoreleasedReturnValue([v8 conversationsByUUID]);
        uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v9 objectForKeyedSubscript:v7]);

        if (v10)
        {
          int v11 = (CXCallFailureContext *)objc_claimAutoreleasedReturnValue([v10 provider]);
          if ((-[CXCallFailureContext isDefaultProvider](v11, "isDefaultProvider") & 1) == 0)
          {
            uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v10 provider]);
            __int16 v13 = (void *)objc_claimAutoreleasedReturnValue([v12 bundleIdentifier]);
            unsigned __int8 v14 = [v2 isProviderForeground:v13];

            if ((v14 & 1) != 0) {
              goto LABEL_12;
            }
            int v11 = objc_alloc_init(&OBJC_CLASS___CXCallFailureContext);
            -[CXCallFailureContext setFailureReason:](v11, "setFailureReason:", 3LL);
            [v2 cleanUpConversationIfNecessaryForConversationUUID:v7 failureContext:v11];
          }
        }

void sub_100150558(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5)
  {
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue( +[CSDRelayConferenceInterface sharedInstance]( &OBJC_CLASS___CSDRelayConferenceInterface,  "sharedInstance"));
    unsigned __int8 v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) uniqueProxyIdentifier]);
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 3221225472LL;
    void v17[2] = sub_100150740;
    v17[3] = &unk_1003DA0C8;
    id v18 = *(id *)(a1 + 32);
    id v19 = v5;
    id v20 = *(id *)(a1 + 48);
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472LL;
    v14[2] = sub_1001507F4;
    void v14[3] = &unk_1003D9C40;
    v14[4] = *(void *)(a1 + 40);
    id v15 = v19;
    id v16 = *(id *)(a1 + 32);
    [v7 startConferenceForIdentifier:v8 usingTransport:v15 remoteInviteDictionary:v6 didStartHandler:v17 didStopHandler:v14];

    int v9 = v18;
  }

  else
  {
    id v10 = sub_1001704C4();
    int v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      sub_1002B8090();
    }

    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue( +[CSDRelayConferenceInterface sharedInstance]( &OBJC_CLASS___CSDRelayConferenceInterface,  "sharedInstance"));
    __int16 v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) uniqueProxyIdentifier]);
    [v12 stopConferenceForIdentifier:v13];

    int v9 = (void *)objc_claimAutoreleasedReturnValue(+[TUCallCenter sharedInstance](&OBJC_CLASS___TUCallCenter, "sharedInstance"));
    [v9 disconnectCall:*(void *)(a1 + 32) withReason:8];
  }
}

void sub_100150740(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  if (a2)
  {
    [*(id *)(a1 + 32) setEndpointOnCurrentDevice:0];
    [*(id *)(a1 + 32) setRelayClientTransport:*(void *)(a1 + 40)];
    uint64_t v6 = *(void *)(a1 + 48);
    if (v6) {
      (*(void (**)(void))(v6 + 16))();
    }
  }

  else
  {
    id v7 = sub_1001704C4();
    unsigned __int8 v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_1002B80F0();
    }

    int v9 = (void *)objc_claimAutoreleasedReturnValue(+[TUCallCenter sharedInstance](&OBJC_CLASS___TUCallCenter, "sharedInstance"));
    [v9 disconnectCall:*(void *)(a1 + 32) withReason:8];
  }
}

id sub_1001507F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return [*(id *)(a1 + 32) _conferenceTransport:*(void *)(a1 + 40) didStopForCall:*(void *)(a1 + 48) cleanly:a2 error:a3];
}

void sub_100150AF8(id a1)
{
  if (qword_10044D0A0 != -1) {
    dispatch_once(&qword_10044D0A0, &stru_1003DB348);
  }
  off_10044D098(TUBundleIdentifierInCallServiceApplication, 1LL);
}

void sub_100150B48(id a1)
{
  off_10044D098 = (uint64_t (*)(void, void))CUTWeakLinkSymbol( "SBSLaunchApplicationWithIdentifier",  @"SpringBoardServices");
}

void sub_1001510D4(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3 && [v3 status] != 6)
  {
    unsigned __int8 v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) callStateController]);
    [v8 updateClientsWithCall:v3];

    [*(id *)(a1 + 48) _launchInCallApplicationForOutgoingCallOnHostIfNecessary];
  }

  else
  {
    id v4 = sub_1001704C4();
    id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_1002B81C0((id *)(a1 + 32), v5);
    }

    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) relayMessagingController]);
    id v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) uniqueProxyIdentifier]);
    [v6 sendDialCallFailedForUniqueProxyIdentifier:v7];
  }
}

void sub_1001511C4(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) relayMessagingController]);
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472LL;
    _DWORD v8[2] = sub_1001512A4;
    v8[3] = &unk_1003DB3E8;
    id v5 = *(id *)(a1 + 40);
    uint64_t v6 = *(void *)(a1 + 32);
    id v9 = v5;
    uint64_t v10 = v6;
    id v11 = *(id *)(a1 + 48);
    id v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) uniqueProxyIdentifier]);
    [v4 performBlockOnTransportAvailability:v8 forIdentifier:v7];
  }

  (*(void (**)(void))(*(void *)(a1 + 56) + 16LL))();
}

void sub_1001512A4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5)
  {
    v22[0] = _NSConcreteStackBlock;
    v22[1] = 3221225472LL;
    v22[2] = sub_1001514B8;
    v22[3] = &unk_1003DB3C0;
    id v23 = *(id *)(a1 + 32);
    id v7 = v5;
    uint64_t v8 = *(void *)(a1 + 40);
    id v9 = *(void **)(a1 + 48);
    id v24 = v7;
    uint64_t v25 = v8;
    id v26 = v9;
    uint64_t v10 = objc_retainBlock(v22);
    v19[0] = _NSConcreteStackBlock;
    v19[1] = 3221225472LL;
    v19[2] = sub_10015165C;
    v19[3] = &unk_1003D9C40;
    id v11 = *(void **)(a1 + 48);
    v19[4] = *(void *)(a1 + 40);
    id v20 = v11;
    id v12 = v7;
    id v21 = v12;
    __int16 v13 = objc_retainBlock(v19);
    unsigned __int8 v14 = (void *)objc_claimAutoreleasedReturnValue( +[CSDRelayConferenceInterface sharedInstance]( &OBJC_CLASS___CSDRelayConferenceInterface,  "sharedInstance"));
    [v14 startConferenceForIdentifier:*(void *)(a1 + 48) usingTransport:v12 remoteInviteDictionary:v6 didStartHandler:v10 didStopHandler:v13];

    id v15 = v23;
  }

  else
  {
    id v16 = sub_1001704C4();
    __int128 v17 = (os_log_s *)objc_claimAutoreleasedReturnValue(v16);
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      id v18 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) typeString]);
      *(_DWORD *)buf = 138412290;
      __int128 v28 = v18;
      _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "[WARN] Received %@ message, but the transport didn't become available",  buf,  0xCu);
    }

    id v15 = (void *)objc_claimAutoreleasedReturnValue( +[CSDRelayConferenceInterface sharedInstance]( &OBJC_CLASS___CSDRelayConferenceInterface,  "sharedInstance"));
    [v15 stopConferenceForIdentifier:*(void *)(a1 + 48)];
  }
}

void sub_1001514B8(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  if (a2)
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue(+[TUCallCenter sharedInstance](&OBJC_CLASS___TUCallCenter, "sharedInstance"));
    id v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) dialRequest]);
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472LL;
    v13[2] = sub_1001515B8;
    v13[3] = &unk_1003DB398;
    uint64_t v8 = (os_log_s *)*(id *)(a1 + 40);
    uint64_t v9 = *(void *)(a1 + 48);
    uint64_t v10 = *(void **)(a1 + 56);
    unsigned __int8 v14 = v8;
    uint64_t v15 = v9;
    id v16 = v10;
    [v6 dialWithRequest:v7 completion:v13];

    id v11 = v14;
  }

  else
  {
    id v12 = sub_1001704C4();
    id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      sub_1002B8258();
    }
  }
}

void sub_1001515B8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  if (v3 && [v3 status] != 6)
  {
    [v4 setRelayClientTransport:*(void *)(a1 + 32)];
    [*(id *)(a1 + 40) _launchInCallApplicationForOutgoingCallOnHostIfNecessary];
  }

  else
  {
    id v5 = sub_1001704C4();
    id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_1002B82BC();
    }

    id v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) relayMessagingController]);
    [v7 sendDialCallFailedForUniqueProxyIdentifier:*(void *)(a1 + 48)];
  }
}

void sub_10015165C(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) callWithUniqueProxyIdentifier:*(void *)(a1 + 40)]);
  id v7 = sub_1001704C4();
  uint64_t v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
  BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
  if (v6)
  {
    if (v9)
    {
      int v11 = 67109634;
      int v12 = a2;
      __int16 v13 = 2112;
      unsigned __int8 v14 = v6;
      __int16 v15 = 2112;
      id v16 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "Conference connection stopped (cleanly=%d) for dialed call %@: %@",  (uint8_t *)&v11,  0x1Cu);
    }

    [*(id *)(a1 + 32) _conferenceTransport:*(void *)(a1 + 48) didStopForCall:v6 cleanly:a2 error:v5];
  }

  else
  {
    if (v9)
    {
      uint64_t v10 = *(void **)(a1 + 40);
      int v11 = 67109634;
      int v12 = a2;
      __int16 v13 = 2112;
      unsigned __int8 v14 = v10;
      __int16 v15 = 2112;
      id v16 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "Conference connection stopped (cleanly=%d) for dialed call uniqueProxyIdentifier %@: %@",  (uint8_t *)&v11,  0x1Cu);
    }
  }
}

void sub_100151ABC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_1001704C4();
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    id v15 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "Prepared conference connection with invite dictionary: %@",  buf,  0xCu);
  }

  if (v3)
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) relayMessagingController]);
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472LL;
    _DWORD v9[2] = sub_100151C40;
    v9[3] = &unk_1003DB460;
    id v7 = *(void **)(a1 + 40);
    void v9[4] = *(void *)(a1 + 32);
    id v10 = v7;
    id v11 = *(id *)(a1 + 48);
    id v12 = *(id *)(a1 + 56);
    id v13 = *(id *)(a1 + 64);
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 64) uniqueProxyIdentifier]);
    [v6 performBlockOnTransportAvailability:v9 forIdentifier:v8];
  }

  (*(void (**)(void))(*(void *)(a1 + 72) + 16LL))();
}

void sub_100151C40(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5)
  {
    v24[0] = _NSConcreteStackBlock;
    v24[1] = 3221225472LL;
    v24[2] = sub_100151E74;
    v24[3] = &unk_1003DB438;
    id v7 = *(void **)(a1 + 40);
    void v24[4] = *(void *)(a1 + 32);
    id v25 = v7;
    id v8 = v5;
    id v26 = v8;
    id v27 = *(id *)(a1 + 48);
    id v28 = *(id *)(a1 + 56);
    BOOL v9 = objc_retainBlock(v24);
    __int128 v17 = _NSConcreteStackBlock;
    uint64_t v18 = 3221225472LL;
    id v19 = sub_100151F8C;
    id v20 = &unk_1003D9C40;
    uint64_t v21 = *(void *)(a1 + 32);
    id v22 = *(id *)(a1 + 56);
    id v10 = v8;
    id v23 = v10;
    id v11 = objc_retainBlock(&v17);
    id v12 = (void *)objc_claimAutoreleasedReturnValue( +[CSDRelayConferenceInterface sharedInstance]( &OBJC_CLASS___CSDRelayConferenceInterface,  "sharedInstance",  v17,  v18,  v19,  v20,  v21));
    [v12 startConferenceForIdentifier:*(void *)(a1 + 56) usingTransport:v10 remoteInviteDictionary:v6 didStartHandler:v9 didStopHandler:v11];
  }

  else
  {
    id v13 = sub_1001704C4();
    unsigned __int8 v14 = (os_log_s *)objc_claimAutoreleasedReturnValue(v13);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      id v15 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 64) typeString]);
      *(_DWORD *)buf = 138412290;
      uint64_t v30 = v15;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "[WARN] Received %@ message, but the transport didn't become available",  buf,  0xCu);
    }

    id v16 = (void *)objc_claimAutoreleasedReturnValue( +[CSDRelayConferenceInterface sharedInstance]( &OBJC_CLASS___CSDRelayConferenceInterface,  "sharedInstance"));
    [v16 stopConferenceForIdentifier:*(void *)(a1 + 56)];
  }
}

void sub_100151E74(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  if (a2)
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) callStateController]);
    id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 performJoinConversation:*(void *)(a1 + 40)]);

    if (v7 && [v7 status] != 6)
    {
      [v7 setRelayClientTransport:*(void *)(a1 + 48)];
      [v7 setExpectedRelayClientDestination:*(void *)(a1 + 56)];
      [*(id *)(a1 + 32) _launchInCallApplicationForOutgoingCallOnHostIfNecessary];
    }

    else
    {
      id v8 = sub_1001704C4();
      BOOL v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        sub_1002B8320();
      }

      id v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) relayMessagingController]);
      [v10 sendDialCallFailedForUniqueProxyIdentifier:*(void *)(a1 + 64)];
    }
  }

  else
  {
    id v11 = sub_1001704C4();
    id v7 = (void *)objc_claimAutoreleasedReturnValue(v11);
    if (os_log_type_enabled((os_log_t)v7, OS_LOG_TYPE_ERROR)) {
      sub_1002B8384();
    }
  }
}

void sub_100151F8C(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) callWithUniqueProxyIdentifier:*(void *)(a1 + 40)]);
  id v7 = sub_1001704C4();
  id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
  BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
  if (v6)
  {
    if (v9)
    {
      int v11 = 67109634;
      int v12 = a2;
      __int16 v13 = 2112;
      unsigned __int8 v14 = v6;
      __int16 v15 = 2112;
      id v16 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "Conference connection stopped (cleanly=%d) for joined call %@: %@",  (uint8_t *)&v11,  0x1Cu);
    }

    [*(id *)(a1 + 32) _conferenceTransport:*(void *)(a1 + 48) didStopForCall:v6 cleanly:a2 error:v5];
  }

  else
  {
    if (v9)
    {
      id v10 = *(void **)(a1 + 40);
      int v11 = 67109634;
      int v12 = a2;
      __int16 v13 = 2112;
      unsigned __int8 v14 = v10;
      __int16 v15 = 2112;
      id v16 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "Conference connection stopped (cleanly=%d) for joined call uniqueProxyIdentifier %@: %@",  (uint8_t *)&v11,  0x1Cu);
    }
  }
}

void sub_1001524BC(uint64_t a1)
{
  id v5 = [[TUAnswerRequest alloc] initWithCall:*(void *)(a1 + 32)];
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) sourceIdentifier]);
  [v5 setSourceIdentifier:v2];

  objc_msgSend(v5, "setWantsHoldMusic:", objc_msgSend(*(id *)(a1 + 40), "wantsHoldMusic"));
  objc_msgSend(v5, "setPauseVideoToStart:", objc_msgSend(*(id *)(a1 + 40), "wantsHoldMusic"));
  if ([*(id *)(a1 + 32) isVideo]
    && ([*(id *)(a1 + 40) hasProtoVideo] & 1) != 0)
  {
    uint64_t v3 = 4LL;
  }

  else
  {
    uint64_t v3 = 2LL;
  }

  [v5 setBehavior:v3];
  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[TUCallCenter sharedInstance](&OBJC_CLASS___TUCallCenter, "sharedInstance"));
  [v4 answerWithRequest:v5];
}

BOOL sub_100152CF0(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = a2;
  LODWORD(v2) = [v2 status];
  unsigned int v4 = [v3 status];

  return (_DWORD)v2 != v4;
}

void sub_100153018(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue(+[TUCallCenter sharedInstance](&OBJC_CLASS___TUCallCenter, "sharedInstance"));
  [v2 endActiveAndAnswerCall:*(void *)(a1 + 32)];
}

void sub_1001531D0(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue(+[TUCallCenter sharedInstance](&OBJC_CLASS___TUCallCenter, "sharedInstance"));
  [v2 endHeldAndAnswerCall:*(void *)(a1 + 32)];
}

void sub_100153388(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue(+[TUCallCenter sharedInstance](&OBJC_CLASS___TUCallCenter, "sharedInstance"));
  [v2 holdActiveAndAnswerCall:*(void *)(a1 + 32)];
}

BOOL sub_100153670(id a1, TUCall *a2)
{
  id v2 = a2;
  else {
    BOOL v3 = 0;
  }

  return v3;
}

void sub_100153FEC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, char a31)
{
}

id sub_100154020(uint64_t a1, uint64_t a2)
{
  id result = objc_retainBlock(*(id *)(a2 + 40));
  *(void *)(a1 + 40) = result;
  return result;
}

void sub_100154048(uint64_t a1)
{
}

void sub_100154050(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 40LL);
  if (v4)
  {
    (*(void (**)(uint64_t, id))(v4 + 16))(v4, v3);
    uint64_t v5 = *(void *)(*(void *)(a1 + 48) + 8LL);
    id v6 = *(void **)(v5 + 40);
    *(void *)(v5 + 40) = 0LL;
  }

  id v7 = sub_1001704C4();
  id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
  BOOL v9 = v8;
  if (v3)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138412290;
      uint64_t v15 = v10;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Pushing hosted call: %@", buf, 0xCu);
    }

    [*(id *)(a1 + 32) setWantsHoldMusic:0];
    int v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) relayMessagingController]);
    int v12 = (void *)objc_claimAutoreleasedReturnValue( objc_msgSend( *(id *)(a1 + 32),  "uniqueProxyIdentifier",  _NSConcreteStackBlock,  3221225472,  sub_1001541F0,  &unk_1003DB4D0,  *(void *)(a1 + 32),  *(void *)(a1 + 40)));
    [v11 performBlockOnTransportAvailability:&v13 forIdentifier:v12];
  }

  else
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_1002B8428();
    }

    [*(id *)(a1 + 32) setEndpointOnCurrentDevice:1];
    [*(id *)(a1 + 32) setExpectedRelayClientDestination:0];
  }
}

void sub_1001541F0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5)
  {
    id v7 = (void *)objc_claimAutoreleasedReturnValue( +[CSDRelayConferenceInterface sharedInstance]( &OBJC_CLASS___CSDRelayConferenceInterface,  "sharedInstance"));
    id v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) uniqueProxyIdentifier]);
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3221225472LL;
    void v18[2] = sub_100154390;
    v18[3] = &unk_1003D7D00;
    v18[4] = *(void *)(a1 + 32);
    id v19 = v5;
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472LL;
    v15[2] = sub_100154404;
    v15[3] = &unk_1003D9C40;
    v15[4] = *(void *)(a1 + 40);
    id v9 = v19;
    uint64_t v10 = *(void *)(a1 + 32);
    id v16 = v9;
    uint64_t v17 = v10;
    [v7 startConferenceForIdentifier:v8 usingTransport:v9 remoteInviteDictionary:v6 didStartHandler:v18 didStopHandler:v15];
  }

  else
  {
    id v11 = sub_1001704C4();
    int v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_1002B8488();
    }

    [*(id *)(a1 + 32) setEndpointOnCurrentDevice:1];
    [*(id *)(a1 + 32) setExpectedRelayClientDestination:0];
    uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue( +[CSDRelayConferenceInterface sharedInstance]( &OBJC_CLASS___CSDRelayConferenceInterface,  "sharedInstance"));
    unsigned __int8 v14 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) uniqueProxyIdentifier]);
    [v13 stopConferenceForIdentifier:v14];
  }
}

id sub_100154390(uint64_t a1, int a2)
{
  if (a2)
  {
    [*(id *)(a1 + 32) setRelayClientTransport:*(void *)(a1 + 40)];
    return [*(id *)(a1 + 32) setScreening:0];
  }

  else
  {
    id v4 = sub_1001704C4();
    id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_1002B84E8();
    }

    return [*(id *)(a1 + 32) setEndpointOnCurrentDevice:1];
  }

id sub_100154404(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return [*(id *)(a1 + 32) _conferenceTransport:*(void *)(a1 + 40) didStopForCall:*(void *)(a1 + 48) cleanly:a2 error:a3];
}

void sub_1001544BC(uint64_t a1@<X8>)
{
  *(void *)(v1 - _Block_object_dispose(va, 8) = a1;
}

void sub_1001544C8(void *a1, void *a2, void *a3, void *a4, uint64_t a5)
{
  id v9 = a1;
  id v10 = a2;
  id v11 = a3;
  int v12 = a4;
  if ([v9 isEntitledForCapability:v10])
  {
    v11[2](v11);
  }

  else
  {
    if (a5)
    {
      uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Entitlement check: In %s, client %@ lacks capability '%@'",  a5,  v9,  v10));
      id v14 = sub_1001704C4();
      uint64_t v15 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEBUG)) {
        sub_1002B8548((uint64_t)v13, v15);
      }
    }

    if (v12) {
      v12[2](v12);
    }
  }
}

void *sub_1001545BC(void *a1)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_100154634;
  v4[3] = &unk_1003DB5B0;
  id v5 = a1;
  id v1 = v5;
  id v2 = objc_retainBlock(v4);

  return v2;
}

id sub_100154634(uint64_t a1, void *a2)
{
  return [a2 isEntitledForCapability:*(void *)(a1 + 32)];
}

void sub_1001554B8(uint64_t a1)
{
  id v18 = 0LL;
  id v2 = -[CSDSandboxExtensionDirectory initWithName:error:]( objc_alloc(&OBJC_CLASS___CSDSandboxExtensionDirectory),  "initWithName:error:",  @"Ringtones",  &v18);
  id v3 = v18;
  uint64_t v4 = *(void *)(a1 + 32);
  id v5 = *(void **)(v4 + 32);
  *(void *)(v4 + 32) = v2;

  if (!*(void *)(*(void *)(a1 + 32) + 32LL))
  {
    id v6 = sub_1001704C4();
    id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_1002B85BC((uint64_t)v3, v7, v8);
    }
  }

  id v9 = objc_alloc_init(&OBJC_CLASS___CSDCallCenterObserver);
  uint64_t v10 = *(void *)(a1 + 32);
  id v11 = *(void **)(v10 + 40);
  *(void *)(v10 + 40) = v9;

  [*(id *)(*(void *)(a1 + 32) + 40) setTriggers:1];
  objc_msgSend(*(id *)(*(void *)(a1 + 32) + 40), "setDelegate:");
  uint64_t v12 = objc_claimAutoreleasedReturnValue(+[NSMutableSet set](&OBJC_CLASS___NSMutableSet, "set"));
  uint64_t v13 = *(void *)(a1 + 32);
  id v14 = *(void **)(v13 + 48);
  *(void *)(v13 + 4_Block_object_dispose(va, 8) = v12;

  objc_storeStrong((id *)(*(void *)(a1 + 32) + 56LL), *(id *)(a1 + 40));
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 64LL), *(id *)(a1 + 48));
  uint64_t v15 = *(void *)(a1 + 32);
  id v16 = *(void **)(v15 + 16);
  *(void *)(v15 + 16) = &stru_1003DB5F8;

  +[TUCallCapabilities addDelegate:queue:]( &OBJC_CLASS___TUCallCapabilities,  "addDelegate:queue:",  *(void *)(a1 + 32),  *(void *)(a1 + 56));
  uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue( +[NSDistributedNotificationCenter defaultCenter]( &OBJC_CLASS___NSDistributedNotificationCenter,  "defaultCenter"));
  [v17 addObserver:*(void *)(a1 + 32) selector:"handleApplicationUnregisteredNotification:" name:@"com.apple.LaunchServices.applicationUnregistered" object:0];

  [*(id *)(a1 + 32) moveExistingPreferencesToKeychain];
}

id sub_10015563C(id a1, NSString *a2)
{
  return (id)(id)CFPreferencesCopyAppValue( (CFStringRef)a2,  TUBundleIdentifierTelephonyUtilitiesFramework);
}

void sub_1001572A4(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);
  [v2 installedProvidersChangedForDataSource:*(void *)(a1 + 32)];
}

id sub_1001574C8(uint64_t a1)
{
  return _[*(id *)(a1 + 32) setProviderIdentifiersForExistingCalls:*(void *)(a1 + 40)];
}

id sub_1001575FC(id a1)
{
  return a1;
}

uint64_t sub_1001577CC(uint64_t result)
{
  *(_DWORD *)(*(void *)(result + 32) + 12LL) = *(_DWORD *)(result + 40);
  return result;
}

void sub_100157874(uint64_t a1)
{
  uint64_t v10 = _NSConcreteStackBlock;
  uint64_t v11 = 3221225472LL;
  uint64_t v12 = sub_10015799C;
  uint64_t v13 = &unk_1003D7758;
  id v2 = *(void **)(a1 + 40);
  uint64_t v14 = *(void *)(a1 + 32);
  id v15 = v2;
  dispatch_block_t v3 = dispatch_block_create((dispatch_block_flags_t)0LL, &v10);
  dispatch_time_t v4 = dispatch_time(0LL, 0x1BF08EC000LL);
  id v5 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "queue", v10, v11, v12, v13, v14));
  dispatch_after(v4, v5, v3);

  id v6 = objc_retainBlock(v3);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) requestTimeoutBlockByTransactionID]);
  [v7 setObject:v6 forKeyedSubscript:*(void *)(a1 + 40)];

  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  id v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) requestStartDateByTransactionID]);
  [v9 setObject:v8 forKeyedSubscript:*(void *)(a1 + 40)];
}

void sub_10015799C(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) requestTimeoutBlockByTransactionID]);
  [v2 setObject:0 forKeyedSubscript:*(void *)(a1 + 40)];

  dispatch_block_t v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) requestStartDateByTransactionID]);
  [v3 setObject:0 forKeyedSubscript:*(void *)(a1 + 40)];

  [*(id *)(a1 + 32) reportDataCollectionCompleteIfNecessary];
  id v4 = sub_1001704C4();
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v6 = *(void *)(a1 + 40);
    int v7 = 138412290;
    uint64_t v8 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "Request timed out for transaction ID: %@",  (uint8_t *)&v7,  0xCu);
  }
}

void sub_100157B38(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) requestTimeoutBlockByTransactionID]);
  dispatch_block_t v3 = (void *)objc_claimAutoreleasedReturnValue([v2 objectForKeyedSubscript:*(void *)(a1 + 40)]);

  if (v3)
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) requestTimeoutBlockByTransactionID]);
    id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 objectForKeyedSubscript:*(void *)(a1 + 40)]);
    dispatch_block_cancel(v5);

    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) requestStartDateByTransactionID]);
    id v17 = (id)objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:*(void *)(a1 + 40)]);

    int v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
    [v7 timeIntervalSinceDate:v17];
    double v9 = v8 - fmod(v8, 0.1);
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) photoRequestDurations]);
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v9));
    [v10 addObject:v11];

    objc_msgSend( *(id *)(a1 + 32),  "setPhotoRequestSuccessCount:",  (char *)objc_msgSend(*(id *)(a1 + 32), "photoRequestSuccessCount") + 1);
    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) requestTimeoutBlockByTransactionID]);
    [v12 setObject:0 forKeyedSubscript:*(void *)(a1 + 40)];

    uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) requestStartDateByTransactionID]);
    [v13 setObject:0 forKeyedSubscript:*(void *)(a1 + 40)];

    [*(id *)(a1 + 32) reportDataCollectionCompleteIfNecessary];
  }

  else
  {
    id v14 = sub_1001704C4();
    id v15 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v16 = *(void *)(a1 + 40);
      *(_DWORD *)buf = 138412290;
      uint64_t v19 = v16;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "[WARN] Received results for timed out transaction with ID %@",  buf,  0xCu);
    }
  }

id sub_100157DD8(uint64_t a1)
{
  return [*(id *)(a1 + 32) reportDataCollectionCompleteIfNecessary];
}

void sub_100157E70(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) requestTimeoutBlockByTransactionID]);
  id v3 = [v2 count];

  if (!v3)
  {
    if ([*(id *)(a1 + 32) hasCleanedUp])
    {
      id v4 = objc_alloc(&OBJC_CLASS___CSDMomentsUsageReport);
      id v5 = [*(id *)(a1 + 32) availability];
      id v6 = [*(id *)(a1 + 32) fuzzyPhotoRequestSuccessCount];
      id v7 = [*(id *)(a1 + 32) fuzzyPhotoRequestFailureCount];
      double v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) medianRequestDuration]);
      [v8 doubleValue];
      double v10 = v9;
      [*(id *)(a1 + 32) meanRequestDuration];
      uint64_t v13 = -[CSDMomentsUsageReport initWithAvailability:photoRequestSuccessCount:photoRequestFailureCount:medianRequestDuration:meanRequestDuration:]( v4,  "initWithAvailability:photoRequestSuccessCount:photoRequestFailureCount:medianRequestDuration:meanRequestDuration:",  v5,  v6,  v7,  v10,  v11);

      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);
      [v12 momentsReportingSession:*(void *)(a1 + 32) didGenerateUsageReport:v13];
    }
  }

void sub_100158434(id a1)
{
  Boolean keyExistsAndHasValidFormat = 0;
  if (CFPreferencesGetAppBooleanValue( @"shouldTraceSignposts",  TUBundleIdentifierTelephonyUtilitiesFramework,  &keyExistsAndHasValidFormat))
  {
    BOOL v1 = keyExistsAndHasValidFormat == 0;
  }

  else
  {
    BOOL v1 = 1;
  }

  char v2 = !v1;
  byte_10044D0A8 = v2;
}

void sub_1001587D4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
}

AVCSessionParticipant *sub_1001587F4(uint64_t a1, void *a2)
{
  char v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  id v5 = objc_alloc(&OBJC_CLASS___AVCSessionParticipant);
  id v6 = [v3 identifier];
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v3 avcData]);

  double v8 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained queue]);
  double v9 = -[AVCSessionParticipant initWithParticipantID:data:delegate:queue:]( v5,  "initWithParticipantID:data:delegate:queue:",  v6,  v7,  WeakRetained,  v8);

  return v9;
}

void sub_100158A68(_Unwind_Exception *a1)
{
}

__CFString *sub_100158A84(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v7 = *(void *)(a1 + 32);
  id v8 = a4;
  id v9 = a3;
  id v10 = a2;
  id v12 = objc_msgSend((id)objc_opt_class(v7, v11), "defaultConfiguration");
  uint64_t v13 = (__CFString *)objc_claimAutoreleasedReturnValue(v12);
  -[__CFString setReportingHierarchyToken:](v13, "setReportingHierarchyToken:", v9);

  -[__CFString setOneToOneModeEnabled:](v13, "setOneToOneModeEnabled:", *(unsigned __int8 *)(a1 + 64));
  id v14 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) conversationID]);
  -[__CFString setConversationID:](v13, "setConversationID:", v14);

  id v15 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) timebase]);
  -[__CFString setConversationTimeBase:](v13, "setConversationTimeBase:", v15);

  -[__CFString setServiceName:](v13, "setServiceName:", *(void *)(a1 + 48));
  uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(-[__CFString abTestConfiguration](v13, "abTestConfiguration"));

  id v17 = sub_1001704C4();
  id v18 = (os_log_s *)objc_claimAutoreleasedReturnValue(v17);
  uint64_t v19 = v18;
  if (v16)
  {
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
    {
      else {
        id v20 = @"NO";
      }
      else {
        uint64_t v21 = @"NO";
      }
      int v36 = 138412546;
      id v37 = v20;
      __int16 v38 = 2112;
      id v39 = v21;
      _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEFAULT,  "testConfiguration: isAuthTagEnabled: %@, isTLEEnabled: %@",  (uint8_t *)&v36,  0x16u);
    }

    id v22 = [*(id *)(a1 + 56) isAuthTagEnabled];
    id v23 = (void *)objc_claimAutoreleasedReturnValue(-[__CFString abTestConfiguration](v13, "abTestConfiguration"));
    [v23 setOneToOneAuthenticationTagEnabled:v22];

    id v24 = [*(id *)(a1 + 56) isTLEEnabled];
    uint64_t v19 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[__CFString abTestConfiguration](v13, "abTestConfiguration"));
    -[os_log_s setGftTLEEnabled:](v19, "setGftTLEEnabled:", v24);
  }

  else if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
  {
    sub_1002B8944(v19, v25, v26, v27, v28, v29, v30, v31);
  }

  __int128 v32 = -[AVCSession initWithTransportToken:configuration:delegate:queue:]( objc_alloc(&OBJC_CLASS___AVCSession),  "initWithTransportToken:configuration:delegate:queue:",  v10,  v13,  *(void *)(a1 + 32),  v8);
  id v33 = sub_1001704C4();
  id v34 = (os_log_s *)objc_claimAutoreleasedReturnValue(v33);
  if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
  {
    int v36 = 138412546;
    id v37 = v32;
    __int16 v38 = 2112;
    id v39 = v13;
    _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_DEFAULT,  "Created AVCSession %@ with config: %@",  (uint8_t *)&v36,  0x16u);
  }

  return v32;
}

AVCScreenCapture *sub_100158D28(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained) {
    id v5 = -[AVCScreenCapture initWithDelegate:withConfig:]( objc_alloc(&OBJC_CLASS___AVCScreenCapture),  "initWithDelegate:withConfig:",  WeakRetained,  v3);
  }
  else {
    id v5 = 0LL;
  }

  return v5;
}

void sub_10015A4E8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_10015A510(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    else {
      unsigned int v4 = 1;
    }
    id v5 = sub_1001704C4();
    id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v7 = @"NO";
      if (v4) {
        uint64_t v7 = @"YES";
      }
      int v14 = 138412290;
      id v15 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Determined shouldSetScreenEnabled: %@",  (uint8_t *)&v14,  0xCu);
    }

    id v8 = sub_1001704C4();
    id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    BOOL v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);
    if (v4)
    {
      if (v10)
      {
        if (*(_BYTE *)(a1 + 48)) {
          uint64_t v11 = @"YES";
        }
        else {
          uint64_t v11 = @"NO";
        }
        int v14 = 138412290;
        id v15 = v11;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "Updating session screenEnabled: %@",  (uint8_t *)&v14,  0xCu);
      }

      uint64_t v12 = *(unsigned __int8 *)(a1 + 48);
      uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v3 session]);
      [v13 setScreenEnabled:v12];

      if (*(_BYTE *)(a1 + 48)) {
        [v3 startAVCScreenCaptureWithAttributes:*(void *)(a1 + 32) preferImmediateActivation:0 screenControlEnabled:0 capturesCursor:1];
      }
    }

    else
    {
      if (v10)
      {
        LOWORD(v14) = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "Not setting screenEnabled since oneToOneModeEnabled is YES",  (uint8_t *)&v14,  2u);
      }
    }
  }
}

void sub_10015ABEC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, id location)
{
}

void sub_10015AC20(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained setAvcScreenCapture:0];
    unsigned int v4 = (uint64_t (**)(void, void))objc_claimAutoreleasedReturnValue([v3 captureSessionCreationBlock]);
    uint64_t v5 = v4[2](v4, *(void *)(a1 + 32));
    id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
    [v3 setAvcScreenCapture:v6];

    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v3 avcScreenCapture]);
    [v7 startCapture];

    id v8 = sub_1001704C4();
    id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v10 = (void *)objc_claimAutoreleasedReturnValue([v3 avcScreenCapture]);
      uint64_t v11 = *(void *)(a1 + 32);
      int v12 = 138412546;
      uint64_t v13 = v10;
      __int16 v14 = 2112;
      uint64_t v15 = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "Started capture of %@ with configuration: %@",  (uint8_t *)&v12,  0x16u);
    }
  }
}

void sub_10015AD5C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    unsigned int v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained avcScreenCapture]);
    id v5 = [v4 updateScreenCaptureWithConfig:*(void *)(a1 + 32)];

    id v6 = sub_1001704C4();
    uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      id v8 = (void *)objc_claimAutoreleasedReturnValue([v3 avcScreenCapture]);
      uint64_t v9 = *(void *)(a1 + 32);
      int v10 = 138412546;
      uint64_t v11 = v8;
      __int16 v12 = 2112;
      uint64_t v13 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Updated capture=%@ with configuration=%@",  (uint8_t *)&v10,  0x16u);
    }
  }
}

void sub_10015B4D4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_10015B4FC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = sub_1001704C4();
    unsigned int v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v5 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "oneToOne transition completed, re-requesting addParticipant",  v5,  2u);
    }

    [WeakRetained addParticipant:*(void *)(a1 + 32) withVideoEnabled:*(unsigned __int8 *)(a1 + 48) audioPaused:*(unsigned __int8 *)(a1 + 49) screenEnabled:*(unsigned __int8 *)(a1 + 50)];
  }
}

void sub_10015B8E8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
}

void sub_10015B90C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = sub_1001704C4();
    unsigned int v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      int v6 = *(unsigned __int8 *)(a1 + 48);
      int v7 = *(unsigned __int8 *)(a1 + 49);
      int v8 = *(unsigned __int8 *)(a1 + 50);
      *(_DWORD *)buf = 138413058;
      uint64_t v27 = v5;
      __int16 v28 = 1024;
      int v29 = v6;
      __int16 v30 = 1024;
      int v31 = v7;
      __int16 v32 = 1024;
      int v33 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "addParticipant: %@ videoEnabled: %d audioPaused: %d screenEnabled: %d",  buf,  0x1Eu);
    }

    uint64_t v9 = (uint64_t (**)(void, void))objc_claimAutoreleasedReturnValue([WeakRetained avcSessionParticipantCreationBlock]);
    uint64_t v10 = v9[2](v9, *(void *)(a1 + 32));
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(v10);

    [v11 setAudioPaused:*(unsigned __int8 *)(a1 + 49)];
    [v11 setScreenEnabled:*(unsigned __int8 *)(a1 + 50)];
    int v21 = 0;
    __asm { FMOV            V0.2D, #1.0 }

    __int128 v22 = _Q0;
    uint64_t v24 = 0LL;
    uint64_t v25 = 0LL;
    uint64_t v23 = 0LL;
    [v11 setVideoPositionalInfo:&v21];
    id v17 = (void *)objc_claimAutoreleasedReturnValue([v11 uuid]);
    [*(id *)(a1 + 32) setAvcIdentifier:v17];

    id v18 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained remoteParticipantsByIdentifier]);
    uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedLongLong:]( NSNumber,  "numberWithUnsignedLongLong:",  [*(id *)(a1 + 32) identifier]));
    [v18 setObject:v11 forKeyedSubscript:v19];

    id v20 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained session]);
    [v20 addParticipant:v11];
  }
}

void sub_10015BEE0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_10015BF08(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = sub_1001704C4();
    unsigned int v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "oneToOne transition completed, re-requesting removeParticipant",  v5,  2u);
    }

    [WeakRetained removeParticipant:*(void *)(a1 + 32)];
  }
}

void sub_10015F7DC(uint64_t a1)
{
  uint64_t v2 = (unsigned __int8 *)(a1 + 56);
  int v3 = *(unsigned __int8 *)(a1 + 56);
  id v4 = sub_1001704C4();
  uint64_t v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  int v6 = v5;
  if (v3)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      int v7 = *(unsigned __int8 *)(a1 + 56);
      uint64_t v8 = *(void *)(a1 + 32);
      uint64_t v9 = *(void *)(a1 + 40);
      int v11 = 138412802;
      uint64_t v12 = v8;
      __int16 v13 = 1024;
      int v14 = v7;
      __int16 v15 = 2112;
      uint64_t v16 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "screenCapture: %@ didStart: %d, captureWithError: %@",  (uint8_t *)&v11,  0x1Cu);
    }
  }

  else if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
  {
    sub_1002B8ED0(a1, v2, v6);
  }

  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) delegate]);
  [v10 session:*(void *)(a1 + 48) screenCaptureDidStart:*(unsigned __int8 *)(a1 + 56) withError:*(void *)(a1 + 40)];
}

void sub_10015FA40(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 48))
  {
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) captureSessionQueue]);
    id v3 = [v2 count];

    if (v3)
    {
      __int128 v17 = 0u;
      __int128 v18 = 0u;
      __int128 v15 = 0u;
      __int128 v16 = 0u;
      id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) captureSessionQueue]);
      id v5 = [v4 countByEnumeratingWithState:&v15 objects:v19 count:16];
      if (v5)
      {
        id v6 = v5;
        uint64_t v7 = *(void *)v16;
        do
        {
          for (i = 0LL; i != v6; i = (char *)i + 1)
          {
            if (*(void *)v16 != v7) {
              objc_enumerationMutation(v4);
            }
            uint64_t v9 = *(void *)(*((void *)&v15 + 1) + 8LL * (void)i);
            id v10 = sub_1001704C4();
            int v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
            if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
            {
              *(_WORD *)int v14 = 0;
              _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "executing queued up block since capture session stop succeeded",  v14,  2u);
            }

            (*(void (**)(uint64_t))(v9 + 16))(v9);
          }

          id v6 = [v4 countByEnumeratingWithState:&v15 objects:v19 count:16];
        }

        while (v6);
      }
    }

    else
    {
      [*(id *)(a1 + 32) setAvcScreenCapture:0];
    }
  }

  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) captureSessionQueue]);
  [v12 removeAllObjects];

  __int16 v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);
  [v13 session:*(void *)(a1 + 32) screenCaptureDidStop:*(unsigned __int8 *)(a1 + 48) withError:*(void *)(a1 + 40)];
}

void sub_10015FD68(uint64_t a1)
{
  uint64_t v1 = a1 + 32;
  if (*(void *)(a1 + 32))
  {
    id v2 = sub_1001704C4();
    id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
      sub_1002B8F68(v1, v3, v4, v5, v6, v7, v8, v9);
    }
  }

  else
  {
    id v3 = -[TUCallScreenShareAttributes initWithScreenCaptureAttributes:]( objc_alloc(&OBJC_CLASS___TUCallScreenShareAttributes),  "initWithScreenCaptureAttributes:",  *(void *)(a1 + 40));
    if ([*(id *)(a1 + 40) contentType] == (id)2
      || (int v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) mostRecentScreenShareAttributes]),
          unsigned int v12 = [v11 isSignificantChangeFromAttributes:v3],
          v11,
          v12))
    {
      id v13 = sub_1001704C4();
      int v14 = (os_log_s *)objc_claimAutoreleasedReturnValue(v13);
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "Restarting capture due to change in capture content",  buf,  2u);
      }

      __int128 v15 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) delegate]);
      [v15 session:*(void *)(a1 + 48) screenShareAttributesUpdated:v3];
    }

    else
    {
      id v16 = sub_1001704C4();
      __int128 v15 = (void *)objc_claimAutoreleasedReturnValue(v16);
      if (os_log_type_enabled((os_log_t)v15, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)__int128 v17 = 0;
        _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v15,  OS_LOG_TYPE_DEFAULT,  "Not restarting capture since content attributes are similar",  v17,  2u);
      }
    }
  }
}

void sub_100161930(id a1)
{
  off_10044D0B8 = (_UNKNOWN *)CUTWeakLinkSymbol("IMPreferredAccountForService", @"IMCore");
}

void sub_10016229C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
}

void sub_1001622B8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained delegate]);
  [v1 telephonyCallCapabilitiesChanged];
}

id sub_1001622FC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateState];
}

int64_t sub_1001655A4(id a1, CSDThumperAccount *a2, CSDThumperAccount *a3)
{
  uint64_t v4 = a3;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(-[CSDThumperAccount accountID](a2, "accountID"));
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[CSDThumperAccount accountID](v4, "accountID"));

  int64_t v7 = TUStringsAreCaseInsensitiveEqual(v5, v6);
  return v7;
}

int64_t sub_100165610(id a1, CSDThumperAccount *a2, CSDThumperAccount *a3)
{
  uint64_t v4 = a3;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(-[CSDThumperAccount accountID](a2, "accountID"));
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[CSDThumperAccount accountID](v4, "accountID"));

  int64_t v7 = TUStringsAreCaseInsensitiveEqual(v5, v6);
  return v7;
}

uint64_t sub_1001664A8(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0LL;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1LL || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0LL;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0LL;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      break;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t String = PBReaderReadString(a2);
        uint64_t v13 = objc_claimAutoreleasedReturnValue(String);
        uint64_t v14 = 24LL;
        goto LABEL_22;
      case 2u:
        uint64_t v16 = PBReaderReadString(a2);
        uint64_t v13 = objc_claimAutoreleasedReturnValue(v16);
        uint64_t v14 = 16LL;
LABEL_22:
        __int128 v17 = *(void **)(a1 + v14);
        *(void *)(a1 + v14) = v13;

        continue;
      case 3u:
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0LL;
        *(_BYTE *)(a1 + 36) |= 1u;
        while (2)
        {
          unint64_t v21 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v21 == -1LL || v21 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v22 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v21);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v21 + 1;
            v20 |= (unint64_t)(v22 & 0x7F) << v18;
            if (v22 < 0)
            {
              v18 += 7;
              BOOL v9 = v19++ >= 9;
              if (v9)
              {
                LODWORD(v20) = 0;
                goto LABEL_54;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v20) = 0;
        }
LABEL_54:
        *(_DWORD *)(a1 + _Block_object_dispose(va, 8) = v20;
        continue;
      case 4u:
        char v23 = 0;
        unsigned int v24 = 0;
        uint64_t v25 = 0LL;
        *(_BYTE *)(a1 + 36) |= 2u;
        while (2)
        {
          unint64_t v26 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v26 == -1LL || v26 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v27 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v26);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v26 + 1;
            v25 |= (unint64_t)(v27 & 0x7F) << v23;
            if (v27 < 0)
            {
              v23 += 7;
              BOOL v9 = v24++ >= 9;
              if (v9)
              {
                uint64_t v25 = 0LL;
                goto LABEL_58;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v25 = 0LL;
        }
LABEL_58:
        BOOL v38 = v25 != 0;
        uint64_t v39 = 32LL;
        goto LABEL_67;
      case 5u:
        char v28 = 0;
        unsigned int v29 = 0;
        uint64_t v30 = 0LL;
        *(_BYTE *)(a1 + 36) |= 4u;
        while (2)
        {
          unint64_t v31 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v31 == -1LL || v31 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v32 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v31);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v31 + 1;
            v30 |= (unint64_t)(v32 & 0x7F) << v28;
            if (v32 < 0)
            {
              v28 += 7;
              BOOL v9 = v29++ >= 9;
              if (v9)
              {
                uint64_t v30 = 0LL;
                goto LABEL_62;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v30 = 0LL;
        }
LABEL_62:
        BOOL v38 = v30 != 0;
        uint64_t v39 = 33LL;
        goto LABEL_67;
      case 6u:
        char v33 = 0;
        unsigned int v34 = 0;
        uint64_t v35 = 0LL;
        *(_BYTE *)(a1 + 36) |= 8u;
        break;
      default:
        uint64_t result = PBReaderSkipValueWithTag(a2);
        if (!(_DWORD)result) {
          return result;
        }
        continue;
    }

    while (1)
    {
      unint64_t v36 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v36 == -1LL || v36 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v37 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v36);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v36 + 1;
      v35 |= (unint64_t)(v37 & 0x7F) << v33;
      if ((v37 & 0x80) == 0) {
        goto LABEL_64;
      }
      v33 += 7;
      BOOL v9 = v34++ >= 9;
      if (v9)
      {
        uint64_t v35 = 0LL;
        goto LABEL_66;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_64:
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      uint64_t v35 = 0LL;
    }
LABEL_66:
    BOOL v38 = v35 != 0;
    uint64_t v39 = 34LL;
LABEL_67:
    *(_BYTE *)(a1 + v39) = v38;
  }

  return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_1001670D8(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  id v2 = (void *)qword_10044D0C8;
  qword_10044D0C8 = (uint64_t)v1;
}

void sub_1001673DC(_Unwind_Exception *a1)
{
}

void sub_1001674C4(_Unwind_Exception *a1)
{
}

void sub_1001675B0(_Unwind_Exception *a1)
{
}

void sub_1001677B8(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (!v3)
  {
    lock = (os_unfair_lock_s *)(*(void *)(a1 + 32) + 8LL);
    os_unfair_lock_lock(lock);
    char v4 = *(void **)(a1 + 40);
    unsigned int v5 = *(void **)(*(void *)(a1 + 32) + 24LL);
    unint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v4 identifier]);
    [v5 setObject:v4 forKeyedSubscript:v6];

    unint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) beginListeningBlock]);
    if (v7)
    {
      char v8 = (void (**)(void, void))objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) beginListeningBlock]);
      BOOL v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) service]);
      ((void (**)(void, void *))v8)[2](v8, v9);
    }

    __int128 v36 = 0u;
    __int128 v37 = 0u;
    __int128 v34 = 0u;
    __int128 v35 = 0u;
    int v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "pidToCachedProviderIdentifiers", 0));
    id v11 = [v10 countByEnumeratingWithState:&v34 objects:v38 count:16];
    if (v11)
    {
      uint64_t v12 = *(void *)v35;
      do
      {
        for (i = 0LL; i != v11; i = (char *)i + 1)
        {
          if (*(void *)v35 != v12) {
            objc_enumerationMutation(v10);
          }
          uint64_t v14 = *(void *)(*((void *)&v34 + 1) + 8LL * (void)i);
          __int128 v15 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) pidToCachedProviderIdentifiers]);
          uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v15 objectForKeyedSubscript:v14]);
          __int128 v17 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) identifier]);
          unsigned int v18 = [v16 containsObject:v17];

          if (v18)
          {
            unsigned int v19 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) pidToProviderIdentifiers]);
            uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([v19 objectForKeyedSubscript:v14]);
            BOOL v21 = v20 == 0LL;

            if (v21)
            {
              char v22 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
              char v23 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) pidToProviderIdentifiers]);
              [v23 setObject:v22 forKeyedSubscript:v14];
            }

            unsigned int v24 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) pidToProviderIdentifiers]);
            uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue([v24 objectForKeyedSubscript:v14]);
            unint64_t v26 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) identifier]);
            id v27 = [v26 copy];
            [v25 addObject:v27];

            char v28 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) pidToCachedProviderIdentifiers]);
            unsigned int v29 = (void *)objc_claimAutoreleasedReturnValue([v28 objectForKeyedSubscript:v14]);
            uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) identifier]);
            [v29 removeObject:v30];
          }
        }

        id v11 = [v10 countByEnumeratingWithState:&v34 objects:v38 count:16];
      }

      while (v11);
    }

    os_unfair_lock_unlock(lock);
    id v3 = v32;
  }

  unint64_t v31 = v3;
  (*(void (**)(void))(*(void *)(a1 + 56) + 16LL))();
}

void sub_100167AC0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
}

void sub_100167B54(_Unwind_Exception *a1)
{
}

void sub_100167ED0(_Unwind_Exception *a1)
{
}

void sub_100168004(_Unwind_Exception *a1)
{
}

void sub_100168188(_Unwind_Exception *a1)
{
}

uint64_t sub_10016819C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_1001683DC(_Unwind_Exception *a1)
{
}

void sub_10016858C(_Unwind_Exception *a1)
{
}

void sub_100168890( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1001688B8(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  char v4 = objc_alloc(&OBJC_CLASS___NSNumber);
  id v5 = [v3 pid];

  unint64_t v6 = -[NSNumber initWithInt:](v4, "initWithInt:", v5);
  if (WeakRetained)
  {
    unint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained pidToProcessHandle]);
    [v7 setObject:0 forKeyedSubscript:v6];

    char v8 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained pidToProviderIdentifiers]);
    [v8 setObject:0 forKeyedSubscript:v6];

    BOOL v9 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained pidToCachedProviderIdentifiers]);
    [v9 setObject:0 forKeyedSubscript:v6];
  }
}

void sub_100168EF0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5)
  {
    [*(id *)(a1 + 32) setLocallyHasStartedOutgoing];
    objc_msgSend(*(id *)(a1 + 32), "setInitialLinkType:", objc_msgSend(v5, "initialLinkType"));
    [*(id *)(a1 + 32) startConferenceForDialedCallWithTransport:v5 remoteInviteDictionary:v6];
  }

  else
  {
    id v7 = sub_1001704C4();
    char v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      int v10 = 138412290;
      uint64_t v11 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "[WARN] Transport did not become available when dialing call %@",  (uint8_t *)&v10,  0xCu);
    }

    [*(id *)(a1 + 32) stopConference];
  }
}

id sub_10016922C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _[*(id *)(a1 + 32) _handleJoinConversationResponse:a2 sessionAvailable:a3 forRelayCall:*(void *)(a1 + 40)];
}

void sub_100169414(uint64_t a1, char a2, char a3)
{
  if ((a2 & 1) == 0)
  {
    id v6 = sub_1001704C4();
    id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_1002B90F0();
    }

    char v8 = *(void **)(a1 + 32);
    uint64_t v9 = 9LL;
    goto LABEL_11;
  }

  if ((a3 & 1) == 0)
  {
    id v10 = sub_1001704C4();
    uint64_t v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      sub_1002B9090();
    }

    char v8 = *(void **)(a1 + 32);
    uint64_t v9 = 8LL;
LABEL_11:
    [v8 setLocallyDisconnectedWithReasonIfNone:v9];
    return;
  }

  if ([*(id *)(a1 + 32) isEndpointOnCurrentDevice])
  {
    char v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) relayMessagingController]);
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472LL;
    v12[2] = sub_100169538;
    v12[3] = &unk_1003DB950;
    id v13 = *(id *)(a1 + 32);
    id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) uniqueProxyIdentifier]);
    [v4 performBlockOnTransportAvailability:v12 forIdentifier:v5];
  }

void sub_100169538(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5)
  {
    [*(id *)(a1 + 32) setLocallyHasStartedOutgoing];
    objc_msgSend(*(id *)(a1 + 32), "setInitialLinkType:", objc_msgSend(v5, "initialLinkType"));
    [*(id *)(a1 + 32) startConferenceForDialedCallWithTransport:v5 remoteInviteDictionary:v6];
  }

  else
  {
    id v7 = sub_1001704C4();
    char v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      int v10 = 138412290;
      uint64_t v11 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "[WARN] Transport did not become available when dialing call %@",  (uint8_t *)&v10,  0xCu);
    }

    [*(id *)(a1 + 32) stopConference];
  }
}

void sub_10016979C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5)
  {
    objc_msgSend(*(id *)(a1 + 32), "setInitialLinkType:", objc_msgSend(v5, "initialLinkType"));
    [*(id *)(a1 + 32) startConferenceForAnsweredCallWithTransport:v5 remoteInviteDictionary:v6];
  }

  else
  {
    id v7 = sub_1001704C4();
    char v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_1002B9150();
    }

    [*(id *)(a1 + 32) setLocallyDisconnectedWithReasonIfNone:8];
    [*(id *)(a1 + 32) stopConference];
  }
}

void sub_100169B14(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5)
  {
    [*(id *)(a1 + 32) setLocallyHasStartedOutgoing];
    objc_msgSend(*(id *)(a1 + 32), "setInitialLinkType:", objc_msgSend(v5, "initialLinkType"));
    [*(id *)(a1 + 32) startConferenceForPulledCallWithTransport:v5 remoteInviteDictionary:v6];
  }

  else
  {
    id v7 = sub_1001704C4();
    char v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_1002B91B0();
    }

    [*(id *)(a1 + 32) setEndpointOnCurrentDevice:0];
    [*(id *)(a1 + 32) stopConference];
  }
}

uint64_t sub_10016C09C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0LL;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1LL || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0LL;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0LL;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        char v12 = 0;
        unsigned int v13 = 0;
        uint64_t v14 = 0LL;
        *(_WORD *)(a1 + 204) |= 0x40u;
        while (1)
        {
          unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v15 == -1LL || v15 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v16 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
          v14 |= (unint64_t)(v16 & 0x7F) << v12;
          if ((v16 & 0x80) == 0) {
            goto LABEL_132;
          }
          v12 += 7;
          BOOL v9 = v13++ >= 9;
          if (v9)
          {
            LODWORD(v14) = 0;
            goto LABEL_134;
          }
        }

        *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_132:
        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_134:
        uint64_t v67 = 196LL;
        goto LABEL_172;
      case 2u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v14 = 0LL;
        *(_WORD *)(a1 + 204) |= 0x20u;
        while (2)
        {
          unint64_t v19 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v19 == -1LL || v19 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v20 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v19);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v19 + 1;
            v14 |= (unint64_t)(v20 & 0x7F) << v17;
            if (v20 < 0)
            {
              v17 += 7;
              BOOL v9 = v18++ >= 9;
              if (v9)
              {
                LODWORD(v14) = 0;
                goto LABEL_138;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_138:
        uint64_t v67 = 192LL;
        goto LABEL_172;
      case 3u:
        char v21 = 0;
        unsigned int v22 = 0;
        uint64_t v23 = 0LL;
        *(_WORD *)(a1 + 204) |= 0x200u;
        while (2)
        {
          unint64_t v24 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v24 == -1LL || v24 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v25 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v24);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v24 + 1;
            v23 |= (unint64_t)(v25 & 0x7F) << v21;
            if (v25 < 0)
            {
              v21 += 7;
              BOOL v9 = v22++ >= 9;
              if (v9)
              {
                uint64_t v23 = 0LL;
                goto LABEL_142;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v23 = 0LL;
        }
LABEL_142:
        BOOL v68 = v23 != 0;
        uint64_t v69 = 202LL;
        goto LABEL_159;
      case 4u:
        unint64_t v26 = objc_alloc_init(&OBJC_CLASS___CSDMessagingConversationParticipant);
        [(id)a1 addActiveParticipants:v26];
        goto LABEL_88;
      case 5u:
        uint64_t String = PBReaderReadString(a2);
        uint64_t v28 = objc_claimAutoreleasedReturnValue(String);
        uint64_t v29 = 48LL;
        goto LABEL_99;
      case 6u:
        unint64_t v26 = objc_alloc_init(&OBJC_CLASS___CSDMessagingConversationMember);
        [(id)a1 addAddedMembers:v26];
        goto LABEL_84;
      case 7u:
        char v30 = 0;
        unsigned int v31 = 0;
        uint64_t v14 = 0LL;
        *(_WORD *)(a1 + 204) |= 2u;
        while (2)
        {
          unint64_t v32 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v32 == -1LL || v32 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v33 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v32);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v32 + 1;
            v14 |= (unint64_t)(v33 & 0x7F) << v30;
            if (v33 < 0)
            {
              v30 += 7;
              BOOL v9 = v31++ >= 9;
              if (v9)
              {
                LODWORD(v14) = 0;
                goto LABEL_146;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_146:
        uint64_t v67 = 56LL;
        goto LABEL_172;
      case 8u:
        uint64_t v34 = PBReaderReadString(a2);
        uint64_t v28 = objc_claimAutoreleasedReturnValue(v34);
        uint64_t v29 = 144LL;
        goto LABEL_99;
      case 9u:
        unint64_t v26 = objc_alloc_init(&OBJC_CLASS___CSDMessagingConversationActivitySession);
        [(id)a1 addActivitySessions:v26];
        goto LABEL_104;
      case 0xAu:
        uint64_t v35 = PBReaderReadString(a2);
        uint64_t v28 = objc_claimAutoreleasedReturnValue(v35);
        uint64_t v29 = 128LL;
        goto LABEL_99;
      case 0xBu:
        unint64_t v26 = objc_alloc_init(&OBJC_CLASS___CSDMessagingConversationLink);
        objc_storeStrong((id *)(a1 + 120), v26);
        goto LABEL_123;
      case 0xCu:
        unint64_t v26 = objc_alloc_init(&OBJC_CLASS___CSDMessagingConversationReport);
        objc_storeStrong((id *)(a1 + 160), v26);
        goto LABEL_123;
      case 0xDu:
        char v36 = 0;
        unsigned int v37 = 0;
        uint64_t v38 = 0LL;
        *(_WORD *)(a1 + 204) |= 0x100u;
        while (2)
        {
          unint64_t v39 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v39 == -1LL || v39 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v40 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v39);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v39 + 1;
            v38 |= (unint64_t)(v40 & 0x7F) << v36;
            if (v40 < 0)
            {
              v36 += 7;
              BOOL v9 = v37++ >= 9;
              if (v9)
              {
                uint64_t v38 = 0LL;
                goto LABEL_150;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v38 = 0LL;
        }
LABEL_150:
        BOOL v68 = v38 != 0;
        uint64_t v69 = 201LL;
        goto LABEL_159;
      case 0xEu:
        unint64_t v26 = objc_alloc_init(&OBJC_CLASS___CSDMessagingEncryptedConversationMessage);
        objc_storeStrong((id *)(a1 + 64), v26);
        goto LABEL_123;
      case 0xFu:
        uint64_t v41 = PBReaderReadString(a2);
        uint64_t v28 = objc_claimAutoreleasedReturnValue(v41);
        uint64_t v29 = 96LL;
        goto LABEL_99;
      case 0x10u:
        uint64_t v42 = PBReaderReadString(a2);
        uint64_t v28 = objc_claimAutoreleasedReturnValue(v42);
        uint64_t v29 = 104LL;
        goto LABEL_99;
      case 0x11u:
        char v43 = 0;
        unsigned int v44 = 0;
        uint64_t v14 = 0LL;
        *(_WORD *)(a1 + 204) |= 4u;
        while (2)
        {
          unint64_t v45 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v45 == -1LL || v45 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v46 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v45);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v45 + 1;
            v14 |= (unint64_t)(v46 & 0x7F) << v43;
            if (v46 < 0)
            {
              v43 += 7;
              BOOL v9 = v44++ >= 9;
              if (v9)
              {
                LODWORD(v14) = 0;
                goto LABEL_154;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_154:
        uint64_t v67 = 60LL;
        goto LABEL_172;
      case 0x13u:
        unint64_t v26 = objc_alloc_init(&OBJC_CLASS___CSDMessagingConversationInvitationPreference);
        [(id)a1 addInvitationPreferences:v26];
        goto LABEL_123;
      case 0x14u:
        unint64_t v26 = objc_alloc_init(&OBJC_CLASS___CSDMessagingConversationMember);
        [(id)a1 addRemovedMembers:v26];
        goto LABEL_84;
      case 0x16u:
        unint64_t v26 = objc_alloc_init(&OBJC_CLASS___CSDMessagingConversationMember);
        [(id)a1 addLightweightMembers:v26];
LABEL_84:
        goto LABEL_123;
      case 0x17u:
        unint64_t v26 = objc_alloc_init(&OBJC_CLASS___CSDMessagingConversationParticipant);
        [(id)a1 addActiveLightweightParticipants:v26];
LABEL_88:
        goto LABEL_123;
      case 0x18u:
        char v48 = 0;
        unsigned int v49 = 0;
        uint64_t v50 = 0LL;
        *(_WORD *)(a1 + 204) |= 0x80u;
        while (2)
        {
          unint64_t v51 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v51 == -1LL || v51 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v52 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v51);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v51 + 1;
            v50 |= (unint64_t)(v52 & 0x7F) << v48;
            if (v52 < 0)
            {
              v48 += 7;
              BOOL v9 = v49++ >= 9;
              if (v9)
              {
                uint64_t v50 = 0LL;
                goto LABEL_158;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v50 = 0LL;
        }
LABEL_158:
        BOOL v68 = v50 != 0;
        uint64_t v69 = 200LL;
LABEL_159:
        *(_BYTE *)(a1 + v69) = v68;
        goto LABEL_173;
      case 0x19u:
        uint64_t v53 = PBReaderReadString(a2);
        uint64_t v28 = objc_claimAutoreleasedReturnValue(v53);
        uint64_t v29 = 72LL;
LABEL_99:
        uint64_t v54 = *(void **)(a1 + v29);
        *(void *)(a1 + v29) = v28;

        goto LABEL_173;
      case 0x1Au:
        unint64_t v26 = objc_alloc_init(&OBJC_CLASS___CSDMessagingConversationJoinedMetadata);
        objc_storeStrong((id *)(a1 + 88), v26);
        goto LABEL_123;
      case 0x1Bu:
        unint64_t v26 = objc_alloc_init(&OBJC_CLASS___CSDMessagingConversationActivitySession);
        objc_storeStrong((id *)(a1 + 184), v26);
LABEL_104:
        goto LABEL_123;
      case 0x1Cu:
        char v55 = 0;
        unsigned int v56 = 0;
        uint64_t v14 = 0LL;
        *(_WORD *)(a1 + 204) |= 1u;
        while (2)
        {
          unint64_t v57 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v57 == -1LL || v57 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v58 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v57);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v57 + 1;
            v14 |= (unint64_t)(v58 & 0x7F) << v55;
            if (v58 < 0)
            {
              v55 += 7;
              BOOL v9 = v56++ >= 9;
              if (v9)
              {
                LODWORD(v14) = 0;
                goto LABEL_163;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_163:
        uint64_t v67 = 40LL;
        goto LABEL_172;
      case 0x1Du:
        char v59 = 0;
        unsigned int v60 = 0;
        uint64_t v14 = 0LL;
        *(_WORD *)(a1 + 204) |= 0x10u;
        while (2)
        {
          unint64_t v61 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v61 == -1LL || v61 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v62 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v61);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v61 + 1;
            v14 |= (unint64_t)(v62 & 0x7F) << v59;
            if (v62 < 0)
            {
              v59 += 7;
              BOOL v9 = v60++ >= 9;
              if (v9)
              {
                LODWORD(v14) = 0;
                goto LABEL_167;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_167:
        uint64_t v67 = 168LL;
        goto LABEL_172;
      case 0x1Eu:
        unint64_t v26 = objc_alloc_init(&OBJC_CLASS___CSDMessagingScreenShareContext);
        objc_storeStrong((id *)(a1 + 176), v26);
        if (PBReaderPlaceMark(a2, v70) && (sub_10005DE5C((uint64_t)v26, a2) & 1) != 0)
        {
LABEL_123:
          PBReaderRecallMark(a2, v70);

LABEL_173:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }

LABEL_175:
        return 0LL;
      case 0x1Fu:
        char v63 = 0;
        unsigned int v64 = 0;
        uint64_t v14 = 0LL;
        *(_WORD *)(a1 + 204) |= 8u;
        while (2)
        {
          unint64_t v65 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v65 == -1LL || v65 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v66 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v65);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v65 + 1;
            v14 |= (unint64_t)(v66 & 0x7F) << v63;
            if (v66 < 0)
            {
              v63 += 7;
              BOOL v9 = v64++ >= 9;
              if (v9)
              {
                LODWORD(v14) = 0;
                goto LABEL_171;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_171:
        uint64_t v67 = 136LL;
LABEL_172:
        *(_DWORD *)(a1 + v67) = v14;
        goto LABEL_173;
      default:
        uint64_t result = PBReaderSkipValueWithTag(a2);
        if (!(_DWORD)result) {
          return result;
        }
        goto LABEL_173;
    }
  }

LABEL_100:
    char v33 = 0;
    goto LABEL_101;
  }

LABEL_95:
  unint64_t v32 = *((_WORD *)v4 + 102);
  if ((v29 & 8) != 0)
  {
    if ((v32 & 8) == 0 || self->_presentationMode != *((_DWORD *)v4 + 34)) {
      goto LABEL_100;
    }
    char v33 = 1;
  }

  else
  {
    char v33 = (v32 & 8) == 0;
  }

LABEL_101:
  return v33;
}

uint64_t sub_10016F870(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0LL;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1LL || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0LL;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0LL;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      break;
    }
    if ((v6 >> 3) == 2)
    {
      char v17 = 0;
      unsigned int v18 = 0;
      uint64_t v19 = 0LL;
      *(_BYTE *)(a1 + 20) |= 1u;
      while (1)
      {
        unint64_t v20 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v20 == -1LL || v20 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v21 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v20);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v20 + 1;
        v19 |= (unint64_t)(v21 & 0x7F) << v17;
        if ((v21 & 0x80) == 0) {
          goto LABEL_40;
        }
        v17 += 7;
        BOOL v9 = v18++ >= 9;
        if (v9)
        {
          uint64_t v19 = 0LL;
          goto LABEL_42;
        }
      }

      *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_40:
      if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        uint64_t v19 = 0LL;
      }
LABEL_42:
      *(void *)(a1 + _Block_object_dispose(va, 8) = v19;
    }

    else if ((v6 >> 3) == 1)
    {
      char v12 = 0;
      unsigned int v13 = 0;
      uint64_t v14 = 0LL;
      *(_BYTE *)(a1 + 20) |= 2u;
      while (1)
      {
        unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v15 == -1LL || v15 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v16 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
        v14 |= (unint64_t)(v16 & 0x7F) << v12;
        if ((v16 & 0x80) == 0) {
          goto LABEL_36;
        }
        v12 += 7;
        BOOL v9 = v13++ >= 9;
        if (v9)
        {
          LODWORD(v14) = 0;
          goto LABEL_38;
        }
      }

      *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_36:
      if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        LODWORD(v14) = 0;
      }
LABEL_38:
      *(_DWORD *)(a1 + 16) = v14;
    }

    else
    {
      uint64_t result = PBReaderSkipValueWithTag(a2);
      if (!(_DWORD)result) {
        return result;
      }
    }
  }

  return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

id sub_10016FFEC(id a1, NSDictionary *a2)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(-[NSDictionary _stringForKey:](a2, "_stringForKey:", @"uri"));
  else {
    id v3 = (id)objc_claimAutoreleasedReturnValue([v2 _stripFZIDPrefix]);
  }
  char v4 = v3;

  return v4;
}

id sub_1001704C4()
{
  if (qword_10044D0E0 != -1) {
    dispatch_once(&qword_10044D0E0, &stru_1003DBB30);
  }
  return (id)qword_10044D0D8;
}

void sub_100170504(id a1)
{
  os_log_t v1 = os_log_create("com.apple.calls.callservicesd", "Default");
  id v2 = (void *)qword_10044D0D8;
  qword_10044D0D8 = (uint64_t)v1;
}

id sub_100170534()
{
  if (qword_10044D0F0 != -1) {
    dispatch_once(&qword_10044D0F0, &stru_1003DBB50);
  }
  return (id)qword_10044D0E8;
}

void sub_100170574(id a1)
{
  os_log_t v1 = os_log_create("com.apple.calls.callservicesd", "IDSMessageProxy");
  id v2 = (void *)qword_10044D0E8;
  qword_10044D0E8 = (uint64_t)v1;
}

id sub_1001705A4()
{
  if (qword_10044D100 != -1) {
    dispatch_once(&qword_10044D100, &stru_1003DBB70);
  }
  return (id)qword_10044D0F8;
}

void sub_1001705E4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.calls.callservicesd", "Reporting");
  id v2 = (void *)qword_10044D0F8;
  qword_10044D0F8 = (uint64_t)v1;
}

id sub_100170614()
{
  if (qword_10044D110 != -1) {
    dispatch_once(&qword_10044D110, &stru_1003DBB90);
  }
  return (id)qword_10044D108;
}

void sub_100170654(id a1)
{
  os_log_t v1 = os_log_create("com.apple.calls.callservicesd", "Audio");
  id v2 = (void *)qword_10044D108;
  qword_10044D108 = (uint64_t)v1;
}

id sub_100170684()
{
  if (qword_10044D120 != -1) {
    dispatch_once(&qword_10044D120, &stru_1003DBBB0);
  }
  return (id)qword_10044D118;
}

void sub_1001706C4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.calls.callservicesd", "Simulated");
  id v2 = (void *)qword_10044D118;
  qword_10044D118 = (uint64_t)v1;
}

BOOL sub_100170A38(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (1)
    {
      if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      char v4 = 0;
      unsigned int v5 = 0;
      unint64_t v6 = 0LL;
      while (1)
      {
        unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v7 == -1LL || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v8 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
        v6 |= (unint64_t)(v8 & 0x7F) << v4;
        if ((v8 & 0x80) == 0) {
          goto LABEL_11;
        }
        v4 += 7;
        if (v5++ >= 9)
        {
          unint64_t v6 = 0LL;
          int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
          goto LABEL_13;
        }
      }

      *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
      int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
      if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        unint64_t v6 = 0LL;
      }
LABEL_13:
      if (v10 || (v6 & 7) == 4) {
        return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      if ((v6 >> 3) == 1)
      {
        char v12 = 0;
        unsigned int v13 = 0;
        uint64_t v14 = 0LL;
        *(_BYTE *)(a1 + 16) |= 2u;
        while (1)
        {
          unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v15 == -1LL || v15 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            unsigned int v18 = &OBJC_IVAR___CSDMessagingConversationParticipantDidLeaveContext__version;
            goto LABEL_37;
          }

          char v16 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
          v14 |= (unint64_t)(v16 & 0x7F) << v12;
          if ((v16 & 0x80) == 0) {
            break;
          }
          v12 += 7;
          BOOL v17 = v13++ > 8;
          if (v17)
          {
            LODWORD(v14) = 0;
            unsigned int v18 = &OBJC_IVAR___CSDMessagingConversationParticipantDidLeaveContext__version;
            goto LABEL_40;
          }
        }

        unsigned int v18 = &OBJC_IVAR___CSDMessagingConversationParticipantDidLeaveContext__version;
LABEL_38:
        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_40:
        *(_DWORD *)(a1 + *v1_Block_object_dispose(va, 8) = v14;
        goto LABEL_41;
      }

      if ((PBReaderSkipValueWithTag(a2) & 1) == 0) {
        return 0LL;
      }
LABEL_41:
      if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
    }

    char v19 = 0;
    unsigned int v20 = 0;
    uint64_t v14 = 0LL;
    *(_BYTE *)(a1 + 16) |= 1u;
    while (1)
    {
      unint64_t v21 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v21 == -1LL || v21 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v22 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v21);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v21 + 1;
      v14 |= (unint64_t)(v22 & 0x7F) << v19;
      if ((v22 & 0x80) == 0)
      {
        unsigned int v18 = &OBJC_IVAR___CSDMessagingConversationParticipantDidLeaveContext__leaveReason;
        goto LABEL_38;
      }

      v19 += 7;
      BOOL v17 = v20++ > 8;
      if (v17)
      {
        LODWORD(v14) = 0;
        unsigned int v18 = &OBJC_IVAR___CSDMessagingConversationParticipantDidLeaveContext__leaveReason;
        goto LABEL_40;
      }
    }

    unsigned int v18 = &OBJC_IVAR___CSDMessagingConversationParticipantDidLeaveContext__leaveReason;
LABEL_37:
    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
    goto LABEL_38;
  }

  return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_100171C78(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  id v2 = (void *)qword_10044D128;
  qword_10044D128 = (uint64_t)v1;
}

void sub_100171DC0(uint64_t a1)
{
  id v2 = objc_alloc(&OBJC_CLASS___CSDKeychainPasswordItem);
  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[CSDKeychainPasswordItem serviceName](&OBJC_CLASS___CSDKeychainPasswordItem, "serviceName"));
  char v4 = (void *)objc_claimAutoreleasedReturnValue(+[CSDKeychainPasswordItem accessGroupName](&OBJC_CLASS___CSDKeychainPasswordItem, "accessGroupName"));
  unsigned int v5 = -[CSDKeychainPasswordItem initWithService:account:accessGroup:]( v2,  "initWithService:account:accessGroup:",  v3,  @"lastKnownFaceTimeCallerID",  v4);
  uint64_t v6 = *(void *)(a1 + 32);
  unint64_t v7 = *(void **)(v6 + 32);
  *(void *)(v6 + 32) = v5;

  objc_initWeak(&location, *(id *)(a1 + 32));
  char v8 = -[CSDDeviceLockStateObserver initWithQueue:]( objc_alloc(&OBJC_CLASS___CSDDeviceLockStateObserver),  "initWithQueue:",  *(void *)(*(void *)(a1 + 32) + 24LL));
  uint64_t v9 = *(void *)(a1 + 32);
  int v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v8;

  uint64_t v11 = *(void **)(*(void *)(a1 + 32) + 40LL);
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472LL;
  v12[2] = sub_100171F08;
  v12[3] = &unk_1003D7DF0;
  objc_copyWeak(&v13, &location);
  [v11 performBlockAfterFirstUnlock:v12];
  objc_destroyWeak(&v13);
  objc_destroyWeak(&location);
}

void sub_100171EE4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_100171F08(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained _initializeLastKnownCallerID];
    id WeakRetained = v2;
  }
}

void sub_100172000( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_100172018(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_100172028(uint64_t a1)
{
}

void sub_100172030(uint64_t a1)
{
}

void sub_1001720C0(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) faceTimeIMAccount]);
  uint64_t v4 = *(void *)(a1 + 40);
  id v3 = (void *)(a1 + 40);
  if (([v2 hasAlias:v4] & 1) == 0)
  {
    id v5 = sub_1001704C4();
    uint64_t v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v7 = *v3;
      int v13 = 138412546;
      uint64_t v14 = v7;
      __int16 v15 = 2112;
      char v16 = v2;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Adding %@ as an alias on account %@",  (uint8_t *)&v13,  0x16u);
    }

    if (([v2 addAlias:*v3] & 1) == 0)
    {
      id v8 = sub_1001704C4();
      uint64_t v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        sub_1002B9360(v3, v2, v9);
      }
    }
  }

  id v10 = sub_1001704C4();
  uint64_t v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v12 = *v3;
    int v13 = 138412546;
    uint64_t v14 = v12;
    __int16 v15 = 2112;
    char v16 = v2;
    _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "Updating display name to %@ on account %@",  (uint8_t *)&v13,  0x16u);
  }

  [v2 setDisplayName:*v3];
}

void sub_100172A9C(uint64_t a1)
{
  id v2 = *(id *)(*(void *)(a1 + 32) + 16LL);
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 16LL), *(id *)(a1 + 40));
  if ((TUStringsAreEqualOrNil(v2, *(void *)(*(void *)(a1 + 32) + 16LL)) & 1) == 0)
  {
    id v3 = sub_1001704C4();
    uint64_t v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 16LL);
      int v6 = 138412546;
      id v7 = v2;
      __int16 v8 = 2112;
      uint64_t v9 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "FaceTime caller ID changed from %@ to %@",  (uint8_t *)&v6,  0x16u);
    }

    [*(id *)(a1 + 32) _saveLastKnownFaceTimeCallerID];
    dispatch_async(&_dispatch_main_q, &stru_1003DBBF8);
  }
}

void sub_100172BA8(id a1)
{
  id v1 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
  [v1 postNotificationName:@"CSDFaceTimeIMAccountCallerIDChangedNotification" object:0];
}

id sub_100172D00(uint64_t a1)
{
  return [*(id *)(a1 + 32) updateState];
}

void sub_100174514(_Unwind_Exception *a1)
{
}

void sub_100174550(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained ctEmergencyCallbackModeStatusChangedWithUserInfo:a2];
}

void sub_1001750D8(uint64_t a1, void *a2)
{
  id v2 = a2;
  if (v2)
  {
    id v3 = sub_1001704C4();
    uint64_t v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_1002B975C();
    }
  }
}

void sub_10017529C(uint64_t a1, void *a2)
{
  id v2 = a2;
  if (v2)
  {
    id v3 = sub_1001704C4();
    uint64_t v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_1002B97C0();
    }
  }
}

void sub_100176A8C(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);
  [v2 client:*(void *)(a1 + 32) capabilitiesDidChange:*(void *)(a1 + 40)];
}

void sub_100176BCC(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);
  [v2 emergencyCallbackModeDidChangeForAllSubscriptionsForClient:*(void *)(a1 + 32)];
}

void sub_100176CB8(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
}

  ;
}

uint64_t sub_100178730(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    uint64_t v4 = &OBJC_IVAR___CSDMessagingConversationParticipantDidJoinContext__isUPlusNDowngradeAvailable;
    uint64_t v5 = &OBJC_IVAR___CSDMessagingConversationParticipantDidJoinContext__isUPlusNDowngradeAvailable;
    int v6 = &OBJC_IVAR___CSDMessagingConversationParticipantDidJoinContext__isUPlusNDowngradeAvailable;
    id v7 = &OBJC_IVAR___CSDMessagingConversationParticipantDidJoinContext__isUPlusNDowngradeAvailable;
    __int16 v8 = &OBJC_IVAR___CSDMessagingConversationParticipantDidJoinContext__isUPlusNDowngradeAvailable;
    uint64_t v9 = &OBJC_IVAR___CSDMessagingConversationParticipantDidJoinContext__isUPlusNDowngradeAvailable;
    id v10 = &OBJC_IVAR___CSDMessagingConversationParticipantDidJoinContext__isUPlusNDowngradeAvailable;
    uint64_t v11 = &OBJC_IVAR___CSDMessagingConversationParticipantDidJoinContext__isUPlusNDowngradeAvailable;
    uint64_t v12 = &OBJC_IVAR___CSDMessagingConversationParticipantDidJoinContext__isUPlusNDowngradeAvailable;
    int v13 = &OBJC_IVAR___CSDMessagingConversationParticipantDidJoinContext__isUPlusNDowngradeAvailable;
    uint64_t v14 = &OBJC_IVAR___CSDMessagingConversationParticipantDidJoinContext__isUPlusNDowngradeAvailable;
    do
    {
      if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        break;
      }
      char v15 = 0;
      unsigned int v16 = 0;
      unint64_t v17 = 0LL;
      while (1)
      {
        unint64_t v18 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v18 == -1LL || v18 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v19 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v18);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v18 + 1;
        v17 |= (unint64_t)(v19 & 0x7F) << v15;
        if ((v19 & 0x80) == 0) {
          goto LABEL_12;
        }
        v15 += 7;
        BOOL v20 = v16++ >= 9;
        if (v20)
        {
          unint64_t v17 = 0LL;
          int v21 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
          goto LABEL_14;
        }
      }

      *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_12:
      int v21 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
      if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        unint64_t v17 = 0LL;
      }
LABEL_14:
      if (v21 || (v17 & 7) == 4) {
        break;
      }
      switch((v17 >> 3))
      {
        case 1u:
          char v23 = 0;
          unsigned int v24 = 0;
          uint64_t v25 = 0LL;
          *(_WORD *)(a1 + v4[676]) |= 1u;
          while (1)
          {
            unint64_t v26 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            if (v26 == -1LL || v26 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
              break;
            }
            char v27 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v26);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v26 + 1;
            v25 |= (unint64_t)(v27 & 0x7F) << v23;
            if ((v27 & 0x80) == 0) {
              goto LABEL_92;
            }
            v23 += 7;
            BOOL v20 = v24++ >= 9;
            if (v20)
            {
              LODWORD(v25) = 0;
              goto LABEL_94;
            }
          }

          *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_92:
          if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
            LODWORD(v25) = 0;
          }
LABEL_94:
          *(_DWORD *)(a1 + v5[677]) = v25;
          continue;
        case 2u:
          char v35 = 0;
          unsigned int v36 = 0;
          uint64_t v37 = 0LL;
          *(_WORD *)(a1 + v4[676]) |= 0x100u;
          while (2)
          {
            unint64_t v38 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            if (v38 == -1LL || v38 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
            {
              *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            }

            else
            {
              char v39 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v38);
              *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v38 + 1;
              v37 |= (unint64_t)(v39 & 0x7F) << v35;
              if (v39 < 0)
              {
                v35 += 7;
                BOOL v20 = v36++ >= 9;
                if (v20)
                {
                  uint64_t v37 = 0LL;
                  goto LABEL_98;
                }

                continue;
              }
            }

            break;
          }

          if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
            uint64_t v37 = 0LL;
          }
LABEL_98:
          BOOL v80 = v37 != 0;
          uint64_t v81 = v6[678];
          goto LABEL_131;
        case 3u:
          char v40 = 0;
          unsigned int v41 = 0;
          uint64_t v42 = 0LL;
          *(_WORD *)(a1 + v4[676]) |= 0x40u;
          while (2)
          {
            unint64_t v43 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            if (v43 == -1LL || v43 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
            {
              *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            }

            else
            {
              char v44 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v43);
              *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v43 + 1;
              v42 |= (unint64_t)(v44 & 0x7F) << v40;
              if (v44 < 0)
              {
                v40 += 7;
                BOOL v20 = v41++ >= 9;
                if (v20)
                {
                  uint64_t v42 = 0LL;
                  goto LABEL_102;
                }

                continue;
              }
            }

            break;
          }

          if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
            uint64_t v42 = 0LL;
          }
LABEL_102:
          BOOL v80 = v42 != 0;
          uint64_t v81 = v7[679];
          goto LABEL_131;
        case 4u:
          char v45 = 0;
          unsigned int v46 = 0;
          uint64_t v47 = 0LL;
          *(_WORD *)(a1 + v4[676]) |= 0x10u;
          while (2)
          {
            unint64_t v48 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            if (v48 == -1LL || v48 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
            {
              *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            }

            else
            {
              char v49 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v48);
              *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v48 + 1;
              v47 |= (unint64_t)(v49 & 0x7F) << v45;
              if (v49 < 0)
              {
                v45 += 7;
                BOOL v20 = v46++ >= 9;
                if (v20)
                {
                  uint64_t v47 = 0LL;
                  goto LABEL_106;
                }

                continue;
              }
            }

            break;
          }

          if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
            uint64_t v47 = 0LL;
          }
LABEL_106:
          BOOL v80 = v47 != 0;
          uint64_t v81 = v8[680];
          goto LABEL_131;
        case 5u:
          char v50 = 0;
          unsigned int v51 = 0;
          uint64_t v52 = 0LL;
          *(_WORD *)(a1 + v4[676]) |= 2u;
          while (2)
          {
            unint64_t v53 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            if (v53 == -1LL || v53 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
            {
              *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            }

            else
            {
              char v54 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v53);
              *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v53 + 1;
              v52 |= (unint64_t)(v54 & 0x7F) << v50;
              if (v54 < 0)
              {
                v50 += 7;
                BOOL v20 = v51++ >= 9;
                if (v20)
                {
                  uint64_t v52 = 0LL;
                  goto LABEL_110;
                }

                continue;
              }
            }

            break;
          }

          if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
            uint64_t v52 = 0LL;
          }
LABEL_110:
          BOOL v80 = v52 != 0;
          uint64_t v81 = v9[681];
          goto LABEL_131;
        case 6u:
          char v55 = 0;
          unsigned int v56 = 0;
          uint64_t v57 = 0LL;
          *(_WORD *)(a1 + v4[676]) |= 0x200u;
          while (2)
          {
            unint64_t v58 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            if (v58 == -1LL || v58 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
            {
              *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            }

            else
            {
              char v59 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v58);
              *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v58 + 1;
              v57 |= (unint64_t)(v59 & 0x7F) << v55;
              if (v59 < 0)
              {
                v55 += 7;
                BOOL v20 = v56++ >= 9;
                if (v20)
                {
                  uint64_t v57 = 0LL;
                  goto LABEL_114;
                }

                continue;
              }
            }

            break;
          }

          if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
            uint64_t v57 = 0LL;
          }
LABEL_114:
          BOOL v80 = v57 != 0;
          uint64_t v81 = v10[682];
          goto LABEL_131;
        case 7u:
          char v60 = 0;
          unsigned int v61 = 0;
          uint64_t v62 = 0LL;
          *(_WORD *)(a1 + v4[676]) |= 8u;
          while (2)
          {
            unint64_t v63 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            if (v63 == -1LL || v63 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
            {
              *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            }

            else
            {
              char v64 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v63);
              *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v63 + 1;
              v62 |= (unint64_t)(v64 & 0x7F) << v60;
              if (v64 < 0)
              {
                v60 += 7;
                BOOL v20 = v61++ >= 9;
                if (v20)
                {
                  uint64_t v62 = 0LL;
                  goto LABEL_118;
                }

                continue;
              }
            }

            break;
          }

          if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
            uint64_t v62 = 0LL;
          }
LABEL_118:
          BOOL v80 = v62 != 0;
          uint64_t v81 = v11[683];
          goto LABEL_131;
        case 8u:
          char v65 = 0;
          unsigned int v66 = 0;
          uint64_t v67 = 0LL;
          *(_WORD *)(a1 + v4[676]) |= 4u;
          while (2)
          {
            unint64_t v68 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            if (v68 == -1LL || v68 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
            {
              *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            }

            else
            {
              char v69 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v68);
              *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v68 + 1;
              v67 |= (unint64_t)(v69 & 0x7F) << v65;
              if (v69 < 0)
              {
                v65 += 7;
                BOOL v20 = v66++ >= 9;
                if (v20)
                {
                  uint64_t v67 = 0LL;
                  goto LABEL_122;
                }

                continue;
              }
            }

            break;
          }

          if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
            uint64_t v67 = 0LL;
          }
LABEL_122:
          BOOL v80 = v67 != 0;
          uint64_t v81 = v12[684];
          goto LABEL_131;
        case 9u:
          char v70 = 0;
          unsigned int v71 = 0;
          uint64_t v72 = 0LL;
          *(_WORD *)(a1 + v4[676]) |= 0x20u;
          while (2)
          {
            unint64_t v73 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            if (v73 == -1LL || v73 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
            {
              *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            }

            else
            {
              char v74 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v73);
              *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v73 + 1;
              v72 |= (unint64_t)(v74 & 0x7F) << v70;
              if (v74 < 0)
              {
                v70 += 7;
                BOOL v20 = v71++ >= 9;
                if (v20)
                {
                  uint64_t v72 = 0LL;
                  goto LABEL_126;
                }

                continue;
              }
            }

            break;
          }

          if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
            uint64_t v72 = 0LL;
          }
LABEL_126:
          BOOL v80 = v72 != 0;
          uint64_t v81 = v13[685];
          goto LABEL_131;
        case 0xAu:
          char v75 = 0;
          unsigned int v76 = 0;
          uint64_t v77 = 0LL;
          *(_WORD *)(a1 + v4[676]) |= 0x80u;
          break;
        default:
          uint64_t v28 = v5;
          uint64_t v29 = v6;
          char v30 = v4;
          unsigned int v31 = v7;
          unint64_t v32 = v8;
          uint64_t v33 = a1;
          uint64_t result = PBReaderSkipValueWithTag(a2);
          uint64_t v9 = &OBJC_IVAR___CSDMessagingConversationParticipantDidJoinContext__isUPlusNDowngradeAvailable;
          a1 = v33;
          id v10 = &OBJC_IVAR___CSDMessagingConversationParticipantDidJoinContext__isUPlusNDowngradeAvailable;
          __int16 v8 = v32;
          uint64_t v11 = &OBJC_IVAR___CSDMessagingConversationParticipantDidJoinContext__isUPlusNDowngradeAvailable;
          id v7 = v31;
          uint64_t v12 = &OBJC_IVAR___CSDMessagingConversationParticipantDidJoinContext__isUPlusNDowngradeAvailable;
          uint64_t v4 = v30;
          uint64_t v14 = &OBJC_IVAR___CSDMessagingConversationParticipantDidJoinContext__isUPlusNDowngradeAvailable;
          int v6 = v29;
          int v13 = &OBJC_IVAR___CSDMessagingConversationParticipantDidJoinContext__isUPlusNDowngradeAvailable;
          uint64_t v5 = v28;
          if (!(_DWORD)result) {
            return result;
          }
          continue;
      }

      while (1)
      {
        unint64_t v78 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v78 == -1LL || v78 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v79 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v78);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v78 + 1;
        v77 |= (unint64_t)(v79 & 0x7F) << v75;
        if ((v79 & 0x80) == 0) {
          goto LABEL_128;
        }
        v75 += 7;
        BOOL v20 = v76++ >= 9;
        if (v20)
        {
          uint64_t v77 = 0LL;
          goto LABEL_130;
        }
      }

      *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_128:
      if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        uint64_t v77 = 0LL;
      }
LABEL_130:
      BOOL v80 = v77 != 0;
      uint64_t v81 = v14[686];
LABEL_131:
      *(_BYTE *)(a1 + v81) = v80;
    }

    while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length));
  }

  return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}