uint64_t sub_100002E20(uint64_t a1)
{
  +[DownloadDatabaseSchema createSchemaInDatabase:]( &OBJC_CLASS___DownloadDatabaseSchema,  "createSchemaInDatabase:",  *(void *)(a1 + 32));
  +[DownloadDatabaseSchema createFunctionsInDatabase:]( &OBJC_CLASS___DownloadDatabaseSchema,  "createFunctionsInDatabase:",  *(void *)(a1 + 32));
  return 1LL;
}

void sub_1000030D0(uint64_t a1)
{
  v3 = objc_alloc_init(&OBJC_CLASS___NSFileManager);
  v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) stringByDeletingLastPathComponent]);
  -[NSFileManager createDirectoryAtPath:withIntermediateDirectories:attributes:error:]( v3,  "createDirectoryAtPath:withIntermediateDirectories:attributes:error:",  v2,  1LL,  0LL,  0LL);
}

void sub_100003134(id a1, SSSQLiteDatabase *a2)
{
}

void sub_100003144(uint64_t a1)
{
  id v1 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) object]);
  [v1 _notifyProgressTickTimer];
}

void sub_100003260(uint64_t a1)
{
  id v1 = objc_alloc_init((Class)objc_opt_class(*(void *)(a1 + 32)));
  v2 = (void *)qword_1003A3198;
  qword_1003A3198 = (uint64_t)v1;
}

void sub_10000333C(uint64_t a1)
{
  id v1 = (id)objc_claimAutoreleasedReturnValue(+[Daemon daemon](&OBJC_CLASS___Daemon, "daemon"));
  [v1 releaseKeepAliveAssertion:@"com.apple.itunesstored.DownloadsDatabase"];
}

void sub_100003430(uint64_t a1)
{
  id v1 = (id)objc_claimAutoreleasedReturnValue(+[Daemon daemon](&OBJC_CLASS___Daemon, "daemon"));
  [v1 releaseKeepAliveAssertion:@"com.apple.itunesstored.DownloadsDatabase"];
}

id sub_1000034F8(uint64_t a1)
{
  return [*(id *)(a1 + 32) modifyUsingPurchaseTransactionBlock:*(void *)(a1 + 40)];
}

id sub_100003594(uint64_t a1)
{
  return [*(id *)(a1 + 32) modifyUsingTransactionBlock:*(void *)(a1 + 40)];
}

id sub_100003630(uint64_t a1)
{
  return [*(id *)(a1 + 32) modifyExternalUsingTransactionBlock:*(void *)(a1 + 40)];
}

void sub_1000037B8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

uint64_t sub_1000037D4(uint64_t a1)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16LL))();
  *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = result;
  return result;
}

uint64_t sub_1000039D8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _newSessionDescription];
  v3 = -[DownloadsSession initWithSessionDescriptor:]( objc_alloc(&OBJC_CLASS___DownloadsSession),  "initWithSessionDescriptor:",  v2);
  (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();

  return 1LL;
}

id sub_100003AB4(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 40) updateAfterSessionsChanged:*(void *)(a1 + 40)];
}

id sub_1000040B4(uint64_t a1)
{
  return (id)+[RestoreBackupOperation cancelApplicationRestoresWithBundleIDs:]( &OBJC_CLASS___RestoreBackupOperation,  "cancelApplicationRestoresWithBundleIDs:",  *(void *)(a1 + 32));
}

void sub_100004220( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

BOOL sub_10000423C(uint64_t a1)
{
  *(_BYTE *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL) = (*(uint64_t (**)(void))(*(void *)(a1 + 48) + 16LL))();
  if (!*(_BYTE *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL)) {
    return 0LL;
  }
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) changeset]);
  else {
    v3 = 0LL;
  }
  v5 = (void *)objc_claimAutoreleasedReturnValue([v2 policyChangedDownloadIDs]);
  if ([v5 count])
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v6) {
      v6 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v7 = [v6 shouldLog];
    else {
      LODWORD(v_Block_object_dispose(va, 8) = v7;
    }
    v9 = (os_log_s *)objc_claimAutoreleasedReturnValue([v6 OSLogObject]);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO)) {
      uint64_t v8 = v8;
    }
    else {
      v8 &= 2u;
    }
    if ((_DWORD)v8)
    {
      v10 = (void *)objc_opt_class(*(void *)(a1 + 40));
      id v11 = v10;
      int v33 = 138412546;
      v34 = v10;
      __int16 v35 = 2048;
      id v36 = [v5 count];
      v12 = (void *)_os_log_send_and_compose_impl( v8,  0LL,  0LL,  0LL,  &_mh_execute_header,  v9,  1LL,  "%@: Reloading for %ld download policy change(s)",  &v33,  22);

      if (!v12)
      {
LABEL_19:

        v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 40) + 40) restartDownloadsWithIdentifiers:v5]);
        id v14 = [v13 mutableCopy];

        goto LABEL_21;
      }

      v9 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v12,  4LL));
      free(v12);
      SSFileLog(v6, @"%@");
    }

    goto LABEL_19;
  }

  id v14 = 0LL;
LABEL_21:
  v15 = (void *)objc_claimAutoreleasedReturnValue([v2 pipelineRestarts]);
  id v16 = [v15 mutableCopy];

  if ([v14 count]) {
    [v16 minusOrderedSet:v14];
  }
  if (![v16 count]) {
    goto LABEL_37;
  }
  v17 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v17) {
    v17 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v18 = [v17 shouldLog];
  else {
    unsigned int v19 = v18;
  }
  v20 = (os_log_s *)objc_claimAutoreleasedReturnValue([v17 OSLogObject]);
  if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v21 = v19;
  }
  else {
    uint64_t v21 = v19 & 2;
  }
  if (!(_DWORD)v21) {
    goto LABEL_35;
  }
  v22 = v2;
  v23 = v5;
  v24 = v3;
  v25 = (void *)objc_opt_class(*(void *)(a1 + 40));
  id v32 = v25;
  id v26 = [v16 count];
  int v33 = 138412546;
  v34 = v25;
  v3 = v24;
  v5 = v23;
  id v2 = v22;
  __int16 v35 = 2048;
  id v36 = v26;
  LODWORD(v31) = 22;
  v27 = (void *)_os_log_send_and_compose_impl( v21,  0LL,  0LL,  0LL,  &_mh_execute_header,  v20,  0LL,  "%@: Restarting %ld download(s) by request",  &v33,  v31);

  if (v27)
  {
    v20 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v27,  4LL));
    free(v27);
    SSFileLog(v17, @"%@");
LABEL_35:
  }

  v28 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 40) + 40) restartDownloadsWithIdentifiers:v16]);
  [v14 unionOrderedSet:v28];

LABEL_37:
  if ([v14 count] || objc_msgSend(v3, "count"))
  {
    v29 = (void *)objc_claimAutoreleasedReturnValue([v2 pipelineAdditions]);
    id v30 = [v29 mutableCopy];

    if ([v14 count]) {
      [v30 minusOrderedSet:v14];
    }
    if ([v3 count]) {
      [v30 minusOrderedSet:v3];
    }
  }

  else
  {
    id v30 = (id)objc_claimAutoreleasedReturnValue([v2 pipelineAdditions]);
  }

  if ([v30 count]) {
    [*(id *)(*(void *)(a1 + 40) + 40) addDownloadsWithIdentifiers:v30];
  }

  return *(_BYTE *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL) != 0;
}

id *sub_100004BE4(id *result, uint64_t a2, void *a3)
{
  if (*a3) {
    return (id *)objc_msgSend(result[4], "addObject:");
  }
  return result;
}

LABEL_37:
        if (objc_msgSend(objc_msgSend(v20, "objectForKey:", @"is_restore"), "BOOLValue"))
        {
          -[DownloadsChangeset addDownloadChangeTypes:](self->super._changeset, "addDownloadChangeTypes:", 32LL);
          -[DownloadsChangeset addRestorableDownloadID:](self->super._changeset, "addRestorableDownloadID:", v26);
        }

        -[DownloadsChangeset unionChangeset:](self->super._changeset, "unionChangeset:", v25);

        objc_autoreleasePoolPop(context);
        v12 = (char *)v12 + 1;
        v10 = v77;
      }

      while (v81 != v12);
      v40 = [obj countByEnumeratingWithState:&v85 objects:v95 count:16];
      v9 = v82;
      v81 = v40;
    }

    while (v40);
  }

        v29 = [v22 objectForKey:@"item-id"];
        if (v29
          && (v24 = -[NSMutableDictionary objectForKey:](v57, "objectForKey:", v29),
              [v24 setState:&off_10036D608],
              v24))
        {
LABEL_39:
          [v24 mergeValuesFromResponse:v22];
          -[NSMutableSet removeObject:](v61, "removeObject:", v24);
          -[NSMutableArray addObject:](v19, "addObject:", v24);
        }

        else
        {
          id v30 = -[MicroPayment initWithEntity:insertIntoManagedObjectContext:]( objc_alloc(&OBJC_CLASS___MicroPayment),  "initWithEntity:insertIntoManagedObjectContext:",  v52,  v55);
          -[MicroPayment mergeValuesFromResponse:](v30, "mergeValuesFromResponse:", v22);
          -[MicroPayment setClient:](v30, "setClient:", self);
          if (v51 == (id)1)
          {
            uint64_t v31 = 6LL;
          }

          else if (-[MicroPayment originalTransactionIdentifier](v30, "originalTransactionIdentifier"))
          {
            uint64_t v31 = 7LL;
          }

          else
          {
            uint64_t v31 = 2LL;
          }

          -[MicroPayment setState:]( v30,  "setState:",  +[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", v31));
          id v32 = -[MicroPayment transactionIdentifier](v30, "transactionIdentifier");
          if (v32) {
            -[NSMutableDictionary setObject:forKey:](v60, "setObject:forKey:", v30, v32);
          }
          else {
            -[NSMutableArray addObject:](v10, "addObject:", v30);
          }
          -[NSMutableArray addObject:](v53, "addObject:", v30);
          -[NSMutableArray addObject:](v19, "addObject:", v30);
        }
      }

      v20 = [obj countByEnumeratingWithState:&v74 objects:v85 count:16];
    }

    while (v20);
  }

  v68 = 0u;
  v69 = 0u;
  v66 = 0u;
  v67 = 0u;
  int v33 = -[NSMutableSet countByEnumeratingWithState:objects:count:]( v61,  "countByEnumeratingWithState:objects:count:",  &v66,  v83,  16LL);
  if (v33)
  {
    v34 = v33;
    __int16 v35 = *(void *)v67;
    do
    {
      for (k = 0LL; k != v34; k = (char *)k + 1)
      {
        if (*(void *)v67 != v35) {
          objc_enumerationMutation(v61);
        }
        v37 = *(void **)(*((void *)&v66 + 1) + 8LL * (void)k);
        v38 = objc_msgSend(objc_msgSend(v37, "state"), "integerValue");
        v39 = v38 == (id)5 || v38 == (id)8;
        if (!v39 && [v37 transactionIdentifier])
        {
          v40 = [v37 downloads];
          v62 = 0u;
          v63 = 0u;
          v64 = 0u;
          v65 = 0u;
          v41 = [v40 countByEnumeratingWithState:&v62 objects:v82 count:16];
          if (v41)
          {
            v42 = v41;
            v43 = *(void *)v63;
            do
            {
              for (m = 0LL; m != v42; m = (char *)m + 1)
              {
                if (*(void *)v63 != v43) {
                  objc_enumerationMutation(v40);
                }
                v45 = [*(id *)(*((void *)&v62 + 1) + 8 * (void)m) downloadID];
                if (v45) {
                  -[NSMutableOrderedSet addObject:](v6, "addObject:", v45);
                }
              }

              v42 = [v40 countByEnumeratingWithState:&v62 objects:v82 count:16];
            }

            while (v42);
          }

          -[NSMutableArray addObject:](v50, "addObject:", v37);
          [v55 deleteObject:v37];
          unsigned int v19 = v58;
        }
      }

      v34 = -[NSMutableSet countByEnumeratingWithState:objects:count:]( v61,  "countByEnumeratingWithState:objects:count:",  &v66,  v83,  16LL);
    }

    while (v34);
  }

  if ((sub_10003E244(v55) & 1) != 0)
  {
    v46 = objc_alloc_init(&OBJC_CLASS___MicroPaymentClientMergeResults);
    v47 = v53;
    -[MicroPaymentClientMergeResults setAddedPayments:](v46, "setAddedPayments:", v53);
    -[MicroPaymentClientMergeResults setChangedPayments:](v46, "setChangedPayments:", v19);
    -[MicroPaymentClientMergeResults setRemovedDownloadIDs:](v46, "setRemovedDownloadIDs:", v6);
    v48 = v50;
    -[MicroPaymentClientMergeResults setRemovedPayments:](v46, "setRemovedPayments:", v50);
  }

  else
  {
    [v55 rollback];
    v46 = 0LL;
    v48 = v50;
    v47 = v53;
  }

  return v46;
}

    objc_autoreleasePoolPop(v8);
  }

  return v5;
}

  +[ISLoadURLBagOperation decrementNetworkCounterForBagContext:]( &OBJC_CLASS___ISLoadURLBagOperation,  "decrementNetworkCounterForBagContext:",  +[SSURLBagContext contextWithBagType:](&OBJC_CLASS___SSURLBagContext, "contextWithBagType:", 0LL));
  sub_10003E244(v3);
  +[NSThread endManagedContextSession](&OBJC_CLASS___NSThread, "endManagedContextSession");
  id v32 = *(void *)(a1 + 32);
  int v33 = *(dispatch_queue_s **)(v32 + 40);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1000FBBC8;
  block[3] = &unk_10034AE98;
  block[4] = v32;
  dispatch_async(v33, block);
}

  unsigned int v19 = -[NSMutableArray count](v13, "count");
  v20 = v4->_downloadPolicy;
  if (v19)
  {
    -[SSDownloadPolicy setPolicyRules:](v20, "setPolicyRules:", v13);
  }

  else if (!-[SSDownloadPolicy downloadKind](v20, "downloadKind"))
  {

    v4->_downloadPolicy = 0LL;
  }

  return v4;
}

LABEL_69:
  v61 = [v9 count];
  v62 = [obj count];
  -[DownloadsChangeset addDownloadChangeTypes:](self->super._changeset, "addDownloadChangeTypes:", 1LL);
  if (v61 != v62)
  {
    v63 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v63) {
      v63 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    v64 = objc_msgSend(v63, "shouldLog", v73);
    else {
      LODWORD(v65) = v64;
    }
    v66 = (os_log_s *)[v63 OSLogObject];
    if (os_log_type_enabled(v66, OS_LOG_TYPE_ERROR)) {
      v65 = v65;
    }
    else {
      v65 &= 2u;
    }
    if ((_DWORD)v65)
    {
      v67 = objc_opt_class(self);
      v68 = [obj count];
      v69 = [v9 count];
      v89 = 138543874;
      v90 = v67;
      v91 = 2048;
      v92 = v68;
      v93 = 2048;
      v94 = v69;
      LODWORD(v74) = 32;
      v70 = _os_log_send_and_compose_impl( v65,  0LL,  0LL,  0LL,  &_mh_execute_header,  v66,  16LL,  "%{public}@: Download import failed (expected %lu, imported %lu)",  &v89,  v74);
      if (v70)
      {
        v71 = (void *)v70;
        +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v70, 4LL);
        free(v71);
        SSFileLog(v63, @"%@");
      }
    }

    return 0LL;
  }

  return v9;
}

LABEL_8:
  return v13;
}

  id v11 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  if (!v11) {
    id v11 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  v12 = [v11 shouldLog];
  else {
    LODWORD(v13) = v12;
  }
  id v14 = (os_log_s *)[v11 OSLogObject];
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT)) {
    v13 = v13;
  }
  else {
    v13 &= 2u;
  }
  if ((_DWORD)v13)
  {
    unsigned int v19 = 138412546;
    v20 = objc_opt_class(self);
    uint64_t v21 = 2112;
    v22 = v6;
    v15 = _os_log_send_and_compose_impl( v13,  0LL,  0LL,  0LL,  &_mh_execute_header,  v14,  0LL,  "%@: Could not find app for identifier: %@",  &v19,  22);
    if (v15)
    {
      id v16 = (void *)v15;
      +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v15, 4LL);
      free(v16);
      SSFileLog(v11, @"%@");
    }
  }

  v17 = sub_100146868();
  v10 = (void *)ISErrorWithDomain(v17, 1LL, 0LL, 0LL);

  v5 = 0LL;
  if (a3)
  {
LABEL_20:
    if (!v5) {
      *a3 = v10;
    }
  }

  return v5;
}

    v12 = (void *)objc_claimAutoreleasedReturnValue(+[SSAccountStore defaultStore](&OBJC_CLASS___SSAccountStore, "defaultStore"));
    v13 = (void *)objc_claimAutoreleasedReturnValue([v12 activeAccount]);

    v5 = (EnableAllAutomaticDownloadKindsOperation *)[*(id *)(a1 + 40) _newOperationByCommitingAutomaticDownloadKinds:v8 account:v13];
    if (v5)
    {
      id v14 = -[XPCClient initWithInputConnection:]( objc_alloc(&OBJC_CLASS___XPCClient),  "initWithInputConnection:",  *(void *)(a1 + 48));
      v15 = (void *)objc_claimAutoreleasedReturnValue(-[XPCClient clientIdentifierHeader](v14, "clientIdentifierHeader"));
      -[EnableAllAutomaticDownloadKindsOperation setClientIdentifierHeader:](v5, "setClientIdentifierHeader:", v15);

      id v16 = v5;
    }

    if (v5) {
      goto LABEL_3;
    }
LABEL_11:
    reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 32));
    xpc_dictionary_set_BOOL(reply, "0", 1);
    xpc_connection_send_message(*(xpc_connection_t *)(a1 + 48), reply);

    goto LABEL_12;
  }

  v5 = objc_alloc_init(&OBJC_CLASS___EnableAllAutomaticDownloadKindsOperation);
  if (!v5) {
    goto LABEL_11;
  }
LABEL_3:
  objc_initWeak(&location, v5);
  unsigned int v19 = _NSConcreteStackBlock;
  v20 = 3221225472LL;
  uint64_t v21 = sub_10008D7E0;
  v22 = &unk_10034CE90;
  objc_copyWeak(&v25, &location);
  v23 = *(id *)(a1 + 32);
  v24 = *(id *)(a1 + 48);
  -[EnableAllAutomaticDownloadKindsOperation setCompletionBlock:](v5, "setCompletionBlock:", &v19);
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[ISOperationQueue mainQueue](&OBJC_CLASS___ISOperationQueue, "mainQueue", v19, v20, v21, v22));
  [v6 addOperation:v5];

  objc_destroyWeak(&v25);
  objc_destroyWeak(&location);
LABEL_12:
}

  operations = self->_operations;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472LL;
  v17[2] = sub_1000C9300;
  v17[3] = &unk_10034DA48;
  v17[4] = v6;
  id v14 = (char *)-[NSMutableArray indexOfObjectWithOptions:passingTest:]( operations,  "indexOfObjectWithOptions:passingTest:",  2LL,  v17);
  else {
    -[NSMutableArray insertObject:atIndex:](self->_operations, "insertObject:atIndex:", v4, v14 + 1);
  }
  -[NSLock unlock](self->_lock, "unlock");
  dispatchQueue = (dispatch_queue_s *)self->_dispatchQueue;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472LL;
  v16[2] = sub_1000C9340;
  v16[3] = &unk_10034AC30;
  v16[4] = self;
  dispatch_async(dispatchQueue, v16);
}

  else {
    v6 = v5;
  }
  return -[NSBundle localizedStringForKey:value:table:]( +[NSBundle bundleForClass:]( &OBJC_CLASS___NSBundle,  "bundleForClass:",  objc_opt_class(&OBJC_CLASS___ISUserNotification)),  "localizedStringForKey:value:table:",  v6,  &stru_10035EB18,  0LL);
}

  v10 = -[Download valueForProperty:](self, "valueForProperty:", @"kind");
  if (v10)
  {
    id v11 = [a3 objectForKey:@"bundle-identifier"];
    v12 = objc_opt_class(&OBJC_CLASS___NSString);
    if ((objc_opt_isKindOfClass(v11, v12) & 1) != 0) {
      -[Download setValue:forProperty:](self, "setValue:forProperty:", v11, @"bundle_id");
    }
    v13 = [a3 objectForKey:@"bundle-version"];
    id v14 = objc_opt_class(&OBJC_CLASS___NSString);
    if ((objc_opt_isKindOfClass(v13, v14) & 1) != 0) {
      -[Download setValue:forProperty:](self, "setValue:forProperty:", v13, @"bundle_version");
    }
    v15 = [a3 objectForKey:@"has-messages-extension"];
    if ((objc_opt_respondsToSelector(v15, "BOOLValue") & 1) != 0) {
      -[Download setValue:forProperty:](self, "setValue:forProperty:", v15, @"has_messages_extension");
    }
    id v16 = [a3 objectForKey:@"launch-prohibited"];
    if ((objc_opt_respondsToSelector(v16, "BOOLValue") & 1) != 0) {
      -[Download setValue:forProperty:](self, "setValue:forProperty:", v16, @"launch_prohibited");
    }
    v17 = [a3 objectForKey:@"subtitle"];
    unsigned int v18 = objc_opt_class(&OBJC_CLASS___NSString);
    if ((objc_opt_isKindOfClass(v17, v18) & 1) != 0) {
      -[Download setValue:forProperty:](self, "setValue:forProperty:", v17, @"artist_name");
    }
    unsigned int v19 = [a3 objectForKey:@"title"];
    v20 = objc_opt_class(&OBJC_CLASS___NSString);
    if ((objc_opt_isKindOfClass(v19, v20) & 1) != 0) {
      -[Download setValue:forProperty:](self, "setValue:forProperty:", v19, @"title");
    }
    uint64_t v21 = [a3 objectForKey:@"UINewsstandApp"];
    if ((objc_opt_respondsToSelector(v21, "BOOLValue") & 1) != 0 && [v21 BOOLValue]) {
      -[Download setValue:forProperty:]( self,  "setValue:forProperty:",  SSDownloadSoftwareTypeNewsstand,  @"software_type");
    }
    v10 = -[Download valueForProperty:](self, "valueForProperty:", @"title");
    if (v10)
    {
      v22 = -[Download valueForProperty:](self, "valueForProperty:", @"kind");
      if (![v22 isEqualToString:SSDownloadKindSoftwareApplication])
      {
        LOBYTE(v10) = 1;
        return (char)v10;
      }

      LOBYTE(v10) = -[Download valueForProperty:](self, "valueForProperty:", @"bundle_id") != 0LL;
    }
  }

  if (a4 && (v10 & 1) == 0)
  {
    v23 = +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  SSErrorDomain,  402LL,  0LL);
    LOBYTE(v10) = 0;
    *a4 = v23;
  }

  return (char)v10;
}
}

void sub_10000657C(uint64_t a1, uint64_t a2)
{
  v3 = -[NSNumber initWithLongLong:](objc_alloc(&OBJC_CLASS___NSNumber), "initWithLongLong:", a2);
  [*(id *)(a1 + 32) addObject:v3];
}

void sub_100006B24(uint64_t a1, id a2, void *a3)
{
  if (*a3)
  {
    id v5 = objc_msgSend(*(id *)(a1 + 32), "objectForKey:");
    if (v5)
    {
      if ([v5 longLongValue] != a2)
      {
        v6 = -[NSNumber initWithLongLong:](objc_alloc(&OBJC_CLASS___NSNumber), "initWithLongLong:", a2);
        [*(id *)(a1 + 40) addObject:v6];
      }
    }
  }
}

void sub_100006D48( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
}

void sub_100006D68(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = -[DownloadEntity initWithPersistentID:inDatabase:]( objc_alloc(&OBJC_CLASS___DownloadEntity),  "initWithPersistentID:inDatabase:",  a2,  *(void *)(a1 + 32));
  unsigned int v4 = objc_msgSend(*(id *)(a1 + 40), "_resetDownload:withValues:isUserIntiated:");
  if (v4)
  {
    id v5 = -[NSNumber initWithLongLong:](objc_alloc(&OBJC_CLASS___NSNumber), "initWithLongLong:", a2);
    [*(id *)(a1 + 48) addObject:v5];
  }

  uint64_t v6 = *(void *)(*(void *)(a1 + 56) + 8LL);
  if (*(_BYTE *)(v6 + 24)) {
    char v7 = 1;
  }
  else {
    char v7 = v4;
  }
  *(_BYTE *)(v6 + 24) = v7;
}

void sub_1000077B4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
}

void sub_1000077DC(uint64_t a1, uint64_t a2)
{
}

void sub_1000077EC(uint64_t a1)
{
}

id sub_1000077F8(uint64_t a1, uint64_t a2, id *a3, uint64_t a4, _BYTE *a5)
{
  id result = *a3;
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 40LL) = result;
  *a5 = 1;
  return result;
}

void sub_100007D80( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

id sub_100007DA0(uint64_t a1, uint64_t a2, id *a3, uint64_t a4, _BYTE *a5)
{
  id result = *a3;
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 40LL) = result;
  *a5 = 1;
  return result;
}

LABEL_90:
        v4[2](v4, v7, 1LL, 0LL);
        goto LABEL_91;
      }

      v43 = (void *)objc_claimAutoreleasedReturnValue(-[CarrierBundlingEligibilityOperation eligibilityResponse](v37, "eligibilityResponse"));
      v44 = v43;
      v63 = v36;
      if (v36 && [v43 bundlingStatus] == (id)1) {
        v4[2](v4, v7, 1LL, 0LL);
      }
      v45 = (void *)objc_claimAutoreleasedReturnValue(-[CarrierBundlingEligibilityOperation cellularProviderName](v37, "cellularProviderName"));
      [v7 setCellularOperatorName:v45];

      v46 = (void *)objc_claimAutoreleasedReturnValue(-[CarrierBundlingEligibilityOperation phoneNumber](v37, "phoneNumber"));
      [v7 setPhoneNumber:v46];

      v47 = (uint64_t)[v44 bundlingStatus];
      if (v47 == 1)
      {
        if (![v7 accountStatus])
        {
          v47 = 4LL;
LABEL_80:
          [v7 setCarrierBundlingStatus:v47];
          goto LABEL_81;
        }

        if ([v7 carrierBundlingStatus] == (id)4)
        {
LABEL_81:
          v54 = (void *)objc_claimAutoreleasedReturnValue([v44 SMSSessionIdentifier]);
          if (!v54) {
            v54 = (void *)objc_claimAutoreleasedReturnValue([v44 headerEnrichmentSessionIdentifier]);
          }
          [v7 setSessionIdentifier:v54];
          if (v63 && [v44 bundlingStatus] != (id)1) {
            v4[2](v4, v7, 1LL, 0LL);
          }

          id v36 = v63;
          goto LABEL_89;
        }
      }

      v62 = v6;
      v48 = (void *)objc_claimAutoreleasedReturnValue([v42 domain]);
      if ([v48 isEqualToString:SSErrorDomain])
      {
        v61 = v34;
        v49 = [v42 code];

        id v26 = v49 == (id)124;
        v34 = v61;
        if (v26) {
          v47 = 2LL;
        }
      }

      else
      {
      }

      uint64_t v6 = v62;
      goto LABEL_80;
    }

    v34 = v14;
    __int16 v35 = !v14;
LABEL_43:
    v4[2](v4, v7, v35, 0LL);
    id v36 = 0;
    goto LABEL_44;
  }

        if (cf)
        {
          v97 = SecKeyCopyPublicKey((SecKeyRef)cf);
          if (v97)
          {
            v34 = v97;

            goto LABEL_95;
          }

          v128 = SSError(SSErrorDomain, 147LL, 0LL, 0LL);
          v39 = (__CFError *)objc_claimAutoreleasedReturnValue(v128);
          v27 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
          if (!v27) {
            v27 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
          }
          v129 = objc_msgSend(v27, "shouldLog", v141);
          else {
            v130 = v129;
          }
          v80 = (os_log_s *)objc_claimAutoreleasedReturnValue([v27 OSLogObject]);
          if (os_log_type_enabled(v80, OS_LOG_TYPE_DEFAULT)) {
            v131 = v130;
          }
          else {
            v131 = v130 & 2;
          }
          if (!(_DWORD)v131) {
            goto LABEL_154;
          }
          v132 = (void *)objc_opt_class(self);
          v115 = v132;
          v133 = SSHashIfNeeded(v154);
          v117 = (void *)objc_claimAutoreleasedReturnValue(v133);
          v118 = (__CFError *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", v155));
          v159 = 138543874;
          v160 = v132;
          v161 = 2112;
          v162 = v117;
          v163 = 2114;
          v164 = v118;
          LODWORD(v144) = 32;
          v119 = _os_log_send_and_compose_impl( v131,  0LL,  0LL,  0LL,  &_mh_execute_header,  v80,  0LL,  "%{public}@: Public key copy as X509 fallback failed with no public key for DSID: %@, purpose: %{public}@",  &v159,  v144);
        }

        else
        {
          v110 = SSError(SSErrorDomain, 147LL, 0LL, 0LL);
          v39 = (__CFError *)objc_claimAutoreleasedReturnValue(v110);
          v27 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
          if (!v27) {
            v27 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
          }
          v111 = objc_msgSend(v27, "shouldLog", v141);
          else {
            v112 = v111;
          }
          v80 = (os_log_s *)objc_claimAutoreleasedReturnValue([v27 OSLogObject]);
          if (os_log_type_enabled(v80, OS_LOG_TYPE_DEFAULT)) {
            v113 = v112;
          }
          else {
            v113 = v112 & 2;
          }
          if (!(_DWORD)v113) {
            goto LABEL_154;
          }
          v114 = (void *)objc_opt_class(self);
          v115 = v114;
          v116 = SSHashIfNeeded(v154);
          v117 = (void *)objc_claimAutoreleasedReturnValue(v116);
          v118 = (__CFError *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", v155));
          v159 = 138543874;
          v160 = v114;
          v161 = 2112;
          v162 = v117;
          v163 = 2114;
          v164 = v118;
          LODWORD(v144) = 32;
          v119 = _os_log_send_and_compose_impl( v113,  0LL,  0LL,  0LL,  &_mh_execute_header,  v80,  0LL,  "%{public}@: Key copy as X509 fallback failed with bad query for DSID: %@, purpose: %{public}@",  &v159,  v144);
        }

        v134 = (void *)v119;

        if (v134)
        {
          v80 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v134,  4LL));
          v88 = v134;
          goto LABEL_153;
        }

LABEL_41:
  v4[2](v4, 0LL, 1LL, v8);
  int v33 = 0LL;
LABEL_101:
  -[SubscriptionStatusOperation setError:](self, "setError:", v8, v60);
  -[SubscriptionStatusOperation setStatusBlock:](self, "setStatusBlock:", 0LL);
  -[SubscriptionStatusOperation setSuccess:](self, "setSuccess:", v33);
}

LABEL_42:
  v9 = (NSMutableDictionary *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig", v32));
  if (!v9) {
    v9 = (NSMutableDictionary *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  v27 = -[NSMutableDictionary shouldLog](v9, "shouldLog");
  else {
    LODWORD(v2_Block_object_dispose(va, 8) = v27;
  }
  id v14 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[NSMutableDictionary OSLogObject](v9, "OSLogObject"));
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT)) {
    v28 = v28;
  }
  else {
    v28 &= 2u;
  }
  if (!(_DWORD)v28) {
    goto LABEL_53;
  }
  v29 = (void *)objc_opt_class(self);
  id v36 = 138412290;
  v37 = v29;
  id v30 = v29;
  LODWORD(v33) = 12;
  v15 = (void *)_os_log_send_and_compose_impl( v28,  0LL,  0LL,  0LL,  &_mh_execute_header,  v14,  0LL,  "%@: Could not generate sync request body",  &v36,  v33);

  if (v15)
  {
    id v14 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v15,  4LL));
    free(v15);
    SSFileLog(v9, @"%@");
LABEL_53:
    v15 = 0LL;
LABEL_54:
  }

  return v15;
}

LABEL_42:
  if (*((_BYTE *)v85 + 24))
  {
    v40 = (void *)objc_claimAutoreleasedReturnValue([v5 authenticationContext]);
    v41 = [v40 mutableCopy];

    if (v75[5])
    {
      objc_msgSend(v41, "setPasswordEquivalentToken:");
      [v5 setAuthenticationContext:v41];
    }
  }

  if (!v15 || !*((_BYTE *)v81 + 24)) {
    goto LABEL_48;
  }
LABEL_49:
  v44 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "selectedButton", v61));
  if (!*((_BYTE *)v85 + 24))
  {
    v48 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v48) {
      v48 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    v49 = [v48 shouldLog];
    v50 = [v48 shouldLogToDisk];
    v51 = (os_log_s *)objc_claimAutoreleasedReturnValue([v48 OSLogObject]);
    v52 = v51;
    if (v50) {
      v49 |= 2u;
    }
    if (os_log_type_enabled(v51, OS_LOG_TYPE_DEFAULT)) {
      v53 = v49;
    }
    else {
      v53 = v49 & 2;
    }
    if ((_DWORD)v53)
    {
      v54 = (void *)objc_opt_class(self);
      v55 = v89[5];
      v94 = 138543618;
      v95 = v54;
      v96 = 2114;
      v97 = v55;
      v56 = v54;
      LODWORD(v62) = 22;
      v57 = (void *)_os_log_send_and_compose_impl( v53,  0LL,  0LL,  0LL,  &_mh_execute_header,  v52,  0LL,  "%{public}@: Server-driven authentication failed with error: %{public}@",  &v94,  v62);

      if (!v57)
      {
LABEL_62:

        v47 = (void *)objc_claimAutoreleasedReturnValue([v5 dialog]);
        [v44 performDefaultActionForDialog:v47];
        goto LABEL_63;
      }

      v52 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v57,  4LL));
      free(v57);
      SSFileLog(v48, @"%@");
    }

    goto LABEL_62;
  }

  v45 = (void *)objc_claimAutoreleasedReturnValue([v5 dialog]);
  -[PurchaseProtocolDataProvider _performActionsForButton:withDialog:]( self,  "_performActionsForButton:withDialog:",  v44,  v45);

  -[PurchaseProtocolDataProvider setAuthenticatedAccountCredentialSource:]( self,  "setAuthenticatedAccountCredentialSource:",  [v5 authenticatedAccountCredentialSource]);
  v46 = (void *)objc_claimAutoreleasedReturnValue([v5 authenticatedAccountDSID]);
  -[PurchaseProtocolDataProvider setAuthenticatedAccountDSID:](self, "setAuthenticatedAccountDSID:", v46);

  v47 = (void *)objc_claimAutoreleasedReturnValue([v5 redirectURL]);
  -[PurchaseProtocolDataProvider setRedirectURL:](self, "setRedirectURL:", v47);
LABEL_63:

  v58 = *((unsigned __int8 *)v85 + 24);
  if (a4 && !*((_BYTE *)v85 + 24))
  {
    *a4 = v89[5];
    v58 = *((unsigned __int8 *)v85 + 24);
  }

  v59 = v58 != 0;

  _Block_object_dispose(&v74, 8);
  _Block_object_dispose(&v80, 8);
  _Block_object_dispose(&v84, 8);
  _Block_object_dispose(&v88, 8);

  return v59;
}

LABEL_42:
  if (*((_BYTE *)v82 + 24))
  {
    v39 = (void *)objc_claimAutoreleasedReturnValue([v5 authenticationContext]);
    v40 = [v39 mutableCopy];

    if (v72[5])
    {
      objc_msgSend(v40, "setPasswordEquivalentToken:");
      [v5 setAuthenticationContext:v40];
    }
  }

  if (v14 && *((_BYTE *)v78 + 24))
  {
    if (!*((_BYTE *)v82 + 24)) {
      goto LABEL_49;
    }
LABEL_61:
    -[RedeemCodesProtocolDataProvider setAuthenticatedAccountCredentialSource:]( self,  "setAuthenticatedAccountCredentialSource:",  objc_msgSend(v5, "authenticatedAccountCredentialSource", v58));
    v53 = (void *)objc_claimAutoreleasedReturnValue([v5 authenticatedAccountDSID]);
    -[RedeemCodesProtocolDataProvider setAuthenticatedAccountDSID:](self, "setAuthenticatedAccountDSID:", v53);

    v41 = (void *)objc_claimAutoreleasedReturnValue([v5 redirectURL]);
    -[RedeemCodesProtocolDataProvider setRedirectURL:](self, "setRedirectURL:", v41);
    goto LABEL_62;
  }

    v117 = v13;
    if (ISErrorIsEqual(*(void *)(a1 + 48), @"CoreMediaErrorDomain", -17760LL)
      && [*(id *)(a1 + 32) _isPodcast:v13])
    {
      v42 = (void *)objc_claimAutoreleasedReturnValue(-[DownloadEntity valueForProperty:](v13, "valueForProperty:", @"policy_id"));
      v43 = [v42 longLongValue];

      v44 = (void *)objc_claimAutoreleasedReturnValue([v3 policyManager]);
      v45 = (void *)objc_claimAutoreleasedReturnValue([v44 downloadPolicyForID:v43]);

      v46 = (void *)objc_opt_new(&OBJC_CLASS___SSDownloadPolicyRule);
      [v46 addNetworkType:1000];
      v118 = v45;
      [v45 setPolicyRule:v46];
      v47 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
      if (!v47) {
        v47 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      v48 = [v47 shouldLog];
      else {
        v49 = v48;
      }
      v50 = (os_log_s *)objc_claimAutoreleasedReturnValue([v47 OSLogObject]);
      if (os_log_type_enabled(v50, OS_LOG_TYPE_DEFAULT)) {
        v51 = v49;
      }
      else {
        v51 = v49 & 2;
      }
      if ((_DWORD)v51)
      {
        v52 = [*(id *)(a1 + 40) taskIdentifier];
        v121 = 134218240;
        v122 = v6;
        v123 = 2048;
        v124 = v52;
        v53 = (void *)_os_log_send_and_compose_impl( v51,  0LL,  0LL,  0LL,  &_mh_execute_header,  v50,  0LL,  "[Download]: Restarting podcast download %lld with a wifi only policy after task cancelled becaus e the file was too large to download over cellular: %lu",  &v121,  22);

        if (v53)
        {
          v54 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v53,  4LL));
          free(v53);
          v111 = v54;
          SSFileLog(v47, @"%@");
        }
      }

      else
      {
      }

      [v3 retryDownloadWithIdentifier:v6];
      v13 = v117;
      goto LABEL_111;
    }

    v55 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) ITunesStoreCancelError]);
    v56 = v55;
    if (!v55) {
      v56 = *(void **)(a1 + 48);
    }
    v119 = v56;

    v57 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v57) {
      v57 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    LODWORD(v5_Block_object_dispose(va, 8) = [v57 shouldLog];
    v59 = (os_log_s *)objc_claimAutoreleasedReturnValue([v57 OSLogObject]);
    if (os_log_type_enabled(v59, OS_LOG_TYPE_DEFAULT)) {
      v58 = v58;
    }
    else {
      v58 &= 2u;
    }
    if ((_DWORD)v58)
    {
      v60 = [*(id *)(a1 + 40) taskIdentifier];
      v121 = 134218498;
      v122 = v60;
      v123 = 2048;
      v124 = v6;
      v125 = 2112;
      v126 = v119;
      v61 = (void *)_os_log_send_and_compose_impl( v58,  0LL,  0LL,  0LL,  &_mh_execute_header,  v59,  0LL,  "[Download]: Download task failed: %lu for download: %lld with error: %@",  &v121,  32);

      if (!v61)
      {
LABEL_67:

        v17 = v119;
        if (sub_100100EE4(v119))
        {
          v62 = (void *)objc_claimAutoreleasedReturnValue( -[DownloadAssetEntity valueForProperty:]( v10,  "valueForProperty:",  @"is_local_cache_server"));
          v63 = [v62 BOOLValue];

          v17 = v119;
          if (v63)
          {
            v64 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
            if (!v64) {
              v64 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
            }
            v65 = objc_msgSend(v64, "shouldLog", v111);
            else {
              v66 = v65;
            }
            v67 = (os_log_s *)objc_claimAutoreleasedReturnValue([v64 OSLogObject]);
            if (os_log_type_enabled(v67, OS_LOG_TYPE_DEFAULT)) {
              v68 = v66;
            }
            else {
              v68 = v66 & 2;
            }
            if ((_DWORD)v68)
            {
              v69 = [*(id *)(a1 + 40) taskIdentifier];
              v121 = 134218240;
              v122 = v69;
              v123 = 2048;
              v124 = v6;
              LODWORD(v113) = 22;
              v70 = (void *)_os_log_send_and_compose_impl( v68,  0LL,  0LL,  0LL,  &_mh_execute_header,  v67,  0LL,  "[Download]: task: %lu, for download: %lld, after local cache failure",  &v121,  v113);

              if (!v70)
              {
LABEL_81:

                v71 = objc_claimAutoreleasedReturnValue( +[SSSQLiteComparisonPredicate predicateWithProperty:equalToLongLong:]( &OBJC_CLASS___SSSQLiteComparisonPredicate,  "predicateWithProperty:equalToLongLong:",  @"download_id",  v6));
                v72 = SSSQLEntityPropertyPersistentID;
                v73 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithLongLong:]( &OBJC_CLASS___NSNumber,  "numberWithLongLong:",  -[DownloadAssetEntity persistentID](v10, "persistentID")));
                v74 = objc_claimAutoreleasedReturnValue( +[SSSQLiteComparisonPredicate predicateWithProperty:value:comparisonType:]( &OBJC_CLASS___SSSQLiteComparisonPredicate,  "predicateWithProperty:value:comparisonType:",  v72,  v73,  2LL));

                v75 = (void *)objc_claimAutoreleasedReturnValue( +[SSSQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SSSQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"asset_type",  SSDownloadAssetTypeMedia));
                v114 = (void *)v74;
                v115 = (void *)v71;
                v120[0] = v71;
                v120[1] = v74;
                v120[2] = v75;
                v76 = (void *)objc_claimAutoreleasedReturnValue( +[NSArray arrayWithObjects:count:]( &OBJC_CLASS___NSArray,  "arrayWithObjects:count:",  v120,  3LL));
                v77 = (void *)objc_claimAutoreleasedReturnValue( +[SSSQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SSSQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v76));

                v78 = (void *)objc_claimAutoreleasedReturnValue([v3 database]);
                v79 = (void *)objc_claimAutoreleasedReturnValue( +[DownloadAssetEntity anyInDatabase:predicate:]( &OBJC_CLASS___DownloadAssetEntity,  "anyInDatabase:predicate:",  v78,  v77));

                if (v79)
                {
                  v80 = @"blocked_reason";
                  v81 = &off_10036D830;
                  v82 = v10;
                }

                else
                {
                  v81 = (_UNKNOWN **)&__kCFBooleanFalse;
                  v82 = v10;
                  v80 = @"is_local_cache_server";
                }

                -[DownloadAssetEntity setValue:forProperty:](v82, "setValue:forProperty:", v81, v80, v112);
                v13 = v117;
                [v3 retryDownloadWithIdentifier:v6];

                goto LABEL_109;
              }

              v67 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v70,  4LL));
              free(v70);
              v112 = v67;
              SSFileLog(v64, @"%@");
            }

            goto LABEL_81;
          }
        }

        v13 = v117;
        if (sub_100101054(v17))
        {
          v83 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
          if (!v83) {
            v83 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
          }
          v84 = objc_msgSend(v83, "shouldLog", v111);
          else {
            v85 = v84;
          }
          v86 = (os_log_s *)objc_claimAutoreleasedReturnValue([v83 OSLogObject]);
          if (os_log_type_enabled(v86, OS_LOG_TYPE_DEFAULT)) {
            v87 = v85;
          }
          else {
            v87 = v85 & 2;
          }
          if ((_DWORD)v87)
          {
            v121 = 134218242;
            v122 = v6;
            v123 = 2112;
            v124 = v119;
            LODWORD(v113) = 22;
            v88 = (void *)_os_log_send_and_compose_impl( v87,  0LL,  0LL,  0LL,  &_mh_execute_header,  v86,  0LL,  "[Download]: Falling back to file download: %lld, after error: %@",  &v121,  v113);

            if (!v88)
            {
LABEL_104:

              -[DownloadAssetEntity setValue:forProperty:]( v10,  "setValue:forProperty:",  &__kCFBooleanTrue,  @"avfoundation_blocked");
              [v3 retryDownloadWithIdentifier:v6];
LABEL_109:
              v17 = v119;
              goto LABEL_110;
            }

            v86 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v88,  4LL));
            free(v88);
            v111 = v86;
            SSFileLog(v83, @"%@");
          }

          goto LABEL_104;
        }

        if (+[ExpiredDownloadRecoveryOperation canAttemptRecoveryWithError:]( &OBJC_CLASS___ExpiredDownloadRecoveryOperation,  "canAttemptRecoveryWithError:",  v17))
        {
          [*(id *)(a1 + 32) _attemptRecoveryForDownloadWithTaskState:v5 databaseSession:v3];
          goto LABEL_110;
        }

        if (ISErrorIsEqual(*(void *)(a1 + 48), NSURLErrorDomain, -997LL))
        {
          [*(id *)(a1 + 32) _scheduleReconnect];
          goto LABEL_110;
        }

        v94 = (void *)objc_claimAutoreleasedReturnValue(-[DownloadAssetEntity valueForProperty:](v10, "valueForProperty:", @"is_hls"));
        v116 = v94;
        if ((objc_opt_respondsToSelector(v94, "BOOLValue") & 1) != 0
          && ([v94 BOOLValue] & 1) != 0)
        {
          v95 = 1;
        }

        else
        {
          if (!sub_1001010B4(*(void **)(a1 + 48)))
          {
LABEL_127:
            -[DownloadAssetEntity setValue:forProperty:]( v10,  "setValue:forProperty:",  &__kCFBooleanFalse,  @"is_downloaded",  v111);
            v105 = *(void **)(a1 + 32);
            v106 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", v6));
            [v105 _failDownloadWithIdentifier:v106 error:v119 transaction:v3];

            [*(id *)(a1 + 32) _processDownloadFailureWithTaskState:v5 cancelReason:v15];
            v107 = *(void **)(a1 + 32);
            v108 = (void *)objc_claimAutoreleasedReturnValue([v5 kind]);
            v109 = (void *)objc_claimAutoreleasedReturnValue(-[DownloadEntity valueForProperty:](v117, "valueForProperty:", @"store_item_id"));
            v110 = (void *)objc_claimAutoreleasedReturnValue(-[DownloadEntity valueForProperty:](v117, "valueForProperty:", @"rental_id"));
            [v107 _reportTVAppDownloadQOSMetricsIfAppropriateForKind:v108 adamID:v109 rentalID:v110 error:v119 cancelReason:1];

            v13 = v117;
            v17 = v119;

            goto LABEL_110;
          }

          v95 = 0;
        }

        v96 = (void *)objc_claimAutoreleasedReturnValue(-[DownloadAssetEntity valueForProperty:](v10, "valueForProperty:", @"local_path", v111));
        if (v96) {
          goto LABEL_126;
        }
        if (v95)
        {
          v97 = (void *)objc_claimAutoreleasedReturnValue([v5 kind]);
          v98 = sub_10015AF78(v97);
          v99 = (void *)objc_claimAutoreleasedReturnValue(v98);

          v100 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%lld",  -[DownloadAssetEntity persistentID](v10, "persistentID")));
          v101 = (void *)objc_claimAutoreleasedReturnValue( [v100 stringByAppendingPathExtension:SSDownloadMetadataKeyFileExtensionMoviePackage]);

          v96 = (void *)objc_claimAutoreleasedReturnValue([v99 stringByAppendingPathComponent:v101]);
        }

        else
        {
          v102 = [v5 downloadIdentifier];
          v103 = -[DownloadAssetEntity persistentID](v10, "persistentID");
          v99 = (void *)objc_claimAutoreleasedReturnValue([v5 kind]);
          v96 = (void *)objc_claimAutoreleasedReturnValue( +[ScratchManager directoryPathForDownloadID:assetID:kind:createIfNeeded:]( &OBJC_CLASS___ScratchManager,  "directoryPathForDownloadID:assetID:kind:createIfNeeded:",  v102,  v103,  v99,  1LL));
        }

        if (v96)
        {
LABEL_126:
          v104 = objc_alloc_init(&OBJC_CLASS___NSFileManager);
          -[NSFileManager removeItemAtPath:error:](v104, "removeItemAtPath:error:", v96, 0LL);
        }

        goto LABEL_127;
      }

      v59 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v61,  4LL));
      free(v61);
      v111 = v59;
      SSFileLog(v57, @"%@");
    }

    goto LABEL_67;
  }

  [*(id *)(a1 + 32) _processDownloadFailureWithTaskState:v5 cancelReason:2];
  id v16 = *(void **)(a1 + 32);
  v17 = (void *)objc_claimAutoreleasedReturnValue([v5 kind]);
  unsigned int v18 = (void *)objc_claimAutoreleasedReturnValue(-[DownloadEntity valueForProperty:](v13, "valueForProperty:", @"store_item_id"));
  unsigned int v19 = (void *)objc_claimAutoreleasedReturnValue(-[DownloadEntity valueForProperty:](v13, "valueForProperty:", @"rental_id"));
  [v16 _reportTVAppDownloadQOSMetricsIfAppropriateForKind:v17 adamID:v18 rentalID:v19 error:0 cancelReason:2];

LABEL_110:
LABEL_111:
  objc_msgSend(*(id *)(a1 + 32), "_logDownloadEvent:forTaskWithState:session:", SSEventNameDownloadStop, v5, v3, v111);
  v89 = (void *)objc_claimAutoreleasedReturnValue(-[DownloadAssetEntity valueForProperty:](v10, "valueForProperty:", @"is_downloaded"));
  v90 = [v89 BOOLValue];

  v91 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 104) objectForKey:*(void *)(a1 + 40)]);
  v92 = v91;
  if (v90 && v91) {
    [v91 persistKeys];
  }
  [*(id *)(*(void *)(a1 + 32) + 104) removeObjectForKey:*(void *)(a1 + 40)];
  [*(id *)(*(void *)(a1 + 32) + 112) removeObjectForKey:*(void *)(a1 + 40)];
  [*(id *)(a1 + 32) _reloadKeepAliveAssertion];

LABEL_115:
  return 1LL;
}

LABEL_20:
}

  v23 = self->_rangesToLoad;
  self->_rangesToLoad = 0LL;

  uint64_t v6 = v34;
LABEL_34:
}

    -[StoreServicesRequestQueue _sendMessageWithError:toClient:]( self,  "_sendMessageWithError:toClient:",  SSError(SSErrorDomain, 100LL, 0LL, 0LL),  v6);
    goto LABEL_21;
  }

  id v11 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  if (!v11) {
    id v11 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  v12 = [v11 shouldLog];
  else {
    LODWORD(v13) = v12;
  }
  id v14 = (os_log_s *)[v11 OSLogObject];
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT)) {
    v13 = v13;
  }
  else {
    v13 &= 2u;
  }
  if ((_DWORD)v13)
  {
    v22 = 138412546;
    v23 = objc_opt_class(self);
    v24 = 2112;
    v25 = v6;
    v15 = _os_log_send_and_compose_impl( v13,  0LL,  0LL,  0LL,  &_mh_execute_header,  v14,  0LL,  "%@: Cannot sync for unentitled client: %@",  &v22,  22);
    if (v15)
    {
      id v16 = (void *)v15;
      v17 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v15, 4LL);
      free(v16);
      v20 = v17;
      SSFileLog(v11, @"%@");
    }
  }

  -[StoreServicesRequestQueue _sendUnentitledMessageToClient:](self, "_sendUnentitledMessageToClient:", v6, v20);
LABEL_22:
}

  objc_autoreleasePoolPop(v4);
}

    -[FinishDownloadStepOperation rollbackAsset:error:](self, "rollbackAsset:error:", v7, 0LL);
    goto LABEL_21;
  }

  uint64_t v31 = v10;
  v15 = (void *)objc_claimAutoreleasedReturnValue( -[InstallMediaDownloadOperation _installDaemonOwnedDownload:]( self,  "_installDaemonOwnedDownload:",  &v31));
  id v16 = v31;

  if (!v15)
  {
    v10 = v16;
    if (!v7) {
      goto LABEL_21;
    }
    goto LABEL_20;
  }

  if ([v4 isRentalDownload])
  {
    -[InstallMediaDownloadOperation _updateRentalsPlist](self, "_updateRentalsPlist");
    v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
    v29 = v15;
    unsigned int v18 = (void *)objc_claimAutoreleasedReturnValue([v4 ITunesMetadataDestinationPath]);
    [v17 removeItemAtPath:v18 error:0];

    v15 = v29;
  }

  else if ([v6 mediaLibraryProtectionType] == (id)2 {
         || ([v4 isHLS] & 1) != 0)
  }
  {
    id v30 = v15;
    if (v7)
    {
      v20 = objc_claimAutoreleasedReturnValue([v4 destinationDirectoryPathForAsset:v7]);
      uint64_t v21 = objc_claimAutoreleasedReturnValue([v7 destinationFileName]);
      v28 = (void *)v20;
      v22 = (void *)v20;
      v23 = (void *)v21;
      if ([v22 length] && objc_msgSend(v23, "length"))
      {
        v27 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
        v24 = (void *)objc_claimAutoreleasedReturnValue([v28 stringByAppendingPathComponent:v23]);
        [v27 removeItemAtPath:v24 error:0];
      }
    }

    v25 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
    id v26 = (void *)objc_claimAutoreleasedReturnValue([v4 ITunesMetadataDestinationPath]);
    [v25 removeItemAtPath:v26 error:0];

    v15 = v30;
  }

  else
  {
    -[FinishDownloadStepOperation addPurchaseManifestItemWithLibraryIdentifier:]( self,  "addPurchaseManifestItemWithLibraryIdentifier:",  v15);
  }

LABEL_26:
  -[FinishDownloadStepOperation finishWithDownloadResponse:](self, "finishWithDownloadResponse:", v3);
}

  return (char)v4;
}

LABEL_18:
  return v22;
}

  return v5;
}
}

    v13 = v4++ - 1;
    if (v13 >= 2)
    {
      id v14 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
      if (!v14) {
        id v14 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
      }
      v15 = [v14 shouldLog];
      else {
        LODWORD(v16) = v15;
      }
      v17 = (os_log_s *)[v14 OSLogObject];
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT)) {
        id v16 = v16;
      }
      else {
        v16 &= 2u;
      }
      if ((_DWORD)v16)
      {
        unsigned int v18 = objc_opt_class(self);
        v42 = 138412290;
        v43 = v18;
        LODWORD(v40) = 12;
        unsigned int v19 = _os_log_send_and_compose_impl( v16,  0LL,  0LL,  0LL,  &_mh_execute_header,  v17,  0LL,  "%@: Giving up after repeated failure",  &v42,  v40);
        if (v19)
        {
          v20 = (void *)v19;
          uint64_t v21 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v19, 4LL);
          free(v20);
          v39 = v21;
          SSFileLog(v14, @"%@");
        }
      }

      v22 = 0LL;
      v41 = (id)ISError(15LL, 0LL, 0LL);
      goto LABEL_57;
    }
  }

  uint64_t v31 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  if (!v31) {
    uint64_t v31 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  id v32 = [v31 shouldLog];
  else {
    LODWORD(v33) = v32;
  }
  v34 = (os_log_s *)[v31 OSLogObject];
  if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT)) {
    int v33 = v33;
  }
  else {
    v33 &= 2u;
  }
  if ((_DWORD)v33)
  {
    __int16 v35 = objc_opt_class(self);
    v42 = 138412290;
    v43 = v35;
    LODWORD(v40) = 12;
    id v36 = _os_log_send_and_compose_impl( v33,  0LL,  0LL,  0LL,  &_mh_execute_header,  v34,  0LL,  "%@: Giving up after checkout failure",  &v42,  v40);
    if (v36)
    {
      v37 = (void *)v36;
      v38 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v36, 4LL);
      free(v37);
      v39 = v38;
      SSFileLog(v31, @"%@");
    }
  }

  v22 = 0LL;
LABEL_57:
  -[CheckoutRentalKeysOperation setError:](self, "setError:", v41, v39);
  -[CheckoutRentalKeysOperation setSuccess:](self, "setSuccess:", v22);
}
}
}
}
}
}
}

  id v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "objectForKey:", @"allowed-match-status", v103));

  v17 = objc_alloc(&OBJC_CLASS___NSMutableSet);
  if (v16)
  {
    unsigned int v18 = (void *)objc_claimAutoreleasedReturnValue([v4 objectForKey:@"allowed-match-status"]);
    unsigned int v19 = -[NSMutableSet initWithArray:](v17, "initWithArray:", v18);
  }

  else
  {
    unsigned int v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", 0LL));
    unsigned int v19 = -[NSMutableSet initWithObjects:](v17, "initWithObjects:", v18, 0LL);
  }

  v119 = v19;
  v20 = v109;

  uint64_t v21 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  v113 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  v135 = 0u;
  v136 = 0u;
  v137 = 0u;
  v138 = 0u;
  obj = self->_downloadItems;
  v22 = -[NSArray countByEnumeratingWithState:objects:count:]( obj,  "countByEnumeratingWithState:objects:count:",  &v135,  v148,  16LL);
  v115 = v21;
  if (v22)
  {
    v23 = v22;
    v24 = *(void *)v136;
    v125 = *(void *)v136;
    do
    {
      v25 = 0LL;
      v127 = v23;
      do
      {
        if (*(void *)v136 != v24) {
          objc_enumerationMutation(obj);
        }
        id v26 = *(void **)(*((void *)&v135 + 1) + 8LL * (void)v25);
        v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v26, "downloadKind", v104));
        v28 = (void *)objc_claimAutoreleasedReturnValue([v26 cloudMatchStatus]);
        if (v20 && (-[NSMutableSet containsObject:](v20, "containsObject:", v27) & 1) == 0)
        {
          uint64_t v31 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
          if (!v31) {
            uint64_t v31 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
          }
          id v32 = [v31 shouldLog];
          else {
            int v33 = v32;
          }
          v34 = (os_log_s *)objc_claimAutoreleasedReturnValue([v31 OSLogObject]);
          if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT)) {
            __int16 v35 = v33;
          }
          else {
            __int16 v35 = v33 & 2;
          }
          if ((_DWORD)v35)
          {
            id v36 = (void *)objc_opt_class(self);
            v37 = v36;
            v38 = (void *)objc_claimAutoreleasedReturnValue([v26 storeItemID]);
            v139 = 138412802;
            v140 = v36;
            uint64_t v21 = v115;
            v141 = 2112;
            v142 = (uint64_t)v27;
            v143 = 2112;
            v144 = v38;
            LODWORD(v105) = 32;
            v39 = (void *)_os_log_send_and_compose_impl( v35,  0LL,  0LL,  0LL,  &_mh_execute_header,  v34,  0LL,  "%@: Filtering disallowed kind: %@ for item: %@",  &v139,  v105);

            goto LABEL_54;
          }

  for (i = 1LL; i != -1; --i)

LABEL_20:
  return v5;
}

  if (!-[NSFileManager fileExistsAtPath:isDirectory:](v11, "fileExistsAtPath:isDirectory:", v12, &v143, v113))
  {
    v41 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v41) {
      v41 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    v42 = [v41 shouldLog];
    v43 = (os_log_s *)objc_claimAutoreleasedReturnValue([v41 OSLogObject]);
    if (os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT)) {
      v44 = v42;
    }
    else {
      v44 = v42 & 2;
    }
    if ((_DWORD)v44)
    {
      v45 = (void *)objc_opt_class(self);
      v144 = 138412546;
      v145 = v45;
      v146 = 2112;
      v147 = v12;
      v46 = v45;
      LODWORD(v115) = 22;
      v47 = (void *)_os_log_send_and_compose_impl( v44,  0LL,  0LL,  0LL,  &_mh_execute_header,  v43,  0LL,  "%@: Could not install non-existant file: %@",  &v144,  v115);

      if (!v47)
      {
LABEL_38:

        v48 = SSError(SSErrorDomain, 7LL, 0LL, 0LL);
        v49 = (id)objc_claimAutoreleasedReturnValue(v48);
        id v30 = 0LL;
        v50 = 0LL;
        v40 = 0LL;
        v51 = 0;
        goto LABEL_149;
      }

      v43 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v47,  4LL));
      free(v47);
      SSFileLog(v41, @"%@");
    }

    goto LABEL_38;
  }

  v126 = a4;
  v128 = a5;
  v27 = (void *)objc_claimAutoreleasedReturnValue(-[InstallEBookDownloadOperation _bookManifest](self, "_bookManifest"));
  v28 = (void *)objc_claimAutoreleasedReturnValue([v27 manifestPath]);
  v29 = (void *)objc_claimAutoreleasedReturnValue([v28 stringByDeletingLastPathComponent]);

  id v30 = (id)objc_claimAutoreleasedReturnValue([v10 destinationFileName]);
  uint64_t v31 = (void *)objc_claimAutoreleasedReturnValue(+[EBookManifest syncedBookManifest](&OBJC_CLASS___EBookManifest, "syncedBookManifest"));

  v123 = v27;
  if (v27 == v31)
  {
    id v32 = (void *)objc_claimAutoreleasedReturnValue([v30 pathExtension]);
    int v33 = (void *)objc_claimAutoreleasedReturnValue([v12 lastPathComponent]);

    if ([v32 length])
    {
      v34 = v13;
      __int16 v35 = (void *)objc_claimAutoreleasedReturnValue([v33 pathExtension]);
      id v36 = [v35 length];

      if (!v36)
      {
        v37 = objc_claimAutoreleasedReturnValue([v33 stringByAppendingPathExtension:v32]);

        int v33 = (void *)v37;
      }

      v13 = v34;
    }

    id v30 = v33;
  }

  v38 = objc_claimAutoreleasedReturnValue([v29 stringByAppendingPathComponent:v30]);
  v124 = v13;
  if (self->_isSharedDownload)
  {
    v39 = (void *)objc_claimAutoreleasedReturnValue( +[InstallEBookDownloadOperation sharedBookContainerCachesPath]( &OBJC_CLASS___InstallEBookDownloadOperation,  "sharedBookContainerCachesPath"));
    v40 = (void *)objc_claimAutoreleasedReturnValue([v39 stringByAppendingPathComponent:v30]);

    v29 = v39;
  }

  else
  {
    v40 = (void *)objc_claimAutoreleasedReturnValue([v29 stringByAppendingPathComponent:v30]);
  }

  v130 = (id)v38;
  v133 = v11;

  v52 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v52) {
    v52 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  v53 = [v52 shouldLog];
  v54 = (os_log_s *)objc_claimAutoreleasedReturnValue([v52 OSLogObject]);
  if (os_log_type_enabled(v54, OS_LOG_TYPE_INFO)) {
    v55 = v53;
  }
  else {
    v55 = v53 & 2;
  }
  if ((_DWORD)v55)
  {
    v56 = (void *)objc_opt_class(self);
    v144 = 138412546;
    v145 = v56;
    v146 = 2112;
    v147 = v40;
    v57 = v56;
    LODWORD(v115) = 22;
    v58 = (void *)_os_log_send_and_compose_impl( v55,  0LL,  0LL,  0LL,  &_mh_execute_header,  v54,  1LL,  "%@: Saving Book to : %@",  &v144,  v115);

    if (!v58) {
      goto LABEL_51;
    }
    v54 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v58,  4LL));
    free(v58);
    v114 = v54;
    SSFileLog(v52, @"%@");
  }

LABEL_51:
  if (v143)
  {
    v59 = [v12 isEqualToString:v40];
    v60 = objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    v61 = (void *)v60;
    if (v59)
    {
      if (!v60) {
        v61 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      v62 = objc_msgSend(v61, "shouldLog", v114);
      v63 = (os_log_s *)objc_claimAutoreleasedReturnValue([v61 OSLogObject]);
      if (os_log_type_enabled(v63, OS_LOG_TYPE_INFO)) {
        v64 = v62;
      }
      else {
        v64 = v62 & 2;
      }
      if ((_DWORD)v64)
      {
        v65 = (void *)objc_opt_class(self);
        v144 = 138412546;
        v145 = v65;
        v146 = 2112;
        v147 = v40;
        v66 = v65;
        LODWORD(v115) = 22;
        v67 = (void *)_os_log_send_and_compose_impl( v64,  0LL,  0LL,  0LL,  &_mh_execute_header,  v63,  1LL,  "%@: Book already at destination: %@",  &v144,  v115);

        v68 = a6;
        id v11 = v133;
        if (!v67)
        {
LABEL_98:

          v91 = 0;
          v49 = 0LL;
          v77 = 1;
          goto LABEL_137;
        }

        v63 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v67,  4LL));
        free(v67);
        SSFileLog(v61, @"%@");
      }

      else
      {
        v68 = a6;
        id v11 = v133;
      }

      goto LABEL_98;
    }

    if (!v60) {
      v61 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    v78 = objc_msgSend(v61, "shouldLog", v114);
    v79 = (os_log_s *)objc_claimAutoreleasedReturnValue([v61 OSLogObject]);
    if (os_log_type_enabled(v79, OS_LOG_TYPE_INFO)) {
      v80 = v78;
    }
    else {
      v80 = v78 & 2;
    }
    if ((_DWORD)v80)
    {
      v81 = (void *)objc_opt_class(self);
      v144 = 138412802;
      v145 = v81;
      v146 = 2112;
      v147 = v12;
      v148 = 2112;
      v149 = v40;
      v82 = v81;
      LODWORD(v115) = 32;
      v83 = (void *)_os_log_send_and_compose_impl( v80,  0LL,  0LL,  0LL,  &_mh_execute_header,  v79,  1LL,  "%@: Moving file: %@ to path: %@",  &v144,  v115);

      if (!v83)
      {
LABEL_100:

        v141 = v40;
        v140 = 0LL;
        v77 = -[FinishDownloadStepOperation moveFile:toPath:installBehavior:error:]( self,  "moveFile:toPath:installBehavior:error:",  v12,  &v141,  0LL,  &v140);
        v92 = v141;

        v49 = v140;
        v91 = 0;
        v40 = v92;
        v68 = a6;
        id v11 = v133;
        goto LABEL_137;
      }

      v79 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v83,  4LL));
      free(v83);
      SSFileLog(v61, @"%@");
    }

    goto LABEL_100;
  }

  v138 = 0LL;
  v139 = 0LL;
  v69 = -[FinishDownloadStepOperation unzipAsset:unzippedPath:error:]( self,  "unzipAsset:unzippedPath:error:",  v10,  &v139,  &v138);
  v70 = v139;
  id v11 = v133;
  v120 = v69;
  v119 = v70;
  v121 = v138;
  if (v69)
  {
    v137 = v40;
    -[FinishDownloadStepOperation moveFile:toPath:installBehavior:error:]( self,  "moveFile:toPath:installBehavior:error:",  v70,  &v137,  0LL,  0LL);
    v116 = v137;

    v71 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v71) {
      v71 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    v72 = objc_msgSend(v71, "shouldLog", v114);
    v73 = (os_log_s *)objc_claimAutoreleasedReturnValue([v71 OSLogObject]);
    if (os_log_type_enabled(v73, OS_LOG_TYPE_INFO)) {
      v74 = v72;
    }
    else {
      v74 = v72 & 2;
    }
    v122 = v71;
    if ((_DWORD)v74)
    {
      v75 = (void *)objc_opt_class(self);
      v144 = 138412546;
      v145 = v75;
      v146 = 2112;
      v147 = v116;
      v76 = v75;
      LODWORD(v115) = 22;
      v77 = 1;
      v49 = (id)_os_log_send_and_compose_impl( v74,  0LL,  0LL,  0LL,  &_mh_execute_header,  v73,  1LL,  "%@: Installed file: %@",  &v144,  v115);

      if (!v49)
      {
        v68 = a6;
        id v11 = v133;
        goto LABEL_118;
      }

      v73 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v49,  4LL));
      free(v49);
      SSFileLog(v71, @"%@");
      id v11 = v133;
    }

    else
    {
      id v11 = v133;
    }

    v68 = a6;

    v49 = 0LL;
    v77 = 1;
LABEL_118:
    v93 = v121;
    v40 = v116;
    goto LABEL_136;
  }

  -[NSFileManager removeItemAtPath:error:](v133, "removeItemAtPath:error:", v70, 0LL);
  v122 = (void *)objc_claimAutoreleasedReturnValue([v40 pathExtension]);
  if (([v122 isEqualToString:@"epub"] & 1) == 0
    && ![v122 isEqualToString:@"ibooks"])
  {
    v94 = [v12 isEqualToString:v40];
    v95 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (v94)
    {
      if (!v95) {
        v95 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      v96 = v95;
      v97 = objc_msgSend(v95, "shouldLog", v114);
      v117 = v96;
      v98 = (os_log_s *)objc_claimAutoreleasedReturnValue([v96 OSLogObject]);
      if (os_log_type_enabled(v98, OS_LOG_TYPE_INFO)) {
        v99 = v97;
      }
      else {
        v99 = v97 & 2;
      }
      if ((_DWORD)v99)
      {
        v100 = (void *)objc_opt_class(self);
        v144 = 138412546;
        v145 = v100;
        v146 = 2112;
        v147 = v40;
        v101 = v100;
        LODWORD(v115) = 22;
        v102 = (void *)_os_log_send_and_compose_impl( v99,  0LL,  0LL,  0LL,  &_mh_execute_header,  v98,  1LL,  "%@: Book already at destination: %@",  &v144,  v115);

        v13 = v124;
        v68 = a6;
        if (!v102)
        {
LABEL_131:

          v49 = 0LL;
          v77 = 1;
LABEL_135:
          v93 = v121;
          goto LABEL_136;
        }

        v98 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v102,  4LL));
        free(v102);
        SSFileLog(v117, @"%@");
      }

      else
      {
        v13 = v124;
        v68 = a6;
      }

      goto LABEL_131;
    }

    if (!v95) {
      v95 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    v103 = v95;
    v104 = objc_msgSend(v95, "shouldLog", v114);
    v118 = v103;
    v105 = (os_log_s *)objc_claimAutoreleasedReturnValue([v103 OSLogObject]);
    if (os_log_type_enabled(v105, OS_LOG_TYPE_INFO)) {
      v106 = v104;
    }
    else {
      v106 = v104 & 2;
    }
    if ((_DWORD)v106)
    {
      v107 = (void *)objc_opt_class(self);
      v144 = 138412802;
      v145 = v107;
      v146 = 2112;
      v147 = v12;
      v148 = 2112;
      v149 = v40;
      v108 = v107;
      LODWORD(v115) = 32;
      v109 = (void *)_os_log_send_and_compose_impl( v106,  0LL,  0LL,  0LL,  &_mh_execute_header,  v105,  1LL,  "%@: Moving file: %@ to path: %@",  &v144,  v115);

      v13 = v124;
      v68 = a6;
      if (!v109)
      {
LABEL_134:

        v135 = 0LL;
        v136 = v40;
        v77 = -[FinishDownloadStepOperation moveFile:toPath:installBehavior:error:]( self,  "moveFile:toPath:installBehavior:error:",  v12,  &v136,  0LL,  &v135);
        v110 = v136;

        v40 = v110;
        v49 = v135;
        goto LABEL_135;
      }

      v105 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v109,  4LL));
      free(v109);
      SSFileLog(v118, @"%@");
    }

    else
    {
      v13 = v124;
      v68 = a6;
    }

    goto LABEL_134;
  }

  v84 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig", v114));
  if (!v84) {
    v84 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  v85 = [v84 shouldLog];
  v86 = (os_log_s *)objc_claimAutoreleasedReturnValue([v84 OSLogObject]);
  if (os_log_type_enabled(v86, OS_LOG_TYPE_DEFAULT)) {
    v87 = v85;
  }
  else {
    v87 = v85 & 2;
  }
  if (!(_DWORD)v87)
  {
    v68 = a6;
    id v11 = v133;
    goto LABEL_104;
  }

  v88 = (void *)objc_opt_class(self);
  v144 = 138412802;
  v145 = v88;
  v146 = 2112;
  v147 = v12;
  v148 = 2112;
  v149 = v121;
  v89 = v88;
  LODWORD(v115) = 32;
  v90 = (void *)_os_log_send_and_compose_impl( v87,  0LL,  0LL,  0LL,  &_mh_execute_header,  v86,  0LL,  "%@: Failing install after unzip failure for file: %@, error: %@",  &v144,  v115);

  v68 = a6;
  id v11 = v133;
  if (v90)
  {
    v86 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v90,  4LL));
    free(v90);
    SSFileLog(v84, @"%@");
LABEL_104:
  }

  v93 = v121;
  v49 = v121;
  v77 = 0;
LABEL_136:

  v91 = v120;
LABEL_137:
  if (v77 && (v91 & 1) == 0)
  {
    v111 = (void *)objc_claimAutoreleasedReturnValue([v10 fileAttributes]);
    if ([v111 count]) {
      -[NSFileManager setAttributes:ofItemAtPath:error:](v11, "setAttributes:ofItemAtPath:error:", v111, v40, 0LL);
    }
  }

  v51 = v77 != 0;
  if (v68 && v77)
  {
    *v126 = v40;
    *v68 = v130;
  }

  if (v30 && v77)
  {
    id v30 = v30;
    v50 = v130;
    *v128 = v30;
    v51 = 1;
    goto LABEL_152;
  }

  v50 = v130;
LABEL_149:
  if (a7 && !v51)
  {
    v49 = v49;
    *a7 = v49;
  }

  unsigned int v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "valueForProperty:", @"body_data", v33));

  unsigned int v19 = objc_opt_class(&OBJC_CLASS___NSData);
  if ((objc_opt_isKindOfClass(v18, v19) & 1) != 0) {
    -[NSMutableURLRequest setHTTPBody:](v7, "setHTTPBody:", v18);
  }
  v20 = (void *)objc_claimAutoreleasedReturnValue([v4 valueForProperty:@"http_headers"]);

  uint64_t v21 = objc_opt_class(&OBJC_CLASS___NSData);
  if ((objc_opt_isKindOfClass(v20, v21) & 1) != 0)
  {
    v22 = (void *)objc_claimAutoreleasedReturnValue( +[NSPropertyListSerialization propertyListWithData:options:format:error:]( &OBJC_CLASS___NSPropertyListSerialization,  "propertyListWithData:options:format:error:",  v20,  0LL,  0LL,  0LL));
    v23 = objc_opt_class(&OBJC_CLASS___NSDictionary);
    if ((objc_opt_isKindOfClass(v22, v23) & 1) != 0)
    {
      v34[0] = _NSConcreteStackBlock;
      v34[1] = 3221225472LL;
      v34[2] = sub_10012BF44;
      v34[3] = &unk_10034B178;
      __int16 v35 = v7;
      [v22 enumerateKeysAndObjectsUsingBlock:v34];
    }
  }

  v24 = (void *)objc_claimAutoreleasedReturnValue([v4 valueForProperty:@"http_method"]);

  v25 = objc_opt_class(v10[404]);
  if ((objc_opt_isKindOfClass(v24, v25) & 1) != 0) {
    -[NSMutableURLRequest setHTTPMethod:](v7, "setHTTPMethod:", v24);
  }
  id v26 = SSHTTPHeaderUserAgent;
  v27 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableURLRequest valueForHTTPHeaderField:](v7, "valueForHTTPHeaderField:", SSHTTPHeaderUserAgent));

  if (!v27)
  {
    v28 = (void *)objc_claimAutoreleasedReturnValue(+[SSDevice currentDevice](&OBJC_CLASS___SSDevice, "currentDevice"));
    v29 = (void *)objc_claimAutoreleasedReturnValue([v28 userAgent]);

    if (v29) {
      -[NSMutableURLRequest setValue:forHTTPHeaderField:](v7, "setValue:forHTTPHeaderField:", v29, v26);
    }
  }

  id v30 = (void *)objc_claimAutoreleasedReturnValue([v4 valueForProperty:@"is_local_cache_server"]);
  uint64_t v31 = [v30 BOOLValue];

  if (v31) {
    -[NSMutableURLRequest _setRequiresShortConnectionTimeout:](v7, "_setRequiresShortConnectionTimeout:", 1LL);
  }

LABEL_34:
  return v7;
}
}

  id v14 = objc_alloc(&OBJC_CLASS___ISAMSBagShim);
  v15 = (void *)objc_claimAutoreleasedReturnValue(-[ISLoadURLBagOperation URLBag](v3, "URLBag"));
  id v16 = [v14 initWithURLBag:v15];

  return v16;
}

uint64_t start()
{
  v0 = objc_autoreleasePoolPush();
  objc_msgSend(+[Daemon daemon](Daemon, "daemon"), "start");
  objc_autoreleasePoolPop(v0);
  do
  {
    id v1 = objc_autoreleasePoolPush();
    CFRunLoopRunResult v2 = CFRunLoopRunInMode(kCFRunLoopDefaultMode, 15.0, 1u);
    objc_autoreleasePoolPop(v1);
  }

  while ((v2 - 3) < 0xFFFFFFFE);
  id v3 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  if (!v3) {
    id v3 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  unsigned int v4 = [v3 shouldLog];
  else {
    unsigned int v5 = v4;
  }
  uint64_t v6 = (os_log_s *)[v3 OSLogObject];
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO)) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = v5 & 2;
  }
  if ((_DWORD)v7)
  {
    v11[0] = 0;
    uint64_t v8 = _os_log_send_and_compose_impl(v7, 0LL, 0LL, 0LL, &_mh_execute_header, v6, 1LL, "Daemon: Exiting", v11, 2);
    if (v8)
    {
      v9 = (void *)v8;
      +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v8, 4LL);
      free(v9);
      SSFileLog(v3, @"%@");
    }
  }

  return 0LL;
}

LABEL_16:
  v10 = -[PurchaseManifest initWithPurchaseDirectory:]( objc_alloc(&OBJC_CLASS___PurchaseManifest),  "initWithPurchaseDirectory:",  v4);
  [(id)qword_1003A31A8 addObject:v10];

LABEL_17:
  id v11 = v10;
  pthread_mutex_unlock(&stru_1003A1E40);
  return v10;
}
}

  if (a4) {
    *a4 = (id)v12;
  }
  return result;
}

  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "publicToken", v18));
  id v14 = (void *)objc_claimAutoreleasedReturnValue([v4 tokenData]);
  v15 = [v13 isEqual:v14];

  if ((v15 & 1) == 0)
  {
    id v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", 0LL));
    [v4 setLastAccountIdentifier:v16];

    v17 = (void *)objc_claimAutoreleasedReturnValue([v6 publicToken]);
    [v4 setTokenData:v17];
  }

LABEL_19:
}

  id v14 = objc_opt_class(&OBJC_CLASS___NSDictionary);
  if ((objc_opt_isKindOfClass(v5, v14) & 1) != 0 && [v5 count]) {
    v15 = v5;
  }
  else {
    v15 = 0LL;
  }

LABEL_22:
  return v15;
}
}

  id v16 = *(void *)(a1 + 32);
  v15 = *(void **)(a1 + 40);
  v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "database", v30));
  unsigned int v18 = (void *)objc_claimAutoreleasedReturnValue([v15 _downloadQueryWithQueueRequest:v16 database:v17]);

  unsigned int v19 = [v18 copyEntityIdentifiers];
  if ([v19 count])
  {
    v20 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v20) {
      v20 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    uint64_t v21 = [v20 shouldLog];
    else {
      LODWORD(v22) = v21;
    }
    v23 = (os_log_s *)objc_claimAutoreleasedReturnValue([v20 OSLogObject]);
    if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO)) {
      v22 = v22;
    }
    else {
      v22 &= 2u;
    }
    if ((_DWORD)v22)
    {
      v24 = (void *)objc_opt_class(*(void *)(a1 + 40));
      v25 = v24;
      id v26 = [v19 count];
      v27 = *(void *)(a1 + 32);
      id v32 = 138412802;
      int v33 = v24;
      v34 = 2048;
      __int16 v35 = v26;
      id v36 = 2112;
      v37 = v27;
      LODWORD(v31) = 32;
      v28 = (void *)_os_log_send_and_compose_impl( v22,  0LL,  0LL,  0LL,  &_mh_execute_header,  v23,  1LL,  "%@: Deleting all %lu downloads for request: %@",  &v32,  v31);

      if (!v28)
      {
LABEL_29:

        [v3 finishDownloadsWithIdentifiers:v19 finalPhase:SSDownloadPhaseCanceled];
        goto LABEL_30;
      }

      v23 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v28,  4LL));
      free(v28);
      SSFileLog(v20, @"%@");
    }

    goto LABEL_29;
  }

  WeakRetained = objc_loadWeakRetained(a1 + 6);
  if ([WeakRetained success])
  {
    v17 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained downloads]);
    unsigned int v18 = [v17 mutableCopy];

    LOBYTE(v17) = [a1[5] _ignoreVideos];
    unsigned int v19 = objc_opt_new(&OBJC_CLASS___NSMutableIndexSet);
    v20 = objc_opt_new(&OBJC_CLASS___NSMutableArray);
    v42[0] = _NSConcreteStackBlock;
    v42[1] = 3221225472LL;
    v42[2] = sub_10009082C;
    v42[3] = &unk_10034CF58;
    v45 = (char)v17;
    v42[4] = a1[5];
    uint64_t v21 = v19;
    v43 = v21;
    v22 = v20;
    v44 = v22;
    [v18 enumerateObjectsUsingBlock:v42];
    [v18 removeObjectsAtIndexes:v21];
    if ([a1[4] cancelsDuplicateDownloads])
    {
      v37 = v21;
      v40 = 0u;
      v41 = 0u;
      v38 = 0u;
      v39 = 0u;
      v23 = v18;
      v24 = [v23 countByEnumeratingWithState:&v38 objects:v46 count:16];
      if (v24)
      {
        v25 = v24;
        id v26 = *(void *)v39;
        v27 = SSDownloadMetadataKeyCancelIfDuplicate;
        do
        {
          for (i = 0LL; i != v25; i = (char *)i + 1)
          {
            if (*(void *)v39 != v26) {
              objc_enumerationMutation(v23);
            }
            objc_msgSend( *(id *)(*((void *)&v38 + 1) + 8 * (void)i),  "setValue:forMetadataKey:",  &__kCFBooleanTrue,  v27,  v36);
          }

          v25 = [v23 countByEnumeratingWithState:&v38 objects:v46 count:16];
        }

        while (v25);
      }

      uint64_t v21 = v37;
    }

    +[BookAssetDaemonUtility sendBookStoreDownloads:withReason:]( &OBJC_CLASS___BookAssetDaemonUtility,  "sendBookStoreDownloads:withReason:",  v22,  @"auto download queue",  v36);
    id v30 = a1[4];
    v29 = a1[5];
    uint64_t v31 = (void *)objc_claimAutoreleasedReturnValue([v3 database]);
    id v32 = (void *)objc_claimAutoreleasedReturnValue([v29 _downloadQueryWithQueueRequest:v30 database:v31]);

    int v33 = (void *)objc_claimAutoreleasedReturnValue([a1[4] accountIdentifier]);
    v34 = (uint64_t)[v3 replaceDownloadsInQuery:v32 withStoreDownloads:v18 accountID:v33];
  }

  else
  {
    v34 = 1LL;
  }

  return v34;
}
}
}

  for (i = 1LL; i != -1; --i)
  return 1LL;
}

    v9 = (void *)objc_claimAutoreleasedReturnValue(+[Daemon daemon](&OBJC_CLASS___Daemon, "daemon", (void)v10));
    [v9 takeKeepAliveAssertion:@"com.apple.itunesstored.DownloadPipeline"];
LABEL_18:
  }
}

  reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 32));
  xpc_dictionary_set_BOOL(reply, "0", *((_BYTE *)v29 + 24));
  SSXPCDictionarySetCFObject(reply, "1", v33[5]);
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 48), reply);

  _Block_object_dispose(&v28, 8);
  _Block_object_dispose(&v32, 8);
}

  v17 = v8;
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v7 objectForKey:kISDialogKey]);

  unsigned int v18 = objc_opt_class(&OBJC_CLASS___NSDictionary);
  isKindOfClass = objc_opt_isKindOfClass(v8, v18);
  if (a4 && (isKindOfClass & 1) != 0) {
    *a4 = -[ISDialog initWithDialogDictionary:](objc_alloc(&OBJC_CLASS___ISDialog), "initWithDialogDictionary:", v8);
  }
LABEL_19:

  return v10;
}

void sub_10000AC10(uint64_t a1)
{
  id v14 = [*(id *)(a1 + 32) _dictionary];
  CFRunLoopRunResult v2 = (NSMutableArray *)objc_msgSend(objc_msgSend(v14, "objectForKey:", @"assetOrdering"), "mutableCopy");
  if (!v2) {
    CFRunLoopRunResult v2 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  }
  uint64_t v15 = a1;
  id v3 = [*(id *)(a1 + 40) manifestItemDictionary];
  __int128 v21 = 0u;
  __int128 v22 = 0u;
  __int128 v23 = 0u;
  __int128 v24 = 0u;
  obj = v2;
  id v4 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v2,  "countByEnumeratingWithState:objects:count:",  &v21,  v26,  16LL);
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v22;
    do
    {
      for (i = 0LL; i != v5; i = (char *)i + 1)
      {
        if (*(void *)v22 != v6) {
          objc_enumerationMutation(obj);
        }
        uint64_t v8 = *(void **)(*((void *)&v21 + 1) + 8LL * (void)i);
        id v9 = [v8 count];
        if (v9 == [v3 count])
        {
          __int128 v19 = 0u;
          __int128 v20 = 0u;
          __int128 v17 = 0u;
          __int128 v18 = 0u;
          id v10 = [v8 countByEnumeratingWithState:&v17 objects:v25 count:16];
          if (!v10) {
            goto LABEL_22;
          }
          id v11 = v10;
          uint64_t v12 = *(void *)v18;
LABEL_11:
          uint64_t v13 = 0LL;
          while (1)
          {
            if (*(void *)v18 != v12) {
              objc_enumerationMutation(v8);
            }
            if (!objc_msgSend( objc_msgSend(v8, "objectForKey:", *(void *)(*((void *)&v17 + 1) + 8 * v13)),  "isEqual:",  objc_msgSend(v3, "objectForKey:", *(void *)(*((void *)&v17 + 1) + 8 * v13)))) {
              break;
            }
            if (v11 == (id)++v13)
            {
              id v11 = [v8 countByEnumeratingWithState:&v17 objects:v25 count:16];
              if (v11) {
                goto LABEL_11;
              }
              goto LABEL_22;
            }
          }
        }
      }

      id v5 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( obj,  "countByEnumeratingWithState:objects:count:",  &v21,  v26,  16LL);
    }

    while (v5);
  }

  if (v3)
  {
    -[NSMutableArray addObject:](obj, "addObject:", v3);
    [v14 setObject:obj forKey:@"assetOrdering"];
    [*(id *)(v15 + 32) _writeToFile];
  }

LABEL_22:
}
}

  for (i = 1LL; i != -1; --i)
}

  id v26 = *(void *)(&self->_isSharedDownload + 5);
  v141 = v9;
  v135 = (void *)v12;
  if (v26)
  {
    v27 = v5;
    v28 = (void *)objc_claimAutoreleasedReturnValue(-[InstallEBookDownloadOperation _bookManifest](self, "_bookManifest"));
    v29 = (void *)objc_claimAutoreleasedReturnValue([v28 manifestPath]);
    id v30 = (void *)objc_claimAutoreleasedReturnValue([v29 stringByDeletingLastPathComponent]);
    v145 = (void *)objc_claimAutoreleasedReturnValue([v30 stringByAppendingPathComponent:*(void *)(&self->_isSharedDownload + 5)]);

    uint64_t v31 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v31) {
      uint64_t v31 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    id v32 = [v31 shouldLog];
    else {
      int v33 = v32;
    }
    v34 = (os_log_s *)objc_claimAutoreleasedReturnValue([v31 OSLogObject]);
    if (os_log_type_enabled(v34, OS_LOG_TYPE_INFO)) {
      __int16 v35 = v33;
    }
    else {
      __int16 v35 = v33 & 2;
    }
    if ((_DWORD)v35)
    {
      id v36 = (void *)objc_opt_class(self);
      v37 = v36;
      v155 = 138412546;
      v156 = v36;
      v157 = 2048;
      v158 = -[DownloadHandle downloadID](v146, "downloadID");
      v38 = (void *)_os_log_send_and_compose_impl( v35,  0LL,  0LL,  0LL,  &_mh_execute_header,  v34,  1LL,  "%@: We have an existing shared download: %lld",  &v155,  22);

      uint64_t v8 = &ACSLocateCachingServer_ptr;
      if (v38)
      {
        v39 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v38,  4LL));
        free(v38);
        v129 = v39;
        SSFileLog(v31, @"%@");
      }
    }

    else
    {
    }

    id v5 = v27;
  }

  else
  {
    v28 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v28) {
      v28 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    v40 = [v28 shouldLog];
    else {
      v41 = v40;
    }
    v42 = (os_log_s *)objc_claimAutoreleasedReturnValue([v28 OSLogObject]);
    if (os_log_type_enabled(v42, OS_LOG_TYPE_INFO)) {
      v43 = v41;
    }
    else {
      v43 = v41 & 2;
    }
    if ((_DWORD)v43)
    {
      v44 = (void *)objc_opt_class(self);
      v45 = v44;
      v155 = 138412546;
      v156 = v44;
      v157 = 2048;
      v158 = -[DownloadHandle downloadID](v146, "downloadID");
      v46 = (void *)_os_log_send_and_compose_impl( v43,  0LL,  0LL,  0LL,  &_mh_execute_header,  v42,  1LL,  "%@: We have a new shared download: %lld",  &v155,  22);

      if (v46)
      {
        v47 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v46,  4LL));
        free(v46);
        v129 = v47;
        SSFileLog(v28, @"%@");
      }

      v145 = 0LL;
      uint64_t v8 = &ACSLocateCachingServer_ptr;
    }

    else
    {

      v145 = 0LL;
    }
  }

  v48 = (void *)objc_claimAutoreleasedReturnValue([v8[459] sharedDaemonConfig]);
  if (!v48) {
    v48 = (void *)objc_claimAutoreleasedReturnValue([v8[459] sharedConfig]);
  }
  v49 = objc_msgSend(v48, "shouldLog", v129);
  else {
    v50 = v49;
  }
  v51 = (os_log_s *)objc_claimAutoreleasedReturnValue([v48 OSLogObject]);
  if (os_log_type_enabled(v51, OS_LOG_TYPE_INFO)) {
    v52 = v50;
  }
  else {
    v52 = v50 & 2;
  }
  if (!(_DWORD)v52)
  {
    v58 = v137;
    v59 = v133;
    goto LABEL_60;
  }

  v53 = (void *)objc_opt_class(self);
  v54 = v5;
  v55 = v53;
  v56 = (void *)objc_claimAutoreleasedReturnValue( +[InstallEBookDownloadOperation sharedBookContainerPath]( &OBJC_CLASS___InstallEBookDownloadOperation,  "sharedBookContainerPath"));
  v155 = 138412546;
  v156 = v53;
  v157 = 2112;
  v158 = (int64_t)v56;
  LODWORD(v130) = 22;
  v57 = (void *)_os_log_send_and_compose_impl( v52,  0LL,  0LL,  0LL,  &_mh_execute_header,  v51,  1LL,  "%@: Shared book container location is: %@",  &v155,  v130);

  id v5 = v54;
  v58 = v137;
  v59 = v133;
  if (v57)
  {
    v51 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v57,  4LL));
    free(v57);
    v129 = v51;
    SSFileLog(v48, @"%@");
LABEL_60:
  }

  if (v26)
  {
    v60 = 0LL;
    v61 = 0LL;
    v140 = 0LL;
    v62 = 1LL;
    uint64_t v8 = &ACSLocateCachingServer_ptr;
    goto LABEL_82;
  }

  uint64_t v8 = &ACSLocateCachingServer_ptr;
  __int128 v24 = v145;
LABEL_64:
  v154 = 0LL;
  v152 = v24;
  v153 = 0LL;
  v151 = 0LL;
  v63 = -[InstallEBookDownloadOperation _installMediaAsset:assetInstalledPath:fileName:drmPath:error:]( self,  "_installMediaAsset:assetInstalledPath:fileName:drmPath:error:",  v5,  &v154,  &v153,  &v152,  &v151,  v129);
  v61 = (NSString *)v154;
  v60 = v153;
  v64 = v152;

  v65 = v151;
  v66 = v65;
  if (v63)
  {
    v140 = v65;
    v67 = v60;
    v145 = v64;
    v68 = objc_alloc_init(&OBJC_CLASS___NSFileManager);
    LOBYTE(v155) = 0;
    -[NSFileManager fileExistsAtPath:isDirectory:](v68, "fileExistsAtPath:isDirectory:", v61, &v155);
    v69 = (void *)objc_claimAutoreleasedReturnValue([v4 secondaryAssetForType:SSDownloadAssetTypeArtwork]);
    if (v69 && -[FinishDownloadStepOperation downloadAsset:error:](self, "downloadAsset:error:", v69, 0LL))
    {
      if ((_BYTE)v155)
      {
        v70 = (void *)objc_claimAutoreleasedReturnValue( -[NSString stringByAppendingPathComponent:]( v61,  "stringByAppendingPathComponent:",  @"iTunesArtwork"));
      }

      else
      {
        v72 = (void *)objc_claimAutoreleasedReturnValue([v69 destinationFileName]);
        v73 = (void *)objc_claimAutoreleasedReturnValue([v72 pathExtension]);

        v74 = (void *)objc_claimAutoreleasedReturnValue(-[NSString stringByDeletingPathExtension](v61, "stringByDeletingPathExtension"));
        v70 = (void *)objc_claimAutoreleasedReturnValue([v74 stringByAppendingPathExtension:v73]);

        uint64_t v8 = &ACSLocateCachingServer_ptr;
      }

      v150 = v70;
      -[FinishDownloadStepOperation moveAsset:toPath:installBehavior:error:]( self,  "moveAsset:toPath:installBehavior:error:",  v69,  &v150,  0LL,  0LL);
      v75 = v150;
    }

    v76 = (void *)objc_claimAutoreleasedReturnValue(-[InstallEBookDownloadOperation _bookManifest](self, "_bookManifest"));
    v77 = (void *)objc_claimAutoreleasedReturnValue(+[EBookManifest purchasedBookManifest](&OBJC_CLASS___EBookManifest, "purchasedBookManifest"));

    if (v76 == v77)
    {
      v78 = [v4 newITunesMetadataDictionary];
      if (v78)
      {
        if ((_BYTE)v155)
        {
          v79 = (void *)objc_claimAutoreleasedReturnValue( -[NSString stringByAppendingPathComponent:]( v61,  "stringByAppendingPathComponent:",  @"iTunesMetadata.plist"));
        }

        else
        {
          v80 = (void *)objc_claimAutoreleasedReturnValue(-[NSString stringByDeletingPathExtension](v61, "stringByDeletingPathExtension"));
          v79 = (void *)objc_claimAutoreleasedReturnValue([v80 stringByAppendingPathExtension:@"plist"]);

          uint64_t v8 = &ACSLocateCachingServer_ptr;
        }

        -[FinishDownloadStepOperation writeBinaryPropertyList:toPath:error:]( self,  "writeBinaryPropertyList:toPath:error:",  v78,  v79,  0LL);
      }
    }

    v62 = 0LL;
    v60 = v67;
LABEL_82:
    v81 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "storeMetadata", v129));
    v82 = (void *)objc_claimAutoreleasedReturnValue([v81 epubRightsData]);

    v138 = v61;
    v142 = v60;
    if (![v82 length]) {
      goto LABEL_113;
    }
    v132 = v62;
    v83 = (void *)objc_claimAutoreleasedReturnValue([v145 stringByAppendingPathComponent:@"META-INF"]);
    v136 = (void *)objc_claimAutoreleasedReturnValue([v83 stringByAppendingPathComponent:@"sinf.xml"]);
    v84 = (void *)objc_claimAutoreleasedReturnValue([v8[459] sharedDaemonConfig]);
    if (!v84) {
      v84 = (void *)objc_claimAutoreleasedReturnValue([v8[459] sharedConfig]);
    }
    v134 = v5;
    v85 = [v84 shouldLog];
    else {
      v86 = v85;
    }
    v87 = (os_log_s *)objc_claimAutoreleasedReturnValue([v84 OSLogObject]);
    if (os_log_type_enabled(v87, OS_LOG_TYPE_INFO)) {
      v88 = v86;
    }
    else {
      v88 = v86 & 2;
    }
    if ((_DWORD)v88)
    {
      v89 = (void *)objc_opt_class(self);
      v90 = v89;
      v91 = [v4 databaseID];
      v155 = 138412802;
      v156 = v89;
      v157 = 2048;
      v158 = (int64_t)v91;
      v159 = 2112;
      v160 = v83;
      LODWORD(v130) = 32;
      v92 = (void *)_os_log_send_and_compose_impl( v88,  0LL,  0LL,  0LL,  &_mh_execute_header,  v87,  1LL,  "%@: Writing EPR data for download: %lld to path: %@",  &v155,  v130);

      if (!v92) {
        goto LABEL_95;
      }
      v87 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v92,  4LL));
      free(v92);
      v129 = v87;
      SSFileLog(v84, @"%@");
    }

LABEL_95:
    v93 = objc_alloc_init(&OBJC_CLASS___NSFileManager);
    LOBYTE(v147) = 0;
    -[NSFileManager fileExistsAtPath:isDirectory:](v93, "fileExistsAtPath:isDirectory:", v83, &v147);
    if ((_BYTE)v147
      || (v149 = 0LL,
          -[NSFileManager createDirectoryAtPath:withIntermediateDirectories:attributes:error:]( v93,  "createDirectoryAtPath:withIntermediateDirectories:attributes:error:",  v83,  1LL,  0LL,  &v149),  (v94 = v149) == 0LL))
    {
      v148 = 0LL;
      objc_msgSend(v82, "writeToFile:options:error:", v136, 1, &v148, v129);
      v94 = v148;
      if (!v94) {
        goto LABEL_112;
      }
    }

    v131 = v83;
    v95 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig", v129));
    if (!v95) {
      v95 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    v96 = [v95 shouldLog];
    else {
      v97 = v96;
    }
    v98 = (os_log_s *)objc_claimAutoreleasedReturnValue([v95 OSLogObject]);
    if (os_log_type_enabled(v98, OS_LOG_TYPE_DEFAULT)) {
      v99 = v97;
    }
    else {
      v99 = v97 & 2;
    }
    if ((_DWORD)v99)
    {
      v100 = v82;
      v101 = (void *)objc_opt_class(self);
      v102 = v101;
      v103 = [v4 databaseID];
      v155 = 138413058;
      v156 = v101;
      v82 = v100;
      v157 = 2048;
      v158 = (int64_t)v103;
      v159 = 2112;
      v83 = v131;
      v160 = v131;
      v161 = 2112;
      v162 = v94;
      LODWORD(v130) = 42;
      v104 = (void *)_os_log_send_and_compose_impl( v99,  0LL,  0LL,  0LL,  &_mh_execute_header,  v98,  0LL,  "%@: Error EPR data for download: %lld to path: %@ error: %@",  &v155,  v130);

      if (!v104)
      {
LABEL_111:

LABEL_112:
        id v5 = v134;
        uint64_t v8 = &ACSLocateCachingServer_ptr;
        v61 = v138;
        v60 = v142;
        v62 = v132;
LABEL_113:
        if (self->_isSharedDownload) {
          v105 = v62;
        }
        else {
          v105 = 1;
        }
        if ((v105 & 1) != 0)
        {
          -[InstallEBookDownloadOperation _addPurchaseManifestItem:](self, "_addPurchaseManifestItem:", v62);
          v71 = v144;
          v64 = v145;
          v66 = v140;
LABEL_146:

          -[FinishDownloadResponse setMediaAssetInstallPath:](v71, "setMediaAssetInstallPath:", v61);
          goto LABEL_147;
        }

        v143 = v82;
        v147 = 1LL;
        v106 = (void *)objc_claimAutoreleasedReturnValue([@"Library" stringByAppendingPathComponent:v60]);
        v107 = (void *)objc_claimAutoreleasedReturnValue([@"Library" stringByAppendingPathComponent:@"Caches"]);
        v108 = (void *)objc_claimAutoreleasedReturnValue([v107 stringByAppendingPathComponent:@"Staging"]);
        v109 = (void *)objc_claimAutoreleasedReturnValue([v108 stringByAppendingPathComponent:v60]);

        v110 = v109;
        v111 = [v110 UTF8String];
        v112 = v106;
        v113 = (void *)container_stage_shared_system_content( "systemgroup.com.apple.media.shared.books",  v111,  [v112 UTF8String],  &v147);
        v114 = objc_claimAutoreleasedReturnValue([v8[459] sharedDaemonConfig]);
        v115 = (void *)v114;
        if (v113)
        {
          if (!v114) {
            v115 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
          }
          v116 = objc_msgSend(v115, "shouldLog", v129);
          v117 = (os_log_s *)objc_claimAutoreleasedReturnValue([v115 OSLogObject]);
          if (os_log_type_enabled(v117, OS_LOG_TYPE_INFO)) {
            v118 = v116;
          }
          else {
            v118 = v116 & 2;
          }
          if ((_DWORD)v118)
          {
            v119 = (void *)objc_opt_class(self);
            v155 = 138412546;
            v156 = v119;
            v157 = 2080;
            v158 = (int64_t)v113;
            v120 = v119;
            LODWORD(v130) = 22;
            v121 = (void *)_os_log_send_and_compose_impl( v118,  0LL,  0LL,  0LL,  &_mh_execute_header,  v117,  1LL,  "%@: Successfully staged path: %s",  &v155,  v130);

            if (!v121)
            {
LABEL_130:

              v61 = -[NSString initWithCString:encoding:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithCString:encoding:",  v113,  4LL);
              free(v113);
              v66 = v140;
LABEL_143:
              v71 = v144;
              v60 = v142;
              if (!v66) {
                -[InstallEBookDownloadOperation _addPurchaseManifestItem:](self, "_addPurchaseManifestItem:", 0LL);
              }

              v64 = v145;
              v82 = v143;
              goto LABEL_146;
            }

            v117 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v121,  4LL));
            free(v121);
            v129 = v117;
            SSFileLog(v115, @"%@");
          }

          goto LABEL_130;
        }

        if (!v114) {
          v115 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
        }
        v122 = objc_msgSend(v115, "shouldLog", v129);
        v123 = (os_log_s *)objc_claimAutoreleasedReturnValue([v115 OSLogObject]);
        if (os_log_type_enabled(v123, OS_LOG_TYPE_INFO)) {
          v124 = v122;
        }
        else {
          v124 = v122 & 2;
        }
        if ((_DWORD)v124)
        {
          v125 = (void *)objc_opt_class(self);
          v155 = 138412546;
          v156 = v125;
          v157 = 2048;
          v158 = v147;
          v126 = v125;
          LODWORD(v130) = 22;
          v127 = (void *)_os_log_send_and_compose_impl( v124,  0LL,  0LL,  0LL,  &_mh_execute_header,  v123,  1LL,  "%@: Failed to stage path: %llu",  &v155,  v130);

          if (!v127)
          {
LABEL_142:

            v128 = SSError(SSErrorDomain, 146LL, 0LL, 0LL);
            v66 = (void *)objc_claimAutoreleasedReturnValue(v128);

            goto LABEL_143;
          }

          v123 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v127,  4LL));
          free(v127);
          v129 = v123;
          SSFileLog(v115, @"%@");
        }

        goto LABEL_142;
      }

      v98 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v104,  4LL));
      free(v104);
      v129 = v98;
      SSFileLog(v95, @"%@");
    }

    goto LABEL_111;
  }

  v71 = v144;
  -[FinishDownloadResponse setError:](v144, "setError:", v65);
  -[FinishDownloadResponse setResult:](v144, "setResult:", 0LL);
LABEL_147:
  -[FinishDownloadStepOperation finishWithDownloadResponse:](self, "finishWithDownloadResponse:", v71, v129);
}
      }

      uint64_t v6 = [obj countByEnumeratingWithState:&v28 objects:v36 count:16];
    }

    while (v6);
  }

  if (-[NSMutableOrderedSet count](v4, "count")) {
    [v24 resetDownloadsWithIdentifiers:v4];
  }
  objc_msgSend(*(id *)(v27 + 48), "_retryRestoreIfNecessaryForTransaction:", v24, v22);

  return 1LL;
}
      }

      uint64_t v6 = [obj countByEnumeratingWithState:&v28 objects:v36 count:16];
    }

    while (v6);
  }

  if (-[NSMutableOrderedSet count](v4, "count")) {
    [v24 restartDownloadsWithIdentifiers:v4];
  }

  return 1LL;
}

void sub_10000AEA0(uint64_t a1)
{
  *(void *)(*(void *)(a1 + 32) + 8LL) = 0LL;
}

id sub_10000AF5C(uint64_t a1)
{
  id v2 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "_dictionary"), "objectForKey:", @"assetOrdering");
  __int128 v9 = 0u;
  __int128 v10 = 0u;
  __int128 v11 = 0u;
  __int128 v12 = 0u;
  id result = [v2 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (result)
  {
    id v4 = result;
    uint64_t v5 = *(void *)v10;
    do
    {
      uint64_t v6 = 0LL;
      do
      {
        if (*(void *)v10 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v7 = -[PurchaseManifestItem initWithManifestItemDictionary:]( objc_alloc(&OBJC_CLASS___PurchaseManifestItem),  "initWithManifestItemDictionary:",  *(void *)(*((void *)&v9 + 1) + 8LL * (void)v6));
        if (v7)
        {
          uint64_t v8 = v7;
          [*(id *)(a1 + 40) addObject:v7];
        }

        uint64_t v6 = (char *)v6 + 1;
      }

      while (v4 != v6);
      id result = [v2 countByEnumeratingWithState:&v9 objects:v13 count:16];
      id v4 = result;
    }

    while (result);
  }

  return result;
}

void sub_10000B0D8(uint64_t a1)
{
  id v43 = [*(id *)(a1 + 32) _dictionary];
  id v1 = (NSMutableArray *)objc_msgSend(objc_msgSend(v43, "objectForKey:", @"assetOrdering"), "mutableCopy");
  if (!v1) {
    id v1 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  }
  id v2 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
  __int128 v56 = 0u;
  __int128 v57 = 0u;
  __int128 v58 = 0u;
  __int128 v59 = 0u;
  id v3 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v1,  "countByEnumeratingWithState:objects:count:",  &v56,  v65,  16LL);
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v57;
    do
    {
      for (i = 0LL; i != v4; i = (char *)i + 1)
      {
        if (*(void *)v57 != v5) {
          objc_enumerationMutation(v1);
        }
        uint64_t v7 = -[PurchaseManifestItem initWithManifestItemDictionary:]( objc_alloc(&OBJC_CLASS___PurchaseManifestItem),  "initWithManifestItemDictionary:",  *(void *)(*((void *)&v56 + 1) + 8LL * (void)i));
        uint64_t v8 = -[PurchaseManifestItem relativeMetadataPath](v7, "relativeMetadataPath");
        if (v8) {
          -[NSMutableSet addObject:](v2, "addObject:", v8);
        }
      }

      id v4 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v1,  "countByEnumeratingWithState:objects:count:",  &v56,  v65,  16LL);
    }

    while (v4);
  }

  id v51 = [*(id *)(*(void *)(a1 + 32) + 24) stringByDeletingLastPathComponent];
  id v9 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  if (!v9) {
    id v9 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  unsigned int v10 = [v9 shouldLog];
  else {
    unsigned int v11 = v10;
  }
  __int128 v12 = (os_log_s *)[v9 OSLogObject];
  if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO)) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v11 & 2;
  }
  if ((_DWORD)v13)
  {
    uint64_t v14 = objc_opt_class(*(void *)(a1 + 32));
    int v61 = 138412546;
    uint64_t v62 = v14;
    __int16 v63 = 2112;
    id v64 = v51;
    uint64_t v15 = _os_log_send_and_compose_impl( v13,  0LL,  0LL,  0LL,  &_mh_execute_header,  v12,  1LL,  "%@: Rebuilding manifest for path: %@",  &v61,  22);
    if (v15)
    {
      id v16 = (void *)v15;
      __int128 v17 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v15, 4LL);
      free(v16);
      v41 = (int *)v17;
      SSFileLog(v9, @"%@");
    }
  }

  v42 = objc_alloc_init(&OBJC_CLASS___NSFileManager);
  __int128 v18 = -[NSFileManager contentsOfDirectoryAtPath:error:](v42, "contentsOfDirectoryAtPath:error:", v51, 0LL);
  __int128 v52 = 0u;
  __int128 v53 = 0u;
  __int128 v54 = 0u;
  __int128 v55 = 0u;
  id v19 = -[NSArray countByEnumeratingWithState:objects:count:]( v18,  "countByEnumeratingWithState:objects:count:",  &v52,  v60,  16LL);
  if (v19)
  {
    id v20 = v19;
    uint64_t v21 = *(void *)v53;
    uint64_t v50 = SSDownloadMetadataKeyAdditionalInfo;
    uint64_t v47 = SSDownloadMetadataKeyArtworkFileName;
    uint64_t v46 = SSDownloadMetadataKeyMediaFileName;
    uint64_t v45 = SSDownloadMetadataKeyXMLFeedFileName;
    v48 = v18;
    v49 = v1;
    do
    {
      for (j = 0LL; j != v20; j = (char *)j + 1)
      {
        if (*(void *)v53 != v21) {
          objc_enumerationMutation(v18);
        }
        __int128 v23 = *(void **)(*((void *)&v52 + 1) + 8LL * (void)j);
        if (objc_msgSend(objc_msgSend(v23, "pathExtension", v41), "isEqualToString:", @"plist")
          && (-[NSMutableSet containsObject:](v2, "containsObject:", v23) & 1) == 0)
        {
          __int128 v24 = -[StoreDownload initWithContentsOfFile:]( [StoreDownload alloc],  "initWithContentsOfFile:",  [v51 stringByAppendingPathComponent:v23]);
          id v25 = -[StoreDownload valueForMetadataKey:](v24, "valueForMetadataKey:", v50);
          uint64_t v26 = objc_opt_class(&OBJC_CLASS___NSDictionary);
          if ((objc_opt_isKindOfClass(v25, v26) & 1) != 0)
          {
            v27 = objc_alloc_init(&OBJC_CLASS___PurchaseManifestItem);
            -[PurchaseManifestItem setRelativeMetadataPath:](v27, "setRelativeMetadataPath:", v23);
            id v28 = [v25 objectForKey:v47];
            uint64_t v29 = objc_opt_class(&OBJC_CLASS___NSString);
            if ((objc_opt_isKindOfClass(v28, v29) & 1) != 0) {
              -[PurchaseManifestItem setRelativeArtworkPath:](v27, "setRelativeArtworkPath:", v28);
            }
            id v30 = [v25 objectForKey:v46];
            uint64_t v31 = objc_opt_class(&OBJC_CLASS___NSString);
            if ((objc_opt_isKindOfClass(v30, v31) & 1) != 0) {
              -[PurchaseManifestItem setRelativeMediaAssetPath:](v27, "setRelativeMediaAssetPath:", v30);
            }
            id v32 = [v25 objectForKey:v45];
            uint64_t v33 = objc_opt_class(&OBJC_CLASS___NSString);
            if ((objc_opt_isKindOfClass(v32, v33) & 1) != 0) {
              -[PurchaseManifestItem setRelativeFeedAssetPath:](v27, "setRelativeFeedAssetPath:", v32);
            }
            id v34 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
            if (!v34) {
              id v34 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
            }
            LODWORD(v35) = [v34 shouldLog];
            id v36 = (os_log_s *)[v34 OSLogObject];
            if (os_log_type_enabled(v36, OS_LOG_TYPE_INFO)) {
              uint64_t v35 = v35;
            }
            else {
              v35 &= 2u;
            }
            if ((_DWORD)v35)
            {
              uint64_t v37 = objc_opt_class(*(void *)(a1 + 32));
              int v61 = 138412546;
              uint64_t v62 = v37;
              __int16 v63 = 2112;
              id v64 = v23;
              v41 = &v61;
              uint64_t v38 = _os_log_send_and_compose_impl( v35,  0LL,  0LL,  0LL,  &_mh_execute_header,  v36,  1LL,  "%@: Adding file to purchase manifest: %@");
              if (v38)
              {
                v39 = (void *)v38;
                v40 = +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v38,  4LL);
                free(v39);
                v41 = (int *)v40;
                SSFileLog(v34, @"%@");
              }
            }

            -[NSMutableSet addObject:](v2, "addObject:", v23, v41);
            id v1 = v49;
            -[NSMutableArray addObject:]( v49,  "addObject:",  -[PurchaseManifestItem manifestItemDictionary](v27, "manifestItemDictionary"));

            __int128 v18 = v48;
          }
        }
      }

      id v20 = -[NSArray countByEnumeratingWithState:objects:count:]( v18,  "countByEnumeratingWithState:objects:count:",  &v52,  v60,  16LL);
    }

    while (v20);
  }

  [v43 setObject:v1 forKey:@"assetOrdering"];
  [*(id *)(a1 + 32) _writeToFile];
}

void sub_10000BEE4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, char a47)
{
}

void sub_10000BF74(uint64_t a1, uint64_t a2)
{
}

void sub_10000BF84(uint64_t a1)
{
}

id sub_10000BF90(uint64_t a1)
{
  id v36 = [*(id *)(a1 + 32) _dictionary];
  id v2 = [v36 objectForKey:@"assetOrdering"];
  uint64_t v3 = (uint64_t)[v2 count];
  if (v3 >= 1)
  {
    uint64_t v4 = v3;
    uint64_t v5 = &ACSLocateCachingServer_ptr;
    uint64_t v37 = v2;
    do
    {
      uint64_t v6 = v4--;
      id v7 = [v2 objectAtIndex:v4];
      uint64_t v8 = objc_opt_class(v5[360]);
      if ((objc_opt_isKindOfClass(v7, v8) & 1) != 0)
      {
        id v9 = [v7 objectForKey:@"relativeMediaAssetPath"];
        uint64_t v10 = objc_opt_class(&OBJC_CLASS___NSString);
        if ((objc_opt_isKindOfClass(v9, v10) & 1) != 0)
        {
          if ([*(id *)(a1 + 40) containsObject:v9])
          {
            id v11 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
            if (!v11) {
              id v11 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
            }
            unsigned int v12 = [v11 shouldLog];
            else {
              LODWORD(v13) = v12;
            }
            uint64_t v14 = (os_log_s *)[v11 OSLogObject];
            if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO)) {
              uint64_t v13 = v13;
            }
            else {
              v13 &= 2u;
            }
            if ((_DWORD)v13)
            {
              uint64_t v15 = objc_opt_class(*(void *)(a1 + 32));
              int v38 = 138412546;
              uint64_t v39 = v15;
              __int16 v40 = 2112;
              id v41 = v9;
              LODWORD(v35) = 22;
              uint64_t v16 = _os_log_send_and_compose_impl( v13,  0LL,  0LL,  0LL,  &_mh_execute_header,  v14,  1LL,  "%@: Removing item from purchase manifest: %@",  &v38,  v35);
              if (v16)
              {
                __int128 v17 = (void *)v16;
                __int128 v18 = +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v16,  4LL);
                free(v17);
                id v34 = v18;
                SSFileLog(v11, @"%@");
              }
            }

            objc_msgSend( *(id *)(a1 + 48),  "addObject:",  objc_msgSend(*(id *)(a1 + 56), "stringByAppendingPathComponent:", v9, v34));
            for (uint64_t i = 0LL; i != 3; ++i)
            {
              id v20 = [v7 objectForKey:off_10034AEB8[i]];
              uint64_t v21 = objc_opt_class(&OBJC_CLASS___NSString);
              if ((objc_opt_isKindOfClass(v20, v21) & 1) != 0) {
                objc_msgSend( *(id *)(a1 + 64),  "addObject:",  objc_msgSend(*(id *)(a1 + 56), "stringByAppendingPathComponent:", v20));
              }
            }

            id v2 = v37;
            [v37 removeObjectAtIndex:v4];
            uint64_t v5 = &ACSLocateCachingServer_ptr;
          }
        }
      }
    }

    while (v6 > 1);
  }

  if (v2) {
    [v36 setObject:v2 forKey:@"assetOrdering"];
  }
  id v22 = [*(id *)(a1 + 48) count];
  if (v22 != [*(id *)(a1 + 40) count])
  {
    id v23 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v23) {
      id v23 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v24 = [v23 shouldLog];
    else {
      LODWORD(v25) = v24;
    }
    uint64_t v26 = (os_log_s *)[v23 OSLogObject];
    if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v25 = v25;
    }
    else {
      v25 &= 2u;
    }
    if ((_DWORD)v25)
    {
      uint64_t v27 = objc_opt_class(*(void *)(a1 + 32));
      id v28 = [*(id *)(a1 + 40) count];
      uint64_t v29 = [*(id *)(a1 + 48) count];
      int v38 = 138412546;
      uint64_t v39 = v27;
      __int16 v40 = 2048;
      id v41 = (id)(v28 - v29);
      LODWORD(v35) = 22;
      uint64_t v30 = _os_log_send_and_compose_impl( v25,  0LL,  0LL,  0LL,  &_mh_execute_header,  v26,  0LL,  "%@: Missing %lu paths from manifest",  &v38,  v35);
      if (v30)
      {
        uint64_t v31 = (void *)v30;
        id v32 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v30, 4LL);
        free(v31);
        id v34 = v32;
        SSFileLog(v23, @"%@");
      }
    }

    *(void *)(*(void *)(*(void *)(a1 + 72) + 8LL) + 40LL) =  +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  SSErrorDomain,  600LL,  0LL);
  }

  id result = objc_msgSend(*(id *)(a1 + 32), "_writeToFile", v34);
  return result;
}

void sub_10000C42C(uint64_t a1)
{
  id v2 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  if (SSXPCConnectionHasEntitlement(*(void *)(a1 + 32), kSSITunesStorePrivateEntitlement)
    && (int64_t int64 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 40), "1"),
        int64_t v4 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 40), "2"),
        (id v5 = [*(id *)(a1 + 48) _sharedManifestWithManifestType:int64]) != 0))
  {
    __int128 v18 = v5;
    id v6 = [v5 purchaseManifestItems];
    __int128 v19 = 0u;
    __int128 v20 = 0u;
    __int128 v21 = 0u;
    __int128 v22 = 0u;
    id v7 = [v6 countByEnumeratingWithState:&v19 objects:v23 count:16];
    if (v7)
    {
      id v8 = v7;
      uint64_t v9 = *(void *)v20;
      do
      {
        uint64_t v10 = 0LL;
        do
        {
          if (*(void *)v20 != v9) {
            objc_enumerationMutation(v6);
          }
          id v11 = *(void **)(*((void *)&v19 + 1) + 8LL * (void)v10);
          switch(v4)
          {
            case 0LL:
              id v12 = [v11 relativeArtworkPath];
              goto LABEL_13;
            case 1LL:
              id v12 = [v11 relativeMediaAssetPath];
              goto LABEL_13;
            case 2LL:
              id v12 = [v11 relativeMetadataPath];
              goto LABEL_13;
            case 3LL:
              id v12 = [v11 relativeFeedAssetPath];
LABEL_13:
              id v13 = v12;
              break;
            default:
              id v13 = 0LL;
              break;
          }

          uint64_t v14 = objc_opt_class(&OBJC_CLASS___NSString);
          if ((objc_opt_isKindOfClass(v13, v14) & 1) != 0) {
            -[NSMutableArray addObject:](v2, "addObject:", v13);
          }
          uint64_t v10 = (char *)v10 + 1;
        }

        while (v8 != v10);
        id v15 = [v6 countByEnumeratingWithState:&v19 objects:v23 count:16];
        id v8 = v15;
      }

      while (v15);
    }

    id v16 = objc_msgSend(objc_msgSend(v18, "path"), "stringByDeletingLastPathComponent");
  }

  else
  {
    id v16 = 0LL;
  }

  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 40));
  SSXPCDictionarySetCFObject(reply, "0", v16);
  SSXPCDictionarySetCFObject(reply, "1", v2);
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 32), reply);
  xpc_release(reply);
}

void sub_10000C70C(uint64_t a1)
{
  if (SSXPCConnectionHasEntitlement(*(void *)(a1 + 32), kSSITunesStorePrivateEntitlement)) {
    objc_msgSend( objc_msgSend( *(id *)(a1 + 48),  "_sharedManifestWithManifestType:",  xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 40), "1")),  "rebuildManifest");
  }
  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 40));
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 32), reply);
  xpc_release(reply);
}

void sub_10000C7D0(uint64_t a1)
{
  id v12 = 0LL;
  if ((SSXPCConnectionHasEntitlement(*(void *)(a1 + 32), kSSITunesStorePrivateEntitlement) & 1) != 0
    || (SSIsDaemon() & 1) != 0)
  {
    id v2 = (void *)SSXPCDictionaryCopyCFObject(*(void *)(a1 + 40), "2");
    uint64_t v3 = objc_opt_class(&OBJC_CLASS___NSString);
    if ((objc_opt_isKindOfClass(v2, v3) & 1) != 0)
    {
      int64_t v4 = -[NSMutableSet initWithObjects:](objc_alloc(&OBJC_CLASS___NSMutableSet), "initWithObjects:", v2, 0LL, v12);
    }

    else
    {
      uint64_t v5 = objc_opt_class(&OBJC_CLASS___NSArray);
      if ((objc_opt_isKindOfClass(v2, v5) & 1) == 0) {
        goto LABEL_11;
      }
      int64_t v4 = -[NSMutableSet initWithArray:](objc_alloc(&OBJC_CLASS___NSMutableSet), "initWithArray:", v2);
    }

    id v6 = v4;
    if (v4)
    {
      id v7 = objc_msgSend( objc_msgSend( *(id *)(a1 + 48),  "_sharedManifestWithManifestType:",  xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 40), "1")),  "removeItemsWithAssetPaths:error:",  v4,  &v12);
      id v8 = [v7 count];
      BOOL v9 = v8 == -[NSMutableSet count](v6, "count");
      if (v9)
      {
        id v10 = 0LL;
      }

      else
      {
        -[NSMutableSet minusSet:](v6, "minusSet:", v7);
        id v10 = -[NSMutableSet allObjects](v6, "allObjects");
      }

      goto LABEL_14;
    }

LABEL_11:
    id v10 = 0LL;
    BOOL v9 = 0;
LABEL_14:

    goto LABEL_15;
  }

  id v10 = 0LL;
  BOOL v9 = 0;
  id v12 = +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  SSErrorDomain,  107LL,  0LL);
LABEL_15:
  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 40));
  xpc_dictionary_set_BOOL(reply, "0", v9);
  SSXPCDictionarySetCFObject(reply, "1", v12);
  SSXPCDictionarySetCFObject(reply, "2", v10);
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 32), reply);
  xpc_release(reply);
}

  id v12 = objc_alloc_init(&OBJC_CLASS___StoreKitClient);
  -[NSMutableArray addObject:](self->_clients, "addObject:", v12);
  id v13 = v12;
LABEL_12:
  if (a4) {
    -[StoreKitClient setPaymentQueueClient:](v12, "setPaymentQueueClient:", a4);
  }
  if (!-[StoreKitClient XPCClient](v12, "XPCClient"))
  {
    uint64_t v14 = -[XPCClient initWithInputConnection:](objc_alloc(&OBJC_CLASS___XPCClient), "initWithInputConnection:", a3);
    -[StoreKitClient setXPCClient:](v12, "setXPCClient:", v14);
  }

  return v12;
}

  id v10 = -[StoreKitClient initWithMicroPaymentClientID:]( objc_alloc(&OBJC_CLASS___StoreKitClient),  "initWithMicroPaymentClientID:",  a3);
  -[NSMutableArray addObject:](self->_clients, "addObject:", v10);
  id v11 = v10;
  return v10;
}

  return v6;
}

  BOOL v9 = [v2 copyUserNotification];
  if (v9)
  {
    id v10 = v9;
    if (v2 == *(void **)(a1 + 32))
    {
      [*(id *)(*(void *)(a1 + 40) + 16) addObject:v2];
    }

    else
    {
      id v11 = [v2 _notification];
      if (v11)
      {
        objc_msgSend( +[UserNotificationCenter defaultCenter](UserNotificationCenter, "defaultCenter"),  "updateUserNotification:withUserNotification:",  v11,  v10);
LABEL_17:

        return;
      }
    }

    [*(id *)(a1 + 40) _scheduleErrorDisplay:v2];
    goto LABEL_17;
  }

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

  id v11 = v30[3];
  if (!v11)
  {
    unsigned int v24 = 0LL;
    id v12 = +[NSKeyedArchiver archivedDataWithRootObject:requiringSecureCoding:error:]( &OBJC_CLASS___NSKeyedArchiver,  "archivedDataWithRootObject:requiringSecureCoding:error:",  a3,  1LL,  &v24);
    if (v24)
    {
      id v13 = +[SSLogConfig sharedStoreServicesConfig](&OBJC_CLASS___SSLogConfig, "sharedStoreServicesConfig");
      if (!v13) {
        id v13 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
      }
      LODWORD(v14) = [v13 shouldLog];
      id v15 = [v13 shouldLogToDisk];
      id v16 = (os_log_s *)[v13 OSLogObject];
      __int128 v17 = v16;
      if (v15) {
        LODWORD(v14) = v14 | 2;
      }
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        uint64_t v14 = v14;
      }
      else {
        v14 &= 2u;
      }
      if ((_DWORD)v14)
      {
        __int128 v18 = objc_opt_class(self);
        uint64_t v33 = 138543618;
        id v34 = v18;
        uint64_t v35 = 2114;
        id v36 = v24;
        __int128 v19 = _os_log_send_and_compose_impl( v14,  0LL,  0LL,  0LL,  &_mh_execute_header,  v17,  16LL,  "%{public}@: Failed to archive policy. Error = %{public}@",  &v33,  22);
        if (v19)
        {
          __int128 v20 = (void *)v19;
          +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v19, 4LL);
          free(v20);
          SSFileLog(v13, @"%@");
        }
      }
    }

    if (v12)
    {
      database = self->_database;
      v23[0] = _NSConcreteStackBlock;
      v23[1] = 3221225472LL;
      v23[2] = sub_100136778;
      v23[3] = &unk_10034F740;
      v23[5] = self;
      v23[6] = &v29;
      v23[4] = v12;
      -[DownloadsDatabase modifyUsingTransactionBlock:](database, "modifyUsingTransactionBlock:", v23);
    }

    id v11 = v30[3];
  }

  _Block_object_dispose(&v29, 8);
  return v11;
}

  id v16 = [v8 downloadKind];
  if (!v16) {
    return (int64_t)v11;
  }
  __int128 v17 = v16;
  if (![v9 count] || v11 != (id)v7)
  {
    __int128 v18 = objc_msgSend( objc_msgSend( +[ISURLBagCache sharedCache](ISURLBagCache, "sharedCache"),  "URLBagForContext:",  +[SSURLBagContext contextWithBagType:]( SSURLBagContext,  "contextWithBagType:",  objc_msgSend(v8, "URLBagType"))),  "networkConstraintsForDownloadKind:",  v17);
    if (v18)
    {
      __int128 v19 = [v18 sizeLimitForNetworkType:a4];
      else {
        __int128 v20 = (int64_t)v11;
      }
      if (v11 == (id)SSDownloadSizeLimitNoLimit || v11 == (id)v7) {
        return (int64_t)v19;
      }
      else {
        return v20;
      }
    }

    else if (a4)
    {
      else {
        return SSDownloadSizeLimitNoLimit;
      }
    }
  }

  return v7;
}

  [v9 setDelegate:self];
  objc_msgSend( v9,  "_setLoadsHTTPFailures:",  -[URLConnectionRequestOperation sendsResponseForHTTPFailures](self, "sendsResponseForHTTPFailures"));
  [v9 setTracksPerformanceMetrics:1];
  id v13 = -[URLConnectionRequestOperation runSubOperation:returningError:]( self,  "runSubOperation:returningError:",  v9,  &v23);
  uint64_t v14 = [v9 response];
  if ((_DWORD)v13)
  {
    id v15 = v14;
    id v16 = (NSData *)objc_msgSend(objc_msgSend(v9, "dataProvider"), "output");
    __int128 v17 = objc_opt_class(&OBJC_CLASS___NSDictionary);
    if ((objc_opt_isKindOfClass(v16, v17) & 1) != 0)
    {
      if (-[SSURLRequestProperties isITunesStoreRequest](v7, "isITunesStoreRequest")
        && -[SSURLRequestProperties KBSyncType](v7, "KBSyncType"))
      {
        -[URLConnectionRequestOperation _importKeybagFromDictionary:](self, "_importKeybagFromDictionary:", v16);
      }

      id v16 = +[NSPropertyListSerialization dataWithPropertyList:format:options:error:]( &OBJC_CLASS___NSPropertyListSerialization,  "dataWithPropertyList:format:options:error:",  v16,  100LL,  0LL,  0LL);
    }

    else
    {
      __int128 v18 = objc_opt_class(&OBJC_CLASS___NSData);
      if ((objc_opt_isKindOfClass(v16, v18) & 1) != 0)
      {
        if (-[SSURLRequestProperties isITunesStoreRequest](v7, "isITunesStoreRequest"))
        {
          if (-[SSURLRequestProperties KBSyncType](v7, "KBSyncType"))
          {
            __int128 v19 = objc_msgSend( +[SSVURLProtocolConsumer consumer](SSVURLProtocolConsumer, "consumer"),  "objectForData:response:error:",  v16,  v15,  0);
            __int128 v20 = objc_opt_class(&OBJC_CLASS___NSDictionary);
            if ((objc_opt_isKindOfClass(v19, v20) & 1) != 0) {
              -[URLConnectionRequestOperation _importKeybagFromDictionary:](self, "_importKeybagFromDictionary:", v19);
            }
          }
        }
      }

      else
      {
        id v16 = 0LL;
      }
    }

    -[URLConnectionRequestOperation lock](self, "lock");

    __int128 v22 = -[SSURLConnectionResponse initWithURLResponse:bodyData:]( objc_alloc(&OBJC_CLASS___SSURLConnectionResponse),  "initWithURLResponse:bodyData:",  v15,  v16);
    self->_response = v22;
    -[SSURLConnectionResponse setMetricsPageEvent:]( v22,  "setMetricsPageEvent:",  -[URLConnectionRequestOperation _metricsPageEventWithResponse:performance:]( self,  "_metricsPageEventWithResponse:performance:",  v15,  [v9 performanceMetrics]));
    -[URLConnectionRequestOperation unlock](self, "unlock");
  }

  [v9 setDelegate:0];
  -[URLConnectionRequestOperation setError:](self, "setError:", v23);
  -[URLConnectionRequestOperation setSuccess:](self, "setSuccess:", v13);
}

  for (uint64_t i = 2LL; i != -1; --i)
  return v12;
}

id sub_10000CA54(uint64_t a1)
{
  return objc_msgSend( +[Daemon daemon](Daemon, "daemon"),  "releaseKeepAliveAssertion:",  @"PurchaseManifest");
}

void sub_10000CAB4(_Unwind_Exception *a1)
{
}

LABEL_36:
  -[FamilyCircleOperation setError:](self, "setError:", v33, v31);
  -[FamilyCircleOperation setSuccess:](self, "setSuccess:", v14 != 0LL);
  self->_familyCircle = (SSFamilyCircle *)v14;
}

      break;
    }

    uint64_t v5 = v30;
    id v6 = objc_alloc_init(&OBJC_CLASS___NSFileManager);
    id v7 = (void *)objc_claimAutoreleasedReturnValue( +[PromotedIAPDatabaseSchema databasePath_11_0]( &OBJC_CLASS___PromotedIAPDatabaseSchema,  "databasePath_11_0"));
    uint64_t v31 = 0u;
    id v32 = 0u;
    uint64_t v33 = 0u;
    id v34 = 0u;
    id v8 = [&off_10036E400 countByEnumeratingWithState:&v31 objects:&v35 count:16];
    if (v8)
    {
      BOOL v9 = v8;
      id v10 = *(void *)v32;
      do
      {
        for (uint64_t i = 0LL; i != v9; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v32 != v10) {
            objc_enumerationMutation(&off_10036E400);
          }
          id v12 = (void *)objc_claimAutoreleasedReturnValue( [v7 stringByAppendingString:*(void *)(*((void *)&v31 + 1) + 8 * (void)i)]);
          -[NSFileManager removeItemAtPath:error:](v6, "removeItemAtPath:error:", v12, 0LL);
        }

        BOOL v9 = [&off_10036E400 countByEnumeratingWithState:&v31 objects:&v35 count:16];
      }

      while (v9);
    }

    if (![v5 executeSQL:@"PRAGMA legacy_file_format = 0;"]
      || !objc_msgSend( v5,  "executeSQL:",  @"CREATE TABLE IF NOT EXISTS promoted_iaps_visibility_table (product_id TEXT, bundle_id TEXT, visibility INTEGER, pid INTEGER PRIMARY KEY);")
      || (objc_msgSend( v5,  "executeSQL:",  @"CREATE TABLE IF NOT EXISTS promoted_iaps_order_table (product_id TEXT, bundle_id TEXT, iap_order INTEGER, pid INTEGER PRIMARY KEY);") & 1) == 0)
    {

      uint64_t v29 = 0LL;
LABEL_17:
      uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      id v15 = [v14 shouldLog];
      else {
        id v16 = v15;
      }
      __int128 v17 = (os_log_s *)objc_claimAutoreleasedReturnValue([v14 OSLogObject]);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        __int128 v18 = v16;
      }
      else {
        __int128 v18 = v16 & 2;
      }
      if ((_DWORD)v18)
      {
        __int128 v19 = (void *)objc_opt_class(a1);
        uint64_t v35 = 138543618;
        id v36 = v19;
        uint64_t v37 = 2048;
        int v38 = v29;
        __int128 v20 = v19;
        __int128 v21 = _os_log_send_and_compose_impl( v18,  0LL,  0LL,  0LL,  &_mh_execute_header,  v17,  16LL,  "[%{public}@] Failed updating Promoted IAP Database to version %li",  &v35,  22);
        goto LABEL_33;
      }

  [*(id *)(a1 + 32) setExplicitPreferencesDisabled:v7];
  if ((v7 & 1) == 0)
  {
    uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue([v9[341] sharedConnection]);
    uint64_t v31 = MCFeatureExplicitContentAllowed;
    id v32 = [v30 effectiveBoolValueForSetting:MCFeatureExplicitContentAllowed];

    if (!v32)
    {
      uint64_t v37 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
      if (!v37) {
        uint64_t v37 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      v44 = [v37 shouldLog];
      uint64_t v39 = (os_log_s *)objc_claimAutoreleasedReturnValue([v37 OSLogObject]);
      if (os_log_type_enabled(v39, OS_LOG_TYPE_INFO)) {
        uint64_t v45 = v44;
      }
      else {
        uint64_t v45 = v44 & 2;
      }
      if (!(_DWORD)v45) {
        goto LABEL_60;
      }
      uint64_t v46 = (void *)objc_opt_class(*(void *)(a1 + 32));
      __int128 v58 = 138543618;
      __int128 v59 = v46;
      v60 = 1024;
      int v61 = (int)v5;
      v42 = v46;
      LODWORD(v55) = 18;
      id v43 = _os_log_send_and_compose_impl( v45,  0LL,  0LL,  0LL,  &_mh_execute_header,  v39,  1LL,  "%{public}@: No explicit restriction in place. Setting to [bagExplicitOff: %d]",  &v58,  v55);
      goto LABEL_58;
    }

    uint64_t v33 = [*(id *)(a1 + 32) lastChangeInducingBagExplicitOff:0];
    id v34 = (v32 != 1) ^ v33;
    uint64_t v35 = v5 ^ v33;
    id v36 = objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    uint64_t v37 = (void *)v36;
    if ((v34 & 1) == 0 && v35)
    {
      if (!v36) {
        uint64_t v37 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      int v38 = [v37 shouldLog];
      uint64_t v39 = (os_log_s *)objc_claimAutoreleasedReturnValue([v37 OSLogObject]);
      if (os_log_type_enabled(v39, OS_LOG_TYPE_INFO)) {
        __int16 v40 = v38;
      }
      else {
        __int16 v40 = v38 & 2;
      }
      if (!(_DWORD)v40) {
        goto LABEL_60;
      }
      id v41 = (void *)objc_opt_class(*(void *)(a1 + 32));
      __int128 v58 = 138543618;
      __int128 v59 = v41;
      v60 = 1024;
      int v61 = (int)v5;
      v42 = v41;
      LODWORD(v55) = 18;
      id v43 = _os_log_send_and_compose_impl( v40,  0LL,  0LL,  0LL,  &_mh_execute_header,  v39,  1LL,  "%{public}@: User hasn't overriden explicit restriction, but bag default has changed. Setting new restricti on to [bagExplicitOff: %d]",  &v58,  v55);
LABEL_58:
      uint64_t v47 = (void *)v43;

      if (!v47)
      {
LABEL_61:

        v48 = (void *)objc_claimAutoreleasedReturnValue(+[MCProfileConnection sharedConnection](&OBJC_CLASS___MCProfileConnection, "sharedConnection"));
        [v48 setBoolValue:v5 ^ 1 forSetting:v31];

        [*(id *)(a1 + 32) setLastChangeInducingBagExplicitOff:v5];
        goto LABEL_74;
      }

      uint64_t v39 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v47,  4LL));
      free(v47);
      SSFileLog(v37, @"%@");
LABEL_60:

      goto LABEL_61;
    }

    if (!v36) {
      uint64_t v37 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    v49 = [v37 shouldLog];
    uint64_t v50 = (os_log_s *)objc_claimAutoreleasedReturnValue([v37 OSLogObject]);
    if (os_log_type_enabled(v50, OS_LOG_TYPE_INFO)) {
      id v51 = v49;
    }
    else {
      id v51 = v49 & 2;
    }
    if ((_DWORD)v51)
    {
      __int128 v52 = (void *)objc_opt_class(*(void *)(a1 + 32));
      __int128 v58 = 138543874;
      __int128 v59 = v52;
      v60 = 1024;
      int v61 = v34;
      uint64_t v62 = 1024;
      __int16 v63 = v35;
      __int128 v53 = v52;
      LODWORD(v55) = 24;
      __int128 v54 = (void *)_os_log_send_and_compose_impl( v51,  0LL,  0LL,  0LL,  &_mh_execute_header,  v50,  1LL,  "%{public}@: No need to update explicit restrictions. [isUserOverriden: %d, bagValueChangedSinceLas tChangeInducingExplicitOff: %d]",  &v58,  v55);

      if (!v54)
      {
LABEL_73:

        goto LABEL_74;
      }

      uint64_t v50 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v54,  4LL));
      free(v54);
      SSFileLog(v37, @"%@");
    }

    goto LABEL_73;
  }

id sub_10000DE28(uint64_t a1, void *a2)
{
  id result = objc_msgSend( objc_msgSend(objc_msgSend(a2, "iCloudIdentifier"), "stringValue"),  "isEqualToString:",  *(void *)(a1 + 32));
  if ((_DWORD)result) {
    return objc_msgSend(objc_msgSend(a2, "iTunesIdentifier"), "isEqualToNumber:", *(void *)(a1 + 40));
  }
  return result;
}

id sub_10000DE78(uint64_t a1, void *a2)
{
  return objc_msgSend(objc_msgSend(a2, "iTunesIdentifier"), "isEqualToNumber:", *(void *)(a1 + 32));
}

int64_t sub_10000DEA0(id a1, id a2, id a3)
{
  if ([a2 firstName] || (int64_t result = (int64_t)objc_msgSend(a3, "firstName")) != 0)
  {
    if (([a2 isMe] & 1) != 0 || !objc_msgSend(a3, "firstName"))
    {
      return -1LL;
    }

    else if (([a3 isMe] & 1) != 0 || !objc_msgSend(a2, "firstName"))
    {
      return 1LL;
    }

    else
    {
      return (int64_t)objc_msgSend( objc_msgSend(a2, "firstName"),  "localizedCaseInsensitiveCompare:",  objc_msgSend(a3, "firstName"));
    }
  }

  return result;
}

uint64_t sub_10000EC38(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_10000EC48(uint64_t a1)
{
}

void sub_10000EC50(uint64_t a1)
{
}

void sub_10000ECF8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void **)(a1 + 40);
  uint64_t v5 = *(void **)(v2 + 32);
  int64_t v4 = (id *)(v2 + 32);
  if (v5 != v3) {
    objc_storeStrong(v4, v3);
  }
}

uint64_t sub_10000ED74(uint64_t result)
{
  *(_BYTE *)(*(void *)(result + 32) + 64LL) = *(_BYTE *)(result + 40);
  return result;
}

uint64_t sub_10000EDE0(uint64_t result)
{
  *(_BYTE *)(*(void *)(result + 32) + 65LL) = *(_BYTE *)(result + 40);
  return result;
}

uint64_t sub_10000EE80(uint64_t result)
{
  *(_BYTE *)(*(void *)(*(void *)(result + 40) + 8LL) + 24LL) = *(_BYTE *)(*(void *)(result + 32) + 64LL);
  return result;
}

uint64_t sub_10000EF24(uint64_t result)
{
  *(_BYTE *)(*(void *)(*(void *)(result + 40) + 8LL) + 24LL) = *(_BYTE *)(*(void *)(result + 32) + 65LL);
  return result;
}

void sub_100010348( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location, uint64_t a20, char a21)
{
}

uint64_t sub_100010398(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1000103A8(uint64_t a1)
{
}

void sub_1000103B0(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v7 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (!v6 || *(void *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 40LL))
  {
    BOOL v9 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v9) {
      BOOL v9 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v10 = [v9 shouldLog];
    else {
      unsigned int v11 = v10;
    }
    id v12 = (os_log_s *)objc_claimAutoreleasedReturnValue([v9 OSLogObject]);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v13 = v11;
    }
    else {
      uint64_t v13 = v11 & 2;
    }
    if ((_DWORD)v13)
    {
      uint64_t v14 = (void *)objc_opt_class(WeakRetained);
      uint64_t v15 = a1;
      id v16 = v6;
      id v17 = WeakRetained;
      __int128 v18 = v7;
      __int128 v19 = v14;
      id v52 = v14;
      __int128 v20 = (void *)objc_claimAutoreleasedReturnValue([v18 localizedDescription]);
      int v53 = 138412546;
      id v54 = v19;
      id v7 = v18;
      id WeakRetained = v17;
      id v6 = v16;
      a1 = v15;
      __int16 v55 = 2112;
      __int128 v56 = v20;
      __int128 v21 = (void *)_os_log_send_and_compose_impl( v13,  0LL,  0LL,  0LL,  &_mh_execute_header,  v12,  0LL,  "%@: Failed to retrieve conditions: %@",  &v53,  22);

      if (v21)
      {
        __int128 v22 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v21,  4LL));
        free(v21);
        SSFileLog(v9, @"%@");
      }
    }

    else
    {
    }

    id v23 = (id *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 40LL);
    unsigned int v24 = a3;
LABEL_16:
    objc_storeStrong(v23, v24);
    goto LABEL_17;
  }

  if ([v6 isUserAccepted])
  {
    uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v25) {
      uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v26 = [v25 shouldLog];
    uint64_t v27 = (os_log_s *)objc_claimAutoreleasedReturnValue([v25 OSLogObject]);
    if (os_log_type_enabled(v27, OS_LOG_TYPE_DEBUG)) {
      uint64_t v28 = v26;
    }
    else {
      uint64_t v28 = v26 & 2;
    }
    if ((_DWORD)v28)
    {
      int v53 = 138412290;
      id v54 = (id)objc_opt_class(WeakRetained);
      id v29 = v54;
      uint64_t v30 = (void *)_os_log_send_and_compose_impl( v28,  0LL,  0LL,  0LL,  &_mh_execute_header,  v27,  2LL,  "%@: Terms and conditions are valid.",  &v53,  12);

      if (v30)
      {
        uint64_t v31 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v30,  4LL));
        free(v30);
        SSFileLog(v25, @"%@");
      }
    }

    else
    {
    }

    *(_BYTE *)(*(void *)(a1 + 32) + 129LL) = 1;
    *(_BYTE *)(*(void *)(a1 + 32) + 128LL) = 1;
  }

  else
  {
    id v32 = (void *)objc_claimAutoreleasedReturnValue([v6 currentText]);
    id v33 = [v32 length];

    uint64_t v34 = objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    uint64_t v35 = (void *)v34;
    if (v33)
    {
      if (!v34) {
        uint64_t v35 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      unsigned int v36 = [v35 shouldLog];
      uint64_t v37 = (os_log_s *)objc_claimAutoreleasedReturnValue([v35 OSLogObject]);
      if (os_log_type_enabled(v37, OS_LOG_TYPE_DEBUG)) {
        uint64_t v38 = v36;
      }
      else {
        uint64_t v38 = v36 & 2;
      }
      if ((_DWORD)v38)
      {
        int v53 = 138412290;
        id v54 = (id)objc_opt_class(WeakRetained);
        id v39 = v54;
        __int16 v40 = (void *)_os_log_send_and_compose_impl( v38,  0LL,  0LL,  0LL,  &_mh_execute_header,  v37,  2LL,  "%@: Terms and conditions are being copied.",  &v53,  12);

        if (v40)
        {
          id v41 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v40,  4LL));
          free(v40);
          SSFileLog(v35, @"%@");
        }
      }

      else
      {
      }

      id v23 = (id *)(*(void *)(a1 + 32) + 120LL);
      unsigned int v24 = a2;
      goto LABEL_16;
    }

    if (!v34) {
      uint64_t v35 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v42 = [v35 shouldLog];
    id v43 = (os_log_s *)objc_claimAutoreleasedReturnValue([v35 OSLogObject]);
    if (os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v44 = v42;
    }
    else {
      uint64_t v44 = v42 & 2;
    }
    if ((_DWORD)v44)
    {
      int v53 = 138412290;
      id v54 = (id)objc_opt_class(WeakRetained);
      id v45 = v54;
      uint64_t v46 = (void *)_os_log_send_and_compose_impl( v44,  0LL,  0LL,  0LL,  &_mh_execute_header,  v43,  0LL,  "%@: Terms and conditions are empty.",  &v53,  12);

      if (v46)
      {
        uint64_t v47 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v46,  4LL));
        free(v46);
        SSFileLog(v35, @"%@");
      }
    }

    else
    {
    }

    uint64_t v48 = SSError(SSServerErrorDomain, 136LL, 0LL, 0LL);
    uint64_t v49 = objc_claimAutoreleasedReturnValue(v48);
    uint64_t v50 = *(void *)(*(void *)(a1 + 48) + 8LL);
    id v51 = *(void **)(v50 + 40);
    *(void *)(v50 + 40) = v49;
  }

LABEL_17:
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
}

    goto LABEL_4;
  }

  id v6 = 0LL;
LABEL_4:

LABEL_5:
  return v6;
}

  if (a4) {
    *a4 = v16;
  }
  return result;
}

  -[NSMutableDictionary setObject:forKey:](v3, "setObject:forKey:", &__kCFBooleanTrue, @"want-vpp");
  id v16 = 1;
LABEL_18:
  id v17 = (void *)objc_claimAutoreleasedReturnValue(-[SKPaymentQueueClient storeItemIdentifier](self->_client, "storeItemIdentifier"));

  if (v17)
  {
    __int128 v18 = (void *)objc_claimAutoreleasedReturnValue([v17 stringValue]);
    if (v16) {
      __int128 v19 = @"appAdamId";
    }
    else {
      __int128 v19 = @"adam-id";
    }
    -[NSMutableDictionary setObject:forKey:](v3, "setObject:forKey:", v18, v19);
  }

  __int128 v20 = (void *)objc_claimAutoreleasedReturnValue(-[SKPaymentQueueClient storeExternalVersion](self->_client, "storeExternalVersion"));

  if (v20)
  {
    __int128 v21 = (void *)objc_claimAutoreleasedReturnValue([v20 stringValue]);
    if (v16) {
      __int128 v22 = @"appExtVrsId";
    }
    else {
      __int128 v22 = @"software-version-external-identifier";
    }
    -[NSMutableDictionary setObject:forKey:](v3, "setObject:forKey:", v21, v22);
  }

  id v23 = (void *)objc_claimAutoreleasedReturnValue(-[SKPaymentQueueClient vendorIdentifier](self->_client, "vendorIdentifier"));

  if (v23) {
    -[NSMutableDictionary setObject:forKey:](v3, "setObject:forKey:", v23, @"vid");
  }
  unsigned int v24 = (void *)objc_claimAutoreleasedReturnValue( +[NSPropertyListSerialization dataWithPropertyList:format:options:error:]( &OBJC_CLASS___NSPropertyListSerialization,  "dataWithPropertyList:format:options:error:",  v3,  100LL,  0LL,  0LL));

  return v24;
}

        ;
      }

      uint64_t v5 = [a3 countByEnumeratingWithState:&v22 objects:v27 count:16];
    }

    while (v5);
  }

  sub_10003E244(self->_context);
}

  +[NSThread endPrivateManagedContextSession](&OBJC_CLASS___NSThread, "endPrivateManagedContextSession", v16);
}
  }

  return (id)v4;
}
}

  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 40));
  (*(void (**)(void))(*(void *)(a1 + 48) + 16LL))(*(void *)(a1 + 48));
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 32), reply);
}

    goto LABEL_4;
  }

  id v6 = 0LL;
LABEL_4:

LABEL_5:
  return v6;
}

  return v10;
}
}

  if (!v3[10])
  {
    __int128 v20 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    __int128 v21 = *(void *)(a1 + 32);
    __int128 v22 = *(void **)(v21 + 80);
    *(void *)(v21 + 80) = v20;
  }

  uint64_t v5 = objc_msgSend(*(id *)(a1 + 40), "copy", v25);
  id v23 = *(void **)(*(void *)(a1 + 32) + 80LL);
  unsigned int v24 = objc_retainBlock(v5);
  [v23 addObject:v24];

LABEL_20:
}

  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 40));
  (*(void (**)(void))(*(void *)(a1 + 48) + 16LL))(*(void *)(a1 + 48));
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 32), reply);
}

void sub_100010F5C(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  if (v5 || (a2 & 1) == 0)
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v6) {
      id v6 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v7 = [v6 shouldLog];
    else {
      LODWORD(v_Block_object_dispose(va, 8) = v7;
    }
    BOOL v9 = (os_log_s *)objc_claimAutoreleasedReturnValue([v6 OSLogObject]);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v8 = v8;
    }
    else {
      v8 &= 2u;
    }
    if ((_DWORD)v8)
    {
      unsigned int v10 = (void *)objc_opt_class(*(void *)(a1 + 32));
      unsigned int v11 = *(void **)(*(void *)(a1 + 32) + 120LL);
      id v12 = v10;
      id v13 = [v11 currentVersionIdentifier];
      uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v5 localizedDescription]);
      int v16 = 138412802;
      id v17 = v10;
      __int16 v18 = 2048;
      id v19 = v13;
      __int16 v20 = 2112;
      __int128 v21 = v14;
      uint64_t v15 = (void *)_os_log_send_and_compose_impl( v8,  0LL,  0LL,  0LL,  &_mh_execute_header,  v9,  0LL,  "%@: Server-side acceptance of [%lld] failed with error: %@",  &v16,  32);

      if (!v15)
      {
LABEL_15:

        goto LABEL_16;
      }

      BOOL v9 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v15,  4LL));
      free(v15);
      SSFileLog(v6, @"%@");
    }

    goto LABEL_15;
  }

void sub_1000117C4(_Unwind_Exception *a1)
{
}

void sub_100011844(uint64_t a1, void *a2)
{
  id v4 = a2;
  if (!v4)
  {
    id v5 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v5) {
      id v5 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v6 = [v5 shouldLog];
    else {
      LODWORD(v7) = v6;
    }
    uint64_t v8 = (os_log_s *)objc_claimAutoreleasedReturnValue([v5 OSLogObject]);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v7 = v7;
    }
    else {
      v7 &= 2u;
    }
    if ((_DWORD)v7)
    {
      id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
      int v12 = 138412290;
      id v13 = (id)objc_opt_class(WeakRetained);
      id v10 = v13;
      unsigned int v11 = (void *)_os_log_send_and_compose_impl( v7,  0LL,  0LL,  0LL,  &_mh_execute_header,  v8,  0LL,  "%@: Could not display terms sheet",  &v12,  12);

      if (!v11)
      {
LABEL_15:

        dispatch_semaphore_signal(*(dispatch_semaphore_t *)(*(void *)(a1 + 32) + 112LL));
        goto LABEL_16;
      }

      uint64_t v8 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v11,  4LL));
      free(v11);
      SSFileLog(v5, @"%@");
    }

    goto LABEL_15;
  }

  [*(id *)(a1 + 32) lock];
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 104LL), a2);
  objc_msgSend(*(id *)(*(void *)(a1 + 32) + 104), "setDelegate:");
  [*(id *)(a1 + 32) unlock];
LABEL_16:
}

NSURL *__cdecl sub_100011C38(id a1, SSURLBagContext *a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(+[ISURLBagCache sharedCache](&OBJC_CLASS___ISURLBagCache, "sharedCache"));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 URLBagForContext:v2]);

  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 valueForKey:@"automatic-downloads2"]);
  if (!v5) {
    id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 valueForKey:@"automatic-downloads"]);
  }
  unsigned int v6 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKey:@"downloads-url"]);
  if (v6) {
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL URLWithString:](&OBJC_CLASS___NSURL, "URLWithString:", v6));
  }
  else {
    uint64_t v7 = 0LL;
  }

  return (NSURL *)v7;
}

LABEL_15:
}
}

  uint64_t v25 = v53;
  if (-[NSMutableArray count](v14, "count", v46))
  {
    uint64_t v50 = v13;
    id v51 = v12;
    id v52 = v11;
    __int128 v59 = 0u;
    v60 = 0u;
    __int128 v57 = 0u;
    __int128 v58 = 0u;
    uint64_t v49 = v14;
    obj = v14;
    unsigned int v26 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( obj,  "countByEnumeratingWithState:objects:count:",  &v57,  v66,  16LL);
    if (!v26) {
      goto LABEL_37;
    }
    uint64_t v27 = v26;
    uint64_t v28 = *(void *)v58;
    while (1)
    {
      id v29 = 0LL;
      id v54 = v27;
      do
      {
        if (*(void *)v58 != v28) {
          objc_enumerationMutation(obj);
        }
        uint64_t v30 = *(void **)(*((void *)&v57 + 1) + 8LL * (void)v29);
        uint64_t v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v30, "activityIdentifier", v47));
        id v32 = [v31 length];

        if (v32)
        {
          id v33 = (void *)objc_claimAutoreleasedReturnValue([v15[459] sharedDaemonConfig]);
          if (!v33) {
            id v33 = (void *)objc_claimAutoreleasedReturnValue([v15[459] sharedConfig]);
          }
          uint64_t v34 = [v33 shouldLog];
          else {
            uint64_t v35 = v34;
          }
          unsigned int v36 = (os_log_s *)objc_claimAutoreleasedReturnValue([v33 OSLogObject]);
          if (os_log_type_enabled(v36, OS_LOG_TYPE_INFO)) {
            uint64_t v37 = v35;
          }
          else {
            uint64_t v37 = v35 & 2;
          }
          if ((_DWORD)v37)
          {
            uint64_t v38 = (void *)objc_opt_class(self);
            id v39 = v28;
            __int16 v40 = v15;
            id v41 = self;
            unsigned int v42 = v38;
            id v43 = [v30 postIdentifier];
            v67 = 138412546;
            v68 = v38;
            v69 = 2048;
            v70 = v43;
            LODWORD(v4_Block_object_dispose(va, 8) = 22;
            uint64_t v44 = (void *)_os_log_send_and_compose_impl( v37,  0LL,  0LL,  0LL,  &_mh_execute_header,  v36,  1LL,  "%@: Adding poll request pid: %lld.",  &v67,  v48);

            self = v41;
            uint64_t v15 = v40;
            uint64_t v28 = v39;
            uint64_t v27 = v54;

            if (v44)
            {
              unsigned int v36 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v44,  4LL));
              free(v44);
              uint64_t v47 = v36;
              SSFileLog(v33, @"%@");
              goto LABEL_33;
            }
          }

          else
          {
LABEL_33:
          }

          id v45 = (void *)objc_claimAutoreleasedReturnValue(-[DirectUploadController _pollingCoordinator](self, "_pollingCoordinator"));
          [v45 addPollRequest:v30];
        }

        id v29 = (char *)v29 + 1;
      }

      while (v27 != v29);
      uint64_t v27 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( obj,  "countByEnumeratingWithState:objects:count:",  &v57,  v66,  16LL);
      if (!v27)
      {
LABEL_37:

        unsigned int v11 = v52;
        uint64_t v25 = v53;
        id v13 = v50;
        int v12 = v51;
        uint64_t v14 = v49;
        break;
      }
    }
  }
}
}
}

  if (-[PushNotificationController _isPushEnabled](self, "_isPushEnabled", v49))
  {
    id v13 = (void *)objc_claimAutoreleasedReturnValue(+[SSAccountStore defaultStore](&OBJC_CLASS___SSAccountStore, "defaultStore"));
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v13 activeAccount]);

    uint64_t v15 = objc_alloc_init(&OBJC_CLASS___NSFetchRequest);
    int v16 = (void *)objc_claimAutoreleasedReturnValue( +[PushNotificationEnvironment entityFromContext:]( &OBJC_CLASS___PushNotificationEnvironment,  "entityFromContext:",  v6));
    -[NSFetchRequest setEntity:](v15, "setEntity:", v16);

    if (!v4)
    {
      id v17 = (void *)objc_claimAutoreleasedReturnValue([v14 uniqueIdentifier]);
      __int16 v18 = (void *)objc_claimAutoreleasedReturnValue( +[NSPredicate predicateWithFormat:]( &OBJC_CLASS___NSPredicate,  "predicateWithFormat:",  @"(tokenData != nil) AND (lastAccountIdentifier != %@)",  v17));
      -[NSFetchRequest setPredicate:](v15, "setPredicate:", v18);
    }

    __int128 v58 = 0LL;
    id v19 = (void *)objc_claimAutoreleasedReturnValue([v6 executeFetchRequest:v15 error:&v58]);
    __int16 v20 = v58;
    __int128 v21 = objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    __int128 v22 = (id)v21;
    if (v19)
    {
      int v53 = v6;
      if (!v21) {
        __int128 v22 = (id)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      id v23 = [v22 shouldLog];
      else {
        unsigned int v24 = v23;
      }
      uint64_t v25 = (os_log_s *)objc_claimAutoreleasedReturnValue([v22 OSLogObject]);
      if (os_log_type_enabled(v25, OS_LOG_TYPE_INFO)) {
        unsigned int v26 = v24;
      }
      else {
        unsigned int v26 = v24 & 2;
      }
      if ((_DWORD)v26)
      {
        uint64_t v27 = v20;
        uint64_t v28 = (void *)objc_opt_class(self);
        id v52 = v28;
        id v29 = [v19 count];
        v60 = 138543874;
        int v61 = v28;
        __int16 v20 = v27;
        uint64_t v62 = 2048;
        __int16 v63 = v29;
        id v64 = 1024;
        v65 = v4;
        LODWORD(v51) = 28;
        uint64_t v30 = (void *)_os_log_send_and_compose_impl( v26,  0LL,  0LL,  0LL,  &_mh_execute_header,  v25,  1LL,  "%{public}@: Posting %lu environment tokens. Forced: %d",  &v60,  v51);

        unsigned int v6 = v53;
        if (!v30) {
          goto LABEL_54;
        }
        uint64_t v25 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v30,  4LL));
        free(v30);
        uint64_t v50 = v25;
        SSFileLog(v22, @"%@");
      }

      else
      {
        unsigned int v6 = v53;
      }

LABEL_54:
      __int128 v56 = 0u;
      __int128 v57 = 0u;
      id v54 = 0u;
      __int16 v55 = 0u;
      __int128 v22 = v19;
      uint64_t v44 = [v22 countByEnumeratingWithState:&v54 objects:v59 count:16];
      if (v44)
      {
        id v45 = v44;
        uint64_t v46 = v20;
        uint64_t v47 = *(void *)v55;
        do
        {
          for (uint64_t i = 0LL; i != v45; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v55 != v47) {
              objc_enumerationMutation(v22);
            }
            -[PushNotificationController _postTokenForEnvironment:]( self,  "_postTokenForEnvironment:",  *(void *)(*((void *)&v54 + 1) + 8LL * (void)i),  v50);
          }

          id v45 = [v22 countByEnumeratingWithState:&v54 objects:v59 count:16];
        }

        while (v45);
        __int16 v20 = v46;
      }

      goto LABEL_62;
    }

    if (!v21) {
      __int128 v22 = (id)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v36 = [v22 shouldLog];
    else {
      uint64_t v37 = v36;
    }
    uint64_t v38 = (os_log_s *)objc_claimAutoreleasedReturnValue([v22 OSLogObject]);
    if (os_log_type_enabled(v38, OS_LOG_TYPE_DEFAULT)) {
      id v39 = v37;
    }
    else {
      id v39 = v37 & 2;
    }
    if ((_DWORD)v39)
    {
      __int16 v40 = v6;
      id v41 = (void *)objc_opt_class(self);
      v60 = 138412546;
      int v61 = v41;
      uint64_t v62 = 2112;
      __int16 v63 = v20;
      unsigned int v42 = v41;
      LODWORD(v51) = 22;
      id v43 = (void *)_os_log_send_and_compose_impl( v39,  0LL,  0LL,  0LL,  &_mh_execute_header,  v38,  0LL,  "%@: Could not fetch environments to post: %@",  &v60,  v51);

      if (!v43)
      {
        unsigned int v6 = v40;
        goto LABEL_62;
      }

      uint64_t v38 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v43,  4LL));
      free(v43);
      SSFileLog(v22, @"%@");
      unsigned int v6 = v40;
    }

LABEL_62:
    goto LABEL_63;
  }

  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v14) {
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  uint64_t v31 = [v14 shouldLog];
  uint64_t v15 = (NSFetchRequest *)objc_claimAutoreleasedReturnValue([v14 OSLogObject]);
  if (os_log_type_enabled((os_log_t)v15, OS_LOG_TYPE_ERROR)) {
    id v32 = v31;
  }
  else {
    id v32 = v31 & 2;
  }
  if (!(_DWORD)v32) {
    goto LABEL_63;
  }
  id v33 = (void *)objc_opt_class(self);
  v60 = 138543362;
  int v61 = v33;
  uint64_t v34 = v33;
  LODWORD(v51) = 12;
  uint64_t v35 = (void *)_os_log_send_and_compose_impl( v32,  0LL,  0LL,  0LL,  &_mh_execute_header,  v15,  16LL,  "%{public}@: Unable to post tokens in context. Push not enabled.",  &v60,  v51);

  if (v35)
  {
    uint64_t v15 = (NSFetchRequest *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v35,  4LL));
    free(v35);
    SSFileLog(v14, @"%@");
LABEL_63:
  }
}

  +[NSThread endPrivateManagedContextSession](&OBJC_CLASS___NSThread, "endPrivateManagedContextSession", v18);
}

  return v7;
}
}

  objc_msgSend(*(id *)(a1 + 32), "_performMigration", v13);
}

  *(void *)(v2 + 40) = 0LL;

  if ([*(id *)(*(void *)(a1 + 32) + 48) count])
  {
    int v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 48) firstObject]);
    [*(id *)(*(void *)(a1 + 32) + 48) removeObjectAtIndex:0];
    objc_storeStrong((id *)(*(void *)(a1 + 32) + 40LL), v12);
    [*(id *)(a1 + 32) addOperation:v12];
    if (![*(id *)(*(void *)(a1 + 32) + 48) count])
    {
      id v13 = *(void *)(a1 + 32);
      uint64_t v14 = *(void **)(v13 + 48);
      *(void *)(v13 + 4_Block_object_dispose(va, 8) = 0LL;
    }
  }

  if (a6) {
    *a6 = (id) v38[5];
  }
  uint64_t v28 = (id)v44[5];

  _Block_object_dispose(&v37, 8);
  _Block_object_dispose(&v43, 8);

  return v28;
}

  if (a5) {
    *a5 = (id) v38[5];
  }
  uint64_t v25 = (id)v44[5];

  _Block_object_dispose(&v37, 8);
  _Block_object_dispose(&v43, 8);

  return v25;
}

  unsigned int v24 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  -[NSMutableDictionary setObject:forKeyedSubscript:]( v24,  "setObject:forKeyedSubscript:",  ISBiometricsIntermediateCertKeychainLabel,  v11);
  -[NSMutableDictionary setObject:forKeyedSubscript:](v24, "setObject:forKeyedSubscript:", v12, v13);
  -[NSMutableDictionary setObject:forKeyedSubscript:]( v24,  "setObject:forKeyedSubscript:",  &__kCFBooleanTrue,  kSecReturnRef);
  uint64_t v25 = SecItemCopyMatching((CFDictionaryRef)v24, &v76);
  if ((_DWORD)v25)
  {
    unsigned int v26 = v25;
    uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v27) {
      uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    LODWORD(v2_Block_object_dispose(va, 8) = objc_msgSend(v27, "shouldLog", v63);
    id v29 = (os_log_s *)objc_claimAutoreleasedReturnValue([v27 OSLogObject]);
    if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR)) {
      uint64_t v28 = v28;
    }
    else {
      v28 &= 2u;
    }
    if ((_DWORD)v28)
    {
      v69 = v8;
      v71 = v7;
      uint64_t v30 = (void *)objc_opt_class(self);
      v67 = v30;
      uint64_t v31 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", a4));
      id v32 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v26));
      v78 = 138544130;
      v79 = v30;
      v80 = 2112;
      uint64_t v8 = v69;
      v81 = v71;
      v82 = 2114;
      v83 = v31;
      v84 = 2114;
      v85 = v32;
      LODWORD(v65) = 42;
      id v33 = (void *)_os_log_send_and_compose_impl( v28,  0LL,  0LL,  0LL,  &_mh_execute_header,  v29,  16LL,  "%{public}@: Failed to find intermediate cert for DSID: %@, purpose: %{public}@, status: %{public}@",  &v78,  v65);

      uint64_t v7 = v71;
      if (!v33)
      {
LABEL_27:

        goto LABEL_28;
      }

      id v29 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v33,  4LL));
      free(v33);
      __int16 v63 = v29;
      SSFileLog(v27, @"%@");
    }

    goto LABEL_27;
  }

  if (a5) {
    *a5 = (id) v35[5];
  }
  uint64_t v25 = (id)v41[5];

  _Block_object_dispose(&v34, 8);
  _Block_object_dispose(&v40, 8);

  return v25;
}
}

  database = self->_database;
  v42[0] = _NSConcreteStackBlock;
  v42[1] = 3221225472LL;
  v42[2] = sub_1000EA9C4;
  v42[3] = &unk_10034CE68;
  v42[4] = self;
  __int128 v21 = v9;
  id v43 = v21;
  -[DownloadsDatabase modifyAsyncUsingTransactionBlock:](database, "modifyAsyncUsingTransactionBlock:", v42);
  if (v13)
  {
    __int128 v22 = [v11 mutableCopy];
    id v23 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"bytes=%llu-",  v13));
    [v22 setValue:v23 forHTTPHeaderField:@"Range"];

    unsigned int v24 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v24) {
      unsigned int v24 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    uint64_t v25 = [v24 shouldLog];
    else {
      unsigned int v26 = v25;
    }
    uint64_t v27 = (os_log_s *)objc_claimAutoreleasedReturnValue([v24 OSLogObject]);
    if (os_log_type_enabled(v27, OS_LOG_TYPE_INFO)) {
      uint64_t v28 = v26;
    }
    else {
      uint64_t v28 = v26 & 2;
    }
    if (!(_DWORD)v28) {
      goto LABEL_38;
    }
    id v29 = (void *)objc_opt_class(self);
    uint64_t v30 = v29;
    uint64_t v31 = [v21 taskIdentifier];
    uint64_t v44 = 138412802;
    id v45 = v29;
    uint64_t v46 = 2048;
    uint64_t v47 = v13;
    uint64_t v48 = 2048;
    uint64_t v49 = v31;
    LODWORD(v40) = 32;
    id v32 = (void *)_os_log_send_and_compose_impl( v28,  0LL,  0LL,  0LL,  &_mh_execute_header,  v27,  1LL,  "%@: Providing resumption offset: %llu for task: %lu",  &v44,  v40);

LABEL_36:
    if (!v32)
    {
LABEL_39:

      goto LABEL_40;
    }

    uint64_t v27 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v32,  4LL));
    free(v32);
    SSFileLog(v24, @"%@");
LABEL_38:

    goto LABEL_39;
  }

  id v33 = (void *)objc_claimAutoreleasedReturnValue([v11 valueForHTTPHeaderField:@"Range"]);

  __int128 v22 = v11;
  if (v33)
  {
    __int128 v22 = [v11 mutableCopy];
    [v22 setValue:0 forHTTPHeaderField:@"Range"];

    unsigned int v24 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v24) {
      unsigned int v24 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    uint64_t v34 = objc_msgSend(v24, "shouldLog", v39);
    uint64_t v27 = (os_log_s *)objc_claimAutoreleasedReturnValue([v24 OSLogObject]);
    if (os_log_type_enabled(v27, OS_LOG_TYPE_INFO)) {
      uint64_t v35 = v34;
    }
    else {
      uint64_t v35 = v34 & 2;
    }
    if (!(_DWORD)v35) {
      goto LABEL_38;
    }
    unsigned int v36 = (void *)objc_opt_class(self);
    uint64_t v37 = v36;
    uint64_t v38 = [v21 taskIdentifier];
    uint64_t v44 = 138412546;
    id v45 = v36;
    uint64_t v46 = 2048;
    uint64_t v47 = v38;
    LODWORD(v40) = 22;
    id v32 = (void *)_os_log_send_and_compose_impl( v35,  0LL,  0LL,  0LL,  &_mh_execute_header,  v27,  1LL,  "%@: Removed resumption offset for task: %lu",  &v44,  v40);

    goto LABEL_36;
  }

  uint64_t v15 = objc_alloc(&OBJC_CLASS___DownloadEntity);
  int v16 = (void *)objc_claimAutoreleasedReturnValue([v8 database]);
  id v17 = -[DownloadEntity initWithPersistentID:inDatabase:](v15, "initWithPersistentID:inDatabase:", a4, v16);

  -[DownloadEntity setValue:forProperty:](v17, "setValue:forProperty:", v7, @"download_state.phase");
  __int16 v18 = objc_alloc(&OBJC_CLASS___NSDictionary);
  id v19 = -[NSDictionary initWithObjectsAndKeys:]( v18,  "initWithObjectsAndKeys:",  v7,  SSDownloadPropertyDownloadPhase,  0LL);
  __int16 v20 = (void *)objc_claimAutoreleasedReturnValue(+[DownloadController controller](&OBJC_CLASS___DownloadController, "controller"));
  __int128 v21 = (void *)objc_claimAutoreleasedReturnValue(-[DownloadEntity valueForProperty:](v17, "valueForProperty:", @"kind"));
  [v20 notifyClientsOfPropertyChanges:v19 forDownloadID:a4 downloadKind:v21];
}

  return v5;
}

  return 1LL;
}

  return 1;
}

  return 1;
}
}

  return HasEntitlement;
}
}

  uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue( +[DaemonBiometricKeychain sharedInstance]( &OBJC_CLASS___DaemonBiometricKeychain,  "sharedInstance",  v28));
  uint64_t v30 = v7;
  int v16 = (void *)objc_claimAutoreleasedReturnValue( objc_msgSend( v15,  "publicKeyDataForAccountIdentifier_:purpose:regenerateKeys:error:",  v4,  1,  0,  &v30));
  id v17 = v30;

  if (!v17) {
    goto LABEL_29;
  }
  __int16 v18 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v18) {
    __int16 v18 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  id v19 = [v18 shouldLog];
  else {
    LODWORD(v20) = v19;
  }
  __int128 v21 = (os_log_s *)objc_claimAutoreleasedReturnValue([v18 OSLogObject]);
  if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
    __int16 v20 = v20;
  }
  else {
    v20 &= 2u;
  }
  if (!(_DWORD)v20) {
    goto LABEL_27;
  }
  __int128 v22 = (void *)objc_opt_class(self);
  id v32 = 138543618;
  id v33 = v22;
  uint64_t v34 = 2114;
  uint64_t v35 = v17;
  id v23 = v22;
  LODWORD(v29) = 22;
  unsigned int v24 = (void *)_os_log_send_and_compose_impl( v20,  0LL,  0LL,  0LL,  &_mh_execute_header,  v21,  16LL,  "%{public}@: Failed to query public key for extended actions with error: %{public}@",  &v32,  v29);

  if (v24)
  {
    __int128 v21 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v24,  4LL));
    free(v24);
    SSFileLog(v18, @"%@");
LABEL_27:
  }

LABEL_29:
  uint64_t v25 = 1LL;
  if (v6) {
    uint64_t v25 = 2LL;
  }
  if (v16) {
    unsigned int v26 = v25;
  }
  else {
    unsigned int v26 = v6 != 0LL;
  }

  return v26;
}
}

  uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(-[ISLoadURLBagOperation URLBag](v4, "URLBag", v19));
  int v16 = (void *)objc_claimAutoreleasedReturnValue([v15 valueForKey:@"redeemCodeLanding"]);
  id v17 = v16 == 0LL;

  return v17;
}
}
}
}

  if (*((_BYTE *)v40 + 24) && -[NSMutableArray count](v15, "count")) {
    +[AppStoreUtility sendSoftwareDownloads:withReason:]( &OBJC_CLASS___AppStoreUtility,  "sendSoftwareDownloads:withReason:",  v15,  @"download queue request");
  }
  if (*((_BYTE *)v40 + 24) && -[NSMutableArray count](v16, "count")) {
    +[BookAssetDaemonUtility sendBookStoreDownloads:withReason:]( &OBJC_CLASS___BookAssetDaemonUtility,  "sendBookStoreDownloads:withReason:",  v16,  @"download queue request");
  }
  uint64_t v27 = *((_BYTE *)v40 + 24) != 0;

  _Block_object_dispose(&v39, 8);
  return v27;
}
}
}

LABEL_28:
  objc_msgSend(v8, "setRequestProperties:", v50, v44);
  return v8;
}
}

  if (result && v76)
  {
    uint64_t v34 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    uint64_t v35 = SecCertificateCopyData((SecCertificateRef)result);
    -[NSMutableArray addObject:](v34, "addObject:", v35);

    unsigned int v36 = SecCertificateCopyData((SecCertificateRef)v76);
    -[NSMutableArray addObject:](v34, "addObject:", v36);

    uint64_t v37 = -[NSMutableArray copy](v34, "copy");
    uint64_t v38 = 0LL;
    goto LABEL_70;
  }

  return 1LL;
}

  if ([v15 length])
  {
    v80 = v14;
  }

  else
  {
    __int128 v21 = (void *)objc_claimAutoreleasedReturnValue(+[SSVCookieStorage sharedStorage](&OBJC_CLASS___SSVCookieStorage, "sharedStorage"));
    __int128 v22 = (void *)objc_claimAutoreleasedReturnValue([v21 allCookiesForUserIdentifier:&off_10036D950]);

    v98 = 0u;
    v99 = 0u;
    v96 = 0u;
    v97 = 0u;
    id v23 = v22;
    unsigned int v24 = [v23 countByEnumeratingWithState:&v96 objects:v106 count:16];
    if (v24)
    {
      uint64_t v25 = v24;
      unsigned int v26 = *(void *)v97;
      while (2)
      {
        for (j = 0LL; j != v25; j = (char *)j + 1)
        {
          if (*(void *)v97 != v26) {
            objc_enumerationMutation(v23);
          }
          uint64_t v28 = *(void **)(*((void *)&v96 + 1) + 8LL * (void)j);
          id v29 = (void *)objc_claimAutoreleasedReturnValue([v28 name]);
          uint64_t v30 = [v29 isEqualToString:@"xp_ci"];

          if (v30)
          {
            uint64_t v31 = objc_claimAutoreleasedReturnValue([v28 value]);

            uint64_t v15 = (id)v31;
            goto LABEL_40;
          }
        }

        uint64_t v25 = [v23 countByEnumeratingWithState:&v96 objects:v106 count:16];
        if (v25) {
          continue;
        }
        break;
      }
    }

  return v8;
}
}

LABEL_89:
      goto LABEL_119;
    }

    v83 = -[PurchaseResponseInfo shouldRetryForMachineData](self->_responseInfo, "shouldRetryForMachineData");
    v84 = self->_responseInfo;
    if (v83)
    {
      v85 = -[PurchaseResponseInfo machineDataRetryCount](v84, "machineDataRetryCount");
      if (v85 > 0) {
        break;
      }
      v86 = v85;
      v87 = (void *)objc_claimAutoreleasedReturnValue([v20[459] sharedDaemonConfig]);
      if (!v87) {
        v87 = (void *)objc_claimAutoreleasedReturnValue([v20[459] sharedConfig]);
      }
      LODWORD(v8_Block_object_dispose(va, 8) = [v87 shouldLog];
      v89 = (os_log_s *)objc_claimAutoreleasedReturnValue([v87 OSLogObject]);
      if (os_log_type_enabled(v89, OS_LOG_TYPE_INFO)) {
        v88 = v88;
      }
      else {
        v88 &= 2u;
      }
      if ((_DWORD)v88)
      {
        v90 = (void *)objc_opt_class(self);
        v137 = 138412290;
        v138 = v90;
        v91 = v90;
        LODWORD(v129) = 12;
        v92 = (void *)_os_log_send_and_compose_impl( v88,  0LL,  0LL,  0LL,  &_mh_execute_header,  v89,  1LL,  "%@: Retry purchase operation after machine data action",  &v137,  v129);

        __int16 v20 = &ACSLocateCachingServer_ptr;
        if (v92)
        {
          v89 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v92,  4LL));
          free(v92);
          v128 = v89;
          SSFileLog(v87, @"%@");
          goto LABEL_145;
        }
      }

      else
      {
LABEL_145:
      }

      -[PurchaseResponseInfo setMachineDataRetryCount:](self->_responseInfo, "setMachineDataRetryCount:", v86 + 1);
      goto LABEL_119;
    }

    if (!-[PurchaseResponseInfo shouldRetryWithOriginalProductOwnerAccount]( v84,  "shouldRetryWithOriginalProductOwnerAccount")
      || (self->_originalProductOwnerAccountDSID == 0LL) | BYTE4(v129) & 1)
    {
      break;
    }

    v93 = -[SSMutableAuthenticationContext initWithAccountIdentifier:]( objc_alloc(&OBJC_CLASS___SSMutableAuthenticationContext),  "initWithAccountIdentifier:",  self->_originalProductOwnerAccountDSID);
    v94 = (void *)objc_claimAutoreleasedReturnValue(-[PurchaseOperation logKey](self, "logKey"));
    -[SSMutableAuthenticationContext setLogUUID:](v93, "setLogUUID:", v94);

    authenticationContext = self->_authenticationContext;
    self->_authenticationContext = v93;

    HIDWORD(v129) = 1;
LABEL_119:
    if (self->_silentAuthCount >= 3)
    {
      v96 = (void *)objc_claimAutoreleasedReturnValue([v20[459] sharedDaemonConfig]);
      if (!v96) {
        v96 = (void *)objc_claimAutoreleasedReturnValue([v20[459] sharedConfig]);
      }
      v97 = objc_msgSend(v96, "shouldLog", v128);
      else {
        v98 = v97;
      }
      v99 = (os_log_s *)objc_claimAutoreleasedReturnValue([v96 OSLogObject]);
      if (os_log_type_enabled(v99, OS_LOG_TYPE_ERROR)) {
        v100 = v98;
      }
      else {
        v100 = v98 & 2;
      }
      if ((_DWORD)v100)
      {
        v101 = (void *)objc_opt_class(self);
        v137 = 138543362;
        v138 = v101;
        v102 = v101;
        LODWORD(v129) = 12;
        v103 = (void *)_os_log_send_and_compose_impl( v100,  0LL,  0LL,  0LL,  &_mh_execute_header,  v99,  16LL,  "%{public}@: We've attempted silent auth multiple times and the purchase continues to fail. Refu sing to retry again.",  &v137,  v129);

        if (v103)
        {
          v99 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v103,  4LL));
          free(v103);
          v128 = v99;
          SSFileLog(v96, @"%@");
          goto LABEL_161;
        }
      }

      else
      {
LABEL_161:
      }

      __int16 v20 = &ACSLocateCachingServer_ptr;
      break;
    }
  }

LABEL_164:
  v104 = (void *)objc_claimAutoreleasedReturnValue(-[PurchaseOperation rawOutput](self, "rawOutput", v128));
  v105 = (void *)objc_claimAutoreleasedReturnValue(-[PurchaseOperation error](self, "error"));
  v106 = (void *)objc_claimAutoreleasedReturnValue( -[PurchaseOperation _recordEngagementEventWithResult:error:]( self,  "_recordEngagementEventWithResult:error:",  v104,  v105));

  v134[0] = _NSConcreteStackBlock;
  v134[1] = 3221225472LL;
  v134[2] = sub_100015594;
  v134[3] = &unk_10034AC30;
  v134[4] = self;
  [v106 addSuccessBlock:v134];
  v107 = (void *)objc_claimAutoreleasedReturnValue(-[PurchaseOperation error](self, "error"));

  v108 = objc_claimAutoreleasedReturnValue([v20[459] sharedDaemonConfig]);
  v109 = (void *)v108;
  if (!v107)
  {
    if (!v108) {
      v109 = (void *)objc_claimAutoreleasedReturnValue([v20[459] sharedConfig]);
    }
    LODWORD(v119) = [v109 shouldLog];
    v111 = (os_log_s *)objc_claimAutoreleasedReturnValue([v109 OSLogObject]);
    if (os_log_type_enabled(v111, OS_LOG_TYPE_DEFAULT)) {
      v119 = v119;
    }
    else {
      v119 &= 2u;
    }
    if ((_DWORD)v119)
    {
      v120 = (void *)objc_opt_class(self);
      v121 = v120;
      v122 = (void *)objc_claimAutoreleasedReturnValue(-[PurchaseOperation logKey](self, "logKey"));
      v137 = 138543618;
      v138 = v120;
      v139 = 2114;
      v140 = v122;
      LODWORD(v129) = 22;
      v123 = _os_log_send_and_compose_impl( v119,  0LL,  0LL,  0LL,  &_mh_execute_header,  v111,  0LL,  "%{public}@: [%{public}@] Purchase completed",  &v137,  v129);

      if (!v123) {
        goto LABEL_187;
      }
      v111 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v123,  4LL));
      v118 = (void *)v123;
LABEL_185:
      free(v118);
      SSFileLog(v109, @"%@");
    }

    goto LABEL_186;
  }

  if (!v108) {
    v109 = (void *)objc_claimAutoreleasedReturnValue([v20[459] sharedConfig]);
  }
  v110 = [v109 shouldLog];
  v111 = (os_log_s *)objc_claimAutoreleasedReturnValue([v109 OSLogObject]);
  if (os_log_type_enabled(v111, OS_LOG_TYPE_ERROR)) {
    v112 = v110;
  }
  else {
    v112 = v110 & 2;
  }
  if (!(_DWORD)v112)
  {
LABEL_186:

    goto LABEL_187;
  }

  v113 = (void *)objc_opt_class(self);
  v114 = v113;
  v115 = (void *)objc_claimAutoreleasedReturnValue(-[PurchaseOperation logKey](self, "logKey"));
  v116 = (void *)objc_claimAutoreleasedReturnValue(-[PurchaseOperation error](self, "error"));
  v137 = 138543874;
  v138 = v113;
  v139 = 2114;
  v140 = v115;
  v141 = 2114;
  v142 = v116;
  LODWORD(v129) = 32;
  v117 = _os_log_send_and_compose_impl( v112,  0LL,  0LL,  0LL,  &_mh_execute_header,  v111,  16LL,  "%{public}@: [%{public}@] Purchase finished with error: %{public}@",  &v137,  v129);

  if (v117)
  {
    v111 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v117,  4LL));
    v118 = (void *)v117;
    goto LABEL_185;
  }

  _Block_object_dispose(v146, 8);
LABEL_90:

  _Block_object_dispose(v150, 8);
  _Block_object_dispose(&v136, 8);
LABEL_138:

LABEL_139:
}

LABEL_187:
  v124 = (void *)objc_claimAutoreleasedReturnValue(-[DeviceScorer context](self->_deviceScorer, "context"));
  v125 = [v124 serverEndpoint];

  if (v125 == (id)2) {
    -[DeviceScorer didConsumeDeviceScore:]( self->_deviceScorer,  "didConsumeDeviceScore:",  -[PurchaseOperation didConsumeScore](self, "didConsumeScore"));
  }
  v126 = self->_responseInfo;
  self->_responseInfo = 0LL;

  unsigned int v6 = v132;
LABEL_190:
}

void sub_100015594(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v2) {
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v3 = [v2 shouldLog];
  else {
    LODWORD(v4) = v3;
  }
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue([v2 OSLogObject]);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v4 = v4;
  }
  else {
    v4 &= 2u;
  }
  if (!(_DWORD)v4) {
    goto LABEL_12;
  }
  unsigned int v6 = (void *)objc_opt_class(*(void *)(a1 + 32));
  uint64_t v7 = *(void **)(a1 + 32);
  id v8 = v6;
  BOOL v9 = (void *)objc_claimAutoreleasedReturnValue([v7 logKey]);
  int v11 = 138543618;
  int v12 = v6;
  __int16 v13 = 2114;
  uint64_t v14 = v9;
  id v10 = (void *)_os_log_send_and_compose_impl( v4,  0LL,  0LL,  0LL,  &_mh_execute_header,  v5,  0LL,  "%{public}@: [%{public}@] Engagement tasks completed asyncronously",  &v11,  22);

  if (v10)
  {
    id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v10,  4LL));
    free(v10);
    SSFileLog(v2, @"%@");
LABEL_12:
  }
}

LABEL_4:
}

LABEL_35:
  if (v30) {
    sub_10019C12C(v30);
  }
  if (v29) {
    sub_10019C12C(v29);
  }
}

LABEL_36:
  uint64_t v30 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  uint64_t v44 = 0u;
  id v45 = 0u;
  uint64_t v46 = 0u;
  uint64_t v47 = 0u;
  uint64_t v31 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v14,  "countByEnumeratingWithState:objects:count:",  &v44,  v49,  16LL);
  id v29 = v40;
  if (v31)
  {
    id v32 = v31;
    id v33 = *(void *)v45;
    do
    {
      for (uint64_t i = 0LL; i != v32; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v45 != v33) {
          objc_enumerationMutation(v14);
        }
        uint64_t v35 = objc_msgSend(*(id *)(*((void *)&v44 + 1) + 8 * (void)i), "copyProduct", v39);
        if (v35)
        {
          unsigned int v36 = v35;
          -[NSMutableArray addObject:](v30, "addObject:", v35);
        }
      }

      id v32 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v14,  "countByEnumeratingWithState:objects:count:",  &v44,  v49,  16LL);
    }

    while (v32);
  }

  -[LoadMicroPaymentProductsOperation lock](self, "lock", v39);

  uint64_t v37 = (SKProductsResponse *)objc_alloc_init((Class)sub_1001468F4());
  self->_response = v37;
  -[SKProductsResponse _setInvalidIdentifiers:](v37, "_setInvalidIdentifiers:", v15);
  -[SKProductsResponse _setProducts:](self->_response, "_setProducts:", v30);
  -[LoadMicroPaymentProductsOperation unlock](self, "unlock");

  uint64_t v28 = 1;
LABEL_46:

  if (v29) {
    _BYTE *v29 = v48;
  }
  return v28;
}

      goto LABEL_36;
    }

    [v5 executeSQL:@"PRAGMA journal_mode = WAL;"];
    __int16 v13 = [v5 setUserVersion:11001];

    unsigned int v3 = 11001LL;
    if ((v13 & 1) == 0) {
      goto LABEL_17;
    }
  }

  return v4 > 11000;
}

  -[NSLock unlock](self->_lock, "unlock");
LABEL_36:
  if (*((_BYTE *)v47 + 24))
  {
    uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v27) {
      uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    uint64_t v28 = objc_msgSend(v27, "shouldLog", v36);
    id v29 = [v27 shouldLogToDisk];
    uint64_t v30 = (os_log_s *)objc_claimAutoreleasedReturnValue([v27 OSLogObject]);
    uint64_t v31 = v30;
    if (v29) {
      v28 |= 2u;
    }
    if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT)) {
      id v32 = v28;
    }
    else {
      id v32 = v28 & 2;
    }
    if ((_DWORD)v32)
    {
      id v51 = 138412290;
      id v52 = v14;
      LODWORD(v37) = 12;
      id v33 = (void *)_os_log_send_and_compose_impl( v32,  0LL,  0LL,  0LL,  &_mh_execute_header,  v31,  0LL,  "[ApplicationWorkspace]: We are currently installing %@",  &v51,  v37);

      if (v33)
      {
        uint64_t v31 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v33,  4LL));
        free(v33);
        SSFileLog(v27, @"%@");
        goto LABEL_47;
      }
    }

    else
    {
LABEL_47:
    }

    uint64_t v34 = *((_BYTE *)v47 + 24) != 0;
  }

  else
  {
    uint64_t v34 = 0;
  }

  _Block_object_dispose(&v46, 8);
  return v34;
}

  return v19;
}

LABEL_27:
  return v9;
}

  objc_msgSend(v2[405], "endManagedContextSession", (void)v25);
}
}

  return v10;
}

  return v3;
}
}

LABEL_19:
  __int16 v20 = SSClientIdentifierForDownloadKind(self->_downloadKind);
  __int128 v21 = objc_claimAutoreleasedReturnValue(v20);
  if (!v21)
  {
    if (-[PurchaseOperation _clientIsViewService](self, "_clientIsViewService")) {
      __int128 v21 = objc_claimAutoreleasedReturnValue(-[PurchaseOperation clientIdentifier](self, "clientIdentifier"));
    }
    else {
      __int128 v21 = 0LL;
    }
  }

  v136 = (void *)v21;
  -[SSMutableAuthenticationContext setPreferredITunesStoreClient:](v6, "setPreferredITunesStoreClient:", v21, v124);
  __int128 v22 = objc_claimAutoreleasedReturnValue(-[PurchaseOperation buyParameters](self, "buyParameters"));
  v138 = v6;
  v139 = v3;
  if (v22)
  {
    id v23 = (void *)v22;
    unsigned int v24 = -[NSDictionary initWithObjectsAndKeys:]( objc_alloc(&OBJC_CLASS___NSDictionary),  "initWithObjectsAndKeys:",  v22,  @"product",  0LL);
    -[SSMutableAuthenticationContext setSignupRequestParameters:](v6, "setSignupRequestParameters:", v24);
    -[PurchaseOperation lock](self, "lock");
    uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue( -[SSBiometricAuthenticationContext paymentTokenData]( self->_biometricAuthenticationContext,  "paymentTokenData"));
    -[PurchaseOperation unlock](self, "unlock");
    if (!v25) {
      goto LABEL_38;
    }
    unsigned int v26 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v26) {
      unsigned int v26 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    uint64_t v27 = [v26 shouldLog];
    else {
      uint64_t v28 = v27;
    }
    id v29 = (os_log_s *)objc_claimAutoreleasedReturnValue([v26 OSLogObject]);
    if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v30 = v28;
    }
    else {
      uint64_t v30 = v28 & 2;
    }
    if ((_DWORD)v30)
    {
      uint64_t v31 = (id)objc_opt_class(self);
      v140 = 138543362;
      v141 = v31;
      LODWORD(v12_Block_object_dispose(va, 8) = 12;
      id v32 = (void *)_os_log_send_and_compose_impl( v30,  0LL,  0LL,  0LL,  &_mh_execute_header,  v29,  0LL,  "%{public}@: Attaching auto-enrollment payment token",  &v140,  v128);

      if (!v32)
      {
LABEL_37:

        id v33 = v25;
        uint64_t v34 = (void *)ISCopyEncodedBase64([v33 bytes], objc_msgSend(v33, "length"));
        uint64_t v35 = +[NSURL copyDictionaryForQueryString:unescapedValues:]( &OBJC_CLASS___NSURL,  "copyDictionaryForQueryString:unescapedValues:",  v23,  1LL);
        [v35 setObject:v34 forKeyedSubscript:@"pkPayment"];
        unsigned int v36 = objc_claimAutoreleasedReturnValue( +[NSURL queryStringForDictionary:escapedValues:]( &OBJC_CLASS___NSURL,  "queryStringForDictionary:escapedValues:",  v35,  1LL));

        -[PurchaseOperation lock](self, "lock");
        -[PurchaseOperation setBuyParameters:](self, "setBuyParameters:", v36);
        -[PurchaseOperation unlock](self, "unlock");

        id v23 = (void *)v36;
        unsigned int v3 = v139;
LABEL_38:
        uint64_t v37 = (void *)objc_claimAutoreleasedReturnValue( -[SSBiometricAuthenticationContext fpanID]( self->_biometricAuthenticationContext,  "fpanID",  v126));
        if (!v37)
        {
LABEL_52:

          unsigned int v6 = v138;
          goto LABEL_53;
        }

        uint64_t v38 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
        if (!v38) {
          uint64_t v38 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
        }
        id v39 = [v38 shouldLog];
        else {
          __int16 v40 = v39;
        }
        id v41 = (os_log_s *)objc_claimAutoreleasedReturnValue([v38 OSLogObject]);
        if (os_log_type_enabled(v41, OS_LOG_TYPE_DEFAULT)) {
          unsigned int v42 = v40;
        }
        else {
          unsigned int v42 = v40 & 2;
        }
        if ((_DWORD)v42)
        {
          id v43 = (id)objc_opt_class(self);
          v140 = 138543362;
          v141 = v43;
          LODWORD(v12_Block_object_dispose(va, 8) = 12;
          uint64_t v44 = (void *)_os_log_send_and_compose_impl( v42,  0LL,  0LL,  0LL,  &_mh_execute_header,  v41,  0LL,  "%{public}@: Attaching FPAN ID",  &v140,  v128);

          if (!v44)
          {
LABEL_51:

            id v45 = +[NSURL copyDictionaryForQueryString:unescapedValues:]( &OBJC_CLASS___NSURL,  "copyDictionaryForQueryString:unescapedValues:",  v23,  1LL);
            [v45 setObject:v37 forKeyedSubscript:@"fpanID"];
            uint64_t v46 = objc_claimAutoreleasedReturnValue( +[NSURL queryStringForDictionary:escapedValues:]( &OBJC_CLASS___NSURL,  "queryStringForDictionary:escapedValues:",  v45,  1LL));

            -[PurchaseOperation lock](self, "lock");
            -[PurchaseOperation setBuyParameters:](self, "setBuyParameters:", v46);
            -[PurchaseOperation unlock](self, "unlock");

            id v23 = (void *)v46;
            unsigned int v3 = v139;
            goto LABEL_52;
          }

          id v41 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v44,  4LL));
          free(v44);
          v125 = v41;
          SSFileLog(v38, @"%@");
        }

        goto LABEL_51;
      }

      id v29 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v32,  4LL));
      free(v32);
      v126 = v29;
      SSFileLog(v26, @"%@");
    }

    goto LABEL_37;
  }

  __int128 v22 = -[PurchaseOperation _newPurchaseRequestOperation](self, "_newPurchaseRequestOperation", v78);
  v85 = (void *)objc_claimAutoreleasedReturnValue([v22 dataProvider]);
  id v23 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v23) {
    id v23 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  v84 = v4;
  unsigned int v24 = [v23 shouldLog];
  uint64_t v25 = (os_log_s *)objc_claimAutoreleasedReturnValue([v23 OSLogObject]);
  if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT)) {
    unsigned int v26 = v24;
  }
  else {
    unsigned int v26 = v24 & 2;
  }
  if ((_DWORD)v26)
  {
    uint64_t v27 = (void *)objc_opt_class(self);
    uint64_t v28 = v27;
    id v29 = (NSString *)objc_claimAutoreleasedReturnValue(-[PurchaseOperation logKey](self, "logKey"));
    uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue(-[PurchaseOperation buyParameters](self, "buyParameters"));
    v87 = 138543874;
    v88 = v27;
    v89 = 2114;
    v90 = v29;
    v91 = 2112;
    v92 = v30;
    LODWORD(v81) = 32;
    uint64_t v31 = (void *)_os_log_send_and_compose_impl( v26,  0LL,  0LL,  0LL,  &_mh_execute_header,  v25,  0LL,  "%{public}@: [%{public}@] Issuing purchase request: %@",  &v87,  v81);

    if (!v31) {
      goto LABEL_30;
    }
    uint64_t v25 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v31,  4LL));
    free(v31);
    v79 = v25;
    SSFileLog(v23, @"%@");
  }

LABEL_30:
  v86 = 0LL;
  id v32 = -[PurchaseOperation runSubOperation:returningError:]( self,  "runSubOperation:returningError:",  v22,  &v86);
  id v33 = v86;
  uint64_t v34 = (void *)objc_claimAutoreleasedReturnValue([v85 output]);
  uint64_t v35 = v34;
  v83 = v33;
  if ((v32 & 1) == 0)
  {
    -[PurchaseOperation _handleFailureForOperation:](self, "_handleFailureForOperation:", v22);
    -[PurchaseOperation setError:](self, "setError:", v33);
    goto LABEL_56;
  }

  unsigned int v36 = (void *)objc_claimAutoreleasedReturnValue([v34 objectForKey:kISFailureTypeKey]);

  if (v36)
  {
    -[PurchaseOperation _handleFailureForOperation:](self, "_handleFailureForOperation:", v22);
  }

  else
  {
    [v85 setShouldProcessDialogs:1];
    [v85 processDialogFromDictionary:v35 error:0];
    uint64_t v37 = (void *)objc_claimAutoreleasedReturnValue([v35 objectForKey:@"DelayedGoto"]);
    uint64_t v38 = objc_opt_class(&OBJC_CLASS___NSDictionary);
    isKindOfClass = objc_opt_isKindOfClass(v37, v38);

    if ((isKindOfClass & 1) != 0) {
      -[PurchaseOperation _performDelayedGotoForOperation:](self, "_performDelayedGotoForOperation:", v22);
    }
    else {
      -[PurchaseOperation setSuccess:](self, "setSuccess:", 1LL);
    }
  }

  __int16 v40 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v35, "objectForKey:", @"keybag", v79));
  id v41 = objc_opt_class(&OBJC_CLASS___NSData);
  if ((objc_opt_isKindOfClass(v40, v41) & 1) != 0 && [v40 length]) {
    sub_100023280(v40);
  }
  v82 = v40;
  unsigned int v42 = SSVSubscriptionBagForDictionary(v35);
  id v43 = (void *)objc_claimAutoreleasedReturnValue(v42);
  if (v43)
  {
    uint64_t v44 = (void *)objc_claimAutoreleasedReturnValue(-[PurchaseOperation _fairPlaySubscriptionController](self, "_fairPlaySubscriptionController"));
    [v44 importSubscriptionKeyBagData:v43 returningError:0];
  }

  id v45 = (void *)objc_claimAutoreleasedReturnValue([v35 objectForKey:@"duAnonymousPings"]);
  uint64_t v46 = objc_opt_class(&OBJC_CLASS___NSArray);
  if ((objc_opt_isKindOfClass(v45, v46) & 1) != 0) {
    [(id)objc_opt_class(self) reportAnonymousPings:v45];
  }
  uint64_t v47 = (void *)objc_claimAutoreleasedReturnValue([v35 objectForKeyedSubscript:@"newsEntitlements"]);
  uint64_t v48 = objc_opt_class(&OBJC_CLASS___NSDictionary);
  if ((objc_opt_isKindOfClass(v47, v48) & 1) != 0)
  {
    uint64_t v49 = (void *)objc_claimAutoreleasedReturnValue(-[PurchaseOperation authenticatedAccountDSID](self, "authenticatedAccountDSID"));
    +[AppStoreUtility sendNewsSubscriptionEntitlementsWithDictionary:forAccountID:]( &OBJC_CLASS___AppStoreUtility,  "sendNewsSubscriptionEntitlementsWithDictionary:forAccountID:",  v47,  v49);
  }

  uint64_t v50 = (void *)objc_claimAutoreleasedReturnValue([v35 objectForKeyedSubscript:@"appStoreEntitlements"]);
  id v51 = objc_opt_class(&OBJC_CLASS___NSDictionary);
  if ((objc_opt_isKindOfClass(v50, v51) & 1) != 0)
  {
    id v52 = (void *)objc_claimAutoreleasedReturnValue(-[PurchaseOperation authenticatedAccountDSID](self, "authenticatedAccountDSID"));
    +[AppStoreUtility sendAppStoreSubscriptionEntitlementsWithDictionary:forAccountID:]( &OBJC_CLASS___AppStoreUtility,  "sendAppStoreSubscriptionEntitlementsWithDictionary:forAccountID:",  v50,  v52);
  }

  int v53 = (void *)objc_claimAutoreleasedReturnValue([v35 objectForKeyedSubscript:@"activityEntitlements"]);
  id v54 = objc_opt_class(&OBJC_CLASS___NSDictionary);
  if ((objc_opt_isKindOfClass(v53, v54) & 1) != 0)
  {
    __int16 v55 = (void *)objc_claimAutoreleasedReturnValue(-[PurchaseOperation authenticatedAccountDSID](self, "authenticatedAccountDSID"));
    +[AppStoreUtility sendActivitySubscriptionEntitlementsWithDictionary:forAccountID:]( &OBJC_CLASS___AppStoreUtility,  "sendActivitySubscriptionEntitlementsWithDictionary:forAccountID:",  v53,  v55);
  }

  -[PurchaseOperation lock](self, "lock");
  __int128 v56 = (NSNumber *)objc_claimAutoreleasedReturnValue([v22 authenticatedAccountDSID]);
  accountID = self->_accountID;
  self->_accountID = v56;

  if (self->_didAuthenticate)
  {
    self->_didAuthenticate = 1;
    goto LABEL_53;
  }

  __int128 v58 = (void *)objc_claimAutoreleasedReturnValue([v85 authenticatedAccountDSID]);
  self->_didAuthenticate = v58 != 0LL;

  if (self->_didAuthenticate)
  {
LABEL_53:
    if ([v85 authenticatedAccountCredentialSource] == (id)3) {
      ++self->_silentAuthCount;
    }
  }

  -[PurchaseOperation unlock](self, "unlock");

LABEL_56:
  -[PurchaseOperation setRawOutput:](self, "setRawOutput:", v35, v79);
  if (v35) {
    __int128 v59 = (void *)objc_claimAutoreleasedReturnValue( +[NSPropertyListSerialization dataWithPropertyList:format:options:error:]( &OBJC_CLASS___NSPropertyListSerialization,  "dataWithPropertyList:format:options:error:",  v35,  200LL,  0LL,  0LL));
  }
  else {
    __int128 v59 = 0LL;
  }
  -[PurchaseOperation lock](self, "lock");
  v60 = (ISURLRequestPerformance *)objc_claimAutoreleasedReturnValue([v22 performanceMetrics]);
  requestPerformanceMetrics = self->_requestPerformanceMetrics;
  self->_requestPerformanceMetrics = v60;

  uint64_t v62 = objc_alloc(&OBJC_CLASS___SSURLConnectionResponse);
  __int16 v63 = (void *)objc_claimAutoreleasedReturnValue([v22 response]);
  id v64 = -[SSURLConnectionResponse initWithURLResponse:bodyData:](v62, "initWithURLResponse:bodyData:", v63, v59);
  urlResponse = self->_urlResponse;
  self->_urlResponse = v64;

  v66 = (void *)objc_claimAutoreleasedReturnValue(-[SSURLConnectionResponse allHeaderFields](self->_urlResponse, "allHeaderFields"));
  v67 = (void *)objc_claimAutoreleasedReturnValue([v66 objectForKey:@"x-apple-jingle-correlation-key"]);

  if (![v67 length]) {
    goto LABEL_73;
  }
  objc_storeStrong((id *)&self->_storeCorrelationID, v67);
  v68 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v68) {
    v68 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  v69 = [v68 shouldLog];
  else {
    v70 = v69;
  }
  v71 = (os_log_s *)objc_claimAutoreleasedReturnValue([v68 OSLogObject]);
  if (os_log_type_enabled(v71, OS_LOG_TYPE_DEFAULT)) {
    v72 = v70;
  }
  else {
    v72 = v70 & 2;
  }
  if (!(_DWORD)v72) {
    goto LABEL_71;
  }
  v73 = (void *)objc_opt_class(self);
  storeCorrelationID = self->_storeCorrelationID;
  v87 = 138412546;
  v88 = v73;
  v89 = 2114;
  v90 = storeCorrelationID;
  v75 = v73;
  LODWORD(v81) = 22;
  v76 = (void *)_os_log_send_and_compose_impl( v72,  0LL,  0LL,  0LL,  &_mh_execute_header,  v71,  0LL,  "%@: storeCorrelationID: %{public}@",  &v87,  v81);

  if (v76)
  {
    v71 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v76,  4LL));
    free(v76);
    v80 = v71;
    SSFileLog(v68, @"%@");
LABEL_71:
  }

LABEL_73:
  -[PurchaseOperation unlock](self, "unlock", v80);
  [v22 setDelegate:0];

  uint64_t v4 = v84;
LABEL_74:
}

  if (!v3)
  {
    __int128 v22 = self;
    id v23 = 0LL;
LABEL_48:
    -[LoadMicroPaymentProductsOperation setError:](v22, "setError:", v23, v32);
    return;
  }

  int v12 = -[LoadMicroPaymentProductsOperation _batchSizeForIdentity:error:]( self,  "_batchSizeForIdentity:error:",  v3,  &v35);
  if (v12 <= 0)
  {
LABEL_47:
    id v23 = v35;
    __int128 v22 = self;
    goto LABEL_48;
  }

  if (!-[LoadMicroPaymentProductsOperation _loadResponseForIdentity:batchSize:returningError:]( self,  "_loadResponseForIdentity:batchSize:returningError:",  v3,  v12,  &v35))
  {
    unsigned int v24 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v24) {
      unsigned int v24 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    uint64_t v25 = objc_msgSend(v24, "shouldLog", v32);
    else {
      LODWORD(v26) = v25;
    }
    uint64_t v27 = (os_log_s *)[v24 OSLogObject];
    if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT)) {
      unsigned int v26 = v26;
    }
    else {
      v26 &= 2u;
    }
    if ((_DWORD)v26)
    {
      uint64_t v28 = objc_opt_class(self);
      unsigned int v36 = 138412546;
      uint64_t v37 = v28;
      uint64_t v38 = 2112;
      id v39 = v35;
      LODWORD(v34) = 22;
      id v29 = _os_log_send_and_compose_impl( v26,  0LL,  0LL,  0LL,  &_mh_execute_header,  v27,  0LL,  "%@: Products load failed/cancelled: %@",  &v36,  v34);
      if (v29)
      {
        uint64_t v30 = (void *)v29;
        uint64_t v31 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v29, 4LL);
        free(v30);
        id v32 = v31;
        SSFileLog(v24, @"%@");
      }
    }

    goto LABEL_47;
  }

  if ((-[LoadMicroPaymentProductsOperation isCancelled](self, "isCancelled") & 1) == 0)
  {
    __int16 v13 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v13) {
      __int16 v13 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    uint64_t v14 = objc_msgSend(v13, "shouldLog", v32);
    else {
      LODWORD(v15) = v14;
    }
    int v16 = (os_log_s *)[v13 OSLogObject];
    if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO)) {
      uint64_t v15 = v15;
    }
    else {
      v15 &= 2u;
    }
    if ((_DWORD)v15)
    {
      id v17 = objc_opt_class(self);
      __int16 v18 = -[NSArray count](self->_productIdentifiers, "count");
      unsigned int v36 = 138412546;
      uint64_t v37 = v17;
      uint64_t v38 = 2048;
      id v39 = (NSString *)v18;
      LODWORD(v34) = 22;
      id v19 = _os_log_send_and_compose_impl( v15,  0LL,  0LL,  0LL,  &_mh_execute_header,  v16,  1LL,  "%@: Loaded products for %lu identifiers",  &v36,  v34);
      if (v19)
      {
        __int16 v20 = (void *)v19;
        __int128 v21 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v19, 4LL);
        free(v20);
        id v33 = v21;
        SSFileLog(v13, @"%@");
      }
    }

    -[LoadMicroPaymentProductsOperation setSuccess:](self, "setSuccess:", 1LL, v33);
  }

    uint64_t v25 = 0;
LABEL_24:

    goto LABEL_25;
  }

  uint64_t v25 = 0;
LABEL_25:

  return v25;
}
}

  return v17;
}

  id v17 = 0LL;
LABEL_23:

  return v17;
}
}

      id v10 = 100LL;
      goto LABEL_20;
    }

    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharediTunesStoreConfig](&OBJC_CLASS___SSLogConfig, "sharediTunesStoreConfig"));
    if (!v15) {
      uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    int v16 = [v15 shouldLog];
    else {
      LODWORD(v17) = v16;
    }
    __int16 v18 = (os_log_s *)objc_claimAutoreleasedReturnValue([v15 OSLogObject]);
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
      id v17 = v17;
    }
    else {
      v17 &= 2u;
    }
    if ((_DWORD)v17)
    {
      id v39 = 138543362;
      __int16 v40 = (id)objc_opt_class(self);
      id v19 = v40;
      __int16 v20 = (void *)_os_log_send_and_compose_impl( v17,  0LL,  0LL,  0LL,  &_mh_execute_header,  v18,  16LL,  "%{public}@: Failed to load URL bag",  &v39,  12);

      if (!v20) {
        goto LABEL_19;
      }
      __int16 v18 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v20,  4LL));
      free(v20);
      uint64_t v35 = v18;
      SSFileLog(v15, @"%@");
    }

    goto LABEL_19;
  }

  id v10 = 100LL;
LABEL_21:
  __int128 v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "campaignId", v35));
  __int128 v22 = (uint64_t)[v21 integerValue];

  if (a4 || v22 <= v10 && v22 >= 1)
  {
    database = self->_database;
    v37[0] = _NSConcreteStackBlock;
    v37[1] = 3221225472LL;
    v37[2] = sub_10017A558;
    v37[3] = &unk_1003506E8;
    uint64_t v38 = v9;
    -[PurchaseActionsDatabase insertInstallAttributionParams:completionHandler:]( database,  "insertInstallAttributionParams:completionHandler:",  v8,  v37);
    unsigned int v24 = v38;
    goto LABEL_25;
  }

  uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharediTunesStoreConfig](&OBJC_CLASS___SSLogConfig, "sharediTunesStoreConfig"));
  if (!v25) {
    uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v26 = [v25 shouldLog];
  else {
    LODWORD(v27) = v26;
  }
  uint64_t v28 = (os_log_s *)objc_claimAutoreleasedReturnValue([v25 OSLogObject]);
  if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
    uint64_t v27 = v27;
  }
  else {
    v27 &= 2u;
  }
  if (!(_DWORD)v27) {
    goto LABEL_38;
  }
  id v29 = (void *)objc_opt_class(self);
  id v39 = 138543874;
  __int16 v40 = v29;
  id v41 = 2050;
  unsigned int v42 = v22;
  id v43 = 2050;
  uint64_t v44 = v10;
  uint64_t v30 = v29;
  LODWORD(v36) = 32;
  uint64_t v31 = (void *)_os_log_send_and_compose_impl( v27,  0LL,  0LL,  0LL,  &_mh_execute_header,  v28,  16LL,  "%{public}@: Tried to insert IA params with campaign ID %{public}li, must be between 0 and %{public}li",  &v39,  v36);

  if (v31)
  {
    uint64_t v28 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v31,  4LL));
    free(v31);
    SSFileLog(v25, @"%@");
LABEL_38:
  }

  if (!v9) {
    goto LABEL_26;
  }
  id v32 = SSErrorDomain;
  id v33 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Campaign id must be between 0 and %li",  v10));
  uint64_t v34 = SSError(v32, 137LL, v33, 0LL);
  unsigned int v24 = (void *)objc_claimAutoreleasedReturnValue(v34);

  (*((void (**)(id, void, void *))v9 + 2))(v9, 0LL, v24);
LABEL_25:

LABEL_26:
}

  -[PurchaseIntentActionOperation setSuccess:](self, "setSuccess:", 1LL, v16);
  -[PurchaseIntentActionOperation setError:](self, "setError:", 0LL);
}

LABEL_53:
  uint64_t v47 = (void *)objc_claimAutoreleasedReturnValue(-[SSURLRequestProperties HTTPHeaders](self->_requestProperties, "HTTPHeaders", v125));
  uint64_t v48 = SSHTTPHeaderUserAgent;
  uint64_t v49 = objc_claimAutoreleasedReturnValue([v47 objectForKey:SSHTTPHeaderUserAgent]);

  if (v49) {
    uint64_t v50 = -[SSMutableAuthenticationContext setValue:forHTTPHeaderField:](v6, "setValue:forHTTPHeaderField:", v49, v48);
  }
  ShouldRequirePasswordImmediately = SSRestrictionsShouldRequirePasswordImmediately(v50);
  id v52 = (void *)objc_claimAutoreleasedReturnValue(-[SSMutableAuthenticationContext requestParameters](v6, "requestParameters"));
  int v53 = (NSMutableDictionary *)[v52 mutableCopy];

  if (!v53) {
    int v53 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  }
  v135 = (void *)v49;
  id v54 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  ShouldRequirePasswordImmediately));
  -[NSMutableDictionary setObject:forKey:](v53, "setObject:forKey:", v54, @"requirePasswordImmediately");

  -[SSMutableAuthenticationContext setRequestParameters:](v6, "setRequestParameters:", v53);
  -[PurchaseOperation lock](self, "lock");
  __int16 v55 = -[PurchaseOperation isPreauthenticated](self, "isPreauthenticated") || self->_didAuthenticate;
  -[PurchaseOperation unlock](self, "unlock");
  objc_msgSend( v3,  "setNeedsAuthentication:",  -[PurchaseOperation _shouldUseClientAuthentication](self, "_shouldUseClientAuthentication"));
  if (!v55 && self->_requiresAuthentication) {
    [v3 setNeedsAuthentication:1];
  }
  if (self->_suppressDialogs)
  {
    __int128 v56 = 1000LL;
LABEL_65:
    -[SSMutableAuthenticationContext setPromptStyle:](v6, "setPromptStyle:", v56, v127);
    goto LABEL_84;
  }

  if (!v55)
  {
    __int128 v57 = self->_ignoresForcedPasswordRestriction ? 0 : ShouldRequirePasswordImmediately;
    if (v57 == 1)
    {
      __int128 v58 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
      if (!v58) {
        __int128 v58 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      __int128 v59 = [v58 shouldLog];
      else {
        v60 = v59;
      }
      int v61 = (os_log_s *)objc_claimAutoreleasedReturnValue([v58 OSLogObject]);
      if (os_log_type_enabled(v61, OS_LOG_TYPE_INFO)) {
        uint64_t v62 = v60;
      }
      else {
        uint64_t v62 = v60 & 2;
      }
      if ((_DWORD)v62)
      {
        __int16 v63 = (id)objc_opt_class(self);
        v140 = 138412290;
        v141 = v63;
        LODWORD(v12_Block_object_dispose(va, 8) = 12;
        id v64 = (void *)_os_log_send_and_compose_impl( v62,  0LL,  0LL,  0LL,  &_mh_execute_header,  v61,  1LL,  "%@: Forcing authentication for restriction",  &v140,  v128);

        if (!v64)
        {
LABEL_83:

          __int128 v56 = 1LL;
          [v3 setNeedsAuthentication:1];
          goto LABEL_65;
        }

        int v61 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v64,  4LL));
        free(v64);
        v127 = v61;
        SSFileLog(v58, @"%@");
      }

      goto LABEL_83;
    }
  }

        -[PurchaseManagerOperation _updateAccount:withPurchaseResponse:]( v2,  "_updateAccount:withPurchaseResponse:",  v6,  v7,  v97);
        goto LABEL_54;
      }

LABEL_84:
  v137 = -[PurchaseOperation _newRequestParameters](self, "_newRequestParameters");
  v65 = (void *)objc_claimAutoreleasedReturnValue([v137 objectForKey:@"disableTouchID"]);
  v66 = [v65 BOOLValue];

  v67 = &selRef_operation_didReceiveResponse_;
  if (v66
    || -[PurchaseResponseInfo didPasswordAuthenticate](self->_responseInfo, "didPasswordAuthenticate")
    || -[PurchaseOperation isPreauthenticated](self, "isPreauthenticated"))
  {
    [v3 setIgnorePreexistingSecureToken:0];
  }

  else
  {
    v121 = objc_alloc_init(&OBJC_CLASS___DaemonBiometricStore);
    if ((id)-[DaemonBiometricStore biometricState](v121, "biometricState") == (id)2)
    {
      v122 = (void *)objc_claimAutoreleasedReturnValue(+[MCProfileConnection sharedConnection](&OBJC_CLASS___MCProfileConnection, "sharedConnection"));
      if ([v122 isPasscodeSet])
      {
        v123 = (void *)objc_claimAutoreleasedReturnValue(-[DaemonBiometricStore identityMap](v121, "identityMap"));
        objc_msgSend(v3, "setIgnorePreexistingSecureToken:", objc_msgSend(v123, "count") != 0);

        v67 = &selRef_operation_didReceiveResponse_;
      }

      else
      {
        [v3 setIgnorePreexistingSecureToken:0];
      }
    }

    else
    {
      [v3 setIgnorePreexistingSecureToken:0];
    }
  }

  v68 = objc_alloc_init(&OBJC_CLASS___DaemonBiometricStore);
  v69 = (void *)objc_claimAutoreleasedReturnValue(-[DaemonBiometricStore identityMap](v68, "identityMap"));
  v133 = v68;
  if ([v69 count])
  {
    v70 = -[DaemonBiometricStore biometricState](v68, "biometricState");

    if (v70 == (id)2)
    {
      v71 = [*(id *)&self->ISOperation_opaque[*((int *)v67 + 821)] didPasswordAuthenticate];
      goto LABEL_93;
    }
  }

  else
  {
  }

  v71 = 0LL;
LABEL_93:
  v72 = (void *)objc_claimAutoreleasedReturnValue([v3 biometricAuthenticationContext]);
  [v72 setShouldSendFallbackHeader:v71];

  [v3 setBiometricSessionDelegate:self];
  if (-[SSBiometricAuthenticationContext shouldContinueTouchIDSession]( self->_biometricAuthenticationContext,  "shouldContinueTouchIDSession"))
  {
    v73 = (void *)objc_claimAutoreleasedReturnValue(-[SSBiometricAuthenticationContext challenge](self->_biometricAuthenticationContext, "challenge"));
    v74 = (void *)objc_claimAutoreleasedReturnValue(-[SSBiometricAuthenticationContext signature](self->_biometricAuthenticationContext, "signature"));
    v75 = -[SSBiometricAuthenticationContext didFallbackToPassword]( self->_biometricAuthenticationContext,  "didFallbackToPassword");
    v76 = -[SSBiometricAuthenticationContext isExtendedAction]( self->_biometricAuthenticationContext,  "isExtendedAction");
    v77 = -[SSBiometricAuthenticationContext isPayment](self->_biometricAuthenticationContext, "isPayment");
    v78 = (void *)objc_claimAutoreleasedReturnValue([v3 biometricAuthenticationContext]);
    [v78 setChallenge:v73];

    v79 = (void *)objc_claimAutoreleasedReturnValue([v139 biometricAuthenticationContext]);
    [v79 setSignature:v74];

    v80 = (void *)objc_claimAutoreleasedReturnValue([v139 biometricAuthenticationContext]);
    [v80 setIsExtendedAction:v76];

    unsigned int v3 = v139;
    v81 = (void *)objc_claimAutoreleasedReturnValue([v139 biometricAuthenticationContext]);
    [v81 setIsPayment:v77];

    if (v75)
    {
      v82 = (void *)objc_claimAutoreleasedReturnValue([v139 biometricAuthenticationContext]);
      [v82 setDidFallbackToPassword:1];

      v83 = (void *)objc_claimAutoreleasedReturnValue([v139 biometricAuthenticationContext]);
      [v83 setShouldSendFallbackHeader:1];
    }

    unsigned int v6 = v138;
    v67 = &selRef_operation_didReceiveResponse_;
  }

  v134 = v53;
  v84 = (void *)objc_claimAutoreleasedReturnValue(-[PurchaseOperation _buyParamProductType](self, "_buyParamProductType"));
  v85 = [v84 isEqualToString:@"A"];

  if (v85)
  {
    v86 = (void *)objc_claimAutoreleasedReturnValue([v3 biometricAuthenticationContext]);
    [v86 setTouchIDDelayEnabled:1];
  }

  v87 = objc_alloc_init(&OBJC_CLASS___PurchaseProtocolDataProvider);
  -[PurchaseProtocolDataProvider setAuthenticationContext:](v87, "setAuthenticationContext:", v6);
  -[PurchaseProtocolDataProvider setBiometricSessionDelegate:](v87, "setBiometricSessionDelegate:", v3);
  -[PurchaseProtocolDataProvider setShouldProcessDialogs:](v87, "setShouldProcessDialogs:", 0LL);
  -[PurchaseProtocolDataProvider setShouldTriggerDownloads:](v87, "setShouldTriggerDownloads:", 0LL);
  -[PurchaseProtocolDataProvider setBiometricAuthenticationContext:]( v87,  "setBiometricAuthenticationContext:",  self->_biometricAuthenticationContext);
  [v3 setDataProvider:v87];
  v88 = (SSMutableURLRequestProperties *)-[SSURLRequestProperties mutableCopy](self->_requestProperties, "mutableCopy");
  if (!v88) {
    v88 = objc_alloc_init(&OBJC_CLASS___SSMutableURLRequestProperties);
  }
  -[SSMutableURLRequestProperties setAllowedRetryCount:](v88, "setAllowedRetryCount:", 0LL);
  -[SSMutableURLRequestProperties setAllowsBootstrapCellularData:]( v88,  "setAllowsBootstrapCellularData:",  -[PurchaseOperation allowsBootstrapCellularData](self, "allowsBootstrapCellularData"));
  -[SSMutableURLRequestProperties setCachePolicy:](v88, "setCachePolicy:", 1LL);
  v89 = (void *)objc_claimAutoreleasedReturnValue(-[PurchaseOperation clientAuditTokenData](self, "clientAuditTokenData"));
  -[SSMutableURLRequestProperties setClientAuditTokenData:](v88, "setClientAuditTokenData:", v89);

  -[SSMutableURLRequestProperties setHTTPMethod:](v88, "setHTTPMethod:", @"POST");
  -[SSMutableURLRequestProperties setRequestParameters:](v88, "setRequestParameters:", v137);
  -[SSMutableURLRequestProperties setShouldDecodeResponse:](v88, "setShouldDecodeResponse:", 0LL);
  -[SSMutableURLRequestProperties setShouldDisableReversePush:]( v88,  "setShouldDisableReversePush:",  -[PurchaseOperation _shouldDisableReversePush](self, "_shouldDisableReversePush"));
  -[SSMutableURLRequestProperties setShouldDisableReversePushSampling:]( v88,  "setShouldDisableReversePushSampling:",  1LL);
  -[SSMutableURLRequestProperties setURLBagType:](v88, "setURLBagType:", -[PurchaseOperation bagType](self, "bagType"));
  -[SSMutableURLRequestProperties setValue:forHTTPHeaderField:]( v88,  "setValue:forHTTPHeaderField:",  @"application/x-apple-plist",  @"Content-Type");
  v90 = (void *)objc_claimAutoreleasedReturnValue(+[ApplicationWorkspace defaultWorkspace](&OBJC_CLASS___ApplicationWorkspace, "defaultWorkspace"));
  v91 = [v90 isMultiUser];

  if (v91) {
    -[SSMutableURLRequestProperties setValue:forHTTPHeaderField:]( v88,  "setValue:forHTTPHeaderField:",  @"true",  SSHTTPHeaderXAppleMMeMultiUser);
  }
  v92 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  v93 = (void *)objc_claimAutoreleasedReturnValue(-[PurchaseOperation _deviceScoreMetricsParam](self, "_deviceScoreMetricsParam"));
  if ([v93 length]) {
    -[NSMutableDictionary setObject:forKeyedSubscript:](v92, "setObject:forKeyedSubscript:", v93, @"deviceScore");
  }
  v94 = (void *)objc_claimAutoreleasedReturnValue(-[PurchaseOperation _buyParamProductType](self, "_buyParamProductType"));
  if ([v94 length]) {
    -[NSMutableDictionary setObject:forKeyedSubscript:]( v92,  "setObject:forKeyedSubscript:",  v94,  @"purchaseProductType");
  }
  if (-[NSMutableDictionary count](v92, "count")) {
    -[SSMutableURLRequestProperties setAdditionalMetrics:](v88, "setAdditionalMetrics:", v92);
  }
  v131 = v93;
  v132 = v92;
  v95 = *((int *)v67 + 821);
  v96 = objc_claimAutoreleasedReturnValue([*(id *)&self->ISOperation_opaque[v95] redirectURL]);
  if (v96) {
    -[SSMutableURLRequestProperties setURL:](v88, "setURL:", v96);
  }
  v129 = (void *)v96;
  v97 = (void *)objc_claimAutoreleasedReturnValue(-[SSMutableURLRequestProperties clientIdentifier](v88, "clientIdentifier"));

  if (!v97)
  {
    v98 = (void *)objc_claimAutoreleasedReturnValue(-[PurchaseOperation clientIdentifierHeader](self, "clientIdentifierHeader"));
    -[SSMutableURLRequestProperties setClientIdentifier:](v88, "setClientIdentifier:", v98);
  }

  if ((-[SSMutableURLRequestProperties canBeResolved](v88, "canBeResolved") & 1) == 0)
  {
    v99 = (void *)objc_claimAutoreleasedReturnValue(-[PurchaseOperation urlBagKey](self, "urlBagKey"));
    -[SSMutableURLRequestProperties setURLBagKey:](v88, "setURLBagKey:", v99);
  }

  v100 = (void *)objc_claimAutoreleasedReturnValue(-[PurchaseOperation _account](self, "_account"));
  v101 = v100;
  if (v100)
  {
    v102 = (void *)objc_claimAutoreleasedReturnValue([v100 uniqueIdentifier]);
    -[PurchaseOperation _addFairPlayToRequestProperties:withAccountIdentifier:]( self,  "_addFairPlayToRequestProperties:withAccountIdentifier:",  v88,  [v102 unsignedLongLongValue]);
  }

  v130 = v94;
  v103 = (void *)objc_claimAutoreleasedReturnValue(+[WiFiManager sharedWiFiManager](&OBJC_CLASS___WiFiManager, "sharedWiFiManager"));
  v104 = (void *)objc_claimAutoreleasedReturnValue([v103 IPAddress]);

  if (v104) {
    -[SSMutableURLRequestProperties setValue:forHTTPHeaderField:]( v88,  "setValue:forHTTPHeaderField:",  v104,  @"X-Apple-Client-Address");
  }
  if (+[SSDevice deviceIsInternalBuild](&OBJC_CLASS___SSDevice, "deviceIsInternalBuild"))
  {
    v105 = (void *)objc_claimAutoreleasedReturnValue(+[NSUUID UUID](&OBJC_CLASS___NSUUID, "UUID"));
    v106 = (void *)objc_claimAutoreleasedReturnValue([v105 UUIDString]);
    -[SSMutableURLRequestProperties setValue:forHTTPHeaderField:]( v88,  "setValue:forHTTPHeaderField:",  v106,  @"X-Apple-Purchase-UUID");
  }

  v107 = (void *)objc_claimAutoreleasedReturnValue(-[SSMutableURLRequestProperties HTTPHeaders](v88, "HTTPHeaders"));
  v108 = SSHTTPHeaderXAppleTADevice;
  v109 = (void *)objc_claimAutoreleasedReturnValue([v107 objectForKeyedSubscript:SSHTTPHeaderXAppleTADevice]);

  if (!v109)
  {
    v110 = (void *)objc_claimAutoreleasedReturnValue(+[SSDevice currentDevice](&OBJC_CLASS___SSDevice, "currentDevice"));
    v111 = (void *)objc_claimAutoreleasedReturnValue([v110 thinnedApplicationVariantIdentifier]);

    if (v111) {
      -[SSMutableURLRequestProperties setValue:forHTTPHeaderField:](v88, "setValue:forHTTPHeaderField:", v111, v108);
    }
  }

  v112 = (void *)objc_claimAutoreleasedReturnValue([*(id *)&self->ISOperation_opaque[v95] machineDataSyncState]);
  if (v112)
  {
    v113 = -[PurchaseOperation _shouldSendSBSyncData](self, "_shouldSendSBSyncData");
    v114 = &SSHTTPHeaderXAppleAMDS;
    if (!v113) {
      v114 = &SSHTTPHeaderXAppleMDS;
    }
    -[SSMutableURLRequestProperties setValue:forHTTPHeaderField:](v88, "setValue:forHTTPHeaderField:", v112, *v114);
  }

  -[PurchaseOperation lock](self, "lock");
  mToken = self->_mToken;
  v116 = v138;
  if (mToken) {
    -[SSMutableURLRequestProperties setValue:forHTTPHeaderField:]( v88,  "setValue:forHTTPHeaderField:",  mToken,  SSHTTPHeaderXToken);
  }
  -[PurchaseOperation unlock](self, "unlock");
  [v139 setAuthenticationContext:v138];
  [v139 setRequestProperties:v88];
  if (-[PurchaseOperation isMoveToiOS](self, "isMoveToiOS"))
  {
    [v139 setNeedsTermsAndConditionsAcceptance:1];
    v117 = (void *)objc_claimAutoreleasedReturnValue(+[SSAccountStore defaultStore](&OBJC_CLASS___SSAccountStore, "defaultStore"));
    v118 = (void *)objc_claimAutoreleasedReturnValue([v117 activeAccount]);

    v116 = v138;
  }

  v119 = v139;

  return v119;
}

void sub_100018F24(id a1)
{
  byte_1003A31B0 = MGGetSInt32Answer(@"DeviceClassNumber", 0xFFFFFFFFLL) == 4;
}

void sub_100018F54(uint64_t a1, void *a2, void *a3)
{
  id v7 = a2;
  id v5 = a3;
  unsigned int v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) objectForKey:v7]);

  if (!v6) {
    [*(id *)(a1 + 32) setObject:v5 forKey:v7];
  }
}

void sub_100019D24(uint64_t a1, void *a2, uint64_t a3)
{
  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 32), "finishWithError:");
  }

  else
  {
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([a2 request]);

    uint64_t v5 = objc_claimAutoreleasedReturnValue(+[AMSLogConfig sharedConfig](&OBJC_CLASS___AMSLogConfig, "sharedConfig"));
    unsigned int v6 = (void *)v5;
    if (v4)
    {
      if (!v5) {
        unsigned int v6 = (void *)objc_claimAutoreleasedReturnValue(+[AMSLogConfig sharedConfig](&OBJC_CLASS___AMSLogConfig, "sharedConfig"));
      }
      id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue([v6 OSLogObject]);
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v8 = objc_opt_class(*(void *)(a1 + 40));
        uint64_t v9 = AMSLogKey();
        id v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
        int v17 = 138543618;
        uint64_t v18 = v8;
        __int16 v19 = 2114;
        __int16 v20 = v10;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "%{public}@: [%{public}@] Handling engagement request asyncronously ",  (uint8_t *)&v17,  0x16u);
      }

      uint64_t v11 = SSError(SSErrorDomain, 106LL, @"AMSEngagmentTask error", @"Platform not supported");
      int v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
      [*(id *)(a1 + 32) finishWithError:v12];
    }

    else
    {
      if (!v5) {
        unsigned int v6 = (void *)objc_claimAutoreleasedReturnValue(+[AMSLogConfig sharedConfig](&OBJC_CLASS___AMSLogConfig, "sharedConfig"));
      }
      __int16 v13 = (os_log_s *)objc_claimAutoreleasedReturnValue([v6 OSLogObject]);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v14 = objc_opt_class(*(void *)(a1 + 40));
        uint64_t v15 = AMSLogKey();
        int v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
        int v17 = 138543618;
        uint64_t v18 = v14;
        __int16 v19 = 2114;
        __int16 v20 = v16;
        _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "%{public}@: [%{public}@] No engagement request provided.",  (uint8_t *)&v17,  0x16u);
      }

      [*(id *)(a1 + 32) finishWithSuccess];
    }
  }

void sub_100019F58(uint64_t a1, void *a2)
{
  unsigned int v3 = a2;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[AMSLogConfig sharedConfig](&OBJC_CLASS___AMSLogConfig, "sharedConfig"));
  if (!v4) {
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[AMSLogConfig sharedConfig](&OBJC_CLASS___AMSLogConfig, "sharedConfig"));
  }
  uint64_t v5 = (os_log_s *)objc_claimAutoreleasedReturnValue([v4 OSLogObject]);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
  {
    uint64_t v6 = objc_opt_class(*(void *)(a1 + 32));
    uint64_t v7 = AMSLogKey();
    uint64_t v8 = objc_claimAutoreleasedReturnValue(v7);
    uint64_t v9 = (void *)v8;
    id v10 = &stru_10035EB18;
    int v11 = 138543874;
    uint64_t v12 = v6;
    if (v3) {
      id v10 = v3;
    }
    __int16 v13 = 2114;
    uint64_t v14 = v8;
    __int16 v15 = 2114;
    int v16 = v10;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_ERROR,  "%{public}@: [%{public}@] Engagement failed. %{public}@",  (uint8_t *)&v11,  0x20u);
  }
}

void sub_10001B2C0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59)
{
}

uint64_t sub_10001B3B0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_10001B3C0(uint64_t a1)
{
}

void sub_10001B3C8(void *a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  id v8 = a5;
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v9) {
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v10 = [v9 shouldLog];
  else {
    unsigned int v11 = v10;
  }
  uint64_t v12 = (os_log_s *)objc_claimAutoreleasedReturnValue([v9 OSLogObject]);
  if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v11 & 2;
  }
  if ((_DWORD)v13)
  {
    uint64_t v14 = a1[4];
    *(_DWORD *)uint64_t v38 = 138543362;
    *(void *)&v38[4] = v14;
    __int16 v15 = (void *)_os_log_send_and_compose_impl( v13,  0LL,  0LL,  0LL,  &_mh_execute_header,  v12,  0LL,  "%{public}@: [ASN] DisplayPaymentSheetOperation did complete",  v38,  12);

    if (!v15) {
      goto LABEL_13;
    }
    uint64_t v12 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v15,  4LL));
    free(v15);
    unsigned int v36 = v12;
    SSFileLog(v9, @"%@");
  }

LABEL_13:
  if (v8)
  {
    objc_storeStrong((id *)(*(void *)(a1[5] + 8LL) + 40LL), a5);
    int v16 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v16) {
      int v16 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v17 = objc_msgSend(v16, "shouldLog", v36);
    else {
      unsigned int v18 = v17;
    }
    __int16 v19 = (os_log_s *)objc_claimAutoreleasedReturnValue([v16 OSLogObject]);
    if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
      uint64_t v20 = v18;
    }
    else {
      uint64_t v20 = v18 & 2;
    }
    if (!(_DWORD)v20) {
      goto LABEL_48;
    }
    uint64_t v21 = a1[4];
    *(_DWORD *)uint64_t v38 = 138543618;
    *(void *)&v38[4] = v21;
    *(_WORD *)&v38[12] = 2112;
    *(void *)&v38[14] = v8;
    LODWORD(v37) = 22;
    __int128 v22 = "%{public}@: [ASN] Payment sheet authorized failed with error: %@";
    goto LABEL_45;
  }

  if ((a4 & 1) == 0)
  {
    uint64_t v28 = SSError(SSErrorDomain, 140LL, @"DisplayPaymentSheetOperation Error", @"User cancelled");
    uint64_t v29 = objc_claimAutoreleasedReturnValue(v28);
    uint64_t v30 = *(void *)(a1[5] + 8LL);
    uint64_t v31 = *(void **)(v30 + 40);
    *(void *)(v30 + 40) = v29;

    int v16 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v16) {
      int v16 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v32 = objc_msgSend(v16, "shouldLog", v36);
    else {
      unsigned int v33 = v32;
    }
    __int16 v19 = (os_log_s *)objc_claimAutoreleasedReturnValue([v16 OSLogObject]);
    if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
      uint64_t v20 = v33;
    }
    else {
      uint64_t v20 = v33 & 2;
    }
    if (!(_DWORD)v20) {
      goto LABEL_48;
    }
    uint64_t v34 = a1[4];
    *(_DWORD *)uint64_t v38 = 138543618;
    *(void *)&v38[4] = v34;
    *(_WORD *)&v38[12] = 2114;
    *(void *)&v38[14] = 0LL;
    LODWORD(v37) = 22;
    __int128 v22 = "%{public}@: [ASN] Payment sheet authorization failed with error: %{public}@";
LABEL_45:
    uint64_t v27 = _os_log_send_and_compose_impl( v20,  0LL,  0LL,  0LL,  &_mh_execute_header,  v19,  16LL,  v22,  v38,  v37,  *(void *)v38,  *(_OWORD *)&v38[8]);
    goto LABEL_46;
  }

  *(_BYTE *)(*(void *)(a1[6] + 8LL) + 24LL) = a4;
  int v16 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v16) {
    int v16 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v23 = objc_msgSend(v16, "shouldLog", v36);
  else {
    unsigned int v24 = v23;
  }
  __int16 v19 = (os_log_s *)objc_claimAutoreleasedReturnValue([v16 OSLogObject]);
  if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v25 = v24;
  }
  else {
    uint64_t v25 = v24 & 2;
  }
  if (!(_DWORD)v25) {
    goto LABEL_48;
  }
  uint64_t v26 = a1[4];
  *(_DWORD *)uint64_t v38 = 138543362;
  *(void *)&v38[4] = v26;
  LODWORD(v37) = 12;
  uint64_t v27 = _os_log_send_and_compose_impl( v25,  0LL,  0LL,  0LL,  &_mh_execute_header,  v19,  0LL,  "%{public}@: [ASN] Payment sheet did authorize payment with A/S/N",  v38,  v37,  *(_OWORD *)v38,  *(void *)&v38[16]);
LABEL_46:
  uint64_t v35 = (void *)v27;

  if (v35)
  {
    __int16 v19 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v35,  4LL));
    free(v35);
    SSFileLog(v16, @"%@");
LABEL_48:
  }
}

void sub_10001B828(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  id v7 = a2;
  if ([v7 actionType] == 3)
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 40LL), a2);
    *a4 = 1;
  }
}

void sub_10001B890(uint64_t a1, void *a2)
{
  if (a2)
  {
    unsigned int v3 = *(void **)(a1 + 32);
    id v4 = a2;
    id v9 = (id)objc_claimAutoreleasedReturnValue([v3 buttons]);
    id v5 = [v4 selectedButtonIndex];

    uint64_t v6 = objc_claimAutoreleasedReturnValue([v9 objectAtIndex:v5]);
    uint64_t v7 = *(void *)(*(void *)(a1 + 40) + 8LL);
    id v8 = *(void **)(v7 + 40);
    *(void *)(v7 + 40) = v6;
  }

void sub_10001C750( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
}

void sub_10001C774(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v8 = WeakRetained;
  if (WeakRetained)
  {
    if (v5 && !v6)
    {
      uint64_t v9 = OBJC_IVAR___ISOperation__lock;
      [*(id *)((char *)WeakRetained + OBJC_IVAR___ISOperation__lock) lock];
      id v10 = [v5 copy];
      unsigned int v11 = (void *)v8[41];
      v8[41] = v10;

      [*(id *)((char *)v8 + v9) unlock];
      goto LABEL_31;
    }

    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v12) {
      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v13 = [v12 shouldLog];
    else {
      unsigned int v14 = v13;
    }
    __int16 v15 = (os_log_s *)objc_claimAutoreleasedReturnValue([v12 OSLogObject]);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
      uint64_t v16 = v14;
    }
    else {
      uint64_t v16 = v14 & 2;
    }
    if ((_DWORD)v16)
    {
      int v28 = 138543362;
      id v29 = v6;
      unsigned int v17 = (void *)_os_log_send_and_compose_impl( v16,  0LL,  0LL,  0LL,  &_mh_execute_header,  v15,  16LL,  "PurchaseOperation: Failed to score device: %{public}@",  &v28,  12);

      if (!v17) {
        goto LABEL_17;
      }
      __int16 v15 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v17,  4LL));
      free(v17);
      uint64_t v26 = v15;
      SSFileLog(v12, @"%@");
    }

LABEL_17:
    unsigned int v18 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 176) context]);
    id v19 = [v18 serverEndpoint];

    if (v19 != (id)2) {
      goto LABEL_31;
    }
    uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v20) {
      uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v21 = objc_msgSend(v20, "shouldLog", v26);
    else {
      unsigned int v22 = v21;
    }
    unsigned int v23 = (os_log_s *)objc_claimAutoreleasedReturnValue([v20 OSLogObject]);
    if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
      uint64_t v24 = v22;
    }
    else {
      uint64_t v24 = v22 & 2;
    }
    if ((_DWORD)v24)
    {
      LOWORD(v2_Block_object_dispose(va, 8) = 0;
      LODWORD(v27) = 2;
      uint64_t v25 = (void *)_os_log_send_and_compose_impl( v24,  0LL,  0LL,  0LL,  &_mh_execute_header,  v23,  16LL,  "PurchaseOperation: Attempting to restart a v1 device score",  &v28,  v27);

      if (!v25)
      {
LABEL_30:

        [v8 _scoreDeviceRetryFailedV2Score];
        goto LABEL_31;
      }

      unsigned int v23 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v25,  4LL));
      free(v25);
      SSFileLog(v20, @"%@");
    }

    goto LABEL_30;
  }

LABEL_31:
}
}

    unsigned int v33 = (void *)objc_claimAutoreleasedReturnValue([v50 headerEnrichmentSessionIdentifier]);
    v51[0] = _NSConcreteStackBlock;
    v51[1] = 3221225472LL;
    v51[2] = sub_10009BD0C;
    v51[3] = &unk_10034D148;
    v51[4] = &v53;
    v51[5] = &v59;
    -[CarrierBundlingEligibilityOperation _finishSilentSMSWithSessionID:responseCode:smsSendingError:outputBlock:]( self,  "_finishSilentSMSWithSessionID:responseCode:smsSendingError:outputBlock:",  v33,  v24,  v13,  v51);
    uint64_t v34 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v34) {
      uint64_t v34 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    uint64_t v35 = objc_msgSend(v34, "shouldLog", v47);
    unsigned int v36 = [v34 shouldLogToDisk];
    uint64_t v37 = (os_log_s *)objc_claimAutoreleasedReturnValue([v34 OSLogObject]);
    uint64_t v38 = v37;
    if (v36) {
      id v39 = v35 | 2;
    }
    else {
      id v39 = v35;
    }
    if (os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT)) {
      __int16 v40 = v39;
    }
    else {
      __int16 v40 = v39 & 2;
    }
    if ((_DWORD)v40)
    {
      id v41 = (void *)objc_opt_class(self);
      v65 = 138412290;
      v66 = v41;
      unsigned int v42 = v41;
      LODWORD(v4_Block_object_dispose(va, 8) = 12;
      id v43 = (void *)_os_log_send_and_compose_impl( v40,  0LL,  0LL,  0LL,  &_mh_execute_header,  v38,  0LL,  "%@: Performing delayed retry: still need silent SMS",  &v65,  v48);

      if (!v43) {
        goto LABEL_44;
      }
      uint64_t v38 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v43,  4LL));
      free(v43);
      uint64_t v46 = v38;
      SSFileLog(v34, @"%@");
    }

LABEL_44:
    [(id)v60[5] delayInterval];
    +[NSThread sleepForTimeInterval:](&OBJC_CLASS___NSThread, "sleepForTimeInterval:");
  }

LABEL_49:
  if (v49) {
    v49[2](v49, v60[5], v54[5]);
  }

  _Block_object_dispose(&v53, 8);
  _Block_object_dispose(&v59, 8);
}

  unsigned int v33 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig", v43));
  if (!v33) {
    unsigned int v33 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  uint64_t v34 = [v33 shouldLog];
  uint64_t v35 = (os_log_s *)objc_claimAutoreleasedReturnValue([v33 OSLogObject]);
  if (os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT)) {
    unsigned int v36 = v34;
  }
  else {
    unsigned int v36 = v34 & 2;
  }
  if ((_DWORD)v36)
  {
    uint64_t v37 = (void *)objc_opt_class(self);
    uint64_t v38 = v37;
    id v39 = [v6 databaseID];
    __int16 v40 = -[FinishDownloadMemoryEntity databaseID](self->_download, "databaseID");
    uint64_t v49 = 138412802;
    uint64_t v50 = v37;
    id v51 = 2048;
    id v52 = v39;
    int v53 = 2048;
    id v54 = v40;
    LODWORD(v44) = 32;
    id v41 = (void *)_os_log_send_and_compose_impl( v36,  0LL,  0LL,  0LL,  &_mh_execute_header,  v35,  0LL,  "%@: Failed to download and install asset: %lld for download: %lld",  &v49,  v44);

    if (!v41) {
      goto LABEL_42;
    }
    uint64_t v35 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v41,  4LL));
    free(v41);
    SSFileLog(v33, @"%@");
  }

LABEL_42:
  if (v46)
  {
    uint64_t v31 = v31;
    unsigned int v32 = 0;
    *uint64_t v46 = v31;
  }

  else
  {
    unsigned int v32 = 0;
  }

  return 1LL;
}

  objc_msgSend(*(id *)(a1 + 32), "_reloadKeepAliveAssertion", v27);

  return 1LL;
}

void sub_10001CCA8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
}

void sub_10001CCCC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v8 = WeakRetained;
  if (WeakRetained)
  {
    if (v5 && !v6)
    {
      uint64_t v9 = OBJC_IVAR___ISOperation__lock;
      [*(id *)((char *)WeakRetained + OBJC_IVAR___ISOperation__lock) lock];
      id v10 = [v5 copy];
      unsigned int v11 = (void *)v8[41];
      v8[41] = v10;

      [*(id *)((char *)v8 + v9) unlock];
      goto LABEL_18;
    }

    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v12) {
      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v13 = [v12 shouldLog];
    else {
      unsigned int v14 = v13;
    }
    __int16 v15 = (os_log_s *)objc_claimAutoreleasedReturnValue([v12 OSLogObject]);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
      uint64_t v16 = v14;
    }
    else {
      uint64_t v16 = v14 & 2;
    }
    if ((_DWORD)v16)
    {
      int v18 = 138543362;
      id v19 = v6;
      unsigned int v17 = (void *)_os_log_send_and_compose_impl( v16,  0LL,  0LL,  0LL,  &_mh_execute_header,  v15,  16LL,  "PurchaseOperation: Failed to score device on retry: %{public}@",  &v18,  12);

      if (!v17)
      {
LABEL_17:

        goto LABEL_18;
      }

      __int16 v15 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v17,  4LL));
      free(v17);
      SSFileLog(v12, @"%@");
    }

    goto LABEL_17;
  }

void sub_10001D2AC(id a1)
{
  uint32_t v1 = arc4random();
  srand48(v1);
}

LABEL_32:
  return (char)v2;
}
}

  if (a4) {
    *a4 = v31;
  }
  return v7;
}

  return v5;
}
}

void sub_10001E0AC(uint64_t a1)
{
  if (!*(void *)(*(void *)(a1 + 32) + 136LL)) {
    *(void *)(*(void *)(a1 + 32) + 136LL) = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
  }
  id v2 = [*(id *)(a1 + 40) copy];
  [*(id *)(*(void *)(a1 + 32) + 136) addObject:v2];
}

void sub_10001E1D0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_10001E1E8(uint64_t a1, uint64_t a2)
{
}

void sub_10001E1F8(uint64_t a1)
{
}

id sub_10001E204(uint64_t a1)
{
  id result = [*(id *)(*(void *)(a1 + 32) + 136) copy];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL) = result;
  return result;
}

void sub_10001E2F8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

id sub_10001E310(uint64_t a1)
{
  id result = *(id *)(*(void *)(a1 + 32) + 144LL);
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL) = result;
  return result;
}

uint64_t sub_10001E3E8(uint64_t result)
{
  *(void *)(*(void *)(*(void *)(result + 40) + 8LL) + 24LL) = *(void *)(*(void *)(result + 32) + 152LL);
  return result;
}

void sub_10001E4BC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

id sub_10001E4D4(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = [*(id *)(*(void *)(a1 + 32) + 136) copy];
  return [*(id *)(*(void *)(a1 + 32) + 136) removeAllObjects];
}

uint64_t sub_10001E5B8(uint64_t result)
{
  *(_BYTE *)(*(void *)(*(void *)(result + 40) + 8LL) + 24LL) = *(_BYTE *)(*(void *)(result + 32) + 160LL);
  return result;
}

uint64_t sub_10001E674(uint64_t result)
{
  *(_BYTE *)(*(void *)(*(void *)(result + 40) + 8LL) + 24LL) = *(_BYTE *)(*(void *)(result + 32) + 161LL);
  return result;
}

void *sub_10001E6F4(void *result)
{
  uint32_t v1 = *(void **)(result[4] + 144LL);
  if (v1 != (void *)result[5])
  {
    id v2 = result;

    id result = [(id)v2[5] copy];
    *(void *)(v2[4] + 144LL) = result;
  }

  return result;
}

uint64_t sub_10001E7A0(uint64_t result)
{
  *(void *)(*(void *)(result + 32) + 152LL) = *(void *)(result + 40);
  return result;
}

uint64_t sub_10001E81C(uint64_t result)
{
  *(_BYTE *)(*(void *)(result + 32) + 160LL) = *(_BYTE *)(result + 40);
  return result;
}

uint64_t sub_10001E89C(uint64_t result)
{
  *(_BYTE *)(*(void *)(result + 32) + 161LL) = *(_BYTE *)(result + 40);
  return result;
}

void sub_10001E96C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

NSString *sub_10001E984(uint64_t a1)
{
  id v2 = objc_alloc(&OBJC_CLASS___NSString);
  v4.receiver = *(id *)(a1 + 32);
  v4.super_class = (Class)&OBJC_CLASS___DownloadHandlerClient;
  id result = [(NSString *)v2 initWithFormat:@"%@: Blocks: %d, Ignores: (%@)", objc_msgSendSuper2(&v4, "description"), *(unsigned __int8 *)(*(void *)(a1 + 32) + 161), *(void *)(*(void *)(a1 + 32) + 144)];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL) = result;
  return result;
}

id sub_10001F6EC(uint64_t a1, float a2)
{
  uint64_t v3 = OBJC_IVAR___ISOperation__progress;
  [*(id *)(*(void *)(a1 + 32) + OBJC_IVAR___ISOperation__progress) setCurrentValue:(uint64_t)(float)(a2 * 100.0)];
  [*(id *)(*(void *)(a1 + 32) + v3) snapshot];
  return [*(id *)(a1 + 32) sendProgressToDelegate];
}

uint64_t sub_10001F740()
{
  return ISWeakLinkedStringConstantForString("AVFileProcessorAttribute_ChunkMD5Array", 14LL);
}

uint64_t sub_10001F750()
{
  return ISWeakLinkedStringConstantForString("AVFileProcessorAttribute_FileMD5", 14LL);
}

uint64_t sub_10001F760()
{
  return ISWeakLinkedStringConstantForString("AVFileProcessorAttribute_MD5ChunkSize", 14LL);
}

uint64_t sub_10001F770()
{
  return ISWeakLinkedStringConstantForString("AVFileProcessorAttribute_RentalPeriod", 14LL);
}

uint64_t sub_10001F780()
{
  return ISWeakLinkedStringConstantForString("AVFileProcessorAttribute_RentalPlaybackPeriod", 14LL);
}

uint64_t sub_10001F790()
{
  return ISWeakLinkedStringConstantForString("AVFileProcessorAttribute_RentalPlaybackStartDate", 14LL);
}

uint64_t sub_10001F7A0()
{
  return ISWeakLinkedStringConstantForString("AVFileProcessorAttribute_RentalStartDate", 14LL);
}

uint64_t sub_10001F7B0()
{
  return ISWeakLinkedStringConstantForString("AVFileProcessorAttribute_Sinfs", 14LL);
}

LABEL_44:
  id v6 = 0LL;
  objc_super v4 = 0LL;
  uint64_t v62 = 0LL;
  __int16 v63 = 0LL;
LABEL_68:
  uint64_t v37 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig", v60);
  if (!v37) {
    uint64_t v37 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  uint64_t v38 = [v37 shouldLog];
  else {
    LODWORD(v39) = v38;
  }
  __int16 v40 = (os_log_s *)[v37 OSLogObject];
  if (os_log_type_enabled(v40, OS_LOG_TYPE_DEFAULT)) {
    id v39 = v39;
  }
  else {
    v39 &= 2u;
  }
  if ((_DWORD)v39)
  {
    id v41 = objc_opt_class(self);
    id v64 = 138412290;
    v65 = v41;
    LODWORD(v61) = 12;
    unsigned int v42 = (NSData *)_os_log_send_and_compose_impl( v39,  0LL,  0LL,  0LL,  &_mh_execute_header,  v40,  0LL,  "%@: Could not generate checkout request body",  &v64,  v61);
    if (!v42)
    {
      id v8 = 0LL;
      goto LABEL_106;
    }

    +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v42, 4LL);
    free(v42);
    SSFileLog(v37, @"%@");
  }

  id v8 = 0LL;
  unsigned int v42 = 0LL;
LABEL_106:

  return v42;
}

              id v29 = 0LL;
LABEL_45:
              if (v27 == 2)
              {
                if ((v20[3] & 2) != 0 && !*v24)
                {
                  int v53 = (void *)objc_claimAutoreleasedReturnValue([v7[459] sharedDaemonConfig]);
                  if (!v53) {
                    int v53 = (void *)objc_claimAutoreleasedReturnValue([v7[459] sharedConfig]);
                  }
                  LODWORD(v62) = objc_msgSend(v53, "shouldLog", v86);
                  __int16 v55 = (os_log_s *)objc_claimAutoreleasedReturnValue([v53 OSLogObject]);
                  if (os_log_type_enabled(v55, OS_LOG_TYPE_DEBUG)) {
                    uint64_t v62 = v62;
                  }
                  else {
                    v62 &= 2u;
                  }
                  if ((_DWORD)v62)
                  {
                    __int16 v63 = (void *)objc_opt_class(self);
                    v100 = 138412802;
                    v101 = v63;
                    v102 = 2112;
                    v103 = (char *)v95;
                    v104 = 2080;
                    v105 = v25;
                    __int128 v57 = v63;
                    LODWORD(v87) = 32;
                    __int128 v58 = _os_log_send_and_compose_impl( v62,  0LL,  0LL,  0LL,  &_mh_execute_header,  v55,  2LL,  "%@: Skipping empty directory at %@/%s",  &v100,  v87);
LABEL_105:
                    id v64 = (void *)v58;

                    if (v64)
                    {
                      __int16 v55 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v64,  4LL));
                      free(v64);
                      v86 = v55;
                      SSFileLog(v53, @"%@");
                      goto LABEL_107;
                    }

      if (v8)
      {
        uint64_t v34 = (void *)objc_claimAutoreleasedReturnValue( -[PushNotificationController _environmentForName:createIfNeeded:inContext:]( self,  "_environmentForName:createIfNeeded:inContext:",  v8,  1LL,  v4));
        -[PushNotificationController _openConnectionForEnvironment:](self, "_openConnectionForEnvironment:", v34);
        -[PushNotificationController _postTokensIfNecessaryInContext:](self, "_postTokensIfNecessaryInContext:", v4);
LABEL_58:

        goto LABEL_59;
      }

      uint64_t v34 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
      if (!v34) {
        uint64_t v34 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      uint64_t v35 = objc_msgSend(v34, "shouldLog", v41);
      else {
        LODWORD(v36) = v35;
      }
      uint64_t v37 = (os_log_s *)objc_claimAutoreleasedReturnValue([v34 OSLogObject]);
      if (os_log_type_enabled(v37, OS_LOG_TYPE_INFO)) {
        unsigned int v36 = v36;
      }
      else {
        v36 &= 2u;
      }
      if ((_DWORD)v36)
      {
        uint64_t v38 = (void *)objc_opt_class(self);
        uint64_t v49 = 138543362;
        uint64_t v50 = v38;
        id v39 = v38;
        LODWORD(v42) = 12;
        __int16 v40 = (void *)_os_log_send_and_compose_impl( v36,  0LL,  0LL,  0LL,  &_mh_execute_header,  v37,  1LL,  "%{public}@: Unable to add environment -- environment is nil",  &v49,  v42);

        if (!v40) {
          goto LABEL_58;
        }
        uint64_t v37 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v40,  4LL));
        free(v40);
        SSFileLog(v34, @"%@");
      }

      goto LABEL_58;
    }

    unsigned int v23 = (id)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v23) {
      unsigned int v23 = (id)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    int v28 = [v23 shouldLog];
    else {
      LODWORD(v29) = v28;
    }
    uint64_t v30 = (os_log_s *)objc_claimAutoreleasedReturnValue([v23 OSLogObject]);
    if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT)) {
      id v29 = v29;
    }
    else {
      v29 &= 2u;
    }
    if ((_DWORD)v29)
    {
      uint64_t v31 = (void *)objc_opt_class(self);
      uint64_t v49 = 138412546;
      uint64_t v50 = v31;
      id v51 = 2112;
      id v52 = v22;
      unsigned int v32 = v31;
      LODWORD(v42) = 22;
      unsigned int v33 = (void *)_os_log_send_and_compose_impl( v29,  0LL,  0LL,  0LL,  &_mh_execute_header,  v30,  0LL,  "%@: Could not fetch environments: %@",  &v49,  v42);

      if (!v33) {
        goto LABEL_44;
      }
      uint64_t v30 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v33,  4LL));
      free(v33);
      id v41 = v30;
      SSFileLog(v23, @"%@");
    }

    goto LABEL_44;
  }

LABEL_40:
  return v4 != 0LL;
}

  v41[2](v41, v22);
}

          v97 = v13;
          uint64_t v48 = (void *)objc_claimAutoreleasedReturnValue(+[SSDevice currentDevice](&OBJC_CLASS___SSDevice, "currentDevice"));
          uint64_t v49 = objc_claimAutoreleasedReturnValue([v48 storeFrontIdentifier]);

          if (v49) {
            [v101 setObject:v49 forKey:@"StorefrontID"];
          }
          v92 = (void *)v49;
          uint64_t v50 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
          if (!v50) {
            uint64_t v50 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
          }
          id v51 = [v50 shouldLog];
          id v52 = (os_log_s *)objc_claimAutoreleasedReturnValue([v50 OSLogObject]);
          if (os_log_type_enabled(v52, OS_LOG_TYPE_INFO)) {
            int v53 = v51;
          }
          else {
            int v53 = v51 & 2;
          }
          if ((_DWORD)v53)
          {
            v111 = 138412290;
            v112[0] = v102;
            LODWORD(v89) = 12;
            id v54 = (void *)_os_log_send_and_compose_impl( v53,  0LL,  0LL,  0LL,  &_mh_execute_header,  v52,  1LL,  "[Download]: Initializing RTCReporting with sessionInfo %@",  &v111,  v89);

            if (!v54) {
              goto LABEL_53;
            }
            id v52 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v54,  4LL));
            free(v54);
            v86 = v52;
            SSFileLog(v50, @"%@");
          }

LABEL_53:
          __int16 v55 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
          if (!v55) {
            __int16 v55 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
          }
          __int128 v56 = objc_msgSend(v55, "shouldLog", v86);
          __int128 v57 = (os_log_s *)objc_claimAutoreleasedReturnValue([v55 OSLogObject]);
          if (os_log_type_enabled(v57, OS_LOG_TYPE_DEFAULT)) {
            __int128 v58 = v56;
          }
          else {
            __int128 v58 = v56 & 2;
          }
          if ((_DWORD)v58)
          {
            v111 = 138412290;
            v112[0] = v101;
            LODWORD(v89) = 12;
            __int128 v59 = (void *)_os_log_send_and_compose_impl( v58,  0LL,  0LL,  0LL,  &_mh_execute_header,  v57,  0LL,  "[Download]: Initializing RTCReporting with userInfo %@",  &v111,  v89);

            if (!v59) {
              goto LABEL_64;
            }
            __int128 v57 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v59,  4LL));
            free(v59);
            v87 = v57;
            SSFileLog(v55, @"%@");
          }

LABEL_64:
          v95 = v18;

          v60 = [[v35 alloc] initWithSessionInfo:v102 userInfo:v101 frameworksToCheck:0];
          [v60 setMessageLoggingBlock:&stru_10034E658];
          v99 = v60;
          [v60 startConfigurationWithCompletionHandler:&stru_10034E698];
          int v61 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
          v96 = v14;
          uint64_t v62 = v14;
          v110 = v61;
          if (v62)
          {
            __int16 v63 = v62;
            v90 = v12;
            id v64 = 0LL;
            do
            {
              v65 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"errorDomain%d",  v64));
              v66 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"errorCode%d",  v64));
              v67 = (void *)objc_claimAutoreleasedReturnValue(-[NSError domain](v63, "domain"));
              v68 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInteger:]( &OBJC_CLASS___NSNumber,  "numberWithInteger:",  -[NSError code](v63, "code")));
              if (v67) {
                -[NSMutableDictionary setObject:forKey:](v61, "setObject:forKey:", v67, v65);
              }
              -[NSMutableDictionary setObject:forKey:](v61, "setObject:forKey:", v68, v66);
              v69 = (void *)objc_claimAutoreleasedReturnValue(-[NSError userInfo](v63, "userInfo"));
              v70 = (NSError *)objc_claimAutoreleasedReturnValue([v69 objectForKey:NSUnderlyingErrorKey]);

              int v61 = v110;
              if (!v70) {
                break;
              }
              __int16 v63 = v70;
              v71 = v64 >= 9;
              id v64 = (v64 + 1);
            }

            while (!v71);

            uint64_t v12 = v90;
            uint64_t v26 = v98;
          }

          -[NSMutableDictionary setObject:forKey:]( v61,  "setObject:forKey:",  @"downloadResult",  @"event",  v87);
          v72 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
          -[NSMutableDictionary setObject:forKey:](v72, "setObject:forKey:", &off_10036D878, v106);
          v73 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedShort:](&OBJC_CLASS___NSNumber, "numberWithUnsignedShort:", v100));
          -[NSMutableDictionary setObject:forKey:](v72, "setObject:forKey:", v73, v105);

          -[NSMutableDictionary setObject:forKey:](v72, "setObject:forKey:", &off_10036D890, v104);
          -[NSMutableDictionary setObject:forKey:](v72, "setObject:forKey:", v61, v103);
          v74 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
          if (!v74) {
            v74 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
          }
          v75 = [v74 shouldLog];
          v76 = (os_log_s *)objc_claimAutoreleasedReturnValue([v74 OSLogObject]);
          if (os_log_type_enabled(v76, OS_LOG_TYPE_DEFAULT)) {
            v77 = v75;
          }
          else {
            v77 = v75 & 2;
          }
          unsigned int v13 = v97;
          if ((_DWORD)v77)
          {
            v111 = 67109378;
            LODWORD(v112[0]) = v100;
            WORD2(v112[0]) = 2112;
            *(void *)((char *)v112 + 6) = v72;
            LODWORD(v89) = 18;
            v78 = (void *)_os_log_send_and_compose_impl( v77,  0LL,  0LL,  0LL,  &_mh_execute_header,  v76,  0LL,  "[Download]: RTCReporting reporting download QoS result %d with payload: %@",  &v111,  v89);

            if (!v78) {
              goto LABEL_83;
            }
            v76 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v78,  4LL));
            free(v78);
            v88 = v76;
            SSFileLog(v74, @"%@");
          }

LABEL_83:
          v79 = [v99 sendMessageWithDictionary:v72 error:0];
          v80 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
          if (!v80) {
            v80 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
          }
          v81 = objc_msgSend(v80, "shouldLog", v88);
          v82 = (os_log_s *)objc_claimAutoreleasedReturnValue([v80 OSLogObject]);
          if (os_log_type_enabled(v82, OS_LOG_TYPE_INFO)) {
            v83 = v81;
          }
          else {
            v83 = v81 & 2;
          }
          if ((_DWORD)v83)
          {
            v84 = @"unsuccessful";
            if (v79) {
              v84 = @"successful";
            }
            v111 = 138412290;
            v112[0] = v84;
            LODWORD(v89) = 12;
            v85 = (void *)_os_log_send_and_compose_impl( v83,  0LL,  0LL,  0LL,  &_mh_execute_header,  v82,  1LL,  "[Download]: RTCReporting sending downloadResult payload was %@",  &v111,  v89);

            uint64_t v20 = v91;
            if (!v85) {
              goto LABEL_97;
            }
            v82 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v85,  4LL));
            free(v85);
            SSFileLog(v80, @"%@");
          }

          else
          {
            uint64_t v20 = v91;
          }

LABEL_97:
          int v18 = v95;
          unsigned int v14 = v96;
          uint64_t v24 = v93;
          unsigned int v22 = v94;
LABEL_98:

          goto LABEL_99;
        }

        id v41 = @"com.apple.videos.tvshows.purchase.cloud";
        unsigned int v42 = @"episode";
LABEL_32:
        [v39 setObject:v41 forKey:v18];
        id v43 = 1;
        if (!v12) {
          goto LABEL_40;
        }
        goto LABEL_35;
      }

      id v41 = @"com.apple.videos.movies.purchase.cloud";
    }

    unsigned int v42 = @"movie";
    goto LABEL_32;
  }

  -[SoftwareLibraryUpdateOperation setError:](self, "setError:", v32, v29);
  -[SoftwareLibraryUpdateOperation setSuccess:](self, "setSuccess:", v5);
}

    v80 = v23;
  }

  v94 = 0u;
  v95 = 0u;
  v92 = 0u;
  v93 = 0u;
  unsigned int v32 = self->_events;
  unsigned int v33 = -[NSArray countByEnumeratingWithState:objects:count:]( v32,  "countByEnumeratingWithState:objects:count:",  &v92,  v105,  16LL);
  if (v33)
  {
    uint64_t v34 = v33;
    uint64_t v35 = *(void *)v93;
    do
    {
      for (k = 0LL; k != v34; k = (char *)k + 1)
      {
        if (*(void *)v93 != v35) {
          objc_enumerationMutation(v32);
        }
        uint64_t v37 = *(void **)(*((void *)&v92 + 1) + 8LL * (void)k);
        uint64_t v38 = objc_opt_class(&OBJC_CLASS___SSMetricsBaseEvent);
        if ((objc_opt_isKindOfClass(v37, v38) & 1) != 0)
        {
          [v37 setTopic:v84];
          if (v15) {
            [v37 setProperty:v15 forBodyKey:@"clientId"];
          }
          if (self->_appBundleId) {
            objc_msgSend(v37, "setApplicationIdentifier:");
          }
        }
      }

      uint64_t v34 = -[NSArray countByEnumeratingWithState:objects:count:]( v32,  "countByEnumeratingWithState:objects:count:",  &v92,  v105,  16LL);
    }

    while (v34);
  }

  id v39 = (void *)objc_claimAutoreleasedReturnValue(+[AMSMetrics bagSubProfile](&OBJC_CLASS___AMSMetrics, "bagSubProfile"));
  __int16 v40 = (void *)objc_claimAutoreleasedReturnValue(+[AMSMetrics bagSubProfileVersion](&OBJC_CLASS___AMSMetrics, "bagSubProfileVersion"));
  id v41 = (void *)objc_claimAutoreleasedReturnValue( +[AMSBag bagForProfile:profileVersion:]( &OBJC_CLASS___AMSBag,  "bagForProfile:profileVersion:",  v39,  v40));

  if (_os_feature_enabled_impl("AppleMediaServices", "iTunesStoreMetrics")
    && objc_msgSend(v41, "asd_iTunesStoreMetricsIsEnabled"))
  {
    unsigned int v42 = (ISLoadURLBagOperation *)[[AMSMetrics alloc] initWithContainerID:@"com.apple.AppleMediaServices" bag:v41];
    v88 = 0u;
    v89 = 0u;
    v90 = 0u;
    v91 = 0u;
    id v43 = self->_events;
    uint64_t v44 = -[NSArray countByEnumeratingWithState:objects:count:]( v43,  "countByEnumeratingWithState:objects:count:",  &v88,  v104,  16LL);
    v82 = v42;
    if (v44)
    {
      id v45 = v44;
      uint64_t v46 = *(void *)v89;
      do
      {
        for (m = 0LL; m != v45; m = (char *)m + 1)
        {
          if (*(void *)v89 != v46) {
            objc_enumerationMutation(v43);
          }
          uint64_t v48 = *(void **)(*((void *)&v88 + 1) + 8LL * (void)m);
          uint64_t v49 = objc_opt_class(&OBJC_CLASS___SSMetricsBaseEvent);
          if ((objc_opt_isKindOfClass(v48, v49) & 1) != 0)
          {
            uint64_t v50 = objc_alloc(&OBJC_CLASS___AMSMetricsEvent);
            id v51 = (void *)objc_claimAutoreleasedReturnValue([v48 bodyDictionary]);
            id v52 = [v50 initWithUnderlyingDictionary:v51];

            -[ISLoadURLBagOperation enqueueEvent:](v42, "enqueueEvent:", v52);
          }
        }

        id v45 = -[NSArray countByEnumeratingWithState:objects:count:]( v43,  "countByEnumeratingWithState:objects:count:",  &v88,  v104,  16LL);
      }

      while (v45);
      id v54 = v80;
      int v53 = v81;
    }

    else
    {
      id v54 = v80;
      int v53 = v81;
    }

    goto LABEL_97;
  }

  __int16 v55 = objc_alloc_init(&OBJC_CLASS___ISLoadURLBagOperation);
  v87 = 0LL;
  -[AnalyticsRecordingOperation runSubOperation:returningError:](self, "runSubOperation:returningError:", v55, &v87);
  id v43 = (NSArray *)v87;
  __int128 v56 = (void *)objc_claimAutoreleasedReturnValue(-[ISLoadURLBagOperation URLBag](v55, "URLBag"));
  __int128 v57 = v56;
  v82 = v55;
  if (!v43 && v56)
  {
    __int128 v58 = (void *)objc_claimAutoreleasedReturnValue([v56 valueForKey:SSMetricsURLBagKey]);
    if ([v58 count])
    {
      __int128 v59 = [[SSMetricsConfiguration alloc] initWithGlobalConfiguration:v58];
      v60 = objc_alloc_init(&OBJC_CLASS___SSMetricsController);
      metricsController = self->_metricsController;
      self->_metricsController = v60;
      uint64_t v62 = v60;

      -[SSMetricsController setGlobalConfiguration:](v62, "setGlobalConfiguration:", v59);
      events = self->_events;
      v86[0] = _NSConcreteStackBlock;
      v86[1] = 3221225472LL;
      v86[2] = sub_10015853C;
      v86[3] = &unk_10034B1C8;
      v86[4] = self;
      -[SSMetricsController insertEvents:withCompletionHandler:]( v62,  "insertEvents:withCompletionHandler:",  events,  v86);
      v85[0] = _NSConcreteStackBlock;
      v85[1] = 3221225472LL;
      v85[2] = sub_1001586D4;
      v85[3] = &unk_10034B1C8;
      v85[4] = self;
      -[SSMetricsController flushUnreportedEventsWithCompletionHandler:]( v62,  "flushUnreportedEventsWithCompletionHandler:",  v85);
      -[AnalyticsRecordingOperation setSuccess:](self, "setSuccess:", 1LL);

      id v54 = v80;
      int v53 = v81;
LABEL_95:

      goto LABEL_96;
    }

    v83 = v58;
    v72 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v72) {
      v72 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    v73 = [v72 shouldLog];
    else {
      v74 = v73;
    }
    v75 = (os_log_s *)objc_claimAutoreleasedReturnValue([v72 OSLogObject]);
    if (os_log_type_enabled(v75, OS_LOG_TYPE_DEFAULT)) {
      v76 = v74;
    }
    else {
      v76 = v74 & 2;
    }
    int v53 = v81;
    if ((_DWORD)v76)
    {
      v77 = (void *)objc_opt_class(self);
      v108 = 138412290;
      v109 = v77;
      v78 = v77;
      v79 = (void *)_os_log_send_and_compose_impl( v76,  0LL,  0LL,  0LL,  &_mh_execute_header,  v75,  0LL,  "%@ could not get metrics dict from url bag",  &v108,  12);

      if (!v79)
      {
LABEL_94:

        -[AnalyticsRecordingOperation setSuccess:](self, "setSuccess:", 0LL);
        id v54 = v80;
        __int128 v58 = v83;
        goto LABEL_95;
      }

      v75 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v79,  4LL));
      free(v79);
      SSFileLog(v72, @"%@");
    }

    goto LABEL_94;
  }

  id v64 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v64) {
    id v64 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  v65 = [v64 shouldLog];
  else {
    v66 = v65;
  }
  v67 = (os_log_s *)objc_claimAutoreleasedReturnValue([v64 OSLogObject]);
  if (os_log_type_enabled(v67, OS_LOG_TYPE_DEFAULT)) {
    v68 = v66;
  }
  else {
    v68 = v66 & 2;
  }
  int v53 = v81;
  if (!(_DWORD)v68) {
    goto LABEL_80;
  }
  v69 = (void *)objc_opt_class(self);
  v108 = 138412290;
  v109 = v69;
  v70 = v69;
  v71 = (void *)_os_log_send_and_compose_impl( v68,  0LL,  0LL,  0LL,  &_mh_execute_header,  v67,  0LL,  "%@ could not load URL bag",  &v108,  12);

  if (v71)
  {
    v67 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v71,  4LL));
    free(v71);
    SSFileLog(v64, @"%@");
LABEL_80:
  }

  -[AnalyticsRecordingOperation setSuccess:](self, "setSuccess:", 0LL);
  id v54 = v80;
LABEL_96:

LABEL_97:
}

id sub_100021C70(uint64_t a1, uint64_t a2)
{
  id result = [*(id *)(*(void *)(a1 + 32) + 8) statementHasRowAfterStepping:a2];
  if ((_DWORD)result)
  {
    do
    {
      id v5 = (void *)SSSQLiteCopyFoundationValueForStatementColumn(a2, 0LL);
      [*(id *)(a1 + 40) addObject:v5];

      id result = [*(id *)(*(void *)(a1 + 32) + 8) statementHasRowAfterStepping:a2];
    }

    while ((result & 1) != 0);
  }

  return result;
}

uint64_t sub_100021EDC(uint64_t result)
{
  *(_BYTE *)(*(void *)(*(void *)(result + 40) + 8LL) + 24LL) = *(_BYTE *)(*(void *)(result + 32) + 8LL);
  return result;
}

void sub_100021F9C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 32LL));
  [WeakRetained batterySaverWatcherDidChangeState:*(void *)(a1 + 32)];
}

void sub_1000220E0(_Unwind_Exception *a1)
{
}

void sub_1000220FC(uint64_t a1, int a2)
{
  if (*(_DWORD *)(*(void *)(a1 + 32) + 24LL) == a2)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    [WeakRetained _updateStatus];
  }

id sub_100022144(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) _getState];
  *(_BYTE *)(*(void *)(a1 + 32) + 8LL) = result != 0LL;
  return result;
}

CFDataRef sub_100022204(uint64_t a1, uint64_t a2)
{
  uint64_t v16 = 0LL;
  unsigned int v15 = 0;
  uint64_t v4 = sub_100023C8C();
  sub_100238588(v4, a1, 0LL, a2, (uint64_t)&v16, (uint64_t)&v15);
  if (!v5) {
    return sub_1000223AC(v16, v15);
  }
  int v6 = v5;
  id v7 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  if (!v7) {
    id v7 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  unsigned int v8 = [v7 shouldLog];
  else {
    unsigned int v9 = v8;
  }
  id v10 = (os_log_s *)[v7 OSLogObject];
  if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
    uint64_t v11 = v9;
  }
  else {
    uint64_t v11 = v9 & 2;
  }
  if ((_DWORD)v11)
  {
    int v17 = 136315394;
    int v18 = "AOU264455_9";
    __int16 v19 = 2048;
    uint64_t v20 = v6;
    uint64_t v12 = _os_log_send_and_compose_impl( v11,  0LL,  0LL,  0LL,  &_mh_execute_header,  v10,  16LL,  "%s: Failed with error: %ld",  (const char *)&v17,  22);
    if (v12)
    {
      unsigned int v13 = (void *)v12;
      +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v12, 4LL);
      free(v13);
      SSFileLog(v7, @"%@");
    }
  }

  CFDataRef result = (CFDataRef)v16;
  if (v16)
  {
    sub_10029BD98((uint64_t)v16);
    return 0LL;
  }

  return result;
}

CFDataRef sub_1000223AC(const UInt8 *a1, unsigned int a2)
{
  *(_OWORD *)&v7.reallocate = unk_10034B410;
  v7.preferredSize = 0LL;
  memset(&v7, 0, 48);
  uint64_t v4 = CFAllocatorCreate(0LL, &v7);
  CFDataRef v5 = CFDataCreateWithBytesNoCopy(0LL, a1, a2, v4);
  CFRelease(v4);
  return v5;
}

CFDataRef sub_100022430(uint64_t a1, uint64_t a2, void *a3)
{
  id v29 = 0LL;
  HIDWORD(v2_Block_object_dispose(va, 8) = 0;
  unsigned int v30 = 0;
  int v6 = sub_100022EC4((uint64_t)&v35);
  if (a3)
  {
    if (v6)
    {
      int v7 = sub_10029CBCC(0, (uint64_t)&v35, (uint64_t)[a3 UTF8String], (uint64_t)&v30);
      if (v7)
      {
        int v8 = v7;
        id v9 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
        if (!v9) {
          id v9 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
        }
        unsigned int v10 = [v9 shouldLog];
        else {
          unsigned int v11 = v10;
        }
        uint64_t v12 = (os_log_s *)[v9 OSLogObject];
        if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
          uint64_t v13 = v11;
        }
        else {
          uint64_t v13 = v11 & 2;
        }
        if ((_DWORD)v13)
        {
          int v31 = 136315394;
          unsigned int v32 = "AOU264455_107";
          __int16 v33 = 2048;
          uint64_t v34 = v8;
          LODWORD(v2_Block_object_dispose(va, 8) = 22;
          uint64_t v14 = _os_log_send_and_compose_impl( v13,  0LL,  0LL,  0LL,  &_mh_execute_header,  v12,  16LL,  "%s: Failed with error: %ld",  (const char *)&v31,  v28);
          if (v14)
          {
            unsigned int v15 = (void *)v14;
            uint64_t v16 = +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v14,  4LL);
            free(v15);
            uint64_t v27 = v16;
            SSFileLog(v9, @"%@");
          }
        }
      }
    }
  }

  sub_100238588(v30, a1, 0LL, a2, (uint64_t)&v29, (uint64_t)&v28 + 4);
  if (!v17) {
    return sub_1000223AC(v29, HIDWORD(v28));
  }
  int v18 = v17;
  id v19 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  if (!v19) {
    id v19 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  unsigned int v20 = objc_msgSend(v19, "shouldLog", v27);
  else {
    unsigned int v21 = v20;
  }
  unsigned int v22 = (os_log_s *)[v19 OSLogObject];
  if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
    uint64_t v23 = v21;
  }
  else {
    uint64_t v23 = v21 & 2;
  }
  if ((_DWORD)v23)
  {
    int v35 = 136315394;
    unsigned int v36 = "AOU264455_7";
    __int16 v37 = 2048;
    uint64_t v38 = v18;
    LODWORD(v2_Block_object_dispose(va, 8) = 22;
    uint64_t v24 = _os_log_send_and_compose_impl( v23,  0LL,  0LL,  0LL,  &_mh_execute_header,  v22,  16LL,  "%s: Failed with error: %ld",  (const char *)&v35,  v28);
    if (v24)
    {
      uint64_t v25 = (void *)v24;
      +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v24, 4LL);
      free(v25);
      SSFileLog(v19, @"%@");
    }
  }

  CFDataRef result = (CFDataRef)v29;
  if (v29)
  {
    sub_10029BD98((uint64_t)v29);
    return 0LL;
  }

  return result;
}

NSData *sub_10002271C()
{
  uint64_t v18 = 0LL;
  unsigned int v17 = 0;
  uint64_t v0 = sub_100023C8C();
  sub_10025C710(v0, (uint64_t)&v18, (uint64_t)&v17);
  if (!v1)
  {
    id v9 = objc_alloc(&OBJC_CLASS___NSData);
    unsigned int v10 = -[NSData initWithBytes:length:](v9, "initWithBytes:length:", v18, v17);
    goto LABEL_27;
  }

  int v2 = v1;
  if (v1 == -42022)
  {
    id v3 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v3) {
      id v3 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v4 = [v3 shouldLog];
    else {
      unsigned int v5 = v4;
    }
    int v6 = (os_log_s *)[v3 OSLogObject];
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v7 = v5;
    }
    else {
      uint64_t v7 = v5 & 2;
    }
    if (!(_DWORD)v7) {
      goto LABEL_26;
    }
    int v19 = 136315394;
    unsigned int v20 = "AOU264455_1";
    __int16 v21 = 2048;
    uint64_t v22 = -42022LL;
    uint64_t v8 = _os_log_send_and_compose_impl( v7,  0LL,  0LL,  0LL,  &_mh_execute_header,  v6,  0LL,  "%s: Ignoring invalid signature error: %ld",  &v19,  22);
  }

  else
  {
    id v3 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v3) {
      id v3 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v11 = [v3 shouldLog];
    else {
      unsigned int v12 = v11;
    }
    uint64_t v13 = (os_log_s *)[v3 OSLogObject];
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v14 = v12;
    }
    else {
      uint64_t v14 = v12 & 2;
    }
    if (!(_DWORD)v14) {
      goto LABEL_26;
    }
    int v19 = 136315394;
    unsigned int v20 = "AOU264455_1";
    __int16 v21 = 2048;
    uint64_t v22 = v2;
    uint64_t v8 = _os_log_send_and_compose_impl( v14,  0LL,  0LL,  0LL,  &_mh_execute_header,  v13,  0LL,  "%s: Failed with error: %ld",  &v19,  22);
  }

  if (v8)
  {
    unsigned int v15 = (void *)v8;
    +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v8, 4LL);
    free(v15);
    SSFileLog(v3, @"%@");
  }

LABEL_26:
  unsigned int v10 = 0LL;
LABEL_27:
  if (v18) {
    sub_10029BD98(v18);
  }
  return v10;
}

  uint64_t v24 = v5;

  for (uint64_t i = 7LL; i != -1; --i)
  return v24;
}

    return +[NSThread endManagedContextSession](&OBJC_CLASS___NSThread, "endManagedContextSession");
  }

  return result;
}
}

    -[StoreServicesRequestQueue _sendMessageWithError:toClient:]( self,  "_sendMessageWithError:toClient:",  SSError(SSErrorDomain, 100LL, 0LL, 0LL),  v6);
LABEL_27:

    goto LABEL_28;
  }

  id v9 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  if (!v9) {
    id v9 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  unsigned int v10 = [v9 shouldLog];
  else {
    LODWORD(v11) = v10;
  }
  unsigned int v12 = (os_log_s *)[v9 OSLogObject];
  if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT)) {
    unsigned int v11 = v11;
  }
  else {
    v11 &= 2u;
  }
  if ((_DWORD)v11)
  {
    __int16 v21 = 138412546;
    uint64_t v22 = objc_opt_class(self);
    uint64_t v23 = 2112;
    uint64_t v24 = v6;
    uint64_t v13 = _os_log_send_and_compose_impl( v11,  0LL,  0LL,  0LL,  &_mh_execute_header,  v12,  0LL,  "%@: Cannot checkin rental for unentitled client: %@",  &v21,  22);
    if (v13)
    {
      uint64_t v14 = (void *)v13;
      +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v13, 4LL);
      free(v14);
      SSFileLog(v9, @"%@");
    }
  }

  -[RestoreDownloadItemsOperation setDelegate:](v8, "setDelegate:", 0LL, v29);

  objc_autoreleasePoolPop(context);
}

    -[GetPlayInfoOperation _failWithError:]( self,  "_failWithError:",  SSErrorWithUnderlyingError(v30, SSErrorDomain, 500LL, 0LL, 0LL));
    goto LABEL_43;
  }

  unsigned int v4 = +[NSPropertyListSerialization dataWithPropertyList:format:options:error:]( &OBJC_CLASS___NSPropertyListSerialization,  "dataWithPropertyList:format:options:error:",  v3,  100LL,  0LL,  &v30);
  if (!v4)
  {
    unsigned int v11 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v11) {
      unsigned int v11 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v15 = [v11 shouldLog];
    else {
      LODWORD(v13) = v15;
    }
    uint64_t v14 = (os_log_s *)[v11 OSLogObject];
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v13 = v13;
    }
    else {
      v13 &= 2u;
    }
    if (!(_DWORD)v13) {
      goto LABEL_26;
    }
    goto LABEL_24;
  }

  unsigned int v5 = v4;
  int v6 = objc_alloc_init(&OBJC_CLASS___ISStoreURLOperation);
  uint64_t v7 = -[GetPlayInfoOperation userAgent](self, "userAgent");
  uint64_t v8 = [v3 objectForKey:@"dsid"];
  if (v8)
  {
    id v9 = -[SSMutableAuthenticationContext initWithAccountIdentifier:]( objc_alloc(&OBJC_CLASS___SSMutableAuthenticationContext),  "initWithAccountIdentifier:",  v8);
    unsigned int v10 = SSHTTPHeaderUserAgent;
    -[SSMutableAuthenticationContext setValue:forHTTPHeaderField:]( v9,  "setValue:forHTTPHeaderField:",  v7,  SSHTTPHeaderUserAgent);
    [v6 setAuthenticationContext:v9];
  }

  else
  {
    unsigned int v10 = SSHTTPHeaderUserAgent;
  }

  int v19 = objc_alloc_init(&OBJC_CLASS___DaemonProtocolDataProvider);
  [v6 setDataProvider:v19];
  unsigned int v20 = objc_alloc_init(&OBJC_CLASS___SSMutableURLRequestProperties);
  -[SSMutableURLRequestProperties setCachePolicy:](v20, "setCachePolicy:", 1LL);
  -[SSMutableURLRequestProperties setClientIdentifier:]( v20,  "setClientIdentifier:",  -[GetPlayInfoOperation clientIdentifierHeader](self, "clientIdentifierHeader"));
  -[SSMutableURLRequestProperties setHTTPBody:](v20, "setHTTPBody:", v5);
  -[SSMutableURLRequestProperties setHTTPMethod:](v20, "setHTTPMethod:", @"POST");
  -[SSMutableURLRequestProperties setURLBagKey:](v20, "setURLBagKey:", @"get-play-info");
  -[SSMutableURLRequestProperties setValue:forHTTPHeaderField:](v20, "setValue:forHTTPHeaderField:", v7, v10);
  [v6 setRequestProperties:v20];

  __int16 v21 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  if (!v21) {
    __int16 v21 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  uint64_t v22 = [v21 shouldLog];
  else {
    LODWORD(v23) = v22;
  }
  uint64_t v24 = (os_log_s *)[v21 OSLogObject];
  if (os_log_type_enabled(v24, OS_LOG_TYPE_INFO)) {
    uint64_t v23 = v23;
  }
  else {
    v23 &= 2u;
  }
  if ((_DWORD)v23)
  {
    uint64_t v25 = objc_opt_class(self);
    int v31 = 138412290;
    unsigned int v32 = v25;
    uint64_t v26 = _os_log_send_and_compose_impl( v23,  0LL,  0LL,  0LL,  &_mh_execute_header,  v24,  1LL,  "%@: Fetching play info",  &v31,  12);
    if (v26)
    {
      uint64_t v27 = (void *)v26;
      uint64_t v28 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v26, 4LL);
      free(v27);
      id v29 = v28;
      SSFileLog(v21, @"%@");
    }
  }

  if (-[GetPlayInfoOperation runSubOperation:returningError:]( self,  "runSubOperation:returningError:",  v6,  &v30,  v29)) {
    -[GetPlayInfoOperation _setResponseForOutput:]( self,  "_setResponseForOutput:",  -[DaemonProtocolDataProvider output](v19, "output"));
  }
  else {
    -[GetPlayInfoOperation _failWithError:](self, "_failWithError:", v30);
  }

LABEL_43:
}

  if (a4) {
    *a4 = v22;
  }
  if (a3) {
    *a3 = v21;
  }

  return v20;
}

      goto LABEL_27;
    }

    if (!v16) {
      unsigned int v17 = (NSDictionary *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    uint64_t v23 = -[NSDictionary shouldLog](v17, "shouldLog");
    else {
      LODWORD(v24) = v23;
    }
    uint64_t v25 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[NSDictionary OSLogObject](v17, "OSLogObject"));
    if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v24 = v24;
    }
    else {
      v24 &= 2u;
    }
    if ((_DWORD)v24)
    {
      uint64_t v26 = (void *)objc_opt_class(*(void *)(a1 + 32));
      uint64_t v27 = *(void **)(a1 + 48);
      __int16 v37 = 138413058;
      uint64_t v38 = v26;
      id v39 = 2048;
      __int16 v40 = v27;
      id v41 = 2048;
      unsigned int v42 = v6;
      id v43 = 2048;
      uint64_t v44 = v7;
      uint64_t v28 = v26;
      id v29 = (void *)_os_log_send_and_compose_impl( v24,  0LL,  0LL,  0LL,  &_mh_execute_header,  v25,  0LL,  "%@: Set download token: %llu for asset: %lld of download: %lld",  &v37,  42);

      if (!v29)
      {
LABEL_25:

        unsigned int v30 = SSDownloadPhaseDownloading;
        -[DownloadEntity setValue:forProperty:](v14, "setValue:forProperty:", SSDownloadPhaseDownloading, v15);
        int v31 = objc_alloc(&OBJC_CLASS___NSDictionary);
        unsigned int v17 = -[NSDictionary initWithObjectsAndKeys:]( v31,  "initWithObjectsAndKeys:",  v30,  SSDownloadPropertyDownloadPhase,  0LL);
        unsigned int v32 = (void *)objc_claimAutoreleasedReturnValue(+[DownloadController controller](&OBJC_CLASS___DownloadController, "controller"));
        __int16 v33 = (void *)objc_claimAutoreleasedReturnValue(-[DownloadEntity valueForProperty:](v14, "valueForProperty:", @"kind"));
        [v32 notifyClientsOfPropertyChanges:v17 forDownloadID:v7 downloadKind:v33];

        [*(id *)(a1 + 32) _logDownloadEvent:SSEventNameDownloadStart forTaskWithState:v5 session:v3];
        int v19 = objc_alloc_init(&OBJC_CLASS___DownloadsChangeset);
        -[os_log_s addStatusChangedDownloadID:]( v19,  "addStatusChangedDownloadID:",  [v5 downloadIdentifier]);
        -[os_log_s addDownloadChangeTypes:](v19, "addDownloadChangeTypes:", 2LL);
        [v3 unionChangeset:v19];
        goto LABEL_26;
      }

      uint64_t v25 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v29,  4LL));
      free(v29);
      SSFileLog(v17, @"%@");
    }

    goto LABEL_25;
  }
}

  uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v25) {
    uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  uint64_t v26 = [v25 shouldLog];
  else {
    uint64_t v27 = v26;
  }
  uint64_t v28 = (os_log_s *)objc_claimAutoreleasedReturnValue([v25 OSLogObject]);
  if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT)) {
    id v29 = v27;
  }
  else {
    id v29 = v27 & 2;
  }
  if ((_DWORD)v29)
  {
    unsigned int v30 = -[FinishDownloadOperation downloadIdentifier](self, "downloadIdentifier");
    int v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "componentsJoinedByString:", @", "));
    unsigned int v42 = 134218242;
    id v43 = v30;
    uint64_t v44 = 2112;
    id v45 = v31;
    unsigned int v32 = (void *)_os_log_send_and_compose_impl( v29,  0LL,  0LL,  0LL,  &_mh_execute_header,  v28,  0LL,  "[ApplicationWorkspace] Installing download: %lld with step(s): %@",  &v42,  22);

    if (v32)
    {
      __int16 v33 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v32,  4LL));
      free(v32);
      SSFileLog(v25, @"%@");
    }
  }

  else
  {
  }

  return v41;
}

uint64_t sub_100022990(NSMutableArray **a1, NSData **a2)
{
  uint64_t v24 = 0LL;
  uint64_t v25 = 0LL;
  uint64_t v4 = sub_100023C8C();
  sub_100296028(v4, 0LL, 0LL, 0LL, (uint64_t)&v25, (uint64_t)&v24, (uint64_t)v30, (uint64_t)&v24 + 4);
  if (!v5)
  {
    uint64_t v13 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    if (HIDWORD(v24))
    {
      unint64_t v14 = 0LL;
      do
      {
        unsigned int v15 = -[NSNumber initWithUnsignedInteger:]( objc_alloc(&OBJC_CLASS___NSNumber),  "initWithUnsignedInteger:",  *((unsigned int *)v30 + v14));
        -[NSMutableArray addObject:](v13, "addObject:", v15);

        ++v14;
      }

      while (v14 < HIDWORD(v24));
    }

    uint64_t v16 = objc_alloc(&OBJC_CLASS___NSData);
    unsigned int v12 = -[NSData initWithBytes:length:](v16, "initWithBytes:length:", v25, v24);
    goto LABEL_20;
  }

  int v6 = v5;
  if (v5 == -42022)
  {
    id v7 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v7) {
      id v7 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v8 = [v7 shouldLog];
    else {
      unsigned int v9 = v8;
    }
    unsigned int v10 = (os_log_s *)[v7 OSLogObject];
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v11 = v9;
    }
    else {
      uint64_t v11 = v9 & 2;
    }
    if ((_DWORD)v11)
    {
      int v26 = 136315394;
      uint64_t v27 = "AOU264455_2";
      __int16 v28 = 2048;
      uint64_t v29 = -42022LL;
      unsigned int v12 = (NSData *)_os_log_send_and_compose_impl( v11,  0LL,  0LL,  0LL,  &_mh_execute_header,  v10,  0LL,  "%s: Ignoring invalid signature error: %ld",  (const char *)&v26,  22);
      if (!v12)
      {
LABEL_15:
        uint64_t v13 = 0LL;
LABEL_20:
        uint64_t v17 = 1LL;
        goto LABEL_34;
      }

      +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v12, 4LL);
      free(v12);
      SSFileLog(v7, @"%@");
    }

    unsigned int v12 = 0LL;
    goto LABEL_15;
  }

  id v18 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  if (!v18) {
    id v18 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  unsigned int v19 = [v18 shouldLog];
  else {
    unsigned int v20 = v19;
  }
  __int16 v21 = (os_log_s *)[v18 OSLogObject];
  if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v22 = v20;
  }
  else {
    uint64_t v22 = v20 & 2;
  }
  if (!(_DWORD)v22) {
    goto LABEL_32;
  }
  int v26 = 136315394;
  uint64_t v27 = "AOU264455_2";
  __int16 v28 = 2048;
  uint64_t v29 = v6;
  unsigned int v12 = (NSData *)_os_log_send_and_compose_impl( v22,  0LL,  0LL,  0LL,  &_mh_execute_header,  v21,  0LL,  "%s: Failed with error: %ld",  (const char *)&v26,  22);
  if (v12)
  {
    +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v12, 4LL);
    free(v12);
    SSFileLog(v18, @"%@");
LABEL_32:
    unsigned int v12 = 0LL;
  }

  uint64_t v13 = 0LL;
  uint64_t v17 = 0LL;
LABEL_34:
  if (v25) {
    sub_10029BD98(v25);
  }
  if (a1) {
    *a1 = v13;
  }
  if (a2) {
    *a2 = v12;
  }
  return v17;
}

ISFairPlayRentalInfo *sub_100022CFC(uint64_t a1, uint64_t a2)
{
  int v2 = 0LL;
  if (a1 && a2)
  {
    uint64_t v5 = sub_100023C8C();
    sub_10023BC8C(v5, a1, a2, (uint64_t)v8);
    if (v6)
    {
      return 0LL;
    }

    else
    {
      int v2 = objc_alloc_init(&OBJC_CLASS___ISFairPlayRentalInfo);
      -[ISFairPlayRentalInfo setPlaybackDuration:](v2, "setPlaybackDuration:", v8[3]);
      -[ISFairPlayRentalInfo setPlaybackStartTime:](v2, "setPlaybackStartTime:", v8[2]);
      -[ISFairPlayRentalInfo setRentalDuration:](v2, "setRentalDuration:", v8[1]);
      -[ISFairPlayRentalInfo setRentalStartTime:](v2, "setRentalStartTime:", v8[0]);
    }
  }

  return v2;
}

CFDataRef sub_100022D98(uint64_t a1, _BYTE *a2, NSError **a3)
{
  if (!sub_100022EC4((uint64_t)v13))
  {
    unsigned int v10 = 0LL;
    goto LABEL_13;
  }

  unsigned int v12 = 0LL;
  unsigned int v11 = 0;
  uint64_t v6 = sub_100023C8C();
  sub_100297FE0(v6, a1, (uint64_t)v13, 52428801LL, 0LL, (uint64_t)&v12, (uint64_t)&v11);
  int v8 = v7;
  if (v7 != -42052)
  {
    if (!v7)
    {
      CFDataRef result = sub_1000223AC(v12, v11);
      goto LABEL_10;
    }

    goto LABEL_12;
  }

  if (v11)
  {
    CFDataRef result = sub_1000223AC(v12, v11);
    if (!a2) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }

  CFDataRef result = 0LL;
  if (a2) {
LABEL_8:
  }
    *a2 = 1;
LABEL_9:
  if (!result)
  {
LABEL_12:
    unsigned int v10 = +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  @"FairPlayErrorDomain",  v8,  0LL);
LABEL_13:
    CFDataRef result = 0LL;
    if (!a3) {
      return result;
    }
    goto LABEL_14;
  }

LABEL_10:
  unsigned int v10 = 0LL;
  if (!a3) {
    return result;
  }
LABEL_14:
  if (!result) {
    *a3 = v10;
  }
  return result;
}

  return v12;
}

  unsigned int v12 = [a3 objectForKey:@"url"];
  uint64_t v13 = objc_opt_class(&OBJC_CLASS___NSString);
  if ((objc_opt_isKindOfClass(v12, v13) & 1) != 0)
  {
    unint64_t v14 = -[NSURL initWithString:](objc_alloc(&OBJC_CLASS___NSURL), "initWithString:", v12);
    if (!-[NSURL host](v14, "host")) {
      unsigned int v12 = 0LL;
    }
  }

  else
  {
    unsigned int v12 = 0LL;
  }

  if (([v11 isEqualToString:SSDownloadAssetTypeMedia] & 1) == 0
    && ![v11 isEqualToString:SSDownloadAssetTypeODRManifest])
  {
    unsigned int v15 = 0LL;
LABEL_22:
    unsigned int v19 = 0;
    id v18 = 1;
    goto LABEL_23;
  }

  unsigned int v15 = objc_msgSend(+[SSDevice currentDevice](SSDevice, "currentDevice"), "productType");
  if (!v15) {
    goto LABEL_22;
  }
  uint64_t v16 = [a3 objectForKey:@"variantIds"];
  uint64_t v17 = objc_opt_class(&OBJC_CLASS___NSArray);
  if ((objc_opt_isKindOfClass(v16, v17) & 1) == 0) {
    goto LABEL_22;
  }
  if ([v16 containsObject:v15])
  {
    id v18 = 0;
    unsigned int v19 = 1;
  }

  else
  {
    int v35 = objc_msgSend(+[SSDevice currentDevice](SSDevice, "currentDevice"), "compatibleProductType");
    if (v35)
    {
      unsigned int v36 = v35;
      unsigned int v19 = [v16 containsObject:v35];
      id v18 = 0;
      unsigned int v15 = v36;
    }

    else
    {
      id v18 = 0;
      unsigned int v19 = 0;
    }
  }

  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 48), reply);
}

  uint64_t v13 = 0LL;
LABEL_26:

  return v13;
}

  unsigned int v9 = (void *)objc_claimAutoreleasedReturnValue(-[SSMemoryEntity valueForProperty:](self->_download, "valueForProperty:", @"is_restore"));
  unsigned int v10 = [v9 BOOLValue];

  if (v10)
  {
    unsigned int v11 = (void *)objc_claimAutoreleasedReturnValue([v4 valueForProperty:@"bytes_total"]);
    [v11 doubleValue];
    uint64_t v13 = v12;

    unint64_t v14 = (void *)objc_claimAutoreleasedReturnValue( -[SSMemoryEntity valueForProperty:]( self->_download,  "valueForProperty:",  @"IFNULL(download_state.restore_data_size, 0)"));
    [v14 doubleValue];
    uint64_t v16 = v15;

    if (v16 > 2.22044605e-16 && v13 > 2.22044605e-16) {
      int v8 = v8 * (v13 / v16);
    }
  }

  return v8;
}

  if (!self->_AVAssetDownloadSessionOptions) {
    [v7 setITunesStoreDataConsumer:self->_dataConsumer];
  }
  objc_msgSend(v7, "set_priority:", self->_taskPriority);
  objc_msgSend(v7, "set_bytesPerSecondLimit:", self->_bytesPerSecondLimit);
  loadingPriority = self->_loadingPriority;
  if (loadingPriority)
  {
    -[NSNumber doubleValue](loadingPriority, "doubleValue");
    objc_msgSend(v7, "set_loadingPriority:");
  }

  return v7;
}

  if (v7) {
    *a4 = v7;
  }
LABEL_12:

  return v11;
}

LABEL_11:
}

uint64_t sub_100022EC4(uint64_t a1)
{
  if (qword_1003A31F0 != -1) {
    dispatch_once(&qword_1003A31F0, &stru_10034B428);
  }
  if (a1 && byte_1003A31F8)
  {
    __int128 v2 = xmmword_1003A31D8;
    *(void *)(a1 + 16) = qword_1003A31E8;
    *(_OWORD *)a1 = v2;
  }

  else
  {
    id v3 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v3) {
      id v3 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v4 = [v3 shouldLog];
    else {
      unsigned int v5 = v4;
    }
    uint64_t v6 = (os_log_s *)[v3 OSLogObject];
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      uint64_t v7 = v5;
    }
    else {
      uint64_t v7 = v5 & 2;
    }
    if ((_DWORD)v7)
    {
      int v11 = 136315394;
      unsigned int v12 = "AOU264455_104";
      __int16 v13 = 2048;
      uint64_t v14 = -1LL;
      uint64_t v8 = _os_log_send_and_compose_impl( v7,  0LL,  0LL,  0LL,  &_mh_execute_header,  v6,  16LL,  "%s: Failed with error: %ld",  (const char *)&v11,  22);
      if (v8)
      {
        unsigned int v9 = (void *)v8;
        +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v8, 4LL);
        free(v9);
        SSFileLog(v3, @"%@");
      }
    }
  }

  return byte_1003A31F8;
}

BOOL sub_100023074(void *a1, void *a2)
{
  if (a2) {
    *a2 = 0LL;
  }
  return v4 == 0;
}

BOOL sub_100023100(uint64_t a1)
{
  return sub_10029C848(a1) == 0;
}

uint64_t sub_10002311C(uint64_t a1, void *a2, NSData **a3)
{
  unsigned int v5 = malloc((size_t)[a2 length]);
  if (!v5) {
    return 0LL;
  }
  uint64_t v6 = v5;
  unsigned int v11 = [a2 length];
  [a2 getBytes:v6 length:v11];
  sub_10029AFC4();
  if (v7
    || (uint64_t v8 = 1LL,
        unsigned int v9 = -[NSData initWithBytesNoCopy:length:freeWhenDone:]( objc_alloc(&OBJC_CLASS___NSData),  "initWithBytesNoCopy:length:freeWhenDone:",  v6,  v11,  1LL),  (*a3 = v9) == 0LL))
  {
    free(v6);
    return 0LL;
  }

  return v8;
}

void sub_1000231EC(void *a1, unint64_t a2, void *a3)
{
  if ([a1 length])
  {
    if (a2 <= 5)
    {
      uint64_t v6 = dword_1002D40D8[a2];
      uint64_t v8 = 0LL;
      sub_100273230((uint64_t)[a1 bytes], (uint64_t)objc_msgSend(a1, "length"), v6, (uint64_t)&v8);
      if (a3)
      {
        if (!v7) {
          *a3 = v8;
        }
      }
    }
  }

uint64_t sub_100023280(void *a1)
{
  if (!a1) {
    return 1LL;
  }
  sub_100023C8C();
  [a1 bytes];
  [a1 length];
  sub_10028FD90();
  BOOL v3 = v2 == 0;
  if (v2)
  {
    int v4 = v2;
    id v5 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v5) {
      id v5 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v6 = [v5 shouldLog];
    else {
      unsigned int v7 = v6;
    }
    uint64_t v8 = (os_log_s *)[v5 OSLogObject];
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      uint64_t v9 = v7;
    }
    else {
      uint64_t v9 = v7 & 2;
    }
    if ((_DWORD)v9)
    {
      int v13 = 136315394;
      uint64_t v14 = "AOU264455_4";
      __int16 v15 = 2048;
      uint64_t v16 = v4;
      uint64_t v10 = _os_log_send_and_compose_impl( v9,  0LL,  0LL,  0LL,  &_mh_execute_header,  v8,  16LL,  "%s: Failed with error: %ld",  (const char *)&v13,  22);
      if (v10)
      {
        unsigned int v11 = (void *)v10;
        +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v10, 4LL);
        free(v11);
        SSFileLog(v5, @"%@");
      }
    }
  }

  return v3;
}

BOOL sub_10002350C(void *a1)
{
  if (!a1) {
    return 1LL;
  }
  uint64_t v2 = sub_100023C8C();
  sub_1002596A4(v2, (uint64_t)[a1 bytes], (uint64_t)objc_msgSend(a1, "length"), 0, 0, 0);
  return v3 == 0;
}

BOOL sub_100023580(void *a1, void *a2)
{
  uint64_t v8 = 0LL;
  uint64_t v4 = sub_100023C8C();
  sub_1002596A4( v4,  (uint64_t)[a1 bytes],  (uint64_t)objc_msgSend(a1, "length"),  (uint64_t)objc_msgSend(a2, "bytes"),  (uint64_t)objc_msgSend(a2, "length"),  (uint64_t)&v8);
  int v6 = v5;
  if (!v5) {
    sub_10029BD98(v8);
  }
  return v6 == 0;
}

BOOL sub_100023658(void *a1)
{
  if (!a1) {
    return 1LL;
  }
  sub_100023C8C();
  [a1 bytes];
  [a1 length];
  sub_10023C710();
  return v2 == 0;
}

uint64_t sub_100023C8C()
{
  HIDWORD(v11) = 0;
  if (sub_100022EC4((uint64_t)v16))
  {
    uint64_t v0 = -[NSString stringByAppendingPathComponent:]( NSHomeDirectory(),  "stringByAppendingPathComponent:",  @"Media/iTunes_Control/iTunes/");
    if (v0)
    {
      int v1 = sub_10029CBCC(0LL, (uint64_t)v16, (uint64_t)-[NSString UTF8String](v0, "UTF8String"), (uint64_t)&v11 + 4);
      if (v1)
      {
        int v2 = v1;
        id v3 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
        if (!v3) {
          id v3 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
        }
        unsigned int v4 = [v3 shouldLog];
        else {
          unsigned int v5 = v4;
        }
        int v6 = (os_log_s *)[v3 OSLogObject];
        if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
          uint64_t v7 = v5;
        }
        else {
          uint64_t v7 = v5 & 2;
        }
        if ((_DWORD)v7)
        {
          int v12 = 136315394;
          int v13 = "AOU264455_102";
          __int16 v14 = 2048;
          uint64_t v15 = v2;
          LODWORD(v11) = 22;
          uint64_t v8 = _os_log_send_and_compose_impl( v7,  0LL,  0LL,  0LL,  &_mh_execute_header,  v6,  16LL,  "%s: Failed with error: %ld",  (const char *)&v12,  v11);
          if (v8)
          {
            uint64_t v9 = (void *)v8;
            +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v8, 4LL);
            free(v9);
            SSFileLog(v3, @"%@");
          }
        }
      }
    }
  }

  return HIDWORD(v11);
}

void sub_100023E28(id a1)
{
}

id *sub_100024210(id *result, uint64_t a2, void *a3)
{
  if (*a3) {
    return (id *)objc_msgSend(result[4], "addObject:");
  }
  return result;
}

void sub_1000243B4(uint64_t a1, uint64_t a2, void *a3)
{
  if (*a3)
  {
    unsigned int v4 = -[NSURL initWithString:](objc_alloc(&OBJC_CLASS___NSURL), "initWithString:", *a3);
    if (v4)
    {
      unsigned int v5 = v4;
      int v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) cookiesForURL:v4]);
      __int128 v11 = 0u;
      __int128 v12 = 0u;
      __int128 v13 = 0u;
      __int128 v14 = 0u;
      id v7 = [v6 countByEnumeratingWithState:&v11 objects:v15 count:16];
      if (v7)
      {
        id v8 = v7;
        uint64_t v9 = *(void *)v12;
        do
        {
          uint64_t v10 = 0LL;
          do
          {
            if (*(void *)v12 != v9) {
              objc_enumerationMutation(v6);
            }
            [*(id *)(a1 + 40) addObject:*(void *)(*((void *)&v11 + 1) + 8 * (void)v10)];
            uint64_t v10 = (char *)v10 + 1;
          }

          while (v8 != v10);
          id v8 = [v6 countByEnumeratingWithState:&v11 objects:v15 count:16];
        }

        while (v8);
      }
    }
  }

void sub_100024A0C(uint64_t a1, uint64_t a2)
{
  id v3 = -[DownloadAssetEntity initWithPersistentID:inDatabase:]( objc_alloc(&OBJC_CLASS___DownloadAssetEntity),  "initWithPersistentID:inDatabase:",  a2,  *(void *)(a1 + 32));
  [*(id *)(a1 + 40) addObject:v3];
}

LABEL_7:
  if (v9)
  {
    __int128 v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](&OBJC_CLASS___NSMutableDictionary, "dictionary"));
    __int128 v12 = (void *)objc_claimAutoreleasedReturnValue( +[NSDate dateWithTimeIntervalSince1970:]( NSDate,  "dateWithTimeIntervalSince1970:",  (double)[v9 rentalStartTime]));
    __int128 v13 = sub_10001F7A0();
    __int128 v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
    [v11 setObject:v12 forKey:v14];

    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( NSNumber,  "numberWithUnsignedInt:",  [v9 rentalDuration]));
    uint64_t v16 = sub_10001F770();
    uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
    [v11 setObject:v15 forKey:v17];

    id v18 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( NSNumber,  "numberWithUnsignedInt:",  [v9 playbackDuration]));
    unsigned int v19 = sub_10001F780();
    unsigned int v20 = (void *)objc_claimAutoreleasedReturnValue(v19);
    [v11 setObject:v18 forKey:v20];

    if ([v9 playbackStartTime] != -1)
    {
      __int16 v21 = (void *)objc_claimAutoreleasedReturnValue( +[NSDate dateWithTimeIntervalSince1970:]( NSDate,  "dateWithTimeIntervalSince1970:",  (double)[v9 playbackStartTime]));
      uint64_t v22 = sub_10001F790();
      uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue(v22);
      [v11 setObject:v21 forKey:v23];
    }
  }

  else
  {
    __int128 v11 = 0LL;
  }

  return v11;
}

  return v9;
}
}

  if ((-[SSURLRequestProperties isITunesStoreRequest](v7, "isITunesStoreRequest") & 1) != 0
    || -[URLConnectionRequestOperation shouldMescalSign](self, "shouldMescalSign"))
  {
    uint64_t v9 = -[URLConnectionRequestOperation _newStoreURLOperationWithProperties:]( self,  "_newStoreURLOperationWithProperties:",  v7);
    if (!v8) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }

  uint64_t v9 = objc_alloc_init(&OBJC_CLASS___ISURLOperation);
  objc_msgSend(v9, "setDataProvider:", +[ISDataProvider provider](ISDataProvider, "provider"));
  [v9 setRequestProperties:v7];
  if (v8)
  {
LABEL_10:
    uint64_t v10 = -[NSURL path](v4, "path");
    __int128 v11 = objc_alloc_init(&OBJC_CLASS___NSFileManager);
    -[NSFileManager createDirectoryAtPath:withIntermediateDirectories:attributes:error:]( v11,  "createDirectoryAtPath:withIntermediateDirectories:attributes:error:",  -[NSString stringByDeletingLastPathComponent](v10, "stringByDeletingLastPathComponent"),  1LL,  0LL,  0LL);

    __int128 v12 = +[ISHashedDownloadProvider provider](&OBJC_CLASS___ISHashedDownloadProvider, "provider");
    [v12 setLocalFilePath:v10];
    [v9 setDataProvider:v12];
  }

  -[NSMutableDictionary setObject:forKey:]( v8,  "setObject:forKey:",  +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", v10),  &off_10036DA10);
  if ([v9 collectionIndexInCollectionGroup]) {
    -[NSMutableDictionary setObject:forKey:]( v8,  "setObject:forKey:",  [v9 collectionIndexInCollectionGroup],  &off_10036DA28);
  }
  if ([v9 indexInCollection]) {
    -[NSMutableDictionary setObject:forKey:]( v8,  "setObject:forKey:",  [v9 indexInCollection],  &off_10036DA40);
  }
  if ([v9 episodeSortIdentifier]) {
    -[NSMutableDictionary setObject:forKey:]( v8,  "setObject:forKey:",  [v9 episodeSortIdentifier],  &off_10036DA58);
  }
  -[NSMutableDictionary setObject:forKey:](v8, "setObject:forKey:", &off_10036DA70, &off_10036DA88);
  -[NSMutableDictionary setObject:forKey:](v8, "setObject:forKey:", &__kCFBooleanFalse, &off_10036DAA0);
  if ([v9 artistName]) {
    -[NSMutableDictionary setObject:forKey:](v8, "setObject:forKey:", [v9 artistName], &off_10036DAB8);
  }
  if ([v9 seriesName]) {
    -[NSMutableDictionary setObject:forKey:](v8, "setObject:forKey:", [v9 seriesName], &off_10036DAD0);
  }
  if ([v9 collectionArtistName]) {
    -[NSMutableDictionary setObject:forKey:]( v8,  "setObject:forKey:",  [v9 collectionArtistName],  &off_10036DAE8);
  }
  if ([v9 genre]) {
    -[NSMutableDictionary setObject:forKey:](v8, "setObject:forKey:", [v9 genre], &off_10036DB00);
  }
  if ([a3 itemMediaPath]) {
    -[NSMutableDictionary setObject:forKey:](v8, "setObject:forKey:", [a3 itemMediaPath], &off_10036DB18);
  }
  if ([v9 collectionName]) {
    -[NSMutableDictionary setObject:forKey:]( v8,  "setObject:forKey:",  [v9 collectionName],  &off_10036DB30);
  }
  if ([v9 composerName]) {
    -[NSMutableDictionary setObject:forKey:](v8, "setObject:forKey:", [v9 composerName], &off_10036DB48);
  }
  if ([v9 showComposer]) {
    -[NSMutableDictionary setObject:forKey:](v8, "setObject:forKey:", [v9 showComposer], &off_10036DB60);
  }
  if ([v9 isMusicShow]) {
    -[NSMutableDictionary setObject:forKey:]( v8,  "setObject:forKey:",  +[NSNumber numberWithBool:](NSNumber, "numberWithBool:", [v9 isMusicShow]),  &off_10036DB78);
  }
  if ([v9 title]) {
    -[NSMutableDictionary setObject:forKey:](v8, "setObject:forKey:", [v9 title], &off_10036DB90);
  }
  if ([v9 numberOfCollectionsInCollectionGroup]) {
    -[NSMutableDictionary setObject:forKey:]( v8,  "setObject:forKey:",  [v9 numberOfCollectionsInCollectionGroup],  &off_10036DBA8);
  }
  if ([v9 numberOfItemsInCollection]) {
    -[NSMutableDictionary setObject:forKey:]( v8,  "setObject:forKey:",  [v9 numberOfItemsInCollection],  &off_10036DBC0);
  }
  if ([v9 releaseYear]) {
    -[NSMutableDictionary setObject:forKey:](v8, "setObject:forKey:", [v9 releaseYear], &off_10036DBD8);
  }
  -[NSMutableDictionary setObject:forKey:](v8, "setObject:forKey:", &off_10036DA70, &off_10036DBF0);
  -[NSMutableDictionary setObject:forKey:]( v8,  "setObject:forKey:",  +[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", (v10 >> 1) & 1),  &off_10036DC08);
  -[NSMutableDictionary setObject:forKey:]( v8,  "setObject:forKey:",  +[NSNumber numberWithBool:](NSNumber, "numberWithBool:", [v9 isCompilation]),  &off_10036DC20);
  -[NSMutableDictionary setObject:forKey:]( v8,  "setObject:forKey:",  -[IPodLibraryML3TrackImporter _absoluteTimeValueForDateValue:]( self,  "_absoluteTimeValueForDateValue:",  [v9 purchaseDate]),  &off_10036DC38);
  -[NSMutableDictionary setObject:forKey:](v8, "setObject:forKey:", &off_10036E468, &off_10036DC50);
  else {
    __int128 v13 = (uint64_t)objc_msgSend(objc_msgSend(v9, "contentRating"), "rank");
  }
  -[NSMutableDictionary setObject:forKey:]( v8,  "setObject:forKey:",  +[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", v13),  &off_10036DC68);
  -[NSMutableDictionary setObject:forKey:]( v8,  "setObject:forKey:",  +[NSNumber numberWithInteger:]( NSNumber,  "numberWithInteger:",  objc_msgSend(objc_msgSend(v9, "contentRating"), "rank")),  &off_10036DC80);
  -[NSMutableDictionary setObject:forKey:](v8, "setObject:forKey:", &__kCFBooleanFalse, &off_10036DC98);
  if ([v9 durationInMilliseconds]) {
    -[NSMutableDictionary setObject:forKey:]( v8,  "setObject:forKey:",  [v9 durationInMilliseconds],  &off_10036DCB0);
  }
  -[NSMutableDictionary setObject:forKey:](v8, "setObject:forKey:", &off_10036DA70, &off_10036DCC8);
  -[NSMutableDictionary setObject:forKey:](v8, "setObject:forKey:", &off_10036DA70, &off_10036DCE0);
  if ([v9 shortDescription]) {
    -[NSMutableDictionary setObject:forKey:]( v8,  "setObject:forKey:",  [v9 shortDescription],  &off_10036DCF8);
  }
  if ([v9 longDescription]) {
    -[NSMutableDictionary setObject:forKey:]( v8,  "setObject:forKey:",  [v9 longDescription],  &off_10036DD10);
  }
  if ([v9 longSeasonDescription]) {
    -[NSMutableDictionary setObject:forKey:]( v8,  "setObject:forKey:",  [v9 longSeasonDescription],  &off_10036DD28);
  }
  if ([v9 copyright]) {
    -[NSMutableDictionary setObject:forKey:](v8, "setObject:forKey:", [v9 copyright], &off_10036DD40);
  }
  -[NSMutableDictionary setObject:forKey:](v8, "setObject:forKey:", &off_10036DA70, &off_10036DD58);
  -[NSMutableDictionary setObject:forKey:]( v8,  "setObject:forKey:",  +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", v10),  &off_10036DD70);
  if ([v9 workName]) {
    -[NSMutableDictionary setObject:forKey:](v8, "setObject:forKey:", [v9 workName], &off_10036DD88);
  }
  if ([v9 movementName]) {
    -[NSMutableDictionary setObject:forKey:](v8, "setObject:forKey:", [v9 movementName], &off_10036DDA0);
  }
  if ([v9 movementNumber]) {
    -[NSMutableDictionary setObject:forKey:]( v8,  "setObject:forKey:",  [v9 movementNumber],  &off_10036DDB8);
  }
  if ([v9 movementCount]) {
    -[NSMutableDictionary setObject:forKey:](v8, "setObject:forKey:", [v9 movementCount], &off_10036DDD0);
  }
  -[NSMutableDictionary setObject:forKey:](v8, "setObject:forKey:", &off_10036DA70, &off_10036DDE8);
  -[NSMutableDictionary setObject:forKey:](v8, "setObject:forKey:", &off_10036DA70, &off_10036DE00);
  -[NSMutableDictionary setObject:forKey:]( v8,  "setObject:forKey:",  +[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", (v10 & 0xFF00) != 0),  &off_10036DE18);
  -[NSMutableDictionary setObject:forKey:](v8, "setObject:forKey:", &off_10036E478, &off_10036DE30);
  -[NSMutableDictionary setObject:forKey:](v8, "setObject:forKey:", &off_10036DA70, &off_10036DE48);
  if ([v9 durationInMilliseconds]) {
    -[NSMutableDictionary setObject:forKey:]( v8,  "setObject:forKey:",  [v9 durationInMilliseconds],  &off_10036DE60);
  }
  -[NSMutableDictionary setObject:forKey:](v8, "setObject:forKey:", &off_10036DA70, &off_10036DE78);
  if ([a3 itemDownloadIdentifier]) {
    -[NSMutableDictionary setObject:forKey:]( v8,  "setObject:forKey:",  [a3 itemDownloadIdentifier],  &off_10036DE90);
  }
  -[NSMutableDictionary setObject:forKey:](v8, "setObject:forKey:", &off_10036DA70, &off_10036DEA8);
  -[NSMutableDictionary setObject:forKey:](v8, "setObject:forKey:", &off_10036DA70, &off_10036DEC0);
  -[NSMutableDictionary setObject:forKey:](v8, "setObject:forKey:", &__kCFBooleanFalse, &off_10036DED8);
  +[NSDate timeIntervalSinceReferenceDate](&OBJC_CLASS___NSDate, "timeIntervalSinceReferenceDate");
  -[NSMutableDictionary setObject:forKey:]( v8,  "setObject:forKey:",  +[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:"),  &off_10036DEF0);
  -[NSMutableDictionary setObject:forKey:](v8, "setObject:forKey:", &off_10036DA70, &off_10036DF08);
  -[NSMutableDictionary setObject:forKey:](v8, "setObject:forKey:", &off_10036DA70, &off_10036DF20);
  -[NSMutableDictionary setObject:forKey:]( v8,  "setObject:forKey:",  +[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", ML3ImportDefaultRememberBookmarkTime(v10)),  &off_10036DF38);
  -[NSMutableDictionary setObject:forKey:](v8, "setObject:forKey:", &off_10036DA70, &off_10036DF50);
  -[NSMutableDictionary setObject:forKey:](v8, "setObject:forKey:", &__kCFBooleanFalse, &off_10036DF68);
  if ([v9 itemIdentifier]) {
    -[NSMutableDictionary setObject:forKey:]( v8,  "setObject:forKey:",  +[NSNumber numberWithUnsignedLongLong:]( NSNumber,  "numberWithUnsignedLongLong:",  [v9 itemIdentifier]),  &off_10036DF80);
  }
  if ([v9 composerIdentifier]) {
    -[NSMutableDictionary setObject:forKey:]( v8,  "setObject:forKey:",  +[NSNumber numberWithUnsignedLongLong:]( NSNumber,  "numberWithUnsignedLongLong:",  [v9 composerIdentifier]),  &off_10036DF98);
  }
  if ([v9 genreIdentifier]) {
    -[NSMutableDictionary setObject:forKey:]( v8,  "setObject:forKey:",  +[NSNumber numberWithUnsignedLongLong:]( NSNumber,  "numberWithUnsignedLongLong:",  [v9 genreIdentifier]),  &off_10036DFB0);
  }
  if ([v9 collectionIdentifier]) {
    -[NSMutableDictionary setObject:forKey:]( v8,  "setObject:forKey:",  +[NSNumber numberWithUnsignedLongLong:]( NSNumber,  "numberWithUnsignedLongLong:",  [v9 collectionIdentifier]),  &off_10036DFC8);
  }
  -[NSMutableDictionary setObject:forKey:](v8, "setObject:forKey:", &off_10036DA70, &off_10036DFE0);
  if ([v9 redownloadActionParameters]) {
    -[NSMutableDictionary setObject:forKey:]( v8,  "setObject:forKey:",  [v9 redownloadActionParameters],  &off_10036DFF8);
  }
  -[NSMutableDictionary setObject:forKey:]( v8,  "setObject:forKey:",  +[NSNumber numberWithUnsignedLongLong:]( NSNumber,  "numberWithUnsignedLongLong:",  SSGetItemIdentifierFromValue([v9 cloudIdentifier])),  &off_10036E010);
  -[NSMutableDictionary setObject:forKey:](v8, "setObject:forKey:", &off_10036DA70, &off_10036E028);
  if ([a3 protectionType] != (id)2) {
    -[NSMutableDictionary setObject:forKey:](v8, "setObject:forKey:", &__kCFBooleanTrue, &off_10036E040);
  }
  -[NSMutableDictionary setObject:forKey:](v8, "setObject:forKey:", &off_10036DA70, &off_10036E058);
  __int128 v14 = [v9 purchaserAccountIdentifier];
  if (v14 || (__int128 v14 = [a4 uniqueIdentifier]) != 0) {
    -[NSMutableDictionary setObject:forKey:](v8, "setObject:forKey:", v14, &off_10036E070);
  }
  uint64_t v15 = objc_msgSend(v9, "downloaderAccountIdentifier", v14);
  if (v15 || (uint64_t v15 = [a4 uniqueIdentifier]) != 0) {
    -[NSMutableDictionary setObject:forKey:](v8, "setObject:forKey:", v15, &off_10036E088);
  }
  -[NSMutableDictionary setObject:forKey:]( v8,  "setObject:forKey:",  -[IPodLibraryML3TrackImporter _absoluteTimeValueForDateValue:]( self,  "_absoluteTimeValueForDateValue:",  objc_msgSend(v9, "purchaseDate", v15)),  &off_10036E0A0);
  -[NSMutableDictionary setObject:forKey:]( v8,  "setObject:forKey:",  -[IPodLibraryML3TrackImporter _absoluteTimeValueForDateValue:]( self,  "_absoluteTimeValueForDateValue:",  [v9 releaseDate]),  &off_10036E0B8);
  if ([v9 podcastEpisodeGUID]) {
    -[NSMutableDictionary setObject:forKey:]( v8,  "setObject:forKey:",  [v9 podcastEpisodeGUID],  &off_10036E0D0);
  }
  if (-[IPodLibraryML3TrackImporter _stringValueForURLValue:]( self,  "_stringValueForURLValue:",  [v9 podcastFeedURL]))
  {
    -[NSMutableDictionary setObject:forKey:]( v8,  "setObject:forKey:",  -[IPodLibraryML3TrackImporter _stringValueForURLValue:]( self,  "_stringValueForURLValue:",  [v9 podcastFeedURL]),  &off_10036E0E8);
  }

  if (-[IPodLibraryML3TrackImporter _stringValueForURLValue:]( self,  "_stringValueForURLValue:",  [v9 viewStoreItemURL]))
  {
    -[NSMutableDictionary setObject:forKey:]( v8,  "setObject:forKey:",  -[IPodLibraryML3TrackImporter _stringValueForURLValue:]( self,  "_stringValueForURLValue:",  [v9 viewStoreItemURL]),  &off_10036E100);
  }

  uint64_t v16 = SSDownloadMetadataKeyXID;
  if ([v9 valueForMetadataKey:SSDownloadMetadataKeyXID]) {
    -[NSMutableDictionary setObject:forKey:]( v8,  "setObject:forKey:",  [v9 valueForMetadataKey:v16],  &off_10036E118);
  }
  uint64_t v17 = SSDownloadMetadataKeyAssetFlavor;
  if ([v9 valueForMetadataKey:SSDownloadMetadataKeyAssetFlavor]) {
    -[NSMutableDictionary setObject:forKey:]( v8,  "setObject:forKey:",  [v9 valueForMetadataKey:v17],  &off_10036E130);
  }
  if ([v9 matchedStatus]) {
    -[NSMutableDictionary setObject:forKey:](v8, "setObject:forKey:", [v9 matchedStatus], &off_10036E148);
  }
  if ([v9 redownloadedStatus]) {
    -[NSMutableDictionary setObject:forKey:]( v8,  "setObject:forKey:",  [v9 redownloadedStatus],  &off_10036E160);
  }
  if ([v9 launchExtrasUrl]) {
    -[NSMutableDictionary setObject:forKey:]( v8,  "setObject:forKey:",  [v9 launchExtrasUrl],  &off_10036E178);
  }
  if ([v9 rentalID]) {
    -[NSMutableDictionary setObject:forKey:](v8, "setObject:forKey:", [v9 rentalID], &off_10036E190);
  }
  -[NSMutableDictionary setObject:forKey:]( v8,  "setObject:forKey:",  +[NSNumber numberWithBool:](NSNumber, "numberWithBool:", [v9 isHighDefinition]),  &off_10036E1A8);
  -[NSMutableDictionary setObject:forKey:]( v8,  "setObject:forKey:",  +[NSNumber numberWithBool:](NSNumber, "numberWithBool:", [v9 isRental]),  &off_10036E1C0);
  if (a3) {
    id v18 = [a3 chapters] != 0;
  }
  else {
    id v18 = 0LL;
  }
  -[NSMutableDictionary setObject:forKey:]( v8,  "setObject:forKey:",  +[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", v18),  &off_10036E1D8);
  if ([v9 seasonNumber]) {
    -[NSMutableDictionary setObject:forKey:](v8, "setObject:forKey:", [v9 seasonNumber], &off_10036E1F0);
  }
  if ([v9 episodeIdentifier]) {
    -[NSMutableDictionary setObject:forKey:]( v8,  "setObject:forKey:",  [v9 episodeIdentifier],  &off_10036E208);
  }
  if ([v9 networkName]) {
    -[NSMutableDictionary setObject:forKey:](v8, "setObject:forKey:", [v9 networkName], &off_10036E220);
  }
  if (-[IPodLibraryML3TrackImporter _currentTrackMovieInfoFromMetadata:]( self,  "_currentTrackMovieInfoFromMetadata:",  v9))
  {
    -[NSMutableDictionary setObject:forKey:]( v8,  "setObject:forKey:",  -[IPodLibraryML3TrackImporter _currentTrackMovieInfoFromMetadata:]( self,  "_currentTrackMovieInfoFromMetadata:",  v9),  &off_10036E238);
  }

  unsigned int v19 = -[IPodLibraryML3TrackImporter _extendedContentRatingStringForLibraryItem:]( self,  "_extendedContentRatingStringForLibraryItem:",  a3);
  if ([v19 length]) {
    -[NSMutableDictionary setObject:forKey:](v8, "setObject:forKey:", v19, &off_10036E250);
  }
  if ([v9 hlsPlaylistURL]) {
    -[NSMutableDictionary setObject:forKey:]( v8,  "setObject:forKey:",  objc_msgSend(objc_msgSend(v9, "hlsPlaylistURL"), "absoluteString"),  &off_10036E268);
  }
  unsigned int v20 = [v9 valueForMetadataKey:SSDownloadMetadataKeyIsHLS];
  __int16 v21 = [v9 valueForMetadataKey:SSDownloadMetadataKeyHasHDR];
  if ((objc_opt_respondsToSelector(v21, "BOOLValue") & 1) != 0) {
    uint64_t v22 = [v21 BOOLValue];
  }
  else {
    uint64_t v22 = 0;
  }
  uint64_t v23 = [v9 valueForMetadataKey:SSDownloadMetadataKeyHasDolbyVision];
  if ((objc_opt_respondsToSelector(v23, "BOOLValue") & 1) == 0)
  {
    if ((v22 & 1) == 0) {
      goto LABEL_130;
    }
    uint64_t v25 = 1LL;
LABEL_129:
    -[NSMutableDictionary setObject:forKey:]( v8,  "setObject:forKey:",  +[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", v25),  &off_10036E298);
    goto LABEL_130;
  }

  uint64_t v24 = [v23 BOOLValue];
  if (v24) {
    uint64_t v25 = v22 | 2LL;
  }
  else {
    uint64_t v25 = 1LL;
  }
  if ((v24 | v22) == 1) {
    goto LABEL_129;
  }
LABEL_130:
  int v26 = [v9 valueForMetadataKey:SSDownloadMetadataKeyHas4K];
  uint64_t v27 = -[IPodLibraryML3TrackImporter _storeArtworkTokenFromLibraryItem:metadata:]( self,  "_storeArtworkTokenFromLibraryItem:metadata:",  a3,  v9);
  if (v27) {
    -[NSMutableDictionary setObject:forKey:](v8, "setObject:forKey:", v27, &off_10036E2E0);
  }
  __int16 v28 = -[NSMutableDictionary objectForKey:](v8, "objectForKey:", &off_10036D9F8);
  if (v28)
  {
    uint64_t v29 = -[IPodLibraryML3TrackImporter _currentTrackChapterDataForTrackPid:libraryItem:usingLibrary:]( self,  "_currentTrackChapterDataForTrackPid:libraryItem:usingLibrary:",  [v28 longLongValue],  a3,  a5);
    if (v29) {
      -[NSMutableDictionary setObject:forKey:](v8, "setObject:forKey:", v29, &off_10036E2F8);
    }
  }

  if ([v9 artistIdentifier]) {
    -[NSMutableDictionary setObject:forKey:]( v8,  "setObject:forKey:",  +[NSNumber numberWithUnsignedLongLong:]( NSNumber,  "numberWithUnsignedLongLong:",  [v9 artistIdentifier]),  &off_10036E310);
  }
  return v8;
}

  -[FinishDownloadStepOperation finishWithDownloadResponse:](self, "finishWithDownloadResponse:", v5);
}

LABEL_23:
    uint64_t v22 = v35;
    int v35 = 0LL;
  }

    __int128 v13 = CFReadStreamCopyProperty(stream, kCFStreamPropertyFileCurrentOffset);
    if (v13) {
      CFRelease(v13);
    }
    goto LABEL_25;
  }

  if (theData && CFDataGetLength(theData))
  {
    if (!CFDataGetLength(theData))
    {
      *(_DWORD *)(v12 + 20) = 0;
      __int128 v12 = 1LL;
      if (!a4)
      {
LABEL_62:
        if (v32 != a6) {
          sub_10003A148(&v32);
        }
        return v12;
      }

      goto LABEL_54;
    }

    goto LABEL_14;
  }

  if ((void *)v12 != a6) {
    sub_10003A148(&v32);
  }
  return a5 == 0LL;
}

      uint64_t v23 = 0;
LABEL_27:
      if (v22 - 1 <= 0x27F)
      {
        -[NSMutableArray addObject:](v16, "addObject:", v21);
        v20 += v22;
      }

      uint64_t v27 = v19++ >= v18 || v23;
      if ((v27 & 1) != 0)
      {

        if (!v23) {
          goto LABEL_36;
        }
        -[LoadMicroPaymentProductsOperation lock](self, "lock");

        self->_response = 0LL;
        -[LoadMicroPaymentProductsOperation unlock](self, "unlock");
        __int16 v28 = 0;
        uint64_t v29 = v40;
        goto LABEL_46;
      }
    }

    uint64_t v22 = (unint64_t)[0 length];
    __int16 v21 = 0LL;
    if (v22 < 0x281) {
      goto LABEL_24;
    }
LABEL_22:
    -[NSMutableArray addObject:](v15, "addObject:", v21);
    goto LABEL_23;
  }
}

  CFDataRef result = 0LL;
  if (v11 && v12)
  {
    unsigned int v20 = v18 | !v4;
    if ((v20 | v19) != 1) {
      return 0LL;
    }
    -[DownloadAsset setValue:forProperty:]( v7,  "setValue:forProperty:",  +[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", 1LL),  @"is_external");
    -[DownloadAsset setValue:forProperty:](v7, "setValue:forProperty:", v11, @"asset_type");
    -[DownloadAsset setValue:forProperty:](v7, "setValue:forProperty:", v12, @"url");
    if (((v20 | v19 ^ 1) & 1) == 0) {
      -[DownloadAsset setValue:forProperty:](v7, "setValue:forProperty:", v15, @"variant_id");
    }
    __int16 v21 = [a3 objectForKey:@"md5"];
    uint64_t v22 = objc_opt_class(&OBJC_CLASS___NSString);
    if ((objc_opt_isKindOfClass(v21, v22) & 1) != 0)
    {
      uint64_t v23 = +[NSArray arrayWithObjects:](&OBJC_CLASS___NSArray, "arrayWithObjects:", v21, 0LL);
      uint64_t v24 = +[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", 0LL);
      if (!v23) {
        return v7;
      }
    }

    else
    {
      uint64_t v23 = (NSArray *)[a3 objectForKey:@"md5s"];
      uint64_t v24 = (NSNumber *)[a3 objectForKey:@"md5-size"];
      int v26 = objc_opt_class(&OBJC_CLASS___NSArray);
      if ((objc_opt_isKindOfClass(v23, v26) & 1) == 0) {
        return v7;
      }
      uint64_t v27 = objc_opt_class(&OBJC_CLASS___NSNumber);
      if ((objc_opt_isKindOfClass(v24, v27) & 1) == 0 || -[NSNumber longLongValue](v24, "longLongValue") < 1) {
        return v7;
      }
      __int16 v37 = 0u;
      uint64_t v38 = 0u;
      isKindOfClass = -[NSArray count](v23, "count") != 0;
      id v39 = 0u;
      __int16 v40 = 0u;
      uint64_t v29 = -[NSArray countByEnumeratingWithState:objects:count:]( v23,  "countByEnumeratingWithState:objects:count:",  &v37,  v42,  16LL);
      if (v29)
      {
        unsigned int v30 = v29;
        int v31 = *(void *)v38;
        do
        {
          unsigned int v32 = 0LL;
          do
          {
            if (*(void *)v38 != v31) {
              objc_enumerationMutation(v23);
            }
            if ((isKindOfClass & 1) != 0)
            {
              __int16 v33 = *(void *)(*((void *)&v37 + 1) + 8LL * (void)v32);
              uint64_t v34 = objc_opt_class(&OBJC_CLASS___NSString);
              isKindOfClass = objc_opt_isKindOfClass(v33, v34);
            }

            else
            {
              isKindOfClass = 0;
            }

            unsigned int v32 = (char *)v32 + 1;
          }

          while (v30 != v32);
          unsigned int v30 = -[NSArray countByEnumeratingWithState:objects:count:]( v23,  "countByEnumeratingWithState:objects:count:",  &v37,  v42,  16LL);
        }

        while (v30);
      }

      if ((isKindOfClass & 1) == 0)
      {
        uint64_t v23 = 0LL;
        uint64_t v24 = 0LL;
      }

      if (!v23) {
        return v7;
      }
    }

    if (v24)
    {
      uint64_t v25 = +[NSPropertyListSerialization dataWithPropertyList:format:options:error:]( &OBJC_CLASS___NSPropertyListSerialization,  "dataWithPropertyList:format:options:error:",  v23,  200LL,  0LL,  0LL);
      if (v25)
      {
        -[DownloadAsset setValue:forProperty:](v7, "setValue:forProperty:", v25, @"hash_array");
        -[DownloadAsset setValue:forProperty:](v7, "setValue:forProperty:", v24, @"bytes_to_hash");
      }
    }

    return v7;
  }

  return result;
}

  uint64_t v25 = (id)v33[5];
  _Block_object_dispose(&v32, 8);

  return v25;
}

  __int128 v11 = -[FinishDownloadStepOperation initWithDownload:]( objc_alloc(&OBJC_CLASS___InstallDownloadOperation),  "initWithDownload:",  self->_download);
  -[FinishDownloadStepOperation setDownloadPhase:](v11, "setDownloadPhase:", SSDownloadPhaseInstalling);
  [v3 addObject:v11];
  [v8 addObject:@"Install"];
  if (v9)
  {
LABEL_24:
    uint64_t v23 = 1.0;
    uint64_t v24 = v9;
LABEL_25:
    [v24 setProgressFraction:v23];
    goto LABEL_26;
  }

  if (v10 && v11)
  {
    -[FinishDownloadStepOperation setProgressFraction:](v10, "setProgressFraction:", 1.0);
    if (v6)
    {
      -[FinishDownloadStepOperation setProgressFraction:](v10, "setProgressFraction:", 0.5);
      uint64_t v23 = 0.5;
      uint64_t v24 = v11;
      goto LABEL_25;
    }
  }

  else
  {
    if (v10)
    {
      uint64_t v23 = 1.0;
      uint64_t v24 = v10;
      goto LABEL_25;
    }

    if (v11) {
      -[FinishDownloadStepOperation setProgressFraction:](v11, "setProgressFraction:", 1.0);
    }
    uint64_t v10 = 0LL;
  }

  __int16 v21 = (os_log_s *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v21) {
    __int16 v21 = (os_log_s *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  uint64_t v22 = -[os_log_s shouldLog](v21, "shouldLog");
  else {
    LODWORD(v23) = v22;
  }
  uint64_t v24 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[os_log_s OSLogObject](v21, "OSLogObject"));
  if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v23 = v23;
  }
  else {
    v23 &= 2u;
  }
  if (!(_DWORD)v23) {
    goto LABEL_75;
  }
  int v53 = 138412546;
  id v54 = (id)objc_opt_class(self);
  __int16 v55 = 2048;
  __int128 v56 = v4;
  uint64_t v25 = v54;
  int v26 = (void *)_os_log_send_and_compose_impl( v23,  0LL,  0LL,  0LL,  &_mh_execute_header,  v24,  0LL,  "%@: Skipping recovery after too many attempts: %lld",  &v53,  22);

  if (v26)
  {
    uint64_t v24 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v26,  4LL));
    free(v26);
    uint64_t v50 = v24;
    SSFileLog(v21, @"%@");
LABEL_75:
  }

LABEL_77:
  uint64_t v48 = objc_claimAutoreleasedReturnValue(-[ExpiredDownloadRecoveryOperation outputBlock](self, "outputBlock", v50));
  uint64_t v49 = (void *)v48;
  if (v48)
  {
    (*(void (**)(uint64_t, ExpiredDownloadRecoveryOperation *, ExpiredDownloadRecoveryResponse *))(v48 + 16))( v48,  self,  v3);
    -[ExpiredDownloadRecoveryOperation setOutputBlock:](self, "setOutputBlock:", 0LL);
  }
}
    }

    uint64_t v10 = [v8 countByEnumeratingWithState:&v28 objects:v34 count:16];
  }

  while (v10);
LABEL_25:

  int v6 = v25;
  if (v7) {
    +[BookAssetDaemonUtility sendBookStoreDownloads:withReason:]( &OBJC_CLASS___BookAssetDaemonUtility,  "sendBookStoreDownloads:withReason:",  v7,  v25);
  }

  unsigned int v5 = v26;
LABEL_28:
}

          -[NSMutableArray addObject:](v32, "addObject:", v11, v28);
          goto LABEL_28;
        }

        uint64_t v24 = IsSoftwareKind ^ 1;
        if (!v13) {
          uint64_t v24 = 0;
        }
        if ((v24 & 1) == 0) {
          goto LABEL_23;
        }
        uint64_t v25 = -[NSNumber initWithLongLong:]( [NSNumber alloc],  "initWithLongLong:",  [v13 databaseID]);
        int v26 = -[NSMutableDictionary objectForKey:](v6, "objectForKey:", v25);
        if (v26)
        {
          [v26 addObject:v11];
        }

        else
        {
          uint64_t v27 = -[NSMutableArray initWithObjects:]( objc_alloc(&OBJC_CLASS___NSMutableArray),  "initWithObjects:",  v11,  0LL);
          -[NSMutableDictionary setObject:forKey:](v6, "setObject:forKey:", v27, v25);
        }

LABEL_28:
        objc_autoreleasePoolPop(v12);
      }

      id v8 = [obj countByEnumeratingWithState:&v35 objects:v39 count:16];
    }

    while (v8);
  }

  (*((void (**)(id, NSMutableArray *, NSMutableDictionary *))a5 + 2))(a5, v32, v6);
}

    mach_msg_destroy(&msg);
    return v12;
  }

  mig_put_reply_port(msg.msgh_local_port);
  return v12;
}

LABEL_24:
  return v35;
}

void sub_100025FF8(uint64_t a1, uint64_t a2)
{
  int v2 = *(void **)(a1 + 32);
  id v3 = (id)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", a2));
  [v2 addObject:v3];
}

uint64_t sub_100026264(uint64_t a1, void *a2)
{
  return 1LL;
}

void sub_10002666C(uint64_t a1, uint64_t a2)
{
  id v3 = -[DownloadAssetEntity initWithPersistentID:inDatabase:]( objc_alloc(&OBJC_CLASS___DownloadAssetEntity),  "initWithPersistentID:inDatabase:",  a2,  *(void *)(a1 + 32));
  -[DownloadAssetEntity setValue:forProperty:](v3, "setValue:forProperty:", 0LL, *(void *)(a1 + 40));
}

LABEL_50:
  unsigned int v32 = 1;
LABEL_51:
  id v39 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedWriteToDiskConfig](&OBJC_CLASS___SSLogConfig, "sharedWriteToDiskConfig", v48));
  if (!v39) {
    id v39 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  __int16 v40 = [v39 shouldLog];
  else {
    LODWORD(v41) = v40;
  }
  unsigned int v42 = (os_log_s *)objc_claimAutoreleasedReturnValue([v39 OSLogObject]);
  if (os_log_type_enabled(v42, OS_LOG_TYPE_DEFAULT)) {
    id v41 = v41;
  }
  else {
    v41 &= 2u;
  }
  if ((_DWORD)v41)
  {
    id v43 = (void *)objc_opt_class(self);
    id v51 = 138412546;
    id v52 = v43;
    int v53 = 2112;
    id v54 = v5;
    uint64_t v44 = v43;
    LODWORD(v49) = 22;
    id v45 = (void *)_os_log_send_and_compose_impl( v41,  0LL,  0LL,  0LL,  &_mh_execute_header,  v42,  0LL,  "%@: Rental sync response: %@",  &v51,  v49);

    uint64_t v46 = a4;
    if (!v45) {
      goto LABEL_64;
    }
    unsigned int v42 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v45,  4LL));
    free(v45);
    SSFileLog(v39, @"%@");
  }

  else
  {
    uint64_t v46 = a4;
  }

LABEL_64:
  if (v46) {
    *uint64_t v46 = v17;
  }

  return v32;
}

  objc_msgSend(v28, "unionChangeset:", v23, v55);
  int v53 = *(_BYTE *)(*(void *)(*(void *)(a1 + 72) + 8LL) + 24LL) != 0;

  _Block_object_dispose(v91, 8);
  return v53;
}

      return;
  }

LABEL_14:
  if (!-[ISLoadURLBagOperation success](v4, "success", v26))
  {
    uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v17) {
      uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    LODWORD(v1_Block_object_dispose(va, 8) = [v17 shouldLog];
    unsigned int v19 = [v17 shouldLogToDisk];
    unsigned int v20 = (os_log_s *)objc_claimAutoreleasedReturnValue([v17 OSLogObject]);
    __int16 v21 = v20;
    if (v19) {
      LODWORD(v1_Block_object_dispose(va, 8) = v18 | 2;
    }
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
      id v18 = v18;
    }
    else {
      v18 &= 2u;
    }
    if ((_DWORD)v18)
    {
      uint64_t v22 = (void *)objc_opt_class(a1);
      uint64_t v38 = 138543362;
      id v39 = v22;
      uint64_t v23 = v22;
      LODWORD(v27) = 12;
      uint64_t v24 = (void *)_os_log_send_and_compose_impl( v18,  0LL,  0LL,  0LL,  &_mh_execute_header,  v21,  16LL,  "%{public}@: Failed to find bag",  &v38,  v27);

      if (!v24)
      {
LABEL_27:

        uint64_t v16 = 0LL;
        goto LABEL_28;
      }

      __int16 v21 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v24,  4LL));
      free(v24);
      SSFileLog(v17, @"%@");
    }

    goto LABEL_27;
  }

  uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(-[ISLoadURLBagOperation URLBag](v4, "URLBag"));
LABEL_28:

  _Block_object_dispose(&v34, 8);
  return v16;
}

  if (a5) {
    *a5 = (id) v36[5];
  }
  uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithArray:](&OBJC_CLASS___NSArray, "arrayWithArray:", v42[5], v24));

  _Block_object_dispose(&v35, 8);
  _Block_object_dispose(&v41, 8);

  return v22;
}

  __int16 v40 = 0LL;
  -[DaemonBiometricKeychain _deleteKeychainTokensForAccountIdentifier:purpose:error:]( self,  "_deleteKeychainTokensForAccountIdentifier:purpose:error:",  v6,  0LL,  &v40,  v35);
  uint64_t v22 = v40;
  id v39 = 0LL;
  -[DaemonBiometricKeychain _deleteKeychainTokensForAccountIdentifier:purpose:error:]( self,  "_deleteKeychainTokensForAccountIdentifier:purpose:error:",  v6,  1LL,  &v39);

  uint64_t v23 = v39;
  uint64_t v24 = v23;
  if (v22 && v23)
  {
    __int16 v37 = a4;
    uint64_t v25 = SSError(SSErrorDomain, 147LL, 0LL, 0LL);
    int v26 = (void *)objc_claimAutoreleasedReturnValue(v25);
    uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v27) {
      uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    LODWORD(v2_Block_object_dispose(va, 8) = [v27 shouldLog];
    uint64_t v29 = (os_log_s *)objc_claimAutoreleasedReturnValue([v27 OSLogObject]);
    if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR)) {
      __int16 v28 = v28;
    }
    else {
      v28 &= 2u;
    }
    if ((_DWORD)v28)
    {
      unsigned int v30 = (void *)objc_opt_class(self);
      unsigned int v42 = 138543362;
      id v43 = v30;
      int v31 = v30;
      LODWORD(v36) = 12;
      unsigned int v32 = (void *)_os_log_send_and_compose_impl( v28,  0LL,  0LL,  0LL,  &_mh_execute_header,  v29,  16LL,  "%{public}@: Failed to delete both purchase and extended action keys",  &v42,  v36);

      if (!v32) {
        goto LABEL_27;
      }
      uint64_t v29 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v32,  4LL));
      free(v32);
      SSFileLog(v27, @"%@");
    }

LABEL_27:
    a4 = v37;
    if (!v37) {
      goto LABEL_35;
    }
    goto LABEL_34;
  }

  if (v22)
  {
    __int16 v33 = v22;
  }

  else
  {
    if (!v23)
    {
      int v26 = 0LL;
      if (!a4) {
        goto LABEL_35;
      }
      goto LABEL_34;
    }

    __int16 v33 = v23;
  }

  int v26 = v33;
  if (a4) {
LABEL_34:
  }
    *a4 = v26;
LABEL_35:

  return v26 == 0LL;
}

  if (*(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL)) {
    *a4 = 1;
  }
}

  if (self->_holdingKeepAliveAssertion != (_DWORD)v4)
  {
    self->_holdingKeepAliveAssertion = (char)v4;
    if (!(_DWORD)v4)
    {
      uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(+[Daemon daemon](&OBJC_CLASS___Daemon, "daemon", (void)v10));
      [v9 releaseKeepAliveAssertion:@"com.apple.itunesstored.DownloadPipeline"];
      goto LABEL_18;
    }

  return v3;
}

void sub_10002A588( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

uint64_t sub_10002A5D0(uint64_t a1)
{
  *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = 1;
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_10002A974(id a1)
{
  uint32_t v1 = arc4random();
  srand48(v1);
}

id sub_10002B3D8(uint64_t a1)
{
  id result = objc_alloc_init((Class)objc_opt_class(*(void *)(a1 + 32)));
  qword_1003A3248 = (uint64_t)result;
  return result;
}

void sub_10002BA48(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) bagType];
  id v3 = [*(id *)(a1 + 40) _clients];
  __int128 v23 = 0u;
  __int128 v24 = 0u;
  __int128 v25 = 0u;
  __int128 v26 = 0u;
  id v4 = [v3 countByEnumeratingWithState:&v23 objects:v31 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v24;
LABEL_3:
    uint64_t v7 = 0LL;
    while (1)
    {
      if (*(void *)v24 != v6) {
        objc_enumerationMutation(v3);
      }
      id v8 = *(void **)(*((void *)&v23 + 1) + 8 * v7);
      if ((((v2 == (id)1) ^ [v8 isSandboxed]) & 1) == 0
        && (objc_msgSend(objc_msgSend(v8, "clientIdentifier"), "isEqualToString:", *(void *)(a1 + 48)) & 1) != 0)
      {
        break;
      }

      if (v5 == (id)++v7)
      {
        id v5 = [v3 countByEnumeratingWithState:&v23 objects:v31 count:16];
        if (v5) {
          goto LABEL_3;
        }
        goto LABEL_12;
      }
    }

    uint64_t v9 = v8;
    if (v9) {
      goto LABEL_16;
    }
  }

LABEL_12:
  BOOL v10 = v2 == (id)1;
  id v11 = [*(id *)(a1 + 40) _beginManagedContextSession];
  __int128 v12 = -[MicroPaymentClient initWithEntity:insertIntoManagedObjectContext:]( objc_alloc(&OBJC_CLASS___MicroPaymentClient),  "initWithEntity:insertIntoManagedObjectContext:",  +[MicroPaymentClient entityForContext:](&OBJC_CLASS___MicroPaymentClient, "entityForContext:", v11),  v11);
  -[MicroPaymentClient setIdentifier:](v12, "setIdentifier:", *(void *)(a1 + 48));
  -[MicroPaymentClient setSandboxed:]( v12,  "setSandboxed:",  +[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", v10));
  if (sub_10003E244(v11))
  {
    uint64_t v9 = -[StoreKitClient initWithMicroPaymentClientID:]( objc_alloc(&OBJC_CLASS___StoreKitClient),  "initWithMicroPaymentClientID:",  -[MicroPaymentClient objectID](v12, "objectID"));
    [*(id *)(*(void *)(a1 + 40) + 32) addObject:v9];
  }

  else
  {
    uint64_t v9 = 0LL;
  }

  +[NSThread endManagedContextSession](&OBJC_CLASS___NSThread, "endManagedContextSession");
  if (v9)
  {
LABEL_16:
    id v13 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v13) {
      id v13 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v14 = [v13 shouldLog];
    else {
      LODWORD(v15) = v14;
    }
    uint64_t v16 = (os_log_s *)[v13 OSLogObject];
    if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO)) {
      uint64_t v15 = v15;
    }
    else {
      v15 &= 2u;
    }
    if ((_DWORD)v15)
    {
      uint64_t v17 = objc_opt_class(*(void *)(a1 + 40));
      uint64_t v18 = *(void *)(a1 + 48);
      int v27 = 138412546;
      uint64_t v28 = v17;
      __int16 v29 = 2112;
      uint64_t v30 = v18;
      uint64_t v19 = _os_log_send_and_compose_impl( v15,  0LL,  0LL,  0LL,  &_mh_execute_header,  v16,  1LL,  "%@: Checking queue for client: %@",  &v27,  22);
      if (v19)
      {
        unsigned int v20 = (void *)v19;
        __int16 v21 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v19, 4LL);
        free(v20);
        uint64_t v22 = v21;
        SSFileLog(v13, @"%@");
      }
    }

    -[StoreKitClient refreshFromServerWithReason:accountIdentifier:]( v9,  "refreshFromServerWithReason:accountIdentifier:",  2,  objc_msgSend(*(id *)(a1 + 32), "userIdentifier", v22));
  }

  return v10;
}

  -[StoreKitClientIdentity setSandboxed:](self, "setSandboxed:", v8);
  -[StoreKitClientIdentity setAllowsBootstrapCellularData:]( self,  "setAllowsBootstrapCellularData:",  [a3 allowsBootstrapCellularData]);
  -[StoreKitClientIdentity setHidesConfirmationDialogs:]( self,  "setHidesConfirmationDialogs:",  [a3 hidesConfirmationDialogs]);
  -[StoreKitClientIdentity setIgnoresInAppPurchaseRestriction:]( self,  "setIgnoresInAppPurchaseRestriction:",  [a3 ignoresInAppPurchaseRestriction]);
  -[StoreKitClientIdentity setRequiresAuthenticationForPayment:]( self,  "setRequiresAuthenticationForPayment:",  [a3 requiresAuthenticationForPayment]);
  -[StoreKitClientIdentity setUsesIdentityAttributes:](self, "setUsesIdentityAttributes:", 1LL);
}

id sub_10002BDB8(uint64_t a1)
{
  id v2 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  if (!v2) {
    id v2 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  unsigned int v3 = [v2 shouldLog];
  else {
    LODWORD(v4) = v3;
  }
  id v5 = (os_log_s *)[v2 OSLogObject];
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v4 = v4;
  }
  else {
    v4 &= 2u;
  }
  if ((_DWORD)v4)
  {
    uint64_t v6 = objc_opt_class(*(void *)(a1 + 32));
    id v7 = [*(id *)(a1 + 40) count];
    int v21 = 138412546;
    uint64_t v22 = v6;
    __int16 v23 = 2048;
    id v24 = v7;
    uint64_t v8 = _os_log_send_and_compose_impl( v4,  0LL,  0LL,  0LL,  &_mh_execute_header,  v5,  0LL,  "%@: Failing %lu downloads",  &v21,  22);
    if (v8)
    {
      uint64_t v9 = (void *)v8;
      BOOL v10 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v8, 4LL);
      free(v9);
      uint64_t v18 = v10;
      SSFileLog(v2, @"%@");
    }
  }

  id v11 = objc_msgSend(*(id *)(a1 + 32), "_beginManagedContextSession", v18);
  __int128 v12 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  id v13 = *(void **)(a1 + 32);
  uint64_t v14 = *(void *)(a1 + 40);
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472LL;
  v20[2] = sub_10002BFE4;
  v20[3] = &unk_10034B968;
  v20[4] = v12;
  [v13 _enumerateDownloadsForIdentifiers:v14 context:v11 usingBlock:v20];
  if (-[NSMutableDictionary count](v12, "count"))
  {
    id v15 = +[DownloadsDatabase downloadsDatabase](&OBJC_CLASS___DownloadsDatabase, "downloadsDatabase");
    v19[0] = _NSConcreteStackBlock;
    v19[1] = 3221225472LL;
    v19[2] = sub_10002C088;
    v19[3] = &unk_10034B990;
    uint64_t v16 = *(void *)(a1 + 32);
    v19[4] = v12;
    v19[5] = v16;
    [v15 readUsingTransactionBlock:v19];
  }

  sub_10003E244(v11);
  return +[NSThread endManagedContextSession](&OBJC_CLASS___NSThread, "endManagedContextSession");
}

void sub_10002BFE4(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = objc_msgSend(objc_msgSend(a3, "payment"), "client");
  if (v5)
  {
    id v6 = [v5 objectID];
    id v7 = (NSMutableArray *)[*(id *)(a1 + 32) objectForKey:v6];
    if (!v7)
    {
      uint64_t v8 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
      [*(id *)(a1 + 32) setObject:v8 forKey:v6];
      id v7 = v8;
    }

    uint64_t v9 = v7;
    -[NSMutableArray addObject:](v7, "addObject:", a3);
  }

id sub_10002C088(uint64_t a1, void *a2)
{
  id v27 = [a2 database];
  __int128 v32 = 0u;
  __int128 v33 = 0u;
  __int128 v34 = 0u;
  __int128 v35 = 0u;
  id obj = *(id *)(a1 + 32);
  id result = [obj countByEnumeratingWithState:&v32 objects:v37 count:16];
  id v23 = result;
  if (result)
  {
    uint64_t v21 = *(void *)v33;
    uint64_t v22 = a1;
    do
    {
      uint64_t v4 = 0LL;
      do
      {
        if (*(void *)v33 != v21) {
          objc_enumerationMutation(obj);
        }
        uint64_t v25 = v4;
        uint64_t v5 = *(void *)(*((void *)&v32 + 1) + 8 * v4);
        id v6 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
        uint64_t v24 = v5;
        id v7 = [*(id *)(a1 + 32) objectForKey:v5];
        __int128 v28 = 0u;
        __int128 v29 = 0u;
        __int128 v30 = 0u;
        __int128 v31 = 0u;
        id v26 = v7;
        id v8 = [v7 countByEnumeratingWithState:&v28 objects:v36 count:16];
        if (v8)
        {
          id v9 = v8;
          uint64_t v10 = *(void *)v29;
          do
          {
            for (uint64_t i = 0LL; i != v9; uint64_t i = (char *)i + 1)
            {
              if (*(void *)v29 != v10) {
                objc_enumerationMutation(v26);
              }
              __int128 v12 = *(void **)(*((void *)&v28 + 1) + 8LL * (void)i);
              id v13 = objc_autoreleasePoolPush();
              id v14 = [v12 downloadID];
              id v15 = -[DownloadEntity initWithPersistentID:inDatabase:]( [DownloadEntity alloc],  "initWithPersistentID:inDatabase:",  [v14 longLongValue],  v27);
              id ObjectWithArchivedData = -[DownloadEntity valueForProperty:]( v15,  "valueForProperty:",  @"download_state.download_error");
              [v12 setError:ObjectWithArchivedData];
              objc_msgSend( v12,  "setState:",  +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", 2));
              id v17 = objc_alloc_init((Class)sub_100146888());
              if (ObjectWithArchivedData)
              {
                uint64_t v18 = objc_opt_class(&OBJC_CLASS___NSError);
                id ObjectWithArchivedData = (id)SSCodingCreateObjectWithArchivedData(ObjectWithArchivedData, v18);
              }

              [v17 setDownloadID:v14];
              objc_msgSend( v17,  "setDownloadState:",  +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", 4));
              [v17 setError:sub_1000423B4(ObjectWithArchivedData)];
              LODWORD(v19) = 0;
              objc_msgSend( v17,  "setProgress:",  +[NSNumber numberWithFloat:](NSNumber, "numberWithFloat:", v19));
              objc_msgSend( v17,  "setTimeRemaining:",  +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", -1.0));
              -[NSMutableArray addObject:](v6, "addObject:", v17);

              objc_autoreleasePoolPop(v13);
            }

            id v9 = [v26 countByEnumeratingWithState:&v28 objects:v36 count:16];
          }

          while (v9);
        }

        a1 = v22;
        objc_msgSend(objc_msgSend(*(id *)(v22 + 40), "_clientForObjectID:", v24), "sendDownloadChangesets:", v6);

        uint64_t v4 = v25 + 1;
      }

      while ((id)(v25 + 1) != v23);
      id result = [obj countByEnumeratingWithState:&v32 objects:v37 count:16];
      id v23 = result;
    }

    while (result);
  }

  return result;
}

void sub_10002C3D8(uint64_t a1)
{
  id v2 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  if (!v2) {
    id v2 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  unsigned int v3 = [v2 shouldLog];
  else {
    LODWORD(v4) = v3;
  }
  uint64_t v5 = (os_log_s *)[v2 OSLogObject];
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO)) {
    uint64_t v4 = v4;
  }
  else {
    v4 &= 2u;
  }
  if ((_DWORD)v4)
  {
    uint64_t v6 = objc_opt_class(*(void *)(a1 + 32));
    id v7 = [*(id *)(a1 + 40) count];
    int v35 = 138412546;
    uint64_t v36 = v6;
    __int16 v37 = 2048;
    id v38 = v7;
    uint64_t v8 = _os_log_send_and_compose_impl( v4,  0LL,  0LL,  0LL,  &_mh_execute_header,  v5,  1LL,  "%@: Finishing %lu downloads",  &v35,  22);
    if (v8)
    {
      id v9 = (void *)v8;
      uint64_t v10 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v8, 4LL);
      free(v9);
      __int128 v29 = v10;
      SSFileLog(v2, @"%@");
    }
  }

  id v11 = objc_msgSend(*(id *)(a1 + 32), "_beginManagedContextSession", v29);
  __int128 v12 = objc_alloc_init(&OBJC_CLASS___NSMutableOrderedSet);
  id v13 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  id v14 = objc_alloc_init(&OBJC_CLASS___NSMutableOrderedSet);
  id v15 = *(void **)(a1 + 32);
  uint64_t v16 = *(void *)(a1 + 40);
  v34[0] = _NSConcreteStackBlock;
  v34[1] = 3221225472LL;
  v34[2] = sub_10002C7A4;
  v34[3] = &unk_10034B9B8;
  v34[4] = v14;
  v34[5] = v13;
  v34[6] = v12;
  [v15 _enumerateDownloadsForIdentifiers:v16 context:v11 usingBlock:v34];
  if (-[NSMutableDictionary count](v13, "count"))
  {
    id v17 = +[DownloadsDatabase downloadsDatabase](&OBJC_CLASS___DownloadsDatabase, "downloadsDatabase");
    v33[0] = _NSConcreteStackBlock;
    v33[1] = 3221225472LL;
    v33[2] = sub_10002C878;
    v33[3] = &unk_10034B990;
    uint64_t v18 = *(void *)(a1 + 32);
    v33[4] = v13;
    v33[5] = v18;
    [v17 readUsingTransactionBlock:v33];
  }

  sub_10003E244(v11);
  +[NSThread endManagedContextSession](&OBJC_CLASS___NSThread, "endManagedContextSession");
  if (-[NSMutableOrderedSet count](v12, "count") || -[NSMutableOrderedSet count](v14, "count"))
  {
    id v19 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v19) {
      id v19 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v20 = [v19 shouldLog];
    else {
      LODWORD(v21) = v20;
    }
    uint64_t v22 = (os_log_s *)[v19 OSLogObject];
    if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO)) {
      uint64_t v21 = v21;
    }
    else {
      v21 &= 2u;
    }
    if ((_DWORD)v21)
    {
      uint64_t v23 = objc_opt_class(*(void *)(a1 + 32));
      id v24 = -[NSMutableOrderedSet count](v12, "count");
      id v25 = -[NSMutableOrderedSet count](v14, "count");
      int v35 = 138412802;
      uint64_t v36 = v23;
      __int16 v37 = 2048;
      id v38 = v24;
      __int16 v39 = 2048;
      id v40 = v25;
      LODWORD(v31) = 32;
      uint64_t v26 = _os_log_send_and_compose_impl( v21,  0LL,  0LL,  0LL,  &_mh_execute_header,  v22,  1LL,  "%@: Deleting %lu downloads and checking %lu downloads after migrating properties",  &v35,  v31);
      if (v26)
      {
        id v27 = (void *)v26;
        __int128 v28 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v26, 4LL);
        free(v27);
        __int128 v30 = v28;
        SSFileLog(v19, @"%@");
      }
    }

    v32[0] = _NSConcreteStackBlock;
    v32[1] = 3221225472LL;
    v32[2] = sub_10002CBD8;
    v32[3] = &unk_10034B9E0;
    v32[4] = v12;
    v32[5] = v14;
    objc_msgSend( +[DownloadsDatabase downloadsDatabase](DownloadsDatabase, "downloadsDatabase", v30),  "modifyUsingTransactionBlock:",  v32);
  }
}

void sub_10002C7A4(id *a1, uint64_t a2, void *a3)
{
  id v6 = objc_msgSend(objc_msgSend(a3, "payment"), "client");
  if (a3)
  {
    if (v6)
    {
      id v7 = [v6 objectID];
      uint64_t v8 = (NSMutableArray *)[a1[5] objectForKey:v7];
      if (!v8)
      {
        id v9 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
        [a1[5] setObject:v9 forKey:v7];
        uint64_t v8 = v9;
      }

      uint64_t v10 = v8;
      -[NSMutableArray addObject:](v8, "addObject:", a3);
      [a1[6] addObject:a2];
    }
  }

  else
  {
    [a1[4] addObject:a2];
  }

id sub_10002C878(uint64_t a1, void *a2)
{
  id v31 = [a2 database];
  __int128 v37 = 0u;
  __int128 v38 = 0u;
  __int128 v39 = 0u;
  __int128 v40 = 0u;
  id obj = *(id *)(a1 + 32);
  id result = [obj countByEnumeratingWithState:&v37 objects:v42 count:16];
  id v26 = result;
  if (result)
  {
    uint64_t v24 = *(void *)v38;
    uint64_t v30 = SSDownloadAssetTypeMedia;
    uint64_t v25 = a1;
    do
    {
      uint64_t v4 = 0LL;
      do
      {
        if (*(void *)v38 != v24) {
          objc_enumerationMutation(obj);
        }
        uint64_t v28 = v4;
        uint64_t v5 = *(void *)(*((void *)&v37 + 1) + 8 * v4);
        __int128 v32 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
        uint64_t v27 = v5;
        id v6 = [*(id *)(a1 + 32) objectForKey:v5];
        __int128 v33 = 0u;
        __int128 v34 = 0u;
        __int128 v35 = 0u;
        __int128 v36 = 0u;
        id v29 = v6;
        id v7 = [v6 countByEnumeratingWithState:&v33 objects:v41 count:16];
        if (v7)
        {
          id v8 = v7;
          uint64_t v9 = *(void *)v34;
          do
          {
            for (uint64_t i = 0LL; i != v8; uint64_t i = (char *)i + 1)
            {
              if (*(void *)v34 != v9) {
                objc_enumerationMutation(v29);
              }
              id v11 = *(void **)(*((void *)&v33 + 1) + 8LL * (void)i);
              __int128 v12 = objc_autoreleasePoolPush();
              id v13 = [v11 downloadID];
              id v14 = -[DownloadEntity initWithPersistentID:inDatabase:]( [DownloadEntity alloc],  "initWithPersistentID:inDatabase:",  [v13 longLongValue],  v31);
              uint64_t v15 = sub_100145764((uint64_t)-[DownloadEntity valueForProperty:]( v14,  "valueForProperty:",  @"download_state.phase"));
              objc_msgSend( v11,  "setState:",  +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", v15));
              id v16 = objc_msgSend( -[DownloadEntity anyAssetForAssetType:](v14, "anyAssetForAssetType:", v30),  "valueForProperty:",  @"destination_url");
              [v11 setLocalURL:v16];
              uint64_t v17 = sub_100145108(v15);
              id v18 = objc_alloc_init((Class)sub_100146888());
              [v18 setDownloadID:v13];
              objc_msgSend( v18,  "setDownloadState:",  +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", v17));
              if (v17 == 3)
              {
                double v20 = 0.0;
                float v21 = 1.0;
                if (v16)
                {
                  uint64_t v22 = -[NSURL initWithString:](objc_alloc(&OBJC_CLASS___NSURL), "initWithString:", v16);
                  [v18 setContentURL:v22];
                }
              }

              else
              {
                double v20 = -1.0;
                float v21 = 0.0;
              }

              *(float *)&double v19 = v21;
              objc_msgSend( v18,  "setProgress:",  +[NSNumber numberWithFloat:](NSNumber, "numberWithFloat:", v19));
              objc_msgSend( v18,  "setTimeRemaining:",  +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", v20));
              -[NSMutableArray addObject:](v32, "addObject:", v18);

              objc_autoreleasePoolPop(v12);
            }

            id v8 = [v29 countByEnumeratingWithState:&v33 objects:v41 count:16];
          }

          while (v8);
        }

        a1 = v25;
        objc_msgSend(objc_msgSend(*(id *)(v25 + 40), "_clientForObjectID:", v27), "sendDownloadChangesets:", v32);

        uint64_t v4 = v28 + 1;
      }

      while ((id)(v28 + 1) != v26);
      id result = [obj countByEnumeratingWithState:&v37 objects:v42 count:16];
      id v26 = result;
    }

    while (result);
  }

  return result;
}

uint64_t sub_10002CBD8(uint64_t a1, void *a2)
{
  id v3 = [a2 database];
  __int128 v22 = 0u;
  __int128 v23 = 0u;
  __int128 v24 = 0u;
  __int128 v25 = 0u;
  uint64_t v4 = *(void **)(a1 + 32);
  id v5 = [v4 countByEnumeratingWithState:&v22 objects:v27 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v23;
    do
    {
      for (uint64_t i = 0LL; i != v6; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v23 != v7) {
          objc_enumerationMutation(v4);
        }
        uint64_t v9 = -[DownloadEntity initWithPersistentID:inDatabase:]( [DownloadEntity alloc],  "initWithPersistentID:inDatabase:",  [*(id *)(*((void *)&v22 + 1) + 8 * (void)i) longLongValue],  v3);
        -[DownloadEntity deleteFromDatabase](v9, "deleteFromDatabase");
      }

      id v6 = [v4 countByEnumeratingWithState:&v22 objects:v27 count:16];
    }

    while (v6);
  }

  __int128 v20 = 0u;
  __int128 v21 = 0u;
  __int128 v18 = 0u;
  __int128 v19 = 0u;
  uint64_t v10 = *(void **)(a1 + 40);
  id v11 = [v10 countByEnumeratingWithState:&v18 objects:v26 count:16];
  if (v11)
  {
    id v12 = v11;
    uint64_t v13 = *(void *)v19;
    uint64_t v14 = SSDownloadKindInAppContent;
    do
    {
      for (j = 0LL; j != v12; j = (char *)j + 1)
      {
        if (*(void *)v19 != v13) {
          objc_enumerationMutation(v10);
        }
        id v16 = -[DownloadEntity initWithPersistentID:inDatabase:]( [DownloadEntity alloc],  "initWithPersistentID:inDatabase:",  [*(id *)(*((void *)&v18 + 1) + 8 * (void)j) longLongValue],  v3);
        if (-[NSString isEqualToString:](-[DownloadEntity downloadKind](v16, "downloadKind"), "isEqualToString:", v14)) {
          -[DownloadEntity deleteFromDatabase](v16, "deleteFromDatabase");
        }
      }

      id v12 = [v10 countByEnumeratingWithState:&v18 objects:v26 count:16];
    }

    while (v12);
  }

  return 1LL;
}

id sub_10002CEB0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _beginManagedContextSession];
  id v3 = objc_alloc_init(&OBJC_CLASS___NSFetchRequest);
  -[NSFetchRequest setEntity:]( v3,  "setEntity:",  +[MicroPaymentDownload downloadEntityFromContext:]( &OBJC_CLASS___MicroPaymentDownload,  "downloadEntityFromContext:",  v2));
  -[NSFetchRequest setPredicate:]( v3,  "setPredicate:",  +[NSPredicate predicateWithFormat:]( &OBJC_CLASS___NSPredicate,  "predicateWithFormat:",  @"downloadID=%lld",  *(void *)(a1 + 64)));
  uint64_t v4 = -[NSArray initWithObjects:]( objc_alloc(&OBJC_CLASS___NSArray),  "initWithObjects:",  @"downloadID",  @"payment",  0LL);
  -[NSFetchRequest setPropertiesToFetch:](v3, "setPropertiesToFetch:", v4);

  id v5 = [v2 executeFetchRequest:v3 error:0];
  if ([v5 count] == (id)1)
  {
    id v6 = objc_msgSend( *(id *)(a1 + 32),  "_clientForPayment:",  objc_msgSend(objc_msgSend(v5, "objectAtIndex:", 0), "payment"));
    if (v6)
    {
      uint64_t v7 = v6;
      id v8 = objc_alloc_init((Class)sub_100146888());
      uint64_t v9 = *(void *)(a1 + 40);
      if (v9)
      {
        uint64_t v10 = sub_100145764(v9);
        objc_msgSend( v8,  "setDownloadState:",  +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", sub_100145108(v10)));
      }

      objc_msgSend( v8,  "setDownloadID:",  +[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", *(void *)(a1 + 64)));
      [v8 setProgress:*(void *)(a1 + 48)];
      [v8 setTimeRemaining:*(void *)(a1 + 56)];
      objc_msgSend( v7,  "sendDownloadChangesets:",  +[NSArray arrayWithObject:](NSArray, "arrayWithObject:", v8));
    }
  }

  return +[NSThread endManagedContextSession](&OBJC_CLASS___NSThread, "endManagedContextSession");
}

void *sub_10002D324(uint64_t a1)
{
  id result = *(void **)(a1 + 32);
  if (result[2]) {
    return [result _startFirstReadyPayment];
  }
  return result;
}

id sub_10002D388(uint64_t a1)
{
  return [*(id *)(a1 + 32) _startFirstReadyPayment];
}

id sub_10002D3E0(uint64_t a1)
{
  id result = objc_msgSend( objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "payments"), "firstObject"),  "objectForKey:",  @"offer-name");
  if (result)
  {
    id v3 = result;
    id v4 = [*(id *)(a1 + 40) _beginManagedContextSession];
    id v5 = objc_alloc_init(&OBJC_CLASS___NSFetchRequest);
    -[NSFetchRequest setEntity:]( v5,  "setEntity:",  +[MicroPayment paymentEntityFromContext:](&OBJC_CLASS___MicroPayment, "paymentEntityFromContext:", v4));
    -[NSFetchRequest setPredicate:]( v5,  "setPredicate:",  +[NSPredicate predicateWithFormat:]( &OBJC_CLASS___NSPredicate,  "predicateWithFormat:",  @"productIdentifier=%@",  v3));
    -[NSFetchRequest setPropertiesToFetch:](v5, "setPropertiesToFetch:", &off_10036E3E8);
    id v6 = [v4 executeFetchRequest:v5 error:0];
    __int128 v24 = 0u;
    __int128 v25 = 0u;
    __int128 v26 = 0u;
    __int128 v27 = 0u;
    id v7 = [v6 countByEnumeratingWithState:&v24 objects:v32 count:16];
    if (v7)
    {
      id v8 = v7;
      uint64_t v9 = *(void *)v25;
      while (2)
      {
        for (uint64_t i = 0LL; i != v8; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v25 != v9) {
            objc_enumerationMutation(v6);
          }
          id v11 = *(void **)(*((void *)&v24 + 1) + 8LL * (void)i);
          id v12 = objc_msgSend(objc_msgSend(v11, "state"), "integerValue");
          if (v12 == (id)8 || v12 == (id)1)
          {
            id v14 = [*(id *)(a1 + 40) _clientForPayment:v11];
            id v15 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
            if (!v15) {
              id v15 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
            }
            unsigned int v16 = [v15 shouldLog];
            else {
              LODWORD(v17) = v16;
            }
            __int128 v18 = (os_log_s *)[v15 OSLogObject];
            if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO)) {
              uint64_t v17 = v17;
            }
            else {
              v17 &= 2u;
            }
            if ((_DWORD)v17)
            {
              uint64_t v19 = objc_opt_class(*(void *)(a1 + 40));
              int v28 = 138412546;
              uint64_t v29 = v19;
              __int16 v30 = 2112;
              id v31 = v11;
              uint64_t v20 = _os_log_send_and_compose_impl( v17,  0LL,  0LL,  0LL,  &_mh_execute_header,  v18,  1LL,  "%@: Updating payment after unexpected purchase response: %@",  &v28,  22);
              if (v20)
              {
                __int128 v21 = (void *)v20;
                __int128 v22 = +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v20,  4LL);
                free(v21);
                __int128 v23 = v22;
                SSFileLog(v15, @"%@");
              }
            }

            objc_msgSend( v14,  "updatePaymentWithObjectID:purchaseResponse:",  objc_msgSend(v11, "objectID", v23),  *(void *)(a1 + 32));
            goto LABEL_26;
          }
        }

        id v8 = [v6 countByEnumeratingWithState:&v24 objects:v32 count:16];
        if (v8) {
          continue;
        }
        break;
      }
    }

void sub_10002D708(uint64_t a1)
{
  id v5 = [*(id *)(a1 + 32) _newPaymentQueueClientWithMessage:*(void *)(a1 + 40) connection:*(void *)(a1 + 48) parameter:"3"];
  id v2 = objc_alloc((Class)sub_1001468C4());
  id v3 = objc_msgSend(v2, "initWithXPCEncoding:", xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 40), "1"));
  id v4 = -[NSMutableDictionary initWithObjectsAndKeys:]( objc_alloc(&OBJC_CLASS___NSMutableDictionary),  "initWithObjectsAndKeys:",  +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  xpc_dictionary_get_BOOL(*(xpc_object_t *)(a1 + 40), "4")),  @"StoreKitClientPaymentOptionGrandfatherRequestData",  0LL);
  if (xpc_dictionary_get_BOOL(*(xpc_object_t *)(a1 + 40), "2")) {
    -[NSMutableDictionary setObject:forKey:]( v4,  "setObject:forKey:",  &__kCFBooleanTrue,  @"StoreKitClientPaymentOptionSupportsDeferredPayment");
  }
  if (objc_msgSend( objc_msgSend( *(id *)(a1 + 32),  "_clientForConnection:paymentQueueClient:",  *(void *)(a1 + 48),  v5),  "addPaymentTransaction:withOptions:",  v3,  v4)) {
    [*(id *)(a1 + 32) _startFirstReadyPayment];
  }
}

void sub_10002D884(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = objc_opt_class(&OBJC_CLASS___NSString);
  id v4 = (void *)SSXPCDictionaryCopyCFObjectWithClass(v2, "1", v3);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = objc_opt_class(&OBJC_CLASS___NSString);
  id v7 = (void *)SSXPCDictionaryCopyCFObjectWithClass(v5, "2", v6);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = objc_opt_class(&OBJC_CLASS___NSString);
  uint64_t v10 = (void *)SSXPCDictionaryCopyCFObjectWithClass(v8, "3", v9);
  uint64_t v11 = *(void *)(a1 + 32);
  uint64_t v12 = objc_opt_class(&OBJC_CLASS___NSString);
  uint64_t v13 = (void *)SSXPCDictionaryCopyCFObjectWithClass(v11, "4", v12);
  [*(id *)(a1 + 40) addPurchaseIntentWithProductIdentifier:v7 productName:v13 appBundleId:v4 appName:v10];

  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 32));
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 48), reply);
  xpc_release(reply);
}

void sub_10002D9DC(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) _copyDownloadsIDsFromMessage:*(void *)(a1 + 40) key:"1"];
  if ([v3 count])
  {
    id v2 = [*(id *)(a1 + 32) _newPaymentQueueClientWithMessage:*(void *)(a1 + 40) connection:*(void *)(a1 + 48) parameter:"2"];
    objc_msgSend( objc_msgSend(*(id *)(a1 + 32), "_clientForConnection:paymentQueueClient:", *(void *)(a1 + 48), v2),  "cancelDownloadsWithIDs:",  v3);
  }
}

void sub_10002DBA0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _newPaymentQueueClientWithMessage:*(void *)(a1 + 40) connection:*(void *)(a1 + 48) parameter:"2"];
  id v3 = [*(id *)(a1 + 32) _clientForConnection:*(void *)(a1 + 48) paymentQueueClient:v2];
  id v4 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  if (!v4) {
    id v4 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  unsigned int v5 = [v4 shouldLog];
  else {
    LODWORD(v6) = v5;
  }
  id v7 = (os_log_s *)[v4 OSLogObject];
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v6 = v6;
  }
  else {
    v6 &= 2u;
  }
  if ((_DWORD)v6)
  {
    uint64_t v8 = objc_opt_class(*(void *)(a1 + 32));
    int v13 = 138543618;
    uint64_t v14 = v8;
    __int16 v15 = 2114;
    id v16 = [v3 clientIdentifier];
    uint64_t v9 = _os_log_send_and_compose_impl( v6,  0LL,  0LL,  0LL,  &_mh_execute_header,  v7,  0LL,  "[%{public}@]: Client entered foreground: %{public}@",  &v13,  22);
    if (v9)
    {
      uint64_t v10 = (void *)v9;
      uint64_t v11 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v9, 4LL);
      free(v10);
      uint64_t v12 = v11;
      SSFileLog(v4, @"%@");
    }
  }

  objc_msgSend( *(id *)(a1 + 32),  "_sendPurchaseIntentsForApp:storeKitClient:force:",  objc_msgSend(v3, "clientIdentifier", v12),  v3,  0);
}

void sub_10002DDB4(uint64_t a1)
{
  if ((SSXPCConnectionHasEntitlement(*(void *)(a1 + 32), kSSITunesStorePrivateEntitlement) & 1) != 0
    || SSXPCConnectionHasEntitlement(*(void *)(a1 + 32), kSSStoreKitEntitlementClientOverride))
  {
    uint64_t v2 = *(void *)(a1 + 40);
    uint64_t v3 = objc_opt_class(&OBJC_CLASS___NSString);
    id v4 = (void *)SSXPCDictionaryCopyCFObjectWithClass(v2, "1", v3);
    uint64_t v5 = *(void *)(a1 + 40);
    uint64_t v6 = objc_opt_class(&OBJC_CLASS___NSDate);
    id v7 = (id)SSXPCDictionaryCopyCFObjectWithClass(v5, "2", v6);
    +[StoreKitClientIdentity forceSandboxForBundleIdentifier:untilDate:]( &OBJC_CLASS___StoreKitClientIdentity,  "forceSandboxForBundleIdentifier:untilDate:",  v4,  v7);
  }

void sub_10002DED8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _newPaymentQueueClientWithMessage:*(void *)(a1 + 40) connection:*(void *)(a1 + 48) parameter:"2"];
  if (objc_msgSend( objc_msgSend(*(id *)(a1 + 32), "_clientForConnection:paymentQueueClient:", *(void *)(a1 + 48)),  "finishPaymentWithMessage:",  *(void *)(a1 + 40))) {
    [*(id *)(a1 + 32) _startFirstReadyPayment];
  }
}

id sub_10002DF90(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _newPaymentQueueClientWithMessage:*(void *)(a1 + 40) connection:*(void *)(a1 + 48) parameter:"2"];
  id v3 = [*(id *)(a1 + 32) _clientForConnection:*(void *)(a1 + 48) paymentQueueClient:v2];
  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 40));
  sub_100146884(reply, "0", [v3 openTransactions]);
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 48), reply);
  xpc_release(reply);

  return +[ISLoadURLBagOperation decrementNetworkCounterForBagContext:]( &OBJC_CLASS___ISLoadURLBagOperation,  "decrementNetworkCounterForBagContext:",  +[SSURLBagContext contextWithBagType:](&OBJC_CLASS___SSURLBagContext, "contextWithBagType:", 0LL));
}

void sub_10002E168(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) _copyDownloadsIDsFromMessage:*(void *)(a1 + 40) key:"1"];
  if ([v3 count])
  {
    id v2 = [*(id *)(a1 + 32) _newPaymentQueueClientWithMessage:*(void *)(a1 + 40) connection:*(void *)(a1 + 48) parameter:"2"];
    objc_msgSend( objc_msgSend(*(id *)(a1 + 32), "_clientForConnection:paymentQueueClient:", *(void *)(a1 + 48), v2),  "pauseDownloadsWithIDs:",  v3);
  }
}

void sub_10002E26C(uint64_t a1)
{
  value = (_xpc_endpoint_s *)xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 32), "1");
  if (value
    && (id v3 = value, xpc_get_type(value) == (xpc_type_t)&_xpc_type_endpoint)
    && (xpc_connection_t v6 = xpc_connection_create_from_endpoint(v3)) != 0LL)
  {
    xpc_connection_t v7 = v6;
    id v8 = [*(id *)(a1 + 40) _newPaymentQueueClientWithMessage:*(void *)(a1 + 32) connection:*(void *)(a1 + 48) parameter:"2"];
    id v9 = [*(id *)(a1 + 40) _clientForConnection:*(void *)(a1 + 48) paymentQueueClient:v8];
    id v10 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v10) {
      id v10 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v11 = [v10 shouldLog];
    else {
      LODWORD(v12) = v11;
    }
    int v13 = (os_log_s *)[v10 OSLogObject];
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v12 = v12;
    }
    else {
      v12 &= 2u;
    }
    if ((_DWORD)v12)
    {
      uint64_t v14 = objc_opt_class(*(void *)(a1 + 40));
      int v19 = 138543618;
      uint64_t v20 = v14;
      __int16 v21 = 2114;
      id v22 = [v9 clientIdentifier];
      uint64_t v15 = _os_log_send_and_compose_impl( v12,  0LL,  0LL,  0LL,  &_mh_execute_header,  v13,  0LL,  "[%{public}@]: Client registered: %{public}@",  &v19,  22);
      if (v15)
      {
        id v16 = (void *)v15;
        +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v15, 4LL);
        free(v16);
        SSFileLog(v10, @"%@");
      }
    }

    xpc_object_t v17 = xpc_dictionary_create(0LL, 0LL, 0LL);
    id v18 = [v9 XPCClient];
    [v18 setOutputConnectionWithConnection:v7];
    objc_msgSend(objc_msgSend(v18, "outputConnection"), "sendMessage:", v17);
    xpc_release(v17);
    [v9 createMicroPaymentClientIfNecessary];
    [v9 refreshFromServerWithReason:0];
    id v4 = [v9 openTransactions];
    objc_msgSend( *(id *)(a1 + 40),  "_sendPurchaseIntentsForApp:storeKitClient:force:",  objc_msgSend(v9, "clientIdentifier"),  v9,  0);

    xpc_release(v7);
  }

  else
  {
    id v4 = 0LL;
  }

  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 32));
  sub_100146884(reply, "0", v4);
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 48), reply);
  xpc_release(reply);
}

void sub_10002E55C(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = objc_opt_class(&OBJC_CLASS___NSString);
  CFDictionaryRef v5 = sub_100146880(v2, "1", v3);
  id v4 = [*(id *)(a1 + 40) _newPaymentQueueClientWithMessage:*(void *)(a1 + 32) connection:*(void *)(a1 + 48) parameter:"2"];
  objc_msgSend( objc_msgSend(*(id *)(a1 + 40), "_clientForConnection:paymentQueueClient:", *(void *)(a1 + 48), v4),  "restoreCompletedTransactionsWithApplicationUsername:",  v5);
}

void sub_10002E630(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) _copyDownloadsIDsFromMessage:*(void *)(a1 + 40) key:"1"];
  if ([v3 count])
  {
    id v2 = [*(id *)(a1 + 32) _newPaymentQueueClientWithMessage:*(void *)(a1 + 40) connection:*(void *)(a1 + 48) parameter:"2"];
    objc_msgSend( objc_msgSend(*(id *)(a1 + 32), "_clientForConnection:paymentQueueClient:", *(void *)(a1 + 48), v2),  "resumeDownloadsWithIDs:",  v3);
  }
}

void sub_10002E700(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) _copyDownloadsIDsFromMessage:*(void *)(a1 + 40) key:"1"];
  if ([v3 count])
  {
    id v2 = [*(id *)(a1 + 32) _newPaymentQueueClientWithMessage:*(void *)(a1 + 40) connection:*(void *)(a1 + 48) parameter:"2"];
    objc_msgSend( objc_msgSend(*(id *)(a1 + 32), "_clientForConnection:paymentQueueClient:", *(void *)(a1 + 48), v2),  "startDownloadsWithIDs:",  v3);
  }
}

void sub_10002E81C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = objc_opt_class(&OBJC_CLASS___NSString);
  uint64_t v4 = SSXPCDictionaryCopyCFObjectWithClass(v2, "1", v3);
  if (v4)
  {
    CFDictionaryRef v5 = (void *)v4;
    id v6 = [*(id *)(a1 + 40) _beginManagedContextSession];
    xpc_connection_t v7 = objc_alloc_init(&OBJC_CLASS___NSFetchRequest);
    -[NSFetchRequest setEntity:]( v7,  "setEntity:",  +[MicroPayment paymentEntityFromContext:](&OBJC_CLASS___MicroPayment, "paymentEntityFromContext:", v6));
    -[NSFetchRequest setPredicate:]( v7,  "setPredicate:",  +[NSPredicate predicateWithFormat:]( &OBJC_CLASS___NSPredicate,  "predicateWithFormat:",  @"state=%@ AND askPermissionRequestIdentifier=%@",  &off_10036D5C0,  v5));
    uint64_t v75 = 0LL;
    id v8 = [v6 executeFetchRequest:v7 error:&v75];
    id v9 = &ACSLocateCachingServer_ptr;
    if (v8)
    {
      id v10 = v8;
      uint64_t v62 = v7;
      id v63 = v6;
      id v64 = v5;
      int v61 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
      int64_t int64 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 32), "2");
      __int128 v71 = 0u;
      __int128 v72 = 0u;
      __int128 v73 = 0u;
      __int128 v74 = 0u;
      id v11 = [v10 countByEnumeratingWithState:&v71 objects:v78 count:16];
      if (v11)
      {
        id v12 = v11;
        uint64_t v13 = *(void *)v72;
        unint64_t v14 = int64 - 1;
        do
        {
          uint64_t v15 = 0LL;
          id v66 = v12;
          do
          {
            if (*(void *)v72 != v13) {
              objc_enumerationMutation(v10);
            }
            id v16 = *(void **)(*((void *)&v71 + 1) + 8LL * (void)v15);
            id v17 = objc_msgSend(*(id *)(a1 + 40), "_clientForPayment:", v16, v58);
            if (v14 >= 2)
            {
              if (!int64)
              {
                id v30 = [v9[459] sharedDaemonConfig];
                if (!v30) {
                  id v30 = [v9[459] sharedConfig];
                }
                unsigned int v31 = [v30 shouldLog];
                else {
                  LODWORD(v32) = v31;
                }
                __int128 v33 = (os_log_s *)[v30 OSLogObject];
                if (os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT)) {
                  uint64_t v32 = v32;
                }
                else {
                  v32 &= 2u;
                }
                if ((_DWORD)v32)
                {
                  uint64_t v34 = objc_opt_class(*(void *)(a1 + 40));
                  int v79 = 138412546;
                  uint64_t v80 = v34;
                  __int16 v81 = 2112;
                  id v82 = v64;
                  LODWORD(v60) = 22;
                  uint64_t v35 = _os_log_send_and_compose_impl( v32,  0LL,  0LL,  0LL,  &_mh_execute_header,  v33,  0LL,  "%@: Invalid status for requestID: %@",  &v79,  v60);
                  if (v35)
                  {
                    __int128 v36 = (void *)v35;
                    __int128 v37 = +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v35,  4LL);
                    free(v36);
                    __int128 v58 = v37;
                    SSFileLog(v30, @"%@");
                  }
                }
              }
            }

            else
            {
              id v18 = v17;
              uint64_t v19 = v13;
              uint64_t v20 = v10;
              id v21 = [v9[459] sharedDaemonConfig];
              if (!v21) {
                id v21 = [v9[459] sharedConfig];
              }
              id v22 = v9;
              LODWORD(v23) = [v21 shouldLog];
              __int128 v24 = (os_log_s *)[v21 OSLogObject];
              if (os_log_type_enabled(v24, OS_LOG_TYPE_INFO)) {
                uint64_t v23 = v23;
              }
              else {
                v23 &= 2u;
              }
              if ((_DWORD)v23)
              {
                uint64_t v25 = objc_opt_class(*(void *)(a1 + 40));
                int v79 = 138412546;
                uint64_t v80 = v25;
                __int16 v81 = 2112;
                id v82 = v16;
                LODWORD(v60) = 22;
                uint64_t v26 = _os_log_send_and_compose_impl( v23,  0LL,  0LL,  0LL,  &_mh_execute_header,  v24,  1LL,  "%@: Fail payment after request deny: %@",  &v79,  v60);
                if (v26)
                {
                  __int128 v27 = (void *)v26;
                  int v28 = +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v26,  4LL);
                  free(v27);
                  __int128 v58 = v28;
                  SSFileLog(v21, @"%@");
                }
              }

              id v29 = objc_msgSend(v16, "objectID", v58);
              [v16 setFailedWithError:0];
              id v9 = v22;
              id v10 = v20;
              uint64_t v13 = v19;
              id v12 = v66;
              unint64_t v14 = int64 - 1;
              if (v29)
              {
                id v77 = v29;
                objc_msgSend( v18,  "sendPaymentsUpdatedWithObjectIDs:",  +[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v77, 1));
              }
            }

            uint64_t v15 = (char *)v15 + 1;
          }

          while (v12 != v15);
          id v12 = [v10 countByEnumeratingWithState:&v71 objects:v78 count:16];
        }

        while (v12);
      }

      id v6 = v63;
      CFDictionaryRef v5 = v64;
      xpc_connection_t v7 = v62;
      if (-[NSMutableSet count](v61, "count", v58))
      {
        id v38 = [v9[459] sharedDaemonConfig];
        if (!v38) {
          id v38 = [v9[459] sharedConfig];
        }
        unsigned int v39 = [v38 shouldLog];
        else {
          LODWORD(v40) = v39;
        }
        id v41 = (os_log_s *)[v38 OSLogObject];
        if (os_log_type_enabled(v41, OS_LOG_TYPE_INFO)) {
          uint64_t v40 = v40;
        }
        else {
          v40 &= 2u;
        }
        if ((_DWORD)v40)
        {
          uint64_t v42 = objc_opt_class(*(void *)(a1 + 40));
          id v43 = -[NSMutableSet count](v61, "count");
          int v79 = 138412546;
          uint64_t v80 = v42;
          __int16 v81 = 2048;
          id v82 = v43;
          LODWORD(v60) = 22;
          uint64_t v44 = _os_log_send_and_compose_impl( v40,  0LL,  0LL,  0LL,  &_mh_execute_header,  v41,  1LL,  "%@: Refresh %ld queues after payment approval",  &v79,  v60);
          if (v44)
          {
            id v45 = (void *)v44;
            uint64_t v46 = +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v44,  4LL);
            free(v45);
            __int128 v59 = v46;
            SSFileLog(v38, @"%@");
          }
        }

        __int128 v69 = 0u;
        __int128 v70 = 0u;
        __int128 v67 = 0u;
        __int128 v68 = 0u;
        id v47 = -[NSMutableSet countByEnumeratingWithState:objects:count:]( v61,  "countByEnumeratingWithState:objects:count:",  &v67,  v76,  16LL,  v59);
        if (v47)
        {
          id v48 = v47;
          uint64_t v49 = *(void *)v68;
          do
          {
            for (uint64_t i = 0LL; i != v48; uint64_t i = (char *)i + 1)
            {
              if (*(void *)v68 != v49) {
                objc_enumerationMutation(v61);
              }
              [*(id *)(*((void *)&v67 + 1) + 8 * (void)i) refreshFromServerWithReason:2];
            }

            id v48 = -[NSMutableSet countByEnumeratingWithState:objects:count:]( v61,  "countByEnumeratingWithState:objects:count:",  &v67,  v76,  16LL);
          }

          while (v48);
        }
      }
    }

    else
    {
      id v51 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
      if (!v51) {
        id v51 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
      }
      unsigned int v52 = [v51 shouldLog];
      else {
        LODWORD(v53) = v52;
      }
      id v54 = (os_log_s *)[v51 OSLogObject];
      if (os_log_type_enabled(v54, OS_LOG_TYPE_DEFAULT)) {
        uint64_t v53 = v53;
      }
      else {
        v53 &= 2u;
      }
      if ((_DWORD)v53)
      {
        uint64_t v55 = objc_opt_class(*(void *)(a1 + 40));
        int v79 = 138412802;
        uint64_t v80 = v55;
        __int16 v81 = 2112;
        id v82 = v5;
        __int16 v83 = 2112;
        uint64_t v84 = v75;
        LODWORD(v60) = 32;
        uint64_t v56 = _os_log_send_and_compose_impl( v53,  0LL,  0LL,  0LL,  &_mh_execute_header,  v54,  0LL,  "%@: Could not update deferred payment: %@, error: %@",  &v79,  v60);
        if (v56)
        {
          __int128 v57 = (void *)v56;
          +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v56, 4LL);
          free(v57);
          SSFileLog(v51, @"%@");
        }
      }
    }

    sub_10003E244(v6);
    +[NSThread endManagedContextSession](&OBJC_CLASS___NSThread, "endManagedContextSession");
  }

void sub_10002EFAC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _newPaymentQueueClientWithMessage:*(void *)(a1 + 40) connection:*(void *)(a1 + 48) parameter:"1"];
  id v3 = [*(id *)(a1 + 32) _clientForConnection:*(void *)(a1 + 48) paymentQueueClient:v2];

  if (xpc_dictionary_get_uint64(*(xpc_object_t *)(a1 + 40), "2"))
  {
    unsigned __int8 v4 = objc_msgSend(objc_msgSend(v3, "XPCClient"), "hasEntitlements");
    CFDictionaryRef v5 = *(void **)(a1 + 40);
    if ((v4 & 1) == 0)
    {
      xpc_object_t reply = xpc_dictionary_create_reply(v5);
      id v22 = sub_100146868();
      uint64_t v23 = (__CFString *)ISErrorWithDomain(v22, 1LL, 0LL, 0LL);
      sub_1000E35D4(reply, "1", v23);
      xpc_connection_send_message(*(xpc_connection_t *)(a1 + 48), reply);
      xpc_release(reply);
      return;
    }

    CFDictionaryRef v6 = sub_1000E3558(v5, "3");
  }

  else
  {
    CFDictionaryRef v6 = (CFDictionaryRef)[v3 clientIdentifier];
  }

  CFDictionaryRef v7 = v6;
  id v8 = dispatch_semaphore_create(0LL);
  id v9 = +[PromotedIAPManager sharedInstance](&OBJC_CLASS___PromotedIAPManager, "sharedInstance");
  v24[0] = _NSConcreteStackBlock;
  v24[1] = 3221225472LL;
  v24[2] = sub_10002F2CC;
  v24[3] = &unk_10034BA30;
  v24[4] = *(void *)(a1 + 32);
  v24[5] = v7;
  __int128 v25 = *(_OWORD *)(a1 + 40);
  uint64_t v26 = v8;
  -[PromotedIAPManager getOrderForIAPsInApp:completionHandler:](v9, "getOrderForIAPsInApp:completionHandler:", v7, v24);
  dispatch_time_t v10 = dispatch_time(0LL, 90000000000LL);
  if (dispatch_semaphore_wait(v8, v10))
  {
    id v11 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v11) {
      id v11 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v12 = [v11 shouldLog];
    else {
      LODWORD(v13) = v12;
    }
    unint64_t v14 = (os_log_s *)[v11 OSLogObject];
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
      uint64_t v13 = v13;
    }
    else {
      v13 &= 2u;
    }
    if ((_DWORD)v13)
    {
      uint64_t v15 = objc_opt_class(*(void *)(a1 + 32));
      int v27 = 138543618;
      uint64_t v28 = v15;
      __int16 v29 = 2112;
      CFDictionaryRef v30 = v7;
      uint64_t v16 = _os_log_send_and_compose_impl( v13,  0LL,  0LL,  0LL,  &_mh_execute_header,  v14,  16LL,  "[%{public}@]: Timed out getting promoted IAP order for bundle id: %@",  &v27,  22);
      if (v16)
      {
        id v17 = (void *)v16;
        +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v16, 4LL);
        free(v17);
        SSFileLog(v11, @"%@");
      }
    }

    id v18 = sub_100146868();
    uint64_t v19 = (__CFString *)ISErrorWithDomain(v18, 0LL, 0LL, 0LL);
    xpc_object_t v20 = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 40));
    sub_1000E35D4(v20, "1", v19);
    xpc_connection_send_message(*(xpc_connection_t *)(a1 + 48), v20);
    xpc_release(v20);
  }
}

uint64_t sub_10002F2CC(uint64_t a1, __CFString *a2)
{
  id v4 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  if (!v4) {
    id v4 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  unsigned int v5 = [v4 shouldLog];
  else {
    LODWORD(v6) = v5;
  }
  CFDictionaryRef v7 = (os_log_s *)[v4 OSLogObject];
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v6 = v6;
  }
  else {
    v6 &= 2u;
  }
  if ((_DWORD)v6)
  {
    uint64_t v8 = objc_opt_class(*(void *)(a1 + 32));
    uint64_t v9 = *(void *)(a1 + 40);
    int v14 = 138543874;
    uint64_t v15 = v8;
    __int16 v16 = 2112;
    id v17 = a2;
    __int16 v18 = 2114;
    uint64_t v19 = v9;
    uint64_t v10 = _os_log_send_and_compose_impl( v6,  0LL,  0LL,  0LL,  &_mh_execute_header,  v7,  0LL,  "[%{public}@]: Got IAP order: %@, for app: %{public}@",  &v14,  32);
    if (v10)
    {
      id v11 = (void *)v10;
      +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v10, 4LL);
      free(v11);
      SSFileLog(v4, @"%@");
    }
  }

  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 48));
  sub_1000E35D4(reply, "0", a2);
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 56), reply);
  xpc_release(reply);
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 64));
}

void sub_10002F4CC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _newPaymentQueueClientWithMessage:*(void *)(a1 + 40) connection:*(void *)(a1 + 48) parameter:"1"];
  id v3 = [*(id *)(a1 + 32) _clientForConnection:*(void *)(a1 + 48) paymentQueueClient:v2];

  uint64_t int64 = xpc_dictionary_get_uint64(*(xpc_object_t *)(a1 + 40), "2");
  CFDictionaryRef v24 = sub_1000E3558(*(void **)(a1 + 40), "3");
  if (uint64)
  {
    unsigned __int8 v5 = objc_msgSend(objc_msgSend(v3, "XPCClient"), "hasEntitlements");
    uint64_t v6 = *(void **)(a1 + 40);
    if ((v5 & 1) == 0)
    {
      xpc_object_t reply = xpc_dictionary_create_reply(v6);
      id v22 = sub_100146868();
      uint64_t v23 = ISErrorWithDomain(v22, 1LL, 0LL, 0LL);
      sub_100146884(reply, "0", v23);
      xpc_connection_send_message(*(xpc_connection_t *)(a1 + 48), reply);
      xpc_release(reply);

      return;
    }

    CFDictionaryRef v7 = sub_1000E3558(v6, "4");
  }

  else
  {
    CFDictionaryRef v7 = (CFDictionaryRef)[v3 clientIdentifier];
  }

  CFDictionaryRef v8 = v7;
  uint64_t v9 = dispatch_semaphore_create(0LL);
  -[PromotedIAPManager setOrderForIAPs:app:completionHandler:]( +[PromotedIAPManager sharedInstance](&OBJC_CLASS___PromotedIAPManager, "sharedInstance"),  "setOrderForIAPs:app:completionHandler:");
  dispatch_time_t v10 = dispatch_time(0LL, 90000000000LL);
  if (dispatch_semaphore_wait(v9, v10))
  {
    id v11 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v11) {
      id v11 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v12 = [v11 shouldLog];
    else {
      LODWORD(v13) = v12;
    }
    int v14 = (os_log_s *)[v11 OSLogObject];
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
      uint64_t v13 = v13;
    }
    else {
      v13 &= 2u;
    }
    if ((_DWORD)v13)
    {
      uint64_t v15 = objc_opt_class(*(void *)(a1 + 32));
      int v25 = 138543874;
      uint64_t v26 = v15;
      __int16 v27 = 2112;
      CFDictionaryRef v28 = v8;
      __int16 v29 = 2112;
      CFDictionaryRef v30 = v24;
      uint64_t v16 = _os_log_send_and_compose_impl( v13,  0LL,  0LL,  0LL,  &_mh_execute_header,  v14,  16LL,  "[%{public}@]: Timed out setting promoted IAP order for bundle id: %@, IAPs: %@",  &v25,  32);
      if (v16)
      {
        id v17 = (void *)v16;
        +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v16, 4LL);
        free(v17);
        SSFileLog(v11, @"%@");
      }
    }

    __int16 v18 = sub_100146868();
    uint64_t v19 = ISErrorWithDomain(v18, 0LL, 0LL, 0LL);
    xpc_object_t v20 = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 40));
    sub_100146884(v20, "0", v19);
    xpc_connection_send_message(*(xpc_connection_t *)(a1 + 48), v20);
    xpc_release(v20);
  }
}

uint64_t sub_10002F824(uint64_t a1, char a2)
{
  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 32));
  if ((a2 & 1) != 0)
  {
    id v5 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v5) {
      id v5 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v6 = [v5 shouldLog];
    else {
      LODWORD(v7) = v6;
    }
    CFDictionaryRef v8 = (os_log_s *)[v5 OSLogObject];
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v7 = v7;
    }
    else {
      v7 &= 2u;
    }
    if (!(_DWORD)v7)
    {
      uint64_t v13 = 0LL;
      goto LABEL_25;
    }

    uint64_t v9 = objc_opt_class(*(void *)(a1 + 40));
    uint64_t v10 = *(void *)(a1 + 48);
    uint64_t v11 = *(void *)(a1 + 56);
    int v22 = 138543874;
    uint64_t v23 = v9;
    __int16 v24 = 2112;
    uint64_t v25 = v10;
    __int16 v26 = 2114;
    uint64_t v27 = v11;
    unsigned int v12 = (void *)_os_log_send_and_compose_impl( v7,  0LL,  0LL,  0LL,  &_mh_execute_header,  v8,  0LL,  "[%{public}@]: Set IAP order: %@, for app: %{public}@",  &v22,  32);
    uint64_t v13 = 0LL;
    if (!v12) {
      goto LABEL_25;
    }
    goto LABEL_23;
  }

  int v14 = sub_100146868();
  uint64_t v13 = ISErrorWithDomain(v14, 0LL, 0LL, 0LL);
  id v5 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  if (!v5) {
    id v5 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  unsigned int v15 = [v5 shouldLog];
  else {
    LODWORD(v16) = v15;
  }
  id v17 = (os_log_s *)[v5 OSLogObject];
  if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
    uint64_t v16 = v16;
  }
  else {
    v16 &= 2u;
  }
  if ((_DWORD)v16)
  {
    uint64_t v18 = objc_opt_class(*(void *)(a1 + 40));
    uint64_t v19 = *(void *)(a1 + 48);
    uint64_t v20 = *(void *)(a1 + 56);
    int v22 = 138543874;
    uint64_t v23 = v18;
    __int16 v24 = 2112;
    uint64_t v25 = v19;
    __int16 v26 = 2114;
    uint64_t v27 = v20;
    unsigned int v12 = (void *)_os_log_send_and_compose_impl( v16,  0LL,  0LL,  0LL,  &_mh_execute_header,  v17,  16LL,  "[%{public}@]: Error setting IAP order: %@, for app: %{public}@",  &v22,  32);
    if (v12)
    {
LABEL_23:
      +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v12, 4LL);
      free(v12);
      SSFileLog(v5, @"%@");
    }
  }

LABEL_25:
  sub_100146884(reply, "0", v13);
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 64), reply);
  xpc_release(reply);
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 72));
}

  sub_100146884(reply, "0", v14);
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 64), reply);
  xpc_release(reply);
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 72));
}

    uint64_t v19 = (void *)ISError(2LL, 0LL, 0LL);
    id result = 0;
    if (!a4) {
      return result;
    }
    goto LABEL_26;
  }

  CFDictionaryRef v8 = [a3 objectForKey:kISFailureTypeKey];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v10) {
      uint64_t v10 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    uint64_t v11 = [v10 shouldLog];
    else {
      LODWORD(v12) = v11;
    }
    uint64_t v13 = (os_log_s *)[v10 OSLogObject];
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT)) {
      unsigned int v12 = v12;
    }
    else {
      v12 &= 2u;
    }
    if ((_DWORD)v12)
    {
      *(_DWORD *)id v21 = 138412546;
      *(void *)&v21[4] = objc_opt_class(self);
      *(_WORD *)&v21[12] = 2112;
      *(void *)&v21[14] = v9;
      int v14 = _os_log_send_and_compose_impl( v12,  0LL,  0LL,  0LL,  &_mh_execute_header,  v13,  0LL,  "%@: Failed with failureType: %@",  v21,  22,  *(_OWORD *)v21,  *(void *)&v21[16]);
      goto LABEL_23;
    }

    goto LABEL_25;
  }

  uint64_t v19 = 0LL;
  id result = 1;
  if (!a4) {
    return result;
  }
LABEL_26:
  *a4 = v19;
  return result;
}

void sub_10002FB30(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _newPaymentQueueClientWithMessage:*(void *)(a1 + 40) connection:*(void *)(a1 + 48) parameter:"1"];
  id v3 = [*(id *)(a1 + 32) _clientForConnection:*(void *)(a1 + 48) paymentQueueClient:v2];

  uint64_t int64 = xpc_dictionary_get_uint64(*(xpc_object_t *)(a1 + 40), "2");
  CFDictionaryRef v27 = sub_1000E3558(*(void **)(a1 + 40), "3");
  if (uint64)
  {
    unsigned __int8 v5 = objc_msgSend(objc_msgSend(v3, "XPCClient"), "hasEntitlements");
    unsigned int v6 = *(void **)(a1 + 40);
    if ((v5 & 1) == 0)
    {
      xpc_object_t reply = xpc_dictionary_create_reply(v6);
      uint64_t v25 = sub_100146868();
      uint64_t v26 = ISErrorWithDomain(v25, 1LL, 0LL, 0LL);
      sub_100146884(reply, "1", v26);
      xpc_connection_send_message(*(xpc_connection_t *)(a1 + 48), reply);
      xpc_release(reply);

      return;
    }

    CFDictionaryRef v7 = sub_1000E3558(v6, "4");
  }

  else
  {
    CFDictionaryRef v7 = (CFDictionaryRef)[v3 clientIdentifier];
  }

  CFDictionaryRef v8 = v7;
  uint64_t v9 = dispatch_semaphore_create(0LL);
  uint64_t v10 = +[PromotedIAPManager sharedInstance](&OBJC_CLASS___PromotedIAPManager, "sharedInstance");
  CFDictionaryRef v35 = v27;
  uint64_t v11 = +[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v35, 1LL);
  v28[0] = _NSConcreteStackBlock;
  v28[1] = 3221225472LL;
  v28[2] = sub_10002FEB0;
  v28[3] = &unk_10034BA80;
  uint64_t v12 = *(void *)(a1 + 40);
  v28[4] = *(void *)(a1 + 32);
  v28[5] = v8;
  v28[6] = v12;
  v28[7] = v27;
  v28[8] = *(void *)(a1 + 48);
  v28[9] = v9;
  -[PromotedIAPManager getVisibilityForIAPs:app:completionHandler:]( v10,  "getVisibilityForIAPs:app:completionHandler:",  v11,  v8,  v28);
  dispatch_time_t v13 = dispatch_time(0LL, 90000000000LL);
  if (dispatch_semaphore_wait(v9, v13))
  {
    id v14 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v14) {
      id v14 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v15 = [v14 shouldLog];
    else {
      LODWORD(v16) = v15;
    }
    id v17 = (os_log_s *)[v14 OSLogObject];
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
      uint64_t v16 = v16;
    }
    else {
      v16 &= 2u;
    }
    if ((_DWORD)v16)
    {
      uint64_t v18 = objc_opt_class(*(void *)(a1 + 32));
      int v29 = 138543874;
      uint64_t v30 = v18;
      __int16 v31 = 2114;
      CFDictionaryRef v32 = v8;
      __int16 v33 = 2112;
      CFDictionaryRef v34 = v27;
      uint64_t v19 = _os_log_send_and_compose_impl( v16,  0LL,  0LL,  0LL,  &_mh_execute_header,  v17,  16LL,  "[%{public}@]: Timed out getting promoted IAP visibility for bundle id: %{public}@, IAP: %@",  &v29,  32);
      if (v19)
      {
        uint64_t v20 = (void *)v19;
        +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v19, 4LL);
        free(v20);
        SSFileLog(v14, @"%@");
      }
    }

    id v21 = sub_100146868();
    uint64_t v22 = ISErrorWithDomain(v21, 0LL, 0LL, 0LL);
    xpc_object_t v23 = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 40));
    sub_100146884(v23, "1", v22);
    xpc_connection_send_message(*(xpc_connection_t *)(a1 + 48), v23);
    xpc_release(v23);
  }
}

uint64_t sub_10002FEB0(uint64_t a1, void *a2)
{
  id v4 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  if (!v4) {
    id v4 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  unsigned int v5 = [v4 shouldLog];
  else {
    LODWORD(v6) = v5;
  }
  CFDictionaryRef v7 = (os_log_s *)[v4 OSLogObject];
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v6 = v6;
  }
  else {
    v6 &= 2u;
  }
  if ((_DWORD)v6)
  {
    uint64_t v8 = objc_opt_class(*(void *)(a1 + 32));
    uint64_t v9 = *(void *)(a1 + 40);
    int v14 = 138543874;
    uint64_t v15 = v8;
    __int16 v16 = 2112;
    id v17 = a2;
    __int16 v18 = 2114;
    uint64_t v19 = v9;
    uint64_t v10 = _os_log_send_and_compose_impl( v6,  0LL,  0LL,  0LL,  &_mh_execute_header,  v7,  0LL,  "[%{public}@]: Got IAP visibility: %@, for app: %{public}@",  &v14,  32);
    if (v10)
    {
      uint64_t v11 = (void *)v10;
      +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v10, 4LL);
      free(v11);
      SSFileLog(v4, @"%@");
    }
  }

  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 48));
  xpc_dictionary_set_int64( reply,  "0",  (int64_t)objc_msgSend(objc_msgSend(a2, "objectForKey:", *(void *)(a1 + 56)), "integerValue"));
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 64), reply);
  xpc_release(reply);
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 72));
}

void sub_1000300C4(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _newPaymentQueueClientWithMessage:*(void *)(a1 + 40) connection:*(void *)(a1 + 48) parameter:"1"];
  id v3 = [*(id *)(a1 + 32) _clientForConnection:*(void *)(a1 + 48) paymentQueueClient:v2];

  uint64_t int64 = xpc_dictionary_get_uint64(*(xpc_object_t *)(a1 + 40), "2");
  int64_t int64 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 40), "3");
  CFDictionaryRef v25 = sub_1000E3558(*(void **)(a1 + 40), "4");
  if (uint64)
  {
    unsigned __int8 v6 = objc_msgSend(objc_msgSend(v3, "XPCClient"), "hasEntitlements");
    CFDictionaryRef v7 = *(void **)(a1 + 40);
    if ((v6 & 1) == 0)
    {
      xpc_object_t reply = xpc_dictionary_create_reply(v7);
      xpc_object_t v23 = sub_100146868();
      uint64_t v24 = ISErrorWithDomain(v23, 1LL, 0LL, 0LL);
      sub_100146884(reply, "0", v24);
      xpc_connection_send_message(*(xpc_connection_t *)(a1 + 48), reply);
      xpc_release(reply);

      return;
    }

    CFDictionaryRef v8 = sub_1000E3558(v7, "5");
  }

  else
  {
    CFDictionaryRef v8 = (CFDictionaryRef)[v3 clientIdentifier];
  }

  CFDictionaryRef v9 = v8;
  uint64_t v10 = dispatch_semaphore_create(0LL);
  -[PromotedIAPManager setVisibility:forIAP:app:completionHandler:]( +[PromotedIAPManager sharedInstance](&OBJC_CLASS___PromotedIAPManager, "sharedInstance"),  "setVisibility:forIAP:app:completionHandler:",  int64);
  dispatch_time_t v11 = dispatch_time(0LL, 90000000000LL);
  if (dispatch_semaphore_wait(v10, v11))
  {
    id v12 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v12) {
      id v12 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v13 = [v12 shouldLog];
    else {
      LODWORD(v14) = v13;
    }
    uint64_t v15 = (os_log_s *)[v12 OSLogObject];
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
      uint64_t v14 = v14;
    }
    else {
      v14 &= 2u;
    }
    if ((_DWORD)v14)
    {
      uint64_t v16 = objc_opt_class(*(void *)(a1 + 32));
      int v26 = 138543874;
      uint64_t v27 = v16;
      __int16 v28 = 2112;
      CFDictionaryRef v29 = v25;
      __int16 v30 = 2114;
      CFDictionaryRef v31 = v9;
      uint64_t v17 = _os_log_send_and_compose_impl( v14,  0LL,  0LL,  0LL,  &_mh_execute_header,  v15,  16LL,  "[%{public}@]: Timed out setting promoted IAP visibility for product: %@, app: %{public}@",  &v26,  32);
      if (v17)
      {
        __int16 v18 = (void *)v17;
        +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v17, 4LL);
        free(v18);
        SSFileLog(v12, @"%@");
      }
    }

    xpc_object_t v19 = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 40));
    uint64_t v20 = sub_100146868();
    uint64_t v21 = ISErrorWithDomain(v20, 0LL, 0LL, 0LL);
    sub_100146884(v19, "0", v21);
    xpc_connection_send_message(*(xpc_connection_t *)(a1 + 48), v19);
    xpc_release(v19);
  }
}

uint64_t sub_10003043C(uint64_t a1, char a2)
{
  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 32));
  if ((a2 & 1) != 0)
  {
    id v5 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v5) {
      id v5 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v6 = [v5 shouldLog];
    else {
      LODWORD(v7) = v6;
    }
    CFDictionaryRef v8 = (os_log_s *)[v5 OSLogObject];
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v7 = v7;
    }
    else {
      v7 &= 2u;
    }
    if (!(_DWORD)v7)
    {
      uint64_t v14 = 0LL;
      goto LABEL_25;
    }

    uint64_t v9 = objc_opt_class(*(void *)(a1 + 40));
    uint64_t v10 = *(void *)(a1 + 80);
    uint64_t v11 = *(void *)(a1 + 48);
    uint64_t v12 = *(void *)(a1 + 56);
    int v24 = 138544130;
    uint64_t v25 = v9;
    __int16 v26 = 2050;
    uint64_t v27 = v10;
    __int16 v28 = 2112;
    uint64_t v29 = v11;
    __int16 v30 = 2114;
    uint64_t v31 = v12;
    unsigned int v13 = (void *)_os_log_send_and_compose_impl( v7,  0LL,  0LL,  0LL,  &_mh_execute_header,  v8,  0LL,  "[%{public}@]: Set IAP visibility: %{public}li, for product: %@, app: %{public}@",  &v24,  42);
    uint64_t v14 = 0LL;
    if (!v13) {
      goto LABEL_25;
    }
    goto LABEL_23;
  }

  uint64_t v15 = sub_100146868();
  uint64_t v14 = ISErrorWithDomain(v15, 0LL, 0LL, 0LL);
  id v5 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  if (!v5) {
    id v5 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  unsigned int v16 = [v5 shouldLog];
  else {
    LODWORD(v17) = v16;
  }
  __int16 v18 = (os_log_s *)[v5 OSLogObject];
  if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
    uint64_t v17 = v17;
  }
  else {
    v17 &= 2u;
  }
  if ((_DWORD)v17)
  {
    uint64_t v19 = objc_opt_class(*(void *)(a1 + 40));
    uint64_t v20 = *(void *)(a1 + 80);
    uint64_t v21 = *(void *)(a1 + 48);
    uint64_t v22 = *(void *)(a1 + 56);
    int v24 = 138544130;
    uint64_t v25 = v19;
    __int16 v26 = 2050;
    uint64_t v27 = v20;
    __int16 v28 = 2112;
    uint64_t v29 = v21;
    __int16 v30 = 2114;
    uint64_t v31 = v22;
    unsigned int v13 = (void *)_os_log_send_and_compose_impl( v17,  0LL,  0LL,  0LL,  &_mh_execute_header,  v18,  16LL,  "[%{public}@]: Error setting IAP visibility: %{public}li, for product: %@, app: %{public}@",  &v24,  42);
    if (v13)
    {
LABEL_23:
      +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v13, 4LL);
      free(v13);
      SSFileLog(v5, @"%@");
    }
  }

void sub_100030768(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _newPaymentQueueClientWithMessage:*(void *)(a1 + 40) connection:*(void *)(a1 + 48) parameter:"1"];
  id v3 = [*(id *)(a1 + 32) _clientForConnection:*(void *)(a1 + 48) paymentQueueClient:v2];

  unsigned __int8 v4 = objc_msgSend(objc_msgSend(v3, "XPCClient"), "hasEntitlements");
  id v5 = *(void **)(a1 + 40);
  if ((v4 & 1) != 0)
  {
    CFDictionaryRef v6 = sub_1000E3558(v5, "2");
    uint64_t v7 = dispatch_semaphore_create(0LL);
    CFDictionaryRef v8 = +[PromotedIAPManager sharedInstance](&OBJC_CLASS___PromotedIAPManager, "sharedInstance");
    v23[0] = _NSConcreteStackBlock;
    v23[1] = 3221225472LL;
    v23[2] = sub_100030A64;
    v23[3] = &unk_10034BAD0;
    v23[4] = *(void *)(a1 + 32);
    v23[5] = v6;
    __int128 v24 = *(_OWORD *)(a1 + 40);
    uint64_t v25 = v7;
    -[PromotedIAPManager getInfoInternalForApp:completionHandler:]( v8,  "getInfoInternalForApp:completionHandler:",  v6,  v23);
    dispatch_time_t v9 = dispatch_time(0LL, 90000000000LL);
    if (dispatch_semaphore_wait(v7, v9))
    {
      id v10 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
      if (!v10) {
        id v10 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
      }
      unsigned int v11 = [v10 shouldLog];
      else {
        LODWORD(v12) = v11;
      }
      unsigned int v13 = (os_log_s *)[v10 OSLogObject];
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        uint64_t v12 = v12;
      }
      else {
        v12 &= 2u;
      }
      if ((_DWORD)v12)
      {
        uint64_t v14 = objc_opt_class(*(void *)(a1 + 32));
        int v26 = 138543618;
        uint64_t v27 = v14;
        __int16 v28 = 2112;
        CFDictionaryRef v29 = v6;
        uint64_t v15 = _os_log_send_and_compose_impl( v12,  0LL,  0LL,  0LL,  &_mh_execute_header,  v13,  16LL,  "[%{public}@]: Timed out getting promoted IAP internal info for bundle id: %@",  &v26,  22);
        if (v15)
        {
          unsigned int v16 = (void *)v15;
          +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v15, 4LL);
          free(v16);
          SSFileLog(v10, @"%@");
        }
      }

      uint64_t v17 = sub_100146868();
      uint64_t v18 = ISErrorWithDomain(v17, 0LL, 0LL, 0LL);
      xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 40));
      sub_100146884(reply, "3", v18);
      xpc_connection_send_message(*(xpc_connection_t *)(a1 + 48), reply);
      xpc_release(reply);
    }
  }

  else
  {
    xpc_object_t v20 = xpc_dictionary_create_reply(v5);
    uint64_t v21 = sub_100146868();
    uint64_t v22 = ISErrorWithDomain(v21, 1LL, 0LL, 0LL);
    sub_100146884(v20, "3", v22);
    xpc_connection_send_message(*(xpc_connection_t *)(a1 + 48), v20);
    xpc_release(v20);
  }

uint64_t sub_100030A64(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v8 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  if (!v8) {
    id v8 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  unsigned int v9 = [v8 shouldLog];
  else {
    LODWORD(v10) = v9;
  }
  unsigned int v11 = (os_log_s *)[v8 OSLogObject];
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v10 = v10;
  }
  else {
    v10 &= 2u;
  }
  if ((_DWORD)v10)
  {
    uint64_t v12 = objc_opt_class(*(void *)(a1 + 32));
    uint64_t v13 = *(void *)(a1 + 40);
    int v20 = 138544386;
    uint64_t v21 = v12;
    __int16 v22 = 2114;
    uint64_t v23 = v13;
    __int16 v24 = 2112;
    uint64_t v25 = a2;
    __int16 v26 = 2112;
    uint64_t v27 = a3;
    __int16 v28 = 2112;
    CFDictionaryRef v29 = a4;
    uint64_t v14 = _os_log_send_and_compose_impl( v10,  0LL,  0LL,  0LL,  &_mh_execute_header,  v11,  0LL,  "[%{public}@]: (Internal client) Got IAP info for app: %{public}@. Order: %@, hidden product ids: %@, shown product ids: %@",  &v20,  52);
    if (v14)
    {
      uint64_t v15 = (void *)v14;
      +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v14, 4LL);
      free(v15);
      SSFileLog(v8, @"%@");
    }
  }

  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 48));
  id v17 = [a3 allObjects];
  id v18 = [a4 allObjects];
  sub_100146884(reply, "0", a2);
  sub_100146884(reply, "1", v17);
  sub_100146884(reply, "2", v18);
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 56), reply);
  xpc_release(reply);
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 64));
}

void sub_100030CC8(uint64_t a1)
{
  id v2 = -[XPCClient initWithInputConnection:]( objc_alloc(&OBJC_CLASS___XPCClient),  "initWithInputConnection:",  *(void *)(a1 + 32));
  if (!v2) {
    goto LABEL_99;
  }
  uint64_t v80 = 0LL;
  id v3 = objc_msgSend( [LSApplicationRecord alloc],  "initWithBundleIdentifier:allowPlaceholder:error:",  -[XPCClient clientIdentifier](v2, "clientIdentifier"),  1,  &v80);
  id v4 = [v3 typeForInstallMachinery];
  unsigned int v5 = [v4 isEqualToString:LSSystemApplicationType];

  unsigned int v6 = -[XPCClient isBetaApp](v2, "isBetaApp");
  unsigned int v7 = -[XPCClient isAdHocCodeSigned](v2, "isAdHocCodeSigned");
  id v8 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  if (!v8) {
    id v8 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  unsigned int v9 = [v8 shouldLog];
  else {
    LODWORD(v10) = v9;
  }
  unsigned int v11 = (os_log_s *)[v8 OSLogObject];
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v10 = v10;
  }
  else {
    v10 &= 2u;
  }
  if ((_DWORD)v10)
  {
    uint64_t v12 = objc_opt_class(*(void *)(a1 + 40));
    uint64_t v13 = @"NO";
    if (v6) {
      uint64_t v14 = @"YES";
    }
    else {
      uint64_t v14 = @"NO";
    }
    *(_DWORD *)__int16 v83 = 138544130;
    *(void *)&v83[4] = v12;
    if (v7) {
      uint64_t v15 = @"YES";
    }
    else {
      uint64_t v15 = @"NO";
    }
    __int16 v84 = 2114;
    if (v5) {
      uint64_t v13 = @"YES";
    }
    v85 = v14;
    __int16 v86 = 2114;
    v87 = v15;
    __int16 v88 = 2114;
    v89 = v13;
    uint64_t v16 = _os_log_send_and_compose_impl( v10,  0LL,  0LL,  0LL,  &_mh_execute_header,  v11,  0LL,  "[%{public}@]: isBeta: %{public}@, AdHoc: %{public}@, System: %{public}@",  COERCE_DOUBLE(138544130LL),  v83,  42);
    if (v16)
    {
      id v17 = (void *)v16;
      id v18 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v16, 4LL);
      free(v17);
      __int128 v69 = v18;
      SSFileLog(v8, @"%@");
    }
  }

  if ((v6 ^ 1 | v5) != 1)
  {
    id v35 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v35) {
      id v35 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v36 = objc_msgSend(v35, "shouldLog", v69);
    else {
      LODWORD(v37) = v36;
    }
    id v38 = (os_log_s *)[v35 OSLogObject];
    if (os_log_type_enabled(v38, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v37 = v37;
    }
    else {
      v37 &= 2u;
    }
    if (!(_DWORD)v37) {
      goto LABEL_58;
    }
    goto LABEL_56;
  }

  unsigned int v19 = -[NSUserDefaults BOOLForKey:]( +[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"),  "BOOLForKey:",  @"UseSandboxReviewPromptModeForSystemApps") & v5;
  unsigned int v20 = !-[XPCClient isAppleSigned](v2, "isAppleSigned") | v19;
  if (v5) {
    int v21 = v20;
  }
  else {
    int v21 = v20 | v7;
  }
  unsigned int v22 = objc_msgSend(*(id *)(a1 + 40), "_inAppReviewEnabled", v69);
  id v23 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  if (!v23) {
    id v23 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  unsigned int v24 = [v23 shouldLog];
  else {
    LODWORD(v25) = v24;
  }
  __int16 v26 = (os_log_s *)[v23 OSLogObject];
  if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v25 = v25;
  }
  else {
    v25 &= 2u;
  }
  if ((_DWORD)v25)
  {
    uint64_t v27 = objc_opt_class(*(void *)(a1 + 40));
    *(_DWORD *)__int16 v83 = 138544386;
    __int16 v28 = v19 ? @"YES" : @"NO";
    *(void *)&v83[4] = v27;
    CFDictionaryRef v29 = v21 ? @"YES" : @"NO";
    __int16 v84 = 2114;
    __int16 v30 = v22 ? @"YES" : @"NO";
    v85 = @"NO";
    __int16 v86 = 2114;
    v87 = v28;
    __int16 v88 = 2114;
    v89 = v29;
    __int16 v90 = 2114;
    v91 = v30;
    LODWORD(v71) = 52;
    uint64_t v31 = _os_log_send_and_compose_impl( v25,  0LL,  0LL,  0LL,  &_mh_execute_header,  v26,  0LL,  "[%{public}@]: Seed: %{public}@, Override: %{public}@, Sandboxed: %{public}@, Enabled: %{public}@",  v83,  v71);
    if (v31)
    {
      CFDictionaryRef v32 = (void *)v31;
      __int16 v33 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v31, 4LL);
      free(v32);
      __int128 v70 = v33;
      SSFileLog(v23, @"%@");
    }
  }

  if (!v21)
  {
    if (v22)
    {
      id v42 = [*(id *)(a1 + 40) _inAppReviewRequestConstants];
      id v43 = objc_msgSend(objc_msgSend(v42, "objectForKey:", @"inAppReviewRequestLimitWindow"), "integerValue");
      id v44 = objc_msgSend( objc_msgSend(v42, "objectForKey:", @"inAppReviewRequiredDaysAfterReview"),  "integerValue");
      id v74 = objc_msgSend(objc_msgSend(v42, "objectForKey:", @"inAppReviewRequestsPerWindow"), "integerValue");
      unsigned int v75 = objc_msgSend( objc_msgSend(v42, "objectForKey:", @"inAppReviewRequireNewVersionAfterReview"),  "BOOLValue");
      id v45 = [*(id *)(a1 + 40) _beginManagedContextSession];
      id v46 = +[InAppReviewRequest entityForContext:](&OBJC_CLASS___InAppReviewRequest, "entityForContext:", v45);
      id v47 = objc_alloc_init(&OBJC_CLASS___NSFetchRequest);
      id v72 = v46;
      -[NSFetchRequest setEntity:](v47, "setEntity:", v46);
      -[NSFetchRequest setPredicate:]( v47,  "setPredicate:",  +[NSPredicate predicateWithFormat:]( &OBJC_CLASS___NSPredicate,  "predicateWithFormat:",  @"bundleIdentifier = %@",  -[XPCClient clientIdentifier](v2, "clientIdentifier")));
      id v82 = +[NSSortDescriptor sortDescriptorWithKey:ascending:]( &OBJC_CLASS___NSSortDescriptor,  "sortDescriptorWithKey:ascending:",  @"date",  0LL);
      -[NSFetchRequest setSortDescriptors:]( v47,  "setSortDescriptors:",  +[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v82, 1LL));
      *(void *)__int16 v83 = 0LL;
      __int128 v73 = v45;
      id v48 = [v45 executeFetchRequest:v47 error:v83];

      uint64_t v49 = +[NSDate dateWithTimeIntervalSinceNow:]( &OBJC_CLASS___NSDate,  "dateWithTimeIntervalSinceNow:",  (double)(-86400 * (uint64_t)v43));
      uint64_t v50 = +[NSDate dateWithTimeIntervalSinceNow:]( &OBJC_CLASS___NSDate,  "dateWithTimeIntervalSinceNow:",  (double)(-86400 * (uint64_t)v44));
      __int128 v76 = 0u;
      __int128 v77 = 0u;
      __int128 v78 = 0u;
      __int128 v79 = 0u;
      id v51 = v48;
      id v52 = [v48 countByEnumeratingWithState:&v76 objects:v81 count:16];
      if (v52)
      {
        id v53 = v52;
        unint64_t v54 = 0LL;
        uint64_t v55 = *(void *)v77;
        while (2)
        {
          for (uint64_t i = 0LL; i != v53; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v77 != v55) {
              objc_enumerationMutation(v51);
            }
            __int128 v57 = *(void **)(*((void *)&v76 + 1) + 8LL * (void)i);
            if (objc_msgSend(objc_msgSend(v57, "date"), "compare:", v49) == (id)1
              && (++v54, v54 >= (unint64_t)v74)
              || objc_msgSend(objc_msgSend(v57, "date"), "compare:", v50) == (id)1
              && ([v57 rated] & 1) != 0
              || ([v57 rated] & v75) == 1
              && (objc_msgSend( objc_msgSend(v57, "bundleVersion"),  "isEqualToString:",  -[XPCClient clientVersion](v2, "clientVersion")) & 1) != 0)
            {
              id v34 = 0LL;
              goto LABEL_85;
            }
          }

          id v53 = [v51 countByEnumeratingWithState:&v76 objects:v81 count:16];
          if (v53) {
            continue;
          }
          break;
        }
      }

      __int128 v58 = -[InAppReviewRequest initWithEntity:insertIntoManagedObjectContext:]( objc_alloc(&OBJC_CLASS___InAppReviewRequest),  "initWithEntity:insertIntoManagedObjectContext:",  v72,  v73);
      -[InAppReviewRequest setBundleIdentifier:]( v58,  "setBundleIdentifier:",  -[XPCClient clientIdentifier](v2, "clientIdentifier"));
      -[InAppReviewRequest setBundleVersion:](v58, "setBundleVersion:", -[XPCClient clientVersion](v2, "clientVersion"));
      -[InAppReviewRequest setDate:](v58, "setDate:", +[NSDate date](&OBJC_CLASS___NSDate, "date"));
      id v34 = -[InAppReviewRequest valueHash](v58, "valueHash");
      sub_10003E244(v73);

      goto LABEL_85;
    }

    id v35 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v35) {
      id v35 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v59 = objc_msgSend(v35, "shouldLog", v70);
    else {
      LODWORD(v37) = v59;
    }
    id v38 = (os_log_s *)[v35 OSLogObject];
    if (os_log_type_enabled(v38, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v37 = v37;
    }
    else {
      v37 &= 2u;
    }
    if (!(_DWORD)v37) {
      goto LABEL_58;
    }
LABEL_56:
    uint64_t v39 = objc_opt_class(*(void *)(a1 + 40));
    *(_DWORD *)__int16 v83 = 138543362;
    *(void *)&v83[4] = v39;
    LODWORD(v71) = 12;
    uint64_t v40 = _os_log_send_and_compose_impl( v37,  0LL,  0LL,  0LL,  &_mh_execute_header,  v38,  0LL,  "[%{public}@]: Review request denied.",  v83,  v71);
    id v34 = (id)v40;
    if (!v40) {
      goto LABEL_85;
    }
    id v41 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v40, 4LL);
    free(v34);
    __int128 v70 = v41;
    SSFileLog(v35, @"%@");
LABEL_58:
    id v34 = 0LL;
    goto LABEL_85;
  }

  id v34 = (id)SSXPCInAppReviewSandboxToken;
LABEL_85:
  id v60 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig", v70);
  if (!v60) {
    id v60 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  unsigned int v61 = [v60 shouldLog];
  else {
    LODWORD(v62) = v61;
  }
  id v63 = (os_log_s *)[v60 OSLogObject];
  if (os_log_type_enabled(v63, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v62 = v62;
  }
  else {
    v62 &= 2u;
  }
  if ((_DWORD)v62)
  {
    uint64_t v64 = objc_opt_class(*(void *)(a1 + 40));
    v65 = @"NO";
    if (v34) {
      v65 = @"YES";
    }
    *(_DWORD *)__int16 v83 = 138543618;
    *(void *)&v83[4] = v64;
    __int16 v84 = 2114;
    v85 = v65;
    LODWORD(v71) = 22;
    uint64_t v66 = _os_log_send_and_compose_impl( v62,  0LL,  0LL,  0LL,  &_mh_execute_header,  v63,  0LL,  "[%{public}@]: Token: %{public}@.",  v83,  v71);
    if (v66)
    {
      __int128 v67 = (void *)v66;
      +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v66, 4LL);
      free(v67);
      SSFileLog(v60, @"%@");
    }
  }

  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 48));
  xpc_dictionary_set_int64(reply, "0", 1011LL);
  SSXPCDictionarySetCFObject(reply, "1", v34);
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 32), reply);
  xpc_release(reply);
LABEL_99:
}

uint64_t sub_1000317C4(uint64_t a1)
{
  if ([*(id *)(a1 + 32) success])
  {
    id v2 = [*(id *)(a1 + 32) URLBag];
    id v3 = *(void **)(a1 + 40);
    id v4 = [v2 valueForKey:@"inAppReviewRequestLimitWindow"];
    if (v4) {
      [v3 setObject:v4 forKey:@"inAppReviewRequestLimitWindow"];
    }
    id v5 = [v2 valueForKey:@"inAppReviewRequestsPerWindow"];
    if (v5) {
      [v3 setObject:v5 forKey:@"inAppReviewRequestsPerWindow"];
    }
    id v6 = [v2 valueForKey:@"inAppReviewRequiredDaysAfterReview"];
    if (v6) {
      [v3 setObject:v6 forKey:@"inAppReviewRequiredDaysAfterReview"];
    }
    id v7 = [v2 valueForKey:@"inAppReviewRequireNewVersionAfterReview"];
    if (v7) {
      [v3 setObject:v7 forKey:@"inAppReviewRequireNewVersionAfterReview"];
    }
  }

  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 48));
}

void sub_1000318F8(uint64_t a1)
{
  id v2 = -[XPCClient initWithInputConnection:]( objc_alloc(&OBJC_CLASS___XPCClient),  "initWithInputConnection:",  *(void *)(a1 + 32));
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = objc_opt_class(&OBJC_CLASS___NSString);
  uint64_t v5 = SSXPCDictionaryCopyCFObjectWithClass(v3, "1", v4);
  id v6 = (void *)v5;
  if (v2) {
    BOOL v7 = v5 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  if (!v7)
  {
    id v8 = [*(id *)(a1 + 48) _beginManagedContextSession];
    id v9 = +[InAppReviewRequest entityForContext:](&OBJC_CLASS___InAppReviewRequest, "entityForContext:", v8);
    uint64_t v10 = objc_alloc_init(&OBJC_CLASS___NSFetchRequest);
    -[NSFetchRequest setEntity:](v10, "setEntity:", v9);
    -[NSFetchRequest setPredicate:]( v10,  "setPredicate:",  +[NSPredicate predicateWithFormat:]( &OBJC_CLASS___NSPredicate,  "predicateWithFormat:",  @"bundleIdentifier = %@",  -[XPCClient clientIdentifier](v2, "clientIdentifier")));
    id v23 = +[NSSortDescriptor sortDescriptorWithKey:ascending:]( &OBJC_CLASS___NSSortDescriptor,  "sortDescriptorWithKey:ascending:",  @"date",  0LL);
    -[NSFetchRequest setSortDescriptors:]( v10,  "setSortDescriptors:",  +[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v23, 1LL));
    uint64_t v21 = 0LL;
    id v11 = [v8 executeFetchRequest:v10 error:&v21];

    __int128 v19 = 0u;
    __int128 v20 = 0u;
    __int128 v17 = 0u;
    __int128 v18 = 0u;
    id v12 = [v11 countByEnumeratingWithState:&v17 objects:v22 count:16];
    if (v12)
    {
      id v13 = v12;
      uint64_t v14 = *(void *)v18;
      while (2)
      {
        for (uint64_t i = 0LL; i != v13; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v18 != v14) {
            objc_enumerationMutation(v11);
          }
          uint64_t v16 = *(void **)(*((void *)&v17 + 1) + 8LL * (void)i);
          if (objc_msgSend(objc_msgSend(v16, "valueHash"), "isEqualToString:", v6))
          {
            [v16 setRated:1];
            sub_10003E244(v8);
            goto LABEL_15;
          }
        }

        id v13 = [v11 countByEnumeratingWithState:&v17 objects:v22 count:16];
        if (v13) {
          continue;
        }
        break;
      }
    }
  }

void sub_100031BB8(uint64_t a1)
{
  id v2 = -[XPCClient initWithInputConnection:]( objc_alloc(&OBJC_CLASS___XPCClient),  "initWithInputConnection:",  *(void *)(a1 + 32));
  if (v2)
  {
    id v3 = [*(id *)(a1 + 40) _beginManagedContextSession];
    id v4 = +[InAppReviewRequest entityForContext:](&OBJC_CLASS___InAppReviewRequest, "entityForContext:", v3);
    uint64_t v5 = objc_alloc_init(&OBJC_CLASS___NSFetchRequest);
    -[NSFetchRequest setEntity:](v5, "setEntity:", v4);
    uint64_t v15 = 0LL;
    id v6 = [v3 executeFetchRequest:v5 error:&v15];

    __int128 v13 = 0u;
    __int128 v14 = 0u;
    __int128 v11 = 0u;
    __int128 v12 = 0u;
    id v7 = [v6 countByEnumeratingWithState:&v11 objects:v16 count:16];
    if (v7)
    {
      id v8 = v7;
      uint64_t v9 = *(void *)v12;
      do
      {
        uint64_t v10 = 0LL;
        do
        {
          if (*(void *)v12 != v9) {
            objc_enumerationMutation(v6);
          }
          [v3 deleteObject:*(void *)(*((void *)&v11 + 1) + 8 * (void)v10)];
          uint64_t v10 = (char *)v10 + 1;
        }

        while (v8 != v10);
        id v8 = [v6 countByEnumeratingWithState:&v11 objects:v16 count:16];
      }

      while (v8);
    }
  }
}

id sub_100031DE0(uint64_t a1)
{
  __int128 v20 = 0u;
  __int128 v21 = 0u;
  __int128 v18 = 0u;
  __int128 v19 = 0u;
  id v2 = *(void **)(*(void *)(a1 + 32) + 32LL);
  id result = [v2 countByEnumeratingWithState:&v18 objects:v26 count:16];
  if (result)
  {
    id v4 = result;
    uint64_t v5 = *(void *)v19;
    while (2)
    {
      id v6 = 0LL;
      do
      {
        if (*(void *)v19 != v5) {
          objc_enumerationMutation(v2);
        }
        id v7 = *(void **)(*((void *)&v18 + 1) + 8LL * (void)v6);
        if ([v7 XPCClient] == *(id *)(a1 + 40))
        {
          id v8 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
          if (!v8) {
            id v8 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
          }
          unsigned int v9 = [v8 shouldLog];
          else {
            LODWORD(v10) = v9;
          }
          __int128 v11 = (os_log_s *)[v8 OSLogObject];
          if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO)) {
            uint64_t v10 = v10;
          }
          else {
            v10 &= 2u;
          }
          if ((_DWORD)v10)
          {
            uint64_t v12 = objc_opt_class(*(void *)(a1 + 32));
            uint64_t v13 = *(void *)(a1 + 40);
            int v22 = 138412546;
            uint64_t v23 = v12;
            __int16 v24 = 2112;
            uint64_t v25 = v13;
            uint64_t v14 = _os_log_send_and_compose_impl( v10,  0LL,  0LL,  0LL,  &_mh_execute_header,  v11,  1LL,  "%@: Client disconnected: %@",  &v22,  22);
            if (v14)
            {
              uint64_t v15 = (void *)v14;
              uint64_t v16 = +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v14,  4LL);
              free(v15);
              __int128 v17 = v16;
              SSFileLog(v8, @"%@");
            }
          }

          return objc_msgSend(v7, "setXPCClient:", 0, v17);
        }

        id v6 = (char *)v6 + 1;
      }

      while (v4 != v6);
      id result = [v2 countByEnumeratingWithState:&v18 objects:v26 count:16];
      id v4 = result;
      if (result) {
        continue;
      }
      break;
    }
  }

  return result;
}

void *sub_100032068(void *result)
{
  if (*(_BYTE *)(result[4] + 48LL))
  {
    uint32_t v1 = result;
    id v2 = +[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter");
    -[NSNotificationCenter removeObserver:name:object:]( v2,  "removeObserver:name:object:",  v1[4],  ISNetworkTypeChangedNotification,  0LL);
    *(_BYTE *)(v1[4] + 48LL) = 0;
    return [(id)v1[4] _startFirstReadyPayment];
  }

  return result;
}

id sub_10003211C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _startFirstReadyPayment];
}

id sub_10003219C(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) _clients];
  __int128 v6 = 0u;
  __int128 v7 = 0u;
  __int128 v8 = 0u;
  __int128 v9 = 0u;
  id result = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (result)
  {
    id v3 = result;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0LL;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        [*(id *)(*((void *)&v6 + 1) + 8 * (void)v5) firstReadyPaymentID];
        uint64_t v5 = (char *)v5 + 1;
      }

      while (v3 != v5);
      id result = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
      id v3 = result;
    }

    while (result);
  }

  return result;
}

uint64_t sub_100032D9C(uint64_t a1, int a2, xpc_object_t object)
{
  if (xpc_get_type(object) == (xpc_type_t)&_xpc_type_int64)
  {
    uint64_t v5 = -[NSNumber initWithLongLong:]( objc_alloc(&OBJC_CLASS___NSNumber),  "initWithLongLong:",  xpc_int64_get_value(object));
    [*(id *)(a1 + 32) addObject:v5];
  }

  return 1LL;
}

id sub_100032E94(uint64_t a1)
{
  return objc_msgSend( +[Daemon daemon](Daemon, "daemon"),  "releaseKeepAliveAssertion:",  @"com.apple.itunesstored.MicroPaymentQueue");
}

void *sub_1000330F0(uint64_t a1)
{
  id result = *(void **)(a1 + 32);
  uint64_t v3 = result[1];
  if (!v3 || v3 == *(void *)(a1 + 40))
  {
    [result _setActivePaymentID:0];
    id result = [*(id *)(a1 + 32) _startFirstReadyPayment];
  }

  if (!*(_BYTE *)(a1 + 48) && !*(_BYTE *)(*(void *)(a1 + 32) + 48LL))
  {
    uint64_t v4 = +[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter");
    id result = -[NSNotificationCenter addObserver:selector:name:object:]( v4,  "addObserver:selector:name:object:",  *(void *)(a1 + 32),  "_networkTypeChanged:",  ISNetworkTypeChangedNotification,  0LL);
    *(_BYTE *)(*(void *)(a1 + 32) + 48LL) = 1;
  }

  return result;
}

void sub_1000333C0(uint64_t a1, void *a2)
{
  id v4 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  if (!v4) {
    id v4 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  unsigned int v5 = [v4 shouldLog];
  else {
    LODWORD(v6) = v5;
  }
  __int128 v7 = (os_log_s *)[v4 OSLogObject];
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v6 = v6;
  }
  else {
    v6 &= 2u;
  }
  if ((_DWORD)v6)
  {
    uint64_t v8 = objc_opt_class(*(void *)(a1 + 32));
    uint64_t v9 = *(void *)(a1 + 40);
    int v40 = 138543874;
    uint64_t v41 = v8;
    __int16 v42 = 2114;
    uint64_t v43 = v9;
    __int16 v44 = 2114;
    id v45 = a2;
    uint64_t v10 = _os_log_send_and_compose_impl( v6,  0LL,  0LL,  0LL,  &_mh_execute_header,  v7,  0LL,  "[%{public}@]: Tring to send purchase intents for client: %{public}@, got intents: %{public}@",  &v40,  32);
    if (v10)
    {
      __int128 v11 = (void *)v10;
      uint64_t v12 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v10, 4LL);
      free(v11);
      CFDictionaryRef v32 = v12;
      SSFileLog(v4, @"%@");
    }
  }

  if (a2 && [a2 count])
  {
    uint64_t v13 = objc_opt_new(&OBJC_CLASS___NSMutableArray);
    uint64_t v14 = +[NSDate dateWithTimeIntervalSinceNow:](&OBJC_CLASS___NSDate, "dateWithTimeIntervalSinceNow:", -900.0);
    __int128 v35 = 0u;
    __int128 v36 = 0u;
    __int128 v37 = 0u;
    __int128 v38 = 0u;
    id v15 = [a2 countByEnumeratingWithState:&v35 objects:v39 count:16];
    if (v15)
    {
      id v16 = v15;
      uint64_t v17 = *(void *)v36;
      do
      {
        for (uint64_t i = 0LL; i != v16; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v36 != v17) {
            objc_enumerationMutation(a2);
          }
          __int128 v19 = *(void **)(*((void *)&v35 + 1) + 8LL * (void)i);
          objc_msgSend(objc_msgSend(v19, "timestamp", v32), "doubleValue");
          if ((id)-[NSDate compare:]( +[NSDate dateWithTimeIntervalSince1970:](&OBJC_CLASS___NSDate, "dateWithTimeIntervalSince1970:"),  "compare:",  v14) == (id)1) {
            -[NSMutableArray addObject:](v13, "addObject:", v19);
          }
        }

        id v16 = [a2 countByEnumeratingWithState:&v35 objects:v39 count:16];
      }

      while (v16);
    }

    id v20 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig", v32);
    if (!v20) {
      id v20 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v21 = [v20 shouldLog];
    else {
      LODWORD(v22) = v21;
    }
    uint64_t v23 = (os_log_s *)[v20 OSLogObject];
    if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v22 = v22;
    }
    else {
      v22 &= 2u;
    }
    if ((_DWORD)v22)
    {
      uint64_t v24 = objc_opt_class(*(void *)(a1 + 32));
      uint64_t v25 = *(void *)(a1 + 40);
      int v40 = 138543874;
      uint64_t v41 = v24;
      __int16 v42 = 2114;
      uint64_t v43 = v25;
      __int16 v44 = 2114;
      id v45 = a2;
      LODWORD(v34) = 32;
      uint64_t v26 = _os_log_send_and_compose_impl( v22,  0LL,  0LL,  0LL,  &_mh_execute_header,  v23,  0LL,  "[%{public}@]: Sending purchase intents for client: %{public}@, intents within time limit: %{public}@",  &v40,  v34);
      if (v26)
      {
        uint64_t v27 = (void *)v26;
        __int16 v28 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v26, 4LL);
        free(v27);
        __int16 v33 = v28;
        SSFileLog(v20, @"%@");
      }
    }

    objc_msgSend(*(id *)(a1 + 56), "sendPurchaseIntents:forApp:", v13, *(void *)(a1 + 40), v33);

    -[PurchaseActionsManager deletePurchaseIntentsForApp:]( +[PurchaseActionsManager sharedInstance](&OBJC_CLASS___PurchaseActionsManager, "sharedInstance"),  "deletePurchaseIntentsForApp:",  *(void *)(a1 + 40));
  }

  uint64_t v31 = *(dispatch_semaphore_s **)(a1 + 48);
  __int16 v30 = (dispatch_object_t *)(a1 + 48);
  CFDictionaryRef v29 = v31;
  if (v31)
  {
    dispatch_semaphore_signal(v29);
    dispatch_release(*v30);
  }

id sub_100033A58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return objc_msgSend( objc_msgSend(*(id *)(a1 + 32), "object"),  "_finishPaymentOperationForPaymentID:result:error:",  *(void *)(a1 + 40),  a2,  a3);
}

uint64_t sub_100038B40(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  unsigned int v5 = -[SKDownload initWithXPCEncoding:](objc_alloc(&OBJC_CLASS___SKDownload), "initWithXPCEncoding:", v4);

  if (v5) {
    [*(id *)(a1 + 32) addObject:v5];
  }

  return 1LL;
}

void sub_100039494(_Unwind_Exception *a1)
{
}

void sub_1000394B0()
{
}

void *sub_100039FE8()
{
  uint64_t v0 = (void *)MGCopyAnswer(@"UniqueDeviceID", 0LL);
  id v1 = v0;
  if (v0)
  {
    memset(length, 0, sizeof(length));
    sub_10026A6EC((uint64_t)[v0 UTF8String], (uint64_t)objc_msgSend(v0, "length"), (uint64_t)length);
    if (v2)
    {
      CFRelease(v1);
    }

    else
    {
      CFDataRef v3 = CFDataCreate(0LL, (const UInt8 *)length + 4, LODWORD(length[0]));
      CFRelease(v1);
      if (v3)
      {
        id v1 = sub_10003A0D4(0, v3);
        CFRelease(v3);
        return v1;
      }
    }

    return 0LL;
  }

  return v1;
}

void *sub_10003A0D4(int a1, const void *a2)
{
  id v4 = calloc(1uLL, 0x18uLL);
  if (a2 && CFDataGetLength((CFDataRef)a2))
  {
    *(_DWORD *)id v4 = a1;
    v4[1] = CFRetain(a2);
    *((_DWORD *)v4 + 4) = sub_10003A9EC();
  }

  else
  {
    free(v4);
    return 0LL;
  }

  return v4;
}

void sub_10003A148(void **a1)
{
  if (a1)
  {
    int v2 = *a1;
    if (*a1)
    {
      CFDataRef v3 = (const void *)v2[1];
      if (v3) {
        CFRelease(v3);
      }
      free(v2);
    }

    *a1 = 0LL;
  }

BOOL sub_10003A188( int a1, CFReadStreamRef stream, CFDataRef theData, CFDataRef *a4, const __CFData *a5, void *a6)
{
  if (a6)
  {
    CFDictionaryRef v32 = a6;
    uint64_t v12 = (uint64_t)a6;
  }

  else
  {
    uint64_t v12 = (uint64_t)sub_100039FE8();
    CFDictionaryRef v32 = (void *)v12;
    if (!v12) {
      return v12;
    }
  }

  if (a4) {
    *a4 = 0LL;
  }
  if (stream)
  {
    CFReadStreamOpen(stream);
    if (!theData)
    {
      if (!CFReadStreamHasBytesAvailable(stream))
      {
LABEL_44:
        CFDataRef v26 = 0LL;
        goto LABEL_58;
      }

      CC_SHA1_Init(&c);
      goto LABEL_23;
    }

    if (!CFDataGetLength(theData) && !CFReadStreamHasBytesAvailable(stream)) {
      goto LABEL_44;
    }
LABEL_14:
    if (CFDataGetLength(theData))
    {
      if (CFDataGetLength(theData) != 20)
      {
        int v27 = -50;
        *(_DWORD *)(v12 + 20) = -50;
        __int16 v28 = "";
        goto LABEL_53;
      }

      v34.location = 0LL;
      v34.length = 20LL;
      CFDataGetBytes(theData, v34, buffer);
LABEL_36:
      if (a1 == 1)
      {
        int v16 = *(_DWORD *)(v12 + 16);
        if (!v16)
        {
          int v16 = sub_10003A9EC();
          *(_DWORD *)(v12 + 16) = v16;
        }

        sub_10003AA6C(v16);
        CC_LONG v17 = __chkstk_darwin();
        __int128 v19 = (const UInt8 *)&v30 - ((v18 + 15) & 0x1FFFFFFF0LL);
        c.h0 = v17;
        uint64_t v20 = *(unsigned int *)(v12 + 16);
        uint64_t v21 = *(unsigned int *)v12;
        BytePtr = CFDataGetBytePtr(*(CFDataRef *)(v12 + 8));
        uint64_t v23 = *(const __CFData **)(v12 + 8);
        if (v23) {
          CFIndex Length = CFDataGetLength(v23);
        }
        else {
          CFIndex Length = 0LL;
        }
        sub_100232BE8(v20, v21, (uint64_t)BytePtr, Length, (uint64_t)buffer, 20LL, (uint64_t)v19, (uint64_t)&c);
        if (!v27)
        {
          CFDataRef v26 = CFDataCreate(0LL, v19, c.h0);
          if (!stream) {
            goto LABEL_59;
          }
          goto LABEL_58;
        }

LABEL_51:
        *(_DWORD *)(v12 + 20) = v27;
        __int16 v28 = ". missing entitlement?";
        if (v27 != -42180) {
          __int16 v28 = "";
        }
LABEL_53:
        fprintf(__stderrp, "cfdcb statusError = %d%s\n", v27, v28);
        uint64_t v12 = 0LL;
        if (!a4) {
          goto LABEL_62;
        }
LABEL_54:
        CFDataRef v26 = 0LL;
LABEL_61:
        *a4 = v26;
        goto LABEL_62;
      }

      CFDataGetBytePtr(*(CFDataRef *)(v12 + 8));
      uint64_t v25 = *(const __CFData **)(v12 + 8);
      if (v25)
      {
        CFDataGetLength(v25);
        if (!a5) {
          goto LABEL_50;
        }
      }

      else if (!a5)
      {
LABEL_50:
        sub_10028F65C();
        if (!v27)
        {
          CFDataRef v26 = 0LL;
          if (!stream)
          {
LABEL_59:
            *(_DWORD *)(v12 + 20) = 0;
            if (!a4)
            {
              if (v26) {
                CFRelease(v26);
              }
              uint64_t v12 = 1LL;
              goto LABEL_62;
            }

            uint64_t v12 = 1LL;
            goto LABEL_61;
          }

LABEL_58:
          CFReadStreamClose(stream);
          goto LABEL_59;
        }

        goto LABEL_51;
      }

      CFDataGetBytePtr(a5);
      CFDataGetLength(a5);
      goto LABEL_50;
    }

    CC_SHA1_Init(&c);
    if (!stream)
    {
LABEL_25:
      if (CFReadStreamGetStatus(stream) != kCFStreamStatusAtEnd)
      {
        uint64_t v14 = 0LL;
        do
        {
          if (!v14) {
            uint64_t v14 = (UInt8 *)malloc(0x1000uLL);
          }
          CFIndex v15 = CFReadStreamRead(stream, v14, 4096LL);
          if (v15 >= 1)
          {
            CC_SHA1_Update(&c, v14, v15);
          }
        }

        while (CFReadStreamGetStatus(stream) != kCFStreamStatusAtEnd);
        if (v14) {
          free(v14);
        }
      }

      CC_SHA1_Final(buffer, &c);
      goto LABEL_36;
    }

id sub_10003A590(const __CFData *a1, uint64_t a2)
{
  if (!a1) {
    return 0LL;
  }
  if (!CFDataGetLength(a1)) {
    return 0LL;
  }
  if (!CFDataGetLength(a1)) {
    return 0LL;
  }
  id v4 = (const __CFData *)sub_10003A910(a1, 0LL);
  if (!v4) {
    return 0LL;
  }
  unsigned int v5 = v4;
  if (!CFDataGetLength(v4))
  {
    CFRelease(v5);
    return 0LL;
  }

  int valuePtr = sub_10003A9EC();
  CFNumberRef v6 = CFNumberCreate(0LL, kCFNumberIntType, &valuePtr);
  *(_OWORD *)keys = *(_OWORD *)off_10034BBF0;
  __int128 v17 = *(_OWORD *)&off_10034BC00;
  values[0] = v5;
  values[1] = v6;
  values[2] = a1;
  values[3] = 0LL;
  CFDictionaryRef v7 = CFDictionaryCreate( 0LL,  (const void **)keys,  (const void **)values,  3LL,  &kCFTypeDictionaryKeyCallBacks,  &kCFTypeDictionaryValueCallBacks);
  if (v7)
  {
    CFDictionaryRef v8 = v7;
    uint64_t v9 = CFWriteStreamCreateWithAllocatedBuffers(kCFAllocatorDefault, kCFAllocatorDefault);
    if (v9)
    {
      uint64_t v10 = v9;
      if (CFWriteStreamOpen(v9))
      {
        if (CFPropertyListWrite(v8, v10, kCFPropertyListBinaryFormat_v1_0, 0LL, 0LL) < 1) {
          __int128 v11 = 0LL;
        }
        else {
          __int128 v11 = (void *)CFWriteStreamCopyProperty(v10, kCFStreamPropertyDataWritten);
        }
        CFWriteStreamClose(v10);
      }

      else
      {
        __int128 v11 = 0LL;
      }

      CFRelease(v10);
    }

    else
    {
      __int128 v11 = 0LL;
    }

    CFRelease(v8);
  }

  else
  {
    __int128 v11 = 0LL;
  }

  if (v6) {
    CFRelease(v6);
  }
  CFRelease(v5);
  if (!v11) {
    return 0LL;
  }
  if (CFDataGetLength((CFDataRef)v11)) {
    id v12 = [v11 writeToFile:a2 options:1 error:0];
  }
  else {
    id v12 = 0LL;
  }
  CFRelease(v11);
  return v12;
}

CFDictionaryRef sub_10003A780(uint64_t a1)
{
  id v1 = -[NSData initWithContentsOfFile:options:error:]( objc_alloc(&OBJC_CLASS___NSData),  "initWithContentsOfFile:options:error:",  a1,  0LL,  0LL);
  if (v1)
  {
    int v2 = v1;
    if (CFDataGetLength(v1))
    {
      CFDataRef v3 = (const __CFDictionary *)CFPropertyListCreateWithData(0LL, v2, 0LL, 0LL, 0LL);
      id v4 = v3;
      if (!v3)
      {
LABEL_15:
        CFRelease(v2);
        return v4;
      }

      Value = CFDictionaryGetValue(v3, @"cbk");
      CFNumberRef v6 = CFDictionaryGetValue(v4, @"data");
      if (Value) {
        BOOL v7 = v6 == 0LL;
      }
      else {
        BOOL v7 = 1;
      }
      if (v7)
      {
        CFRelease(v4);
      }

      else
      {
        CFDictionaryRef v8 = (const __CFData *)CFRetain(v6);
        uint64_t v9 = (const __CFData *)CFRetain(Value);
        CFRelease(v4);
        if (v8)
        {
          BytePtr = CFDataGetBytePtr(v8);
          CFIndex Length = CFDataGetLength(v8);
          id v12 = CFReadStreamCreateWithBytesNoCopy(0LL, BytePtr, Length, kCFAllocatorNull);
          uint64_t v14 = sub_100039FE8();
          if (sub_10003A188(2, v12, 0LL, 0LL, v9, v14)) {
            id v4 = (const __CFDictionary *)CFRetain(v8);
          }
          else {
            id v4 = 0LL;
          }
          sub_10003A148(&v14);
          if (v12) {
            CFRelease(v12);
          }
          if (v9) {
            CFRelease(v9);
          }
          CFRelease(v8);
          goto LABEL_15;
        }
      }
    }

    id v4 = 0LL;
    goto LABEL_15;
  }

  return 0LL;
}

CFTypeRef sub_10003A910(CFDataRef theData, void *a2)
{
  id v4 = a2;
  if (!a2) {
    id v4 = sub_100039FE8();
  }
  CFTypeRef cf = 0LL;
  uint64_t v10 = v4;
  BytePtr = CFDataGetBytePtr(theData);
  if (theData) {
    CFIndex Length = CFDataGetLength(theData);
  }
  else {
    CFIndex Length = 0LL;
  }
  BOOL v7 = CFReadStreamCreateWithBytesNoCopy(0LL, BytePtr, Length, kCFAllocatorNull);
  if (sub_10003A188(1, v7, 0LL, (CFDataRef *)&cf, 0LL, v4))
  {
    if (!v7) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }

  if (cf) {
    CFRelease(cf);
  }
  CFTypeRef cf = 0LL;
  if (v7) {
LABEL_8:
  }
    CFRelease(v7);
LABEL_9:
  if (v4 != a2) {
    sub_10003A148(&v10);
  }
  return cf;
}

uint64_t sub_10003A9EC()
{
  uint64_t result = dword_1003A2108;
  if (dword_1003A2108 == -1)
  {
    unsigned int valuePtr = 0;
    id v1 = (const __CFNumber *)MCCopyCheckpointValue(@"DBVersion");
    if (v1)
    {
      int v2 = v1;
      CFNumberGetValue(v1, kCFNumberIntType, &valuePtr);
      if (valuePtr < 5) {
        int v3 = 2;
      }
      else {
        int v3 = 3;
      }
      dword_1003A2108 = v3;
      CFRelease(v2);
      return dword_1003A2108;
    }

    else
    {
      uint64_t result = 2LL;
      dword_1003A2108 = 2;
    }
  }

  return result;
}

uint64_t sub_10003AA6C(int a1)
{
  return 46LL;
}

void sub_10003B0EC(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
}

uint64_t sub_10003C27C(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if (xpc_get_type(v4) == (xpc_type_t)&_xpc_type_dictionary)
  {
    id v5 = -[SKProduct initWithXPCEncoding:](objc_alloc(&OBJC_CLASS___SKProduct), "initWithXPCEncoding:", v4);
    id v6 = v5;
    if (v5)
    {
      BOOL v7 = (void *)objc_claimAutoreleasedReturnValue(-[SKProduct _localeIdentifier](v5, "_localeIdentifier"));
      if (v7)
      {
        CFDictionaryRef v8 = (NSLocale *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) objectForKey:v7]);
        if (!v8)
        {
          CFDictionaryRef v8 = -[NSLocale initWithLocaleIdentifier:]( objc_alloc(&OBJC_CLASS___NSLocale),  "initWithLocaleIdentifier:",  v7);
          if (v8) {
            [*(id *)(a1 + 32) setObject:v8 forKey:v7];
          }
        }

        -[SKProduct _setPriceLocale:](v6, "_setPriceLocale:", v8);
        -[SKProduct _setLocaleIdentifier:](v6, "_setLocaleIdentifier:", 0LL);
      }

      [*(id *)(a1 + 40) addObject:v6];
    }
  }

  return 1LL;
}

uint64_t sub_10003C738(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = -[SKProductDiscount initWithXPCEncoding:]( objc_alloc(&OBJC_CLASS___SKProductDiscount),  "initWithXPCEncoding:",  v4);

  [*(id *)(a1 + 32) addObject:v5];
  return 1LL;
}

LABEL_47:
  -[LoadMatchStatusOperation lock](self, "lock", v37);
  self->_matchStatus = v17;
  -[LoadMatchStatusOperation unlock](self, "unlock");
  -[LoadMatchStatusOperation setError:](self, "setError:", v39);
  -[LoadMatchStatusOperation setSuccess:](self, "setSuccess:", v27);
}

  return v48;
}

  for (j = 1LL; j != -1; --j)

  _Block_object_dispose(&v50, 8);
  return 1LL;
}
}

void sub_10003DFF8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
}

uint64_t sub_10003E040(void *a1, void *a2)
{
  id v4 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  -[NSMutableDictionary setObject:forKey:](v4, "setObject:forKey:", a1[4], @"bundle_id");
  -[NSMutableDictionary setObject:forKey:]( v4,  "setObject:forKey:",  +[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", a1[7]),  @"download_id");
  -[NSMutableDictionary setObject:forKey:](v4, "setObject:forKey:", a1[5], @"expected_phase");
  -[NSMutableDictionary setObject:forKey:](v4, "setObject:forKey:", &off_10036D650, @"retry_count");
  +[NSDate timeIntervalSinceReferenceDate](&OBJC_CLASS___NSDate, "timeIntervalSinceReferenceDate");
  -[NSMutableDictionary setObject:forKey:]( v4,  "setObject:forKey:",  +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", (int)v5),  @"time_updated");
  id v6 = -[ApplicationWorkspaceState initWithPropertyValues:inDatabase:]( [ApplicationWorkspaceState alloc],  "initWithPropertyValues:inDatabase:",  v4,  [a2 database]);
  *(_BYTE *)(*(void *)(a1[6] + 8LL) + 24LL) = v6 != 0LL;

  return *(unsigned __int8 *)(*(void *)(a1[6] + 8LL) + 24LL);
}

uint64_t sub_10003E170(uint64_t a1)
{
  uint64_t v2 = a1;
  if (!qword_1003A3258[a1])
  {
    int v3 = -[PersistentStoreConfiguration initWithStoreType:]( objc_alloc(&OBJC_CLASS___PersistentStoreConfiguration),  "initWithStoreType:",  a1);
    qword_1003A3258[v2] = -[PersistentStore initWithConfiguration:error:]( objc_alloc(&OBJC_CLASS___PersistentStore),  "initWithConfiguration:error:",  v3,  0LL);
  }

  pthread_mutex_unlock(&stru_1003A2110);
  return qword_1003A3258[v2];
}

uint64_t sub_10003E244(void *a1)
{
  id v39 = 0LL;
  unsigned int v32 = [a1 save:&v39];
  if ((v32 & 1) == 0)
  {
    id v2 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v2) {
      id v2 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v3 = [v2 shouldLog];
    else {
      unsigned int v4 = v3;
    }
    double v5 = (os_log_s *)[v2 OSLogObject];
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v6 = v4;
    }
    else {
      uint64_t v6 = v4 & 2;
    }
    if ((_DWORD)v6)
    {
      int v40 = 134218242;
      id v41 = a1;
      __int16 v42 = 2112;
      id v43 = v39;
      uint64_t v7 = _os_log_send_and_compose_impl( v6,  0LL,  0LL,  0LL,  &_mh_execute_header,  v5,  0LL,  "Could not save modal context: %p: %@",  &v40,  22);
      if (v7)
      {
        CFDictionaryRef v8 = (void *)v7;
        uint64_t v9 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v7, 4LL);
        free(v8);
        CFDictionaryRef v29 = v9;
        SSFileLog(v2, @"%@");
      }
    }

    __int128 v35 = 0u;
    __int128 v36 = 0u;
    __int128 v37 = 0u;
    __int128 v38 = 0u;
    id obj = objc_msgSend(objc_msgSend(v39, "userInfo", v29), "objectForKey:", NSDetailedErrorsKey);
    id v10 = [obj countByEnumeratingWithState:&v35 objects:v48 count:16];
    __int128 v11 = &ACSLocateCachingServer_ptr;
    if (v10)
    {
      id v12 = v10;
      uint64_t v34 = *(void *)v36;
      do
      {
        for (uint64_t i = 0LL; i != v12; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v36 != v34) {
            objc_enumerationMutation(obj);
          }
          uint64_t v14 = *(void **)(*((void *)&v35 + 1) + 8LL * (void)i);
          id v15 = objc_msgSend(v14, "userInfo", v30);
          id v16 = [v11[459] sharedDaemonConfig];
          if (!v16) {
            id v16 = [v11[459] sharedConfig];
          }
          unsigned int v17 = [v16 shouldLog];
          else {
            unsigned int v18 = v17;
          }
          __int128 v19 = (os_log_s *)[v16 OSLogObject];
          if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT)) {
            uint64_t v20 = v18;
          }
          else {
            uint64_t v20 = v18 & 2;
          }
          if ((_DWORD)v20)
          {
            id v21 = [v14 code];
            id v22 = [v15 objectForKey:NSValidationKeyErrorKey];
            id v23 = [v15 objectForKey:NSValidationValueErrorKey];
            id v24 = [v15 objectForKey:NSValidationObjectErrorKey];
            int v40 = 134218754;
            id v41 = v21;
            __int16 v42 = 2112;
            id v43 = v22;
            __int16 v44 = 2112;
            id v45 = v23;
            __int128 v11 = &ACSLocateCachingServer_ptr;
            __int16 v46 = 2112;
            id v47 = v24;
            LODWORD(v31) = 42;
            uint64_t v25 = _os_log_send_and_compose_impl( v20,  0LL,  0LL,  0LL,  &_mh_execute_header,  v19,  0LL,  "-- %ld, %@, %@, %@",  &v40,  v31);
            if (v25)
            {
              CFDataRef v26 = (void *)v25;
              int v27 = +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v25,  4LL);
              free(v26);
              uint64_t v30 = v27;
              SSFileLog(v16, @"%@");
            }
          }
        }

        id v12 = [obj countByEnumeratingWithState:&v35 objects:v48 count:16];
      }

      while (v12);
    }
  }

  return v32;
}

void sub_10003E83C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
}

void sub_10003E86C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _disconnect];
}

void sub_10003E898(uint64_t a1, void *a2, void *a3)
{
  xpc_object_t xdict = a2;
  id v5 = a3;
  if (xpc_dictionary_get_int64(xdict, "0") != -1)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    [WeakRetained _handleMessage:xdict connection:v5];
  }
}

uint64_t sub_10003EA18(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_10003EA28(uint64_t a1)
{
}

void sub_10003EA30(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 8LL));
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8LL);
  unsigned int v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = WeakRetained;
}

id sub_10003EAE4(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 48) sendMessage:*(void *)(a1 + 40)];
}

id sub_10003EB6C(uint64_t a1)
{
  return objc_storeWeak((id *)(*(void *)(a1 + 32) + 8LL), *(id *)(a1 + 40));
}

void sub_10003EBD0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 8LL));
  if ((objc_opt_respondsToSelector(WeakRetained, "alertProxyDidCancel:") & 1) != 0)
  {
    uint64_t v3 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 16LL);
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472LL;
    v6[2] = sub_10003EC74;
    v6[3] = &unk_10034AD58;
    id v4 = WeakRetained;
    uint64_t v5 = *(void *)(a1 + 32);
    id v7 = v4;
    uint64_t v8 = v5;
    dispatch_async(v3, v6);
  }
}

id sub_10003EC74(uint64_t a1)
{
  return [*(id *)(a1 + 32) alertProxyDidCancel:*(void *)(a1 + 40)];
}

void sub_10003ED30(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 8LL));
  if ((objc_opt_respondsToSelector(WeakRetained, "alertProxy:didReceiveMessage:") & 1) != 0)
  {
    uint64_t v3 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 16LL);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_10003EDE4;
    block[3] = &unk_10034BCE8;
    id v4 = WeakRetained;
    uint64_t v5 = *(void *)(a1 + 32);
    uint64_t v6 = *(void **)(a1 + 40);
    id v8 = v4;
    uint64_t v9 = v5;
    id v10 = v6;
    dispatch_async(v3, block);
  }
}

id sub_10003EDE4(uint64_t a1)
{
  return [*(id *)(a1 + 32) alertProxy:*(void *)(a1 + 40) didReceiveMessage:*(void *)(a1 + 48)];
}

void sub_10003FF48( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, char a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, char a31, uint64_t a32, uint64_t a33, uint64_t a34, char a35)
{
}

uint64_t sub_10003FFF4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_100040004(uint64_t a1)
{
}

void sub_10004000C(void *a1, uint64_t a2, void *a3, char a4, void *a5)
{
  id v9 = a3;
  id v10 = a5;
  __int128 v11 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v11) {
    __int128 v11 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v12 = [v11 shouldLog];
  else {
    unsigned int v13 = v12;
  }
  uint64_t v14 = (os_log_s *)objc_claimAutoreleasedReturnValue([v11 OSLogObject]);
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v15 = v13;
  }
  else {
    uint64_t v15 = v13 & 2;
  }
  if ((_DWORD)v15)
  {
    uint64_t v16 = a1[4];
    *(_DWORD *)__int16 v44 = 138543362;
    *(void *)&v44[4] = v16;
    unsigned int v17 = (void *)_os_log_send_and_compose_impl( v15,  0LL,  0LL,  0LL,  &_mh_execute_header,  v14,  0LL,  "%{public}@: [PW] DisplayPaymentSheetOperation did complete",  v44,  12);

    if (!v17) {
      goto LABEL_13;
    }
    uint64_t v14 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v17,  4LL));
    free(v17);
    __int16 v42 = v14;
    SSFileLog(v11, @"%@");
  }

LABEL_13:
  if (v10)
  {
    objc_storeStrong((id *)(*(void *)(a1[5] + 8LL) + 40LL), a5);
    unsigned int v18 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v18) {
      unsigned int v18 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v19 = objc_msgSend(v18, "shouldLog", v42);
    else {
      unsigned int v20 = v19;
    }
    id v21 = (os_log_s *)objc_claimAutoreleasedReturnValue([v18 OSLogObject]);
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
      uint64_t v22 = v20;
    }
    else {
      uint64_t v22 = v20 & 2;
    }
    if (!(_DWORD)v22) {
      goto LABEL_50;
    }
    uint64_t v23 = a1[4];
    *(_DWORD *)__int16 v44 = 138543618;
    *(void *)&v44[4] = v23;
    *(_WORD *)&v44[12] = 2112;
    *(void *)&v44[14] = v10;
    LODWORD(v43) = 22;
    id v24 = "%{public}@: [PW] Payment sheet authorized failed with error: %@";
    goto LABEL_24;
  }

  if ((a4 & 1) == 0)
  {
    *(_BYTE *)(*(void *)(a1[6] + 8LL) + 24LL) = 1;
    uint64_t v30 = ISError(16LL, 0LL, 0LL);
    uint64_t v31 = objc_claimAutoreleasedReturnValue(v30);
    uint64_t v32 = *(void *)(a1[5] + 8LL);
    __int16 v33 = *(void **)(v32 + 40);
    *(void *)(v32 + 40) = v31;

    unsigned int v18 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v18) {
      unsigned int v18 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v34 = objc_msgSend(v18, "shouldLog", v42);
    else {
      unsigned int v35 = v34;
    }
    id v21 = (os_log_s *)objc_claimAutoreleasedReturnValue([v18 OSLogObject]);
    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v22 = v35;
    }
    else {
      uint64_t v22 = v35 & 2;
    }
    if (!(_DWORD)v22) {
      goto LABEL_50;
    }
    uint64_t v36 = a1[4];
    *(_DWORD *)__int16 v44 = 138543362;
    *(void *)&v44[4] = v36;
    LODWORD(v43) = 12;
    id v24 = "%{public}@: [PW] Payment sheet did cancel";
LABEL_47:
    uint64_t v25 = v21;
    uint64_t v26 = 0LL;
    goto LABEL_48;
  }

  if (v9)
  {
    objc_storeStrong((id *)(*(void *)(a1[7] + 8LL) + 40LL), a3);
    unsigned int v18 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v18) {
      unsigned int v18 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v27 = objc_msgSend(v18, "shouldLog", v42);
    else {
      unsigned int v28 = v27;
    }
    id v21 = (os_log_s *)objc_claimAutoreleasedReturnValue([v18 OSLogObject]);
    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v22 = v28;
    }
    else {
      uint64_t v22 = v28 & 2;
    }
    if (!(_DWORD)v22) {
      goto LABEL_50;
    }
    uint64_t v29 = a1[4];
    *(_DWORD *)__int16 v44 = 138543362;
    *(void *)&v44[4] = v29;
    LODWORD(v43) = 12;
    id v24 = "%{public}@: [PW] Payment sheet did authorize payment with password";
    goto LABEL_47;
  }

  unsigned int v18 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v18) {
    unsigned int v18 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v39 = objc_msgSend(v18, "shouldLog", v42);
  else {
    unsigned int v40 = v39;
  }
  id v21 = (os_log_s *)objc_claimAutoreleasedReturnValue([v18 OSLogObject]);
  if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
    uint64_t v22 = v40;
  }
  else {
    uint64_t v22 = v40 & 2;
  }
  if (!(_DWORD)v22) {
    goto LABEL_50;
  }
  uint64_t v41 = a1[4];
  *(_DWORD *)__int16 v44 = 138543362;
  *(void *)&v44[4] = v41;
  LODWORD(v43) = 12;
  id v24 = "%{public}@: [PW] Payment sheet encountered an unknown error";
LABEL_24:
  uint64_t v25 = v21;
  uint64_t v26 = 16LL;
LABEL_48:
  __int128 v37 = (void *)_os_log_send_and_compose_impl( v22,  0LL,  0LL,  0LL,  &_mh_execute_header,  v25,  v26,  v24,  v44,  v43,  *(_OWORD *)v44,  *(void *)&v44[16]);

  if (!v37) {
    goto LABEL_51;
  }
  id v21 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v37,  4LL));
  free(v37);
  SSFileLog(v18, @"%@");
LABEL_50:

LABEL_51:
  if (v9) {
    char v38 = a4;
  }
  else {
    char v38 = 0;
  }
  *(_BYTE *)(*(void *)(a1[8] + 8LL) + 24LL) = v38;
}

void sub_100040714(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  id v2 = (void *)qword_1003A3268;
  qword_1003A3268 = (uint64_t)v1;
}

void sub_100040B24( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id *a11, id *a12, id *location)
{
}

id sub_100040B74(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = (id *)(a1 + 32);
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained(v4);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained _purgeable:v5 urgency:a2]);

  id v8 = v7;
  return v8;
}

id sub_100040BDC(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = (id *)(a1 + 32);
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained(v4);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained _purge:v5 urgency:a2]);

  id v8 = v7;
  return v8;
}

void sub_100040C44(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _cancelPurge];
}

id sub_100040C70(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = (id *)(a1 + 32);
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained(v4);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained _purge:v5 urgency:a2]);

  id v8 = v7;
  return v8;
}

id sub_100040DDC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _pushUpdatedAvailableStorage];
}

void sub_1000418FC(_Unwind_Exception *a1)
{
}

void sub_100041B80(_Unwind_Exception *a1)
{
}

void sub_100041DB8(_Unwind_Exception *a1)
{
}

uint64_t sub_100041F7C()
{
  if (qword_1003A3288 != -1) {
    dispatch_once(&qword_1003A3288, &stru_10034BDA8);
  }
  return qword_1003A3280;
}

void sub_1000421D8(uint64_t a1, uint64_t a2)
{
  id v5 = [*(id *)(a1 + 32) copyProductsResponse];
  sub_100146884(a2, "1", v5);
  uint64_t v4 = sub_100146878([*(id *)(a1 + 32) error]);
  sub_100146884(a2, "2", v4);
}

uint64_t sub_1000422AC(uint64_t a1, xpc_object_t xdict)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, xpc_object_t))(result + 16))(result, xdict);
  }
  return result;
}

uint64_t sub_100042364(uint64_t a1, xpc_object_t xdict)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, xpc_object_t))(result + 16))(result, xdict);
  }
  return result;
}

uint64_t sub_1000423B4(void *a1)
{
  if (!a1)
  {
LABEL_8:
    uint64_t v4 = sub_100146868();
    goto LABEL_9;
  }

  id v2 = [a1 domain];
  if ([v2 isEqualToString:ISErrorDomain])
  {
    id v3 = [a1 code];
    uint64_t v4 = sub_100146868();
    if (v3 == (id)16)
    {
      uint64_t v5 = 2LL;
      return ISErrorWithDomain(v4, v5, 0LL, 0LL);
    }

LABEL_9:
    uint64_t v5 = 0LL;
    return ISErrorWithDomain(v4, v5, 0LL, 0LL);
  }

  id v6 = [a1 domain];
  if ([v6 isEqualToString:SSServerErrorDomain])
  {
    switch((unint64_t)[a1 code])
    {
      case 0xF3CuLL:
        uint64_t v4 = sub_100146868();
        uint64_t v5 = 11LL;
        break;
      case 0xF3DuLL:
        uint64_t v4 = sub_100146868();
        uint64_t v5 = 14LL;
        break;
      case 0xF3EuLL:
        uint64_t v4 = sub_100146868();
        uint64_t v5 = 13LL;
        break;
      case 0xF3FuLL:
        uint64_t v4 = sub_100146868();
        uint64_t v5 = 12LL;
        break;
      default:
        goto LABEL_8;
    }

    return ISErrorWithDomain(v4, v5, 0LL, 0LL);
  }

  return (uint64_t)a1;
}

    unsigned int v13 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v13) {
      unsigned int v13 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    uint64_t v14 = [v13 shouldLog];
    else {
      LODWORD(v15) = v14;
    }
    uint64_t v16 = (os_log_s *)[v13 OSLogObject];
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v15 = v15;
    }
    else {
      v15 &= 2u;
    }
    if ((_DWORD)v15)
    {
      unsigned int v17 = objc_opt_class(self);
      unsigned int v39 = 138412546;
      unsigned int v40 = v17;
      uint64_t v41 = 2112;
      __int16 v42 = @"register-success";
      unsigned int v18 = (void *)_os_log_send_and_compose_impl( v15,  0LL,  0LL,  0LL,  &_mh_execute_header,  v16,  0LL,  "%@: No URL for %@",  &v39,  22);
      if (!v18)
      {
        unsigned int v12 = 0LL;
        goto LABEL_48;
      }

      unsigned int v19 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v18, 4LL);
      free(v18);
      __int128 v37 = v19;
      SSFileLog(v13, @"%@");
    }

    unsigned int v12 = 0LL;
    LODWORD(v1_Block_object_dispose((const void *)(v35 - 192), 8) = 0;
LABEL_48:

    goto LABEL_49;
  }

  unsigned int v20 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  if (!v20) {
    unsigned int v20 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  id v21 = [v20 shouldLog];
  else {
    LODWORD(v22) = v21;
  }
  uint64_t v23 = (os_log_s *)[v20 OSLogObject];
  if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO)) {
    uint64_t v22 = v22;
  }
  else {
    v22 &= 2u;
  }
  if ((_DWORD)v22)
  {
    unsigned int v39 = 138412290;
    unsigned int v40 = objc_opt_class(self);
    id v24 = _os_log_send_and_compose_impl( v22,  0LL,  0LL,  0LL,  &_mh_execute_header,  v23,  1LL,  "%@: No token to push",  &v39,  12);
    if (v24)
    {
      uint64_t v25 = (void *)v24;
      uint64_t v26 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v24, 4LL);
      free(v25);
      __int128 v37 = v26;
      SSFileLog(v20, @"%@");
    }
  }

  unsigned int v27 = 0LL;
  unsigned int v28 = 0LL;
LABEL_50:
  -[PostPushNotificationTokenOperation setError:](self, "setError:", v27, v37);
  -[PostPushNotificationTokenOperation setSuccess:](self, "setSuccess:", v28);
}

  __int128 v11 = (void *)objc_claimAutoreleasedReturnValue([v5 mediaAsset]);
  unsigned int v12 = (void *)objc_claimAutoreleasedReturnValue([v11 localPath]);

  unsigned int v13 = (void *)objc_claimAutoreleasedReturnValue(-[InstallEBookDownloadOperation _syncedBooksPath](self, "_syncedBooksPath"));
  LODWORD(v11) = [v12 hasPrefix:v13];

  if ((_DWORD)v11) {
    uint64_t v14 = v4;
  }
  else {
    uint64_t v14 = v3;
  }
  id v10 = v14;

LABEL_13:
  uint64_t v15 = v10;

  return v15;
}

  unsigned int v19 = 0LL;
LABEL_23:

  unsigned int v27 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v27) {
    unsigned int v27 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v28 = objc_msgSend(v27, "shouldLog", v71);
  else {
    LODWORD(v29) = v28;
  }
  uint64_t v30 = (os_log_s *)objc_claimAutoreleasedReturnValue([v27 OSLogObject]);
  if (os_log_type_enabled(v30, OS_LOG_TYPE_INFO)) {
    uint64_t v29 = v29;
  }
  else {
    v29 &= 2u;
  }
  if ((_DWORD)v29)
  {
    uint64_t v31 = (void *)objc_opt_class(self);
    __int16 v90 = 138412546;
    v91 = v31;
    v92 = 2112;
    v93 = v11;
    uint64_t v32 = v31;
    LODWORD(v74) = 22;
    __int16 v33 = (void *)_os_log_send_and_compose_impl( v29,  0LL,  0LL,  0LL,  &_mh_execute_header,  v30,  1LL,  "%@: App payloadDirectory: %@",  &v90,  v74);

    if (!v33) {
      goto LABEL_35;
    }
    uint64_t v30 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v33,  4LL));
    free(v33);
    id v72 = v30;
    SSFileLog(v27, @"%@");
  }

LABEL_35:
  uint64_t v80 = v11;
  __int128 v78 = v19;
  if (v19)
  {
    unsigned int v34 = (void *)objc_claimAutoreleasedReturnValue([v11 stringByAppendingPathComponent:v19]);
    unsigned int v35 = (os_log_s *)objc_claimAutoreleasedReturnValue([v34 stringByAppendingPathComponent:@"Info.plist"]);
    uint64_t v36 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v36) {
      uint64_t v36 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    __int128 v37 = objc_msgSend(v36, "shouldLog", v72);
    else {
      LODWORD(v3_Block_object_dispose((const void *)(v35 - 192), 8) = v37;
    }
    unsigned int v39 = (os_log_s *)objc_claimAutoreleasedReturnValue([v36 OSLogObject]);
    if (os_log_type_enabled(v39, OS_LOG_TYPE_INFO)) {
      char v38 = v38;
    }
    else {
      v38 &= 2u;
    }
    if ((_DWORD)v38)
    {
      unsigned int v40 = (void *)objc_opt_class(self);
      __int16 v90 = 138412546;
      v91 = v40;
      v92 = 2112;
      v93 = v35;
      uint64_t v41 = v40;
      LODWORD(v74) = 22;
      __int16 v42 = (void *)_os_log_send_and_compose_impl( v38,  0LL,  0LL,  0LL,  &_mh_execute_header,  v39,  1LL,  "%@: Info.plist path: %@",  &v90,  v74);

      if (!v42) {
        goto LABEL_48;
      }
      unsigned int v39 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v42,  4LL));
      free(v42);
      __int128 v73 = v39;
      SSFileLog(v36, @"%@");
    }

LABEL_48:
    uint64_t v43 = -[NSDictionary initWithContentsOfFile:]( objc_alloc(&OBJC_CLASS___NSDictionary),  "initWithContentsOfFile:",  v35);
    __int16 v44 = v43;
    if (!v43)
    {
      id v45 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
      if (!v45) {
        id v45 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      uint64_t v66 = objc_msgSend(v45, "shouldLog", v73);
      else {
        LODWORD(v54) = v66;
      }
      __int16 v46 = (os_log_s *)objc_claimAutoreleasedReturnValue([v45 OSLogObject]);
      if (os_log_type_enabled(v46, OS_LOG_TYPE_ERROR)) {
        unint64_t v54 = v54;
      }
      else {
        v54 &= 2u;
      }
      if ((_DWORD)v54)
      {
        __int128 v67 = (void *)objc_opt_class(self);
        bundleIdentifier = self->_bundleIdentifier;
        __int16 v90 = 138412546;
        v91 = v67;
        v92 = 2112;
        v93 = bundleIdentifier;
        __int128 v69 = v67;
        LODWORD(v74) = 22;
        unint64_t v54 = _os_log_send_and_compose_impl( v54,  0LL,  0LL,  0LL,  &_mh_execute_header,  v46,  16LL,  "%@: Unable to load application meta data to verify bundleIdentifier: %@",  &v90,  v74);

        if (!v54)
        {
LABEL_100:

          goto LABEL_101;
        }

        __int16 v46 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v54,  4LL));
        free((void *)v54);
        SSFileLog(v45, @"%@");
        LOBYTE(v54) = 0;
      }

      goto LABEL_99;
    }

    id v45 = (void *)objc_claimAutoreleasedReturnValue(-[NSDictionary objectForKey:](v43, "objectForKey:", kCFBundleVersionKey));
    __int16 v46 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[NSDictionary objectForKey:](v44, "objectForKey:", kCFBundleIdentifierKey));
    __int128 v77 = v8;
    if ([v8 isEqualToString:v45])
    {
LABEL_63:
      LOBYTE(v54) = objc_msgSend(v7, "isEqualToString:", v46, v73);
      if ((v54 & 1) == 0)
      {
        __int128 v76 = v7;
        uint64_t v55 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
        if (!v55) {
          uint64_t v55 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
        }
        uint64_t v56 = [v55 shouldLog];
        else {
          LODWORD(v57) = v56;
        }
        __int128 v58 = (os_log_s *)objc_claimAutoreleasedReturnValue([v55 OSLogObject]);
        if (os_log_type_enabled(v58, OS_LOG_TYPE_ERROR)) {
          __int128 v57 = v57;
        }
        else {
          v57 &= 2u;
        }
        if ((_DWORD)v57)
        {
          unsigned int v59 = (void *)objc_opt_class(self);
          __int16 v90 = 138412802;
          v91 = v59;
          v92 = 2112;
          v93 = v76;
          v94 = 2112;
          v95 = v46;
          __int16 v84 = v59;
          LODWORD(v74) = 32;
          id v60 = (void *)_os_log_send_and_compose_impl( v57,  0LL,  0LL,  0LL,  &_mh_execute_header,  v58,  16LL,  "%@: Failed bundleIdentifier: %@ does not match expected bundleIdentifier: %@",  &v90,  v74);

          if (!v60)
          {
LABEL_76:

            id v7 = v76;
            id v8 = v77;
            goto LABEL_99;
          }

          __int128 v58 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v60,  4LL));
          free(v60);
          SSFileLog(v55, @"%@");
        }

        goto LABEL_76;
      }
}

        goto LABEL_30;
      }

      id v24 = (void *)objc_claimAutoreleasedReturnValue([v12 applicationState]);
      uint64_t v25 = [v24 isInstalled];

      if (v25)
      {
        uint64_t v14 = objc_alloc_init(&OBJC_CLASS___SSSoftwareLibraryItem);
        objc_msgSend(v14, "setPlaceholder:", objc_msgSend(v12, "isPlaceholder"));
        uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue([v12 bundleIdentifier]);
        [v14 _setValue:v26 forProperty:v59];

        unsigned int v27 = (void *)objc_claimAutoreleasedReturnValue([v12 bundleVersion]);
        [v14 _setValue:v27 forProperty:v58];

        unsigned int v13 = v7;
        uint64_t v5 = &ACSLocateCachingServer_ptr;
        if (!v14) {
          goto LABEL_29;
        }
LABEL_8:
        -[NSMutableArray addObject:](v60, "addObject:", v14, v56);
        id v7 = v13;
        goto LABEL_9;
      }

      uint64_t v5 = &ACSLocateCachingServer_ptr;
LABEL_30:

      objc_autoreleasePoolPop(v10);
      id v8 = (char *)v8 + 1;
    }

    while (v6 != v8);
    __int16 v33 = -[NSArray countByEnumeratingWithState:objects:count:]( obj,  "countByEnumeratingWithState:objects:count:",  &v72,  v83,  16LL);
    id v6 = v33;
  }

  while (v33);
LABEL_49:

  unsigned int v34 = v62;
  if (!-[NSArray count](v62->_bundleIDs, "count"))
  {
    unsigned int v35 = (void *)objc_claimAutoreleasedReturnValue([v4[459] sharedDaemonConfig]);
    if (!v35) {
      unsigned int v35 = (void *)objc_claimAutoreleasedReturnValue([v4[459] sharedConfig]);
    }
    uint64_t v36 = objc_msgSend(v35, "shouldLog", v56);
    else {
      __int128 v37 = v36;
    }
    char v38 = (os_log_s *)objc_claimAutoreleasedReturnValue([v35 OSLogObject]);
    if (os_log_type_enabled(v38, OS_LOG_TYPE_DEBUG)) {
      unsigned int v39 = v37;
    }
    else {
      unsigned int v39 = v37 & 2;
    }
    if ((_DWORD)v39)
    {
      unsigned int v40 = (void *)objc_opt_class(v62);
      __int128 v77 = 138543362;
      __int128 v78 = v40;
      uint64_t v41 = v40;
      LODWORD(v57) = 12;
      __int16 v42 = (void *)_os_log_send_and_compose_impl( v39,  0LL,  0LL,  0LL,  &_mh_execute_header,  v38,  2LL,  "%{public}@: The array of bundle identifiers is empty; enumerating all installed applications…",
                      &v77,
                      v57);

      uint64_t v43 = &ACSLocateCachingServer_ptr;
      if (v42)
      {
        char v38 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v42,  4LL));
        free(v42);
        uint64_t v56 = v38;
        SSFileLog(v35, @"%@");
        goto LABEL_62;
      }
    }

    else
    {
      uint64_t v43 = &ACSLocateCachingServer_ptr;
LABEL_62:
    }

    __int16 v44 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    id v45 = (void *)objc_claimAutoreleasedReturnValue([v43[337] enumeratorWithOptions:192]);
    uint64_t v66 = 0u;
    __int128 v67 = 0u;
    __int128 v68 = 0u;
    __int128 v69 = 0u;
    __int16 v46 = [v45 countByEnumeratingWithState:&v66 objects:v76 count:16];
    if (!v46) {
      goto LABEL_76;
    }
    id v47 = v46;
    id v48 = *(void *)v67;
    while (2)
    {
      uint64_t v49 = 0LL;
LABEL_66:
      if (*(void *)v67 != v48) {
        objc_enumerationMutation(v45);
      }
      uint64_t v50 = *(void **)(*((void *)&v66 + 1) + 8 * v49);
      id v51 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v50, "iTunesMetadata", v56));
      if ([v51 storeItemIdentifier])
      {
        id v52 = (void *)objc_claimAutoreleasedReturnValue([v50 applicationState]);
        if ([v52 isInstalled])
        {

          goto LABEL_73;
        }

        id v53 = [v50 isPlaceholder];

        if (v53) {
LABEL_73:
        }
          -[NSMutableArray addObject:](v44, "addObject:", v50);
      }

      else
      {
      }

      if (v47 == (id)++v49)
      {
        id v47 = [v45 countByEnumeratingWithState:&v66 objects:v76 count:16];
        if (!v47)
        {
LABEL_76:
          v64[0] = _NSConcreteStackBlock;
          v64[1] = 3221225472LL;
          v64[2] = sub_10014A54C;
          v64[3] = &unk_10034FB18;
          unsigned int v34 = v62;
          v64[4] = v62;
          v65 = v60;
          -[NSMutableArray enumerateObjectsUsingBlock:](v44, "enumerateObjectsUsingBlock:", v64);

          break;
        }

        continue;
      }

      goto LABEL_66;
    }
  }

  -[SoftwareLibraryLookupOperation lock](v34, "lock", v56);
  unint64_t v54 = (NSArray *)-[NSMutableArray copy](v60, "copy");
  softwareLibraryItems = v34->_softwareLibraryItems;
  v34->_softwareLibraryItems = v54;

  -[SoftwareLibraryLookupOperation unlock](v34, "unlock");
}

void sub_1000424A4(id a1)
{
  qword_1003A3280 = objc_alloc_init(&OBJC_CLASS___ISOperationQueue);
  [(id)qword_1003A3280 setMaxConcurrentOperationCount:3];
  [(id)qword_1003A3280 setAdjustsMaxConcurrentOperationCount:0];
  id v1 = +[Daemon daemon](&OBJC_CLASS___Daemon, "daemon");
  [v1 addKeepAliveOperationQueue:qword_1003A3280];
}

void sub_100044348(_Unwind_Exception *a1)
{
}

void sub_100044394(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  id WeakRetained = (dispatch_queue_s **)objc_loadWeakRetained((id *)(a1 + 56));
  __int128 v11 = WeakRetained;
  if (WeakRetained)
  {
    unsigned int v12 = WeakRetained[2];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_10004449C;
    block[3] = &unk_10034BDD0;
    id v19 = v7;
    unsigned int v13 = v11;
    uint64_t v14 = *(void *)(a1 + 32);
    unsigned int v20 = v13;
    uint64_t v21 = v14;
    id v15 = v8;
    uint64_t v16 = *(void *)(a1 + 40);
    unsigned int v17 = *(void **)(a1 + 48);
    id v22 = v15;
    uint64_t v23 = v16;
    id v24 = v17;
    id v25 = v9;
    dispatch_async(v12, block);
  }
}

id sub_10004449C(uint64_t a1)
{
  if (*(void *)(a1 + 32)) {
    return objc_msgSend(*(id *)(a1 + 40), "_addUploadTaskWithRequest:configuration:URLRequest:", *(void *)(a1 + 48));
  }
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v2) {
    id v2 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v3 = [v2 shouldLog];
  else {
    LODWORD(v4) = v3;
  }
  uint64_t v5 = (os_log_s *)objc_claimAutoreleasedReturnValue([v2 OSLogObject]);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v4 = v4;
  }
  else {
    v4 &= 2u;
  }
  if (!(_DWORD)v4) {
    goto LABEL_14;
  }
  id v6 = (void *)objc_opt_class(*(void *)(a1 + 64));
  uint64_t v7 = *(void *)(a1 + 72);
  uint64_t v8 = *(void *)(a1 + 80);
  int v12 = 138412802;
  unsigned int v13 = v6;
  __int16 v14 = 2112;
  uint64_t v15 = v7;
  __int16 v16 = 2112;
  uint64_t v17 = v8;
  id v9 = v6;
  id v10 = (void *)_os_log_send_and_compose_impl( v4,  0LL,  0LL,  0LL,  &_mh_execute_header,  v5,  0LL,  "%@: Preparation failed for upload: %@, error: %@",  &v12,  32);

  if (v10)
  {
    uint64_t v5 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v10,  4LL));
    free(v10);
    SSFileLog(v2, @"%@");
LABEL_14:
  }

  return [*(id *)(a1 + 40) _failUploadWithDatabaseID:*(void *)(a1 + 72) error:*(void *)(a1 + 80)];
}

void sub_1000446CC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v7) {
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v8 = [v7 shouldLog];
  else {
    LODWORD(v9) = v8;
  }
  id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue([v7 OSLogObject]);
  if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO)) {
    uint64_t v9 = v9;
  }
  else {
    v9 &= 2u;
  }
  if (!(_DWORD)v9) {
    goto LABEL_12;
  }
  __int128 v11 = (void *)objc_opt_class(*(void *)(a1 + 32));
  id v12 = v11;
  int v15 = 138412802;
  __int16 v16 = v11;
  __int16 v17 = 2048;
  id v18 = [v5 taskIdentifier];
  __int16 v19 = 2112;
  id v20 = v6;
  unsigned int v13 = (void *)_os_log_send_and_compose_impl( v9,  0LL,  0LL,  0LL,  &_mh_execute_header,  v10,  1LL,  "%@: Canceling task: %lu, to cancel upload: %@",  &v15,  32);

  if (v13)
  {
    id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v13,  4LL));
    free(v13);
    SSFileLog(v7, @"%@");
LABEL_12:
  }

  __int16 v14 = -[NSNumber initWithInteger:](objc_alloc(&OBJC_CLASS___NSNumber), "initWithInteger:", 0LL);
  objc_setAssociatedObject(v5, "com.apple.itunesstored.upload.stop-reason", v14, (void *)1);
  [v5 cancel];
}

void sub_100044A1C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v7) {
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v8 = [v7 shouldLog];
  else {
    LODWORD(v9) = v8;
  }
  id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue([v7 OSLogObject]);
  if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO)) {
    uint64_t v9 = v9;
  }
  else {
    v9 &= 2u;
  }
  if (!(_DWORD)v9) {
    goto LABEL_12;
  }
  __int128 v11 = (void *)objc_opt_class(*(void *)(a1 + 32));
  id v12 = v11;
  int v15 = 138412802;
  __int16 v16 = v11;
  __int16 v17 = 2048;
  id v18 = [v5 taskIdentifier];
  __int16 v19 = 2112;
  id v20 = v6;
  unsigned int v13 = (void *)_os_log_send_and_compose_impl( v9,  0LL,  0LL,  0LL,  &_mh_execute_header,  v10,  1LL,  "%@: Canceling task: %lu, to pause upload: %@",  &v15,  32);

  if (v13)
  {
    id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v13,  4LL));
    free(v13);
    SSFileLog(v7, @"%@");
LABEL_12:
  }

  __int16 v14 = -[NSNumber initWithInteger:](objc_alloc(&OBJC_CLASS___NSNumber), "initWithInteger:", 1LL);
  objc_setAssociatedObject(v5, "com.apple.itunesstored.upload.stop-reason", v14, (void *)1);
  [v5 cancel];
}

void sub_1000450BC(uint64_t a1)
{
  id v2 = *(id *)(a1 + 32);
  if (!v2) {
    id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) error]);
  }
  id AssociatedObject = objc_getAssociatedObject(*(id *)(a1 + 48), "com.apple.itunesstored.upload.stop-reason");
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(AssociatedObject);
  if (!v4)
  {
    uint64_t v14 = objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    int v15 = (void *)v14;
    if (v2)
    {
      if (!v14) {
        int v15 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      unsigned int v16 = [v15 shouldLog];
      else {
        unsigned int v17 = v16;
      }
      id v18 = (os_log_s *)objc_claimAutoreleasedReturnValue([v15 OSLogObject]);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT)) {
        uint64_t v19 = v17;
      }
      else {
        uint64_t v19 = v17 & 2;
      }
      if ((_DWORD)v19)
      {
        id v20 = (void *)objc_opt_class(*(void *)(a1 + 56));
        uint64_t v21 = *(void *)(a1 + 64);
        id v22 = *(void **)(a1 + 72);
        id v36 = v20;
        uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue([v22 configuration]);
        id v24 = (void *)objc_claimAutoreleasedReturnValue([v23 identifier]);
        int v38 = 138413058;
        unsigned int v39 = v20;
        __int16 v40 = 2112;
        uint64_t v41 = v21;
        __int16 v42 = 2112;
        uint64_t v43 = v24;
        __int16 v44 = 2112;
        id v45 = v2;
        id v25 = (void *)_os_log_send_and_compose_impl( v19,  0LL,  0LL,  0LL,  &_mh_execute_header,  v18,  0LL,  "%@: Upload: %@ failed in session: %@ with error: %@",  &v38,  42);

        if (!v25)
        {
LABEL_32:

          [*(id *)(a1 + 56) _failUploadWithDatabaseID:*(void *)(a1 + 64) error:v2];
          goto LABEL_33;
        }

        id v18 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v25,  4LL));
        free(v25);
        SSFileLog(v15, @"%@");
      }

      goto LABEL_32;
    }

    if (!v14) {
      int v15 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v26 = [v15 shouldLog];
    else {
      unsigned int v27 = v26;
    }
    unsigned int v28 = (os_log_s *)objc_claimAutoreleasedReturnValue([v15 OSLogObject]);
    if (os_log_type_enabled(v28, OS_LOG_TYPE_INFO)) {
      uint64_t v29 = v27;
    }
    else {
      uint64_t v29 = v27 & 2;
    }
    if ((_DWORD)v29)
    {
      uint64_t v30 = (void *)objc_opt_class(*(void *)(a1 + 56));
      uint64_t v31 = *(void *)(a1 + 64);
      uint64_t v32 = *(void **)(a1 + 72);
      id v37 = v30;
      __int16 v33 = (void *)objc_claimAutoreleasedReturnValue([v32 configuration]);
      unsigned int v34 = (void *)objc_claimAutoreleasedReturnValue([v33 identifier]);
      int v38 = 138412802;
      unsigned int v39 = v30;
      __int16 v40 = 2112;
      uint64_t v41 = v31;
      __int16 v42 = 2112;
      uint64_t v43 = v34;
      unsigned int v35 = (void *)_os_log_send_and_compose_impl( v29,  0LL,  0LL,  0LL,  &_mh_execute_header,  v28,  1LL,  "%@: Upload: %@ finished in session: %@",  &v38,  32);

      if (!v35) {
        goto LABEL_46;
      }
      unsigned int v28 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v35,  4LL));
      free(v35);
      SSFileLog(v15, @"%@");
    }

LABEL_46:
    [*(id *)(a1 + 56) _cleanupForDatabaseID:*(void *)(a1 + 64)];
    unsigned int v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) delegate]);
    if ((objc_opt_respondsToSelector(v13, "uploadSessionController:uploadDidFinishWithDatabaseID:response:") & 1) != 0) {
      objc_msgSend( v13,  "uploadSessionController:uploadDidFinishWithDatabaseID:response:",  *(void *)(a1 + 56),  objc_msgSend(*(id *)(a1 + 64), "longLongValue"),  *(void *)(a1 + 40));
    }
    goto LABEL_18;
  }

  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v5) {
    id v5 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v6 = [v5 shouldLog];
  else {
    LODWORD(v7) = v6;
  }
  unsigned int v8 = (os_log_s *)objc_claimAutoreleasedReturnValue([v5 OSLogObject]);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO)) {
    uint64_t v7 = v7;
  }
  else {
    v7 &= 2u;
  }
  if ((_DWORD)v7)
  {
    uint64_t v9 = (void *)objc_opt_class(*(void *)(a1 + 56));
    uint64_t v10 = *(void *)(a1 + 64);
    int v38 = 138412546;
    unsigned int v39 = v9;
    __int16 v40 = 2112;
    uint64_t v41 = v10;
    id v11 = v9;
    id v12 = (void *)_os_log_send_and_compose_impl( v7,  0LL,  0LL,  0LL,  &_mh_execute_header,  v8,  1LL,  "%@: Task did stop for upload: %@",  &v38,  22);

    if (!v12) {
      goto LABEL_16;
    }
    unsigned int v8 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v12,  4LL));
    free(v12);
    SSFileLog(v5, @"%@");
  }

LABEL_16:
  [*(id *)(a1 + 56) _cleanupForDatabaseID:*(void *)(a1 + 64)];
  unsigned int v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) delegate]);
  if ((objc_opt_respondsToSelector(v13, "uploadSessionController:taskDidStopWithDatabaseID:") & 1) != 0) {
    objc_msgSend( v13,  "uploadSessionController:taskDidStopWithDatabaseID:",  *(void *)(a1 + 56),  objc_msgSend(*(id *)(a1 + 64), "longLongValue"));
  }
LABEL_18:

LABEL_33:
}

void sub_100045698(uint64_t a1)
{
  uint64_t v22 = 0LL;
  uint64_t v23 = &v22;
  uint64_t v24 = 0x3032000000LL;
  id v25 = sub_1000458D0;
  unsigned int v26 = sub_1000458E0;
  id v27 = 0LL;
  id v2 = [*(id *)(a1 + 32) longLongValue];
  unsigned int v3 = *(void **)(*(void *)(a1 + 40) + 32LL);
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 3221225472LL;
  v21[2] = sub_1000458E8;
  v21[3] = &unk_10034BE70;
  v21[4] = &v22;
  v21[5] = v2;
  [v3 enumerateObjectsUsingBlock:v21];
  uint64_t v4 = (void *)v23[5];
  if (!v4)
  {
    id v5 = objc_alloc_init(&OBJC_CLASS___DirectUploadProgress);
    unsigned int v6 = (void *)v23[5];
    v23[5] = (uint64_t)v5;

    [(id)v23[5] setUploadDatabaseIdentifier:v2];
    uint64_t v7 = *(void **)(*(void *)(a1 + 40) + 32LL);
    if (!v7)
    {
      unsigned int v8 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
      uint64_t v9 = *(void *)(a1 + 40);
      uint64_t v10 = *(void **)(v9 + 32);
      *(void *)(v9 + 32) = v8;

      uint64_t v7 = *(void **)(*(void *)(a1 + 40) + 32LL);
    }

    [v7 addObject:v23[5]];
    uint64_t v4 = (void *)v23[5];
  }

  [v4 setCountOfBytesExpectedToSend:*(void *)(a1 + 48)];
  [(id)v23[5] setCountOfBytesSent:*(void *)(a1 + 56)];
  uint64_t v11 = *(void *)(a1 + 40);
  if (!*(void *)(v11 + 40))
  {
    dispatch_source_t v12 = dispatch_source_create( (dispatch_source_type_t)&_dispatch_source_type_timer,  0LL,  0LL,  *(dispatch_queue_t *)(v11 + 16));
    uint64_t v13 = *(void *)(a1 + 40);
    uint64_t v14 = *(void **)(v13 + 40);
    *(void *)(v13 + 40) = v12;

    int v15 = *(dispatch_source_s **)(*(void *)(a1 + 40) + 40LL);
    dispatch_time_t v16 = dispatch_time(0LL, 500000000LL);
    dispatch_source_set_timer(v15, v16, 0LL, 0LL);
    objc_initWeak(&location, *(id *)(a1 + 40));
    unsigned int v17 = *(dispatch_source_s **)(*(void *)(a1 + 40) + 40LL);
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3221225472LL;
    v18[2] = sub_100045954;
    v18[3] = &unk_10034BC98;
    objc_copyWeak(&v19, &location);
    dispatch_source_set_event_handler(v17, v18);
    dispatch_resume(*(dispatch_object_t *)(*(void *)(a1 + 40) + 40LL));
    objc_destroyWeak(&v19);
    objc_destroyWeak(&location);
  }

  _Block_object_dispose(&v22, 8);
}

void sub_1000458B8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
}

uint64_t sub_1000458D0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1000458E0(uint64_t a1)
{
}

void sub_1000458E8(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  id v7 = a2;
  if ([v7 uploadDatabaseIdentifier] == *(id *)(a1 + 40))
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 40LL), a2);
    *a4 = 1;
  }
}

void sub_100045954(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _flushProgress];
}

void sub_100045A54(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) delegate]);
  if ((objc_opt_respondsToSelector(v2, "uploadSessionController:uploadDidBeginTransferWithDatabaseID:") & 1) != 0) {
    objc_msgSend( v2,  "uploadSessionController:uploadDidBeginTransferWithDatabaseID:",  *(void *)(a1 + 32),  objc_msgSend(*(id *)(a1 + 40), "longLongValue"));
  }
}

void sub_100045FC0(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  id v22 = v7;
  v28[0] = v22;
  id v21 = v8;
  v28[1] = v21;
  uint64_t v10 = 0LL;
  id v20 = v9;
  v28[2] = v20;
  do
  {
    uint64_t v11 = (void *)v28[v10];
    if (v11)
    {
      __int128 v25 = 0u;
      __int128 v26 = 0u;
      __int128 v23 = 0u;
      __int128 v24 = 0u;
      id v12 = v11;
      id v13 = [v12 countByEnumeratingWithState:&v23 objects:v27 count:16];
      if (v13)
      {
        id v14 = v13;
        uint64_t v15 = *(void *)v24;
        do
        {
          dispatch_time_t v16 = 0LL;
          do
          {
            if (*(void *)v24 != v15) {
              objc_enumerationMutation(v12);
            }
            id AssociatedObject = objc_getAssociatedObject( *(id *)(*((void *)&v23 + 1) + 8LL * (void)v16),  "com.apple.itunesstored.upload.id");
            id v18 = (void *)objc_claimAutoreleasedReturnValue(AssociatedObject);

            dispatch_time_t v16 = (char *)v16 + 1;
          }

          while (v14 != v16);
          id v14 = [v12 countByEnumeratingWithState:&v23 objects:v27 count:16];
        }

        while (v14);
      }
    }

    ++v10;
  }

  while (v10 != 3);
  for (uint64_t i = 2LL; i != -1; --i)
}

void sub_100046F9C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, char a23, uint64_t a24, uint64_t a25, uint64_t a26, char a27)
{
}

uint64_t sub_100046FE8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_100046FF8(uint64_t a1)
{
}

void sub_100047000(uint64_t a1, int a2, void *a3, void *a4)
{
  id v12 = a3;
  id v8 = a4;
  if (a2) {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL), a3);
  }
  uint64_t v9 = *(void *)(*(void *)(a1 + 48) + 8LL);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v8;
  id v11 = v8;

  *(_BYTE *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL) = a2;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_100047698(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  id v2 = (void *)qword_1003A3290;
  qword_1003A3290 = (uint64_t)v1;
}

void sub_100047768(id *a1)
{
  id v2 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  uint64_t v29 = 0LL;
  uint64_t v30 = &v29;
  uint64_t v31 = 0x3032000000LL;
  uint64_t v32 = sub_100047A40;
  __int16 v33 = sub_100047A50;
  id v34 = 0LL;
  unsigned int v3 = (void *)objc_claimAutoreleasedReturnValue([a1[4] clientIdentifier]);
  if (v3) {
    uint64_t v4 = -[NSDictionary initWithObjectsAndKeys:]( objc_alloc(&OBJC_CLASS___NSDictionary),  "initWithObjectsAndKeys:",  v3,  @"source_app",  0LL);
  }
  else {
    uint64_t v4 = 0LL;
  }
  id v5 = (void *)objc_claimAutoreleasedReturnValue([a1[5] _database]);
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 3221225472LL;
  v21[2] = sub_100047A58;
  v21[3] = &unk_10034BF38;
  id v22 = a1[6];
  id v6 = v3;
  id v23 = v6;
  id v7 = v5;
  id v24 = v7;
  id v8 = v4;
  __int128 v25 = v8;
  uint64_t v9 = v2;
  id v10 = a1[5];
  __int128 v26 = v9;
  id v27 = v10;
  unsigned int v28 = &v29;
  [v7 performTransactionWithBlock:v21];
  if (-[NSMutableArray count](v9, "count"))
  {
    id v11 = (void *)objc_claimAutoreleasedReturnValue([a1[5] _sessionController]);
    [v11 addUploadTasksWithRequests:v9];
  }

  if (v30[5])
  {
    __int128 v19 = 0u;
    __int128 v20 = 0u;
    __int128 v17 = 0u;
    __int128 v18 = 0u;
    id v12 = *((id *)a1[5] + 3);
    id v13 = [v12 countByEnumeratingWithState:&v17 objects:v35 count:16];
    if (v13)
    {
      uint64_t v14 = *(void *)v18;
      do
      {
        for (uint64_t i = 0LL; i != v13; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v18 != v14) {
            objc_enumerationMutation(v12);
          }
          dispatch_time_t v16 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v17 + 1) + 8 * (void)i) outputConnection]);
          [v16 sendMessage:v30[5]];
        }

        id v13 = [v12 countByEnumeratingWithState:&v17 objects:v35 count:16];
      }

      while (v13);
    }
  }

  _Block_object_dispose(&v29, 8);
}

void sub_100047A10( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, char a30)
{
}

uint64_t sub_100047A40(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_100047A50(uint64_t a1)
{
}

uint64_t sub_100047A58(uint64_t a1)
{
  id v2 = +[MediaSocialPostEntity newEntityValuesWithMediaSocialPost:]( &OBJC_CLASS___MediaSocialPostEntity,  "newEntityValuesWithMediaSocialPost:",  *(void *)(a1 + 32));
  unsigned int v3 = +[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", CFAbsoluteTimeGetCurrent());
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  [v2 setObject:v4 forKey:@"creation_time"];

  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) sourceApplicationIdentifier]);
  id v6 = v5;
  id v7 = -[MediaSocialPostEntity initWithPropertyValues:inDatabase:]( objc_alloc(&OBJC_CLASS___MediaSocialPostEntity),  "initWithPropertyValues:inDatabase:",  v2,  *(void *)(a1 + 48));
  id v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) contentItems]);
  id v9 = -[MediaSocialPostEntity insertEntitiesForContentItems:](v7, "insertEntitiesForContentItems:", v8);

  id v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) externalServiceDestinations]);
  id v11 =  -[MediaSocialPostEntity insertEntitiesForExternalDestinations:]( v7,  "insertEntitiesForExternalDestinations:",  v10);

  id v12 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  id v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) attachments]);
  unsigned int v35 = v7;
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue( -[MediaSocialPostEntity insertEntitiesForAttachments:withProperties:]( v7,  "insertEntitiesForAttachments:withProperties:",  v13,  *(void *)(a1 + 56)));

  v36[0] = _NSConcreteStackBlock;
  v36[1] = 3221225472LL;
  v36[2] = sub_100047E30;
  v36[3] = &unk_10034BF10;
  id v37 = *(id *)(a1 + 32);
  id v38 = *(id *)(a1 + 64);
  uint64_t v15 = v12;
  unsigned int v39 = v15;
  id v34 = v14;
  [v14 enumerateObjectsUsingBlock:v36];
  dispatch_time_t v16 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v16) {
    dispatch_time_t v16 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v17 = [v16 shouldLog];
  else {
    unsigned int v18 = v17;
  }
  __int128 v19 = (os_log_s *)objc_claimAutoreleasedReturnValue([v16 OSLogObject]);
  if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO)) {
    uint64_t v20 = v18;
  }
  else {
    uint64_t v20 = v18 & 2;
  }
  if ((_DWORD)v20)
  {
    id v21 = v2;
    id v22 = (void *)objc_opt_class(*(void *)(a1 + 72));
    id v23 = v22;
    id v24 = -[MediaSocialPostEntity persistentID](v35, "persistentID");
    id v25 = [v34 count];
    int v40 = 138412802;
    uint64_t v41 = v22;
    id v2 = v21;
    __int16 v42 = 2048;
    id v43 = v24;
    __int16 v44 = 2048;
    id v45 = v25;
    __int128 v26 = (void *)_os_log_send_and_compose_impl( v20,  0LL,  0LL,  0LL,  &_mh_execute_header,  v19,  1LL,  "%@: Inserted media social post: %lld, with %ld uploads",  &v40,  32);

    if (v26)
    {
      id v27 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v26,  4LL));
      free(v26);
      SSFileLog(v16, @"%@");
    }
  }

  else
  {
  }

  id v28 = -[NSMutableArray count](v15, "count");
  uint64_t v29 = *(id **)(a1 + 72);
  if (v28)
  {
    if ([v29[3] count])
    {
      id v30 = [*(id *)(a1 + 72) _newAddUploadsMessageWithDatabase:*(void *)(a1 + 48) hydratedUploadIDs:v15];
      uint64_t v31 = *(void *)(*(void *)(a1 + 80) + 8LL);
      uint64_t v32 = *(void **)(v31 + 40);
      *(void *)(v31 + 40) = v30;
    }
  }

  else
  {
    [v29 _enqueueNextReadyMediaSocialPostOperationWithDatabase:*(void *)(a1 + 48)];
  }

  return 1LL;
}

void sub_100047E30(id *a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = objc_alloc(&OBJC_CLASS___DirectUploadRequest);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([a1[4] accountIdentifier]);
  id v9 = -[DirectUploadRequest initWithEntity:accountIdentifier:](v4, "initWithEntity:accountIdentifier:", v3, v5);

  [a1[5] addObject:v9];
  id v6 = objc_alloc(&OBJC_CLASS___NSNumber);
  id v7 = [v3 persistentID];

  id v8 = -[NSNumber initWithLongLong:](v6, "initWithLongLong:", v7);
  [a1[6] addObject:v8];
}

void sub_100047FE8(_Unwind_Exception *a1)
{
}

void sub_10004800C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = WeakRetained;
  if (WeakRetained)
  {
    id v3 = (dispatch_queue_s *)WeakRetained[5];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_10004808C;
    block[3] = &unk_10034AC30;
    id v5 = WeakRetained;
    dispatch_async(v3, block);
  }
}

id sub_10004808C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _retryFailedEntities];
}

void sub_100048094(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _databaseIfExists]);
  id v3 = v2;
  if (v2)
  {
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472LL;
    v4[2] = sub_10004811C;
    v4[3] = &unk_10034BF88;
    v4[4] = *(void *)(a1 + 32);
    id v5 = v2;
    [v5 performTransactionWithBlock:v4];
  }
}

uint64_t sub_10004811C(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue( +[SSSQLiteComparisonPredicate predicateWithProperty:equalToLongLong:]( &OBJC_CLASS___SSSQLiteComparisonPredicate,  "predicateWithProperty:equalToLongLong:",  @"state",  2LL));
  [*(id *)(a1 + 32) _cleanupPendingUploads:v2 database:*(void *)(a1 + 40)];
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[SSSQLiteComparisonPredicate predicateWithProperty:equalToLongLong:]( &OBJC_CLASS___SSSQLiteComparisonPredicate,  "predicateWithProperty:equalToLongLong:",  @"state",  1LL));
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue( +[SSSQLiteComparisonPredicate predicateWithProperty:equalToLongLong:]( &OBJC_CLASS___SSSQLiteComparisonPredicate,  "predicateWithProperty:equalToLongLong:",  @"state",  0LL));
  v8[0] = v3;
  v8[1] = v4;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v8, 2LL));
  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[SSSQLiteCompoundPredicate predicateMatchingAnyPredicates:]( &OBJC_CLASS___SSSQLiteCompoundPredicate,  "predicateMatchingAnyPredicates:",  v5));

  [*(id *)(a1 + 32) _resumeUploadsWithPredicate:v6 clientIdentifier:0 resetFailureCount:0 error:0];
  [*(id *)(a1 + 32) _enqueueNextReadyMediaSocialPostOperationWithDatabase:*(void *)(a1 + 40)];

  return 1LL;
}

void sub_100048364(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue( +[SSSQLiteComparisonPredicate predicateWithProperty:equalToLongLong:]( &OBJC_CLASS___SSSQLiteComparisonPredicate,  "predicateWithProperty:equalToLongLong:",  @"state",  6LL));
  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[SSSQLiteComparisonPredicate predicateWithProperty:equalToLongLong:]( &OBJC_CLASS___SSSQLiteComparisonPredicate,  "predicateWithProperty:equalToLongLong:",  @"state",  4LL));
  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[SSSQLiteComparisonPredicate predicateWithProperty:equalToLongLong:]( &OBJC_CLASS___SSSQLiteComparisonPredicate,  "predicateWithProperty:equalToLongLong:",  @"state",  3LL));
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[SSSQLiteComparisonPredicate predicateWithProperty:equalToLongLong:]( &OBJC_CLASS___SSSQLiteComparisonPredicate,  "predicateWithProperty:equalToLongLong:",  @"state",  1LL));
  id v8 = (void *)objc_claimAutoreleasedReturnValue( +[SSSQLiteComparisonPredicate predicateWithProperty:equalToLongLong:]( &OBJC_CLASS___SSSQLiteComparisonPredicate,  "predicateWithProperty:equalToLongLong:",  @"state",  0LL));
  v25[0] = v4;
  v25[1] = v5;
  v25[2] = v6;
  v25[3] = v7;
  v25[4] = v8;
  id v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v25, 5LL));
  id v10 = (void *)objc_claimAutoreleasedReturnValue( +[SSSQLiteCompoundPredicate predicateMatchingAnyPredicates:]( &OBJC_CLASS___SSSQLiteCompoundPredicate,  "predicateMatchingAnyPredicates:",  v9));

  xpc_object_t value = xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 32), "1");
  id v12 = (void *)objc_claimAutoreleasedReturnValue(value);
  id v13 = v12;
  if (v12 && xpc_get_type(v12) == (xpc_type_t)&_xpc_type_array)
  {
    id v21 = [*(id *)(a1 + 56) _copyPersistentIdentifiersArrayWithXPCArray:v13];
    id v22 = v4;
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue( +[SSSQLiteContainsPredicate containsPredicateWithProperty:values:]( &OBJC_CLASS___SSSQLiteContainsPredicate,  "containsPredicateWithProperty:values:",  SSSQLEntityPropertyPersistentID,  v21));
    v24[0] = v10;
    v24[1] = v14;
    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v24, 2LL));
    uint64_t v20 = objc_claimAutoreleasedReturnValue( +[SSSQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SSSQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v15));

    uint64_t v4 = v22;
    id v10 = (void *)v20;
  }

  dispatch_time_t v16 = *(void **)(a1 + 40);
  uint64_t v17 = *(void *)(a1 + 48);
  id v23 = 0LL;
  unsigned __int8 v18 = objc_msgSend(v16, "_cancelUploadsWithPredicate:clientIdentifier:error:", v10, v17, &v23, v20);
  id v19 = v23;
  SSXPCDictionarySetObject(v3, "1", v19);
  xpc_dictionary_set_BOOL(v3, "2", v18);
}

void sub_1000486AC(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _databaseIfExists]);
  id v9 = _NSConcreteStackBlock;
  uint64_t v10 = 3221225472LL;
  id v11 = sub_1000487A0;
  id v12 = &unk_10034C000;
  id v6 = *(void **)(a1 + 32);
  uint64_t v16 = *(void *)(a1 + 40);
  id v13 = v5;
  id v14 = v6;
  id v7 = v4;
  uint64_t v15 = v7;
  id v8 = v5;
  [v8 performTransactionWithBlock:&v9];
  if (-[NSMutableArray count](v7, "count", v9, v10, v11, v12)) {
    SSXPCDictionarySetObject(v3, "2", v7);
  }
}

uint64_t sub_1000487A0(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) _orderedUploadQueryWithDatabase:*(void *)(a1 + 32) predicate:0]);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  v5[2] = sub_10004883C;
  v5[3] = &unk_10034BFD8;
  id v3 = *(void **)(a1 + 40);
  id v6 = *(id *)(a1 + 48);
  [v3 _enumerateSSVDirectUploadsWithQuery:v2 block:v5];

  return 1LL;
}

id sub_10004883C(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) addObject:a2];
}

void sub_100048A00(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue( +[SSSQLiteComparisonPredicate predicateWithProperty:equalToLongLong:]( &OBJC_CLASS___SSSQLiteComparisonPredicate,  "predicateWithProperty:equalToLongLong:",  @"state",  1LL));
  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[SSSQLiteComparisonPredicate predicateWithProperty:equalToLongLong:]( &OBJC_CLASS___SSSQLiteComparisonPredicate,  "predicateWithProperty:equalToLongLong:",  @"state",  0LL));
  v21[0] = v4;
  v21[1] = v5;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v21, 2LL));
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[SSSQLiteCompoundPredicate predicateMatchingAnyPredicates:]( &OBJC_CLASS___SSSQLiteCompoundPredicate,  "predicateMatchingAnyPredicates:",  v6));

  xpc_object_t value = xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 32), "1");
  id v9 = (void *)objc_claimAutoreleasedReturnValue(value);
  uint64_t v10 = v9;
  if (v9 && xpc_get_type(v9) == (xpc_type_t)&_xpc_type_array)
  {
    id v11 = [*(id *)(a1 + 56) _copyPersistentIdentifiersArrayWithXPCArray:v10];
    id v12 = (void *)objc_claimAutoreleasedReturnValue( +[SSSQLiteContainsPredicate containsPredicateWithProperty:values:]( &OBJC_CLASS___SSSQLiteContainsPredicate,  "containsPredicateWithProperty:values:",  SSSQLEntityPropertyPersistentID,  v11));
    v20[0] = v7;
    v20[1] = v12;
    id v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v20, 2LL));
    uint64_t v14 = objc_claimAutoreleasedReturnValue( +[SSSQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SSSQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v13));

    id v7 = (void *)v14;
  }

  uint64_t v15 = *(void **)(a1 + 40);
  uint64_t v16 = *(void *)(a1 + 48);
  id v19 = 0LL;
  unsigned __int8 v17 = [v15 _pauseUploadsWithPredicate:v7 clientIdentifier:v16 error:&v19];
  id v18 = v19;
  SSXPCDictionarySetObject(v3, "1", v18);
  xpc_dictionary_set_BOOL(v3, "2", v17);
}

id sub_100048D10(uint64_t a1)
{
  return [*(id *)(a1 + 32) _registerObserverWithMessage:*(void *)(a1 + 40) connection:*(void *)(a1 + 48)];
}

void sub_100048E30(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue( +[SSSQLiteComparisonPredicate predicateWithProperty:equalToLongLong:]( &OBJC_CLASS___SSSQLiteComparisonPredicate,  "predicateWithProperty:equalToLongLong:",  @"state",  4LL));
  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[SSSQLiteComparisonPredicate predicateWithProperty:equalToLongLong:]( &OBJC_CLASS___SSSQLiteComparisonPredicate,  "predicateWithProperty:equalToLongLong:",  @"state",  3LL));
  v21[0] = v4;
  v21[1] = v5;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v21, 2LL));
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[SSSQLiteCompoundPredicate predicateMatchingAnyPredicates:]( &OBJC_CLASS___SSSQLiteCompoundPredicate,  "predicateMatchingAnyPredicates:",  v6));

  xpc_object_t value = xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 32), "1");
  id v9 = (void *)objc_claimAutoreleasedReturnValue(value);
  uint64_t v10 = v9;
  if (v9 && xpc_get_type(v9) == (xpc_type_t)&_xpc_type_array)
  {
    id v11 = [*(id *)(a1 + 56) _copyPersistentIdentifiersArrayWithXPCArray:v10];
    id v12 = (void *)objc_claimAutoreleasedReturnValue( +[SSSQLiteContainsPredicate containsPredicateWithProperty:values:]( &OBJC_CLASS___SSSQLiteContainsPredicate,  "containsPredicateWithProperty:values:",  SSSQLEntityPropertyPersistentID,  v11));
    v20[0] = v7;
    v20[1] = v12;
    id v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v20, 2LL));
    uint64_t v14 = objc_claimAutoreleasedReturnValue( +[SSSQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SSSQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v13));

    id v7 = (void *)v14;
  }

  uint64_t v15 = *(void **)(a1 + 40);
  uint64_t v16 = *(void *)(a1 + 48);
  id v19 = 0LL;
  unsigned __int8 v17 = [v15 _resumeUploadsWithPredicate:v7 clientIdentifier:v16 resetFailureCount:1 error:&v19];
  id v18 = v19;
  SSXPCDictionarySetObject(v3, "1", v18);
  xpc_dictionary_set_BOOL(v3, "2", v17);
}

uint64_t sub_100049164(uint64_t a1)
{
  id v1 = -[DirectUploadEntity initWithPersistentID:inDatabase:]( objc_alloc(&OBJC_CLASS___DirectUploadEntity),  "initWithPersistentID:inDatabase:",  *(void *)(a1 + 40),  *(void *)(a1 + 32));
  -[DirectUploadEntity setValue:forProperty:](v1, "setValue:forProperty:", &off_10036D668, @"state");

  return 1LL;
}

void sub_1000493FC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
}

uint64_t sub_100049434(uint64_t a1)
{
  uint64_t v2 = -[DirectUploadEntity initWithPersistentID:inDatabase:]( objc_alloc(&OBJC_CLASS___DirectUploadEntity),  "initWithPersistentID:inDatabase:",  *(void *)(a1 + 72),  *(void *)(a1 + 32));
  id v3 = v2;
  if (v2)
  {
    uint64_t v4 = -[DirectUploadEntity setFailedWithError:](v2, "setFailedWithError:", *(void *)(a1 + 40));
    id v5 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v5) {
      id v5 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v6 = [v5 shouldLog];
    else {
      LODWORD(v7) = v6;
    }
    id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue([v5 OSLogObject]);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v7 = v7;
    }
    else {
      v7 &= 2u;
    }
    if ((_DWORD)v7)
    {
      id v9 = (void *)objc_opt_class(*(void *)(a1 + 48));
      uint64_t v10 = *(void *)(a1 + 72);
      int v19 = 138412802;
      uint64_t v20 = v9;
      __int16 v21 = 2048;
      uint64_t v22 = v4;
      __int16 v23 = 2048;
      uint64_t v24 = v10;
      id v11 = v9;
      id v12 = (void *)_os_log_send_and_compose_impl( v7,  0LL,  0LL,  0LL,  &_mh_execute_header,  v8,  0LL,  "%@: Failure count is now: %ld for upload: %lld",  &v19,  32);

      if (!v12) {
        goto LABEL_14;
      }
      id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v12,  4LL));
      free(v12);
      SSFileLog(v5, @"%@");
    }

LABEL_14:
    if (*(_BYTE *)(a1 + 80))
    {
      uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(-[DirectUploadEntity postEntity](v3, "postEntity"));
      uint64_t v14 = objc_claimAutoreleasedReturnValue([v13 valueForProperty:@"account_id"]);
      uint64_t v15 = *(void *)(*(void *)(a1 + 56) + 8LL);
      uint64_t v16 = *(void **)(v15 + 40);
      *(void *)(v15 + 40) = v14;
    }

    else if (v4 > 2)
    {
      unsigned __int8 v17 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) _errorCoordinator]);
      [v17 addDialogForUpload:v3];
    }

    else
    {
      *(_BYTE *)(*(void *)(*(void *)(a1 + 64) + 8LL) + 24LL) = 1;
    }
  }

  return 1LL;
}

uint64_t sub_10004980C(uint64_t a1)
{
  uint64_t v2 = -[DirectUploadEntity initWithPersistentID:inDatabase:]( objc_alloc(&OBJC_CLASS___DirectUploadEntity),  "initWithPersistentID:inDatabase:",  *(void *)(a1 + 56),  *(void *)(a1 + 32));
  id v3 = v2;
  if (v2)
  {
    -[DirectUploadEntity setProcessingWithResponse:](v2, "setProcessingWithResponse:", *(void *)(a1 + 40));
    [*(id *)(a1 + 48) _enqueueNextReadyMediaSocialPostOperationWithDatabase:*(void *)(a1 + 32)];
  }

  return 1LL;
}

void sub_100049BB0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
}

uint64_t sub_100049BC8(uint64_t a1)
{
  __int16 v33 = (void *)objc_claimAutoreleasedReturnValue( +[SSSQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SSSQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"account_id",  *(void *)(a1 + 32)));
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue( +[MediaSocialPostEntity queryWithDatabase:predicate:]( &OBJC_CLASS___MediaSocialPostEntity,  "queryWithDatabase:predicate:",  *(void *)(a1 + 40),  v33));
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[SSSQLiteComparisonPredicate predicateWithProperty:equalToLongLong:]( &OBJC_CLASS___SSSQLiteComparisonPredicate,  "predicateWithProperty:equalToLongLong:",  @"error_code",  139LL));
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue( +[SSSQLiteContainsPredicate containsPredicateWithProperty:query:queryProperty:]( &OBJC_CLASS___SSSQLiteContainsPredicate,  "containsPredicateWithProperty:query:queryProperty:",  @"post_id",  v2,  SSSQLEntityPropertyPersistentID));
  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[SSSQLiteComparisonPredicate predicateWithProperty:equalToLongLong:]( &OBJC_CLASS___SSSQLiteComparisonPredicate,  "predicateWithProperty:equalToLongLong:",  @"state",  4LL));
  v45[0] = v3;
  v45[1] = v5;
  v45[2] = v4;
  unsigned int v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v45, 3LL));
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue( +[SSSQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SSSQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v6));

  if (![*(id *)(a1 + 48) isEqual:*(void *)(a1 + 32)])
  {
    if ([*(id *)(a1 + 64) authenticateResponseType] == (id)2)
    {
      uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
      if (!v16) {
        uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      unsigned int v17 = [v16 shouldLog];
      else {
        unsigned int v18 = v17;
      }
      int v19 = (os_log_s *)objc_claimAutoreleasedReturnValue([v16 OSLogObject]);
      if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT)) {
        uint64_t v20 = v18;
      }
      else {
        uint64_t v20 = v18 & 2;
      }
      if ((_DWORD)v20)
      {
        __int16 v21 = (void *)objc_opt_class(*(void *)(a1 + 56));
        LODWORD(v40) = 138412290;
        *(void *)((char *)&v40 + 4) = v21;
        id v22 = v21;
        __int16 v23 = (void *)_os_log_send_and_compose_impl( v20,  0LL,  0LL,  0LL,  &_mh_execute_header,  v19,  0LL,  "%@: Canceling uploads after canceled authentication",  &v40,  12);

        if (!v23)
        {
LABEL_28:

          [*(id *)(a1 + 56) _cancelUploadsWithPredicate:v7 clientIdentifier:0 error:0];
          goto LABEL_35;
        }

        int v19 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v23,  4LL));
        free(v23);
        SSFileLog(v16, @"%@");
      }

      goto LABEL_28;
    }

    uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 64) error]);
    id v25 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    *(void *)&__int128 v40 = 0LL;
    *((void *)&v40 + 1) = &v40;
    uint64_t v41 = 0x3032000000LL;
    __int16 v42 = sub_100047A40;
    id v43 = sub_100047A50;
    id v44 = 0LL;
    __int128 v26 = (void *)objc_claimAutoreleasedReturnValue( +[DirectUploadEntity queryWithDatabase:predicate:]( &OBJC_CLASS___DirectUploadEntity,  "queryWithDatabase:predicate:",  *(void *)(a1 + 40),  v7));
    v34[0] = _NSConcreteStackBlock;
    v34[1] = 3221225472LL;
    v34[2] = sub_10004A158;
    v34[3] = &unk_10034C0A0;
    id v35 = *(id *)(a1 + 40);
    id v27 = v24;
    uint64_t v28 = *(void *)(a1 + 72);
    id v36 = v27;
    uint64_t v38 = v28;
    unsigned int v39 = &v40;
    uint64_t v29 = v25;
    id v37 = v29;
    [v26 enumeratePersistentIDsUsingBlock:v34];
    uint64_t v30 = (uint64_t)-[NSMutableArray count](v29, "count");
    if (v30 == 1)
    {
      uint64_t v31 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) _errorCoordinator]);
      [v31 addDialogForUpload:*(void *)(*((void *)&v40 + 1) + 40)];
    }

    else
    {
      if (v30 < 2)
      {
LABEL_34:

        _Block_object_dispose(&v40, 8);
        goto LABEL_35;
      }

      uint64_t v31 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) _errorCoordinator]);
      [v31 addDialogForUploadIdentifiers:v29];
    }

    goto LABEL_34;
  }

  id v8 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v8) {
    id v8 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v9 = [v8 shouldLog];
  else {
    unsigned int v10 = v9;
  }
  id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue([v8 OSLogObject]);
  if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO)) {
    uint64_t v12 = v10;
  }
  else {
    uint64_t v12 = v10 & 2;
  }
  if (!(_DWORD)v12) {
    goto LABEL_13;
  }
  uint64_t v13 = (void *)objc_opt_class(*(void *)(a1 + 56));
  LODWORD(v40) = 138412290;
  *(void *)((char *)&v40 + 4) = v13;
  id v14 = v13;
  uint64_t v15 = (void *)_os_log_send_and_compose_impl( v12,  0LL,  0LL,  0LL,  &_mh_execute_header,  v11,  1LL,  "%@: Resuming uploads after authentication",  &v40,  12);

  if (v15)
  {
    id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v15,  4LL));
    free(v15);
    SSFileLog(v8, @"%@");
LABEL_13:
  }

  [*(id *)(a1 + 56) _resumeUploadsWithPredicate:v7 clientIdentifier:0 resetFailureCount:1 error:0];
LABEL_35:

  return 1LL;
}

void sub_10004A134( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
}

void sub_10004A158(uint64_t a1, uint64_t a2)
{
  id obj = -[DirectUploadEntity initWithPersistentID:inDatabase:]( objc_alloc(&OBJC_CLASS___DirectUploadEntity),  "initWithPersistentID:inDatabase:",  a2,  *(void *)(a1 + 32));
  if (-[DirectUploadEntity setFailedWithError:](obj, "setFailedWithError:", *(void *)(a1 + 40)) > 2)
  {
    uint64_t v4 = *(void *)(*(void *)(a1 + 64) + 8LL);
    uint64_t v6 = *(void *)(v4 + 40);
    id v5 = (id *)(v4 + 40);
    if (!v6) {
      objc_storeStrong(v5, obj);
    }
    uint64_t v7 = -[NSNumber initWithLongLong:](objc_alloc(&OBJC_CLASS___NSNumber), "initWithLongLong:", a2);
    [*(id *)(a1 + 48) addObject:v7];
  }

  else
  {
    *(_BYTE *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL) = 1;
  }
}

uint64_t sub_10004A394(uint64_t a1)
{
  uint64_t v2 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  __int128 v49 = 0u;
  __int128 v50 = 0u;
  __int128 v51 = 0u;
  __int128 v52 = 0u;
  id obj = *(id *)(a1 + 32);
  id v3 = [obj countByEnumeratingWithState:&v49 objects:v58 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v43 = *(void *)v50;
    do
    {
      for (uint64_t i = 0LL; i != v4; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v50 != v43) {
          objc_enumerationMutation(obj);
        }
        uint64_t v6 = *(void **)(*((void *)&v49 + 1) + 8LL * (void)i);
        uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig", v38));
        if (!v7) {
          uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
        }
        unsigned int v8 = [v7 shouldLog];
        else {
          unsigned int v9 = v8;
        }
        unsigned int v10 = (os_log_s *)objc_claimAutoreleasedReturnValue([v7 OSLogObject]);
        if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO)) {
          uint64_t v11 = v9;
        }
        else {
          uint64_t v11 = v9 & 2;
        }
        if ((_DWORD)v11)
        {
          uint64_t v12 = (void *)objc_opt_class(*(void *)(a1 + 40));
          int v54 = 138412546;
          uint64_t v55 = v12;
          __int16 v56 = 2112;
          __int128 v57 = v6;
          id v13 = v12;
          LODWORD(v39) = 22;
          id v14 = (void *)_os_log_send_and_compose_impl( v11,  0LL,  0LL,  0LL,  &_mh_execute_header,  v10,  1LL,  "%@: Deleting post after error dialog: %@",  &v54,  v39);

          if (!v14) {
            goto LABEL_18;
          }
          unsigned int v10 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v14,  4LL));
          free(v14);
          uint64_t v38 = v10;
          SSFileLog(v7, @"%@");
        }

LABEL_18:
        uint64_t v15 = -[MediaSocialPostEntity initWithPersistentID:inDatabase:]( [MediaSocialPostEntity alloc],  "initWithPersistentID:inDatabase:",  [v6 longLongValue],  *(void *)(a1 + 48));
        uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(-[MediaSocialPostEntity allUploadPersistentIdentifiers](v15, "allUploadPersistentIdentifiers"));
        -[NSMutableArray addObjectsFromArray:](v2, "addObjectsFromArray:", v16);

        -[MediaSocialPostEntity deleteFromDatabase](v15, "deleteFromDatabase");
      }

      id v4 = [obj countByEnumeratingWithState:&v49 objects:v58 count:16];
    }

    while (v4);
  }

  __int128 v47 = 0u;
  __int128 v48 = 0u;
  __int128 v45 = 0u;
  __int128 v46 = 0u;
  id v40 = *(id *)(a1 + 56);
  id v44 = [v40 countByEnumeratingWithState:&v45 objects:v53 count:16];
  if (v44)
  {
    uint64_t v42 = *(void *)v46;
    do
    {
      for (j = 0LL; j != v44; j = (char *)j + 1)
      {
        if (*(void *)v46 != v42) {
          objc_enumerationMutation(v40);
        }
        unsigned int v18 = *(void **)(*((void *)&v45 + 1) + 8LL * (void)j);
        int v19 = -[DirectUploadEntity initWithPersistentID:inDatabase:]( [DirectUploadEntity alloc],  "initWithPersistentID:inDatabase:",  [v18 longLongValue],  *(void *)(a1 + 48));
        uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue(-[DirectUploadEntity valueForProperty:](v19, "valueForProperty:", @"post_id"));
        id v21 = [v20 longLongValue];
        uint64_t v22 = objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
        __int16 v23 = (void *)v22;
        if (v21)
        {
          if (!v22) {
            __int16 v23 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
          }
          unsigned int v24 = objc_msgSend(v23, "shouldLog", v38);
          id v25 = (os_log_s *)objc_claimAutoreleasedReturnValue([v23 OSLogObject]);
          if (os_log_type_enabled(v25, OS_LOG_TYPE_INFO)) {
            uint64_t v26 = v24;
          }
          else {
            uint64_t v26 = v24 & 2;
          }
          if ((_DWORD)v26)
          {
            id v27 = (void *)objc_opt_class(*(void *)(a1 + 40));
            int v54 = 138412546;
            uint64_t v55 = v27;
            __int16 v56 = 2112;
            __int128 v57 = v20;
            id v28 = v27;
            LODWORD(v39) = 22;
            uint64_t v29 = (void *)_os_log_send_and_compose_impl( v26,  0LL,  0LL,  0LL,  &_mh_execute_header,  v25,  1LL,  "%@: Deleting post after error dialog: %@",  &v54,  v39);

            if (v29)
            {
              id v25 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v29,  4LL));
              free(v29);
              uint64_t v38 = v25;
              SSFileLog(v23, @"%@");
              goto LABEL_36;
            }
          }

          else
          {
LABEL_36:
          }

          uint64_t v30 = -[MediaSocialPostEntity initWithPersistentID:inDatabase:]( [MediaSocialPostEntity alloc],  "initWithPersistentID:inDatabase:",  [v20 longLongValue],  *(void *)(a1 + 48));
          uint64_t v31 = (void *)objc_claimAutoreleasedReturnValue(-[MediaSocialPostEntity allUploadPersistentIdentifiers](v30, "allUploadPersistentIdentifiers"));
          -[NSMutableArray addObjectsFromArray:](v2, "addObjectsFromArray:", v31);

          -[MediaSocialPostEntity deleteFromDatabase](v30, "deleteFromDatabase");
          goto LABEL_50;
        }

        if (!v22) {
          __int16 v23 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
        }
        LODWORD(v32) = objc_msgSend(v23, "shouldLog", v38);
        __int16 v33 = (os_log_s *)objc_claimAutoreleasedReturnValue([v23 OSLogObject]);
        if (os_log_type_enabled(v33, OS_LOG_TYPE_INFO)) {
          uint64_t v32 = v32;
        }
        else {
          v32 &= 2u;
        }
        if (!(_DWORD)v32) {
          goto LABEL_48;
        }
        id v34 = (void *)objc_opt_class(*(void *)(a1 + 40));
        int v54 = 138412546;
        uint64_t v55 = v34;
        __int16 v56 = 2112;
        __int128 v57 = v20;
        id v35 = v34;
        LODWORD(v39) = 22;
        id v36 = (void *)_os_log_send_and_compose_impl( v32,  0LL,  0LL,  0LL,  &_mh_execute_header,  v33,  1LL,  "%@: Deleting upload after error dialog: %@",  &v54,  v39);

        if (v36)
        {
          __int16 v33 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v36,  4LL));
          free(v36);
          uint64_t v38 = v33;
          SSFileLog(v23, @"%@");
LABEL_48:
        }

        -[NSMutableArray addObject:](v2, "addObject:", v18);
        -[DirectUploadEntity deleteFromDatabase](v19, "deleteFromDatabase");
LABEL_50:
      }

      id v44 = [v40 countByEnumeratingWithState:&v45 objects:v53 count:16];
    }

    while (v44);
  }

  [*(id *)(a1 + 40) _sendRemoveUploadsMessageWithUploadIdentifiers:v2];
  [*(id *)(a1 + 40) _enqueueNextReadyMediaSocialPostOperationWithDatabase:*(void *)(a1 + 48)];

  return 1LL;
}

uint64_t sub_10004AA08(uint64_t a1)
{
  uint64_t v1 = a1;
  __int128 v32 = 0u;
  __int128 v33 = 0u;
  __int128 v34 = 0u;
  __int128 v35 = 0u;
  id obj = *(id *)(a1 + 32);
  id v2 = [obj countByEnumeratingWithState:&v32 objects:v40 count:16];
  if (v2)
  {
    id v3 = v2;
    uint64_t v31 = *(void *)v33;
    do
    {
      for (uint64_t i = 0LL; i != v3; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v33 != v31) {
          objc_enumerationMutation(obj);
        }
        uint64_t v5 = v1;
        uint64_t v6 = *(void **)(*((void *)&v32 + 1) + 8LL * (void)i);
        uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig", v28));
        if (!v7) {
          uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
        }
        unsigned int v8 = [v7 shouldLog];
        else {
          unsigned int v9 = v8;
        }
        unsigned int v10 = (os_log_s *)objc_claimAutoreleasedReturnValue([v7 OSLogObject]);
        if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO)) {
          uint64_t v11 = v9;
        }
        else {
          uint64_t v11 = v9 & 2;
        }
        if ((_DWORD)v11)
        {
          uint64_t v12 = (void *)objc_opt_class(*(void *)(v5 + 40));
          int v36 = 138412546;
          id v37 = v12;
          __int16 v38 = 2112;
          id v39 = v6;
          id v13 = v12;
          LODWORD(v29) = 22;
          id v14 = (void *)_os_log_send_and_compose_impl( v11,  0LL,  0LL,  0LL,  &_mh_execute_header,  v10,  1LL,  "%@: Retry post after error dialog: %@",  &v36,  v29);

          if (!v14) {
            goto LABEL_18;
          }
          unsigned int v10 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v14,  4LL));
          free(v14);
          id v28 = v10;
          SSFileLog(v7, @"%@");
        }

LABEL_18:
        uint64_t v1 = v5;
        uint64_t v15 = -[MediaSocialPostEntity initWithPersistentID:inDatabase:]( [MediaSocialPostEntity alloc],  "initWithPersistentID:inDatabase:",  [v6 longLongValue],  *(void *)(v5 + 48));
        -[MediaSocialPostEntity setValue:forKey:](v15, "setValue:forKey:", &off_10036D680, @"is_failed");
        -[MediaSocialPostEntity setValue:forProperty:]( v15,  "setValue:forProperty:",  &off_10036D680,  @"failure_count");
      }

      id v3 = [obj countByEnumeratingWithState:&v32 objects:v40 count:16];
    }

    while (v3);
  }

  if ([*(id *)(v1 + 32) count]) {
    [*(id *)(v1 + 40) _enqueueNextReadyMediaSocialPostOperationWithDatabase:*(void *)(v1 + 48)];
  }
  if (objc_msgSend(*(id *)(v1 + 56), "count", v28))
  {
    uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v16) {
      uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v17 = [v16 shouldLog];
    else {
      unsigned int v18 = v17;
    }
    int v19 = (os_log_s *)objc_claimAutoreleasedReturnValue([v16 OSLogObject]);
    if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO)) {
      uint64_t v20 = v18;
    }
    else {
      uint64_t v20 = v18 & 2;
    }
    if ((_DWORD)v20)
    {
      id v21 = (void *)objc_opt_class(*(void *)(v1 + 40));
      uint64_t v22 = *(void **)(v1 + 56);
      id v23 = v21;
      id v24 = [v22 count];
      int v36 = 138412546;
      id v37 = v21;
      __int16 v38 = 2048;
      id v39 = v24;
      LODWORD(v29) = 22;
      id v25 = (void *)_os_log_send_and_compose_impl( v20,  0LL,  0LL,  0LL,  &_mh_execute_header,  v19,  1LL,  "%@: Retrying %ld uploads after error dialog",  &v36,  v29);

      if (!v25)
      {
LABEL_35:

        uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue( +[SSSQLiteContainsPredicate containsPredicateWithProperty:values:]( &OBJC_CLASS___SSSQLiteContainsPredicate,  "containsPredicateWithProperty:values:",  SSSQLEntityPropertyPersistentID,  *(void *)(v1 + 56)));
        [*(id *)(v1 + 40) _resumeUploadsWithPredicate:v26 clientIdentifier:0 resetFailureCount:1 error:0];

        return 1LL;
      }

      int v19 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v25,  4LL));
      free(v25);
      SSFileLog(v16, @"%@");
    }

    goto LABEL_35;
  }

  return 1LL;
}

uint64_t sub_10004B034(uint64_t a1)
{
  __int128 v10 = 0u;
  __int128 v11 = 0u;
  __int128 v12 = 0u;
  __int128 v13 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v11;
    do
    {
      for (uint64_t i = 0LL; i != v4; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v11 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v7 = *(void **)(*((void *)&v10 + 1) + 8LL * (void)i);
        if (objc_msgSend(v7, "result", (void)v10) == (id)4 || objc_msgSend(v7, "result") == (id)5)
        {
          [*(id *)(a1 + 40) addObject:v7];
        }

        else
        {
          unsigned int v8 = -[MediaSocialPostEntity initWithPersistentID:inDatabase:]( [MediaSocialPostEntity alloc],  "initWithPersistentID:inDatabase:",  [v7 postIdentifier],  *(void *)(a1 + 48));
          -[MediaSocialPostEntity updateWithPollingResponse:](v8, "updateWithPollingResponse:", v7);
        }
      }

      id v4 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }

    while (v4);
  }

  return 1LL;
}

void sub_10004B21C(uint64_t a1)
{
  if ([*(id *)(*(void *)(a1 + 32) + 24) count])
  {
    id v2 = [*(id *)(*(void *)(a1 + 32) + 24) indexOfObjectIdenticalTo:*(void *)(a1 + 40)];
    if (v2 != (id)0x7FFFFFFFFFFFFFFFLL)
    {
      id v3 = v2;
      id v4 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
      if (!v4) {
        id v4 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      unsigned int v5 = [v4 shouldLog];
      else {
        LODWORD(v6) = v5;
      }
      uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue([v4 OSLogObject]);
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG)) {
        uint64_t v6 = v6;
      }
      else {
        v6 &= 2u;
      }
      if ((_DWORD)v6)
      {
        unsigned int v8 = (void *)objc_opt_class(*(void *)(a1 + 32));
        unsigned int v9 = *(void **)(a1 + 40);
        id v10 = v8;
        __int128 v11 = (void *)objc_claimAutoreleasedReturnValue([v9 clientIdentifier]);
        int v16 = 138412546;
        unsigned int v17 = v8;
        __int16 v18 = 2112;
        int v19 = v11;
        __int128 v12 = (void *)_os_log_send_and_compose_impl( v6,  0LL,  0LL,  0LL,  &_mh_execute_header,  v7,  2LL,  "%@: Disconnect client: %@",  &v16,  22);

        if (!v12) {
          goto LABEL_15;
        }
        uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v12,  4LL));
        free(v12);
        SSFileLog(v4, @"%@");
      }

LABEL_15:
      [*(id *)(a1 + 40) setOutputConnectionWithConnection:0];
      [*(id *)(*(void *)(a1 + 32) + 24) removeObjectAtIndex:v3];
      if (![*(id *)(*(void *)(a1 + 32) + 24) count])
      {
        __int128 v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
        [v13 removeObserver:*(void *)(a1 + 32) name:@"XPCClientDisconnectNotification" object:0];
        uint64_t v14 = *(void *)(a1 + 32);
        uint64_t v15 = *(void **)(v14 + 24);
        *(void *)(v14 + 24) = 0LL;
      }
    }
  }

uint64_t sub_10004B4EC(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if (xpc_get_type(v4) == (xpc_type_t)&_xpc_type_int64)
  {
    unsigned int v5 = -[NSNumber initWithLongLong:](objc_alloc(&OBJC_CLASS___NSNumber), "initWithLongLong:", xpc_int64_get_value(v4));
    [*(id *)(a1 + 32) addObject:v5];
  }

  return 1LL;
}

uint64_t sub_10004B9D0(uint64_t a1)
{
  id v2 = objc_alloc_init(&OBJC_CLASS___DirectUploadDatabaseSchema);
  -[DirectUploadDatabaseSchema createSchemaInDatabase:](v2, "createSchemaInDatabase:", *(void *)(a1 + 32));

  return 1LL;
}

uint64_t sub_10004BC5C(uint64_t a1)
{
  __int128 v12 = @"post_id";
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[DirectUploadEntity queryWithDatabase:predicate:]( &OBJC_CLASS___DirectUploadEntity,  "queryWithDatabase:predicate:",  *(void *)(a1 + 32),  *(void *)(a1 + 40)));
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  v7[2] = sub_10004BD64;
  v7[3] = &unk_10034C140;
  id v3 = *(id *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 48);
  unsigned int v5 = *(void **)(a1 + 56);
  id v8 = v3;
  uint64_t v9 = v4;
  id v10 = v5;
  id v11 = *(id *)(a1 + 64);
  [v2 enumeratePersistentIDsAndProperties:&v12 count:1 usingBlock:v7];

  return 1LL;
}

void sub_10004BD64(uint64_t a1, uint64_t a2, id *a3)
{
  uint64_t v6 = -[DirectUploadEntity initWithPersistentID:inDatabase:]( objc_alloc(&OBJC_CLASS___DirectUploadEntity),  "initWithPersistentID:inDatabase:",  a2,  *(void *)(a1 + 32));
  uint64_t v7 = (NSNumber *)[*a3 longLongValue];
  if (!v7)
  {
    uint64_t v9 = -[NSNumber initWithLongLong:](objc_alloc(&OBJC_CLASS___NSNumber), "initWithLongLong:", a2);
    uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v20) {
      uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v21 = [v20 shouldLog];
    else {
      LODWORD(v22) = v21;
    }
    id v23 = (os_log_s *)objc_claimAutoreleasedReturnValue([v20 OSLogObject]);
    if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO)) {
      uint64_t v22 = v22;
    }
    else {
      v22 &= 2u;
    }
    if ((_DWORD)v22)
    {
      id v24 = (void *)objc_opt_class(*(void *)(a1 + 40));
      uint64_t v25 = *(void *)(a1 + 48);
      int v28 = 138412802;
      uint64_t v29 = v24;
      __int16 v30 = 2112;
      uint64_t v31 = v9;
      __int16 v32 = 2112;
      uint64_t v33 = v25;
      id v26 = v24;
      id v27 = (void *)_os_log_send_and_compose_impl( v22,  0LL,  0LL,  0LL,  &_mh_execute_header,  v23,  1LL,  "%@: Deleting upload: %@, for client: %@",  &v28,  32);

      if (!v27)
      {
LABEL_27:

        -[DirectUploadEntity deleteFromDatabase](v6, "deleteFromDatabase");
        [*(id *)(a1 + 56) addObject:v9];
        goto LABEL_28;
      }

      id v23 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v27,  4LL));
      free(v27);
      SSFileLog(v20, @"%@");
    }

    goto LABEL_27;
  }

  id v8 = v7;
  uint64_t v9 = -[MediaSocialPostEntity initWithPersistentID:inDatabase:]( objc_alloc(&OBJC_CLASS___MediaSocialPostEntity),  "initWithPersistentID:inDatabase:",  v7,  *(void *)(a1 + 32));
  id v10 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v10) {
    id v10 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v11 = [v10 shouldLog];
  else {
    LODWORD(v12) = v11;
  }
  __int128 v13 = (os_log_s *)objc_claimAutoreleasedReturnValue([v10 OSLogObject]);
  if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO)) {
    uint64_t v12 = v12;
  }
  else {
    v12 &= 2u;
  }
  if (!(_DWORD)v12) {
    goto LABEL_13;
  }
  uint64_t v14 = (void *)objc_opt_class(*(void *)(a1 + 40));
  uint64_t v15 = *(void *)(a1 + 48);
  int v28 = 138412802;
  uint64_t v29 = v14;
  __int16 v30 = 2048;
  uint64_t v31 = v8;
  __int16 v32 = 2112;
  uint64_t v33 = v15;
  id v16 = v14;
  unsigned int v17 = (void *)_os_log_send_and_compose_impl( v12,  0LL,  0LL,  0LL,  &_mh_execute_header,  v13,  1LL,  "%@: Deleting post: %lld, for client: %@",  &v28,  32);

  if (v17)
  {
    __int128 v13 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v17,  4LL));
    free(v17);
    SSFileLog(v10, @"%@");
LABEL_13:
  }

  __int16 v18 = *(void **)(a1 + 56);
  int v19 = (void *)objc_claimAutoreleasedReturnValue(-[NSNumber allUploadPersistentIdentifiers](v9, "allUploadPersistentIdentifiers"));
  [v18 addObjectsFromArray:v19];

  -[NSNumber deleteFromDatabase](v9, "deleteFromDatabase");
LABEL_28:
}

void sub_10004C664(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = -[DirectUploadEntity initWithPersistentID:inDatabase:]( objc_alloc(&OBJC_CLASS___DirectUploadEntity),  "initWithPersistentID:inDatabase:",  a2,  *(void *)(a1 + 32));
  id v26 = 0LL;
  id v27 = @"post_id";
  -[DirectUploadEntity getValues:forProperties:count:](v4, "getValues:forProperties:count:", &v26, &v27, 1LL);
  unsigned int v5 = -[MediaSocialPostEntity initWithPersistentID:inDatabase:]( [MediaSocialPostEntity alloc],  "initWithPersistentID:inDatabase:",  [v26 longLongValue],  *(void *)(a1 + 32));
  uint64_t v6 = v5;
  if (!v5)
  {
LABEL_4:
    uint64_t v7 = -[NSNumber initWithLongLong:](objc_alloc(&OBJC_CLASS___NSNumber), "initWithLongLong:", a2);
    [*(id *)(a1 + 40) addObject:v7];
    -[DirectUploadEntity deleteFromDatabase](v4, "deleteFromDatabase");
    id v8 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v8) {
      id v8 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v9 = [v8 shouldLog];
    else {
      LODWORD(v10) = v9;
    }
    unsigned int v11 = (os_log_s *)objc_claimAutoreleasedReturnValue([v8 OSLogObject]);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO)) {
      uint64_t v10 = v10;
    }
    else {
      v10 &= 2u;
    }
    if ((_DWORD)v10)
    {
      uint64_t v12 = (void *)objc_opt_class(*(void *)(a1 + 48));
      int v22 = 138412546;
      id v23 = v12;
      __int16 v24 = 2048;
      uint64_t v25 = a2;
      id v13 = v12;
      uint64_t v14 = (void *)_os_log_send_and_compose_impl( v10,  0LL,  0LL,  0LL,  &_mh_execute_header,  v11,  1LL,  "%@: Removing pending upload with pid: %lld.",  &v22,  22);

      if (!v14)
      {
LABEL_16:

        goto LABEL_31;
      }

      unsigned int v11 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v14,  4LL));
      free(v14);
      SSFileLog(v8, @"%@");
    }

    goto LABEL_16;
  }

  if (-[MediaSocialPostEntity isOverPollDuration](v5, "isOverPollDuration"))
  {
    -[MediaSocialPostEntity deleteFromDatabase](v6, "deleteFromDatabase");
    goto LABEL_4;
  }

  uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v15) {
    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v16 = [v15 shouldLog];
  else {
    LODWORD(v17) = v16;
  }
  __int16 v18 = (os_log_s *)objc_claimAutoreleasedReturnValue([v15 OSLogObject]);
  if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO)) {
    uint64_t v17 = v17;
  }
  else {
    v17 &= 2u;
  }
  if ((_DWORD)v17)
  {
    int v19 = (void *)objc_opt_class(*(void *)(a1 + 48));
    int v22 = 138412546;
    id v23 = v19;
    __int16 v24 = 2048;
    uint64_t v25 = a2;
    id v20 = v19;
    unsigned int v21 = (void *)_os_log_send_and_compose_impl( v17,  0LL,  0LL,  0LL,  &_mh_execute_header,  v18,  1LL,  "%@: Keeping pending upload with pid: %lld.",  &v22,  22);

    if (!v21) {
      goto LABEL_29;
    }
    __int16 v18 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v21,  4LL));
    free(v21);
    SSFileLog(v15, @"%@");
  }

LABEL_29:
  uint64_t v7 = (NSNumber *)objc_claimAutoreleasedReturnValue(-[MediaSocialPostEntity statusPollRequest](v6, "statusPollRequest"));
  if (v7) {
    [*(id *)(a1 + 56) addObject:v7];
  }
LABEL_31:
}

void sub_10004CAF0(id a1, SSSQLiteDatabase *a2)
{
}

void sub_10004CEF8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id *location, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, id a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, char a45)
{
}

void sub_10004CF58(uint64_t a1, uint64_t a2)
{
  id v3 = -[MediaSocialPostEntity initWithPersistentID:inDatabase:]( objc_alloc(&OBJC_CLASS___MediaSocialPostEntity),  "initWithPersistentID:inDatabase:",  a2,  *(void *)(a1 + 32));
  if (-[MediaSocialPostEntity isReadyToSend](v3, "isReadyToSend")) {
    [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) addObject:v3];
  }
}

void sub_10004CFBC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = (dispatch_queue_s **)objc_loadWeakRetained((id *)(a1 + 40));
  unsigned int v5 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v6 = WeakRetained[5];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_10004D064;
    block[3] = &unk_10034C200;
    uint64_t v7 = *(void *)(a1 + 48);
    void block[4] = *(void *)(a1 + 32);
    uint64_t v10 = v7;
    id v9 = v3;
    dispatch_async(v6, block);
  }
}

id sub_10004D064(uint64_t a1)
{
  return [*(id *)(a1 + 32) _operationDidFinishForPostIdentifier:*(void *)(a1 + 48) response:*(void *)(a1 + 40)];
}

void sub_10004D0F0(uint64_t a1, void *a2)
{
  id v6 = a2;
  id v3 = -[NSNumber initWithLongLong:]( [NSNumber alloc],  "initWithLongLong:",  [v6 persistentIdentifier]);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 72) objectForKey:v3]);
  unsigned int v5 = v4;
  if (v4)
  {
    objc_msgSend(v6, "setCountOfBytesExpectedToSend:", objc_msgSend(v4, "countOfBytesExpectedToSend"));
    objc_msgSend(v6, "setCountOfBytesSent:", objc_msgSend(v5, "countOfBytesSent"));
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
}

void sub_10004D5DC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, char a27)
{
}

uint64_t sub_10004D634(uint64_t a1)
{
  id v2 = -[MediaSocialPostEntity initWithPersistentID:inDatabase:]( objc_alloc(&OBJC_CLASS___MediaSocialPostEntity),  "initWithPersistentID:inDatabase:",  *(void *)(a1 + 56),  *(void *)(a1 + 32));
  uint64_t v3 = objc_claimAutoreleasedReturnValue(-[MediaSocialPostEntity allUploadPersistentIdentifiers](v2, "allUploadPersistentIdentifiers"));
  uint64_t v4 = *(void *)(*(void *)(a1 + 48) + 8LL);
  unsigned int v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;

  -[MediaSocialPostEntity deleteFromDatabase](v2, "deleteFromDatabase");
  [*(id *)(a1 + 40) _enqueueNextReadyMediaSocialPostOperationWithDatabase:*(void *)(a1 + 32)];

  return 1LL;
}

void sub_10004D74C(uint64_t a1)
{
  id v1 = (id)objc_claimAutoreleasedReturnValue(+[Daemon daemon](&OBJC_CLASS___Daemon, "daemon"));
  [v1 releaseKeepAliveAssertion:@"DirectUploadController"];
}

void sub_10004D88C(uint64_t a1)
{
  xpc_object_t message = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 32));
  (*(void (**)(void))(*(void *)(a1 + 48) + 16LL))();
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 40), message);
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[Daemon daemon](&OBJC_CLASS___Daemon, "daemon"));
  [v2 releaseKeepAliveAssertion:@"DirectUploadController"];
}

void sub_10004DB60(uint64_t a1, int64_t value)
{
}

void sub_10004DB70(uint64_t a1, void *a2)
{
  id v3 = [a2 copyXPCEncoding];
  xpc_array_append_value(*(xpc_object_t *)(a1 + 32), v3);
}

void sub_10004DF18( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
}

uint64_t sub_10004DF34(uint64_t a1)
{
  id v2 = -[MediaSocialPostEntity initWithPersistentID:inDatabase:]( objc_alloc(&OBJC_CLASS___MediaSocialPostEntity),  "initWithPersistentID:inDatabase:",  *(void *)(a1 + 56),  *(void *)(a1 + 32));
  -[MediaSocialPostEntity setValue:forProperty:](v2, "setValue:forProperty:", &off_10036D698, @"is_failed");
  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v3) {
    id v3 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v4 = [v3 shouldLog];
  else {
    LODWORD(v5) = v4;
  }
  id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue([v3 OSLogObject]);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v5 = v5;
  }
  else {
    v5 &= 2u;
  }
  if (!(_DWORD)v5) {
    goto LABEL_12;
  }
  uint64_t v7 = (void *)objc_opt_class(*(void *)(a1 + 40));
  id v8 = *(void **)(a1 + 48);
  uint64_t v9 = *(void *)(a1 + 56);
  id v10 = v7;
  unsigned int v11 = (void *)objc_claimAutoreleasedReturnValue([v8 status]);
  int v16 = 138412802;
  uint64_t v17 = v7;
  __int16 v18 = 2048;
  uint64_t v19 = v9;
  __int16 v20 = 2112;
  unsigned int v21 = v11;
  uint64_t v12 = (void *)_os_log_send_and_compose_impl( v5,  0LL,  0LL,  0LL,  &_mh_execute_header,  v6,  0LL,  "%@: Failed to process post: %lld is now due to unrecoverable error: %@",  &v16,  32);

  if (v12)
  {
    id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v12,  4LL));
    free(v12);
    SSFileLog(v3, @"%@");
LABEL_12:
  }

  id v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) _errorCoordinator]);
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) serviceErrorMessage]);
  [v13 addDialogForPost:v2 errorMessage:v14 canRetry:0];

  return 1LL;
}

uint64_t sub_10004E16C(uint64_t a1)
{
  id v2 = -[MediaSocialPostEntity initWithPersistentID:inDatabase:]( objc_alloc(&OBJC_CLASS___MediaSocialPostEntity),  "initWithPersistentID:inDatabase:",  *(void *)(a1 + 56),  *(void *)(a1 + 32));
  -[MediaSocialPostEntity setValue:forProperty:](v2, "setValue:forProperty:", &off_10036D698, @"is_failed");
  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v3) {
    id v3 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v4 = [v3 shouldLog];
  else {
    LODWORD(v5) = v4;
  }
  id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue([v3 OSLogObject]);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v5 = v5;
  }
  else {
    v5 &= 2u;
  }
  if (!(_DWORD)v5) {
    goto LABEL_12;
  }
  uint64_t v7 = (void *)objc_opt_class(*(void *)(a1 + 40));
  id v8 = *(void **)(a1 + 48);
  uint64_t v9 = *(void *)(a1 + 56);
  id v10 = v7;
  unsigned int v11 = (void *)objc_claimAutoreleasedReturnValue([v8 status]);
  int v16 = 138412802;
  uint64_t v17 = v7;
  __int16 v18 = 2048;
  uint64_t v19 = v9;
  __int16 v20 = 2112;
  unsigned int v21 = v11;
  uint64_t v12 = (void *)_os_log_send_and_compose_impl( v5,  0LL,  0LL,  0LL,  &_mh_execute_header,  v6,  0LL,  "%@: Failed to process post: %lld is now due to a recoverable error: %@",  &v16,  32);

  if (v12)
  {
    id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v12,  4LL));
    free(v12);
    SSFileLog(v3, @"%@");
LABEL_12:
  }

  id v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) _errorCoordinator]);
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) serviceErrorMessage]);
  [v13 addDialogForPost:v2 errorMessage:v14 canRetry:1];

  return 1LL;
}

uint64_t sub_10004E3A4(uint64_t a1)
{
  id v2 = -[MediaSocialPostEntity initWithPersistentID:inDatabase:]( objc_alloc(&OBJC_CLASS___MediaSocialPostEntity),  "initWithPersistentID:inDatabase:",  *(void *)(a1 + 64),  *(void *)(a1 + 32));
  id v3 = (void *)objc_claimAutoreleasedReturnValue(-[MediaSocialPostEntity valueForProperty:](v2, "valueForProperty:", @"failure_count"));
  uint64_t v4 = (uint64_t)[v3 integerValue];

  -[MediaSocialPostEntity setValue:forProperty:](v2, "setValue:forProperty:", &off_10036D698, @"is_failed");
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", v4 + 1));
  -[MediaSocialPostEntity setValue:forProperty:](v2, "setValue:forProperty:", v5, @"failure_count");

  id v6 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v6) {
    id v6 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v7 = [v6 shouldLog];
  else {
    LODWORD(v_Block_object_dispose(va, 8) = v7;
  }
  uint64_t v9 = (os_log_s *)objc_claimAutoreleasedReturnValue([v6 OSLogObject]);
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v8 = v8;
  }
  else {
    v8 &= 2u;
  }
  if ((_DWORD)v8)
  {
    id v10 = (void *)objc_opt_class(*(void *)(a1 + 40));
    uint64_t v11 = *(void *)(a1 + 64);
    uint64_t v12 = *(void **)(a1 + 48);
    id v17 = v10;
    id v13 = (void *)objc_claimAutoreleasedReturnValue([v12 error]);
    int v18 = 138413058;
    uint64_t v19 = v10;
    __int16 v20 = 2048;
    uint64_t v21 = v11;
    __int16 v22 = 2048;
    uint64_t v23 = v4 + 1;
    __int16 v24 = 2112;
    uint64_t v25 = v13;
    uint64_t v14 = (void *)_os_log_send_and_compose_impl( v8,  0LL,  0LL,  0LL,  &_mh_execute_header,  v9,  0LL,  "%@: Failure count for post: %lld is now: %ld, after error: %@",  &v18,  42);

    if (!v14) {
      goto LABEL_13;
    }
    uint64_t v9 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v14,  4LL));
    free(v14);
    SSFileLog(v6, @"%@");
  }

LABEL_13:
  if (v4 > 1)
  {
    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) _errorCoordinator]);
    [v15 addDialogForPost:v2];
  }

  else
  {
    *(_BYTE *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL) = 1;
  }

  return 1LL;
}

uint64_t sub_10004E644(uint64_t a1)
{
  id v2 = -[MediaSocialPostEntity initWithPersistentID:inDatabase:]( objc_alloc(&OBJC_CLASS___MediaSocialPostEntity),  "initWithPersistentID:inDatabase:",  *(void *)(a1 + 56),  *(void *)(a1 + 32));
  [*(id *)(a1 + 40) pollingInterval];
  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:"));
  -[MediaSocialPostEntity setValue:forProperty:](v2, "setValue:forProperty:", v3, @"poll_interval");

  [*(id *)(a1 + 40) pollDuration];
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:"));
  -[MediaSocialPostEntity setValue:forProperty:](v2, "setValue:forProperty:", v4, @"poll_duration");

  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) activityIdentifier]);
  -[MediaSocialPostEntity setValue:forProperty:](v2, "setValue:forProperty:", v5, @"activity_id");

  uint64_t v6 = objc_claimAutoreleasedReturnValue(-[MediaSocialPostEntity statusPollRequest](v2, "statusPollRequest"));
  uint64_t v7 = *(void *)(*(void *)(a1 + 48) + 8LL);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v6;

  return 1LL;
}

uint64_t sub_10004E8BC(uint64_t a1)
{
  id v2 = [(id)objc_opt_class(*(void *)(a1 + 32)) _orderedUploadQueryWithDatabase:*(void *)(a1 + 40) predicate:*(void *)(a1 + 48)];
  id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  v7[2] = sub_10004E98C;
  v7[3] = &unk_10034C318;
  id v8 = *(id *)(a1 + 40);
  id v9 = *(id *)(a1 + 56);
  id v4 = *(id *)(a1 + 64);
  uint64_t v5 = *(void *)(a1 + 32);
  id v10 = v4;
  uint64_t v11 = v5;
  id v12 = *(id *)(a1 + 72);
  [v3 enumeratePersistentIDsUsingBlock:v7];

  return 1LL;
}

void sub_10004E98C(uint64_t a1, uint64_t a2)
{
  id v4 = -[DirectUploadEntity initWithPersistentID:inDatabase:]( objc_alloc(&OBJC_CLASS___DirectUploadEntity),  "initWithPersistentID:inDatabase:",  a2,  *(void *)(a1 + 32));
  -[DirectUploadEntity setValue:forProperty:](v4, "setValue:forProperty:", &off_10036D6B0, @"state");
  uint64_t v5 = -[NSNumber initWithLongLong:](objc_alloc(&OBJC_CLASS___NSNumber), "initWithLongLong:", a2);
  [*(id *)(a1 + 40) addObject:v5];
  if (*(void *)(a1 + 48))
  {
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 56) + 72) objectForKey:v5]);
    id v7 = [*(id *)(a1 + 56) _newSSVDirectUploadWithProgress:v6 state:3];
    [v7 setPersistentIdentifier:a2];
    [*(id *)(a1 + 48) addObject:v7];
  }

  id v8 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v8) {
    id v8 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v9 = [v8 shouldLog];
  else {
    LODWORD(v10) = v9;
  }
  uint64_t v11 = (os_log_s *)objc_claimAutoreleasedReturnValue([v8 OSLogObject]);
  if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO)) {
    uint64_t v10 = v10;
  }
  else {
    v10 &= 2u;
  }
  if ((_DWORD)v10)
  {
    id v12 = (void *)objc_opt_class(*(void *)(a1 + 56));
    uint64_t v13 = *(void *)(a1 + 64);
    int v17 = 138412802;
    int v18 = v12;
    __int16 v19 = 2048;
    uint64_t v20 = a2;
    __int16 v21 = 2112;
    uint64_t v22 = v13;
    id v14 = v12;
    uint64_t v15 = (void *)_os_log_send_and_compose_impl( v10,  0LL,  0LL,  0LL,  &_mh_execute_header,  v11,  1LL,  "%@: Pausing upload: %lld, for client: %@",  &v17,  32);

    if (v15)
    {
      int v16 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v15,  4LL));
      free(v15);
      SSFileLog(v8, @"%@");
    }
  }

  else
  {
  }
}

LABEL_33:
}

  -[LoadMicroPaymentQueuesOperation setError:](self, "setError:", v10, v37);
  -[LoadMicroPaymentQueuesOperation setSuccess:](self, "setSuccess:", v9);
  int v36 = (void *)objc_claimAutoreleasedReturnValue(+[SSURLBagContext contextWithBagType:](&OBJC_CLASS___SSURLBagContext, "contextWithBagType:", 0LL));
  +[ISLoadURLBagOperation decrementNetworkCounterForBagContext:]( &OBJC_CLASS___ISLoadURLBagOperation,  "decrementNetworkCounterForBagContext:",  v36);
}

  return v6;
}

  -[DownloadPipeline _reloadKeepAliveAssertion](self, "_reloadKeepAliveAssertion");
}

  -[RemoteWebViewOperation setError:](self, "setError:", v33);
  -[RemoteWebViewOperation setSuccess:](self, "setSuccess:", 1LL);
}

uint64_t sub_10004F200(uint64_t a1)
{
  id v2 = [(id)objc_opt_class(*(void *)(a1 + 32)) _orderedUploadQueryWithDatabase:*(void *)(a1 + 40) predicate:*(void *)(a1 + 48)];
  id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  v7[2] = sub_10004F2D8;
  v7[3] = &unk_10034C368;
  id v8 = *(id *)(a1 + 40);
  char v13 = *(_BYTE *)(a1 + 80);
  id v9 = *(id *)(a1 + 56);
  id v4 = *(id *)(a1 + 64);
  uint64_t v5 = *(void *)(a1 + 32);
  id v10 = v4;
  uint64_t v11 = v5;
  id v12 = *(id *)(a1 + 72);
  [v3 enumeratePersistentIDsUsingBlock:v7];

  return 1LL;
}

void sub_10004F2D8(uint64_t a1, uint64_t a2)
{
  id v4 = -[DirectUploadEntity initWithPersistentID:inDatabase:]( objc_alloc(&OBJC_CLASS___DirectUploadEntity),  "initWithPersistentID:inDatabase:",  a2,  *(void *)(a1 + 32));
  -[DirectUploadEntity resetStatusProperties](v4, "resetStatusProperties");
  if (*(_BYTE *)(a1 + 72)) {
    -[DirectUploadEntity setValue:forProperty:](v4, "setValue:forProperty:", &off_10036D680, @"failure_count");
  }
  uint64_t v5 = -[DirectUploadRequest initWithEntity:accountIdentifier:]( objc_alloc(&OBJC_CLASS___DirectUploadRequest),  "initWithEntity:accountIdentifier:",  v4,  0LL);
  if (v5) {
    [*(id *)(a1 + 40) addObject:v5];
  }
  if (*(void *)(a1 + 48))
  {
    uint64_t v6 = -[NSNumber initWithLongLong:](objc_alloc(&OBJC_CLASS___NSNumber), "initWithLongLong:", a2);
    id v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 56) + 72) objectForKey:v6]);
    id v8 = [*(id *)(a1 + 56) _newSSVDirectUploadWithProgress:v7 state:0];
    [v8 setPersistentIdentifier:a2];
    [*(id *)(a1 + 48) addObject:v8];
  }

  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v10 = objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  uint64_t v11 = (void *)v10;
  if (v9)
  {
    if (!v10) {
      uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v12 = [v11 shouldLog];
    else {
      LODWORD(v13) = v12;
    }
    id v14 = (os_log_s *)objc_claimAutoreleasedReturnValue([v11 OSLogObject]);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO)) {
      uint64_t v13 = v13;
    }
    else {
      v13 &= 2u;
    }
    if ((_DWORD)v13)
    {
      uint64_t v15 = (void *)objc_opt_class(*(void *)(a1 + 56));
      uint64_t v16 = *(void *)(a1 + 64);
      *(_DWORD *)__int16 v24 = 138412802;
      *(void *)&v24[4] = v15;
      *(_WORD *)&v24[12] = 2048;
      *(void *)&v24[14] = a2;
      *(_WORD *)&v24[22] = 2112;
      uint64_t v25 = v16;
      id v17 = v15;
      uint64_t v18 = _os_log_send_and_compose_impl( v13,  0LL,  0LL,  0LL,  &_mh_execute_header,  v14,  1LL,  "%@: Reset upload: %lld, for client: %@",  v24,  32,  *(_OWORD *)v24,  *(void *)&v24[16],  v25);
      goto LABEL_28;
    }

LABEL_30:
    goto LABEL_31;
  }

  if (!v10) {
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v19 = [v11 shouldLog];
  else {
    LODWORD(v20) = v19;
  }
  id v14 = (os_log_s *)objc_claimAutoreleasedReturnValue([v11 OSLogObject]);
  if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO)) {
    uint64_t v20 = v20;
  }
  else {
    v20 &= 2u;
  }
  if (!(_DWORD)v20) {
    goto LABEL_30;
  }
  __int16 v21 = (void *)objc_opt_class(*(void *)(a1 + 56));
  *(_DWORD *)__int16 v24 = 138412546;
  *(void *)&v24[4] = v21;
  *(_WORD *)&v24[12] = 2048;
  *(void *)&v24[14] = a2;
  id v17 = v21;
  uint64_t v18 = _os_log_send_and_compose_impl( v20,  0LL,  0LL,  0LL,  &_mh_execute_header,  v14,  1LL,  "%@: Reset upload: %lld",  v24,  22,  *(_OWORD *)v24,  *(void *)&v24[16],  v25);
LABEL_28:
  uint64_t v22 = (void *)v18;

  if (v22)
  {
    uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v22,  4LL));
    free(v22);
    SSFileLog(v11, @"%@");
  }

    unsigned int v19 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig", v33);
    if (!v19) {
      unsigned int v19 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    uint64_t v20 = [v19 shouldLog];
    else {
      LODWORD(v21) = v20;
    }
    uint64_t v22 = (os_log_s *)[v19 OSLogObject];
    if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT)) {
      __int16 v21 = v21;
    }
    else {
      v21 &= 2u;
    }
    if ((_DWORD)v21)
    {
      uint64_t v23 = objc_opt_class(self);
      id v37 = 138412290;
      __int16 v38 = v23;
      LODWORD(v34) = 12;
      uint64_t v11 = (NSData *)_os_log_send_and_compose_impl( v21,  0LL,  0LL,  0LL,  &_mh_execute_header,  v22,  0LL,  "%@: Could not generate checkin request body",  &v37,  v34);
      if (!v11) {
        goto LABEL_42;
      }
      +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v11, 4LL);
      free(v11);
      SSFileLog(v19, @"%@");
    }

    uint64_t v11 = 0LL;
    goto LABEL_42;
  }

  uint64_t v5 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  uint64_t v6 = v5;
  if (v36) {
    -[NSMutableDictionary setObject:forKey:](v5, "setObject:forKey:", v36, @"device-diversity");
  }
  accountIdentifier = self->_accountIdentifier;
  if (accountIdentifier) {
    -[NSMutableDictionary setObject:forKey:](v6, "setObject:forKey:", accountIdentifier, @"dsid");
  }
  id v8 = -[ISDevice guid](+[ISDevice sharedInstance](&OBJC_CLASS___ISDevice, "sharedInstance"), "guid");
  if (v8) {
    -[NSMutableDictionary setObject:forKey:](v6, "setObject:forKey:", v8, @"guid");
  }
  uint64_t v9 = objc_msgSend(+[SSDevice currentDevice](SSDevice, "currentDevice"), "productType");
  if (v9) {
    -[NSMutableDictionary setObject:forKey:](v6, "setObject:forKey:", v9, @"hw.model");
  }
  if (v35) {
    -[NSMutableDictionary setObject:forKey:](v6, "setObject:forKey:", v35, @"rbsync");
  }
  -[NSMutableDictionary setObject:forKey:](v6, "setObject:forKey:", v4, @"rental-bag");
  rentalKeyIdentifier = self->_rentalKeyIdentifier;
  if (rentalKeyIdentifier) {
    -[NSMutableDictionary setObject:forKey:](v6, "setObject:forKey:", rentalKeyIdentifier, @"rental-id");
  }
  uint64_t v11 = +[NSPropertyListSerialization dataWithPropertyList:format:options:error:]( &OBJC_CLASS___NSPropertyListSerialization,  "dataWithPropertyList:format:options:error:",  v6,  100LL,  0LL,  0LL);

LABEL_42:
  return v11;
}

  return 1LL;
}

  uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig", v35));
  if (!v20) {
    uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  __int16 v21 = [v20 shouldLog];
  else {
    LODWORD(v22) = v21;
  }
  uint64_t v23 = (os_log_s *)objc_claimAutoreleasedReturnValue([v20 OSLogObject]);
  if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO)) {
    uint64_t v22 = v22;
  }
  else {
    v22 &= 2u;
  }
  if ((_DWORD)v22)
  {
    __int16 v24 = (void *)objc_opt_class(self);
    id v37 = 138412290;
    __int16 v38 = v24;
    uint64_t v25 = v24;
    LODWORD(v36) = 12;
    id v26 = (void *)_os_log_send_and_compose_impl( v22,  0LL,  0LL,  0LL,  &_mh_execute_header,  v23,  1LL,  "[%@]: Restore From Backup Migration",  &v37,  v36);

    if (!v26) {
      goto LABEL_42;
    }
    uint64_t v23 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v26,  4LL));
    free(v26);
    __int128 v35 = v23;
    SSFileLog(v20, @"%@");
  }

LABEL_42:
  if ((self->_updateType & 8) != 0) {
    goto LABEL_43;
  }
  return 1;
}

  return v27;
}

      uint64_t v5 = 0LL;
      goto LABEL_31;
    }

    uint64_t v25 = v5;
LABEL_29:

    uint64_t v5 = v25;
    goto LABEL_30;
  }

    uint64_t v20 = 0LL;
    __int16 v21 = 1;
    if (!a5) {
      goto LABEL_29;
    }
    goto LABEL_28;
  }

  if (v9 != (id)4) {
    goto LABEL_30;
  }
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v10) {
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  uint64_t v11 = [v10 shouldLog];
  else {
    LODWORD(v12) = v11;
  }
  uint64_t v13 = (os_log_s *)objc_claimAutoreleasedReturnValue([v10 OSLogObject]);
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT)) {
    unsigned int v12 = v12;
  }
  else {
    v12 &= 2u;
  }
  if (!(_DWORD)v12) {
    goto LABEL_26;
  }
  *(_DWORD *)uint64_t v23 = 138412546;
  *(void *)&v23[4] = objc_opt_class(self);
  *(_WORD *)&v23[12] = 2112;
  *(void *)&v23[14] = v8;
  id v14 = *(id *)&v23[4];
  uint64_t v15 = _os_log_send_and_compose_impl( v12,  0LL,  0LL,  0LL,  &_mh_execute_header,  v13,  0LL,  "%@: iTunes sync in progress for bundleID: %@",  v23,  22,  *(_OWORD *)v23,  *(void *)&v23[16]);
LABEL_24:
  uint64_t v18 = (void *)v15;

  if (!v18) {
    goto LABEL_27;
  }
  uint64_t v13 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v18,  4LL));
  free(v18);
  SSFileLog(v10, @"%@");
LABEL_26:

LABEL_27:
  unsigned int v19 = SSError(SSErrorDomain, 140LL, 0LL, 0LL);
  uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue(v19);
  __int16 v21 = 0;
  if (a5) {
LABEL_28:
  }
    *a5 = v20;
LABEL_29:

  return v21;
}

  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  unsigned int v19 = [v9 shouldLog];
  else {
    uint64_t v20 = v19;
  }
  unsigned int v12 = (os_log_s *)objc_claimAutoreleasedReturnValue([v9 OSLogObject]);
  if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
    __int16 v21 = v20;
  }
  else {
    __int16 v21 = v20 & 2;
  }
  if (!(_DWORD)v21) {
    goto LABEL_27;
  }
  uint64_t v22 = (void *)objc_opt_class(v23);
  uint64_t v25 = 138543874;
  id v26 = v22;
  id v27 = 2048;
  int v28 = v24;
  uint64_t v29 = 2048;
  __int16 v30 = 11302LL;
  uint64_t v15 = v22;
  uint64_t v16 = _os_log_send_and_compose_impl( v21,  0LL,  0LL,  0LL,  &_mh_execute_header,  v12,  16LL,  "[%{public}@] No Purchase Intent Database migration function for %li => %li",  &v25,  32);
LABEL_25:
  id v17 = (void *)v16;

  if (!v17) {
    goto LABEL_28;
  }
  unsigned int v12 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v17,  4LL));
  free(v17);
  SSFileLog(v9, @"%@");
LABEL_27:

LABEL_28:
  id v8 = 0;
LABEL_29:

  return v8;
}

uint64_t sub_10004F6B8(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[SSSQLiteComparisonPredicate predicateWithProperty:value:comparisonType:]( &OBJC_CLASS___SSSQLiteComparisonPredicate,  "predicateWithProperty:value:comparisonType:",  @"failure_count",  &off_10036D680,  5LL));
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[SSSQLiteComparisonPredicate predicateWithProperty:value:comparisonType:]( &OBJC_CLASS___SSSQLiteComparisonPredicate,  "predicateWithProperty:value:comparisonType:",  @"failure_count",  &off_10036D6C8,  3LL));
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[SSSQLiteComparisonPredicate predicateWithProperty:equalToLongLong:]( &OBJC_CLASS___SSSQLiteComparisonPredicate,  "predicateWithProperty:equalToLongLong:",  @"state",  4LL));
  v27[0] = v4;
  v27[1] = v2;
  v27[2] = v3;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v27, 3LL));
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue( +[SSSQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SSSQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v5));

  [*(id *)(a1 + 32) _resumeUploadsWithPredicate:v6 clientIdentifier:0 resetFailureCount:0 error:0];
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[SSSQLiteComparisonPredicate predicateWithProperty:value:comparisonType:]( &OBJC_CLASS___SSSQLiteComparisonPredicate,  "predicateWithProperty:value:comparisonType:",  @"failure_count",  &off_10036D680,  5LL));
  id v8 = (void *)objc_claimAutoreleasedReturnValue( +[SSSQLiteComparisonPredicate predicateWithProperty:value:comparisonType:]( &OBJC_CLASS___SSSQLiteComparisonPredicate,  "predicateWithProperty:value:comparisonType:",  @"failure_count",  &off_10036D6C8,  3LL));
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue( +[SSSQLiteComparisonPredicate predicateWithProperty:equalToLongLong:]( &OBJC_CLASS___SSSQLiteComparisonPredicate,  "predicateWithProperty:equalToLongLong:",  @"is_failed",  1LL));
  v26[0] = v9;
  v26[1] = v7;
  v26[2] = v8;
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v26, 3LL));
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue( +[SSSQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SSSQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v10));

  id v12 = [(id)objc_opt_class(*(void *)(a1 + 32)) _orderedPostQueryWithDatabase:*(void *)(a1 + 40) predicate:v11];
  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
  uint64_t v22 = 0LL;
  uint64_t v23 = &v22;
  uint64_t v24 = 0x2020000000LL;
  uint64_t v25 = 0LL;
  uint64_t v15 = _NSConcreteStackBlock;
  uint64_t v16 = 3221225472LL;
  id v17 = sub_10004F994;
  uint64_t v18 = &unk_10034C3B8;
  uint64_t v19 = *(void *)(a1 + 32);
  id v20 = *(id *)(a1 + 40);
  __int16 v21 = &v22;
  [v13 enumeratePersistentIDsUsingBlock:&v15];
  if (v23[3] >= 1) {
    objc_msgSend( *(id *)(a1 + 32),  "_enqueueNextReadyMediaSocialPostOperationWithDatabase:",  *(void *)(a1 + 40),  v15,  v16,  v17,  v18,  v19);
  }

  _Block_object_dispose(&v22, 8);
  return 1LL;
}

void sub_10004F974( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
}

void sub_10004F994(void *a1, uint64_t a2)
{
  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v4) {
    id v4 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v5 = [v4 shouldLog];
  else {
    LODWORD(v6) = v5;
  }
  id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue([v4 OSLogObject]);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO)) {
    uint64_t v6 = v6;
  }
  else {
    v6 &= 2u;
  }
  if (!(_DWORD)v6) {
    goto LABEL_12;
  }
  id v8 = (void *)objc_opt_class(a1[4]);
  int v12 = 138412546;
  uint64_t v13 = v8;
  __int16 v14 = 2048;
  uint64_t v15 = a2;
  id v9 = v8;
  uint64_t v10 = (void *)_os_log_send_and_compose_impl( v6,  0LL,  0LL,  0LL,  &_mh_execute_header,  v7,  1LL,  "%@: Retrying failed media social post: %lld",  &v12,  22);

  if (v10)
  {
    id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v10,  4LL));
    free(v10);
    SSFileLog(v4, @"%@");
LABEL_12:
  }

  uint64_t v11 = -[MediaSocialPostEntity initWithPersistentID:inDatabase:]( objc_alloc(&OBJC_CLASS___MediaSocialPostEntity),  "initWithPersistentID:inDatabase:",  a2,  a1[5]);
  -[MediaSocialPostEntity setValue:forProperty:](v11, "setValue:forProperty:", &off_10036D680, @"is_failed");
  ++*(void *)(*(void *)(a1[6] + 8LL) + 24LL);
}

void sub_1000513D4(uint64_t a1, uint64_t a2)
{
  id v3 = -[NSNumber initWithLongLong:](objc_alloc(&OBJC_CLASS___NSNumber), "initWithLongLong:", a2);
  [*(id *)(a1 + 32) addObject:v3];
}

void sub_1000515A8(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = objc_alloc_init(&OBJC_CLASS___SSVMediaSocialPostItem);
  [v5 setIdentifier:*a3];
  [v5 setType:a3[1]];
  [*(id *)(a1 + 32) addObject:v5];
}

void sub_1000517B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v7 = objc_alloc_init(&OBJC_CLASS___SSVMediaSocialPostExternalDestination);
  [v7 setAccessToken:*(void *)a3];
  [v7 setPageAccessToken:*(void *)(a3 + 8)];
  [v7 setPageIdentifier:*(void *)(a3 + 16)];
  id v5 = sub_1000877D4((uint64_t)[*(id *)(a3 + 24) integerValue]);
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  [v7 setServiceIdentifier:v6];

  [*(id *)(a1 + 32) addObject:v7];
}

void sub_1000519E8(id *a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue([a1[4] _insertUploadWithAttachment:v3 properties:a1[5] database:a1[6]]);
  if (v4)
  {
    [a1[7] addObject:v4];
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472LL;
    v7[2] = sub_100051AD4;
    v7[3] = &unk_10034C408;
    id v8 = a1[5];
    id v5 = v4;
    id v6 = a1[4];
    id v9 = v5;
    id v10 = v6;
    id v11 = a1[6];
    id v12 = a1[7];
    [v3 enumerateChildAttachmentsUsingBlock:v7];
  }
}

void sub_100051AD4(uint64_t a1, void *a2, void *a3)
{
  id v5 = *(void **)(a1 + 32);
  id v6 = a3;
  id v7 = a2;
  id v10 = [v5 mutableCopy];
  [v10 setObject:v6 forKey:@"parent_relationship_type"];

  id v8 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithLongLong:]( NSNumber,  "numberWithLongLong:",  [*(id *)(a1 + 40) persistentID]));
  [v10 setObject:v8 forKey:@"parent_upload_id"];

  id v9 = (void *)objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 48) _insertUploadWithAttachment:v7 properties:v10 database:*(void *)(a1 + 56)]);
  if (v9) {
    [*(id *)(a1 + 64) addObject:v9];
  }
}

void sub_100051CCC(uint64_t a1, uint64_t a2)
{
  id v4 = +[MediaSocialContentItemEntity newEntityValuesWithMediaSocialPostItem:]( &OBJC_CLASS___MediaSocialContentItemEntity,  "newEntityValuesWithMediaSocialPostItem:",  a2);
  [v4 setObject:*(void *)(a1 + 32) forKey:@"post_id"];
  id v3 = -[MediaSocialContentItemEntity initWithPropertyValues:inDatabase:]( objc_alloc(&OBJC_CLASS___MediaSocialContentItemEntity),  "initWithPropertyValues:inDatabase:",  v4,  *(void *)(a1 + 40));
  if (v3) {
    [*(id *)(a1 + 48) addObject:v3];
  }
}

void sub_100051E64(uint64_t a1, uint64_t a2)
{
  id v4 = +[MediaSocialExternalTargetEntity newEntityValuesWithMediaSocialExternalDestination:]( &OBJC_CLASS___MediaSocialExternalTargetEntity,  "newEntityValuesWithMediaSocialExternalDestination:",  a2);
  [v4 setObject:*(void *)(a1 + 32) forKey:@"post_id"];
  id v3 = -[MediaSocialExternalTargetEntity initWithPropertyValues:inDatabase:]( objc_alloc(&OBJC_CLASS___MediaSocialExternalTargetEntity),  "initWithPropertyValues:inDatabase:",  v4,  *(void *)(a1 + 40));
  if (v3) {
    [*(id *)(a1 + 48) addObject:v3];
  }
}

void sub_1000527D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 8))
  {
    id v9 = objc_alloc_init(&OBJC_CLASS___MediaSocialPostAttachment);
    -[MediaSocialPostAttachment setAlbumIdentifier:](v9, "setAlbumIdentifier:", *(void *)a3);
    -[MediaSocialPostAttachment setAssetToken:](v9, "setAssetToken:", *(void *)(a3 + 8));
    -[MediaSocialPostAttachment setAssetTokenType:](v9, "setAssetTokenType:", *(void *)(a3 + 16));
    -[MediaSocialPostAttachment setAttachmentDescription:](v9, "setAttachmentDescription:", *(void *)(a3 + 32));
    -[MediaSocialPostAttachment setCategoryName:](v9, "setCategoryName:", *(void *)(a3 + 24));
    -[MediaSocialPostAttachment setExplicitContent:]( v9,  "setExplicitContent:",  [*(id *)(a3 + 40) BOOLValue]);
    [*(id *)(a3 + 64) doubleValue];
    -[MediaSocialPostAttachment setPreviewFrameTimestamp:](v9, "setPreviewFrameTimestamp:");
    -[MediaSocialPostAttachment setTitle:](v9, "setTitle:", *(void *)(a3 + 72));
    [*(id *)(a3 + 80) doubleValue];
    -[MediaSocialPostAttachment setUploadTime:](v9, "setUploadTime:");
    -[MediaSocialPostAttachment setUTI:](v9, "setUTI:", *(void *)(a3 + 88));
    id v6 = -[DirectUploadEntity initWithPersistentID:inDatabase:]( objc_alloc(&OBJC_CLASS___DirectUploadEntity),  "initWithPersistentID:inDatabase:",  a2,  *(void *)(a1 + 32));
    id v7 = (void *)objc_claimAutoreleasedReturnValue(-[DirectUploadEntity artists](v6, "artists"));
    -[MediaSocialPostAttachment setArtists:](v9, "setArtists:", v7);

    if ([*(id *)(a3 + 48) longLongValue])
    {
      if (!*(void *)(a3 + 56))
      {
LABEL_8:

        return;
      }

      id v8 = (NSNumber *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) objectForKey:*(void *)(a3 + 48)]);
      -[NSNumber setChildAttachment:forRelationship:]( v8,  "setChildAttachment:forRelationship:",  v9,  *(void *)(a3 + 56));
    }

    else
    {
      id v8 = -[NSNumber initWithLongLong:](objc_alloc(&OBJC_CLASS___NSNumber), "initWithLongLong:", a2);
      [*(id *)(a1 + 40) setObject:v9 forKey:v8];
      [*(id *)(a1 + 48) addObject:v9];
    }

    goto LABEL_8;
  }

NSMutableDictionary *sub_100052B5C(void *a1)
{
  id v2 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  id v3 = [a1 bundleIdentifier];
  if (v3)
  {
    id v4 = [v3 copyUTF8StringOfLength:256];
    if (v4)
    {
      id v5 = v4;
      -[NSMutableDictionary setObject:forKey:](v2, "setObject:forKey:", v4, @"bid");
    }
  }

  id v6 = [a1 bundleVersion];
  if (v6)
  {
    id v7 = [v6 copyUTF8StringOfLength:100];
    if (v7)
    {
      id v8 = v7;
      -[NSMutableDictionary setObject:forKey:](v2, "setObject:forKey:", v7, @"bvrs");
    }
  }

  id v9 = [a1 storeIdentifier];
  if (v9) {
    -[NSMutableDictionary setObject:forKey:]( v2,  "setObject:forKey:",  [v9 stringValue],  @"appAdamId");
  }
  id v10 = [a1 storeVersion];
  if (v10) {
    -[NSMutableDictionary setObject:forKey:]( v2,  "setObject:forKey:",  [v10 stringValue],  @"appExtVrsId");
  }
  id v11 = [a1 vendorIdentifier];
  if (v11) {
    -[NSMutableDictionary setObject:forKey:](v2, "setObject:forKey:", v11, @"vid");
  }
  return v2;
}

LABEL_39:
LABEL_40:
  if (v4) {
    (*((void (**)(id, void, void, void))v4 + 2))(v4, v8 ^ 1, 0LL, 0LL);
  }
}

    goto LABEL_40;
  }

  if (!v5) {
    id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  id v7 = -[os_log_s shouldLog](v6, "shouldLog");
  else {
    LODWORD(v_Block_object_dispose(va, 8) = v7;
  }
  id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[os_log_s OSLogObject](v6, "OSLogObject"));
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT)) {
    id v8 = v8;
  }
  else {
    v8 &= 2u;
  }
  if (!(_DWORD)v8) {
    goto LABEL_14;
  }
  uint64_t v22 = 138543362;
  uint64_t v23 = (id)objc_opt_class(a1);
  id v10 = v23;
  id v11 = (void *)_os_log_send_and_compose_impl( v8,  0LL,  0LL,  0LL,  &_mh_execute_header,  v9,  0LL,  "[%{public}@]: Attempting to request bookassetd to process automatic downloads",  &v22,  12);

  if (v11)
  {
    id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v11,  4LL));
    free(v11);
    SSFileLog(v6, @"%@");
LABEL_14:
  }

  v21[0] = _NSConcreteStackBlock;
  v21[1] = 3221225472LL;
  void v21[2] = sub_10014EAEC;
  v21[3] = &unk_10034FB80;
  void v21[4] = a1;
  [v4 processAutomaticDownloadsWithReply:v21];
LABEL_40:
}

void sub_100054B64(_Unwind_Exception *a1)
{
}

void sub_100054BA0(void *exc_buf, int a2)
{
  if (a2)
  {
    objc_begin_catch(exc_buf);
    JUMPOUT(0x100054B14LL);
  }

  JUMPOUT(0x100054B88LL);
}

void sub_100054C2C(_Unwind_Exception *a1)
{
}

void sub_100054C48()
{
}

void sub_100054DD4(_Unwind_Exception *exc_buf, int a2)
{
  if (a2)
  {
    objc_begin_catch(exc_buf);
    JUMPOUT(0x100054D88LL);
  }

  _Unwind_Resume(exc_buf);
}

void sub_100054F7C(_Unwind_Exception *a1)
{
}

void sub_100054FB8(void *exc_buf, int a2)
{
  if (a2)
  {
    objc_begin_catch(exc_buf);
    JUMPOUT(0x100054F2CLL);
  }

  JUMPOUT(0x100054F9CLL);
}

void sub_100055038(_Unwind_Exception *a1)
{
}

void sub_100055054()
{
}

void sub_10005532C(_Unwind_Exception *a1)
{
}

void sub_100055378(void *exc_buf, int a2)
{
  if (a2)
  {
    objc_begin_catch(exc_buf);
    JUMPOUT(0x1000552D8LL);
  }

  JUMPOUT(0x10005534CLL);
}

id sub_100056428(uint64_t a1)
{
  id v2 = *(id *)(*(void *)(a1 + 32) + 16LL);
  if (!v2) {
    id v2 = +[ISOperationQueue mainQueue](&OBJC_CLASS___ISOperationQueue, "mainQueue");
  }
  return [v2 addOperation:*(void *)(a1 + 40)];
}

void sub_1000564F4(uint64_t a1)
{
  xpc_object_t v2 = xpc_dictionary_create(0LL, 0LL, 0LL);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    (*(void (**)(uint64_t, xpc_object_t))(v3 + 16))(v3, v2);
  }
  objc_msgSend( objc_msgSend( objc_getAssociatedObject(*(id *)(a1 + 32), "com.apple.itunesstored.RequestQueue.client"),  "outputConnection"),  "sendMessage:",  v2);
  [*(id *)(a1 + 32) setCompletionBlock:0];
  objc_setAssociatedObject(*(id *)(a1 + 32), "com.apple.itunesstored.RequestQueue.client", 0LL, (void *)0x301);
  xpc_release(v2);
}

void sub_100056658(uint64_t a1)
{
  if (([*(id *)(a1 + 32) isCancelled] & 1) == 0)
  {
    xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 40));
    uint64_t v3 = *(void *)(a1 + 56);
    if (v3) {
      (*(void (**)(uint64_t, xpc_object_t))(v3 + 16))(v3, reply);
    }
    xpc_connection_send_message(*(xpc_connection_t *)(a1 + 48), reply);
    xpc_release(reply);
  }

  [*(id *)(a1 + 32) setCompletionBlock:0];
  objc_setAssociatedObject(*(id *)(a1 + 32), "com.apple.itunesstored.RequestQueue.client", 0LL, (void *)0x301);
  xpc_release(*(xpc_object_t *)(a1 + 40));
  xpc_release(*(xpc_object_t *)(a1 + 48));
}

void sub_100056C24( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_100056C3C(uint64_t a1, uint64_t a2)
{
}

void sub_100056C4C(uint64_t a1)
{
}

id sub_100056C58(uint64_t a1)
{
  id result = *(id *)(*(void *)(a1 + 32) + 16LL);
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL) = result;
  return result;
}

void *sub_100056CF8(void *result)
{
  id v1 = *(void **)(result[4] + 16LL);
  if (v1 != (void *)result[5])
  {
    xpc_object_t v2 = result;

    id result = (id)v2[5];
    *(void *)(v2[4] + 16LL) = result;
  }

  return result;
}

LABEL_45:
  uint64_t v41 = (void *)objc_claimAutoreleasedReturnValue( +[SSLogConfig sharedAccountsAuthenticationConfig]( &OBJC_CLASS___SSLogConfig,  "sharedAccountsAuthenticationConfig",  v81));
  if (!v41) {
    uint64_t v41 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  uint64_t v42 = [v41 shouldLog];
  else {
    uint64_t v43 = v42;
  }
  id v44 = (os_log_s *)objc_claimAutoreleasedReturnValue([v41 OSLogObject]);
  if (os_log_type_enabled(v44, OS_LOG_TYPE_DEFAULT)) {
    __int128 v45 = v43;
  }
  else {
    __int128 v45 = v43 & 2;
  }
  if (!(_DWORD)v45) {
    goto LABEL_56;
  }
  __int128 v46 = (void *)objc_opt_class(self);
  v87 = 138543362;
  __int16 v88 = v46;
  __int128 v47 = v46;
  LODWORD(v83) = 12;
  __int128 v48 = (void *)_os_log_send_and_compose_impl( v45,  0LL,  0LL,  0LL,  &_mh_execute_header,  v44,  0LL,  "%{public}@: Authenticating to opt-in to biometrics.",  &v87,  v83);

  if (v48)
  {
    id v44 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v48,  4LL));
    free(v48);
    id v82 = v44;
    SSFileLog(v41, @"%@");
LABEL_56:
  }

  __int128 v49 = [[SSAuthenticateRequest alloc] initWithAuthenticationContext:v6];
  __int128 v50 = (void *)objc_claimAutoreleasedReturnValue([v49 run]);
  __int128 v51 = (void *)objc_claimAutoreleasedReturnValue([v50 error]);

  if (!v51)
  {
    id v53 = (unint64_t)[v50 authenticateResponseType];
    if (v53 <= 8)
    {
      v85 = v9;
      int v54 = v7;
      if (((1LL << v53) & 0x1CF) != 0)
      {
        uint64_t v55 = (void *)objc_claimAutoreleasedReturnValue( +[SSLogConfig sharedAccountsAuthenticationConfig]( &OBJC_CLASS___SSLogConfig,  "sharedAccountsAuthenticationConfig"));
        if (!v55) {
          uint64_t v55 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
        }
        __int16 v56 = objc_msgSend(v55, "shouldLog", v82);
        else {
          __int128 v57 = v56;
        }
        __int128 v58 = (os_log_s *)objc_claimAutoreleasedReturnValue([v55 OSLogObject]);
        if (os_log_type_enabled(v58, OS_LOG_TYPE_DEFAULT)) {
          unsigned int v59 = v57;
        }
        else {
          unsigned int v59 = v57 & 2;
        }
        if ((_DWORD)v59)
        {
          id v60 = (void *)objc_opt_class(self);
          unsigned int v61 = v60;
          uint64_t v62 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInteger:]( NSNumber,  "numberWithInteger:",  [v50 authenticateResponseType]));
          v87 = 138543618;
          __int16 v88 = v60;
          v89 = 2114;
          __int16 v90 = v62;
          LODWORD(v83) = 22;
          id v63 = (void *)_os_log_send_and_compose_impl( v59,  0LL,  0LL,  0LL,  &_mh_execute_header,  v58,  0LL,  "%{public}@: Auth response was no-op: %{public}@",  &v87,  v83);

          id v7 = v54;
          id v9 = v85;
          id v10 = v86;
          if (!v63)
          {
LABEL_74:

            __int128 v52 = 0LL;
            goto LABEL_102;
          }

          __int128 v58 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v63,  4LL));
          free(v63);
          SSFileLog(v55, @"%@");
        }

        else
        {
          id v7 = v54;
          id v9 = v85;
          id v10 = v86;
        }

        goto LABEL_74;
      }

      uint64_t v64 = (void *)objc_claimAutoreleasedReturnValue( +[SSLogConfig sharedAccountsAuthenticationConfig]( &OBJC_CLASS___SSLogConfig,  "sharedAccountsAuthenticationConfig"));
      if (!v64) {
        uint64_t v64 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      v65 = objc_msgSend(v64, "shouldLog", v82);
      uint64_t v66 = (os_log_s *)objc_claimAutoreleasedReturnValue([v64 OSLogObject]);
      if (os_log_type_enabled(v66, OS_LOG_TYPE_DEFAULT)) {
        __int128 v67 = v65;
      }
      else {
        __int128 v67 = v65 & 2;
      }
      if ((_DWORD)v67)
      {
        __int128 v68 = (void *)objc_opt_class(self);
        __int16 v84 = v68;
        __int128 v69 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInteger:]( NSNumber,  "numberWithInteger:",  [v50 authenticateResponseType]));
        v87 = 138543618;
        __int16 v88 = v68;
        v89 = 2114;
        __int16 v90 = v69;
        LODWORD(v83) = 22;
        __int128 v70 = (void *)_os_log_send_and_compose_impl( v67,  0LL,  0LL,  0LL,  &_mh_execute_header,  v66,  0LL,  "%{public}@: Auth response returned new account: %{public}@",  &v87,  v83);

        id v7 = v54;
        id v9 = v85;
        id v10 = v86;
        if (!v70)
        {
LABEL_101:

          __int128 v52 = (void *)objc_claimAutoreleasedReturnValue([v50 authenticatedAccount]);
          goto LABEL_102;
        }

        uint64_t v66 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v70,  4LL));
        free(v70);
        SSFileLog(v64, @"%@");
      }

      else
      {
        id v7 = v54;
        id v9 = v85;
        id v10 = v86;
      }

      goto LABEL_101;
    }
  }

  __int128 v52 = 0LL;
LABEL_102:

  return v52;
}

  return v32;
}

        id v53 = TCCAccessSetForBundleId(kTCCServiceMediaLibrary, self->_requestingBundleID, 0LL);
        int v54 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
        if (!v54) {
          int v54 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
        }
        LODWORD(v55) = [v54 shouldLog];
        __int16 v56 = (os_log_s *)objc_claimAutoreleasedReturnValue([v54 OSLogObject]);
        if (os_log_type_enabled(v56, OS_LOG_TYPE_INFO)) {
          uint64_t v55 = v55;
        }
        else {
          v55 &= 2u;
        }
        if ((_DWORD)v55)
        {
          __int128 v57 = (void *)objc_opt_class(self);
          requestingBundleID = self->_requestingBundleID;
          unsigned int v59 = @"succeeded";
          __int128 v77 = 138543874;
          __int128 v78 = v57;
          __int128 v79 = 2114;
          if (!v53) {
            unsigned int v59 = @"failed";
          }
          uint64_t v80 = requestingBundleID;
          __int16 v81 = 2114;
          id v82 = v59;
          id v60 = v57;
          unsigned int v61 = (void *)_os_log_send_and_compose_impl( v55,  0LL,  0LL,  0LL,  &_mh_execute_header,  v56,  1LL,  "%{public}@: Got 403 status code while requesting user token for bundle ID: %{public}@. Just re set TCC access with status: %{public}@.",  &v77,  32);

          if (!v61) {
            goto LABEL_58;
          }
          __int16 v56 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v61,  4LL));
          free(v61);
          uint64_t v66 = v56;
          SSFileLog(v54, @"%@");
        }

LABEL_58:
        goto LABEL_59;
      }

      uint64_t v42 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  SSErrorDomain,  109LL,  0LL));
    }

    __int128 v50 = 0LL;
    goto LABEL_44;
  }

  id v8 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  SSErrorDomain,  114LL,  0LL));
  id v7 = [[SSVCloudServiceAPITokenResponse alloc] initWithToken:0 error:v8];
LABEL_60:

  -[CloudServiceAPITokenOperation lock](self, "lock");
  uint64_t v62 = (void (**)(id, id))objc_retainBlock(self->_responseBlock);
  responseBlock = self->_responseBlock;
  self->_responseBlock = 0LL;

  -[CloudServiceAPITokenOperation unlock](self, "unlock");
  v62[2](v62, v7);
  uint64_t v64 = (void *)objc_claimAutoreleasedReturnValue([v7 error]);
  -[CloudServiceAPITokenOperation setError:](self, "setError:", v64);

  v65 = (void *)objc_claimAutoreleasedReturnValue([v7 error]);
  -[CloudServiceAPITokenOperation setSuccess:](self, "setSuccess:", v65 != 0LL, v66);
}

  if ((objc_msgSend(v5, "processingTypes", v122) & 1) == 0)
  {
    if (self->super.ISOperation_opaque[v23])
    {
      id v39 = 0LL;
LABEL_48:
      id v40 = v26;
LABEL_73:
      __int128 v52 = v39;
      v152 = v39;
      v153 = v142;
      id v53 = -[FinishDownloadStepOperation moveFile:toPath:installBehavior:error:]( self,  "moveFile:toPath:installBehavior:error:",  v40,  &v153,  1LL,  &v152,  v123);
      int v54 = v153;

      id v39 = v152;
      if ((v53 & 1) != 0)
      {
        v142 = v54;
        goto LABEL_75;
      }

      __int128 v67 = 0LL;
      id v26 = v40;
      __int128 v51 = v54;
LABEL_179:
      -[FinishDownloadResponse setError:](v3, "setError:", v39, v123);
      -[FinishDownloadResponse setResult:](v3, "setResult:", v67);
      __int16 v90 = v139;
      -[FinishDownloadStepOperation rollbackAsset:error:](self, "rollbackAsset:error:", v139, 0LL);
      id v82 = v134;
      goto LABEL_180;
    }

    id v39 = 0LL;
    id v40 = v26;
    if (self->_isSharedMDMDownload) {
      goto LABEL_73;
    }
    goto LABEL_144;
  }

  uint64_t v41 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v41) {
    uint64_t v41 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  uint64_t v42 = [v41 shouldLog];
  uint64_t v43 = (os_log_s *)objc_claimAutoreleasedReturnValue([v41 OSLogObject]);
  if (os_log_type_enabled(v43, OS_LOG_TYPE_INFO)) {
    id v44 = v42;
  }
  else {
    id v44 = v42 & 2;
  }
  if (!(_DWORD)v44) {
    goto LABEL_59;
  }
  __int128 v45 = (id)objc_opt_class(self);
  __int128 v46 = [v4 databaseID];
  v157 = 138412802;
  v158 = v45;
  v159 = 2048;
  v160 = v46;
  v161 = 2112;
  v162 = v26;
  LODWORD(v125) = 32;
  __int128 v47 = (void *)_os_log_send_and_compose_impl( v44,  0LL,  0LL,  0LL,  &_mh_execute_header,  v43,  1LL,  "%@: Unzip document for download: %lld, at path: %@",  &v157,  v125);

  if (v47)
  {
    uint64_t v43 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v47,  4LL));
    free(v47);
    v123 = v43;
    SSFileLog(v41, @"%@");
LABEL_59:
  }

  v154 = 0LL;
  v155 = 0LL;
  __int128 v48 = -[FinishDownloadStepOperation unzipAsset:unzippedPath:error:]( self,  "unzipAsset:unzippedPath:error:",  v5,  &v155,  &v154);
  __int128 v49 = v155;
  id v39 = v154;
  if ((v48 & 1) == 0)
  {
    if (v49) {
      -[NSFileManager removeItemAtPath:error:](v140, "removeItemAtPath:error:", v49, 0LL);
    }

    __int128 v51 = v142;
    if (self->super.ISOperation_opaque[v23])
    {
      if (v48) {
        goto LABEL_48;
      }
    }

    else
    {
      if (self->_isSharedMDMDownload) {
        v99 = v48;
      }
      else {
        v99 = 0;
      }
      if ((v99 & 1) != 0) {
        goto LABEL_48;
      }
      if (v48)
      {
        id v40 = v26;
        goto LABEL_144;
      }
    }

    __int128 v67 = 0LL;
    goto LABEL_179;
  }

  id v40 = v49;

  if (self->super.ISOperation_opaque[v23]) {
    goto LABEL_73;
  }
  __int128 v50 = self->_isSharedMDMDownload ? v48 : 0;
  if ((v50 & 1) != 0) {
    goto LABEL_73;
  }
LABEL_144:
  if (!v146)
  {
    v119 = SSError(SSErrorDomain, 137LL, @"Destination path not specified", 0LL);
    v120 = objc_claimAutoreleasedReturnValue(v119);

    v146 = 0LL;
    __int128 v67 = 3LL;
    id v39 = (id)v120;
    id v26 = v40;
LABEL_178:
    __int128 v51 = v142;
    goto LABEL_179;
  }

  v150 = v39;
  v151 = v146;
  v100 = -[FinishDownloadStepOperation moveFile:toPath:installBehavior:error:]( self,  "moveFile:toPath:installBehavior:error:",  v40,  &v151,  1LL,  &v150);
  v101 = v151;

  v102 = v150;
  if (!v100)
  {
    __int128 v67 = 0LL;
    id v39 = v102;
    id v26 = v40;
    v146 = v101;
    goto LABEL_178;
  }

  id v39 = v102;
  v146 = v101;
LABEL_75:
  id v26 = v40;
  uint64_t v55 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v139, "fileAttributes", v123));
  if ([v55 count]) {
    -[NSFileManager setAttributes:ofItemAtPath:error:](v140, "setAttributes:ofItemAtPath:error:", v55, v146, 0LL);
  }

  if (self->super.ISOperation_opaque[v23] || self->_isSharedMDMDownload)
  {
    __int16 v56 = objc_claimAutoreleasedReturnValue([v136 pathComponents]);
    v167[0] = @"Library";
    v167[1] = @"Caches";
    v167[2] = @"Staging";
    v167[3] = v137;
    __int128 v57 = objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v167, 4LL));
    v132 = (void *)objc_claimAutoreleasedReturnValue(+[NSString pathWithComponents:](&OBJC_CLASS___NSString, "pathWithComponents:", v57));
    __int128 v58 = objc_claimAutoreleasedReturnValue([&off_10036E430 arrayByAddingObjectsFromArray:v56]);
    v130 = (void *)objc_claimAutoreleasedReturnValue(+[NSString pathWithComponents:](&OBJC_CLASS___NSString, "pathWithComponents:", v58));
    v149 = 0;
    unsigned int v59 = -[NSFileManager fileExistsAtPath:isDirectory:](v140, "fileExistsAtPath:isDirectory:", v144, &v149);
    v127 = (void *)v57;
    v128 = v3;
    v126 = (void *)v58;
    if (!v59 || v149)
    {
      id v60 = (void *)v56;
      if ((v59 & 1) != 0) {
        goto LABEL_107;
      }
      v148 = v39;
      -[NSFileManager createDirectoryAtPath:withIntermediateDirectories:attributes:error:]( v140,  "createDirectoryAtPath:withIntermediateDirectories:attributes:error:",  v144,  1LL,  0LL,  &v148);
      __int128 v68 = v148;

      unsigned int v61 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
      if (!v61) {
        unsigned int v61 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      __int128 v69 = [v61 shouldLog];
      id v63 = (os_log_s *)objc_claimAutoreleasedReturnValue([v61 OSLogObject]);
      if (os_log_type_enabled(v63, OS_LOG_TYPE_INFO)) {
        __int128 v70 = v69;
      }
      else {
        __int128 v70 = v69 & 2;
      }
      if ((_DWORD)v70)
      {
        uint64_t v71 = (id)objc_opt_class(self);
        v157 = 138412802;
        v158 = v71;
        v159 = 2112;
        v160 = v144;
        v161 = 2112;
        v162 = v68;
        LODWORD(v125) = 32;
        id v72 = (void *)_os_log_send_and_compose_impl( v70,  0LL,  0LL,  0LL,  &_mh_execute_header,  v63,  1LL,  "%@: Created document path: %@ error: %@",  &v157,  v125);

        if (!v72)
        {
LABEL_106:

          id v39 = v68;
LABEL_107:
          __int128 v73 = v39;
          v147 = v39;
          id v74 = -[InstallDocumentDownloadOperation _moveSharedAssetFromPath:toPath:error:]( self,  "_moveSharedAssetFromPath:toPath:error:",  v132,  v130,  &v147,  v123);
          id v39 = v147;

          unsigned int v75 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
          if (!v75) {
            unsigned int v75 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
          }
          __int128 v76 = [v75 shouldLog];
          __int128 v77 = (os_log_s *)objc_claimAutoreleasedReturnValue([v75 OSLogObject]);
          if (os_log_type_enabled(v77, OS_LOG_TYPE_INFO)) {
            __int128 v78 = v76;
          }
          else {
            __int128 v78 = v76 & 2;
          }
          if ((_DWORD)v78)
          {
            __int128 v79 = (id)objc_opt_class(self);
            uint64_t v80 = [v4 databaseID];
            v157 = 138413314;
            v158 = v79;
            v159 = 2048;
            v160 = v80;
            v161 = 2112;
            v162 = v132;
            v163 = 2112;
            v164 = v130;
            v165 = 1024;
            v166 = v74;
            LODWORD(v125) = 48;
            __int16 v81 = (void *)_os_log_send_and_compose_impl( v78,  0LL,  0LL,  0LL,  &_mh_execute_header,  v77,  1LL,  "%@: Moved staged download: %lld from source: %@ to document path: %@ result: %d",  &v157,  v125);

            if (!v81)
            {
LABEL_118:

              if ((v74 & 1) != 0)
              {
                uint64_t v3 = v128;
                goto LABEL_120;
              }

              __int128 v67 = 0LL;
              uint64_t v3 = v128;
              goto LABEL_178;
            }

            __int128 v77 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v81,  4LL));
            free(v81);
            v123 = v77;
            SSFileLog(v75, @"%@");
          }

          goto LABEL_118;
        }

        id v63 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v72,  4LL));
        free(v72);
        v123 = v63;
        SSFileLog(v61, @"%@");
      }

      id v39 = v68;
    }

    else
    {
      id v60 = (void *)v56;
      unsigned int v61 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
      if (!v61) {
        unsigned int v61 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      uint64_t v62 = [v61 shouldLog];
      id v63 = (os_log_s *)objc_claimAutoreleasedReturnValue([v61 OSLogObject]);
      if (os_log_type_enabled(v63, OS_LOG_TYPE_INFO)) {
        uint64_t v64 = v62;
      }
      else {
        uint64_t v64 = v62 & 2;
      }
      if ((_DWORD)v64)
      {
        v65 = (id)objc_opt_class(self);
        v157 = 138412546;
        v158 = v65;
        v159 = 2112;
        v160 = v144;
        LODWORD(v125) = 22;
        uint64_t v66 = (void *)_os_log_send_and_compose_impl( v64,  0LL,  0LL,  0LL,  &_mh_execute_header,  v63,  1LL,  "%@: Error: file exists at document path: %@",  &v157,  v125);

        if (!v66)
        {
LABEL_105:
          __int128 v68 = v39;
          goto LABEL_106;
        }

        id v63 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v66,  4LL));
        free(v66);
        v123 = v63;
        SSFileLog(v61, @"%@");
      }
    }

    goto LABEL_105;
  }

      id v8 = v19;
      if (v122)
      {
LABEL_47:
        uint64_t v43 = SSPurchaseErrorKeyShouldCancelPurchaseBatch;
        v114 = 1;
        id v40 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", 1LL, v97));
        id v44 = SSErrorBySettingUserInfoValue(v122, v43, v40);
        __int128 v45 = objc_claimAutoreleasedReturnValue(v44);

        v122 = (id)v45;
        uint64_t v19 = v8;
        goto LABEL_49;
      }

        __asm { BR              X8 }
      }

      if (v13 == -531863420) {
        goto LABEL_39;
      }
      id v11 = -503352505;
    }
  }

  else if (v13 > -1459139961)
  {
    if (v13 <= -1269023326)
    {
      if (v13 == -1459139960) {
        goto LABEL_45;
      }
      if (v13 == -1422777163) {
        goto LABEL_39;
      }
      id v11 = -1403081054;
    }

    else if (v13 > -1006137667)
    {
      if (v13 == -1006137666) {
        goto LABEL_39;
      }
      id v11 = -876676109;
    }

    else
    {
      if (v13 == -1269023325) {
        goto LABEL_45;
      }
      id v11 = -1028896721;
    }
  }

  else if (v13 > -1931668218)
  {
    id v11 = -1605270299;
  }

  else
  {
    if (v13 <= -2022691387)
    {
      if (v13 != -2088015090)
      {
        id v10 = -2063883720;
        goto LABEL_13;
      }

      goto LABEL_45;
    }

    if (v13 == -2022691386) {
      goto LABEL_45;
    }
    id v11 = -2003270446;
  }

  if (v13 == v11) {
    goto LABEL_45;
  }
  return ((uint64_t (*)(void))sub_10027E444)();
}

void sub_100058028(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  id v7 = (void *)v6;
  if (a2)
  {
    if (!v6) {
      id v7 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v8 = [v7 shouldLog];
    else {
      LODWORD(v9) = v8;
    }
    id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue([v7 OSLogObject]);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v9 = v9;
    }
    else {
      v9 &= 2u;
    }
    if (!(_DWORD)v9)
    {

      goto LABEL_26;
    }

    uint64_t v11 = *(void *)(a1 + 32);
    id v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", a2));
    int v19 = 138412802;
    uint64_t v20 = v11;
    __int16 v21 = 2112;
    uint64_t v22 = v12;
    __int16 v23 = 2112;
    id v24 = v5;
    uint64_t v13 = (void *)_os_log_send_and_compose_impl( v9,  0LL,  0LL,  0LL,  &_mh_execute_header,  v10,  0LL,  "%@: UpdateTouchIDSettings request failed with status: %@, error: %@",  &v19,  32);

    if (!v13) {
      goto LABEL_26;
    }
    goto LABEL_23;
  }

  if (!v6) {
    id v7 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v14 = [v7 shouldLog];
  else {
    LODWORD(v15) = v14;
  }
  uint64_t v16 = (os_log_s *)objc_claimAutoreleasedReturnValue([v7 OSLogObject]);
  if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v15 = v15;
  }
  else {
    v15 &= 2u;
  }
  if (!(_DWORD)v15) {
    goto LABEL_24;
  }
  uint64_t v17 = *(void *)(a1 + 32);
  uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", 0LL));
  int v19 = 138412546;
  uint64_t v20 = v17;
  __int16 v21 = 2112;
  uint64_t v22 = v18;
  uint64_t v13 = (void *)_os_log_send_and_compose_impl( v15,  0LL,  0LL,  0LL,  &_mh_execute_header,  v16,  0LL,  "%@: UpdateTouchIDSettings request completed with status: %@",  &v19,  22);

  if (v13)
  {
LABEL_23:
    uint64_t v16 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v13,  4LL));
    free(v13);
    SSFileLog(v7, @"%@");
LABEL_24:
  }

LABEL_83:
      unsigned int v61 = context;
      uint64_t v62 = a5;

      goto LABEL_85;
    }

    if ((unint64_t)v8 >= 3)
    {
      __int128 v34 = (void *)objc_claimAutoreleasedReturnValue([v18[459] sharedDaemonConfig]);
      if (!v34) {
        __int128 v34 = (void *)objc_claimAutoreleasedReturnValue([v18[459] sharedConfig]);
      }
      int v54 = objc_msgSend(v34, "shouldLog", v66);
      __int128 v49 = (os_log_s *)objc_claimAutoreleasedReturnValue([v34 OSLogObject]);
      if (os_log_type_enabled(v49, OS_LOG_TYPE_DEFAULT)) {
        uint64_t v55 = v54;
      }
      else {
        uint64_t v55 = v54 & 2;
      }
      if (!(_DWORD)v55) {
        goto LABEL_83;
      }
      __int16 v56 = (void *)objc_opt_class(self);
      id v74 = 138413058;
      unsigned int v75 = v56;
      __int128 v76 = 1024;
      *(_DWORD *)__int128 v77 = 3;
      *(_WORD *)&v77[4] = 2048;
      *(void *)&v77[6] = v70;
      *(_WORD *)&v77[14] = 2112;
      *(void *)&v77[16] = v31;
      __int128 v52 = v56;
      LODWORD(v67) = 38;
      id v53 = _os_log_send_and_compose_impl( v55,  0LL,  0LL,  0LL,  &_mh_execute_header,  v49,  0LL,  "%@: Giving up after %d attempts for download: %lld / %@",  &v74,  v67);
      goto LABEL_81;
    }

    __int16 v32 = -[RestoreDownloadDataOperation isCancelled](self, "isCancelled");
    uint64_t v33 = objc_claimAutoreleasedReturnValue([v18[459] sharedDaemonConfig]);
    __int128 v34 = (void *)v33;
    if (v32) {
      break;
    }
    if (!v33) {
      __int128 v34 = (void *)objc_claimAutoreleasedReturnValue([v18[459] sharedConfig]);
    }
    LODWORD(v35) = objc_msgSend(v34, "shouldLog", v66);
    int v36 = (os_log_s *)objc_claimAutoreleasedReturnValue([v34 OSLogObject]);
    if (os_log_type_enabled(v36, OS_LOG_TYPE_DEFAULT)) {
      __int128 v35 = v35;
    }
    else {
      v35 &= 2u;
    }
    if ((_DWORD)v35)
    {
      id v37 = (void *)objc_opt_class(self);
      id v74 = 138412802;
      unsigned int v75 = v37;
      __int128 v76 = 2048;
      *(void *)__int128 v77 = v70;
      *(_WORD *)&v77[8] = 2112;
      *(void *)&v77[10] = v31;
      __int16 v38 = v37;
      LODWORD(v67) = 32;
      id v39 = (void *)_os_log_send_and_compose_impl( v35,  0LL,  0LL,  0LL,  &_mh_execute_header,  v36,  0LL,  "%@: Waiting a bit before retrying after error: %lld / %@",  &v74,  v67);

      uint64_t v9 = v18;
      if (!v39) {
        goto LABEL_40;
      }
      int v36 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v39,  4LL));
      free(v39);
      uint64_t v64 = v36;
      SSFileLog(v34, @"%@");
    }

LABEL_40:
    +[NSThread sleepForTimeInterval:](&OBJC_CLASS___NSThread, "sleepForTimeInterval:", (double)v8++ * 10.0);

    objc_autoreleasePoolPop(context);
    id v7 = v31;
  }

  if (!v33) {
    __int128 v34 = (void *)objc_claimAutoreleasedReturnValue([v18[459] sharedConfig]);
  }
  __int128 v57 = objc_msgSend(v34, "shouldLog", v66);
  __int128 v49 = (os_log_s *)objc_claimAutoreleasedReturnValue([v34 OSLogObject]);
  if (os_log_type_enabled(v49, OS_LOG_TYPE_DEFAULT)) {
    __int128 v58 = v57;
  }
  else {
    __int128 v58 = v57 & 2;
  }
  if (!(_DWORD)v58) {
    goto LABEL_83;
  }
  unsigned int v59 = (void *)objc_opt_class(self);
  id v74 = 138413058;
  unsigned int v75 = v59;
  __int128 v76 = 2048;
  *(void *)__int128 v77 = v8;
  *(_WORD *)&v77[8] = 2048;
  *(void *)&v77[10] = v70;
  *(_WORD *)&v77[18] = 2112;
  *(void *)&v77[20] = v71;
  __int128 v52 = v59;
  LODWORD(v67) = 42;
  id v53 = _os_log_send_and_compose_impl( v58,  0LL,  0LL,  0LL,  &_mh_execute_header,  v49,  0LL,  "%@: Cancelled after %ld attempts for download: %lld / %@",  &v74,  v67);
LABEL_81:
  id v60 = (void *)v53;

  if (v60)
  {
    __int128 v49 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v60,  4LL));
    free(v60);
    SSFileLog(v34, @"%@");
    goto LABEL_83;
  }

  unsigned int v61 = context;
  uint64_t v62 = a5;
LABEL_85:

  objc_autoreleasePoolPop(v61);
  __int128 v47 = 0;
  if (v62) {
    *uint64_t v62 = v31;
  }
LABEL_87:

  return v47;
}

uint64_t sub_10005945C(void *a1)
{
  id v1 = a1;
  xpc_object_t v2 = (void *)objc_claimAutoreleasedReturnValue([v1 domain]);
  unsigned int v3 = [v2 isEqualToString:@"MBErrorDomain"];

  if (v3
    && (id v4 = [v1 code],
        (id v5 = (uint64_t (*)(id))ISWeakLinkedSymbolForString("MBIsTransientErrorCode", 18LL)) != 0LL))
  {
    uint64_t v6 = v5(v4);
  }

  else
  {
    uint64_t v6 = 0LL;
  }

  return v6;
}

uint64_t sub_100059B90(uint64_t a1, uint64_t a2)
{
  return SSXPCDictionarySetCFObject(a2, "2", [*(id *)(a1 + 32) error]);
}

uint64_t sub_100059FA8(uint64_t a1, uint64_t a2)
{
  return SSXPCDictionarySetCFObject(a2, "2", [*(id *)(a1 + 32) error]);
}

uint64_t sub_10005A234(uint64_t a1, void *a2)
{
  id v4 = [*(id *)(a1 + 32) error];
  if (!v4)
  {
    else {
      id v4 = (id)SSError(SSErrorDomain, 100LL, 0LL, 0LL);
    }
  }

  xpc_dictionary_set_int64(a2, "0", 1011LL);
  SSXPCDictionarySetCFObject(a2, "1", v4);
  return SSXPCDictionarySetCFObject(a2, "2", [*(id *)(a1 + 32) URLResponse]);
}

uint64_t sub_10005A680(uint64_t a1, void *a2)
{
  id v4 = [*(id *)(a1 + 32) error];
  if (!v4)
  {
    else {
      id v4 = (id)SSError(SSErrorDomain, 100LL, 0LL, 0LL);
    }
  }

  xpc_dictionary_set_int64(a2, "0", 1011LL);
  SSXPCDictionarySetCFObject(a2, "1", v4);
  return SSXPCDictionarySetCFObject(a2, "2", [*(id *)(a1 + 32) URLResponse]);
}

uint64_t sub_10005A830(uint64_t a1, void *a2)
{
  return SSXPCDictionarySetObject(a2, "2", [*(id *)(a1 + 32) error]);
}

uint64_t sub_10005AB50(uint64_t a1, uint64_t a2)
{
  return SSXPCDictionarySetCFObject(a2, "2", [*(id *)(a1 + 32) error]);
}

void sub_10005AC6C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = objc_opt_class(&OBJC_CLASS___NSString);
  id v10 = (id)SSXPCDictionaryCopyCFObjectWithClass(v2, "2", v3);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = objc_opt_class(&OBJC_CLASS___NSString);
  uint64_t v6 = (void *)SSXPCDictionaryCopyCFObjectWithClass(v4, "1", v5);
  if (v6)
  {
    if (v10) {
      id v7 = +[ISSoftwareMap applicationForBundleIdentifier:applicationType:]( &OBJC_CLASS___ISSoftwareMap,  "applicationForBundleIdentifier:applicationType:",  v6,  v10);
    }
    else {
      id v7 = +[ISSoftwareMap applicationForBundleIdentifier:]( &OBJC_CLASS___ISSoftwareMap,  "applicationForBundleIdentifier:",  v6);
    }
    id v8 = v7;
  }

  else
  {
    id v8 = 0LL;
  }

  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 32));
  SSXPCDictionarySetCFObject(reply, "0", v8);
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 40), reply);
  xpc_release(reply);
}

void sub_10005AE10(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _newClientWithMessage:*(void *)(a1 + 40) connection:*(void *)(a1 + 48)];
  id v3 = objc_msgSend( [SSVApplicationCapabilitiesRequest alloc],  "initWithXPCEncoding:",  xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 40), "1"));
  id v10 = v3;
  if (*(_BYTE *)(a1 + 56) && (id v4 = [v3 bundleID]) != 0)
  {
    id v5 = v4;
    uint64_t v6 = objc_autoreleasePoolPush();
  }

  else
  {
    id v5 = [v2 clientIdentifier];
    uint64_t v6 = objc_autoreleasePoolPush();
    if (!v5)
    {
      id v7 = 0LL;
      goto LABEL_7;
    }
  }

  id v7 = +[LSApplicationProxy applicationProxyForIdentifier:]( &OBJC_CLASS___LSApplicationProxy,  "applicationProxyForIdentifier:",  v5);
LABEL_7:
  char v8 = [v7 hasMIDBasedSINF] ^ 1;
  objc_autoreleasePoolPop(v6);
  xpc_object_t v9 = xpc_dictionary_create(0LL, 0LL, 0LL);
  xpc_dictionary_set_BOOL(v9, "1", v8);
  objc_msgSend(objc_msgSend(v2, "outputConnection"), "sendMessage:", v9);
  xpc_release(v9);
}

id sub_10005B094(uint64_t a1, uint64_t a2)
{
  id result = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "URLBag"), "availableStorefrontItemKinds");
  if (result) {
    return (id)SSXPCDictionarySetCFObject(a2, "1", [result allObjects]);
  }
  return result;
}

uint64_t sub_10005B32C(uint64_t a1, uint64_t a2)
{
  return SSXPCDictionarySetCFObject(a2, "2", [*(id *)(a1 + 32) error]);
}

void sub_10005B430(uint64_t a1)
{
  int64_t int64 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 32), "2");
  if (int64)
  {
    uint64_t v3 = int64;
    int64_t v4 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 32), "1");
    else {
      uint64_t v5 = (v4 - 1);
    }
    CFDataRef v8 = sub_100022204(v3, v5);
    uint64_t v6 = 0LL;
  }

  else
  {
    uint64_t v6 = (void *)SSError(SSErrorDomain, 119LL, 0LL, 0LL);
    CFDataRef v8 = 0LL;
  }

  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 32));
  SSXPCDictionarySetCFObject(reply, "1", v8);
  SSXPCDictionarySetCFObject(reply, "2", v6);
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 40), reply);
  xpc_release(reply);
}

uint64_t sub_10005B7C8(uint64_t a1, uint64_t a2)
{
  return SSXPCDictionarySetCFObject(a2, "2", [*(id *)(a1 + 32) error]);
}

uint64_t sub_10005BB98(uint64_t a1, uint64_t a2)
{
  return SSXPCDictionarySetCFObject(a2, "2", [*(id *)(a1 + 32) error]);
}

uint64_t sub_10005BDE8(uint64_t a1, uint64_t a2)
{
  return SSXPCDictionarySetCFObject(a2, "2", [*(id *)(a1 + 32) error]);
}

void sub_10005BF04(uint64_t a1)
{
  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 32));
  SSXPCDictionarySetCFObject( reply,  "0",  objc_msgSend(+[ISSoftwareMap loadedMap](ISSoftwareMap, "loadedMap"), "applications"));
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 40), reply);
  xpc_release(reply);
}

uint64_t sub_10005C180(uint64_t a1, uint64_t a2)
{
  return SSXPCDictionarySetCFObject(a2, "1", [*(id *)(a1 + 32) error]);
}

uint64_t sub_10005C3B0(uint64_t a1, void *a2)
{
  return SSXPCDictionarySetCFObject(a2, "2", [*(id *)(a1 + 32) error]);
}

void sub_10005C5C8(uint64_t a1, void *a2)
{
}

void sub_10005C6D8(uint64_t a1)
{
  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 32));
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = objc_opt_class(&OBJC_CLASS___NSString);
  uint64_t v5 = (void *)SSXPCDictionaryCopyCFObjectWithClass(v3, "1", v4);
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v9 = 0LL;
    id v10 = &v9;
    uint64_t v11 = 0x2020000000LL;
    char v12 = 0;
    if ([v5 isEqualToString:LSSystemApplicationType])
    {
      uint64_t v7 = 1LL;
    }

    else if ([v6 isEqualToString:LSInternalApplicationType])
    {
      uint64_t v7 = 2LL;
    }

    else
    {
      uint64_t v7 = 0LL;
    }

    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472LL;
    void v8[2] = sub_10005C830;
    v8[3] = &unk_10034C5D8;
    _DWORD v8[4] = &v9;
    objc_msgSend( +[LSApplicationWorkspace defaultWorkspace](LSApplicationWorkspace, "defaultWorkspace"),  "enumerateApplicationsOfType:block:",  v7,  v8);
    xpc_dictionary_set_BOOL(reply, "0", *((_BYTE *)v10 + 24));

    _Block_object_dispose(&v9, 8);
  }

  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 40), reply);
  xpc_release(reply);
}

void sub_10005C818( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_10005C830(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  uint64_t v6 = objc_autoreleasePoolPush();
  uint64_t v7 = objc_opt_class(&OBJC_CLASS___LSApplicationProxy);
  if ((objc_opt_isKindOfClass(a2, v7) & 1) != 0)
  {
    *(_BYTE *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = 1;
    *a3 = 1;
  }

  objc_autoreleasePoolPop(v6);
}

uint64_t sub_10005D3CC(uint64_t a1, void *a2)
{
  return SSXPCDictionarySetCFObject(a2, "2", [*(id *)(a1 + 32) error]);
}

uint64_t sub_10005D688(uint64_t a1, uint64_t a2)
{
  return SSXPCDictionarySetCFObject(a2, "2", [*(id *)(a1 + 32) error]);
}

uint64_t sub_10005DC50(uint64_t a1, uint64_t a2)
{
  return SSXPCDictionarySetCFObject(a2, "2", [*(id *)(a1 + 32) error]);
}

uint64_t sub_10005DF48(uint64_t a1, uint64_t a2)
{
  return SSXPCDictionarySetCFObject(a2, "2", [*(id *)(a1 + 32) error]);
}

uint64_t sub_10005E25C(uint64_t a1, void *a2)
{
  id v4 = [*(id *)(a1 + 32) error];
  if (!v4)
  {
    else {
      id v4 = (id)SSError(SSErrorDomain, 100LL, 0LL, 0LL);
    }
  }

  xpc_dictionary_set_int64(a2, "0", 1011LL);
  SSXPCDictionarySetCFObject(a2, "1", v4);
  return SSXPCDictionarySetCFObject(a2, "2", [*(id *)(a1 + 32) URLResponse]);
}

uint64_t sub_10005E558(uint64_t a1, uint64_t a2)
{
  return SSXPCDictionarySetCFObject(a2, "1", [*(id *)(a1 + 32) error]);
}

void sub_10005E7D0(uint64_t a1, uint64_t a2)
{
  id v3 = [*(id *)(a1 + 32) URLBag];
  id v4 = [v3 valueForKey:@"storefrontCountryCode"];
  uint64_t v5 = objc_opt_class(&OBJC_CLASS___NSString);
  if ((objc_opt_isKindOfClass(v4, v5) & 1) == 0)
  {
    id v6 = [v3 valueForKey:@"advancedSearch"];
    uint64_t v7 = objc_opt_class(&OBJC_CLASS___NSString);
    if ((objc_opt_isKindOfClass(v6, v7) & 1) == 0) {
      return;
    }
    CFDataRef v8 = -[NSURLComponents initWithURL:resolvingAgainstBaseURL:]( objc_alloc(&OBJC_CLASS___NSURLComponents),  "initWithURL:resolvingAgainstBaseURL:",  +[NSURL URLWithString:](&OBJC_CLASS___NSURL, "URLWithString:", v6),  0LL);
    uint64_t v9 = -[NSURLComponents queryItems](v8, "queryItems");
    __int128 v15 = 0u;
    __int128 v16 = 0u;
    __int128 v17 = 0u;
    __int128 v18 = 0u;
    id v10 = -[NSArray countByEnumeratingWithState:objects:count:]( v9,  "countByEnumeratingWithState:objects:count:",  &v15,  v19,  16LL);
    if (v10)
    {
      id v11 = v10;
      uint64_t v12 = *(void *)v16;
      while (2)
      {
        for (uint64_t i = 0LL; i != v11; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v16 != v12) {
            objc_enumerationMutation(v9);
          }
          unsigned int v14 = *(void **)(*((void *)&v15 + 1) + 8LL * (void)i);
          if (objc_msgSend(objc_msgSend(v14, "name"), "isEqualToString:", @"cc"))
          {
            id v4 = [v14 value];
            goto LABEL_13;
          }
        }

        id v11 = -[NSArray countByEnumeratingWithState:objects:count:]( v9,  "countByEnumeratingWithState:objects:count:",  &v15,  v19,  16LL);
        if (v11) {
          continue;
        }
        break;
      }
    }

    id v4 = 0LL;
LABEL_13:
  }

  if (v4) {
    SSXPCDictionarySetCFObject(a2, "1", v4);
  }
}

uint64_t sub_10005EBCC(uint64_t a1, uint64_t a2)
{
  return SSXPCDictionarySetCFObject(a2, "1", [*(id *)(a1 + 32) error]);
}

uint64_t sub_10005EF54(uint64_t a1, uint64_t a2)
{
  return SSXPCDictionarySetCFObject(a2, "1", [*(id *)(a1 + 32) error]);
}

uint64_t sub_10005F1FC(uint64_t a1, uint64_t a2)
{
  return SSXPCDictionarySetCFObject(a2, "2", [*(id *)(a1 + 32) error]);
}

uint64_t sub_10005F464(uint64_t a1, uint64_t a2)
{
  return SSXPCDictionarySetCFObject(a2, "1", [*(id *)(a1 + 32) error]);
}

uint64_t sub_10005F6D8(uint64_t a1, void *a2)
{
  return SSXPCDictionarySetCFObject(a2, "2", [*(id *)(a1 + 32) error]);
}

void sub_10005F8F8(uint64_t a1)
{
  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 32));
  id v3 = objc_msgSend( objc_msgSend( +[SSURLSessionManager sharedManager](SSURLSessionManager, "sharedManager"),  "_saveHTTPArchiveBufferToDiskDecompressed:",  1),  "copy");
  SSXPCDictionarySetObject(reply, "0", v3);
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 40), reply);

  xpc_release(reply);
}

uint64_t sub_10005F9D4(uint64_t a1, xpc_object_t xdict)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, xpc_object_t))(result + 16))(result, xdict);
  }
  return result;
}

uint64_t sub_10005FA8C(uint64_t a1, xpc_object_t xdict)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, xpc_object_t))(result + 16))(result, xdict);
  }
  return result;
}

id sub_100060184(uint64_t a1)
{
  return [*(id *)(a1 + 32) _postMetricsWithDialogEvent:*(void *)(a1 + 40)];
}

void sub_10006077C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, id location)
{
}

void sub_1000607C4(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v4) {
      id v4 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v5 = [v4 shouldLog];
    else {
      LODWORD(v6) = v5;
    }
    uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue([v4 OSLogObject]);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      uint64_t v6 = v6;
    }
    else {
      v6 &= 2u;
    }
    if ((_DWORD)v6)
    {
      id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
      int v11 = 138543618;
      id v12 = (id)objc_opt_class(WeakRetained);
      __int16 v13 = 2114;
      id v14 = v3;
      id v9 = v12;
      id v10 = (void *)_os_log_send_and_compose_impl( v6,  0LL,  0LL,  0LL,  &_mh_execute_header,  v7,  16LL,  "%{public}@: Failed to insert metrics event with error: %{public}@",  &v11,  22);

      if (!v10)
      {
LABEL_14:

        goto LABEL_15;
      }

      uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v10,  4LL));
      free(v10);
      SSFileLog(v4, @"%@");
    }

    goto LABEL_14;
  }

void sub_100060970(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v4) {
      id v4 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v5 = [v4 shouldLog];
    else {
      LODWORD(v6) = v5;
    }
    uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue([v4 OSLogObject]);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      uint64_t v6 = v6;
    }
    else {
      v6 &= 2u;
    }
    if ((_DWORD)v6)
    {
      id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
      int v11 = 138543618;
      id v12 = (id)objc_opt_class(WeakRetained);
      __int16 v13 = 2114;
      id v14 = v3;
      id v9 = v12;
      id v10 = (void *)_os_log_send_and_compose_impl( v6,  0LL,  0LL,  0LL,  &_mh_execute_header,  v7,  16LL,  "%{public}@: Failed to flush metrics events with error: %{public}@",  &v11,  22);

      if (!v10)
      {
LABEL_14:

        goto LABEL_15;
      }

      uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v10,  4LL));
      free(v10);
      SSFileLog(v4, @"%@");
    }

    goto LABEL_14;
  }

uint64_t sub_100061E00(id *a1, void *a2)
{
  id v18 = a2;
  __int128 v19 = 0u;
  __int128 v20 = 0u;
  __int128 v21 = 0u;
  __int128 v22 = 0u;
  id v3 = a1[4];
  id v4 = [v3 countByEnumeratingWithState:&v19 objects:v24 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v20;
    do
    {
      for (uint64_t i = 0LL; i != v5; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v20 != v6) {
          objc_enumerationMutation(v3);
        }
        CFDataRef v8 = *(void **)(*((void *)&v19 + 1) + 8LL * (void)i);
        id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 valueForProperty:@"kind"]);
        int IsSoftwareKind = SSDownloadKindIsSoftwareKind(v9);

        if (IsSoftwareKind)
        {
          int v11 = CFUUIDCreate(0LL);
          uint64_t v12 = *(_OWORD *)&CFUUIDGetUUIDBytes(v11);
          CFRelease(v11);
          id v13 = a1[5];
          id v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", v12));
          [v13 addObject:v14];

          [v8 setDatabaseID:v12];
          [a1[6] addObject:v8];
        }

        else
        {
          __int16 v23 = v8;
          __int128 v15 = (void *)objc_claimAutoreleasedReturnValue( +[NSArray arrayWithObjects:count:]( &OBJC_CLASS___NSArray,  "arrayWithObjects:count:",  &v23,  1LL));
          __int128 v16 = (void *)objc_claimAutoreleasedReturnValue([v18 addDownloads:v15]);

          if (v16) {
            [a1[5] unionOrderedSet:v16];
          }
        }
      }

      id v5 = [v3 countByEnumeratingWithState:&v19 objects:v24 count:16];
    }

    while (v5);
  }

  return 1LL;
}

LABEL_38:
  if (a4) {
    *a4 = v11;
  }

  return v9;
}

    LOBYTE(v21) = 0;
    goto LABEL_61;
  }

  uint64_t v7 = +[NSMappingModel inferredMappingModelForSourceModel:destinationModel:error:]( &OBJC_CLASS___NSMappingModel,  "inferredMappingModelForSourceModel:destinationModel:error:",  v6,  v5,  &v43);
  if (!v7)
  {
    __int128 v22 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v22) {
      __int128 v22 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    id v27 = [v22 shouldLog];
    else {
      LODWORD(v2_Block_object_dispose(va, 8) = v27;
    }
    uint64_t v29 = (os_log_s *)[v22 OSLogObject];
    if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT)) {
      int v28 = v28;
    }
    else {
      v28 &= 2u;
    }
    if ((_DWORD)v28)
    {
      __int16 v30 = objc_opt_class(self);
      id v44 = 138412546;
      __int128 v45 = v30;
      __int128 v46 = 2112;
      __int128 v47 = v43;
      id v26 = _os_log_send_and_compose_impl( v28,  0LL,  0LL,  0LL,  &_mh_execute_header,  v29,  0LL,  "%@: Could not create inferred mapping model: %@",  &v44,  22);
      goto LABEL_36;
    }

    goto LABEL_38;
  }

  CFDataRef v8 = v7;
  uint64_t v42 = a3;
  id v9 = -[PersistentStore databaseFileURL](self, "databaseFileURL");
  id v10 = -[NSURL URLByAppendingPathExtension:](v9, "URLByAppendingPathExtension:", @"migrated");
  int v11 = objc_alloc_init(&OBJC_CLASS___NSFileManager);
  -[NSFileManager removeItemAtURL:error:](v11, "removeItemAtURL:error:", v10, 0LL);
  uint64_t v12 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  if (!v12) {
    uint64_t v12 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  LODWORD(v13) = [v12 shouldLog];
  id v14 = (os_log_s *)[v12 OSLogObject];
  if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO)) {
    id v13 = v13;
  }
  else {
    v13 &= 2u;
  }
  if ((_DWORD)v13)
  {
    __int128 v15 = objc_opt_class(self);
    id v44 = 138412546;
    __int128 v45 = v15;
    __int128 v46 = 2112;
    __int128 v47 = v9;
    __int128 v16 = _os_log_send_and_compose_impl( v13,  0LL,  0LL,  0LL,  &_mh_execute_header,  v14,  1LL,  "%@: Performing lightweight migration for %@",  &v44,  22);
    if (v16)
    {
      __int128 v17 = (void *)v16;
      id v18 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v16, 4LL);
      free(v17);
      id v40 = v18;
      SSFileLog(v12, @"%@");
    }
  }

  __int128 v19 = objc_msgSend( objc_alloc((Class)objc_msgSend( objc_msgSend( -[NSDictionary objectForKey:]( +[NSPersistentStoreCoordinator registeredStoreTypes]( NSPersistentStoreCoordinator,  "registeredStoreTypes",  v40),  "objectForKey:",  NSSQLiteStoreType),  "pointerValue"),  "migrationManagerClass")),  "initWithSourceModel:destinationModel:",  v6,  v5);
  if (([v19 migrateStoreFromURL:v9 type:NSSQLiteStoreType options:0 withMappingModel:v8 toDestinationURL:v10 destinationType:NSSQLiteStoreType destinationOptions:0 error:&v43] & 1) == 0)
  {
    uint64_t v31 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    __int128 v20 = v11;
    if (!v31) {
      uint64_t v31 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    LODWORD(v32) = [v31 shouldLog];
    uint64_t v33 = (os_log_s *)[v31 OSLogObject];
    if (os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT)) {
      __int16 v32 = v32;
    }
    else {
      v32 &= 2u;
    }
    a3 = v42;
    if (!(_DWORD)v32) {
      goto LABEL_59;
    }
    __int128 v34 = objc_opt_class(self);
    id v44 = 138412546;
    __int128 v45 = v34;
    __int128 v46 = 2112;
    __int128 v47 = v43;
    LODWORD(v41) = 22;
    __int128 v35 = _os_log_send_and_compose_impl( v32,  0LL,  0LL,  0LL,  &_mh_execute_header,  v33,  0LL,  "%@: Could not migrate: %@",  &v44,  v41);
    goto LABEL_57;
  }

  __int128 v20 = v11;
  -[NSFileManager removeItemAtURL:error:](v11, "removeItemAtURL:error:", v9, 0LL);
  if (!-[NSFileManager moveItemAtURL:toURL:error:](v11, "moveItemAtURL:toURL:error:", v10, v9, &v43))
  {
    uint64_t v31 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    a3 = v42;
    if (!v31) {
      uint64_t v31 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    LODWORD(v36) = [v31 shouldLog];
    id v37 = (os_log_s *)[v31 OSLogObject];
    if (os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT)) {
      int v36 = v36;
    }
    else {
      v36 &= 2u;
    }
    if (!(_DWORD)v36) {
      goto LABEL_59;
    }
    __int16 v38 = objc_opt_class(self);
    id v44 = 138412546;
    __int128 v45 = v38;
    __int128 v46 = 2112;
    __int128 v47 = v43;
    LODWORD(v41) = 22;
    __int128 v35 = _os_log_send_and_compose_impl( v36,  0LL,  0LL,  0LL,  &_mh_execute_header,  v37,  0LL,  "%@: Could not move migrated store: %@",  &v44,  v41);
LABEL_57:
    __int128 v21 = (void *)v35;
    if (!v35) {
      goto LABEL_60;
    }
    +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v35, 4LL);
    free(v21);
    SSFileLog(v31, @"%@");
LABEL_59:
    LOBYTE(v21) = 0;
    goto LABEL_60;
  }

  LOBYTE(v21) = 1;
  a3 = v42;
LABEL_60:

LABEL_61:
  if (a3) {
    *a3 = v43;
  }
  return (char)v21;
}

  uint64_t v12 = v10;
LABEL_39:

  if (a5)
  {
    uint64_t v12 = v12;
    __int128 v20 = 0;
    *a5 = v12;
  }

  else
  {
    __int128 v20 = 0;
  }

        id v14 = (char *)v14 + 1;
      }

      while (v12 != v14);
      uint64_t v12 = [v10 countByEnumeratingWithState:&v48 objects:v56 count:16];
    }

    while (v12);
  }

  return v45;
}

  id v39 = *(void *)(v42 + 32);
  id v40 = *(dispatch_queue_s **)(v39 + 40);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1001669F8;
  block[3] = &unk_10034E6E0;
  void block[4] = v8;
  void block[5] = v39;
  block[6] = *(void *)(v42 + 48);
  block[7] = v9;
  dispatch_async(v40, block);
}

void sub_100063858( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100063894(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1000638A4(uint64_t a1)
{
}

void sub_1000638AC(uint64_t a1, void *a2)
{
  id v11 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v11 valueForProperty:@"asset_type"]);
  if ([v4 isEqualToString:SSDownloadAssetTypeMedia])
  {
    uint64_t v5 = *(void *)(a1 + 48);
  }

  else
  {
    if (![v4 isEqualToString:SSDownloadAssetTypeDeltaPackage])
    {
      [*(id *)(a1 + 32) addObject:v11];
      goto LABEL_8;
    }

    uint64_t v5 = *(void *)(a1 + 56);
  }

  uint64_t v6 = *(void *)(v5 + 8);
  uint64_t v8 = *(void *)(v6 + 40);
  uint64_t v7 = (id *)(v6 + 40);
  if (!v8) {
    objc_storeStrong(v7, a2);
  }
LABEL_8:
  uint64_t v9 = objc_opt_class(&OBJC_CLASS___FinishDownloadAssetMemoryEntity);
  if ((objc_opt_isKindOfClass(v11, v9) & 1) != 0)
  {
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) downloadKind]);
    [v11 setDownloadKind:v10];
  }
}

void sub_100064B50(id a1)
{
  id v1 = [(id)CPSharedResourcesDirectory(a1) stringByAppendingPathComponent:@"Library"];
  id v5 = (id)objc_claimAutoreleasedReturnValue(v1);
  id v2 = (void *)objc_claimAutoreleasedReturnValue([v5 stringByAppendingPathComponent:@"com.apple.itunesstored"]);
  uint64_t v3 = objc_claimAutoreleasedReturnValue([v2 stringByAppendingPathComponent:@"promoted_iaps.sqlitedb"]);
  id v4 = (void *)qword_1003A32A8;
  qword_1003A32A8 = v3;
}

void sub_100065E5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  if (!a5)
  {
    uint64_t v7 = (void *)BOMCopierUserData();
    [v7 _copierFinishedFileWithPath:a2 size:a4];
  }

uint64_t sub_100065E90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return 0LL;
}

id sub_100065EC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return [(id)BOMCopierUserData() _copierUpdatedFileWithPath:a2 size:a3];
}

uint64_t sub_100065EF0(uint64_t a1, uint64_t a2)
{
  id v4 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  if (!v4) {
    id v4 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  unsigned int v5 = [v4 shouldLog];
  else {
    LODWORD(v6) = v5;
  }
  uint64_t v7 = (os_log_s *)[v4 OSLogObject];
  uint64_t result = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);
  if ((_DWORD)result) {
    uint64_t v6 = v6;
  }
  else {
    v6 &= 2u;
  }
  if ((_DWORD)v6)
  {
    uint64_t v9 = BOMCopierUserData(a1);
    int v11 = 138412546;
    uint64_t v12 = objc_opt_class(v9);
    __int16 v13 = 2080;
    uint64_t v14 = a2;
    uint64_t result = _os_log_send_and_compose_impl( v6,  0LL,  0LL,  0LL,  &_mh_execute_header,  v7,  0LL,  "%@: Fatal error: %s",  &v11,  22);
    if (result)
    {
      uint64_t v10 = (void *)result;
      +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", result, 4LL);
      free(v10);
      return SSFileLog(v4, @"%@");
    }
  }

  return result;
}

uint64_t sub_100066058(uint64_t a1, uint64_t a2, int a3)
{
  id v6 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  if (!v6) {
    id v6 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  unsigned int v7 = [v6 shouldLog];
  else {
    LODWORD(v_Block_object_dispose(va, 8) = v7;
  }
  uint64_t v9 = (os_log_s *)[v6 OSLogObject];
  uint64_t result = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);
  if ((_DWORD)result) {
    uint64_t v8 = v8;
  }
  else {
    v8 &= 2u;
  }
  if ((_DWORD)v8)
  {
    uint64_t v11 = BOMCopierUserData(a1);
    int v13 = 138412802;
    uint64_t v14 = objc_opt_class(v11);
    __int16 v15 = 1024;
    int v16 = a3;
    __int16 v17 = 2080;
    uint64_t v18 = a2;
    uint64_t result = _os_log_send_and_compose_impl( v8,  0LL,  0LL,  0LL,  &_mh_execute_header,  v9,  0LL,  "%@: Fatal file error: %d: %s",  &v13,  28);
    if (result)
    {
      uint64_t v12 = (void *)result;
      +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", result, 4LL);
      free(v12);
      return SSFileLog(v6, @"%@");
    }
  }

  return result;
}

uint64_t sub_1000661D0(uint64_t a1, uint64_t a2)
{
  id v4 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  if (!v4) {
    id v4 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  unsigned int v5 = [v4 shouldLog];
  else {
    LODWORD(v6) = v5;
  }
  unsigned int v7 = (os_log_s *)[v4 OSLogObject];
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v6 = v6;
  }
  else {
    v6 &= 2u;
  }
  if ((_DWORD)v6)
  {
    uint64_t v8 = BOMCopierUserData(a1);
    int v12 = 138412546;
    uint64_t v13 = objc_opt_class(v8);
    __int16 v14 = 2080;
    uint64_t v15 = a2;
    uint64_t v9 = _os_log_send_and_compose_impl( v6,  0LL,  0LL,  0LL,  &_mh_execute_header,  v7,  0LL,  "%@: File conflict error: %s",  &v12,  22);
    if (v9)
    {
      uint64_t v10 = (void *)v9;
      +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v9, 4LL);
      free(v10);
      SSFileLog(v4, @"%@");
    }
  }

  return 0LL;
}

uint64_t sub_10006633C(uint64_t a1, uint64_t a2, int a3)
{
  id v6 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  if (!v6) {
    id v6 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  unsigned int v7 = [v6 shouldLog];
  else {
    LODWORD(v_Block_object_dispose(va, 8) = v7;
  }
  uint64_t v9 = (os_log_s *)[v6 OSLogObject];
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v8 = v8;
  }
  else {
    v8 &= 2u;
  }
  if ((_DWORD)v8)
  {
    uint64_t v10 = BOMCopierUserData(a1);
    int v14 = 138412802;
    uint64_t v15 = objc_opt_class(v10);
    __int16 v16 = 1024;
    int v17 = a3;
    __int16 v18 = 2080;
    uint64_t v19 = a2;
    uint64_t v11 = _os_log_send_and_compose_impl( v8,  0LL,  0LL,  0LL,  &_mh_execute_header,  v9,  0LL,  "%@: File error: %d: %s",  &v14,  28);
    if (v11)
    {
      int v12 = (void *)v11;
      +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v11, 4LL);
      free(v12);
      SSFileLog(v6, @"%@");
    }
  }

  return 2LL;
}

void sub_1000671B8(uint64_t a1, void *a2)
{
  id v7 = a2;
  uint64_t v3 = objc_opt_class(&OBJC_CLASS___LSApplicationProxy);
  char isKindOfClass = objc_opt_isKindOfClass(v7, v3);
  unsigned int v5 = v7;
  if ((isKindOfClass & 1) != 0)
  {
    id v6 = v7;
    if ([v6 installType] == (id)7) {
      [*(id *)(a1 + 32) addObject:v6];
    }

    unsigned int v5 = v7;
  }
}

void sub_10006722C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  context = objc_autoreleasePoolPush();
  id v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) accountWithUniqueIdentifier:v5]);
  uint64_t v8 = -[RestoreDownloadItemsOperation initWithDownloadItems:account:]( objc_alloc(&OBJC_CLASS___RestoreDownloadItemsOperation),  "initWithDownloadItems:account:",  v6,  v7);
  -[RestoreDownloadItemsOperation setDelegate:](v8, "setDelegate:", *(void *)(a1 + 40));
  -[RestoreDownloadItemsOperation setShouldShowTermsAndConditionsDialog:]( v8,  "setShouldShowTermsAndConditionsDialog:",  0LL);
  uint64_t v9 = &ACSLocateCachingServer_ptr;
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v10) {
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v11 = [v10 shouldLog];
  else {
    unsigned int v12 = v11;
  }
  uint64_t v13 = (os_log_s *)objc_claimAutoreleasedReturnValue([v10 OSLogObject]);
  if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO)) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v12 & 2;
  }
  if ((_DWORD)v14)
  {
    uint64_t v15 = (void *)objc_opt_class(*(void *)(a1 + 40));
    id v16 = v15;
    int v33 = 138412802;
    __int128 v34 = v15;
    uint64_t v9 = &ACSLocateCachingServer_ptr;
    __int16 v35 = 2048;
    id v36 = [v6 count];
    __int16 v37 = 2112;
    id v38 = v5;
    int v17 = (void *)_os_log_send_and_compose_impl( v14,  0LL,  0LL,  0LL,  &_mh_execute_header,  v13,  1LL,  "%@: Running operation for %ld items, account: %@",  &v33,  32);

    if (v17)
    {
      __int16 v18 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v17,  4LL));
      free(v17);
      uint64_t v29 = v18;
      SSFileLog(v10, @"%@");
    }
  }

  else
  {
  }

  uint64_t v19 = *(void **)(a1 + 40);
  id v32 = 0LL;
  unsigned __int8 v20 = [v19 runSubOperation:v8 returningError:&v32];
  id v21 = v32;
  if ((v20 & 1) == 0)
  {
    __int128 v22 = (void *)objc_claimAutoreleasedReturnValue([v9[459] sharedDaemonConfig]);
    if (!v22) {
      __int128 v22 = (void *)objc_claimAutoreleasedReturnValue([v9[459] sharedConfig]);
    }
    unsigned int v23 = objc_msgSend(v22, "shouldLog", v29);
    id v24 = (os_log_s *)objc_claimAutoreleasedReturnValue([v22 OSLogObject]);
    if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v25 = v23;
    }
    else {
      uint64_t v25 = v23 & 2;
    }
    if ((_DWORD)v25)
    {
      id v26 = (void *)objc_opt_class(*(void *)(a1 + 40));
      int v33 = 138412802;
      __int128 v34 = v26;
      __int16 v35 = 2112;
      id v36 = v5;
      __int16 v37 = 2112;
      id v38 = v21;
      id v27 = v26;
      LODWORD(v30) = 32;
      int v28 = (void *)_os_log_send_and_compose_impl( v25,  0LL,  0LL,  0LL,  &_mh_execute_header,  v24,  0LL,  "%@: Restore for account: %@, failed with error: %@",  &v33,  v30);

      if (!v28)
      {
LABEL_25:

        goto LABEL_26;
      }

      id v24 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v28,  4LL));
      free(v28);
      uint64_t v29 = v24;
      SSFileLog(v22, @"%@");
    }

    goto LABEL_25;
  }

void sub_1000678C0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = -[NSNumber initWithLongLong:]( [NSNumber alloc],  "initWithLongLong:",  [v3 itemIdentifier]);
  [*(id *)(a1 + 32) setObject:v3 forKey:v4];
}

uint64_t sub_100067938(uint64_t a1, void *a2)
{
  id v37 = a2;
  __int128 v41 = 0u;
  __int128 v42 = 0u;
  __int128 v43 = 0u;
  __int128 v44 = 0u;
  id obj = *(id *)(a1 + 32);
  id v40 = [obj countByEnumeratingWithState:&v41 objects:v51 count:16];
  if (v40)
  {
    uint64_t v39 = *(void *)v42;
    uint64_t v34 = a1;
    do
    {
      id v3 = 0LL;
      do
      {
        if (*(void *)v42 != v39) {
          objc_enumerationMutation(obj);
        }
        id v4 = *(void **)(*((void *)&v41 + 1) + 8LL * (void)v3);
        id v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "storeItemID", v30));
        id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) objectForKey:v5]);
        if (v6)
        {
          id v7 = -[Download initWithStoreDownload:](objc_alloc(&OBJC_CLASS___Download), "initWithStoreDownload:", v6);
          uint64_t v8 = -[NSArray initWithObjects:](objc_alloc(&OBJC_CLASS___NSArray), "initWithObjects:", v7, 0LL);
          uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v37 addDownloads:v8]);
          if ([v9 count] == (id)1)
          {
            id v38 = v4;
            id v36 = v5;
            uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v9 firstObject]);
            id v35 = [v10 longLongValue];

            unsigned int v11 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
            if (!v11) {
              unsigned int v11 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
            }
            LODWORD(v12) = [v11 shouldLog];
            uint64_t v13 = (os_log_s *)objc_claimAutoreleasedReturnValue([v11 OSLogObject]);
            if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO)) {
              uint64_t v12 = v12;
            }
            else {
              v12 &= 2u;
            }
            if ((_DWORD)v12)
            {
              uint64_t v14 = (void *)objc_opt_class(*(void *)(a1 + 48));
              id v32 = v14;
              uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v38 bundleID]);
              int v45 = 138412802;
              __int128 v46 = v14;
              __int16 v47 = 2048;
              id v16 = v35;
              id v48 = v35;
              __int16 v49 = 2112;
              __int128 v50 = v15;
              LODWORD(v31) = 32;
              int v17 = (void *)_os_log_send_and_compose_impl( v12,  0LL,  0LL,  0LL,  &_mh_execute_header,  v13,  1LL,  "%@: Added download: %lld for app: %@",  &v45,  v31);

              if (v17)
              {
                uint64_t v13 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v17,  4LL));
                free(v17);
                uint64_t v30 = v13;
                SSFileLog(v11, @"%@");
                goto LABEL_29;
              }
            }

            else
            {
              id v16 = v35;
LABEL_29:
            }

            uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue([v38 downloadKind]);
            id v26 = (void *)objc_claimAutoreleasedReturnValue( +[ScratchManager directoryPathForDownloadID:kind:createIfNeeded:]( &OBJC_CLASS___ScratchManager,  "directoryPathForDownloadID:kind:createIfNeeded:",  v16,  v25,  1LL));
            id v27 = (void *)objc_claimAutoreleasedReturnValue([v26 stringByAppendingPathComponent:@"iTunesMetadata.plist"]);

            [v6 writeToFile:v27 options:0 error:0];
            a1 = v34;
            id v5 = v36;
          }

          goto LABEL_32;
        }

        id v7 = (Download *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
        if (!v7) {
          id v7 = (Download *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
        }
        LODWORD(v1_Block_object_dispose(va, 8) = -[Download shouldLog](v7, "shouldLog");
        uint64_t v8 = (NSArray *)objc_claimAutoreleasedReturnValue(-[Download OSLogObject](v7, "OSLogObject"));
        if (os_log_type_enabled((os_log_t)v8, OS_LOG_TYPE_DEFAULT)) {
          uint64_t v18 = v18;
        }
        else {
          v18 &= 2u;
        }
        if (!(_DWORD)v18) {
          goto LABEL_32;
        }
        uint64_t v19 = (void *)objc_opt_class(*(void *)(a1 + 48));
        uint64_t v20 = a1;
        id v21 = v19;
        __int128 v22 = (void *)objc_claimAutoreleasedReturnValue([v4 bundleID]);
        unsigned int v23 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(v20 + 56) errorForItemIdentifier:v5]);
        int v45 = 138412802;
        __int128 v46 = v19;
        __int16 v47 = 2112;
        id v48 = v22;
        __int16 v49 = 2112;
        __int128 v50 = v23;
        LODWORD(v31) = 32;
        id v24 = (void *)_os_log_send_and_compose_impl( v18,  0LL,  0LL,  0LL,  &_mh_execute_header,  v8,  0LL,  "%@: No download for app: %@, error: %@",  &v45,  v31);

        if (v24)
        {
          uint64_t v8 = (NSArray *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v24,  4LL));
          free(v24);
          uint64_t v30 = v8;
          SSFileLog(v7, @"%@");
          a1 = v34;
LABEL_32:

          goto LABEL_33;
        }

        a1 = v34;
LABEL_33:

        id v3 = (char *)v3 + 1;
      }

      while (v40 != v3);
      id v28 = [obj countByEnumeratingWithState:&v41 objects:v51 count:16];
      id v40 = v28;
    }

    while (v28);
  }

  return 1LL;
}

void sub_100067FA0(id a1)
{
}

uint64_t sub_1000688A8(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1000691A4(uint64_t a1)
{
  id v2 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  if (!v2) {
    id v2 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  LODWORD(v3) = [v2 shouldLog];
  unsigned int v4 = [v2 shouldLogToDisk];
  id v5 = (os_log_s *)[v2 OSLogObject];
  id v6 = v5;
  if (v4) {
    LODWORD(v3) = v3 | 2;
  }
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO)) {
    uint64_t v3 = v3;
  }
  else {
    v3 &= 2u;
  }
  if ((_DWORD)v3)
  {
    uint64_t v7 = objc_opt_class(*(void *)(a1 + 32));
    uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 112LL);
    *(_DWORD *)uint64_t v14 = 138412546;
    *(void *)&v14[4] = v7;
    __int16 v15 = 2112;
    uint64_t v16 = v8;
    uint64_t v9 = _os_log_send_and_compose_impl( v3,  0LL,  0LL,  0LL,  &_mh_execute_header,  v6,  1LL,  "%@: Running decrypt %@",  v14,  22);
    if (v9)
    {
      uint64_t v10 = (void *)v9;
      unsigned int v11 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v9, 4LL);
      free(v10);
      uint64_t v13 = v11;
      SSFileLog(v2, @"%@");
    }
  }

  *(void *)uint64_t v14 = 0LL;
  id v12 = objc_msgSend(*(id *)(a1 + 32), "_decryptWithSession:error:", *(void *)(a1 + 40), v14, v13);
  [*(id *)(a1 + 32) setError:*(void *)v14];
  [*(id *)(a1 + 32) setSuccess:v12];
}

void sub_10006935C(_Unwind_Exception *exc_buf, int a2)
{
  if (a2)
  {
    objc_begin_catch(exc_buf);
    JUMPOUT(0x100069314LL);
  }

  _Unwind_Resume(exc_buf);
}

void sub_100069864(uint64_t a1, int a2)
{
  if (a2)
  {
    objc_end_catch();
    JUMPOUT(0x100069884LL);
  }

  JUMPOUT(0x1000696B8LL);
}

void sub_100070104( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

uint64_t sub_100070128(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_100070138(uint64_t a1)
{
}

void sub_100070140(uint64_t a1, void *a2)
{
  id v4 = a2;
  if (v4)
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL), a2);
    *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = 0;
  }

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_100070328( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_10007034C(uint64_t a1, void *a2)
{
  id v6 = a2;
  uint64_t v4 = ISWeakLinkedStringConstantForString("SZExtractorErrorDomain", 24LL);
  id v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  if (v6 && (ISErrorIsEqual(v6, v5, 3LL) & 1) == 0)
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL), a2);
    *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = 0;
  }

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

uint64_t sub_1000704DC(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

id sub_100070664(uint64_t a1, uint64_t a2)
{
  *(void *)(*(void *)(a1 + 32) + 49LL) = a2;
  return [*(id *)(a1 + 40) finishWithResult:&__kCFBooleanTrue];
}

LABEL_43:
              id v27 = 0;
              if ((v21 & 0x2000000) != 0)
              {
LABEL_29:
                uint64_t v30 = *(void *)v24;
                v24 += 2;
                uint64_t v29 = v30;
                goto LABEL_45;
              }
}

  if (!v72)
  {
    id v38 = 0LL;
    id v37 = 0LL;
    goto LABEL_71;
  }

  __int16 v47 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v47) {
    __int16 v47 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  LODWORD(v4_Block_object_dispose((const void *)(v9 - 80), 8) = objc_msgSend(v47, "shouldLog", v63);
  __int16 v49 = (os_log_s *)objc_claimAutoreleasedReturnValue([v47 OSLogObject]);
  if (os_log_type_enabled(v49, OS_LOG_TYPE_DEFAULT)) {
    id v48 = v48;
  }
  else {
    v48 &= 2u;
  }
  if (!(_DWORD)v48) {
    goto LABEL_54;
  }
  __int128 v50 = (void *)objc_opt_class(self);
  __int128 v51 = v50;
  __int128 v52 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", a4));
  __int128 v78 = 138543874;
  __int128 v79 = v50;
  uint64_t v80 = 2112;
  __int16 v81 = v7;
  id v82 = 2114;
  __int16 v83 = v52;
  LODWORD(v65) = 32;
  id v53 = (void *)_os_log_send_and_compose_impl( v48,  0LL,  0LL,  0LL,  &_mh_execute_header,  v49,  0LL,  "%{public}@: Failed to find X509 certs in Keychain, generating new X509 cert chain for DSID: %@, purpose: %{public}@",  &v78,  v65);

  if (v53)
  {
    __int16 v49 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v53,  4LL));
    free(v53);
    uint64_t v64 = v49;
    SSFileLog(v47, @"%@");
LABEL_54:
  }

  unsigned int v75 = 0LL;
  id v37 = (id)objc_claimAutoreleasedReturnValue( -[DaemonBiometricKeychain createX509CertChainDataForAccountIdentifier_:purpose:error:]( self,  "createX509CertChainDataForAccountIdentifier_:purpose:error:",  v7,  a4,  &v75));
  int v54 = v75;
  id v38 = v54;
  if (!v37 || v54)
  {
    uint64_t v34 = (NSMutableArray *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig", v64));
    if (!v34) {
      uint64_t v34 = (NSMutableArray *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    LODWORD(v55) = -[NSMutableArray shouldLog](v34, "shouldLog");
    __int16 v56 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[NSMutableArray OSLogObject](v34, "OSLogObject"));
    if (os_log_type_enabled(v56, OS_LOG_TYPE_ERROR)) {
      uint64_t v55 = v55;
    }
    else {
      v55 &= 2u;
    }
    if ((_DWORD)v55)
    {
      __int128 v70 = v8;
      __int128 v57 = (void *)objc_opt_class(self);
      __int128 v58 = v57;
      unsigned int v59 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", a4));
      __int128 v78 = 138544130;
      __int128 v79 = v57;
      uint64_t v80 = 2112;
      __int16 v81 = v7;
      id v82 = 2114;
      __int16 v83 = v59;
      __int16 v84 = 2114;
      v85 = v38;
      LODWORD(v65) = 42;
      id v60 = (void *)_os_log_send_and_compose_impl( v55,  0LL,  0LL,  0LL,  &_mh_execute_header,  v56,  16LL,  "%{public}@: Failed to create new X509 certs for DSID: %@, purpose: %{public}@, error: %{public}@",  &v78,  v65);

      if (!v60)
      {
        uint64_t v8 = v70;
        goto LABEL_70;
      }

      __int16 v56 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v60,  4LL));
      free(v60);
      SSFileLog(v34, @"%@");
      uint64_t v8 = v70;
    }

LABEL_70:
  }

  if ((objc_opt_respondsToSelector(v14, "stringValue") & 1) != 0)
  {
    [v10 setTargetAccount:v14];
    __int128 v43 = (void *)objc_claimAutoreleasedReturnValue([v14 stringValue]);
    -[NSMutableDictionary setObject:forKey:](v11, "setObject:forKey:", v43, @"dsid");
  }

  __int128 v44 = (void *)objc_claimAutoreleasedReturnValue(+[ISDevice sharedInstance](&OBJC_CLASS___ISDevice, "sharedInstance", v73));
  int v45 = (void *)objc_claimAutoreleasedReturnValue([v44 guid]);

  if (v45) {
    -[NSMutableDictionary setObject:forKey:](v11, "setObject:forKey:", v45, @"guid");
  }
  __int128 v46 = (void *)objc_claimAutoreleasedReturnValue([v9 bundleIdentifier]);

  if (v46) {
    -[NSMutableDictionary setObject:forKey:](v11, "setObject:forKey:", v46, @"bundle-id");
  }
  __int16 v47 = (void *)objc_claimAutoreleasedReturnValue([v9 bundleVersion]);

  if (v47) {
    -[NSMutableDictionary setObject:forKey:](v11, "setObject:forKey:", v47, @"version-id");
  }
  id v48 = (void *)objc_claimAutoreleasedReturnValue(+[ISDevice sharedInstance](&OBJC_CLASS___ISDevice, "sharedInstance"));
  __int16 v49 = (void *)objc_claimAutoreleasedReturnValue([v48 serialNumber]);

  if (v49) {
    -[NSMutableDictionary setObject:forKey:](v11, "setObject:forKey:", v49, @"serialNumber");
  }
  __int128 v50 = [v10 receiptFlags] & 1;
  if (v50) {
    -[NSMutableDictionary setObject:forKey:](v11, "setObject:forKey:", &__kCFBooleanTrue, @"want-expired");
  }
  if (([v10 receiptFlags] & 2) != 0)
  {
    -[NSMutableDictionary setObject:forKey:](v11, "setObject:forKey:", &__kCFBooleanTrue, @"want-revoked");
    __int128 v50 = 1;
  }

  __int128 v51 = v50 | ((unint64_t)[v10 receiptFlags] >> 3) & 1;
  if (v51 == 1) {
    -[NSMutableDictionary setObject:forKey:](v11, "setObject:forKey:", &__kCFBooleanTrue, @"want-vpp");
  }
  if ((v6 & 8) != 0) {
    -[NSMutableDictionary setObject:forKey:](v11, "setObject:forKey:", &__kCFBooleanTrue, @"revoked");
  }
  __int128 v52 = (void *)objc_claimAutoreleasedReturnValue([v9 itemID]);

  if (v52)
  {
    id v53 = (void *)objc_claimAutoreleasedReturnValue([v52 stringValue]);
    if (v51) {
      int v54 = @"appAdamId";
    }
    else {
      int v54 = @"adam-id";
    }
    -[NSMutableDictionary setObject:forKey:](v11, "setObject:forKey:", v53, v54);
  }

  uint64_t v55 = v9;
  __int16 v56 = (void *)objc_claimAutoreleasedReturnValue([v9 externalVersionIdentifier]);

  if (v56)
  {
    __int128 v57 = (void *)objc_claimAutoreleasedReturnValue([v56 stringValue]);
    if (v51) {
      __int128 v58 = @"appExtVrsId";
    }
    else {
      __int128 v58 = @"software-version-external-identifier";
    }
    -[NSMutableDictionary setObject:forKey:](v11, "setObject:forKey:", v57, v58);
  }

  unsigned int v59 = v14;
  id v60 = (void *)objc_claimAutoreleasedReturnValue([v55 deviceIdentifierForVendor]);
  unsigned int v61 = (void *)objc_claimAutoreleasedReturnValue([v60 UUIDString]);

  if (v61) {
    -[NSMutableDictionary setObject:forKey:](v11, "setObject:forKey:", v61, @"vid");
  }
  v85 = 0LL;
  uint64_t v62 = (void *)objc_claimAutoreleasedReturnValue( +[NSPropertyListSerialization dataWithPropertyList:format:options:error:]( &OBJC_CLASS___NSPropertyListSerialization,  "dataWithPropertyList:format:options:error:",  v11,  100LL,  0LL,  &v85));
  id v63 = v85;
  if (v63)
  {
    uint64_t v64 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v64) {
      uint64_t v64 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    v65 = [v64 shouldLog];
    else {
      uint64_t v66 = v65;
    }
    __int128 v67 = (os_log_s *)objc_claimAutoreleasedReturnValue([v64 OSLogObject]);
    if (os_log_type_enabled(v67, OS_LOG_TYPE_ERROR)) {
      __int128 v68 = v66;
    }
    else {
      __int128 v68 = v66 & 2;
    }
    if ((_DWORD)v68)
    {
      __int128 v69 = (void *)objc_opt_class(v81);
      __int16 v86 = 138543618;
      v87 = v69;
      __int16 v88 = 2114;
      v89 = v63;
      __int128 v70 = v69;
      LODWORD(v74) = 22;
      uint64_t v71 = (void *)_os_log_send_and_compose_impl( v68,  0LL,  0LL,  0LL,  &_mh_execute_header,  v67,  16LL,  "[%{public}@]: Error creating receipt request: %{public}@",  &v86,  v74);

      if (!v71)
      {
LABEL_86:

        goto LABEL_87;
      }

      __int128 v67 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v71,  4LL));
      free(v71);
      SSFileLog(v64, @"%@");
    }

    goto LABEL_86;
  }

  uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue(+[Daemon daemon](&OBJC_CLASS___Daemon, "daemon", v30));
  [v29 releaseKeepAliveAssertion:@"com.apple.itunesstored.MetricsController.Duet"];
}

  xpc_dictionary_set_BOOL(a2, "1", v8);
  return SSXPCDictionarySetCFObject(a2, "2", v10);
}

LABEL_108:
                    uint64_t v7 = &ACSLocateCachingServer_ptr;
                    goto LABEL_109;
                  }

  return (char)v18;
}

LABEL_107:
                  goto LABEL_108;
                }

                if (!v25)
                {
                  id v53 = (void *)objc_claimAutoreleasedReturnValue([v7[459] sharedDaemonConfig]);
                  if (!v53) {
                    id v53 = (void *)objc_claimAutoreleasedReturnValue([v7[459] sharedConfig]);
                  }
                  LODWORD(v54) = objc_msgSend(v53, "shouldLog", v86);
                  uint64_t v55 = (os_log_s *)objc_claimAutoreleasedReturnValue([v53 OSLogObject]);
                  if (os_log_type_enabled(v55, OS_LOG_TYPE_DEFAULT)) {
                    int v54 = v54;
                  }
                  else {
                    v54 &= 2u;
                  }
                  if ((_DWORD)v54)
                  {
                    __int16 v56 = (void *)objc_opt_class(self);
                    v100 = 138412802;
                    v101 = v56;
                    v102 = 2048;
                    v103 = v17;
                    v104 = 2112;
                    v105 = (char *)v95;
                    __int128 v57 = v56;
                    LODWORD(v87) = 32;
                    __int128 v58 = _os_log_send_and_compose_impl( v54,  0LL,  0LL,  0LL,  &_mh_execute_header,  v55,  0LL,  "%@: Failed to get name for directory item %llu in %@; not counting its children",
                            &v100,
                            v87);
                    goto LABEL_105;
                  }

                  goto LABEL_107;
                }

                id v40 = objc_autoreleasePoolPush();
                __int128 v41 = (void *)objc_claimAutoreleasedReturnValue( -[StreamingZipDownloadDataConsumer _stringWithFileSystemRepresentation:length:]( self,  "_stringWithFileSystemRepresentation:length:",  v25,  (v26 - 1)));
                __int128 v42 = (void *)objc_claimAutoreleasedReturnValue([v95 stringByAppendingPathComponent:v41]);

                if (!v42)
                {
                  __int16 v47 = (void *)objc_claimAutoreleasedReturnValue([v7[459] sharedDaemonConfig]);
                  if (!v47) {
                    __int16 v47 = (void *)objc_claimAutoreleasedReturnValue([v7[459] sharedConfig]);
                  }
                  LODWORD(v59) = objc_msgSend(v47, "shouldLog", v86);
                  __int16 v49 = (os_log_s *)objc_claimAutoreleasedReturnValue([v47 OSLogObject]);
                  if (os_log_type_enabled(v49, OS_LOG_TYPE_DEFAULT)) {
                    unsigned int v59 = v59;
                  }
                  else {
                    v59 &= 2u;
                  }
                  if (!(_DWORD)v59) {
                    goto LABEL_93;
                  }
                  id v60 = (void *)objc_opt_class(self);
                  v100 = 138412802;
                  v101 = v60;
                  v102 = 2080;
                  v103 = v25;
                  v104 = 2112;
                  v105 = (char *)v95;
                  __int128 v51 = v60;
                  LODWORD(v87) = 32;
                  __int128 v52 = _os_log_send_and_compose_impl( v59,  0LL,  0LL,  0LL,  &_mh_execute_header,  v49,  0LL,  "%@: Failed to create path to child directory by appending %s to %@",  &v100,  v87);
LABEL_91:
                  unsigned int v61 = (void *)v52;

                  if (v61)
                  {
                    __int16 v49 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v61,  4LL));
                    free(v61);
                    __int16 v86 = v49;
                    SSFileLog(v47, @"%@");
                    goto LABEL_93;
                  }

                  goto LABEL_94;
                }

                __int128 v43 = v91;
                goto LABEL_81;
              }

              if ((v23 & 1) != 0)
              {
                __int128 v46 = *v24++;
                __int128 v44 = v46;
                if ((v23 & 4) == 0)
                {
LABEL_55:
                  int v45 = 0LL;
                  goto LABEL_56;
                }
              }

              else
              {
                __int128 v44 = 0;
                if ((v23 & 4) == 0) {
                  goto LABEL_55;
                }
              }

              int v45 = *(void *)v24;
LABEL_56:
              if (v44 != 1)
              {
                id v40 = objc_autoreleasePoolPush();
                __int128 v42 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedLongLong:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedLongLong:",  v29));
                if ([v92 containsObject:v42])
                {
                  __int16 v47 = (void *)objc_claimAutoreleasedReturnValue([v7[459] sharedDaemonConfig]);
                  if (!v47) {
                    __int16 v47 = (void *)objc_claimAutoreleasedReturnValue([v7[459] sharedConfig]);
                  }
                  LODWORD(v4_Block_object_dispose((const void *)(v9 - 80), 8) = objc_msgSend(v47, "shouldLog", v86);
                  __int16 v49 = (os_log_s *)objc_claimAutoreleasedReturnValue([v47 OSLogObject]);
                  if (os_log_type_enabled(v49, OS_LOG_TYPE_DEBUG)) {
                    id v48 = v48;
                  }
                  else {
                    v48 &= 2u;
                  }
                  if ((_DWORD)v48)
                  {
                    __int128 v50 = (void *)objc_opt_class(self);
                    v100 = 138412802;
                    v101 = v50;
                    v102 = 2112;
                    v103 = (char *)v95;
                    v104 = 2080;
                    v105 = v25;
                    __int128 v51 = v50;
                    LODWORD(v87) = 32;
                    __int128 v52 = _os_log_send_and_compose_impl( v48,  0LL,  0LL,  0LL,  &_mh_execute_header,  v49,  2LL,  "%@: Skipping hardlinked file at %@/%s",  &v100,  v87);
                    goto LABEL_91;
                  }

LABEL_93:
LABEL_94:
                  uint64_t v7 = &ACSLocateCachingServer_ptr;
LABEL_95:

                  objc_autoreleasePoolPop(v40);
                  goto LABEL_109;
                }

                v93 += v45;
                __int128 v43 = v92;
LABEL_81:
                objc_msgSend(v43, "addObject:", v42, v86);
                goto LABEL_95;
              }

              v93 += v45;
LABEL_109:
              uint64_t v20 = (unsigned int *)((char *)v20 + v22);
              ++v17;
              if (!--v19) {
                goto LABEL_20;
              }
            }
          }
        }

        unsigned int v75 = (void *)objc_claimAutoreleasedReturnValue([v7[459] sharedDaemonConfig]);
        if (!v75) {
          unsigned int v75 = (void *)objc_claimAutoreleasedReturnValue([v7[459] sharedConfig]);
        }
        __int128 v76 = objc_msgSend(v75, "shouldLog", v86);
        __int128 v77 = (os_log_s *)objc_claimAutoreleasedReturnValue([v75 OSLogObject]);
        if (os_log_type_enabled(v77, OS_LOG_TYPE_DEFAULT)) {
          __int128 v78 = v76;
        }
        else {
          __int128 v78 = v76 & 2;
        }
        if ((_DWORD)v78)
        {
          __int128 v79 = (void *)objc_opt_class(self);
          uint64_t v80 = v79;
          __int16 v81 = __error();
          id v82 = strerror(*v81);
          v100 = 138413058;
          v101 = v79;
          v102 = 2048;
          v103 = v17;
          v104 = 2112;
          v105 = (char *)v95;
          v106 = 2080;
          v107 = v82;
          LODWORD(v87) = 42;
          __int16 v83 = (void *)_os_log_send_and_compose_impl( v78,  0LL,  0LL,  0LL,  &_mh_execute_header,  v77,  0LL,  "%@: getattrlistbulk on entry %llu in %@ returned error %s",  &v100,  v87);

          uint64_t v7 = &ACSLocateCachingServer_ptr;
          if (v83)
          {
            __int128 v77 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v83,  4LL));
            free(v83);
            __int16 v86 = v77;
            SSFileLog(v75, @"%@");
            goto LABEL_136;
          }
        }

        else
        {
          uint64_t v7 = &ACSLocateCachingServer_ptr;
LABEL_136:
        }

LABEL_138:
        close(v90);
        uint64_t v4 = v92;
        id v5 = v91;
        goto LABEL_139;
      }

      v65 = (void *)objc_claimAutoreleasedReturnValue([v7[459] sharedDaemonConfig]);
      if (!v65) {
        v65 = (void *)objc_claimAutoreleasedReturnValue([v7[459] sharedConfig]);
      }
      uint64_t v66 = [v65 shouldLog];
      __int128 v67 = [v65 shouldLogToDisk] ? v66 | 2 : v66;
      __int128 v68 = (os_log_s *)objc_claimAutoreleasedReturnValue([v65 OSLogObject]);
      __int128 v69 = os_log_type_enabled(v68, OS_LOG_TYPE_DEFAULT) ? v67 : v67 & 2u;
      if (!(_DWORD)v69) {
        break;
      }
      __int128 v70 = (void *)objc_opt_class(self);
      uint64_t v71 = v70;
      id v72 = __error();
      __int128 v73 = strerror(*v72);
      v100 = 138412802;
      v101 = v70;
      v102 = 2112;
      v103 = (char *)v95;
      v104 = 2080;
      v105 = v73;
      LODWORD(v87) = 32;
      id v74 = (void *)_os_log_send_and_compose_impl( v69,  0LL,  0LL,  0LL,  &_mh_execute_header,  v68,  0LL,  "%@: Failed to open directory %@: %s",  &v100,  v87);

      uint64_t v7 = &ACSLocateCachingServer_ptr;
      if (v74)
      {
        __int128 v68 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v74,  4LL));
        free(v74);
        __int16 v86 = v68;
        SSFileLog(v65, @"%@");
LABEL_133:
      }

LABEL_139:
      if (![v5 count]) {
        goto LABEL_142;
      }
    }

    uint64_t v7 = &ACSLocateCachingServer_ptr;
    goto LABEL_133;
  }

  v93 = 0LL;
LABEL_142:
  free(v6);

  return v93;
}

        uint64_t v66 = -[DownloadSessionProperties initWithClientIdentifier:handlerIdentifier:]( [DownloadSessionProperties alloc],  "initWithClientIdentifier:handlerIdentifier:",  [v23 clientIdentifier],  objc_msgSend(v23, "handlerIdentifier"));
        -[DownloadSessionProperties setDownloadPhase:](v66, "setDownloadPhase:", v189);
        [v23 setDownloadSessionProperties:v66];
        if (v210) {
          __int128 v67 = v210;
        }
        else {
          __int128 v67 = v211;
        }
        [v23 setError:v67];
        if (-[RestoreDownloadsOperation _isErrorCancelFailure:](self, "_isErrorCancelFailure:", v211))
        {
          -[NSMutableArray addObject:](v175, "addObject:", v23);
          self->_hadCancelFailure = 1;
        }

        else if (v211 && -[RestoreDownloadsOperation _isErrorSoftFail:](self, "_isErrorSoftFail:"))
        {
          -[NSMutableArray addObject:](v169, "addObject:", v23);
          if (self->_hadAutoRetrySoftFailure) {
            __int128 v68 = 1;
          }
          else {
            __int128 v68 = -[RestoreDownloadsOperation _shouldAutomaticallyRetryAfterSoftFailError:]( self,  "_shouldAutomaticallyRetryAfterSoftFailError:",  v211);
          }
          self->_hadAutoRetrySoftFailure = v68;
        }

        else
        {
          -[NSMutableArray addObject:](v172, "addObject:", v23);
        }

        goto LABEL_106;
      }

      if (![v23 storeAccountID]
        || ([v23 isEligibleForRestore:&v210] & 1) == 0)
      {
        goto LABEL_93;
      }

      __int128 v42 = [v23 storeOriginalPurchaserAccountID];
      if (!v42) {
        __int128 v42 = [v23 storeAccountID];
      }
      __int128 v43 = (SSAccount *)-[NSMutableDictionary objectForKey:](v173, "objectForKey:", v42);
      if (!v43)
      {
        __int128 v43 = (SSAccount *)[v185 accountWithUniqueIdentifier:v42];
        if (!v43)
        {
          __int128 v43 = objc_alloc_init(&OBJC_CLASS___SSAccount);
          -[SSAccount setUniqueIdentifier:](v43, "setUniqueIdentifier:", v42);
        }

        -[NSMutableDictionary setObject:forKey:](v173, "setObject:forKey:", v43, v42);
      }

      if (!-[SSAccount accountName](v43, "accountName")) {
        -[SSAccount setAccountName:](v43, "setAccountName:", [v23 storeAccountAppleID]);
      }
      if (!-[SSAccount storeFrontIdentifier](v43, "storeFrontIdentifier")) {
        -[SSAccount setStoreFrontIdentifier:](v43, "setStoreFrontIdentifier:", [v23 storeFrontID]);
      }
      __int128 v44 = v21;
      int v45 = +[SSLogConfig sharedAccountsConfig](&OBJC_CLASS___SSLogConfig, "sharedAccountsConfig");
      if (!v45) {
        int v45 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
      }
      __int128 v46 = [v45 shouldLog];
      else {
        __int16 v47 = v46;
      }
      id v48 = (os_log_s *)[v45 OSLogObject];
      if (os_log_type_enabled(v48, OS_LOG_TYPE_DEFAULT)) {
        __int16 v49 = v47;
      }
      else {
        __int16 v49 = v47 & 2;
      }
      if ((_DWORD)v49)
      {
        __int128 v50 = objc_opt_class(v188);
        __int128 v51 = SSHashIfNeeded(-[SSAccount accountName](v43, "accountName"));
        *(_DWORD *)v221 = 138543618;
        *(void *)&v221[4] = v50;
        *(_WORD *)&v221[12] = 2114;
        *(void *)&v221[14] = v51;
        LODWORD(v167) = 22;
        __int128 v52 = _os_log_send_and_compose_impl( v49,  0LL,  0LL,  0LL,  &_mh_execute_header,  v48,  0LL,  "%{public}@: Updating an account during a restore operation. Saving %{public}@.",  v221,  v167);
        if (v52)
        {
          id v53 = (void *)v52;
          int v54 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v52, 4LL);
          free(v53);
          v163 = (uint64_t)v54;
          SSFileLog(v45, @"%@");
        }
      }

      v209 = 0LL;
      id v21 = v44;
      if ((objc_msgSend(v185, "saveAccount:verifyCredentials:error:", v43, 0, &v209, v163) & 1) == 0
        && v209)
      {
        uint64_t v55 = +[SSLogConfig sharedAccountsConfig](&OBJC_CLASS___SSLogConfig, "sharedAccountsConfig");
        if (!v55) {
          uint64_t v55 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
        }
        __int16 v56 = [v55 shouldLog];
        else {
          __int128 v57 = v56;
        }
        __int128 v58 = (os_log_s *)[v55 OSLogObject];
        if (os_log_type_enabled(v58, OS_LOG_TYPE_ERROR)) {
          unsigned int v59 = v57;
        }
        else {
          unsigned int v59 = v57 & 2;
        }
        id v21 = v44;
        if ((_DWORD)v59)
        {
          id v60 = objc_opt_class(v188);
          unsigned int v61 = SSHashIfNeeded(-[SSAccount accountName](v43, "accountName"));
          *(_DWORD *)v221 = 138543874;
          *(void *)&v221[4] = v60;
          *(_WORD *)&v221[12] = 2114;
          *(void *)&v221[14] = v61;
          *(_WORD *)&v221[22] = 2114;
          v222 = v209;
          LODWORD(v167) = 32;
          uint64_t v62 = _os_log_send_and_compose_impl( v59,  0LL,  0LL,  0LL,  &_mh_execute_header,  v58,  16LL,  "%{public}@: Unabled to save an account during a restore operation. Saving %{public}@. Error: %{public}@",  v221,  v167);
          if (v62)
          {
            id v63 = (void *)v62;
            uint64_t v64 = +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v62,  4LL);
            free(v63);
            v164 = v64;
            SSFileLog(v55, @"%@");
          }
        }
      }

      v65 = -[NSMutableDictionary objectForKey:](v184, "objectForKey:", v42);
      if (!v65)
      {
        v65 = +[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array");
        -[NSMutableDictionary setObject:forKey:](v184, "setObject:forKey:", v65, v42);
      }

      objc_msgSend(v65, "addObject:", v23, v164);
      self = v188;
      uint64_t v19 = v181;
      __int16 v15 = v183;
      int v17 = v176;
      uint64_t v20 = obj;
LABEL_106:
      __int128 v22 = (char *)v22 + 1;
    }

    while (v19 != v22);
    __int128 v69 = [v17 countByEnumeratingWithState:&v212 objects:v220 count:16];
    uint64_t v19 = v69;
  }

  while (v69);
LABEL_112:
  v170 = v21;

  __int128 v70 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  if (-[NSMutableArray count](v172, "count"))
  {
    uint64_t v71 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v71) {
      uint64_t v71 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    id v72 = objc_msgSend(v71, "shouldLog", v163);
    else {
      __int128 v73 = v72;
    }
    id v74 = (os_log_s *)[v71 OSLogObject];
    if (os_log_type_enabled(v74, OS_LOG_TYPE_DEFAULT)) {
      unsigned int v75 = v73;
    }
    else {
      unsigned int v75 = v73 & 2;
    }
    if ((_DWORD)v75)
    {
      __int128 v76 = objc_opt_class(self);
      __int128 v77 = -[NSMutableArray componentsJoinedByString:](v172, "componentsJoinedByString:", @", ");
      *(_DWORD *)v221 = 138543618;
      *(void *)&v221[4] = v76;
      *(_WORD *)&v221[12] = 2114;
      *(void *)&v221[14] = v77;
      LODWORD(v167) = 22;
      __int128 v78 = _os_log_send_and_compose_impl( v75,  0LL,  0LL,  0LL,  &_mh_execute_header,  v74,  0LL,  "%{public}@: Hard fail invalid restore items: [%{public}@]",  v221,  v167);
      if (v78)
      {
        __int128 v79 = (void *)v78;
        +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v78, 4LL);
        free(v79);
        SSFileLog(v71, @"%@");
      }
    }

    v163 = objc_opt_class(self);
    v167 = -[NSMutableArray componentsJoinedByString:](v172, "componentsJoinedByString:", @", ");
    SSDebugLog(1LL, @"[%@]: Hard fail invalid restore items: [%@]");
    uint64_t v80 = objc_alloc_init(&OBJC_CLASS___RestoreDownloadItemsResponse);
    -[RestoreDownloadItemsResponse setRequestItems:](v80, "setRequestItems:", v172);
    -[NSMutableArray addObject:](v70, "addObject:", v80);
  }

  if (-[NSMutableArray count](v169, "count", v163))
  {
    __int16 v81 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v81) {
      __int16 v81 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    id v82 = [v81 shouldLog];
    else {
      __int16 v83 = v82;
    }
    __int16 v84 = (os_log_s *)[v81 OSLogObject];
    if (os_log_type_enabled(v84, OS_LOG_TYPE_DEFAULT)) {
      v85 = v83;
    }
    else {
      v85 = v83 & 2;
    }
    if ((_DWORD)v85)
    {
      __int16 v86 = objc_opt_class(self);
      v87 = -[NSMutableArray componentsJoinedByString:](v169, "componentsJoinedByString:", @", ");
      *(_DWORD *)v221 = 138543618;
      *(void *)&v221[4] = v86;
      *(_WORD *)&v221[12] = 2114;
      *(void *)&v221[14] = v87;
      LODWORD(v167) = 22;
      __int16 v88 = _os_log_send_and_compose_impl( v85,  0LL,  0LL,  0LL,  &_mh_execute_header,  v84,  0LL,  "%{public}@: Soft fail invalid restore items: [%{public}@]",  v221,  v167);
      if (v88)
      {
        v89 = (void *)v88;
        +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v88, 4LL);
        free(v89);
        SSFileLog(v81, @"%@");
      }
    }

    v165 = objc_opt_class(self);
    v167 = -[NSMutableArray componentsJoinedByString:](v169, "componentsJoinedByString:", @", ");
    SSDebugLog(1LL, @"[%@]: Soft fail invalid restore items: [%@]");
    __int16 v90 = objc_alloc_init(&OBJC_CLASS___RestoreDownloadItemsResponse);
    -[RestoreDownloadItemsResponse setRequestItems:](v90, "setRequestItems:", v169);
    -[RestoreDownloadItemsResponse setServerResponseWithError:]( v90,  "setServerResponseWithError:",  SSError(SSServerErrorDomain, 0LL, 0LL, 0LL));
    -[NSMutableArray addObject:](v70, "addObject:", v90);
  }

  if (-[NSMutableArray count](v175, "count"))
  {
    v91 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v91) {
      v91 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    v92 = [v91 shouldLog];
    else {
      v93 = v92;
    }
    v94 = (os_log_s *)[v91 OSLogObject];
    if (os_log_type_enabled(v94, OS_LOG_TYPE_DEFAULT)) {
      v95 = v93;
    }
    else {
      v95 = v93 & 2;
    }
    if ((_DWORD)v95)
    {
      v96 = objc_opt_class(self);
      v97 = -[NSMutableArray componentsJoinedByString:](v175, "componentsJoinedByString:", @", ");
      *(_DWORD *)v221 = 138543618;
      *(void *)&v221[4] = v96;
      *(_WORD *)&v221[12] = 2114;
      *(void *)&v221[14] = v97;
      LODWORD(v167) = 22;
      v98 = _os_log_send_and_compose_impl( v95,  0LL,  0LL,  0LL,  &_mh_execute_header,  v94,  0LL,  "%{public}@: Cancel invalid restore items: [%{public}@]",  v221,  v167);
      if (v98)
      {
        v99 = (void *)v98;
        +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v98, 4LL);
        free(v99);
        SSFileLog(v91, @"%@");
      }
    }

    v165 = objc_opt_class(self);
    v167 = -[NSMutableArray componentsJoinedByString:](v175, "componentsJoinedByString:", @", ");
    SSDebugLog(1LL, @"[%@]: Cancel invalid restore items: [%@]");
    v100 = objc_alloc_init(&OBJC_CLASS___RestoreDownloadItemsResponse);
    -[RestoreDownloadItemsResponse setRequestItems:](v100, "setRequestItems:", v175);
    -[RestoreDownloadItemsResponse setServerResponseWithError:]( v100,  "setServerResponseWithError:",  SSError(SSErrorDomain, 16LL, 0LL, 0LL));
    -[NSMutableArray addObject:](v70, "addObject:", v100);
  }

  if (-[NSMutableArray count](v70, "count"))
  {
    v208[0] = _NSConcreteStackBlock;
    v208[1] = 3221225472LL;
    v208[2] = sub_1000B2A78;
    v208[3] = &unk_10034B9E0;
    v208[4] = self;
    v208[5] = v70;
    objc_msgSend( +[DownloadsDatabase downloadsDatabase](DownloadsDatabase, "downloadsDatabase"),  "modifyUsingTransactionBlock:",  v208);
  }

  if (-[NSMutableDictionary count](v184, "count"))
  {
    if ((v171 & 1) == 0
      && !-[NSString isEqualToString:](self->_restoreReason, "isEqualToString:", @"cancel-retry"))
    {
      -[RestoreDownloadsOperation _establishPrimaryAccount](self, "_establishPrimaryAccount");
    }

    v101 = objc_msgSend( objc_msgSend(+[SSAccountStore defaultStore](SSAccountStore, "defaultStore"), "activeAccount"),  "uniqueIdentifier");
    v102 = -[NSMutableDictionary allKeys](v184, "allKeys");
    *(void *)v221 = _NSConcreteStackBlock;
    *(void *)&v221[8] = 3221225472LL;
    *(void *)&v221[16] = sub_1000B6668;
    v222 = &unk_10034D840;
    v223 = v101;
    v224 = v184;
    v103 = [v102 sortedArrayUsingComparator:v221];
    v182 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    v104 = objc_alloc_init(&OBJC_CLASS___NSCountedSet);
    v204 = 0u;
    v205 = 0u;
    v206 = 0u;
    v207 = 0u;
    obja = v103;
    v105 = [v103 countByEnumeratingWithState:&v204 objects:v219 count:16];
    if (v105)
    {
      v106 = v105;
      v186 = *(void *)v205;
      v190 = 1;
      do
      {
        for (uint64_t i = 0LL; i != v106; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v205 != v186) {
            objc_enumerationMutation(obja);
          }
          v108 = *(void *)(*((void *)&v204 + 1) + 8LL * (void)i);
          v109 = [v15 containsObject:v108];
          v211 = 0LL;
          v110 = -[RestoreDownloadsOperation _preflightAccountWithID:isFamily:error:]( self,  "_preflightAccountWithID:isFamily:error:",  v108,  v109,  &v211);
          v111 = +[SSAccountStore defaultStore](&OBJC_CLASS___SSAccountStore, "defaultStore");
          if ((_DWORD)v109) {
            v112 = [v111 activeAccount];
          }
          else {
            v112 = [v111 accountWithUniqueIdentifier:v108];
          }
          v113 = v112;
          v114 = -[NSMutableDictionary objectForKey:](v184, "objectForKey:", v108);
          v115 = -[RestoreDownloadItemsOperation initWithDownloadItems:account:]( objc_alloc(&OBJC_CLASS___RestoreDownloadItemsOperation),  "initWithDownloadItems:account:",  v114,  v113);
          if (v110)
          {
            v202 = 0u;
            v203 = 0u;
            v200 = 0u;
            v201 = 0u;
            v116 = [v114 countByEnumeratingWithState:&v200 objects:v218 count:16];
            __int16 v15 = v183;
            if (v116)
            {
              v117 = v116;
              v118 = *(void *)v201;
              do
              {
                for (j = 0LL; j != v117; j = (char *)j + 1)
                {
                  if (*(void *)v201 != v118) {
                    objc_enumerationMutation(v114);
                  }
                  -[NSCountedSet addObject:]( v104,  "addObject:",  [*(id *)(*((void *)&v200 + 1) + 8 * (void)j) downloadKind]);
                }

                v117 = [v114 countByEnumeratingWithState:&v200 objects:v218 count:16];
              }

              while (v117);
            }

            -[NSMutableArray addObject:](v182, "addObject:", v115);
          }

          else
          {
            v120 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
            if (!v120) {
              v120 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
            }
            v121 = [v120 shouldLog];
            else {
              v122 = v121;
            }
            v123 = (os_log_s *)[v120 OSLogObject];
            if (os_log_type_enabled(v123, OS_LOG_TYPE_DEFAULT)) {
              v124 = v122;
            }
            else {
              v124 = v122 & 2;
            }
            if ((_DWORD)v124)
            {
              v125 = objc_opt_class(v188);
              v126 = objc_msgSend(v114, "componentsJoinedByString:", @", ");
              *(_DWORD *)v221 = 138543874;
              *(void *)&v221[4] = v125;
              *(_WORD *)&v221[12] = 2114;
              *(void *)&v221[14] = v126;
              *(_WORD *)&v221[22] = 2114;
              v222 = (void *)v211;
              LODWORD(v167) = 32;
              v127 = _os_log_send_and_compose_impl( v124,  0LL,  0LL,  0LL,  &_mh_execute_header,  v123,  0LL,  "%{public}@: Failing restore items: [%{public}@] after account preflight failure: %{public}@",  v221,  v167);
              if (v127)
              {
                v128 = (void *)v127;
                +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v127,  4LL);
                free(v128);
                SSFileLog(v120, @"%@");
              }
            }

            self = v188;
            v165 = objc_opt_class(v188);
            HIDWORD(v167) = (unint64_t)objc_msgSend(v114, "componentsJoinedByString:", @", ") >> 32;
            SSDebugLog( 1LL,  @"[%@]: Failing restore items: [%@] after account preflight failure for account: %@ error: %@");
            v129 = objc_alloc_init(&OBJC_CLASS___RestoreDownloadItemsResponse);
            -[RestoreDownloadItemsResponse setRequestItems:](v129, "setRequestItems:", v114);
            -[RestoreDownloadItemsResponse setServerResponseWithError:](v129, "setServerResponseWithError:", v211);
            -[RestoreDownloadsOperation restoreDownloadItemsOperation:didReceiveResponse:]( v188,  "restoreDownloadItemsOperation:didReceiveResponse:",  v115,  v129);

            v190 = 0;
            __int16 v15 = v183;
          }
        }

        v106 = [obja countByEnumeratingWithState:&v204 objects:v219 count:16];
      }

      while (v106);
    }

    else
    {
      v190 = 1;
    }

    v131 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v131) {
      v131 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    v132 = [v131 shouldLog];
    else {
      v133 = v132;
    }
    v134 = (os_log_s *)[v131 OSLogObject];
    if (os_log_type_enabled(v134, OS_LOG_TYPE_DEFAULT)) {
      v135 = v133;
    }
    else {
      v135 = v133 & 2;
    }
    if ((_DWORD)v135)
    {
      v136 = objc_opt_class(self);
      v137 = -[NSMutableArray count](v182, "count");
      *(_DWORD *)v221 = 138543618;
      *(void *)&v221[4] = v136;
      *(_WORD *)&v221[12] = 2048;
      *(void *)&v221[14] = v137;
      LODWORD(v167) = 22;
      v138 = _os_log_send_and_compose_impl( v135,  0LL,  0LL,  0LL,  &_mh_execute_header,  v134,  0LL,  "%{public}@: Attempting restore for %lu accounts",  v221,  v167);
      if (v138)
      {
        v139 = (void *)v138;
        v140 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v138, 4LL);
        free(v139);
        v165 = (uint64_t)v140;
        SSFileLog(v131, @"%@");
      }
    }

    v141 = [(id)objc_opt_class(self) shouldSuppressTermsAndConditionsDialogs] ^ 1;
    v196 = 0u;
    v197 = 0u;
    v198 = 0u;
    v199 = 0u;
    objb = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v182,  "countByEnumeratingWithState:objects:count:",  &v196,  v217,  16LL);
    if (objb)
    {
      v177 = *(void *)v197;
      v142 = v190 & 1;
      v143 = SSServerErrorDomain;
      do
      {
        for (k = 0LL; k != objb; k = (char *)k + 1)
        {
          if (*(void *)v197 != v177) {
            objc_enumerationMutation(v182);
          }
          v191 = v142;
          v145 = *(void **)(*((void *)&v196 + 1) + 8LL * (void)k);
          v187 = objc_alloc_init(&OBJC_CLASS___NSAutoreleasePool);
          [v145 setDelegate:self];
          [v145 setShouldShowTermsAndConditionsDialog:v141 & 1];
          v146 = -[RestoreDownloadsOperation runSubOperation:returningError:]( self,  "runSubOperation:returningError:",  v145,  0LL);
          v147 = [v145 responses];
          v192 = 0u;
          v193 = 0u;
          v194 = 0u;
          v195 = 0u;
          v148 = [v147 countByEnumeratingWithState:&v192 objects:v216 count:16];
          if (v148)
          {
            v149 = v148;
            v150 = *(void *)v193;
            do
            {
              for (m = 0LL; m != v149; m = (char *)m + 1)
              {
                if (*(void *)v193 != v150) {
                  objc_enumerationMutation(v147);
                }
                v141 &= ISErrorIsEqual( objc_msgSend( objc_msgSend(*(id *)(*((void *)&v192 + 1) + 8 * (void)m), "serverResponse", v165),  "error"),  v143,  3038) ^ 1;
              }

              v149 = [v147 countByEnumeratingWithState:&v192 objects:v216 count:16];
            }

            while (v149);
          }

          v142 = v191 & v146;
          objc_msgSend(v145, "setDelegate:", 0, v165);
          -[NSAutoreleasePool drain](v187, "drain");
          self = v188;
        }

        objb = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v182,  "countByEnumeratingWithState:objects:count:",  &v196,  v217,  16LL);
      }

      while (objb);
      __int16 v15 = v183;
    }

    else
    {
      LOBYTE(v142) = v190;
    }

    [(id)objc_opt_class(self) setShouldSuppressTermsAndConditionsDialogs:(v141 & 1) == 0];

    v130 = v142 & 1;
  }

  else
  {
    v130 = 1LL;
  }

  if (-[NSMutableArray count](v174, "count", v165))
  {
    v152 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v152) {
      v152 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    v153 = [v152 shouldLog];
    else {
      v154 = v153;
    }
    v155 = (os_log_s *)[v152 OSLogObject];
    if (os_log_type_enabled(v155, OS_LOG_TYPE_DEFAULT)) {
      v156 = v154;
    }
    else {
      v156 = v154 & 2;
    }
    if ((_DWORD)v156)
    {
      v157 = objc_opt_class(self);
      v158 = -[NSMutableArray componentsJoinedByString:](v174, "componentsJoinedByString:", @", ");
      *(_DWORD *)v221 = 138543618;
      *(void *)&v221[4] = v157;
      *(_WORD *)&v221[12] = 2114;
      *(void *)&v221[14] = v158;
      LODWORD(v167) = 22;
      v159 = _os_log_send_and_compose_impl( v156,  0LL,  0LL,  0LL,  &_mh_execute_header,  v155,  0LL,  "%{public}@: Attempting restore of podcast items: [%{public}@]",  v221,  v167);
      if (v159)
      {
        v160 = (void *)v159;
        v161 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v159, 4LL);
        free(v160);
        v166 = v161;
        SSFileLog(v152, @"%@");
      }
    }

    v162 = -[RestorePodcastItemsOperation initWithDownloadItems:]( objc_alloc(&OBJC_CLASS___RestorePodcastItemsOperation),  "initWithDownloadItems:",  v174);
    -[RestorePodcastItemsOperation setDelegate:](v162, "setDelegate:", self);
    v130 = v130 & -[RestoreDownloadsOperation runSubOperation:returningError:]( self,  "runSubOperation:returningError:",  v162,  0LL);
    -[RestorePodcastItemsOperation setDelegate:](v162, "setDelegate:", 0LL);
  }

  if (self->_hadAutoRetrySoftFailure) {
    -[RestoreDownloadsOperation _scheduleAutomaticRetry](self, "_scheduleAutomaticRetry");
  }
  if (self->_hadCancelFailure
    && !-[NSString isEqualToString:](self->_restoreReason, "isEqualToString:", @"cancel-retry"))
  {
    -[RestoreDownloadsOperation _scheduleCancelRetry](self, "_scheduleCancelRetry");
  }

  -[RestoreDownloadsOperation setSuccess:](self, "setSuccess:", v130, v166);
}

void sub_100074308( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_100074334(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue(+[NSThread beginPrivateManagedContextSession](&OBJC_CLASS___NSThread, "beginPrivateManagedContextSession"));
  [*(id *)(a1 + 32) _loadConnectionsInContext:v2];
  [*(id *)(a1 + 32) _postTokensIfNecessaryInContext:v2];
  +[NSThread endPrivateManagedContextSession](&OBJC_CLASS___NSThread, "endPrivateManagedContextSession");
}

void sub_100074398(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _deviceNameChanged];
}

void sub_100074618(uint64_t a1)
{
  id v1 = objc_alloc_init((Class)objc_opt_class(*(void *)(a1 + 32)));
  id v2 = (void *)qword_1003A32B8;
  qword_1003A32B8 = (uint64_t)v1;
}

void sub_100074760(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSThread beginPrivateManagedContextSession]( &OBJC_CLASS___NSThread,  "beginPrivateManagedContextSession"));
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) objectForKey:SSRemoteNotificationKeyClientIdentifier]);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) _clientForIdentifier:v3 createIfNeeded:0 inContext:v2]);
  uint64_t v5 = objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  id v6 = (void *)v5;
  if (v4)
  {
    if (!v5) {
      id v6 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v7 = [v6 shouldLog];
    else {
      LODWORD(v_Block_object_dispose((const void *)(v9 - 80), 8) = v7;
    }
    uint64_t v9 = (os_log_s *)objc_claimAutoreleasedReturnValue([v6 OSLogObject]);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO)) {
      uint64_t v8 = v8;
    }
    else {
      v8 &= 2u;
    }
    if ((_DWORD)v8)
    {
      uint64_t v10 = (void *)objc_opt_class(*(void *)(a1 + 40));
      int v36 = 138412546;
      id v37 = v10;
      __int16 v38 = 2112;
      uint64_t v39 = v3;
      id v11 = v10;
      id v12 = (void *)_os_log_send_and_compose_impl( v8,  0LL,  0LL,  0LL,  &_mh_execute_header,  v9,  1LL,  "%@: Posting notification to client: %@",  &v36,  22);

      if (!v12) {
        goto LABEL_14;
      }
      uint64_t v9 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v12,  4LL));
      free(v12);
      uint64_t v29 = v9;
      SSFileLog(v6, @"%@");
    }

LABEL_14:
    [*(id *)(a1 + 40) _addNotificationWithUserInfo:*(void *)(a1 + 32) client:v4 context:v2];
    sub_10003E244(v2);
    uint64_t v34 = FBSOpenApplicationOptionKeyPayloadOptions;
    uint64_t v32 = SSApplicationLaunchOptionsHasRemoteNotificationsKey;
    int v33 = &__kCFBooleanTrue;
    uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v33,  &v32,  1LL));
    id v35 = v13;
    id v6 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v35,  &v34,  1LL));

    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(+[SpringBoardUtility sharedInstance](&OBJC_CLASS___SpringBoardUtility, "sharedInstance"));
    id v31 = 0LL;
    unsigned __int8 v15 = [v14 launchApplicationWithIdentifier:v3 options:v6 error:&v31];
    uint64_t v16 = (os_log_s *)v31;

    if ((v15 & 1) != 0)
    {
LABEL_28:
      notify_post(kSSNotificationReceivedPushNotification);
      goto LABEL_29;
    }

    int v17 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v17) {
      int v17 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v18 = objc_msgSend(v17, "shouldLog", v29);
    else {
      LODWORD(v19) = v18;
    }
    uint64_t v20 = (os_log_s *)objc_claimAutoreleasedReturnValue([v17 OSLogObject]);
    if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v19 = v19;
    }
    else {
      v19 &= 2u;
    }
    if ((_DWORD)v19)
    {
      id v21 = (void *)objc_opt_class(*(void *)(a1 + 40));
      int v36 = 138412546;
      id v37 = v21;
      __int16 v38 = 2112;
      uint64_t v39 = v16;
      id v22 = v21;
      LODWORD(v30) = 22;
      unsigned int v23 = (void *)_os_log_send_and_compose_impl( v19,  0LL,  0LL,  0LL,  &_mh_execute_header,  v20,  0LL,  "%@: Could not launch client application: %@",  &v36,  v30);

      if (!v23)
      {
LABEL_27:

        goto LABEL_28;
      }

      uint64_t v20 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v23,  4LL));
      free(v23);
      SSFileLog(v17, @"%@");
    }

    goto LABEL_27;
  }

  if (!v5) {
    id v6 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v24 = [v6 shouldLog];
  else {
    LODWORD(v25) = v24;
  }
  uint64_t v16 = (os_log_s *)objc_claimAutoreleasedReturnValue([v6 OSLogObject]);
  if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v25 = v25;
  }
  else {
    v25 &= 2u;
  }
  if ((_DWORD)v25)
  {
    id v26 = (void *)objc_opt_class(*(void *)(a1 + 40));
    int v36 = 138412546;
    id v37 = v26;
    __int16 v38 = 2112;
    uint64_t v39 = v3;
    id v27 = v26;
    id v28 = (void *)_os_log_send_and_compose_impl( v25,  0LL,  0LL,  0LL,  &_mh_execute_header,  v16,  0LL,  "%@: Could not post client notification, no client: %@",  &v36,  22);

    if (!v28) {
      goto LABEL_30;
    }
    uint64_t v16 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v28,  4LL));
    free(v28);
    SSFileLog(v6, @"%@");
  }

LABEL_29:
LABEL_30:
  +[NSThread endPrivateManagedContextSession](&OBJC_CLASS___NSThread, "endPrivateManagedContextSession");
}

  return v16;
}

  return v16;
}

      id v11 = 0LL;
      goto LABEL_30;
    }

    uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue( +[SSLogConfig sharedAccountsAuthenticationConfig]( &OBJC_CLASS___SSLogConfig,  "sharedAccountsAuthenticationConfig"));
    if (!v13) {
      uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    uint64_t v14 = [v13 shouldLog];
    else {
      LODWORD(v15) = v14;
    }
    uint64_t v16 = (os_log_s *)objc_claimAutoreleasedReturnValue([v13 OSLogObject]);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT)) {
      unsigned __int8 v15 = v15;
    }
    else {
      v15 &= 2u;
    }
    if ((_DWORD)v15)
    {
      int v17 = (void *)objc_opt_class(self);
      id v28 = 138543362;
      uint64_t v29 = v17;
      unsigned int v18 = v17;
      uint64_t v19 = (void *)_os_log_send_and_compose_impl( v15,  0LL,  0LL,  0LL,  &_mh_execute_header,  v16,  0LL,  "%{public}@: User picked non-actionable button",  &v28,  12);

      if (!v19)
      {
LABEL_22:

        uint64_t v20 = ISError(16LL, 0LL, 0LL);
        uint64_t v10 = (id)objc_claimAutoreleasedReturnValue(v20);

        if (-[ServerAuthenticationOperation performsButtonAction](self, "performsButtonAction"))
        {
          id v21 = (void *)objc_claimAutoreleasedReturnValue(-[ServerAuthenticationOperation dialog](self, "dialog"));
          [v4 performDefaultActionForDialog:v21];
        }

        else
        {
          -[ServerAuthenticationOperation lock](self, "lock");
          objc_storeStrong((id *)&self->_performedButton, v4);
          -[ServerAuthenticationOperation unlock](self, "unlock");
        }

        uint64_t v9 = 0LL;
        goto LABEL_29;
      }

      uint64_t v16 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v19,  4LL));
      free(v19);
      unsigned int v23 = v16;
      SSFileLog(v13, @"%@");
    }

    goto LABEL_22;
  }

  id v12 = 0LL;
  id v11 = 0LL;
LABEL_32:
  -[ServerAuthenticationOperation setError:](self, "setError:", v5);
  -[ServerAuthenticationOperation setSuccess:](self, "setSuccess:", v11);
}
}

  if (v34) {
    id v28 = v9;
  }
  else {
    id v28 = 1;
  }
  if ((v28 & 1) == 0)
  {
    uint64_t v8 = v8;
    uint64_t v9 = 0;
    void *v34 = v8;
  }

void sub_100074CCC(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v2) {
    id v2 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v3 = [v2 shouldLog];
  else {
    LODWORD(v4) = v3;
  }
  uint64_t v5 = (os_log_s *)objc_claimAutoreleasedReturnValue([v2 OSLogObject]);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v4 = v4;
  }
  else {
    v4 &= 2u;
  }
  if (!(_DWORD)v4) {
    goto LABEL_12;
  }
  id v6 = (void *)objc_opt_class(*(void *)(a1 + 32));
  int v10 = 138543362;
  id v11 = v6;
  id v7 = v6;
  uint64_t v8 = (void *)_os_log_send_and_compose_impl( v4,  0LL,  0LL,  0LL,  &_mh_execute_header,  v5,  0LL,  "%{public}@: Posting push tokens",  &v10,  12);

  if (v8)
  {
    uint64_t v5 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v8,  4LL));
    free(v8);
    SSFileLog(v2, @"%@");
LABEL_12:
  }

  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue( +[NSThread beginPrivateManagedContextSession]( &OBJC_CLASS___NSThread,  "beginPrivateManagedContextSession"));
  [*(id *)(a1 + 32) _postTokensInContext:v9 force:1];
  +[NSThread endPrivateManagedContextSession](&OBJC_CLASS___NSThread, "endPrivateManagedContextSession");
}

void sub_100074F40(uint64_t a1)
{
  id v2 = &ACSLocateCachingServer_ptr;
  unsigned int v3 = (void *)objc_claimAutoreleasedReturnValue( +[NSThread beginPrivateManagedContextSession]( &OBJC_CLASS___NSThread,  "beginPrivateManagedContextSession"));
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 32) _environmentForName:*(void *)(a1 + 40) createIfNeeded:1 inContext:v3]);
  uint64_t v5 = v4;
  if (v4)
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 lastAccountIdentifier]);
    unsigned int v7 = [v6 isEqualToNumber:*(void *)(a1 + 48)];

    if (v7)
    {
      uint64_t v8 = *(void **)(a1 + 56);
      if (v8) {
        dispatch_async(*(dispatch_queue_t *)(*(void *)(a1 + 32) + 40LL), v8);
      }
      goto LABEL_27;
    }

    char v20 = 1;
  }

  else
  {
    __int128 v27 = 0u;
    __int128 v28 = 0u;
    __int128 v25 = 0u;
    __int128 v26 = 0u;
    id v9 = *(id *)(*(void *)(a1 + 32) + 72LL);
    id v10 = [v9 countByEnumeratingWithState:&v25 objects:v29 count:16];
    if (v10)
    {
      id v11 = v10;
      uint64_t v12 = *(void *)v26;
      while (2)
      {
        for (uint64_t i = 0LL; i != v11; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v26 != v12) {
            objc_enumerationMutation(v9);
          }
          uint64_t v14 = *(void **)(*((void *)&v25 + 1) + 8LL * (void)i);
          unsigned __int8 v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "environmentName", (void)v25));
          unsigned int v16 = [v15 isEqualToString:*(void *)(a1 + 40)];

          if (v16)
          {
            int v17 = *(void **)(a1 + 48);
            unsigned int v18 = (void *)objc_claimAutoreleasedReturnValue([v14 authenticationContext]);
            uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([v18 requiredUniqueIdentifier]);
            LOBYTE(v17) = [v17 isEqualToNumber:v19];

            if ((v17 & 1) != 0)
            {
              char v20 = 0;
              goto LABEL_17;
            }
          }
        }

        id v11 = [v9 countByEnumeratingWithState:&v25 objects:v29 count:16];
        if (v11) {
          continue;
        }
        break;
      }

      char v20 = 1;
LABEL_17:
      id v2 = &ACSLocateCachingServer_ptr;
    }

    else
    {
      char v20 = 1;
    }
  }

  if (*(void *)(a1 + 56))
  {
    if (!*(void *)(*(void *)(a1 + 32) + 64LL))
    {
      id v21 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
      uint64_t v22 = *(void *)(a1 + 32);
      unsigned int v23 = *(void **)(v22 + 64);
      *(void *)(v22 + 64) = v21;
    }

    unsigned int v24 = objc_alloc_init(&OBJC_CLASS___PushNotificationRegisterBlock);
    -[PushNotificationRegisterBlock setAccountIdentifier:](v24, "setAccountIdentifier:", *(void *)(a1 + 48));
    -[PushNotificationRegisterBlock setBlock:](v24, "setBlock:", *(void *)(a1 + 56));
    -[PushNotificationRegisterBlock setEnvironmentName:](v24, "setEnvironmentName:", *(void *)(a1 + 40));
    [*(id *)(*(void *)(a1 + 32) + 64) addObject:v24];
  }

void sub_100075304(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v21 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue( +[NSThread beginPrivateManagedContextSession]( &OBJC_CLASS___NSThread,  "beginPrivateManagedContextSession"));
  uint64_t v19 = a1;
  char v20 = v3;
  uint64_t v5 = *(void **)(a1 + 32);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v3 clientIdentifier]);
  unsigned int v7 = (void *)objc_claimAutoreleasedReturnValue([v5 _clientForIdentifier:v6 createIfNeeded:0 inContext:v4]);

  unsigned int v18 = v7;
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v7 notifications]);
  __int128 v22 = 0u;
  __int128 v23 = 0u;
  __int128 v24 = 0u;
  __int128 v25 = 0u;
  id v9 = [v8 countByEnumeratingWithState:&v22 objects:v26 count:16];
  if (v9)
  {
    id v10 = v9;
    uint64_t v11 = *(void *)v23;
    do
    {
      for (uint64_t i = 0LL; i != v10; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v23 != v11) {
          objc_enumerationMutation(v8);
        }
        uint64_t v13 = *(void **)(*((void *)&v22 + 1) + 8LL * (void)i);
        uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v13 userInfo]);
        unsigned __int8 v15 = (void *)objc_claimAutoreleasedReturnValue( +[NSPropertyListSerialization propertyListWithData:options:format:error:]( &OBJC_CLASS___NSPropertyListSerialization,  "propertyListWithData:options:format:error:",  v14,  0LL,  0LL,  0LL));

        if (v15)
        {
          unsigned int v16 = -[SSRemoteNotification initWithNotificationUserInfo:]( objc_alloc(&OBJC_CLASS___SSRemoteNotification),  "initWithNotificationUserInfo:",  v15);
          if (v16) {
            -[NSMutableArray addObject:](v21, "addObject:", v16);
          }
        }

        [v4 deleteObject:v13];
      }

      id v10 = [v8 countByEnumeratingWithState:&v22 objects:v26 count:16];
    }

    while (v10);
  }

  sub_10003E244(v4);
  +[NSThread endPrivateManagedContextSession](&OBJC_CLASS___NSThread, "endPrivateManagedContextSession");
  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(v19 + 40));
  SSXPCDictionarySetObject(reply, "0", v21);
  xpc_connection_send_message(*(xpc_connection_t *)(v19 + 48), reply);
}

void sub_1000755F0(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue( +[NSThread beginPrivateManagedContextSession]( &OBJC_CLASS___NSThread,  "beginPrivateManagedContextSession"));
  uint64_t v5 = *(void **)(a1 + 32);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v3 clientIdentifier]);

  unsigned int v7 = (void *)objc_claimAutoreleasedReturnValue([v5 _clientForIdentifier:v6 createIfNeeded:1 inContext:v4]);
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v8) {
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v9 = [v8 shouldLog];
  else {
    LODWORD(v10) = v9;
  }
  uint64_t v11 = (os_log_s *)objc_claimAutoreleasedReturnValue([v8 OSLogObject]);
  if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO)) {
    uint64_t v10 = v10;
  }
  else {
    v10 &= 2u;
  }
  if (!(_DWORD)v10) {
    goto LABEL_12;
  }
  uint64_t v12 = (void *)objc_opt_class(*(void *)(a1 + 32));
  int v16 = 138412546;
  int v17 = v12;
  __int16 v18 = 2112;
  uint64_t v19 = v7;
  id v13 = v12;
  uint64_t v14 = (void *)_os_log_send_and_compose_impl( v10,  0LL,  0LL,  0LL,  &_mh_execute_header,  v11,  1LL,  "%@: Register client: %@",  &v16,  22);

  if (v14)
  {
    uint64_t v11 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v14,  4LL));
    free(v14);
    SSFileLog(v8, @"%@");
LABEL_12:
  }

  [*(id *)(a1 + 32) _reloadActiveEnvironmentInContext:v4];
  [*(id *)(a1 + 32) _postNotificationsAvailableForClient:v7 inContext:v4];
  sub_10003E244(v4);
  +[NSThread endPrivateManagedContextSession](&OBJC_CLASS___NSThread, "endPrivateManagedContextSession");
  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 40));
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 48), reply);
}

void sub_100075978(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue( +[NSThread beginPrivateManagedContextSession]( &OBJC_CLASS___NSThread,  "beginPrivateManagedContextSession"));
  uint64_t v5 = *(void **)(a1 + 32);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v3 clientIdentifier]);
  unsigned int v7 = (void *)objc_claimAutoreleasedReturnValue([v5 _clientForIdentifier:v6 createIfNeeded:0 inContext:v4]);

  uint64_t v8 = objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  unsigned int v9 = (void *)v8;
  if (!v7)
  {
    if (!v8) {
      unsigned int v9 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v16 = [v9 shouldLog];
    else {
      LODWORD(v17) = v16;
    }
    __int16 v18 = (os_log_s *)objc_claimAutoreleasedReturnValue([v9 OSLogObject]);
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v17 = v17;
    }
    else {
      v17 &= 2u;
    }
    if ((_DWORD)v17)
    {
      uint64_t v19 = (void *)objc_opt_class(*(void *)(a1 + 32));
      id v20 = v19;
      id v21 = (void *)objc_claimAutoreleasedReturnValue([v3 clientIdentifier]);
      int v25 = 138412546;
      __int128 v26 = v19;
      __int16 v27 = 2112;
      __int128 v28 = v21;
      __int128 v22 = (void *)_os_log_send_and_compose_impl( v17,  0LL,  0LL,  0LL,  &_mh_execute_header,  v18,  0LL,  "%@: Received unregister for unknown client: %@",  &v25,  22);

      if (!v22)
      {
LABEL_27:

        goto LABEL_28;
      }

      __int16 v18 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v22,  4LL));
      free(v22);
      __int128 v24 = v18;
      SSFileLog(v9, @"%@");
    }

    goto LABEL_27;
  }

  if (!v8) {
    unsigned int v9 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v10 = [v9 shouldLog];
  else {
    LODWORD(v11) = v10;
  }
  uint64_t v12 = (os_log_s *)objc_claimAutoreleasedReturnValue([v9 OSLogObject]);
  if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO)) {
    uint64_t v11 = v11;
  }
  else {
    v11 &= 2u;
  }
  if (!(_DWORD)v11) {
    goto LABEL_13;
  }
  id v13 = (void *)objc_opt_class(*(void *)(a1 + 32));
  int v25 = 138412546;
  __int128 v26 = v13;
  __int16 v27 = 2112;
  __int128 v28 = v7;
  id v14 = v13;
  unsigned __int8 v15 = (void *)_os_log_send_and_compose_impl( v11,  0LL,  0LL,  0LL,  &_mh_execute_header,  v12,  1LL,  "%@: Unregister client: %@",  &v25,  22);

  if (v15)
  {
    uint64_t v12 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v15,  4LL));
    free(v15);
    __int128 v24 = v12;
    SSFileLog(v9, @"%@");
LABEL_13:
  }

  [v4 deleteObject:v7];
  [*(id *)(a1 + 32) _reloadActiveEnvironmentInContext:v4];
  sub_10003E244(v4);
LABEL_28:
  +[NSThread endPrivateManagedContextSession](&OBJC_CLASS___NSThread, "endPrivateManagedContextSession", v24);
  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 40));
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 48), reply);
}

void sub_100075D90(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _environmentNameForConnection:*(void *)(a1 + 40)]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[NSThread beginPrivateManagedContextSession]( &OBJC_CLASS___NSThread,  "beginPrivateManagedContextSession"));
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _environmentForName:v2 createIfNeeded:0 inContext:v3]);
  uint64_t v5 = *(void **)(a1 + 48);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 tokenData]);
  unsigned int v7 = [v5 isEqual:v6];

  if (v4 && (!v7 || [*(id *)(a1 + 32) _shouldAggressivelySendToken]))
  {
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v8) {
      uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v9 = [v8 shouldLog];
    else {
      LODWORD(v10) = v9;
    }
    uint64_t v11 = (os_log_s *)objc_claimAutoreleasedReturnValue([v8 OSLogObject]);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO)) {
      uint64_t v10 = v10;
    }
    else {
      v10 &= 2u;
    }
    if ((_DWORD)v10)
    {
      uint64_t v12 = (void *)objc_opt_class(*(void *)(a1 + 32));
      int v17 = 138412546;
      __int16 v18 = v12;
      __int16 v19 = 2112;
      id v20 = v2;
      id v13 = v12;
      id v14 = (void *)_os_log_send_and_compose_impl( v10,  0LL,  0LL,  0LL,  &_mh_execute_header,  v11,  1LL,  "%@: Environment token changed: %@",  &v17,  22);

      if (!v14)
      {
LABEL_16:

        unsigned __int8 v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", 0LL));
        [v4 setLastAccountIdentifier:v15];

        [v4 setTokenData:*(void *)(a1 + 48)];
        sub_10003E244(v3);
        [*(id *)(a1 + 32) _postTokenForEnvironment:v4];
        goto LABEL_17;
      }

      uint64_t v11 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v14,  4LL));
      free(v14);
      unsigned int v16 = v11;
      SSFileLog(v8, @"%@");
    }

    goto LABEL_16;
  }

void sub_1000760A8(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v2) {
    id v2 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v3 = [v2 shouldLog];
  else {
    LODWORD(v4) = v3;
  }
  uint64_t v5 = (os_log_s *)objc_claimAutoreleasedReturnValue([v2 OSLogObject]);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v4 = v4;
  }
  else {
    v4 &= 2u;
  }
  if ((_DWORD)v4)
  {
    id v6 = (void *)objc_opt_class(*(void *)(a1 + 32));
    unsigned int v7 = *(void **)(a1 + 40);
    uint64_t v8 = *(void *)(a1 + 48);
    int v43 = 138412802;
    __int128 v44 = v6;
    __int16 v45 = 2112;
    __int128 v46 = v7;
    __int16 v47 = 2112;
    uint64_t v48 = v8;
    id v9 = v6;
    uint64_t v10 = (void *)_os_log_send_and_compose_impl( v4,  0LL,  0LL,  0LL,  &_mh_execute_header,  v5,  0LL,  "%@: Received push notification: %@: %@",  &v43,  32);

    if (!v10) {
      goto LABEL_13;
    }
    uint64_t v5 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v10,  4LL));
    free(v10);
    id v40 = v5;
    SSFileLog(v2, @"%@");
  }

LABEL_13:
  if ([*(id *)(a1 + 32) _isPushEnabled])
  {
    uint64_t v11 = objc_opt_class(*(void *)(a1 + 32));
    uint64_t v12 = *(void *)(a1 + 48);
    id v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _bag]);
    LOBYTE(v11) = [(id)v11 _amsHandleNotification:v12 urlBag:v13];

    if ((v11 & 1) != 0) {
      return;
    }
    id v14 = (void *)objc_claimAutoreleasedReturnValue(+[SSAccountStore defaultStore](&OBJC_CLASS___SSAccountStore, "defaultStore"));
    unsigned __int8 v15 = (void *)objc_claimAutoreleasedReturnValue([v14 activeAccount]);

    unsigned int v16 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) objectForKey:SSRemoteNotificationKeyAccountIdentifier]);
    if (!v16
      || (int v17 = (void *)objc_claimAutoreleasedReturnValue([v15 uniqueIdentifier]),
          unsigned __int8 v18 = [v16 isEqual:v17],
          v17,
          (v18 & 1) != 0))
    {
      __int16 v19 = -[PushNotificationDisplayOperation initWithNotificationUserInfo:]( objc_alloc(&OBJC_CLASS___PushNotificationDisplayOperation),  "initWithNotificationUserInfo:",  *(void *)(a1 + 48));
      if (!-[PushNotificationDisplayOperation requiresClientIdentifier](v19, "requiresClientIdentifier")) {
        goto LABEL_33;
      }
      id v20 = (void *)objc_claimAutoreleasedReturnValue( +[NSThread beginPrivateManagedContextSession]( &OBJC_CLASS___NSThread,  "beginPrivateManagedContextSession"));
      id v21 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) objectForKey:SSRemoteNotificationKeyClientIdentifier]);
      __int128 v22 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _clientForIdentifier:v21 createIfNeeded:0 inContext:v20]);
      if (v22)
      {
LABEL_32:
        +[NSThread endPrivateManagedContextSession](&OBJC_CLASS___NSThread, "endPrivateManagedContextSession", v40);

LABEL_33:
        if (v19) {
          [*(id *)(*(void *)(a1 + 32) + 48) addOperation:v19];
        }
        goto LABEL_58;
      }

      __int128 v23 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
      if (!v23) {
        __int128 v23 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      unsigned int v24 = objc_msgSend(v23, "shouldLog", v40);
      else {
        LODWORD(v25) = v24;
      }
      __int128 v26 = (os_log_s *)objc_claimAutoreleasedReturnValue([v23 OSLogObject]);
      if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT)) {
        uint64_t v25 = v25;
      }
      else {
        v25 &= 2u;
      }
      if ((_DWORD)v25)
      {
        __int16 v27 = (void *)objc_opt_class(*(void *)(a1 + 32));
        int v43 = 138412546;
        __int128 v44 = v27;
        __int16 v45 = 2112;
        __int128 v46 = v21;
        id v42 = v27;
        LODWORD(v41) = 22;
        __int128 v28 = (void *)_os_log_send_and_compose_impl( v25,  0LL,  0LL,  0LL,  &_mh_execute_header,  v26,  0LL,  "%@: Ignoring push notification for unregistered client: %@",  &v43,  v41);

        if (!v28)
        {
LABEL_31:

          __int16 v19 = 0LL;
          goto LABEL_32;
        }

        __int128 v26 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v28,  4LL));
        free(v28);
        id v40 = v26;
        SSFileLog(v23, @"%@");
      }

      goto LABEL_31;
    }

    __int16 v19 = (PushNotificationDisplayOperation *)objc_claimAutoreleasedReturnValue( +[SSLogConfig sharedDaemonConfig]( &OBJC_CLASS___SSLogConfig,  "sharedDaemonConfig"));
    if (!v19) {
      __int16 v19 = (PushNotificationDisplayOperation *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v34 = -[PushNotificationDisplayOperation shouldLog](v19, "shouldLog", v40);
    else {
      LODWORD(v35) = v34;
    }
    int v36 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[PushNotificationDisplayOperation OSLogObject](v19, "OSLogObject"));
    if (os_log_type_enabled(v36, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v35 = v35;
    }
    else {
      v35 &= 2u;
    }
    if ((_DWORD)v35)
    {
      id v37 = (void *)objc_opt_class(*(void *)(a1 + 32));
      int v43 = 138412546;
      __int128 v44 = v37;
      __int16 v45 = 2112;
      __int128 v46 = v16;
      id v38 = v37;
      LODWORD(v41) = 22;
      uint64_t v39 = (void *)_os_log_send_and_compose_impl( v35,  0LL,  0LL,  0LL,  &_mh_execute_header,  v36,  0LL,  "%@: Ignoring push notification for inactive account: %@",  &v43,  v41);

      if (!v39)
      {
LABEL_58:

        goto LABEL_59;
      }

      int v36 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v39,  4LL));
      free(v39);
      SSFileLog(v19, @"%@");
    }

    goto LABEL_58;
  }

  unsigned __int8 v15 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v15) {
    unsigned __int8 v15 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v29 = objc_msgSend(v15, "shouldLog", v40);
  else {
    LODWORD(v30) = v29;
  }
  unsigned int v16 = (void *)objc_claimAutoreleasedReturnValue([v15 OSLogObject]);
  if (os_log_type_enabled((os_log_t)v16, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v30 = v30;
  }
  else {
    v30 &= 2u;
  }
  if (!(_DWORD)v30) {
    goto LABEL_59;
  }
  id v31 = (void *)objc_opt_class(*(void *)(a1 + 32));
  int v43 = 138412290;
  __int128 v44 = v31;
  id v32 = v31;
  LODWORD(v41) = 12;
  int v33 = (void *)_os_log_send_and_compose_impl( v30,  0LL,  0LL,  0LL,  &_mh_execute_header,  v16,  0LL,  "%@: Ignoring push notification while disabled",  &v43,  v41);

  if (v33)
  {
    unsigned int v16 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v33,  4LL));
    free(v33);
    SSFileLog(v15, @"%@");
LABEL_59:
  }
}

void sub_100076768(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue(+[NSThread beginPrivateManagedContextSession](&OBJC_CLASS___NSThread, "beginPrivateManagedContextSession"));
  [*(id *)(a1 + 32) _resetLastRegisterAttemptTime];
  [*(id *)(a1 + 32) _reloadPushStateInContext:v2];
  sub_10003E244(v2);
  +[NSThread endPrivateManagedContextSession](&OBJC_CLASS___NSThread, "endPrivateManagedContextSession");
}

void sub_100076820(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v2) {
    id v2 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v3 = [v2 shouldLog];
  else {
    LODWORD(v4) = v3;
  }
  uint64_t v5 = (os_log_s *)objc_claimAutoreleasedReturnValue([v2 OSLogObject]);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO)) {
    uint64_t v4 = v4;
  }
  else {
    v4 &= 2u;
  }
  if (!(_DWORD)v4) {
    goto LABEL_12;
  }
  id v6 = (void *)objc_opt_class(*(void *)(a1 + 32));
  int v10 = 138412290;
  uint64_t v11 = v6;
  id v7 = v6;
  uint64_t v8 = (void *)_os_log_send_and_compose_impl( v4,  0LL,  0LL,  0LL,  &_mh_execute_header,  v5,  1LL,  "%@: The device's name changed. Sending the new name to the server.",  &v10,  12);

  if (v8)
  {
    uint64_t v5 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v8,  4LL));
    free(v8);
    SSFileLog(v2, @"%@");
LABEL_12:
  }

  id v9 = (void *)objc_claimAutoreleasedReturnValue( +[NSThread beginPrivateManagedContextSession]( &OBJC_CLASS___NSThread,  "beginPrivateManagedContextSession"));
  [*(id *)(a1 + 32) _postTokensInContext:v9 force:1];
  +[NSThread endPrivateManagedContextSession](&OBJC_CLASS___NSThread, "endPrivateManagedContextSession");
}

void sub_100076A58(uint64_t a1)
{
  if (CFAbsoluteTimeGetCurrent() - *(double *)(*(void *)(a1 + 32) + 32LL) > 3600.0)
  {
    id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSThread beginPrivateManagedContextSession]( &OBJC_CLASS___NSThread,  "beginPrivateManagedContextSession"));
    [*(id *)(a1 + 32) _postTokensIfNecessaryInContext:v2];
    +[NSThread endPrivateManagedContextSession](&OBJC_CLASS___NSThread, "endPrivateManagedContextSession");
  }

void sub_100076B30(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue(+[NSThread beginPrivateManagedContextSession](&OBJC_CLASS___NSThread, "beginPrivateManagedContextSession"));
  [*(id *)(a1 + 32) _resetLastRegisterAttemptTime];
  [*(id *)(a1 + 32) _reloadPushStateInContext:v2];
  sub_10003E244(v2);
  +[NSThread endPrivateManagedContextSession](&OBJC_CLASS___NSThread, "endPrivateManagedContextSession");
}

void sub_100076C24(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue(+[NSThread beginPrivateManagedContextSession](&OBJC_CLASS___NSThread, "beginPrivateManagedContextSession"));
  [*(id *)(a1 + 32) _reloadPushStateInContext:v2];
  sub_10003E244(v2);
  +[NSThread endPrivateManagedContextSession](&OBJC_CLASS___NSThread, "endPrivateManagedContextSession");
}

void sub_100077E48(uint64_t a1)
{
  __int128 v6 = 0u;
  __int128 v7 = 0u;
  __int128 v8 = 0u;
  __int128 v9 = 0u;
  id v1 = *(id *)(a1 + 32);
  id v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0LL;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        (*(void (**)(void))(*(void *)(*((void *)&v6 + 1) + 8LL * (void)v5) + 16LL))(*(void *)(*((void *)&v6 + 1) + 8LL * (void)v5));
        uint64_t v5 = (char *)v5 + 1;
      }

      while (v3 != v5);
      id v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }

    while (v3);
  }
}

void sub_100078058(uint64_t a1)
{
  id v1 = (id)objc_claimAutoreleasedReturnValue(+[Daemon daemon](&OBJC_CLASS___Daemon, "daemon"));
  [v1 releaseKeepAliveAssertion:@"com.apple.itunesstore.PushNotificationController"];
}

void sub_10007931C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, id location)
{
}

void sub_100079344(uint64_t a1)
{
  id v2 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 24LL);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472LL;
  v3[2] = sub_1000793D4;
  v3[3] = &unk_10034C8F8;
  objc_copyWeak(&v4, (id *)(a1 + 40));
  v3[4] = *(void *)(a1 + 32);
  dispatch_async(v2, v3);
  objc_destroyWeak(&v4);
}

void sub_1000793D4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if ([WeakRetained success])
  {
    [*(id *)(a1 + 32) _setShouldAggressivelySendToken:0];
    [*(id *)(a1 + 32) _updateEnvironmentAfterTokenPost:WeakRetained];
  }

  [WeakRetained setCompletionBlock:0];
  [*(id *)(*(void *)(a1 + 32) + 72) removeObjectIdenticalTo:WeakRetained];
  *(CFAbsoluteTime *)(*(void *)(a1 + 32) + 32LL) = CFAbsoluteTimeGetCurrent();
  [*(id *)(a1 + 32) _fireRegisterBlocksAfterOperation:WeakRetained];
}

LABEL_59:
}

    goto LABEL_60;
  }

  if (!v12) {
    id v13 = (RedeemCodesOperation *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  int v54 = v9;
  uint64_t v55 = v4;
  id v14 = -[RedeemCodesOperation shouldLog](v13, "shouldLog");
  else {
    unsigned __int8 v15 = v14;
  }
  unsigned int v16 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[RedeemCodesOperation OSLogObject](v13, "OSLogObject"));
  if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO)) {
    int v17 = v15;
  }
  else {
    int v17 = v15 & 2;
  }
  if ((_DWORD)v17)
  {
    unsigned __int8 v18 = (void *)objc_opt_class(self);
    __int16 v19 = v18;
    id v20 = (NSMutableString *)-[NSMutableArray count](v10, "count");
    v65 = 138412546;
    uint64_t v66 = v18;
    __int128 v67 = 2048;
    __int128 v68 = v20;
    id v21 = (void *)_os_log_send_and_compose_impl( v17,  0LL,  0LL,  0LL,  &_mh_execute_header,  v16,  1LL,  "%@: Loading %lu download manifests from URL",  &v65,  22);

    if (!v21) {
      goto LABEL_15;
    }
    unsigned int v16 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v21,  4LL));
    free(v21);
    SSFileLog(v13, @"%@");
  }

LABEL_15:
  __int128 v22 = (objc_class *)ISWeakLinkedClassForString(@"ASDExternalManifestRequestOptions", 29LL);
  __int128 v23 = (objc_class *)ISWeakLinkedClassForString(@"ASDExternalManifestRequest", 29LL);
  __int16 v56 = 0u;
  __int128 v57 = 0u;
  __int128 v58 = 0u;
  unsigned int v59 = 0u;
  id v13 = v10;
  unsigned int v24 = -[RedeemCodesOperation countByEnumeratingWithState:objects:count:]( v13,  "countByEnumeratingWithState:objects:count:",  &v56,  v64,  16LL);
  if (v24)
  {
    uint64_t v25 = v24;
    id v53 = v10;
    __int128 v26 = *(void *)v57;
    do
    {
      for (uint64_t i = 0LL; i != v25; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v57 != v26) {
          objc_enumerationMutation(v13);
        }
        __int128 v28 = [[v22 alloc] initWithURL:*(void *)(*((void *)&v56 + 1) + 8 * (void)i)];
        unsigned int v29 = [[v23 alloc] initWithOptions:v28];
        [v29 startWithCompletionBlock:&stru_10034D6C0];
      }

      uint64_t v25 = -[RedeemCodesOperation countByEnumeratingWithState:objects:count:]( v13,  "countByEnumeratingWithState:objects:count:",  &v56,  v64,  16LL);
    }

    while (v25);
    __int128 v9 = v54;
    id v4 = v55;
    int v10 = v53;
  }

  else
  {
    id v4 = v55;
  }

    __int128 v8 = 0LL;
    return v8;
  }

  __int128 v8 = 0LL;
  __int128 v9 = CFDateGetAbsoluteTime((CFDateRef)a1) + kCFAbsoluteTimeIntervalSince1970;
  if (v9 >= -9223372040.0 && v9 <= 9223372040.0)
  {
    id v3 = xpc_date_create((uint64_t)(v9 * 1000000000.0));
    return v3;
  }

  return v8;
}

  if (a3) {
    (*((void (**)(id, uint64_t, void, void, __n128))a3 + 2))(a3, v20, 0LL, 0LL, v21);
  }
}

  *a5 = objc_msgSend(*(id *)(a1 + 32), "count", v41) == 0;
}

uint64_t sub_10007B574(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

LABEL_54:
LABEL_55:
}
}

      goto LABEL_55;
    }

    __int128 v6 = (xpc_object_t)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v6) {
      __int128 v6 = (xpc_object_t)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    id v31 = [v6 shouldLog];
    else {
      LODWORD(v32) = v31;
    }
    int v33 = (os_log_s *)objc_claimAutoreleasedReturnValue([v6 OSLogObject]);
    if (os_log_type_enabled(v33, OS_LOG_TYPE_INFO)) {
      id v32 = v32;
    }
    else {
      v32 &= 2u;
    }
    if (!(_DWORD)v32)
    {

      goto LABEL_54;
    }

    unsigned int v34 = (objc_class *)objc_opt_class(*(void *)(a1 + 40));
    uint64_t v35 = NSStringFromClass(v34);
    int v36 = (void *)objc_claimAutoreleasedReturnValue(v35);
    uint64_t v39 = 138412546;
    id v40 = v36;
    uint64_t v41 = 1024;
    id v42 = v5;
    uint64_t v30 = (void *)_os_log_send_and_compose_impl( v32,  0LL,  0LL,  0LL,  &_mh_execute_header,  v33,  1LL,  "[%@]: Unknown state: %d when processing Install Attribution send pending pingbacks task",  &v39,  18);

    if (!v30) {
      goto LABEL_54;
    }
    goto LABEL_51;
  }

  unsigned __int8 v15 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v15) {
    unsigned __int8 v15 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v16 = [v15 shouldLog];
  else {
    LODWORD(v17) = v16;
  }
  unsigned __int8 v18 = (os_log_s *)objc_claimAutoreleasedReturnValue([v15 OSLogObject]);
  if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO)) {
    int v17 = v17;
  }
  else {
    v17 &= 2u;
  }
  if ((_DWORD)v17)
  {
    __int16 v19 = (objc_class *)objc_opt_class(*(void *)(a1 + 40));
    id v20 = NSStringFromClass(v19);
    id v21 = (void *)objc_claimAutoreleasedReturnValue(v20);
    uint64_t v39 = 138412290;
    id v40 = v21;
    __int128 v22 = (void *)_os_log_send_and_compose_impl( v17,  0LL,  0LL,  0LL,  &_mh_execute_header,  v18,  1LL,  "[%@]: running Install Attribution send pending pingbacks task",  &v39,  12);

    if (!v22) {
      goto LABEL_29;
    }
    unsigned __int8 v18 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v22,  4LL));
    free(v22);
    id v37 = v18;
    SSFileLog(v15, @"%@");
  }

LABEL_29:
  __int128 v23 = (void *)objc_claimAutoreleasedReturnValue(+[PurchaseActionsManager sharedInstance](&OBJC_CLASS___PurchaseActionsManager, "sharedInstance"));
  [v23 sendPendingPingbacks];

  if (!xpc_activity_set_state(v3, 5LL))
  {
    __int128 v6 = (xpc_object_t)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v6) {
      __int128 v6 = (xpc_object_t)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v24 = objc_msgSend(v6, "shouldLog", v37);
    else {
      LODWORD(v25) = v24;
    }
    __int128 v26 = (os_log_s *)objc_claimAutoreleasedReturnValue([v6 OSLogObject]);
    if (os_log_type_enabled(v26, OS_LOG_TYPE_INFO)) {
      uint64_t v25 = v25;
    }
    else {
      v25 &= 2u;
    }
    if (!(_DWORD)v25) {
      goto LABEL_52;
    }
    __int16 v27 = (objc_class *)objc_opt_class(*(void *)(a1 + 40));
    __int128 v28 = NSStringFromClass(v27);
    unsigned int v29 = (void *)objc_claimAutoreleasedReturnValue(v28);
    uint64_t v39 = 138412290;
    id v40 = v29;
    LODWORD(v3_Block_object_dispose((const void *)(v9 - 80), 8) = 12;
    uint64_t v30 = (void *)_os_log_send_and_compose_impl( v25,  0LL,  0LL,  0LL,  &_mh_execute_header,  v26,  1LL,  "[%@] Could not set state of the Install Attribution send pending pingbacks task activity to XPC_ACTI VITY_STATE_DONE.",  &v39,  v38);

    if (!v30) {
      goto LABEL_54;
    }
LABEL_51:
    __int128 v26 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v30,  4LL));
    free(v30);
    SSFileLog(v6, @"%@");
LABEL_52:

    goto LABEL_54;
  }

void sub_10007DEC0(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  __int128 v6 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v6) {
    __int128 v6 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v7 = [v6 shouldLog];
  else {
    LODWORD(v_Block_object_dispose((const void *)(v9 - 80), 8) = v7;
  }
  __int128 v9 = (os_log_s *)objc_claimAutoreleasedReturnValue([v6 OSLogObject]);
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v8 = v8;
  }
  else {
    v8 &= 2u;
  }
  if (!(_DWORD)v8) {
    goto LABEL_12;
  }
  int v10 = (void *)objc_opt_class(*(void *)(a1 + 32));
  int v13 = 138412802;
  id v14 = v10;
  __int16 v15 = 1024;
  int v16 = a2;
  __int16 v17 = 2112;
  id v18 = v5;
  id v11 = v10;
  uint64_t v12 = (void *)_os_log_send_and_compose_impl( v8,  0LL,  0LL,  0LL,  &_mh_execute_header,  v9,  0LL,  "[%@]: Posted bulletin request complete with result: %d error: %@",  &v13,  28);

  if (v12)
  {
    __int128 v9 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v12,  4LL));
    free(v12);
    SSFileLog(v6, @"%@");
LABEL_12:
  }
}

id *sub_10007E064(id *result, uint64_t a2)
{
  if (!a2) {
    return (id *)[result[4] _performNotificationAction:1];
  }
  return result;
}

LABEL_115:
LABEL_116:
LABEL_117:

      return;
    default:
      if (v3)
      {
        __int16 v84 = (id)objc_claimAutoreleasedReturnValue( +[PushNotificationController sharedInstance]( &OBJC_CLASS___PushNotificationController,  "sharedInstance"));
        uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue(-[SSRemoteNotification notificationUserInfo](self->_notification, "notificationUserInfo"));
        [v84 postClientNotificationWithUserInfo:v25];
LABEL_31:

LABEL_121:
      }

      return;
  }

void sub_10007F0F4(uint64_t a1, void *a2, int a3)
{
  if (a3)
  {
    id v4 = a2;
    +[SSVSubscriptionStatusCoordinator sendChangeNotification]( &OBJC_CLASS___SSVSubscriptionStatusCoordinator,  "sendChangeNotification");
    id v5 = [v4 accountStatus];

    if (v5 == (id)3)
    {
      id v7 = (id)objc_claimAutoreleasedReturnValue( +[PushNotificationController sharedInstance]( &OBJC_CLASS___PushNotificationController,  "sharedInstance"));
      __int128 v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 96) notificationUserInfo]);
      [v7 postClientNotificationWithUserInfo:v6];
    }
  }

NSURL *__cdecl sub_1000803E0(id a1, SSURLBagContext *a2)
{
  id v2 = objc_msgSend(+[ISURLBagCache sharedCache](ISURLBagCache, "sharedCache"), "URLBagForContext:", a2);
  id v3 = [v2 valueForKey:@"automatic-downloads2"];
  if (!v3) {
    id v3 = [v2 valueForKey:@"automatic-downloads"];
  }
  uint64_t result = (NSURL *)[v3 objectForKey:@"register-media-types"];
  if (result) {
    return +[NSURL URLWithString:](&OBJC_CLASS___NSURL, "URLWithString:", result);
  }
  return result;
}

NSURL *__cdecl sub_100081264(id a1, SSURLBagContext *a2)
{
  id v2 = objc_msgSend(+[ISURLBagCache sharedCache](ISURLBagCache, "sharedCache"), "URLBagForContext:", a2);
  id v3 = [v2 valueForKey:@"automatic-downloads2"];
  if (!v3) {
    id v3 = [v2 valueForKey:@"automatic-downloads"];
  }
  uint64_t result = (NSURL *)[v3 objectForKey:@"discovery-prompt"];
  if (result) {
    return +[NSURL URLWithString:](&OBJC_CLASS___NSURL, "URLWithString:", result);
  }
  return result;
}

void sub_100081758(_Unwind_Exception *a1)
{
}

void sub_10008195C(_Unwind_Exception *a1)
{
}

void sub_100081CE4(_Unwind_Exception *a1)
{
}

void sub_100083EA0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_100083EC0(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _applicationStateChanged:v3];
}

id sub_1000841D0(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) _applicationState];
  *(_DWORD *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = (_DWORD)result;
  return result;
}

void sub_1000843B0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_1000843CC(uint64_t a1)
{
  id v2 = -[XPCClientBackgroundTask initWithProcessAssertion:invalidationBlock:]( objc_alloc(&OBJC_CLASS___XPCClientBackgroundTask),  "initWithProcessAssertion:invalidationBlock:",  *(void *)(a1 + 32),  *(void *)(a1 + 56));
  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v3) {
    id v3 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v4 = [v3 shouldLog];
  else {
    LODWORD(v5) = v4;
  }
  __int128 v6 = (os_log_s *)objc_claimAutoreleasedReturnValue([v3 OSLogObject]);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO)) {
    uint64_t v5 = v5;
  }
  else {
    v5 &= 2u;
  }
  if ((_DWORD)v5)
  {
    id v7 = (void *)objc_opt_class(*(void *)(a1 + 40));
    int v8 = *(_DWORD *)(a1 + 64);
    uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8LL);
    int v17 = 138413058;
    id v18 = v7;
    __int16 v19 = 1024;
    int v20 = v8;
    __int16 v21 = 2112;
    uint64_t v22 = v9;
    __int16 v23 = 2112;
    unsigned int v24 = v2;
    id v10 = v7;
    id v11 = (void *)_os_log_send_and_compose_impl( v5,  0LL,  0LL,  0LL,  &_mh_execute_header,  v6,  1LL,  "%@: Began background task (%d, %@): %@",  &v17,  38);

    if (!v11) {
      goto LABEL_13;
    }
    __int128 v6 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v11,  4LL));
    free(v11);
    int v16 = v6;
    SSFileLog(v3, @"%@");
  }

LABEL_13:
  uint64_t v12 = *(void **)(*(void *)(a1 + 40) + 72LL);
  if (!v12)
  {
    int v13 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    uint64_t v14 = *(void *)(a1 + 40);
    __int16 v15 = *(void **)(v14 + 72);
    *(void *)(v14 + 72) = v13;

    uint64_t v12 = *(void **)(*(void *)(a1 + 40) + 72LL);
  }

  objc_msgSend(v12, "setObject:forKey:", v2, *(void *)(a1 + 48), v16);
}

void sub_1000845D0(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [v1 _invalidateBackgroundTaskAssertion:WeakRetained];
}

id sub_1000846A4(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) _clientType];
  if (result == (id)1)
  {
    id result = [*(id *)(a1 + 32) _applicationState];
    HIDWORD(v3) = (_DWORD)result;
    LODWORD(v3) = (_DWORD)result - 4;
    unint64_t v4 = 0x100000001000101uLL >> (8 * (v3 >> 2));
    else {
      char v5 = v4;
    }
    *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = v5;
  }

  return result;
}

id sub_1000847E0(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) _clientType];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = result;
  return result;
}

uint64_t sub_1000848C4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1000848D4(uint64_t a1)
{
}

void sub_1000848DC(uint64_t a1)
{
  uint64_t v2 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _applicationBackgroundModes]);
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8LL);
  unint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_1000849C8(uint64_t a1)
{
}

void sub_100084A5C(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 72) objectForKey:*(void *)(a1 + 40)]);
  if (v2)
  {
    uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v3) {
      uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v4 = [v3 shouldLog];
    else {
      LODWORD(v5) = v4;
    }
    __int128 v6 = (os_log_s *)objc_claimAutoreleasedReturnValue([v3 OSLogObject]);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO)) {
      uint64_t v5 = v5;
    }
    else {
      v5 &= 2u;
    }
    if ((_DWORD)v5)
    {
      id v7 = (void *)objc_opt_class(*(void *)(a1 + 32));
      int v11 = 138412546;
      uint64_t v12 = v7;
      __int16 v13 = 2112;
      uint64_t v14 = v2;
      id v8 = v7;
      uint64_t v9 = (void *)_os_log_send_and_compose_impl( v5,  0LL,  0LL,  0LL,  &_mh_execute_header,  v6,  1LL,  "%@: Ending background task: %@",  &v11,  22);

      if (!v9)
      {
LABEL_14:

        id v10 = (void *)objc_claimAutoreleasedReturnValue([v2 processAssertion]);
        [v10 setInvalidationHandler:0];

        [*(id *)(*(void *)(a1 + 32) + 72) removeObjectForKey:*(void *)(a1 + 40)];
        goto LABEL_15;
      }

      __int128 v6 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v9,  4LL));
      free(v9);
      SSFileLog(v3, @"%@");
    }

    goto LABEL_14;
  }

void sub_100084CC8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (*(unsigned __int8 *)(v2 + 48) == 255)
  {
    *(_BYTE *)(v2 + 4_Block_object_dispose((const void *)(v9 - 80), 8) = 0;
    id v3 = [*(id *)(a1 + 32) _clientType];
    if (v3 == (id)3)
    {
LABEL_5:
      *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = 1;
      goto LABEL_13;
    }

    if (v3 == (id)1)
    {
      if (*(void *)(*(void *)(a1 + 32) + 8LL))
      {
        unsigned int v4 = (void *)objc_claimAutoreleasedReturnValue( +[LSApplicationProxy applicationProxyForIdentifier:]( &OBJC_CLASS___LSApplicationProxy,  "applicationProxyForIdentifier:"));
        uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v4 appState]);
        unsigned int v6 = [v5 isValid];

        if (v6)
        {
          *(_BYTE *)(*(void *)(a1 + 32) + 48) = [v4 profileValidated] ^ 1;
        }

        else
        {
          id v7 = (void *)objc_claimAutoreleasedReturnValue( +[LSPlugInKitProxy pluginKitProxyForIdentifier:]( &OBJC_CLASS___LSPlugInKitProxy,  "pluginKitProxyForIdentifier:",  *(void *)(*(void *)(a1 + 32) + 8LL)));
          id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 containingBundle]);
          uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v8 bundleType]);
          unsigned int v10 = [v9 isEqualToString:LSUserApplicationType];

          if (v10) {
            *(_BYTE *)(*(void *)(a1 + 32) + 48) = [v7 profileValidated] ^ 1;
          }
        }
      }
    }

    else if (!v3)
    {
      goto LABEL_5;
    }
  }

LABEL_13:
  *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = *(_BYTE *)(*(void *)(a1 + 32) + 48LL) != 0;
}

  uint64_t v22 = v11;

  return v22;
}

    return +[NSThread endManagedContextSession](&OBJC_CLASS___NSThread, "endManagedContextSession");
  }

  return result;
}

id sub_100084EA4(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) _isNewsstandApp];
  *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = (_BYTE)result;
  return result;
}

id sub_100084F64(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) _isBetaApp];
  *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = (_BYTE)result;
  return result;
}

id sub_100085024(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) _isAdHocCodeSigned];
  *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = (_BYTE)result;
  return result;
}

void sub_1000850D0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _applicationBackgroundModes];
  [*(id *)(a1 + 32) _applicationState];
  [*(id *)(a1 + 32) _clientType];
  [*(id *)(a1 + 32) _isNewsstandApp];
  [*(id *)(a1 + 32) _isBetaApp];
  if (*(void *)(a1 + 40))
  {
    id v3 = dispatch_queue_create("com.apple.itunesstored.XPCClient.block", 0LL);
    dispatch_async(v3, *(dispatch_block_t *)(a1 + 40));
  }

void sub_100085210(uint64_t a1)
{
}

void sub_100085284(uint64_t a1)
{
  id v2 = *(void **)(*(void *)(a1 + 32) + 96LL);
  if (!v2)
  {
    id v3 = objc_alloc_init(&OBJC_CLASS___NSMutableIndexSet);
    uint64_t v4 = *(void *)(a1 + 32);
    uint64_t v5 = *(void **)(v4 + 96);
    *(void *)(v4 + 96) = v3;

    id v2 = *(void **)(*(void *)(a1 + 32) + 96LL);
  }

  if (([v2 containsIndex:*(void *)(a1 + 40)] & 1) == 0)
  {
    [*(id *)(*(void *)(a1 + 32) + 96) addIndex:*(void *)(a1 + 40)];
    xpc_object_t v6 = xpc_dictionary_create(0LL, 0LL, 0LL);
    xpc_dictionary_set_int64(v6, "0", *(void *)(a1 + 40));
    uint64_t v7 = *(void *)(a1 + 32);
    uint64_t v8 = *(void *)(a1 + 40);
    uint64_t v9 = *(void **)(v7 + 40);
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472LL;
    v10[2] = sub_10008535C;
    v10[3] = &unk_10034C028;
    v10[4] = v7;
    v10[5] = v8;
    [v9 sendMessage:v6 withReply:v10];
  }

void sub_10008535C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  id v3 = *(dispatch_queue_s **)(v1 + 16);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_1000853B4;
  v4[3] = &unk_10034CA90;
  v4[4] = v1;
  void v4[5] = v2;
  dispatch_async(v3, v4);
}

id sub_1000853B4(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 96) removeIndex:*(void *)(a1 + 40)];
}

void sub_10008543C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2) {
    id v3 = -[SSXPCConnection initWithXPCConnection:]( objc_alloc(&OBJC_CLASS___SSXPCConnection),  "initWithXPCConnection:",  *(void *)(a1 + 40));
  }
  else {
    id v3 = 0LL;
  }
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 40LL), v3);
  if (v2) {

  }
  objc_initWeak(&location, *(id *)(a1 + 32));
  uint64_t v4 = *(void **)(*(void *)(a1 + 32) + 40LL);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  v5[2] = sub_100085544;
  v5[3] = &unk_10034BC98;
  objc_copyWeak(&v6, &location);
  [v4 setDisconnectBlock:v5];
  objc_destroyWeak(&v6);
  objc_destroyWeak(&location);
}

void sub_100085528( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_100085544(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _handleOutputConnectionDisconnect];
}

void sub_100085740(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) userInfo]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 objectForKey:BKSApplicationStateDisplayIDKey]);
  uint64_t v4 = *(void **)(a1 + 40);
  if (v4[1])
  {
    if ([v4 _clientType] == (id)1)
    {
      if ([v3 hasPrefix:*(void *)(*(void *)(a1 + 40) + 8)])
      {
        uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v2 objectForKey:BKSApplicationStateKey]);
        id v6 = [v5 unsignedIntValue];

        if ((_DWORD)v6 != *(_DWORD *)(*(void *)(a1 + 40) + 52LL))
        {
          uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
          if (!v7) {
            uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
          }
          unsigned int v8 = [v7 shouldLog];
          else {
            LODWORD(v9) = v8;
          }
          unsigned int v10 = (os_log_s *)objc_claimAutoreleasedReturnValue([v7 OSLogObject]);
          if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO)) {
            uint64_t v9 = v9;
          }
          else {
            v9 &= 2u;
          }
          if ((_DWORD)v9)
          {
            int v11 = (void *)objc_opt_class(*(void *)(a1 + 40));
            id v12 = v11;
            int v17 = 138412802;
            id v18 = v11;
            __int16 v19 = 2112;
            int v20 = v3;
            __int16 v21 = 2112;
            uint64_t Description = SBApplicationStateGetDescription(v6);
            __int16 v13 = (void *)_os_log_send_and_compose_impl( v9,  0LL,  0LL,  0LL,  &_mh_execute_header,  v10,  1LL,  "%@: Application state for %@ changed to %@",  &v17,  32);

            if (!v13)
            {
LABEL_17:

              *(_DWORD *)(*(void *)(a1 + 40) + 52LL) = (_DWORD)v6;
              dispatch_queue_global_t global_queue = dispatch_get_global_queue(0LL, 0LL);
              __int16 v15 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
              block[0] = _NSConcreteStackBlock;
              block[1] = 3221225472LL;
              block[2] = sub_1000859DC;
              block[3] = &unk_10034AC30;
              void block[4] = *(void *)(a1 + 40);
              dispatch_async(v15, block);

              goto LABEL_18;
            }

            unsigned int v10 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v13,  4LL));
            free(v13);
            SSFileLog(v7, @"%@");
          }

          goto LABEL_17;
        }
      }
    }
  }

void sub_1000859DC(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
  [v2 postNotificationName:@"XPCClientApplicationStateDidChangeNotification" object:*(void *)(a1 + 32)];
}

void sub_100085C54(uint64_t a1)
{
  dispatch_queue_global_t global_queue = dispatch_get_global_queue(0LL, 0LL);
  id v3 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100085CD8;
  block[3] = &unk_10034AC30;
  void block[4] = *(void *)(a1 + 32);
  dispatch_async(v3, block);
}

void sub_100085CD8(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
  [v2 postNotificationName:@"XPCClientDisconnectNotification" object:*(void *)(a1 + 32)];
}

void sub_100085DA0(uint64_t a1)
{
  __int128 v15 = 0u;
  __int128 v16 = 0u;
  __int128 v17 = 0u;
  __int128 v18 = 0u;
  id v2 = *(id *)(*(void *)(a1 + 32) + 72LL);
  id v3 = [v2 countByEnumeratingWithState:&v15 objects:v19 count:16];
  if (v3)
  {
    uint64_t v4 = *(void *)v16;
LABEL_3:
    uint64_t v5 = 0LL;
    while (1)
    {
      if (*(void *)v16 != v4) {
        objc_enumerationMutation(v2);
      }
      id v6 = *(void **)(*((void *)&v15 + 1) + 8 * v5);
      id v7 = (id)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 72) objectForKey:v6]);
      unsigned int v8 = (void *)objc_claimAutoreleasedReturnValue([v7 processAssertion]);
      uint64_t v9 = *(void **)(a1 + 40);

      if (v8 == v9) {
        break;
      }

      if (v3 == (id)++v5)
      {
        id v3 = [v2 countByEnumeratingWithState:&v15 objects:v19 count:16];
        if (v3) {
          goto LABEL_3;
        }
        goto LABEL_9;
      }
    }

    id v3 = v6;

    if (!v3) {
      goto LABEL_13;
    }
    dispatch_queue_global_t global_queue = dispatch_get_global_queue(0LL, 0LL);
    int v11 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_100085F80;
    block[3] = &unk_10034AC30;
    id v7 = v7;
    id v14 = v7;
    dispatch_async(v11, block);

    id v12 = (void *)objc_claimAutoreleasedReturnValue([v7 processAssertion]);
    [v12 setInvalidationHandler:0];

    [*(id *)(*(void *)(a1 + 32) + 72) removeObjectForKey:v3];
    id v2 = v14;
  }

  else
  {
LABEL_9:
    id v7 = 0LL;
  }

LABEL_13:
}

void sub_100085F80(uint64_t a1)
{
  uint64_t v1 = (void (**)(void))objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) invalidationBlock]);
  if (v1)
  {
    id v2 = v1;
    v1[2]();
    uint64_t v1 = v2;
  }
}

uint64_t sub_100086ED8(uint64_t a1, void *a2)
{
  return 1LL;
}

void sub_100087544(sqlite3_context *a1, uint64_t a2, sqlite3_value **a3)
{
  sqlite3_int64 v5 = sqlite3_value_int64(*a3);
  id v6 = +[ScratchManager directoryPathForDownloadID:assetID:createIfNeeded:]( &OBJC_CLASS___ScratchManager,  "directoryPathForDownloadID:assetID:createIfNeeded:",  v5,  sqlite3_value_int64(a3[1]),  1LL);
  if (v6
    && (id v7 = v6,
        CFIndex Length = CFStringGetLength(v6),
        CFIndex usedBufLen = 0LL,
        CFIndex MaximumSizeForEncoding = CFStringGetMaximumSizeForEncoding(Length, 0x8000100u),
        (unsigned int v10 = (UInt8 *)malloc(MaximumSizeForEncoding + 1)) != 0LL))
  {
    int v11 = (const char *)v10;
    v13.id location = 0LL;
    v13.length = Length;
    CFStringGetBytes(v7, v13, 0x8000100u, 0, 0, v10, MaximumSizeForEncoding, &usedBufLen);
    v11[usedBufLen] = 0;
    sqlite3_result_text(a1, v11, -1, (void (__cdecl *)(void *))&_free);
  }

  else
  {
    sqlite3_result_null(a1);
  }

uint64_t sub_100087764(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:SSVMediaSocialPostExternalServiceFacebook])
  {
    uint64_t v2 = 1LL;
  }

  else if ([v1 isEqualToString:SSVMediaSocialPostExternalServiceTwitter])
  {
    uint64_t v2 = 2LL;
  }

  else
  {
    uint64_t v2 = 0LL;
  }

  return v2;
}

CFStringRef sub_1000877D4(uint64_t a1)
{
  id v1 = @"twitter";
  if (a1 != 2) {
    id v1 = 0LL;
  }
  if (a1 == 1) {
    return @"facebook";
  }
  else {
    return v1;
  }
}

void sub_100087C38( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_100087C50(uint64_t a1, uint64_t a2)
{
}

void sub_100087C60(uint64_t a1)
{
}

id sub_100087C6C(uint64_t a1)
{
  id result = *(id *)(*(void *)(a1 + 32) + 136LL);
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL) = result;
  return result;
}

void sub_100088304( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v12 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_10008833C(uint64_t a1)
{
  xpc_object_t value = xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 32), "1");
  id v3 = value;
  if (!value) {
    goto LABEL_4;
  }
  if (xpc_get_type(value) != (xpc_type_t)&_xpc_type_dictionary)
  {
    id v3 = 0LL;
LABEL_4:
    uint64_t v4 = 400LL;
LABEL_5:
    id v5 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v5) {
      id v5 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v6 = [v5 shouldLog];
    else {
      LODWORD(v7) = v6;
    }
    unsigned int v8 = (os_log_s *)[v5 OSLogObject];
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      uint64_t v7 = v7;
    }
    else {
      v7 &= 2u;
    }
    if ((_DWORD)v7)
    {
      uint64_t v9 = objc_opt_class(*(void *)(a1 + 40));
      uint64_t v10 = *(void *)(*(void *)(a1 + 40) + 8LL);
      int v31 = 138412802;
      uint64_t v32 = v9;
      __int16 v33 = 2112;
      uint64_t v34 = v10;
      __int16 v35 = 2112;
      int v36 = v3;
      uint64_t v11 = _os_log_send_and_compose_impl( v7,  0LL,  0LL,  0LL,  &_mh_execute_header,  v8,  16LL,  "%@: Client '%@' cannot access kind: %@",  &v31,  32);
      if (v11)
      {
        uint64_t v12 = (void *)v11;
        CFRange v13 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v11, 4LL);
        free(v12);
        uint64_t v30 = v13;
        SSFileLog(v5, @"%@");
      }
    }

    uint64_t v14 = objc_alloc(&OBJC_CLASS___NSError);
    uint64_t v15 = SSErrorDomain;
    uint64_t v16 = v4;
LABEL_17:
    *(void *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 40LL) = -[NSError initWithDomain:code:userInfo:]( v14,  "initWithDomain:code:userInfo:",  v15,  v16,  0LL,  v30);
    goto LABEL_18;
  }

  id v17 = [SSDownloadPropertyKind UTF8String];
  uint64_t v18 = objc_opt_class(&OBJC_CLASS___NSString);
  id v3 = (void *)SSXPCDictionaryCopyCFObjectWithClass(v3, v17, v18);
  if (!v3) {
    goto LABEL_4;
  }
  if (([*(id *)(a1 + 40) _supportsDownloadKind:v3] & 1) == 0)
  {
    uint64_t v4 = 107LL;
    goto LABEL_5;
  }

  *(void *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 40LL) = -[Download initWithClientXPCDownload:]( objc_alloc(&OBJC_CLASS___Download),  "initWithClientXPCDownload:",  *(void *)(a1 + 32));
  __int16 v19 = *(void **)(*(void *)(*(void *)(a1 + 56) + 8LL) + 40LL);
  if (!v19)
  {
    id v21 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v21) {
      id v21 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v22 = [v21 shouldLog];
    else {
      LODWORD(v23) = v22;
    }
    unsigned int v24 = (os_log_s *)[v21 OSLogObject];
    if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
      uint64_t v23 = v23;
    }
    else {
      v23 &= 2u;
    }
    if ((_DWORD)v23)
    {
      uint64_t v25 = objc_opt_class(*(void *)(a1 + 40));
      uint64_t v26 = *(void *)(*(void *)(a1 + 40) + 8LL);
      int v31 = 138412546;
      uint64_t v32 = v25;
      __int16 v33 = 2112;
      uint64_t v34 = v26;
      uint64_t v27 = _os_log_send_and_compose_impl( v23,  0LL,  0LL,  0LL,  &_mh_execute_header,  v24,  16LL,  "%@: Client '%@' could not create import download",  &v31,  22);
      if (v27)
      {
        __int128 v28 = (void *)v27;
        unsigned int v29 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v27, 4LL);
        free(v28);
        uint64_t v30 = v29;
        SSFileLog(v21, @"%@");
      }
    }

    uint64_t v14 = objc_alloc(&OBJC_CLASS___NSError);
    uint64_t v15 = SSErrorDomain;
    uint64_t v16 = 400LL;
    goto LABEL_17;
  }

  [v19 setValue:*(void *)(*(void *)(a1 + 40) + 8) forProperty:@"client_id"];
  if ([v3 isEqualToString:SSDownloadKindNewsstandContent])
  {
    if ([*(id *)(a1 + 40) _isBackgroundApp])
    {
      id v20 = objc_alloc_init(&OBJC_CLASS___SSNetworkConstraints);
      [v20 disableCellularNetworkTypes];
      [*(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) unionNetworkConstraints:v20];
    }

    objc_msgSend( *(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40),  "setValue:forProperty:",  +[NSNumber numberWithBool:](NSNumber, "numberWithBool:", 1),  @"suppress_error_dialogs");
    objc_msgSend( *(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40),  "setValue:forProperty:",  +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", -1),  @"priority");
  }

void sub_100088868( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

id sub_100088880(uint64_t a1)
{
  id result = *(id *)(*(void *)(a1 + 32) + 152LL);
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL) = result;
  return result;
}

void sub_100088A4C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

id sub_100088A64(uint64_t a1)
{
  id result = *(id *)(*(void *)(a1 + 32) + 160LL);
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL) = result;
  return result;
}

void sub_100088B58( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

id sub_100088B70(uint64_t a1)
{
  id result = *(id *)(*(void *)(a1 + 32) + 168LL);
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL) = result;
  return result;
}

LABEL_34:
    uint64_t v11 = 0;
LABEL_36:

    return v11;
  }

  return 1;
}

  return v23;
}

  if (*((_BYTE *)v51 + 24))
  {
    uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v25) {
      uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    uint64_t v26 = objc_msgSend(v25, "shouldLog", v36);
    uint64_t v27 = [v25 shouldLogToDisk];
    __int128 v28 = (os_log_s *)objc_claimAutoreleasedReturnValue([v25 OSLogObject]);
    unsigned int v29 = v28;
    if (v27) {
      v26 |= 2u;
    }
    if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
      uint64_t v30 = v26;
    }
    else {
      uint64_t v30 = v26 & 2;
    }
    if ((_DWORD)v30)
    {
      LOWORD(v54) = 0;
      LODWORD(v37) = 2;
      int v31 = (void *)_os_log_send_and_compose_impl( v30,  0LL,  0LL,  0LL,  &_mh_execute_header,  v29,  16LL,  "[Download]: User triggered prioritization but placeholder has no corresponding download.",  &v54,  v37);

      if (!v31)
      {
LABEL_46:

        uint64_t v32 = *(void **)(a1 + 40);
        __int16 v33 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) anyObject]);
        [v32 _rescueStuckPlaceholderWithBundleID:v33];

        goto LABEL_47;
      }

      unsigned int v29 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v31,  4LL));
      free(v31);
      SSFileLog(v25, @"%@");
    }

    goto LABEL_46;
  }

        goto LABEL_46;
      }
    }
  }

  if (self->_thumbnailURL)
  {
    id v37 = 0LL;
    unsigned int v8 = (void *)objc_claimAutoreleasedReturnValue(-[LoadSoftwareThumbnailOperation _artworkDataWithError:](self, "_artworkDataWithError:", &v37));
    id v5 = v37;
    -[LoadSoftwareThumbnailOperation setError:](self, "setError:", v5);
    if (![v8 length] || v5) {
      goto LABEL_46;
    }
    uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v16) {
      uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    id v17 = [v16 shouldLog];
    else {
      LODWORD(v1_Block_object_dispose(va, 8) = v17;
    }
    __int16 v19 = (os_log_s *)objc_claimAutoreleasedReturnValue([v16 OSLogObject]);
    if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO)) {
      uint64_t v18 = v18;
    }
    else {
      v18 &= 2u;
    }
    if ((_DWORD)v18)
    {
      id v20 = (void *)objc_opt_class(self);
      id v21 = self->_applicationHandle;
      id v38 = 138412546;
      uint64_t v39 = v20;
      id v40 = 2112;
      uint64_t v41 = v21;
      unsigned int v22 = v20;
      uint64_t v23 = (void *)_os_log_send_and_compose_impl( v18,  0LL,  0LL,  0LL,  &_mh_execute_header,  v19,  1LL,  "%@: Back with icon data for: %@",  &v38,  22);

      if (!v23)
      {
LABEL_31:

        uint64_t v11 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[ApplicationWorkspace defaultWorkspace]( &OBJC_CLASS___ApplicationWorkspace,  "defaultWorkspace"));
        unsigned int v24 = dispatch_semaphore_create(0LL);
        uint64_t v25 = -[DownloadHandle downloadID](self->_applicationHandle, "downloadID");
        v35[0] = _NSConcreteStackBlock;
        v35[1] = 3221225472LL;
        v35[2] = sub_10014F3DC;
        v35[3] = &unk_10034AC30;
        uint64_t v26 = v24;
        int v36 = v26;
        -[os_log_s waitForInstallOfDownloadIdentifier:completionBlock:]( v11,  "waitForInstallOfDownloadIdentifier:completionBlock:",  v25,  v35);
        uint64_t v27 = dispatch_time(0LL, 60000000000LL);
        dispatch_semaphore_wait(v26, v27);
        if ((-[LoadSoftwareThumbnailOperation isCancelled](self, "isCancelled") & 1) == 0) {
          -[os_log_s setIconData:forApplicationHandle:]( v11,  "setIconData:forApplicationHandle:",  v8,  self->_applicationHandle);
        }
        -[LoadSoftwareThumbnailOperation setSuccess:](self, "setSuccess:", 1LL, v34);

        goto LABEL_34;
      }

      __int16 v19 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v23,  4LL));
      free(v23);
      uint64_t v34 = v19;
      SSFileLog(v16, @"%@");
    }

    goto LABEL_31;
  }

  id v5 = (id)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v5) {
    id v5 = (id)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  __int128 v28 = [v5 shouldLog];
  else {
    LODWORD(v29) = v28;
  }
  unsigned int v8 = (void *)objc_claimAutoreleasedReturnValue([v5 OSLogObject]);
  if (os_log_type_enabled((os_log_t)v8, OS_LOG_TYPE_DEFAULT)) {
    unsigned int v29 = v29;
  }
  else {
    v29 &= 2u;
  }
  if (!(_DWORD)v29) {
    goto LABEL_46;
  }
  uint64_t v30 = (void *)objc_opt_class(self);
  int v31 = self->_applicationHandle;
  id v38 = 138412546;
  uint64_t v39 = v30;
  id v40 = 2112;
  uint64_t v41 = v31;
  uint64_t v32 = v30;
  __int16 v33 = (void *)_os_log_send_and_compose_impl( v29,  0LL,  0LL,  0LL,  &_mh_execute_header,  v8,  0LL,  "%@: Missing URL for software download: %@",  &v38,  22);

  if (v33)
  {
    unsigned int v8 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v33,  4LL));
    free(v33);
    SSFileLog(v5, @"%@");
    goto LABEL_46;
  }

    id v20 = 0LL;
    __int16 v19 = 1;
    goto LABEL_35;
  }

  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v11) {
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  uint64_t v12 = [v11 shouldLog];
  else {
    LODWORD(v13) = v12;
  }
  uint64_t v14 = (os_log_s *)objc_claimAutoreleasedReturnValue([v11 OSLogObject]);
  if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO)) {
    CFRange v13 = v13;
  }
  else {
    v13 &= 2u;
  }
  if (!(_DWORD)v13) {
    goto LABEL_14;
  }
  uint64_t v15 = (void *)objc_opt_class(self);
  uint64_t v16 = v15;
  uint64_t v34 = 138412546;
  __int16 v35 = v15;
  int v36 = 2048;
  id v37 = [v5 databaseID];
  id v17 = (void *)_os_log_send_and_compose_impl( v13,  0LL,  0LL,  0LL,  &_mh_execute_header,  v14,  1LL,  "%@: Checking out rental keys for download: %lld",  &v34,  22);

  if (v17)
  {
    uint64_t v14 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v17,  4LL));
    free(v17);
    SSFileLog(v11, @"%@");
LABEL_14:
  }

  uint64_t v18 = -[CheckoutRentalKeysOperation initWithStoreDownloadSinfs:]( objc_alloc(&OBJC_CLASS___CheckoutRentalKeysOperation),  "initWithStoreDownloadSinfs:",  v8);
  -[CheckoutRentalKeysOperation setCheckoutType:](v18, "setCheckoutType:", 1LL);
  __int16 v33 = 0LL;
  __int16 v19 = -[DownloadDRMOperation runSubOperation:returningError:]( self,  "runSubOperation:returningError:",  v18,  &v33);
  id v20 = v33;
LABEL_16:

  if (a3 && (v19 & 1) == 0)
  {
    id v20 = v20;
    __int16 v19 = 0;
    *a3 = v20;
  }

  return v9;
}

uint64_t sub_1000894FC(uint64_t a1)
{
  *(void *)(*(void *)(a1 + 32) + 152LL) = SSXPCDictionaryCopyCFObject(*(void *)(a1 + 40), "0");
  *(void *)(*(void *)(a1 + 32) + 160LL) = SSXPCDictionaryCopyCFObject(*(void *)(a1 + 40), "3");

  uint64_t result = SSXPCDictionaryCopyCFObject(*(void *)(a1 + 40), "2");
  *(void *)(*(void *)(a1 + 32) + 168LL) = result;
  uint64_t v3 = *(void *)(a1 + 32);
  if (*(void *)(v3 + 24) || *(_BYTE *)(v3 + 144))
  {
    uint64_t result = xpc_dictionary_get_BOOL(*(xpc_object_t *)(a1 + 40), "1");
    *(_BYTE *)(*(void *)(a1 + 32) + 176LL) = result;
  }

  else
  {
    *(_BYTE *)(v3 + 176) = 1;
  }

  return result;
}

void *sub_10008965C(void *result)
{
  id v1 = *(void **)(result[4] + 136LL);
  if (v1 != (void *)result[5])
  {
    uint64_t v2 = result;

    uint64_t result = [(id)v2[4] _copyFilteredKindsForKinds:v2[5]];
    *(void *)(v2[4] + 136LL) = result;
  }

  return result;
}

void *sub_100089708(void *result)
{
  id v1 = *(void **)(result[4] + 152LL);
  if (v1 != (void *)result[5])
  {
    uint64_t v2 = result;

    uint64_t result = [(id)v2[5] copy];
    *(void *)(v2[4] + 152LL) = result;
  }

  return result;
}

void *sub_1000897B4(void *result)
{
  id v1 = *(void **)(result[4] + 168LL);
  if (v1 != (void *)result[5])
  {
    uint64_t v2 = result;

    uint64_t result = [(id)v2[5] copy];
    *(void *)(v2[4] + 168LL) = result;
  }

  return result;
}

void *sub_100089860(void *result)
{
  id v1 = *(void **)(result[4] + 160LL);
  if (v1 != (void *)result[5])
  {
    uint64_t v2 = result;

    uint64_t result = [(id)v2[5] copy];
    *(void *)(v2[4] + 160LL) = result;
  }

  return result;
}

uint64_t sub_100089910(uint64_t result)
{
  *(_BYTE *)(*(void *)(result + 32) + 176LL) = *(_BYTE *)(result + 40);
  return result;
}

uint64_t sub_1000899C4(uint64_t result)
{
  *(_BYTE *)(*(void *)(*(void *)(result + 40) + 8LL) + 24LL) = *(_BYTE *)(*(void *)(result + 32) + 176LL);
  return result;
}

id sub_100089A80(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) _supportsDownloadKind:*(void *)(a1 + 40)];
  *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = (_BYTE)result;
  return result;
}

void sub_10008A5EC(uint64_t a1)
{
  id v1 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) object]);
  [v1 _retryCanceledRestoreDownloads];
}

void sub_10008A61C(uint64_t a1)
{
  id v1 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) object]);
  [v1 _retrySoftFailedRestoreDownloads];
}

void sub_10008A64C(uint64_t a1, uint64_t a2)
{
  id v3 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
  [v3 postNotificationName:@"StoreAutomaticDownloadConstraintsChangedNotification" object:a2];
}

void sub_10008A6A8(uint64_t a1, void *a2)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v3) {
    id v3 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v4 = [v3 shouldLog];
  else {
    LODWORD(v5) = v4;
  }
  unsigned int v6 = (os_log_s *)objc_claimAutoreleasedReturnValue([v3 OSLogObject]);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO)) {
    uint64_t v5 = v5;
  }
  else {
    v5 &= 2u;
  }
  if (!(_DWORD)v5) {
    goto LABEL_12;
  }
  int v12 = 138412290;
  id v13 = (id)objc_opt_class(a2);
  id v7 = v13;
  unsigned int v8 = (void *)_os_log_send_and_compose_impl( v5,  0LL,  0LL,  0LL,  &_mh_execute_header,  v6,  1LL,  "%@: Checking download queues for trigger-downloads",  &v12,  12);

  if (v8)
  {
    unsigned int v6 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v8,  4LL));
    free(v8);
    SSFileLog(v3, @"%@");
LABEL_12:
  }

  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(+[SSAccountStore defaultStore](&OBJC_CLASS___SSAccountStore, "defaultStore"));
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v9 activeAccount]);
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v10 uniqueIdentifier]);

  [a2 checkQueuesWithReason:@"trigger-download" accountID:v11];
}

void sub_10008A9E4(id a1)
{
  id v1 = objc_alloc_init(&OBJC_CLASS___StoreDownloadQueue);
  uint64_t v2 = (void *)qword_1003A32E0;
  qword_1003A32E0 = (uint64_t)v1;
}

void sub_10008AB40( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_10008AB58(uint64_t a1, void *a2)
{
  id v3 = a2;
  unsigned int v4 = (void *)objc_claimAutoreleasedReturnValue( +[SSSQLiteComparisonPredicate predicateWithProperty:equalToLongLong:]( &OBJC_CLASS___SSSQLiteComparisonPredicate,  "predicateWithProperty:equalToLongLong:",  @"is_automatic",  1LL));
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( +[SSSQLiteComparisonPredicate predicateWithProperty:equalToLongLong:]( &OBJC_CLASS___SSSQLiteComparisonPredicate,  "predicateWithProperty:equalToLongLong:",  @"is_redownload",  1LL));
  unsigned int v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:](&OBJC_CLASS___NSArray, "arrayWithObjects:", v4, v5, 0LL));
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[SSSQLiteCompoundPredicate predicateMatchingAnyPredicates:]( &OBJC_CLASS___SSSQLiteCompoundPredicate,  "predicateMatchingAnyPredicates:",  v6));

  unsigned int v8 = (void *)objc_claimAutoreleasedReturnValue([v3 database]);
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue( +[DownloadEntity queryWithDatabase:predicate:]( &OBJC_CLASS___DownloadEntity,  "queryWithDatabase:predicate:",  v8,  v7));

  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472LL;
  v14[2] = sub_10008ACC4;
  v14[3] = &unk_10034CD78;
  uint64_t v10 = *(void *)(a1 + 32);
  id v15 = v3;
  uint64_t v16 = v10;
  id v11 = v3;
  [v9 enumeratePersistentIDsUsingBlock:v14];
  uint64_t v12 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL);

  return v12;
}

id sub_10008ACC4(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  id result = [*(id *)(a1 + 32) finishDownloadWithID:a2 finalPhase:SSDownloadPhaseCanceled];
  *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = (_BYTE)result;
  *a4 = *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL);
  return result;
}

void sub_10008AD70(uint64_t a1)
{
  if (!*(void *)(*(void *)(a1 + 32) + 40LL))
  {
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[SSAccountStore defaultStore](&OBJC_CLASS___SSAccountStore, "defaultStore"));
    id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 activeAccount]);
    unsigned int v4 = (void *)objc_claimAutoreleasedReturnValue([v3 uniqueIdentifier]);

    if (v4)
    {
      uint64_t v5 = *(_BYTE **)(a1 + 32);
      if (v5[16])
      {
        unsigned int v6 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
        if (!v6) {
          unsigned int v6 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
        }
        unsigned int v7 = [v6 shouldLog];
        else {
          LODWORD(v_Block_object_dispose(va, 8) = v7;
        }
        uint64_t v9 = (os_log_s *)objc_claimAutoreleasedReturnValue([v6 OSLogObject]);
        if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT)) {
          uint64_t v8 = v8;
        }
        else {
          v8 &= 2u;
        }
        if ((_DWORD)v8)
        {
          uint64_t v10 = (void *)objc_opt_class(*(void *)(a1 + 32));
          int v41 = 138412290;
          id v42 = v10;
          id v11 = v10;
          uint64_t v12 = (void *)_os_log_send_and_compose_impl( v8,  0LL,  0LL,  0LL,  &_mh_execute_header,  v9,  0LL,  "[%@]: Ignoring automatic download queue check: disabled",  &v41,  12);

          if (!v12)
          {
LABEL_16:

            *(_BYTE *)(*(void *)(a1 + 32) + 17LL) = 1;
LABEL_30:

            return;
          }

          uint64_t v9 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v12,  4LL));
          free(v12);
          SSFileLog(v6, @"%@");
        }

        goto LABEL_16;
      }

      id v20 = (void *)objc_claimAutoreleasedReturnValue([v5 automaticDownloadKinds]);
      id v21 = [v20 count];

      if (v21)
      {
        unsigned int v22 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) automaticDownloadKinds]);
        id v23 = [v22 count];

        if (!v23) {
          goto LABEL_30;
        }
        unsigned int v24 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) enabledDownloadKinds]);
        id v25 = [v24 count];

        if (v25) {
          [*(id *)(a1 + 32) _checkAutomaticDownloadQueue:v4];
        }
        uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) automaticDownloadKinds]);
        unsigned int v27 = [v26 containsObject:SSDownloadKindSoftwareApplication];

        if (v27) {
          +[AppStoreUtility checkDownloadQueue](&OBJC_CLASS___AppStoreUtility, "checkDownloadQueue");
        }
        __int128 v28 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) automaticDownloadKinds]);
        if ([v28 containsObject:SSDownloadKindEBook])
        {
        }

        else
        {
          id v37 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) automaticDownloadKinds]);
          unsigned int v38 = [v37 containsObject:SSDownloadKindAudiobook];

          if (!v38) {
            goto LABEL_30;
          }
        }

        +[BookAssetDaemonUtility checkAutomaticDownloads]( &OBJC_CLASS___BookAssetDaemonUtility,  "checkAutomaticDownloads");
        goto LABEL_30;
      }

      unsigned int v29 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
      if (!v29) {
        unsigned int v29 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      unsigned int v30 = [v29 shouldLog];
      else {
        LODWORD(v31) = v30;
      }
      uint64_t v32 = (os_log_s *)objc_claimAutoreleasedReturnValue([v29 OSLogObject]);
      if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT)) {
        uint64_t v31 = v31;
      }
      else {
        v31 &= 2u;
      }
      if ((_DWORD)v31)
      {
        __int16 v33 = (void *)objc_opt_class(*(void *)(a1 + 32));
        int v41 = 138412290;
        id v42 = v33;
        id v34 = v33;
        __int16 v35 = (void *)_os_log_send_and_compose_impl( v31,  0LL,  0LL,  0LL,  &_mh_execute_header,  v32,  0LL,  "[%@]: No enabled automatic download kinds - syncing with the server",  &v41,  12);

        if (!v35)
        {
LABEL_53:

          int v36 = *(void **)(a1 + 32);
          v39[0] = _NSConcreteStackBlock;
          v39[1] = 3221225472LL;
          v39[2] = sub_10008B300;
          v39[3] = &unk_10034AD58;
          v39[4] = v36;
          id v40 = v4;
          [v36 _synchronizeAutomaticDownloadKinds:v39];

          goto LABEL_30;
        }

        uint64_t v32 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v35,  4LL));
        free(v35);
        SSFileLog(v29, @"%@");
      }

      goto LABEL_53;
    }

    id v13 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v13) {
      id v13 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v14 = [v13 shouldLog];
    else {
      LODWORD(v15) = v14;
    }
    uint64_t v16 = (os_log_s *)objc_claimAutoreleasedReturnValue([v13 OSLogObject]);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v15 = v15;
    }
    else {
      v15 &= 2u;
    }
    if ((_DWORD)v15)
    {
      id v17 = (void *)objc_opt_class(*(void *)(a1 + 32));
      int v41 = 138412290;
      id v42 = v17;
      id v18 = v17;
      __int16 v19 = (void *)_os_log_send_and_compose_impl( v15,  0LL,  0LL,  0LL,  &_mh_execute_header,  v16,  0LL,  "[%@]: Ignoring automatic download queue check: no account",  &v41,  12);

      if (!v19)
      {
LABEL_29:

        goto LABEL_30;
      }

      uint64_t v16 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v19,  4LL));
      free(v19);
      SSFileLog(v13, @"%@");
    }

    goto LABEL_29;
  }

void sub_10008B300(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v2) {
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v3 = [v2 shouldLog];
  else {
    unsigned int v4 = v3;
  }
  uint64_t v5 = (os_log_s *)objc_claimAutoreleasedReturnValue([v2 OSLogObject]);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 & 2;
  }
  if (!(_DWORD)v6) {
    goto LABEL_12;
  }
  unsigned int v7 = (void *)objc_opt_class(*(void *)(a1 + 32));
  uint64_t v8 = *(void **)(a1 + 32);
  id v9 = v7;
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v8 automaticDownloadKinds]);
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 allObjects]);
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "componentsJoinedByString:", @", "));
  int v19 = 138412546;
  id v20 = v7;
  __int16 v21 = 2112;
  unsigned int v22 = v12;
  id v13 = (void *)_os_log_send_and_compose_impl( v6,  0LL,  0LL,  0LL,  &_mh_execute_header,  v5,  0LL,  "[%@]: Synchronize automatic kinds back with:  [%@]",  &v19,  22);

  if (v13)
  {
    uint64_t v5 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v13,  4LL));
    free(v13);
    SSFileLog(v2, @"%@");
LABEL_12:
  }

  uint64_t v14 = *(void *)(a1 + 32);
  uint64_t v15 = *(void **)(a1 + 40);
  uint64_t v16 = *(dispatch_queue_s **)(v14 + 24);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_10008B530;
  block[3] = &unk_10034AD58;
  void block[4] = v14;
  id v18 = v15;
  dispatch_async(v16, block);
}

void sub_10008B530(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) automaticDownloadKinds]);
  id v3 = [v2 count];

  if (v3)
  {
    unsigned int v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) enabledDownloadKinds]);
    id v5 = [v4 count];

    if (v5) {
      [*(id *)(a1 + 32) _checkAutomaticDownloadQueue:*(void *)(a1 + 40)];
    }
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) automaticDownloadKinds]);
    unsigned int v7 = [v6 containsObject:SSDownloadKindSoftwareApplication];

    if (v7) {
      +[AppStoreUtility checkDownloadQueue](&OBJC_CLASS___AppStoreUtility, "checkDownloadQueue");
    }
    if (_os_feature_enabled_impl("Books", "bl_use_ams"))
    {
      uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) automaticDownloadKinds]);
      if ([v8 containsObject:SSDownloadKindEBook])
      {
      }

      else
      {
        id v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) automaticDownloadKinds]);
        unsigned int v10 = [v9 containsObject:SSDownloadKindAudiobook];

        if (!v10) {
          return;
        }
      }

      +[BookAssetDaemonUtility checkAutomaticDownloads](&OBJC_CLASS___BookAssetDaemonUtility, "checkAutomaticDownloads");
    }
  }

void sub_10008B7D8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
}

uint64_t sub_10008B7F0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_10008B800(uint64_t a1)
{
}

void sub_10008B808(uint64_t a1, uint64_t a2)
{
  id v3 = [*(id *)(a1 + 32) _newQueueRequestsWithReason:*(void *)(a1 + 40) accountID:*(void *)(a1 + 48) session:a2];
  uint64_t v4 = *(void *)(*(void *)(a1 + 56) + 8LL);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;
}

id sub_10008B844(uint64_t a1)
{
  return [*(id *)(a1 + 32) _addOperationsForRequests:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) reason:*(void *)(a1 + 40)];
}

void sub_10008B8D8(uint64_t a1)
{
  uint64_t v4 = -[NSMutableSet initWithObjects:]( objc_alloc(&OBJC_CLASS___NSMutableSet),  "initWithObjects:",  *(void *)(a1 + 32),  0LL);
  uint64_t v2 = *(void **)(a1 + 40);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) reason]);
  [v2 _addOperationsForRequests:v4 reason:v3];
}

void sub_10008BEEC(uint64_t a1)
{
  __int128 v10 = 0u;
  __int128 v11 = 0u;
  __int128 v12 = 0u;
  __int128 v13 = 0u;
  id v2 = *(id *)(*(void *)(a1 + 32) + 64LL);
  id v3 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v11;
    do
    {
      uint64_t v6 = 0LL;
      do
      {
        if (*(void *)v11 != v5) {
          objc_enumerationMutation(v2);
        }
        unsigned int v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*((void *)&v10 + 1) + 8 * (void)v6), "queueIdentifier", (void)v10));
        id v8 = sub_100092684((uint64_t)v7);
        id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);

        if (v9) {
          [*(id *)(a1 + 40) addObjectsFromArray:v9];
        }

        uint64_t v6 = (char *)v6 + 1;
      }

      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }

    while (v4);
  }
}

void sub_10008C08C(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v2) {
    id v2 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v3 = [v2 shouldLog];
  else {
    LODWORD(v4) = v3;
  }
  uint64_t v5 = (os_log_s *)objc_claimAutoreleasedReturnValue([v2 OSLogObject]);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO)) {
    uint64_t v4 = v4;
  }
  else {
    v4 &= 2u;
  }
  if (!(_DWORD)v4) {
    goto LABEL_12;
  }
  uint64_t v6 = (void *)objc_opt_class(*(void *)(a1 + 32));
  uint64_t v7 = *(void *)(a1 + 40);
  int v10 = 138412546;
  __int128 v11 = v6;
  __int16 v12 = 2112;
  uint64_t v13 = v7;
  id v8 = v6;
  id v9 = (void *)_os_log_send_and_compose_impl( v4,  0LL,  0LL,  0LL,  &_mh_execute_header,  v5,  1LL,  "%@: disabling automatic download for reason: %@",  &v10,  22);

  if (v9)
  {
    uint64_t v5 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v9,  4LL));
    free(v9);
    SSFileLog(v2, @"%@");
LABEL_12:
  }

  *(_BYTE *)(*(void *)(a1 + 32) + 16LL) = 1;
}

void sub_10008C2A0(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v2) {
    id v2 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v3 = [v2 shouldLog];
  else {
    LODWORD(v4) = v3;
  }
  uint64_t v5 = (os_log_s *)objc_claimAutoreleasedReturnValue([v2 OSLogObject]);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO)) {
    uint64_t v4 = v4;
  }
  else {
    v4 &= 2u;
  }
  if ((_DWORD)v4)
  {
    uint64_t v6 = (void *)objc_opt_class(*(void *)(a1 + 32));
    uint64_t v7 = *(void *)(a1 + 40);
    int v11 = 138412546;
    __int16 v12 = v6;
    __int16 v13 = 2112;
    uint64_t v14 = v7;
    id v8 = v6;
    id v9 = (void *)_os_log_send_and_compose_impl( v4,  0LL,  0LL,  0LL,  &_mh_execute_header,  v5,  1LL,  "%@: enabling automatic download for reason: %@",  &v11,  22);

    if (!v9) {
      goto LABEL_13;
    }
    uint64_t v5 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v9,  4LL));
    free(v9);
    SSFileLog(v2, @"%@");
  }

LABEL_13:
  *(_BYTE *)(*(void *)(a1 + 32) + 16LL) = 0;
  uint64_t v10 = *(void *)(a1 + 32);
  if (*(_BYTE *)(v10 + 17))
  {
    *(_BYTE *)(v10 + 17) = 0;
    [*(id *)(a1 + 32) checkAutomaticDownloadQueue];
  }

void sub_10008C69C(uint64_t a1, void *a2)
{
  unsigned int v3 = *(void **)(a1 + 32);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([a2 database]);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v3 _restorableDownloadsQueryInDatabase:v4]);

  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  v6[2] = sub_10008C744;
  v6[3] = &unk_10034B548;
  id v7 = *(id *)(a1 + 40);
  [v5 enumeratePersistentIDsUsingBlock:v6];
}

void sub_10008C744(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = -[NSNumber initWithLongLong:](objc_alloc(&OBJC_CLASS___NSNumber), "initWithLongLong:", a2);
  [*(id *)(a1 + 32) addObject:v3];
}

void sub_10008C83C(uint64_t a1)
{
  id v2 = objc_opt_new(&OBJC_CLASS___NSMutableOrderedSet);
  if (SSDebugShouldUseAppstored(v2, v3))
  {
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[DownloadsDatabase downloadsDatabase](&OBJC_CLASS___DownloadsDatabase, "downloadsDatabase"));
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472LL;
    v12[2] = sub_10008C9C8;
    v12[3] = &unk_10034CE40;
    id v5 = *(id *)(a1 + 32);
    uint64_t v6 = *(void *)(a1 + 40);
    id v13 = v5;
    uint64_t v14 = v6;
    uint64_t v15 = v2;
    [v4 readUsingTransactionBlock:v12];
  }

  id v7 = [*(id *)(a1 + 32) mutableCopy];
  [v7 minusOrderedSet:*(void *)(*(void *)(a1 + 40) + 8)];
  [*(id *)(*(void *)(a1 + 40) + 8) unionOrderedSet:v7];
  if ([v7 count])
  {
    id v9 = -[RestoreDownloadsOperation initWithDownloadIdentifiers:restoreReason:]( objc_alloc(&OBJC_CLASS___RestoreDownloadsOperation),  "initWithDownloadIdentifiers:restoreReason:",  v7,  *(void *)(a1 + 48));
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472LL;
    v10[2] = sub_10008CCBC;
    v10[3] = &unk_10034AD58;
    v10[4] = *(void *)(a1 + 40);
    id v11 = v7;
    -[RestoreDownloadsOperation setCompletionBlock:](v9, "setCompletionBlock:", v10);
    [*(id *)(*(void *)(a1 + 40) + 56) addOperation:v9];
  }
}

void sub_10008C9C8(uint64_t a1, void *a2)
{
  id v3 = a2;
  __int128 v27 = 0u;
  __int128 v28 = 0u;
  __int128 v29 = 0u;
  __int128 v30 = 0u;
  uint64_t v25 = a1;
  id obj = *(id *)(a1 + 32);
  id v26 = [obj countByEnumeratingWithState:&v27 objects:v35 count:16];
  if (v26)
  {
    uint64_t v4 = *(void *)v28;
    do
    {
      for (uint64_t i = 0LL; i != v26; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v28 != v4) {
          objc_enumerationMutation(obj);
        }
        uint64_t v6 = *(void **)(*((void *)&v27 + 1) + 8LL * (void)i);
        id v7 = objc_alloc(&OBJC_CLASS___DownloadEntity);
        id v8 = [v6 longLongValue];
        id v9 = (void *)objc_claimAutoreleasedReturnValue([v3 database]);
        uint64_t v10 = -[DownloadEntity initWithPersistentID:inDatabase:](v7, "initWithPersistentID:inDatabase:", v8, v9);

        id v11 = (void *)objc_claimAutoreleasedReturnValue(-[DownloadEntity valueForProperty:](v10, "valueForProperty:", @"kind"));
        if (SSDownloadKindIsSoftwareKind(v11))
        {
          uint64_t v12 = v4;
          id v13 = v3;
          uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
          if (!v14) {
            uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
          }
          unsigned int v15 = objc_msgSend(v14, "shouldLog", v22);
          else {
            unsigned int v16 = v15;
          }
          id v17 = (os_log_s *)objc_claimAutoreleasedReturnValue([v14 OSLogObject]);
          if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO)) {
            uint64_t v18 = v16;
          }
          else {
            uint64_t v18 = v16 & 2;
          }
          if ((_DWORD)v18)
          {
            int v19 = (void *)objc_opt_class(*(void *)(v25 + 40));
            int v31 = 138412546;
            uint64_t v32 = v19;
            __int16 v33 = 2112;
            id v34 = v6;
            id v20 = v19;
            LODWORD(v23) = 22;
            __int16 v21 = (void *)_os_log_send_and_compose_impl( v18,  0LL,  0LL,  0LL,  &_mh_execute_header,  v17,  1LL,  "%@: Skipping software download restore for downloadID: %@ since appstored will pick it up",  &v31,  v23);

            id v3 = v13;
            uint64_t v4 = v12;
            if (v21)
            {
              id v17 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v21,  4LL));
              free(v21);
              unsigned int v22 = v17;
              SSFileLog(v14, @"%@");
              goto LABEL_19;
            }
          }

          else
          {
            id v3 = v13;
            uint64_t v4 = v12;
LABEL_19:
          }

          [*(id *)(v25 + 48) addObject:v6];
        }
      }

      id v26 = [obj countByEnumeratingWithState:&v27 objects:v35 count:16];
    }

    while (v26);
  }
}

void sub_10008CCBC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = *(void **)(a1 + 40);
  id v3 = *(dispatch_queue_s **)(v1 + 24);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_10008CD30;
  v4[3] = &unk_10034AD58;
  v4[4] = v1;
  id v5 = v2;
  dispatch_async(v3, v4);
}

id sub_10008CD30(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 8) minusOrderedSet:*(void *)(a1 + 40)];
}

id sub_10008CEB4(uint64_t a1)
{
  return [*(id *)(a1 + 32) cancelAllRedownloads];
}

void sub_10008CF90(uint64_t a1)
{
  xpc_object_t message = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 32));
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) automaticDownloadKinds]);
  SSXPCDictionarySetCFObject(message, "0", [v2 allObjects]);

  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 48), message);
}

void sub_10008D1BC(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[DownloadsDatabase downloadsDatabase](&OBJC_CLASS___DownloadsDatabase, "downloadsDatabase"));
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_10008D260;
  v4[3] = &unk_10034CE68;
  id v5 = *(id *)(a1 + 32);
  id v6 = *(id *)(a1 + 40);
  id v3 = [v2 modifyUsingTransactionBlock:v4];
}

uint64_t sub_10008D260(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v4) {
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v5 = [v4 shouldLog];
  else {
    LODWORD(v6) = v5;
  }
  id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue([v4 OSLogObject]);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO)) {
    uint64_t v6 = v6;
  }
  else {
    v6 &= 2u;
  }
  if ((_DWORD)v6)
  {
    id v8 = (void *)objc_opt_class(*(void *)(a1 + 32));
    int v13 = 138412290;
    uint64_t v14 = v8;
    id v9 = v8;
    uint64_t v10 = (void *)_os_log_send_and_compose_impl( v6,  0LL,  0LL,  0LL,  &_mh_execute_header,  v7,  1LL,  "%@: Checking download queues at client request",  &v13,  12);

    if (!v10) {
      goto LABEL_13;
    }
    id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v10,  4LL));
    free(v10);
    SSFileLog(v4, @"%@");
  }

LABEL_13:
  id v11 = [*(id *)(a1 + 32) _newQueueRequestsWithReason:@"other" accountID:*(void *)(a1 + 40) session:v3];

  if (v11) {
    [*(id *)(a1 + 32) _addOperationsForRequests:v11 reason:@"other"];
  }

  return 1LL;
}

void sub_10008D4F8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = objc_opt_class(&OBJC_CLASS___NSString);
  uint64_t v4 = (void *)SSXPCDictionaryCopyCFObjectWithClass(v2, "2", v3);
  if (![v4 isEqualToString:@"all"])
  {
    id v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) automaticDownloadKinds]);
    id v8 = [v7 mutableCopy];

    uint64_t v9 = *(void *)(a1 + 32);
    uint64_t v10 = objc_opt_class(&OBJC_CLASS___NSArray);
    id v11 = (void *)SSXPCDictionaryCopyCFObjectWithClass(v9, "1", v10);
    if (!v4 || [v4 isEqualToString:@"set"])
    {
      [v8 removeAllObjects];
      if (!v11) {
        goto LABEL_8;
      }
      goto LABEL_7;
    }

    if (v11)
    {
      if ([v4 isEqualToString:@"union"])
      {
LABEL_7:
        [v8 addObjectsFromArray:v11];
        goto LABEL_8;
      }

      if ([v4 isEqualToString:@"minus"])
      {
        uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](&OBJC_CLASS___NSSet, "setWithArray:", v11));
        [v8 minusSet:v18];
      }
    }

void sub_10008D7C0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_10008D7E0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  unsigned __int8 v2 = [WeakRetained success];
  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 32));
  xpc_dictionary_set_BOOL(reply, "0", v2);
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 40), reply);
}

void sub_10008DD18(uint64_t a1)
{
  unsigned __int8 v2 = (void *)objc_claimAutoreleasedReturnValue(+[SSAccountStore defaultStore](&OBJC_CLASS___SSAccountStore, "defaultStore"));
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([v2 activeAccount]);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 uniqueIdentifier]);

  if (v4 && ([v4 isEqual:*(void *)(*(void *)(a1 + 32) + 32)] & 1) == 0)
  {
    int v13 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v13) {
      int v13 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v14 = [v13 shouldLog];
    else {
      LODWORD(v15) = v14;
    }
    unsigned int v16 = (os_log_s *)objc_claimAutoreleasedReturnValue([v13 OSLogObject]);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v15 = v15;
    }
    else {
      v15 &= 2u;
    }
    if ((_DWORD)v15)
    {
      id v17 = (void *)objc_opt_class(*(void *)(a1 + 32));
      int v24 = 138412546;
      id v25 = v17;
      __int16 v26 = 2114;
      __int128 v27 = v4;
      id v18 = v17;
      int v19 = (void *)_os_log_send_and_compose_impl( v15,  0LL,  0LL,  0LL,  &_mh_execute_header,  v16,  0LL,  "%@: Checking store download queue for accountID: %{public}@ following account change",  &v24,  22);

      if (!v19)
      {
LABEL_28:

        objc_storeStrong((id *)(*(void *)(a1 + 32) + 32LL), v4);
        dispatch_queue_global_t global_queue = dispatch_get_global_queue(0LL, 0LL);
        __int16 v21 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472LL;
        block[2] = sub_10008E0A4;
        block[3] = &unk_10034AD58;
        void block[4] = *(void *)(a1 + 32);
        id v23 = v4;
        dispatch_async(v21, block);

        goto LABEL_29;
      }

      unsigned int v16 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v19,  4LL));
      free(v19);
      SSFileLog(v13, @"%@");
    }

    goto LABEL_28;
  }

  unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v5) {
    unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v6 = [v5 shouldLog];
  else {
    LODWORD(v7) = v6;
  }
  id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue([v5 OSLogObject]);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG)) {
    uint64_t v7 = v7;
  }
  else {
    v7 &= 2u;
  }
  if (!(_DWORD)v7) {
    goto LABEL_14;
  }
  uint64_t v9 = (void *)objc_opt_class(*(void *)(a1 + 32));
  uint64_t v10 = *(void *)(*(void *)(a1 + 32) + 32LL);
  int v24 = 138412802;
  id v25 = v9;
  __int16 v26 = 2114;
  __int128 v27 = v4;
  __int16 v28 = 2114;
  uint64_t v29 = v10;
  id v11 = v9;
  uint64_t v12 = (void *)_os_log_send_and_compose_impl( v7,  0LL,  0LL,  0LL,  &_mh_execute_header,  v8,  2LL,  "%@: Skipping store download queue for accountID: %{public}@ last check accountID: %{public}@",  &v24,  32);

  if (v12)
  {
    id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v12,  4LL));
    free(v12);
    SSFileLog(v5, @"%@");
LABEL_14:
  }

LABEL_29:
}

id sub_10008E0A4(uint64_t a1)
{
  return [*(id *)(a1 + 32) checkQueuesWithReason:@"account-change" accountID:*(void *)(a1 + 40)];
}

uint64_t sub_10008E170(uint64_t a1)
{
  return 1LL;
}

LABEL_49:
}
}

  uint64_t v10 = 0LL;
  if (v9)
  {
LABEL_22:
    [v3 addObject:v9];
    [v8 addObject:@"Restore Data"];
  }

        uint64_t v48 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
        if (!v48) {
          uint64_t v48 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
        }
        LODWORD(v49) = [v48 shouldLog];
        __int128 v50 = [v48 shouldLogToDisk];
        __int128 v51 = (os_log_s *)objc_claimAutoreleasedReturnValue([v48 OSLogObject]);
        __int128 v52 = v51;
        if (v50) {
          LODWORD(v49) = v49 | 2;
        }
        if (os_log_type_enabled(v51, OS_LOG_TYPE_DEFAULT)) {
          __int16 v49 = v49;
        }
        else {
          v49 &= 2u;
        }
        if ((_DWORD)v49)
        {
          id v53 = (void *)objc_opt_class(self);
          unsigned int v75 = 138412290;
          __int128 v76 = v53;
          int v54 = v53;
          uint64_t v55 = (void *)_os_log_send_and_compose_impl( v49,  0LL,  0LL,  0LL,  &_mh_execute_header,  v52,  0LL,  "%@: No URL to create social post",  &v75,  12);

          if (!v55)
          {
LABEL_60:

            __int16 v56 = SSError(SSErrorDomain, 124LL, 0LL, 0LL);
            __int16 v28 = (NSURL *)objc_claimAutoreleasedReturnValue(v56);
            __int128 v27 = 0;
            goto LABEL_61;
          }

          __int128 v52 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v55,  4LL));
          free(v55);
          unsigned int v59 = v52;
          SSFileLog(v48, @"%@");
        }

        goto LABEL_60;
      }
    }

    goto LABEL_49;
  }

  unsigned int v6 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v6) {
    unsigned int v6 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  LODWORD(v42) = [v6 shouldLog];
  int v43 = [v6 shouldLogToDisk];
  __int128 v44 = (os_log_s *)objc_claimAutoreleasedReturnValue([v6 OSLogObject]);
  uint64_t v7 = v44;
  if (v43) {
    LODWORD(v42) = v42 | 2;
  }
  if (os_log_type_enabled(v44, OS_LOG_TYPE_DEFAULT)) {
    id v42 = v42;
  }
  else {
    v42 &= 2u;
  }
  if (!(_DWORD)v42)
  {
LABEL_46:
    __int128 v27 = 0;
LABEL_62:

    goto LABEL_63;
  }

  __int16 v45 = (void *)objc_opt_class(self);
  unsigned int v75 = 138412546;
  __int128 v76 = v45;
  __int128 v77 = 2112;
  __int128 v78 = v5;
  __int128 v46 = v45;
  __int16 v47 = (void *)_os_log_send_and_compose_impl( v42,  0LL,  0LL,  0LL,  &_mh_execute_header,  v7,  0LL,  "%@: Could not encode message: %@",  &v75,  22);

  if (v47)
  {
    uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v47,  4LL));
    free(v47);
    unsigned int v59 = v7;
    SSFileLog(v6, @"%@");
    goto LABEL_46;
  }

  __int128 v27 = 0;
LABEL_63:

  -[MediaSocialPostOperation setError:](self, "setError:", v5, v59);
  -[MediaSocialPostOperation setSuccess:](self, "setSuccess:", v27 != 0);
  -[MediaSocialPostResponse setError:](v71, "setError:", v5);
  __int128 v57 = objc_claimAutoreleasedReturnValue(-[MediaSocialPostOperation resultBlock](self, "resultBlock"));
  __int128 v58 = (void *)v57;
  if (v57)
  {
    (*(void (**)(uint64_t, MediaSocialPostResponse *))(v57 + 16))(v57, v71);
    -[MediaSocialPostOperation setResultBlock:](self, "setResultBlock:", 0LL);
  }
}

void sub_10008EAF4(uint64_t a1)
{
  id v1 = (id)objc_claimAutoreleasedReturnValue(+[Daemon daemon](&OBJC_CLASS___Daemon, "daemon"));
  [v1 releaseKeepAliveAssertion:@"com.apple.itunesstore.StoreDownloadQueue"];
}

void sub_10008ED84( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
}

void sub_10008EDAC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void **)(v2 + 40);
  *(void *)(v2 + 40) = 0LL;

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if ([WeakRetained success])
  {
    uint64_t v5 = *(void *)(a1 + 32);
    unsigned int v6 = *(dispatch_queue_s **)(v5 + 24);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_10008EE78;
    block[3] = &unk_10034BCE8;
    void block[4] = v5;
    id v8 = WeakRetained;
    id v9 = *(id *)(a1 + 40);
    dispatch_async(v6, block);
  }
}

void sub_10008EE78(id *a1)
{
  id v1 = a1;
  unsigned int v41 = [a1[4] _ignoreVideos];
  unsigned int v38 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  id v40 = objc_alloc_init(&OBJC_CLASS___NSMutableOrderedSet);
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([v1[4] enabledDownloadKinds]);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([v1[5] downloads]);
  __int128 v48 = 0u;
  __int128 v49 = 0u;
  __int128 v50 = 0u;
  __int128 v51 = 0u;
  id obj = v3;
  id v4 = [v3 countByEnumeratingWithState:&v48 objects:v56 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v49;
    uint64_t v39 = v1;
    uint64_t v42 = *(void *)v49;
    do
    {
      for (uint64_t i = 0LL; i != v5; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v49 != v6) {
          objc_enumerationMutation(obj);
        }
        id v8 = *(void **)(*((void *)&v48 + 1) + 8LL * (void)i);
        if (objc_msgSend(v8, "isSoftwareKind", v36))
        {
          id v9 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
          if (!v9) {
            id v9 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
          }
          unsigned int v10 = [v9 shouldLog];
          else {
            unsigned int v11 = v10;
          }
          uint64_t v12 = (os_log_s *)objc_claimAutoreleasedReturnValue([v9 OSLogObject]);
          if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG)) {
            uint64_t v13 = v11;
          }
          else {
            uint64_t v13 = v11 & 2;
          }
          if (!(_DWORD)v13) {
            goto LABEL_18;
          }
          unsigned int v14 = (void *)objc_opt_class(v1[4]);
          id v15 = v14;
          unsigned int v16 = (void *)objc_claimAutoreleasedReturnValue([v8 bundleIdentifier]);
          int v52 = 138412546;
          id v53 = v14;
          __int16 v54 = 2112;
          uint64_t v55 = v16;
          LODWORD(v37) = 22;
          id v17 = (void *)_os_log_send_and_compose_impl( v13,  0LL,  0LL,  0LL,  &_mh_execute_header,  v12,  2LL,  "[%@]: Skipping software download: %@",  &v52,  v37);

          if (v17)
          {
            uint64_t v12 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v17,  4LL));
            free(v17);
            int v36 = v12;
            SSFileLog(v9, @"%@");
            uint64_t v6 = v42;
LABEL_18:

            goto LABEL_38;
          }

          goto LABEL_34;
        }

        id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 cancelDownloadURL]);
        if (v9
          && (id v18 = (void *)objc_claimAutoreleasedReturnValue([v8 kind]),
              unsigned int v19 = [v2 containsObject:v18],
              v18,
              !v19))
        {
          uint64_t v29 = v38;
          __int128 v30 = v9;
        }

        else
        {
          if (([v8 isVideosKind] & v41) == 1)
          {
            uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
            if (!v20) {
              uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
            }
            unsigned int v21 = [v20 shouldLog];
            unsigned int v22 = (os_log_s *)objc_claimAutoreleasedReturnValue([v20 OSLogObject]);
            if (os_log_type_enabled(v22, OS_LOG_TYPE_DEBUG)) {
              uint64_t v23 = v21;
            }
            else {
              uint64_t v23 = v21 & 2;
            }
            if ((_DWORD)v23)
            {
              int v24 = (void *)objc_opt_class(v1[4]);
              id v25 = v2;
              id v26 = v24;
              __int128 v27 = (void *)objc_claimAutoreleasedReturnValue([v8 title]);
              int v52 = 138412546;
              id v53 = v24;
              __int16 v54 = 2112;
              uint64_t v55 = v27;
              LODWORD(v37) = 22;
              __int16 v28 = (void *)_os_log_send_and_compose_impl( v23,  0LL,  0LL,  0LL,  &_mh_execute_header,  v22,  2LL,  "[%@]: Skipping video download: %@",  &v52,  v37);

              uint64_t v2 = v25;
              if (v28)
              {
                unsigned int v22 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v28,  4LL));
                free(v28);
                int v36 = v22;
                SSFileLog(v20, @"%@");
                goto LABEL_32;
              }
            }

            else
            {
LABEL_32:
            }

            id v1 = v39;
LABEL_34:
            uint64_t v6 = v42;
            goto LABEL_38;
          }

          uint64_t v29 = v40;
          __int128 v30 = v8;
        }

        [v29 addObject:v30];
LABEL_38:
      }

      id v5 = [obj countByEnumeratingWithState:&v48 objects:v56 count:16];
    }

    while (v5);
  }

  int v31 = (void *)objc_claimAutoreleasedReturnValue(+[DownloadsDatabase downloadsDatabase](&OBJC_CLASS___DownloadsDatabase, "downloadsDatabase", v36));
  v44[0] = _NSConcreteStackBlock;
  v44[1] = 3221225472LL;
  v44[2] = sub_10008F3BC;
  v44[3] = &unk_10034CEE0;
  v44[4] = v1[4];
  id v45 = v1[6];
  uint64_t v32 = v40;
  __int128 v46 = v32;
  __int16 v33 = v38;
  __int16 v47 = v33;
  id v34 = [v31 modifyUsingPurchaseTransactionBlock:v44];

  if (-[NSMutableArray count](v33, "count"))
  {
    __int16 v35 = objc_alloc_init(&OBJC_CLASS___FinishDownloadsOperation);
    [*((id *)v1[4] + 6) addOperation:v35];
  }
}

unint64_t sub_10008F3BC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 database]);
  id v5 = (void *)objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 32) _automaticDownloadsQueryWithDatabase:v4 accountID:*(void *)(a1 + 40)]);
  unint64_t v6 = (unint64_t)[v3 replaceDownloadsInQuery:v5 withStoreDownloads:*(void *)(a1 + 48) accountID:*(void *)(a1 + 40)];
  if ((_DWORD)v6 && [*(id *)(a1 + 56) count])
  {
    id v16 = v3;
    __int128 v20 = 0u;
    __int128 v21 = 0u;
    __int128 v18 = 0u;
    __int128 v19 = 0u;
    id obj = *(id *)(a1 + 56);
    id v7 = [obj countByEnumeratingWithState:&v18 objects:v22 count:16];
    if (v7)
    {
      id v8 = v7;
      uint64_t v9 = *(void *)v19;
      do
      {
        for (uint64_t i = 0LL; i != v8; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v19 != v9) {
            objc_enumerationMutation(obj);
          }
          unsigned int v11 = *(void **)(*((void *)&v18 + 1) + 8LL * (void)i);
          uint64_t v12 = objc_alloc(&OBJC_CLASS___NSDictionary);
          uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v11 absoluteString]);
          unsigned int v14 = -[NSDictionary initWithObjectsAndKeys:]( v12,  "initWithObjectsAndKeys:",  v13,  @"finish_url",  *(void *)(a1 + 40),  @"store_account_id",  0LL);
        }

        id v8 = [obj countByEnumeratingWithState:&v18 objects:v22 count:16];
      }

      while (v8);
    }

    id v3 = v16;
    unint64_t v6 = v6;
  }

  return v6;
}

void sub_10008F720(_Unwind_Exception *a1)
{
}

void sub_10008F73C(id *a1)
{
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a1[4] accountIdentifier]);
  if (v3) {
    [a1[5] _setLastCheckedAccountID:v3];
  }
  id v4 = [WeakRetained numberOfAvailableDownloads];
  if (!v4)
  {
    unsigned int v10 = (void *)objc_claimAutoreleasedReturnValue(+[DownloadsDatabase downloadsDatabase](&OBJC_CLASS___DownloadsDatabase, "downloadsDatabase"));
    v28[0] = _NSConcreteStackBlock;
    v28[1] = 3221225472LL;
    v28[2] = sub_10008F984;
    void v28[3] = &unk_10034CE68;
    id v11 = a1[4];
    id v12 = a1[5];
    id v29 = v11;
    id v30 = v12;
    id v13 = [v10 modifyUsingTransactionBlock:v28];

LABEL_9:
LABEL_10:
    id v15 = a1[4];
    id v14 = a1[5];
    id v16 = (dispatch_queue_s *)*((void *)v14 + 3);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_100090188;
    block[3] = &unk_10034AD58;
    void block[4] = v14;
    id v19 = v15;
    dispatch_async(v16, block);

    goto LABEL_11;
  }

  id v5 = v4;
  uint64_t v24 = 0LL;
  id v25 = &v24;
  uint64_t v26 = 0x2020000000LL;
  char v27 = 0;
  unint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(+[DownloadsDatabase downloadsDatabase](&OBJC_CLASS___DownloadsDatabase, "downloadsDatabase"));
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472LL;
  void v20[2] = sub_10008FD1C;
  v20[3] = &unk_10034CF30;
  int8x16_t v17 = *((int8x16_t *)a1 + 2);
  id v7 = (id)v17.i64[0];
  int8x16_t v21 = vextq_s8(v17, v17, 8uLL);
  unsigned int v22 = &v24;
  id v23 = v5;
  id v8 = [v6 modifyUsingTransactionBlock:v20];

  if (!*((_BYTE *)v25 + 24))
  {

    _Block_object_dispose(&v24, 8);
    goto LABEL_9;
  }

  id v9 = [a1[5] _newLoadQueueOperationForQueueRequest:a1[4]];
  [*((id *)a1[5] + 6) addOperation:v9];

  _Block_object_dispose(&v24, 8);
LABEL_11:
}

void sub_10008F968( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
}

uint64_t sub_10008F984(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [*(id *)(a1 + 32) purchaseIdentifier];
  if (v4)
  {
    uint64_t v5 = objc_claimAutoreleasedReturnValue([v3 placeholderDownloadForPurchaseIdentifier:v4]);
    if (v5)
    {
      unint64_t v6 = (void *)v5;
      id v7 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
      if (!v7) {
        id v7 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      unsigned int v8 = [v7 shouldLog];
      else {
        LODWORD(v9) = v8;
      }
      unsigned int v10 = (os_log_s *)objc_claimAutoreleasedReturnValue([v7 OSLogObject]);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO)) {
        uint64_t v9 = v9;
      }
      else {
        v9 &= 2u;
      }
      if ((_DWORD)v9)
      {
        id v11 = (void *)objc_opt_class(*(void *)(a1 + 40));
        id v12 = v11;
        int v32 = 138412546;
        __int16 v33 = v11;
        __int16 v34 = 2048;
        id v35 = [v6 persistentID];
        id v13 = (void *)_os_log_send_and_compose_impl( v9,  0LL,  0LL,  0LL,  &_mh_execute_header,  v10,  1LL,  "%@: Remove placeholder after queue check: %lld",  &v32,  22);

        if (!v13)
        {
LABEL_15:

          id v14 = [v6 persistentID];
          [v3 finishDownloadWithID:v14 finalPhase:SSDownloadPhaseCanceled];

          goto LABEL_16;
        }

        unsigned int v10 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v13,  4LL));
        free(v13);
        id v30 = v10;
        SSFileLog(v7, @"%@");
      }

      goto LABEL_15;
    }
  }

uint64_t sub_10008FD1C(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)a1[4];
  uint64_t v5 = a1[5];
  unint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v3 database]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v4 _downloadQueryWithQueueRequest:v5 database:v6]);
  id v8 = [v7 countOfEntities];

  id v9 = (id)a1[7];
  uint64_t v10 = objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  id v11 = (void *)v10;
  if (v9 != v8)
  {
    if (!v10) {
      id v11 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v30 = [v11 shouldLog];
    else {
      LODWORD(v31) = v30;
    }
    int v32 = (os_log_s *)objc_claimAutoreleasedReturnValue([v11 OSLogObject]);
    if (os_log_type_enabled(v32, OS_LOG_TYPE_INFO)) {
      uint64_t v31 = v31;
    }
    else {
      v31 &= 2u;
    }
    if ((_DWORD)v31)
    {
      __int16 v33 = (void *)objc_opt_class(a1[4]);
      int v39 = 138412290;
      id v40 = v33;
      id v34 = v33;
      id v35 = (void *)_os_log_send_and_compose_impl( v31,  0LL,  0LL,  0LL,  &_mh_execute_header,  v32,  1LL,  "%@: Fetching queue contents: count changed",  &v39,  12);

      if (!v35)
      {
LABEL_41:

        *(_BYTE *)(*(void *)(a1[6] + 8LL) + 24LL) = 1;
        goto LABEL_42;
      }

      int v32 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v35,  4LL));
      free(v35);
      SSFileLog(v11, @"%@");
    }

    goto LABEL_41;
  }

  if (!v10) {
    id v11 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v12 = [v11 shouldLog];
  else {
    LODWORD(v13) = v12;
  }
  id v14 = (os_log_s *)objc_claimAutoreleasedReturnValue([v11 OSLogObject]);
  if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO)) {
    uint64_t v13 = v13;
  }
  else {
    v13 &= 2u;
  }
  if (!(_DWORD)v13) {
    goto LABEL_13;
  }
  id v15 = (void *)objc_opt_class(a1[4]);
  int v39 = 138412290;
  id v40 = v15;
  id v16 = v15;
  int8x16_t v17 = (void *)_os_log_send_and_compose_impl( v13,  0LL,  0LL,  0LL,  &_mh_execute_header,  v14,  1LL,  "%@: Skipping load contents: count has not changed",  &v39,  12);

  if (v17)
  {
    id v14 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v17,  4LL));
    free(v17);
    uint64_t v37 = v14;
    SSFileLog(v11, @"%@");
LABEL_13:
  }

  id v18 = [(id)a1[5] purchaseIdentifier];
  if (v18)
  {
    uint64_t v19 = objc_claimAutoreleasedReturnValue([v3 placeholderDownloadForPurchaseIdentifier:v18]);
    if (v19)
    {
      __int128 v20 = (void *)v19;
      unsigned int v21 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
      if (!v21) {
        unsigned int v21 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      unsigned int v22 = objc_msgSend(v21, "shouldLog", v37);
      else {
        LODWORD(v23) = v22;
      }
      uint64_t v24 = (os_log_s *)objc_claimAutoreleasedReturnValue([v21 OSLogObject]);
      if (os_log_type_enabled(v24, OS_LOG_TYPE_INFO)) {
        uint64_t v23 = v23;
      }
      else {
        v23 &= 2u;
      }
      if ((_DWORD)v23)
      {
        id v25 = (void *)objc_opt_class(a1[4]);
        id v26 = v25;
        id v27 = [v20 persistentID];
        int v39 = 138412546;
        id v40 = v25;
        __int16 v41 = 2048;
        id v42 = v27;
        LODWORD(v3_Block_object_dispose(va, 8) = 22;
        __int16 v28 = (void *)_os_log_send_and_compose_impl( v23,  0LL,  0LL,  0LL,  &_mh_execute_header,  v24,  1LL,  "%@: Remove placeholder after queue check: %lld",  &v39,  v38);

        if (!v28)
        {
LABEL_28:

          id v29 = [v20 persistentID];
          [v3 finishDownloadWithID:v29 finalPhase:SSDownloadPhaseCanceled];

          goto LABEL_42;
        }

        uint64_t v24 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v28,  4LL));
        free(v28);
        SSFileLog(v21, @"%@");
      }

      goto LABEL_28;
    }
  }

LABEL_42:
  return 1LL;
}

  return v20;
}

  unsigned int v30 = (void *)objc_claimAutoreleasedReturnValue([v66 valueForProperty:@"is_hls"]);
  if ((objc_opt_respondsToSelector(v30, "BOOLValue") & 1) == 0)
  {
    id v40 = 0;
    self = v65;
    id v9 = &ACSLocateCachingServer_ptr;
    goto LABEL_65;
  }

  self = v65;
  id v9 = &ACSLocateCachingServer_ptr;
  if (![v30 BOOLValue])
  {
    id v40 = 0;
    goto LABEL_65;
  }

  uint64_t v31 = (void *)objc_claimAutoreleasedReturnValue(-[SSMemoryEntity valueForProperty:](v65->_download, "valueForProperty:", @"kind"));
  if (!SSDownloadKindIsVideosAppKind(v31))
  {
LABEL_63:
    LOBYTE(v13) = 0;
    goto LABEL_64;
  }

  if (![v14 count])
  {
    int v32 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v32) {
      int v32 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    __int16 v33 = [v32 shouldLog];
    else {
      id v34 = v33;
    }
    id v35 = (os_log_s *)objc_claimAutoreleasedReturnValue([v32 OSLogObject]);
    if (os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT)) {
      __int16 v36 = v34;
    }
    else {
      __int16 v36 = v34 & 2;
    }
    if ((_DWORD)v36)
    {
      LOWORD(v80[0]) = 0;
      uint64_t v37 = (void *)_os_log_send_and_compose_impl( v36,  0LL,  0LL,  0LL,  &_mh_execute_header,  v35,  0LL,  "[Download]: No download policy was set for video download.  Looking up whether cellular is allowed from TV app prefs",  v80,  2);

      if (!v37) {
        goto LABEL_58;
      }
      id v35 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v37,  4LL));
      free(v37);
      uint64_t v62 = v35;
      SSFileLog(v32, @"%@");
    }

LABEL_58:
    if (CFPreferencesGetAppBooleanValue(@"CellularDataModeDownload", @"com.apple.videos-preferences", 0LL))
    {
      uint64_t v38 = (void *)objc_claimAutoreleasedReturnValue(+[ISNetworkObserver sharedInstance](&OBJC_CLASS___ISNetworkObserver, "sharedInstance"));
      IsCellularType = SSNetworkTypeIsCellularType([v38 networkType]);

      if ((IsCellularType & 1) != 0)
      {
        LOBYTE(v13) = 1;
      }

      else
      {
        unsigned int v59 = (void *)CFPreferencesCopyAppValue(@"DownloadQualityWifi", @"com.apple.videos-preferences");
        id v60 = [v59 isEqualToString:@"BestQualityDownload"];
        unsigned int v61 = (void *)CFPreferencesCopyAppValue(@"DownloadQualityCellular", @"com.apple.videos-preferences");
        uint64_t v13 = [v61 isEqualToString:@"BestQualityDownload"] | v60 ^ 1;
      }

      goto LABEL_64;
    }

    goto LABEL_63;
  }

id sub_100090188(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 64) removeObject:*(void *)(a1 + 40)];
}

void sub_1000902D0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_1000902EC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(a1 + 40);
  id v4 = *(dispatch_queue_s **)(v2 + 24);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100090404;
  block[3] = &unk_10034AD58;
  void block[4] = v2;
  id v14 = v3;
  dispatch_async(v4, block);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(+[DownloadsDatabase downloadsDatabase](&OBJC_CLASS___DownloadsDatabase, "downloadsDatabase"));
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  v9[2] = sub_100090410;
  v9[3] = &unk_10034CF80;
  id v6 = *(id *)(a1 + 40);
  uint64_t v7 = *(void *)(a1 + 32);
  id v10 = v6;
  uint64_t v11 = v7;
  objc_copyWeak(&v12, (id *)(a1 + 48));
  id v8 = [v5 modifyUsingPurchaseTransactionBlock:v9];

  objc_destroyWeak(&v12);
}

void sub_1000903F0(_Unwind_Exception *a1)
{
}

id sub_100090404(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 64) removeObject:*(void *)(a1 + 40)];
}

uint64_t sub_100090410(id *a1, void *a2)
{
  id v3 = a2;
  id v4 = [a1[4] purchaseIdentifier];
  if (v4)
  {
    uint64_t v5 = objc_claimAutoreleasedReturnValue([v3 placeholderDownloadForPurchaseIdentifier:v4]);
    if (v5)
    {
      id v6 = (void *)v5;
      uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
      if (!v7) {
        uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      unsigned int v8 = [v7 shouldLog];
      else {
        unsigned int v9 = v8;
      }
      id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue([v7 OSLogObject]);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO)) {
        uint64_t v11 = v9;
      }
      else {
        uint64_t v11 = v9 & 2;
      }
      if ((_DWORD)v11)
      {
        id v12 = (void *)objc_opt_class(a1[5]);
        id v13 = v12;
        int v47 = 138412546;
        __int128 v48 = v12;
        __int16 v49 = 2048;
        id v50 = [v6 persistentID];
        id v14 = (void *)_os_log_send_and_compose_impl( v11,  0LL,  0LL,  0LL,  &_mh_execute_header,  v10,  1LL,  "%@: Remove placeholder after queue check: %lld",  &v47,  22);

        if (!v14)
        {
LABEL_15:

          id v15 = [v6 persistentID];
          [v3 finishDownloadWithID:v15 finalPhase:SSDownloadPhaseCanceled];

          goto LABEL_16;
        }

        id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v14,  4LL));
        free(v14);
        __int16 v36 = v10;
        SSFileLog(v7, @"%@");
      }

      goto LABEL_15;
    }
  }

void sub_10009082C(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  if ([v5 isVideosKind] && *(_BYTE *)(a1 + 56))
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v6) {
      id v6 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v7 = [v6 shouldLog];
    else {
      LODWORD(v_Block_object_dispose(va, 8) = v7;
    }
    unsigned int v9 = (os_log_s *)objc_claimAutoreleasedReturnValue([v6 OSLogObject]);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG)) {
      uint64_t v8 = v8;
    }
    else {
      v8 &= 2u;
    }
    if ((_DWORD)v8)
    {
      id v10 = (void *)objc_opt_class(*(void *)(a1 + 32));
      id v11 = v10;
      id v12 = (void *)objc_claimAutoreleasedReturnValue([v5 title]);
      int v24 = 138412546;
      id v25 = v10;
      __int16 v26 = 2112;
      uint64_t v27 = v12;
      id v13 = (void *)_os_log_send_and_compose_impl( v8,  0LL,  0LL,  0LL,  &_mh_execute_header,  v9,  2LL,  "[%@]: Skipping video download: %@",  &v24,  22);

      if (!v13)
      {
LABEL_15:

        goto LABEL_32;
      }

      unsigned int v9 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v13,  4LL));
      free(v13);
      SSFileLog(v6, @"%@");
    }

    goto LABEL_15;
  }

  if ([v5 isSoftwareKind])
  {
    id v14 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v14) {
      id v14 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v15 = [v14 shouldLog];
    else {
      LODWORD(v16) = v15;
    }
    int8x16_t v17 = (os_log_s *)objc_claimAutoreleasedReturnValue([v14 OSLogObject]);
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEBUG)) {
      uint64_t v16 = v16;
    }
    else {
      v16 &= 2u;
    }
    if ((_DWORD)v16)
    {
      id v18 = (void *)objc_opt_class(*(void *)(a1 + 32));
      id v19 = v18;
      __int128 v20 = (void *)objc_claimAutoreleasedReturnValue([v5 bundleIdentifier]);
      int v24 = 138412546;
      id v25 = v18;
      __int16 v26 = 2112;
      uint64_t v27 = v20;
      unsigned int v21 = (void *)_os_log_send_and_compose_impl( v16,  0LL,  0LL,  0LL,  &_mh_execute_header,  v17,  2LL,  "[%@]: Skipping software download: %@",  &v24,  22);

      if (!v21)
      {
LABEL_29:

        [*(id *)(a1 + 40) addIndex:a3];
        goto LABEL_32;
      }

      int8x16_t v17 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v21,  4LL));
      free(v21);
      SSFileLog(v14, @"%@");
    }

    goto LABEL_29;
  }

  unsigned int v22 = (void *)objc_claimAutoreleasedReturnValue([v5 kind]);
  int IsBookToShimKind = SSDownloadKindIsBookToShimKind();

  if (IsBookToShimKind)
  {
    [*(id *)(a1 + 40) addIndex:a3];
    [*(id *)(a1 + 48) addObject:v5];
  }

void sub_100090FE4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  if (a3[1])
  {
    id v5 = sub_100092878(*a3);
    id v7 = (id)objc_claimAutoreleasedReturnValue(v5);
    if (objc_msgSend(*(id *)(a1 + 32), "containsObject:"))
    {
      id v6 = objc_alloc_init(&OBJC_CLASS___StoreDownloadQueueRequest);
      -[StoreDownloadQueueRequest setAccountIdentifier:](v6, "setAccountIdentifier:", a3[1]);
      -[StoreDownloadQueueRequest setQueueIdentifier:](v6, "setQueueIdentifier:", v7);
      -[StoreDownloadQueueRequest setReason:](v6, "setReason:", *(void *)(a1 + 40));
      [*(id *)(a1 + 48) addObject:v6];
    }
  }

BOOL sub_1000912CC(id a1, DownloadsTransaction *a2)
{
  uint64_t v2 = a2;
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[SSSQLiteComparisonPredicate predicateWithProperty:equalToLongLong:]( &OBJC_CLASS___SSSQLiteComparisonPredicate,  "predicateWithProperty:equalToLongLong:",  @"download_state.restore_state",  3LL));
  unsigned int v4 = -[DownloadsTransaction resetDownloadsMatchingPredicate:](v2, "resetDownloadsMatchingPredicate:", v3);
  if (v4)
  {
    -[DownloadsExternalTransaction addDownloadChangeTypes:](v2, "addDownloadChangeTypes:", 128LL);
    -[DownloadsExternalTransaction setRestoreReason:](v2, "setRestoreReason:", @"cancel-retry");
  }

  return v4;
}

BOOL sub_100091508(id a1, DownloadsTransaction *a2)
{
  uint64_t v2 = a2;
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[SSSQLiteComparisonPredicate predicateWithProperty:equalToLongLong:]( &OBJC_CLASS___SSSQLiteComparisonPredicate,  "predicateWithProperty:equalToLongLong:",  @"download_state.restore_state",  2LL));
  unsigned int v4 = -[DownloadsTransaction resetDownloadsMatchingPredicate:](v2, "resetDownloadsMatchingPredicate:", v3);
  if (v4) {
    -[DownloadsExternalTransaction addDownloadChangeTypes:](v2, "addDownloadChangeTypes:", 128LL);
  }

  return v4;
}

void sub_1000917C0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(a1 + 40);
  id v5 = *(void **)(v2 + 32);
  unsigned int v4 = (id *)(v2 + 32);
  if (v5 != v3) {
    objc_storeStrong(v4, v3);
  }
}

void sub_100091920( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_100091940(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  unsigned int v2 = [WeakRetained success];
  id v3 = WeakRetained;
  if (v2)
  {
    unsigned int v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained enabledDownloadKinds]);
    id v5 = *(void **)(a1 + 32);
    if (v4)
    {
      id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](&OBJC_CLASS___NSSet, "setWithArray:", v4));
      [v5 commitAutomaticDownloadKinds:v6 markAsDirty:0];
    }

    else
    {
      [*(id *)(a1 + 32) commitAutomaticDownloadKinds:0 markAsDirty:0];
    }

    uint64_t v7 = *(void *)(a1 + 40);
    if (v7) {
      (*(void (**)(void))(v7 + 16))();
    }

    id v3 = WeakRetained;
  }
}

id sub_100092684(uint64_t a1)
{
  id v2 = +[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array");
  if (qword_1003A3300 != -1) {
    dispatch_once_f(&qword_1003A3300, 0LL, (dispatch_function_t)sub_100092728);
  }
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_100092830;
  v4[3] = &unk_10034D078;
  void v4[4] = a1;
  void v4[5] = v2;
  [(id)qword_1003A3308 enumerateKeysAndObjectsUsingBlock:v4];
  return v2;
}

NSDictionary *sub_100092728()
{
  uint64_t v0 = objc_alloc(&OBJC_CLASS___NSDictionary);
  id result = -[NSDictionary initWithObjectsAndKeys:]( v0,  "initWithObjectsAndKeys:",  SSDownloadKindAudiobook,  @"media",  SSDownloadKindCoachedAudio,  @"books",  SSDownloadKindEBook,  @"media",  SSDownloadKindMovie,  @"media",  SSDownloadKindMusic,  @"media",  SSDownloadKindMusicVideo,  @"media",  SSDownloadKindPodcast,  @"media",  SSDownloadKindRingtone,  @"apps",  SSDownloadKindSoftwareApplication,  @"media",  SSDownloadKindTelevisionEpisode,  @"media",  SSDownloadKindTone,  @"media",  SSDownloadKindVideoPodcast,  0LL);
  qword_1003A3308 = (uint64_t)result;
  return result;
}

id sub_100092830(uint64_t a1, uint64_t a2, void *a3)
{
  id result = [a3 isEqualToString:*(void *)(a1 + 32)];
  if ((_DWORD)result) {
    return [*(id *)(a1 + 40) addObject:a2];
  }
  return result;
}

id sub_100092878(uint64_t a1)
{
  if (qword_1003A3300 != -1) {
    dispatch_once_f(&qword_1003A3300, 0LL, (dispatch_function_t)sub_100092728);
  }
  return [(id)qword_1003A3308 objectForKey:a1];
}

void sub_100092940(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  id v2 = (void *)qword_1003A3310;
  qword_1003A3310 = (uint64_t)v1;
}

void sub_100093610(uint64_t a1)
{
  id v2 = *(id *)(*(void *)(a1 + 32) + 24LL);
  [*(id *)(*(void *)(a1 + 32) + 24) setCompletionBlock:0];
  uint64_t v3 = *(void *)(a1 + 32);
  unsigned int v4 = *(void **)(v3 + 24);
  *(void *)(v3 + 24) = 0LL;

  id v5 = (void *)objc_claimAutoreleasedReturnValue([v2 error]);
  if (v5)
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v6) {
      id v6 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v7 = [v6 shouldLog];
    else {
      LODWORD(v_Block_object_dispose(va, 8) = v7;
    }
    unsigned int v9 = (os_log_s *)objc_claimAutoreleasedReturnValue([v6 OSLogObject]);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO)) {
      uint64_t v8 = v8;
    }
    else {
      v8 &= 2u;
    }
    if ((_DWORD)v8)
    {
      id v10 = (void *)objc_opt_class(*(void *)(a1 + 32));
      int v14 = 138412546;
      unsigned int v15 = v10;
      __int16 v16 = 2112;
      int8x16_t v17 = v5;
      id v11 = v10;
      id v12 = (void *)_os_log_send_and_compose_impl( v8,  0LL,  0LL,  0LL,  &_mh_execute_header,  v9,  1LL,  "[%@]: Unable to load bag, but attempting migration anyway: %@",  &v14,  22);

      if (!v12)
      {
LABEL_14:

        goto LABEL_15;
      }

      unsigned int v9 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v12,  4LL));
      free(v12);
      id v13 = v9;
      SSFileLog(v6, @"%@");
    }

    goto LABEL_14;
  }

void sub_10009384C(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 32) copy];
  [*(id *)(*(void *)(a1 + 32) + 32) removeAllObjects];
  __int128 v10 = 0u;
  __int128 v11 = 0u;
  __int128 v8 = 0u;
  __int128 v9 = 0u;
  id v3 = v2;
  id v4 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v9;
    do
    {
      unsigned int v7 = 0LL;
      do
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v3);
        }
        objc_msgSend(*(id *)(*((void *)&v8 + 1) + 8 * (void)v7), "performMigration", (void)v8);
        unsigned int v7 = (char *)v7 + 1;
      }

      while (v5 != v7);
      id v5 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }

    while (v5);
  }
}

void sub_1000939D0(uint64_t a1)
{
  id v2 = *(void **)(*(void *)(a1 + 32) + 32LL);
  if (!v2)
  {
    id v3 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    uint64_t v4 = *(void *)(a1 + 32);
    id v5 = *(void **)(v4 + 32);
    *(void *)(v4 + 32) = v3;

    id v2 = *(void **)(*(void *)(a1 + 32) + 32LL);
  }

  id v6 = [v2 count];
  [*(id *)(*(void *)(a1 + 32) + 32) addObject:*(void *)(a1 + 40)];
  uint64_t v7 = objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  __int128 v8 = (void *)v7;
  if (!v6)
  {
    if (!v7) {
      __int128 v8 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v15 = [v8 shouldLog];
    else {
      LODWORD(v16) = v15;
    }
    int8x16_t v17 = (os_log_s *)objc_claimAutoreleasedReturnValue([v8 OSLogObject]);
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEBUG)) {
      uint64_t v16 = v16;
    }
    else {
      v16 &= 2u;
    }
    if ((_DWORD)v16)
    {
      id v18 = (void *)objc_opt_class(*(void *)(a1 + 32));
      int v35 = 138412290;
      __int16 v36 = v18;
      id v19 = v18;
      __int128 v20 = (void *)_os_log_send_and_compose_impl( v16,  0LL,  0LL,  0LL,  &_mh_execute_header,  v17,  2LL,  "[%@]: Running checks after adding first migration.",  &v35,  12);

      if (!v20) {
        goto LABEL_28;
      }
      int8x16_t v17 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v20,  4LL));
      free(v20);
      __int16 v33 = v17;
      SSFileLog(v8, @"%@");
    }

LABEL_28:
    unsigned int v21 = (void *)objc_claimAutoreleasedReturnValue(+[ISNetworkObserver sharedInstance](&OBJC_CLASS___ISNetworkObserver, "sharedInstance"));
    id v22 = [v21 networkType];

    if (v22)
    {
      [*(id *)(a1 + 32) _loadBagAndPerformMigration];
      return;
    }

    id v23 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v23) {
      id v23 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v24 = objc_msgSend(v23, "shouldLog", v33);
    else {
      LODWORD(v25) = v24;
    }
    __int16 v26 = (os_log_s *)objc_claimAutoreleasedReturnValue([v23 OSLogObject]);
    if (os_log_type_enabled(v26, OS_LOG_TYPE_INFO)) {
      uint64_t v25 = v25;
    }
    else {
      v25 &= 2u;
    }
    if ((_DWORD)v25)
    {
      uint64_t v27 = (void *)objc_opt_class(*(void *)(a1 + 32));
      int v35 = 138412290;
      __int16 v36 = v27;
      id v28 = v27;
      LODWORD(v34) = 12;
      id v29 = (void *)_os_log_send_and_compose_impl( v25,  0LL,  0LL,  0LL,  &_mh_execute_header,  v26,  1LL,  "[%@]: Wating for network to migrate store data.",  &v35,  v34);

      if (!v29)
      {
LABEL_42:

        __int128 v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
        uint64_t v30 = *(void *)(a1 + 32);
        uint64_t v31 = ISNetworkTypeChangedNotification;
        int v32 = (void *)objc_claimAutoreleasedReturnValue(+[ISNetworkObserver sharedInstance](&OBJC_CLASS___ISNetworkObserver, "sharedInstance"));
        [v8 addObserver:v30 selector:"_networkTypeChangedNotification:" name:v31 object:v32];

        goto LABEL_43;
      }

      __int16 v26 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v29,  4LL));
      free(v29);
      SSFileLog(v23, @"%@");
    }

    goto LABEL_42;
  }

  if (!v7) {
    __int128 v8 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v9 = [v8 shouldLog];
  else {
    LODWORD(v10) = v9;
  }
  __int128 v11 = (os_log_s *)objc_claimAutoreleasedReturnValue([v8 OSLogObject]);
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG)) {
    uint64_t v10 = v10;
  }
  else {
    v10 &= 2u;
  }
  if (!(_DWORD)v10) {
    goto LABEL_15;
  }
  id v12 = (void *)objc_opt_class(*(void *)(a1 + 32));
  int v35 = 138412290;
  __int16 v36 = v12;
  id v13 = v12;
  int v14 = (void *)_os_log_send_and_compose_impl( v10,  0LL,  0LL,  0LL,  &_mh_execute_header,  v11,  2LL,  "[%@]: Waiting for checks to complete.",  &v35,  12);

  if (v14)
  {
    __int128 v11 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v14,  4LL));
    free(v14);
    SSFileLog(v8, @"%@");
LABEL_15:
  }

uint64_t sub_10009428C(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

id sub_100094EE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return [*(id *)(a1 + 32) setSubscriptionStatus:a3 forAccountUniqueIdentifier:a2];
}

LABEL_46:
  if (v52) {
    sub_10019C12C(v52);
  }
  if (v51) {
    sub_10019C12C(v51);
  }
  __int128 v41 = (void *)objc_claimAutoreleasedReturnValue( +[NSJSONSerialization dataWithJSONObject:options:error:]( &OBJC_CLASS___NSJSONSerialization,  "dataWithJSONObject:options:error:",  v14,  0LL,  0LL,  v43));
  -[SSMutableURLRequestProperties setHTTPBody:](v10, "setHTTPBody:", v41);

  return v10;
}

  -[DownloadArtworkCacheOperation _setArtworkData:](self, "_setArtworkData:", v5, v34);

  -[DownloadArtworkCacheOperation setError:](self, "setError:", v36);
  -[DownloadArtworkCacheOperation setSuccess:](self, "setSuccess:", v5 != 0LL);
}

  return 1LL;
}

      id v42 = SSError(SSErrorDomain, 100LL, 0LL, 0LL);
      v122 = (id)objc_claimAutoreleasedReturnValue(v42);
      goto LABEL_47;
    }

    v117 = v7;
    v108 = v5;
    uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v30) {
      uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    uint64_t v31 = [v30 shouldLog];
    else {
      int v32 = v31;
    }
    __int16 v33 = (os_log_s *)objc_claimAutoreleasedReturnValue([v30 OSLogObject]);
    if (os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v34 = v32;
    }
    else {
      uint64_t v34 = v32 & 2;
    }
    if ((_DWORD)v34)
    {
      int v35 = v6;
      __int16 v36 = (void *)objc_opt_class(v2);
      v116 = v36;
      uint64_t v37 = AMSLogableError(v122);
      __int128 v38 = (SSPurchase *)objc_claimAutoreleasedReturnValue(v37);
      v125 = 138412546;
      v126 = v36;
      id v6 = v35;
      v127 = 2112;
      v128 = v38;
      __int128 v39 = (void *)_os_log_send_and_compose_impl( v34,  0LL,  0LL,  0LL,  &_mh_execute_header,  v33,  0LL,  "%@: Checking error for Move to iOS flow. error: %@",  &v125,  22);

      id v5 = v108;
      if (!v39) {
        goto LABEL_38;
      }
      __int16 v33 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v39,  4LL));
      free(v39);
      v97 = v33;
      SSFileLog(v30, @"%@");
    }

    else
    {
      id v5 = v108;
    }

LABEL_38:
    if ((objc_msgSend(v122, "ams_hasDomain:code:", ISErrorDomain, 16) & 1) != 0
      || (objc_msgSend(v122, "ams_hasDomain:code:", SSErrorDomain, 140) & 1) != 0
      || (objc_msgSend(v122, "ams_hasDomain:code:", AMSErrorDomain, 6) & 1) != 0)
    {

      uint64_t v7 = v117;
      goto LABEL_45;
    }

    uint64_t v7 = v117;
    goto LABEL_43;
  }

  unsigned int v9 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v9) {
    unsigned int v9 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  uint64_t v10 = [v9 shouldLog];
  else {
    LODWORD(v11) = v10;
  }
  id v12 = (os_log_s *)objc_claimAutoreleasedReturnValue([v9 OSLogObject]);
  if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT)) {
    __int128 v11 = v11;
  }
  else {
    v11 &= 2u;
  }
  if (!(_DWORD)v11) {
    goto LABEL_16;
  }
  id v13 = (void *)objc_opt_class(v2);
  purchase = v2->_purchase;
  v125 = 138412546;
  v126 = v13;
  v127 = 2112;
  v128 = purchase;
  unsigned int v15 = v13;
  uint64_t v16 = (void *)_os_log_send_and_compose_impl( v11,  0LL,  0LL,  0LL,  &_mh_execute_header,  v12,  0LL,  "%@: Capabilities mismatch for purchase: %@",  &v125,  22);

  if (v16)
  {
    id v12 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v16,  4LL));
    free(v16);
    v97 = v12;
    SSFileLog(v9, @"%@");
LABEL_16:
  }

  v122 = (id)objc_claimAutoreleasedReturnValue( -[PurchaseManagerOperation _incompatibleErrorWithPurchase:]( v2,  "_incompatibleErrorWithPurchase:",  v2->_purchase));
  int8x16_t v17 = (void *)objc_claimAutoreleasedReturnValue( -[SSPurchase valueForDownloadProperty:]( v2->_purchase,  "valueForDownloadProperty:",  SSDownloadPropertyShouldSuppressErrorDialogs));
  id v18 = [v17 BOOLValue];

  if ((v18 & 1) == 0) {
    -[PurchaseManagerOperation _showDialogForPurchase:error:](v2, "_showDialogForPurchase:error:", v2->_purchase, v122);
  }
  v120 = 0LL;
  v121 = 0LL;
  id v19 = 0LL;
  v114 = 0;
  __int128 v20 = 0LL;
  uint64_t v7 = 0LL;
  unsigned int v21 = 0LL;
  v115 = 0LL;
  id v5 = 0LL;
LABEL_87:
  __int128 v77 = (void *)objc_claimAutoreleasedReturnValue(-[SSPurchase enabledServiceType](v2->_purchase, "enabledServiceType", v97));
  __int128 v78 = v77;
  if ((_DWORD)v5 && v77 && ![v77 integerValue])
  {
    v107 = v21;
    __int128 v79 = objc_alloc_init(&OBJC_CLASS___SubscriptionOperation);
    -[SubscriptionOperation setOperationType:](v79, "setOperationType:", 1LL);
    v110 = v5;
    uint64_t v80 = (void *)objc_claimAutoreleasedReturnValue(-[SSPurchase requestProperties](v2->_purchase, "requestProperties"));
    __int16 v81 = (void *)objc_claimAutoreleasedReturnValue([v80 HTTPHeaders]);
    id v82 = (void *)objc_claimAutoreleasedReturnValue([v81 objectForKey:SSHTTPHeaderUserAgent]);
    -[SubscriptionOperation setUserAgent:](v79, "setUserAgent:", v82);

    id v5 = v110;
    -[PurchaseManagerOperation runSubOperation:returningError:](v2, "runSubOperation:returningError:", v79, 0LL);

    unsigned int v21 = v107;
  }

  __int16 v83 = (void (**)(void, void))objc_claimAutoreleasedReturnValue(-[PurchaseManagerOperation purchaseBlock](v2, "purchaseBlock"));
  if (v83)
  {
    __int16 v84 = v21;
    v119 = v7;
    v85 = v122;
    if (v85) {
      __int16 v86 = 1;
    }
    else {
      __int16 v86 = v5;
    }
    if ((v86 & 1) == 0)
    {
      v87 = SSError(SSErrorDomain, 100LL, 0LL, 0LL);
      v85 = (id)objc_claimAutoreleasedReturnValue(v87);
    }

    __int16 v88 = objc_alloc_init(&OBJC_CLASS___DaemonPurchaseResponse);
    -[DaemonPurchaseResponse setCancelsPurchaseBatch:](v88, "setCancelsPurchaseBatch:", v114);
    -[DaemonPurchaseResponse setDecodedResponse:](v88, "setDecodedResponse:", v84);
    -[DaemonPurchaseResponse setError:](v88, "setError:", v85);
    -[DaemonPurchaseResponse setPurchase:](v88, "setPurchase:", v2->_purchase);
    -[DaemonPurchaseResponse setTidHeaders:](v88, "setTidHeaders:", v121);
    -[DaemonPurchaseResponse setURLResponse:](v88, "setURLResponse:", v120);
    if (v20)
    {
      [v20 startTime];
      __int16 v90 = v89;
      v113 = v19;
      v91 = v5;
      v92 = (void *)objc_claimAutoreleasedReturnValue( +[NSDate dateWithTimeIntervalSinceReferenceDate:]( &OBJC_CLASS___NSDate,  "dateWithTimeIntervalSinceReferenceDate:"));
      [v92 timeIntervalSince1970];
      -[DaemonPurchaseResponse setRequestStartTime:](v88, "setRequestStartTime:");

      [v20 receivedResponseInterval];
      v94 = (void *)objc_claimAutoreleasedReturnValue( +[NSDate dateWithTimeIntervalSinceReferenceDate:]( &OBJC_CLASS___NSDate,  "dateWithTimeIntervalSinceReferenceDate:",  v90 + v93));
      [v94 timeIntervalSince1970];
      -[DaemonPurchaseResponse setResponseStartTime:](v88, "setResponseStartTime:");

      [v20 finishInterval];
      v96 = (void *)objc_claimAutoreleasedReturnValue( +[NSDate dateWithTimeIntervalSinceReferenceDate:]( &OBJC_CLASS___NSDate,  "dateWithTimeIntervalSinceReferenceDate:",  v90 + v95));
      [v96 timeIntervalSince1970];
      -[DaemonPurchaseResponse setResponseEndTime:](v88, "setResponseEndTime:");

      id v5 = v91;
      id v19 = v113;
    }

    ((void (**)(void, DaemonPurchaseResponse *))v83)[2](v83, v88);

    uint64_t v7 = v119;
    unsigned int v21 = v84;
  }

  -[PurchaseManagerOperation setError:](v2, "setError:", v122);
  -[PurchaseManagerOperation setSuccess:](v2, "setSuccess:", v5);
}

void sub_100095E50(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
  {
    objc_begin_catch(exception_object);
    JUMPOUT(0x100095DA8LL);
  }

  _Unwind_Resume(exception_object);
}

id sub_10009619C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return [*(id *)(a1 + 32) setValue:a3 forHTTPHeaderField:a2];
}

NSURL *sub_1000973A4(uint64_t a1)
{
  return +[NSURL URLWithString:](&OBJC_CLASS___NSURL, "URLWithString:", a1);
}

NSDate *sub_1000973B4(void *a1)
{
  return +[NSDate dateWithTimeIntervalSinceReferenceDate:]( &OBJC_CLASS___NSDate,  "dateWithTimeIntervalSinceReferenceDate:");
}

void sub_100099EAC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  uint64_t v12 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v10 - 136), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100099EFC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_100099F0C(uint64_t a1)
{
}

void sub_100099F14(void *a1, void *a2, void *a3)
{
  id v12 = a2;
  id v6 = a3;
  if (v6)
  {
    objc_storeStrong((id *)(*(void *)(a1[4] + 8LL) + 40LL), a3);
  }

  else
  {
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1[5] + 8) + 40) error]);

    __int128 v8 = (id *)(*(void *)(a1[5] + 8LL) + 40LL);
    if (v7)
    {
      uint64_t v9 = objc_claimAutoreleasedReturnValue([*v8 error]);
      uint64_t v10 = *(void *)(a1[4] + 8LL);
      __int128 v11 = *(void **)(v10 + 40);
      *(void *)(v10 + 40) = v9;
    }

    else
    {
      objc_storeStrong(v8, a2);
      *(_BYTE *)(*(void *)(a1[6] + 8LL) + 24LL) = 1;
    }
  }
}

void sub_10009AFF8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, char a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, char a33)
{
}

void sub_10009B06C(uint64_t a1, void *a2, void *a3)
{
  id v15 = a2;
  id v6 = a3;
  uint64_t v7 = v6;
  if (v6)
  {
    uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8LL);
    id v9 = v6;
    uint64_t v10 = *(void **)(v8 + 40);
    *(void *)(v8 + 40) = v9;
  }

  else
  {
    __int128 v11 = (void *)objc_claimAutoreleasedReturnValue([v15 error]);

    if (v11)
    {
      uint64_t v12 = objc_claimAutoreleasedReturnValue([v15 error]);
      uint64_t v13 = *(void *)(*(void *)(a1 + 32) + 8LL);
      uint64_t v10 = *(void **)(v13 + 40);
      *(void *)(v13 + 40) = v12;
    }

    else
    {
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL), a2);
      uint64_t v14 = *(void *)(*(void *)(a1 + 32) + 8LL);
      uint64_t v10 = *(void **)(v14 + 40);
      *(void *)(v14 + 40) = 0LL;
    }
  }
}

void sub_10009BC94( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, char a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, char a27)
{
}

void sub_10009BD0C(uint64_t a1, void *a2, void *a3)
{
  id v15 = a2;
  id v6 = a3;
  uint64_t v7 = v6;
  if (v6)
  {
    uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8LL);
    id v9 = v6;
    uint64_t v10 = *(void **)(v8 + 40);
    *(void *)(v8 + 40) = v9;
  }

  else
  {
    __int128 v11 = (void *)objc_claimAutoreleasedReturnValue([v15 error]);

    if (v11)
    {
      uint64_t v12 = objc_claimAutoreleasedReturnValue([v15 error]);
      uint64_t v13 = *(void *)(*(void *)(a1 + 32) + 8LL);
      uint64_t v10 = *(void **)(v13 + 40);
      *(void *)(v13 + 40) = v12;
    }

    else
    {
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL), a2);
      uint64_t v14 = *(void *)(*(void *)(a1 + 32) + 8LL);
      uint64_t v10 = *(void **)(v14 + 40);
      *(void *)(v14 + 40) = 0LL;
    }
  }
}

void sub_10009C1FC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
}

id sub_10009C21C(uint64_t a1, void *a2)
{
  id v3 = +[FinishedDownloadEntity queryWithDatabase:predicate:]( FinishedDownloadEntity,  "queryWithDatabase:predicate:",  [a2 database],  *(void *)(*(void *)(a1 + 32) + 96));
  v7[0] = @"finish_url";
  v7[1] = @"store_account_id";
  v7[2] = @"store_item_id";
  v7[3] = @"store_transaction_id";
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  v5[2] = sub_10009C314;
  v5[3] = &unk_10034ADF8;
  __int128 v6 = *(_OWORD *)(a1 + 40);
  return [v3 enumeratePersistentIDsAndProperties:v7 count:4 usingBlock:v5];
}

void sub_10009C314(uint64_t a1, uint64_t a2, void *a3)
{
  id v11 = objc_alloc_init(&OBJC_CLASS___ISStoreURLOperation);
  objc_msgSend( v11,  "setDataProvider:",  +[DaemonProtocolDataProvider provider](DaemonProtocolDataProvider, "provider"));
  [v11 setUseUserSpecificURLBag:1];
  __int128 v6 = -[SSAuthenticationContext initWithAccountIdentifier:]( objc_alloc(&OBJC_CLASS___SSAuthenticationContext),  "initWithAccountIdentifier:",  a3[1]);
  [v11 setAuthenticationContext:v6];

  uint64_t v7 = objc_alloc_init(&OBJC_CLASS___SSMutableURLRequestProperties);
  uint64_t v8 = v7;
  if (*a3)
  {
    -[SSMutableURLRequestProperties setURL:]( v7,  "setURL:",  +[NSURL URLWithString:](&OBJC_CLASS___NSURL, "URLWithString:"));
  }

  else
  {
    -[SSMutableURLRequestProperties setURLBagKey:](v7, "setURLBagKey:", @"songDownloadDone");
    -[SSMutableURLRequestProperties setValue:forRequestParameter:]( v8,  "setValue:forRequestParameter:",  +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%llu",  SSGetItemIdentifierFromValue(a3[2])),  @"songId");
    -[SSMutableURLRequestProperties setValue:forRequestParameter:]( v8,  "setValue:forRequestParameter:",  a3[3],  @"download-id");
  }

  id v9 = +[LSApplicationProxy applicationProxyForItemID:]( &OBJC_CLASS___LSApplicationProxy,  "applicationProxyForItemID:",  +[NSNumber numberWithLongLong:]( &OBJC_CLASS___NSNumber,  "numberWithLongLong:",  SSGetItemIdentifierFromValue(a3[2])));
  if (v9)
  {
    if ([v9 hasMIDBasedSINF])
    {
      id v10 = -[ISDevice serialNumber]( +[ISDevice sharedInstance](&OBJC_CLASS___ISDevice, "sharedInstance"),  "serialNumber");
      if (v10) {
        -[SSMutableURLRequestProperties setValue:forRequestParameter:]( v8,  "setValue:forRequestParameter:",  v10,  @"serialNumber");
      }
    }
  }

  [v11 setRequestProperties:v8];

  objc_msgSend( *(id *)(a1 + 32),  "addObject:",  +[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", a2));
  [*(id *)(a1 + 40) addObject:v11];
}

uint64_t sub_10009C4D8(uint64_t a1, void *a2)
{
  id v3 = -[FinishedDownloadEntity initWithPersistentID:inDatabase:]( [FinishedDownloadEntity alloc],  "initWithPersistentID:inDatabase:",  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "objectAtIndex:", *(void *)(a1 + 48)), "longLongValue"),  objc_msgSend(a2, "database"));
  *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = -[FinishedDownloadEntity deleteFromDatabase]( v3,  "deleteFromDatabase");

  return *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL);
}

void sub_10009C758(id a1, SSSQLiteDatabase *a2)
{
}

uint64_t sub_10009C7E4(uint64_t a1)
{
  id v2 = objc_autoreleasePoolPush();
  id v3 = -[PurchaseActionsDatabaseTransaction initWithDatabase:]( objc_alloc(&OBJC_CLASS___PurchaseActionsDatabaseTransaction),  "initWithDatabase:",  *(void *)(*(void *)(a1 + 32) + 8LL));
  uint64_t v4 = (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16LL))();

  objc_autoreleasePoolPop(v2);
  return v4;
}

id sub_10009C8CC(uint64_t a1)
{
  return [*(id *)(a1 + 32) readUsingTransactionBlock:*(void *)(a1 + 40)];
}

uint64_t sub_10009C954(uint64_t a1)
{
  id v2 = objc_autoreleasePoolPush();
  id v3 = -[PurchaseActionsDatabaseTransaction initWithDatabase:]( objc_alloc(&OBJC_CLASS___PurchaseActionsDatabaseTransaction),  "initWithDatabase:",  *(void *)(*(void *)(a1 + 32) + 8LL));
  (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();

  objc_autoreleasePoolPop(v2);
  return 1LL;
}

uint64_t sub_10009CA44(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 database]);
  uint64_t v12 = 0LL;
  uint64_t v13 = &v12;
  uint64_t v14 = 0x2020000000LL;
  char v15 = 0;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  void v8[2] = sub_10009CB40;
  v8[3] = &unk_10034D1E0;
  id v9 = *(id *)(a1 + 32);
  id v11 = &v12;
  id v5 = v4;
  id v10 = v5;
  objc_msgSend( v5,  "prepareStatementForSQL:cache:usingBlock:",  @"DELETE FROM purchase_intents_table WHERE app_bundle_id = ?;",
    0LL,
    v8);
  uint64_t v6 = *((unsigned __int8 *)v13 + 24);

  _Block_object_dispose(&v12, 8);
  return v6;
}

void sub_10009CB28( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

id sub_10009CB40(uint64_t a1, sqlite3_stmt *a2)
{
  id result = [*(id *)(a1 + 40) statementDidFinishAfterStepping:a2];
  *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = (_BYTE)result;
  return result;
}

uint64_t sub_10009CC60(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 database]);
  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"SELECT * FROM purchase_intents_table WHERE app_bundle_id = ?;"));
  v17[0] = 0LL;
  v17[1] = v17;
  v17[2] = 0x3032000000LL;
  v17[3] = sub_10009CE00;
  v17[4] = sub_10009CE10;
  id v18 = objc_opt_new(&OBJC_CLASS___NSMutableArray);
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472LL;
  v13[2] = sub_10009CE18;
  v13[3] = &unk_10034D230;
  id v14 = *(id *)(a1 + 32);
  id v6 = v4;
  id v15 = v6;
  uint64_t v16 = v17;
  [v6 prepareStatementForSQL:v5 cache:1 usingBlock:v13];
  dispatch_queue_global_t global_queue = dispatch_get_global_queue(0LL, 0LL);
  uint64_t v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_10009CFC8;
  block[3] = &unk_10034D258;
  id v11 = *(id *)(a1 + 40);
  uint64_t v12 = v17;
  dispatch_async(v8, block);

  _Block_object_dispose(v17, 8);
  return 1LL;
}

void sub_10009CDE8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
}

uint64_t sub_10009CE00(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_10009CE10(uint64_t a1)
{
}

id sub_10009CE18(uint64_t a1, sqlite3_stmt *a2)
{
  id result = [*(id *)(a1 + 40) statementHasRowAfterStepping:a2];
  if ((_DWORD)result)
  {
    do
    {
      id v5 = objc_alloc_init(&OBJC_CLASS___PurchaseIntent);
      id v6 = +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  sqlite3_column_text(a2, 0));
      uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
      -[PurchaseIntent setProductIdentifier:](v5, "setProductIdentifier:", v7);
      uint64_t v8 = +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  sqlite3_column_text(a2, 1));
      id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
      -[PurchaseIntent setAppBundleId:](v5, "setAppBundleId:", v9);
      id v10 = +[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", sqlite3_column_int64(a2, 2));
      id v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
      -[PurchaseIntent setTimestamp:](v5, "setTimestamp:", v11);

      uint64_t v12 = sqlite3_column_text(a2, 4);
      if (v12)
      {
        uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v12));
        -[PurchaseIntent setProductName:](v5, "setProductName:", v13);
      }

      id v14 = sqlite3_column_text(a2, 5);
      if (v14)
      {
        id v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v14));
        -[PurchaseIntent setAppName:](v5, "setAppName:", v15);
      }

      [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) addObject:v5];

      id result = [*(id *)(a1 + 40) statementHasRowAfterStepping:a2];
    }

    while ((result & 1) != 0);
  }

  return result;
}

uint64_t sub_10009CFC8(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 32) + 16LL))( *(void *)(a1 + 32),  *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL));
}

uint64_t sub_10009D05C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 database]);
  uint64_t v17 = 0LL;
  id v18 = &v17;
  uint64_t v19 = 0x2020000000LL;
  char v20 = 0;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472LL;
  v13[2] = sub_10009D1BC;
  v13[3] = &unk_10034D1E0;
  id v14 = *(id *)(a1 + 32);
  uint64_t v16 = &v17;
  id v5 = v4;
  id v15 = v5;
  objc_msgSend( v5,  "prepareStatementForSQL:cache:usingBlock:",  @"DELETE FROM purchase_intents_table WHERE app_bundle_id = ?;",
    0LL,
    v13);
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  v9[2] = sub_10009D230;
  v9[3] = &unk_10034D1E0;
  id v10 = *(id *)(a1 + 32);
  uint64_t v12 = &v17;
  id v6 = v5;
  id v11 = v6;
  objc_msgSend( v6,  "prepareStatementForSQL:cache:usingBlock:",  @"INSERT OR REPLACE INTO purchase_intents_table (product_identifier, app_bundle_id, timestamp, product_name, app_name) VALUES (?, ?, ?, ?, ?);",
    0LL,
    v9);
  uint64_t v7 = *((unsigned __int8 *)v18 + 24);

  _Block_object_dispose(&v17, 8);
  return v7;
}

void sub_10009D1A4(_Unwind_Exception *a1)
{
}

id sub_10009D1BC(uint64_t a1, sqlite3_stmt *a2)
{
  id v4 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) appBundleId]);
  sqlite3_bind_text(a2, 1, (const char *)[v4 UTF8String], -1, 0);

  id result = [*(id *)(a1 + 40) statementDidFinishAfterStepping:a2];
  *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = (_BYTE)result;
  return result;
}

id sub_10009D230(uint64_t a1, sqlite3_stmt *a2)
{
  id v4 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) productIdentifier]);
  sqlite3_bind_text(a2, 1, (const char *)[v4 UTF8String], -1, 0);

  id v5 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) appBundleId]);
  sqlite3_bind_text(a2, 2, (const char *)[v5 UTF8String], -1, 0);

  id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) timestamp]);
  sqlite3_bind_int(a2, 3, (int)[v6 intValue]);

  id v7 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) productName]);
  sqlite3_bind_text(a2, 4, (const char *)[v7 UTF8String], -1, 0);

  id v8 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) appName]);
  sqlite3_bind_text(a2, 5, (const char *)[v8 UTF8String], -1, 0);

  uint64_t v9 = *(void *)(*(void *)(a1 + 48) + 8LL);
  if (*(_BYTE *)(v9 + 24))
  {
    id result = [*(id *)(a1 + 40) statementDidFinishAfterStepping:a2];
    uint64_t v9 = *(void *)(*(void *)(a1 + 48) + 8LL);
  }

  else
  {
    id result = 0LL;
  }

  *(_BYTE *)(v9 + 24) = (_BYTE)result;
  return result;
}

BOOL sub_10009D450(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 database]);
  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"SELECT * FROM purchase_intents_table WHERE app_bundle_id = ?;"));
  uint64_t v25 = 0LL;
  __int16 v26 = &v25;
  uint64_t v27 = 0x3032000000LL;
  id v28 = sub_10009CE00;
  id v29 = sub_10009CE10;
  uint64_t v30 = objc_opt_new(&OBJC_CLASS___NSMutableArray);
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472LL;
  void v20[2] = sub_10009D6E8;
  v20[3] = &unk_10034D2A8;
  id v21 = *(id *)(a1 + 32);
  id v6 = v4;
  id v22 = v6;
  id v23 = *(id *)(a1 + 40);
  unsigned int v24 = &v25;
  [v6 prepareStatementForSQL:v5 cache:1 usingBlock:v20];
  if ([(id)v26[5] count])
  {
    id v7 = objc_opt_new(&OBJC_CLASS___NSMutableString);
    -[NSMutableString deleteCharactersInRange:]( v7,  "deleteCharactersInRange:",  (char *)-[NSMutableString length](v7, "length") - 2,  2LL);
    uint64_t v16 = 0LL;
    uint64_t v17 = &v16;
    uint64_t v18 = 0x2020000000LL;
    char v19 = 0;
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"INSERT OR REPLACE INTO purchase_intents_table (product_identifier, app_bundle_id, timestamp, pid, product_name, app_name) VALUES %@;",
                     v7));
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472LL;
    v12[2] = sub_10009D870;
    v12[3] = &unk_10034D2D0;
    id v14 = &v25;
    id v15 = &v16;
    id v13 = v6;
    [v13 prepareStatementForSQL:v9 cache:0 usingBlock:v12];

    BOOL v10 = *((_BYTE *)v17 + 24) != 0;
    _Block_object_dispose(&v16, 8);
  }

  else
  {
    BOOL v10 = 1LL;
  }

  _Block_object_dispose(&v25, 8);
  return v10;
}

void sub_10009D6B4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

id sub_10009D6E8(uint64_t a1, sqlite3_stmt *a2)
{
  id result = [*(id *)(a1 + 40) statementHasRowAfterStepping:a2];
  if ((_DWORD)result)
  {
    do
    {
      id v5 = objc_alloc_init(&OBJC_CLASS___PurchaseIntentDatabaseRow);
      -[PurchaseIntentDatabaseRow setAppBundleId:](v5, "setAppBundleId:", *(void *)(a1 + 32));
      -[PurchaseIntentDatabaseRow setTimestamp:](v5, "setTimestamp:", *(void *)(a1 + 48));
      id v6 = +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  sqlite3_column_text(a2, 0));
      id v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
      -[PurchaseIntentDatabaseRow setProductIdentifier:](v5, "setProductIdentifier:", v7);
      id v8 = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", sqlite3_column_int(a2, 3));
      uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
      -[PurchaseIntentDatabaseRow setPid:](v5, "setPid:", v9);

      BOOL v10 = sqlite3_column_text(a2, 4);
      if (v10)
      {
        id v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v10));
        -[PurchaseIntentDatabaseRow setProductName:](v5, "setProductName:", v11);
      }

      uint64_t v12 = sqlite3_column_text(a2, 5);
      if (v12)
      {
        id v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v12));
        -[PurchaseIntentDatabaseRow setAppName:](v5, "setAppName:", v13);
      }

      [*(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) addObject:v5];

      id result = [*(id *)(a1 + 40) statementHasRowAfterStepping:a2];
    }

    while ((result & 1) != 0);
  }

  return result;
}

id sub_10009D870(uint64_t a1, sqlite3_stmt *a2)
{
  if ([*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) count])
  {
    unint64_t v4 = 0LL;
    int v5 = 6;
    do
    {
      id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) objectAtIndex:v4]);
      id v7 = objc_claimAutoreleasedReturnValue([v6 productIdentifier]);
      sqlite3_bind_text(a2, v5 - 5, (const char *)[v7 UTF8String], -1, 0);

      id v8 = objc_claimAutoreleasedReturnValue([v6 appBundleId]);
      sqlite3_bind_text(a2, v5 - 4, (const char *)[v8 UTF8String], -1, 0);

      uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v6 timestamp]);
      sqlite3_bind_int(a2, v5 - 3, (int)[v9 intValue]);

      BOOL v10 = (void *)objc_claimAutoreleasedReturnValue([v6 pid]);
      sqlite3_bind_int(a2, v5 - 2, (int)[v10 intValue]);

      id v11 = (void *)objc_claimAutoreleasedReturnValue([v6 productName]);
      if (v11)
      {
        id v12 = objc_claimAutoreleasedReturnValue([v6 productName]);
        sqlite3_bind_text(a2, v5 - 1, (const char *)[v12 UTF8String], -1, 0);
      }

      id v13 = (void *)objc_claimAutoreleasedReturnValue([v6 appName]);

      if (v13)
      {
        id v14 = objc_claimAutoreleasedReturnValue([v6 appName]);
        sqlite3_bind_text(a2, v5, (const char *)[v14 UTF8String], -1, 0);
      }

      ++v4;
      v5 += 6;
    }

    while (v4 < (unint64_t)[*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) count]);
  }

  id result = [*(id *)(a1 + 32) statementDidFinishAfterStepping:a2];
  *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = (_BYTE)result;
  return result;
}

void sub_10009DCA4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

uint64_t sub_10009DCC4(uint64_t a1, void *a2)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a2 database]);
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  v9[2] = sub_10009DD78;
  v9[3] = &unk_10034D1E0;
  id v4 = *(id *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  id v11 = v3;
  uint64_t v12 = v5;
  id v10 = v4;
  id v6 = v3;
  objc_msgSend( v6,  "prepareStatementForSQL:cache:usingBlock:",  @"INSERT OR REPLACE INTO install_attribution_params_table (app_adam_id, ad_network_id, campaign_id, impression_id, timestamp, attribution_signature, local_timestamp) VALUES (?, ?, ?, ?, ?, ?, ?);",
    0LL,
    v9);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL);

  return v7;
}

id sub_10009DD78(uint64_t a1, sqlite3_stmt *a2)
{
  id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) appAdamId]);
  sqlite3_bind_int64(a2, 1, (sqlite3_int64)[v4 longLongValue]);

  id v5 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) adNetworkId]);
  sqlite3_bind_text(a2, 2, (const char *)[v5 UTF8String], -1, 0);

  id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) campaignId]);
  sqlite3_bind_int64(a2, 3, (sqlite3_int64)[v6 longLongValue]);

  id v7 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) impressionId]);
  sqlite3_bind_text(a2, 4, (const char *)[v7 UTF8String], -1, 0);

  id v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) timestamp]);
  sqlite3_bind_int64(a2, 5, (sqlite3_int64)[v8 longLongValue]);

  id v9 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) attributionSignature]);
  sqlite3_bind_text(a2, 6, (const char *)[v9 UTF8String], -1, 0);

  id v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) localTimestamp]);
  sqlite3_bind_int64(a2, 7, (sqlite3_int64)[v10 longLongValue]);

  id result = [*(id *)(a1 + 40) statementDidFinishAfterStepping:a2];
  *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = (_BYTE)result;
  return result;
}

uint64_t sub_10009E104(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 database]);
  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"SELECT * FROM install_attribution_params_table WHERE app_adam_id = ?;"));
  v17[0] = 0LL;
  v17[1] = v17;
  v17[2] = 0x3032000000LL;
  v17[3] = sub_10009CE00;
  v17[4] = sub_10009CE10;
  id v18 = 0LL;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472LL;
  v13[2] = sub_10009E298;
  v13[3] = &unk_10034D230;
  id v14 = *(id *)(a1 + 32);
  id v6 = v4;
  id v15 = v6;
  uint64_t v16 = v17;
  [v6 prepareStatementForSQL:v5 cache:1 usingBlock:v13];
  dispatch_queue_global_t global_queue = dispatch_get_global_queue(0LL, 0LL);
  id v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_10009E4E0;
  block[3] = &unk_10034D258;
  id v11 = *(id *)(a1 + 40);
  uint64_t v12 = v17;
  dispatch_async(v8, block);

  _Block_object_dispose(v17, 8);
  return 1LL;
}

void sub_10009E280( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
}

id sub_10009E298(uint64_t a1, sqlite3_stmt *a2)
{
  id result = [*(id *)(a1 + 40) statementHasRowAfterStepping:a2];
  if ((_DWORD)result)
  {
    do
    {
      id v5 = objc_alloc_init(&OBJC_CLASS___InstallAttributionParams);
      uint64_t v6 = *(void *)(*(void *)(a1 + 48) + 8LL);
      id v7 = *(void **)(v6 + 40);
      *(void *)(v6 + 40) = v5;

      id v8 = *(void **)(*(void *)(*(void *)(a1 + 48) + 8LL) + 40LL);
      id v9 = +[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", sqlite3_column_int64(a2, 0));
      id v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
      [v8 setAppAdamId:v10];

      id v11 = +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  sqlite3_column_text(a2, 1));
      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
      [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) setAdNetworkId:v12];
      id v13 = *(void **)(*(void *)(*(void *)(a1 + 48) + 8LL) + 40LL);
      id v14 = +[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", sqlite3_column_int64(a2, 2));
      id v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
      [v13 setCampaignId:v15];

      uint64_t v16 = +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  sqlite3_column_text(a2, 3));
      uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
      [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) setImpressionId:v17];
      id v18 = *(void **)(*(void *)(*(void *)(a1 + 48) + 8LL) + 40LL);
      char v19 = +[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", sqlite3_column_int64(a2, 4));
      char v20 = (void *)objc_claimAutoreleasedReturnValue(v19);
      [v18 setTimestamp:v20];

      id v21 = +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  sqlite3_column_text(a2, 5));
      id v22 = (void *)objc_claimAutoreleasedReturnValue(v21);
      [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) setAttributionSignature:v22];
      id v23 = *(void **)(*(void *)(*(void *)(a1 + 48) + 8LL) + 40LL);
      unsigned int v24 = +[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", sqlite3_column_int64(a2, 6));
      uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue(v24);
      [v23 setLocalTimestamp:v25];

      id result = [*(id *)(a1 + 40) statementHasRowAfterStepping:a2];
    }

    while ((result & 1) != 0);
  }

  return result;
}

uint64_t sub_10009E4E0(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))( result,  *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL));
  }
  return result;
}

uint64_t sub_10009E6D8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 database]);
  uint64_t v12 = 0LL;
  id v13 = &v12;
  uint64_t v14 = 0x2020000000LL;
  char v15 = 0;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  void v8[2] = sub_10009E7D4;
  v8[3] = &unk_10034D1E0;
  id v9 = *(id *)(a1 + 32);
  id v11 = &v12;
  id v5 = v4;
  id v10 = v5;
  objc_msgSend( v5,  "prepareStatementForSQL:cache:usingBlock:",  @"DELETE FROM install_attribution_params_table WHERE app_adam_id = ?;",
    0LL,
    v8);
  uint64_t v6 = *((unsigned __int8 *)v13 + 24);

  _Block_object_dispose(&v12, 8);
  return v6;
}

void sub_10009E7BC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

id sub_10009E7D4(uint64_t a1, sqlite3_stmt *a2)
{
  id result = [*(id *)(a1 + 40) statementDidFinishAfterStepping:a2];
  *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = (_BYTE)result;
  return result;
}

uint64_t sub_10009E9F8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 database]);
  uint64_t v12 = 0LL;
  id v13 = &v12;
  uint64_t v14 = 0x2020000000LL;
  char v15 = 0;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  void v8[2] = sub_10009EAF4;
  v8[3] = &unk_10034D1E0;
  id v9 = *(id *)(a1 + 32);
  id v11 = &v12;
  id v5 = v4;
  id v10 = v5;
  objc_msgSend( v5,  "prepareStatementForSQL:cache:usingBlock:",  @"DELETE FROM install_attribution_params_table WHERE local_timestamp < ?;",
    0LL,
    v8);
  uint64_t v6 = *((unsigned __int8 *)v13 + 24);

  _Block_object_dispose(&v12, 8);
  return v6;
}

void sub_10009EADC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

id sub_10009EAF4(uint64_t a1, sqlite3_stmt *a2)
{
  id result = [*(id *)(a1 + 40) statementDidFinishAfterStepping:a2];
  *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = (_BYTE)result;
  return result;
}

uint64_t sub_10009ED24(uint64_t a1, void *a2)
{
  id v3 = a2;
  double v4 = (void *)objc_claimAutoreleasedReturnValue([v3 database]);
  uint64_t v12 = 0LL;
  id v13 = &v12;
  uint64_t v14 = 0x2020000000LL;
  char v15 = 0;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  void v8[2] = sub_10009EE20;
  v8[3] = &unk_10034D1E0;
  id v9 = *(id *)(a1 + 32);
  id v11 = &v12;
  id v5 = v4;
  id v10 = v5;
  objc_msgSend( v5,  "prepareStatementForSQL:cache:usingBlock:",  @"INSERT INTO install_attribution_pingback_table (app_adam_id, ad_network_id, campaign_id, transaction_id, attribution_signature, pingback_url, pending, retry_count, local_timestamp) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);",
    0LL,
    v8);
  uint64_t v6 = *((unsigned __int8 *)v13 + 24);

  _Block_object_dispose(&v12, 8);
  return v6;
}

void sub_10009EE08( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

id sub_10009EE20(uint64_t a1, sqlite3_stmt *a2)
{
  double v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) appAdamId]);
  sqlite3_bind_int64(a2, 1, (sqlite3_int64)[v4 longLongValue]);

  id v5 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) adNetworkId]);
  sqlite3_bind_text(a2, 2, (const char *)[v5 UTF8String], -1, 0);

  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) campaignId]);
  sqlite3_bind_int64(a2, 3, (sqlite3_int64)[v6 longLongValue]);

  id v7 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) transactionId]);
  sqlite3_bind_text(a2, 4, (const char *)[v7 UTF8String], -1, 0);

  id v8 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) attributionSignature]);
  sqlite3_bind_text(a2, 5, (const char *)[v8 UTF8String], -1, 0);

  id v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) pingbackUrl]);
  id v10 = objc_claimAutoreleasedReturnValue([v9 absoluteString]);
  sqlite3_bind_text(a2, 6, (const char *)[v10 UTF8String], -1, 0);

  sqlite3_bind_int64(a2, 7, 0LL);
  sqlite3_bind_int64(a2, 8, (sqlite3_int64)[*(id *)(a1 + 32) retryCount]);
  id v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) localTimestamp]);
  sqlite3_bind_int64(a2, 9, (sqlite3_int64)[v11 longLongValue]);

  id result = [*(id *)(a1 + 40) statementDidFinishAfterStepping:a2];
  *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = (_BYTE)result;
  return result;
}

uint64_t sub_10009F1F0(uint64_t a1, void *a2)
{
  id v3 = a2;
  double v4 = (void *)objc_claimAutoreleasedReturnValue([v3 database]);
  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"SELECT * FROM install_attribution_pingback_table WHERE app_adam_id = ?;"));
  v17[0] = 0LL;
  v17[1] = v17;
  v17[2] = 0x3032000000LL;
  v17[3] = sub_10009CE00;
  v17[4] = sub_10009CE10;
  id v18 = 0LL;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472LL;
  v13[2] = sub_10009F384;
  v13[3] = &unk_10034D230;
  id v14 = *(id *)(a1 + 32);
  id v6 = v4;
  id v15 = v6;
  uint64_t v16 = v17;
  [v6 prepareStatementForSQL:v5 cache:1 usingBlock:v13];
  dispatch_queue_global_t global_queue = dispatch_get_global_queue(0LL, 0LL);
  id v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_10009F5B0;
  block[3] = &unk_10034D258;
  id v11 = *(id *)(a1 + 40);
  uint64_t v12 = v17;
  dispatch_async(v8, block);

  _Block_object_dispose(v17, 8);
  return 1LL;
}

void sub_10009F36C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
}

id sub_10009F384(uint64_t a1, sqlite3_stmt *a2)
{
  uint64_t v3 = a1;
  sqlite3_bind_int64(a2, 1, (sqlite3_int64)[*(id *)(a1 + 32) longLongValue]);
  id result = [*(id *)(v3 + 40) statementHasRowAfterStepping:a2];
  if ((_DWORD)result)
  {
    do
    {
      id v5 = objc_alloc_init(&OBJC_CLASS___InstallAttributionPingback);
      uint64_t v6 = *(void *)(*(void *)(v3 + 48) + 8LL);
      id v7 = *(void **)(v6 + 40);
      *(void *)(v6 + 40) = v5;

      id v8 = +[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", sqlite3_column_int64(a2, 0));
      id v29 = (void *)objc_claimAutoreleasedReturnValue(v8);
      id v9 = +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  sqlite3_column_text(a2, 1));
      id v28 = (void *)objc_claimAutoreleasedReturnValue(v9);
      id v10 = +[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", sqlite3_column_int64(a2, 2));
      id v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
      uint64_t v12 = +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  sqlite3_column_text(a2, 3));
      id v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
      id v14 = +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  sqlite3_column_text(a2, 4));
      id v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
      uint64_t v16 = +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  sqlite3_column_text(a2, 5));
      uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
      sqlite3_int64 v18 = sqlite3_column_int64(a2, 7);
      char v19 = +[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", sqlite3_column_int64(a2, 8));
      char v20 = (void *)objc_claimAutoreleasedReturnValue(v19);
      uint64_t v21 = v3;
      id v22 = objc_alloc(&OBJC_CLASS___InstallAttributionPingback);
      id v23 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL URLWithString:](&OBJC_CLASS___NSURL, "URLWithString:", v17));
      unsigned int v24 = v22;
      uint64_t v3 = v21;
      uint64_t v25 = -[InstallAttributionPingback initWithAppAdamId:transactionId:campaignId:adNetworkId:attributionSignature:pingbackUrl:retryCount:localTimestamp:]( v24,  "initWithAppAdamId:transactionId:campaignId:adNetworkId:attributionSignature:pingbackUrl:retryCount:localTimestamp:",  v29,  v13,  v11,  v28,  v15,  v23,  v18,  v20);
      uint64_t v26 = *(void *)(*(void *)(v21 + 48) + 8LL);
      uint64_t v27 = *(void **)(v26 + 40);
      *(void *)(v26 + 40) = v25;

      id result = [*(id *)(v21 + 40) statementHasRowAfterStepping:a2];
    }

    while ((result & 1) != 0);
  }

  return result;
}

uint64_t sub_10009F5B0(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))( result,  *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL));
  }
  return result;
}

uint64_t sub_10009F7A8(uint64_t a1, void *a2)
{
  id v3 = a2;
  double v4 = (void *)objc_claimAutoreleasedReturnValue([v3 database]);
  uint64_t v12 = 0LL;
  id v13 = &v12;
  uint64_t v14 = 0x2020000000LL;
  char v15 = 0;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  void v8[2] = sub_10009F8A4;
  v8[3] = &unk_10034D1E0;
  id v9 = *(id *)(a1 + 32);
  id v11 = &v12;
  id v5 = v4;
  id v10 = v5;
  objc_msgSend( v5,  "prepareStatementForSQL:cache:usingBlock:",  @"UPDATE install_attribution_pingback_table SET pending = 1 WHERE app_adam_id = ?;",
    0LL,
    v8);
  uint64_t v6 = *((unsigned __int8 *)v13 + 24);

  _Block_object_dispose(&v12, 8);
  return v6;
}

void sub_10009F88C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

id sub_10009F8A4(uint64_t a1, sqlite3_stmt *a2)
{
  id result = [*(id *)(a1 + 40) statementDidFinishAfterStepping:a2];
  *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = (_BYTE)result;
  return result;
}

uint64_t sub_10009F96C(uint64_t a1, void *a2)
{
  id v3 = a2;
  double v4 = (void *)objc_claimAutoreleasedReturnValue([v3 database]);
  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"SELECT * FROM install_attribution_pingback_table WHERE pending = 1;"));
  v16[0] = 0LL;
  v16[1] = v16;
  v16[2] = 0x3032000000LL;
  v16[3] = sub_10009CE00;
  v16[4] = sub_10009CE10;
  uint64_t v17 = objc_opt_new(&OBJC_CLASS___NSMutableArray);
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472LL;
  v13[2] = sub_10009FAF8;
  v13[3] = &unk_10034D348;
  id v6 = v4;
  id v14 = v6;
  char v15 = v16;
  [v6 prepareStatementForSQL:v5 cache:1 usingBlock:v13];
  dispatch_queue_global_t global_queue = dispatch_get_global_queue(0LL, 0LL);
  id v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  v10[2] = sub_10009FD0C;
  v10[3] = &unk_10034D258;
  id v11 = *(id *)(a1 + 32);
  uint64_t v12 = v16;
  dispatch_async(v8, v10);

  _Block_object_dispose(v16, 8);
  return 1LL;
}

void sub_10009FAE0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
}

id sub_10009FAF8(uint64_t a1, sqlite3_stmt *a2)
{
  id result = [*(id *)(a1 + 32) statementHasRowAfterStepping:a2];
  if ((_DWORD)result)
  {
    do
    {
      double v4 = +[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", sqlite3_column_int64(a2, 0));
      id v22 = (void *)objc_claimAutoreleasedReturnValue(v4);
      id v5 = +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  sqlite3_column_text(a2, 1));
      id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
      id v7 = +[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", sqlite3_column_int64(a2, 2));
      id v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
      id v9 = +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  sqlite3_column_text(a2, 3));
      id v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
      id v11 = +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  sqlite3_column_text(a2, 4));
      uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue(v11);
      uint64_t v12 = +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  sqlite3_column_text(a2, 5));
      id v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
      sqlite3_int64 v14 = sqlite3_column_int64(a2, 7);
      char v15 = +[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", sqlite3_column_int64(a2, 8));
      uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
      uint64_t v17 = objc_alloc(&OBJC_CLASS___InstallAttributionPingback);
      sqlite3_int64 v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL URLWithString:](&OBJC_CLASS___NSURL, "URLWithString:", v13));
      char v19 = -[InstallAttributionPingback initWithAppAdamId:transactionId:campaignId:adNetworkId:attributionSignature:pingbackUrl:retryCount:localTimestamp:]( v17,  "initWithAppAdamId:transactionId:campaignId:adNetworkId:attributionSignature:pingbackUrl:retryCount:localTimestamp:",  v22,  v10,  v8,  v6,  v21,  v18,  v14,  v16);

      if (v19) {
        [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) addObject:v19];
      }

      id result = [*(id *)(a1 + 32) statementHasRowAfterStepping:a2];
    }

    while ((result & 1) != 0);
  }

  return result;
}

uint64_t sub_10009FD0C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))( result,  *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL));
  }
  return result;
}

uint64_t sub_10009FF04(uint64_t a1, void *a2)
{
  id v3 = a2;
  double v4 = (void *)objc_claimAutoreleasedReturnValue([v3 database]);
  uint64_t v12 = 0LL;
  id v13 = &v12;
  uint64_t v14 = 0x2020000000LL;
  char v15 = 0;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  void v8[2] = sub_1000A0000;
  v8[3] = &unk_10034D1E0;
  id v9 = *(id *)(a1 + 32);
  id v11 = &v12;
  id v5 = v4;
  id v10 = v5;
  objc_msgSend( v5,  "prepareStatementForSQL:cache:usingBlock:",  @"DELETE FROM install_attribution_pingback_table WHERE app_adam_id = ?;",
    0LL,
    v8);
  uint64_t v6 = *((unsigned __int8 *)v13 + 24);

  _Block_object_dispose(&v12, 8);
  return v6;
}

void sub_10009FFE8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

id sub_1000A0000(uint64_t a1, sqlite3_stmt *a2)
{
  id result = [*(id *)(a1 + 40) statementDidFinishAfterStepping:a2];
  *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = (_BYTE)result;
  return result;
}

uint64_t sub_1000A0224(uint64_t a1, void *a2)
{
  id v3 = a2;
  double v4 = (void *)objc_claimAutoreleasedReturnValue([v3 database]);
  uint64_t v12 = 0LL;
  id v13 = &v12;
  uint64_t v14 = 0x2020000000LL;
  char v15 = 0;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  void v8[2] = sub_1000A0320;
  v8[3] = &unk_10034D1E0;
  id v9 = *(id *)(a1 + 32);
  id v11 = &v12;
  id v5 = v4;
  id v10 = v5;
  objc_msgSend( v5,  "prepareStatementForSQL:cache:usingBlock:",  @"DELETE FROM install_attribution_pingback_table WHERE local_timestamp < ? AND pending = 0;",
    0LL,
    v8);
  uint64_t v6 = *((unsigned __int8 *)v13 + 24);

  _Block_object_dispose(&v12, 8);
  return v6;
}

void sub_1000A0308( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

id sub_1000A0320(uint64_t a1, sqlite3_stmt *a2)
{
  id result = [*(id *)(a1 + 40) statementDidFinishAfterStepping:a2];
  *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = (_BYTE)result;
  return result;
}

uint64_t sub_1000A0550(uint64_t a1, void *a2)
{
  id v3 = a2;
  double v4 = (void *)objc_claimAutoreleasedReturnValue([v3 database]);
  uint64_t v12 = 0LL;
  id v13 = &v12;
  uint64_t v14 = 0x2020000000LL;
  char v15 = 0;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  void v8[2] = sub_1000A064C;
  v8[3] = &unk_10034D1E0;
  id v9 = *(id *)(a1 + 32);
  id v11 = &v12;
  id v5 = v4;
  id v10 = v5;
  objc_msgSend( v5,  "prepareStatementForSQL:cache:usingBlock:",  @"UPDATE install_attribution_pingback_table SET retry_count = retry_count + 1 WHERE app_adam_id = ?;",
    0LL,
    v8);
  uint64_t v6 = *((unsigned __int8 *)v13 + 24);

  _Block_object_dispose(&v12, 8);
  return v6;
}

void sub_1000A0634( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

id sub_1000A064C(uint64_t a1, sqlite3_stmt *a2)
{
  id result = [*(id *)(a1 + 40) statementDidFinishAfterStepping:a2];
  *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = (_BYTE)result;
  return result;
}

void sub_1000A0740( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_1000A0758(uint64_t a1)
{
  *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = +[PurchaseActionsDatabaseSchema createOrUpdateSchemaInDatabase:]( &OBJC_CLASS___PurchaseActionsDatabaseSchema,  "createOrUpdateSchemaInDatabase:",  *(void *)(a1 + 32));
  return *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL);
}

void sub_1000A1198(_Unwind_Exception *a1)
{
}

void sub_1000A11C8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  id v3 = objc_loadWeakRetained((id *)(a1 + 64));
  unsigned int v4 = [v3 success];

  if (v4)
  {
    id v5 = &ACSLocateCachingServer_ptr;
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(+[SSAccountStore defaultStore](&OBJC_CLASS___SSAccountStore, "defaultStore"));
    id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 accountWithUniqueIdentifier:*(void *)(a1 + 32)]);

    [v7 setFreeDownloadsPasswordSetting:*(void *)(a1 + 72)];
    [v7 setPaidPurchasesPasswordSetting:*(void *)(a1 + 80)];
    id v8 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedAccountsConfig](&OBJC_CLASS___SSLogConfig, "sharedAccountsConfig"));
    if (!v8) {
      id v8 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v9 = [v8 shouldLog];
    else {
      unsigned int v10 = v9;
    }
    id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue([v8 OSLogObject]);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v12 = v10;
    }
    else {
      uint64_t v12 = v10 & 2;
    }
    if ((_DWORD)v12)
    {
      id v13 = WeakRetained;
      uint64_t v14 = (void *)objc_opt_class(WeakRetained);
      id v25 = v14;
      char v15 = (void *)objc_claimAutoreleasedReturnValue([v7 accountName]);
      uint64_t v16 = SSHashIfNeeded(v15);
      uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
      int v26 = 138543618;
      uint64_t v27 = v14;
      id WeakRetained = v13;
      id v5 = &ACSLocateCachingServer_ptr;
      __int16 v28 = 2114;
      id v29 = v17;
      sqlite3_int64 v18 = (void *)_os_log_send_and_compose_impl( v12,  0LL,  0LL,  0LL,  &_mh_execute_header,  v11,  0LL,  "%{public}@: Setting an account's password settings. Saving %{public}@.",  &v26,  22);

      if (v18)
      {
        char v19 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v18,  4LL));
        free(v18);
        SSFileLog(v8, @"%@");
      }
    }

    else
    {
    }

    char v20 = (void *)objc_claimAutoreleasedReturnValue([v5[425] defaultStore]);
    [v20 saveAccount:v7 verifyCredentials:0 completion:0];
  }

  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 40));
  id v22 = objc_loadWeakRetained((id *)(a1 + 64));
  SSXPCDictionarySetCFObject( reply,  "1",  +[NSNumber numberWithBool:](NSNumber, "numberWithBool:", [v22 success]));

  id v23 = objc_loadWeakRetained((id *)(a1 + 64));
  SSXPCDictionarySetCFObject(reply, "2", [v23 error]);

  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 48), reply);
  unsigned int v24 = (void *)objc_claimAutoreleasedReturnValue(+[Daemon daemon](&OBJC_CLASS___Daemon, "daemon"));
  [v24 releaseKeepAliveAssertion:@"com.apple.itunesstored.AccountPasswordSettings"];
}

LABEL_60:
LABEL_61:
LABEL_62:

  return v4;
}
}

  __int128 v51 = v86;
  id obj = v86[5];
  int v52 = -[RedeemCodesProtocolDataProvider runSubOperation:error:]( self,  "runSubOperation:error:",  v5,  &obj,  v58);
  objc_storeStrong(v51 + 5, obj);
  *((_BYTE *)v82 + 24) = v52;
  if (v52) {
    goto LABEL_61;
  }
LABEL_49:
  __int128 v41 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig", v58));
  if (!v41) {
    __int128 v41 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  id v42 = [v41 shouldLog];
  int v43 = [v41 shouldLogToDisk];
  __int128 v44 = (os_log_s *)objc_claimAutoreleasedReturnValue([v41 OSLogObject]);
  char v45 = v44;
  if (v43) {
    v42 |= 2u;
  }
  if (os_log_type_enabled(v44, OS_LOG_TYPE_DEFAULT)) {
    __int128 v46 = v42;
  }
  else {
    __int128 v46 = v42 & 2;
  }
  if (!(_DWORD)v46) {
    goto LABEL_59;
  }
  int v47 = (void *)objc_opt_class(self);
  __int128 v48 = v86[5];
  v91 = 138543618;
  v92 = v47;
  v93 = 2114;
  v94 = v48;
  __int16 v49 = v47;
  LODWORD(v59) = 22;
  id v50 = (void *)_os_log_send_and_compose_impl( v46,  0LL,  0LL,  0LL,  &_mh_execute_header,  v45,  0LL,  "%{public}@: Server-driven authentication failed with error: %{public}@",  &v91,  v59);

  if (v50)
  {
    char v45 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v50,  4LL));
    free(v50);
    SSFileLog(v41, @"%@");
LABEL_59:
  }

void sub_1000A2AD0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

uint64_t sub_1000A2AF8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1000A2B08(uint64_t a1)
{
}

void sub_1000A2B10(void *a1, void *a2)
{
  if (a2)
  {
    id v3 = (void *)a1[4];
    id v4 = a2;
    id v5 = (void *)objc_claimAutoreleasedReturnValue([v3 buttons]);
    id v6 = [v4 selectedButtonIndex];

    uint64_t v7 = objc_claimAutoreleasedReturnValue([v5 objectAtIndex:v6]);
    uint64_t v8 = *(void *)(a1[5] + 8LL);
    uint64_t v9 = *(void **)(v8 + 40);
    *(void *)(v8 + 40) = v7;

    *(_BYTE *)(*(void *)(a1[6] + 8LL) + 24LL) = 1;
  }

id sub_1000A3CF4(void *a1, void *a2, id *a3)
{
  id v6 = objc_alloc_init(&OBJC_CLASS___NSAutoreleasePool);
  if (*a3)
  {
    uint64_t v7 = -[DownloadEntity initWithPersistentID:inDatabase:]( [DownloadEntity alloc],  "initWithPersistentID:inDatabase:",  [*a3 longLongValue],  a1[4]);
    if ((objc_msgSend( -[DownloadEntity valueForProperty:](v7, "valueForProperty:", @"client_id"),  "isEqualToString:",  a1[5]) & 1) == 0)
    {
      uint64_t v8 = -[PersistentDownloadEntity initWithPersistentID:inDatabase:]( objc_alloc(&OBJC_CLASS___PersistentDownloadEntity),  "initWithPersistentID:inDatabase:",  a2,  a1[4]);
      -[PersistentDownloadEntity deleteFromDatabase](v8, "deleteFromDatabase");
      id v9 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
      if (!v9) {
        id v9 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
      }
      unsigned int v10 = [v9 shouldLog];
      else {
        LODWORD(v11) = v10;
      }
      uint64_t v12 = (os_log_s *)[v9 OSLogObject];
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT)) {
        uint64_t v11 = v11;
      }
      else {
        v11 &= 2u;
      }
      if ((_DWORD)v11)
      {
        uint64_t v13 = objc_opt_class(a1[6]);
        id v14 = *a3;
        uint64_t v15 = a1[5];
        int v32 = 138413058;
        uint64_t v33 = v13;
        __int16 v34 = 2048;
        id v35 = a2;
        __int16 v36 = 2112;
        id v37 = v14;
        __int16 v38 = 2112;
        uint64_t v39 = v15;
        uint64_t v16 = _os_log_send_and_compose_impl( v11,  0LL,  0LL,  0LL,  &_mh_execute_header,  v12,  0LL,  "%@: Pruned orphaned persistent download [%lld, %@, %@]",  &v32,  42);
        if (v16)
        {
          uint64_t v17 = (void *)v16;
          sqlite3_int64 v18 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v16, 4LL);
          free(v17);
          id v29 = v18;
          SSFileLog(v9, @"%@");
        }
      }

      if (!+[PersistentDownloadEntity anyInDatabase:predicate:]( &OBJC_CLASS___PersistentDownloadEntity,  "anyInDatabase:predicate:",  a1[4],  +[SSSQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SSSQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"download_id",  *a3,  v29)))
      {
        id v19 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
        if (!v19) {
          id v19 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
        }
        unsigned int v20 = [v19 shouldLog];
        else {
          LODWORD(v21) = v20;
        }
        id v22 = (os_log_s *)[v19 OSLogObject];
        if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT)) {
          uint64_t v21 = v21;
        }
        else {
          v21 &= 2u;
        }
        if ((_DWORD)v21)
        {
          uint64_t v23 = objc_opt_class(a1[6]);
          id v24 = *a3;
          int v32 = 138412546;
          uint64_t v33 = v23;
          __int16 v34 = 2112;
          id v35 = v24;
          LODWORD(v31) = 22;
          uint64_t v25 = _os_log_send_and_compose_impl( v21,  0LL,  0LL,  0LL,  &_mh_execute_header,  v22,  0LL,  "%@: Pruned orphaned download: %@",  &v32,  v31);
          if (v25)
          {
            int v26 = (void *)v25;
            uint64_t v27 = +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v25,  4LL);
            free(v26);
            uint64_t v30 = v27;
            SSFileLog(v19, @"%@");
          }
        }

        -[DownloadEntity deleteFromDatabase](v7, "deleteFromDatabase", v30);
      }
    }
  }

  return -[NSAutoreleasePool drain](v6, "drain");
}

void sub_1000A4230(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  id v2 = (void *)qword_1003A3330;
  qword_1003A3330 = (uint64_t)v1;
}

void sub_1000A4870(uint64_t a1, BOOL a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  id v10 = xpc_dictionary_create(0LL, 0LL, 0LL);
  xpc_dictionary_set_BOOL(v10, "1", a2);
  SSXPCDictionarySetObject(v10, "2", v7);

  SSXPCDictionarySetObject(v10, "3", v8);
  id v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) outputConnection]);
  [v9 sendMessage:v10];
}

void sub_1000A4928(uint64_t a1, BOOL a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  id v10 = xpc_dictionary_create(0LL, 0LL, 0LL);
  xpc_dictionary_set_BOOL(v10, "1", a2);
  SSXPCDictionarySetObject(v10, "2", v7);

  SSXPCDictionarySetObject(v10, "3", v8);
  id v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) outputConnection]);
  [v9 sendMessage:v10];
}

void sub_1000A4CA4(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v4 = (id)objc_claimAutoreleasedReturnValue([v2 error]);
  SSXPCDictionarySetObject(v3, "0", v4);
}

void sub_1000A4FF0(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  xpc_dictionary_set_int64(v4, "0", (int64_t)[v3 matchStatus]);
  id v5 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) error]);
  SSXPCDictionarySetObject(v4, "1", v5);
}

void sub_1000A5400( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
}

void sub_1000A5428(id *a1, void *a2, BOOL a3, void *a4)
{
  id v7 = a4;
  id v8 = a2;
  xpc_object_t xdict = xpc_dictionary_create(0LL, 0LL, 0LL);
  SSXPCDictionarySetObject(xdict, "2", v7);

  xpc_dictionary_set_BOOL(xdict, "3", a3);
  SSXPCDictionarySetObject(xdict, "4", v8);

  id v9 = (void *)objc_claimAutoreleasedReturnValue([a1[4] outputConnection]);
  [v9 sendMessage:xdict];

  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  if (WeakRetained && a3) {
    [a1[5] _dequeueSubscriptionStatusOperation:WeakRetained];
  }
}

void sub_1000A58E8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
}

void sub_1000A5910(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    xpc_object_t v3 = xpc_dictionary_create(0LL, 0LL, 0LL);
    xpc_dictionary_set_int64(v3, "0", 1011LL);
    xpc_dictionary_set_BOOL(v3, "1", (BOOL)[WeakRetained success]);
    id v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained error]);
    SSXPCDictionarySetObject(v3, "2", v4);

    id v5 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained downloads]);
    id v6 = objc_opt_new(&OBJC_CLASS___NSMutableArray);
    __int128 v19 = 0u;
    __int128 v20 = 0u;
    __int128 v21 = 0u;
    __int128 v22 = 0u;
    id v7 = v5;
    id v8 = [v7 countByEnumeratingWithState:&v19 objects:v25 count:16];
    if (v8)
    {
      id v9 = v8;
      uint64_t v10 = *(void *)v20;
      do
      {
        uint64_t v11 = 0LL;
        do
        {
          if (*(void *)v20 != v10) {
            objc_enumerationMutation(v7);
          }
          uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*((void *)&v19 + 1) + 8 * (void)v11), "dictionary", (void)v19));
          id v13 = [v12 copy];

          -[NSMutableArray addObject:](v6, "addObject:", v13);
          uint64_t v11 = (char *)v11 + 1;
        }

        while (v9 != v11);
        id v9 = [v7 countByEnumeratingWithState:&v19 objects:v25 count:16];
      }

      while (v9);
    }

    v23[0] = @"result";
    unsigned int v14 = [WeakRetained success];
    uint64_t v15 = &__kCFBooleanFalse;
    if (v14) {
      uint64_t v15 = &__kCFBooleanTrue;
    }
    v24[0] = v15;
    v23[1] = @"count";
    uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInteger:]( NSNumber,  "numberWithInteger:",  objc_msgSend(v7, "count", (void)v19)));
    v23[2] = @"downloads";
    v24[1] = v16;
    void v24[2] = v6;
    uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v24,  v23,  3LL));

    SSXPCDictionarySetObject(v3, "5", v17);
    sqlite3_int64 v18 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) outputConnection]);
    [v18 sendMessage:v3];

    [WeakRetained setCompletionBlock:0];
  }
}

void sub_1000A6078( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, id location)
{
}

void sub_1000A60A0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    id v6 = WeakRetained;
    xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 32));
    id v4 = reply;
    if (reply)
    {
      xpc_dictionary_set_int64(reply, "0", 1011LL);
      xpc_dictionary_set_BOOL(v4, "1", (BOOL)[v6 success]);
      id v5 = (void *)objc_claimAutoreleasedReturnValue([v6 error]);
      SSXPCDictionarySetObject(v4, "2", v5);

      xpc_connection_send_message(*(xpc_connection_t *)(a1 + 40), v4);
    }

    [*(id *)(a1 + 48) setClient:0 forOperation:v6];

    id WeakRetained = v6;
  }
}

void sub_1000A64E4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, id location)
{
}

void sub_1000A650C(id *a1, void *a2, void *a3)
{
  id v9 = a2;
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  if (WeakRetained)
  {
    xpc_object_t v7 = xpc_dictionary_create(0LL, 0LL, 0LL);
    SSXPCDictionarySetObject(v7, "2", v5);
    SSXPCDictionarySetObject(v7, "3", v9);
    id v8 = (void *)objc_claimAutoreleasedReturnValue([a1[4] outputConnection]);
    [v8 sendMessage:v7];

    [a1[5] setClient:0 forOperation:WeakRetained];
  }
}

void sub_1000A68EC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
}

void sub_1000A6914(uint64_t a1, void *a2, void *a3)
{
  id v8 = a2;
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 32));
    SSXPCDictionarySetObject(reply, "2", v5);
    SSXPCDictionarySetObject(reply, "3", v8);
    xpc_connection_send_message(*(xpc_connection_t *)(a1 + 40), reply);
    [*(id *)(a1 + 48) setClient:0 forOperation:WeakRetained];
  }
}

void sub_1000A6F2C(uint64_t a1, int a2, void *a3, uint64_t a4, void *a5)
{
  LODWORD(v7) = a2;
  id v9 = a3;
  id v10 = a5;
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v11) {
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v12 = [v11 shouldLog];
  else {
    unsigned int v13 = v12;
  }
  unsigned int v14 = (os_log_s *)objc_claimAutoreleasedReturnValue([v11 OSLogObject]);
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v15 = v13;
  }
  else {
    uint64_t v15 = v13 & 2;
  }
  if ((_DWORD)v15)
  {
    BOOL v16 = v7;
    BOOL v7 = (BOOL)v9;
    uint64_t v17 = a4;
    sqlite3_int64 v18 = (void *)objc_opt_class(*(void *)(a1 + 32));
    uint64_t v19 = a1;
    __int128 v20 = *(void **)(a1 + 40);
    id v28 = v18;
    __int128 v21 = (void *)objc_claimAutoreleasedReturnValue([v20 itemIdentifier]);
    int v29 = 138413058;
    uint64_t v30 = v18;
    a4 = v17;
    id v9 = (id)v7;
    LOBYTE(v7) = v16;
    __int16 v31 = 2112;
    int v32 = v21;
    __int16 v33 = 1024;
    BOOL v34 = v16;
    __int16 v35 = 2048;
    uint64_t v36 = a4;
    __int128 v22 = (void *)_os_log_send_and_compose_impl( v15,  0LL,  0LL,  0LL,  &_mh_execute_header,  v14,  0LL,  "%@: App Store daemon responded to managed application request for itemID: %@ result: %d changeType: %ld",  &v29,  38);

    a1 = v19;
    if (v22)
    {
      uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v22,  4LL));
      free(v22);
      uint64_t v27 = v23;
      SSFileLog(v11, @"%@");
    }
  }

  else
  {
  }

  xpc_object_t v24 = xpc_dictionary_create(0LL, 0LL, 0LL);
  xpc_dictionary_set_int64(v24, "0", 1011LL);
  xpc_dictionary_set_BOOL(v24, "1", v7);
  SSXPCDictionarySetObject(v24, "2", v10);

  if (*(_BYTE *)(a1 + 56))
  {
    uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", a4));
    SSXPCDictionarySetObject(v24, "3", v25);

    SSXPCDictionarySetObject(v24, "5", v9);
  }

  int v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "outputConnection", v27));
  [v26 sendMessage:v24];
}

void sub_1000A74B0(uint64_t a1, void *a2)
{
  xpc_object_t v3 = *(void **)(a1 + 32);
  id v4 = a2;
  xpc_dictionary_set_BOOL(v4, "1", (BOOL)[v3 success]);
  id v5 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) error]);
  SSXPCDictionarySetObject(v4, "2", v5);
}

void sub_1000A7848(uint64_t a1, void *a2)
{
  xpc_object_t xdict = a2;
  unsigned __int8 v3 = [*(id *)(a1 + 32) success];
  id v4 = *(void **)(a1 + 32);
  if ((v3 & 1) != 0)
  {
    id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 URLBag]);
    id v6 = v5;
    if (v5)
    {
      BOOL v7 = (void *)objc_claimAutoreleasedReturnValue([v5 URLBagDictionary]);
      SSXPCDictionarySetObject(xdict, "0", v7);

      [v6 invalidationTime];
      xpc_dictionary_set_double(xdict, "1", v8);
      id v9 = (void *)objc_claimAutoreleasedReturnValue([v6 storeFrontIdentifier]);
      SSXPCDictionarySetObject(xdict, "3", v9);
    }
  }

  else
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 error]);
    SSXPCDictionarySetObject(xdict, "2", v6);
  }
}

void sub_1000A7CAC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
}

void sub_1000A7CD4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v13 = WeakRetained;
    xpc_object_t v3 = xpc_dictionary_create(0LL, 0LL, 0LL);
    xpc_dictionary_set_int64(v3, "0", 1011LL);
    if ([v13 success])
    {
      id v4 = objc_alloc(&OBJC_CLASS___SSProtocolConditionalEvaluator);
      id v5 = (void *)objc_claimAutoreleasedReturnValue([v13 dataProvider]);
      id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 output]);
      id v7 = [v4 initWithDictionary:v6];

      double v8 = (void *)objc_claimAutoreleasedReturnValue([v7 dictionaryByEvaluatingConditions]);
      SSXPCDictionarySetObject(v3, "1", v8);

      id v9 = (void *)objc_claimAutoreleasedReturnValue([v13 response]);
      id v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "itunes_expirationDate"));

      if (v10) {
        SSXPCDictionarySetObject(v3, "2", v10);
      }
    }

    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v13 error]);
    SSXPCDictionarySetObject(v3, "3", v11);

    unsigned int v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) outputConnection]);
    [v12 sendMessage:v3];

    [v13 setCompletionBlock:0];
    id WeakRetained = v13;
  }
}

void sub_1000A8230(uint64_t a1, void *a2)
{
  xpc_object_t v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v3 lookupResponse]);
  SSXPCDictionarySetObject(v4, "1", v5);

  id v6 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) error]);
  SSXPCDictionarySetObject(v4, "2", v6);
}

void sub_1000A8748( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
}

void sub_1000A876C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v4) {
    id v4 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v5 = [v4 shouldLog];
  else {
    LODWORD(v6) = v5;
  }
  id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue([v4 OSLogObject]);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO)) {
    uint64_t v6 = v6;
  }
  else {
    v6 &= 2u;
  }
  if (!(_DWORD)v6) {
    goto LABEL_12;
  }
  double v8 = (void *)objc_opt_class(*(void *)(a1 + 48));
  int v11 = 138412546;
  unsigned int v12 = v8;
  __int16 v13 = 2112;
  id v14 = v3;
  id v9 = v8;
  id v10 = (void *)_os_log_send_and_compose_impl( v6,  0LL,  0LL,  0LL,  &_mh_execute_header,  v7,  1LL,  "[%@]: AppStore Migrator scheduled: %@",  &v11,  22);

  if (v10)
  {
    id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v10,  4LL));
    free(v10);
    SSFileLog(v4, @"%@");
LABEL_12:
  }

  *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = v3 == 0LL;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1000A8EF4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
}

void sub_1000A8F1C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v7 = WeakRetained;
    xpc_object_t v3 = xpc_dictionary_create(0LL, 0LL, 0LL);
    xpc_dictionary_set_int64(v3, "0", 1011LL);
    xpc_dictionary_set_BOOL(v3, "1", (BOOL)[v7 success]);
    id v4 = (void *)objc_claimAutoreleasedReturnValue([v7 error]);
    SSXPCDictionarySetObject(v3, "2", v4);

    unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue([v7 rentalInformation]);
    if (v5) {
      SSXPCDictionarySetObject(v3, "5", v5);
    }
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) outputConnection]);
    [v6 sendMessage:v3];

    [v7 setCompletionBlock:0];
    id WeakRetained = v7;
  }
}

void sub_1000A9440(uint64_t a1, int a2, void *a3, void *a4)
{
  LODWORD(v5) = a2;
  id v7 = a3;
  id v8 = a4;
  id v9 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v9) {
    id v9 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v10 = [v9 shouldLog];
  else {
    unsigned int v11 = v10;
  }
  unsigned int v12 = (os_log_s *)objc_claimAutoreleasedReturnValue([v9 OSLogObject]);
  if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO)) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v11 & 2;
  }
  if ((_DWORD)v13)
  {
    int v14 = (int)v5;
    unsigned int v5 = (void *)objc_opt_class(*(void *)(a1 + 48));
    uint64_t v15 = *(void **)(a1 + 32);
    uint64_t v23 = a1;
    id v16 = v5;
    uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v15 bundleID]);
    sqlite3_int64 v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "componentsJoinedByString:", @", "));
    int v24 = 138413058;
    uint64_t v25 = v5;
    LOBYTE(v5) = v14;
    __int16 v26 = 2112;
    uint64_t v27 = v17;
    __int16 v28 = 1024;
    int v29 = v14;
    __int16 v30 = 2112;
    __int16 v31 = v18;
    uint64_t v19 = (void *)_os_log_send_and_compose_impl( v13,  0LL,  0LL,  0LL,  &_mh_execute_header,  v12,  1LL,  "[%@]: Repair complete for bundleID: %@ result: %d changedBundleIdentifiers: [%@]",  &v24,  38);

    a1 = v23;
    if (v19)
    {
      __int128 v20 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v19,  4LL));
      free(v19);
      SSFileLog(v9, @"%@");
    }
  }

  else
  {
  }

  xpc_object_t v21 = xpc_dictionary_create(0LL, 0LL, 0LL);
  xpc_dictionary_set_BOOL(v21, "1", (BOOL)v5);
  SSXPCDictionarySetObject(v21, "2", v8);

  SSXPCDictionarySetObject(v21, "3", v7);
  __int128 v22 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) outputConnection]);
  [v22 sendMessage:v21];
}

void sub_1000A9B04(uint64_t a1, void *a2)
{
  xpc_object_t v3 = *(void **)(a1 + 32);
  id v4 = a2;
  unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue([v3 URLResponse]);
  SSXPCDictionarySetObject(v4, "1", v5);

  id v6 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) error]);
  SSXPCDictionarySetObject(v4, "2", v6);
}

uint64_t sub_1000A9F0C(uint64_t a1, int a2, xpc_object_t object)
{
  if (xpc_get_type(object) == (xpc_type_t)&_xpc_type_string)
  {
    id v4 = (void *)SSXPCCreateCFObjectFromXPCObject(*(void *)(a1 + 32));
    [*(id *)(a1 + 40) addObject:v4];
  }

  return 1LL;
}

void sub_1000AA254(uint64_t a1, void *a2)
{
  id v8 = a2;
  unsigned __int8 v3 = [*(id *)(a1 + 32) success];
  id v4 = *(void **)(a1 + 32);
  if ((v3 & 1) != 0)
  {
    unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue([v4 URLBag]);
    id v6 = v5;
    if (v5)
    {
      id v7 = (void *)objc_claimAutoreleasedReturnValue([v5 storeFrontIdentifier]);
      SSXPCDictionarySetObject(v8, "0", v7);
    }
  }

  else
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 error]);
    SSXPCDictionarySetObject(v8, "1", v6);
  }
}

void sub_1000AA6B8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, id location)
{
}

void sub_1000AA6E0(id *a1, void *a2)
{
  id v6 = a2;
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  if (WeakRetained)
  {
    xpc_object_t v4 = xpc_dictionary_create(0LL, 0LL, 0LL);
    SSXPCDictionarySetObject(v4, "3", v6);
    unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue([a1[4] outputConnection]);
    [v5 sendMessage:v4];

    [a1[5] setClient:0 forOperation:WeakRetained];
  }
}

void sub_1000AACD4(_Unwind_Exception *a1)
{
}

void sub_1000AACFC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    xpc_object_t v3 = xpc_dictionary_create(0LL, 0LL, 0LL);
    xpc_dictionary_set_int64(v3, "0", 1011LL);
    xpc_dictionary_set_BOOL(v3, "1", (BOOL)[WeakRetained success]);
    xpc_object_t v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained error]);
    SSXPCDictionarySetObject(v3, "2", v4);

    unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained dataProvider]);
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 output]);

    uint64_t v7 = objc_opt_class(&OBJC_CLASS___NSDictionary);
    if ((objc_opt_isKindOfClass(v6, v7) & 1) != 0)
    {
      SSXPCDictionarySetObject(v3, "3", v6);
LABEL_17:
      int v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "outputConnection", v15));
      [v14 sendMessage:v3];

      goto LABEL_18;
    }

    id v8 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v8) {
      id v8 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v9 = [v8 shouldLog];
    else {
      unsigned int v10 = v9;
    }
    unsigned int v11 = (os_log_s *)objc_claimAutoreleasedReturnValue([v8 OSLogObject]);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      uint64_t v12 = v10;
    }
    else {
      uint64_t v12 = v10 & 2;
    }
    if ((_DWORD)v12)
    {
      v16[0] = 0;
      uint64_t v13 = (void *)_os_log_send_and_compose_impl( v12,  0LL,  0LL,  0LL,  &_mh_execute_header,  v11,  16LL,  "NetworkRequestQueue: Silent enrollment failed to parse server response",  v16,  2);

      if (!v13)
      {
LABEL_16:

        goto LABEL_17;
      }

      unsigned int v11 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v13,  4LL));
      free(v13);
      uint64_t v15 = v11;
      SSFileLog(v8, @"%@");
    }

    goto LABEL_16;
  }

void sub_1000AB4BC(_Unwind_Exception *a1)
{
}

void sub_1000AB4E4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    xpc_object_t v3 = xpc_dictionary_create(0LL, 0LL, 0LL);
    xpc_dictionary_set_int64(v3, "0", 1011LL);
    xpc_dictionary_set_BOOL(v3, "1", (BOOL)[WeakRetained success]);
    xpc_object_t v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained error]);
    SSXPCDictionarySetObject(v3, "2", v4);

    unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained dataProvider]);
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 output]);

    uint64_t v7 = objc_opt_class(&OBJC_CLASS___NSDictionary);
    if ((objc_opt_isKindOfClass(v6, v7) & 1) != 0)
    {
      SSXPCDictionarySetObject(v3, "3", v6);
LABEL_17:
      int v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "outputConnection", v15));
      [v14 sendMessage:v3];

      goto LABEL_18;
    }

    id v8 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v8) {
      id v8 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v9 = [v8 shouldLog];
    else {
      unsigned int v10 = v9;
    }
    unsigned int v11 = (os_log_s *)objc_claimAutoreleasedReturnValue([v8 OSLogObject]);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      uint64_t v12 = v10;
    }
    else {
      uint64_t v12 = v10 & 2;
    }
    if ((_DWORD)v12)
    {
      v16[0] = 0;
      uint64_t v13 = (void *)_os_log_send_and_compose_impl( v12,  0LL,  0LL,  0LL,  &_mh_execute_header,  v11,  16LL,  "NetworkRequestQueue: Silent enrollment failed to parse server response",  v16,  2);

      if (!v13)
      {
LABEL_16:

        goto LABEL_17;
      }

      unsigned int v11 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v13,  4LL));
      free(v13);
      uint64_t v15 = v11;
      SSFileLog(v8, @"%@");
    }

    goto LABEL_16;
  }

void sub_1000AB990(uint64_t a1, void *a2, void *a3)
{
  id v9 = a3;
  id v5 = a2;
  xpc_object_t v6 = xpc_dictionary_create(0LL, 0LL, 0LL);
  id v7 = [v5 copyXPCEncoding];

  if (v7) {
    xpc_dictionary_set_value(v6, "1", v7);
  }
  SSXPCDictionarySetObject(v6, "2", v9);
  id v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) outputConnection]);
  [v8 sendMessage:v6];

  +[SSVSubscriptionStatusCoordinator endSuspendingSubscriptionStatusChangeNotifications]( &OBJC_CLASS___SSVSubscriptionStatusCoordinator,  "endSuspendingSubscriptionStatusChangeNotifications");
}

void sub_1000ABD7C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v10 = objc_alloc_init(&OBJC_CLASS___SSVServerAuthenticateResponse);
  xpc_object_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) authenticatedAccountDSID]);
  [v10 setAuthenticatedAccountIdentifier:v4];

  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) redirectURL]);
  [v10 setRedirectURL:v5];

  xpc_object_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) buttons]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) performedButton]);
  objc_msgSend(v10, "setPerformedButtonIndex:", objc_msgSend(v6, "indexOfObject:", v7));

  id v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) selectedButton]);
  objc_msgSend(v10, "setSelectedButtonIndex:", objc_msgSend(v6, "indexOfObject:", v8));

  SSXPCDictionarySetObject(v3, "1", v10);
  id v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) error]);
  SSXPCDictionarySetObject(v3, "2", v9);
}

void sub_1000AC608( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
}

void sub_1000AC630(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    xpc_object_t v2 = xpc_dictionary_create(0LL, 0LL, 0LL);
    xpc_dictionary_set_int64(v2, "0", 166LL);
    if ([WeakRetained success])
    {
      id v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained dataProvider]);
      xpc_object_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 output]);
      SSXPCDictionarySetObject(v2, "1", v4);
    }

    id v5 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained error]);
    SSXPCDictionarySetObject(v2, "2", v5);

    xpc_object_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) outputConnection]);
    [v6 sendMessage:v2];

    [WeakRetained setCompletionBlock:0];
  }
}

void sub_1000ACAD8(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  xpc_dictionary_set_BOOL(v4, "1", (BOOL)[v3 success]);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) error]);
  SSXPCDictionarySetObject(v4, "2", v5);

  id v6 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) response]);
  SSXPCDictionarySetObject(v4, "3", v6);
}

void sub_1000AD3FC(id *a1, void *a2, void *a3)
{
  id v7 = a2;
  id v5 = a3;
  if ([a1[4] length] || !objc_msgSend(v7, "isEqualToString:", @"action"))
  {
    if ([v7 isEqualToString:@"code"])
    {
      [a1[5] addObject:v5];
    }

    else if ([v7 isEqualToString:@"url"])
    {
      id v6 = -[NSURL initWithString:](objc_alloc(&OBJC_CLASS___NSURL), "initWithString:", v5);
      if (v6) {
        [a1[6] addObject:v6];
      }
    }
  }

  else
  {
    [a1[4] setString:v5];
  }
}

id sub_1000AD8EC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (*(void *)(v2 + 40))
  {
    id v3 = *(void **)(v2 + 48);
    if (!v3)
    {
      id v4 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
      uint64_t v5 = *(void *)(a1 + 32);
      id v6 = *(void **)(v5 + 48);
      *(void *)(v5 + 4_Block_object_dispose(va, 8) = v4;

      id v3 = *(void **)(*(void *)(a1 + 32) + 48LL);
    }

    return [v3 addObject:*(void *)(a1 + 48)];
  }

  else
  {
    objc_storeStrong((id *)(v2 + 40), *(id *)(a1 + 48));
    return [*(id *)(a1 + 32) addOperation:*(void *)(a1 + 48)];
  }

void sub_1000ADA04(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(v2 + 40);
  if (v3 != *(void **)(a1 + 40))
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v4) {
      id v4 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v5 = [v4 shouldLog];
    else {
      unsigned int v6 = v5;
    }
    id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue([v4 OSLogObject]);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      uint64_t v8 = v6;
    }
    else {
      uint64_t v8 = v6 & 2;
    }
    if ((_DWORD)v8)
    {
      uint64_t v9 = *(void *)(a1 + 40);
      uint64_t v10 = *(void *)(*(void *)(a1 + 32) + 40LL);
      int v15 = 138412546;
      uint64_t v16 = v9;
      __int16 v17 = 2112;
      uint64_t v18 = v10;
      unsigned int v11 = (void *)_os_log_send_and_compose_impl( v8,  0LL,  0LL,  0LL,  &_mh_execute_header,  v7,  16LL,  "ERROR: SubscriptionStatusOperation dequeued: %@ where currentSubscriptiontStatusOperation = %@",  &v15,  22);

      if (!v11)
      {
LABEL_14:

        uint64_t v2 = *(void *)(a1 + 32);
        id v3 = *(void **)(v2 + 40);
        goto LABEL_15;
      }

      id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v11,  4LL));
      free(v11);
      SSFileLog(v4, @"%@");
    }

    goto LABEL_14;
  }

void sub_1000AE054( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location, id a18)
{
}

void sub_1000AE08C(id *a1)
{
  id WeakRetained = objc_loadWeakRetained(a1 + 5);
  if (WeakRetained)
  {
    id v3 = objc_loadWeakRetained(a1 + 6);
    id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 authenticateResponse]);

    unsigned int v5 = (dispatch_queue_s *)WeakRetained[2];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1000AE15C;
    block[3] = &unk_10034BCE8;
    id v8 = a1[4];
    id v9 = v4;
    uint64_t v10 = WeakRetained;
    id v6 = v4;
    dispatch_async(v5, block);
  }
}

id sub_1000AE15C(uint64_t a1)
{
  return [*(id *)(a1 + 48) _finishResponse:*(void *)(a1 + 32)];
}

id sub_1000AE7E4(uint64_t a1)
{
  id result = objc_alloc_init((Class)objc_opt_class(*(void *)(a1 + 32)));
  qword_1003A3340 = (uint64_t)result;
  return result;
}

id sub_1000AE944(uint64_t a1)
{
  return [*(id *)(a1 + 32) _commitScheduledLibraryItems];
}

void sub_1000AEAA8(id a1)
{
  v1[0] = _NSConcreteStackBlock;
  v1[1] = 3221225472LL;
  v1[2] = sub_1000AEB04;
  v1[3] = &unk_10034D730;
  objc_msgSend( +[ML3MusicLibrary sharedLibrary](ML3MusicLibrary, "sharedLibrary"),  "performDatabaseTransactionWithBlock:",  v1);
}

id sub_1000AEB04(uint64_t a1)
{
  return objc_msgSend( +[ML3Track queryWithLibrary:predicate:]( ML3Track,  "queryWithLibrary:predicate:",  *(void *)(a1 + 32),  +[ML3ComparisonPredicate predicateWithProperty:equalToInteger:]( ML3ComparisonPredicate,  "predicateWithProperty:equalToInteger:",  ML3TrackPropertyIsOTAPurchased,  1)),  "deleteAllEntitiesFromLibrary");
}

id sub_1000AEBA4(uint64_t a1)
{
  id v2 = +[ML3MusicLibrary sharedLibrary](&OBJC_CLASS___ML3MusicLibrary, "sharedLibrary");
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_1000AEC1C;
  v4[3] = &unk_10034D758;
  __int128 v5 = *(_OWORD *)(a1 + 32);
  char v7 = *(_BYTE *)(a1 + 48);
  id v6 = v2;
  return [v2 performDatabaseTransactionWithBlock:v4];
}

uint64_t sub_1000AEC1C(uint64_t a1)
{
  __int128 v10 = 0u;
  __int128 v11 = 0u;
  __int128 v12 = 0u;
  __int128 v13 = 0u;
  id v2 = *(void **)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v11;
    do
    {
      for (unint64_t i = 0LL; i != v4; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v11 != v5) {
          objc_enumerationMutation(v2);
        }
        char v7 = *(void **)(*((void *)&v10 + 1) + 8LL * (void)i);
        id v8 = objc_autoreleasePoolPush();
        objc_msgSend( *(id *)(a1 + 40),  "_removeDownloadWithIdentifier:canceled:inLibrary:",  objc_msgSend(v7, "longLongValue"),  *(unsigned __int8 *)(a1 + 56),  *(void *)(a1 + 48));
        objc_autoreleasePoolPop(v8);
      }

      id v4 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }

    while (v4);
  }

  return 1LL;
}

id sub_1000AED94(uint64_t a1)
{
  id v2 = +[ML3MusicLibrary sharedLibrary](&OBJC_CLASS___ML3MusicLibrary, "sharedLibrary");
  v6[0] = _NSConcreteStackBlock;
  v6[2] = sub_1000AEE0C;
  v6[3] = &unk_10034D780;
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  v6[5] = v2;
  v6[6] = v4;
  v6[1] = 3221225472LL;
  char v7 = *(_BYTE *)(a1 + 48);
  void v6[4] = v3;
  return [v2 performDatabaseTransactionWithBlock:v6];
}

id sub_1000AEE0C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _removeDownloadWithIdentifier:*(void *)(a1 + 48) canceled:*(unsigned __int8 *)(a1 + 56) inLibrary:*(void *)(a1 + 40)];
}

void sub_1000AF02C(uint64_t a1)
{
  id v2 = *(void **)(*(void *)(a1 + 32) + 24LL);
  if (!v2)
  {
    *(void *)(*(void *)(a1 + 32) + 24LL) = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    id v2 = *(void **)(*(void *)(a1 + 32) + 24LL);
  }

  if (![v2 count]) {
    objc_msgSend( +[Daemon daemon](Daemon, "daemon"),  "takeKeepAliveAssertion:",  @"com.apple.itunesstored.IPodLibrary");
  }
  [*(id *)(*(void *)(a1 + 32) + 24) addObjectsFromArray:*(void *)(a1 + 40)];
  uint64_t v3 = *(void *)(a1 + 32);
  if (!*(void *)(v3 + 32))
  {
    *(void *)(*(void *)(a1 + 32) + 32LL) = dispatch_source_create( (dispatch_source_type_t)&_dispatch_source_type_timer,  0LL,  0LL,  *(dispatch_queue_t *)(v3 + 8));
    uint64_t v4 = *(dispatch_source_s **)(*(void *)(a1 + 32) + 32LL);
    dispatch_time_t v5 = dispatch_time(0LL, 5000000000LL);
    dispatch_source_set_timer(v4, v5, 0LL, 0LL);
    uint64_t v6 = *(void *)(a1 + 32);
    char v7 = *(dispatch_source_s **)(v6 + 32);
    handler[0] = _NSConcreteStackBlock;
    handler[1] = 3221225472LL;
    handler[2] = sub_1000AF14C;
    handler[3] = &unk_10034AE98;
    handler[4] = v6;
    dispatch_source_set_event_handler(v7, handler);
    dispatch_resume(*(dispatch_object_t *)(*(void *)(a1 + 32) + 32LL));
  }

id sub_1000AF14C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _commitScheduledLibraryItems];
}

id sub_1000AF1A4(uint64_t a1)
{
  return objc_msgSend( objc_msgSend( +[ML3MusicLibrary sharedLibrary](ML3MusicLibrary, "sharedLibrary"),  "accountCacheDatabase"),  "setAppleID:forDSID:",  *(void *)(a1 + 32),  *(void *)(a1 + 40));
}

id sub_1000B049C(uint64_t a1)
{
  return objc_msgSend( +[Daemon daemon](Daemon, "daemon"),  "releaseKeepAliveAssertion:",  @"com.apple.itunesstored.IPodLibrary");
}

uint64_t sub_1000B2A78(uint64_t a1, uint64_t a2)
{
  return 1LL;
}

uint64_t sub_1000B2B28(uint64_t a1, uint64_t a2)
{
  return 1LL;
}

uint64_t sub_1000B2BB8(uint64_t a1, void *a2)
{
  uint64_t v4 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  dispatch_time_t v5 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  id v52 = [a2 database];
  id v48 = +[DownloadHandlerManager handlerManager](&OBJC_CLASS___DownloadHandlerManager, "handlerManager");
  uint64_t v53 = a1;
  id v6 = [*(id *)(a1 + 32) responseDownloads];
  __int128 v58 = 0u;
  __int128 v59 = 0u;
  __int128 v60 = 0u;
  __int128 v61 = 0u;
  id v7 = [v6 countByEnumeratingWithState:&v58 objects:v67 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v59;
    do
    {
      for (unint64_t i = 0LL; i != v8; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v59 != v9) {
          objc_enumerationMutation(v6);
        }
        __int128 v11 = *(void **)(*((void *)&v58 + 1) + 8LL * (void)i);
        __int128 v12 = -[NSNumber initWithItemIdentifier:]( [NSNumber alloc],  "initWithItemIdentifier:",  [v11 itemIdentifier]);
        -[NSMutableDictionary setObject:forKey:](v5, "setObject:forKey:", v11, v12);

        id v13 = [v11 podcastEpisodeGUID];
        if (v13) {
          -[NSMutableDictionary setObject:forKey:](v4, "setObject:forKey:", v11, v13);
        }
      }

      id v8 = [v6 countByEnumeratingWithState:&v58 objects:v67 count:16];
    }

    while (v8);
  }

  __int16 v49 = v4;
  id v47 = [*(id *)(v53 + 32) responseError];
  id v51 = objc_msgSend(*(id *)(v53 + 40), "_downloadRestoreStateForError:");
  id v14 = [*(id *)(v53 + 32) requestItems];
  __int128 v54 = 0u;
  __int128 v55 = 0u;
  __int128 v56 = 0u;
  __int128 v57 = 0u;
  id obj = v14;
  id v15 = [v14 countByEnumeratingWithState:&v54 objects:v66 count:16];
  if (v15)
  {
    id v16 = v15;
    uint64_t v17 = *(void *)v55;
    __int128 v46 = a2;
    do
    {
      for (j = 0LL; j != v16; j = (char *)j + 1)
      {
        if (*(void *)v55 != v17) {
          objc_enumerationMutation(obj);
        }
        uint64_t v19 = *(void **)(*((void *)&v54 + 1) + 8LL * (void)j);
        __int128 v20 = -[DownloadEntity initWithPersistentID:inDatabase:]( [DownloadEntity alloc],  "initWithPersistentID:inDatabase:",  [v19 downloadIdentifier],  v52);
        id v21 = [v19 storeItemID];
        id v22 = v21;
        if (v21
          && [v21 longLongValue]
          && (id v23 = -[NSMutableDictionary objectForKey:](v5, "objectForKey:", v22)) != 0LL
          || (id v24 = objc_msgSend(v19, "podcastEpisodeGUID", v44)) != 0
          && (id v23 = -[NSMutableDictionary objectForKey:](v49, "objectForKey:", v24)) != 0LL)
        {
          objc_msgSend( *(id *)(v53 + 40),  "_updateDownloadEntity:withTransaction:storeDownload:accountID:",  v20,  a2,  v23,  0,  v44);
        }

        else if (v51)
        {
          id v25 = objc_msgSend(*(id *)(v53 + 40), "_copyDownloadSessionPropertiesForItem:download:", v19, v20, v23);
          if ([v48 canOpenSessionWithProperties:v25])
          {
            id v26 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
            if (!v26) {
              id v26 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
            }
            unsigned int v27 = [v26 shouldLog];
            else {
              LODWORD(v2_Block_object_dispose(va, 8) = v27;
            }
            int v29 = (os_log_s *)[v26 OSLogObject];
            if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR)) {
              uint64_t v28 = v28;
            }
            else {
              v28 &= 2u;
            }
            if ((_DWORD)v28)
            {
              uint64_t v30 = objc_opt_class(*(void *)(v53 + 40));
              int v62 = 138543618;
              uint64_t v63 = v30;
              __int16 v64 = 2114;
              v65 = v19;
              LODWORD(v45) = 22;
              uint64_t v31 = _os_log_send_and_compose_impl( v28,  0LL,  0LL,  0LL,  &_mh_execute_header,  v29,  16LL,  "%{public}@: Restore failed for item: %{public}@",  &v62,  v45);
              if (v31)
              {
                int v32 = (void *)v31;
                __int16 v33 = +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v31,  4LL);
                free(v32);
                __int128 v44 = v33;
                SSFileLog(v26, @"%@");
              }
            }

            -[DownloadEntity setValue:forProperty:]( v20,  "setValue:forProperty:",  +[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", v51, v44),  @"download_state.restore_state");
            a2 = v46;
          }

          else if (v51 == (id)1)
          {
            id v41 = [v19 error];
            if (v22 && !v41) {
              id v41 = [*(id *)(v53 + 32) errorForItemIdentifier:v22];
            }
            if (v41) {
              id v42 = v41;
            }
            else {
              id v42 = v47;
            }
            [*(id *)(v53 + 40) _hardFailRestoreItem:v19 download:v20 transaction:a2 error:v42];
          }

          else
          {
            objc_msgSend( a2,  "unionChangeset:",  objc_msgSend( *(id *)(v53 + 40),  "_softFailRestoreItem:download:withRestoreState:error:",  v19,  v20,  v51,  v47));
          }
        }

        else
        {
          id v34 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
          if (!v34) {
            id v34 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
          }
          LODWORD(v35) = [v34 shouldLog];
          uint64_t v36 = (os_log_s *)[v34 OSLogObject];
          if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR)) {
            uint64_t v35 = v35;
          }
          else {
            v35 &= 2u;
          }
          if ((_DWORD)v35)
          {
            uint64_t v37 = objc_opt_class(*(void *)(v53 + 40));
            int v62 = 138543618;
            uint64_t v63 = v37;
            __int16 v64 = 2114;
            v65 = v19;
            LODWORD(v45) = 22;
            uint64_t v38 = _os_log_send_and_compose_impl( v35,  0LL,  0LL,  0LL,  &_mh_execute_header,  v36,  16LL,  "%{public}@: Restore transient failed for item: %{public}@",  &v62,  v45);
            if (v38)
            {
              uint64_t v39 = (void *)v38;
              __int128 v40 = +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v38,  4LL);
              free(v39);
              __int128 v44 = v40;
              SSFileLog(v34, @"%@");
            }
          }
        }
      }

      id v16 = [obj countByEnumeratingWithState:&v54 objects:v66 count:16];
    }

    while (v16);
  }

  return 1LL;
}

LABEL_99:
            }

            v93 = [v89 countByEnumeratingWithState:&v95 objects:v114 count:16];
          }

          while (v93);
        }

        id v7 = v80 + 1;
      }

      while ((id)(v80 + 1) != v79);
      __int128 v79 = [obj countByEnumeratingWithState:&v103 objects:v116 count:16];
    }

    while (v79);
  }
}

      goto LABEL_100;
    }

    id v47 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v47) {
      id v47 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    id v48 = objc_msgSend(v47, "shouldLog", v73);
    else {
      LODWORD(v49) = v48;
    }
    id v50 = (os_log_s *)objc_claimAutoreleasedReturnValue([v47 OSLogObject]);
    if (os_log_type_enabled(v50, OS_LOG_TYPE_DEFAULT)) {
      __int16 v49 = v49;
    }
    else {
      v49 &= 2u;
    }
    if ((_DWORD)v49)
    {
      id v51 = (void *)objc_opt_class(self);
      __int16 v90 = 138412802;
      v91 = v51;
      v92 = 2112;
      v93 = v77;
      v94 = 2112;
      v95 = (os_log_s *)v45;
      unsigned int v75 = v7;
      id v52 = v51;
      LODWORD(v74) = 32;
      uint64_t v53 = (void *)_os_log_send_and_compose_impl( v49,  0LL,  0LL,  0LL,  &_mh_execute_header,  v50,  0LL,  "%@: Warning: bundleVersion: %@ does not match expected bundleVersion: %@",  &v90,  v74);

      id v7 = v75;
      if (!v53)
      {
LABEL_62:

        id v8 = v77;
        goto LABEL_63;
      }

      id v50 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v53,  4LL));
      free(v53);
      __int128 v73 = v50;
      SSFileLog(v47, @"%@");
    }

    goto LABEL_62;
  }

  id v34 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v34) {
    id v34 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  LODWORD(v61) = objc_msgSend(v34, "shouldLog", v72);
  uint64_t v35 = (os_log_s *)objc_claimAutoreleasedReturnValue([v34 OSLogObject]);
  if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR)) {
    __int128 v61 = v61;
  }
  else {
    v61 &= 2u;
  }
  if ((_DWORD)v61)
  {
    int v62 = (void *)objc_opt_class(self);
    uint64_t v63 = self->_bundleIdentifier;
    __int16 v90 = 138412546;
    v91 = v62;
    v92 = 2112;
    v93 = v63;
    __int16 v64 = v62;
    LODWORD(v74) = 22;
    v65 = (void *)_os_log_send_and_compose_impl( v61,  0LL,  0LL,  0LL,  &_mh_execute_header,  v35,  16LL,  "%@: Unable to locate application meta data to verify bundleIdentifier: %@",  &v90,  v74);

    if (!v65)
    {
      LOBYTE(v54) = 0;
      goto LABEL_102;
    }

    uint64_t v35 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v65,  4LL));
    free(v65);
    SSFileLog(v34, @"%@");
  }

  LOBYTE(v54) = 0;
LABEL_101:

LABEL_102:
  return v54;
}

id sub_1000B4DA4(uint64_t a1, void *a2)
{
  id v3 = [a2 database];
  __int128 v36 = 0u;
  __int128 v37 = 0u;
  __int128 v38 = 0u;
  __int128 v39 = 0u;
  uint64_t v4 = *(void **)(a1 + 32);
  id result = [v4 countByEnumeratingWithState:&v36 objects:v63 count:16];
  id v35 = result;
  if (result)
  {
    uint64_t v34 = *(void *)v37;
    uint64_t v33 = SSDownloadPropertyBundleIdentifier;
    uint64_t v32 = SSDownloadPropertyIsRestore;
    uint64_t v31 = SSDownloadPropertyIsStoreDownload;
    uint64_t v30 = SSDownloadPropertyKind;
    uint64_t v29 = SSDownloadPropertyPodcastEpisodeGUID;
    uint64_t v28 = SSDownloadPropertyStoreAccountIdentifier;
    uint64_t v27 = SSDownloadPropertyStoreAccountAppleID;
    uint64_t v26 = SSDownloadPropertyStoreCollectionIdentifier;
    uint64_t v25 = SSDownloadPropertyStoreFrontIdentifier;
    uint64_t v24 = SSDownloadPropertyStoreItemIdentifier;
    uint64_t v23 = SSDownloadPropertyStoreMatchStatus;
    uint64_t v22 = SSDownloadPropertyStoreSagaIdentifier;
    uint64_t v21 = SSDownloadPropertyStoreSoftwareVersionIdentifier;
    uint64_t v20 = SSDownloadPropertyTitle;
    uint64_t v18 = SSDownloadAssetTypeMedia;
    uint64_t v17 = SSDownloadAssetPropertyIsDRMFree;
    uint64_t v16 = SSDownloadAssetPropertyStoreFlavor;
    uint64_t v15 = SSDownloadAssetPropertyVideoDimensions;
    uint64_t v19 = v4;
    do
    {
      id v6 = 0LL;
      do
      {
        if (*(void *)v37 != v34) {
          objc_enumerationMutation(v4);
        }
        id v7 = *(void **)(*((void *)&v36 + 1) + 8LL * (void)v6);
        id v8 = objc_autoreleasePoolPush();
        uint64_t v9 = -[DownloadEntity initWithPersistentID:inDatabase:]( [DownloadEntity alloc],  "initWithPersistentID:inDatabase:",  [v7 longLongValue],  v3);
        v62[0] = @"client_id";
        v62[1] = @"handler_id";
        v62[2] = @"IFNULL(download_state.has_restore_data, -1)";
        v62[3] = @"IFNULL(download_state.restore_data_size, 0)";
        v62[4] = @"bundle_id";
        v62[5] = @"is_restore";
        v62[6] = @"is_from_store";
        v62[7] = @"kind";
        v62[8] = @"podcast_episode_guid";
        v62[9] = @"store_account_id";
        v62[10] = @"store_account_name";
        v62[11] = @"store_collection_id";
        v62[12] = @"store_front_id";
        v62[13] = @"store_item_id";
        v62[14] = @"store_match_status";
        v62[15] = @"store_saga_id";
        v62[16] = @"store_software_version_id";
        v62[17] = @"title";
        memset(v47, 0, sizeof(v47));
        uint64_t v48 = v33;
        uint64_t v49 = v32;
        uint64_t v50 = v31;
        uint64_t v51 = v30;
        uint64_t v52 = v29;
        uint64_t v53 = v28;
        uint64_t v54 = v27;
        uint64_t v55 = v26;
        uint64_t v56 = v25;
        uint64_t v57 = v24;
        uint64_t v58 = v23;
        uint64_t v59 = v22;
        uint64_t v60 = v21;
        uint64_t v61 = v20;
        -[DownloadEntity getValues:forProperties:count:](v9, "getValues:forProperties:count:", &v43, v62, 18LL);
        if ([v45 BOOLValue] && (objc_msgSend(v46, "BOOLValue") & 1) == 0)
        {
          id v10 = v3;
          __int128 v11 = -[RestoreDownloadItem initWithDownloadIdentifier:]( [RestoreDownloadItem alloc],  "initWithDownloadIdentifier:",  [v7 longLongValue]);
          for (uint64_t i = 32LL; i != 144; i += 8LL)
            -[RestoreDownloadItem setValue:forDownloadProperty:]( v11,  "setValue:forDownloadProperty:",  *(uint64_t *)((char *)&v43 + i),  *(void *)((char *)v47 + i));
          if (v44) {
            -[RestoreDownloadItem setHandlerIdentifier:]( v11,  "setHandlerIdentifier:",  [v44 longLongValue]);
          }
          -[RestoreDownloadItem setClientIdentifier:](v11, "setClientIdentifier:", v43);
          id v13 = -[DownloadEntity anyAssetForAssetType:](v9, "anyAssetForAssetType:", v18);
          if (v13)
          {
            v42[0] = @"is_drm_free";
            v42[1] = @"store_flavor";
            v42[2] = @"video_dimensions";
            v41[0] = v17;
            v41[1] = v16;
            v41[2] = v15;
            [v13 getValues:v40 forProperties:v42 count:3];
            for (uint64_t j = 0LL; j != 3; ++j)
              -[RestoreDownloadItem setValue:forAssetProperty:]( v11,  "setValue:forAssetProperty:",  *(void *)&v40[j * 8],  v41[j]);
          }

          [*(id *)(a1 + 40) addObject:v11];

          id v3 = v10;
          uint64_t v4 = v19;
        }

        objc_autoreleasePoolPop(v8);
        id v6 = (char *)v6 + 1;
      }

      while (v6 != v35);
      id result = [v4 countByEnumeratingWithState:&v36 objects:v63 count:16];
      id v35 = result;
    }

    while (result);
  }

  return result;
}

uint64_t sub_1000B5398(uint64_t a1, void *a2)
{
  id v3 = [a2 database];
  __int128 v13 = 0u;
  __int128 v14 = 0u;
  __int128 v15 = 0u;
  __int128 v16 = 0u;
  id obj = *(id *)(a1 + 32);
  id v4 = [obj countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v14;
    do
    {
      for (uint64_t i = 0LL; i != v5; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v14 != v6) {
          objc_enumerationMutation(obj);
        }
        id v8 = *(void **)(*((void *)&v13 + 1) + 8LL * (void)i);
        uint64_t v9 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
        -[NSMutableDictionary setObject:forKey:]( v9,  "setObject:forKey:",  +[NSNumber numberWithBool:](NSNumber, "numberWithBool:", [v8 hasRestoreData]),  @"download_state.has_restore_data");
        -[NSMutableDictionary setObject:forKey:]( v9,  "setObject:forKey:",  +[NSNumber numberWithLongLong:]( NSNumber,  "numberWithLongLong:",  [v8 restoreDataSize]),  @"download_state.restore_data_size");
        id v10 = -[DownloadEntity initWithPersistentID:inDatabase:]( [DownloadEntity alloc],  "initWithPersistentID:inDatabase:",  [v8 downloadIdentifier],  v3);
        -[DownloadEntity setValuesWithDictionary:](v10, "setValuesWithDictionary:", v9);
      }

      id v5 = [obj countByEnumeratingWithState:&v13 objects:v17 count:16];
    }

    while (v5);
  }

  return 1LL;
}

void sub_1000B59BC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v12 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_1000B5A18(uint64_t a1, uint64_t a2)
{
}

void sub_1000B5A28(uint64_t a1)
{
}

uint64_t sub_1000B5A34(uint64_t a1, void *a2, void *a3)
{
  *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [a2 authenticatedAccount] != 0;
  *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) = [a2 error];
  if (!*(void *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 40LL)) {
    *(void *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 40LL) = a3;
  }
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

uint64_t sub_1000B6668(uint64_t a1, void *a2, void *a3)
{
  if (!*(void *)(a1 + 32)) {
    goto LABEL_9;
  }
LABEL_9:
  id v7 = objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "objectForKey:", a2), "count");
  id v8 = objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "objectForKey:", a3), "count");
  if (v7 == v8) {
    uint64_t v9 = 0LL;
  }
  else {
    uint64_t v9 = -1LL;
  }
  else {
    return v9;
  }
}

void sub_1000B6894(uint64_t a1)
{
  id v1 = objc_alloc_init((Class)objc_opt_class(*(void *)(a1 + 32)));
  id v2 = (void *)qword_1003A3350;
  qword_1003A3350 = (uint64_t)v1;
}

void sub_1000B6C68( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, char a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, char a27)
{
}

uint64_t sub_1000B6CA8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1000B6CB8(uint64_t a1)
{
}

uint64_t sub_1000B6CC0(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 72);
  uint64_t v5 = *(void *)(*(void *)(a1 + 64) + 8LL);
  id obj = *(id *)(v5 + 40);
  uint64_t v6 = objc_claimAutoreleasedReturnValue([v2 _createX509CertChainDataForAccountIdentifier:v3 purpose:v4 error:&obj]);
  objc_storeStrong((id *)(v5 + 40), obj);
  uint64_t v7 = *(void *)(*(void *)(a1 + 56) + 8LL);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v6;

  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 48));
}

uint64_t sub_1000B6EAC(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(*(void *)(a1 + 64) + 8LL);
  id obj = *(id *)(v4 + 40);
  unsigned __int8 v5 = [v2 _deleteKeychainTokensForAccountIdentifier:v3 error:&obj];
  objc_storeStrong((id *)(v4 + 40), obj);
  *(_BYTE *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL) = v5;
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 48));
}

void sub_1000B7274( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, char a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, char a29)
{
}

uint64_t sub_1000B72B4(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 80);
  uint64_t v5 = *(void *)(a1 + 72);
  uint64_t v6 = *(void *)(*(void *)(a1 + 64) + 8LL);
  id obj = *(id *)(v6 + 40);
  uint64_t v7 = objc_claimAutoreleasedReturnValue([v2 _publicKeyDataForAccountIdentifier:v3 purpose:v5 regenerateKeys:v4 error:&obj]);
  objc_storeStrong((id *)(v6 + 40), obj);
  uint64_t v8 = *(void *)(*(void *)(a1 + 56) + 8LL);
  uint64_t v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = v7;

  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 48));
}

void sub_1000B767C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, char a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, char a27)
{
}

uint64_t sub_1000B76B8(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(*(void *)(a1 + 72) + 8LL);
  id obj = *(id *)(v5 + 40);
  uint64_t v6 = objc_claimAutoreleasedReturnValue([v2 _signData:v3 context:v4 error:&obj]);
  objc_storeStrong((id *)(v5 + 40), obj);
  uint64_t v7 = *(void *)(*(void *)(a1 + 64) + 8LL);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v6;

  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 56));
}

LABEL_71:
  if (a6) {
    *a6 = v38;
  }
  uint64_t v61 = v37;

  return v61;
}

void sub_1000B82A4(uint64_t a1, char a2, void *a3)
{
  if ((a2 & 1) != 0)
  {
    uint64_t v5 = *(void *)(a1 + 32);
    id v6 = a3;
    uint64_t v7 = objc_opt_class(&OBJC_CLASS___NSNumber);
    uint64_t v8 = (void *)SSXPCDictionaryCopyObjectWithClass(v5, "1", v7);
    uint64_t v9 = *(void *)(a1 + 32);
    uint64_t v10 = objc_opt_class(&OBJC_CLASS___NSNumber);
    __int128 v11 = (void *)SSXPCDictionaryCopyObjectWithClass(v9, "2", v10);
    id v12 = [v11 integerValue];

    __int128 v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) sharedInstance]);
    id v19 = 0LL;
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "createAttestationDataForAccountIdentifier_:purpose:error:", v8, v12, &v19));
    id v15 = v19;
  }

  else
  {
    uint64_t v16 = SSErrorDomain;
    id v17 = a3;
    uint64_t v18 = SSError(v16, 107LL, 0LL, 0LL);
    id v15 = (id)objc_claimAutoreleasedReturnValue(v18);
    uint64_t v14 = 0LL;
  }

  SSXPCDictionarySetObject(a3, "0", v14);
  SSXPCDictionarySetObject(a3, "1", v15);
}

void sub_1000B8474(uint64_t a1, char a2, void *a3)
{
  if ((a2 & 1) != 0)
  {
    uint64_t v5 = *(void *)(a1 + 32);
    id v6 = a3;
    uint64_t v7 = objc_opt_class(&OBJC_CLASS___NSNumber);
    uint64_t v8 = (void *)SSXPCDictionaryCopyObjectWithClass(v5, "1", v7);
    uint64_t v9 = *(void *)(a1 + 32);
    uint64_t v10 = objc_opt_class(&OBJC_CLASS___NSNumber);
    __int128 v11 = (void *)SSXPCDictionaryCopyObjectWithClass(v9, "2", v10);
    id v12 = [v11 integerValue];

    __int128 v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) sharedInstance]);
    id v19 = 0LL;
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "createX509CertChainDataForAccountIdentifier_:purpose:error:", v8, v12, &v19));
    id v15 = v19;
  }

  else
  {
    uint64_t v16 = SSErrorDomain;
    id v17 = a3;
    uint64_t v18 = SSError(v16, 107LL, 0LL, 0LL);
    id v15 = (id)objc_claimAutoreleasedReturnValue(v18);
    uint64_t v14 = 0LL;
  }

  SSXPCDictionarySetObject(a3, "0", v14);
  SSXPCDictionarySetObject(a3, "1", v15);
}

void sub_1000B8644(uint64_t a1, char a2, void *a3)
{
  if ((a2 & 1) != 0)
  {
    uint64_t v5 = *(void *)(a1 + 32);
    id v6 = a3;
    uint64_t v7 = objc_opt_class(&OBJC_CLASS___NSNumber);
    uint64_t v8 = (void *)SSXPCDictionaryCopyObjectWithClass(v5, "1", v7);
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) sharedInstance]);
    id v16 = 0LL;
    unsigned int v10 = objc_msgSend(v9, "deleteKeychainTokensForAccountIdentifier_:error:", v8, &v16);
    id v11 = v16;

    if (v10) {
      id v12 = &off_10036D770;
    }
    else {
      id v12 = &off_10036D788;
    }
  }

  else
  {
    uint64_t v13 = SSErrorDomain;
    id v14 = a3;
    uint64_t v15 = SSError(v13, 107LL, 0LL, 0LL);
    id v11 = (id)objc_claimAutoreleasedReturnValue(v15);
    id v12 = &off_10036D788;
  }

  SSXPCDictionarySetObject(a3, "0", v12);
  SSXPCDictionarySetObject(a3, "1", v11);
}

void sub_1000B87F0(uint64_t a1, char a2, void *a3)
{
  if ((a2 & 1) != 0)
  {
    uint64_t v5 = *(void *)(a1 + 32);
    id v6 = a3;
    uint64_t v7 = objc_opt_class(&OBJC_CLASS___NSNumber);
    uint64_t v8 = (void *)SSXPCDictionaryCopyObjectWithClass(v5, "1", v7);
    uint64_t v9 = *(void *)(a1 + 32);
    uint64_t v10 = objc_opt_class(&OBJC_CLASS___NSNumber);
    id v11 = (void *)SSXPCDictionaryCopyObjectWithClass(v9, "2", v10);
    id v12 = [v11 integerValue];

    uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) sharedInstance]);
    id v19 = 0LL;
    id v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "publicKeyDataForAccountIdentifier_:purpose:error:", v8, v12, &v19));
    id v15 = v19;
  }

  else
  {
    uint64_t v16 = SSErrorDomain;
    id v17 = a3;
    uint64_t v18 = SSError(v16, 107LL, 0LL, 0LL);
    id v15 = (id)objc_claimAutoreleasedReturnValue(v18);
    id v14 = 0LL;
  }

  SSXPCDictionarySetObject(a3, "0", v14);
  SSXPCDictionarySetObject(a3, "1", v15);
}

void sub_1000B89E0(uint64_t a1, char a2, void *a3)
{
  if ((a2 & 1) != 0)
  {
    uint64_t v5 = *(void *)(a1 + 32);
    id v6 = a3;
    uint64_t v7 = objc_opt_class(&OBJC_CLASS___NSData);
    uint64_t v8 = (void *)SSXPCDictionaryCopyObjectWithClass(v5, "1", v7);
    uint64_t v9 = *(void *)(a1 + 32);
    uint64_t v10 = objc_opt_class(&OBJC_CLASS___NSString);
    id v11 = (void *)SSXPCDictionaryCopyObjectWithClass(v9, "2", v10);
    uint64_t v12 = *(void *)(a1 + 32);
    uint64_t v13 = objc_opt_class(&OBJC_CLASS___NSNumber);
    id v14 = (void *)SSXPCDictionaryCopyObjectWithClass(v12, "5", v13);
    uint64_t pid = xpc_connection_get_pid(*(xpc_connection_t *)(a1 + 40));
    uint64_t v16 = objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    id v17 = (void *)v16;
    if (v8)
    {
      if (!v16) {
        id v17 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      unsigned int v18 = [v17 shouldLog];
      else {
        LODWORD(v19) = v18;
      }
      uint64_t v20 = (os_log_s *)objc_claimAutoreleasedReturnValue([v17 OSLogObject]);
      if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT)) {
        uint64_t v19 = v19;
      }
      else {
        v19 &= 2u;
      }
      if ((_DWORD)v19)
      {
        uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", pid));
        int v38 = 138412546;
        __int128 v39 = v14;
        __int16 v40 = 2114;
        id v41 = v21;
        uint64_t v22 = (void *)_os_log_send_and_compose_impl( v19,  0LL,  0LL,  0LL,  &_mh_execute_header,  v20,  0LL,  "DaemonBiometricKeychain: Preparing legacy data signing operation over XPC for DSID: %@, PID: %{public}@",  &v38,  22);

        if (!v22)
        {
LABEL_15:

          uint64_t v23 = objc_alloc_init(&OBJC_CLASS___SSBiometricAuthenticationContext);
          -[SSBiometricAuthenticationContext setAccountIdentifier:](v23, "setAccountIdentifier:", v14);
          id v24 = objc_alloc_init(&OBJC_CLASS___SSConsolidatedDialog);
          [v24 setReason:v11];
          -[SSBiometricAuthenticationContext setConsolidatedDialog:](v23, "setConsolidatedDialog:", v24);
          uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) sharedInstance]);
          id v37 = 0LL;
          uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v25, "signData_:context:error:", v8, v23, &v37));
          id v27 = v37;

LABEL_30:
          goto LABEL_31;
        }

        uint64_t v20 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v22,  4LL));
        free(v22);
        SSFileLog(v17, @"%@");
      }

      goto LABEL_15;
    }

    if (!v16) {
      id v17 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v31 = [v17 shouldLog];
    else {
      LODWORD(v32) = v31;
    }
    uint64_t v33 = (os_log_s *)objc_claimAutoreleasedReturnValue([v17 OSLogObject]);
    if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR)) {
      uint64_t v32 = v32;
    }
    else {
      v32 &= 2u;
    }
    if ((_DWORD)v32)
    {
      uint64_t v34 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", pid));
      int v38 = 138412546;
      __int128 v39 = v14;
      __int16 v40 = 2114;
      id v41 = v34;
      id v35 = (void *)_os_log_send_and_compose_impl( v32,  0LL,  0LL,  0LL,  &_mh_execute_header,  v33,  16LL,  "DaemonBiometricKeychain: Legacy data signing operation failed with no payload in XPC message for D SID: %@, PID: %{public}@",  &v38,  22);

      if (!v35)
      {
LABEL_29:

        uint64_t v36 = SSError(SSErrorDomain, 137LL, 0LL, 0LL);
        id v27 = (id)objc_claimAutoreleasedReturnValue(v36);
        uint64_t v26 = 0LL;
        goto LABEL_30;
      }

      uint64_t v33 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v35,  4LL));
      free(v35);
      SSFileLog(v17, @"%@");
    }

    goto LABEL_29;
  }

  uint64_t v28 = SSErrorDomain;
  id v29 = a3;
  uint64_t v30 = SSError(v28, 107LL, 0LL, 0LL);
  id v27 = (id)objc_claimAutoreleasedReturnValue(v30);
  uint64_t v26 = 0LL;
LABEL_31:
  SSXPCDictionarySetObject(a3, "0", v26);
  SSXPCDictionarySetObject(a3, "1", v27);
}

void sub_1000B8EF8(uint64_t a1, char a2, void *a3)
{
  if ((a2 & 1) != 0)
  {
    uint64_t v5 = *(void *)(a1 + 32);
    id v6 = a3;
    uint64_t v7 = objc_opt_class(&OBJC_CLASS___NSData);
    uint64_t v8 = (void *)SSXPCDictionaryCopyObjectWithClass(v5, "1", v7);
    uint64_t v9 = objc_alloc(&OBJC_CLASS___SSBiometricAuthenticationContext);
    xpc_object_t value = xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 32), "2");
    id v11 = (void *)objc_claimAutoreleasedReturnValue(value);
    uint64_t v12 = -[SSBiometricAuthenticationContext initWithXPCEncoding:](v9, "initWithXPCEncoding:", v11);

    uint64_t pid = xpc_connection_get_pid(*(xpc_connection_t *)(a1 + 40));
    uint64_t v14 = objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    id v15 = (void *)v14;
    if (v8)
    {
      if (!v14) {
        id v15 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      unsigned int v16 = [v15 shouldLog];
      else {
        LODWORD(v17) = v16;
      }
      unsigned int v18 = (os_log_s *)objc_claimAutoreleasedReturnValue([v15 OSLogObject]);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT)) {
        uint64_t v17 = v17;
      }
      else {
        v17 &= 2u;
      }
      if ((_DWORD)v17)
      {
        uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(-[SSBiometricAuthenticationContext accountIdentifier](v12, "accountIdentifier"));
        uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", pid));
        int v36 = 138412546;
        id v37 = v19;
        __int16 v38 = 2114;
        __int128 v39 = v20;
        uint64_t v21 = (void *)_os_log_send_and_compose_impl( v17,  0LL,  0LL,  0LL,  &_mh_execute_header,  v18,  0LL,  "DaemonBiometricKeychain: Preparing context-based data signing operation over XPC for DSID: %@, PID: %{public}@",  &v36,  22);

        if (!v21)
        {
LABEL_15:

          uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) sharedInstance]);
          id v35 = 0LL;
          uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "signData_:context:error:", v8, v12, &v35));
          id v24 = v35;

LABEL_30:
          goto LABEL_31;
        }

        unsigned int v18 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v21,  4LL));
        free(v21);
        SSFileLog(v15, @"%@");
      }

      goto LABEL_15;
    }

    if (!v14) {
      id v15 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v28 = [v15 shouldLog];
    else {
      LODWORD(v29) = v28;
    }
    uint64_t v30 = (os_log_s *)objc_claimAutoreleasedReturnValue([v15 OSLogObject]);
    if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR)) {
      uint64_t v29 = v29;
    }
    else {
      v29 &= 2u;
    }
    if ((_DWORD)v29)
    {
      unsigned int v31 = (void *)objc_claimAutoreleasedReturnValue(-[SSBiometricAuthenticationContext accountIdentifier](v12, "accountIdentifier"));
      uint64_t v32 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", pid));
      int v36 = 138412546;
      id v37 = v31;
      __int16 v38 = 2114;
      __int128 v39 = v32;
      uint64_t v33 = (void *)_os_log_send_and_compose_impl( v29,  0LL,  0LL,  0LL,  &_mh_execute_header,  v30,  16LL,  "DaemonBiometricKeychain: Context-based data signing operation failed with no payload in XPC messag e for DSID: %@, PID: %{public}@",  &v36,  22);

      if (!v33)
      {
LABEL_29:

        uint64_t v34 = SSError(SSErrorDomain, 137LL, 0LL, 0LL);
        id v24 = (id)objc_claimAutoreleasedReturnValue(v34);
        uint64_t v23 = 0LL;
        goto LABEL_30;
      }

      uint64_t v30 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v33,  4LL));
      free(v33);
      SSFileLog(v15, @"%@");
    }

    goto LABEL_29;
  }

  uint64_t v25 = SSErrorDomain;
  id v26 = a3;
  uint64_t v27 = SSError(v25, 107LL, 0LL, 0LL);
  id v24 = (id)objc_claimAutoreleasedReturnValue(v27);
  uint64_t v23 = 0LL;
LABEL_31:
  SSXPCDictionarySetObject(a3, "0", v23);
  SSXPCDictionarySetObject(a3, "1", v24);
}

void sub_1000B93C4(uint64_t a1, char a2, void *a3)
{
  if ((a2 & 1) != 0)
  {
    uint64_t v5 = *(void *)(a1 + 32);
    id v6 = a3;
    uint64_t v7 = objc_opt_class(&OBJC_CLASS___NSNumber);
    uint64_t v8 = (void *)SSXPCDictionaryCopyObjectWithClass(v5, "1", v7);
    uint64_t v9 = *(void *)(a1 + 32);
    uint64_t v10 = objc_opt_class(&OBJC_CLASS___NSNumber);
    id v11 = (void *)SSXPCDictionaryCopyObjectWithClass(v9, "2", v10);
    id v12 = [v11 integerValue];

    uint64_t v13 = *(void *)(a1 + 32);
    uint64_t v14 = objc_opt_class(&OBJC_CLASS___NSNumber);
    id v15 = (void *)SSXPCDictionaryCopyObjectWithClass(v13, "3", v14);
    id v16 = [v15 BOOLValue];

    uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) sharedInstance]);
    id v23 = 0LL;
    unsigned int v18 = (void *)objc_claimAutoreleasedReturnValue( objc_msgSend( v17,  "x509CertChainDataForAccountIdentifier_:purpose:regenerateCerts:error:",  v8,  v12,  v16,  &v23));
    id v19 = v23;
  }

  else
  {
    uint64_t v20 = SSErrorDomain;
    id v21 = a3;
    uint64_t v22 = SSError(v20, 107LL, 0LL, 0LL);
    id v19 = (id)objc_claimAutoreleasedReturnValue(v22);
    unsigned int v18 = 0LL;
  }

  SSXPCDictionarySetObject(a3, "0", v18);
  SSXPCDictionarySetObject(a3, "1", v19);
}

void sub_1000B96BC(uint64_t a1)
{
  if ((SSXPCConnectionHasEntitlement(*(void *)(a1 + 32), kSSITunesStorePrivateEntitlement) & 1) == 0
    && (SSXPCConnectionHasEntitlement(*(void *)(a1 + 32), kSSITunesStoreEntitlementBiometrics) & 1) == 0)
  {
    id v2 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v2) {
      id v2 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v3 = [v2 shouldLog];
    else {
      LODWORD(v4) = v3;
    }
    uint64_t v5 = (os_log_s *)objc_claimAutoreleasedReturnValue([v2 OSLogObject]);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v4 = v4;
    }
    else {
      v4 &= 2u;
    }
    if ((_DWORD)v4)
    {
      id v6 = (void *)objc_opt_class(*(void *)(a1 + 56));
      int v10 = 138543362;
      id v11 = v6;
      id v7 = v6;
      uint64_t v8 = (void *)_os_log_send_and_compose_impl( v4,  0LL,  0LL,  0LL,  &_mh_execute_header,  v5,  0LL,  "%{public}@: Rejecting message from unentitled client",  &v10,  12);

      if (!v8)
      {
LABEL_16:

        goto LABEL_17;
      }

      uint64_t v5 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v8,  4LL));
      free(v8);
      SSFileLog(v2, @"%@");
    }

    goto LABEL_16;
  }

LABEL_154:
          __int16 v38 = a5;
          goto LABEL_155;
        }

LABEL_156:
        uint64_t v34 = 0LL;
        id v35 = 0LL;
        int v36 = 0LL;
        LOBYTE(v37) = 1;
        __int16 v38 = a5;
        uint64_t v25 = v147;
        goto LABEL_173;
      }

      v65 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v72,  4LL));
      free(v72);
      v141 = v65;
      SSFileLog(v63, @"%@");
    }

    goto LABEL_64;
  }

  if ((_DWORD)v11)
  {
    uint64_t v20 = SSError(SSErrorDomain, 147LL, 0LL, 0LL);
    id v21 = (void *)objc_claimAutoreleasedReturnValue(v20);
    uint64_t v22 = SSErrorKeychainStatusCodeKey;
    id v23 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v11));
    id v24 = SSErrorBySettingUserInfoValue(v21, v22, v23);
    v148 = objc_claimAutoreleasedReturnValue(v24);

    uint64_t v25 = (const __CFDictionary *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v25) {
      uint64_t v25 = (const __CFDictionary *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    LODWORD(v26) = -[__CFDictionary shouldLog](v25, "shouldLog", v141);
    uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue(-[__CFDictionary OSLogObject](v25, "OSLogObject"));
    if (os_log_type_enabled((os_log_t)v27, OS_LOG_TYPE_ERROR)) {
      id v26 = v26;
    }
    else {
      v26 &= 2u;
    }
    if ((_DWORD)v26)
    {
      v146 = v25;
      unsigned int v28 = (void *)objc_opt_class(self);
      uint64_t v29 = v28;
      uint64_t v30 = SSHashIfNeeded(v154);
      unsigned int v31 = (void *)objc_claimAutoreleasedReturnValue(v30);
      uint64_t v32 = (__CFError *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", v155));
      uint64_t v33 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v11));
      v159 = 138544130;
      v160 = v28;
      v161 = 2112;
      v162 = v31;
      v163 = 2114;
      v164 = v32;
      v165 = 2114;
      v166 = v33;
      LODWORD(v144) = 42;
      uint64_t v34 = (SecKeyRef)_os_log_send_and_compose_impl( v26,  0LL,  0LL,  0LL,  &_mh_execute_header,  v27,  16LL,  "%{public}@: Failed to look up public key cert using X509 for DSID: %@, purpose: %{public}@, status: %{public}@",  &v159,  v144);

      if (!v34)
      {
        id v35 = 0LL;
        int v36 = 0LL;
        LOBYTE(v37) = 1;
        __int128 v39 = (__CFError *)v148;
        __int16 v38 = a5;
        uint64_t v25 = v146;
        goto LABEL_175;
      }

      uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v34,  4LL));
      free(v34);
      uint64_t v25 = v146;
      SSFileLog(v146, @"%@");
    }

    uint64_t v34 = 0LL;
    id v35 = 0LL;
    int v36 = 0LL;
    LOBYTE(v37) = 1;
    __int128 v39 = (__CFError *)v148;
    __int16 v38 = a5;
    goto LABEL_174;
  }

  v98 = SecCertificateCopyKey(v12);
  if (!v98)
  {
    uint64_t v25 = (const __CFDictionary *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v25) {
      uint64_t v25 = (const __CFDictionary *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    v120 = -[__CFDictionary shouldLog](v25, "shouldLog", v141);
    uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue(-[__CFDictionary OSLogObject](v25, "OSLogObject"));
    if (os_log_type_enabled((os_log_t)v27, OS_LOG_TYPE_ERROR)) {
      v121 = v120;
    }
    else {
      v121 = v120 & 2;
    }
    if ((_DWORD)v121)
    {
      v105 = v25;
      v122 = (void *)objc_opt_class(self);
      v123 = v122;
      v124 = SSHashIfNeeded(v154);
      v125 = (void *)objc_claimAutoreleasedReturnValue(v124);
      v126 = (__CFError *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", v155));
      v159 = 138543874;
      v160 = v122;
      v161 = 2112;
      v162 = v125;
      v163 = 2114;
      v164 = v126;
      LODWORD(v144) = 32;
      v127 = (void *)_os_log_send_and_compose_impl( v121,  0LL,  0LL,  0LL,  &_mh_execute_header,  v27,  16LL,  "%{public}@: Failed to copy public key using X509 for DSID: %@, purpose: %{public}@",  &v159,  v144);

      if (!v127)
      {
        uint64_t v34 = 0LL;
        id v35 = 0LL;
        int v36 = 0LL;
        LOBYTE(v37) = 1;
        goto LABEL_169;
      }

      uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v127,  4LL));
      free(v127);
      uint64_t v25 = v105;
      SSFileLog(v105, @"%@");
    }

    uint64_t v34 = 0LL;
    id v35 = 0LL;
    __int128 v39 = 0LL;
    int v36 = 0LL;
    LOBYTE(v37) = 1;
    __int16 v38 = a5;
LABEL_174:

    goto LABEL_175;
  }

  uint64_t v34 = v98;
  v145 = v13;
LABEL_95:
  v99 = SecKeyCopyExternalRepresentation(v34, &error);
  id v35 = v99;
  if (error)
  {
    __int128 v39 = error;
    uint64_t v25 = (const __CFDictionary *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v25) {
      uint64_t v25 = (const __CFDictionary *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    LODWORD(v37) = -[__CFDictionary shouldLog](v25, "shouldLog", v141);
    uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue(-[__CFDictionary OSLogObject](v25, "OSLogObject"));
    if (os_log_type_enabled((os_log_t)v27, OS_LOG_TYPE_DEFAULT)) {
      id v37 = v37;
    }
    else {
      v37 &= 2u;
    }
    if ((_DWORD)v37)
    {
      v150 = v39;
      v100 = v25;
      v101 = (void *)objc_opt_class(self);
      v102 = v101;
      v103 = SSHashIfNeeded(v154);
      v104 = (void *)objc_claimAutoreleasedReturnValue(v103);
      v159 = 138543874;
      v160 = v101;
      v161 = 2112;
      v162 = v104;
      v163 = 2114;
      v164 = error;
      LODWORD(v144) = 32;
      id v37 = _os_log_send_and_compose_impl( v37,  0LL,  0LL,  0LL,  &_mh_execute_header,  v27,  0LL,  "%{public}@: Public key data copy failed with no external representation for DSID: %@, error: %{public}@",  &v159,  v144);

      if (v37)
      {
        uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v37,  4LL));
        free((void *)v37);
        uint64_t v25 = v100;
        SSFileLog(v100, @"%@");
        LOBYTE(v37) = 0;
LABEL_106:
        int v36 = 0LL;
        __int128 v39 = v150;
        __int16 v38 = a5;
LABEL_173:
        uint64_t v13 = v145;
        goto LABEL_174;
      }

      goto LABEL_189;
    }

    goto LABEL_171;
  }

  if (v99)
  {
    id v35 = v99;
    uint64_t v25 = (const __CFDictionary *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v25) {
      uint64_t v25 = (const __CFDictionary *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    LODWORD(v37) = -[__CFDictionary shouldLog](v25, "shouldLog", v141);
    uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue(-[__CFDictionary OSLogObject](v25, "OSLogObject"));
    if (os_log_type_enabled((os_log_t)v27, OS_LOG_TYPE_DEBUG)) {
      id v37 = v37;
    }
    else {
      v37 &= 2u;
    }
    if (!(_DWORD)v37) {
      goto LABEL_119;
    }
    v105 = v25;
    v106 = (void *)objc_opt_class(self);
    v107 = v106;
    v108 = SSHashIfNeeded(v154);
    v109 = (void *)objc_claimAutoreleasedReturnValue(v108);
    v159 = 138543618;
    v160 = v106;
    v161 = 2112;
    v162 = v109;
    LODWORD(v144) = 22;
    id v37 = _os_log_send_and_compose_impl( v37,  0LL,  0LL,  0LL,  &_mh_execute_header,  v27,  2LL,  "%{public}@: Public key data copied for DSID: %@",  &v159,  v144);

    if (v37)
    {
      uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v37,  4LL));
      free((void *)v37);
      uint64_t v25 = v105;
      SSFileLog(v105, @"%@");
      LOBYTE(v37) = 0;
LABEL_119:
      __int128 v39 = 0LL;
      int v36 = v35;
LABEL_172:
      __int16 v38 = a5;
      goto LABEL_173;
    }

    uint64_t v13 = v145;
    int v36 = v35;
LABEL_169:
    __int16 v38 = a5;
    uint64_t v25 = v105;
    __int128 v39 = 0LL;
    goto LABEL_175;
  }

  v135 = SSError(SSErrorDomain, 147LL, 0LL, 0LL);
  __int128 v39 = (__CFError *)objc_claimAutoreleasedReturnValue(v135);
  uint64_t v25 = (const __CFDictionary *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v25) {
    uint64_t v25 = (const __CFDictionary *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  LODWORD(v37) = -[__CFDictionary shouldLog](v25, "shouldLog", v141);
  uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue(-[__CFDictionary OSLogObject](v25, "OSLogObject"));
  if (os_log_type_enabled((os_log_t)v27, OS_LOG_TYPE_DEFAULT)) {
    id v37 = v37;
  }
  else {
    v37 &= 2u;
  }
  if (!(_DWORD)v37)
  {
    id v35 = 0LL;
LABEL_171:
    int v36 = 0LL;
    goto LABEL_172;
  }

  v150 = v39;
  v100 = v25;
  v136 = (void *)objc_opt_class(self);
  v137 = v136;
  v138 = SSHashIfNeeded(v154);
  v139 = (void *)objc_claimAutoreleasedReturnValue(v138);
  v159 = 138543618;
  v160 = v136;
  v161 = 2112;
  v162 = v139;
  LODWORD(v144) = 22;
  id v37 = _os_log_send_and_compose_impl( v37,  0LL,  0LL,  0LL,  &_mh_execute_header,  v27,  0LL,  "%{public}@: Public key data copy failed with no key data for DSID: %@",  &v159,  v144);

  if (v37)
  {
    uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v37,  4LL));
    free((void *)v37);
    uint64_t v25 = v100;
    SSFileLog(v100, @"%@");
    LOBYTE(v37) = 0;
    id v35 = 0LL;
    goto LABEL_106;
  }

  id v35 = 0LL;
LABEL_189:
  int v36 = 0LL;
  uint64_t v13 = v145;
  uint64_t v25 = v100;
  __int128 v39 = v150;
  __int16 v38 = a5;
LABEL_175:

  if (cf) {
    CFRelease(cf);
  }
  if ((v37 & 1) == 0) {
    CFRelease(v34);
  }
  if (result) {
    CFRelease(result);
  }
  if (v35) {
    CFRelease(v35);
  }
  if (error) {
    CFRelease(error);
  }
  if (v38) {
    *__int16 v38 = v39;
  }

  return v36;
}

LABEL_75:
  if (result) {
    CFRelease(result);
  }
  if (v96) {
    CFRelease(v96);
  }
  if (a5) {
    *a5 = v19;
  }

  return v48;
}

void sub_1000BD318( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, char a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, char a29)
{
}

uint64_t sub_1000BD358(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 80);
  uint64_t v5 = *(void *)(*(void *)(a1 + 72) + 8LL);
  id obj = *(id *)(v5 + 40);
  id v6 = [v2 _copyPublicKeyDataForAccountIdentifier:v3 purpose:v4 error:&obj];
  objc_storeStrong((id *)(v5 + 40), obj);
  uint64_t v7 = *(void *)(*(void *)(a1 + 64) + 8LL);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v6;

  if (*(void *)(*(void *)(*(void *)(a1 + 64) + 8LL) + 40LL))
  {
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v9) {
      uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v10 = [v9 shouldLog];
    else {
      LODWORD(v11) = v10;
    }
    id v12 = (os_log_s *)objc_claimAutoreleasedReturnValue([v9 OSLogObject]);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG)) {
      uint64_t v11 = v11;
    }
    else {
      v11 &= 2u;
    }
    if (!(_DWORD)v11) {
      goto LABEL_14;
    }
    uint64_t v13 = (void *)objc_opt_class(*(void *)(a1 + 32));
    uint64_t v14 = *(void *)(a1 + 48);
    id v15 = v13;
    uint64_t v16 = SSHashIfNeeded(v14);
    uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
    int v56 = 138543618;
    uint64_t v57 = v13;
    __int16 v58 = 2112;
    uint64_t v59 = v17;
    int v52 = 22;
    unsigned int v18 = "%{public}@: Regenerate keychain tokens found public key without regeneration for DSID: %@";
    uint64_t v19 = v11;
    uint64_t v20 = v12;
    uint64_t v21 = 2LL;
LABEL_12:
    uint64_t v22 = (void *)_os_log_send_and_compose_impl(v19, 0LL, 0LL, 0LL, &_mh_execute_header, v20, v21, v18, &v56, v52);

    if (!v22)
    {
LABEL_15:

      return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 56));
    }

    id v12 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v22,  4LL));
    free(v22);
    SSFileLog(v9, @"%@");
LABEL_14:

    goto LABEL_15;
  }

  id v23 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40) domain]);
  unsigned int v24 = [v23 isEqualToString:SSErrorDomain];

  if (v24)
  {
    uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40) userInfo]);
    id v26 = (void *)objc_claimAutoreleasedReturnValue([v25 objectForKey:SSErrorKeychainStatusCodeKey]);
    id v27 = [v26 integerValue];

    if (v27 == (id)-25300LL)
    {
      if ([*(id *)(a1 + 32) _isDeviceUnlocked])
      {
        unsigned int v28 = *(void **)(a1 + 32);
        uint64_t v29 = *(void *)(a1 + 40);
        uint64_t v30 = *(void *)(a1 + 80);
        uint64_t v31 = *(void *)(*(void *)(a1 + 72) + 8LL);
        id v54 = *(id *)(v31 + 40);
        [v28 _generateKeychainTokensForAccountIdentifier:v29 purpose:v30 error:&v54];
        objc_storeStrong((id *)(v31 + 40), v54);
        uint64_t v32 = *(void *)(*(void *)(a1 + 72) + 8LL);
        uint64_t v34 = *(void *)(v32 + 40);
        uint64_t v33 = (id *)(v32 + 40);
        if (v34)
        {
          uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
          if (!v9) {
            uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
          }
          unsigned int v35 = [v9 shouldLog];
          else {
            LODWORD(v36) = v35;
          }
          id v12 = (os_log_s *)objc_claimAutoreleasedReturnValue([v9 OSLogObject]);
          if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT)) {
            uint64_t v36 = v36;
          }
          else {
            v36 &= 2u;
          }
          if (!(_DWORD)v36) {
            goto LABEL_14;
          }
          id v37 = (void *)objc_opt_class(*(void *)(a1 + 32));
          uint64_t v38 = *(void *)(a1 + 48);
          id v15 = v37;
          uint64_t v39 = SSHashIfNeeded(v38);
          uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(v39);
          uint64_t v40 = *(void *)(*(void *)(*(void *)(a1 + 72) + 8LL) + 40LL);
          int v56 = 138543874;
          uint64_t v57 = v37;
          __int16 v58 = 2112;
          uint64_t v59 = v17;
          __int16 v60 = 2114;
          uint64_t v61 = v40;
          int v52 = 32;
          unsigned int v18 = "%{public}@: Regenerate keychain tokens error for DSID: %@, error: %{public}@";
        }

        else
        {
          id v41 = *(void **)(a1 + 32);
          uint64_t v42 = *(void *)(a1 + 40);
          uint64_t v43 = *(void *)(a1 + 80);
          id v53 = 0LL;
          id v44 = [v41 _copyPublicKeyDataForAccountIdentifier:v42 purpose:v43 error:&v53];
          objc_storeStrong(v33, v53);
          uint64_t v45 = *(void *)(*(void *)(a1 + 64) + 8LL);
          id v46 = *(void **)(v45 + 40);
          *(void *)(v45 + 40) = v44;

          if (*(void *)(*(void *)(*(void *)(a1 + 64) + 8LL) + 40LL)) {
            return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 56));
          }
          uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
          if (!v9) {
            uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
          }
          unsigned int v48 = [v9 shouldLog];
          else {
            LODWORD(v36) = v48;
          }
          id v12 = (os_log_s *)objc_claimAutoreleasedReturnValue([v9 OSLogObject]);
          if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT)) {
            uint64_t v36 = v36;
          }
          else {
            v36 &= 2u;
          }
          if (!(_DWORD)v36) {
            goto LABEL_14;
          }
          uint64_t v49 = (void *)objc_opt_class(*(void *)(a1 + 32));
          uint64_t v50 = *(void *)(a1 + 48);
          id v15 = v49;
          uint64_t v51 = SSHashIfNeeded(v50);
          uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(v51);
          int v56 = 138543618;
          uint64_t v57 = v49;
          __int16 v58 = 2112;
          uint64_t v59 = v17;
          int v52 = 22;
          unsigned int v18 = "%{public}@: Public key copy for regenerate keychain tokens failed for DSID: %@";
        }

        uint64_t v19 = v36;
        uint64_t v20 = v12;
        uint64_t v21 = 0LL;
        goto LABEL_12;
      }
    }
  }

  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 56));
}

LABEL_56:
          unsigned int v24 = v125;
LABEL_57:

LABEL_58:
          -[NSMutableArray addObject:](v113, "addObject:", v26);
          id v23 = v127;
          goto LABEL_59;
        }

        if (v119 && v28 && (-[NSMutableSet containsObject:](v119, "containsObject:", v28) & 1) == 0)
        {
          uint64_t v31 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
          if (!v31) {
            uint64_t v31 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
          }
          uint64_t v40 = [v31 shouldLog];
          uint64_t v34 = (os_log_s *)objc_claimAutoreleasedReturnValue([v31 OSLogObject]);
          if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT)) {
            id v41 = v40;
          }
          else {
            id v41 = v40 & 2;
          }
          if (!(_DWORD)v41) {
            goto LABEL_56;
          }
          uint64_t v42 = (void *)objc_opt_class(self);
          id v37 = v42;
          uint64_t v43 = (void *)objc_claimAutoreleasedReturnValue([v26 storeItemID]);
          v139 = 138412802;
          v140 = v42;
          v141 = 2112;
          v142 = (uint64_t)v28;
          v143 = 2112;
          v144 = v43;
          LODWORD(v105) = 32;
          uint64_t v39 = (void *)_os_log_send_and_compose_impl( v41,  0LL,  0LL,  0LL,  &_mh_execute_header,  v34,  0LL,  "%@: Filtering disallowed match status: %@ for item: %@",  &v139,  v105);

          uint64_t v21 = v115;
LABEL_54:

          uint64_t v20 = v109;
          unsigned int v24 = v125;
          if (v39)
          {
            uint64_t v34 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v39,  4LL));
            free(v39);
            v104 = v34;
            SSFileLog(v31, @"%@");
            goto LABEL_57;
          }

          goto LABEL_58;
        }

        uint64_t v29 = (NSMutableArray *)objc_claimAutoreleasedReturnValue(-[NSMutableDictionary objectForKey:](v21, "objectForKey:", v27));
        if (v29)
        {
          uint64_t v30 = v29;
          -[NSMutableArray addObject:](v29, "addObject:", v26);
        }

        else
        {
          uint64_t v30 = -[NSMutableArray initWithObjects:]( objc_alloc(&OBJC_CLASS___NSMutableArray),  "initWithObjects:",  v26,  0LL);
          -[NSMutableDictionary setObject:forKey:](v21, "setObject:forKey:", v30, v27);
        }

LABEL_59:
        uint64_t v25 = (char *)v25 + 1;
      }

      while (v23 != v25);
      id v23 = -[NSArray countByEnumeratingWithState:objects:count:]( obj,  "countByEnumeratingWithState:objects:count:",  &v135,  v148,  16LL);
    }

    while (v23);
  }

  if (-[NSMutableArray count](v113, "count"))
  {
    id v44 = SSError(SSErrorDomain, 400LL, 0LL, 0LL);
    uint64_t v45 = (void *)objc_claimAutoreleasedReturnValue(v44);
    id v46 = -[RestoreDownloadItemsOperation _newResponseWithItems:error:](self, "_newResponseWithItems:error:", v113, v45);

    -[RestoreDownloadItemsOperation _addResponse:](self, "_addResponse:", v46);
  }

  v120 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  id v47 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableDictionary allKeys](v21, "allKeys"));
  unsigned int v48 = (void *)objc_claimAutoreleasedReturnValue([v47 sortedArrayUsingComparator:&stru_10034D9A0]);

  v133 = 0u;
  v134 = 0u;
  v131 = 0u;
  v132 = 0u;
  v114 = v48;
  uint64_t v49 = [v114 countByEnumeratingWithState:&v131 objects:v147 count:16];
  if (!v49)
  {
    uint64_t v51 = 0LL;
    v128 = 1;
    id v53 = v121;
    id v54 = &ACSLocateCachingServer_ptr;
    goto LABEL_125;
  }

  uint64_t v50 = v49;
  uint64_t v51 = 0LL;
  int v52 = *(void *)v132;
  v112 = SSErrorDomain;
  v128 = 1;
  id v53 = v121;
  id v54 = &ACSLocateCachingServer_ptr;
  v110 = *(void *)v132;
  do
  {
    uint64_t v55 = 0LL;
    v111 = v50;
    do
    {
      if (*(void *)v132 != v52) {
        objc_enumerationMutation(v114);
      }
      int v56 = *(void **)(*((void *)&v131 + 1) + 8LL * (void)v55);
      uint64_t v57 = objc_autoreleasePoolPush();
      __int16 v58 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableDictionary objectForKey:](v21, "objectForKey:", v56));
      if (v51)
      {
        -[NSMutableArray addObjectsFromArray:](v120, "addObjectsFromArray:", v58);
        goto LABEL_121;
      }

      v122 = v56;
      uint64_t v59 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
      v123 = v58;
      __int16 v60 = (uint64_t)[v58 count];
      uint64_t v61 = (void *)objc_claimAutoreleasedReturnValue([v53 objectForKey:@"max-item-count"]);
      v124 = v60;
      v116 = v61;
      int v62 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v54[459], "sharedDaemonConfig", v104));
      if (!v62) {
        int v62 = (void *)objc_claimAutoreleasedReturnValue([v54[459] sharedConfig]);
      }
      v117 = v57;
      v118 = v55;
      uint64_t v63 = [v62 shouldLog];
      else {
        __int16 v64 = v63;
      }
      v65 = (os_log_s *)objc_claimAutoreleasedReturnValue([v62 OSLogObject]);
      if (os_log_type_enabled(v65, OS_LOG_TYPE_INFO)) {
        uint64_t v66 = v64;
      }
      else {
        uint64_t v66 = v64 & 2;
      }
      if ((_DWORD)v66)
      {
        __int128 v67 = (void *)objc_opt_class(self);
        v139 = 138413058;
        v140 = v67;
        v141 = 2048;
        v142 = v60;
        v143 = 2112;
        v144 = v122;
        v145 = 2048;
        __int128 v68 = (id)v124;
        v146 = v124;
        __int128 v69 = v67;
        LODWORD(v105) = 42;
        __int128 v70 = (void *)_os_log_send_and_compose_impl( v66,  0LL,  0LL,  0LL,  &_mh_execute_header,  v65,  1LL,  "%@: Restoring %ld items with kind %@ with chunk size %ld",  &v139,  v105);

        id v53 = v121;
        if (!v70) {
          goto LABEL_85;
        }
        v65 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v70,  4LL));
        free(v70);
        v104 = v65;
        SSFileLog(v62, @"%@");
      }

      else
      {
        id v53 = v121;
        __int128 v68 = (id)v124;
      }

LABEL_85:
      uint64_t v51 = 0LL;
      if (v60 >= 1)
      {
        uint64_t v71 = 0LL;
        id v54 = &ACSLocateCachingServer_ptr;
        id v72 = v58;
        while (1)
        {
          __int128 v73 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v72, "objectAtIndex:", v71, v104));
          -[NSMutableArray addObject:](v59, "addObject:", v73);
          if (-[NSMutableArray count](v59, "count") == v68 || v71 == v60 - 1) {
            break;
          }
LABEL_117:

          if (++v71 >= v60) {
            goto LABEL_120;
          }
        }

        id v74 = objc_alloc_init(&OBJC_CLASS___RestoreDownloadItemsResponse);
        -[RestoreDownloadItemsResponse setRequestItems:](v74, "setRequestItems:", v59);
        if (!-[NSMutableArray count](v59, "count"))
        {
LABEL_113:
          -[RestoreDownloadItemsOperation _addResponse:](self, "_addResponse:", v74);
          if (v51 && v71 + 1 < v60)
          {
            __int16 v90 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v72, "subarrayWithRange:"));
            -[NSMutableArray addObjectsFromArray:](v120, "addObjectsFromArray:", v90);

            uint64_t v71 = v60;
          }

          goto LABEL_117;
        }

        v126 = v51;
        unsigned int v75 = (void *)objc_claimAutoreleasedReturnValue([v54[459] sharedDaemonConfig]);
        if (!v75) {
          unsigned int v75 = (void *)objc_claimAutoreleasedReturnValue([v54[459] sharedConfig]);
        }
        __int128 v76 = [v75 shouldLog];
        else {
          __int128 v77 = v76;
        }
        __int128 v78 = (os_log_s *)objc_claimAutoreleasedReturnValue([v75 OSLogObject]);
        if (os_log_type_enabled(v78, OS_LOG_TYPE_INFO)) {
          __int128 v79 = v77;
        }
        else {
          __int128 v79 = v77 & 2;
        }
        if ((_DWORD)v79)
        {
          uint64_t v80 = (void *)objc_opt_class(self);
          __int16 v81 = v80;
          id v82 = -[NSMutableArray count](v59, "count");
          v139 = 138412802;
          v140 = v80;
          v141 = 2048;
          v142 = (uint64_t)v82;
          v143 = 2112;
          v144 = v122;
          LODWORD(v105) = 32;
          __int16 v83 = (void *)_os_log_send_and_compose_impl( v79,  0LL,  0LL,  0LL,  &_mh_execute_header,  v78,  1LL,  "%@: Making chunk request for %lu items with kind: %@",  &v139,  v105);

          id v53 = v121;
          id v54 = &ACSLocateCachingServer_ptr;
          if (!v83)
          {
LABEL_103:

            __int16 v84 = (void *)objc_claimAutoreleasedReturnValue( -[RestoreDownloadItemsOperation _runWithItems:options:]( self,  "_runWithItems:options:",  v59,  v53));
            if ([v84 shouldCancelPurchaseBatch])
            {
              v85 = (void *)objc_claimAutoreleasedReturnValue([v84 error]);
              __int16 v86 = v85;
              if (v85)
              {
                v87 = v85;
              }

              else
              {
                __int16 v88 = SSError(v112, 100LL, 0LL, 0LL);
                v87 = (id)objc_claimAutoreleasedReturnValue(v88);
              }

              uint64_t v51 = v87;
            }

            else
            {
              uint64_t v51 = v126;
            }

            id v72 = v123;
            if (v128)
            {
              v89 = (void *)objc_claimAutoreleasedReturnValue([v84 error]);
              v128 = v89 == 0LL;
            }

            else
            {
              v128 = 0;
            }

            -[RestoreDownloadItemsResponse setServerResponse:](v74, "setServerResponse:", v84, v104);
            -[NSMutableArray removeAllObjects](v59, "removeAllObjects");

            __int128 v68 = (id)v124;
            goto LABEL_113;
          }

          __int128 v78 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v83,  4LL));
          free(v83);
          v104 = v78;
          SSFileLog(v75, @"%@");
        }

        else
        {
          id v54 = &ACSLocateCachingServer_ptr;
        }

        goto LABEL_103;
      }

      id v54 = &ACSLocateCachingServer_ptr;
      id v72 = v58;
LABEL_120:

      uint64_t v21 = v115;
      int v52 = v110;
      __int16 v58 = v72;
      uint64_t v50 = v111;
      uint64_t v57 = v117;
      uint64_t v55 = v118;
LABEL_121:

      objc_autoreleasePoolPop(v57);
      uint64_t v55 = (char *)v55 + 1;
    }

    while (v55 != v50);
    uint64_t v50 = [v114 countByEnumeratingWithState:&v131 objects:v147 count:16];
  }

  while (v50);
LABEL_125:

  if (-[NSMutableArray count](v120, "count"))
  {
    v91 = v51;
    v92 = (void *)objc_claimAutoreleasedReturnValue([v54[459] sharedDaemonConfig]);
    if (!v92) {
      v92 = (void *)objc_claimAutoreleasedReturnValue([v54[459] sharedConfig]);
    }
    v93 = objc_msgSend(v92, "shouldLog", v104);
    v94 = (os_log_s *)objc_claimAutoreleasedReturnValue([v92 OSLogObject]);
    if (os_log_type_enabled(v94, OS_LOG_TYPE_DEFAULT)) {
      v95 = v93;
    }
    else {
      v95 = v93 & 2;
    }
    if ((_DWORD)v95)
    {
      v96 = (void *)objc_opt_class(self);
      v97 = v96;
      v98 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableArray componentsJoinedByString:](v120, "componentsJoinedByString:", @", "));
      v139 = 138412802;
      v140 = v96;
      v141 = 2114;
      v142 = (uint64_t)v98;
      v143 = 2114;
      v144 = v91;
      LODWORD(v105) = 32;
      v99 = (void *)_os_log_send_and_compose_impl( v95,  0LL,  0LL,  0LL,  &_mh_execute_header,  v94,  0LL,  "%@: Cancel restore items: [%{public}@] error: %{public}@",  &v139,  v105);

      uint64_t v51 = v91;
      if (v99)
      {
        v94 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v99,  4LL));
        free(v99);
        SSFileLog(v92, @"%@");
        goto LABEL_136;
      }
    }

    else
    {
LABEL_136:
    }

    v100 = objc_opt_class(self);
    v106 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableArray componentsJoinedByString:](v120, "componentsJoinedByString:", @", "));
    SSDebugLog(1LL, @"[%@]: Cancel restore items: [%@] error: %@");

    v101 = -[RestoreDownloadItemsOperation _newResponseWithItems:error:]( self,  "_newResponseWithItems:error:",  v120,  v51,  v100,  v106,  v51);
    -[RestoreDownloadItemsOperation _addResponse:](self, "_addResponse:", v101);

    id v53 = v121;
  }

  if (a4) {
    *a4 = 0LL;
  }

  return v128;
}

  id v54 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "valueForProperty:", @"sinfs_data", v64));
  if (v54)
  {
    uint64_t v55 = (void *)objc_claimAutoreleasedReturnValue( +[NSPropertyListSerialization propertyListWithData:options:format:error:]( &OBJC_CLASS___NSPropertyListSerialization,  "propertyListWithData:options:format:error:",  v54,  0LL,  0LL,  0LL));
    int v56 = objc_opt_class(v37[348]);
    if ((objc_opt_isKindOfClass(v55, v56) & 1) != 0)
    {
      uint64_t v57 = sub_10001F7B0();
      __int16 v58 = (void *)objc_claimAutoreleasedReturnValue(v57);
      -[NSMutableDictionary setObject:forKey:](v32, "setObject:forKey:", v55, v58);
    }
  }

  if (-[NSMutableDictionary count](v32, "count")) {
    -[NSMutableDictionary setObject:forKey:](v8, "setObject:forKey:", v32, AVAssetDownloadSessionPurchaseBundleKey);
  }
  uint64_t v59 = (void *)objc_claimAutoreleasedReturnValue([v7 allHTTPHeaderFields]);
  __int16 v60 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  uint64_t v61 = kISCookieHeader;
  int v62 = (void *)objc_claimAutoreleasedReturnValue([v59 objectForKey:kISCookieHeader]);
  if (v62) {
    -[NSMutableDictionary setObject:forKey:](v60, "setObject:forKey:", v62, v61);
  }

  if (-[NSMutableDictionary count](v60, "count")) {
    -[NSMutableDictionary setObject:forKey:](v8, "setObject:forKey:", v60, AVAssetDownloadSessionHTTPHeaderFieldsKey);
  }

  return v8;
}

int64_t sub_1000C2AF0(id a1, id a2, id a3)
{
  id v4 = a3;
  unint64_t v5 = sub_1000C2B48(a2);
  unint64_t v6 = sub_1000C2B48(v4);

  int64_t v7 = -1LL;
  if (v5 >= v6) {
    int64_t v7 = 1LL;
  }
  if (v5 == v6) {
    return 0LL;
  }
  else {
    return v7;
  }
}

uint64_t sub_1000C2B48(void *a1)
{
  id v1 = a1;
  if ((SSDownloadKindIsSoftwareKind() & 1) != 0)
  {
    uint64_t v2 = 1LL;
  }

  else if ((SSDownloadKindIsEBookKind(v1) & 1) != 0)
  {
    uint64_t v2 = 2LL;
  }

  else if ((SSDownloadKindIsVideoKind(v1) & 1) != 0)
  {
    uint64_t v2 = 5LL;
  }

  else if ((SSDownloadKindIsToneKind(v1) & 1) != 0)
  {
    uint64_t v2 = 4LL;
  }

  else if (SSDownloadKindIsMediaKind(v1))
  {
    uint64_t v2 = 3LL;
  }

  else
  {
    uint64_t v2 = 6LL;
  }

  return v2;
}

void sub_1000C31C8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1000C31EC(uint64_t a1, void *a2, void *a3)
{
  id v8 = a2;
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  int64_t v7 = WeakRetained;
  if (WeakRetained) {
    [WeakRetained _attemptFireForJob:v5 withName:v8];
  }
}

LABEL_21:
    CFRelease(v5);
    goto LABEL_22;
  }
}

  return v22;
}
}

  return v7;
}

uint64_t sub_1000C3D74(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a1 + 32) + 40LL) + 16LL))();
}

uint64_t sub_1000C4498()
{
  return ISWeakLinkedClassForString(@"MBManager", 18LL);
}

void sub_1000C4660()
{
}

void sub_1000C4D00(_Unwind_Exception *a1)
{
}

void sub_1000C5910(_Unwind_Exception *a1)
{
}

void sub_1000C5928(uint64_t a1, int a2)
{
  if (a2) {
    objc_terminate();
  }
  JUMPOUT(0x1000C5934LL);
}

void sub_1000C64B0(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  uint64_t v2 = (void *)qword_1003A3360;
  qword_1003A3360 = (uint64_t)v1;
}

id sub_1000C6984(uint64_t a1)
{
  return [*(id *)(a1 + 32) _fireWaitBlocksIfNecessaryForDownloadWithIdentifier:*(void *)(a1 + 40)];
}

id sub_1000C6A84(uint64_t a1)
{
  return [*(id *)(a1 + 32) _performNextOperation];
}

void sub_1000C6FD8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, char a27)
{
}

void sub_1000C7034(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[SSSQLiteComparisonPredicate predicateWithProperty:equalToLongLong:]( &OBJC_CLASS___SSSQLiteComparisonPredicate,  "predicateWithProperty:equalToLongLong:",  @"is_from_store",  1LL));
  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[SSSQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SSSQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"kind",  SSDownloadKindSoftwareApplication));
  unint64_t v6 = (void *)objc_claimAutoreleasedReturnValue( +[SSSQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SSSQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"store_item_id",  *(void *)(a1 + 32)));
  int64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:](&OBJC_CLASS___NSArray, "arrayWithObjects:", v5, v4, v6, 0LL));
  id v8 = (void *)objc_claimAutoreleasedReturnValue( +[SSSQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SSSQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v7));

  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v3 database]);
  unsigned int v10 = (void *)objc_claimAutoreleasedReturnValue( +[DownloadEntity queryWithDatabase:predicate:]( &OBJC_CLASS___DownloadEntity,  "queryWithDatabase:predicate:",  v9,  v8));

  uint64_t v16 = @"download_state.phase";
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472LL;
  v13[2] = sub_1000C7234;
  v13[3] = &unk_10034D9D8;
  id v14 = *(id *)(a1 + 32);
  __int128 v12 = *(_OWORD *)(a1 + 40);
  id v11 = (id)v12;
  __int128 v15 = v12;
  [v10 enumeratePersistentIDsAndProperties:&v16 count:1 usingBlock:v13];
}

void sub_1000C7234(uint64_t a1, uint64_t a2, id *a3, uint64_t a4, _BYTE *a5)
{
  id v8 = *a3;
  uint64_t v9 = v8;
  if (v8)
  {
    if (([v8 isEqualToString:SSDownloadPhaseDownloading] & 1) == 0
      && ([v9 isEqualToString:SSDownloadPhaseInstalling] & 1) == 0
      && ([v9 isEqualToString:SSDownloadPhaseProcessing] & 1) == 0
      && ![v9 isEqualToString:SSDownloadPhaseWaiting])
    {
      uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", a2));
      [*(id *)(a1 + 40) addObject:v17];

      goto LABEL_19;
    }

    unsigned int v10 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v10) {
      unsigned int v10 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v11 = [v10 shouldLog];
    else {
      unsigned int v12 = v11;
    }
    uint64_t v13 = (os_log_s *)objc_claimAutoreleasedReturnValue([v10 OSLogObject]);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO)) {
      uint64_t v14 = v12;
    }
    else {
      uint64_t v14 = v12 & 2;
    }
    if ((_DWORD)v14)
    {
      uint64_t v15 = *(void *)(a1 + 32);
      int v18 = 138412546;
      uint64_t v19 = v15;
      __int16 v20 = 2112;
      uint64_t v21 = v9;
      uint64_t v16 = (void *)_os_log_send_and_compose_impl( v14,  0LL,  0LL,  0LL,  &_mh_execute_header,  v13,  1LL,  "[ApplicationWorkspace]: Persistent state installing item with itemIdentifier: %@ phase: %@",  &v18,  22);

      if (!v16)
      {
LABEL_18:

        *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = 1;
        *a5 = 1;
        goto LABEL_19;
      }

      uint64_t v13 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v16,  4LL));
      free(v16);
      SSFileLog(v10, @"%@");
    }

    goto LABEL_18;
  }

id sub_1000C76A0(uint64_t a1)
{
  return [*(id *)(a1 + 32) _performNextOperation];
}

id sub_1000C795C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _performNextOperation];
}

uint64_t sub_1000C7B7C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_autoreleasePoolPush();
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v3 database]);
  id v6 = objc_alloc_init(&OBJC_CLASS___SSSQLiteQueryDescriptor);
  int64_t v7 = (void *)objc_claimAutoreleasedReturnValue( +[SSSQLiteComparisonPredicate predicateWithProperty:value:comparisonType:]( &OBJC_CLASS___SSSQLiteComparisonPredicate,  "predicateWithProperty:value:comparisonType:",  @"time_updated",  *(void *)(a1 + 32),  3LL));
  [v6 setEntityClass:objc_opt_class(ApplicationWorkspaceState)];
  uint64_t v22 = @"time_updated";
  id v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v22, 1LL));
  [v6 setOrderingProperties:v8];

  uint64_t v21 = SSSQLiteOrderAscending;
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v21, 1LL));
  [v6 setOrderingDirections:v9];

  [v6 setPredicate:v7];
  unsigned int v10 = -[SSSQLiteQuery initWithDatabase:descriptor:]( objc_alloc(&OBJC_CLASS___SSSQLiteQuery),  "initWithDatabase:descriptor:",  v5,  v6);
  v20[0] = @"bundle_id";
  v20[1] = @"download_id";
  void v20[2] = @"expected_phase";
  v20[3] = @"retry_count";
  unsigned int v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v20, 4LL));
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472LL;
  v16[2] = sub_1000C7DC4;
  v16[3] = &unk_10034DA28;
  id v12 = v3;
  id v17 = v12;
  id v13 = *(id *)(a1 + 32);
  uint64_t v14 = *(void *)(a1 + 40);
  id v18 = v13;
  uint64_t v19 = v14;
  -[SSSQLiteQuery enumerateMemoryEntitiesWithProperties:usingBlock:]( v10,  "enumerateMemoryEntitiesWithProperties:usingBlock:",  v11,  v16);

  objc_autoreleasePoolPop(v4);
  return 1LL;
}

void sub_1000C7DC4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_autoreleasePoolPush();
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v3 valueForProperty:@"bundle_id"]);
  if ([v5 length])
  {
    uint64_t v51 = v4;
    uint64_t v6 = objc_claimAutoreleasedReturnValue([v3 valueForProperty:@"download_id"]);
    int64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v3 valueForProperty:@"transaction_id"]);
    id v8 = (void *)objc_claimAutoreleasedReturnValue([v3 valueForProperty:@"expected_phase"]);
    uint64_t v50 = (void *)objc_claimAutoreleasedReturnValue([v3 valueForProperty:@"retry_count"]);
    int v9 = [v50 intValue];
    int v52 = (void *)v6;
    if (v9 > 1)
    {
      unsigned int v24 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
      if (!v24) {
        unsigned int v24 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      unsigned int v25 = [v24 shouldLog];
      id v26 = (os_log_s *)objc_claimAutoreleasedReturnValue([v24 OSLogObject]);
      if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT)) {
        uint64_t v27 = v25;
      }
      else {
        uint64_t v27 = v25 & 2;
      }
      if ((_DWORD)v27)
      {
        int v53 = 138412802;
        id v54 = v8;
        __int16 v55 = 2112;
        int v56 = v5;
        __int16 v57 = 2112;
        uint64_t v58 = v6;
        unsigned int v28 = (void *)_os_log_send_and_compose_impl( v27,  0LL,  0LL,  0LL,  &_mh_execute_header,  v26,  0LL,  "[ApplicationWorkspace]: Cannot retry incomplete operation again: [%@] [%@] [%@]",  &v53,  32);

        if (v28)
        {
          uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v28,  4LL));
          free(v28);
          SSFileLog(v24, @"%@");
        }
      }

      else
      {
      }

      +[ApplicationWorkspaceState deleteIncompleteNotification:forBundleIdentifier:]( &OBJC_CLASS___ApplicationWorkspaceState,  "deleteIncompleteNotification:forBundleIdentifier:",  v8,  v5);
      goto LABEL_69;
    }

    int v10 = v9;
    unsigned int v11 = objc_alloc(&OBJC_CLASS___ApplicationWorkspaceState);
    id v12 = [v3 databaseID];
    id v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) database]);
    uint64_t v14 = -[ApplicationWorkspaceState initWithPersistentID:inDatabase:]( v11,  "initWithPersistentID:inDatabase:",  v12,  v13);

    v59[0] = @"retry_count";
    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", (v10 + 1)));
    v59[1] = @"time_updated";
    uint64_t v16 = *(void *)(a1 + 40);
    v60[0] = v15;
    v60[1] = v16;
    id v17 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v60,  v59,  2LL));
    uint64_t v49 = v14;
    -[ApplicationWorkspaceState setValuesWithDictionary:](v14, "setValuesWithDictionary:", v17);

    id v18 = -[ApplicationHandle initWithTransactionIdentifier:downloadIdentifier:bundleIdentifier:]( [ApplicationHandle alloc],  "initWithTransactionIdentifier:downloadIdentifier:bundleIdentifier:",  [v7 longLongValue],  objc_msgSend(v52, "longLongValue"),  v5);
    if ([v8 isEqualToString:SSDownloadPhaseFailed])
    {
      id v46 = v18;
      uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
      id v4 = v51;
      if (!v19) {
        uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      unsigned int v20 = [v19 shouldLog];
      uint64_t v21 = (os_log_s *)objc_claimAutoreleasedReturnValue([v19 OSLogObject]);
      if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT)) {
        uint64_t v22 = v20;
      }
      else {
        uint64_t v22 = v20 & 2;
      }
      if ((_DWORD)v22)
      {
        int v53 = 138412802;
        id v54 = v8;
        __int16 v55 = 2112;
        int v56 = v5;
        __int16 v57 = 2112;
        uint64_t v58 = (uint64_t)v52;
        id v23 = (void *)_os_log_send_and_compose_impl( v22,  0LL,  0LL,  0LL,  &_mh_execute_header,  v21,  0LL,  "[ApplicationWorkspace]: Retrying incomplete due to download fail: [%@] [%@] [%@]",  &v53,  32);

        if (!v23)
        {
LABEL_15:

          id v18 = v46;
          [*(id *)(a1 + 48) markFailedPlaceholderForApplicationHandle:v46];
LABEL_68:

LABEL_69:
          goto LABEL_70;
        }

        uint64_t v21 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v23,  4LL));
        free(v23);
        SSFileLog(v19, @"%@");
      }

      goto LABEL_15;
    }

    if ([v8 isEqualToString:SSDownloadPhaseInstalling])
    {
      id v47 = v18;
      uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
      id v4 = v51;
      if (!v30) {
        uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      unsigned int v31 = [v30 shouldLog];
      uint64_t v32 = (os_log_s *)objc_claimAutoreleasedReturnValue([v30 OSLogObject]);
      if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT)) {
        uint64_t v33 = v31;
      }
      else {
        uint64_t v33 = v31 & 2;
      }
      if ((_DWORD)v33)
      {
        int v53 = 138412802;
        id v54 = v8;
        __int16 v55 = 2112;
        int v56 = v5;
        __int16 v57 = 2112;
        uint64_t v58 = (uint64_t)v52;
        uint64_t v34 = (void *)_os_log_send_and_compose_impl( v33,  0LL,  0LL,  0LL,  &_mh_execute_header,  v32,  0LL,  "[ApplicationWorkspace]: Retrying incomplete installing: [%@] [%@] [%@]",  &v53,  32);

        if (!v34)
        {
LABEL_38:

          id v18 = v47;
          [*(id *)(a1 + 48) installPlaceholderForApplicationHandle:v47];
          goto LABEL_68;
        }

        uint64_t v32 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v34,  4LL));
        free(v34);
        SSFileLog(v30, @"%@");
      }

      goto LABEL_38;
    }

    unsigned int v35 = [v8 isEqualToString:SSDownloadPhaseCanceled];
    uint64_t v36 = objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    id v37 = (void *)v36;
    if (v35)
    {
      unsigned int v48 = v18;
      if (!v36) {
        id v37 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      unsigned int v38 = [v37 shouldLog];
      uint64_t v39 = (os_log_s *)objc_claimAutoreleasedReturnValue([v37 OSLogObject]);
      if (os_log_type_enabled(v39, OS_LOG_TYPE_DEFAULT)) {
        uint64_t v40 = v38;
      }
      else {
        uint64_t v40 = v38 & 2;
      }
      if ((_DWORD)v40)
      {
        int v53 = 138412802;
        id v54 = v8;
        __int16 v55 = 2112;
        int v56 = v5;
        __int16 v57 = 2112;
        uint64_t v58 = (uint64_t)v52;
        id v41 = (void *)_os_log_send_and_compose_impl( v40,  0LL,  0LL,  0LL,  &_mh_execute_header,  v39,  0LL,  "[ApplicationWorkspace]: Retrying incomplete download canceled: [%@] [%@] [%@]",  &v53,  32);

        id v4 = v51;
        if (!v41)
        {
LABEL_64:

          id v18 = v48;
          [*(id *)(a1 + 48) uninstallPlaceholderForApplicationHandle:v48];
          goto LABEL_68;
        }

        uint64_t v39 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v41,  4LL));
        free(v41);
        SSFileLog(v37, @"%@");
      }

      else
      {
        id v4 = v51;
      }

      goto LABEL_64;
    }

    if (!v36) {
      id v37 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v42 = [v37 shouldLog];
    uint64_t v43 = (os_log_s *)objc_claimAutoreleasedReturnValue([v37 OSLogObject]);
    if (os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v44 = v42;
    }
    else {
      uint64_t v44 = v42 & 2;
    }
    if ((_DWORD)v44)
    {
      int v53 = 138412802;
      id v54 = v8;
      __int16 v55 = 2112;
      int v56 = v5;
      __int16 v57 = 2112;
      uint64_t v58 = (uint64_t)v52;
      uint64_t v45 = (void *)_os_log_send_and_compose_impl( v44,  0LL,  0LL,  0LL,  &_mh_execute_header,  v43,  0LL,  "[ApplicationWorkspace]:Unexpected incomplete operation type: [%@] [%@] [%@]",  &v53,  32);

      id v4 = v51;
      if (!v45)
      {
LABEL_67:

        goto LABEL_68;
      }

      uint64_t v43 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v45,  4LL));
      free(v45);
      SSFileLog(v37, @"%@");
    }

    else
    {
      id v4 = v51;
    }

    goto LABEL_67;
  }

LABEL_70:
  objc_autoreleasePoolPop(v4);
}

id sub_1000C8728(uint64_t a1)
{
  return [*(id *)(a1 + 32) _performNextOperation];
}

id sub_1000C87E4(uint64_t a1)
{
  return [*(id *)(a1 + 32) _performNextOperation];
}

id sub_1000C89EC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _performNextOperation];
}

id sub_1000C8B24(uint64_t a1)
{
  return [*(id *)(a1 + 32) _performNextOperation];
}

id sub_1000C8BE0(uint64_t a1)
{
  return [*(id *)(a1 + 32) _performNextOperation];
}

uint64_t sub_1000C8F64(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

BOOL sub_1000C9300(uint64_t a1, void *a2)
{
  id v2 = *(id *)(a1 + 32);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a2 applicationHandle]);
  BOOL v4 = v2 == [v3 downloadID];

  return v4;
}

id sub_1000C9340(uint64_t a1)
{
  return [*(id *)(a1 + 32) _performNextOperation];
}

void sub_1000C9664(uint64_t a1)
{
  __int128 v6 = 0u;
  __int128 v7 = 0u;
  __int128 v8 = 0u;
  __int128 v9 = 0u;
  id v1 = *(id *)(a1 + 32);
  id v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      id v5 = 0LL;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        (*(void (**)(void))(*(void *)(*((void *)&v6 + 1) + 8LL * (void)v5) + 16LL))(*(void *)(*((void *)&v6 + 1) + 8LL * (void)v5));
        id v5 = (char *)v5 + 1;
      }

      while (v3 != v5);
      id v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }

    while (v3);
  }
}

void sub_1000C97F4(uint64_t a1)
{
  if ([*(id *)(a1 + 32) count])
  {
    id v2 = *(void **)(a1 + 32);
    id v3 = *(dispatch_queue_s **)(*(void *)(a1 + 40) + 16LL);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1000C9874;
    block[3] = &unk_10034AC30;
    id v5 = v2;
    dispatch_async(v3, block);
  }

void sub_1000C9874(uint64_t a1)
{
  __int128 v6 = 0u;
  __int128 v7 = 0u;
  __int128 v8 = 0u;
  __int128 v9 = 0u;
  id v1 = *(id *)(a1 + 32);
  id v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      id v5 = 0LL;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        (*(void (**)(void))(*(void *)(*((void *)&v6 + 1) + 8LL * (void)v5) + 16LL))(*(void *)(*((void *)&v6 + 1) + 8LL * (void)v5));
        id v5 = (char *)v5 + 1;
      }

      while (v3 != v5);
      id v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }

    while (v3);
  }
}

void sub_1000C9CB0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_1000C9CD0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1000C9CE0(uint64_t a1)
{
}

void sub_1000C9CE8(uint64_t a1, int a2, id obj)
{
  id v5 = obj;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1000CA330(id a1, sqlite3 *a2)
{
}

void sub_1000CA590( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

id sub_1000CA5A8(uint64_t a1, uint64_t a2)
{
  id result = +[SSSQLiteDatabase statementHasRowAfterStepping:]( &OBJC_CLASS___SSSQLiteDatabase,  "statementHasRowAfterStepping:",  a2);
  *(_BYTE *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = (_BYTE)result;
  return result;
}

void sub_1000CA5E0(void *a1)
{
  for (uint64_t i = 0LL; i != 80; i += 16LL)
  {
    id v3 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"INSERT INTO application_id (effective_client_id, bundle_id) VALUES (%ld, %@)",  *(__CFString **)((char *)&off_10034DAF8 + i + 8),  *(__CFString **)((char *)&off_10034DAF8 + i));
    [a1 executeSQL:v3];
  }

LABEL_120:
  _Block_object_dispose(&v26, 8);
  return v6 > 0x658;
}

  id v82 = v134;
  __int16 v83 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig", v123));
  if (!v83) {
    __int16 v83 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  __int16 v84 = [v83 shouldLog];
  v85 = (os_log_s *)objc_claimAutoreleasedReturnValue([v83 OSLogObject]);
  if (os_log_type_enabled(v85, OS_LOG_TYPE_INFO)) {
    __int16 v86 = v84;
  }
  else {
    __int16 v86 = v84 & 2;
  }
  if (!(_DWORD)v86) {
    goto LABEL_130;
  }
  v87 = (id)objc_opt_class(self);
  __int16 v88 = [v4 databaseID];
  v157 = 138412802;
  v158 = v87;
  v159 = 2048;
  v160 = v88;
  v161 = 2112;
  v162 = v146;
  LODWORD(v125) = 32;
  v89 = (void *)_os_log_send_and_compose_impl( v86,  0LL,  0LL,  0LL,  &_mh_execute_header,  v85,  1LL,  "%@: Installed document for download: %lld at path: %@",  &v157,  v125);

  if (v89)
  {
    v85 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v89,  4LL));
    free(v89);
    v124 = v85;
    SSFileLog(v83, @"%@");
LABEL_130:
  }

  -[FinishDownloadResponse setResult:](v3, "setResult:", 4LL);
  -[FinishDownloadResponse setMediaAssetInstallPath:](v3, "setMediaAssetInstallPath:", v146);
  __int16 v90 = v139;
  uint64_t v51 = v142;
LABEL_180:
  -[FinishDownloadStepOperation finishWithDownloadResponse:](self, "finishWithDownloadResponse:", v3, v124);
}

  __int128 v6 = v108;
  self = v121;
  __int16 v55 = &off_1002D4000;
  uint64_t v59 = v116;
LABEL_121:
  __int16 v88 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15[459], "sharedDaemonConfig", v102));
  if (!v88) {
    __int16 v88 = (void *)objc_claimAutoreleasedReturnValue([v15[459] sharedConfig]);
  }
  LODWORD(v89) = [v88 shouldLog];
  __int16 v90 = (os_log_s *)objc_claimAutoreleasedReturnValue([v88 OSLogObject]);
  if (os_log_type_enabled(v90, OS_LOG_TYPE_INFO)) {
    v89 = v89;
  }
  else {
    v89 &= 2u;
  }
  if ((_DWORD)v89)
  {
    v91 = (void *)objc_opt_class(self);
    v92 = v59;
    v93 = v91;
    v94 = -[NSMutableDictionary count](v105, "count");
    v143 = *((void *)v55 + 15);
    v144 = v91;
    self = v121;
    v145 = 2050;
    v146 = (NSUInteger)v94;
    LODWORD(v103) = 22;
    v95 = (void *)_os_log_send_and_compose_impl( v89,  0LL,  0LL,  0LL,  &_mh_execute_header,  v90,  1LL,  "%{public}@: Found metadata for %{public}lu codes",  &v143,  v103);

    uint64_t v59 = v92;
    if (v95)
    {
      __int16 v90 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v95,  4LL));
      free(v95);
      SSFileLog(v88, @"%@");
      goto LABEL_131;
    }
  }

  else
  {
LABEL_131:
  }

  -[RedeemCodesOperation lock](self, "lock");
  v96 = (NSDictionary *)-[NSMutableDictionary copy](v105, "copy");
  redeemMetadataByCode = self->_redeemMetadataByCode;
  self->_redeemMetadataByCode = v96;

  v98 = (NSDictionary *)-[NSMutableDictionary copy](v124, "copy");
  installedExternalVersionByiTunesIdentifier = self->_installedExternalVersionByiTunesIdentifier;
  self->_installedExternalVersionByiTunesIdentifier = v98;

  -[RedeemCodesOperation unlock](self, "unlock");
  if (a3 && v110) {
    *a3 = v110;
  }

  return v107 & 1;
}

void sub_1000CAF98( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_1000CAFD4(uint64_t a1, uint64_t a2)
{
  if (+[SSSQLiteDatabase statementHasRowAfterStepping:]( &OBJC_CLASS___SSSQLiteDatabase,  "statementHasRowAfterStepping:",  a2))
  {
    id v4 = (id)SSSQLiteCopyFoundationValueForStatementColumn(a2, 0LL);
    *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = [v4 intValue];
  }

id sub_1000CB044(void *a1, const char *a2)
{
  *(_DWORD *)a2 = 5000;
  return [a1 setUserVersion:5000];
}

id sub_1000CB054(void *a1, _DWORD *a2)
{
  *a2 = 5001;
  return [a1 setUserVersion:5001];
}

id sub_1000CB090(void *a1, _DWORD *a2)
{
  *a2 = 5002;
  return [a1 setUserVersion:5002];
}

id sub_1000CB0CC(void *a1, _DWORD *a2)
{
  *a2 = 5003;
  return [a1 setUserVersion:5003];
}

id sub_1000CB108(void *a1, _DWORD *a2)
{
  *a2 = 5004;
  return [a1 setUserVersion:5004];
}

id sub_1000CB154(void *a1, _DWORD *a2)
{
  *a2 = 5005;
  return [a1 setUserVersion:5005];
}

id sub_1000CB190(void *a1, _DWORD *a2)
{
  *a2 = 5006;
  return [a1 setUserVersion:5006];
}

id sub_1000CB1CC(void *a1, _DWORD *a2)
{
  *a2 = 5007;
  return [a1 setUserVersion:5007];
}

id sub_1000CB218(void *a1, _DWORD *a2)
{
  *a2 = 5008;
  return [a1 setUserVersion:5008];
}

id sub_1000CB254(void *a1, _DWORD *a2)
{
  *a2 = 5009;
  return [a1 setUserVersion:5009];
}

id sub_1000CB290(void *a1, _DWORD *a2)
{
  *a2 = 5010;
  return [a1 setUserVersion:5010];
}

id sub_1000CB2CC(void *a1, _DWORD *a2)
{
  *a2 = 5100;
  return [a1 setUserVersion:5100];
}

id sub_1000CB358(void *a1, _DWORD *a2)
{
  *a2 = 5101;
  return [a1 setUserVersion:5101];
}

id sub_1000CB394(void *a1, _DWORD *a2)
{
  *a2 = 6000;
  return [a1 setUserVersion:6000];
}

id sub_1000CB3D0(void *a1, _DWORD *a2)
{
  id v3 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  v42[2] = *(_OWORD *)off_10034DB68;
  void v42[3] = *(_OWORD *)off_10034DB78;
  uint64_t v43 = @"size_limit_WiFi";
  v42[0] = *(_OWORD *)off_10034DB48;
  v42[1] = *(_OWORD *)off_10034DB58;
  id v4 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  for (uint64_t i = 0LL; i != 72; i += 8LL)
    -[NSMutableArray addObject:]( v4,  "addObject:",  +[SSSQLiteNullPredicate isNotNullPredicateWithProperty:]( &OBJC_CLASS___SSSQLiteNullPredicate,  "isNotNullPredicateWithProperty:",  *(void *)((char *)v42 + i)));
  v35[0] = _NSConcreteStackBlock;
  v35[1] = 3221225472LL;
  v35[2] = sub_1000CC944;
  v35[3] = &unk_10034DB98;
  v35[4] = v3;
  v35[5] = 9LL;
  objc_msgSend( +[DownloadEntity queryWithDatabase:predicate:]( DownloadEntity,  "queryWithDatabase:predicate:",  a1,  +[SSSQLiteCompoundPredicate predicateMatchingAnyPredicates:]( SSSQLiteCompoundPredicate,  "predicateMatchingAnyPredicates:",  v4)),  "enumeratePersistentIDsAndProperties:count:usingBlock:",  v42,  9,  v35);

  id v6 = +[DownloadAssetEntity queryWithDatabase:predicate:]( &OBJC_CLASS___DownloadAssetEntity,  "queryWithDatabase:predicate:",  a1,  +[SSSQLiteComparisonPredicate predicateWithProperty:equalToLongLong:]( &OBJC_CLASS___SSSQLiteComparisonPredicate,  "predicateWithProperty:equalToLongLong:",  @"requires_device_plugged_in",  1LL));
  id v41 = @"download_id";
  v34[0] = _NSConcreteStackBlock;
  v34[1] = 3221225472LL;
  v34[2] = sub_1000CCBA8;
  v34[3] = &unk_10034ADA8;
  void v34[4] = v3;
  [v6 enumeratePersistentIDsAndProperties:&v41 count:1 usingBlock:v34];
  __int128 v32 = 0u;
  __int128 v33 = 0u;
  __int128 v30 = 0u;
  __int128 v31 = 0u;
  id v7 = -[NSMutableDictionary countByEnumeratingWithState:objects:count:]( v3,  "countByEnumeratingWithState:objects:count:",  &v30,  v40,  16LL);
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v31;
    do
    {
      for (uint64_t j = 0LL; j != v8; uint64_t j = (char *)j + 1)
      {
        if (*(void *)v31 != v9) {
          objc_enumerationMutation(v3);
        }
        unsigned int v11 = *(void **)(*((void *)&v30 + 1) + 8LL * (void)j);
        uint64_t v29 = 0LL;
        id v12 = +[NSKeyedArchiver archivedDataWithRootObject:requiringSecureCoding:error:]( &OBJC_CLASS___NSKeyedArchiver,  "archivedDataWithRootObject:requiringSecureCoding:error:",  -[NSMutableDictionary objectForKey:](v3, "objectForKey:", v11, v26),  1LL,  &v29);
        if (v29)
        {
          id v14 = +[SSLogConfig sharedStoreServicesConfig](&OBJC_CLASS___SSLogConfig, "sharedStoreServicesConfig");
          if (!v14) {
            id v14 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
          }
          unsigned int v15 = [v14 shouldLog];
          else {
            unsigned int v16 = v15;
          }
          id v17 = (os_log_s *)[v14 OSLogObject];
          if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
            uint64_t v18 = v16;
          }
          else {
            uint64_t v18 = v16 & 2;
          }
          if ((_DWORD)v18)
          {
            int v36 = 136446466;
            id v37 = "void ConvertConstraintsToPolicies(SSSQLiteDatabase *)";
            __int16 v38 = 2114;
            uint64_t v39 = v29;
            LODWORD(v27) = 22;
            uint64_t v19 = _os_log_send_and_compose_impl( v18,  0LL,  0LL,  0LL,  &_mh_execute_header,  v17,  16LL,  "%{public}s: Failed to archive download policy. Error = %{public}@",  &v36,  v27);
            if (v19)
            {
              unsigned int v20 = (void *)v19;
              uint64_t v21 = +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v19,  4LL);
              free(v20);
              id v26 = v21;
              *(void *)&double v13 = SSFileLog(v14, @"%@").n128_u64[0];
            }
          }
        }

        if (v12)
        {
          uint64_t v22 = -[NSDictionary initWithObjectsAndKeys:]( objc_alloc(&OBJC_CLASS___NSDictionary),  "initWithObjectsAndKeys:",  v12,  @"policy_data",  0LL);
          id v23 = -[DownloadPolicyEntity initWithPropertyValues:inDatabase:]( objc_alloc(&OBJC_CLASS___DownloadPolicyEntity),  "initWithPropertyValues:inDatabase:",  v22,  a1);
          unsigned int v24 = -[DownloadEntity initWithPersistentID:inDatabase:]( [DownloadEntity alloc],  "initWithPersistentID:inDatabase:",  [v11 longLongValue],  a1);
          -[DownloadEntity setValue:forProperty:]( v24,  "setValue:forProperty:",  +[NSNumber numberWithLongLong:]( &OBJC_CLASS___NSNumber,  "numberWithLongLong:",  -[DownloadPolicyEntity persistentID](v23, "persistentID")),  @"policy_id");
        }
      }

      id v8 = -[NSMutableDictionary countByEnumeratingWithState:objects:count:]( v3,  "countByEnumeratingWithState:objects:count:",  &v30,  v40,  16LL,  v13);
    }

    while (v8);
  }

  *a2 = 6001;
  return [a1 setUserVersion:6001];
}

id sub_1000CB848(void *a1, _DWORD *a2)
{
  *a2 = 6002;
  return [a1 setUserVersion:6002];
}

id sub_1000CB884(void *a1, _DWORD *a2)
{
  *a2 = 6003;
  return [a1 setUserVersion:6003];
}

id sub_1000CB8C0(void *a1, _DWORD *a2)
{
  *a2 = 6004;
  return [a1 setUserVersion:6004];
}

id sub_1000CB8FC(void *a1, _DWORD *a2)
{
  *a2 = 6005;
  return [a1 setUserVersion:6005];
}

id sub_1000CB938(void *a1, _DWORD *a2)
{
  *a2 = 6006;
  return [a1 setUserVersion:6006];
}

id sub_1000CB984(void *a1, _DWORD *a2)
{
  *a2 = 6007;
  return [a1 setUserVersion:6007];
}

id sub_1000CB9C0(void *a1, _DWORD *a2)
{
  *a2 = 6008;
  return [a1 setUserVersion:6008];
}

id sub_1000CB9FC(void *a1, _DWORD *a2)
{
  *a2 = 6009;
  return [a1 setUserVersion:6009];
}

id sub_1000CBA38(void *a1, _DWORD *a2)
{
  *a2 = 6010;
  return [a1 setUserVersion:6010];
}

id sub_1000CBA74(void *a1, _DWORD *a2)
{
  *a2 = 6011;
  return [a1 setUserVersion:6011];
}

id sub_1000CBAC0(void *a1, _DWORD *a2)
{
  *a2 = 6012;
  return [a1 setUserVersion:6012];
}

id sub_1000CBAFC(void *a1, _DWORD *a2)
{
  *a2 = 6013;
  return [a1 setUserVersion:6013];
}

id sub_1000CBB38(void *a1, _DWORD *a2)
{
  *a2 = 6014;
  return [a1 setUserVersion:6014];
}

id sub_1000CBB74(void *a1, _DWORD *a2)
{
  *a2 = 6100;
  return [a1 setUserVersion:6100];
}

id sub_1000CBBB0(void *a1, _DWORD *a2)
{
  *a2 = 7000;
  return [a1 setUserVersion:7000];
}

id sub_1000CBC0C(void *a1, _DWORD *a2)
{
  *a2 = 7002;
  return [a1 setUserVersion:7002];
}

id sub_1000CBC48(void *a1, _DWORD *a2)
{
  *a2 = 7002;
  return [a1 setUserVersion:7002];
}

id sub_1000CBC84(void *a1, _DWORD *a2)
{
  *a2 = 7003;
  return [a1 setUserVersion:7003];
}

id sub_1000CBCD0(void *a1, _DWORD *a2)
{
  *a2 = 7004;
  return [a1 setUserVersion:7004];
}

id sub_1000CBD0C(void *a1, _DWORD *a2)
{
  *a2 = 7005;
  return [a1 setUserVersion:7005];
}

id sub_1000CBD58(void *a1, _DWORD *a2)
{
  *a2 = 7006;
  return [a1 setUserVersion:7006];
}

id sub_1000CBD94(void *a1, _DWORD *a2)
{
  *a2 = 7008;
  return [a1 setUserVersion:7008];
}

id sub_1000CBDD0(void *a1, _DWORD *a2)
{
  *a2 = 7008;
  return [a1 setUserVersion:7008];
}

id sub_1000CBE0C(void *a1, _DWORD *a2)
{
  *a2 = 7009;
  return [a1 setUserVersion:7009];
}

id sub_1000CBE58(void *a1, _DWORD *a2)
{
  *a2 = 7010;
  return [a1 setUserVersion:7010];
}

id sub_1000CBE94(void *a1, _DWORD *a2)
{
  *a2 = 7011;
  return [a1 setUserVersion:7011];
}

id sub_1000CBEE0(void *a1, _DWORD *a2)
{
  [a1 executeSQL:@"UPDATE download SET priority=1 WHERE priority>1;"];
  [a1 executeSQL:@"UPDATE download SET priority=-1 WHERE priority<0;"];
  [a1 executeSQL:@"UPDATE download SET priority=-2 WHERE is_restore=1;"];
  sub_1000CA5E0(a1);
  *a2 = 7012;
  return [a1 setUserVersion:7012];
}

id sub_1000CBF64(void *a1, _DWORD *a2)
{
  *a2 = 7013;
  return [a1 setUserVersion:7013];
}

id sub_1000CBFA0(void *a1, _DWORD *a2)
{
  *a2 = 7014;
  return [a1 setUserVersion:7014];
}

id sub_1000CBFDC(void *a1, _DWORD *a2)
{
  *a2 = 7015;
  return [a1 setUserVersion:7015];
}

id sub_1000CC018(void *a1, _DWORD *a2)
{
  *a2 = 7100;
  return [a1 setUserVersion:7100];
}

id sub_1000CC054(void *a1, _DWORD *a2)
{
  *a2 = 8000;
  return [a1 setUserVersion:8000];
}

id sub_1000CC090(void *a1, _DWORD *a2)
{
  *a2 = 8001;
  return [a1 setUserVersion:8001];
}

id sub_1000CC0CC(void *a1, _DWORD *a2)
{
  *a2 = 8002;
  return [a1 setUserVersion:8002];
}

id sub_1000CC108(void *a1, _DWORD *a2)
{
  *a2 = 8003;
  return [a1 setUserVersion:8003];
}

id sub_1000CC144(void *a1, _DWORD *a2)
{
  *a2 = 8004;
  return [a1 setUserVersion:8004];
}

id sub_1000CC180(void *a1, _DWORD *a2)
{
  *a2 = 8005;
  return [a1 setUserVersion:8005];
}

id sub_1000CC1BC(void *a1, _DWORD *a2)
{
  *a2 = 8006;
  return [a1 setUserVersion:8006];
}

id sub_1000CC1F8(void *a1, _DWORD *a2)
{
  *a2 = 8300;
  return [a1 setUserVersion:8300];
}

id sub_1000CC244(void *a1, _DWORD *a2)
{
  *a2 = 8301;
  return [a1 setUserVersion:8301];
}

id sub_1000CC280(void *a1, _DWORD *a2)
{
  objc_msgSend( a1,  "executeSQL:",  +[NSString stringWithFormat:]( NSString,  "stringWithFormat:",  @"UPDATE application_id SET effective_client_id=%ld WHERE bundle_id=com.apple.Music;",
      4LL));
  *a2 = 8302;
  return [a1 setUserVersion:8302];
}

id sub_1000CC2E0(void *a1, _DWORD *a2)
{
  *a2 = 8303;
  return [a1 setUserVersion:8303];
}

id sub_1000CC31C(void *a1, _DWORD *a2)
{
  *a2 = 9003;
  return [a1 setUserVersion:9003];
}

id sub_1000CC358(void *a1, _DWORD *a2)
{
  objc_msgSend( a1,  "executeSQL:",  +[NSString stringWithFormat:]( NSString,  "stringWithFormat:",  @"UPDATE application_id SET effective_client_id=%ld WHERE bundle_id=com.apple.Music;",
      4LL));
  [a1 executeSQL:@"ALTER TABLE asset ADD COLUMN protection_type INTEGER DEFAULT 0;"];
  *a2 = 9003;
  return [a1 setUserVersion:9003];
}

id sub_1000CC3DC(void *a1, _DWORD *a2)
{
  *a2 = 9004;
  return [a1 setUserVersion:9004];
}

id sub_1000CC438(void *a1, _DWORD *a2)
{
  *a2 = 9005;
  return [a1 setUserVersion:9005];
}

id sub_1000CC484(void *a1, _DWORD *a2)
{
  *a2 = 9006;
  return [a1 setUserVersion:9006];
}

id sub_1000CC4C0(void *a1, _DWORD *a2)
{
  *a2 = 9007;
  return [a1 setUserVersion:9007];
}

id sub_1000CC4FC(void *a1, _DWORD *a2)
{
  *a2 = 9008;
  return [a1 setUserVersion:9008];
}

id sub_1000CC548(void *a1, _DWORD *a2)
{
  *a2 = 9300;
  return [a1 setUserVersion:9300];
}

id sub_1000CC584(void *a1, _DWORD *a2)
{
  *a2 = 9301;
  return [a1 setUserVersion:9301];
}

id sub_1000CC5D0(void *a1, _DWORD *a2)
{
  *a2 = 9302;
  return [a1 setUserVersion:9302];
}

id sub_1000CC61C(void *a1, _DWORD *a2)
{
  *a2 = 10000;
  return [a1 setUserVersion:10000];
}

id sub_1000CC668(void *a1, _DWORD *a2)
{
  *a2 = 10001;
  return [a1 setUserVersion:10001];
}

id sub_1000CC6B4(void *a1, _DWORD *a2)
{
  *a2 = 10002;
  return [a1 setUserVersion:10002];
}

id sub_1000CC710(void *a1, _DWORD *a2)
{
  *a2 = 10003;
  return [a1 setUserVersion:10003];
}

id sub_1000CC74C(void *a1, _DWORD *a2)
{
  *a2 = 10004;
  return [a1 setUserVersion:10004];
}

id sub_1000CC788(void *a1, _DWORD *a2)
{
  *a2 = 10100;
  return [a1 setUserVersion:10100];
}

id sub_1000CC7F4(void *a1, _DWORD *a2)
{
  *a2 = 10300;
  return [a1 setUserVersion:10300];
}

id sub_1000CC850(void *a1, _DWORD *a2)
{
  *a2 = 11000;
  return [a1 setUserVersion:11000];
}

id sub_1000CC8BC(void *a1, _DWORD *a2)
{
  *a2 = 11200;
  return [a1 setUserVersion:11200];
}

id sub_1000CC908(void *a1, _DWORD *a2)
{
  *a2 = 13000;
  return [a1 setUserVersion:13000];
}

void sub_1000CC944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = -[NSNumber initWithLongLong:](objc_alloc(&OBJC_CLASS___NSNumber), "initWithLongLong:", a2);
  id v6 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  if (*(void *)(a1 + 40))
  {
    unint64_t v7 = 0LL;
    do
    {
      id v8 = (NSNumber *)*(id *)(a3 + 8 * v7);
      if (!v8) {
        id v8 = -[NSNumber initWithLongLong:](objc_alloc(&OBJC_CLASS___NSNumber), "initWithLongLong:", 0LL);
      }
      uint64_t v9 = (NSMutableArray *)-[NSMutableDictionary objectForKey:](v6, "objectForKey:", v8);
      if (!v9)
      {
        uint64_t v9 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
        -[NSMutableDictionary setObject:forKey:](v6, "setObject:forKey:", v9, v8);
      }

      -[NSMutableArray addObject:]( v9,  "addObject:",  +[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", qword_1002D4260[v7]));

      ++v7;
    }

    while (v7 < *(void *)(a1 + 40));
  }

  if (-[NSMutableDictionary count](v6, "count"))
  {
    uint64_t v18 = v5;
    int v10 = objc_alloc_init(&OBJC_CLASS___SSDownloadPolicy);
    unsigned int v11 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    __int128 v19 = 0u;
    __int128 v20 = 0u;
    __int128 v21 = 0u;
    __int128 v22 = 0u;
    id v12 = -[NSMutableDictionary countByEnumeratingWithState:objects:count:]( v6,  "countByEnumeratingWithState:objects:count:",  &v19,  v23,  16LL);
    if (v12)
    {
      id v13 = v12;
      uint64_t v14 = *(void *)v20;
      do
      {
        unsigned int v15 = 0LL;
        do
        {
          if (*(void *)v20 != v14) {
            objc_enumerationMutation(v6);
          }
          unsigned int v16 = *(void **)(*((void *)&v19 + 1) + 8LL * (void)v15);
          id v17 = objc_alloc_init(&OBJC_CLASS___SSDownloadPolicyRule);
          objc_msgSend(v17, "setDownloadSizeLimit:", objc_msgSend(v16, "longLongValue"));
          objc_msgSend(v17, "setNetworkTypes:", -[NSMutableDictionary objectForKey:](v6, "objectForKey:", v16));
          -[SSDownloadPolicy setPolicyRule:](v10, "setPolicyRule:", v17);
          -[NSMutableArray addObject:](v11, "addObject:", v17);

          unsigned int v15 = (char *)v15 + 1;
        }

        while (v13 != v15);
        id v13 = -[NSMutableDictionary countByEnumeratingWithState:objects:count:]( v6,  "countByEnumeratingWithState:objects:count:",  &v19,  v23,  16LL);
      }

      while (v13);
    }

    id v5 = v18;
    [*(id *)(a1 + 32) setObject:v10 forKey:v18];
  }
}

void sub_1000CCBA8(uint64_t a1, uint64_t a2, void *a3)
{
  if (*a3)
  {
    id v5 = (SSDownloadPolicy *)objc_msgSend(*(id *)(a1 + 32), "objectForKey:");
    if (!v5)
    {
      id v5 = objc_alloc_init(&OBJC_CLASS___SSDownloadPolicy);
      objc_msgSend(*(id *)(a1 + 32), "setObject:forKey:");
    }

    id v4 = objc_alloc_init(&OBJC_CLASS___SSDownloadPolicyRule);
    [v4 setPowerStates:2];
    -[SSDownloadPolicy unionPolicyRule:](v5, "unionPolicyRule:", v4);
  }

void sub_1000CD584( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

uint64_t sub_1000CD5D0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1000CD5E0(uint64_t a1)
{
}

void sub_1000CD5E8(uint64_t a1, void *a2)
{
}

id sub_1000CD7E4(void *a1)
{
  *(void *)(a1[4] + 8) = [*(id *)(a1[5] + 8) mutableCopyWithZone:a1[6]];
  *(void *)(a1[4] + 24) = [*(id *)(a1[5] + 24) copyWithZone:a1[6]];
  *(void *)(a1[4] + 16LL) = *(void *)(a1[5] + 16LL);
  *(void *)(a1[4] + 32) = [*(id *)(a1[5] + 32) copyWithZone:a1[6]];
  *(void *)(a1[4] + 48) = [*(id *)(a1[5] + 48) copyWithZone:a1[6]];
  *(void *)(a1[4] + 56LL) = *(void *)(a1[5] + 56LL);
  *(void *)(a1[4] + 64LL) = *(void *)(a1[5] + 64LL);
  *(void *)(a1[4] + 72LL) = *(void *)(a1[5] + 72LL);
  *(void *)(a1[4] + 80) = [*(id *)(a1[5] + 80) copyWithZone:a1[6]];
  id result = [*(id *)(a1[5] + 88) copyWithZone:a1[6]];
  *(void *)(a1[4] + 88LL) = result;
  *(void *)(a1[4] + 96LL) = *(void *)(a1[5] + 96LL);
  *(void *)(a1[4] + 104LL) = *(void *)(a1[5] + 104LL);
  return result;
}

void sub_1000CDA84( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_1000CDA9C(uint64_t a1, uint64_t a2)
{
}

void sub_1000CDAAC(uint64_t a1)
{
}

id sub_1000CDAB8(uint64_t a1)
{
  id result = [*(id *)(*(void *)(a1 + 32) + 8) copy];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL) = result;
  return result;
}

uint64_t sub_1000CDB7C(uint64_t result)
{
  *(void *)(*(void *)(*(void *)(result + 40) + 8LL) + 24LL) = *(void *)(*(void *)(result + 32) + 16LL);
  return result;
}

void sub_1000CDC3C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

id sub_1000CDC54(uint64_t a1)
{
  id result = [*(id *)(*(void *)(a1 + 32) + 32) copy];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL) = result;
  return result;
}

uint64_t sub_1000CDD18(uint64_t result)
{
  *(void *)(*(void *)(*(void *)(result + 40) + 8LL) + 24LL) = *(void *)(*(void *)(result + 32) + 56LL);
  return result;
}

double sub_1000CDDBC(uint64_t a1)
{
  double result = *(double *)(*(void *)(a1 + 32) + 64LL);
  *(double *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = result;
  return result;
}

id sub_1000CDE9C(uint64_t a1)
{
  id result = *(id *)(*(void *)(a1 + 32) + 24LL);
  if (result)
  {
    id result = [result length];
    if (result) {
      *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = 1;
    }
  }

  return result;
}

void sub_1000CDF88( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

id sub_1000CDFA0(uint64_t a1)
{
  id result = *(id *)(*(void *)(a1 + 32) + 24LL);
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL) = result;
  return result;
}

void sub_1000CE080( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

id sub_1000CE098(uint64_t a1)
{
  id result = *(id *)(*(void *)(a1 + 32) + 48LL);
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL) = result;
  return result;
}

void sub_1000CE178( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

id sub_1000CE190(uint64_t a1)
{
  id result = *(id *)(*(void *)(a1 + 32) + 80LL);
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL) = result;
  return result;
}

void sub_1000CE270( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

id sub_1000CE288(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = [*(id *)(*(void *)(a1 + 32) + 88) copy];
  double v2 = *(double *)(*(void *)(a1 + 32) + 64LL);
  if (v2 > 0.00000011920929)
  {
    double v3 = v2 * 1000.0;
    if (v3 < 4294967300.0) {
      objc_msgSend( *(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40),  "setDurationInMilliseconds:",  +[NSNumber numberWithUnsignedInteger:]( NSNumber,  "numberWithUnsignedInteger:",  (unint64_t)v3));
    }
  }

  id v4 = [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) kind];
  uint64_t v5 = SSDownloadKindPodcast;
  id result = [v4 isEqualToString:SSDownloadKindPodcast];
  if ((result & 1) != 0
    || (id result = [v4 isEqualToString:SSDownloadKindVideoPodcast], (_DWORD)result))
  {
    uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 16LL);
    if (v7 != 1)
    {
      if (v7 != 2) {
        return result;
      }
      uint64_t v5 = SSDownloadKindVideoPodcast;
    }

    return [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) setKind:v5];
  }

  return result;
}

uint64_t sub_1000CE438(uint64_t result)
{
  *(void *)(*(void *)(*(void *)(result + 40) + 8LL) + 24LL) = *(void *)(*(void *)(result + 32) + 72LL);
  return result;
}

uint64_t sub_1000CE660(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

id sub_1000CE668(uint64_t a1)
{
  *(void *)(*(void *)(a1 + 32) + 16LL) = *(void *)(a1 + 48);
  *(void *)(*(void *)(a1 + 32) + 64LL) = *(void *)(a1 + 56);

  id result = [*(id *)(a1 + 40) copy];
  *(void *)(*(void *)(a1 + 32) + 32LL) = result;
  return result;
}

uint64_t sub_1000CE748(uint64_t result)
{
  *(void *)(*(void *)(*(void *)(result + 40) + 8LL) + 24LL) = *(void *)(*(void *)(result + 32) + 96LL);
  return result;
}

void *sub_1000CE7B4(void *result)
{
  id v1 = *(void **)(result[4] + 8LL);
  if (v1 != (void *)result[5])
  {
    double v2 = result;

    id result = [(id)v2[5] mutableCopy];
    *(void *)(v2[4] + 8LL) = result;
  }

  return result;
}

uint64_t sub_1000CE84C(uint64_t result)
{
  *(void *)(*(void *)(result + 32) + 16LL) = *(void *)(result + 40);
  return result;
}

void *sub_1000CE8B0(void *result)
{
  id v1 = *(void **)(result[4] + 32LL);
  if (v1 != (void *)result[5])
  {
    double v2 = result;

    id result = [(id)v2[5] copy];
    *(void *)(v2[4] + 32LL) = result;
  }

  return result;
}

uint64_t sub_1000CE948(uint64_t result)
{
  *(void *)(*(void *)(result + 32) + 56LL) = *(void *)(result + 40);
  return result;
}

double sub_1000CE9B0(uint64_t a1)
{
  double result = *(double *)(a1 + 40);
  *(double *)(*(void *)(a1 + 32) + 64LL) = result;
  return result;
}

void *sub_1000CEA18(void *result)
{
  id v1 = *(void **)(result[4] + 24LL);
  if (v1 != (void *)result[5])
  {
    double v2 = result;

    double result = [(id)v2[5] copy];
    *(void *)(v2[4] + 24LL) = result;
  }

  return result;
}

void *sub_1000CEAB0(void *result)
{
  id v1 = *(void **)(result[4] + 48LL);
  if (v1 != (void *)result[5])
  {
    double v2 = result;

    double result = [(id)v2[5] copy];
    *(void *)(v2[4] + 48LL) = result;
  }

  return result;
}

void *sub_1000CEB48(void *result)
{
  id v1 = *(void **)(result[4] + 80LL);
  if (v1 != (void *)result[5])
  {
    double v2 = result;

    double result = [(id)v2[5] copy];
    *(void *)(v2[4] + 80LL) = result;
  }

  return result;
}

void *sub_1000CEBE0(void *result)
{
  id v1 = *(void **)(result[4] + 88LL);
  if (v1 != (void *)result[5])
  {
    double v2 = result;

    double result = [(id)v2[5] copy];
    *(void *)(v2[4] + 88LL) = result;
  }

  return result;
}

uint64_t sub_1000CEC78(uint64_t result)
{
  *(void *)(*(void *)(result + 32) + 72LL) = *(void *)(result + 40);
  return result;
}

uint64_t sub_1000CECDC(uint64_t result)
{
  *(void *)(*(void *)(result + 32) + 96LL) = *(void *)(result + 40);
  return result;
}

uint64_t sub_1000CED40(uint64_t result)
{
  *(void *)(*(void *)(result + 32) + 104LL) = *(void *)(result + 40);
  return result;
}

id sub_1000CEDA8(void *a1)
{
  uint64_t v2 = a1[4];
  double v3 = *(void **)(a1[5] + 8LL);
  if (!v2) {
    return [v3 removeObjectForKey:a1[6]];
  }
  if (!v3)
  {
    *(void *)(a1[5] + 8LL) = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    uint64_t v2 = a1[4];
    double v3 = *(void **)(a1[5] + 8LL);
  }

  return [v3 setObject:v2 forKey:a1[6]];
}

uint64_t sub_1000CEE94(uint64_t result)
{
  *(void *)(*(void *)(*(void *)(result + 40) + 8LL) + 24LL) = *(void *)(*(void *)(result + 32) + 104LL);
  return result;
}

LABEL_62:
  id v54 = (void *)objc_claimAutoreleasedReturnValue([v5 performedButton]);
  -[RedeemCodesProtocolDataProvider setDialogButton:](self, "setDialogButton:", v54);
  __int16 v55 = *((unsigned __int8 *)v82 + 24);
  if (a4 && !*((_BYTE *)v82 + 24))
  {
    *a4 = v86[5];
    __int16 v55 = *((unsigned __int8 *)v82 + 24);
  }

  int v56 = v55 != 0;

  _Block_object_dispose(&v71, 8);
  _Block_object_dispose(&v77, 8);
  _Block_object_dispose(&v81, 8);
  _Block_object_dispose(&v85, 8);

  return v56;
}

void sub_1000CF87C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, char a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, char a31, uint64_t a32, uint64_t a33, uint64_t a34, char a35)
{
}

uint64_t sub_1000CF928(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1000CF938(uint64_t a1)
{
}

void sub_1000CF940(void *a1, uint64_t a2, void *a3, char a4, void *a5)
{
  id v9 = a3;
  id v10 = a5;
  unsigned int v11 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v11) {
    unsigned int v11 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v12 = [v11 shouldLog];
  else {
    unsigned int v13 = v12;
  }
  uint64_t v14 = (os_log_s *)objc_claimAutoreleasedReturnValue([v11 OSLogObject]);
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v15 = v13;
  }
  else {
    uint64_t v15 = v13 & 2;
  }
  if ((_DWORD)v15)
  {
    uint64_t v16 = a1[4];
    *(_DWORD *)uint64_t v44 = 138543362;
    *(void *)&v44[4] = v16;
    id v17 = (void *)_os_log_send_and_compose_impl( v15,  0LL,  0LL,  0LL,  &_mh_execute_header,  v14,  0LL,  "%{public}@: [PW] DisplayPaymentSheetOperation did complete",  v44,  12);

    if (!v17) {
      goto LABEL_13;
    }
    uint64_t v14 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v17,  4LL));
    free(v17);
    unsigned int v42 = v14;
    SSFileLog(v11, @"%@");
  }

LABEL_13:
  if (v10)
  {
    objc_storeStrong((id *)(*(void *)(a1[5] + 8LL) + 40LL), a5);
    uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v18) {
      uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v19 = objc_msgSend(v18, "shouldLog", v42);
    else {
      unsigned int v20 = v19;
    }
    __int128 v21 = (os_log_s *)objc_claimAutoreleasedReturnValue([v18 OSLogObject]);
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
      uint64_t v22 = v20;
    }
    else {
      uint64_t v22 = v20 & 2;
    }
    if (!(_DWORD)v22) {
      goto LABEL_50;
    }
    uint64_t v23 = a1[4];
    *(_DWORD *)uint64_t v44 = 138543618;
    *(void *)&v44[4] = v23;
    *(_WORD *)&v44[12] = 2112;
    *(void *)&v44[14] = v10;
    LODWORD(v43) = 22;
    unsigned int v24 = "%{public}@: [PW] Payment sheet authorized failed with error: %@";
    goto LABEL_24;
  }

  if ((a4 & 1) == 0)
  {
    *(_BYTE *)(*(void *)(a1[6] + 8LL) + 24LL) = 1;
    uint64_t v30 = ISError(16LL, 0LL, 0LL);
    uint64_t v31 = objc_claimAutoreleasedReturnValue(v30);
    uint64_t v32 = *(void *)(a1[5] + 8LL);
    __int128 v33 = *(void **)(v32 + 40);
    *(void *)(v32 + 40) = v31;

    uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v18) {
      uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v34 = objc_msgSend(v18, "shouldLog", v42);
    else {
      unsigned int v35 = v34;
    }
    __int128 v21 = (os_log_s *)objc_claimAutoreleasedReturnValue([v18 OSLogObject]);
    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v22 = v35;
    }
    else {
      uint64_t v22 = v35 & 2;
    }
    if (!(_DWORD)v22) {
      goto LABEL_50;
    }
    uint64_t v36 = a1[4];
    *(_DWORD *)uint64_t v44 = 138543362;
    *(void *)&v44[4] = v36;
    LODWORD(v43) = 12;
    unsigned int v24 = "%{public}@: [PW] Payment sheet did cancel";
LABEL_47:
    unsigned int v25 = v21;
    uint64_t v26 = 0LL;
    goto LABEL_48;
  }

  if (v9)
  {
    objc_storeStrong((id *)(*(void *)(a1[7] + 8LL) + 40LL), a3);
    uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v18) {
      uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v27 = objc_msgSend(v18, "shouldLog", v42);
    else {
      unsigned int v28 = v27;
    }
    __int128 v21 = (os_log_s *)objc_claimAutoreleasedReturnValue([v18 OSLogObject]);
    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v22 = v28;
    }
    else {
      uint64_t v22 = v28 & 2;
    }
    if (!(_DWORD)v22) {
      goto LABEL_50;
    }
    uint64_t v29 = a1[4];
    *(_DWORD *)uint64_t v44 = 138543362;
    *(void *)&v44[4] = v29;
    LODWORD(v43) = 12;
    unsigned int v24 = "%{public}@: [PW] Payment sheet did authorize payment with password";
    goto LABEL_47;
  }

  uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v18) {
    uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v39 = objc_msgSend(v18, "shouldLog", v42);
  else {
    unsigned int v40 = v39;
  }
  __int128 v21 = (os_log_s *)objc_claimAutoreleasedReturnValue([v18 OSLogObject]);
  if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
    uint64_t v22 = v40;
  }
  else {
    uint64_t v22 = v40 & 2;
  }
  if (!(_DWORD)v22) {
    goto LABEL_50;
  }
  uint64_t v41 = a1[4];
  *(_DWORD *)uint64_t v44 = 138543362;
  *(void *)&v44[4] = v41;
  LODWORD(v43) = 12;
  unsigned int v24 = "%{public}@: [PW] Payment sheet encountered an unknown error";
LABEL_24:
  unsigned int v25 = v21;
  uint64_t v26 = 16LL;
LABEL_48:
  id v37 = (void *)_os_log_send_and_compose_impl( v22,  0LL,  0LL,  0LL,  &_mh_execute_header,  v25,  v26,  v24,  v44,  v43,  *(_OWORD *)v44,  *(void *)&v44[16]);

  if (!v37) {
    goto LABEL_51;
  }
  __int128 v21 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v37,  4LL));
  free(v37);
  SSFileLog(v18, @"%@");
LABEL_50:

LABEL_51:
  if (v9) {
    char v38 = a4;
  }
  else {
    char v38 = 0;
  }
  *(_BYTE *)(*(void *)(a1[8] + 8LL) + 24LL) = v38;
}

id sub_1000CFE9C(void *a1)
{
  return a1;
}

id sub_1000D1154(uint64_t a1)
{
  id result = objc_alloc_init((Class)objc_opt_class(*(void *)(a1 + 32)));
  qword_1003A3370 = (uint64_t)result;
  return result;
}

uint64_t sub_1000D11F4(void *a1, void *a2)
{
  id v29 = [a2 database];
  unsigned int v27 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
  __int128 v33 = 0u;
  __int128 v34 = 0u;
  __int128 v35 = 0u;
  __int128 v36 = 0u;
  id obj = (id)a1[4];
  id v30 = [obj countByEnumeratingWithState:&v33 objects:v41 count:16];
  if (v30)
  {
    uint64_t v28 = *(void *)v34;
    double v3 = (objc_class *)&OBJC_METACLASS___LoadPassbookPassOperation;
    id v4 = &ACSLocateCachingServer_ptr;
    do
    {
      for (uint64_t i = 0LL; i != v30; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v34 != v28) {
          objc_enumerationMutation(obj);
        }
        id v6 = *(void **)(*((void *)&v33 + 1) + 8LL * (void)i);
        id v7 = [&v3[100] newValueDictionaryWithItem:v6];
        id v8 = v7;
        uint64_t v9 = a1[5];
        if (v9) {
          [v7 setObject:v9 forKey:@"store_account_id"];
        }
        id v31 = [objc_alloc(v3 + 100) initWithPropertyValues:v8 inDatabase:v29];
        id v10 = [v4[459] sharedDaemonConfig];
        if (!v10) {
          id v10 = [v4[459] sharedConfig];
        }
        LODWORD(v11) = [v10 shouldLog];
        unsigned int v12 = (os_log_s *)[v10 OSLogObject];
        if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO)) {
          uint64_t v11 = v11;
        }
        else {
          v11 &= 2u;
        }
        if ((_DWORD)v11)
        {
          uint64_t v14 = v4;
          uint64_t v15 = v3;
          uint64_t v16 = objc_opt_class(a1[6]);
          id v17 = [v31 persistentID];
          int v37 = 138412546;
          uint64_t v38 = v16;
          double v3 = v15;
          id v4 = v14;
          __int16 v39 = 2048;
          id v40 = v17;
          LODWORD(v25) = 22;
          uint64_t v18 = _os_log_send_and_compose_impl( v11,  0LL,  0LL,  0LL,  &_mh_execute_header,  v12,  1LL,  "%@: Adding new preorder: %lld",  &v37,  v25);
          if (v18)
          {
            unsigned int v19 = (void *)v18;
            unsigned int v20 = +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v18,  4LL);
            free(v19);
            unsigned int v24 = v20;
            *(void *)&double v13 = SSFileLog(v10, @"%@").n128_u64[0];
          }
        }

        if (objc_msgSend(v6, "itemKind", v13, v24)) {
          -[NSMutableSet addObject:](v27, "addObject:", [v6 itemKind]);
        }
      }

      id v30 = [obj countByEnumeratingWithState:&v33 objects:v41 count:16];
    }

    while (v30);
  }

  uint64_t v21 = a1[6];
  uint64_t v22 = *(dispatch_queue_s **)(v21 + 16);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1000D14F8;
  block[3] = &unk_10034AE70;
  void block[4] = v21;
  void block[5] = v27;
  dispatch_async(v22, block);

  return 1LL;
}

id sub_1000D14F8(uint64_t a1)
{
  return [*(id *)(a1 + 32) _sendChangeNotificationForKinds:*(void *)(a1 + 40)];
}

id sub_1000D17B4(uint64_t a1)
{
  return [*(id *)(a1 + 40) setCompletionBlock:0];
}

void sub_1000D18E8(_Unwind_Exception *a1)
{
}

uint64_t sub_1000D1900(void *a1, void *a2)
{
  id v3 = [a2 database];
  __int128 v13 = 0u;
  __int128 v14 = 0u;
  __int128 v15 = 0u;
  __int128 v16 = 0u;
  id obj = (id)a1[4];
  id v4 = [obj countByEnumeratingWithState:&v13 objects:v18 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v14;
LABEL_3:
    uint64_t v7 = 0LL;
    while (1)
    {
      if (*(void *)v14 != v6) {
        objc_enumerationMutation(obj);
      }
      id v8 = +[PreorderEntity queryWithDatabase:predicate:]( &OBJC_CLASS___PreorderEntity,  "queryWithDatabase:predicate:",  v3,  +[SSSQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SSSQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"store_preorder_id",  *(void *)(*((void *)&v13 + 1) + 8 * v7)));
      id v17 = @"kind";
      v12[0] = _NSConcreteStackBlock;
      v12[1] = 3221225472LL;
      v12[2] = sub_1000D1AA8;
      v12[3] = &unk_10034DCD8;
      uint64_t v9 = a1[6];
      void v12[4] = a1[5];
      v12[5] = v3;
      v12[6] = v9;
      [v8 enumeratePersistentIDsAndProperties:&v17 count:1 usingBlock:v12];
      if (!*(_BYTE *)(*(void *)(a1[6] + 8LL) + 24LL)) {
        break;
      }
      if (v5 == (id)++v7)
      {
        id v5 = [obj countByEnumeratingWithState:&v13 objects:v18 count:16];
        if (v5) {
          goto LABEL_3;
        }
        return *(unsigned __int8 *)(*(void *)(a1[6] + 8LL) + 24LL);
      }
    }
  }

  return *(unsigned __int8 *)(*(void *)(a1[6] + 8LL) + 24LL);
}

void sub_1000D1AA8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, _BYTE *a5)
{
  if (*a3) {
    objc_msgSend(*(id *)(a1 + 32), "addObject:");
  }
  id v8 = -[PreorderEntity initWithPersistentID:inDatabase:]( objc_alloc(&OBJC_CLASS___PreorderEntity),  "initWithPersistentID:inDatabase:",  a2,  *(void *)(a1 + 40));
  *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = -[PreorderEntity deleteFromDatabase]( v8,  "deleteFromDatabase");
  *a5 = *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) ^ 1;
}

id sub_1000D1B30(uint64_t a1)
{
  return [*(id *)(a1 + 32) _sendChangeNotificationForKinds:*(void *)(a1 + 40)];
}

void sub_1000D1BB0(uint64_t a1, void *a2, void *a3)
{
  uint64_t v22 = 0LL;
  uint64_t v23 = &v22;
  uint64_t v24 = 0x2020000000LL;
  char v25 = 0;
  if ([a2 hasEntitlements])
  {
    xpc_object_t value = xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 40), "1");
    xpc_object_t v7 = value;
    if (value && xpc_get_type(value) == (xpc_type_t)&_xpc_type_array)
    {
      id v8 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
      id v9 = +[DownloadsDatabase downloadsDatabase](&OBJC_CLASS___DownloadsDatabase, "downloadsDatabase");
      v21[0] = _NSConcreteStackBlock;
      v21[1] = 3221225472LL;
      void v21[2] = sub_1000D1E88;
      v21[3] = &unk_10034DD28;
      uint64_t v10 = *(void *)(a1 + 32);
      void v21[4] = v7;
      v21[5] = v10;
      void v21[6] = v8;
      v21[7] = &v22;
      [v9 modifyUsingTransactionBlock:v21];
      if (*((_BYTE *)v23 + 24))
      {
        uint64_t v11 = objc_alloc_init(&OBJC_CLASS___CancelPreordersOperation);
        objc_msgSend(+[ISOperationQueue mainQueue](ISOperationQueue, "mainQueue"), "addOperation:", v11);
        [*(id *)(a1 + 32) _sendChangeNotificationForKinds:v8];
      }
    }
  }

  else
  {
    id v12 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v12) {
      id v12 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    LODWORD(v13) = [v12 shouldLog];
    unsigned int v14 = [v12 shouldLogToDisk];
    __int128 v15 = (os_log_s *)[v12 OSLogObject];
    __int128 v16 = v15;
    if (v14) {
      LODWORD(v13) = v13 | 2;
    }
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v13 = v13;
    }
    else {
      v13 &= 2u;
    }
    if ((_DWORD)v13)
    {
      uint64_t v17 = objc_opt_class(*(void *)(a1 + 32));
      id v18 = [a2 clientIdentifier];
      int v26 = 138412546;
      uint64_t v27 = v17;
      __int16 v28 = 2112;
      id v29 = v18;
      uint64_t v19 = _os_log_send_and_compose_impl( v13,  0LL,  0LL,  0LL,  &_mh_execute_header,  v16,  0LL,  "%@: Deny preorder cancel for unentitled client: %@",  &v26,  22);
      if (v19)
      {
        unsigned int v20 = (void *)v19;
        +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v19, 4LL);
        free(v20);
        SSFileLog(v12, @"%@");
      }
    }
  }

  xpc_dictionary_set_BOOL(a3, "0", *((_BYTE *)v23 + 24));
  _Block_object_dispose(&v22, 8);
}

void sub_1000D1E50( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
}

uint64_t sub_1000D1E88(uint64_t a1, void *a2)
{
  id v3 = [a2 database];
  int64_t count = xpc_array_get_count(*(xpc_object_t *)(a1 + 32));
  id v5 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  if (!v5) {
    id v5 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  unsigned int v6 = [v5 shouldLog];
  else {
    LODWORD(v7) = v6;
  }
  id v8 = (os_log_s *)[v5 OSLogObject];
  if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO)) {
    uint64_t v7 = v7;
  }
  else {
    v7 &= 2u;
  }
  if ((_DWORD)v7)
  {
    uint64_t v9 = objc_opt_class(*(void *)(a1 + 40));
    *(_DWORD *)uint64_t v22 = 138412546;
    *(void *)&v22[4] = v9;
    *(_WORD *)&v22[12] = 2048;
    *(void *)&v22[14] = count;
    uint64_t v10 = _os_log_send_and_compose_impl( v7,  0LL,  0LL,  0LL,  &_mh_execute_header,  v8,  1LL,  "%@: Cancel %ld preorders",  v22,  22);
    if (v10)
    {
      uint64_t v11 = (void *)v10;
      +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v10, 4LL);
      free(v11);
      SSFileLog(v5, @"%@");
    }
  }

  *(_BYTE *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL) = count > 0;
  if (count >= 1)
  {
    for (size_t i = 0LL; i != count; ++i)
    {
      if (!*(_BYTE *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL)) {
        break;
      }
      uint64_t v13 = -[PreorderEntity initWithPersistentID:inDatabase:]( objc_alloc(&OBJC_CLASS___PreorderEntity),  "initWithPersistentID:inDatabase:",  xpc_array_get_int64(*(xpc_object_t *)(a1 + 32), i),  v3);
      *(void *)uint64_t v22 = @"store_account_id";
      *(void *)&v22[8] = @"kind";
      *(void *)&v22[16] = @"store_preorder_id";
      -[PreorderEntity getValues:forProperties:count:](v13, "getValues:forProperties:count:", v20, v22, 3LL);
      if (v20[0] && v21)
      {
        unsigned int v14 = objc_alloc(&OBJC_CLASS___NSDictionary);
        __int128 v15 = -[NSDictionary initWithObjectsAndKeys:]( v14,  "initWithObjectsAndKeys:",  v20[0],  @"store_account_id",  v21,  @"store_item_id",  0LL);
        __int128 v16 = -[CanceledPreorderEntity initWithPropertyValues:inDatabase:]( objc_alloc(&OBJC_CLASS___CanceledPreorderEntity),  "initWithPropertyValues:inDatabase:",  v15,  v3);
        *(_BYTE *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL) = v16 != 0LL;
      }

      if (v20[1]) {
        objc_msgSend(*(id *)(a1 + 48), "addObject:");
      }
      uint64_t v17 = *(void *)(*(void *)(a1 + 56) + 8LL);
      if (*(_BYTE *)(v17 + 24))
      {
        unsigned __int8 v18 = -[PreorderEntity deleteFromDatabase](v13, "deleteFromDatabase");
        uint64_t v17 = *(void *)(*(void *)(a1 + 56) + 8LL);
      }

      else
      {
        unsigned __int8 v18 = 0;
      }

      *(_BYTE *)(v17 + 24) = v18;
    }
  }

  return *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL);
}

id sub_1000D2204(uint64_t a1, void *a2)
{
  id result = [a2 hasEntitlements];
  if ((_DWORD)result)
  {
    id v5 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v5) {
      id v5 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v6 = [v5 shouldLog];
    else {
      LODWORD(v7) = v6;
    }
    id v8 = (os_log_s *)[v5 OSLogObject];
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO)) {
      uint64_t v7 = v7;
    }
    else {
      v7 &= 2u;
    }
    if ((_DWORD)v7)
    {
      uint64_t v10 = objc_opt_class(*(void *)(a1 + 32));
      int v15 = 138412546;
      uint64_t v16 = v10;
      __int16 v17 = 2112;
      id v18 = [a2 clientIdentifier];
      uint64_t v11 = _os_log_send_and_compose_impl( v7,  0LL,  0LL,  0LL,  &_mh_execute_header,  v8,  1LL,  "%@: Checking queue for %@",  &v15,  22);
      if (v11)
      {
        id v12 = (void *)v11;
        uint64_t v13 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v11, 4LL);
        free(v12);
        unsigned int v14 = v13;
        *(void *)&double v9 = SSFileLog(v5, @"%@").n128_u64[0];
      }
    }

    return objc_msgSend(*(id *)(a1 + 32), "checkPreorderQueue", v9, v14);
  }

  return result;
}

void sub_1000D23FC(uint64_t a1, void *a2, void *a3)
{
  xpc_object_t v6 = xpc_array_create(0LL, 0LL);
  if ([a2 hasEntitlements])
  {
    id v7 = objc_msgSend(objc_msgSend(a2, "itemKinds"), "allObjects");
    if ([v7 count])
    {
      v15[0] = _NSConcreteStackBlock;
      v15[1] = 3221225472LL;
      v15[2] = sub_1000D2654;
      v15[3] = &unk_10034D170;
      v15[4] = +[SSSQLiteCompoundPredicate predicateWithProperty:values:comparisonType:]( &OBJC_CLASS___SSSQLiteCompoundPredicate,  "predicateWithProperty:values:comparisonType:",  @"kind",  v7,  1LL);
      v15[5] = +[NSArray arrayWithObject:](&OBJC_CLASS___NSArray, "arrayWithObject:", @"release_date");
      v15[6] = v6;
      objc_msgSend( +[DownloadsDatabase downloadsDatabase](DownloadsDatabase, "downloadsDatabase"),  "readUsingTransactionBlock:",  v15);
    }
  }

  else
  {
    id v8 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v8) {
      id v8 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v9 = [v8 shouldLog];
    else {
      LODWORD(v10) = v9;
    }
    uint64_t v11 = (os_log_s *)[v8 OSLogObject];
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v10 = v10;
    }
    else {
      v10 &= 2u;
    }
    if ((_DWORD)v10)
    {
      uint64_t v12 = objc_opt_class(*(void *)(a1 + 32));
      int v16 = 138412546;
      uint64_t v17 = v12;
      __int16 v18 = 2112;
      id v19 = [a2 clientIdentifier];
      uint64_t v13 = _os_log_send_and_compose_impl( v10,  0LL,  0LL,  0LL,  &_mh_execute_header,  v11,  0LL,  "%@: Deny get preorders from unentitled client: %@",  &v16,  22);
      if (v13)
      {
        unsigned int v14 = (void *)v13;
        +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v13, 4LL);
        free(v14);
        SSFileLog(v8, @"%@");
      }
    }
  }

  xpc_dictionary_set_value(a3, "0", v6);
  xpc_release(v6);
}

void sub_1000D2654(void *a1, void *a2)
{
  id v3 = +[PreorderEntity queryWithDatabase:predicate:orderingProperties:]( PreorderEntity,  "queryWithDatabase:predicate:orderingProperties:",  [a2 database],  a1[4],  a1[5]);
  id v4 = +[PreorderEntity allProperties](&OBJC_CLASS___PreorderEntity, "allProperties");
  id v5 = malloc(8 * (void)[v4 count]);
  objc_msgSend(v4, "getObjects:range:", v5, 0, objc_msgSend(v4, "count"));
  id v6 = [v4 count];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  v7[2] = sub_1000D2734;
  v7[3] = &unk_10034ADA8;
  void v7[4] = a1[6];
  [v3 enumeratePersistentIDsAndProperties:v5 count:v6 usingBlock:v7];
  free(v5);
}

void sub_1000D2734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = +[PreorderEntity newClientPreorderWithPersistentID:allValues:]( &OBJC_CLASS___PreorderEntity,  "newClientPreorderWithPersistentID:allValues:",  a2,  a3);
  id v4 = [v6 copyXPCEncoding];
  if (v4)
  {
    id v5 = v4;
    xpc_array_append_value(*(xpc_object_t *)(a1 + 32), v4);
    xpc_release(v5);
  }
}

double sub_1000D2884(uint64_t a1, void *a2)
{
  if ([a2 hasEntitlements])
  {
    xpc_object_t value = xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 40), "1");
    if (value)
    {
      xpc_object_t v5 = value;
      if (xpc_get_type(value) == (xpc_type_t)&_xpc_type_array)
      {
        id v6 = (void *)SSXPCCreateCFObjectFromXPCObject(v5);
        id v7 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
        if (!v7) {
          id v7 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
        }
        unsigned int v8 = [v7 shouldLog];
        else {
          LODWORD(v9) = v8;
        }
        uint64_t v10 = (os_log_s *)[v7 OSLogObject];
        if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO)) {
          uint64_t v9 = v9;
        }
        else {
          v9 &= 2u;
        }
        if ((_DWORD)v9)
        {
          uint64_t v12 = objc_opt_class(*(void *)(a1 + 32));
          int v29 = 138412802;
          uint64_t v30 = v12;
          __int16 v31 = 2112;
          id v32 = [a2 clientIdentifier];
          __int16 v33 = 2112;
          __int128 v34 = v6;
          uint64_t v13 = _os_log_send_and_compose_impl( v9,  0LL,  0LL,  0LL,  &_mh_execute_header,  v10,  1LL,  "%@: Registered client: %@ with kinds: %@",  &v29,  32);
          if (v13)
          {
            unsigned int v14 = (void *)v13;
            int v15 = +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v13,  4LL);
            free(v14);
            __int16 v28 = v15;
            *(void *)&double v11 = SSFileLog(v7, @"%@").n128_u64[0];
          }
        }

        objc_msgSend(a2, "setItemKinds:", +[NSSet setWithArray:](NSSet, "setWithArray:", v6, v11, v28));
      }
    }

    int v16 = (_xpc_endpoint_s *)xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 40), "2");
    if (v16)
    {
      __int16 v18 = v16;
      if (xpc_get_type(v16) == (xpc_type_t)&_xpc_type_endpoint)
      {
        xpc_connection_t v19 = xpc_connection_create_from_endpoint(v18);
        [a2 setOutputConnectionWithConnection:v19];
        xpc_object_t v20 = xpc_dictionary_create(0LL, 0LL, 0LL);
        objc_msgSend(objc_msgSend(a2, "outputConnection"), "sendMessage:", v20);
        xpc_release(v20);
        xpc_release(v19);
      }
    }
  }

  else
  {
    id v21 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v21) {
      id v21 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v22 = [v21 shouldLog];
    else {
      LODWORD(v23) = v22;
    }
    uint64_t v24 = (os_log_s *)[v21 OSLogObject];
    if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v23 = v23;
    }
    else {
      v23 &= 2u;
    }
    if ((_DWORD)v23)
    {
      uint64_t v25 = objc_opt_class(*(void *)(a1 + 32));
      int v29 = 138412546;
      uint64_t v30 = v25;
      __int16 v31 = 2112;
      id v32 = [a2 clientIdentifier];
      uint64_t v26 = _os_log_send_and_compose_impl( v23,  0LL,  0LL,  0LL,  &_mh_execute_header,  v24,  0LL,  "%@: Ignore register from unentitled client: %@",  &v29,  22);
      if (v26)
      {
        uint64_t v27 = (void *)v26;
        +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v26, 4LL);
        free(v27);
        *(void *)&double result = SSFileLog(v21, @"%@").n128_u64[0];
      }
    }
  }

  return result;
}

id sub_1000D2C48(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) object];
  id result = [*(id *)(*(void *)(a1 + 40) + 8) count];
  uint64_t v4 = (uint64_t)result;
  while (v4-- >= 1)
  {
    id result = [*(id *)(*(void *)(a1 + 40) + 8) objectAtIndex:v4];
    if (result == v2)
    {
      id v6 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
      if (!v6) {
        id v6 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
      }
      unsigned int v7 = [v6 shouldLog];
      else {
        LODWORD(v_Block_object_dispose(va, 8) = v7;
      }
      uint64_t v9 = (os_log_s *)[v6 OSLogObject];
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG)) {
        uint64_t v8 = v8;
      }
      else {
        v8 &= 2u;
      }
      if ((_DWORD)v8)
      {
        uint64_t v11 = objc_opt_class(*(void *)(a1 + 40));
        int v16 = 138412546;
        uint64_t v17 = v11;
        __int16 v18 = 2112;
        id v19 = v2;
        uint64_t v12 = _os_log_send_and_compose_impl( v8,  0LL,  0LL,  0LL,  &_mh_execute_header,  v9,  2LL,  "%@: Client disconnect: %@",  &v16,  22);
        if (v12)
        {
          uint64_t v13 = (void *)v12;
          unsigned int v14 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v12, 4LL);
          free(v13);
          int v15 = v14;
          *(void *)&double v10 = SSFileLog(v6, @"%@").n128_u64[0];
        }
      }

      objc_msgSend(v2, "setOutputConnectionWithConnection:", 0, v10, v15);
      return [*(id *)(*(void *)(a1 + 40) + 8) removeObjectAtIndex:v4];
    }
  }

  return result;
}

void sub_1000D2FE4(uint64_t a1, void *a2)
{
  id v4 = objc_alloc_init(&OBJC_CLASS___SSSQLiteQueryDescriptor);
  [v4 setEntityClass:objc_opt_class(PreorderEntity)];
  [v4 setReturnsDistinctEntities:1];
  xpc_object_t v5 = -[SSSQLiteQuery initWithDatabase:descriptor:]( [SSSQLiteQuery alloc],  "initWithDatabase:descriptor:",  [a2 database],  v4);
  unsigned int v7 = @"store_account_id";
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  v6[2] = sub_1000D30FC;
  v6[3] = &unk_10034ADA8;
  void v6[4] = *(void *)(a1 + 32);
  -[SSSQLiteQuery enumeratePersistentIDsAndProperties:count:usingBlock:]( v5,  "enumeratePersistentIDsAndProperties:count:usingBlock:",  &v7,  1LL,  v6);
}

id *sub_1000D30FC(id *result, uint64_t a2, void *a3)
{
  if (*a3) {
    return (id *)objc_msgSend(result[4], "addObject:");
  }
  return result;
}

void sub_1000D33EC(_Unwind_Exception *exception_object)
{
}

uint64_t sub_1000D3410(uint64_t a1, void *a2)
{
  return 1LL;
}

id sub_1000D344C(uint64_t a1, void *a2)
{
  id result = objc_msgSend( objc_msgSend( *(id *)(a1 + 32),  "_preorderQueryWithAccountID:database:",  *(void *)(a1 + 40),  objc_msgSend(a2, "database")),  "countOfEntities");
  *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = result != *(id *)(a1 + 56);
  return result;
}

id sub_1000D34A4(uint64_t a1)
{
  return [*(id *)(a1 + 40) setCompletionBlock:0];
}

uint64_t sub_1000D354C(uint64_t a1, void *a2)
{
  id v3 = [a2 database];
  id v4 = [*(id *)(a1 + 32) accountIdentifier];
  xpc_object_t v5 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
  id v6 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
  unsigned int v7 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  id v60 = v4;
  id v64 = v3;
  id v8 = [*(id *)(a1 + 40) _preorderQueryWithAccountID:v4 database:v3];
  v81[0] = @"kind";
  v81[1] = @"store_preorder_id";
  v74[0] = _NSConcreteStackBlock;
  v74[1] = 3221225472LL;
  v74[2] = sub_1000D3C44;
  v74[3] = &unk_10034D448;
  id obj = v6;
  v74[4] = v6;
  v74[5] = v5;
  uint64_t v58 = v5;
  v74[6] = v7;
  [v8 enumeratePersistentIDsAndProperties:v81 count:2 usingBlock:v74];
  uint64_t v63 = a1;
  id v9 = [*(id *)(a1 + 32) preorderItems];
  __int128 v70 = 0u;
  __int128 v71 = 0u;
  __int128 v72 = 0u;
  __int128 v73 = 0u;
  id v10 = [v9 countByEnumeratingWithState:&v70 objects:v80 count:16];
  uint64_t v61 = v7;
  if (v10)
  {
    id v11 = v10;
    uint64_t v12 = *(void *)v71;
    uint64_t v59 = *(void *)v71;
    do
    {
      for (size_t i = 0LL; i != v11; size_t i = (char *)i + 1)
      {
        if (*(void *)v71 != v12) {
          objc_enumerationMutation(v9);
        }
        unsigned int v14 = *(void **)(*((void *)&v70 + 1) + 8LL * (void)i);
        id v15 = objc_msgSend(v14, "preOrderIdentifier", v55);
        if (v15)
        {
          id v16 = -[NSMutableDictionary objectForKey:](v7, "objectForKey:", v15);
          if (v16)
          {
            uint64_t v17 = v16;
            id v18 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
            if (!v18) {
              id v18 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
            }
            LODWORD(v19) = [v18 shouldLog];
            xpc_object_t v20 = (os_log_s *)[v18 OSLogObject];
            if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO)) {
              uint64_t v19 = v19;
            }
            else {
              v19 &= 2u;
            }
            if ((_DWORD)v19)
            {
              uint64_t v21 = objc_opt_class(*(void *)(v63 + 40));
              int v76 = 138412546;
              uint64_t v77 = v21;
              __int16 v78 = 2112;
              id v79 = v17;
              LODWORD(v57) = 22;
              uint64_t v22 = _os_log_send_and_compose_impl( v19,  0LL,  0LL,  0LL,  &_mh_execute_header,  v20,  1LL,  "%@: Updating existing preorder: %@",  &v76,  v57);
              if (v22)
              {
                uint64_t v23 = (void *)v22;
                uint64_t v24 = +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v22,  4LL);
                free(v23);
                __int16 v55 = v24;
                SSFileLog(v18, @"%@");
              }
            }

            uint64_t v25 = -[PreorderEntity initWithPersistentID:inDatabase:]( [PreorderEntity alloc],  "initWithPersistentID:inDatabase:",  [v17 longLongValue],  v64);
            -[PreorderEntity setValuesWithItem:](v25, "setValuesWithItem:", v14);
            -[NSMutableSet removeObject:](obj, "removeObject:", v17);
          }

          else
          {
            id v26 = v9;
            uint64_t v25 = +[PreorderEntity newValueDictionaryWithItem:]( &OBJC_CLASS___PreorderEntity,  "newValueDictionaryWithItem:",  v14);
            -[PreorderEntity setObject:forKey:](v25, "setObject:forKey:", v60, @"store_account_id");
            uint64_t v27 = -[PreorderEntity initWithPropertyValues:inDatabase:]( objc_alloc(&OBJC_CLASS___PreorderEntity),  "initWithPropertyValues:inDatabase:",  v25,  v64);
            id v28 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
            if (!v28) {
              id v28 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
            }
            unsigned int v29 = [v28 shouldLog];
            uint64_t v30 = (os_log_s *)[v28 OSLogObject];
            if (os_log_type_enabled(v30, OS_LOG_TYPE_INFO)) {
              uint64_t v32 = v29;
            }
            else {
              uint64_t v32 = v29 & 2;
            }
            if ((_DWORD)v32)
            {
              uint64_t v33 = objc_opt_class(*(void *)(v63 + 40));
              id v34 = -[PreorderEntity persistentID](v27, "persistentID");
              int v76 = 138412546;
              uint64_t v77 = v33;
              __int16 v78 = 2048;
              id v79 = v34;
              LODWORD(v57) = 22;
              uint64_t v35 = _os_log_send_and_compose_impl( v32,  0LL,  0LL,  0LL,  &_mh_execute_header,  v30,  1LL,  "%@: Adding new preorder: %lld",  &v76,  v57);
              if (v35)
              {
                __int128 v36 = (void *)v35;
                int v37 = +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v35,  4LL);
                free(v36);
                __int16 v55 = v37;
                *(void *)&double v31 = SSFileLog(v28, @"%@").n128_u64[0];
              }
            }

            if (objc_msgSend(v14, "itemKind", v31, v55)) {
              -[NSMutableSet addObject:](v58, "addObject:", [v14 itemKind]);
            }

            unsigned int v7 = v61;
            id v9 = v26;
            uint64_t v12 = v59;
          }
        }
      }

      id v11 = [v9 countByEnumeratingWithState:&v70 objects:v80 count:16];
    }

    while (v11);
  }

  __int128 v68 = 0u;
  __int128 v69 = 0u;
  __int128 v66 = 0u;
  __int128 v67 = 0u;
  id v38 = -[NSMutableSet countByEnumeratingWithState:objects:count:]( obj,  "countByEnumeratingWithState:objects:count:",  &v66,  v75,  16LL,  v55);
  if (v38)
  {
    id v39 = v38;
    uint64_t v40 = *(void *)v67;
    do
    {
      for (uint64_t j = 0LL; j != v39; uint64_t j = (char *)j + 1)
      {
        if (*(void *)v67 != v40) {
          objc_enumerationMutation(obj);
        }
        unsigned int v42 = *(void **)(*((void *)&v66 + 1) + 8LL * (void)j);
        uint64_t v43 = -[PreorderEntity initWithPersistentID:inDatabase:]( [PreorderEntity alloc],  "initWithPersistentID:inDatabase:",  [v42 longLongValue],  v64);
        id v44 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
        if (!v44) {
          id v44 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
        }
        LODWORD(v45) = [v44 shouldLog];
        id v46 = (os_log_s *)[v44 OSLogObject];
        if (os_log_type_enabled(v46, OS_LOG_TYPE_INFO)) {
          uint64_t v45 = v45;
        }
        else {
          v45 &= 2u;
        }
        if ((_DWORD)v45)
        {
          uint64_t v48 = objc_opt_class(*(void *)(v63 + 40));
          int v76 = 138412546;
          uint64_t v77 = v48;
          __int16 v78 = 2112;
          id v79 = v42;
          LODWORD(v57) = 22;
          uint64_t v49 = _os_log_send_and_compose_impl( v45,  0LL,  0LL,  0LL,  &_mh_execute_header,  v46,  1LL,  "%@: Pruning disappeared preorder: %@",  &v76,  v57);
          if (v49)
          {
            uint64_t v50 = (void *)v49;
            uint64_t v51 = +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v49,  4LL);
            free(v50);
            int v56 = v51;
            *(void *)&double v47 = SSFileLog(v44, @"%@").n128_u64[0];
          }
        }

        -[PreorderEntity deleteFromDatabase](v43, "deleteFromDatabase", v47, v56);
      }

      id v39 = -[NSMutableSet countByEnumeratingWithState:objects:count:]( obj,  "countByEnumeratingWithState:objects:count:",  &v66,  v75,  16LL);
    }

    while (v39);
  }

  uint64_t v52 = *(void *)(v63 + 40);
  int v53 = *(dispatch_queue_s **)(v52 + 16);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1000D3CC8;
  block[3] = &unk_10034AE70;
  void block[4] = v52;
  void block[5] = v58;
  dispatch_async(v53, block);

  return 1LL;
}

void sub_1000D3C44(id *a1, uint64_t a2, void *a3)
{
  id v6 = -[NSNumber initWithLongLong:](objc_alloc(&OBJC_CLASS___NSNumber), "initWithLongLong:", a2);
  objc_msgSend(a1[4], "addObject:");
  if (*a3) {
    objc_msgSend(a1[5], "addObject:");
  }
  xpc_object_t v5 = v6;
  if (a3[1])
  {
    objc_msgSend(a1[6], "setObject:forKey:", v6);
    xpc_object_t v5 = v6;
  }
}

id sub_1000D3CC8(uint64_t a1)
{
  return [*(id *)(a1 + 32) _sendChangeNotificationForKinds:*(void *)(a1 + 40)];
}

void sub_1000D3D5C(uint64_t a1)
{
}

void sub_1000D3E2C(uint64_t a1)
{
  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 32));
  (*(void (**)(void, id, xpc_object_t))(*(void *)(a1 + 56) + 16))( *(void *)(a1 + 56),  [*(id *)(a1 + 40) _clientForConnection:*(void *)(a1 + 48)],  reply);
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 48), reply);
  xpc_release(reply);
  xpc_release(*(xpc_object_t *)(a1 + 48));
  xpc_release(*(xpc_object_t *)(a1 + 32));
}

void sub_1000D43D0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_1000D43E8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_autoreleasePoolPush();
  id v5 = v3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 appState]);
  if ([v6 isInstalled])
  {
    uint64_t v7 = *(void *)(a1 + 48);
    uint64_t v8 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL);

    if (v8 < v7)
    {
      uint64_t v9 = (int)+[SSPurchaseReceipt vppStateFlagsWithProxy:]( &OBJC_CLASS___SSPurchaseReceipt,  "vppStateFlagsWithProxy:",  v5);
      id v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _optionsWithVPPState:v9]);
      if (v10)
      {
        [*(id *)(a1 + 32) _refreshReceiptForApplication:v5 withOptions:v10 vppState:v9 error:0];
        ++*(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL);
      }

      goto LABEL_19;
    }
  }

  else
  {
  }

  id v11 = (void *)objc_claimAutoreleasedReturnValue([v5 appState]);
  unsigned __int8 v12 = [v11 isInstalled];

  if ((v12 & 1) == 0)
  {
    id v10 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v10) {
      id v10 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v13 = [v10 shouldLog];
    else {
      LODWORD(v14) = v13;
    }
    id v15 = (os_log_s *)objc_claimAutoreleasedReturnValue([v10 OSLogObject]);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
      uint64_t v14 = v14;
    }
    else {
      v14 &= 2u;
    }
    if ((_DWORD)v14)
    {
      id v16 = (void *)objc_opt_class(*(void *)(a1 + 32));
      id v17 = v16;
      id v18 = (void *)objc_claimAutoreleasedReturnValue([v5 bundleIdentifier]);
      int v20 = 138543618;
      uint64_t v21 = v16;
      __int16 v22 = 2114;
      uint64_t v23 = v18;
      uint64_t v19 = (void *)_os_log_send_and_compose_impl( v14,  0LL,  0LL,  0LL,  &_mh_execute_header,  v15,  16LL,  "[%{public}@]: Skipping receipt refresh for non installed bundleID: %{public}@.",  &v20,  22);

      if (!v19)
      {
LABEL_19:

        goto LABEL_20;
      }

      id v15 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v19,  4LL));
      free(v19);
      SSFileLog(v10, @"%@");
    }

    goto LABEL_19;
  }

LABEL_105:
        goto LABEL_106;
      }

      uint64_t v80 = -[AppReceiptRefreshOperation _preformMigrationCheckForApp:](self, "_preformMigrationCheckForApp:", v9);
      uint64_t v48 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
      if (!v48) {
        uint64_t v48 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      uint64_t v49 = v48;
      LODWORD(v50) = [v48 shouldLog];
      int v76 = v49;
      uint64_t v51 = (os_log_s *)objc_claimAutoreleasedReturnValue([v49 OSLogObject]);
      if (os_log_type_enabled(v51, OS_LOG_TYPE_DEFAULT)) {
        uint64_t v50 = v50;
      }
      else {
        v50 &= 2u;
      }
      if ((_DWORD)v50)
      {
        __int128 v71 = v51;
        uint64_t v52 = (void *)objc_opt_class(self);
        __int128 v73 = v52;
        __int128 v69 = (void *)objc_claimAutoreleasedReturnValue([v9 bundleIdentifier]);
        id v82 = 138543874;
        __int16 v83 = v52;
        __int16 v84 = 2114;
        v85 = v69;
        __int16 v86 = 1024;
        LODWORD(v87) = v80;
        int v53 = (void *)_os_log_send_and_compose_impl( v50,  0LL,  0LL,  0LL,  &_mh_execute_header,  v71,  0LL,  "[%{public}@]: Attempted VPP migration of revoked app with bundleIdentifier: %{public}@ with result: %d",  &v82,  28);

        if (!v53) {
          goto LABEL_82;
        }
        uint64_t v51 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v53,  4LL));
        free(v53);
        __int128 v66 = v51;
        SSFileLog(v76, @"%@");
      }

LABEL_82:
      if ((v80 & 1) != 0) {
        goto LABEL_106;
      }
      goto LABEL_83;
    }

    uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v24) {
      uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    uint64_t v43 = [v24 shouldLog];
    else {
      LODWORD(v44) = v43;
    }
    uint64_t v45 = (os_log_s *)objc_claimAutoreleasedReturnValue([v24 OSLogObject]);
    if (os_log_type_enabled(v45, OS_LOG_TYPE_ERROR)) {
      id v44 = v44;
    }
    else {
      v44 &= 2u;
    }
    if ((_DWORD)v44)
    {
      id v46 = (void *)objc_opt_class(self);
      double v47 = v46;
      id v82 = 138543874;
      __int16 v83 = v46;
      __int16 v84 = 2114;
      v85 = v9;
      __int16 v86 = 2048;
      v87 = [v13 length];
      id v18 = (void *)_os_log_send_and_compose_impl( v44,  0LL,  0LL,  0LL,  &_mh_execute_header,  v45,  16LL,  "[%{public}@]: Failed to re-write the receipt for app: [%{public}@] [%ld bytes]",  &v82,  32);

      if (!v18)
      {
LABEL_107:

        goto LABEL_108;
      }

      uint64_t v45 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v18,  4LL));
      free(v18);
      SSFileLog(v24, @"%@");
    }

    LOBYTE(v1_Block_object_dispose(va, 8) = 0;
    goto LABEL_107;
  }

  unsigned int v13 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v13) {
    unsigned int v13 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  uint64_t v14 = [v13 shouldLog];
  else {
    LODWORD(v15) = v14;
  }
  id v16 = (os_log_s *)objc_claimAutoreleasedReturnValue([v13 OSLogObject]);
  if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
    id v15 = v15;
  }
  else {
    v15 &= 2u;
  }
  if (!(_DWORD)v15) {
    goto LABEL_14;
  }
  id v82 = 138543618;
  __int16 v83 = (id)objc_opt_class(self);
  __int16 v84 = 2114;
  v85 = v8;
  id v17 = v83;
  id v18 = (void *)_os_log_send_and_compose_impl( v15,  0LL,  0LL,  0LL,  &_mh_execute_header,  v16,  16LL,  "[%{public}@]: Unexpected status code: %{public}@",  &v82,  22);

  if (v18)
  {
    id v16 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v18,  4LL));
    free(v18);
    SSFileLog(v13, @"%@");
LABEL_14:

    LOBYTE(v1_Block_object_dispose(va, 8) = 0;
  }

        goto LABEL_106;
      }

      double v47 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v50,  4LL));
      free(v50);
      v94 = v47;
      SSFileLog(v44, @"%@");
    }

    goto LABEL_52;
  }

  if ((_DWORD)v12)
  {
    uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v23) {
      uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    uint64_t v24 = [v23 shouldLog];
    else {
      LODWORD(v25) = v24;
    }
    id v26 = (os_log_s *)objc_claimAutoreleasedReturnValue([v23 OSLogObject]);
    if (os_log_type_enabled(v26, OS_LOG_TYPE_INFO)) {
      uint64_t v25 = v25;
    }
    else {
      v25 &= 2u;
    }
    if ((_DWORD)v25)
    {
      uint64_t v27 = (void *)objc_opt_class(*(void *)(a1 + 40));
      v105 = 138412546;
      v106 = (uint64_t)v27;
      v107 = 2112;
      v108 = v7;
      id v28 = v27;
      unsigned int v29 = (void *)_os_log_send_and_compose_impl( v25,  0LL,  0LL,  0LL,  &_mh_execute_header,  v26,  1LL,  "%@: Redirecting software download to App Store daemon: %@",  &v105,  22);

      uint64_t v14 = &ACSLocateCachingServer_ptr;
      if (!v29)
      {
LABEL_24:

        [*(id *)(a1 + 48) addObject:v13];
        LOBYTE(v12) = 0;
        goto LABEL_106;
      }

      id v26 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v29,  4LL));
      free(v29);
      v94 = v26;
      SSFileLog(v23, @"%@");
    }

    goto LABEL_24;
  }

LABEL_87:
  if (a6 && !v62) {
    *a6 = v63;
  }

  return v62;
}

id sub_1000D75A8(uint64_t a1, void *a2)
{
  id v3 = +[CanceledPreorderEntity queryWithDatabase:predicate:]( CanceledPreorderEntity,  "queryWithDatabase:predicate:",  [a2 database],  0);
  v7[0] = @"store_account_id";
  v7[1] = @"store_item_id";
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  v5[2] = sub_1000D7678;
  v5[3] = &unk_10034ADF8;
  __int128 v6 = *(_OWORD *)(a1 + 32);
  return [v3 enumeratePersistentIDsAndProperties:v7 count:2 usingBlock:v5];
}

void sub_1000D7678(uint64_t a1, uint64_t a2, void *a3)
{
  if (*a3)
  {
    if (a3[1])
    {
      __int128 v6 = -[NSNumber initWithLongLong:](objc_alloc(&OBJC_CLASS___NSNumber), "initWithLongLong:", a2);
      id v5 = [*(id *)(a1 + 32) _newURLOperationWithItemID:a3[1] accountID:*a3];
      [*(id *)(a1 + 40) setObject:v5 forKey:v6];
    }
  }

uint64_t sub_1000D7710(uint64_t a1, void *a2)
{
  id v2 = -[CanceledPreorderEntity initWithPersistentID:inDatabase:]( [CanceledPreorderEntity alloc],  "initWithPersistentID:inDatabase:",  [*(id *)(a1 + 32) longLongValue],  objc_msgSend(a2, "database"));
  -[CanceledPreorderEntity deleteFromDatabase](v2, "deleteFromDatabase");

  return 1LL;
}

void sub_1000D91A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(dispatch_queue_s **)(v2 + 16);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_1000D91F8;
  v4[3] = &unk_10034CA90;
  void v4[4] = v2;
  void v4[5] = a2;
  dispatch_async(v3, v4);
}

id sub_1000D91F8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(v2 + 24);
  *(void *)(v2 + 24) = 0LL;

  return [*(id *)(a1 + 32) _sendDidFinishWithResponseFlags:*(void *)(a1 + 40)];
}

void sub_1000D93BC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_1000D93D4(uint64_t a1, uint64_t a2)
{
}

void sub_1000D93E4(uint64_t a1)
{
}

id sub_1000D93F0(uint64_t a1)
{
  id result = *(id *)(*(void *)(a1 + 32) + 136LL);
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL) = result;
  return result;
}

void *sub_1000D9490(void *result)
{
  uint64_t v1 = *(void **)(result[4] + 136LL);
  if (v1 != (void *)result[5])
  {
    uint64_t v2 = result;

    id result = [(id)v2[5] copy];
    *(void *)(v2[4] + 136LL) = result;
  }

  return result;
}

id sub_1000D9578(void *a1)
{
  id result = [*(id *)(a1[4] + 136) containsObject:a1[5]];
  *(_BYTE *)(*(void *)(a1[6] + 8LL) + 24LL) = (_BYTE)result;
  return result;
}

void sub_1000D99B4(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = objc_alloc_init(&OBJC_CLASS___SSVMediaSocialPostArtist);
  [v5 setIdentifier:*a3];
  [v5 setName:a3[1]];
  [*(id *)(a1 + 32) addObject:v5];
}

void sub_1000D9DAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v7 = +[DirectUploadArtistEntity newEntityValuesWithMediaSocialArtist:]( &OBJC_CLASS___DirectUploadArtistEntity,  "newEntityValuesWithMediaSocialArtist:",  a2);
  [v7 setObject:*(void *)(a1 + 32) forKey:@"upload_id"];
  id v5 = -[NSNumber initWithUnsignedInteger:](objc_alloc(&OBJC_CLASS___NSNumber), "initWithUnsignedInteger:", a3);
  [v7 setObject:v5 forKey:@"order_index"];
  if (*(void *)(a1 + 40)) {
    [v7 addEntriesFromDictionary:v7];
  }
  __int128 v6 = -[DirectUploadArtistEntity initWithPropertyValues:inDatabase:]( objc_alloc(&OBJC_CLASS___DirectUploadArtistEntity),  "initWithPropertyValues:inDatabase:",  v7,  *(void *)(a1 + 48));
  if (v6) {
    [*(id *)(a1 + 56) addObject:v6];
  }
}

void sub_1000DA480(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6 = objc_autoreleasePoolPush();
  id v7 = objc_alloc_init(&OBJC_CLASS___SSVDirectUpload);
  if (*(void *)(a3 + 16))
  {
    if (*(void *)(a3 + 24)) {
      uint64_t v8 = -[NSDictionary initWithObjectsAndKeys:]( objc_alloc(&OBJC_CLASS___NSDictionary),  "initWithObjectsAndKeys:",  *(void *)(a3 + 24),  NSLocalizedDescriptionKey,  0LL);
    }
    else {
      uint64_t v8 = 0LL;
    }
    uint64_t v9 = -[NSError initWithDomain:code:userInfo:]( [NSError alloc],  "initWithDomain:code:userInfo:",  *(void *)(a3 + 16),  [*(id *)(a3 + 8) integerValue],  v8);
    [v7 setError:v9];
  }

  [v7 setCategoryName:*(void *)a3];
  objc_msgSend(v7, "setExplicitContent:", objc_msgSend(*(id *)(a3 + 32), "BOOLValue"));
  [v7 setPersistentIdentifier:a2];
  id v10 = [*(id *)(a3 + 40) integerValue];
  else {
    uint64_t v11 = (uint64_t)v10;
  }
  [v7 setState:v11];
  [v7 setSubtitle:*(void *)(a3 + 48)];
  if (*(void *)(a3 + 56))
  {
    unsigned __int8 v12 = -[NSURL initWithString:](objc_alloc(&OBJC_CLASS___NSURL), "initWithString:", *(void *)(a3 + 56));
    [v7 setThumbnailImageURL:v12];
  }

  [v7 setTitle:*(void *)(a3 + 64)];
  [v7 _setUploadKind:*(void *)(a3 + 72)];
  [v7 setUTI:*(void *)(a3 + 80)];
  (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();

  objc_autoreleasePoolPop(v6);
}

id sub_1000DB44C(uint64_t a1)
{
  id result = objc_alloc_init((Class)objc_opt_class(*(void *)(a1 + 32)));
  qword_1003A3388 = (uint64_t)result;
  return result;
}

id sub_1000DB4C8(uint64_t a1)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472LL;
  v3[2] = sub_1000DB520;
  v3[3] = &unk_10034DF98;
  uint64_t v1 = *(void **)(a1 + 32);
  v3[4] = *(void *)(a1 + 40);
  return [v1 _cancelErrorsPassingTest:v3];
}

id sub_1000DB520(uint64_t a1, void *a2)
{
  return [a2 representsDownloadWithIdentifier:*(void *)(a1 + 32)];
}

void sub_1000DB59C(uint64_t a1)
{
  __int128 v14 = 0u;
  __int128 v15 = 0u;
  __int128 v12 = 0u;
  __int128 v13 = 0u;
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = *(void **)(*(void *)(a1 + 40) + 16LL);
  id v4 = [v3 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v13;
    while (2)
    {
      for (size_t i = 0LL; i != v5; size_t i = (char *)i + 1)
      {
        if (*(void *)v13 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = *(void **)(*((void *)&v12 + 1) + 8LL * (void)i);
        if ([v8 canCoalesceWithError:v2])
        {
          objc_msgSend(v8, "addDownloadIdentifiers:", objc_msgSend(v2, "downloadIdentifiers"));
          uint64_t v2 = v8;
          goto LABEL_11;
        }
      }

      id v5 = [v3 countByEnumeratingWithState:&v12 objects:v16 count:16];
      if (v5) {
        continue;
      }
      break;
    }
  }

id sub_1000DB794(uint64_t a1)
{
  return [*(id *)(a1 + 32) _cancelErrorsPassingTest:&stru_10034DFD8];
}

BOOL sub_1000DB7A4(id a1, DownloadError *a2)
{
  return !-[DownloadError isValidError](a2, "isValidError");
}

void sub_1000DBA38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  id v5 = *(dispatch_queue_s **)(v3 + 8);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  v6[2] = sub_1000DBAA8;
  v6[3] = &unk_10034AE70;
  void v6[4] = v3;
  void v6[5] = v4;
  dispatch_async(v5, v6);
}

id sub_1000DBAA8(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 16) removeObjectIdenticalTo:*(void *)(a1 + 40)];
}

id sub_1000DBB9C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _displayScheduledErrors];
}

id sub_1000DC6A8(uint64_t a1, void *a2)
{
  return [a2 resetDownloadsWithIdentifiers:*(void *)(*(void *)(a1 + 32) + 8)];
}

uint64_t sub_1000DC6B8(uint64_t a1, void *a2)
{
  __int128 v11 = 0u;
  __int128 v12 = 0u;
  __int128 v13 = 0u;
  __int128 v14 = 0u;
  uint64_t v3 = *(void **)(*(void *)(a1 + 32) + 8LL);
  uint64_t result = (uint64_t)[v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (result)
  {
    id v5 = (id)result;
    uint64_t v6 = *(void *)v12;
    uint64_t v7 = SSDownloadPhaseCanceled;
    while (2)
    {
      for (size_t i = 0LL; i != v5; size_t i = (char *)i + 1)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        id v9 = *(void **)(*((void *)&v11 + 1) + 8LL * (void)i);
        id v10 = objc_autoreleasePoolPush();
        LODWORD(v9) = objc_msgSend( a2,  "finishDownloadWithID:finalPhase:updatePipeline:",  objc_msgSend(v9, "longLongValue"),  v7,  0);
        objc_autoreleasePoolPop(v10);
        if (!(_DWORD)v9) {
          return 0LL;
        }
      }

      id v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      if (v5) {
        continue;
      }
      break;
    }

    return 1LL;
  }

  return result;
}

id sub_1000DDA94(uint64_t a1)
{
  id result = objc_alloc_init((Class)objc_opt_class(*(void *)(a1 + 32)));
  qword_1003A3398 = (uint64_t)result;
  return result;
}

void sub_1000DDB7C(uint64_t a1)
{
  uint64_t v2 = (uint64_t)[*(id *)(*(void *)(a1 + 32) + 16) count];
  __int128 v12 = 0u;
  __int128 v13 = 0u;
  __int128 v14 = 0u;
  __int128 v15 = 0u;
  uint64_t v3 = *(void **)(a1 + 40);
  id v4 = [v3 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v13;
    do
    {
      for (size_t i = 0LL; i != v5; size_t i = (char *)i + 1)
      {
        if (*(void *)v13 != v6) {
          objc_enumerationMutation(v3);
        }
        id v8 = [*(id *)(*(void *)(a1 + 32) + 16) indexOfObjectIdenticalTo:*(void *)(*((void *)&v12 + 1) + 8 * (void)i)];
        if (v8 != (id)0x7FFFFFFFFFFFFFFFLL) {
          [*(id *)(*(void *)(a1 + 32) + 16) removeObjectAtIndex:v8];
        }
      }

      id v5 = [v3 countByEnumeratingWithState:&v12 objects:v16 count:16];
    }

    while (v5);
  }

  if (v2 >= 1 && ![*(id *)(*(void *)(a1 + 32) + 16) count]) {
    objc_msgSend( +[Daemon daemon](Daemon, "daemon"),  "releaseKeepAliveAssertion:",  @"com.apple.itunesstored.UserNotificationCenter");
  }
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1000DDD48;
  block[3] = &unk_10034AE98;
  void block[4] = *(void *)(a1 + 40);
  dispatch_async(&_dispatch_main_q, block);
  dispatch_queue_global_t global_queue = dispatch_get_global_queue(0LL, 0LL);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  v10[2] = sub_1000DDD58;
  v10[3] = &unk_10034AE98;
  void v10[4] = *(void *)(a1 + 40);
  dispatch_async(global_queue, v10);
}

id sub_1000DDD48(uint64_t a1)
{
  return [*(id *)(a1 + 32) makeObjectsPerformSelector:"cancel"];
}

id sub_1000DDD58(uint64_t a1)
{
  __int128 v7 = 0u;
  __int128 v8 = 0u;
  __int128 v9 = 0u;
  __int128 v10 = 0u;
  uint64_t v1 = *(void **)(a1 + 32);
  id result = [v1 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (result)
  {
    id v3 = result;
    uint64_t v4 = *(void *)v8;
    do
    {
      id v5 = 0LL;
      do
      {
        if (*(void *)v8 != v4) {
          objc_enumerationMutation(v1);
        }
        uint64_t v6 = (void (**)(id, uint64_t))[*(id *)(*((void *)&v7 + 1) + 8 * (void)v5) completionBlock];
        if (v6) {
          v6[2](v6, 1431196227LL);
        }
        id v5 = (char *)v5 + 1;
      }

      while (v3 != v5);
      id result = [v1 countByEnumeratingWithState:&v7 objects:v11 count:16];
      id v3 = result;
    }

    while (result);
  }

  return result;
}

id sub_1000DDF68(uint64_t a1)
{
  return [*(id *)(a1 + 40) _showPreparedNotification:*(void *)(a1 + 32)];
}

void sub_1000DE098(_Unwind_Exception *a1)
{
}

void sub_1000DE0B0(uint64_t a1, uint64_t a2)
{
}

void sub_1000DE0C0(uint64_t a1)
{
}

id sub_1000DE0CC(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 40LL) = -[UserNotification initWithDictionary:options:completionBlock:]( objc_alloc(&OBJC_CLASS___UserNotification),  "initWithDictionary:options:completionBlock:",  *(void *)(a1 + 56),  *(void *)(a1 + 64),  *(void *)(a1 + 40));
  return [*(id *)(a1 + 32) _showPreparedNotification:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40)];
}

void sub_1000DE1E4(uint64_t a1)
{
}

id sub_1000DE2BC(uint64_t a1)
{
  uint64_t v2 = (uint64_t)[*(id *)(*(void *)(a1 + 32) + 16) count];
  uint64_t v3 = v2;
  while (v3-- >= 1)
  {
    id v5 = [*(id *)(*(void *)(a1 + 32) + 16) objectAtIndex:v3];
    if ([v5 userNotification] == *(id *)(a1 + 40))
    {
      id v6 = v5;
      [*(id *)(*(void *)(a1 + 32) + 16) removeObjectAtIndex:v3];
      if (v6)
      {
        id v7 = [v6 completionBlock];
        if (v7)
        {
          id v8 = v7;
          dispatch_queue_global_t global_queue = dispatch_get_global_queue(0LL, 0LL);
          block[0] = _NSConcreteStackBlock;
          block[1] = 3221225472LL;
          block[2] = sub_1000DE418;
          block[3] = &unk_10034E0A0;
          uint64_t v10 = *(void *)(a1 + 48);
          void block[4] = v8;
          void block[5] = v10;
          dispatch_async(global_queue, block);
        }

        v13[0] = _NSConcreteStackBlock;
        v13[1] = 3221225472LL;
        v13[2] = sub_1000DE428;
        v13[3] = &unk_10034AE98;
        void v13[4] = v6;
        dispatch_async(&_dispatch_main_q, v13);
      }

      break;
    }
  }

  id v11 = +[Daemon daemon](&OBJC_CLASS___Daemon, "daemon");
  id result = [v11 endShowingDialog];
  if (v2 >= 1)
  {
    id result = [*(id *)(*(void *)(a1 + 32) + 16) count];
    if (!result) {
      return [v11 releaseKeepAliveAssertion:@"com.apple.itunesstored.UserNotificationCenter"];
    }
  }

  return result;
}

uint64_t sub_1000DE418(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 32) + 16LL))( *(void *)(a1 + 32),  *(void *)(a1 + 40));
}

id sub_1000DE428(uint64_t a1)
{
  return [*(id *)(a1 + 32) cancel];
}

uint64_t sub_1000DE53C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

id sub_1000DE550(uint64_t a1)
{
  return [*(id *)(a1 + 40) show];
}

id sub_1000DE750(uint64_t a1, uint64_t a2)
{
  return objc_msgSend( +[UserNotificationCenter defaultCenter](UserNotificationCenter, "defaultCenter"),  "_finishUserNotification:withResponseFlags:",  a1,  a2);
}

void sub_1000E0A00(id a1)
{
  uint64_t v1 = objc_alloc(&OBJC_CLASS___NSArray);
  uint64_t v4 = -[NSArray initWithObjects:]( v1,  "initWithObjects:",  CPSharedResourcesDirectory(v1),  @"Media",  @"Downloads",  0LL);
  uint64_t v2 = objc_claimAutoreleasedReturnValue(+[NSString pathWithComponents:](&OBJC_CLASS___NSString, "pathWithComponents:", v4));
  uint64_t v3 = (void *)qword_1003A33A8;
  qword_1003A33A8 = v2;
}

void sub_1000E0AF8(uint64_t a1)
{
  unint64_t v30 = 0LL;
  uint64_t v2 = container_system_path_for_identifier("com.apple.itunesstored", &v30);
  if (v30 <= 1 && v2 != 0)
  {
    __int128 v9 = (void *)v2;
    uint64_t v10 = -[NSString initWithCString:encoding:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithCString:encoding:",  v2,  4LL);
    id v11 = -[NSArray initWithObjects:]( objc_alloc(&OBJC_CLASS___NSArray),  "initWithObjects:",  v10,  @"Library",  @"Caches",  @"Scratch",  0LL);
    uint64_t v12 = objc_claimAutoreleasedReturnValue(+[NSString pathWithComponents:](&OBJC_CLASS___NSString, "pathWithComponents:", v11));
    __int128 v13 = (void *)qword_1003A33B8;
    qword_1003A33B8 = v12;

    if (![(id)qword_1003A33B8 length]) {
      goto LABEL_35;
    }
    __int128 v14 = objc_opt_new(&OBJC_CLASS___NSFileManager);
    -[NSFileManager createDirectoryAtPath:withIntermediateDirectories:attributes:error:]( v14,  "createDirectoryAtPath:withIntermediateDirectories:attributes:error:",  qword_1003A33B8,  1LL,  0LL,  0LL);

    int v15 = open((const char *)[(id)qword_1003A33B8 UTF8String], 0x1000000);
    if (v15)
    {
      int v16 = v15;
      fcntl(v15, 64, 4LL);
      close(v16);
    }

    id v17 = (void *)objc_claimAutoreleasedReturnValue( +[NSURL fileURLWithPath:isDirectory:]( &OBJC_CLASS___NSURL,  "fileURLWithPath:isDirectory:",  qword_1003A33B8,  1LL));
    id v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", 1LL));
    id v29 = 0LL;
    unsigned __int8 v19 = [v17 setResourceValue:v18 forKey:NSURLIsExcludedFromBackupKey error:&v29];
    id v20 = v29;

    if ((v19 & 1) != 0)
    {
LABEL_34:

LABEL_35:
      free(v9);
      goto LABEL_36;
    }

    uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v21) {
      uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v22 = [v21 shouldLog];
    else {
      LODWORD(v23) = v22;
    }
    uint64_t v24 = (os_log_s *)objc_claimAutoreleasedReturnValue([v21 OSLogObject]);
    if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
      uint64_t v23 = v23;
    }
    else {
      v23 &= 2u;
    }
    if ((_DWORD)v23)
    {
      uint64_t v25 = (void *)objc_opt_class(*(void *)(a1 + 32));
      int v31 = 138412546;
      uint64_t v32 = v25;
      __int16 v33 = 2112;
      unint64_t v34 = (unint64_t)v20;
      id v26 = v25;
      LODWORD(v2_Block_object_dispose((const void *)(v1 - 64), 8) = 22;
      uint64_t v27 = (void *)_os_log_send_and_compose_impl( v23,  0LL,  0LL,  0LL,  &_mh_execute_header,  v24,  16LL,  "[%@]: Could not exclude path from backup: %@",  &v31,  v28);

      if (!v27)
      {
LABEL_33:

        goto LABEL_34;
      }

      uint64_t v24 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v27,  4LL));
      free(v27);
      SSFileLog(v21, @"%@");
    }

    goto LABEL_33;
  }

  uint64_t v10 = (NSString *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v10) {
    uint64_t v10 = (NSString *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v4 = -[NSString shouldLog](v10, "shouldLog");
  else {
    LODWORD(v5) = v4;
  }
  id v11 = (NSArray *)objc_claimAutoreleasedReturnValue(-[NSString OSLogObject](v10, "OSLogObject"));
  if (os_log_type_enabled((os_log_t)v11, OS_LOG_TYPE_FAULT)) {
    uint64_t v5 = v5;
  }
  else {
    v5 &= 2u;
  }
  if (!(_DWORD)v5) {
    goto LABEL_36;
  }
  id v6 = (void *)objc_opt_class(*(void *)(a1 + 32));
  int v31 = 138412546;
  uint64_t v32 = v6;
  __int16 v33 = 2048;
  unint64_t v34 = v30;
  id v7 = v6;
  id v8 = (void *)_os_log_send_and_compose_impl( v5,  0LL,  0LL,  0LL,  &_mh_execute_header,  v11,  17LL,  "[%@]: Could not look up path to scratch container: %llu",  &v31,  22);

  if (v8)
  {
    id v11 = (NSArray *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v8,  4LL));
    free(v8);
    SSFileLog(v10, @"%@");
LABEL_36:
  }
}

void sub_1000E18C0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
}

void sub_1000E1904(uint64_t a1, void *a2)
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([a2 info]);
  unsigned int v4 = (void *)objc_claimAutoreleasedReturnValue([v3 objectForSetting:1]);

  id v5 = v4;
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [v5 UTF8String];
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(*(void *)(a1 + 32) + 112LL));
}

void sub_1000E1B8C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_1000E1BA4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1000E1BB4(uint64_t a1)
{
}

void sub_1000E1BBC(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  id v15 = a2;
  if (SSIsDaemon())
  {
    id v7 = (void *)objc_claimAutoreleasedReturnValue( +[LSPlugInKitProxy pluginKitProxyForIdentifier:]( &OBJC_CLASS___LSPlugInKitProxy,  "pluginKitProxyForIdentifier:",  *(void *)(a1 + 32)));
    if (!v15
      || (unsigned int v4 = (void *)objc_claimAutoreleasedReturnValue([v7 protocol]),
          [v4 isEqualToString:v15]))
    {
      id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 containingBundle]);
      uint64_t v9 = objc_opt_class(&OBJC_CLASS___LSApplicationProxy);
      if ((objc_opt_isKindOfClass(v8, v9) & 1) != 0)
      {
        uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v7 containingBundle]);
        id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 bundleType]);
        unsigned int v12 = [v11 isEqualToString:LSUserApplicationType];

        if (v15)
        {

          if ((v12 & 1) == 0) {
            goto LABEL_13;
          }
        }

        else if (!v12)
        {
LABEL_13:

          goto LABEL_14;
        }

        uint64_t v13 = objc_claimAutoreleasedReturnValue([v7 containingBundle]);
        uint64_t v14 = *(void *)(*(void *)(a1 + 40) + 8LL);
        unsigned int v4 = *(void **)(v14 + 40);
        *(void *)(v14 + 40) = v13;
      }

      else
      {

        if (!v15) {
          goto LABEL_13;
        }
      }
    }

    goto LABEL_13;
  }

uint64_t sub_1000E24CC(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if (xpc_get_type(v4) == (xpc_type_t)&_xpc_type_dictionary)
  {
    id v5 = -[SKProduct initWithXPCEncoding:](objc_alloc(&OBJC_CLASS___SKProduct), "initWithXPCEncoding:", v4);
    id v6 = v5;
    if (v5)
    {
      id v7 = (void *)objc_claimAutoreleasedReturnValue(-[SKProduct _localeIdentifier](v5, "_localeIdentifier"));
      if (v7)
      {
        id v8 = (NSLocale *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) objectForKey:v7]);
        if (!v8)
        {
          id v8 = -[NSLocale initWithLocaleIdentifier:]( objc_alloc(&OBJC_CLASS___NSLocale),  "initWithLocaleIdentifier:",  v7);
          if (v8) {
            [*(id *)(a1 + 32) setObject:v8 forKey:v7];
          }
        }

        -[SKProduct _setPriceLocale:](v6, "_setPriceLocale:", v8);
        -[SKProduct _setLocaleIdentifier:](v6, "_setLocaleIdentifier:", 0LL);
      }

      [*(id *)(a1 + 40) addObject:v6];
    }
  }

  return 1LL;
}

id sub_1000E283C(uint64_t a1)
{
  id v1 = sub_1000E28BC(a1);
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  uint64_t v3 = v2;
  if (v2)
  {
    CFDictionaryRef v4 = sub_1000E2940(v2);
    if (v4) {
      id v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSPropertyListSerialization dataWithPropertyList:format:options:error:]( &OBJC_CLASS___NSPropertyListSerialization,  "dataWithPropertyList:format:options:error:",  v4,  200LL,  0LL,  0LL));
    }
    else {
      id v5 = 0LL;
    }
  }

  else
  {
    id v5 = 0LL;
  }

  return v5;
}

id sub_1000E28BC(uint64_t a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue( +[NSKeyedArchiver archivedDataWithRootObject:requiringSecureCoding:error:]( &OBJC_CLASS___NSKeyedArchiver,  "archivedDataWithRootObject:requiringSecureCoding:error:",  a1,  1LL,  0LL));
  if ([v1 length])
  {
    id v2 = v1;
    xpc_object_t v3 = xpc_data_create([v2 bytes], (size_t)objc_msgSend(v2, "length"));
  }

  else
  {
    xpc_object_t v3 = 0LL;
  }

  return v3;
}

CFDictionaryRef sub_1000E2940(void *a1)
{
  id v1 = a1;
  id v2 = v1;
  if (!v1) {
    goto LABEL_12;
  }
  xpc_type_t type = xpc_get_type(v1);
  if (type == (xpc_type_t)&_xpc_type_BOOL)
  {
    BOOL value = xpc_BOOL_get_value(v2);
    id v6 = (CFTypeRef *)&kCFBooleanTrue;
    if (!value) {
      id v6 = (CFTypeRef *)&kCFBooleanFalse;
    }
    goto LABEL_15;
  }

  if (type == (xpc_type_t)&_xpc_type_data)
  {
    bytes_ptr = (const UInt8 *)xpc_data_get_bytes_ptr(v2);
    size_t length = xpc_data_get_length(v2);
    id v7 = CFDataCreate(kCFAllocatorSystemDefault, bytes_ptr, length);
    goto LABEL_24;
  }

  if (type == (xpc_type_t)&_xpc_type_date)
  {
    int64_t v10 = xpc_date_get_value(v2);
    id v7 = CFDateCreate(kCFAllocatorSystemDefault, (double)v10 / 1000000000.0 - kCFAbsoluteTimeIntervalSince1970);
    goto LABEL_24;
  }

  if (type == (xpc_type_t)&_xpc_type_double)
  {
    valuePtr[0] = xpc_double_get_value(v2);
    id v7 = CFNumberCreate(kCFAllocatorSystemDefault, kCFNumberDoubleType, valuePtr);
    goto LABEL_24;
  }

  if (type == (xpc_type_t)&_xpc_type_int64)
  {
    valuePtr[0] = xpc_int64_get_value(v2);
    id v7 = CFNumberCreate(kCFAllocatorSystemDefault, kCFNumberSInt64Type, valuePtr);
    goto LABEL_24;
  }

  if (type == (xpc_type_t)&_xpc_type_null)
  {
    id v6 = (CFTypeRef *)&kCFNull;
LABEL_15:
    id v7 = (const __CFDictionary *)CFRetain(*v6);
LABEL_24:
    CFDictionaryRef v4 = v7;
    goto LABEL_25;
  }

  if (type == (xpc_type_t)&_xpc_type_string)
  {
    string_ptr = xpc_string_get_string_ptr(v2);
    id v7 = (const __CFDictionary *)CFStringCreateWithCString(kCFAllocatorSystemDefault, string_ptr, 0x8000100u);
    goto LABEL_24;
  }

  if (type == (xpc_type_t)&_xpc_type_uuid)
  {
    CFUUIDBytes v26 = *(CFUUIDBytes *)xpc_uuid_get_bytes(v2);
    id v7 = CFUUIDCreateFromUUIDBytes(kCFAllocatorSystemDefault, v26);
    goto LABEL_24;
  }

  if (type == (xpc_type_t)&_xpc_type_array)
  {
    id v7 = sub_1000E32E0(v2);
    goto LABEL_24;
  }

  if (type != (xpc_type_t)&_xpc_type_dictionary)
  {
LABEL_12:
    CFDictionaryRef v4 = 0LL;
    goto LABEL_25;
  }

  size_t count = xpc_dictionary_get_count(v2);
  CFIndex v14 = count;
  size_t v15 = 16 * count;
  if (2 * count > 0x100)
  {
    int v16 = malloc(16 * count);
    bzero(v16, v15);
    if (!v16) {
      goto LABEL_12;
    }
  }

  else
  {
    int v16 = valuePtr;
    __memset_chk(valuePtr, 0LL, v15, 2048LL);
  }

  uint64_t v21 = 0LL;
  unsigned int v22 = &v21;
  uint64_t v23 = 0x2020000000LL;
  uint64_t v24 = 0LL;
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472LL;
  void v20[2] = sub_1000E34BC;
  v20[3] = &unk_10034E258;
  void v20[4] = &v21;
  void v20[5] = v16;
  v20[6] = v14;
  xpc_dictionary_apply(v2, v20);
  uint64_t v17 = v22[3];
  if (v14 == v17)
  {
    CFDictionaryRef v4 = CFDictionaryCreate( kCFAllocatorSystemDefault,  (const void **)v16,  (const void **)&v16[v14],  v14,  &kCFTypeDictionaryKeyCallBacks,  &kCFTypeDictionaryValueCallBacks);
    uint64_t v17 = v22[3];
  }

  else
  {
    CFDictionaryRef v4 = 0LL;
  }

  if (v17 >= 1)
  {
    uint64_t v18 = 0LL;
    unsigned __int8 v19 = &v16[v14];
    do
    {
      CFRelease((CFTypeRef)v16[v18]);
      CFRelease((CFTypeRef)v19[v18++]);
    }

    while (v18 < v22[3]);
  }

  if (v16 != valuePtr) {
    free(v16);
  }
  _Block_object_dispose(&v21, 8);
LABEL_25:

  return v4;
}

void sub_1000E2D00( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
}

id sub_1000E2D24(uint64_t a1)
{
  if (a1)
  {
    id v1 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSPropertyListSerialization propertyListWithData:options:format:error:]( &OBJC_CLASS___NSPropertyListSerialization,  "propertyListWithData:options:format:error:",  a1,  0LL,  0LL,  0LL));
    id v2 = v1;
    if (v1)
    {
      id v3 = sub_1000E2DC8(v1);
      CFDictionaryRef v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
      if (v4)
      {
        uint64_t v5 = objc_opt_class(&OBJC_CLASS___NSError);
        id v6 = sub_1000E3224(v4, v5);
        id v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
      }

      else
      {
        id v7 = 0LL;
      }
    }

    else
    {
      id v7 = 0LL;
    }
  }

  else
  {
    id v7 = 0LL;
  }

  return v7;
}

id sub_1000E2DC8(__CFString *a1)
{
  if (!a1) {
    goto LABEL_59;
  }
  CFTypeID v2 = CFGetTypeID(a1);
  if (v2 == CFNullGetTypeID())
  {
    xpc_object_t v3 = xpc_null_create();
    return v3;
  }

  if (v2 == CFBooleanGetTypeID())
  {
    BOOL v4 = CFBooleanGetValue((CFBooleanRef)a1) != 0;
    xpc_object_t v3 = xpc_BOOL_create(v4);
    return v3;
  }

  if (v2 == CFDataGetTypeID())
  {
    BytePtr = CFDataGetBytePtr((CFDataRef)a1);
    size_t Length = CFDataGetLength((CFDataRef)a1);
    xpc_object_t v3 = xpc_data_create(BytePtr, Length);
    return v3;
  }

  if (v2 != CFDateGetTypeID())
  {
    if (v2 == CFUUIDGetTypeID())
    {
      CFUUIDBytes uuid = CFUUIDGetUUIDBytes((CFUUIDRef)a1);
      xpc_object_t v3 = xpc_uuid_create(&uuid.byte0);
      return v3;
    }

    if (v2 == CFStringGetTypeID())
    {
      CFIndex v10 = CFStringGetLength(a1);
      size_t MaximumSizeForEncoding = CFStringGetMaximumSizeForEncoding(v10 + 1, 0x8000100u);
      if (MaximumSizeForEncoding != -1LL)
      {
        CFIndex v12 = MaximumSizeForEncoding;
        uint64_t v13 = (char *)malloc(MaximumSizeForEncoding);
        if (v13)
        {
          CFIndex v14 = v13;
          if (CFStringGetCString(a1, v13, v12, 0x8000100u)) {
            xpc_object_t v8 = xpc_string_create(v14);
          }
          else {
            xpc_object_t v8 = 0LL;
          }
          free(v14);
          return v8;
        }
      }

      goto LABEL_59;
    }

    if (v2 == CFNumberGetTypeID())
    {
      if (CFNumberIsFloatType((CFNumberRef)a1))
      {
        *(void *)&uuid.byte0 = 0LL;
        if (CFNumberGetValue((CFNumberRef)a1, kCFNumberDoubleType, &uuid))
        {
          xpc_object_t v3 = xpc_double_create(*(double *)&uuid.byte0);
          return v3;
        }
      }

      else
      {
        *(void *)&uuid.byte0 = 0LL;
        if (CFNumberGetValue((CFNumberRef)a1, kCFNumberSInt64Type, &uuid))
        {
          xpc_object_t v3 = xpc_int64_create(*(int64_t *)&uuid.byte0);
          return v3;
        }
      }

      goto LABEL_59;
    }

    if (v2 == CFArrayGetTypeID())
    {
      xpc_object_t v8 = xpc_array_create(0LL, 0LL);
      if (!v8) {
        return v8;
      }
      __int128 v41 = 0u;
      __int128 v42 = 0u;
      __int128 v39 = 0u;
      __int128 v40 = 0u;
      size_t v15 = a1;
      id v16 = -[__CFString countByEnumeratingWithState:objects:count:]( v15,  "countByEnumeratingWithState:objects:count:",  &v39,  v45,  16LL);
      if (v16)
      {
        id v17 = v16;
        uint64_t v18 = *(void *)v40;
        do
        {
          for (size_t i = 0LL; i != v17; size_t i = (char *)i + 1)
          {
            if (*(void *)v40 != v18) {
              objc_enumerationMutation(v15);
            }
            uint64_t v20 = sub_1000E2DC8(*(void *)(*((void *)&v39 + 1) + 8LL * (void)i));
            uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue(v20);
            if (v21) {
              xpc_array_append_value(v8, v21);
            }
          }

          id v17 = -[__CFString countByEnumeratingWithState:objects:count:]( v15,  "countByEnumeratingWithState:objects:count:",  &v39,  v45,  16LL);
        }

        while (v17);
      }

LABEL_52:
      return v8;
    }

    if (v2 == CFDictionaryGetTypeID())
    {
      xpc_object_t v8 = xpc_dictionary_create(0LL, 0LL, 0LL);
      if (!v8) {
        return v8;
      }
      __int128 v37 = 0u;
      __int128 v38 = 0u;
      __int128 v35 = 0u;
      __int128 v36 = 0u;
      size_t v15 = a1;
      id v22 = -[__CFString countByEnumeratingWithState:objects:count:]( v15,  "countByEnumeratingWithState:objects:count:",  &v35,  v44,  16LL);
      if (v22)
      {
        id v23 = v22;
        uint64_t v24 = *(void *)v36;
        do
        {
          for (uint64_t j = 0LL; j != v23; uint64_t j = (char *)j + 1)
          {
            if (*(void *)v36 != v24) {
              objc_enumerationMutation(v15);
            }
            CFUUIDBytes v26 = *(const __CFString **)(*((void *)&v35 + 1) + 8LL * (void)j);
            CFIndex v27 = CFStringGetLength(v26);
            size_t v28 = CFStringGetMaximumSizeForEncoding(v27, 0x8000100u);
            if (v28 != -1LL)
            {
              CFIndex v29 = v28;
              unint64_t v30 = (char *)malloc(v28);
              if (v30)
              {
                int v31 = v30;
                if (CFStringGetCString(v26, v30, v29, 0x8000100u))
                {
                  Value = CFDictionaryGetValue((CFDictionaryRef)v15, v26);
                  uint64_t v33 = sub_1000E2DC8(Value);
                  unint64_t v34 = (void *)objc_claimAutoreleasedReturnValue(v33);
                  if (v34) {
                    xpc_dictionary_set_value(v8, v31, v34);
                  }
                }

                free(v31);
              }
            }
          }

          id v23 = -[__CFString countByEnumeratingWithState:objects:count:]( v15,  "countByEnumeratingWithState:objects:count:",  &v35,  v44,  16LL);
        }

        while (v23);
      }

      goto LABEL_52;
    }

    if ((objc_opt_respondsToSelector(a1, "copyXPCEncoding") & 1) != 0)
    {
      xpc_object_t v3 = -[__CFString copyXPCEncoding](a1, "copyXPCEncoding");
      return v3;
    }

  if (*(_BYTE *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL) && -[NSMutableOrderedSet count](v34, "count")) {
    *(_BYTE *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = [v33 pauseDownloadsWithIdentifiers:v34];
  }
  CFIndex v29 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL);

  return v29;
}

id sub_1000E3224(void *a1, uint64_t a2)
{
  id v3 = a1;
  BOOL v4 = v3;
  if (v3
    && xpc_get_type(v3) == (xpc_type_t)&_xpc_type_data
    && (size_t length = xpc_data_get_length(v4), bytes_ptr = xpc_data_get_bytes_ptr(v4), length)
    && (double v9 = -[NSData initWithBytesNoCopy:length:freeWhenDone:]( objc_alloc(&OBJC_CLASS___NSData),  "initWithBytesNoCopy:length:freeWhenDone:",  bytes_ptr,  length,  0LL)) != 0LL)
  {
    CFIndex v10 = v9;
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSKeyedUnarchiver unarchivedObjectOfClass:fromData:error:]( &OBJC_CLASS___NSKeyedUnarchiver,  "unarchivedObjectOfClass:fromData:error:",  a2,  v9,  0LL));
  }

  else
  {
    uint64_t v5 = 0LL;
  }

  return v5;
}

CFArrayRef sub_1000E32E0(void *a1)
{
  id v1 = a1;
  size_t count = xpc_array_get_count(v1);
  CFIndex v3 = count;
  size_t v4 = 8 * count;
  if (count > 0x100)
  {
    uint64_t v5 = malloc(8 * count);
    bzero(v5, v4);
    if (!v5)
    {
      CFArrayRef v7 = 0LL;
      goto LABEL_13;
    }
  }

  else
  {
    uint64_t v5 = v18;
    __memset_chk(v18, 0LL, v4, 2048LL);
  }

  uint64_t v14 = 0LL;
  size_t v15 = &v14;
  uint64_t v16 = 0x2020000000LL;
  uint64_t v17 = 0LL;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  v10[2] = sub_1000E3630;
  v10[3] = &unk_10034E280;
  CFIndex v12 = &v14;
  uint64_t v13 = v5;
  id v11 = &stru_10034E230;
  xpc_array_apply(v1, v10);
  uint64_t v6 = v15[3];
  if (v3 == v6)
  {
    CFArrayRef v7 = CFArrayCreate(kCFAllocatorSystemDefault, (const void **)v5, v3, &kCFTypeArrayCallBacks);
    uint64_t v6 = v15[3];
  }

  else
  {
    CFArrayRef v7 = 0LL;
  }

  if (v6 >= 1)
  {
    uint64_t v8 = 0LL;
    do
      CFRelease(*(CFTypeRef *)&v5[8 * v8++]);
    while (v8 < v15[3]);
  }

  if (v5 != v18) {
    free(v5);
  }

  _Block_object_dispose(&v14, 8);
LABEL_13:

  return v7;
}

void sub_1000E3490( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
}

void *__cdecl sub_1000E34B4(id a1, OS_xpc_object *a2)
{
  return sub_1000E2940(a2);
}

uint64_t sub_1000E34BC(void *a1, const char *a2, uint64_t a3)
{
  uint64_t result = sub_1000E2940(a3);
  if (result)
  {
    uint64_t v6 = (const void *)result;
    CFStringRef v7 = CFStringCreateWithCString(kCFAllocatorSystemDefault, a2, 0x8000100u);
    if (v7)
    {
      *(void *)(a1[5] + 8LL * *(void *)(*(void *)(a1[4] + 8LL) + 24LL)) = v7;
      uint64_t v9 = a1[5];
      uint64_t v8 = a1[6];
      uint64_t v10 = *(void *)(a1[4] + 8LL);
      uint64_t v11 = *(void *)(v10 + 24);
      *(void *)(v10 + 24) = v11 + 1;
      *(void *)(v9 + 8 * (v11 + v8)) = v6;
      return 1LL;
    }

    else
    {
      CFRelease(v6);
      return 0LL;
    }
  }

  return result;
}

CFDictionaryRef sub_1000E3558(void *a1, const char *a2)
{
  xpc_object_t value = xpc_dictionary_get_value(a1, a2);
  CFIndex v3 = (void *)objc_claimAutoreleasedReturnValue(value);
  CFDictionaryRef v4 = sub_1000E2940(v3);

  return v4;
}

CFDictionaryRef sub_1000E358C(void *a1, const char *a2, uint64_t a3)
{
  CFDictionaryRef v4 = sub_1000E3558(a1, a2);
  CFDictionaryRef v5 = v4;
  if (v4 && (objc_opt_isKindOfClass(v4, a3) & 1) == 0)
  {
    CFRelease(v5);
    return 0LL;
  }

  return v5;
}

void sub_1000E35D4(void *a1, const char *a2, __CFString *a3)
{
  xpc_object_t xdict = a1;
  id v5 = sub_1000E2DC8(a3);
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  if (v6) {
    xpc_dictionary_set_value(xdict, a2, v6);
  }
}

BOOL sub_1000E3630(void *a1)
{
  uint64_t v2 = (*(uint64_t (**)(void))(a1[4] + 16LL))();
  if (v2)
  {
    uint64_t v3 = a1[6];
    uint64_t v4 = *(void *)(a1[5] + 8LL);
    uint64_t v5 = *(void *)(v4 + 24);
    *(void *)(v4 + 24) = v5 + 1;
    *(void *)(v3 + 8 * v5) = v2;
  }

  return v2 != 0;
}

id sub_1000E3764(uint64_t a1, void *a2)
{
  return [a2 _invalidateAfterExternalChange];
}

void sub_1000E381C(id a1)
{
  id v1 = objc_alloc(&OBJC_CLASS___EBookManifest);
  qword_1003A33C8 = -[EBookManifest initWithManifestPath:]( v1,  "initWithManifestPath:",  [sub_10015AF78(SSDownloadKindEBook) stringByAppendingPathComponent:@"Purchases.plist"]);
}

void sub_1000E38B4(id a1)
{
  qword_1003A33D8 = -[EBookManifest initWithManifestPath:]( [EBookManifest alloc],  "initWithManifestPath:",  objc_msgSend( +[InstallEBookDownloadOperation sharedBookContainerPath]( InstallEBookDownloadOperation,  "sharedBookContainerPath"),  "stringByAppendingPathComponent:",  @"Shared.plist"));
}

void sub_1000E3948(id a1)
{
  id v1 = objc_alloc(&OBJC_CLASS___NSArray);
  uint64_t v2 = -[NSArray initWithObjects:]( v1,  "initWithObjects:",  CPSharedResourcesDirectory(v1),  @"Media",  @"Books",  @"Books.plist",  0LL);
  qword_1003A33E8 = -[EBookManifest initWithManifestPath:]( objc_alloc(&OBJC_CLASS___EBookManifest),  "initWithManifestPath:",  +[NSString pathWithComponents:](&OBJC_CLASS___NSString, "pathWithComponents:", v2));
}

void sub_1000E3A90(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _manifest];
  uint64_t v3 = @"Books";
  uint64_t v4 = (NSMutableArray *)[v2 objectForKey:@"Books"];
  if (v4
    || (uint64_t v3 = @"Purchases",
        (uint64_t v4 = (NSMutableArray *)[v2 objectForKey:@"Purchases"]) != 0))
  {
    uint64_t v5 = v4;
  }

  else
  {
    uint64_t v5 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    uint64_t v3 = @"Books";
  }

  __int128 v14 = 0u;
  __int128 v15 = 0u;
  __int128 v12 = 0u;
  __int128 v13 = 0u;
  uint64_t v6 = *(void **)(a1 + 40);
  id v7 = [v6 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v13;
    do
    {
      uint64_t v10 = 0LL;
      do
      {
        if (*(void *)v13 != v9) {
          objc_enumerationMutation(v6);
        }
        id v11 = [*(id *)(*((void *)&v12 + 1) + 8 * (void)v10) mutableCopy];
        -[NSMutableArray addObject:](v5, "addObject:", v11);

        uint64_t v10 = (char *)v10 + 1;
      }

      while (v8 != v10);
      id v8 = [v6 countByEnumeratingWithState:&v12 objects:v16 count:16];
    }

    while (v8);
  }

  [v2 setObject:v5 forKey:v3];
}

id sub_1000E3D98(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _entries];
  __int128 v8 = 0u;
  __int128 v9 = 0u;
  __int128 v10 = 0u;
  __int128 v11 = 0u;
  id result = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (result)
  {
    id v4 = result;
    uint64_t v5 = *(void *)v9;
LABEL_3:
    uint64_t v6 = 0LL;
    while (1)
    {
      if (*(void *)v9 != v5) {
        objc_enumerationMutation(v2);
      }
      id v7 = *(void **)(*((void *)&v8 + 1) + 8 * v6);
      if (objc_msgSend( objc_msgSend(v7, "objectForKey:", *(void *)(a1 + 40)),  "isEqual:",  *(void *)(a1 + 48)))
      {
        [*(id *)(a1 + 56) addObject:v7];
        id result = [*(id *)(a1 + 56) count];
      }

      if (v4 == (id)++v6)
      {
        id result = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
        id v4 = result;
        if (result) {
          goto LABEL_3;
        }
        return result;
      }
    }
  }

  return result;
}

void sub_1000E3F2C(uint64_t a1)
{
  id v2 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "_manifest"), "objectForKey:", @"Books");
  uint64_t v3 = 0LL;
  while ((objc_msgSend( *(id *)(a1 + 40),  "isEqualToNumber:",  objc_msgSend(objc_msgSend(v2, "objectAtIndex:", v3), "objectForKey:", @"s")) & 1) == 0)
  {
    if (++v3 == 8) {
      goto LABEL_16;
    }
  }

  [v2 removeObjectAtIndex:v3];
  id v4 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  if (!v4) {
    id v4 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  unsigned int v5 = [v4 shouldLog];
  else {
    LODWORD(v6) = v5;
  }
  id v7 = (os_log_s *)[v4 OSLogObject];
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v6 = v6;
  }
  else {
    v6 &= 2u;
  }
  if ((_DWORD)v6)
  {
    uint64_t v8 = objc_opt_class(*(void *)(a1 + 32));
    int v11 = 138412546;
    uint64_t v12 = v8;
    __int16 v13 = 2048;
    uint64_t v14 = v3;
    uint64_t v9 = _os_log_send_and_compose_impl( v6,  0LL,  0LL,  0LL,  &_mh_execute_header,  v7,  0LL,  "%@: Removed manifest itemID entry at index: %ld",  &v11,  22);
    if (v9)
    {
      __int128 v10 = (void *)v9;
      +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v9, 4LL);
      free(v10);
      SSFileLog(v4, @"%@");
    }
  }

void sub_1000E4150(uint64_t a1)
{
  id v2 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "_manifest"), "objectForKey:", @"Books");
  uint64_t v3 = 0LL;
  while ((objc_msgSend( *(id *)(a1 + 40),  "isEqualToString:",  objc_msgSend( objc_msgSend(v2, "objectAtIndex:", v3),  "objectForKey:",  @"iTunesU Permlink")) & 1) == 0)
  {
    if (++v3 == 8) {
      goto LABEL_16;
    }
  }

  [v2 removeObjectAtIndex:v3];
  id v4 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  if (!v4) {
    id v4 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  unsigned int v5 = [v4 shouldLog];
  else {
    LODWORD(v6) = v5;
  }
  id v7 = (os_log_s *)[v4 OSLogObject];
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v6 = v6;
  }
  else {
    v6 &= 2u;
  }
  if ((_DWORD)v6)
  {
    uint64_t v8 = objc_opt_class(*(void *)(a1 + 32));
    int v11 = 138412546;
    uint64_t v12 = v8;
    __int16 v13 = 2048;
    uint64_t v14 = v3;
    uint64_t v9 = _os_log_send_and_compose_impl( v6,  0LL,  0LL,  0LL,  &_mh_execute_header,  v7,  0LL,  "%@: Removed manifest permalink entry at index: %ld",  &v11,  22);
    if (v9)
    {
      __int128 v10 = (void *)v9;
      +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v9, 4LL);
      free(v10);
      SSFileLog(v4, @"%@");
    }
  }

double sub_1000E4374(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 32) + 16LL);
  if (v1)
  {
    uint64_t v16 = 0LL;
    uint64_t v3 = +[NSPropertyListSerialization dataWithPropertyList:format:options:error:]( &OBJC_CLASS___NSPropertyListSerialization,  "dataWithPropertyList:format:options:error:",  v1,  200LL,  0LL,  &v16);
    if (v3)
    {
      if (!-[NSData writeToFile:options:error:]( v3,  "writeToFile:options:error:",  *(void *)(*(void *)(a1 + 32) + 24LL),  1LL,  &v16))
      {
        id v5 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
        if (!v5) {
          id v5 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
        }
        int v6 = [v5 shouldLog];
        LODWORD(v7) = [v5 shouldLogToDisk] ? v6 | 2 : v6;
        uint64_t v8 = (os_log_s *)[v5 OSLogObject];
        uint64_t v7 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT) ? v7 : v7 & 2u;
        if ((_DWORD)v7)
        {
          uint64_t v9 = objc_opt_class(*(void *)(a1 + 32));
          int v17 = 138412546;
          uint64_t v18 = v9;
          __int16 v19 = 2112;
          uint64_t v20 = v16;
          uint64_t v10 = _os_log_send_and_compose_impl( v7,  0LL,  0LL,  0LL,  &_mh_execute_header,  v8,  0LL,  "%@: Could not write data: %@",  &v17,  22);
          goto LABEL_24;
        }
      }
    }

    else
    {
      id v5 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
      if (!v5) {
        id v5 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
      }
      unsigned int v11 = [v5 shouldLog];
      else {
        LODWORD(v12) = v11;
      }
      __int16 v13 = (os_log_s *)[v5 OSLogObject];
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT)) {
        uint64_t v12 = v12;
      }
      else {
        v12 &= 2u;
      }
      if ((_DWORD)v12)
      {
        uint64_t v14 = objc_opt_class(*(void *)(a1 + 32));
        int v17 = 138412546;
        uint64_t v18 = v14;
        __int16 v19 = 2112;
        uint64_t v20 = v16;
        uint64_t v10 = _os_log_send_and_compose_impl( v12,  0LL,  0LL,  0LL,  &_mh_execute_header,  v13,  0LL,  "%@: Could not serialize data: %@",  &v17,  22);
LABEL_24:
        __int128 v15 = (void *)v10;
        if (v10)
        {
          +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v10, 4LL);
          free(v15);
          *(void *)&double result = SSFileLog(v5, @"%@").n128_u64[0];
        }
      }
    }
  }

  return result;
}

void sub_1000E47A4(uint64_t a1)
{
  *(void *)(*(void *)(a1 + 32) + 16LL) = 0LL;
}

LABEL_64:
      uint64_t v18 = (char *)v18 + 1;
    }

    while (v16 != v18);
    uint64_t v16 = -[NSMapTable countByEnumeratingWithState:objects:count:]( v14,  "countByEnumeratingWithState:objects:count:",  &v63,  v73,  16LL);
  }

  while (v16);

  if ((v58 & 1) != 0) {
    goto LABEL_83;
  }
LABEL_70:
  uint64_t v50 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5[459], "sharedDaemonConfig", v55));
  if (!v50) {
    uint64_t v50 = (void *)objc_claimAutoreleasedReturnValue([v5[459] sharedConfig]);
  }
  uint64_t v51 = [v50 shouldLog];
  uint64_t v52 = (os_log_s *)objc_claimAutoreleasedReturnValue([v50 OSLogObject]);
  if (os_log_type_enabled(v52, OS_LOG_TYPE_DEFAULT)) {
    int v53 = v51;
  }
  else {
    int v53 = v51 & 2;
  }
  if ((_DWORD)v53)
  {
    __int128 v67 = 138412290;
    __int128 v68 = v4;
    LODWORD(v56) = 12;
    id v54 = (void *)_os_log_send_and_compose_impl( v53,  0LL,  0LL,  0LL,  &_mh_execute_header,  v52,  0LL,  "[Download]: Reprioritized download: %@",  &v67,  v56);

    if (v54)
    {
      uint64_t v52 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v54,  4LL));
      free(v54);
      SSFileLog(v50, @"%@");
      goto LABEL_80;
    }
  }

  else
  {
LABEL_80:
  }

  int v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableOrderedSet orderedSet](&OBJC_CLASS___NSMutableOrderedSet, "orderedSet"));
  [v6 addObject:v4];
  -[DownloadPipeline addDownloadsWithIdentifiers:](self, "addDownloadsWithIdentifiers:", v6);
LABEL_82:

LABEL_83:
}

  __int128 v40 = 1;
LABEL_65:
  __int128 v41 = objc_claimAutoreleasedReturnValue(-[SSDownloadPolicy downloadKind](self->_policy, "downloadKind", v62));
  __int128 v42 = (void *)v41;
  if ((v40 & 1) == 0 && (v13 & 1) != 0 && v41)
  {
    uint64_t v43 = (void *)objc_claimAutoreleasedReturnValue( +[SSURLBagContext contextWithBagType:]( &OBJC_CLASS___SSURLBagContext,  "contextWithBagType:",  -[SSDownloadPolicy URLBagType](self->_policy, "URLBagType")));
    id v44 = (void *)objc_claimAutoreleasedReturnValue( -[PrepareDownloadOperation loadedURLBagWithContext:returningError:]( self,  "loadedURLBagWithContext:returningError:",  v43,  0LL));
    uint64_t v45 = (void *)objc_claimAutoreleasedReturnValue([v44 networkConstraintsForDownloadKind:v42]);
    id v46 = v45;
    if (v45)
    {
      double v47 = (char *)[v45 sizeLimitForNetworkType:1];
      if (v47 == (char *)SSDownloadSizeLimitDisabled)
      {
        LOBYTE(v13) = 0;
      }

      else if (v47 != (char *)SSDownloadSizeLimitNoLimit)
      {
        LOBYTE(v13) = (uint64_t)v69 <= (uint64_t)v47;
      }
    }
  }

  id v4 = v66;
LABEL_75:
  uint64_t v48 = (void *)objc_claimAutoreleasedReturnValue([v9[459] sharedDaemonConfig]);
  if (!v48) {
    uint64_t v48 = (void *)objc_claimAutoreleasedReturnValue([v9[459] sharedConfig]);
  }
  uint64_t v49 = [v48 shouldLog];
  else {
    uint64_t v50 = v49;
  }
  uint64_t v51 = (os_log_s *)objc_claimAutoreleasedReturnValue([v48 OSLogObject]);
  if (os_log_type_enabled(v51, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v52 = v50;
  }
  else {
    uint64_t v52 = v50 & 2;
  }
  if (!(_DWORD)v52) {
    goto LABEL_86;
  }
  int v53 = [v4 databaseID];
  id v54 = (void *)objc_claimAutoreleasedReturnValue([v4 valueForProperty:@"bytes_total"]);
  __int16 v55 = [v54 longLongValue];
  int v56 = -[SSMemoryEntity databaseID](self->_download, "databaseID");
  v80[0] = 67109888;
  v80[1] = v13 & 1;
  __int16 v81 = 2048;
  id v82 = v53;
  __int16 v83 = 2048;
  __int16 v84 = v55;
  v85 = 2048;
  __int16 v86 = v56;
  LODWORD(v63) = 38;
  uint64_t v57 = (void *)_os_log_send_and_compose_impl( v52,  0LL,  0LL,  0LL,  &_mh_execute_header,  v51,  0LL,  "[Download]: Cellular data status: %d for asset: %lld of size: %lld, %lld",  v80,  v63,  v64,  v65);

  id v4 = v66;
  if (v57)
  {
    uint64_t v51 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v57,  4LL));
    free(v57);
    SSFileLog(v48, @"%@");
LABEL_86:
  }

  return v13 & 1;
}

uint64_t sub_1000E6B48(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v4) {
    id v4 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v5 = [v4 shouldLog];
  else {
    LODWORD(v6) = v5;
  }
  uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue([v4 OSLogObject]);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
    uint64_t v6 = v6;
  }
  else {
    v6 &= 2u;
  }
  if (!(_DWORD)v6) {
    goto LABEL_12;
  }
  id v8 = [*(id *)(a1 + 32) downloadIdentifier];
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) error]);
  int v19 = 134218242;
  id v20 = v8;
  __int16 v21 = 2114;
  id v22 = v9;
  uint64_t v10 = (void *)_os_log_send_and_compose_impl( v6,  0LL,  0LL,  0LL,  &_mh_execute_header,  v7,  16LL,  "[Download]: Fail download: %lld after session error: %{public}@",  &v19,  22);

  if (v10)
  {
    uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v10,  4LL));
    free(v10);
    SSFileLog(v4, @"%@");
LABEL_12:
  }

  unsigned int v11 = objc_alloc(&OBJC_CLASS___DownloadAssetEntity);
  id v12 = [*(id *)(a1 + 32) mediaAssetIdentifier];
  __int16 v13 = (void *)objc_claimAutoreleasedReturnValue([v3 database]);
  uint64_t v14 = -[DownloadAssetEntity initWithPersistentID:inDatabase:](v11, "initWithPersistentID:inDatabase:", v12, v13);

  -[DownloadAssetEntity setValue:forProperty:](v14, "setValue:forProperty:", &__kCFBooleanFalse, @"is_downloaded");
  __int128 v15 = *(void **)(a1 + 48);
  uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithLongLong:]( NSNumber,  "numberWithLongLong:",  [*(id *)(a1 + 32) downloadIdentifier]));
  int v17 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) error]);
  [v15 _failDownloadWithIdentifier:v16 error:v17 transaction:v3];

  return 1LL;
}

void sub_1000E6DB0(uint64_t a1, void *a2)
{
  id v3 = a2;
  v16[0] = SSDownloadPhaseDownloading;
  v16[1] = SSDownloadPhaseProcessing;
  v16[2] = SSDownloadPhaseDataRestore;
  v16[3] = SSDownloadPhaseInstalling;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v16, 4LL));
  unsigned int v5 = (char *)[v4 indexOfObject:*(void *)(a1 + 32)];
  uint64_t v6 = (char *)[v4 count];
  uint64_t v7 = *(void **)(a1 + 40);
  if (v5 == v6 - 1)
  {
    id v8 = (void *)v7[4];
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472LL;
    v14[2] = sub_1000E6F50;
    v14[3] = &unk_10034CEB8;
    uint64_t v9 = &v15;
    id v15 = *(id *)(a1 + 48);
    id v10 = [v8 modifyUsingTransactionBlock:v14];
  }

  else
  {
    uint64_t v11 = *(void *)(a1 + 48);
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472LL;
    v12[2] = sub_1000E6FA0;
    v12[3] = &unk_10034E3E8;
    uint64_t v9 = (id *)v13;
    v13[0] = v4;
    v13[1] = v5;
    [v7 _processDownloadWithTaskState:v11 databaseSession:v3 setupBlock:v12];
  }
}

uint64_t sub_1000E6F50(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v4 = [v2 downloadIdentifier];
  [v3 finishDownloadWithID:v4 finalPhase:SSDownloadPhaseFinished updatePipeline:0];

  return 1LL;
}

void sub_1000E6FA0(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40) + 1LL;
  id v4 = a2;
  id v5 = (id)objc_claimAutoreleasedReturnValue([v2 objectAtIndex:v3]);
  [v4 setInitialDownloadPhase:v5];
}

void sub_1000E70A8(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 112) objectForKey:*(void *)(a1 + 40)]);
  if (v2)
  {
    objc_msgSend( v2,  "setFinishProgress:",  (double)(uint64_t)objc_msgSend(*(id *)(a1 + 48), "currentValue")
    / (double)(uint64_t)[*(id *)(a1 + 48) maxValue]);
    [*(id *)(*(void *)(a1 + 32) + 40) addObject:v2];
    [*(id *)(a1 + 32) _startProgressTimer];
  }
}

void sub_1000E71DC(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 112) objectForKey:*(void *)(a1 + 40)]);
  if (v2)
  {
    id v3 = v2;
    [v2 setTransferProgressWithBytesWritten:*(void *)(a1 + 48) totalBytesExpected:*(void *)(a1 + 56)];
    [*(id *)(*(void *)(a1 + 32) + 40) addObject:v3];
    [*(id *)(a1 + 32) _startProgressTimer];
    id v2 = v3;
  }
}

void sub_1000E7504(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 112) objectForKey:*(void *)(a1 + 40)]);
  if (v2)
  {
    uint64_t v3 = *(void *)(a1 + 48);
    uint64_t v4 = *(void *)(a1 + 64);
    if (v3 <= 0) {
      uint64_t v5 = 0LL;
    }
    else {
      uint64_t v5 = v4 + v3;
    }
    id v6 = v2;
    [v2 setTransferProgressWithBytesWritten:v4 + *(void *)(a1 + 56) totalBytesExpected:v5];
    [*(id *)(*(void *)(a1 + 32) + 40) addObject:v6];
    [*(id *)(a1 + 32) _startProgressTimer];
    id v2 = v6;
  }
}

void sub_1000E7860( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, char a27)
{
}

double sub_1000E789C(uint64_t a1, void *a2)
{
  __int128 v7 = v10;
  uint64_t v8 = v11;
  uint64_t v3 = (void (*)(__int128 *))ISWeakLinkedSymbolForString("CMTimeGetSeconds", 15LL);
  if (v3)
  {
    __int128 v12 = v7;
    uint64_t v13 = v8;
    v3(&v12);
  }

  else
  {
    double v4 = 0.0;
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8LL);
  double result = v4 + *(double *)(v5 + 24);
  *(double *)(v5 + 24) = result;
  return result;
}

void sub_1000E7928(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 112) objectForKey:*(void *)(a1 + 40)]);
  if (v2)
  {
    id v3 = v2;
    [v2 setTransferProgress:*(double *)(a1 + 48)];
    [*(id *)(*(void *)(a1 + 32) + 40) addObject:v3];
    [*(id *)(a1 + 32) _startProgressTimer];
    id v2 = v3;
  }
}

void sub_1000E8144( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, char a27)
{
}

double sub_1000E8190(uint64_t a1, void *a2)
{
  __int128 v7 = v10;
  uint64_t v8 = v11;
  id v3 = (void (*)(__int128 *))ISWeakLinkedSymbolForString("CMTimeGetSeconds", 15LL);
  if (v3)
  {
    __int128 v12 = v7;
    uint64_t v13 = v8;
    v3(&v12);
  }

  else
  {
    double v4 = 0.0;
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8LL);
  double result = v4 + *(double *)(v5 + 24);
  *(double *)(v5 + 24) = result;
  return result;
}

void sub_1000E821C(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 112) objectForKey:*(void *)(a1 + 40)]);
  if (v2)
  {
    id v3 = v2;
    [v2 setTransferProgress:*(double *)(a1 + 48)];
    [*(id *)(*(void *)(a1 + 32) + 40) addObject:v3];
    [*(id *)(a1 + 32) _startProgressTimer];
    id v2 = v3;
  }
}

uint64_t sub_1000E8C84(uint64_t a1, void *a2)
{
  id v3 = a2;
  double v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 112) objectForKey:*(void *)(a1 + 40)]);
  uint64_t v5 = v4;
  if (!v4)
  {
    __int128 v10 = (DownloadAssetEntity *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v10) {
      __int128 v10 = (DownloadAssetEntity *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v20 = -[DownloadAssetEntity shouldLog](v10, "shouldLog");
    else {
      LODWORD(v21) = v20;
    }
    id v22 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[DownloadAssetEntity OSLogObject](v10, "OSLogObject"));
    if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v21 = v21;
    }
    else {
      v21 &= 2u;
    }
    if ((_DWORD)v21)
    {
      id v23 = [*(id *)(a1 + 40) taskIdentifier];
      uint64_t v24 = *(void **)(a1 + 48);
      int v121 = 134218242;
      id v122 = v23;
      __int16 v123 = 2112;
      id v124 = v24;
      uint64_t v25 = (void *)_os_log_send_and_compose_impl( v21,  0LL,  0LL,  0LL,  &_mh_execute_header,  v22,  0LL,  "[Download] Received task did finish with no task state: %lu, error: %@",  &v121,  22);

      if (!v25) {
        goto LABEL_115;
      }
      id v22 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v25,  4LL));
      free(v25);
      SSFileLog(v10, @"%@");
    }

    goto LABEL_115;
  }

  id v6 = [v4 downloadIdentifier];
  __int128 v7 = objc_alloc(&OBJC_CLASS___DownloadAssetEntity);
  id v8 = [v5 mediaAssetIdentifier];
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v3 database]);
  __int128 v10 = -[DownloadAssetEntity initWithPersistentID:inDatabase:](v7, "initWithPersistentID:inDatabase:", v8, v9);

  -[DownloadAssetEntity setValue:forProperty:](v10, "setValue:forProperty:", &off_10036D818, @"download_token");
  -[DownloadAssetEntity setValue:forProperty:]( v10,  "setValue:forProperty:",  &off_10036D818,  @"url_session_task_id");
  uint64_t v11 = objc_alloc(&OBJC_CLASS___DownloadEntity);
  __int128 v12 = (void *)objc_claimAutoreleasedReturnValue([v3 database]);
  uint64_t v13 = -[DownloadEntity initWithPersistentID:inDatabase:](v11, "initWithPersistentID:inDatabase:", v6, v12);

  id v14 = [*(id *)(a1 + 40) ITunesStoreCancelReason];
  id v15 = v14;
  if (v14 == (id)1) {
    goto LABEL_41;
  }
  if (v14 == (id)3)
  {
    CFUUIDBytes v26 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v26) {
      CFUUIDBytes v26 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v27 = [v26 shouldLog];
    else {
      unsigned int v28 = v27;
    }
    CFIndex v29 = (os_log_s *)objc_claimAutoreleasedReturnValue([v26 OSLogObject]);
    if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v30 = v28;
    }
    else {
      uint64_t v30 = v28 & 2;
    }
    if ((_DWORD)v30)
    {
      id v31 = [*(id *)(a1 + 40) taskIdentifier];
      int v121 = 134218240;
      id v122 = v6;
      __int16 v123 = 2048;
      id v124 = v31;
      uint64_t v32 = (void *)_os_log_send_and_compose_impl( v30,  0LL,  0LL,  0LL,  &_mh_execute_header,  v29,  0LL,  "[Download]: Restarting download: %lld after task cancel: %lu",  &v121,  22);

      if (v32)
      {
        uint64_t v33 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v32,  4LL));
        free(v32);
        v111 = v33;
        SSFileLog(v26, @"%@");
      }
    }

    else
    {
    }

    [v3 retryDownloadWithIdentifier:v6];
    goto LABEL_111;
  }

  if (v14 != (id)2)
  {
    if (*(_BYTE *)(a1 + 56))
    {
      unint64_t v34 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
      if (!v34) {
        unint64_t v34 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      unsigned int v35 = [v34 shouldLog];
      else {
        unsigned int v36 = v35;
      }
      __int128 v37 = (os_log_s *)objc_claimAutoreleasedReturnValue([v34 OSLogObject]);
      if (os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT)) {
        uint64_t v38 = v36;
      }
      else {
        uint64_t v38 = v36 & 2;
      }
      if ((_DWORD)v38)
      {
        id v39 = [*(id *)(a1 + 40) taskIdentifier];
        int v121 = 134218240;
        id v122 = v39;
        __int16 v123 = 2048;
        id v124 = v6;
        __int128 v40 = (void *)_os_log_send_and_compose_impl( v38,  0LL,  0LL,  0LL,  &_mh_execute_header,  v37,  0LL,  "[Download]: Download task did finish: %lu for download: %lld",  &v121,  22);

        if (v40)
        {
          __int128 v41 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v40,  4LL));
          free(v40);
          v111 = v41;
          SSFileLog(v34, @"%@");
        }
      }

      else
      {
      }

      -[DownloadAssetEntity setValue:forProperty:]( v10,  "setValue:forProperty:",  &__kCFBooleanTrue,  @"is_downloaded");
      [*(id *)(a1 + 32) _processDownloadWithTaskState:v5 databaseSession:v3 setupBlock:0];
      goto LABEL_111;
    }

uint64_t sub_1000E9E14(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 40);
  double v4 = *(void **)(*(void *)(a1 + 32) + 112LL);
  id v5 = a2;
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 objectForKey:v3]);
  __int128 v7 = (void *)objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 32) _downloadSessionPropertiesWithPhase:0 taskState:v6 databaseSession:v5]);

  [v7 setAuthenticationChallenge:*(void *)(a1 + 48)];
  if (v7)
  {
    id v8 = -[DownloadHandlerAuthenticationOperation initWithSessionProperties:]( objc_alloc(&OBJC_CLASS___DownloadHandlerAuthenticationOperation),  "initWithSessionProperties:",  v7);
    uint64_t v13 = _NSConcreteStackBlock;
    uint64_t v14 = 3221225472LL;
    id v15 = sub_1000E9F64;
    uint64_t v16 = &unk_10034E488;
    id v9 = *(id *)(a1 + 56);
    uint64_t v10 = *(void *)(a1 + 32);
    id v20 = v9;
    uint64_t v17 = v10;
    id v18 = *(id *)(a1 + 48);
    id v19 = v7;
    -[DownloadHandlerAuthenticationOperation setOutputBlock:](v8, "setOutputBlock:", &v13);
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_authenticationChallengeQueue", v13, v14, v15, v16, v17));
    [v11 addOperation:v8];
  }

  else
  {
    [*(id *)(a1 + 32) _performDefaultHandlingForAuthenticationChallenge:*(void *)(a1 + 48) withSessionProperties:0 completionHandler:*(void *)(a1 + 56)];
  }

  return 1LL;
}

void sub_1000E9F64(uint64_t a1, uint64_t a2, void *a3)
{
  id v6 = a3;
  switch(a2)
  {
    case 1LL:
    case 6LL:
    case 8LL:
    case 9LL:
      id v5 = *(void (**)(void))(*(void *)(a1 + 56) + 16LL);
      goto LABEL_7;
    case 2LL:
      id v5 = *(void (**)(void))(*(void *)(a1 + 56) + 16LL);
      goto LABEL_7;
    case 3LL:
      id v5 = *(void (**)(void))(*(void *)(a1 + 56) + 16LL);
      goto LABEL_7;
    case 4LL:
      id v5 = *(void (**)(void))(*(void *)(a1 + 56) + 16LL);
      goto LABEL_7;
    case 5LL:
      id v5 = *(void (**)(void))(*(void *)(a1 + 56) + 16LL);
LABEL_7:
      v5();
      break;
    default:
      [*(id *)(a1 + 32) _performDefaultHandlingForAuthenticationChallenge:*(void *)(a1 + 40) withSessionProperties:*(void *)(a1 + 48) completionHandler:*(void *)(a1 + 56)];
      break;
  }
}

uint64_t sub_1000EA0CC(id *a1, void *a2)
{
  id v3 = a2;
  double v4 = (void *)objc_claimAutoreleasedReturnValue([*((id *)a1[4] + 14) objectForKey:a1[5]]);
  if (v4)
  {
    if (sub_100100EE4(a1[6]))
    {
      id v5 = objc_alloc(&OBJC_CLASS___DownloadAssetEntity);
      id v6 = [v4 mediaAssetIdentifier];
      __int128 v7 = (void *)objc_claimAutoreleasedReturnValue([v3 database]);
      id v8 = -[DownloadAssetEntity initWithPersistentID:inDatabase:](v5, "initWithPersistentID:inDatabase:", v6, v7);

      id v9 = (void *)objc_claimAutoreleasedReturnValue(-[DownloadAssetEntity valueForProperty:](v8, "valueForProperty:", @"is_local_cache_server"));
      LODWORD(v7) = [v9 BOOLValue];

      id v10 = [v4 downloadIdentifier];
      if ((_DWORD)v7)
      {
        uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
        if (!v11) {
          uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
        }
        unsigned int v12 = [v11 shouldLog];
        else {
          unsigned int v13 = v12;
        }
        uint64_t v14 = (os_log_s *)objc_claimAutoreleasedReturnValue([v11 OSLogObject]);
        if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT)) {
          uint64_t v15 = v13;
        }
        else {
          uint64_t v15 = v13 & 2;
        }
        if ((_DWORD)v15)
        {
          id v16 = a1[6];
          int v27 = 134218242;
          id v28 = v10;
          __int16 v29 = 2112;
          id v30 = v16;
          uint64_t v17 = (void *)_os_log_send_and_compose_impl( v15,  0LL,  0LL,  0LL,  &_mh_execute_header,  v14,  0LL,  "[Download]: Cancel local-cache download: %lld, for error: %@",  &v27,  22);

          if (!v17)
          {
LABEL_16:

            [a1[5] cancelWithITunesStoreReason:1 error:a1[6]];
            goto LABEL_31;
          }

          uint64_t v14 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v17,  4LL));
          free(v17);
          SSFileLog(v11, @"%@");
        }

        goto LABEL_16;
      }
    }

    else
    {
      id v10 = [v4 downloadIdentifier];
    }

    id v18 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v18) {
      id v18 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v19 = [v18 shouldLog];
    else {
      LODWORD(v20) = v19;
    }
    uint64_t v21 = (os_log_s *)objc_claimAutoreleasedReturnValue([v18 OSLogObject]);
    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v20 = v20;
    }
    else {
      v20 &= 2u;
    }
    if ((_DWORD)v20)
    {
      id v22 = [a1[5] taskIdentifier];
      id v23 = a1[6];
      int v27 = 134218498;
      id v28 = v22;
      __int16 v29 = 2048;
      id v30 = v10;
      __int16 v31 = 2112;
      id v32 = v23;
      uint64_t v24 = (void *)_os_log_send_and_compose_impl( v20,  0LL,  0LL,  0LL,  &_mh_execute_header,  v21,  0LL,  "[Download]: Retry scheduled for task: %lu, download: %lld, error: %@",  &v27,  32);

      if (!v24)
      {
LABEL_30:

        uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue([v3 policyManager]);
        [v25 setOverrideDownloadSizeLimit:SSDownloadSizeLimitDisabled forDownloadIdentifier:v10];

        [a1[4] _setDownloadPhase:SSDownloadPhaseWaiting forDownloadIdentifier:v10 databaseTransaction:v3];
        [a1[4] _logDownloadEvent:SSEventNameDownloadStop forTaskWithState:v4 session:v3];
        goto LABEL_31;
      }

      uint64_t v21 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v24,  4LL));
      free(v24);
      SSFileLog(v18, @"%@");
    }

    goto LABEL_30;
  }

uint64_t sub_1000EA9C4(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 40);
  double v4 = *(void **)(*(void *)(a1 + 32) + 112LL);
  id v5 = a2;
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 objectForKey:v3]);
  id v7 = [v6 downloadIdentifier];
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v5 policyManager]);
  [v8 removeOverrideDownloadSizeLimitForDownloadIdentifier:v7];

  [*(id *)(a1 + 32) _setDownloadPhase:SSDownloadPhaseDownloading forDownloadIdentifier:v7 databaseTransaction:v5];
  [*(id *)(a1 + 32) _logDownloadEvent:SSEventNameDownloadStart forTaskWithState:v6 session:v5];

  return 1LL;
}

void sub_1000EAB24(uint64_t a1)
{
  __int128 v26 = 0u;
  __int128 v27 = 0u;
  __int128 v28 = 0u;
  __int128 v29 = 0u;
  id v2 = *(id *)(*(void *)(a1 + 32) + 112LL);
  id v3 = [v2 countByEnumeratingWithState:&v26 objects:v36 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v27;
    id v6 = &ACSLocateCachingServer_ptr;
    uint64_t v25 = *(void *)v27;
    do
    {
      for (size_t i = 0LL; i != v4; size_t i = (char *)i + 1)
      {
        if (*(void *)v27 != v5) {
          objc_enumerationMutation(v2);
        }
        id v8 = *(void **)(*((void *)&v26 + 1) + 8LL * (void)i);
        id v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(void *)(a1 + 32) + 112), "objectForKey:", v8, v23));
        id v10 = [v9 downloadIdentifier];
        if (v10 == [*(id *)(a1 + 40) downloadIdentifier])
        {
          uint64_t v11 = objc_opt_class(v6[414]);
          if ((objc_opt_isKindOfClass(v8, v11) & 1) != 0)
          {
            id v12 = v2;
            id v13 = v8;
            uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
            if (!v14) {
              uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
            }
            unsigned int v15 = [v14 shouldLog];
            else {
              unsigned int v16 = v15;
            }
            uint64_t v17 = (os_log_s *)objc_claimAutoreleasedReturnValue([v14 OSLogObject]);
            if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
              uint64_t v18 = v16;
            }
            else {
              uint64_t v18 = v16 & 2;
            }
            if ((_DWORD)v18)
            {
              id v19 = [v13 taskIdentifier];
              id v20 = [v9 downloadIdentifier];
              uint64_t v21 = *(void *)(a1 + 48);
              int v30 = 134218498;
              id v31 = v19;
              __int16 v32 = 2048;
              id v33 = v20;
              __int16 v34 = 2112;
              uint64_t v35 = v21;
              LODWORD(v24) = 32;
              id v22 = (void *)_os_log_send_and_compose_impl( v18,  0LL,  0LL,  0LL,  &_mh_execute_header,  v17,  16LL,  "[Download] Cancelling task: %lu for download: %lld due to error: %@",  &v30,  v24);

              id v2 = v12;
              uint64_t v5 = v25;
              if (v22)
              {
                uint64_t v17 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v22,  4LL));
                free(v22);
                id v23 = v17;
                SSFileLog(v14, @"%@");
                goto LABEL_20;
              }
            }

            else
            {
              id v2 = v12;
              uint64_t v5 = v25;
LABEL_20:
            }

            [v13 cancelWithITunesStoreReason:1 error:*(void *)(a1 + 48)];
            id v6 = &ACSLocateCachingServer_ptr;
          }
        }
      }

      id v4 = [v2 countByEnumeratingWithState:&v26 objects:v36 count:16];
    }

    while (v4);
  }
}

void sub_1000EB1A0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1000EB1C0(uint64_t a1, void *a2, void *a3)
{
  id v4 = (id *)(a1 + 32);
  id v5 = a3;
  id v6 = a2;
  id WeakRetained = objc_loadWeakRetained(v4);
  [WeakRetained _finishRecoveryWithOperation:v6 response:v5];
}

uint64_t sub_1000EB314(uint64_t a1, void *a2)
{
  id v54 = a2;
  id v52 = (id)objc_claimAutoreleasedReturnValue([v54 database]);
  __int128 v59 = 0u;
  __int128 v60 = 0u;
  __int128 v57 = 0u;
  __int128 v58 = 0u;
  uint64_t v42 = a1;
  id v39 = *(id *)(*(void *)(a1 + 32) + 40LL);
  id v53 = [v39 countByEnumeratingWithState:&v57 objects:v65 count:16];
  if (v53)
  {
    uint64_t v51 = *(void *)v58;
    uint64_t v50 = SSDownloadExternalPropertyBytesDownloaded;
    uint64_t v49 = SSDownloadExternalPropertyBytesTotal;
    uint64_t v48 = SSDownloadExternalPropertyEstimatedTimeRemaining;
    uint64_t v47 = SSDownloadExternalPropertyPercentComplete;
    id v46 = @"bundle_id";
    uint64_t v45 = @"kind";
    id v44 = @"transaction_id";
    uint64_t v41 = SSDownloadKindInAppContent;
    *(void *)&__int128 v3 = 138413058LL;
    __int128 v40 = v3;
    do
    {
      for (size_t i = 0LL; i != v53; size_t i = (char *)i + 1)
      {
        if (*(void *)v58 != v51) {
          objc_enumerationMutation(v39);
        }
        id v5 = *(void **)(*((void *)&v57 + 1) + 8LL * (void)i);
        __int16 v55 = objc_autoreleasePoolPush();
        id v6 = [v5 downloadIdentifier];
        id v7 = (void *)objc_claimAutoreleasedReturnValue([v5 overallProgress]);
        [v7 snapshot];
        id v8 = [v7 currentValue];
        id v56 = v7;
        id v9 = [v7 maxValue];
        id v10 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
        if (!v10) {
          id v10 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
        }
        double v11 = (double)(uint64_t)v8 / (double)(uint64_t)v9;
        unsigned int v12 = [v10 shouldLog];
        else {
          unsigned int v13 = v12;
        }
        uint64_t v14 = (os_log_s *)objc_claimAutoreleasedReturnValue([v10 OSLogObject]);
        if (os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG)) {
          uint64_t v15 = v13;
        }
        else {
          uint64_t v15 = v13 & 2;
        }
        if ((_DWORD)v15)
        {
          unsigned int v16 = (void *)objc_opt_class(*(void *)(v42 + 32));
          id v17 = v16;
          [v56 estimatedTimeRemaining];
          *(_DWORD *)uint64_t v61 = v40;
          *(void *)&v61[4] = v16;
          *(_WORD *)&v61[12] = 2048;
          *(void *)&v61[14] = v6;
          *(_WORD *)&v61[22] = 2048;
          double v62 = v11;
          __int16 v63 = 2048;
          uint64_t v64 = v18;
          LODWORD(v37) = 42;
          id v19 = (void *)_os_log_send_and_compose_impl( v15,  0LL,  0LL,  0LL,  &_mh_execute_header,  v14,  2LL,  "%@: Set download progress: %lld [%.2f, %.2f sec]",  v61,  v37);

          if (!v19) {
            goto LABEL_18;
          }
          uint64_t v14 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v19,  4LL));
          free(v19);
          unsigned int v36 = v14;
          SSFileLog(v10, @"%@");
        }

LABEL_18:
        id v20 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
        uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithLongLong:]( NSNumber,  "numberWithLongLong:",  [v5 transferBytesWritten]));
        -[NSMutableDictionary setObject:forKey:](v20, "setObject:forKey:", v21, v50);

        id v22 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithLongLong:]( NSNumber,  "numberWithLongLong:",  [v5 transferBytesExpected]));
        -[NSMutableDictionary setObject:forKey:](v20, "setObject:forKey:", v22, v49);

        [v56 estimatedTimeRemaining];
        id v23 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:"));
        -[NSMutableDictionary setObject:forKey:](v20, "setObject:forKey:", v23, v48);

        uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v11));
        -[NSMutableDictionary setObject:forKey:](v20, "setObject:forKey:", v24, v47);

        [v54 setExternalPropertyValues:v20 forDownloadWithID:v6];
        uint64_t v25 = objc_alloc(&OBJC_CLASS___DownloadEntity);
        __int128 v26 = -[DownloadEntity initWithPersistentID:inDatabase:](v25, "initWithPersistentID:inDatabase:", v6, v52);
        *(void *)uint64_t v61 = v46;
        *(void *)&v61[8] = v45;
        *(void *)&v61[16] = v44;
        *(&v38 - 4) = 0LL;
        *(&v38 - 3) = 0LL;
        unsigned int v36 = 0LL;
        -[DownloadEntity getValues:forProperties:count:](v26, "getValues:forProperties:count:", &v38 - 4, v61, 3LL);
        if (*(&v38 - 3))
        {
          __int128 v27 = (void *)objc_claimAutoreleasedReturnValue([v54 externalValuesForDownloadID:v6]);
          if ([*(&v38 - 3) isEqualToString:v41])
          {
            id v43 = &v38;
            __int128 v28 = (ApplicationHandle *)objc_claimAutoreleasedReturnValue( +[MicroPaymentQueue paymentQueue]( &OBJC_CLASS___MicroPaymentQueue,  "paymentQueue"));
            -[ApplicationHandle notifyClientsOfExternalPropertyChanges:ofDownloadID:]( v28,  "notifyClientsOfExternalPropertyChanges:ofDownloadID:",  v27,  v6);
            goto LABEL_23;
          }

          if (SSDownloadKindIsSoftwareKind(*(&v38 - 3)))
          {
            id v43 = &v38;
            __int128 v29 = objc_alloc(&OBJC_CLASS___ApplicationHandle);
            __int128 v28 = -[ApplicationHandle initWithTransactionIdentifier:downloadIdentifier:bundleIdentifier:]( v29,  "initWithTransactionIdentifier:downloadIdentifier:bundleIdentifier:",  -[os_log_s longLongValue](v36, "longLongValue"),  v6,  *(&v38 - 4));
            int v30 = objc_alloc_init(&OBJC_CLASS___ApplicationDownloadProgress);
            -[ApplicationDownloadProgress setApplicationHandle:](v30, "setApplicationHandle:", v28);
            id v38 = v6;
            id v31 = v56;
            -[ApplicationDownloadProgress setCompletedUnitCount:]( v30,  "setCompletedUnitCount:",  [v56 currentValue]);
            -[ApplicationDownloadProgress setTotalUnitCount:](v30, "setTotalUnitCount:", [v31 maxValue]);
            __int16 v32 = (void *)objc_claimAutoreleasedReturnValue( +[ApplicationWorkspace defaultWorkspace]( &OBJC_CLASS___ApplicationWorkspace,  "defaultWorkspace"));
            [v32 updatePlaceholderWithApplicationProgress:v30];

            id v6 = v38;
LABEL_23:
          }

          id v33 = (void *)objc_claimAutoreleasedReturnValue(+[DownloadController controller](&OBJC_CLASS___DownloadController, "controller"));
          [v33 notifyClientsOfExternalPropertyChanges:v27 forDownloadID:v6 downloadKind:*(&v38 - 3)];
        }

        for (uint64_t j = 16LL; j != -8; j -= 8LL)

        objc_autoreleasePoolPop(v55);
      }

      id v53 = [v39 countByEnumeratingWithState:&v57 objects:v65 count:16];
    }

    while (v53);
  }

  return 1LL;
}

uint64_t sub_1000EBA0C(uint64_t a1, void *a2)
{
  id v3 = a2;
  v23[0] = @"is_restore";
  v23[1] = @"download_state.restore_state";
  id v4 = [*(id *)(a1 + 32) downloadIdentifier];
  id v5 = objc_alloc(&OBJC_CLASS___DownloadEntity);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v3 database]);
  id v7 = -[DownloadEntity initWithPersistentID:inDatabase:](v5, "initWithPersistentID:inDatabase:", v4, v6);

  id v19 = 0LL;
  id v20 = 0LL;
  -[DownloadEntity getValues:forProperties:count:](v7, "getValues:forProperties:count:", &v19, v23, 2LL);
  if (![v19 BOOLValue] || objc_msgSend(v20, "integerValue") == (id)1)
  {
    id v8 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v8) {
      id v8 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v9 = [v8 shouldLog];
    else {
      unsigned int v10 = v9;
    }
    double v11 = (os_log_s *)objc_claimAutoreleasedReturnValue([v8 OSLogObject]);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v12 = v10;
    }
    else {
      uint64_t v12 = v10 & 2;
    }
    if ((_DWORD)v12)
    {
      int v21 = 134217984;
      id v22 = v4;
      unsigned int v13 = (void *)_os_log_send_and_compose_impl( v12,  0LL,  0LL,  0LL,  &_mh_execute_header,  v11,  0LL,  "[Download] Fail download: %lld after disavow from required handler",  &v21);

      if (!v13)
      {
LABEL_15:

        uint64_t v14 = *(void **)(a1 + 40);
        uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", v4));
        unsigned int v16 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) error]);
        [v14 _failDownloadWithIdentifier:v15 error:v16 transaction:v3];

        goto LABEL_16;
      }

      double v11 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v13,  4LL));
      free(v13);
      SSFileLog(v8, @"%@");
    }

    goto LABEL_15;
  }

uint64_t sub_1000EC194(id *a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue([*((id *)a1[4] + 14) objectForKey:a1[5]]);
  id v5 = [a1[6] downloadIdentifier];
  switch((unint64_t)[a1[6] result])
  {
    case 0uLL:
      id v6 = (void *)objc_claimAutoreleasedReturnValue([a1[6] error]);
      id v7 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
      if (!v7) {
        id v7 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      unsigned int v8 = [v7 shouldLog];
      else {
        unsigned int v9 = v8;
      }
      unsigned int v10 = (os_log_s *)objc_claimAutoreleasedReturnValue([v7 OSLogObject]);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        uint64_t v11 = v9;
      }
      else {
        uint64_t v11 = v9 & 2;
      }
      if (!(_DWORD)v11) {
        goto LABEL_13;
      }
      int v86 = 134218242;
      id v87 = v5;
      __int16 v88 = 2114;
      id v89 = v6;
      uint64_t v12 = (void *)_os_log_send_and_compose_impl( v11,  0LL,  0LL,  0LL,  &_mh_execute_header,  v10,  16LL,  "[Download]: Fail download: %lld after error: %{public}@",  &v86,  22);

      if (v12)
      {
        unsigned int v10 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v12,  4LL));
        free(v12);
        SSFileLog(v7, @"%@");
LABEL_13:
      }

      uint64_t v83 = objc_opt_class(a1[4]);
      SSDebugLog(1LL, @"[%@]: Fail download: %lld after error: %@");
      if (sub_1001011A4((uint64_t)v6))
      {
        unsigned int v13 = objc_alloc(&OBJC_CLASS___DownloadAssetEntity);
        id v14 = objc_msgSend(a1[6], "mediaAssetIdentifier", v83, v5, v6);
        uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v3 database]);
        unsigned int v16 = -[DownloadAssetEntity initWithPersistentID:inDatabase:](v13, "initWithPersistentID:inDatabase:", v14, v15);

        -[DownloadAssetEntity setValue:forProperty:]( v16,  "setValue:forProperty:",  &__kCFBooleanFalse,  @"is_downloaded");
      }

      id v17 = a1[4];
      uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", v5, v83));
      id v19 = (void *)objc_claimAutoreleasedReturnValue([a1[6] error]);
      [v17 _failDownloadWithIdentifier:v18 error:v19 transaction:v3];

      id v20 = a1[4];
      int v21 = (os_log_s *)objc_claimAutoreleasedReturnValue([v4 kind]);
      id v22 = (void *)objc_claimAutoreleasedReturnValue([a1[5] storeItemIdentifier]);
      id v23 = (void *)objc_claimAutoreleasedReturnValue([a1[5] rentalIdentifier]);
      uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue([a1[6] error]);
      [v20 _reportTVAppDownloadQOSMetricsIfAppropriateForKind:v21 adamID:v22 rentalID:v23 error:v24 cancelReason:1];

      goto LABEL_59;
    case 1uLL:
      uint64_t v25 = objc_alloc(&OBJC_CLASS___DownloadAssetEntity);
      id v26 = [a1[6] mediaAssetIdentifier];
      __int128 v27 = (void *)objc_claimAutoreleasedReturnValue([v3 database]);
      __int128 v28 = -[DownloadAssetEntity initWithPersistentID:inDatabase:](v25, "initWithPersistentID:inDatabase:", v26, v27);

      __int128 v29 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInteger:]( NSNumber,  "numberWithInteger:",  [a1[6] assetBlockedReason]));
      -[DownloadAssetEntity setValue:forProperty:](v28, "setValue:forProperty:", v29, @"blocked_reason");

      -[DownloadAssetEntity setValue:forProperty:]( v28,  "setValue:forProperty:",  &__kCFBooleanFalse,  @"is_downloaded");
      objc_msgSend(v3, "retryDownloadWithIdentifier:", objc_msgSend(a1[6], "downloadIdentifier"));
      goto LABEL_104;
    case 2uLL:
      id v6 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
      if (!v6) {
        id v6 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      unsigned int v30 = [v6 shouldLog];
      else {
        unsigned int v31 = v30;
      }
      int v21 = (os_log_s *)objc_claimAutoreleasedReturnValue([v6 OSLogObject]);
      if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT)) {
        uint64_t v32 = v31;
      }
      else {
        uint64_t v32 = v31 & 2;
      }
      if (!(_DWORD)v32) {
        goto LABEL_60;
      }
      int v86 = 134217984;
      id v87 = v5;
      id v33 = (void *)_os_log_send_and_compose_impl( v32,  0LL,  0LL,  0LL,  &_mh_execute_header,  v21,  0LL,  "[Download]: Ignoring finish result after download removed: %lld",  &v86);

      if (!v33) {
        goto LABEL_74;
      }
      int v21 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v33,  4LL));
      free(v33);
      uint64_t v82 = (uint64_t)v21;
      SSFileLog(v6, @"%@");
LABEL_60:

LABEL_74:
      break;
    case 3uLL:
      __int16 v34 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
      if (!v34) {
        __int16 v34 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      unsigned int v35 = [v34 shouldLog];
      else {
        LODWORD(v36) = v35;
      }
      uint64_t v37 = (os_log_s *)objc_claimAutoreleasedReturnValue([v34 OSLogObject]);
      if (os_log_type_enabled(v37, OS_LOG_TYPE_ERROR)) {
        uint64_t v36 = v36;
      }
      else {
        v36 &= 2u;
      }
      if (!(_DWORD)v36) {
        goto LABEL_40;
      }
      id v38 = (void *)objc_claimAutoreleasedReturnValue([a1[6] error]);
      int v86 = 134218242;
      id v87 = v5;
      __int16 v88 = 2114;
      id v89 = v38;
      id v39 = (void *)_os_log_send_and_compose_impl( v36,  0LL,  0LL,  0LL,  &_mh_execute_header,  v37,  16LL,  "[Download]: Cancel failed download: %lld after error: %{public}@",  &v86,  22);

      if (v39)
      {
        uint64_t v37 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v39,  4LL));
        free(v39);
        SSFileLog(v34, @"%@");
LABEL_40:
      }

      uint64_t v40 = objc_opt_class(a1[4]);
      id v84 = v5;
      unsigned int v85 = (void *)objc_claimAutoreleasedReturnValue([a1[6] error]);
      uint64_t v82 = v40;
      SSDebugLog(1LL, @"[%@]: Cancel failed download: %lld after error: %@");

      goto LABEL_88;
    case 4uLL:
      uint64_t v41 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
      if (!v41) {
        uint64_t v41 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      unsigned int v42 = [v41 shouldLog];
      else {
        unsigned int v43 = v42;
      }
      id v44 = (os_log_s *)objc_claimAutoreleasedReturnValue([v41 OSLogObject]);
      if (os_log_type_enabled(v44, OS_LOG_TYPE_DEFAULT)) {
        uint64_t v45 = v43;
      }
      else {
        uint64_t v45 = v43 & 2;
      }
      if (!(_DWORD)v45) {
        goto LABEL_53;
      }
      int v86 = 134217984;
      id v87 = v5;
      id v46 = (void *)_os_log_send_and_compose_impl( v45,  0LL,  0LL,  0LL,  &_mh_execute_header,  v44,  0LL,  "[Download]: Download operation complete for download: %lld",  &v86);

      if (v46)
      {
        id v44 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v46,  4LL));
        free(v46);
        uint64_t v82 = (uint64_t)v44;
        SSFileLog(v41, @"%@");
LABEL_53:
      }

      id v6 = (void *)objc_claimAutoreleasedReturnValue([a1[6] mediaAssetInstallPath]);
      if (v6)
      {
        uint64_t v47 = objc_alloc(&OBJC_CLASS___DownloadAssetEntity);
        id v48 = [a1[6] mediaAssetIdentifier];
        uint64_t v49 = (void *)objc_claimAutoreleasedReturnValue([v3 database]);
        uint64_t v50 = -[DownloadAssetEntity initWithPersistentID:inDatabase:](v47, "initWithPersistentID:inDatabase:", v48, v49);

        uint64_t v51 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL fileURLWithPath:](&OBJC_CLASS___NSURL, "fileURLWithPath:", v6));
        id v52 = (void *)objc_claimAutoreleasedReturnValue([v51 absoluteString]);
        -[DownloadAssetEntity setValue:forProperty:](v50, "setValue:forProperty:", v52, @"destination_url");
      }

      if (v4)
      {
        [v4 setFinishProgress:1.0];
        [*((id *)a1[4] + 5) addObject:v4];
        [a1[4] _startProgressTimer];
      }

      objc_msgSend(v3, "finishDownloadWithID:finalPhase:updatePipeline:", v5, SSDownloadPhaseFinished, 0, v82);
      id v53 = a1[4];
      int v21 = (os_log_s *)objc_claimAutoreleasedReturnValue([v4 kind]);
      id v22 = (void *)objc_claimAutoreleasedReturnValue([a1[5] storeItemIdentifier]);
      id v23 = (void *)objc_claimAutoreleasedReturnValue([a1[5] rentalIdentifier]);
      [v53 _reportTVAppDownloadQOSMetricsIfAppropriateForKind:v21 adamID:v22 rentalID:v23 error:0 cancelReason:0];
LABEL_59:

      goto LABEL_60;
    case 5uLL:
      id v6 = (void *)objc_claimAutoreleasedReturnValue([a1[6] downloadHandlerSession]);
      [*((id *)a1[4] + 6) addObject:v6];
      [*((id *)a1[4] + 14) setObject:v4 forKey:v6];
      id v54 = a1[4];
      __int16 v55 = (void *)objc_claimAutoreleasedReturnValue([v6 sessionProperties]);
      id v56 = (void *)objc_claimAutoreleasedReturnValue([v55 downloadPhase]);
      [v54 _setDownloadPhase:v56 forDownloadIdentifier:v5 databaseTransaction:v3];

      __int128 v57 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
      if (!v57) {
        __int128 v57 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      unsigned int v58 = [v57 shouldLog];
      else {
        LODWORD(v59) = v58;
      }
      __int128 v60 = (os_log_s *)objc_claimAutoreleasedReturnValue([v57 OSLogObject]);
      if (os_log_type_enabled(v60, OS_LOG_TYPE_INFO)) {
        uint64_t v59 = v59;
      }
      else {
        v59 &= 2u;
      }
      if (!(_DWORD)v59) {
        goto LABEL_72;
      }
      uint64_t v61 = (void *)objc_opt_class(a1[4]);
      id v62 = v61;
      int v86 = 138412802;
      id v87 = v61;
      __int16 v88 = 2048;
      id v89 = [v6 sessionID];
      __int16 v90 = 2048;
      id v91 = v5;
      __int16 v63 = (void *)_os_log_send_and_compose_impl( v59,  0LL,  0LL,  0LL,  &_mh_execute_header,  v60,  1LL,  "%@: Starting handler: %lld for download: %lld",  &v86,  32);

      if (v63)
      {
        __int128 v60 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v63,  4LL));
        free(v63);
        uint64_t v82 = (uint64_t)v60;
        SSFileLog(v57, @"%@");
LABEL_72:
      }

      uint64_t v64 = (void *)objc_claimAutoreleasedReturnValue(+[DownloadHandlerManager handlerManager](&OBJC_CLASS___DownloadHandlerManager, "handlerManager"));
      objc_msgSend(v64, "beginSessionWithID:", objc_msgSend(v6, "sessionID"));

      goto LABEL_74;
    case 6uLL:
      unsigned int v65 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
      if (!v65) {
        unsigned int v65 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      unsigned int v66 = [v65 shouldLog];
      else {
        LODWORD(v67) = v66;
      }
      uint64_t v68 = (os_log_s *)objc_claimAutoreleasedReturnValue([v65 OSLogObject]);
      if (os_log_type_enabled(v68, OS_LOG_TYPE_DEFAULT)) {
        uint64_t v67 = v67;
      }
      else {
        v67 &= 2u;
      }
      if (!(_DWORD)v67) {
        goto LABEL_86;
      }
      id v69 = (void *)objc_claimAutoreleasedReturnValue([a1[6] error]);
      int v86 = 134218242;
      id v87 = v5;
      __int16 v88 = 2112;
      id v89 = v69;
      __int128 v70 = (void *)_os_log_send_and_compose_impl( v67,  0LL,  0LL,  0LL,  &_mh_execute_header,  v68,  0LL,  "[Download]: Cancel failed download due to verfication error: %lld after error: %@",  &v86,  22);

      if (v70)
      {
        uint64_t v68 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v70,  4LL));
        free(v70);
        uint64_t v82 = (uint64_t)v68;
        SSFileLog(v65, @"%@");
LABEL_86:
      }

LABEL_88:
      objc_msgSend( v3,  "finishDownloadWithID:finalPhase:updatePipeline:",  v5,  SSDownloadPhaseCanceled,  0,  v82,  v84,  v85);
      break;
    case 7uLL:
      uint64_t v71 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
      if (!v71) {
        uint64_t v71 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      unsigned int v72 = [v71 shouldLog];
      else {
        LODWORD(v73) = v72;
      }
      uint64_t v74 = (os_log_s *)objc_claimAutoreleasedReturnValue([v71 OSLogObject]);
      if (os_log_type_enabled(v74, OS_LOG_TYPE_DEFAULT)) {
        uint64_t v73 = v73;
      }
      else {
        v73 &= 2u;
      }
      if (!(_DWORD)v73) {
        goto LABEL_100;
      }
      unsigned int v75 = (void *)objc_claimAutoreleasedReturnValue([v4 bundleIdentifier]);
      int v86 = 134218242;
      id v87 = v5;
      __int16 v88 = 2112;
      id v89 = v75;
      int v76 = (void *)_os_log_send_and_compose_impl( v73,  0LL,  0LL,  0LL,  &_mh_execute_header,  v74,  0LL,  "[Download]: Saved safe harbor data for download: %lld with bundleIdentifier: %@",  &v86,  22);

      if (v76)
      {
        uint64_t v74 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v76,  4LL));
        free(v76);
        uint64_t v82 = (uint64_t)v74;
        SSFileLog(v71, @"%@");
LABEL_100:
      }

      if (v4)
      {
        [v4 setFinishProgress:1.0];
        [*((id *)a1[4] + 5) addObject:v4];
        [a1[4] _startProgressTimer];
      }

      objc_msgSend(v3, "finishDownloadWithID:finalPhase:updatePipeline:", v5, SSDownloadPhaseCanceled, 0, v82);
      uint64_t v77 = objc_alloc(&OBJC_CLASS___ApplicationHandle);
      __int16 v78 = (void *)objc_claimAutoreleasedReturnValue([v4 downloadHandle]);
      id v79 = (void *)objc_claimAutoreleasedReturnValue([v4 bundleIdentifier]);
      __int128 v28 = -[ApplicationHandle initWithDownloadHandle:bundleIdentifier:]( v77,  "initWithDownloadHandle:bundleIdentifier:",  v78,  v79);

      uint64_t v80 = (void *)objc_claimAutoreleasedReturnValue(+[ApplicationWorkspace defaultWorkspace](&OBJC_CLASS___ApplicationWorkspace, "defaultWorkspace"));
      [v80 resetProgressForApplicationHandle:v28];

LABEL_104:
      break;
    default:
      break;
  }

  objc_msgSend(*((id *)a1[4] + 14), "removeObjectForKey:", a1[5], v82);
  [a1[4] _reloadKeepAliveAssertion];

  return 1LL;
}

uint64_t sub_1000ECFC8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 112) objectForKey:*(void *)(a1 + 40)]);
  id v5 = v4;
  if (v4)
  {
    id v6 = [v4 mediaAssetIdentifier];
    id v7 = [v5 downloadIdentifier];
    unsigned int v8 = objc_alloc(&OBJC_CLASS___DownloadAssetEntity);
    unsigned int v9 = (void *)objc_claimAutoreleasedReturnValue([v3 database]);
    unsigned int v10 = -[DownloadAssetEntity initWithPersistentID:inDatabase:](v8, "initWithPersistentID:inDatabase:", v6, v9);

    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedLongLong:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedLongLong:",  *(void *)(a1 + 48)));
    uint64_t v36 = v10;
    -[DownloadAssetEntity setValue:forProperty:](v10, "setValue:forProperty:", v11, @"download_token");

    uint64_t v12 = objc_alloc(&OBJC_CLASS___DownloadEntity);
    unsigned int v13 = (void *)objc_claimAutoreleasedReturnValue([v3 database]);
    id v14 = -[DownloadEntity initWithPersistentID:inDatabase:](v12, "initWithPersistentID:inDatabase:", v7, v13);

    uint64_t v15 = @"download_state.phase";
    id v45 = 0LL;
    id v46 = v15;
    -[DownloadEntity getValues:forProperties:count:](v14, "getValues:forProperties:count:", &v45, &v46, 1LL);
    id v35 = v45;
    LOBYTE(v12) = [v35 isEqualToString:SSDownloadPhaseCanceled];
    uint64_t v16 = objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    id v17 = (NSDictionary *)v16;
    if ((v12 & 1) != 0)
    {
      if (!v16) {
        id v17 = (NSDictionary *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      LODWORD(v1_Block_object_dispose(va, 8) = -[NSDictionary shouldLog](v17, "shouldLog");
      id v19 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[NSDictionary OSLogObject](v17, "OSLogObject"));
      if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO)) {
        uint64_t v18 = v18;
      }
      else {
        v18 &= 2u;
      }
      if ((_DWORD)v18)
      {
        id v20 = (void *)objc_opt_class(*(void *)(a1 + 32));
        int v37 = 138412802;
        id v38 = v20;
        __int16 v39 = 2048;
        id v40 = v6;
        __int16 v41 = 2048;
        id v42 = v7;
        id v21 = v20;
        id v22 = (void *)_os_log_send_and_compose_impl( v18,  0LL,  0LL,  0LL,  &_mh_execute_header,  v19,  1LL,  "%@: Skipping changing asset: %lld to downloading phase because download: %lld was cancelled",  &v37,  32);

        if (!v22)
        {
LABEL_27:

          goto LABEL_28;
        }

        id v19 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v22,  4LL));
        free(v22);
        SSFileLog(v17, @"%@");
      }

LABEL_78:
        [v82 setWaitForDownload:1];
        -[NSMutableDictionary setObject:forKey:](self->_downloadOperationsByTask, "setObject:forKey:", v82, v41);
        goto LABEL_79;
      }
    }

    goto LABEL_78;
  }

  id v44 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v44) {
    id v44 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  id v45 = [v44 shouldLog];
  id v46 = [v44 shouldLogToDisk];
  uint64_t v47 = (os_log_s *)objc_claimAutoreleasedReturnValue([v44 OSLogObject]);
  id v48 = v47;
  if (v46) {
    uint64_t v49 = v45 | 2;
  }
  else {
    uint64_t v49 = v45;
  }
  if (os_log_type_enabled(v47, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v50 = v49;
  }
  else {
    uint64_t v50 = v49 & 2;
  }
  if (!(_DWORD)v50) {
    goto LABEL_59;
  }
  uint64_t v51 = [(id)v95[5] sessionID];
  v104 = 134218240;
  v105 = v51;
  v106 = 2048;
  v107 = v5;
  LODWORD(v79) = 22;
  id v52 = (void *)_os_log_send_and_compose_impl( v50,  0LL,  0LL,  0LL,  &_mh_execute_header,  v48,  0LL,  "[Download]: Starting handler: %lld for download: %lld",  &v104,  v79);

  if (v52)
  {
    id v48 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v52,  4LL));
    free(v52);
    SSFileLog(v44, @"%@");
LABEL_59:
  }

  id v53 = (void *)objc_claimAutoreleasedReturnValue(+[DownloadHandlerManager handlerManager](&OBJC_CLASS___DownloadHandlerManager, "handlerManager"));
  objc_msgSend(v53, "beginSessionWithID:", objc_msgSend((id)v95[5], "sessionID"));

  [v41 cancel];
LABEL_92:

  _Block_object_dispose(&v94, 8);
  _Block_object_dispose(v112, 8);
}

void sub_1000EE000( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, char a30)
{
}

uint64_t sub_1000EE078(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1000EE088(uint64_t a1)
{
}

void sub_1000EE090(uint64_t a1)
{
  id v5 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) URLSessionIdentifier]);
  uint64_t v2 = objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 40) + 120) objectForKey:v5]);
  uint64_t v3 = *(void *)(*(void *)(a1 + 48) + 8LL);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

uint64_t sub_1000EE0F0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = -[PipelineDownloadTaskState initWithPrepareDownloadResponse:]( objc_alloc(&OBJC_CLASS___PipelineDownloadTaskState),  "initWithPrepareDownloadResponse:",  *(void *)(a1 + 32));
  [*(id *)(*(void *)(a1 + 40) + 120) setObject:*(void *)(*(void *)(*(void *)(a1 + 72) + 8) + 40) forKey:*(void *)(a1 + 48)];
  if (([*(id *)(a1 + 32) ignoresDownloadHandler] & 1) == 0
    && sub_10012E820(*(void *)(a1 + 88)))
  {
    id v5 = (void *)objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 40) _downloadSessionPropertiesWithPhase:SSDownloadPhaseDownloading taskState:v4 databaseSession:v3]);
    if (v5)
    {
      id v6 = (void *)objc_claimAutoreleasedReturnValue(+[DownloadHandlerManager handlerManager](&OBJC_CLASS___DownloadHandlerManager, "handlerManager"));
      uint64_t v7 = objc_claimAutoreleasedReturnValue([v6 openSessionWithProperties:v5]);
      uint64_t v8 = *(void *)(*(void *)(a1 + 80) + 8LL);
      unsigned int v9 = *(void **)(v8 + 40);
      *(void *)(v8 + 40) = v7;
    }
  }

  v108 = v4;
  if (*(void *)(*(void *)(*(void *)(a1 + 80) + 8LL) + 40LL))
  {
    objc_msgSend(*(id *)(*(void *)(a1 + 40) + 48), "addObject:");
    [*(id *)(*(void *)(a1 + 40) + 112) setObject:v4 forKey:*(void *)(*(void *)(*(void *)(a1 + 80) + 8) + 40)];
    [*(id *)(a1 + 40) _setDownloadPhase:SSDownloadPhaseDownloading forDownloadIdentifier:*(void *)(a1 + 96) databaseTransaction:v3];
LABEL_57:
    __int128 v57 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "backgroundOperations", v104));
    __int128 v109 = 0u;
    __int128 v110 = 0u;
    __int128 v111 = 0u;
    __int128 v112 = 0u;
    id v58 = [v57 countByEnumeratingWithState:&v109 objects:v113 count:16];
    if (v58)
    {
      id v59 = v58;
      uint64_t v60 = *(void *)v110;
      do
      {
        for (uint64_t i = 0LL; i != v59; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v110 != v60) {
            objc_enumerationMutation(v57);
          }
          id v62 = *(void **)(*((void *)&v109 + 1) + 8LL * (void)i);
          [v62 setShouldRunWithBackgroundPriority:1];
          uint64_t v63 = objc_opt_class(&OBJC_CLASS___LoadSoftwareThumbnailOperation);
          if ((objc_opt_isKindOfClass(v62, v63) & 1) != 0)
          {
            uint64_t v64 = (void *)objc_claimAutoreleasedReturnValue( +[ApplicationWorkspace defaultWorkspace]( &OBJC_CLASS___ApplicationWorkspace,  "defaultWorkspace"));
            [v64 addPlaceholderThumbnailOperation:v62];
          }

          else
          {
            [*(id *)(*(void *)(a1 + 40) + 24) addOperation:v62];
          }
        }

        id v59 = [v57 countByEnumeratingWithState:&v109 objects:v113 count:16];
      }

      while (v59);
    }

    id v4 = v108;
    goto LABEL_68;
  }

  if (*(void *)(a1 + 56))
  {
    unsigned int v10 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v10) {
      unsigned int v10 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    LODWORD(v11) = [v10 shouldLog];
    uint64_t v12 = (os_log_s *)objc_claimAutoreleasedReturnValue([v10 OSLogObject]);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG)) {
      uint64_t v11 = v11;
    }
    else {
      v11 &= 2u;
    }
    if ((_DWORD)v11)
    {
      unsigned int v13 = [*(id *)(a1 + 32) isHLS];
      int v114 = 67109120;
      LODWORD(v115) = v13;
      id v14 = (void *)_os_log_send_and_compose_impl( v11,  0LL,  0LL,  0LL,  &_mh_execute_header,  v12,  2LL,  "[Download]: About to set download phase and apply resource loader if is HLS: %d",  &v114);

      if (!v14) {
        goto LABEL_20;
      }
      uint64_t v12 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v14,  4LL));
      free(v14);
      v104 = v12;
      SSFileLog(v10, @"%@");
    }

LABEL_20:
    if ([*(id *)(a1 + 32) isHLS])
    {
      [*(id *)(a1 + 40) _setDownloadPhase:SSDownloadPhaseDownloading forDownloadIdentifier:*(void *)(a1 + 96) databaseTransaction:v3];
      id v15 = *(id *)(a1 + 56);
      uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v15 URLAsset]);
      id v17 = (void *)objc_claimAutoreleasedReturnValue([v16 resourceLoader]);
      uint64_t v18 = objc_alloc(&OBJC_CLASS___DownloadEntity);
      uint64_t v19 = *(void *)(a1 + 96);
      id v20 = (void *)objc_claimAutoreleasedReturnValue([v3 database]);
      id v21 = -[DownloadEntity initWithPersistentID:inDatabase:](v18, "initWithPersistentID:inDatabase:", v19, v20);

      id v22 = -[DownloadAssetFairPlayStreamingKeyLoader initWithDownloadEntity:]( objc_alloc(&OBJC_CLASS___DownloadAssetFairPlayStreamingKeyLoader),  "initWithDownloadEntity:",  v21);
      -[DownloadAssetFairPlayStreamingKeyLoader setDelegate:](v22, "setDelegate:", *(void *)(a1 + 40));

      -[DownloadAssetFairPlayStreamingKeyLoader applyResourceLoaderDelegate:](v22, "applyResourceLoaderDelegate:", v17);
      id v23 = [v16 downloadToken];
    }

    else
    {
      id v23 = 0LL;
      id v22 = 0LL;
    }

    id v39 = objc_msgSend(*(id *)(a1 + 32), "mediaAssetIdentifier", v104);
    id v40 = objc_alloc(&OBJC_CLASS___DownloadAssetEntity);
    __int16 v41 = (void *)objc_claimAutoreleasedReturnValue([v3 database]);
    id v42 = -[DownloadAssetEntity initWithPersistentID:inDatabase:](v40, "initWithPersistentID:inDatabase:", v39, v41);

    uint64_t v43 = (uint64_t)[*(id *)(a1 + 32) mediaAssetSize];
    id v44 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    if (v43 >= 1)
    {
      id v45 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", v43));
      -[NSMutableDictionary setObject:forKey:](v44, "setObject:forKey:", v45, @"bytes_total");
    }

    id v46 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInteger:]( NSNumber,  "numberWithUnsignedInteger:",  [*(id *)(a1 + 56) taskIdentifier]));
    -[NSMutableDictionary setObject:forKey:](v44, "setObject:forKey:", v46, @"url_session_task_id");

    if (!v23) {
      goto LABEL_54;
    }
    id v107 = v3;
    uint64_t v47 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v47) {
      uint64_t v47 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v48 = [v47 shouldLog];
    else {
      unsigned int v49 = v48;
    }
    uint64_t v50 = (os_log_s *)objc_claimAutoreleasedReturnValue([v47 OSLogObject]);
    if (os_log_type_enabled(v50, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v51 = v49;
    }
    else {
      uint64_t v51 = v49 & 2;
    }
    if ((_DWORD)v51)
    {
      id v52 = (void *)objc_opt_class(*(void *)(a1 + 40));
      v106 = v42;
      id v53 = v52;
      id v54 = -[PipelineDownloadTaskState downloadIdentifier](v108, "downloadIdentifier");
      int v114 = 138413058;
      v115 = v52;
      __int16 v116 = 2048;
      id v117 = v23;
      __int16 v118 = 2048;
      id v119 = v39;
      __int16 v120 = 2048;
      id v121 = v54;
      __int16 v55 = (void *)_os_log_send_and_compose_impl( v51,  0LL,  0LL,  0LL,  &_mh_execute_header,  v50,  0LL,  "%@: Set download token: %llu for asset: %lld of download: %lld",  &v114,  42);

      id v42 = v106;
      if (!v55)
      {
LABEL_53:

        id v56 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedLongLong:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedLongLong:",  v23));
        -[NSMutableDictionary setObject:forKey:](v44, "setObject:forKey:", v56, @"download_token");

        id v3 = v107;
LABEL_54:
        -[DownloadAssetEntity setValuesWithDictionary:](v42, "setValuesWithDictionary:", v44, v105);
        if (v22) {
          [*(id *)(*(void *)(a1 + 40) + 104) setObject:v22 forKey:*(void *)(a1 + 56)];
        }
        [*(id *)(*(void *)(a1 + 40) + 112) setObject:v108 forKey:*(void *)(a1 + 56)];

        goto LABEL_57;
      }

      uint64_t v50 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v55,  4LL));
      free(v55);
      v105 = v50;
      SSFileLog(v47, @"%@");
    }

    goto LABEL_53;
  }

  uint64_t v24 = *(void *)(a1 + 88);
  switch(v24)
  {
    case 1LL:
      uint64_t v68 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
      if (!v68) {
        uint64_t v68 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      unsigned int v69 = [v68 shouldLog];
      __int128 v70 = (os_log_s *)objc_claimAutoreleasedReturnValue([v68 OSLogObject]);
      if (os_log_type_enabled(v70, OS_LOG_TYPE_DEFAULT)) {
        uint64_t v71 = v69;
      }
      else {
        uint64_t v71 = v69 & 2;
      }
      if ((_DWORD)v71)
      {
        unsigned int v72 = *(void **)(a1 + 96);
        int v114 = 134217984;
        v115 = v72;
        uint64_t v73 = (void *)_os_log_send_and_compose_impl( v71,  0LL,  0LL,  0LL,  &_mh_execute_header,  v70,  0LL,  "[Download]: Cancel download after failed prepare: %lld",  &v114);

        if (v73)
        {
          uint64_t v74 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v73,  4LL));
          free(v73);
          v104 = v74;
          SSFileLog(v68, @"%@");
        }
      }

      else
      {
      }

      [v3 finishDownloadWithID:*(void *)(a1 + 96) finalPhase:SSDownloadPhaseCanceled updatePipeline:0];
      break;
    case 4LL:
      unsigned int v75 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
      if (!v75) {
        unsigned int v75 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      unsigned int v76 = [v75 shouldLog];
      uint64_t v77 = (os_log_s *)objc_claimAutoreleasedReturnValue([v75 OSLogObject]);
      if (os_log_type_enabled(v77, OS_LOG_TYPE_DEFAULT)) {
        uint64_t v78 = v76;
      }
      else {
        uint64_t v78 = v76 & 2;
      }
      if ((_DWORD)v78)
      {
        id v79 = *(void **)(a1 + 96);
        int v114 = 134217984;
        v115 = v79;
        uint64_t v80 = (void *)_os_log_send_and_compose_impl( v78,  0LL,  0LL,  0LL,  &_mh_execute_header,  v77,  0LL,  "[Download]: Queue download: %lld to discover assets later.",  &v114);

        if (v80)
        {
          __int16 v81 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v80,  4LL));
          free(v80);
          v104 = v81;
          SSFileLog(v75, @"%@");
        }
      }

      else
      {
      }

      break;
    case 3LL:
      if ([*(id *)(a1 + 32) isPerDeviceVPP])
      {
        uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) downloadRestoreState]);

        if (v25)
        {
          id v26 = objc_alloc(&OBJC_CLASS___DownloadEntity);
          uint64_t v27 = *(void *)(a1 + 96);
          id v28 = (void *)objc_claimAutoreleasedReturnValue([v3 database]);
          __int128 v29 = -[DownloadEntity initWithPersistentID:inDatabase:](v26, "initWithPersistentID:inDatabase:", v27, v28);

          uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) downloadRestoreState]);
          -[DownloadEntity setValue:forProperty:]( v29,  "setValue:forProperty:",  v30,  @"download_state.restore_state");

          unsigned int v31 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
          if (!v31) {
            unsigned int v31 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
          }
          unsigned int v32 = [v31 shouldLog];
          id v33 = (os_log_s *)objc_claimAutoreleasedReturnValue([v31 OSLogObject]);
          if (os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT)) {
            uint64_t v34 = v32;
          }
          else {
            uint64_t v34 = v32 & 2;
          }
          if ((_DWORD)v34)
          {
            id v35 = *(void **)(a1 + 96);
            uint64_t v36 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) downloadRestoreState]);
            int v114 = 134218242;
            v115 = v35;
            __int16 v116 = 2112;
            id v117 = v36;
            int v37 = (void *)_os_log_send_and_compose_impl( v34,  0LL,  0LL,  0LL,  &_mh_execute_header,  v33,  0LL,  "[Download]: Updated per device download: %lld restore state to: %@",  &v114,  22);

            if (v37)
            {
              id v38 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v37,  4LL));
              free(v37);
              v104 = v38;
              SSFileLog(v31, @"%@");
            }
          }

          else
          {
          }
        }
      }

      id v98 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig", v104));
      if (!v98) {
        id v98 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      unsigned int v99 = [v98 shouldLog];
      v100 = (os_log_s *)objc_claimAutoreleasedReturnValue([v98 OSLogObject]);
      if (os_log_type_enabled(v100, OS_LOG_TYPE_DEFAULT)) {
        uint64_t v101 = v99;
      }
      else {
        uint64_t v101 = v99 & 2;
      }
      if ((_DWORD)v101)
      {
        id v102 = *(void **)(a1 + 96);
        int v114 = 134217984;
        v115 = v102;
        id v103 = (void *)_os_log_send_and_compose_impl( v101,  0LL,  0LL,  0LL,  &_mh_execute_header,  v100,  0LL,  "[Download]: Processing download after finish only response: %lld",  &v114);

        if (!v103)
        {
LABEL_120:

          [*(id *)(a1 + 40) _processDownloadWithTaskState:v4 databaseSession:v3 setupBlock:0];
          goto LABEL_57;
        }

        v100 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v103,  4LL));
        free(v103);
        v104 = v100;
        SSFileLog(v98, @"%@");
      }

      goto LABEL_120;
    default:
      uint64_t v82 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
      if (!v82) {
        uint64_t v82 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      unsigned int v83 = [v82 shouldLog];
      id v84 = (os_log_s *)objc_claimAutoreleasedReturnValue([v82 OSLogObject]);
      if (os_log_type_enabled(v84, OS_LOG_TYPE_DEFAULT)) {
        uint64_t v85 = v83;
      }
      else {
        uint64_t v85 = v83 & 2;
      }
      if ((_DWORD)v85)
      {
        int v86 = *(void **)(a1 + 96);
        int v114 = 134217984;
        v115 = v86;
        id v87 = (void *)_os_log_send_and_compose_impl( v85,  0LL,  0LL,  0LL,  &_mh_execute_header,  v84,  0LL,  "[Download]: Fail download after failed prepare: %lld",  &v114);

        if (v87)
        {
          __int16 v88 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v87,  4LL));
          free(v87);
          v104 = v88;
          SSFileLog(v82, @"%@");
        }
      }

      else
      {
      }

      id v89 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) error]);
      __int16 v90 = v89;
      if (!v89) {
        __int16 v90 = *(void **)(a1 + 64);
      }
      id v91 = v90;

      v92 = *(void **)(a1 + 40);
      v93 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithLongLong:]( &OBJC_CLASS___NSNumber,  "numberWithLongLong:",  *(void *)(a1 + 96)));
      [v92 _failDownloadWithIdentifier:v93 error:v91 transaction:v3];

      v94 = *(void **)(a1 + 40);
      int v95 = (void *)objc_claimAutoreleasedReturnValue(-[PipelineDownloadTaskState kind](v4, "kind"));
      v96 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithLongLong:]( NSNumber,  "numberWithLongLong:",  [*(id *)(a1 + 32) storeItemIdentifier]));
      v97 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithLongLong:]( NSNumber,  "numberWithLongLong:",  [*(id *)(a1 + 32) rentalIdentifier]));
      [v94 _reportTVAppDownloadQOSMetricsIfAppropriateForKind:v95 adamID:v96 rentalID:v97 error:v91 cancelReason:1];

      goto LABEL_57;
  }

LABEL_68:
  unsigned int v65 = *(void **)(*(void *)(a1 + 40) + 64LL);
  unsigned int v66 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithLongLong:]( &OBJC_CLASS___NSNumber,  "numberWithLongLong:",  *(void *)(a1 + 96),  v104));
  [v65 removeObject:v66];

  [*(id *)(a1 + 40) _reloadKeepAliveAssertion];
  return 1LL;
}

uint64_t sub_1000EF020(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 112) objectForKey:*(void *)(a1 + 40)]);
  id v5 = [v4 downloadIdentifier];
  [*(id *)(*(void *)(a1 + 32) + 112) removeObjectForKey:*(void *)(a1 + 40)];

  id v6 = [*(id *)(a1 + 48) result];
  if (v6 == (id)2)
  {
    uint64_t v16 = objc_alloc(&OBJC_CLASS___NSOrderedSet);
    id v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", v5));
    uint64_t v18 = -[NSOrderedSet initWithObjects:](v16, "initWithObjects:", v17, 0LL);

    [*(id *)(a1 + 32) addDownloadsWithIdentifiers:v18];
    goto LABEL_31;
  }

  if (v6 == (id)1)
  {
    uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v19) {
      uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v20 = [v19 shouldLog];
    else {
      unsigned int v21 = v20;
    }
    id v22 = (os_log_s *)objc_claimAutoreleasedReturnValue([v19 OSLogObject]);
    if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v23 = v21;
    }
    else {
      uint64_t v23 = v21 & 2;
    }
    if ((_DWORD)v23)
    {
      int v28 = 134217984;
      id v29 = v5;
      uint64_t v24 = (void *)_os_log_send_and_compose_impl( v23,  0LL,  0LL,  0LL,  &_mh_execute_header,  v22,  0LL,  "[Download]: Cancel download %lld after recovery attempt",  &v28);

      if (!v24)
      {
LABEL_30:

        id v25 = [*(id *)(a1 + 48) downloadIdentifier];
        [v3 finishDownloadWithID:v25 finalPhase:SSDownloadPhaseCanceled updatePipeline:0];
        goto LABEL_31;
      }

      id v22 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v24,  4LL));
      free(v24);
      uint64_t v27 = v22;
      SSFileLog(v19, @"%@");
    }

    goto LABEL_30;
  }

  if (!v6)
  {
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v7) {
      uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v8 = [v7 shouldLog];
    else {
      unsigned int v9 = v8;
    }
    unsigned int v10 = (os_log_s *)objc_claimAutoreleasedReturnValue([v7 OSLogObject]);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v11 = v9;
    }
    else {
      uint64_t v11 = v9 & 2;
    }
    if ((_DWORD)v11)
    {
      int v28 = 134217984;
      id v29 = v5;
      uint64_t v12 = (void *)_os_log_send_and_compose_impl( v11,  0LL,  0LL,  0LL,  &_mh_execute_header,  v10,  0LL,  "[Download]: Fail download %lld after recovery attempt",  &v28);

      if (!v12)
      {
LABEL_16:

        unsigned int v13 = *(void **)(a1 + 32);
        id v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", v5));
        id v15 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) error]);
        [v13 _failDownloadWithIdentifier:v14 error:v15 transaction:v3];

        goto LABEL_31;
      }

      unsigned int v10 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v12,  4LL));
      free(v12);
      uint64_t v27 = v10;
      SSFileLog(v7, @"%@");
    }

    goto LABEL_16;
  }

void sub_1000EF960(uint64_t a1, void *a2, void *a3)
{
  id v10 = a2;
  id v5 = a3;
  if (v10 && [v10 selectedButtonIndex])
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v10 textFieldValues]);
    if ([v6 count] == (id)1)
    {
      uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 objectAtIndex:0]);
      unsigned int v8 = 0LL;
    }

    else if ([v6 count] == (id)2)
    {
      uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 objectAtIndex:1]);
      unsigned int v8 = (void *)objc_claimAutoreleasedReturnValue([v6 objectAtIndex:0]);
    }

    else
    {
      unsigned int v8 = 0LL;
      uint64_t v7 = 0LL;
    }

    unsigned int v9 = -[NSURLCredential initWithUser:password:persistence:]( objc_alloc(&OBJC_CLASS___NSURLCredential),  "initWithUser:password:persistence:",  v8,  v7,  1LL);
    (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
  }

  else
  {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
  }
}

void sub_1000EFB34(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (*(_BYTE *)(a1 + 48))
  {
    id v4 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
    __int128 v22 = 0u;
    __int128 v23 = 0u;
    __int128 v24 = 0u;
    __int128 v25 = 0u;
    id v5 = *(id *)(*(void *)(a1 + 32) + 112LL);
    id v6 = [v5 countByEnumeratingWithState:&v22 objects:v27 count:16];
    if (v6)
    {
      id v7 = v6;
      uint64_t v8 = *(void *)v23;
      do
      {
        unsigned int v9 = 0LL;
        do
        {
          if (*(void *)v23 != v8) {
            objc_enumerationMutation(v5);
          }
          id v10 = (void *)objc_claimAutoreleasedReturnValue( [*(id *)(*(void *)(a1 + 32) + 112) objectForKey:*(void *)(*((void *)&v22 + 1) + 8 * (void)v9)]);
          uint64_t v11 = -[NSNumber initWithLongLong:]( [NSNumber alloc],  "initWithLongLong:",  [v10 downloadIdentifier]);
          -[NSMutableSet addObject:](v4, "addObject:", v11);

          unsigned int v9 = (char *)v9 + 1;
        }

        while (v7 != v9);
        id v7 = [v5 countByEnumeratingWithState:&v22 objects:v27 count:16];
      }

      while (v7);
    }
  }

  else
  {
    id v4 = 0LL;
  }

  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v3 database]);
  uint64_t v13 = *(void *)(a1 + 40);
  id v26 = @"order_key";
  id v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v26, 1LL));
  id v15 = (void *)objc_claimAutoreleasedReturnValue( +[DownloadEntity queryWithDatabase:predicate:orderingProperties:]( &OBJC_CLASS___DownloadEntity,  "queryWithDatabase:predicate:orderingProperties:",  v12,  v13,  v14));

  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472LL;
  v18[2] = sub_1000EFD90;
  v18[3] = &unk_10034E5A0;
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v19 = v4;
  uint64_t v20 = v16;
  char v21 = *(_BYTE *)(a1 + 49);
  id v17 = v4;
  +[PrepareDownloadOperation enumerateOperationsWithDownloadQuery:session:usingBlock:]( &OBJC_CLASS___PrepareDownloadOperation,  "enumerateOperationsWithDownloadQuery:session:usingBlock:",  v15,  v3,  v18);
  [*(id *)(a1 + 32) _reloadKeepAliveAssertion];
}

void sub_1000EFD90(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = -[NSNumber initWithLongLong:]( [NSNumber alloc],  "initWithLongLong:",  [v3 downloadIdentifier]);
  if (([*(id *)(a1 + 32) containsObject:v4] & 1) == 0
    && ([*(id *)(*(void *)(a1 + 40) + 64) containsObject:v4] & 1) == 0)
  {
    [v3 setIgnoresDownloadHandler:*(unsigned __int8 *)(a1 + 48)];
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472LL;
    v5[2] = sub_1000EFE84;
    v5[3] = &unk_10034E578;
    void v5[4] = *(void *)(a1 + 40);
    [v3 setOutputBlock:v5];
    [*(id *)(*(void *)(a1 + 40) + 64) addObject:v4];
    [*(id *)(*(void *)(a1 + 40) + 72) addOperation:v3];
  }
}

void sub_1000EFE84(uint64_t a1, void *a2, void *a3)
{
  id v9 = a3;
  if (([a2 isCancelled] & 1) == 0)
  {
    id v5 = -[PerformDownloadOperation initWithDownloadPipeline:response:]( objc_alloc(&OBJC_CLASS___PerformDownloadOperation),  "initWithDownloadPipeline:response:",  *(void *)(a1 + 32),  v9);
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v9 sessionConfiguration]);
    unsigned int v7 = [v6 isDiscretionary];

    uint64_t v8 = 144LL;
    if (v7) {
      uint64_t v8 = 136LL;
    }
    [*(id *)(*(void *)(a1 + 32) + v8) addOperation:v5];
  }
}

void sub_1000F00EC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1000F010C(uint64_t a1, void *a2, void *a3)
{
  id v4 = (id *)(a1 + 32);
  id v5 = a3;
  id v7 = a2;
  id WeakRetained = objc_loadWeakRetained(v4);
  [WeakRetained _finishDownloadWithOperation:v7 response:v5];

  [v7 setDelegate:0];
}

void sub_1000F0530(uint64_t a1, uint64_t a2)
{
  id v3 = *(void **)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  v5[2] = sub_1000F05B4;
  v5[3] = &unk_10034E618;
  id v6 = *(id *)(a1 + 48);
  [v3 _processDownloadWithTaskState:v4 databaseSession:a2 setupBlock:v5];
}

void sub_1000F05B4(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = a2;
  [v4 setHandlerReleasedDownloadPhase:v3];
  [v4 setInitialDownloadPhase:*(void *)(a1 + 32)];
}

void sub_1000F08B4(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v2) {
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v3 = [v2 shouldLog];
  else {
    LODWORD(v4) = v3;
  }
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue([v2 OSLogObject]);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO)) {
    uint64_t v4 = v4;
  }
  else {
    v4 &= 2u;
  }
  if (!(_DWORD)v4) {
    goto LABEL_12;
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  int v10 = 138412290;
  id v11 = (id)objc_opt_class(WeakRetained);
  id v7 = v11;
  uint64_t v8 = (void *)_os_log_send_and_compose_impl( v4,  0LL,  0LL,  0LL,  &_mh_execute_header,  v5,  1LL,  "%@: Reconnect with nsurlsessiond",  &v10,  12);

  if (v8)
  {
    id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v8,  4LL));
    free(v8);
    SSFileLog(v2, @"%@");
LABEL_12:
  }

  id v9 = objc_loadWeakRetained((id *)(a1 + 32));
  [v9 reconnectWithURLSessionTasks];
}

void sub_1000F0D5C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1000F0D70(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _commitProgressTimer];
}

void sub_1000F19BC(id a1, NSString *a2)
{
  uint64_t v2 = a2;
  unsigned int v3 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v3) {
    unsigned int v3 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v4 = [v3 shouldLog];
  else {
    unsigned int v5 = v4;
  }
  id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue([v3 OSLogObject]);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO)) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = v5 & 2;
  }
  if (!(_DWORD)v7) {
    goto LABEL_12;
  }
  int v9 = 138412290;
  int v10 = v2;
  uint64_t v8 = (void *)_os_log_send_and_compose_impl( v7,  0LL,  0LL,  0LL,  &_mh_execute_header,  v6,  1LL,  "[Download]: RTCReporting sent: %@",  &v9,  12);

  if (v8)
  {
    id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v8,  4LL));
    free(v8);
    SSFileLog(v3, @"%@");
LABEL_12:
  }
}

void sub_1000F1B20(id a1, NSArray *a2)
{
  uint64_t v2 = a2;
  unsigned int v3 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v3) {
    unsigned int v3 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v4 = [v3 shouldLog];
  else {
    unsigned int v5 = v4;
  }
  id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue([v3 OSLogObject]);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO)) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = v5 & 2;
  }
  if (!(_DWORD)v7) {
    goto LABEL_12;
  }
  int v9 = 138412290;
  int v10 = v2;
  uint64_t v8 = (void *)_os_log_send_and_compose_impl( v7,  0LL,  0LL,  0LL,  &_mh_execute_header,  v6,  1LL,  "[Download]: RTCReporting backends: %@",  &v9,  12);

  if (v8)
  {
    id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v8,  4LL));
    free(v8);
    SSFileLog(v3, @"%@");
LABEL_12:
  }
}

id sub_1000F2420(uint64_t a1)
{
  id result = objc_alloc_init((Class)objc_opt_class(*(void *)(a1 + 32)));
  qword_1003A33F8 = (uint64_t)result;
  return result;
}

void sub_1000F24BC(uint64_t a1)
{
  if ([*(id *)(*(void *)(a1 + 32) + 16) count])
  {
    xpc_object_t v2 = xpc_dictionary_create(0LL, 0LL, 0LL);
    xpc_dictionary_set_int64(v2, "0", 1009LL);
    SSXPCDictionarySetCFObject(v2, "1", *(void *)(a1 + 40));
    __int128 v10 = 0u;
    __int128 v11 = 0u;
    __int128 v8 = 0u;
    __int128 v9 = 0u;
    unsigned int v3 = *(void **)(*(void *)(a1 + 32) + 16LL);
    id v4 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
    if (v4)
    {
      id v5 = v4;
      uint64_t v6 = *(void *)v9;
      do
      {
        for (uint64_t i = 0LL; i != v5; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v9 != v6) {
            objc_enumerationMutation(v3);
          }
          objc_msgSend( objc_msgSend( *(id *)(*(void *)(a1 + 32) + 16),  "objectForKey:",  *(void *)(*((void *)&v8 + 1) + 8 * (void)i)),  "postNotificationName:message:",  *(void *)(a1 + 40),  v2);
        }

        id v5 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
      }

      while (v5);
    }

    xpc_release(v2);
  }

void sub_1000F26D0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = objc_opt_class(&OBJC_CLASS___NSString);
  id v4 = (void *)SSXPCDictionaryCopyCFObjectWithClass(v2, "1", v3);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = objc_opt_class(&OBJC_CLASS___NSString);
  uint64_t v7 = (void *)SSXPCDictionaryCopyCFObjectWithClass(v5, "2", v6);
  if ([v4 length] && objc_msgSend(v7, "length"))
  {
    id v8 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v8) {
      id v8 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v9 = [v8 shouldLog];
    else {
      LODWORD(v10) = v9;
    }
    __int128 v11 = (os_log_s *)[v8 OSLogObject];
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO)) {
      uint64_t v10 = v10;
    }
    else {
      v10 &= 2u;
    }
    if ((_DWORD)v10)
    {
      uint64_t v13 = objc_opt_class(*(void *)(a1 + 40));
      int v18 = 138412802;
      uint64_t v19 = v13;
      __int16 v20 = 2112;
      char v21 = v4;
      __int16 v22 = 2112;
      __int128 v23 = v7;
      uint64_t v14 = _os_log_send_and_compose_impl( v10,  0LL,  0LL,  0LL,  &_mh_execute_header,  v11,  1LL,  "%@: Register observer: %@ / %@",  &v18,  32);
      if (v14)
      {
        id v15 = (void *)v14;
        uint64_t v16 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v14, 4LL);
        free(v15);
        id v17 = v16;
        *(void *)&double v12 = SSFileLog(v8, @"%@").n128_u64[0];
      }
    }

    objc_msgSend(*(id *)(a1 + 40), "_addObserverWithPortName:notificationName:", v4, v7, v12, v17);
  }
}

void sub_1000F293C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = objc_opt_class(&OBJC_CLASS___NSString);
  id v4 = (void *)SSXPCDictionaryCopyCFObjectWithClass(v2, "1", v3);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = objc_opt_class(&OBJC_CLASS___NSString);
  uint64_t v7 = (void *)SSXPCDictionaryCopyCFObjectWithClass(v5, "2", v6);
  if ([v4 length] && objc_msgSend(v7, "length"))
  {
    id v8 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v8) {
      id v8 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v9 = [v8 shouldLog];
    else {
      LODWORD(v10) = v9;
    }
    __int128 v11 = (os_log_s *)[v8 OSLogObject];
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO)) {
      uint64_t v10 = v10;
    }
    else {
      v10 &= 2u;
    }
    if ((_DWORD)v10)
    {
      uint64_t v13 = objc_opt_class(*(void *)(a1 + 40));
      int v18 = 138412802;
      uint64_t v19 = v13;
      __int16 v20 = 2112;
      char v21 = v4;
      __int16 v22 = 2112;
      __int128 v23 = v7;
      uint64_t v14 = _os_log_send_and_compose_impl( v10,  0LL,  0LL,  0LL,  &_mh_execute_header,  v11,  1LL,  "%@: Unregister observer: %@ / %@",  &v18,  32);
      if (v14)
      {
        id v15 = (void *)v14;
        uint64_t v16 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v14, 4LL);
        free(v15);
        id v17 = v16;
        *(void *)&double v12 = SSFileLog(v8, @"%@").n128_u64[0];
      }
    }

    objc_msgSend(*(id *)(a1 + 48), "_removeObserverWithPortName:notificationName:", v4, v7, v12, v17);
  }
}

id sub_1000F2C4C(uint64_t a1)
{
  return objc_msgSend( +[Daemon daemon](Daemon, "daemon"),  "releaseKeepAliveAssertion:",  @"com.apple.itunesstored.DistributedNotificationCenter");
}

id sub_1000F31D8(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 16) addObject:*(void *)(a1 + 40)];
}

id sub_1000F323C(uint64_t a1)
{
  id result = [*(id *)(*(void *)(a1 + 32) + 16) indexOfObjectIdenticalTo:*(void *)(a1 + 40)];
  if (result != (id)0x7FFFFFFFFFFFFFFFLL)
  {
    id v3 = result;
    objc_msgSend( objc_msgSend(*(id *)(a1 + 40), "object"),  "removeObserver:forKeyPath:context:",  *(void *)(a1 + 32),  objc_msgSend(*(id *)(a1 + 40), "keyPath"),  *(void *)(a1 + 40));
    id v4 = *(id *)(a1 + 40);
    return [*(id *)(*(void *)(a1 + 32) + 16) removeObjectAtIndex:v3];
  }

  return result;
}

id sub_1000F3CEC(uint64_t a1)
{
  id result = objc_alloc_init((Class)objc_opt_class(*(void *)(a1 + 32)));
  qword_1003A3408 = (uint64_t)result;
  return result;
}

id sub_1000F3D8C(uint64_t a1)
{
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 16LL);
  if (!v2)
  {
    *(void *)(*(void *)(a1 + 32) + 16LL) = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 16LL);
  }

  [v2 addObject:*(void *)(a1 + 40)];
  return [*(id *)(a1 + 32) _reloadPollTimer];
}

id sub_1000F3E58(uint64_t a1)
{
  id result = [*(id *)(*(void *)(a1 + 32) + 16) indexOfObjectIdenticalTo:*(void *)(a1 + 40)];
  if (result != (id)0x7FFFFFFFFFFFFFFFLL)
  {
    id v3 = result;
    [*(id *)(a1 + 32) _willRemoveEvent:*(void *)(a1 + 40)];
    [*(id *)(*(void *)(a1 + 32) + 16) removeObjectAtIndex:v3];
    return [*(id *)(a1 + 32) _reloadPollTimer];
  }

  return result;
}

id sub_1000F4078(uint64_t a1)
{
  uint64_t v2 = (uint64_t)[*(id *)(a1 + 32) count];
  if (v2 >= 1)
  {
    unint64_t v3 = v2 + 1;
    do
    {
      objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "objectAtIndex:", v3 - 2), "performAction");
      --v3;
    }

    while (v3 > 1);
  }

  return objc_msgSend( +[Daemon daemon](Daemon, "daemon"),  "releaseKeepAliveAssertion:",  @"EventMonitor");
}

id sub_1000F4544(uint64_t a1)
{
  return [*(id *)(a1 + 32) _fireEventsAfterPollTimer];
}

void sub_1000F48E4(id a1)
{
  qword_1003A3418 = objc_alloc_init(&OBJC_CLASS___EventDispatcher);
}

void sub_1000F4964(void *a1)
{
  if ([*(id *)(a1[4] + 16) count])
  {
    id v2 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v2) {
      id v2 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v3 = [v2 shouldLog];
    else {
      LODWORD(v4) = v3;
    }
    uint64_t v5 = (os_log_s *)[v2 OSLogObject];
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO)) {
      uint64_t v4 = v4;
    }
    else {
      v4 &= 2u;
    }
    if ((_DWORD)v4)
    {
      uint64_t v6 = objc_opt_class(a1[4]);
      uint64_t v7 = a1[5];
      int v23 = 138412546;
      uint64_t v24 = v6;
      __int16 v25 = 2112;
      uint64_t v26 = v7;
      uint64_t v8 = _os_log_send_and_compose_impl( v4,  0LL,  0LL,  0LL,  &_mh_execute_header,  v5,  1LL,  "%@: Posting event: %@",  &v23,  22);
      if (v8)
      {
        unsigned int v9 = (void *)v8;
        uint64_t v10 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v8, 4LL);
        free(v9);
        id v17 = v10;
        SSFileLog(v2, @"%@");
      }
    }

    xpc_object_t v11 = xpc_dictionary_create(0LL, 0LL, 0LL);
    SSXPCDictionarySetCFObject(v11, "0", a1[5]);
    SSXPCDictionarySetCFObject(v11, "1", a1[6]);
    __int128 v20 = 0u;
    __int128 v21 = 0u;
    __int128 v18 = 0u;
    __int128 v19 = 0u;
    double v12 = *(void **)(a1[4] + 16LL);
    id v13 = [v12 countByEnumeratingWithState:&v18 objects:v22 count:16];
    if (v13)
    {
      id v14 = v13;
      uint64_t v15 = *(void *)v19;
      do
      {
        for (uint64_t i = 0LL; i != v14; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v19 != v15) {
            objc_enumerationMutation(v12);
          }
          objc_msgSend( objc_msgSend(*(id *)(*((void *)&v18 + 1) + 8 * (void)i), "outputConnection", v17),  "sendMessage:",  v11);
        }

        id v14 = [v12 countByEnumeratingWithState:&v18 objects:v22 count:16];
      }

      while (v14);
    }

    xpc_release(v11);
  }

void sub_1000F4C30(uint64_t a1)
{
  if ((SSXPCConnectionHasEntitlement(*(void *)(a1 + 32), kSSITunesStorePrivateEntitlement) & 1) != 0)
  {
    xpc_object_t value = (_xpc_endpoint_s *)xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 48), "1");
    if (value)
    {
      unsigned int v3 = value;
      if (xpc_get_type(value) == (xpc_type_t)&_xpc_type_endpoint)
      {
        xpc_connection_t v4 = xpc_connection_create_from_endpoint(v3);
        if (v4)
        {
          xpc_connection_t v5 = v4;
          uint64_t v6 = -[XPCClient initWithInputConnection:]( objc_alloc(&OBJC_CLASS___XPCClient),  "initWithInputConnection:",  *(void *)(a1 + 32));
          -[XPCClient setOutputConnectionWithConnection:](v6, "setOutputConnectionWithConnection:", v5);
          id v7 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
          if (!v7) {
            id v7 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
          }
          unsigned int v8 = [v7 shouldLog];
          else {
            LODWORD(v9) = v8;
          }
          uint64_t v10 = (os_log_s *)[v7 OSLogObject];
          if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO)) {
            uint64_t v9 = v9;
          }
          else {
            v9 &= 2u;
          }
          if ((_DWORD)v9)
          {
            uint64_t v12 = objc_opt_class(*(void *)(a1 + 40));
            int v26 = 138412546;
            uint64_t v27 = v12;
            __int16 v28 = 2112;
            id v29 = v6;
            uint64_t v13 = _os_log_send_and_compose_impl( v9,  0LL,  0LL,  0LL,  &_mh_execute_header,  v10,  1LL,  "%@: Registered event monitor: %@",  &v26,  22);
            if (v13)
            {
              id v14 = (void *)v13;
              uint64_t v15 = +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v13,  4LL);
              free(v14);
              __int16 v25 = v15;
              *(void *)&double v11 = SSFileLog(v7, @"%@").n128_u64[0];
            }
          }

          objc_msgSend(*(id *)(a1 + 56), "_addClient:", v6, v11, v25);
          xpc_object_t v16 = xpc_dictionary_create(0LL, 0LL, 0LL);
          -[SSXPCConnection sendMessage:](-[XPCClient outputConnection](v6, "outputConnection"), "sendMessage:", v16);
          xpc_release(v16);

          xpc_release(v5);
        }
      }
    }
  }

  else
  {
    id v17 = (XPCClient *)SSXPCConnectionCopyClientIdentifier(*(void *)(a1 + 32), 0LL);
    id v18 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v18) {
      id v18 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v19 = [v18 shouldLog];
    else {
      LODWORD(v20) = v19;
    }
    __int128 v21 = (os_log_s *)[v18 OSLogObject];
    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v20 = v20;
    }
    else {
      v20 &= 2u;
    }
    if ((_DWORD)v20)
    {
      uint64_t v22 = objc_opt_class(*(void *)(a1 + 40));
      int v26 = 138412546;
      uint64_t v27 = v22;
      __int16 v28 = 2112;
      id v29 = v17;
      uint64_t v23 = _os_log_send_and_compose_impl( v20,  0LL,  0LL,  0LL,  &_mh_execute_header,  v21,  0LL,  "%@: Cannot register unentitled event monitor: %@",  &v26,  22);
      if (v23)
      {
        uint64_t v24 = (void *)v23;
        +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v23, 4LL);
        free(v24);
        SSFileLog(v18, @"%@");
      }
    }
  }

id sub_1000F4FE8(uint64_t a1)
{
  id result = [*(id *)(*(void *)(a1 + 32) + 16) indexOfObjectIdenticalTo:*(void *)(a1 + 40)];
  if (result != (id)0x7FFFFFFFFFFFFFFFLL)
  {
    id v3 = result;
    id v4 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v4) {
      id v4 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v5 = [v4 shouldLog];
    else {
      LODWORD(v6) = v5;
    }
    id v7 = (os_log_s *)[v4 OSLogObject];
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO)) {
      uint64_t v6 = v6;
    }
    else {
      v6 &= 2u;
    }
    if ((_DWORD)v6)
    {
      uint64_t v9 = objc_opt_class(*(void *)(a1 + 32));
      uint64_t v10 = *(void *)(a1 + 40);
      int v15 = 138412546;
      uint64_t v16 = v9;
      __int16 v17 = 2112;
      uint64_t v18 = v10;
      uint64_t v11 = _os_log_send_and_compose_impl( v6,  0LL,  0LL,  0LL,  &_mh_execute_header,  v7,  1LL,  "%@: Client disconnect: %@",  &v15,  22);
      if (v11)
      {
        uint64_t v12 = (void *)v11;
        uint64_t v13 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v11, 4LL);
        free(v12);
        id v14 = v13;
        *(void *)&double v8 = SSFileLog(v4, @"%@").n128_u64[0];
      }
    }

    objc_msgSend(*(id *)(a1 + 40), "setOutputConnectionWithConnection:", 0, v8, v14);
    return [*(id *)(*(void *)(a1 + 32) + 16) removeObjectAtIndex:v3];
  }

  return result;
}

id sub_1000F522C(uint64_t a1)
{
  return objc_msgSend( +[Daemon daemon](Daemon, "daemon"),  "releaseKeepAliveAssertion:",  @"com.apple.itunesstored.EventDispatcher");
}

Class sub_1000F5F28()
{
  if (qword_1003A3430 != -1) {
    dispatch_once(&qword_1003A3430, &stru_10034E700);
  }
  Class result = objc_getClass("ICDefaults");
  qword_1003A3428 = (uint64_t)result;
  off_1003A2AB0 = (uint64_t (*)())sub_1000F5F84;
  return result;
}

id sub_1000F5F84()
{
  return (id)qword_1003A3428;
}

void sub_1000F5F90(id a1)
{
  qword_1003A3438 = (uint64_t)dlopen("/System/Library/PrivateFrameworks/iTunesCloud.framework/iTunesCloud", 2);
}

void sub_1000F623C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) payment];
  id v3 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  if (!v3) {
    id v3 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  unsigned int v4 = [v3 shouldLog];
  else {
    LODWORD(v5) = v4;
  }
  uint64_t v6 = (os_log_s *)[v3 OSLogObject];
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO)) {
    uint64_t v5 = v5;
  }
  else {
    v5 &= 2u;
  }
  if ((_DWORD)v5)
  {
    uint64_t v8 = objc_opt_class(*(void *)(a1 + 40));
    id v9 = [v2 quantity];
    id v10 = [v2 productIdentifier];
    id v11 = [*(id *)(a1 + 40) _clientIdentifier];
    int v56 = 138544130;
    uint64_t v57 = v8;
    __int16 v58 = 2048;
    id v59 = v9;
    __int16 v60 = 2112;
    id v61 = v10;
    __int16 v62 = 2112;
    id v63 = v11;
    uint64_t v12 = _os_log_send_and_compose_impl( v5,  0LL,  0LL,  0LL,  &_mh_execute_header,  v6,  1LL,  "%{public}@: Adding payment: [%ld, %@] for client: %@",  &v56,  42);
    if (v12)
    {
      uint64_t v13 = (void *)v12;
      id v14 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v12, 4LL);
      free(v13);
      id v53 = v14;
      *(void *)&double v7 = SSFileLog(v3, @"%@").n128_u64[0];
    }
  }

  if (objc_msgSend(objc_msgSend(v2, "productIdentifier", v7, v53), "length")
    && (uint64_t)[v2 quantity] >= 1)
  {
    if (*(void *)(*(void *)(a1 + 40) + 24LL))
    {
      id v15 = +[NSThread beginManagedContextSession](&OBJC_CLASS___NSThread, "beginManagedContextSession");
      uint64_t v16 = -[MicroPayment initWithEntity:insertIntoManagedObjectContext:]( objc_alloc(&OBJC_CLASS___MicroPayment),  "initWithEntity:insertIntoManagedObjectContext:",  +[MicroPayment paymentEntityFromContext:](&OBJC_CLASS___MicroPayment, "paymentEntityFromContext:", v15),  v15);
      -[MicroPayment setClient:]( v16,  "setClient:",  [v15 objectWithID:*(void *)(*(void *)(a1 + 40) + 24)]);
      -[MicroPayment setValuesWithPaymentTransaction:](v16, "setValuesWithPaymentTransaction:", *(void *)(a1 + 32));
      -[MicroPayment setOriginatingStorefront:]( v16,  "setOriginatingStorefront:",  objc_msgSend(+[SSDevice currentDevice](SSDevice, "currentDevice"), "storeFrontIdentifier"));
      id v17 = [*(id *)(a1 + 48) objectForKey:@"StoreKitClientPaymentOptionSupportsDeferredPayment"];
      if ([*(id *)(a1 + 40) _isPaymentRestricted])
      {
        id v18 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
        if (!v18) {
          id v18 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
        }
        unsigned int v19 = [v18 shouldLog];
        else {
          LODWORD(v20) = v19;
        }
        __int128 v21 = (os_log_s *)[v18 OSLogObject];
        if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT)) {
          uint64_t v20 = v20;
        }
        else {
          v20 &= 2u;
        }
        if ((_DWORD)v20)
        {
          uint64_t v22 = objc_opt_class(*(void *)(a1 + 40));
          id v23 = [*(id *)(a1 + 40) _clientIdentifier];
          int v56 = 138543618;
          uint64_t v57 = v22;
          __int16 v58 = 2112;
          id v59 = v23;
          LODWORD(v55) = 22;
          uint64_t v24 = _os_log_send_and_compose_impl( v20,  0LL,  0LL,  0LL,  &_mh_execute_header,  v21,  0LL,  "%{public}@: Not allowed to make payment: %@",  &v56,  v55);
          if (v24)
          {
            __int16 v25 = (void *)v24;
            int v26 = +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v24,  4LL);
            free(v25);
            id v54 = v26;
            SSFileLog(v18, @"%@");
          }
        }

        uint64_t v27 = sub_100146868();
        -[MicroPayment setFailedWithError:](v16, "setFailedWithError:", SSError(v27, 4LL, 0LL, 0LL));
        [*(id *)(a1 + 40) _showPaymentsRestrictedAlert];
      }

      else
      {
        -[MicroPayment setState:]( v16,  "setState:",  +[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", 0LL));
      }

      id v35 = objc_msgSend(*(id *)(*(void *)(a1 + 40) + 8), "copyInputConnection", v54);
      if ([v2 requestData]
        && (SSXPCConnectionHasEntitlement(v35, kSSStoreKitEntitlementRequestData) & 1) == 0
        && (SSXPCConnectionHasEntitlement(v35, kSSStoreKitEntitlementDeveloperRequestData) & 1) == 0)
      {
        if (MGGetBoolAnswer(@"InternalBuild")
          && CFPreferencesGetAppBooleanValue( @"AllowStoreKitPaymentWithRequestDataWithoutEntitlement",  kSSUserDefaultsIdentifier,  0LL))
        {
          id v36 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
          if (!v36) {
            id v36 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
          }
          unsigned int v37 = [v36 shouldLog];
          else {
            LODWORD(v3_Block_object_dispose((const void *)(v30 - 176), 8) = v37;
          }
          id v39 = (os_log_s *)[v36 OSLogObject];
          if (os_log_type_enabled(v39, OS_LOG_TYPE_DEFAULT)) {
            uint64_t v38 = v38;
          }
          else {
            v38 &= 2u;
          }
          if ((_DWORD)v38)
          {
            uint64_t v40 = objc_opt_class(*(void *)(a1 + 40));
            id v41 = [*(id *)(a1 + 40) _clientIdentifier];
            int v56 = 138543618;
            uint64_t v57 = v40;
            __int16 v58 = 2112;
            id v59 = v41;
            LODWORD(v55) = 22;
            uint64_t v42 = _os_log_send_and_compose_impl( v38,  0LL,  0LL,  0LL,  &_mh_execute_header,  v39,  0LL,  "%{public}@: Allowing payment request without entitlement on internal device from unentitled client: %@",  &v56,  v55);
            if (v42)
            {
              uint64_t v43 = (void *)v42;
              +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v42, 4LL);
              free(v43);
              SSFileLog(v36, @"%@");
            }
          }
        }

        else if (objc_msgSend( objc_msgSend( *(id *)(a1 + 48),  "objectForKeyedSubscript:",  @"StoreKitClientPaymentOptionGrandfatherRequestData"),  "BOOLValue"))
        {
          -[MicroPayment setRequestData:](v16, "setRequestData:", 0LL);
        }

        else
        {
          id v44 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
          if (!v44) {
            id v44 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
          }
          unsigned int v45 = [v44 shouldLog];
          else {
            LODWORD(v46) = v45;
          }
          uint64_t v47 = (os_log_s *)[v44 OSLogObject];
          if (os_log_type_enabled(v47, OS_LOG_TYPE_DEFAULT)) {
            uint64_t v46 = v46;
          }
          else {
            v46 &= 2u;
          }
          if ((_DWORD)v46)
          {
            uint64_t v48 = objc_opt_class(*(void *)(a1 + 40));
            id v49 = [*(id *)(a1 + 40) _clientIdentifier];
            int v56 = 138543618;
            uint64_t v57 = v48;
            __int16 v58 = 2112;
            id v59 = v49;
            LODWORD(v55) = 22;
            uint64_t v50 = _os_log_send_and_compose_impl( v46,  0LL,  0LL,  0LL,  &_mh_execute_header,  v47,  0LL,  "%{public}@: Payment has request data from unentitled client: %@",  &v56,  v55);
            if (v50)
            {
              uint64_t v51 = (void *)v50;
              +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v50, 4LL);
              free(v51);
              SSFileLog(v44, @"%@");
            }
          }

          id v52 = sub_100146868();
          -[MicroPayment setFailedWithError:](v16, "setFailedWithError:", SSError(v52, 10LL, 0LL, 0LL));
        }
      }

      if (v35) {
        xpc_release(v35);
      }
      if (sub_10003E244(v15))
      {
        objc_msgSend( *(id *)(a1 + 40),  "_sendPaymentsAdded:",  +[NSArray arrayWithObject:](NSArray, "arrayWithObject:", v16));
        *(_BYTE *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL) = 1;
      }

      +[NSThread endManagedContextSession](&OBJC_CLASS___NSThread, "endManagedContextSession");
    }

    else
    {
      id v28 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
      if (!v28) {
        id v28 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
      }
      unsigned int v29 = [v28 shouldLog];
      else {
        LODWORD(v30) = v29;
      }
      unsigned int v31 = (os_log_s *)[v28 OSLogObject];
      if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR)) {
        uint64_t v30 = v30;
      }
      else {
        v30 &= 2u;
      }
      if ((_DWORD)v30)
      {
        uint64_t v32 = objc_opt_class(*(void *)(a1 + 40));
        int v56 = 138543362;
        uint64_t v57 = v32;
        LODWORD(v55) = 12;
        uint64_t v33 = _os_log_send_and_compose_impl( v30,  0LL,  0LL,  0LL,  &_mh_execute_header,  v31,  16LL,  "[%{public}@]: No DB client object ID when adding payment",  &v56,  v55);
        if (v33)
        {
          uint64_t v34 = (void *)v33;
          +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v33, 4LL);
          free(v34);
          SSFileLog(v28, @"%@");
        }
      }
    }
  }

id sub_1000F6A90(uint64_t a1)
{
  id v2 = +[NSThread beginManagedContextSession](&OBJC_CLASS___NSThread, "beginManagedContextSession");
  id v3 = objc_alloc_init(&OBJC_CLASS___NSMutableOrderedSet);
  unsigned int v4 = -[NSArray initWithObjects:]( objc_alloc(&OBJC_CLASS___NSArray),  "initWithObjects:",  @"downloadID",  @"state",  0LL);
  id v5 = [*(id *)(a1 + 32) _copyDownloadsForDownloadIDs:*(void *)(a1 + 40) properties:v4 context:v2];
  __int128 v26 = 0u;
  __int128 v27 = 0u;
  __int128 v28 = 0u;
  __int128 v29 = 0u;
  id v6 = [v5 countByEnumeratingWithState:&v26 objects:v36 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v27;
    do
    {
      for (uint64_t i = 0LL; i != v7; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v27 != v8) {
          objc_enumerationMutation(v5);
        }
        id v10 = *(void **)(*((void *)&v26 + 1) + 8LL * (void)i);
        objc_msgSend( v10,  "setState:",  +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", 1));
        -[NSMutableOrderedSet addObject:](v3, "addObject:", [v10 downloadID]);
      }

      id v7 = [v5 countByEnumeratingWithState:&v26 objects:v36 count:16];
    }

    while (v7);
  }

  if (-[NSMutableOrderedSet count](v3, "count"))
  {
    id v11 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v11) {
      id v11 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v12 = [v11 shouldLog];
    else {
      LODWORD(v13) = v12;
    }
    id v14 = (os_log_s *)[v11 OSLogObject];
    if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO)) {
      uint64_t v13 = v13;
    }
    else {
      v13 &= 2u;
    }
    if ((_DWORD)v13)
    {
      uint64_t v16 = objc_opt_class(*(void *)(a1 + 32));
      id v17 = -[NSMutableOrderedSet count](v3, "count");
      id v18 = [*(id *)(a1 + 32) _clientIdentifier];
      int v30 = 138543874;
      uint64_t v31 = v16;
      __int16 v32 = 2048;
      id v33 = v17;
      __int16 v34 = 2112;
      id v35 = v18;
      LODWORD(v24) = 32;
      uint64_t v19 = _os_log_send_and_compose_impl( v13,  0LL,  0LL,  0LL,  &_mh_execute_header,  v14,  1LL,  "%{public}@: Cancel %lu downloads for client: %@",  &v30,  v24);
      if (v19)
      {
        uint64_t v20 = (void *)v19;
        __int128 v21 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v19, 4LL);
        free(v20);
        id v23 = v21;
        *(void *)&double v15 = SSFileLog(v11, @"%@").n128_u64[0];
      }
    }

    v25[0] = _NSConcreteStackBlock;
    v25[1] = 3221225472LL;
    v25[2] = sub_1000F6D98;
    v25[3] = &unk_10034D7F0;
    v25[4] = v3;
    objc_msgSend( +[DownloadsDatabase downloadsDatabase](DownloadsDatabase, "downloadsDatabase", v15, v23),  "modifyUsingTransactionBlock:",  v25);
  }

  sub_10003E244(v2);
  return +[NSThread endManagedContextSession](&OBJC_CLASS___NSThread, "endManagedContextSession");
}

id sub_1000F6D98(uint64_t a1, void *a2)
{
  return [a2 finishDownloadsWithIdentifiers:*(void *)(a1 + 32) finalPhase:SSDownloadPhaseCanceled];
}

void sub_1000F6E5C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_1000F6E74(uint64_t a1, uint64_t a2)
{
}

void sub_1000F6E84(uint64_t a1)
{
}

id sub_1000F6E90(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) _clientIdentifier];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL) = result;
  return result;
}

uint64_t sub_1000F6F54(uint64_t result)
{
  *(void *)(*(void *)(*(void *)(result + 40) + 8LL) + 24LL) = *(void *)(*(void *)(result + 32) + 72LL);
  return result;
}

void *sub_1000F6FC0(void *result)
{
  uint64_t v1 = result[4];
  if (!*(void *)(v1 + 24) && *(void *)(v1 + 8))
  {
    id v2 = result;
    id v3 = +[NSThread beginManagedContextSession](&OBJC_CLASS___NSThread, "beginManagedContextSession");
    unsigned int v4 = (void *)v2[4];
    if (!v4[2]) {
      [v4 _reloadClientProperties];
    }
    id v5 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v5) {
      id v5 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v6 = [v5 shouldLog];
    else {
      LODWORD(v7) = v6;
    }
    uint64_t v8 = (os_log_s *)[v5 OSLogObject];
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO)) {
      uint64_t v7 = v7;
    }
    else {
      v7 &= 2u;
    }
    if ((_DWORD)v7)
    {
      uint64_t v10 = objc_opt_class(v2[4]);
      unsigned int v11 = [*(id *)(v2[4] + 16) isSandboxed];
      id v12 = [*(id *)(v2[4] + 16) bundleIdentifier];
      id v13 = [*(id *)(v2[4] + 16) vendorIdentifier];
      int v19 = 138544130;
      uint64_t v20 = v10;
      __int16 v21 = 1024;
      unsigned int v22 = v11;
      __int16 v23 = 2112;
      id v24 = v12;
      __int16 v25 = 2112;
      id v26 = v13;
      uint64_t v14 = _os_log_send_and_compose_impl( v7,  0LL,  0LL,  0LL,  &_mh_execute_header,  v8,  1LL,  "%{public}@: Adding client to DB: %d / %@ / %@",  &v19,  38);
      if (v14)
      {
        double v15 = (void *)v14;
        uint64_t v16 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v14, 4LL);
        free(v15);
        id v18 = v16;
        *(void *)&double v9 = SSFileLog(v5, @"%@").n128_u64[0];
      }
    }

    id v17 = -[MicroPaymentClient initWithEntity:insertIntoManagedObjectContext:]( objc_alloc(&OBJC_CLASS___MicroPaymentClient),  "initWithEntity:insertIntoManagedObjectContext:",  +[MicroPaymentClient entityForContext:](&OBJC_CLASS___MicroPaymentClient, "entityForContext:", v3, v9, v18),  v3);
    -[MicroPaymentClient setValuesWithClientIdentity:](v17, "setValuesWithClientIdentity:", *(void *)(v2[4] + 16LL));

    return +[NSThread endManagedContextSession](&OBJC_CLASS___NSThread, "endManagedContextSession");
  }

  return result;
}

void sub_1000F72B8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void *sub_1000F72D0(void *result)
{
  if (*(void *)(result[4] + 24LL))
  {
    uint64_t v1 = result;
    id v2 = +[NSThread beginManagedContextSession](&OBJC_CLASS___NSThread, "beginManagedContextSession");
    id v3 = [v2 objectWithID:*(void *)(v1[4] + 24)];
    unsigned int v4 = objc_alloc_init(&OBJC_CLASS___NSFetchRequest);
    -[NSFetchRequest setEntity:]( v4,  "setEntity:",  +[MicroPayment paymentEntityFromContext:](&OBJC_CLASS___MicroPayment, "paymentEntityFromContext:", v2));
    -[NSFetchRequest setPredicate:]( v4,  "setPredicate:",  +[NSPredicate predicateWithFormat:](&OBJC_CLASS___NSPredicate, "predicateWithFormat:", @"client=%@", v3));
    -[NSFetchRequest setPropertiesToFetch:]( v4,  "setPropertiesToFetch:",  +[NSArray arrayWithObjects:](&OBJC_CLASS___NSArray, "arrayWithObjects:", @"state", 0LL));
    id v5 = -[NSSortDescriptor initWithKey:ascending:]( objc_alloc(&OBJC_CLASS___NSSortDescriptor),  "initWithKey:ascending:",  @"insertDate",  1LL);
    -[NSFetchRequest setSortDescriptors:]( v4,  "setSortDescriptors:",  +[NSArray arrayWithObjects:](&OBJC_CLASS___NSArray, "arrayWithObjects:", v5, 0LL));

    id v6 = [v2 executeFetchRequest:v4 error:0];
    __int128 v13 = 0u;
    __int128 v14 = 0u;
    __int128 v15 = 0u;
    __int128 v16 = 0u;
    id v7 = [v6 countByEnumeratingWithState:&v13 objects:v17 count:16];
    if (v7)
    {
      id v8 = v7;
      uint64_t v9 = *(void *)v14;
      while (2)
      {
        for (uint64_t i = 0LL; i != v8; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v14 != v9) {
            objc_enumerationMutation(v6);
          }
          unsigned int v11 = *(void **)(*((void *)&v13 + 1) + 8LL * (void)i);
          id v12 = [v11 objectID];
          if (([*(id *)(v1[4] + 80) containsObject:v12] & 1) == 0
            && [v11 isReady])
          {
            *(void *)(*(void *)(v1[5] + 8LL) + 40LL) = v12;
            goto LABEL_13;
          }
        }

        id v8 = [v6 countByEnumeratingWithState:&v13 objects:v17 count:16];
        if (v8) {
          continue;
        }
        break;
      }
    }

void sub_1000F758C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (*(void *)(v2 + 8))
  {
    id v3 = [*(id *)(v2 + 8) copyInputConnection];
    *(_BYTE *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL) = v3 == *(id *)(a1 + 40);
    xpc_release(v3);
  }

  else
  {
    if (!*(void *)(v2 + 16)) {
      [(id)v2 _reloadClientProperties];
    }
    uint64_t v4 = *(void *)(a1 + 32);
    if (*(void *)(a1 + 48))
    {
      id v5 = [*(id *)(v4 + 16) bundleIdentifier];
      if (v5 == [*(id *)(a1 + 48) bundleIdentifier]
        || (unsigned int v6 = objc_msgSend( objc_msgSend(*(id *)(*(void *)(a1 + 32) + 16), "bundleIdentifier"),  "isEqual:",  objc_msgSend(*(id *)(a1 + 48), "bundleIdentifier"))) != 0)
      {
        id v7 = [*(id *)(*(void *)(a1 + 32) + 16) bundleVersion];
        if (v7 == [*(id *)(a1 + 48) bundleVersion]
          || (unsigned int v6 = objc_msgSend( objc_msgSend(*(id *)(*(void *)(a1 + 32) + 16), "bundleVersion"),  "isEqual:",  objc_msgSend(*(id *)(a1 + 48), "bundleVersion"))) != 0)
        {
          id v8 = [*(id *)(*(void *)(a1 + 32) + 16) storeIdentifier];
          if (v8 == [*(id *)(a1 + 48) storeItemIdentifier]
            || (unsigned int v6 = objc_msgSend( objc_msgSend(*(id *)(*(void *)(a1 + 32) + 16), "storeIdentifier"),  "isEqual:",  objc_msgSend(*(id *)(a1 + 48), "storeItemIdentifier"))) != 0)
          {
            id v9 = [*(id *)(*(void *)(a1 + 32) + 16) storeVersion];
            if (v9 == [*(id *)(a1 + 48) storeExternalVersion]) {
              LOBYTE(v6) = 1;
            }
            else {
              LOBYTE(v6) = objc_msgSend( objc_msgSend(*(id *)(*(void *)(a1 + 32) + 16), "storeVersion"),  "isEqual:",  objc_msgSend(*(id *)(a1 + 48), "storeExternalVersion"));
            }
          }
        }
      }

      *(_BYTE *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL) = v6;
    }

    else if (*(void *)(v4 + 24))
    {
      id v10 = objc_msgSend( +[NSThread beginManagedContextSession](NSThread, "beginManagedContextSession"),  "objectWithID:",  *(void *)(*(void *)(a1 + 32) + 24));
      if (v10)
      {
        unsigned int v11 = v10;
        id v12 = -[XPCClient initWithInputConnection:]( objc_alloc(&OBJC_CLASS___XPCClient),  "initWithInputConnection:",  *(void *)(a1 + 40));
        if (-[NSString isEqualToString:]( -[XPCClient clientIdentifier](v12, "clientIdentifier"),  "isEqualToString:",  [v11 identifier]))
        {
          unsigned __int8 v13 = -[XPCClient isAppleSigned](v12, "isAppleSigned");
          char v14 = v13 ^ objc_msgSend(objc_msgSend(v11, "sandboxed"), "BOOLValue");
        }

        else
        {
          char v14 = 0;
        }

        *(_BYTE *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL) = v14;
      }

      +[NSThread endManagedContextSession](&OBJC_CLASS___NSThread, "endManagedContextSession");
    }
  }

id sub_1000F7878(uint64_t a1)
{
  id result = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "_clientIdentity"), "isSandboxed");
  *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = (_BYTE)result;
  return result;
}

void sub_1000F7958( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

id sub_1000F7970(uint64_t a1)
{
  id result = *(id *)(*(void *)(a1 + 32) + 24LL);
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL) = result;
  return result;
}

void *sub_1000F7A18(void *result)
{
  if (*(void *)(result[4] + 24LL))
  {
    uint64_t v1 = result;
    id v2 = +[NSThread beginManagedContextSession](&OBJC_CLASS___NSThread, "beginManagedContextSession");
    id v3 = [v2 objectWithID:*(void *)(v1[4] + 24)];
    uint64_t v4 = objc_alloc_init(&OBJC_CLASS___NSFetchRequest);
    -[NSFetchRequest setEntity:]( v4,  "setEntity:",  +[MicroPayment paymentEntityFromContext:](&OBJC_CLASS___MicroPayment, "paymentEntityFromContext:", v2));
    -[NSFetchRequest setPredicate:]( v4,  "setPredicate:",  +[NSPredicate predicateWithFormat:](&OBJC_CLASS___NSPredicate, "predicateWithFormat:", @"client=%@", v3));
    id v5 = -[NSSortDescriptor initWithKey:ascending:]( objc_alloc(&OBJC_CLASS___NSSortDescriptor),  "initWithKey:ascending:",  @"insertDate",  1LL);
    -[NSFetchRequest setSortDescriptors:]( v4,  "setSortDescriptors:",  +[NSArray arrayWithObjects:](&OBJC_CLASS___NSArray, "arrayWithObjects:", v5, 0LL));

    id v6 = [v2 executeFetchRequest:v4 error:0];
    __int128 v14 = 0u;
    __int128 v15 = 0u;
    __int128 v16 = 0u;
    __int128 v17 = 0u;
    id v7 = [v6 countByEnumeratingWithState:&v14 objects:v18 count:16];
    if (v7)
    {
      id v8 = v7;
      uint64_t v9 = *(void *)v15;
      do
      {
        for (uint64_t i = 0LL; i != v8; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v15 != v9) {
            objc_enumerationMutation(v6);
          }
          unsigned int v11 = *(void **)(*((void *)&v14 + 1) + 8LL * (void)i);
          if ((char *)objc_msgSend(objc_msgSend(v11, "state"), "integerValue") - 5 <= (char *)0xFFFFFFFFFFFFFFFDLL)
          {
            id v12 = [v11 copyPaymentTransaction];
            if (v12)
            {
              unsigned __int8 v13 = v12;
              [(id)v1[5] addObject:v12];
            }
          }
        }

        id v8 = [v6 countByEnumeratingWithState:&v14 objects:v18 count:16];
      }

      while (v8);
    }

    return +[NSThread endManagedContextSession](&OBJC_CLASS___NSThread, "endManagedContextSession");
  }

  return result;
}

id sub_1000F7C68(uint64_t a1)
{
  id v2 = +[NSThread beginManagedContextSession](&OBJC_CLASS___NSThread, "beginManagedContextSession");
  id v3 = objc_alloc_init(&OBJC_CLASS___NSMutableOrderedSet);
  uint64_t v4 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  id v5 = -[NSArray initWithObjects:]( objc_alloc(&OBJC_CLASS___NSArray),  "initWithObjects:",  @"downloadID",  @"state",  0LL);
  uint64_t v29 = a1;
  int v30 = v2;
  id v6 = [*(id *)(a1 + 32) _copyDownloadsForDownloadIDs:*(void *)(a1 + 40) properties:v5 context:v2];
  __int128 v32 = 0u;
  __int128 v33 = 0u;
  __int128 v34 = 0u;
  __int128 v35 = 0u;
  id v7 = [v6 countByEnumeratingWithState:&v32 objects:v42 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v33;
    do
    {
      for (uint64_t i = 0LL; i != v8; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v33 != v9) {
          objc_enumerationMutation(v6);
        }
        unsigned int v11 = *(void **)(*((void *)&v32 + 1) + 8LL * (void)i);
        id v12 = objc_msgSend(objc_msgSend(v11, "state"), "integerValue");
        if (v12 == (id)5 || v12 == 0LL)
        {
          objc_msgSend( v11,  "setState:",  +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", 4));
          -[NSMutableOrderedSet addObject:](v3, "addObject:", [v11 downloadID]);
          -[NSMutableArray addObject:]( v4,  "addObject:",  objc_msgSend((id)sub_100146888(), "changesetWithDownloadID:state:", objc_msgSend(v11, "downloadID"), 2));
        }
      }

      id v8 = [v6 countByEnumeratingWithState:&v32 objects:v42 count:16];
    }

    while (v8);
  }

  if (-[NSMutableOrderedSet count](v3, "count"))
  {
    id v14 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v14) {
      id v14 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v15 = [v14 shouldLog];
    else {
      unsigned int v16 = v15;
    }
    __int128 v17 = (os_log_s *)[v14 OSLogObject];
    if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO)) {
      uint64_t v19 = v16;
    }
    else {
      uint64_t v19 = v16 & 2;
    }
    if ((_DWORD)v19)
    {
      uint64_t v20 = objc_opt_class(*(void *)(v29 + 32));
      id v21 = -[NSMutableOrderedSet count](v3, "count");
      id v22 = [*(id *)(v29 + 32) _clientIdentifier];
      int v36 = 138412802;
      uint64_t v37 = v20;
      __int16 v38 = 2048;
      id v39 = v21;
      __int16 v40 = 2112;
      id v41 = v22;
      LODWORD(v2_Block_object_dispose(va, 8) = 32;
      uint64_t v23 = _os_log_send_and_compose_impl( v19,  0LL,  0LL,  0LL,  &_mh_execute_header,  v17,  1LL,  "%@: Pause %lu downloads for client: %@",  &v36,  v28);
      if (v23)
      {
        id v24 = (void *)v23;
        __int16 v25 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v23, 4LL);
        free(v24);
        __int128 v27 = v25;
        *(void *)&double v18 = SSFileLog(v14, @"%@").n128_u64[0];
      }
    }

    v31[0] = _NSConcreteStackBlock;
    v31[1] = 3221225472LL;
    v31[2] = sub_1000F7FE8;
    v31[3] = &unk_10034D7F0;
    v31[4] = v3;
    objc_msgSend( +[DownloadsDatabase downloadsDatabase](DownloadsDatabase, "downloadsDatabase", v18, v27),  "modifyUsingTransactionBlock:",  v31);
  }

  if (-[NSMutableArray count](v4, "count")) {
    [*(id *)(v29 + 32) _sendDownloadChangesets:v4];
  }

  sub_10003E244(v30);
  return +[NSThread endManagedContextSession](&OBJC_CLASS___NSThread, "endManagedContextSession");
}

id sub_1000F7FE8(uint64_t a1, void *a2)
{
  return [a2 pauseDownloadsWithIdentifiers:*(void *)(a1 + 32)];
}

id sub_1000F8050(uint64_t a1)
{
  return [*(id *)(a1 + 32) _refreshFromServerWithReason:*(void *)(a1 + 48) accountIdentifier:*(void *)(a1 + 40)];
}

id sub_1000F80F4(uint64_t a1)
{
  id v2 = +[NSThread beginManagedContextSession](&OBJC_CLASS___NSThread, "beginManagedContextSession");
  id v3 = [v2 objectWithID:*(void *)(a1 + 32)];
  id v4 = [v3 transactionIdentifier];
  [v2 deleteObject:v3];
  if (sub_10003E244(v2))
  {
    objc_msgSend( *(id *)(a1 + 40),  "_sendPaymentsRemoved:",  +[NSArray arrayWithObjects:](NSArray, "arrayWithObjects:", v4, 0));
    *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = 1;
  }

  return +[NSThread endManagedContextSession](&OBJC_CLASS___NSThread, "endManagedContextSession");
}

void sub_1000F81EC(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  if (v2[8])
  {
    id v3 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v3) {
      id v3 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v4 = [v3 shouldLog];
    else {
      LODWORD(v5) = v4;
    }
    id v6 = (os_log_s *)[v3 OSLogObject];
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v5 = v5;
    }
    else {
      v5 &= 2u;
    }
    if ((_DWORD)v5)
    {
      uint64_t v7 = objc_opt_class(*(void *)(a1 + 32));
      id v8 = [*(id *)(a1 + 32) _clientIdentifier];
      int v38 = 138543618;
      uint64_t v39 = v7;
      __int16 v40 = 2112;
      id v41 = v8;
      uint64_t v9 = _os_log_send_and_compose_impl( v5,  0LL,  0LL,  0LL,  &_mh_execute_header,  v6,  0LL,  "%{public}@: Ignoring repeat restore request: %@",  &v38,  22);
      if (v9)
      {
        id v10 = (void *)v9;
        +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v9, 4LL);
        free(v10);
        SSFileLog(v3, @"%@");
      }
    }
  }

  else if ([v2 _isPaymentRestricted])
  {
    id v11 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v11) {
      id v11 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v12 = [v11 shouldLog];
    else {
      LODWORD(v13) = v12;
    }
    id v14 = (os_log_s *)[v11 OSLogObject];
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v13 = v13;
    }
    else {
      v13 &= 2u;
    }
    if ((_DWORD)v13)
    {
      uint64_t v16 = objc_opt_class(*(void *)(a1 + 32));
      id v17 = [*(id *)(a1 + 32) _clientIdentifier];
      int v38 = 138543618;
      uint64_t v39 = v16;
      __int16 v40 = 2112;
      id v41 = v17;
      uint64_t v18 = _os_log_send_and_compose_impl( v13,  0LL,  0LL,  0LL,  &_mh_execute_header,  v14,  0LL,  "%{public}@: Not allowed to restore transactions: %@",  &v38,  22);
      if (v18)
      {
        uint64_t v19 = (void *)v18;
        uint64_t v20 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v18, 4LL);
        free(v19);
        __int128 v35 = v20;
        *(void *)&double v15 = SSFileLog(v11, @"%@").n128_u64[0];
      }
    }

    objc_msgSend(*(id *)(a1 + 32), "_showPaymentsRestrictedAlert", v15, v35);
    id v21 = *(void **)(a1 + 32);
    id v22 = sub_100146868();
    objc_msgSend(v21, "_sendRestoreCompletedWithError:", SSError(v22, 4, 0, 0));
  }

  else
  {
    uint64_t v23 = objc_alloc_init(&OBJC_CLASS___LoadCompletedMicroPaymentsOperation);
    *(void *)(*(void *)(a1 + 32) + 64LL) = v23;
    [*(id *)(*(void *)(a1 + 32) + 64) setApplicationUsername:*(void *)(a1 + 40)];
    objc_msgSend( *(id *)(*(void *)(a1 + 32) + 64),  "setClientIdentity:",  objc_msgSend(*(id *)(a1 + 32), "_clientIdentity"));
    id v24 = +[SSWeakReference weakReferenceWithObject:]( &OBJC_CLASS___SSWeakReference,  "weakReferenceWithObject:",  *(void *)(a1 + 32));
    __int16 v25 = *(void **)(*(void *)(a1 + 32) + 64LL);
    v37[0] = _NSConcreteStackBlock;
    v37[1] = 3221225472LL;
    v37[2] = sub_1000F8690;
    v37[3] = &unk_10034AE70;
    v37[4] = v24;
    v37[5] = v23;
    [v25 setCompletionBlock:v37];
    id v26 = *(void **)(*(void *)(a1 + 32) + 64LL);
    v36[0] = _NSConcreteStackBlock;
    v36[1] = 3221225472LL;
    v36[2] = sub_1000F86B8;
    v36[3] = &unk_10034E7B8;
    void v36[4] = v24;
    v36[5] = v23;
    [v26 setPaymentBatchBlock:v36];
    id v27 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v27) {
      id v27 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v28 = [v27 shouldLog];
    else {
      LODWORD(v29) = v28;
    }
    int v30 = (os_log_s *)[v27 OSLogObject];
    if (os_log_type_enabled(v30, OS_LOG_TYPE_INFO)) {
      uint64_t v29 = v29;
    }
    else {
      v29 &= 2u;
    }
    if ((_DWORD)v29)
    {
      uint64_t v31 = objc_opt_class(*(void *)(a1 + 32));
      id v32 = [*(id *)(a1 + 32) _clientIdentifier];
      int v38 = 138543618;
      uint64_t v39 = v31;
      __int16 v40 = 2112;
      id v41 = v32;
      uint64_t v33 = _os_log_send_and_compose_impl( v29,  0LL,  0LL,  0LL,  &_mh_execute_header,  v30,  1LL,  "%{public}@: Restoring completed transactions for client: %@",  &v38,  22);
      if (v33)
      {
        __int128 v34 = (void *)v33;
        +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v33, 4LL);
        free(v34);
        SSFileLog(v27, @"%@");
      }
    }

    [(id)sub_100041F7C() addOperation:*(void *)(*(void *)(a1 + 32) + 64)];
  }

id sub_1000F8690(uint64_t a1)
{
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "object"), "_finishRestoreOperation:", *(void *)(a1 + 40));
}

id sub_1000F86B8(uint64_t a1, uint64_t a2)
{
  return objc_msgSend( objc_msgSend(*(id *)(a1 + 32), "object"),  "_mergeBatchResponse:forRestoreOperation:",  a2,  *(void *)(a1 + 40));
}

id sub_1000F8738(uint64_t a1)
{
  id v2 = +[NSThread beginManagedContextSession](&OBJC_CLASS___NSThread, "beginManagedContextSession");
  id v3 = objc_alloc_init(&OBJC_CLASS___NSMutableOrderedSet);
  unsigned int v4 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  uint64_t v5 = -[NSArray initWithObjects:]( objc_alloc(&OBJC_CLASS___NSArray),  "initWithObjects:",  @"downloadID",  @"state",  0LL);
  uint64_t v29 = a1;
  int v30 = v2;
  id v6 = [*(id *)(a1 + 32) _copyDownloadsForDownloadIDs:*(void *)(a1 + 40) properties:v5 context:v2];
  __int128 v32 = 0u;
  __int128 v33 = 0u;
  __int128 v34 = 0u;
  __int128 v35 = 0u;
  id v7 = [v6 countByEnumeratingWithState:&v32 objects:v42 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v33;
    do
    {
      for (uint64_t i = 0LL; i != v8; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v33 != v9) {
          objc_enumerationMutation(v6);
        }
        id v11 = *(void **)(*((void *)&v32 + 1) + 8LL * (void)i);
        id v12 = objc_msgSend(objc_msgSend(v11, "state"), "integerValue");
        if (v12 == (id)4 || v12 == (id)2)
        {
          objc_msgSend( v11,  "setState:",  +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", 5));
          -[NSMutableOrderedSet addObject:](v3, "addObject:", [v11 downloadID]);
          -[NSMutableArray addObject:]( v4,  "addObject:",  objc_msgSend((id)sub_100146888(), "changesetWithDownloadID:state:", objc_msgSend(v11, "downloadID"), 1));
        }
      }

      id v8 = [v6 countByEnumeratingWithState:&v32 objects:v42 count:16];
    }

    while (v8);
  }

  if (-[NSMutableOrderedSet count](v3, "count"))
  {
    id v14 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v14) {
      id v14 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v15 = [v14 shouldLog];
    else {
      unsigned int v16 = v15;
    }
    id v17 = (os_log_s *)[v14 OSLogObject];
    if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO)) {
      uint64_t v19 = v16;
    }
    else {
      uint64_t v19 = v16 & 2;
    }
    if ((_DWORD)v19)
    {
      uint64_t v20 = objc_opt_class(*(void *)(v29 + 32));
      id v21 = -[NSMutableOrderedSet count](v3, "count");
      id v22 = [*(id *)(v29 + 32) _clientIdentifier];
      int v36 = 138543874;
      uint64_t v37 = v20;
      __int16 v38 = 2048;
      id v39 = v21;
      __int16 v40 = 2112;
      id v41 = v22;
      LODWORD(v2_Block_object_dispose(va, 8) = 32;
      uint64_t v23 = _os_log_send_and_compose_impl( v19,  0LL,  0LL,  0LL,  &_mh_execute_header,  v17,  1LL,  "%{public}@: Resume %lu downloads for client: %@",  &v36,  v28);
      if (v23)
      {
        id v24 = (void *)v23;
        __int16 v25 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v23, 4LL);
        free(v24);
        id v27 = v25;
        *(void *)&double v18 = SSFileLog(v14, @"%@").n128_u64[0];
      }
    }

    v31[0] = _NSConcreteStackBlock;
    v31[1] = 3221225472LL;
    v31[2] = sub_1000F8AB8;
    v31[3] = &unk_10034D7F0;
    v31[4] = v3;
    objc_msgSend( +[DownloadsDatabase downloadsDatabase](DownloadsDatabase, "downloadsDatabase", v18, v27),  "modifyUsingTransactionBlock:",  v31);
  }

  if (-[NSMutableArray count](v4, "count")) {
    [*(id *)(v29 + 32) _sendDownloadChangesets:v4];
  }

  sub_10003E244(v30);
  return +[NSThread endManagedContextSession](&OBJC_CLASS___NSThread, "endManagedContextSession");
}

id sub_1000F8AB8(uint64_t a1, void *a2)
{
  return [a2 resetDownloadsWithIdentifiers:*(void *)(a1 + 32)];
}

id sub_1000F8B1C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _sendDownloadChangesets:*(void *)(a1 + 40)];
}

id sub_1000F8B80(uint64_t a1)
{
  id v2 = +[NSThread beginManagedContextSession](&OBJC_CLASS___NSThread, "beginManagedContextSession");
  id v3 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  __int128 v11 = 0u;
  __int128 v12 = 0u;
  __int128 v13 = 0u;
  __int128 v14 = 0u;
  unsigned int v4 = *(void **)(a1 + 32);
  id v5 = [v4 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v12;
    do
    {
      for (uint64_t i = 0LL; i != v6; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v12 != v7) {
          objc_enumerationMutation(v4);
        }
        id v9 = [v2 objectWithID:*(void *)(*((void *)&v11 + 1) + 8 * (void)i)];
        if (v9) {
          -[NSMutableArray addObject:](v3, "addObject:", v9);
        }
      }

      id v6 = [v4 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }

    while (v6);
  }

  if (-[NSMutableArray count](v3, "count")) {
    [*(id *)(a1 + 40) _sendPaymentsUpdated:v3];
  }

  return +[NSThread endManagedContextSession](&OBJC_CLASS___NSThread, "endManagedContextSession");
}

id sub_1000F8D24(uint64_t a1)
{
  id v2 = *(void **)(*(void *)(a1 + 32) + 16LL);
  if (!v2)
  {
    *(void *)(*(void *)(a1 + 32) + 16LL) = objc_alloc_init(&OBJC_CLASS___StoreKitClientIdentity);
    id v2 = *(void **)(*(void *)(a1 + 32) + 16LL);
  }

  id result = [v2 setValuesWithPaymentQueueClient:*(void *)(a1 + 40)];
  if (*(void *)(*(void *)(a1 + 32) + 24LL))
  {
    id v4 = +[NSThread beginManagedContextSession](&OBJC_CLASS___NSThread, "beginManagedContextSession");
    objc_msgSend( objc_msgSend(v4, "objectWithID:", *(void *)(*(void *)(a1 + 32) + 24)),  "setValuesWithClientIdentity:",  *(void *)(*(void *)(a1 + 32) + 16));
    sub_10003E244(v4);
    return +[NSThread endManagedContextSession](&OBJC_CLASS___NSThread, "endManagedContextSession");
  }

  return result;
}

void *sub_1000F8E20(void *result)
{
  uint64_t v1 = result;
  uint64_t v2 = result[4];
  id v3 = *(void **)(v2 + 8);
  if (v3 != (void *)result[5])
  {

    *(void *)(v1[4] + 8LL) = (id)v1[5];
    id result = [(id)v1[4] _reloadClientProperties];
    uint64_t v2 = v1[4];
    id v3 = *(void **)(v2 + 8);
  }

  if (v3)
  {
    if (*(void *)(v2 + 24))
    {
      id v4 = +[NSThread beginManagedContextSession](&OBJC_CLASS___NSThread, "beginManagedContextSession");
      objc_msgSend( objc_msgSend(v4, "objectWithID:", *(void *)(v1[4] + 24)),  "setValuesWithClientIdentity:",  *(void *)(v1[4] + 16));
      sub_10003E244(v4);
      return +[NSThread endManagedContextSession](&OBJC_CLASS___NSThread, "endManagedContextSession");
    }
  }

  return result;
}

id sub_1000F8F18(uint64_t a1)
{
  id v2 = +[NSThread beginManagedContextSession](&OBJC_CLASS___NSThread, "beginManagedContextSession");
  __int128 v33 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  id v3 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  id v4 = [*(id *)(a1 + 32) _clientIdentifier];
  uint64_t v32 = a1;
  id v5 = objc_msgSend( *(id *)(a1 + 32),  "_copyDownloadsForDownloadIDs:properties:context:",  *(void *)(a1 + 40),  +[MicroPaymentDownload propertiesForDownloadEntities]( MicroPaymentDownload,  "propertiesForDownloadEntities"),  v2);
  __int128 v35 = 0u;
  __int128 v36 = 0u;
  __int128 v37 = 0u;
  __int128 v38 = 0u;
  id v6 = [v5 countByEnumeratingWithState:&v35 objects:v45 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v36;
    do
    {
      for (uint64_t i = 0LL; i != v7; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v36 != v8) {
          objc_enumerationMutation(v5);
        }
        id v10 = *(void **)(*((void *)&v35 + 1) + 8LL * (void)i);
        if ((unint64_t)objc_msgSend(objc_msgSend(v10, "state"), "integerValue") <= 2)
        {
          __int128 v11 = -[Download initWithMicroPaymentDownload:clientID:]( objc_alloc(&OBJC_CLASS___Download),  "initWithMicroPaymentDownload:clientID:",  v10,  v4);
          if (v11)
          {
            __int128 v12 = v11;
            objc_msgSend( v10,  "setState:",  +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", 5));
            __int128 v13 = v3;
            uint64_t v14 = sub_100146888();
            id v15 = [v10 downloadID];
            unsigned int v16 = (void *)v14;
            id v3 = v13;
            -[NSMutableArray addObject:]( v13,  "addObject:",  [v16 changesetWithDownloadID:v15 state:1]);
            -[NSMutableArray addObject:](v33, "addObject:", v12);
          }
        }
      }

      id v7 = [v5 countByEnumeratingWithState:&v35 objects:v45 count:16];
    }

    while (v7);
  }

  if (-[NSMutableArray count](v33, "count"))
  {
    id v17 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v17) {
      id v17 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v18 = [v17 shouldLog];
    else {
      unsigned int v19 = v18;
    }
    uint64_t v20 = (os_log_s *)[v17 OSLogObject];
    if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO)) {
      uint64_t v22 = v19;
    }
    else {
      uint64_t v22 = v19 & 2;
    }
    if ((_DWORD)v22)
    {
      uint64_t v23 = objc_opt_class(*(void *)(v32 + 32));
      id v24 = -[NSMutableArray count](v33, "count");
      int v39 = 138543874;
      uint64_t v40 = v23;
      __int16 v41 = 2048;
      id v42 = v24;
      __int16 v43 = 2112;
      id v44 = v4;
      uint64_t v25 = _os_log_send_and_compose_impl( v22,  0LL,  0LL,  0LL,  &_mh_execute_header,  v20,  1LL,  "%{public}@: Starting %lu downloads for client: %@",  &v39,  32);
      if (v25)
      {
        id v26 = (void *)v25;
        id v27 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v25, 4LL);
        free(v26);
        uint64_t v31 = v27;
        *(void *)&double v21 = SSFileLog(v17, @"%@").n128_u64[0];
      }
    }

    id v28 = +[DownloadsDatabase downloadsDatabase](&OBJC_CLASS___DownloadsDatabase, "downloadsDatabase", v21, v31);
    v34[0] = _NSConcreteStackBlock;
    v34[1] = 3221225472LL;
    v34[2] = sub_1000F92B0;
    v34[3] = &unk_10034DCB0;
    uint64_t v29 = *(void *)(v32 + 32);
    void v34[4] = v33;
    void v34[5] = v29;
    v34[6] = v4;
    [v28 modifyUsingTransactionBlock:v34];
  }

  if (-[NSMutableArray count](v3, "count")) {
    [*(id *)(v32 + 32) _sendDownloadChangesets:v3];
  }

  sub_10003E244(v2);
  return +[NSThread endManagedContextSession](&OBJC_CLASS___NSThread, "endManagedContextSession");
}

uint64_t sub_1000F92B0(uint64_t a1, void *a2)
{
  id v3 = [a2 database];
  int v30 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  uint64_t v27 = a1;
  id v28 = objc_alloc_init(&OBJC_CLASS___NSMutableOrderedSet);
  __int128 v31 = 0u;
  __int128 v32 = 0u;
  __int128 v33 = 0u;
  __int128 v34 = 0u;
  id v4 = *(void **)(a1 + 32);
  id v5 = [v4 countByEnumeratingWithState:&v31 objects:v41 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v32;
    do
    {
      for (uint64_t i = 0LL; i != v6; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v32 != v7) {
          objc_enumerationMutation(v4);
        }
        id v9 = *(void **)(*((void *)&v31 + 1) + 8LL * (void)i);
        id v10 = [v9 databaseID];
        __int128 v11 = -[DownloadEntity initWithPersistentID:inDatabase:]( objc_alloc(&OBJC_CLASS___DownloadEntity),  "initWithPersistentID:inDatabase:",  v10,  v3);
        if ((-[DownloadEntity existsInDatabase](v11, "existsInDatabase") & 1) != 0)
        {
          __int128 v12 = -[NSNumber initWithLongLong:](objc_alloc(&OBJC_CLASS___NSNumber), "initWithLongLong:", v10);
          -[NSMutableOrderedSet addObject:](v28, "addObject:", v12);
          [a2 updateDownloadEntityWithIdentifier:v10 withDownload:v9];
        }

        else
        {
          -[NSMutableArray addObject:](v30, "addObject:", v9);
        }
      }

      id v6 = [v4 countByEnumeratingWithState:&v31 objects:v41 count:16];
    }

    while (v6);
  }

  if (-[NSMutableArray count](v30, "count"))
  {
    id v13 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v13) {
      id v13 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v14 = [v13 shouldLog];
    else {
      unsigned int v15 = v14;
    }
    unsigned int v16 = (os_log_s *)[v13 OSLogObject];
    if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO)) {
      uint64_t v18 = v15;
    }
    else {
      uint64_t v18 = v15 & 2;
    }
    if ((_DWORD)v18)
    {
      uint64_t v19 = objc_opt_class(*(void *)(v27 + 40));
      id v20 = -[NSMutableArray count](v30, "count");
      uint64_t v21 = *(void *)(v27 + 48);
      int v35 = 138543874;
      uint64_t v36 = v19;
      __int16 v37 = 2048;
      id v38 = v20;
      __int16 v39 = 2112;
      uint64_t v40 = v21;
      uint64_t v22 = _os_log_send_and_compose_impl( v18,  0LL,  0LL,  0LL,  &_mh_execute_header,  v16,  1LL,  "%{public}@: Adding %lu new downloads for client: %@",  &v35,  32);
      if (v22)
      {
        uint64_t v23 = (void *)v22;
        id v24 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v22, 4LL);
        free(v23);
        id v26 = v24;
        *(void *)&double v17 = SSFileLog(v13, @"%@").n128_u64[0];
      }
    }

    objc_msgSend(a2, "addDownloads:", v30, v17, v26);
  }

  if (-[NSMutableOrderedSet count](v28, "count")) {
    [a2 resetDownloadsWithIdentifiers:v28];
  }

  return 1LL;
}

id sub_1000F9600(uint64_t a1)
{
  id v2 = objc_msgSend( +[NSThread beginManagedContextSession](NSThread, "beginManagedContextSession"),  "objectWithID:",  *(void *)(a1 + 32));
  id v3 = objc_msgSend(objc_msgSend(v2, "state"), "integerValue");
  if ((unint64_t)v3 > 1)
  {
    if (v3 == (id)3)
    {
      id v13 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
      if (!v13) {
        id v13 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
      }
      unsigned int v14 = [v13 shouldLog];
      else {
        LODWORD(v15) = v14;
      }
      unsigned int v16 = (os_log_s *)[v13 OSLogObject];
      if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO)) {
        uint64_t v15 = v15;
      }
      else {
        v15 &= 2u;
      }
      if ((_DWORD)v15)
      {
        uint64_t v18 = objc_opt_class(*(void *)(a1 + 40));
        int v24 = 138543618;
        uint64_t v25 = v18;
        __int16 v26 = 2112;
        id v27 = v2;
        uint64_t v19 = _os_log_send_and_compose_impl( v15,  0LL,  0LL,  0LL,  &_mh_execute_header,  v16,  1LL,  "%{public}@: Finishing payment: %@",  &v24,  22);
        if (v19)
        {
          id v20 = (void *)v19;
          uint64_t v21 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v19, 4LL);
          free(v20);
          uint64_t v23 = v21;
          *(void *)&double v17 = SSFileLog(v13, @"%@").n128_u64[0];
        }
      }

      objc_msgSend( *(id *)(a1 + 40),  "_sendFinishRequestForPayment:withCompletionBlock:",  v2,  *(void *)(a1 + 48),  v17,  v23);
    }
  }

  else
  {
    id v4 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v4) {
      id v4 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v5 = [v4 shouldLog];
    else {
      LODWORD(v6) = v5;
    }
    uint64_t v7 = (os_log_s *)[v4 OSLogObject];
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO)) {
      uint64_t v6 = v6;
    }
    else {
      v6 &= 2u;
    }
    if ((_DWORD)v6)
    {
      uint64_t v9 = objc_opt_class(*(void *)(a1 + 40));
      int v24 = 138543618;
      uint64_t v25 = v9;
      __int16 v26 = 2112;
      id v27 = v2;
      uint64_t v10 = _os_log_send_and_compose_impl( v6,  0LL,  0LL,  0LL,  &_mh_execute_header,  v7,  1LL,  "%{public}@: Buying payment: %@",  &v24,  22);
      if (v10)
      {
        __int128 v11 = (void *)v10;
        __int128 v12 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v10, 4LL);
        free(v11);
        uint64_t v23 = v12;
        *(void *)&double v8 = SSFileLog(v4, @"%@").n128_u64[0];
      }
    }

    objc_msgSend(*(id *)(a1 + 40), "_sendBuyRequestForPayment:withCompletionBlock:", v2, *(void *)(a1 + 48), v8, v23);
  }

  return +[NSThread endManagedContextSession](&OBJC_CLASS___NSThread, "endManagedContextSession");
}

id sub_1000F9908(uint64_t a1)
{
  id v2 = +[NSThread beginManagedContextSession](&OBJC_CLASS___NSThread, "beginManagedContextSession");
  id v3 = [v2 objectWithID:*(void *)(a1 + 32)];
  if (v3)
  {
    id v4 = objc_msgSend(objc_msgSend(v3, "client"), "replacePayment:withPurchaseResponse:", v3, *(void *)(a1 + 40));
    objc_msgSend(*(id *)(a1 + 48), "_cancelDownloadsForDownloadIDs:", objc_msgSend(v4, "removedDownloadIDs"));
    [*(id *)(a1 + 48) _sendMergeResults:v4];
  }

  sub_10003E244(v2);
  return +[NSThread endManagedContextSession](&OBJC_CLASS___NSThread, "endManagedContextSession");
}

void sub_1000F9BBC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) copyProductsResponse];
  unsigned int v3 = [*(id *)(a1 + 32) success];
  id v4 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  id v5 = v4;
  if (v3)
  {
    if (!v4) {
      id v5 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v6 = [v5 shouldLog];
    else {
      LODWORD(v7) = v6;
    }
    double v8 = (os_log_s *)[v5 OSLogObject];
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v7 = v7;
    }
    else {
      v7 &= 2u;
    }
    if ((_DWORD)v7)
    {
      uint64_t v9 = objc_opt_class(*(void *)(a1 + 40));
      uint64_t v10 = *(void *)(a1 + 48);
      int v35 = 138543874;
      uint64_t v36 = v9;
      __int16 v37 = 2114;
      uint64_t v38 = v10;
      __int16 v39 = 2114;
      id v40 = [v2 products];
      uint64_t v11 = _os_log_send_and_compose_impl( v7,  0LL,  0LL,  0LL,  &_mh_execute_header,  v8,  0LL,  "[%{public}@]: Sending purchase intents for client: %{public}@, successfully looked up products: %{public}@",  &v35,  32);
      goto LABEL_22;
    }
  }

  else
  {
    if (!v4) {
      id v5 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v12 = [v5 shouldLog];
    else {
      LODWORD(v13) = v12;
    }
    unsigned int v14 = (os_log_s *)[v5 OSLogObject];
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
      uint64_t v13 = v13;
    }
    else {
      v13 &= 2u;
    }
    if ((_DWORD)v13)
    {
      uint64_t v15 = objc_opt_class(*(void *)(a1 + 40));
      uint64_t v16 = *(void *)(a1 + 48);
      id v17 = [*(id *)(a1 + 32) error];
      int v35 = 138543874;
      uint64_t v36 = v15;
      __int16 v37 = 2114;
      uint64_t v38 = v16;
      __int16 v39 = 2114;
      id v40 = v17;
      uint64_t v11 = _os_log_send_and_compose_impl( v13,  0LL,  0LL,  0LL,  &_mh_execute_header,  v14,  16LL,  "[%{public}@]: Sending purchase intents for client: %{public}@, product lookup failed with error: %{public}@",  &v35,  32);
LABEL_22:
      uint64_t v18 = (void *)v11;
      if (v11)
      {
        uint64_t v19 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v11, 4LL);
        free(v18);
        uint64_t v29 = v19;
        SSFileLog(v5, @"%@");
      }
    }
  }

  xpc_object_t v20 = xpc_dictionary_create(0LL, 0LL, 0LL);
  xpc_dictionary_set_int64(v20, "0", 20007LL);
  xpc_object_t v21 = xpc_array_create(0LL, 0LL);
  __int128 v30 = 0u;
  __int128 v31 = 0u;
  __int128 v32 = 0u;
  __int128 v33 = 0u;
  id v22 = [v2 products];
  id v23 = [v22 countByEnumeratingWithState:&v30 objects:v34 count:16];
  if (v23)
  {
    id v24 = v23;
    uint64_t v25 = *(void *)v31;
    do
    {
      for (uint64_t i = 0LL; i != v24; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v31 != v25) {
          objc_enumerationMutation(v22);
        }
        id v27 = objc_msgSend(*(id *)(*((void *)&v30 + 1) + 8 * (void)i), "copyXPCEncoding", v29);
        if (v27)
        {
          id v28 = v27;
          xpc_array_append_value(v21, v27);
          xpc_release(v28);
        }
      }

      id v24 = [v22 countByEnumeratingWithState:&v30 objects:v34 count:16];
    }

    while (v24);
  }

  xpc_dictionary_set_value(v20, "1", v21);
  xpc_release(v21);
  objc_msgSend(objc_msgSend(*(id *)(*(void *)(a1 + 40) + 8), "outputConnection"), "sendMessage:", v20);
  xpc_release(v20);
}

void sub_1000F9FF0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

id sub_1000FA008(uint64_t a1)
{
  id result = *(id *)(*(void *)(a1 + 32) + 8LL);
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL) = result;
  return result;
}

void sub_1000FA0D0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = objc_opt_class(&OBJC_CLASS___NSString);
  id v4 = (void *)SSXPCDictionaryCopyCFObjectWithClass(v2, "1", v3);
  if ([v4 length])
  {
    id v5 = &ACSLocateCachingServer_ptr;
    id v6 = +[NSThread beginManagedContextSession](&OBJC_CLASS___NSThread, "beginManagedContextSession");
    id v7 = objc_msgSend(objc_msgSend(v6, "objectWithID:", *(void *)(*(void *)(a1 + 40) + 24)), "payments");
    __int128 v49 = 0u;
    __int128 v50 = 0u;
    __int128 v51 = 0u;
    __int128 v52 = 0u;
    id v8 = [v7 countByEnumeratingWithState:&v49 objects:v59 count:16];
    if (v8)
    {
      id v9 = v8;
      uint64_t v10 = *(void *)v50;
LABEL_4:
      uint64_t v11 = 0LL;
      while (1)
      {
        if (*(void *)v50 != v10) {
          objc_enumerationMutation(v7);
        }
        unsigned int v12 = *(void **)(*((void *)&v49 + 1) + 8 * v11);
        if (v9 == (id)++v11)
        {
          id v9 = [v7 countByEnumeratingWithState:&v49 objects:v59 count:16];
          if (v9) {
            goto LABEL_4;
          }
          goto LABEL_10;
        }
      }
    }

    else
    {
LABEL_10:
      unsigned int v12 = 0LL;
    }

    uint64_t v13 = -[NSArray initWithObjects:](objc_alloc(&OBJC_CLASS___NSArray), "initWithObjects:", v4, 0LL);
    if (v12)
    {
      unsigned int v14 = -[NSArray initWithObjects:](objc_alloc(&OBJC_CLASS___NSArray), "initWithObjects:", v12, 0LL);
      [*(id *)(a1 + 40) _cancelDownloadsForPayments:v14];

      unint64_t v15 = (unint64_t)objc_msgSend(objc_msgSend(v12, "state"), "integerValue");
      if (v15 <= 8)
      {
        unint64_t v16 = v15;
        if (((1LL << v15) & 0xC4) != 0)
        {
          id v17 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
          if (!v17) {
            id v17 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
          }
          unsigned int v18 = [v17 shouldLog];
          else {
            LODWORD(v19) = v18;
          }
          xpc_object_t v20 = (os_log_s *)[v17 OSLogObject];
          if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO)) {
            uint64_t v19 = v19;
          }
          else {
            v19 &= 2u;
          }
          if ((_DWORD)v19)
          {
            uint64_t v22 = objc_opt_class(*(void *)(a1 + 40));
            int v53 = 138543618;
            uint64_t v54 = v22;
            __int16 v55 = 2112;
            unint64_t v56 = (unint64_t)v4;
            uint64_t v23 = _os_log_send_and_compose_impl( v19,  0LL,  0LL,  0LL,  &_mh_execute_header,  v20,  1LL,  "%{public}@: Finishing purchased payment: %@",  &v53,  22);
            if (v23)
            {
              id v24 = (void *)v23;
              uint64_t v25 = +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v23,  4LL);
              free(v24);
              uint64_t v48 = v25;
              *(void *)&double v21 = SSFileLog(v17, @"%@").n128_u64[0];
            }
          }

          objc_msgSend( v12,  "setState:",  +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", 3, v21, v48));
          goto LABEL_50;
        }

        if (((1LL << v15) & 0x120) != 0)
        {
          id v33 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
          if (!v33) {
            id v33 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
          }
          unsigned int v34 = [v33 shouldLog];
          else {
            LODWORD(v35) = v34;
          }
          uint64_t v36 = (os_log_s *)[v33 OSLogObject];
          if (os_log_type_enabled(v36, OS_LOG_TYPE_INFO)) {
            uint64_t v35 = v35;
          }
          else {
            v35 &= 2u;
          }
          if ((_DWORD)v35)
          {
            uint64_t v38 = objc_opt_class(*(void *)(a1 + 40));
            int v53 = 138543874;
            uint64_t v54 = v38;
            __int16 v55 = 2048;
            unint64_t v56 = v16;
            __int16 v57 = 2112;
            __int16 v58 = v4;
            uint64_t v39 = _os_log_send_and_compose_impl( v35,  0LL,  0LL,  0LL,  &_mh_execute_header,  v36,  1LL,  "%{public}@: Finishing for state: %ld, payment: %@",  &v53,  32);
            if (v39)
            {
              id v40 = (void *)v39;
              __int16 v41 = +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v39,  4LL);
              free(v40);
              uint64_t v48 = v41;
              *(void *)&double v37 = SSFileLog(v33, @"%@").n128_u64[0];
            }
          }

          objc_msgSend(v6, "deleteObject:", v12, v37, v48);
          id v5 = &ACSLocateCachingServer_ptr;
LABEL_50:
          [*(id *)(a1 + 40) _sendPaymentsRemoved:v13];
          *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = 1;
LABEL_64:

          [v5[405] endManagedContextSession];
          goto LABEL_65;
        }
      }

      id v26 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
      if (!v26) {
        id v26 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
      }
      unsigned int v42 = [v26 shouldLog];
      else {
        LODWORD(v43) = v42;
      }
      id v44 = (os_log_s *)[v26 OSLogObject];
      if (os_log_type_enabled(v44, OS_LOG_TYPE_INFO)) {
        uint64_t v43 = v43;
      }
      else {
        v43 &= 2u;
      }
      if (!(_DWORD)v43)
      {
LABEL_63:
        objc_msgSend(*(id *)(a1 + 40), "_sendPaymentsRemoved:", v13, v30, v48);
        goto LABEL_64;
      }

      uint64_t v45 = objc_opt_class(*(void *)(a1 + 40));
      int v53 = 138543618;
      uint64_t v54 = v45;
      __int16 v55 = 2112;
      unint64_t v56 = (unint64_t)v4;
      uint64_t v32 = _os_log_send_and_compose_impl( v43,  0LL,  0LL,  0LL,  &_mh_execute_header,  v44,  1LL,  "%{public}@: Received finish for payment that is finishing or finished: %@",  &v53,  22);
    }

    else
    {
      id v26 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
      if (!v26) {
        id v26 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
      }
      unsigned int v27 = [v26 shouldLog];
      else {
        LODWORD(v2_Block_object_dispose(va, 8) = v27;
      }
      uint64_t v29 = (os_log_s *)[v26 OSLogObject];
      if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT)) {
        uint64_t v28 = v28;
      }
      else {
        v28 &= 2u;
      }
      if (!(_DWORD)v28) {
        goto LABEL_63;
      }
      uint64_t v31 = objc_opt_class(*(void *)(a1 + 40));
      int v53 = 138543618;
      uint64_t v54 = v31;
      __int16 v55 = 2112;
      unint64_t v56 = (unint64_t)v4;
      uint64_t v32 = _os_log_send_and_compose_impl( v28,  0LL,  0LL,  0LL,  &_mh_execute_header,  v29,  0LL,  "%{public}@: Finishing unknown payment: %@",  &v53,  22);
    }

    if (v32)
    {
      uint64_t v46 = (void *)v32;
      uint64_t v47 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v32, 4LL);
      free(v46);
      uint64_t v48 = v47;
      *(void *)&double v30 = SSFileLog(v26, @"%@").n128_u64[0];
    }

    goto LABEL_63;
  }

LABEL_65:
}

  return v5;
}

  __int128 v52 = (void *)objc_claimAutoreleasedReturnValue([v15[459] sharedDaemonConfig]);
  if (!v52) {
    __int128 v52 = (void *)objc_claimAutoreleasedReturnValue([v15[459] sharedConfig]);
  }
  LODWORD(v53) = objc_msgSend(v52, "shouldLog", v101);
  uint64_t v54 = (os_log_s *)objc_claimAutoreleasedReturnValue([v52 OSLogObject]);
  if (os_log_type_enabled(v54, OS_LOG_TYPE_DEFAULT)) {
    int v53 = v53;
  }
  else {
    v53 &= 2u;
  }
  __int16 v55 = &off_1002D4000;
  if ((_DWORD)v53)
  {
    unint64_t v56 = (void *)objc_opt_class(self);
    v143 = 138543362;
    v144 = v56;
    __int16 v57 = v56;
    LODWORD(v103) = 12;
    __int16 v58 = (void *)_os_log_send_and_compose_impl( v53,  0LL,  0LL,  0LL,  &_mh_execute_header,  v54,  0LL,  "%{public}@: Performing a software-library lookup operation…",  &v143,  v103);

    self = v121;
    if (v58)
    {
      uint64_t v54 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v58,  4LL));
      free(v58);
      id v102 = v54;
      SSFileLog(v52, @"%@");
      goto LABEL_75;
    }
  }

  else
  {
LABEL_75:
  }

  id v59 = -[SoftwareLibraryLookupOperation initWithItemIdentifiers:]( objc_alloc(&OBJC_CLASS___SoftwareLibraryLookupOperation),  "initWithItemIdentifiers:",  v127);
  v132 = 0LL;
  __int16 v60 = -[RedeemCodesOperation runSubOperation:returningError:]( self,  "runSubOperation:returningError:",  v59,  &v132);
  __int16 v118 = v132;
  if (!v60) {
    goto LABEL_121;
  }
  __int16 v116 = v59;
  v128 = 0u;
  v129 = 0u;
  v130 = 0u;
  v131 = 0u;
  id v126 = (id)objc_claimAutoreleasedReturnValue(-[SoftwareLibraryLookupOperation softwareLibraryItems](v59, "softwareLibraryItems"));
  id v61 = [v126 countByEnumeratingWithState:&v128 objects:v142 count:16];
  if (!v61) {
    goto LABEL_120;
  }
  __int16 v62 = v61;
  id v63 = *(void *)v129;
  uint64_t v64 = SSSoftwareLibraryItemPropertyITunesItemIdentifier;
  unsigned int v65 = SSSoftwareLibraryItemPropertyITunesVersionIdentifier;
  __int16 v123 = *(void *)v129;
  while (2)
  {
    unsigned int v66 = 0LL;
    while (2)
    {
      if (*(void *)v129 != v63) {
        objc_enumerationMutation(v126);
      }
      uint64_t v67 = *(void **)(*((void *)&v128 + 1) + 8 * v66);
      uint64_t v68 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v67, "valueForProperty:", v64, v102));
      unsigned int v69 = objc_claimAutoreleasedReturnValue([v67 valueForProperty:v65]);
      __int128 v70 = (void *)v69;
      if (v68) {
        uint64_t v71 = v69 == 0;
      }
      else {
        uint64_t v71 = 1;
      }
      if (!v71)
      {
        -[NSMutableDictionary setObject:forKey:](v124, "setObject:forKey:", v69, v68);
        goto LABEL_118;
      }

      if (!v68)
      {
        unsigned int v72 = (void *)objc_claimAutoreleasedReturnValue([v15[459] sharedDaemonConfig]);
        if (!v72) {
          unsigned int v72 = (void *)objc_claimAutoreleasedReturnValue([v15[459] sharedConfig]);
        }
        uint64_t v73 = [v72 shouldLog];
        else {
          uint64_t v74 = v73;
        }
        unsigned int v75 = (os_log_s *)objc_claimAutoreleasedReturnValue([v72 OSLogObject]);
        if (os_log_type_enabled(v75, OS_LOG_TYPE_DEFAULT)) {
          unsigned int v76 = v74;
        }
        else {
          unsigned int v76 = v74 & 2;
        }
        if ((_DWORD)v76)
        {
          uint64_t v77 = (void *)objc_opt_class(v121);
          v143 = 138543362;
          v144 = v77;
          uint64_t v78 = v77;
          LODWORD(v103) = 12;
          id v79 = (void *)_os_log_send_and_compose_impl( v76,  0LL,  0LL,  0LL,  &_mh_execute_header,  v75,  0LL,  "%{public}@: No iTunes identifier",  &v143,  v103);

          id v63 = v123;
          if (!v79) {
            goto LABEL_103;
          }
          unsigned int v75 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v79,  4LL));
          free(v79);
          id v102 = v75;
          SSFileLog(v72, @"%@");
        }

        else
        {
          id v63 = v123;
        }

LABEL_103:
        unint64_t v15 = &ACSLocateCachingServer_ptr;
        if (!v70) {
          goto LABEL_104;
        }
        goto LABEL_118;
      }

      if (!v69)
      {
LABEL_104:
        uint64_t v80 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15[459], "sharedDaemonConfig", v102));
        if (!v80) {
          uint64_t v80 = (void *)objc_claimAutoreleasedReturnValue([v15[459] sharedConfig]);
        }
        __int16 v81 = [v80 shouldLog];
        else {
          uint64_t v82 = v81;
        }
        unsigned int v83 = (os_log_s *)objc_claimAutoreleasedReturnValue([v80 OSLogObject]);
        if (os_log_type_enabled(v83, OS_LOG_TYPE_DEFAULT)) {
          id v84 = v82;
        }
        else {
          id v84 = v82 & 2;
        }
        if ((_DWORD)v84)
        {
          uint64_t v85 = (void *)objc_opt_class(v121);
          v143 = 138543362;
          v144 = v85;
          int v86 = v85;
          LODWORD(v103) = 12;
          id v87 = (void *)_os_log_send_and_compose_impl( v84,  0LL,  0LL,  0LL,  &_mh_execute_header,  v83,  0LL,  "%{public}@: No installed external version",  &v143,  v103);

          id v63 = v123;
          if (v87)
          {
            unsigned int v83 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v87,  4LL));
            free(v87);
            id v102 = v83;
            SSFileLog(v80, @"%@");
            goto LABEL_116;
          }
        }

        else
        {
          id v63 = v123;
LABEL_116:
        }

        unint64_t v15 = &ACSLocateCachingServer_ptr;
      }

id sub_1000FA908(uint64_t a1, void *a2)
{
  return [a2 finishDownloadsWithIdentifiers:*(void *)(a1 + 32) finalPhase:SSDownloadPhaseCanceled];
}

void sub_1000FAD50(uint64_t a1)
{
  id v2 = +[NSThread beginManagedContextSession](&OBJC_CLASS___NSThread, "beginManagedContextSession");
  id v3 = [v2 objectWithID:*(void *)(a1 + 32)];
  unsigned __int8 v4 = [*(id *)(a1 + 40) success];
  id v5 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  id v6 = v5;
  if ((v4 & 1) != 0)
  {
    if (!v5) {
      id v6 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v7 = [v6 shouldLog];
    else {
      LODWORD(v_Block_object_dispose(va, 8) = v7;
    }
    id v9 = (os_log_s *)[v6 OSLogObject];
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO)) {
      uint64_t v8 = v8;
    }
    else {
      v8 &= 2u;
    }
    if ((_DWORD)v8)
    {
      uint64_t v11 = objc_opt_class(*(void *)(a1 + 48));
      int v26 = 138543618;
      uint64_t v27 = v11;
      __int16 v28 = 2112;
      id v29 = v3;
      uint64_t v12 = _os_log_send_and_compose_impl( v8,  0LL,  0LL,  0LL,  &_mh_execute_header,  v9,  1LL,  "%{public}@: Buy finished for payment: %@",  &v26,  22);
      if (v12)
      {
        uint64_t v13 = (void *)v12;
        unsigned int v14 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v12, 4LL);
        free(v13);
        uint64_t v25 = v14;
        *(void *)&double v10 = SSFileLog(v6, @"%@").n128_u64[0];
      }
    }

    id v15 = objc_msgSend( objc_msgSend(v3, "client", v10, v25),  "replacePayment:withPurchaseResponse:",  v3,  objc_msgSend(*(id *)(a1 + 40), "response"));
    objc_msgSend(*(id *)(a1 + 48), "_cancelDownloadsForDownloadIDs:", objc_msgSend(v15, "removedDownloadIDs"));
    [*(id *)(a1 + 48) _sendMergeResults:v15];
  }

  else
  {
    if (!v5) {
      id v6 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v16 = [v6 shouldLog];
    else {
      LODWORD(v17) = v16;
    }
    unsigned int v18 = (os_log_s *)[v6 OSLogObject];
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v17 = v17;
    }
    else {
      v17 &= 2u;
    }
    if ((_DWORD)v17)
    {
      uint64_t v20 = objc_opt_class(*(void *)(a1 + 48));
      id v21 = [*(id *)(a1 + 40) error];
      int v26 = 138543874;
      uint64_t v27 = v20;
      __int16 v28 = 2114;
      id v29 = v21;
      __int16 v30 = 2112;
      id v31 = v3;
      uint64_t v22 = _os_log_send_and_compose_impl( v17,  0LL,  0LL,  0LL,  &_mh_execute_header,  v18,  0LL,  "%{public}@: Buy failed with error: %{public}@ for payment: %@",  &v26,  32);
      if (v22)
      {
        uint64_t v23 = (void *)v22;
        id v24 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v22, 4LL);
        free(v23);
        uint64_t v25 = v24;
        *(void *)&double v19 = SSFileLog(v6, @"%@").n128_u64[0];
      }
    }

    objc_msgSend(v3, "setFailedWithError:", objc_msgSend(*(id *)(a1 + 40), "error", v19, v25));
    objc_msgSend( *(id *)(a1 + 48),  "_sendPaymentsUpdated:",  +[NSArray arrayWithObjects:](NSArray, "arrayWithObjects:", v3, 0));
  }

  sub_10003E244(v2);
  +[NSThread endManagedContextSession](&OBJC_CLASS___NSThread, "endManagedContextSession");
  sub_1000FB0C8( *(void *)(a1 + 56),  (char)[*(id *)(a1 + 40) success],  (uint64_t)objc_msgSend(*(id *)(a1 + 40), "error"));
}

void sub_1000FB0C8(uint64_t a1, char a2, uint64_t a3)
{
  if (a1)
  {
    if (qword_1003A3448 != -1) {
      dispatch_once(&qword_1003A3448, &stru_10034E8A0);
    }
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1000FD98C;
    block[3] = &unk_10034E8C8;
    char v7 = a2;
    void block[4] = a3;
    void block[5] = a1;
    dispatch_async((dispatch_queue_t)qword_1003A3440, block);
  }

void sub_1000FB1C0(uint64_t a1)
{
  id v2 = +[NSThread beginManagedContextSession](&OBJC_CLASS___NSThread, "beginManagedContextSession");
  id v3 = [v2 objectWithID:*(void *)(a1 + 32)];
  unsigned int v4 = [*(id *)(a1 + 40) success];
  id v5 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  id v6 = v5;
  if (v4)
  {
    if (!v5) {
      id v6 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v7 = [v6 shouldLog];
    else {
      LODWORD(v_Block_object_dispose(va, 8) = v7;
    }
    id v9 = (os_log_s *)[v6 OSLogObject];
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO)) {
      uint64_t v8 = v8;
    }
    else {
      v8 &= 2u;
    }
    if ((_DWORD)v8)
    {
      uint64_t v11 = objc_opt_class(*(void *)(a1 + 48));
      int v25 = 138543618;
      uint64_t v26 = v11;
      __int16 v27 = 2112;
      id v28 = v3;
      uint64_t v12 = _os_log_send_and_compose_impl( v8,  0LL,  0LL,  0LL,  &_mh_execute_header,  v9,  1LL,  "%{public}@: Deleting payment after finish: %@",  &v25,  22);
      if (v12)
      {
        uint64_t v13 = (void *)v12;
        unsigned int v14 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v12, 4LL);
        free(v13);
        id v24 = v14;
        *(void *)&double v10 = SSFileLog(v6, @"%@").n128_u64[0];
      }
    }

    objc_msgSend(v2, "deleteObject:", v3, v10, v24);
  }

  else
  {
    if (!v5) {
      id v6 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v15 = [v6 shouldLog];
    else {
      LODWORD(v16) = v15;
    }
    uint64_t v17 = (os_log_s *)[v6 OSLogObject];
    if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO)) {
      uint64_t v16 = v16;
    }
    else {
      v16 &= 2u;
    }
    if ((_DWORD)v16)
    {
      uint64_t v19 = objc_opt_class(*(void *)(a1 + 48));
      int v25 = 138543618;
      uint64_t v26 = v19;
      __int16 v27 = 2112;
      id v28 = v3;
      uint64_t v20 = _os_log_send_and_compose_impl( v16,  0LL,  0LL,  0LL,  &_mh_execute_header,  v17,  1LL,  "%{public}@: Flagging payment as transient failed: %@",  &v25,  22);
      if (v20)
      {
        id v21 = (void *)v20;
        uint64_t v22 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v20, 4LL);
        free(v21);
        id v24 = v22;
        *(void *)&double v18 = SSFileLog(v6, @"%@").n128_u64[0];
      }
    }

    uint64_t v23 = *(void **)(*(void *)(a1 + 48) + 80LL);
    if (!v23)
    {
      *(void *)(*(void *)(a1 + 48) + 80LL) = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
      uint64_t v23 = *(void **)(*(void *)(a1 + 48) + 80LL);
    }

    objc_msgSend(v23, "addObject:", *(void *)(a1 + 32), v18, v24);
  }

  sub_10003E244(v2);
  +[NSThread endManagedContextSession](&OBJC_CLASS___NSThread, "endManagedContextSession");
  sub_1000FB0C8( *(void *)(a1 + 56),  (char)[*(id *)(a1 + 40) success],  (uint64_t)objc_msgSend(*(id *)(a1 + 40), "error"));
}

id sub_1000FB6F4(uint64_t a1)
{
  return objc_msgSend( +[Daemon daemon](Daemon, "daemon"),  "releaseKeepAliveAssertion:",  @"com.apple.itunesstored.StoreKitClient");
}

void sub_1000FB774(uint64_t a1)
{
  *(void *)(*(void *)(a1 + 32) + 56LL) = 0LL;
  id v2 = +[NSThread beginManagedContextSession](&OBJC_CLASS___NSThread, "beginManagedContextSession");
  id v3 = v2;
  if (*(void *)(*(void *)(a1 + 32) + 24LL)) {
    id v4 = objc_msgSend(v2, "objectWithID:");
  }
  else {
    id v4 = 0LL;
  }
  if (([*(id *)(a1 + 40) success] & 1) != 0
    || (id v5 = [*(id *)(a1 + 40) error], (ISErrorIsEqual(v5, SSErrorDomain, 129) & 1) == 0))
  {
    objc_msgSend(v4, "setLastQueueCheckDate:", +[NSDate date](NSDate, "date"));
  }

  unsigned __int8 v6 = [*(id *)(a1 + 40) success];
  id v7 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  id v8 = v7;
  if ((v6 & 1) != 0)
  {
    if (!v7) {
      id v8 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v9 = [v8 shouldLog];
    else {
      LODWORD(v10) = v9;
    }
    uint64_t v11 = (os_log_s *)[v8 OSLogObject];
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO)) {
      uint64_t v10 = v10;
    }
    else {
      v10 &= 2u;
    }
    if ((_DWORD)v10)
    {
      uint64_t v13 = objc_opt_class(*(void *)(a1 + 32));
      id v14 = [*(id *)(a1 + 32) _clientIdentifier];
      int v36 = 138543618;
      uint64_t v37 = v13;
      __int16 v38 = 2112;
      id v39 = v14;
      uint64_t v15 = _os_log_send_and_compose_impl( v10,  0LL,  0LL,  0LL,  &_mh_execute_header,  v11,  1LL,  "%{public}@: Refresh finished: %@",  &v36,  22);
      if (v15)
      {
        uint64_t v16 = (void *)v15;
        uint64_t v17 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v15, 4LL);
        free(v16);
        unsigned int v34 = v17;
        *(void *)&double v12 = SSFileLog(v8, @"%@").n128_u64[0];
      }
    }

    objc_msgSend(*(id *)(a1 + 32), "_setClientState:", 2, v12, v34);
    id v18 = [*(id *)(a1 + 40) paymentsResponse];
    if (v18)
    {
      id v19 = v18;
      id v20 = [*(id *)(a1 + 40) reason];
      id v21 = [v4 mergeResponse:v19 withOptions:3];
      if ([v21 didChange])
      {
        objc_msgSend(*(id *)(a1 + 32), "_cancelDownloadsForDownloadIDs:", objc_msgSend(v21, "removedDownloadIDs"));
LABEL_36:
        [*(id *)(*(void *)(a1 + 32) + 8) sendCoalescedMessageWithIdentifier:20001];
        goto LABEL_37;
      }

      if (v20 == (id)3 || !v20) {
        goto LABEL_36;
      }
    }
  }

  else
  {
    if (!v7) {
      id v8 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v22 = [v8 shouldLog];
    else {
      LODWORD(v23) = v22;
    }
    id v24 = (os_log_s *)[v8 OSLogObject];
    if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v23 = v23;
    }
    else {
      v23 &= 2u;
    }
    if ((_DWORD)v23)
    {
      uint64_t v26 = objc_opt_class(*(void *)(a1 + 32));
      id v27 = [*(id *)(a1 + 32) _clientIdentifier];
      id v28 = [*(id *)(a1 + 40) error];
      int v36 = 138543874;
      uint64_t v37 = v26;
      __int16 v38 = 2112;
      id v39 = v27;
      __int16 v40 = 2114;
      id v41 = v28;
      uint64_t v29 = _os_log_send_and_compose_impl( v23,  0LL,  0LL,  0LL,  &_mh_execute_header,  v24,  0LL,  "%{public}@: Refresh failed with error: %@: %{public}@",  &v36,  32);
      if (v29)
      {
        __int16 v30 = (void *)v29;
        id v31 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v29, 4LL);
        free(v30);
        unsigned int v34 = v31;
        *(void *)&double v25 = SSFileLog(v8, @"%@").n128_u64[0];
      }
    }

    objc_msgSend(*(id *)(a1 + 32), "_setClientState:", 3, v25, v34);
  }

id sub_1000FBBC8(uint64_t a1)
{
  return -[NSNotificationCenter postNotificationName:object:]( +[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"),  "postNotificationName:object:",  @"StoreKitClientRefreshDidFinishNotification",  *(void *)(a1 + 32));
}

id sub_1000FBC4C(uint64_t a1)
{
  *(void *)(*(void *)(a1 + 32) + 64LL) = 0LL;
  if (![*(id *)(a1 + 40) success]
    || ([*(id *)(a1 + 40) isPartialFailure] & 1) != 0)
  {
    id v2 = [*(id *)(a1 + 40) error];
    if (!v2) {
      id v2 = (id)SSError(SSErrorDomain, 100LL, 0LL, 0LL);
    }
    id v3 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v3) {
      id v3 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v4 = [v3 shouldLog];
    else {
      LODWORD(v5) = v4;
    }
    unsigned __int8 v6 = (os_log_s *)[v3 OSLogObject];
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v5 = v5;
    }
    else {
      v5 &= 2u;
    }
    if (!(_DWORD)v5) {
      return objc_msgSend(*(id *)(a1 + 32), "_sendRestoreCompletedWithError:", v2, v7, v18);
    }
    uint64_t v8 = objc_opt_class(*(void *)(a1 + 32));
    id v9 = [*(id *)(a1 + 32) _clientIdentifier];
    int v19 = 138543874;
    uint64_t v20 = v8;
    __int16 v21 = 2112;
    id v22 = v9;
    __int16 v23 = 2114;
    id v24 = v2;
    uint64_t v10 = (void *)_os_log_send_and_compose_impl( v5,  0LL,  0LL,  0LL,  &_mh_execute_header,  v6,  0LL,  "%{public}@: Restore completed transactions failed for client: %@ with error: %{public}@",  &v19,  32);
    if (!v10) {
      return objc_msgSend(*(id *)(a1 + 32), "_sendRestoreCompletedWithError:", v2, v7, v18);
    }
LABEL_26:
    uint64_t v16 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v10, 4LL);
    free(v10);
    id v18 = v16;
    *(void *)&double v7 = SSFileLog(v3, @"%@").n128_u64[0];
    return objc_msgSend(*(id *)(a1 + 32), "_sendRestoreCompletedWithError:", v2, v7, v18);
  }

  id v3 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  if (!v3) {
    id v3 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  unsigned int v11 = [v3 shouldLog];
  else {
    LODWORD(v12) = v11;
  }
  uint64_t v13 = (os_log_s *)[v3 OSLogObject];
  if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO)) {
    uint64_t v12 = v12;
  }
  else {
    v12 &= 2u;
  }
  if (!(_DWORD)v12)
  {
    id v2 = 0LL;
    return objc_msgSend(*(id *)(a1 + 32), "_sendRestoreCompletedWithError:", v2, v7, v18);
  }

  uint64_t v14 = objc_opt_class(*(void *)(a1 + 32));
  id v15 = [*(id *)(a1 + 32) _clientIdentifier];
  int v19 = 138543618;
  uint64_t v20 = v14;
  __int16 v21 = 2112;
  id v22 = v15;
  uint64_t v10 = (void *)_os_log_send_and_compose_impl( v12,  0LL,  0LL,  0LL,  &_mh_execute_header,  v13,  1LL,  "%{public}@: Restore completed transactions finished for client: %@",  &v19,  22);
  id v2 = 0LL;
  if (v10) {
    goto LABEL_26;
  }
  return objc_msgSend(*(id *)(a1 + 32), "_sendRestoreCompletedWithError:", v2, v7, v18);
}

void *sub_1000FC06C(void *result)
{
  if (*(void *)(result[4] + 24LL))
  {
    uint64_t v1 = result;
    id v2 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v2) {
      id v2 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v3 = [v2 shouldLog];
    else {
      LODWORD(v4) = v3;
    }
    uint64_t v5 = (os_log_s *)[v2 OSLogObject];
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO)) {
      uint64_t v4 = v4;
    }
    else {
      v4 &= 2u;
    }
    if ((_DWORD)v4)
    {
      uint64_t v7 = objc_opt_class(v1[4]);
      id v8 = [(id)v1[4] _clientIdentifier];
      int v14 = 138543618;
      uint64_t v15 = v7;
      __int16 v16 = 2112;
      id v17 = v8;
      uint64_t v9 = _os_log_send_and_compose_impl( v4,  0LL,  0LL,  0LL,  &_mh_execute_header,  v5,  1LL,  "%{public}@: Received restore batch response for client: %@",  &v14,  22);
      if (v9)
      {
        uint64_t v10 = (void *)v9;
        unsigned int v11 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v9, 4LL);
        free(v10);
        uint64_t v13 = v11;
        *(void *)&double v6 = SSFileLog(v2, @"%@").n128_u64[0];
      }
    }

    id v12 = objc_msgSend( objc_msgSend( +[NSThread beginManagedContextSession](NSThread, "beginManagedContextSession", v6, v13),  "objectWithID:",  *(void *)(v1[4] + 24)),  "mergeResponse:withOptions:",  v1[5],  1);
    objc_msgSend((id)v1[4], "_cancelDownloadsForDownloadIDs:", objc_msgSend(v12, "removedDownloadIDs"));
    [(id)v1[4] _sendMergeResults:v12];
    return +[NSThread endManagedContextSession](&OBJC_CLASS___NSThread, "endManagedContextSession");
  }

  return result;
}

id sub_1000FC78C(uint64_t a1)
{
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "object"), "_finishLoadQueueOperation:", *(void *)(a1 + 40));
}

id sub_1000FCA58(uint64_t a1, uint64_t a2)
{
  id v4 = [*(id *)(a1 + 32) object];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  void v7[2] = sub_1000FCAE4;
  v7[3] = &unk_10034E830;
  BOOL v10 = (unint64_t)(a2 - 1) < 2;
  __int128 v5 = *(_OWORD *)(a1 + 48);
  __int128 v8 = *(_OWORD *)(a1 + 32);
  __int128 v9 = v5;
  [v4 _dispatchAsync:v7];
  return [*(id *)(a1 + 48) setCompletion:0];
}

id sub_1000FCAE4(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) object];
  id v3 = +[NSThread beginManagedContextSession](&OBJC_CLASS___NSThread, "beginManagedContextSession");
  id v4 = [v3 objectWithID:*(void *)(a1 + 40)];
  int v5 = *(unsigned __int8 *)(a1 + 64);
  id v6 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  id v7 = v6;
  if (v5)
  {
    if (!v6) {
      id v7 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v8 = [v7 shouldLog];
    else {
      LODWORD(v9) = v8;
    }
    BOOL v10 = (os_log_s *)[v7 OSLogObject];
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v9 = v9;
    }
    else {
      v9 &= 2u;
    }
    if ((_DWORD)v9)
    {
      int v26 = 138543618;
      uint64_t v27 = objc_opt_class(v2);
      __int16 v28 = 2112;
      id v29 = v4;
      uint64_t v12 = _os_log_send_and_compose_impl( v9,  0LL,  0LL,  0LL,  &_mh_execute_header,  v10,  0LL,  "%{public}@: Privacy acknowledgement completed for payment: %@",  &v26,  22);
      if (v12)
      {
        uint64_t v13 = (void *)v12;
        int v14 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v12, 4LL);
        free(v13);
        double v25 = v14;
        *(void *)&double v11 = SSFileLog(v7, @"%@").n128_u64[0];
      }
    }

    objc_msgSend(v2, "_sendBuyRequestForPayment:withCompletionBlock:", v4, *(void *)(a1 + 56), v11, v25);
  }

  else
  {
    if (!v6) {
      id v7 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v15 = [v7 shouldLog];
    else {
      LODWORD(v16) = v15;
    }
    id v17 = (os_log_s *)[v7 OSLogObject];
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v16 = v16;
    }
    else {
      v16 &= 2u;
    }
    if ((_DWORD)v16)
    {
      uint64_t v19 = objc_opt_class(v2);
      id v20 = [*(id *)(a1 + 48) error];
      int v26 = 138543874;
      uint64_t v27 = v19;
      __int16 v28 = 2114;
      id v29 = v20;
      __int16 v30 = 2112;
      id v31 = v4;
      uint64_t v21 = _os_log_send_and_compose_impl( v16,  0LL,  0LL,  0LL,  &_mh_execute_header,  v17,  0LL,  "%{public}@: Privacy acknowledgement failed with error: %{public}@ for payment: %@",  &v26,  32);
      if (v21)
      {
        id v22 = (void *)v21;
        __int16 v23 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v21, 4LL);
        free(v22);
        double v25 = v23;
        *(void *)&double v18 = SSFileLog(v7, @"%@").n128_u64[0];
      }
    }

    objc_msgSend(v4, "setFailedWithError:", objc_msgSend(*(id *)(a1 + 48), "error", v18, v25));
    sub_10003E244(v3);
    objc_msgSend( v2,  "_sendPaymentsUpdated:",  +[NSArray arrayWithObjects:](NSArray, "arrayWithObjects:", v4, 0));
    sub_1000FB0C8( *(void *)(a1 + 56),  (char)[*(id *)(a1 + 48) success],  (uint64_t)objc_msgSend(*(id *)(a1 + 48), "error"));
  }

  return +[NSThread endManagedContextSession](&OBJC_CLASS___NSThread, "endManagedContextSession");
}

id sub_1000FD018(uint64_t a1)
{
  return [*(id *)(a1 + 40) setCompletionBlock:0];
}

id sub_1000FD1D4(uint64_t a1)
{
  return [*(id *)(a1 + 40) setCompletionBlock:0];
}

id sub_1000FD7FC(uint64_t a1)
{
  id v2 = objc_msgSend( objc_msgSend( +[NSThread beginManagedContextSession](NSThread, "beginManagedContextSession"),  "objectWithID:",  objc_msgSend(*(id *)(a1 + 32), "paymentID")),  "transactionIdentifier");
  xpc_object_t v3 = xpc_dictionary_create(0LL, 0LL, 0LL);
  xpc_dictionary_set_int64(v3, "0", 20008LL);
  SSXPCDictionarySetCFObject(v3, "1", v2);
  SSXPCDictionarySetCFObject(v3, "2", *(void *)(a1 + 40));
  id v4 = dispatch_semaphore_create(0LL);
  id v5 = [*(id *)(*(void *)(a1 + 48) + 8) outputConnection];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  void v8[2] = sub_1000FD924;
  v8[3] = &unk_10034E880;
  uint64_t v6 = *(void *)(a1 + 56);
  void v8[4] = v4;
  void v8[5] = v6;
  [v5 sendMessage:v3 withReply:v8];
  if (dispatch_semaphore_wait(v4, 0x3B9ACA00uLL) >= 1) {
    *(_BYTE *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL) = 0;
  }
  return +[NSThread endManagedContextSession](&OBJC_CLASS___NSThread, "endManagedContextSession");
}

uint64_t sub_1000FD924(uint64_t a1, xpc_object_t xdict)
{
  *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = xpc_dictionary_get_BOOL(xdict, "0");
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1000FD964(id a1)
{
  qword_1003A3440 = (uint64_t)dispatch_queue_create("com.apple.itunesstored.StoreKitClient.completion", 0LL);
}

uint64_t sub_1000FD98C(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(unsigned __int8 *)(a1 + 48),  *(void *)(a1 + 32));
}

void sub_1000FE518( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
}

void sub_1000FE544(uint64_t a1, uint64_t a2)
{
}

void sub_1000FE554(uint64_t a1)
{
}

id sub_1000FE560(uint64_t a1, void *a2, void *a3)
{
  if ([a2 isEqualToString:SSLookupParameterItemIdentifiers]) {
    return objc_msgSend( *(id *)(a1 + 32),  "setItemIdentifiers:",  objc_msgSend(a3, "componentsSeparatedByString:", @","));
  }
  unsigned int v7 = [a2 isEqualToString:SSLookupParameterCaller];
  unsigned int v8 = *(void **)(a1 + 32);
  if (v7) {
    return [v8 _setCaller:a3];
  }
  else {
    return [v8 setValue:a3 forRequestParameter:a2];
  }
}

id sub_1000FE608(uint64_t a1, uint64_t a2, void *a3)
{
  id result = a3;
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL) = result;
  *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = a2 != 0;
  return result;
}

void sub_1000FE984( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v12 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

id sub_1000FE9CC(uint64_t a1, uint64_t a2, void *a3)
{
  id result = a3;
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL) = result;
  *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = a2 != 0;
  return result;
}

void sub_1000FF4DC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
}

uint64_t sub_1000FF518(uint64_t a1, uint64_t a2, xpc_object_t object)
{
  if (xpc_get_type(object) == (xpc_type_t)&_xpc_type_array)
  {
    uint64_t v6 = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", a2);
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472LL;
    void v8[2] = sub_1000FF5C4;
    v8[3] = &unk_10034E958;
    uint64_t v10 = *(void *)(a1 + 48);
    void v8[4] = v6;
    __int128 v9 = *(_OWORD *)(a1 + 32);
    xpc_array_apply(object, v8);
  }

  return 1LL;
}

uint64_t sub_1000FF5C4(uint64_t a1, int a2, xpc_object_t object)
{
  if (xpc_get_type(object) == (xpc_type_t)&_xpc_type_dictionary)
  {
    id v5 = -[DownloadAsset initWithClientXPCAsset:]( objc_alloc(&OBJC_CLASS___DownloadAsset),  "initWithClientXPCAsset:",  object);
    if (v5)
    {
      uint64_t v6 = v5;
      id v7 = -[DownloadAsset valueForProperty:](v5, "valueForProperty:", @"url");
      if (!v7
        || -[NSString caseInsensitiveCompare:]( -[NSURL scheme](+[NSURL URLWithString:](&OBJC_CLASS___NSURL, "URLWithString:", v7), "scheme"),  "caseInsensitiveCompare:",  @"file") == NSOrderedSame)
      {
        ++*(void *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL);
      }

      uint64_t v8 = *(void *)(*(void *)(a1 + 56) + 8LL);
      if (*(_BYTE *)(v8 + 24))
      {
        unsigned __int8 v9 = 1;
      }

      else
      {
        unsigned __int8 v9 = objc_msgSend( -[DownloadAsset valueForProperty:](v6, "valueForProperty:", @"is_external"),  "BOOLValue");
        uint64_t v8 = *(void *)(*(void *)(a1 + 56) + 8LL);
      }

      *(_BYTE *)(v8 + 24) = v9;
      -[DownloadAsset setValue:forProperty:](v6, "setValue:forProperty:", *(void *)(a1 + 32), @"asset_type");
      -[DownloadAsset setValue:forProperty:]( v6,  "setValue:forProperty:",  +[NSNumber numberWithInteger:]( NSNumber,  "numberWithInteger:",  [*(id *)(a1 + 40) count]),  @"asset_order");
      [*(id *)(a1 + 40) addObject:v6];
    }
  }

  return 1LL;
}

void sub_100100204(uint64_t a1, uint64_t a2)
{
  id v4 = [*(id *)(a1 + 32) sizeLimitForNetworkType:a2];
  id v5 = objc_alloc_init(&OBJC_CLASS___SSDownloadPolicyRule);
  [v5 addNetworkType:a2];
  [v5 setDownloadSizeLimit:v4];
  [*(id *)(*(void *)(a1 + 40) + 16) unionPolicyRule:v5];
}

BOOL sub_100100EE4(void *a1)
{
  id v1 = a1;
  id v2 = (void *)objc_claimAutoreleasedReturnValue([v1 domain]);
  if ([v2 isEqualToString:AVFoundationErrorDomain])
  {
    BOOL v3 = [v1 code] == (id)-11903;
    goto LABEL_14;
  }

  if ([v2 isEqualToString:SSErrorDomain])
  {
    id v4 = [v1 code];
    BOOL v3 = 1LL;
    if (v4 != (id)8 && v4 != (id)133) {
LABEL_6:
    }
      BOOL v3 = sub_100100FF0(v1);
  }

  else
  {
    if (![v2 isEqualToString:NSURLErrorDomain])
    {
      BOOL v3 = 0LL;
      goto LABEL_14;
    }

    id v5 = [v1 code];
    BOOL v3 = 1LL;
    if (((unint64_t)v5 + 1011 > 0xA || ((1LL << (v5 - 13)) & 0x589) == 0)
      && v5 != (id)-1102LL
      && v5 != (id)-1100LL)
    {
      goto LABEL_6;
    }
  }

BOOL sub_100100FF0(void *a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue([a1 userInfo]);
  id v2 = (void *)objc_claimAutoreleasedReturnValue([v1 objectForKey:SSErrorHTTPStatusCodeKey]);

  if (v2) {
    BOOL v3 = (uint64_t)[v2 integerValue] > 399;
  }
  else {
    BOOL v3 = 0LL;
  }

  return v3;
}

uint64_t sub_100101054(void *a1)
{
  id v1 = a1;
  if ((ISErrorIsEqual(v1, AVFoundationErrorDomain, -11828LL) & 1) != 0) {
    uint64_t IsEqual = 1LL;
  }
  else {
    uint64_t IsEqual = ISErrorIsEqual(v1, AVFoundationErrorDomain, -11850LL);
  }

  return IsEqual;
}

uint64_t sub_1001010B4(void *a1)
{
  id v1 = a1;
  id v2 = (void *)objc_claimAutoreleasedReturnValue([v1 domain]);
  uint64_t v3 = (uint64_t)[v2 isEqualToString:AVFoundationErrorDomain];

  if ((_DWORD)v3)
  {
    id v4 = [v1 code];
    uint64_t v3 = 1LL;
    if (v4 != (id)-11903LL && v4 != (id)-11900LL)
    {
      id v5 = (void *)objc_claimAutoreleasedReturnValue([v1 userInfo]);
      uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKey:NSUnderlyingErrorKey]);

      if ([v6 code] == (id)-12540)
      {
        id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 domain]);
        uint64_t v3 = (uint64_t)[v7 isEqualToString:NSOSStatusErrorDomain];
      }

      else
      {
        uint64_t v3 = 0LL;
      }
    }
  }

  return v3;
}

uint64_t sub_1001011A4(uint64_t a1)
{
  return ISErrorIsEqual(a1, SSErrorDomain, 115LL) ^ 1;
}

LABEL_152:
  return v51;
}

                -[BundleValidator _removeScratchDirectory:](self, "_removeScratchDirectory:", v45, v107);
                __int16 v28 = v48;
                goto LABEL_153;
              }

              id v87 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
              if (!v87) {
                id v87 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
              }
              __int16 v88 = objc_msgSend(v87, "shouldLog", v107);
              else {
                id v89 = v88;
              }
              __int16 v90 = (os_log_s *)objc_claimAutoreleasedReturnValue([v87 OSLogObject]);
              if (os_log_type_enabled(v90, OS_LOG_TYPE_ERROR)) {
                id v91 = v89;
              }
              else {
                id v91 = v89 & 2;
              }
              if ((_DWORD)v91)
              {
                v92 = (void *)objc_opt_class(self);
                v93 = self->_bundleIdentifier;
                v94 = self->_sourceURL;
                __int128 v112 = 138412802;
                uint64_t v113 = (uint64_t)v92;
                int v114 = 2112;
                v115 = (ssize_t)v93;
                *(_WORD *)__int16 v116 = 2112;
                *(void *)&v116[2] = v94;
                int v95 = v92;
                LODWORD(v109) = 32;
                v96 = (void *)_os_log_send_and_compose_impl( v91,  0LL,  0LL,  0LL,  &_mh_execute_header,  v90,  16LL,  "%@: Invalid scratch directory for bundlerIdenfier: %@ path: %@",  &v112,  v109);

                if (!v96)
                {
LABEL_136:

                  id v20 = 0LL;
                  goto LABEL_137;
                }

                __int16 v90 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v96,  4LL));
                free(v96);
                id v107 = v90;
                SSFileLog(v87, @"%@");
              }

              goto LABEL_136;
            }

            unsigned int v65 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
            if (!v65) {
              unsigned int v65 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
            }
            unsigned int v75 = objc_msgSend(v65, "shouldLog", v107);
            else {
              unsigned int v76 = v75;
            }
            uint64_t v68 = (os_log_s *)objc_claimAutoreleasedReturnValue([v65 OSLogObject]);
            if (os_log_type_enabled(v68, OS_LOG_TYPE_ERROR)) {
              uint64_t v77 = v76;
            }
            else {
              uint64_t v77 = v76 & 2;
            }
            if ((_DWORD)v77)
            {
              WORD2(v113) = 1024;
              HIWORD(v113) = SBYTE5(v111);
              *(_DWORD *)__int16 v116 = SHIBYTE(v111);
              *(_WORD *)&v116[4] = 1024;
              id v117 = 1024;
              *(_DWORD *)__int16 v118 = 75;
              *(_WORD *)&v118[4] = 1024;
              *(_DWORD *)&v118[6] = 3;
              id v119 = 1024;
              __int16 v120 = 4;
              uint64_t v78 = (void *)_os_log_send_and_compose_impl( v77,  0LL,  0LL,  0LL,  &_mh_execute_header,  v68,  16LL,  "File starts with 0x%02hhx%02hhx%02hhx%02hhx; expected 0x%02hhx%02hhx%02hhx%02hhx",
                              &v112,
                              50,
                              (_DWORD)v110,
                              (_DWORD)v111,
                              67110912,
                              HIDWORD(v113),
                              SBYTE6(v111),
                              *(_DWORD *)&v116[2]);

              if (!v78)
              {
LABEL_104:

                close(v43);
                goto LABEL_105;
              }

              uint64_t v68 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v78,  4LL));
              free(v78);
              v108 = v68;
              SSFileLog(v65, @"%@");
            }
          }

          else
          {
            uint64_t v64 = v44;
            unsigned int v65 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
            if (!v65) {
              unsigned int v65 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
            }
            unsigned int v66 = objc_msgSend(v65, "shouldLog", v107);
            else {
              uint64_t v67 = v66;
            }
            uint64_t v68 = (os_log_s *)objc_claimAutoreleasedReturnValue([v65 OSLogObject]);
            if (os_log_type_enabled(v68, OS_LOG_TYPE_ERROR)) {
              unsigned int v69 = v67;
            }
            else {
              unsigned int v69 = v67 & 2;
            }
            if ((_DWORD)v69)
            {
              __int128 v70 = v4;
              uint64_t v71 = [v41 fileSystemRepresentation];
              unsigned int v72 = __error();
              uint64_t v73 = strerror(*v72);
              __int128 v112 = 134218754;
              uint64_t v113 = 4LL;
              int v114 = 2048;
              v115 = v64;
              *(_WORD *)__int16 v116 = 2080;
              *(void *)&v116[2] = v71;
              id v117 = 2080;
              *(void *)__int16 v118 = v73;
              LODWORD(v109) = 42;
              uint64_t v74 = (void *)_os_log_send_and_compose_impl( v69,  0LL,  0LL,  0LL,  &_mh_execute_header,  v68,  16LL,  "Failed to read %lu bytes (got %ld) from start of %s : %s",  &v112,  v109,  v110,  v111);

              if (!v74)
              {
                id v4 = v70;
                goto LABEL_104;
              }

              uint64_t v68 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v74,  4LL));
              free(v74);
              v108 = v68;
              SSFileLog(v65, @"%@");
              id v4 = v70;
            }
          }

          goto LABEL_104;
        }

        __int128 v49 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
        if (!v49) {
          __int128 v49 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
        }
        __int128 v50 = objc_msgSend(v49, "shouldLog", v107);
        else {
          __int128 v51 = v50;
        }
        __int128 v52 = (os_log_s *)objc_claimAutoreleasedReturnValue([v49 OSLogObject]);
        if (os_log_type_enabled(v52, OS_LOG_TYPE_ERROR)) {
          int v53 = v51;
        }
        else {
          int v53 = v51 & 2;
        }
        if ((_DWORD)v53)
        {
          uint64_t v54 = [v41 fileSystemRepresentation];
          __int16 v55 = __error();
          unint64_t v56 = strerror(*v55);
          __int128 v112 = 136315394;
          uint64_t v113 = (uint64_t)v54;
          int v114 = 2080;
          v115 = (ssize_t)v56;
          LODWORD(v109) = 22;
          __int16 v57 = (void *)_os_log_send_and_compose_impl( v53,  0LL,  0LL,  0LL,  &_mh_execute_header,  v52,  16LL,  "Failed to open %s : %s",  (const char *)&v112,  v109);

          if (!v57)
          {
LABEL_68:

LABEL_105:
            uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
            if (!v10) {
              uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
            }
            id v79 = objc_msgSend(v10, "shouldLog", v108);
            else {
              uint64_t v80 = v79;
            }
            uint64_t v13 = (os_log_s *)objc_claimAutoreleasedReturnValue([v10 OSLogObject]);
            if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
              __int16 v81 = v80;
            }
            else {
              __int16 v81 = v80 & 2;
            }
            if (!(_DWORD)v81) {
              goto LABEL_117;
            }
            uint64_t v82 = (void *)objc_opt_class(self);
            unsigned int v83 = self->_bundleIdentifier;
            id v84 = self->_sourceURL;
            __int128 v112 = 138412802;
            uint64_t v113 = (uint64_t)v82;
            int v114 = 2112;
            v115 = (ssize_t)v83;
            *(_WORD *)__int16 v116 = 2112;
            *(void *)&v116[2] = v84;
            uint64_t v18 = v82;
            LODWORD(v109) = 32;
            uint64_t v19 = _os_log_send_and_compose_impl( v81,  0LL,  0LL,  0LL,  &_mh_execute_header,  v13,  16LL,  "%@: Invalid archive for bundlerIdenfier: %@ path: %@",  &v112,  v109);
            goto LABEL_115;
          }

          __int128 v52 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v57,  4LL));
          free(v57);
          v108 = v52;
          SSFileLog(v49, @"%@");
        }

        goto LABEL_68;
      }

      uint64_t v32 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v38,  4LL));
      free(v38);
      id v107 = v32;
      SSFileLog(v29, @"%@");
    }

    goto LABEL_41;
  }

  id v20 = (char *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig", a3));
  if (!v20) {
    id v20 = (char *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  uint64_t v21 = [v20 shouldLog];
  else {
    LODWORD(v22) = v21;
  }
  __int16 v23 = (os_log_s *)objc_claimAutoreleasedReturnValue([v20 OSLogObject]);
  if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
    id v22 = v22;
  }
  else {
    v22 &= 2u;
  }
  if (!(_DWORD)v22) {
    goto LABEL_25;
  }
  id v24 = (void *)objc_opt_class(self);
  double v25 = self->_bundleIdentifier;
  __int128 v112 = 138412546;
  uint64_t v113 = (uint64_t)v24;
  int v114 = 2112;
  v115 = (ssize_t)v25;
  int v26 = v24;
  uint64_t v27 = (void *)_os_log_send_and_compose_impl( v22,  0LL,  0LL,  0LL,  &_mh_execute_header,  v23,  16LL,  "%@: Validation failure. sourceURL required for bundleIdentifier: %@",  &v112,  22);

  if (v27)
  {
    __int16 v23 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v27,  4LL));
    free(v27);
    SSFileLog(v20, @"%@");
LABEL_25:
  }

  __int16 v28 = 0;
LABEL_122:

  return v28;
}

void sub_100105218(_Unwind_Exception *a1)
{
}

void sub_1001052A0(uint64_t a1, void *a2)
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([a2 info]);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 objectForSetting:1]);

  *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [v4 BOOLValue];
  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v5) {
    id v5 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v6 = [v5 shouldLog];
  else {
    LODWORD(v7) = v6;
  }
  uint64_t v8 = (os_log_s *)objc_claimAutoreleasedReturnValue([v5 OSLogObject]);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v7 = v7;
  }
  else {
    v7 &= 2u;
  }
  if (!(_DWORD)v7) {
    goto LABEL_12;
  }
  unsigned __int8 v9 = (void *)objc_opt_class(*(void *)(a1 + 32));
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL);
  id v11 = v9;
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", v10));
  int v14 = 138543618;
  uint64_t v15 = v9;
  __int16 v16 = 2114;
  uint64_t v17 = v12;
  uint64_t v13 = (void *)_os_log_send_and_compose_impl( v7,  0LL,  0LL,  0LL,  &_mh_execute_header,  v8,  0LL,  "%{public}@: Remote action received for privacy prompt operation %{public}@",  &v14,  22);

  if (v13)
  {
    uint64_t v8 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v13,  4LL));
    free(v13);
    SSFileLog(v5, @"%@");
LABEL_12:
  }

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(*(void *)(a1 + 32) + 112LL));
}

LABEL_137:
                v97 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig", v107));
                if (!v97) {
                  v97 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
                }
                id v98 = [v97 shouldLog];
                else {
                  unsigned int v99 = v98;
                }
                v100 = (os_log_s *)objc_claimAutoreleasedReturnValue([v97 OSLogObject]);
                if (os_log_type_enabled(v100, OS_LOG_TYPE_ERROR)) {
                  uint64_t v101 = v99;
                }
                else {
                  uint64_t v101 = v99 & 2;
                }
                if ((_DWORD)v101)
                {
                  id v102 = (void *)objc_opt_class(self);
                  id v103 = self->_bundleIdentifier;
                  __int128 v112 = 138412546;
                  uint64_t v113 = (uint64_t)v102;
                  int v114 = 2112;
                  v115 = (ssize_t)v103;
                  v104 = v102;
                  LODWORD(v109) = 22;
                  v105 = (void *)_os_log_send_and_compose_impl( v101,  0LL,  0LL,  0LL,  &_mh_execute_header,  v100,  16LL,  "%@: Failed to extract Info.plist for bundleIdentifier: %@",  &v112,  v109);

                  if (!v105) {
                    goto LABEL_149;
                  }
                  v100 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v105,  4LL));
                  free(v105);
                  id v107 = v100;
                  SSFileLog(v97, @"%@");
                }

LABEL_149:
                uint64_t v48 = 0;
                __int16 v28 = 0;
                if (!v45)
                {
LABEL_153:

                  if (v4)
                  {
LABEL_119:
                    if (!v28)
                    {
                      id v20 = v20;
                      __int16 v28 = 0;
                      *id v4 = v20;
                    }
                  }

LABEL_121:
                  goto LABEL_122;
                }

uint64_t sub_10010838C(uint64_t a1, uint64_t a2)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", @"%s", a2));
  uint64_t v3 = [v2 hasSuffix:@".app/Info.plist"] ^ 1;

  return v3;
}

void sub_1001083E4(uint64_t a1, uint64_t a2)
{
  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v4) {
    id v4 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v5 = [v4 shouldLog];
  else {
    LODWORD(v6) = v5;
  }
  uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue([v4 OSLogObject]);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v6 = v6;
  }
  else {
    v6 &= 2u;
  }
  if (!(_DWORD)v6) {
    goto LABEL_12;
  }
  uint64_t v8 = BOMCopierUserData(a1);
  int v11 = 138412546;
  id v12 = (id)objc_opt_class(v8);
  __int16 v13 = 2080;
  uint64_t v14 = a2;
  id v9 = v12;
  uint64_t v10 = (void *)_os_log_send_and_compose_impl( v6,  0LL,  0LL,  0LL,  &_mh_execute_header,  v7,  0LL,  "%@: Fatal error: %s",  &v11,  22);

  if (v10)
  {
    uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v10,  4LL));
    free(v10);
    SSFileLog(v4, @"%@");
LABEL_12:
  }
}

void sub_100108574(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v6) {
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v7 = [v6 shouldLog];
  else {
    LODWORD(v_Block_object_dispose((const void *)(v1 - 128), 8) = v7;
  }
  id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue([v6 OSLogObject]);
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v8 = v8;
  }
  else {
    v8 &= 2u;
  }
  if ((_DWORD)v8)
  {
    uint64_t v10 = BOMCopierUserData(a1);
    int v14 = 138412802;
    id v15 = (id)objc_opt_class(v10);
    __int16 v16 = 1024;
    int v17 = a3;
    __int16 v18 = 2080;
    uint64_t v19 = a2;
    id v11 = v15;
    id v12 = (void *)_os_log_send_and_compose_impl( v8,  0LL,  0LL,  0LL,  &_mh_execute_header,  v9,  0LL,  "%@: Fatal file error: %d: %s",  &v14,  28);

    if (v12)
    {
      __int16 v13 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v12,  4LL));
      free(v12);
      SSFileLog(v6, @"%@");
    }
  }

  else
  {
  }
}

uint64_t sub_10010871C(uint64_t a1, uint64_t a2)
{
  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v4) {
    id v4 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v5 = [v4 shouldLog];
  else {
    LODWORD(v6) = v5;
  }
  unsigned int v7 = (os_log_s *)objc_claimAutoreleasedReturnValue([v4 OSLogObject]);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v6 = v6;
  }
  else {
    v6 &= 2u;
  }
  if (!(_DWORD)v6) {
    goto LABEL_12;
  }
  uint64_t v8 = BOMCopierUserData(a1);
  int v12 = 138412546;
  id v13 = (id)objc_opt_class(v8);
  __int16 v14 = 2080;
  uint64_t v15 = a2;
  id v9 = v13;
  uint64_t v10 = (void *)_os_log_send_and_compose_impl( v6,  0LL,  0LL,  0LL,  &_mh_execute_header,  v7,  0LL,  "%@: File conflict error: %s",  &v12,  22);

  if (v10)
  {
    unsigned int v7 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v10,  4LL));
    free(v10);
    SSFileLog(v4, @"%@");
LABEL_12:
  }

  return 0LL;
}

uint64_t sub_1001088B0(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v6) {
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v7 = [v6 shouldLog];
  else {
    LODWORD(v_Block_object_dispose((const void *)(v1 - 128), 8) = v7;
  }
  id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue([v6 OSLogObject]);
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v8 = v8;
  }
  else {
    v8 &= 2u;
  }
  if ((_DWORD)v8)
  {
    uint64_t v10 = BOMCopierUserData(a1);
    int v15 = 138412802;
    id v16 = (id)objc_opt_class(v10);
    __int16 v17 = 1024;
    int v18 = a3;
    __int16 v19 = 2080;
    uint64_t v20 = a2;
    id v11 = v16;
    int v12 = (void *)_os_log_send_and_compose_impl( v8,  0LL,  0LL,  0LL,  &_mh_execute_header,  v9,  0LL,  "%@: File error: %d: %s",  &v15,  28);

    if (v12)
    {
      id v13 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v12,  4LL));
      free(v12);
      SSFileLog(v6, @"%@");
    }
  }

  else
  {
  }

  return 2LL;
}

void sub_10010967C(id a1)
{
  uint64_t v1 = objc_alloc(&OBJC_CLASS___NSArray);
  id v4 = -[NSArray initWithObjects:]( v1,  "initWithObjects:",  CPSharedResourcesDirectory(v1),  @"Media",  @"Downloads",  @"scratch",  0LL);
  uint64_t v2 = objc_claimAutoreleasedReturnValue(+[NSString pathWithComponents:](&OBJC_CLASS___NSString, "pathWithComponents:", v4));
  uint64_t v3 = (void *)qword_1003A3450;
  qword_1003A3450 = v2;
}

void sub_10010A9E4(id a1)
{
  uint64_t v1 = (void *)qword_1003A3460;
  qword_1003A3460 = (uint64_t)&off_10036E418;
}

void sub_10010ACB8(uint64_t a1)
{
  id v1 = objc_alloc_init((Class)objc_opt_class(*(void *)(a1 + 32)));
  uint64_t v2 = (void *)qword_1003A3470;
  qword_1003A3470 = (uint64_t)v1;
}

void sub_10010ADB4(uint64_t a1)
{
  if (!*(void *)(*(void *)(a1 + 32) + 56LL))
  {
    uint64_t v2 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    uint64_t v3 = *(void *)(a1 + 32);
    id v4 = *(void **)(v3 + 56);
    *(void *)(v3 + 56) = v2;
  }

  unsigned int v5 = objc_alloc_init(&OBJC_CLASS___SpringBoardPendingAlert);
  -[SpringBoardPendingAlert setCompletionBlock:](v5, "setCompletionBlock:", *(void *)(a1 + 56));
  -[SpringBoardPendingAlert setOptions:](v5, "setOptions:", *(void *)(a1 + 40));
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) objectForKey:SBSUIRemoteAlertOptionViewControllerClass]);
  -[SpringBoardPendingAlert setViewControllerName:](v5, "setViewControllerName:", v6);

  objc_initWeak(&location, *(id *)(a1 + 32));
  unsigned int v7 = dispatch_source_create( (dispatch_source_type_t)&_dispatch_source_type_timer,  0LL,  0LL,  *(dispatch_queue_t *)(*(void *)(a1 + 32) + 16LL));
  dispatch_time_t v8 = dispatch_time(0LL, 10000000000LL);
  dispatch_source_set_timer(v7, v8, 0xFFFFFFFFFFFFFFFFLL, 0x3B9ACA00uLL);
  handler[0] = _NSConcreteStackBlock;
  handler[1] = 3221225472LL;
  handler[2] = sub_10010AFD4;
  handler[3] = &unk_10034D030;
  objc_copyWeak(&v17, &location);
  id v9 = v5;
  int v15 = v9;
  id v16 = *(id *)(a1 + 56);
  dispatch_source_set_event_handler(v7, handler);
  -[SpringBoardPendingAlert setTimeoutTimer:](v9, "setTimeoutTimer:", v7);
  [*(id *)(*(void *)(a1 + 32) + 56) addObject:v9];
  dispatch_resume(v7);
  uint64_t v10 = *(void *)(a1 + 32);
  id v11 = *(dispatch_queue_s **)(v10 + 88);
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472LL;
  v12[2] = sub_10010B0AC;
  v12[3] = &unk_10034AD58;
  void v12[4] = v10;
  id v13 = *(id *)(a1 + 48);
  dispatch_async(v11, v12);

  objc_destroyWeak(&v17);
  objc_destroyWeak(&location);
}

void sub_10010AFB8(_Unwind_Exception *a1)
{
}

void sub_10010AFD4(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  uint64_t v3 = WeakRetained;
  if (WeakRetained)
  {
    id v4 = [WeakRetained[7] indexOfObjectIdenticalTo:*(void *)(a1 + 32)];
    if (v4 != (id)0x7FFFFFFFFFFFFFFFLL)
    {
      id v5 = v4;
      [*(id *)(a1 + 32) setTimeoutTimer:0];
      [v3[7] removeObjectAtIndex:v5];
      uint64_t v6 = *(void **)(a1 + 40);
      if (v6)
      {
        unsigned int v7 = (dispatch_queue_s *)v3[4];
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472LL;
        block[2] = sub_10010B09C;
        block[3] = &unk_10034ACB8;
        id v9 = v6;
        dispatch_async(v7, block);
      }
    }
  }
}

uint64_t sub_10010B09C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_10010B0AC(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v2) {
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v3 = [v2 shouldLog];
  else {
    LODWORD(v4) = v3;
  }
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue([v2 OSLogObject]);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO)) {
    uint64_t v4 = v4;
  }
  else {
    v4 &= 2u;
  }
  if (!(_DWORD)v4) {
    goto LABEL_12;
  }
  uint64_t v6 = (void *)objc_opt_class(*(void *)(a1 + 32));
  uint64_t v7 = *(void *)(a1 + 40);
  int v11 = 138412546;
  int v12 = v6;
  __int16 v13 = 2112;
  uint64_t v14 = v7;
  id v8 = v6;
  id v9 = (void *)_os_log_send_and_compose_impl( v4,  0LL,  0LL,  0LL,  &_mh_execute_header,  v5,  1LL,  "%@: Activating alert: %@",  &v11,  22);

  if (v9)
  {
    id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v9,  4LL));
    free(v9);
    SSFileLog(v2, @"%@");
LABEL_12:
  }

  return SBSUIActivateRemoteAlert(@"com.apple.ios.StoreKitUIService", *(void *)(a1 + 40));
}

void sub_10010B2F8(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 96) objectForKey:*(void *)(a1 + 40)]);
  unsigned int v3 = v2;
  if (v2)
  {
    *(_DWORD *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = [v2 unsignedIntValue];
  }

  else
  {
    uint64_t v4 = *(void *)(a1 + 32);
    if (!*(void *)(v4 + 96))
    {
      id v5 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
      uint64_t v6 = *(void *)(a1 + 32);
      uint64_t v7 = *(void **)(v6 + 96);
      *(void *)(v6 + 96) = v5;

      uint64_t v4 = *(void *)(a1 + 32);
    }

    id v8 = *(dispatch_queue_s **)(v4 + 88);
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472LL;
    v9[2] = sub_10010B3D8;
    v9[3] = &unk_10034AD58;
    void v9[4] = v4;
    id v10 = *(id *)(a1 + 40);
    dispatch_async(v8, v9);
  }
}

void sub_10010B3D8(uint64_t a1)
{
  id v3 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _applicationStateMonitor]);
  id v2 = [v3 applicationStateForApplication:*(void *)(a1 + 40)];
  if ((_DWORD)v2) {
    [*(id *)(a1 + 32) _setApplicationState:v2 forClientID:*(void *)(a1 + 40)];
  }
}

void sub_10010B4A4(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  uint64_t v2 = v1[5];
  if (!v2)
  {
    if (!v1[12])
    {
      uint64_t v4 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
      uint64_t v5 = *(void *)(a1 + 32);
      uint64_t v6 = *(void **)(v5 + 96);
      *(void *)(v5 + 96) = v4;

      id v1 = *(void **)(a1 + 32);
    }

    uint64_t v7 = (dispatch_queue_s *)v1[11];
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472LL;
    void v8[2] = sub_10010B560;
    v8[3] = &unk_10034ACE0;
    void v8[4] = v1;
    id v9 = *(id *)(a1 + 40);
    dispatch_async(v7, v8);

    id v1 = *(void **)(a1 + 32);
    uint64_t v2 = v1[5];
  }

  v1[5] = v2 + 1;
}

void sub_10010B560(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _applicationStateMonitor]);
  [v2 updateInterestedBundleIDs:0 states:BKSApplicationStateAll];
  id v3 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[LSApplicationWorkspace defaultWorkspace](&OBJC_CLASS___LSApplicationWorkspace, "defaultWorkspace"));
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472LL;
  v11[2] = sub_10010B6A8;
  v11[3] = &unk_10034EA88;
  id v5 = v2;
  id v12 = v5;
  uint64_t v6 = v3;
  __int16 v13 = v6;
  [v4 enumerateBundlesOfType:1 block:v11];

  [*(id *)(a1 + 32) _setApplicationStatesWithDictionary:v6];
  uint64_t v7 = *(void **)(a1 + 40);
  if (v7)
  {
    id v8 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 32LL);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_10010B720;
    block[3] = &unk_10034ACB8;
    id v10 = v7;
    dispatch_async(v8, block);
  }
}

void sub_10010B6A8(uint64_t a1, void *a2)
{
  id v5 = (id)objc_claimAutoreleasedReturnValue([a2 bundleIdentifier]);
  unsigned int v3 = objc_msgSend(*(id *)(a1 + 32), "applicationStateForApplication:");
  if (v3)
  {
    uint64_t v4 = -[NSNumber initWithInteger:](objc_alloc(&OBJC_CLASS___NSNumber), "initWithInteger:", v3);
    [*(id *)(a1 + 40) setObject:v4 forKey:v5];
  }
}

uint64_t sub_10010B720(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_10010B7A8(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  if (!v2[12])
  {
    unsigned int v3 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    uint64_t v4 = *(void *)(a1 + 32);
    id v5 = *(void **)(v4 + 96);
    *(void *)(v4 + 96) = v3;

    uint64_t v2 = *(void **)(a1 + 32);
  }

  BOOL v6 = v2[5] > 0LL;
  uint64_t v7 = (dispatch_queue_s *)v2[11];
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_10010B864;
  block[3] = &unk_10034EAB0;
  void block[4] = v2;
  id v9 = *(id *)(a1 + 40);
  BOOL v10 = v6;
  dispatch_async(v7, block);
}

void sub_10010B864(uint64_t a1)
{
  if (!*(void *)(*(void *)(a1 + 32) + 48LL))
  {
    uint64_t v2 = objc_alloc_init(&OBJC_CLASS___NSCountedSet);
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = *(void **)(v3 + 48);
    *(void *)(v3 + 4_Block_object_dispose((const void *)(v1 - 128), 8) = v2;
  }

  __int128 v15 = 0u;
  __int128 v16 = 0u;
  __int128 v13 = 0u;
  __int128 v14 = 0u;
  id v5 = *(id *)(a1 + 40);
  id v6 = [v5 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (!v6) {
    goto LABEL_16;
  }
  id v7 = v6;
  LOBYTE(v_Block_object_dispose((const void *)(v1 - 128), 8) = 0;
  uint64_t v9 = *(void *)v14;
  do
  {
    for (uint64_t i = 0LL; i != v7; uint64_t i = (char *)i + 1)
    {
      if (*(void *)v14 != v9) {
        objc_enumerationMutation(v5);
      }
      uint64_t v11 = *(void *)(*((void *)&v13 + 1) + 8LL * (void)i);
      objc_msgSend(*(id *)(*(void *)(a1 + 32) + 48), "addObject:", v11, (void)v13);
      BOOL v8 = v8 || [*(id *)(*(void *)(a1 + 32) + 48) countForObject:v11] == (id)1;
    }

    id v7 = [v5 countByEnumeratingWithState:&v13 objects:v17 count:16];
  }

  while (v7);

  if (v8 && !*(_BYTE *)(a1 + 48))
  {
    id v5 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _applicationStateMonitor]);
    id v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 48) allObjects]);
    [v5 updateInterestedBundleIDs:v12 states:BKSApplicationStateAll];

LABEL_16:
  }

void sub_10010BAEC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

uint64_t sub_10010BB04(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_10010BB14(uint64_t a1)
{
}

void sub_10010BB1C(uint64_t a1)
{
  id v5 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _applicationStateMonitor]);
  uint64_t v2 = objc_claimAutoreleasedReturnValue([v5 bundleInfoValueForKey:*(void *)(a1 + 40) PID:*(unsigned int *)(a1 + 56)]);
  uint64_t v3 = *(void *)(*(void *)(a1 + 48) + 8LL);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_10010BBD0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = *(void *)(v1 + 40);
  if (v2 >= 1)
  {
    if (v2 == 1)
    {
      [*(id *)(v1 + 96) removeAllObjects];
      uint64_t v4 = *(void *)(a1 + 32);
      id v5 = *(dispatch_queue_s **)(v4 + 88);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_10010BC60;
      block[3] = &unk_10034AC30;
      void block[4] = v4;
      dispatch_async(v5, block);
      uint64_t v1 = *(void *)(a1 + 32);
      uint64_t v2 = *(void *)(v1 + 40);
    }

    *(void *)(v1 + 40) = v2 - 1;
  }

void sub_10010BC60(uint64_t a1)
{
  id v7 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _applicationStateMonitor]);
  id v2 = [*(id *)(*(void *)(a1 + 32) + 48) count];
  unsigned int v3 = BKSApplicationStateAll;
  uint64_t v4 = *(void **)(*(void *)(a1 + 32) + 48LL);
  if (v4) {
    id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 allObjects]);
  }
  else {
    id v5 = 0LL;
  }
  if (v2) {
    uint64_t v6 = v3;
  }
  else {
    uint64_t v6 = 0LL;
  }
  [v7 updateInterestedBundleIDs:v5 states:v6];
}

void sub_10010BD70(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(v2 + 40);
  if (v3 <= 0)
  {
    __int128 v18 = 0u;
    __int128 v19 = 0u;
    __int128 v16 = 0u;
    __int128 v17 = 0u;
    id v4 = *(id *)(a1 + 40);
    id v5 = [v4 countByEnumeratingWithState:&v16 objects:v20 count:16];
    if (v5)
    {
      id v6 = v5;
      uint64_t v7 = *(void *)v17;
      do
      {
        BOOL v8 = 0LL;
        do
        {
          if (*(void *)v17 != v7) {
            objc_enumerationMutation(v4);
          }
          [*(id *)(*(void *)(a1 + 32) + 96) removeObjectForKey:*(void *)(*((void *)&v16 + 1) + 8 * (void)v8)];
          BOOL v8 = (char *)v8 + 1;
        }

        while (v6 != v8);
        id v6 = [v4 countByEnumeratingWithState:&v16 objects:v20 count:16];
      }

      while (v6);
    }

    uint64_t v2 = *(void *)(a1 + 32);
  }

  uint64_t v9 = *(dispatch_queue_s **)(v2 + 88);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_10010BEE0;
  block[3] = &unk_10034EAB0;
  id v10 = *(id *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 32);
  id v13 = v10;
  uint64_t v14 = v11;
  BOOL v15 = v3 > 0;
  dispatch_async(v9, block);
}

void sub_10010BEE0(uint64_t a1)
{
  __int128 v12 = 0u;
  __int128 v13 = 0u;
  __int128 v14 = 0u;
  __int128 v15 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (!v3)
  {
LABEL_14:

    return;
  }

  id v4 = v3;
  char v5 = 0;
  uint64_t v6 = *(void *)v13;
  do
  {
    for (uint64_t i = 0LL; i != v4; uint64_t i = (char *)i + 1)
    {
      if (*(void *)v13 != v6) {
        objc_enumerationMutation(v2);
      }
      uint64_t v8 = *(void *)(*((void *)&v12 + 1) + 8LL * (void)i);
      id v9 = objc_msgSend(*(id *)(*(void *)(a1 + 40) + 48), "countForObject:", v8, (void)v12);
      [*(id *)(*(void *)(a1 + 40) + 48) removeObject:v8];
      v5 |= v9 == (id)1;
    }

    id v4 = [v2 countByEnumeratingWithState:&v12 objects:v16 count:16];
  }

  while (v4);

  if ((v5 & 1) != 0 && !*(_BYTE *)(a1 + 48))
  {
    id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) _applicationStateMonitor]);
    if ([*(id *)(*(void *)(a1 + 40) + 48) count]) {
      uint64_t v10 = BKSApplicationStateAll;
    }
    else {
      uint64_t v10 = 0LL;
    }
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 40) + 48) allObjects]);
    [v2 updateInterestedBundleIDs:v11 states:v10];

    goto LABEL_14;
  }

id sub_10010C128(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  id v2 = *(void **)(*(void *)(a1 + 32) + 96LL);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_10010C180;
  v4[3] = &unk_10034EB00;
  void v4[4] = v1;
  return [v2 enumerateKeysAndObjectsUsingBlock:v4];
}

void sub_10010C180(uint64_t a1, void *a2, void *a3, _BYTE *a4)
{
  id v8 = a2;
  if (([a3 unsignedIntValue] & 0x28) != 0)
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 40LL), a2);
    *a4 = 1;
  }
}

void sub_10010C3BC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_10010C3D4(uint64_t a1, void *a2)
{
  id v4 = a2;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_10010C4B4(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _applicationStateMonitor]);
  *(_DWORD *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [v2 mostElevatedApplicationStateForPID:*(unsigned int *)(a1 + 48)];
}

void sub_10010C800(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = *(void **)(v1 + 24);
  *(void *)(v1 + 24) = 0LL;
}

void sub_10010CB4C(id *a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([a1[4] appIdentifier]);
  if ([a1[4] shouldLaunchApp])
  {
    id v3 = objc_alloc(&OBJC_CLASS___NSMutableDictionary);
    id v4 = -[NSMutableDictionary initWithObjectsAndKeys:]( v3,  "initWithObjectsAndKeys:",  &__kCFBooleanTrue,  FBSOpenApplicationOptionKeyActivateSuspended,  0LL);
    char v5 = (void *)objc_claimAutoreleasedReturnValue([a1[4] launchOptions]);
    if (v5) {
      -[NSMutableDictionary setObject:forKey:](v4, "setObject:forKey:", v5, FBSOpenApplicationOptionKeyPayloadOptions);
    }
    id v6 = a1[5];
    id v57 = 0LL;
    unsigned int v7 = [v6 launchApplicationWithIdentifier:v2 options:v4 error:&v57];
    id v8 = v57;
    id v9 = v8;
    if (v7)
    {

      goto LABEL_6;
    }

    uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v21) {
      uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v22 = [v21 shouldLog];
    else {
      LODWORD(v23) = v22;
    }
    id v24 = (os_log_s *)objc_claimAutoreleasedReturnValue([v21 OSLogObject]);
    if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v23 = v23;
    }
    else {
      v23 &= 2u;
    }
    if ((_DWORD)v23)
    {
      double v25 = (void *)objc_opt_class(a1[5]);
      int v58 = 138412802;
      id v59 = v25;
      __int16 v60 = 2112;
      id v61 = v2;
      __int16 v62 = 2112;
      double v63 = *(double *)&v9;
      id v26 = v25;
      LODWORD(v51) = 32;
      uint64_t v27 = (void *)_os_log_send_and_compose_impl( v23,  0LL,  0LL,  0LL,  &_mh_execute_header,  v24,  0LL,  "%@: Could not launch: %@: %@",  &v58,  v51);

      if (!v27)
      {
LABEL_35:

        goto LABEL_36;
      }

      id v24 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v27,  4LL));
      free(v27);
      __int128 v50 = v24;
      SSFileLog(v21, @"%@");
    }

    goto LABEL_35;
  }

LABEL_6:
  unsigned int v56 = 0;
  if ([a1[5] _getProcessID:&v56 forApplicationIdentifier:v2])
  {
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([a1[4] processAssertionIdentifier]);
    [a1[4] processAssertionInterval];
    double v12 = v11;
    __int128 v13 = (void *)objc_claimAutoreleasedReturnValue([a1[4] processAssertionReason]);
    __int128 v14 = v13;
    if (!v10 || !v13 || v12 <= 2.22044605e-16)
    {

      goto LABEL_57;
    }

    if ([v13 isEqualToString:ProcessAssertionReasonBackgroundDownload])
    {
      uint64_t v15 = 10LL;
    }

    else if ([v14 isEqualToString:ProcessAssertionReasonTaskCompletion])
    {
      uint64_t v15 = 4LL;
    }

    else
    {
      uint64_t v15 = 0LL;
    }

    __int16 v28 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v28) {
      __int16 v28 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v29 = [v28 shouldLog];
    else {
      LODWORD(v30) = v29;
    }
    id v31 = (os_log_s *)objc_claimAutoreleasedReturnValue([v28 OSLogObject]);
    if (os_log_type_enabled(v31, OS_LOG_TYPE_INFO)) {
      uint64_t v30 = v30;
    }
    else {
      v30 &= 2u;
    }
    if ((_DWORD)v30)
    {
      uint64_t v32 = (void *)objc_opt_class(a1[5]);
      int v58 = 138413058;
      id v59 = v32;
      __int16 v60 = 2112;
      id v61 = v10;
      __int16 v62 = 2048;
      double v63 = v12;
      __int16 v64 = 2112;
      unsigned int v65 = v14;
      id v33 = v32;
      LODWORD(v51) = 42;
      unsigned int v34 = (void *)_os_log_send_and_compose_impl( v30,  0LL,  0LL,  0LL,  &_mh_execute_header,  v31,  1LL,  "%@: Taking process assertion: %@ for: %.2f seconds with reason: %@",  &v58,  v51);

      if (!v34) {
        goto LABEL_55;
      }
      id v31 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v34,  4LL));
      free(v34);
      __int128 v50 = v31;
      SSFileLog(v28, @"%@");
    }

LABEL_55:
    uint64_t v35 = objc_alloc(&OBJC_CLASS___BKSProcessAssertion);
    int v36 = -[BKSProcessAssertion initWithPID:flags:reason:name:]( v35,  "initWithPID:flags:reason:name:",  v56,  1LL,  v15,  v10);
    if ((-[BKSProcessAssertion valid](v36, "valid") & 1) != 0)
    {
      dispatch_time_t v37 = dispatch_time(0LL, (uint64_t)(v12 * 1000000000.0));
      id v38 = a1[5];
      id v39 = a1[6];
      __int16 v40 = (dispatch_queue_s *)*((void *)v38 + 2);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_10010D2CC;
      block[3] = &unk_10034EB78;
      void block[4] = v38;
      id v53 = v10;
      id v54 = v39;
      __int16 v55 = v36;
      id v41 = v36;
      id v42 = v10;
      dispatch_after(v37, v40, block);

      goto LABEL_57;
    }

    uint64_t v43 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v43) {
      uint64_t v43 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v44 = objc_msgSend(v43, "shouldLog", v50);
    else {
      LODWORD(v45) = v44;
    }
    uint64_t v46 = (os_log_s *)objc_claimAutoreleasedReturnValue([v43 OSLogObject]);
    if (os_log_type_enabled(v46, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v45 = v45;
    }
    else {
      v45 &= 2u;
    }
    if ((_DWORD)v45)
    {
      uint64_t v47 = (void *)objc_opt_class(a1[5]);
      int v58 = 138412546;
      id v59 = v47;
      __int16 v60 = 2112;
      id v61 = v10;
      id v48 = v47;
      LODWORD(v51) = 22;
      __int128 v49 = (void *)_os_log_send_and_compose_impl( v45,  0LL,  0LL,  0LL,  &_mh_execute_header,  v46,  0LL,  "%@: Could not take process assertion: %@",  &v58,  v51);

      if (!v49)
      {
LABEL_70:

        goto LABEL_38;
      }

      uint64_t v46 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v49,  4LL));
      free(v49);
      __int128 v50 = v46;
      SSFileLog(v43, @"%@");
    }

    goto LABEL_70;
  }

  id v4 = (NSMutableDictionary *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v4) {
    id v4 = (NSMutableDictionary *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v16 = -[NSMutableDictionary shouldLog](v4, "shouldLog");
  else {
    LODWORD(v17) = v16;
  }
  char v5 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableDictionary OSLogObject](v4, "OSLogObject"));
  if (os_log_type_enabled((os_log_t)v5, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v17 = v17;
  }
  else {
    v17 &= 2u;
  }
  if (!(_DWORD)v17) {
    goto LABEL_36;
  }
  __int128 v18 = (void *)objc_opt_class(a1[5]);
  int v58 = 138412546;
  id v59 = v18;
  __int16 v60 = 2112;
  id v61 = v2;
  id v19 = v18;
  LODWORD(v51) = 22;
  uint64_t v20 = (void *)_os_log_send_and_compose_impl( v17,  0LL,  0LL,  0LL,  &_mh_execute_header,  v5,  0LL,  "%@: No pid for display ID: %@",  &v58,  v51);

  if (v20)
  {
    char v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v20,  4LL));
    free(v20);
    __int128 v50 = (os_log_s *)v5;
    SSFileLog(v4, @"%@");
LABEL_36:
  }

LABEL_38:
  objc_msgSend(a1[6], "releaseKeepAliveAssertion:", @"AppWakeup", v50);
LABEL_57:
}

  id v6 = *(unsigned __int8 *)(*(void *)(a1[4] + 8LL) + 24LL);

  return v6;
}
}
}
}
}

  __int128 v14 = (void *)objc_claimAutoreleasedReturnValue( objc_msgSend( v7,  "valueForProperty:",  @"IFNULL(download_state.phase, SSDownloadPhaseWaiting)"));
  IsFinishedPhase = SSDownloadPhaseIsFinishedPhase(v14);

  if ((IsFinishedPhase & 1) == 0)
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL), a2);
    *a4 = 1;
  }

id sub_10010D2CC(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v2) {
    id v2 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v3 = [v2 shouldLog];
  else {
    LODWORD(v4) = v3;
  }
  char v5 = (os_log_s *)objc_claimAutoreleasedReturnValue([v2 OSLogObject]);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO)) {
    uint64_t v4 = v4;
  }
  else {
    v4 &= 2u;
  }
  if (!(_DWORD)v4) {
    goto LABEL_12;
  }
  id v6 = (void *)objc_opt_class(*(void *)(a1 + 32));
  uint64_t v7 = *(void *)(a1 + 40);
  int v11 = 138412546;
  double v12 = v6;
  __int16 v13 = 2112;
  uint64_t v14 = v7;
  id v8 = v6;
  id v9 = (void *)_os_log_send_and_compose_impl( v4,  0LL,  0LL,  0LL,  &_mh_execute_header,  v5,  1LL,  "%@: Releasing power assertion: %@",  &v11,  22);

  if (v9)
  {
    char v5 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v9,  4LL));
    free(v9);
    SSFileLog(v2, @"%@");
LABEL_12:
  }

  [*(id *)(a1 + 48) releaseKeepAliveAssertion:@"AppWakeup"];
  return [*(id *)(a1 + 56) invalidate];
}

void sub_10010D518(uint64_t a1)
{
  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 32));
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = objc_opt_class(&OBJC_CLASS___NSString);
  char v5 = (void *)SSXPCDictionaryCopyObjectWithClass(v3, "1", v4);
  if (v5)
  {
    uint64_t v6 = (uint64_t)[*(id *)(*(void *)(a1 + 40) + 56) count];
    if (v6 >= 1)
    {
      uint64_t v7 = v6;
      uint64_t v8 = 0LL;
      while (1)
      {
        id v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 40) + 56) objectAtIndex:v8]);
        uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v9 viewControllerName]);
        unsigned int v11 = [v10 isEqualToString:v5];

        if (v11) {
          break;
        }

        if (v7 == ++v8) {
          goto LABEL_10;
        }
      }

      double v12 = -[SpringBoardAlertProxy initWithMessage:]( objc_alloc(&OBJC_CLASS___SpringBoardAlertProxy),  "initWithMessage:",  *(void *)(a1 + 32));
      __int16 v13 = (void *)objc_claimAutoreleasedReturnValue([v9 options]);
      SSXPCDictionarySetObject(reply, "1", v13);

      uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(-[SpringBoardAlertProxy XPCEndpoint](v12, "XPCEndpoint"));
      xpc_dictionary_set_value(reply, "2", v14);

      uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v9 completionBlock]);
      unsigned int v16 = v15;
      if (v15)
      {
        uint64_t v17 = *(dispatch_queue_s **)(*(void *)(a1 + 40) + 32LL);
        __int128 v18 = _NSConcreteStackBlock;
        uint64_t v19 = 3221225472LL;
        uint64_t v20 = sub_10010D714;
        uint64_t v21 = &unk_10034C8D0;
        id v23 = v15;
        unsigned int v22 = v12;
        dispatch_async(v17, &v18);
        objc_msgSend(v9, "setCompletionBlock:", 0, v18, v19, v20, v21);
      }

      [v9 cancelTimeoutTimer];
      [*(id *)(*(void *)(a1 + 40) + 56) removeObjectAtIndex:v8];
    }
  }

uint64_t sub_10010D714(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(void *)(a1 + 32));
}

id sub_10010DE08(uint64_t a1, void *a2)
{
  return [a2 sendMessage:*(void *)(a1 + 32)];
}

void sub_10010DEB8(uint64_t a1, void *a2)
{
  if (a2)
  {
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472LL;
    void v7[2] = sub_10010DF8C;
    v7[3] = &unk_10034EBC8;
    uint64_t v4 = *(void *)(a1 + 32);
    id v8 = *(id *)(a1 + 40);
    [a2 sendMessage:v4 withReply:v7];
  }

  else
  {
    uint64_t v5 = SSError(SSErrorDomain, 106LL, 0LL, 0LL);
    id v6 = (id)objc_claimAutoreleasedReturnValue(v5);
    (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
  }

uint64_t sub_10010DF8C(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t, void))(result + 16))(result, a2, 0LL);
  }
  return result;
}

void sub_10010E06C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_10010E090(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 objectForKey:BKSApplicationStateKey]);
  id v5 = [v4 unsignedIntValue];
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v3 objectForKey:BKSApplicationStateDisplayIDKey]);

  [WeakRetained _setApplicationState:v5 forClientID:v6];
}

void sub_10010E1AC(uint64_t a1)
{
  if (*(void *)(*(void *)(a1 + 32) + 64LL) == *(void *)(a1 + 40))
  {
    id v2 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v2) {
      id v2 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v3 = [v2 shouldLog];
    else {
      LODWORD(v4) = v3;
    }
    id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue([v2 OSLogObject]);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG)) {
      uint64_t v4 = v4;
    }
    else {
      v4 &= 2u;
    }
    if ((_DWORD)v4)
    {
      id v6 = (void *)objc_opt_class(*(void *)(a1 + 32));
      uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 64LL);
      int v12 = 138412546;
      __int16 v13 = v6;
      __int16 v14 = 2112;
      uint64_t v15 = v7;
      id v8 = v6;
      id v9 = (void *)_os_log_send_and_compose_impl( v4,  0LL,  0LL,  0LL,  &_mh_execute_header,  v5,  2LL,  "%@: Plugin connection disappeared: %@",  &v12,  22);

      if (!v9)
      {
LABEL_14:

        [*(id *)(*(void *)(a1 + 32) + 64) setDisconnectBlock:0];
        uint64_t v10 = *(void *)(a1 + 32);
        unsigned int v11 = *(void **)(v10 + 64);
        *(void *)(v10 + 64) = 0LL;

        return;
      }

      id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v9,  4LL));
      free(v9);
      SSFileLog(v2, @"%@");
    }

    goto LABEL_14;
  }

void sub_10010E434(uint64_t a1)
{
  __int128 v6 = 0u;
  __int128 v7 = 0u;
  __int128 v8 = 0u;
  __int128 v9 = 0u;
  id v1 = *(id *)(a1 + 32);
  id v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      id v5 = 0LL;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        (*(void (**)(void))(*(void *)(*((void *)&v6 + 1) + 8LL * (void)v5) + 16LL))(*(void *)(*((void *)&v6 + 1) + 8LL * (void)v5));
        id v5 = (char *)v5 + 1;
      }

      while (v3 != v5);
      id v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }

    while (v3);
  }
}

void sub_10010E678( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_10010E694(uint64_t a1, void *a2)
{
  id v7 = a2;
  uint64_t v3 = objc_opt_class(&OBJC_CLASS___NSDictionary);
  if ((objc_opt_isKindOfClass(v7, v3) & 1) != 0)
  {
    uint64_t v4 = objc_claimAutoreleasedReturnValue([v7 objectForKey:*(void *)(a1 + 32)]);
    uint64_t v5 = *(void *)(*(void *)(a1 + 48) + 8LL);
    __int128 v6 = *(void **)(v5 + 40);
    *(void *)(v5 + 40) = v4;
  }

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
}

void sub_10010E80C(uint64_t a1)
{
  xpc_object_t value = xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 32), "1");
  uint64_t v3 = (_xpc_endpoint_s *)objc_claimAutoreleasedReturnValue(value);
  uint64_t v4 = v3;
  if (v3 && xpc_get_type(v3) == (xpc_type_t)&_xpc_type_endpoint)
  {
    xpc_connection_t v5 = xpc_connection_create_from_endpoint(v4);
    if (!v5)
    {
LABEL_16:

      goto LABEL_17;
    }

    [*(id *)(*(void *)(a1 + 40) + 64) setDisconnectBlock:0];
    __int128 v6 = -[SSXPCConnection initWithXPCConnection:]( objc_alloc(&OBJC_CLASS___SSXPCConnection),  "initWithXPCConnection:",  v5);
    objc_storeStrong((id *)(*(void *)(a1 + 40) + 64LL), v6);
    objc_initWeak(&location, *(id *)(a1 + 40));
    id v7 = *(void **)(*(void *)(a1 + 40) + 64LL);
    v19[0] = _NSConcreteStackBlock;
    v19[1] = 3221225472LL;
    v19[2] = sub_10010EB28;
    v19[3] = &unk_10034C8F8;
    objc_copyWeak(&v21, &location);
    __int128 v8 = v6;
    uint64_t v20 = v8;
    [v7 setDisconnectBlock:v19];
    __int128 v9 = (void *)SSXPCCreateMessageDictionary(-1LL);
    [*(id *)(*(void *)(a1 + 40) + 64) sendMessage:v9];
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v10) {
      uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    LODWORD(v11) = [v10 shouldLog];
    unsigned int v12 = [v10 shouldLogToDisk];
    __int16 v13 = (os_log_s *)objc_claimAutoreleasedReturnValue([v10 OSLogObject]);
    __int16 v14 = v13;
    if (v12) {
      LODWORD(v11) = v11 | 2;
    }
    if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO)) {
      uint64_t v11 = v11;
    }
    else {
      v11 &= 2u;
    }
    if ((_DWORD)v11)
    {
      uint64_t v15 = (void *)objc_opt_class(*(void *)(a1 + 40));
      uint64_t v16 = *(void *)(*(void *)(a1 + 40) + 64LL);
      int v23 = 138412546;
      id v24 = v15;
      __int16 v25 = 2112;
      uint64_t v26 = v16;
      id v17 = v15;
      __int128 v18 = (void *)_os_log_send_and_compose_impl( v11,  0LL,  0LL,  0LL,  &_mh_execute_header,  v14,  1LL,  "%@: Registered plugin connection: %@",  &v23,  22);

      if (!v18)
      {
LABEL_15:

        [*(id *)(a1 + 40) _fireDeferredPluginBlocksWithConnection:*(void *)(*(void *)(a1 + 40) + 64)];
        objc_destroyWeak(&v21);
        objc_destroyWeak(&location);

        goto LABEL_16;
      }

      __int16 v14 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v18,  4LL));
      free(v18);
      SSFileLog(v10, @"%@");
    }

    goto LABEL_15;
  }

void sub_10010EAEC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
}

void sub_10010EB28(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _disconnectPluginConnection:*(void *)(a1 + 32)];
}

void sub_10010EBE0(uint64_t a1)
{
  id v2 = *(id *)(*(void *)(a1 + 32) + 64LL);
  uint64_t v3 = *(void **)(a1 + 32);
  if (v2)
  {
    uint64_t v4 = (dispatch_queue_s *)v3[4];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_10010EF2C;
    block[3] = &unk_10034C8D0;
    id v30 = *(id *)(a1 + 40);
    id v29 = v2;
    dispatch_async(v4, block);

    id v5 = v30;
    goto LABEL_20;
  }

  if (!v3[9])
  {
    __int128 v6 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v6) {
      __int128 v6 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v7 = [v6 shouldLog];
    else {
      LODWORD(v_Block_object_dispose(va, 8) = v7;
    }
    __int128 v9 = (os_log_s *)objc_claimAutoreleasedReturnValue([v6 OSLogObject]);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO)) {
      uint64_t v8 = v8;
    }
    else {
      v8 &= 2u;
    }
    if ((_DWORD)v8)
    {
      uint64_t v10 = (void *)objc_opt_class(*(void *)(a1 + 32));
      LODWORD(location[0]) = 138412290;
      *(id *)((char *)location + 4) = v10;
      id v11 = v10;
      unsigned int v12 = (void *)_os_log_send_and_compose_impl( v8,  0LL,  0LL,  0LL,  &_mh_execute_header,  v9,  1LL,  "%@: Requesting plugin connection",  location,  12);

      if (!v12)
      {
LABEL_16:

        DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
        CFNotificationCenterPostNotification( DarwinNotifyCenter,  @"com.apple.itunesstored.sbplugin.requestconnection",  0LL,  0LL,  1u);
        dispatch_source_t v14 = dispatch_source_create( (dispatch_source_type_t)&_dispatch_source_type_timer,  0LL,  0LL,  *(dispatch_queue_t *)(*(void *)(a1 + 32) + 16LL));
        uint64_t v15 = *(void *)(a1 + 32);
        uint64_t v16 = *(void **)(v15 + 72);
        *(void *)(v15 + 72) = v14;

        id v17 = *(dispatch_source_s **)(*(void *)(a1 + 32) + 72LL);
        dispatch_time_t v18 = dispatch_time(0LL, 10000000000LL);
        dispatch_source_set_timer(v17, v18, 0LL, 0LL);
        objc_initWeak(location, *(id *)(a1 + 32));
        uint64_t v19 = *(dispatch_source_s **)(*(void *)(a1 + 32) + 72LL);
        handler[0] = _NSConcreteStackBlock;
        handler[1] = 3221225472LL;
        handler[2] = sub_10010EF3C;
        handler[3] = &unk_10034BC98;
        objc_copyWeak(&v27, location);
        dispatch_source_set_event_handler(v19, handler);
        dispatch_resume(*(dispatch_object_t *)(*(void *)(a1 + 32) + 72LL));
        objc_destroyWeak(&v27);
        objc_destroyWeak(location);
        uint64_t v3 = *(void **)(a1 + 32);
        goto LABEL_17;
      }

      __int128 v9 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v12,  4LL));
      free(v12);
      __int16 v25 = v9;
      SSFileLog(v6, @"%@");
    }

    goto LABEL_16;
  }

uint64_t sub_10010EF2C(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(void *)(a1 + 32));
}

void sub_10010EF3C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _timeoutPluginConnection];
}

void sub_10010F208(uint64_t a1)
{
  id v2 = -[NSNumber initWithInteger:](objc_alloc(&OBJC_CLASS___NSNumber), "initWithInteger:", *(unsigned int *)(a1 + 48));
  [*(id *)(*(void *)(a1 + 32) + 96) setObject:v2 forKey:*(void *)(a1 + 40)];
  uint64_t v3 = *(void **)(a1 + 40);
  uint64_t v4 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 32LL);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_10010F2C8;
  block[3] = &unk_10034BCE8;
  id v7 = v3;
  uint64_t v8 = v2;
  uint64_t v9 = *(void *)(a1 + 32);
  id v5 = v2;
  dispatch_async(v4, block);
}

void sub_10010F2C8(void *a1)
{
  uint64_t v3 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  -[NSMutableDictionary setObject:forKey:](v3, "setObject:forKey:", a1[4], BKSApplicationStateDisplayIDKey);
  -[NSMutableDictionary setObject:forKey:](v3, "setObject:forKey:", a1[5], BKSApplicationStateKey);
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
  [v2 postNotificationName:@"SpringBoardUtilityApplicationStateChangeNotification" object:a1[6] userInfo:v3];
}

void sub_10010F3D4(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(dispatch_queue_s **)(v3 + 32);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  v6[2] = sub_10010F46C;
  v6[3] = &unk_10034AD58;
  void v6[4] = v3;
  id v7 = v2;
  id v5 = v2;
  dispatch_async(v4, v6);
}

void sub_10010F46C(uint64_t a1)
{
  id v2 = *(void **)(a1 + 40);
  uint64_t v3 = *(void **)(*(void *)(a1 + 32) + 96LL);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  v6[2] = sub_10010F4E0;
  v6[3] = &unk_10034EC90;
  id v4 = v2;
  uint64_t v5 = *(void *)(a1 + 32);
  id v7 = v4;
  uint64_t v8 = v5;
  [v3 enumerateKeysAndObjectsUsingBlock:v6];
}

void sub_10010F4E0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  id v7 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  -[NSMutableDictionary setObject:forKey:](v7, "setObject:forKey:", v6, BKSApplicationStateDisplayIDKey);

  -[NSMutableDictionary setObject:forKey:](v7, "setObject:forKey:", v5, BKSApplicationStateKey);
  [*(id *)(a1 + 32) postNotificationName:@"SpringBoardUtilityApplicationStateChangeNotification" object:*(void *)(a1 + 40) userInfo:v7];
}

id sub_1001101EC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedStoreServicesConfig](&OBJC_CLASS___SSLogConfig, "sharedStoreServicesConfig"));
  uint64_t v8 = (void *)v7;
  if (!v6)
  {
    if (!v7) {
      uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v16 = [v8 shouldLog];
    else {
      LODWORD(v17) = v16;
    }
    dispatch_time_t v18 = (os_log_s *)objc_claimAutoreleasedReturnValue([v8 OSLogObject]);
    if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO)) {
      uint64_t v17 = v17;
    }
    else {
      v17 &= 2u;
    }
    if ((_DWORD)v17)
    {
      uint64_t v19 = (void *)objc_opt_class(*(void *)(a1 + 32));
      uint64_t v20 = *(void *)(a1 + 40);
      int v30 = 138543618;
      id v31 = v19;
      __int16 v32 = 2114;
      uint64_t v33 = v20;
      id v21 = v19;
      unsigned int v22 = (void *)_os_log_send_and_compose_impl( v17,  0LL,  0LL,  0LL,  &_mh_execute_header,  v18,  1LL,  "[%{public}@]: [%{public}@] Account fetching complete for shimmed purchases",  &v30,  22);

      if (!v22)
      {
LABEL_27:

        [*(id *)(a1 + 48) setAccount:v5];
        goto LABEL_28;
      }

      dispatch_time_t v18 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v22,  4LL));
      free(v22);
      SSFileLog(v8, @"%@");
    }

    goto LABEL_27;
  }

  if (!v7) {
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v9 = [v8 shouldLog];
  else {
    LODWORD(v10) = v9;
  }
  id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue([v8 OSLogObject]);
  if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
    uint64_t v10 = v10;
  }
  else {
    v10 &= 2u;
  }
  if (!(_DWORD)v10) {
    goto LABEL_13;
  }
  unsigned int v12 = (void *)objc_opt_class(*(void *)(a1 + 32));
  uint64_t v13 = *(void *)(a1 + 40);
  int v30 = 138543874;
  id v31 = v12;
  __int16 v32 = 2114;
  uint64_t v33 = v13;
  __int16 v34 = 2114;
  id v35 = v6;
  id v14 = v12;
  uint64_t v15 = (void *)_os_log_send_and_compose_impl( v10,  0LL,  0LL,  0LL,  &_mh_execute_header,  v11,  16LL,  "[%{public}@]: [%{public}@] Error encountered with fetching account: %{public}@",  &v30,  32);

  if (v15)
  {
    id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v15,  4LL));
    free(v15);
    SSFileLog(v8, @"%@");
LABEL_13:
  }

LABEL_28:
  id v23 = objc_alloc(&OBJC_CLASS___AMSPurchaseTask);
  uint64_t v24 = *(void *)(a1 + 48);
  __int16 v25 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) bag]);
  id v26 = [v23 initWithPurchase:v24 bag:v25];

  [v26 setDelegate:*(void *)(a1 + 32)];
  id v27 = (void *)objc_claimAutoreleasedReturnValue([v26 valueForKey:@"purchaseInfo"]);
  objc_msgSend(v27, "setHasBeenAuthedForBuy:", objc_msgSend(*(id *)(a1 + 48), "isPreauthenticated"));
  __int16 v28 = (void *)objc_claimAutoreleasedReturnValue([v26 performPurchase]);

  return v28;
}

void sub_100110CFC(uint64_t a1)
{
  id v1 = objc_alloc_init((Class)objc_opt_class(*(void *)(a1 + 32)));
  id v2 = (void *)qword_1003A3480;
  qword_1003A3480 = (uint64_t)v1;
}

id sub_100110DA0(uint64_t a1)
{
  id v2 = *(void **)(*(void *)(a1 + 32) + 32LL);
  if (!v2)
  {
    uint64_t v3 = objc_alloc_init(&OBJC_CLASS___NSCountedSet);
    uint64_t v4 = *(void *)(a1 + 32);
    id v5 = *(void **)(v4 + 32);
    *(void *)(v4 + 32) = v3;

    id v2 = *(void **)(*(void *)(a1 + 32) + 32LL);
  }

  [v2 addObject:*(void *)(a1 + 40)];
  id result = [*(id *)(*(void *)(a1 + 32) + 32) countForObject:*(void *)(a1 + 40)];
  if (result == (id)1) {
    return [*(id *)(a1 + 32) _sendDownloadKindsUsingNetwork:*(void *)(*(void *)(a1 + 32) + 32)];
  }
  return result;
}

id sub_100110E98(uint64_t a1)
{
  id result = *(id *)(*(void *)(a1 + 32) + 32LL);
  if (result)
  {
    id v3 = [result countForObject:*(void *)(a1 + 40)];
    id result = [*(id *)(*(void *)(a1 + 32) + 32) removeObject:*(void *)(a1 + 40)];
    if (v3 == (id)1) {
      return [*(id *)(a1 + 32) _sendDownloadKindsUsingNetwork:*(void *)(*(void *)(a1 + 32) + 32)];
    }
  }

  return result;
}

void sub_1001110D4(void *a1)
{
  __int128 v12 = 0u;
  __int128 v13 = 0u;
  __int128 v10 = 0u;
  __int128 v11 = 0u;
  id v2 = *(id *)(a1[4] + 24LL);
  id v3 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v11;
    do
    {
      for (uint64_t i = 0LL; i != v4; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v11 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v7 = *(void **)(*((void *)&v10 + 1) + 8LL * (void)i);
        uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "downloadKinds", (void)v10));
        unsigned int v9 = [v8 intersectsSet:a1[5]];

        if (v9) {
          [v7 sendChangeset:a1[6]];
        }
      }

      id v4 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }

    while (v4);
  }
}

void sub_1001112C4(void *a1)
{
  __int128 v12 = 0u;
  __int128 v13 = 0u;
  __int128 v10 = 0u;
  __int128 v11 = 0u;
  id v2 = *(id *)(a1[4] + 24LL);
  id v3 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v11;
    do
    {
      for (uint64_t i = 0LL; i != v4; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v11 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v7 = *(void **)(*((void *)&v10 + 1) + 8LL * (void)i);
        uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "downloadKinds", (void)v10));
        unsigned int v9 = [v8 containsObject:a1[5]];

        if (v9) {
          [v7 sendDownloadStateChangedWithID:a1[7] externalValues:a1[6] propertyValues:0];
        }
      }

      id v4 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }

    while (v4);
  }
}

void sub_1001114B8(void *a1)
{
  __int128 v12 = 0u;
  __int128 v13 = 0u;
  __int128 v10 = 0u;
  __int128 v11 = 0u;
  id v2 = *(id *)(a1[4] + 24LL);
  id v3 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v11;
    do
    {
      for (uint64_t i = 0LL; i != v4; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v11 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v7 = *(void **)(*((void *)&v10 + 1) + 8LL * (void)i);
        uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "downloadKinds", (void)v10));
        unsigned int v9 = [v8 containsObject:a1[5]];

        if (v9) {
          [v7 sendDownloadStateChangedWithID:a1[7] externalValues:0 propertyValues:a1[6]];
        }
      }

      id v4 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }

    while (v4);
  }
}

BOOL sub_100111A60(id a1, DownloadsTransaction *a2)
{
  id v2 = a2;
  -[DownloadsTransaction deletePersistentDownloadManagerWithClientID:persistenceID:]( v2,  "deletePersistentDownloadManagerWithClientID:persistenceID:",  @"com.apple.springboard",  @"SSDownloadQueue");
  id v3 = (void *)objc_claimAutoreleasedReturnValue(-[DownloadsSession pipeline](v2, "pipeline"));

  [v3 reconnectWithURLSessionTasks];
  return 1;
}

void sub_100111AB8(id a1)
{
  if (+[DownloadsDatabaseGarbageCollectionOperation garbageCollectionTimerIsExpired]( &OBJC_CLASS___DownloadsDatabaseGarbageCollectionOperation,  "garbageCollectionTimerIsExpired"))
  {
    id v2 = objc_alloc_init(&OBJC_CLASS___DownloadsDatabaseGarbageCollectionOperation);
    id v1 = (void *)objc_claimAutoreleasedReturnValue(+[ISOperationQueue mainQueue](&OBJC_CLASS___ISOperationQueue, "mainQueue"));
    [v1 addOperation:v2];
  }

void sub_100111CBC(uint64_t a1)
{
  id v2 = objc_autoreleasePoolPush();
  id v3 = objc_alloc_init(&OBJC_CLASS___WorkspaceDownloadObserverClient);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _downloadPersistentIDsFromBundleIDs:*(void *)(a1 + 40)]);
  if ([v4 count])
  {
    uint64_t v5 = *(void **)(a1 + 32);
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 allValues]);
    [v5 _pauseDownloads:v6 isForced:1 client:v3];
  }

  objc_autoreleasePoolPop(v2);
}

void sub_100111ECC(uint64_t a1)
{
  id v2 = objc_autoreleasePoolPush();
  id v3 = objc_alloc_init(&OBJC_CLASS___WorkspaceDownloadObserverClient);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _downloadPersistentIDsFromBundleIDs:*(void *)(a1 + 40)]);
  if ([v4 count])
  {
    uint64_t v5 = *(void **)(a1 + 32);
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 allValues]);
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSOrderedSet orderedSetWithArray:](&OBJC_CLASS___NSOrderedSet, "orderedSetWithArray:", v6));
    [v5 _resumeDownloads:v7 client:v3];
  }

  objc_autoreleasePoolPop(v2);
}

void sub_1001120F8(uint64_t a1)
{
  id v2 = objc_autoreleasePoolPush();
  id v3 = objc_alloc_init(&OBJC_CLASS___WorkspaceDownloadObserverClient);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _downloadPersistentIDsFromBundleIDs:*(void *)(a1 + 40)]);
  if ([v4 count])
  {
    uint64_t v5 = *(void **)(a1 + 32);
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 allValues]);
    [v5 _cancelDownloads:v6 client:v3];
  }

  objc_autoreleasePoolPop(v2);
}

void sub_100112304(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[DownloadsDatabase downloadsDatabase](&OBJC_CLASS___DownloadsDatabase, "downloadsDatabase"));
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  v6[2] = sub_100112398;
  v6[3] = &unk_10034CE68;
  id v3 = *(id *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  id v7 = v3;
  uint64_t v8 = v4;
  id v5 = [v2 modifyUsingTransactionBlock:v6];
}

uint64_t sub_100112398(uint64_t a1, void *a2)
{
  id v40 = a2;
  id v39 = (void *)objc_claimAutoreleasedReturnValue([v40 database]);
  id v41 = objc_alloc_init(&OBJC_CLASS___NSMutableOrderedSet);
  uint64_t v50 = 0LL;
  uint64_t v51 = &v50;
  uint64_t v52 = 0x2020000000LL;
  BOOL v53 = [*(id *)(a1 + 32) count] == (id)1;
  v59[0] = @"IFNULL(download_state.blocked_reason, 0)";
  v59[1] = @"IFNULL(download_state.phase, SSDownloadPhaseWaiting)";
  __int128 v46 = 0u;
  __int128 v47 = 0u;
  __int128 v48 = 0u;
  __int128 v49 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v46 objects:v58 count:16];
  if (v3)
  {
    uint64_t v4 = *(void *)v47;
    do
    {
      for (uint64_t i = 0LL; i != v3; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v47 != v4) {
          objc_enumerationMutation(v2);
        }
        id v6 = *(void **)(*((void *)&v46 + 1) + 8LL * (void)i);
        id v7 = objc_autoreleasePoolPush();
        if (+[ApplicationWorkspace keepSafeHarborDataForBundleID:]( &OBJC_CLASS___ApplicationWorkspace,  "keepSafeHarborDataForBundleID:",  v6))
        {
          *((_BYTE *)v51 + 24) = 0;
          uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
          if (!v8) {
            uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
          }
          LODWORD(v9) = objc_msgSend(v8, "shouldLog", v36);
          unsigned int v10 = [v8 shouldLogToDisk];
          __int128 v11 = (os_log_s *)objc_claimAutoreleasedReturnValue([v8 OSLogObject]);
          __int128 v12 = v11;
          if (v10) {
            LODWORD(v9) = v9 | 2;
          }
          if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO)) {
            uint64_t v9 = v9;
          }
          else {
            v9 &= 2u;
          }
          if ((_DWORD)v9)
          {
            __int128 v13 = (void *)objc_opt_class(*(void *)(a1 + 40));
            int v54 = 138412546;
            id v55 = v13;
            __int16 v56 = 2112;
            id v57 = v6;
            id v14 = v13;
            LODWORD(v37) = 22;
            uint64_t v15 = (void *)_os_log_send_and_compose_impl( v9,  0LL,  0LL,  0LL,  &_mh_execute_header,  v12,  1LL,  "%@: Unable to rescue VPP Applicaton with bundleID: %@",  &v54,  v37);

            if (!v15) {
              goto LABEL_19;
            }
            __int128 v12 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v15,  4LL));
            free(v15);
            int v36 = v12;
            SSFileLog(v8, @"%@");
          }
        }

        else
        {
          uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue( +[SSSQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SSSQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"bundle_id",  v6));
          __int128 v12 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[DownloadEntity queryWithDatabase:predicate:]( &OBJC_CLASS___DownloadEntity,  "queryWithDatabase:predicate:",  v39,  v8));
          v42[0] = _NSConcreteStackBlock;
          v42[1] = 3221225472LL;
          v42[2] = sub_100112A80;
          void v42[3] = &unk_10034ED48;
          uint64_t v45 = &v50;
          uint64_t v43 = v41;
          id v44 = v40;
          -[os_log_s enumeratePersistentIDsAndProperties:count:usingBlock:]( v12,  "enumeratePersistentIDsAndProperties:count:usingBlock:",  v59,  2LL,  v42);
        }

LABEL_19:
        objc_autoreleasePoolPop(v7);
      }

      id v3 = [v2 countByEnumeratingWithState:&v46 objects:v58 count:16];
    }

    while (v3);
  }

  if (-[NSMutableOrderedSet count](v41, "count"))
  {
    unsigned int v16 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v16) {
      unsigned int v16 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v17 = objc_msgSend(v16, "shouldLog", v36);
    unsigned int v18 = [v16 shouldLogToDisk];
    uint64_t v19 = (os_log_s *)objc_claimAutoreleasedReturnValue([v16 OSLogObject]);
    uint64_t v20 = v19;
    if (v18) {
      v17 |= 2u;
    }
    if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO)) {
      uint64_t v21 = v17;
    }
    else {
      uint64_t v21 = v17 & 2;
    }
    if ((_DWORD)v21)
    {
      id v22 = (id)objc_opt_class(*(void *)(a1 + 40));
      id v23 = -[NSMutableOrderedSet count](v41, "count");
      int v54 = 138412546;
      id v55 = v22;
      __int16 v56 = 2048;
      id v57 = v23;
      LODWORD(v37) = 22;
      uint64_t v24 = (void *)_os_log_send_and_compose_impl( v21,  0LL,  0LL,  0LL,  &_mh_execute_header,  v20,  1LL,  "%@: Reset %ld downloads after prioritize",  &v54,  v37);

      if (!v24)
      {
LABEL_33:

        [v40 resetDownloadsWithIdentifiers:v41];
        [*(id *)(a1 + 40) _retryRestoreIfNecessaryForTransaction:v40];
        goto LABEL_34;
      }

      uint64_t v20 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v24,  4LL));
      free(v24);
      int v36 = v20;
      SSFileLog(v16, @"%@");
    }

    goto LABEL_33;
  }

void sub_100112A14( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, char a33)
{
}

void sub_100112A80(uint64_t a1, uint64_t a2, id *a3)
{
  id v6 = -[NSNumber initWithLongLong:](objc_alloc(&OBJC_CLASS___NSNumber), "initWithLongLong:", a2);
  *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = 0;
  if ([*a3 integerValue]
    || ([a3[1] isEqualToString:SSDownloadPhaseFailed] & 1) != 0
    || [a3[1] isEqualToString:SSDownloadPhasePaused])
  {
    [*(id *)(a1 + 32) addObject:v6];
  }

  else
  {
    [*(id *)(a1 + 40) prioritizeDownloadWithID:a2 aboveDownloadWithID:0 error:0];
  }
}

void sub_100112BC8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(+[DownloadsDatabase downloadsDatabase](&OBJC_CLASS___DownloadsDatabase, "downloadsDatabase"));
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472LL;
  v12[2] = sub_100112CAC;
  v12[3] = &unk_10034C668;
  id v13 = v5;
  id v8 = *(id *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  id v14 = v8;
  uint64_t v15 = v9;
  id v10 = v5;
  id v11 = [v7 modifyUsingTransactionBlock:v12];

  xpc_dictionary_set_BOOL(v6, "0", 1);
}

uint64_t sub_100112CAC(void *a1, void *a2)
{
  id v3 = (void *)a1[4];
  uint64_t v4 = a1[5];
  id v5 = a2;
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 database]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v3 downloadsQueryForMessage:v4 database:v6]);

  id v8 = [v7 copyEntityIdentifiers];
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v9) {
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v10 = [v9 shouldLog];
  else {
    LODWORD(v11) = v10;
  }
  __int128 v12 = (os_log_s *)objc_claimAutoreleasedReturnValue([v9 OSLogObject]);
  if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO)) {
    uint64_t v11 = v11;
  }
  else {
    v11 &= 2u;
  }
  if (!(_DWORD)v11) {
    goto LABEL_12;
  }
  id v13 = (void *)objc_opt_class(a1[6]);
  id v14 = v13;
  id v15 = [v8 count];
  uint64_t v16 = a1[4];
  int v19 = 138412802;
  uint64_t v20 = v13;
  __int16 v21 = 2048;
  id v22 = v15;
  __int16 v23 = 2112;
  uint64_t v24 = v16;
  unsigned int v17 = (void *)_os_log_send_and_compose_impl( v11,  0LL,  0LL,  0LL,  &_mh_execute_header,  v12,  1LL,  "%@: Canceling all %lu downloads for %@",  &v19,  32);

  if (v17)
  {
    __int128 v12 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v17,  4LL));
    free(v17);
    SSFileLog(v9, @"%@");
LABEL_12:
  }

  [v5 finishDownloadsWithIdentifiers:v8 finalPhase:SSDownloadPhaseCanceled];
  return 1LL;
}

void sub_100112F54(uint64_t a1, void *a2, void *a3)
{
  id v10 = a2;
  id v5 = a3;
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = objc_opt_class(&OBJC_CLASS___NSArray);
  id v8 = (void *)SSXPCDictionaryCopyCFObjectWithClass(v6, "1", v7);
  if ([v8 count]) {
    unsigned __int8 v9 = [*(id *)(a1 + 40) _cancelDownloads:v8 client:v10];
  }
  else {
    unsigned __int8 v9 = 1;
  }
  xpc_dictionary_set_BOOL(v5, "0", v9);
}

void sub_100113088(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  xpc_object_t value = xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 32), "1");
  id v8 = (void *)objc_claimAutoreleasedReturnValue(value);
  unsigned __int8 v9 = v8;
  if (v8 && xpc_get_type(v8) == (xpc_type_t)&_xpc_type_array && xpc_array_get_count(v9))
  {
    id v10 = (void *)objc_claimAutoreleasedReturnValue(+[DownloadsDatabase downloadsDatabase](&OBJC_CLASS___DownloadsDatabase, "downloadsDatabase"));
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472LL;
    v14[2] = sub_1001131AC;
    v14[3] = &unk_10034C668;
    id v15 = v5;
    id v11 = v9;
    uint64_t v12 = *(void *)(a1 + 40);
    id v16 = v11;
    uint64_t v17 = v12;
    id v13 = [v10 modifyUsingTransactionBlock:v14];
  }

  xpc_dictionary_set_BOOL(v6, "0", 1);
}

uint64_t sub_1001131AC(void *a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (void *)a1[4];
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v3 database]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 persistentDownloadManagerInDatabase:v5]);

  if (v6)
  {
    uint64_t v7 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    id v8 = (void *)a1[5];
    applier[0] = _NSConcreteStackBlock;
    applier[1] = 3221225472LL;
    applier[2] = sub_100113424;
    applier[3] = &unk_10034BBD0;
    unsigned __int8 v9 = v7;
    id v22 = v9;
    xpc_array_apply(v8, applier);
    id v10 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v10) {
      id v10 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v11 = [v10 shouldLog];
    else {
      LODWORD(v12) = v11;
    }
    id v13 = (os_log_s *)objc_claimAutoreleasedReturnValue([v10 OSLogObject]);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO)) {
      uint64_t v12 = v12;
    }
    else {
      v12 &= 2u;
    }
    if ((_DWORD)v12)
    {
      id v14 = (void *)objc_opt_class(a1[6]);
      id v15 = v14;
      id v16 = -[NSMutableArray count](v9, "count");
      uint64_t v17 = a1[4];
      int v23 = 138412802;
      uint64_t v24 = v14;
      __int16 v25 = 2048;
      id v26 = v16;
      __int16 v27 = 2112;
      uint64_t v28 = v17;
      unsigned int v18 = (void *)_os_log_send_and_compose_impl( v12,  0LL,  0LL,  0LL,  &_mh_execute_header,  v13,  1LL,  "%@: Finishing %lu downloads for client: %@",  &v23,  32);

      if (!v18)
      {
LABEL_14:

        int v19 = (void *)objc_claimAutoreleasedReturnValue([v6 finishPersistentDownloadsWithDownloadIDs:v9]);
        [v3 unionChangeset:v19];

        goto LABEL_15;
      }

      id v13 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v18,  4LL));
      free(v18);
      SSFileLog(v10, @"%@");
    }

    goto LABEL_14;
  }

uint64_t sub_100113424(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if (xpc_get_type(v4) == (xpc_type_t)&_xpc_type_int64)
  {
    id v5 = -[NSNumber initWithLongLong:](objc_alloc(&OBJC_CLASS___NSNumber), "initWithLongLong:", xpc_int64_get_value(v4));
    [*(id *)(a1 + 32) addObject:v5];
  }

  return 1LL;
}

void sub_1001134B0(id a1, DownloadManagerClient *a2, OS_xpc_object *a3)
{
  id v4 = a2;
  id v5 = a3;
  xpc_object_t v6 = xpc_array_create(0LL, 0LL);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[DownloadsDatabase downloadsDatabase](&OBJC_CLASS___DownloadsDatabase, "downloadsDatabase"));
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  v10[2] = sub_100113590;
  v10[3] = &unk_10034CE18;
  unsigned int v11 = v4;
  id v12 = v6;
  id v8 = v6;
  unsigned __int8 v9 = v4;
  [v7 readUsingTransactionBlock:v10];

  xpc_dictionary_set_value(v5, "0", v8);
}

void sub_100113590(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 database]);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v3 activeDownloadIdentifiers]);
  __int128 v12 = 0u;
  __int128 v13 = 0u;
  __int128 v14 = 0u;
  __int128 v15 = 0u;
  id v6 = [v5 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v13;
    do
    {
      unsigned __int8 v9 = 0LL;
      do
      {
        if (*(void *)v13 != v8) {
          objc_enumerationMutation(v5);
        }
        id v10 = [*(id *)(*((void *)&v12 + 1) + 8 * (void)v9) longLongValue];
        unsigned int v11 = -[DownloadEntity initWithPersistentID:inDatabase:]( objc_alloc(&OBJC_CLASS___DownloadEntity),  "initWithPersistentID:inDatabase:",  v10,  v4);

        unsigned __int8 v9 = (char *)v9 + 1;
      }

      while (v7 != v9);
      id v7 = [v5 countByEnumeratingWithState:&v12 objects:v16 count:16];
    }

    while (v7);
  }
}

void sub_10011377C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  int64_t int64 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 32), "1");
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = objc_opt_class(&OBJC_CLASS___NSArray);
  id v10 = (void *)SSXPCDictionaryCopyCFObjectWithClass(v8, "2", v9);
  unsigned int v11 = v10;
  if (int64 && [v10 count])
  {
    __int128 v12 = (void *)objc_claimAutoreleasedReturnValue(+[DownloadsDatabase downloadsDatabase](&OBJC_CLASS___DownloadsDatabase, "downloadsDatabase"));
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472LL;
    void v13[2] = sub_1001138B4;
    v13[3] = &unk_10034EDD8;
    int64_t v18 = int64;
    id v14 = v5;
    id v15 = *(id *)(a1 + 32);
    id v16 = v11;
    id v17 = v6;
    [v12 readUsingTransactionBlock:v13];
  }
}

void sub_1001138B4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc(&OBJC_CLASS___DownloadAssetEntity);
  uint64_t v5 = *(void *)(a1 + 64);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v3 database]);
  id v7 = -[DownloadAssetEntity initWithPersistentID:inDatabase:](v4, "initWithPersistentID:inDatabase:", v5, v6);

  if (([*(id *)(a1 + 32) hasEntitlements] & 1) != 0
    || [*(id *)(a1 + 32) canAccessAsset:v7])
  {
    if (xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 40), "0") == 10)
    {
      id v8 = -[DownloadAssetEntity copyXPCEncodedValuesForClientProperties:]( v7,  "copyXPCEncodedValuesForClientProperties:",  *(void *)(a1 + 48));
      xpc_dictionary_set_value(*(xpc_object_t *)(a1 + 56), "0", v8);
    }

    else
    {
      id v17 = v7;
      xpc_object_t v9 = xpc_array_create(0LL, 0LL);
      __int128 v18 = 0u;
      __int128 v19 = 0u;
      __int128 v20 = 0u;
      __int128 v21 = 0u;
      id v10 = *(id *)(a1 + 48);
      id v11 = [v10 countByEnumeratingWithState:&v18 objects:v22 count:16];
      if (v11)
      {
        id v12 = v11;
        uint64_t v13 = *(void *)v19;
        do
        {
          for (uint64_t i = 0LL; i != v12; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v19 != v13) {
              objc_enumerationMutation(v10);
            }
            id v15 = (void *)objc_claimAutoreleasedReturnValue( [v3 valueForExternalProperty:*(void *)(*((void *)&v18 + 1) + 8 * (void)i) ofAssetID:*(void *)(a1 + 64)]);
            if (v15)
            {
              SSXPCArraySetCFObject(v9, -1LL, v15);
            }

            else
            {
              id v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSNull null](&OBJC_CLASS___NSNull, "null"));
              SSXPCArraySetCFObject(v9, -1LL, v16);
            }
          }

          id v12 = [v10 countByEnumeratingWithState:&v18 objects:v22 count:16];
        }

        while (v12);
      }

      xpc_dictionary_set_value(*(xpc_object_t *)(a1 + 56), "0", v9);
      id v7 = v17;
    }
  }
}

void sub_100113B6C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  int64_t int64 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 32), "1");
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = objc_opt_class(&OBJC_CLASS___NSString);
  uint64_t v10 = SSXPCDictionaryCopyCFObjectWithClass(v8, "2", v9);
  id v11 = (void *)v10;
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(+[DownloadsDatabase downloadsDatabase](&OBJC_CLASS___DownloadsDatabase, "downloadsDatabase"));
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472LL;
    v14[2] = sub_100113C8C;
    v14[3] = &unk_10034EE28;
    int64_t v18 = int64;
    id v15 = v5;
    id v16 = v11;
    id v17 = v6;
    [v13 readUsingTransactionBlock:v14];
  }
}

void sub_100113C8C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc(&OBJC_CLASS___DownloadEntity);
  uint64_t v5 = *(void *)(a1 + 56);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v3 database]);
  id v7 = -[DownloadEntity initWithPersistentID:inDatabase:](v4, "initWithPersistentID:inDatabase:", v5, v6);

  if ([*(id *)(a1 + 32) canAccessDownload:v7])
  {
    id v8 = -[DownloadEntity copyAssetsWithAssetType:](v7, "copyAssetsWithAssetType:", *(void *)(a1 + 40));
    xpc_object_t v9 = xpc_array_create(0LL, 0LL);
    __int128 v15 = 0u;
    __int128 v16 = 0u;
    __int128 v17 = 0u;
    __int128 v18 = 0u;
    id v10 = v8;
    id v11 = [v10 countByEnumeratingWithState:&v15 objects:v19 count:16];
    if (v11)
    {
      id v12 = v11;
      uint64_t v13 = *(void *)v16;
      do
      {
        id v14 = 0LL;
        do
        {
          if (*(void *)v16 != v13) {
            objc_enumerationMutation(v10);
          }
          xpc_array_set_int64( v9,  0xFFFFFFFFFFFFFFFFLL,  (int64_t)objc_msgSend(*(id *)(*((void *)&v15 + 1) + 8 * (void)v14), "persistentID", (void)v15));
          id v14 = (char *)v14 + 1;
        }

        while (v12 != v14);
        id v12 = [v10 countByEnumeratingWithState:&v15 objects:v19 count:16];
      }

      while (v12);
    }

    xpc_dictionary_set_value(*(xpc_object_t *)(a1 + 48), "0", v9);
  }
}

void sub_100113E7C(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = *(void **)(*(void *)(a1 + 32) + 32LL);
  id v4 = a3;
  SSXPCDictionarySetCFObject(v4, "0", [v3 allObjects]);
}

void sub_100113F58(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  int64_t int64 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 32), "1");
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = objc_opt_class(&OBJC_CLASS___NSArray);
  id v10 = (void *)SSXPCDictionaryCopyCFObjectWithClass(v8, "2", v9);
  id v11 = v10;
  if (int64 && [v10 count])
  {
    id v12 = (void *)objc_claimAutoreleasedReturnValue(+[DownloadsDatabase downloadsDatabase](&OBJC_CLASS___DownloadsDatabase, "downloadsDatabase"));
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472LL;
    void v13[2] = sub_100114090;
    v13[3] = &unk_10034EDD8;
    int64_t v18 = int64;
    id v14 = v5;
    id v15 = *(id *)(a1 + 32);
    id v16 = v11;
    id v17 = v6;
    [v12 readUsingTransactionBlock:v13];
  }
}

void sub_100114090(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc(&OBJC_CLASS___DownloadEntity);
  uint64_t v5 = *(void *)(a1 + 64);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v3 database]);
  id v7 = -[DownloadEntity initWithPersistentID:inDatabase:](v4, "initWithPersistentID:inDatabase:", v5, v6);

  if (([*(id *)(a1 + 32) hasEntitlements] & 1) != 0
    || [*(id *)(a1 + 32) canAccessDownload:v7])
  {
    if (xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 40), "0") == 13)
    {
      id v8 = -[DownloadEntity copyXPCEncodedValuesForClientProperties:]( v7,  "copyXPCEncodedValuesForClientProperties:",  *(void *)(a1 + 48));
      xpc_dictionary_set_value(*(xpc_object_t *)(a1 + 56), "0", v8);
    }

    else
    {
      id v17 = v7;
      xpc_object_t v9 = xpc_array_create(0LL, 0LL);
      __int128 v18 = 0u;
      __int128 v19 = 0u;
      __int128 v20 = 0u;
      __int128 v21 = 0u;
      id v10 = *(id *)(a1 + 48);
      id v11 = [v10 countByEnumeratingWithState:&v18 objects:v22 count:16];
      if (v11)
      {
        id v12 = v11;
        uint64_t v13 = *(void *)v19;
        do
        {
          for (uint64_t i = 0LL; i != v12; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v19 != v13) {
              objc_enumerationMutation(v10);
            }
            id v15 = (void *)objc_claimAutoreleasedReturnValue( [v3 valueForExternalProperty:*(void *)(*((void *)&v18 + 1) + 8 * (void)i) ofDownloadID:*(void *)(a1 + 64)]);
            if (v15)
            {
              SSXPCArraySetCFObject(v9, -1LL, v15);
            }

            else
            {
              id v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSNull null](&OBJC_CLASS___NSNull, "null"));
              SSXPCArraySetCFObject(v9, -1LL, v16);
            }
          }

          id v12 = [v10 countByEnumeratingWithState:&v18 objects:v22 count:16];
        }

        while (v12);
      }

      xpc_dictionary_set_value(*(xpc_object_t *)(a1 + 56), "0", v9);
      id v7 = v17;
    }
  }
}

void sub_100114348(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(+[DownloadsDatabase downloadsDatabase](&OBJC_CLASS___DownloadsDatabase, "downloadsDatabase"));
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472LL;
  v12[2] = sub_100114418;
  v12[3] = &unk_10034EEC8;
  uint64_t v8 = *(void *)(a1 + 32);
  xpc_object_t v9 = *(void **)(a1 + 40);
  id v13 = v5;
  uint64_t v14 = v8;
  id v15 = v9;
  id v16 = v6;
  id v10 = v6;
  id v11 = v5;
  [v7 readUsingTransactionBlock:v12];
}

void sub_100114418(uint64_t a1, void *a2)
{
  id v31 = a2;
  xpc_object_t v33 = xpc_array_create(0LL, 0LL);
  id v35 = (void *)objc_claimAutoreleasedReturnValue([v31 database]);
  id v3 = objc_opt_new(&OBJC_CLASS___NSMutableArray);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) prefetchedDownloadProperties]);
  id v5 = [v4 mutableCopy];

  id v6 = *(void **)(a1 + 40);
  v59[0] = _NSConcreteStackBlock;
  v59[1] = 3221225472LL;
  void v59[2] = sub_100114858;
  v59[3] = &unk_10034EE50;
  id v7 = v5;
  id v60 = v7;
  uint64_t v8 = v3;
  id v61 = v8;
  [v6 _filterAndTranslateProperties:v7 usingBlock:v59];
  xpc_object_t v9 = (char *)[v7 count];
  id v10 = objc_alloc(&OBJC_CLASS___NSMutableArray);
  id v11 = -[NSMutableArray initWithObjects:]( v10,  "initWithObjects:",  SSDownloadPropertyIsDiverted,  SSDownloadPropertyDivertedJobID,  0LL);
  id v12 = *(void **)(a1 + 40);
  v56[0] = _NSConcreteStackBlock;
  v56[1] = 3221225472LL;
  v56[2] = sub_1001148B0;
  v56[3] = &unk_10034EE50;
  id v13 = v11;
  id v57 = v13;
  uint64_t v14 = v8;
  int v58 = v14;
  [v12 _filterAndTranslateProperties:v13 usingBlock:v56];
  id v15 = -[NSMutableArray count](v13, "count");
  id v16 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) prefetchedDownloadExternalProperties]);
  id v17 = [v16 mutableCopy];

  uint64_t v18 = (uint64_t)&v9[(void)v15];
  v46[0] = _NSConcreteStackBlock;
  v46[1] = 3221225472LL;
  v46[2] = sub_100114908;
  v46[3] = &unk_10034EE78;
  uint64_t v52 = &v9[(void)v15];
  id v53 = [v17 count];
  id v19 = v33;
  id v47 = v19;
  int v54 = v9;
  id v34 = v7;
  id v48 = v34;
  id v55 = v15;
  uint64_t v30 = v13;
  __int128 v49 = v30;
  id v20 = v17;
  id v50 = v20;
  id v32 = v31;
  id v51 = v32;
  __int128 v21 = objc_retainBlock(v46);
  id v22 = v14;
  if (v18 < 1)
  {
    uint64_t v24 = 0LL;
    int v23 = 0LL;
  }

  else
  {
    int v23 = malloc(8 * v18);
    uint64_t v24 = malloc(8 * v18);
    -[NSMutableArray getObjects:range:](v22, "getObjects:range:", v23, 0LL, v18);
  }

  xpc_object_t value = xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 48), "2");
  id v26 = (void *)objc_claimAutoreleasedReturnValue(value);
  __int16 v27 = v26;
  if (v26 && xpc_get_type(v26) == (xpc_type_t)&_xpc_type_array && xpc_array_get_count(v27))
  {
    unsigned __int8 v29 = [*(id *)(a1 + 32) hasEntitlements];
    applier[0] = _NSConcreteStackBlock;
    applier[1] = 3221225472LL;
    applier[2] = sub_100114BBC;
    applier[3] = &unk_10034EEA0;
    id v37 = v35;
    unsigned __int8 v43 = v29;
    id v38 = *(id *)(a1 + 32);
    uint64_t v40 = v18;
    id v41 = v24;
    id v42 = v23;
    id v39 = v21;
    xpc_array_apply(v27, applier);

    uint64_t v28 = v37;
  }

  else
  {
    uint64_t v28 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) downloadsQueryForMessage:*(void *)(a1 + 48) database:v35]);
    v44[0] = _NSConcreteStackBlock;
    v44[1] = 3221225472LL;
    v44[2] = sub_100114BB0;
    v44[3] = &unk_10034DF58;
    uint64_t v45 = v21;
    [v28 enumeratePersistentIDsAndProperties:v23 count:v18 usingBlock:v44];
  }

  if (v23) {
    free(v23);
  }
  if (v24) {
    free(v24);
  }

  if (v22) {
    CFRelease(v22);
  }
  xpc_dictionary_set_value(*(xpc_object_t *)(a1 + 56), "0", v19);
}

void sub_100114858(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = *(void **)(a1 + 32);
  id v6 = a3;
  [v5 removeObjectsAtIndexes:a2];
  [*(id *)(a1 + 40) addObjectsFromArray:v6];
}

void sub_1001148B0(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = *(void **)(a1 + 32);
  id v6 = a3;
  [v5 removeObjectsAtIndexes:a2];
  [*(id *)(a1 + 40) addObjectsFromArray:v6];
}

void sub_100114908(uint64_t a1, int64_t value, uint64_t a3)
{
  if (*(_OWORD *)(a1 + 72) == 0LL)
  {
    xpc_array_set_int64(*(xpc_object_t *)(a1 + 32), 0xFFFFFFFFFFFFFFFFLL, value);
  }

  else
  {
    xpc_object_t valuea = xpc_dictionary_create(0LL, 0LL, 0LL);
    xpc_dictionary_set_int64(valuea, "0", value);
    if (*(uint64_t *)(a1 + 72) >= 1)
    {
      id v6 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
      id v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSNull null](&OBJC_CLASS___NSNull, "null"));
      if (*(uint64_t *)(a1 + 88) >= 1)
      {
        uint64_t v8 = 0LL;
        do
        {
          if (*(void *)(a3 + 8 * v8)) {
            xpc_object_t v9 = *(void **)(a3 + 8 * v8);
          }
          else {
            xpc_object_t v9 = v7;
          }
          id v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) objectAtIndex:v8]);
          -[NSMutableDictionary setObject:forKey:](v6, "setObject:forKey:", v9, v10);

          ++v8;
        }

        while (v8 < *(void *)(a1 + 88));
      }

      SSXPCDictionarySetCFObject(valuea, "1", v6);
    }

    if (*(uint64_t *)(a1 + 96) >= 1)
    {
      id v11 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
      id v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSNull null](&OBJC_CLASS___NSNull, "null"));
      if (*(uint64_t *)(a1 + 96) >= 1)
      {
        uint64_t v13 = 0LL;
        uint64_t v14 = a3 + 8LL * *(void *)(a1 + 88);
        do
        {
          if (*(void *)(v14 + 8 * v13)) {
            id v15 = *(void **)(v14 + 8 * v13);
          }
          else {
            id v15 = v12;
          }
          id v16 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) objectAtIndex:v13]);
          -[NSMutableDictionary setObject:forKey:](v11, "setObject:forKey:", v15, v16);

          ++v13;
        }

        while (v13 < *(void *)(a1 + 96));
      }

      SSXPCDictionarySetCFObject(valuea, "3", v11);
    }

    if (*(uint64_t *)(a1 + 80) >= 1)
    {
      id v17 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
      uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSNull null](&OBJC_CLASS___NSNull, "null"));
      if (*(uint64_t *)(a1 + 80) >= 1)
      {
        uint64_t v19 = 0LL;
        do
        {
          id v20 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) objectAtIndex:v19]);
          uint64_t v21 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 64) valueForExternalProperty:v20 ofDownloadID:value]);
          id v22 = (void *)v21;
          if (v21) {
            int v23 = (void *)v21;
          }
          else {
            int v23 = v18;
          }
          -[NSMutableDictionary setObject:forKey:](v17, "setObject:forKey:", v23, v20);

          ++v19;
        }

        while (v19 < *(void *)(a1 + 80));
      }

      SSXPCDictionarySetCFObject(valuea, "2", v17);
    }

    xpc_array_append_value(*(xpc_object_t *)(a1 + 32), valuea);
  }

uint64_t sub_100114BB0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_100114BBC(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if (xpc_get_type(v4) == (xpc_type_t)&_xpc_type_int64)
  {
    id v5 = -[DownloadEntity initWithPersistentID:inDatabase:]( objc_alloc(&OBJC_CLASS___DownloadEntity),  "initWithPersistentID:inDatabase:",  xpc_int64_get_value(v4),  *(void *)(a1 + 32));
    if ((*(_BYTE *)(a1 + 80) || [*(id *)(a1 + 40) canAccessDownload:v5])
      && -[DownloadEntity existsInDatabase](v5, "existsInDatabase"))
    {
      if (*(uint64_t *)(a1 + 56) >= 1) {
        -[DownloadEntity getValues:forProperties:count:]( v5,  "getValues:forProperties:count:",  *(void *)(a1 + 64),  *(void *)(a1 + 72));
      }
      (*(void (**)(void, id, void))(*(void *)(a1 + 48) + 16LL))( *(void *)(a1 + 48),  -[DownloadEntity persistentID](v5, "persistentID"),  *(void *)(a1 + 64));
    }
  }

  return 1LL;
}

void sub_100114D1C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v13 = 0LL;
  uint64_t v14 = &v13;
  uint64_t v15 = 0x2020000000LL;
  char v16 = 0;
  int64_t int64 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 32), "1");
  if (int64)
  {
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[DownloadsDatabase downloadsDatabase](&OBJC_CLASS___DownloadsDatabase, "downloadsDatabase"));
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472LL;
    v9[2] = sub_100114E44;
    v9[3] = &unk_10034EEF0;
    id v10 = *(id *)(a1 + 32);
    id v11 = &v13;
    int64_t v12 = int64;
    [v8 readUsingTransactionBlock:v9];
  }

  xpc_dictionary_set_BOOL(v6, "0", *((_BYTE *)v14 + 24));
  _Block_object_dispose(&v13, 8);
}

void sub_100114E2C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_100114E44(uint64_t a1, void *a2)
{
  id v9 = a2;
  int64_t int64 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 32), "0");
  if (int64 == 52)
  {
    id v4 = &OBJC_CLASS___DownloadEntity;
  }

  else
  {
    id v4 = &OBJC_CLASS___DownloadAssetEntity;
  }

  id v5 = objc_alloc(v4);
  uint64_t v6 = *(void *)(a1 + 48);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v9 database]);
  id v8 = [v5 initWithPersistentID:v6 inDatabase:v7];

  if (v8)
  {
    *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [v8 existsInDatabase];
  }

void sub_100114F8C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if ((SSDeviceSupportsDownload() & 1) != 0)
  {
    uint64_t v48 = 0LL;
    __int128 v49 = &v48;
    uint64_t v50 = 0x2020000000LL;
    char v51 = 0;
    uint64_t v44 = 0LL;
    uint64_t v45 = &v44;
    uint64_t v46 = 0x2020000000LL;
    uint64_t v47 = 100LL;
    *(void *)int v58 = 0LL;
    *(void *)&v58[8] = v58;
    *(void *)&v58[16] = 0x3032000000LL;
    id v59 = sub_100115530;
    id v60 = sub_100115540;
    id v61 = 0LL;
    v43[0] = 0LL;
    v43[1] = v43;
    v43[2] = 0x2020000000LL;
    v43[3] = 0LL;
    if ([v5 hasEntitlements])
    {
      xpc_object_t value = xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 40), "3");
      id v8 = (void *)objc_claimAutoreleasedReturnValue(value);
      id v9 = v8;
      if (v8 && xpc_get_type(v8) == (xpc_type_t)&_xpc_type_array)
      {
        id v10 = (void *)objc_claimAutoreleasedReturnValue(+[DownloadsDatabase downloadsDatabase](&OBJC_CLASS___DownloadsDatabase, "downloadsDatabase"));
        v34[0] = _NSConcreteStackBlock;
        v34[1] = 3221225472LL;
        v34[2] = sub_100115548;
        v34[3] = &unk_10034EF40;
        id v35 = v9;
        id v11 = v5;
        uint64_t v12 = *(void *)(a1 + 32);
        uint64_t v13 = *(void **)(a1 + 40);
        id v36 = v11;
        uint64_t v37 = v12;
        id v39 = &v44;
        uint64_t v40 = v43;
        id v38 = v13;
        id v41 = v58;
        id v42 = &v48;
        id v14 = [v10 modifyUsingTransactionBlock:v34];
      }
    }

    else
    {
      void v45[3] = 107LL;
    }

    if (*((_BYTE *)v49 + 24))
    {
      BOOL v24 = 1;
LABEL_35:
      xpc_dictionary_set_BOOL(v6, "0", v24);
      xpc_dictionary_set_int64(v6, "1", v45[3]);
      _Block_object_dispose(v43, 8);
      _Block_object_dispose(v58, 8);

      _Block_object_dispose(&v44, 8);
      _Block_object_dispose(&v48, 8);
      goto LABEL_36;
    }

    __int16 v25 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v25) {
      __int16 v25 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    LODWORD(v26) = [v25 shouldLog];
    unsigned int v27 = [v25 shouldLogToDisk];
    uint64_t v28 = (os_log_s *)objc_claimAutoreleasedReturnValue([v25 OSLogObject]);
    unsigned __int8 v29 = v28;
    if (v27) {
      LODWORD(v26) = v26 | 2;
    }
    if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
      uint64_t v26 = v26;
    }
    else {
      v26 &= 2u;
    }
    if ((_DWORD)v26)
    {
      id v30 = (id)objc_opt_class(*(void *)(a1 + 32));
      uint64_t v31 = v45[3];
      id v32 = (void *)objc_claimAutoreleasedReturnValue([v5 clientIdentifier]);
      int v52 = 138543874;
      id v53 = v30;
      __int16 v54 = 2048;
      uint64_t v55 = v31;
      __int16 v56 = 2114;
      id v57 = v32;
      xpc_object_t v33 = (void *)_os_log_send_and_compose_impl( v26,  0LL,  0LL,  0LL,  &_mh_execute_header,  v29,  16LL,  "%{public}@: Download insert failed with error code: %ld client: %{public}@",  &v52,  32);

      if (!v33)
      {
LABEL_34:

        BOOL v24 = *((_BYTE *)v49 + 24) != 0;
        goto LABEL_35;
      }

      unsigned __int8 v29 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v33,  4LL));
      free(v33);
      SSFileLog(v25, @"%@");
    }

    goto LABEL_34;
  }

  uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v15) {
    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v16 = [v15 shouldLog];
  else {
    LODWORD(v17) = v16;
  }
  uint64_t v18 = (os_log_s *)objc_claimAutoreleasedReturnValue([v15 OSLogObject]);
  if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
    uint64_t v17 = v17;
  }
  else {
    v17 &= 2u;
  }
  if ((_DWORD)v17)
  {
    uint64_t v19 = (void *)objc_opt_class(*(void *)(a1 + 32));
    id v20 = v19;
    uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue([v5 clientIdentifier]);
    *(_DWORD *)int v58 = 138543618;
    *(void *)&v58[4] = v19;
    *(_WORD *)&v58[12] = 2114;
    *(void *)&v58[14] = v21;
    id v22 = (void *)_os_log_send_and_compose_impl( v17,  0LL,  0LL,  0LL,  &_mh_execute_header,  v18,  16LL,  "%{public}@: Download insert failed, not supported on this device, client: %{public}@",  v58,  22);

    if (v22)
    {
      int v23 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v22,  4LL));
      free(v22);
      SSFileLog(v15, @"%@");
    }
  }

  else
  {
  }

  xpc_dictionary_set_BOOL(v6, "0", 0);
  xpc_dictionary_set_int64(v6, "1", 157LL);
LABEL_36:
}

void sub_1001154D4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, char a23, uint64_t a24, uint64_t a25, uint64_t a26, char a27, uint64_t a28, uint64_t a29, uint64_t a30, char a31)
{
}

uint64_t sub_100115530(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_100115540(uint64_t a1)
{
}

uint64_t sub_100115548(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  applier[0] = _NSConcreteStackBlock;
  applier[1] = 3221225472LL;
  applier[2] = sub_100115B48;
  applier[3] = &unk_10034EF18;
  id v5 = *(void **)(a1 + 32);
  id v6 = *(id *)(a1 + 40);
  uint64_t v7 = *(void *)(a1 + 48);
  id v54 = v6;
  uint64_t v55 = v7;
  __int128 v57 = *(_OWORD *)(a1 + 64);
  id v8 = v4;
  __int16 v56 = v8;
  xpc_array_apply(v5, applier);
  id v9 = (char *)-[NSMutableArray count](v8, "count") + *(void *)(*(void *)(*(void *)(a1 + 72) + 8LL) + 24LL);
  size_t count = xpc_array_get_count(*(xpc_object_t *)(a1 + 32));
  uint64_t v11 = objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  uint64_t v12 = (void *)v11;
  if (v9 == (char *)count)
  {
    if (!v11) {
      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v13 = [v12 shouldLog];
    else {
      LODWORD(v14) = v13;
    }
    uint64_t v15 = (os_log_s *)objc_claimAutoreleasedReturnValue([v12 OSLogObject]);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v14 = v14;
    }
    else {
      v14 &= 2u;
    }
    if ((_DWORD)v14)
    {
      unsigned int v16 = (void *)objc_opt_class(*(void *)(a1 + 48));
      id v17 = v16;
      id v18 = -[NSMutableArray count](v8, "count");
      id v19 = v3;
      id v20 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) clientIdentifier]);
      int v58 = 138543874;
      id v59 = v16;
      __int16 v60 = 2048;
      id v61 = v18;
      __int16 v62 = 2114;
      id v63 = v20;
      uint64_t v21 = (void *)_os_log_send_and_compose_impl( v14,  0LL,  0LL,  0LL,  &_mh_execute_header,  v15,  0LL,  "%{public}@: Inserting %lu downloads for %{public}@",  &v58,  32);

      id v3 = v19;
      if (!v21) {
        goto LABEL_14;
      }
      uint64_t v15 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v21,  4LL));
      free(v21);
      char v51 = v15;
      SSFileLog(v12, @"%@");
    }

LABEL_14:
    int64_t int64 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 56), "1");
    int64_t v23 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 56), "2");
    if (-[NSMutableArray count](v8, "count"))
    {
      if (int64)
      {
        uint64_t v24 = objc_claimAutoreleasedReturnValue([v3 insertDownloads:v8 beforeDownloadWithID:int64]);
      }

      else if (v23)
      {
        uint64_t v24 = objc_claimAutoreleasedReturnValue([v3 insertDownloads:v8 afterDownloadWithID:v23]);
      }

      else
      {
        uint64_t v24 = objc_claimAutoreleasedReturnValue([v3 addDownloads:v8]);
      }

      uint64_t v35 = *(void *)(*(void *)(a1 + 80) + 8LL);
      id v36 = *(void **)(v35 + 40);
      *(void *)(v35 + 40) = v24;
    }

    id v37 = objc_msgSend(*(id *)(*(void *)(*(void *)(a1 + 80) + 8) + 40), "count", v51);
    if (v37 == -[NSMutableArray count](v8, "count"))
    {
      *(_BYTE *)(*(void *)(*(void *)(a1 + 88) + 8LL) + 24LL) = 1;
      goto LABEL_49;
    }

    id v38 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v38) {
      id v38 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v39 = [v38 shouldLog];
    else {
      unsigned int v40 = v39;
    }
    id v41 = (os_log_s *)objc_claimAutoreleasedReturnValue([v38 OSLogObject]);
    if (os_log_type_enabled(v41, OS_LOG_TYPE_ERROR)) {
      uint64_t v42 = v40;
    }
    else {
      uint64_t v42 = v40 & 2;
    }
    if ((_DWORD)v42)
    {
      unsigned __int8 v43 = (void *)objc_opt_class(*(void *)(a1 + 48));
      uint64_t v44 = *(void **)(*(void *)(*(void *)(a1 + 80) + 8LL) + 40LL);
      id v45 = v43;
      id v46 = [v44 count];
      id v47 = -[NSMutableArray count](v8, "count");
      int v58 = 138543874;
      id v59 = v43;
      __int16 v60 = 2048;
      id v61 = v46;
      __int16 v62 = 2048;
      id v63 = v47;
      LODWORD(v52) = 32;
      uint64_t v48 = (void *)_os_log_send_and_compose_impl( v42,  0LL,  0LL,  0LL,  &_mh_execute_header,  v41,  16LL,  "%{public}@: Inserted IDs did not equal the number of downloads (%lu != %lu)",  &v58,  v52);

      if (!v48)
      {
LABEL_48:

        *(void *)(*(void *)(*(void *)(a1 + 64) + 8LL) + 24LL) = 112LL;
        goto LABEL_49;
      }

      id v41 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v48,  4LL));
      free(v48);
      SSFileLog(v38, @"%@");
    }

    goto LABEL_48;
  }

  if (!v11) {
    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v25 = [v12 shouldLog];
  else {
    unsigned int v26 = v25;
  }
  unsigned int v27 = (os_log_s *)objc_claimAutoreleasedReturnValue([v12 OSLogObject]);
  if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
    uint64_t v28 = v26;
  }
  else {
    uint64_t v28 = v26 & 2;
  }
  if (!(_DWORD)v28) {
    goto LABEL_28;
  }
  unsigned __int8 v29 = (void *)objc_opt_class(*(void *)(a1 + 48));
  id v30 = v29;
  id v31 = -[NSMutableArray count](v8, "count");
  id v32 = *(void **)(*(void *)(*(void *)(a1 + 72) + 8LL) + 24LL);
  size_t v33 = xpc_array_get_count(*(xpc_object_t *)(a1 + 32));
  int v58 = 138544130;
  id v59 = v29;
  __int16 v60 = 2048;
  id v61 = v31;
  __int16 v62 = 2048;
  id v63 = v32;
  __int16 v64 = 2048;
  size_t v65 = v33;
  id v34 = (void *)_os_log_send_and_compose_impl( v28,  0LL,  0LL,  0LL,  &_mh_execute_header,  v27,  16LL,  "%{public}@: Skipping import - not all downloads were valid (%lu + %lu != %lu)",  &v58,  42);

  if (v34)
  {
    unsigned int v27 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v34,  4LL));
    free(v34);
    SSFileLog(v12, @"%@");
LABEL_28:
  }

LABEL_49:
  uint64_t v49 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 88) + 8LL) + 24LL);

  return v49;
}

BOOL sub_100115B48(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = *(void **)(a1 + 32);
  id v21 = 0LL;
  id v6 = [v5 newDownloadWithClientXPCDownload:v4 error:&v21];
  id v7 = v21;
  if (!v6)
  {
    unsigned int v13 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v13) {
      unsigned int v13 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v14 = [v13 shouldLog];
    else {
      LODWORD(v15) = v14;
    }
    unsigned int v16 = (os_log_s *)objc_claimAutoreleasedReturnValue([v13 OSLogObject]);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
      uint64_t v15 = v15;
    }
    else {
      v15 &= 2u;
    }
    if ((_DWORD)v15)
    {
      id v17 = (void *)objc_opt_class(*(void *)(a1 + 40));
      int v23 = 138543874;
      uint64_t v24 = v17;
      __int16 v25 = 2114;
      id v26 = v7;
      __int16 v27 = 2114;
      id v28 = v4;
      id v18 = v17;
      id v19 = (void *)_os_log_send_and_compose_impl( v15,  0LL,  0LL,  0LL,  &_mh_execute_header,  v16,  16LL,  "%{public}@: Failed to create download error: %{public}@\n%{public}@",  &v23,  32);

      if (!v19)
      {
LABEL_22:

        *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = [v7 code];
        goto LABEL_23;
      }

      unsigned int v16 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v19,  4LL));
      free(v19);
      SSFileLog(v13, @"%@");
    }

    goto LABEL_22;
  }

  id v8 = [v6 copyStoreDownloadMetadata];
  if ((v8 || (id v8 = [v6 copyInMemoryStoreDownloadMetadata]) != 0)
    && (id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 kind]),
        int IsBookToShimKind = SSDownloadKindIsBookToShimKind(v9),
        v9,
        IsBookToShimKind)
    && ((uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v8 downloadPermalink])) != 0
     || (uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "valueForFirstAvailableKey:", @"download_permalink", 0))) != 0))
  {
    ++*(void *)(*(void *)(*(void *)(a1 + 64) + 8LL) + 24LL);

    id v22 = v8;
    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v22, 1LL));
    +[BookAssetDaemonUtility sendBookStoreDownloads:withReason:]( &OBJC_CLASS___BookAssetDaemonUtility,  "sendBookStoreDownloads:withReason:",  v12,  @"insert download via SSDownloadManager");
  }

  else
  {
    [*(id *)(a1 + 48) addObject:v6];
  }

LABEL_23:
  return v6 != 0LL;
}

void sub_100115EA4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v13 = 0LL;
  unsigned int v14 = &v13;
  uint64_t v15 = 0x2020000000LL;
  char v16 = 0;
  int64_t int64 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 32), "1");
  int64_t v8 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 32), "2");
  int64_t v9 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 32), "3");
  id v10 = (void *)objc_claimAutoreleasedReturnValue(+[DownloadsDatabase downloadsDatabase](&OBJC_CLASS___DownloadsDatabase, "downloadsDatabase"));
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472LL;
  v12[2] = sub_100115FEC;
  v12[3] = &unk_10034EF68;
  void v12[4] = &v13;
  void v12[5] = v8;
  v12[6] = int64;
  void v12[7] = v9;
  id v11 = [v10 modifyUsingTransactionBlock:v12];

  xpc_dictionary_set_BOOL(v6, "0", *((_BYTE *)v14 + 24));
  _Block_object_dispose(&v13, 8);
}

void sub_100115FCC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

uint64_t sub_100115FEC(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  if (a1[5])
  {
    unsigned __int8 v5 = objc_msgSend(v3, "moveDownloadWithID:beforeDownloadWithID:", a1[6]);
LABEL_5:
    *(_BYTE *)(*(void *)(a1[4] + 8LL) + 24LL) = v5;
    goto LABEL_6;
  }

  if (a1[7])
  {
    unsigned __int8 v5 = objc_msgSend(v3, "moveDownloadWithID:afterDownloadWithID:", a1[6]);
    goto LABEL_5;
  }

void sub_1001160E8(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = objc_opt_class(&OBJC_CLASS___NSDictionary);
  id v7 = (void *)SSXPCDictionaryCopyCFObjectWithClass(v5, "1", v6);
  int64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v7 objectForKey:@"downloadID"]);
  int64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v7 objectForKey:@"phase"]);
  if (v7) {
    BOOL v10 = v8 == 0LL;
  }
  else {
    BOOL v10 = 1;
  }
  BOOL v11 = !v10;
  if (!v10)
  {
    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(+[DownloadsDatabase downloadsDatabase](&OBJC_CLASS___DownloadsDatabase, "downloadsDatabase"));
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472LL;
    v16[2] = sub_100116230;
    v16[3] = &unk_10034C668;
    id v17 = v8;
    id v13 = v9;
    uint64_t v14 = *(void *)(a1 + 40);
    id v18 = v13;
    uint64_t v19 = v14;
    id v15 = [v12 modifyUsingTransactionBlock:v16];
  }

  xpc_dictionary_set_BOOL(v4, "0", v11);
}

uint64_t sub_100116230(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc(&OBJC_CLASS___DownloadEntity);
  id v5 = [*(id *)(a1 + 32) longLongValue];
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v3 database]);
  id v7 = -[DownloadEntity initWithPersistentID:inDatabase:](v4, "initWithPersistentID:inDatabase:", v5, v6);

  if (([*(id *)(a1 + 40) isEqualToString:SSDownloadPhaseCanceled] & 1) == 0
    && ![*(id *)(a1 + 40) isEqualToString:SSDownloadPhaseFinished])
  {
    -[DownloadEntity setValue:forProperty:]( v7,  "setValue:forProperty:",  *(void *)(a1 + 40),  @"download_state.phase");
    id v17 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v17) {
      id v17 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v18 = [v17 shouldLog];
    else {
      LODWORD(v19) = v18;
    }
    id v20 = (os_log_s *)objc_claimAutoreleasedReturnValue([v17 OSLogObject]);
    if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO)) {
      uint64_t v19 = v19;
    }
    else {
      v19 &= 2u;
    }
    if ((_DWORD)v19)
    {
      id v21 = (void *)objc_opt_class(*(void *)(a1 + 48));
      uint64_t v23 = *(void *)(a1 + 32);
      uint64_t v22 = *(void *)(a1 + 40);
      int v27 = 138412802;
      id v28 = v21;
      __int16 v29 = 2112;
      uint64_t v30 = v22;
      __int16 v31 = 2112;
      uint64_t v32 = v23;
      id v24 = v21;
      __int16 v25 = (void *)_os_log_send_and_compose_impl( v19,  0LL,  0LL,  0LL,  &_mh_execute_header,  v20,  1LL,  "%@: Updated download with phase: %@ downloadID: %@",  &v27,  32);

      if (!v25)
      {
LABEL_28:

        goto LABEL_29;
      }

      id v20 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v25,  4LL));
      free(v25);
      SSFileLog(v17, @"%@");
    }

    goto LABEL_28;
  }

  int64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v8) {
    int64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v9 = [v8 shouldLog];
  else {
    LODWORD(v10) = v9;
  }
  BOOL v11 = (os_log_s *)objc_claimAutoreleasedReturnValue([v8 OSLogObject]);
  if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO)) {
    uint64_t v10 = v10;
  }
  else {
    v10 &= 2u;
  }
  if (!(_DWORD)v10) {
    goto LABEL_14;
  }
  uint64_t v12 = (void *)objc_opt_class(*(void *)(a1 + 48));
  uint64_t v14 = *(void *)(a1 + 32);
  uint64_t v13 = *(void *)(a1 + 40);
  int v27 = 138412802;
  id v28 = v12;
  __int16 v29 = 2112;
  uint64_t v30 = v13;
  __int16 v31 = 2112;
  uint64_t v32 = v14;
  id v15 = v12;
  char v16 = (void *)_os_log_send_and_compose_impl( v10,  0LL,  0LL,  0LL,  &_mh_execute_header,  v11,  1LL,  "%@: Updated download with final phase: %@ downloadID: %@",  &v27,  32);

  if (v16)
  {
    BOOL v11 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v16,  4LL));
    free(v16);
    SSFileLog(v8, @"%@");
LABEL_14:
  }

  objc_msgSend( v3,  "finishDownloadWithID:finalPhase:",  objc_msgSend(*(id *)(a1 + 32), "longLongValue"),  *(void *)(a1 + 40));
LABEL_29:

  return 1LL;
}

void sub_100116648(uint64_t a1, uint64_t a2, void *a3)
{
  xpc_object_t xdict = a3;
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = objc_opt_class(&OBJC_CLASS___NSDictionary);
  uint64_t v6 = (void *)SSXPCDictionaryCopyCFObjectWithClass(v4, "1", v5);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKey:@"downloadID"]);
  int64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKey:@"kind"]);
  if (v6) {
    BOOL v9 = v7 == 0LL;
  }
  else {
    BOOL v9 = 1;
  }
  BOOL v10 = !v9;
  if (!v9) {
    objc_msgSend( *(id *)(a1 + 40),  "notifyClientsOfExternalPropertyChanges:forDownloadID:downloadKind:",  v6,  objc_msgSend(v7, "longLongValue"),  v8);
  }
  xpc_dictionary_set_BOOL(xdict, "0", v10);
}

void sub_1001167B8(uint64_t a1, void *a2, void *a3)
{
  id v10 = a2;
  id v5 = a3;
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = objc_opt_class(&OBJC_CLASS___NSArray);
  int64_t v8 = (void *)SSXPCDictionaryCopyCFObjectWithClass(v6, "1", v7);
  if ([v8 count]) {
    unsigned __int8 v9 = objc_msgSend( *(id *)(a1 + 40),  "_pauseDownloads:isForced:client:",  v8,  xpc_dictionary_get_BOOL(*(xpc_object_t *)(a1 + 32), "2"),  v10);
  }
  else {
    unsigned __int8 v9 = 1;
  }
  xpc_dictionary_set_BOOL(v5, "0", v9);
}

void sub_100116900(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = objc_autoreleasePoolPush();
  int64_t int64 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 32), "1");
  int64_t v9 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 32), "2");
  id v10 = *(void **)(a1 + 40);
  BOOL v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", int64));
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", v9));
  id v15 = 0LL;
  unsigned __int8 v13 = [v10 _prioritizeDownload:v11 aboveDownload:v12 client:v5 error:&v15];
  id v14 = v15;

  xpc_dictionary_set_BOOL(v6, "0", v13);
  if (v14) {
    SSXPCDictionarySetCFObject(v6, "1", v14);
  }

  objc_autoreleasePoolPop(v7);
}

void sub_100116D48(uint64_t a1, void *a2)
{
  id v3 = a2;
  xpc_connection_t v4 = xpc_connection_create_from_endpoint(*(xpc_endpoint_t *)(a1 + 32));
  if (!v4)
  {
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v7) {
      uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v11 = [v7 shouldLog];
    else {
      unsigned int v12 = v11;
    }
    unsigned __int8 v13 = (os_log_s *)objc_claimAutoreleasedReturnValue([v7 OSLogObject]);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v14 = v12;
    }
    else {
      uint64_t v14 = v12 & 2;
    }
    if ((_DWORD)v14)
    {
      id v15 = (void *)objc_opt_class(*(void *)(a1 + 40));
      char v16 = *(void **)(a1 + 48);
      int v37 = 138412546;
      id v38 = v15;
      __int16 v39 = 2112;
      id v40 = v16;
      id v17 = v15;
      unsigned int v18 = (void *)_os_log_send_and_compose_impl( v14,  0LL,  0LL,  0LL,  &_mh_execute_header,  v13,  0LL,  "%@: Could not create connection for endpoint: %@",  &v37,  22);

      if (!v18) {
        goto LABEL_30;
      }
      unsigned __int8 v13 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v18,  4LL));
      free(v18);
      SSFileLog(v7, @"%@");
    }

    goto LABEL_30;
  }

  uint64_t v5 = *(void *)(a1 + 56);
  uint64_t v6 = objc_opt_class(&OBJC_CLASS___NSArray);
  uint64_t v7 = (void *)SSXPCDictionaryCopyCFObjectWithClass(v5, "1", v6);
  xpc_object_t value = xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 56), "3");
  int64_t v9 = (void *)objc_claimAutoreleasedReturnValue(value);
  [v3 setClientOptions:v9];

  [v3 setOutputConnectionWithConnection:v4];
  if (v7)
  {
    id v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](&OBJC_CLASS___NSSet, "setWithArray:", v7));
    [v3 setDownloadKinds:v10];
  }

  else
  {
    [v3 setDownloadKinds:0];
  }

  uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v19) {
    uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v20 = [v19 shouldLog];
  else {
    unsigned int v21 = v20;
  }
  uint64_t v22 = (os_log_s *)objc_claimAutoreleasedReturnValue([v19 OSLogObject]);
  if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO)) {
    uint64_t v23 = v21;
  }
  else {
    uint64_t v23 = v21 & 2;
  }
  if ((_DWORD)v23)
  {
    id v24 = v4;
    __int16 v25 = (void *)objc_opt_class(*(void *)(a1 + 40));
    id v33 = v25;
    id v26 = (void *)objc_claimAutoreleasedReturnValue([v3 persistenceIdentifier]);
    int v27 = (void *)objc_claimAutoreleasedReturnValue([v3 downloadKinds]);
    int v37 = 138413058;
    id v38 = v25;
    xpc_connection_t v4 = v24;
    __int16 v39 = 2112;
    id v40 = v3;
    __int16 v41 = 2112;
    uint64_t v42 = v26;
    __int16 v43 = 2112;
    uint64_t v44 = v27;
    id v28 = (void *)_os_log_send_and_compose_impl( v23,  0LL,  0LL,  0LL,  &_mh_execute_header,  v22,  1LL,  "%@: Registered client: %@, %@, %@",  &v37,  42);

    if (v28)
    {
      __int16 v29 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v28,  4LL));
      free(v28);
      SSFileLog(v19, @"%@");
    }
  }

  else
  {
  }

  v34[0] = _NSConcreteStackBlock;
  v34[1] = 3221225472LL;
  v34[2] = sub_1001171AC;
  v34[3] = &unk_10034AD58;
  id v30 = v3;
  id v35 = v30;
  id v36 = *(id *)(a1 + 48);
  [v30 loadSpringBoardStateWithCompletionBlock:v34];
  xpc_object_t v31 = xpc_dictionary_create(0LL, 0LL, 0LL);
  uint64_t v32 = (void *)objc_claimAutoreleasedReturnValue([v30 outputConnection]);
  [v32 sendMessage:v31];

LABEL_30:
}

void sub_1001171AC(uint64_t a1)
{
  unsigned int v2 = [*(id *)(a1 + 32) applicationState];
  id v3 = [*(id *)(a1 + 32) copyApplicationBackgroundModes];
  id v4 = [*(id *)(a1 + 32) clientType];
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(+[DownloadsDatabase downloadsDatabase](&OBJC_CLASS___DownloadsDatabase, "downloadsDatabase"));
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  v9[2] = sub_1001172A0;
  v9[3] = &unk_10034EF90;
  id v6 = *(id *)(a1 + 32);
  id v13 = v4;
  unsigned int v14 = v2;
  id v10 = v6;
  id v11 = v3;
  id v12 = *(id *)(a1 + 40);
  id v7 = v3;
  id v8 = [v5 modifyUsingTransactionBlock:v9];
}

uint64_t sub_1001172A0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 32);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v3 database]);
  [v4 reloadPersistenceStateInDatabase:v5];

  if (*(void *)(a1 + 56) == 1LL)
  {
    int v6 = *(_DWORD *)(a1 + 64);
    BOOL v7 = v6 == 32 || v6 == 8;
    id v8 = *(void **)(a1 + 32);
    int64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v3 database]);
    [v8 addClientEntityToDatabase:v9];
  }

  return 1LL;
}

void sub_1001173F0(uint64_t a1, void *a2)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a2 clientIdentifier]);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = objc_opt_class(&OBJC_CLASS___NSString);
  int v6 = (void *)SSXPCDictionaryCopyCFObjectWithClass(v4, "1", v5);
  if (v6) {
    BOOL v7 = v3 == 0LL;
  }
  else {
    BOOL v7 = 1;
  }
  if (!v7)
  {
    id v8 = (void *)objc_claimAutoreleasedReturnValue(+[DownloadsDatabase downloadsDatabase](&OBJC_CLASS___DownloadsDatabase, "downloadsDatabase"));
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472LL;
    v10[2] = sub_1001174E0;
    v10[3] = &unk_10034CE68;
    id v11 = v3;
    id v12 = v6;
    id v9 = [v8 modifyUsingTransactionBlock:v10];
  }
}

id sub_1001174E0(uint64_t a1, void *a2)
{
  return [a2 deletePersistentDownloadManagerWithClientID:*(void *)(a1 + 32) persistenceID:*(void *)(a1 + 40)];
}

uint64_t sub_10011761C(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if (xpc_get_type(v4) == (xpc_type_t)&_xpc_type_int64)
  {
    uint64_t v5 = -[NSNumber initWithLongLong:](objc_alloc(&OBJC_CLASS___NSNumber), "initWithLongLong:", xpc_int64_get_value(v4));
    [*(id *)(a1 + 32) addObject:v5];
  }

  return 1LL;
}

void sub_100117698(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = *(void **)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  xpc_object_t xdict = a3;
  [v4 _resumeDownloads:v5 client:a2];
  xpc_dictionary_set_BOOL(xdict, "0", 1);
}

uint64_t sub_100117828(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if (xpc_get_type(v4) == (xpc_type_t)&_xpc_type_int64)
  {
    uint64_t v5 = -[NSNumber initWithLongLong:](objc_alloc(&OBJC_CLASS___NSNumber), "initWithLongLong:", xpc_int64_get_value(v4));
    [*(id *)(a1 + 32) addObject:v5];
  }

  return 1LL;
}

void sub_1001178A4(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = *(void **)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  xpc_object_t xdict = a3;
  [v4 _restartDownloads:v5 client:a2];
  xpc_dictionary_set_BOOL(xdict, "0", 1);
}

void sub_100117910(id a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue(+[DownloadsDatabase downloadsDatabase](&OBJC_CLASS___DownloadsDatabase, "downloadsDatabase"));
  id v1 = [v2 modifyUsingTransactionBlock:&stru_10034F020];
}

BOOL sub_100117960(id a1, DownloadsTransaction *a2)
{
  id v2 = a2;
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[SSSQLiteComparisonPredicate predicateWithProperty:equalToLongLong:]( &OBJC_CLASS___SSSQLiteComparisonPredicate,  "predicateWithProperty:equalToLongLong:",  @"download_state.restore_state",  2LL));
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[SSSQLiteComparisonPredicate predicateWithProperty:equalToLongLong:]( &OBJC_CLASS___SSSQLiteComparisonPredicate,  "predicateWithProperty:equalToLongLong:",  @"download_state.restore_state",  3LL));
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:](&OBJC_CLASS___NSArray, "arrayWithObjects:", v3, v4, 0LL));
  int v6 = (void *)objc_claimAutoreleasedReturnValue( +[SSSQLiteCompoundPredicate predicateMatchingAnyPredicates:]( &OBJC_CLASS___SSSQLiteCompoundPredicate,  "predicateMatchingAnyPredicates:",  v5));

  LOBYTE(v5) = -[DownloadsTransaction resetDownloadsMatchingPredicate:](v2, "resetDownloadsMatchingPredicate:", v6);
  -[DownloadsExternalTransaction addDownloadChangeTypes:](v2, "addDownloadChangeTypes:", 128LL);

  return (char)v5;
}

void sub_100117AD4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v15 = 0LL;
  char v16 = &v15;
  uint64_t v17 = 0x2020000000LL;
  char v18 = 0;
  int64_t int64 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 32), "1");
  if (int64)
  {
    id v8 = (void *)objc_claimAutoreleasedReturnValue(+[DownloadsDatabase downloadsDatabase](&OBJC_CLASS___DownloadsDatabase, "downloadsDatabase"));
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472LL;
    v10[2] = sub_100117C14;
    v10[3] = &unk_10034CF30;
    int64_t v14 = int64;
    id v11 = v5;
    id v12 = *(id *)(a1 + 32);
    id v13 = &v15;
    id v9 = [v8 modifyUsingTransactionBlock:v10];
  }

  xpc_dictionary_set_BOOL(v6, "0", *((_BYTE *)v16 + 24));
  _Block_object_dispose(&v15, 8);
}

void sub_100117BFC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

uint64_t sub_100117C14(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc(&OBJC_CLASS___DownloadAssetEntity);
  uint64_t v5 = *(void *)(a1 + 56);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v3 database]);
  BOOL v7 = -[DownloadAssetEntity initWithPersistentID:inDatabase:](v4, "initWithPersistentID:inDatabase:", v5, v6);

  if (([*(id *)(a1 + 32) hasEntitlements] & 1) != 0
    || [*(id *)(a1 + 32) canAccessAsset:v7])
  {
    uint64_t v8 = *(void *)(a1 + 40);
    uint64_t v9 = objc_opt_class(&OBJC_CLASS___NSDictionary);
    id v10 = (void *)SSXPCDictionaryCopyCFObjectWithClass(v8, "2", v9);
    id v11 = +[DownloadAssetEntity copyDatabaseDictionaryToSetClientDictionary:]( &OBJC_CLASS___DownloadAssetEntity,  "copyDatabaseDictionaryToSetClientDictionary:",  v10);
    -[DownloadAssetEntity setValuesWithDictionary:](v7, "setValuesWithDictionary:", v11);

    id v12 = objc_alloc_init(&OBJC_CLASS___DownloadsChangeset);
    -[DownloadsChangeset addDownloadChangeTypes:](v12, "addDownloadChangeTypes:", 16LL);
    id v13 = (void *)objc_claimAutoreleasedReturnValue(-[DownloadAssetEntity valueForProperty:](v7, "valueForProperty:", @"download_id"));
    -[DownloadsChangeset addUpdatedDownloadID:](v12, "addUpdatedDownloadID:", [v13 longLongValue]);

    [v3 unionChangeset:v12];
    *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = 1;
  }

  uint64_t v14 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL);

  return v14;
}

void sub_100117E3C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v32 = 0LL;
  id v33 = &v32;
  uint64_t v34 = 0x3032000000LL;
  id v35 = sub_100115530;
  id v36 = sub_100115540;
  id v37 = 0LL;
  uint64_t v28 = 0LL;
  __int16 v29 = &v28;
  uint64_t v30 = 0x2020000000LL;
  char v31 = 0;
  int64_t int64 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 32), "1");
  int64_t v5 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 32), "2");
  if (int64)
  {
    int64_t v6 = v5;
    BOOL v7 = (void *)objc_claimAutoreleasedReturnValue(+[DownloadsDatabase downloadsDatabase](&OBJC_CLASS___DownloadsDatabase, "downloadsDatabase"));
    v21[0] = _NSConcreteStackBlock;
    v21[1] = 3221225472LL;
    void v21[2] = sub_100118198;
    v21[3] = &unk_10034F048;
    int64_t v26 = int64;
    id v24 = &v32;
    id v8 = v3;
    uint64_t v9 = *(void *)(a1 + 40);
    id v22 = v8;
    uint64_t v23 = v9;
    int64_t v27 = v6;
    __int16 v25 = &v28;
    id v10 = [v7 modifyUsingTransactionBlock:v21];
  }

  if (!*((_BYTE *)v29 + 24))
  {
    id v11 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v11) {
      id v11 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    LODWORD(v12) = [v11 shouldLog];
    unsigned int v13 = [v11 shouldLogToDisk];
    uint64_t v14 = (os_log_s *)objc_claimAutoreleasedReturnValue([v11 OSLogObject]);
    uint64_t v15 = v14;
    if (v13) {
      LODWORD(v12) = v12 | 2;
    }
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v12 = v12;
    }
    else {
      v12 &= 2u;
    }
    if ((_DWORD)v12)
    {
      char v16 = (void *)objc_opt_class(*(void *)(a1 + 40));
      uint64_t v17 = v33[5];
      int v38 = 138412546;
      __int16 v39 = v16;
      __int16 v40 = 2112;
      uint64_t v41 = v17;
      id v18 = v16;
      uint64_t v19 = (void *)_os_log_send_and_compose_impl( v12,  0LL,  0LL,  0LL,  &_mh_execute_header,  v15,  0LL,  "%@: Failed to apply download handler: %@",  &v38,  22);

      if (!v19)
      {
LABEL_15:

        goto LABEL_16;
      }

      uint64_t v15 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v19,  4LL));
      free(v19);
      SSFileLog(v11, @"%@");
    }

    goto LABEL_15;
  }

void sub_100118150( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  uint64_t v14 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100118198(uint64_t a1, void *a2)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a2 database]);
  id v4 = -[DownloadEntity initWithPersistentID:inDatabase:]( objc_alloc(&OBJC_CLASS___DownloadEntity),  "initWithPersistentID:inDatabase:",  *(void *)(a1 + 64),  v3);
  if ((-[DownloadEntity existsInDatabase](v4, "existsInDatabase") & 1) == 0)
  {
    uint64_t v19 = SSErrorDomain;
    uint64_t v20 = 108LL;
LABEL_23:
    uint64_t v21 = SSError(v19, v20, 0LL, 0LL);
    uint64_t v22 = objc_claimAutoreleasedReturnValue(v21);
    uint64_t v23 = *(void *)(*(void *)(a1 + 48) + 8LL);
    id v24 = *(void **)(v23 + 40);
    *(void *)(v23 + 40) = v22;

    goto LABEL_24;
  }

  if (([*(id *)(a1 + 32) canAccessDownload:v4] & 1) == 0)
  {
    uint64_t v19 = SSErrorDomain;
    uint64_t v20 = 107LL;
    goto LABEL_23;
  }

  int64_t v5 = @"handler_id";
  v37[0] = v5;
  v37[1] = @"IFNULL(download_state.phase, SSDownloadPhaseWaiting)";
  id v35 = 0LL;
  uint64_t v36 = 0LL;
  -[DownloadEntity getValues:forProperties:count:](v4, "getValues:forProperties:count:", &v35, v37, 2LL);
  if ([v35 longLongValue] != *(id *)(a1 + 72))
  {
    int64_t v6 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v6) {
      int64_t v6 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v7 = [v6 shouldLog];
    else {
      LODWORD(v_Block_object_dispose(va, 8) = v7;
    }
    uint64_t v9 = (os_log_s *)objc_claimAutoreleasedReturnValue([v6 OSLogObject]);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO)) {
      uint64_t v8 = v8;
    }
    else {
      v8 &= 2u;
    }
    if ((_DWORD)v8)
    {
      id v10 = (void *)objc_opt_class(*(void *)(a1 + 40));
      uint64_t v12 = *(void *)(a1 + 64);
      uint64_t v11 = *(void *)(a1 + 72);
      uint64_t v13 = *(void *)(a1 + 32);
      int v27 = 138413058;
      uint64_t v28 = v10;
      __int16 v29 = 2048;
      uint64_t v30 = v11;
      __int16 v31 = 2048;
      uint64_t v32 = v12;
      __int16 v33 = 2112;
      uint64_t v34 = v13;
      id v14 = v10;
      uint64_t v15 = (void *)_os_log_send_and_compose_impl( v8,  0LL,  0LL,  0LL,  &_mh_execute_header,  v9,  1LL,  "%@: Setting handler: %lld for download: %lld client: %@",  &v27,  42);

      if (!v15) {
        goto LABEL_16;
      }
      uint64_t v9 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v15,  4LL));
      free(v15);
      SSFileLog(v6, @"%@");
    }

LABEL_16:
    uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", *(void *)(a1 + 72)));
    -[DownloadEntity setValue:forProperty:](v4, "setValue:forProperty:", v16, v5);

    if (*(void *)(a1 + 72))
    {
      uint64_t v17 = -[DownloadSessionProperties initWithClientIdentifier:handlerIdentifier:]( objc_alloc(&OBJC_CLASS___DownloadSessionProperties),  "initWithClientIdentifier:handlerIdentifier:",  0LL,  *(void *)(a1 + 72));
      -[DownloadSessionProperties setDownloadPhase:](v17, "setDownloadPhase:", v36);
    }
  }

  *(_BYTE *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL) = 1;
  for (uint64_t i = 1LL; i != -1; --i)

LABEL_24:
  uint64_t v25 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL);

  return v25;
}

void sub_100118560(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v15 = 0LL;
  uint64_t v16 = &v15;
  uint64_t v17 = 0x2020000000LL;
  char v18 = 0;
  int64_t int64 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 32), "1");
  if (int64)
  {
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[DownloadsDatabase downloadsDatabase](&OBJC_CLASS___DownloadsDatabase, "downloadsDatabase"));
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472LL;
    v10[2] = sub_1001186A0;
    v10[3] = &unk_10034CF30;
    int64_t v14 = int64;
    id v11 = v5;
    id v12 = *(id *)(a1 + 32);
    uint64_t v13 = &v15;
    id v9 = [v8 modifyUsingTransactionBlock:v10];
  }

  xpc_dictionary_set_BOOL(v6, "0", *((_BYTE *)v16 + 24));
  _Block_object_dispose(&v15, 8);
}

void sub_100118688( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

uint64_t sub_1001186A0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc(&OBJC_CLASS___DownloadEntity);
  uint64_t v5 = *(void *)(a1 + 56);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v3 database]);
  unsigned int v7 = -[DownloadEntity initWithPersistentID:inDatabase:](v4, "initWithPersistentID:inDatabase:", v5, v6);

  if (([*(id *)(a1 + 32) hasEntitlements] & 1) != 0
    || [*(id *)(a1 + 32) canAccessDownload:v7])
  {
    uint64_t v8 = *(void *)(a1 + 40);
    uint64_t v9 = objc_opt_class(&OBJC_CLASS___NSDictionary);
    id v10 = (void *)SSXPCDictionaryCopyCFObjectWithClass(v8, "2", v9);
    if (xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 40), "0") == 32)
    {
      [v3 setExternalPropertyValues:v10 forDownloadWithID:*(void *)(a1 + 56)];
      *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = 1;
    }

    else
    {
      id v11 = +[DownloadEntity copyDatabaseDictionaryToSetClientDictionary:]( &OBJC_CLASS___DownloadEntity,  "copyDatabaseDictionaryToSetClientDictionary:",  v10);
      -[DownloadEntity setValuesWithDictionary:](v7, "setValuesWithDictionary:", v11);
      id v12 = (void *)objc_claimAutoreleasedReturnValue([v11 objectForKey:@"duet_transfer_type"]);
      uint64_t v13 = v12;
      if (v12 && ![v12 integerValue])
      {
        int64_t v14 = (void *)objc_claimAutoreleasedReturnValue( -[DownloadEntity valueForProperty:]( v7,  "valueForProperty:",  @"download_state.blocked_reason"));
        if ([v14 integerValue] == (id)4)
        {
          uint64_t v15 = objc_alloc(&OBJC_CLASS___NSOrderedSet);
          uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithLongLong:]( &OBJC_CLASS___NSNumber,  "numberWithLongLong:",  -[DownloadEntity persistentID](v7, "persistentID")));
          uint64_t v17 = -[NSOrderedSet initWithObject:](v15, "initWithObject:", v16);

          [v3 resetDownloadsWithIdentifiers:v17];
        }
      }

      *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = 1;
    }

    char v18 = objc_alloc_init(&OBJC_CLASS___DownloadsChangeset);
    -[DownloadsChangeset addDownloadChangeTypes:](v18, "addDownloadChangeTypes:", 16LL);
    uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(-[DownloadEntity downloadKind](v7, "downloadKind"));
    -[DownloadsChangeset addDownloadKind:](v18, "addDownloadKind:", v19);

    -[DownloadsChangeset addUpdatedDownloadID:](v18, "addUpdatedDownloadID:", *(void *)(a1 + 56));
    [v3 unionChangeset:v18];
  }

  uint64_t v20 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL);

  return v20;
}

void sub_100118980(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if ((SSDeviceSupportsDownload() & 1) != 0)
  {
    *(void *)uint64_t v34 = 0LL;
    *(void *)&v34[8] = v34;
    *(void *)&v34[16] = 0x2020000000LL;
    char v35 = 1;
    xpc_object_t value = xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 40), "2");
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(value);
    uint64_t v9 = v8;
    if (v8 && xpc_get_type(v8) == (xpc_type_t)&_xpc_type_array)
    {
      id v10 = (void *)objc_claimAutoreleasedReturnValue([v5 clientIdentifier]);
      unsigned __int8 v11 = [v5 hasEntitlements];
      id v12 = (void *)objc_claimAutoreleasedReturnValue(+[DownloadsDatabase downloadsDatabase](&OBJC_CLASS___DownloadsDatabase, "downloadsDatabase"));
      v26[0] = _NSConcreteStackBlock;
      v26[1] = 3221225472LL;
      v26[2] = sub_100118CEC;
      void v26[3] = &unk_10034F0E8;
      id v27 = v5;
      id v13 = *(id *)(a1 + 40);
      uint64_t v14 = *(void *)(a1 + 32);
      id v28 = v13;
      uint64_t v29 = v14;
      id v30 = v9;
      id v15 = v10;
      id v31 = v15;
      uint64_t v32 = v34;
      unsigned __int8 v33 = v11;
      id v16 = [v12 modifyUsingTransactionBlock:v26];
    }

    xpc_dictionary_set_BOOL(v6, "0", *(_BYTE *)(*(void *)&v34[8] + 24LL));

    _Block_object_dispose(v34, 8);
  }

  else
  {
    uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v17) {
      uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v18 = [v17 shouldLog];
    else {
      LODWORD(v19) = v18;
    }
    uint64_t v20 = (os_log_s *)objc_claimAutoreleasedReturnValue([v17 OSLogObject]);
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
      uint64_t v19 = v19;
    }
    else {
      v19 &= 2u;
    }
    if ((_DWORD)v19)
    {
      uint64_t v21 = (void *)objc_opt_class(*(void *)(a1 + 32));
      id v22 = v21;
      uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue([v5 clientIdentifier]);
      *(_DWORD *)uint64_t v34 = 138543618;
      *(void *)&void v34[4] = v21;
      *(_WORD *)&v34[12] = 2114;
      *(void *)&v34[14] = v23;
      id v24 = (void *)_os_log_send_and_compose_impl( v19,  0LL,  0LL,  0LL,  &_mh_execute_header,  v20,  16LL,  "%{public}@: Download insert failed, not supported on this device, client: %{public}@",  v34,  22);

      if (v24)
      {
        uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v24,  4LL));
        free(v24);
        SSFileLog(v17, @"%@");
      }
    }

    else
    {
    }

    xpc_dictionary_set_BOOL(v6, "0", 0);
    xpc_dictionary_set_int64(v6, "1", 157LL);
  }
}

void sub_100118CC4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
}

BOOL sub_100118CEC(uint64_t a1, void *a2)
{
  id v3 = a2;
  __int16 v60 = objc_alloc_init(&OBJC_CLASS___DownloadsChangeset);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 database]);
  int v58 = objc_alloc_init(&OBJC_CLASS___NSMutableOrderedSet);
  id v59 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  id v5 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  id v63 = (void *)objc_claimAutoreleasedReturnValue( +[NSArray arrayWithObjects:]( &OBJC_CLASS___NSArray,  "arrayWithObjects:",  @"download_state.phase",  @"kind",  @"download_state.restore_state",  0LL));
  __int16 v62 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) downloadsQueryForMessage:*(void *)(a1 + 40) database:v4]);
  v82[0] = _NSConcreteStackBlock;
  v82[1] = 3221225472LL;
  v82[2] = sub_10011958C;
  v82[3] = &unk_10034F098;
  id v6 = v5;
  unsigned int v83 = v6;
  [v62 enumerateMemoryEntitiesWithProperties:v63 usingBlock:v82];
  unsigned int v7 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v7) {
    unsigned int v7 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v8 = [v7 shouldLog];
  else {
    LODWORD(v9) = v8;
  }
  id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue([v7 OSLogObject]);
  if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO)) {
    uint64_t v9 = v9;
  }
  else {
    v9 &= 2u;
  }
  if ((_DWORD)v9)
  {
    unsigned __int8 v11 = (void *)objc_opt_class(*(void *)(a1 + 48));
    id v12 = v11;
    id v13 = -[NSMutableDictionary count](v6, "count");
    *(double *)&size_t v14 = COERCE_DOUBLE(xpc_array_get_count(*(xpc_object_t *)(a1 + 56)));
    uint64_t v15 = *(void *)(a1 + 64);
    *(_DWORD *)id v91 = 138413058;
    *(void *)&v91[4] = v11;
    *(_WORD *)&v91[12] = 2048;
    *(void *)&v91[14] = v13;
    *(_WORD *)&v91[22] = 2048;
    double v92 = *(double *)&v14;
    __int16 v93 = 2112;
    uint64_t v94 = v15;
    LODWORD(v56) = 42;
    id v16 = (void *)_os_log_send_and_compose_impl( v9,  0LL,  0LL,  0LL,  &_mh_execute_header,  v10,  1LL,  "%@: Replacing %lu downloads with %zu downloads for client: %@",  v91,  v56);

    if (!v16) {
      goto LABEL_13;
    }
    id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v16,  4LL));
    free(v16);
    uint64_t v55 = v10;
    SSFileLog(v7, @"%@");
  }

LABEL_13:
  [(id)objc_opt_class(v3) orderKeyIncrement];
  double v18 = v17;
  *(void *)id v91 = 0LL;
  *(void *)&v91[8] = v91;
  *(void *)&v91[16] = 0x2020000000LL;
  uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue( +[DownloadEntity maxValueForProperty:predicate:database:]( &OBJC_CLASS___DownloadEntity,  "maxValueForProperty:predicate:database:",  @"order_key",  0LL,  v4));
  [v19 doubleValue];
  double v21 = v20;

  double v92 = v18 + v21;
  id v22 = *(void **)(a1 + 56);
  applier[0] = _NSConcreteStackBlock;
  applier[1] = 3221225472LL;
  applier[2] = sub_100119604;
  applier[3] = &unk_10034F0C0;
  id v61 = v6;
  unsigned int v69 = v61;
  id v57 = v4;
  id v70 = v57;
  uint64_t v78 = v91;
  uint64_t v23 = v60;
  uint64_t v71 = v23;
  id v24 = v58;
  uint64_t v25 = *(void *)(a1 + 72);
  unsigned int v72 = v24;
  uint64_t v79 = v25;
  id v26 = *(id *)(a1 + 32);
  uint64_t v27 = *(void *)(a1 + 48);
  id v73 = v26;
  uint64_t v74 = v27;
  char v81 = *(_BYTE *)(a1 + 80);
  id v75 = *(id *)(a1 + 64);
  id v28 = v3;
  id v76 = v28;
  double v80 = v18;
  uint64_t v29 = v59;
  uint64_t v77 = v29;
  xpc_array_apply(v22, applier);
  if (*(_BYTE *)(*(void *)(*(void *)(a1 + 72) + 8LL) + 24LL))
  {
    id v30 = objc_alloc_init(&OBJC_CLASS___NSMutableOrderedSet);
    __int128 v66 = 0u;
    __int128 v67 = 0u;
    __int128 v64 = 0u;
    __int128 v65 = 0u;
    id v31 = v61;
    id v32 = -[NSMutableDictionary countByEnumeratingWithState:objects:count:]( v31,  "countByEnumeratingWithState:objects:count:",  &v64,  v90,  16LL);
    if (v32)
    {
      uint64_t v33 = *(void *)v65;
      do
      {
        for (uint64_t i = 0LL; i != v32; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v65 != v33) {
            objc_enumerationMutation(v31);
          }
          -[NSMutableOrderedSet addObject:]( v30,  "addObject:",  *(void *)(*((void *)&v64 + 1) + 8LL * (void)i),  v55);
        }

        id v32 = -[NSMutableDictionary countByEnumeratingWithState:objects:count:]( v31,  "countByEnumeratingWithState:objects:count:",  &v64,  v90,  16LL);
      }

      while (v32);
    }

    if (!-[NSMutableOrderedSet count](v30, "count"))
    {
LABEL_34:
      if (-[NSMutableDictionary count](v29, "count", v55)) {
        [v28 reconcileSoftwareDownloads:v29 fromITunesStore:0];
      }
      if (!-[NSMutableOrderedSet count](v24, "count")) {
        goto LABEL_49;
      }
      uint64_t v44 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
      if (!v44) {
        uint64_t v44 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      LODWORD(v45) = [v44 shouldLog];
      unsigned int v46 = [v44 shouldLogToDisk];
      id v47 = (os_log_s *)objc_claimAutoreleasedReturnValue([v44 OSLogObject]);
      uint64_t v48 = v47;
      if (v46) {
        LODWORD(v45) = v45 | 2;
      }
      if (os_log_type_enabled(v47, OS_LOG_TYPE_INFO)) {
        uint64_t v45 = v45;
      }
      else {
        v45 &= 2u;
      }
      if ((_DWORD)v45)
      {
        id v49 = (id)objc_opt_class(*(void *)(a1 + 48));
        id v50 = -[NSMutableOrderedSet count](v24, "count");
        uint64_t v51 = *(void *)(a1 + 64);
        int v84 = 138412802;
        id v85 = v49;
        __int16 v86 = 2048;
        id v87 = v50;
        __int16 v88 = 2112;
        uint64_t v89 = v51;
        LODWORD(v56) = 32;
        uint64_t v52 = (void *)_os_log_send_and_compose_impl( v45,  0LL,  0LL,  0LL,  &_mh_execute_header,  v48,  1LL,  "%@: Retry %lu downloads for client: %@",  &v84,  v56);

        if (!v52)
        {
LABEL_48:

          [v28 retryDownloadsWithIdentifiers:v24];
LABEL_49:

          goto LABEL_50;
        }

        uint64_t v48 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v52,  4LL));
        free(v52);
        uint64_t v55 = v48;
        SSFileLog(v44, @"%@");
      }

      goto LABEL_48;
    }

    char v35 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v35) {
      char v35 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    LODWORD(v36) = objc_msgSend(v35, "shouldLog", v55);
    unsigned int v37 = [v35 shouldLogToDisk];
    int v38 = (os_log_s *)objc_claimAutoreleasedReturnValue([v35 OSLogObject]);
    __int16 v39 = v38;
    if (v37) {
      LODWORD(v36) = v36 | 2;
    }
    if (os_log_type_enabled(v38, OS_LOG_TYPE_INFO)) {
      uint64_t v36 = v36;
    }
    else {
      v36 &= 2u;
    }
    if ((_DWORD)v36)
    {
      id v40 = (id)objc_opt_class(*(void *)(a1 + 48));
      id v41 = -[NSMutableOrderedSet count](v30, "count");
      uint64_t v42 = *(void *)(a1 + 64);
      int v84 = 138412802;
      id v85 = v40;
      __int16 v86 = 2048;
      id v87 = v41;
      __int16 v88 = 2112;
      uint64_t v89 = v42;
      LODWORD(v56) = 32;
      __int16 v43 = (void *)_os_log_send_and_compose_impl( v36,  0LL,  0LL,  0LL,  &_mh_execute_header,  v39,  1LL,  "%@: Cancel %lu downloads for client: %@",  &v84,  v56);

      if (!v43)
      {
LABEL_33:

        *(_BYTE *)(*(void *)(*(void *)(a1 + 72) + 8) + 24) = [v28 finishDownloadsWithIdentifiers:v30 finalPhase:SSDownloadPhaseCanceled];
        goto LABEL_34;
      }

      __int16 v39 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v43,  4LL));
      free(v43);
      uint64_t v55 = v39;
      SSFileLog(v35, @"%@");
    }

    goto LABEL_33;
  }

void sub_100119534(_Unwind_Exception *a1)
{
}

void sub_10011958C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = -[NSNumber initWithLongLong:]( [NSNumber alloc],  "initWithLongLong:",  [v3 databaseID]);
  [*(id *)(a1 + 32) setObject:v3 forKey:v4];
}

uint64_t sub_100119604(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if (xpc_get_type(v4) == (xpc_type_t)&_xpc_type_dictionary)
  {
    id v5 = -[NSNumber initWithLongLong:]( objc_alloc(&OBJC_CLASS___NSNumber),  "initWithLongLong:",  xpc_dictionary_get_int64(v4, "0"));
    id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) objectForKey:v5]);
    if (v6)
    {
      id v47 = -[NSNumber longLongValue](v5, "longLongValue");
      unsigned int v7 = -[DownloadEntity initWithPersistentID:inDatabase:]( objc_alloc(&OBJC_CLASS___DownloadEntity),  "initWithPersistentID:inDatabase:",  v47,  *(void *)(a1 + 40));
      unsigned int v8 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
      uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  *(double *)(*(void *)(*(void *)(a1 + 104) + 8LL) + 24LL)));
      -[NSMutableDictionary setObject:forKey:](v8, "setObject:forKey:", v9, @"order_key");

      id v10 = (void *)objc_claimAutoreleasedReturnValue([v6 valueForProperty:@"download_state.restore_state"]);
      unsigned __int8 v11 = (char *)[v10 integerValue];

      id v12 = v7;
      if ((unint64_t)(v11 - 4) <= 0xFFFFFFFFFFFFFFFDLL)
      {
        uint64_t v45 = v5;
        -[DownloadEntity resetAssetLocalPaths](v7, "resetAssetLocalPaths");
        id v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", 0LL));
        -[NSMutableDictionary setObject:forKey:](v8, "setObject:forKey:", v13, @"download_state.blocked_reason");

        size_t v14 = (void *)objc_claimAutoreleasedReturnValue([v6 valueForProperty:@"download_state.phase"]);
        if ((SSDownloadPhaseIsFinishedPhase(v14) & 1) != 0
          || [v14 isEqualToString:SSDownloadPhaseFailed])
        {
          -[NSMutableDictionary setObject:forKey:]( v8,  "setObject:forKey:",  SSDownloadPhaseWaiting,  @"download_state.phase");
          [*(id *)(a1 + 48) addDownloadChangeTypes:2];
          [*(id *)(a1 + 48) addStatusChangedDownloadID:v47];
          [*(id *)(a1 + 48) addDownloadToPipelineWithID:v47];
        }

        if (v11 == (char *)1)
        {
          uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", 0LL));
          -[NSMutableDictionary setObject:forKey:](v8, "setObject:forKey:", v15, @"download_state.restore_state");

          [*(id *)(a1 + 48) addDownloadChangeTypes:32];
          [*(id *)(a1 + 48) addRestorableDownloadID:v47];
        }

        else
        {
          [*(id *)(a1 + 56) addObject:v45];
        }

        id v12 = v7;

        id v5 = v45;
      }

      *(_BYTE *)(*(void *)(*(void *)(a1 + 112) + 8LL) + 24LL) = -[DownloadEntity setValuesWithDictionary:]( v12,  "setValuesWithDictionary:",  v8);
      [*(id *)(a1 + 48) addDownloadChangeTypes:1];
      id v26 = v12;
      uint64_t v27 = *(void **)(a1 + 48);
      id v28 = (void *)objc_claimAutoreleasedReturnValue([v6 valueForProperty:@"kind"]);
      [v27 addDownloadKind:v28];

      [*(id *)(a1 + 32) removeObjectForKey:v5];
      goto LABEL_45;
    }

    id v16 = [*(id *)(a1 + 64) newDownloadWithClientXPCDownload:v4 error:0];
    double v17 = (void *)objc_claimAutoreleasedReturnValue([v16 valueForProperty:@"kind"]);
    if (v16)
    {
      if (*(_BYTE *)(a1 + 128) || ([*(id *)(a1 + 64) supportsDownloadKind:v17] & 1) != 0)
      {
        double v18 = -[NSArray initWithObjects:](objc_alloc(&OBJC_CLASS___NSArray), "initWithObjects:", v16, 0LL);
        uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 88) importDownloads:v18 initialOrderKey:*(double *)(*(void *)(*(void *)(a1 + 104) + 8) + 24) orderKeyIncrement:*(double *)(a1 + 120)]);
        *(_BYTE *)(*(void *)(*(void *)(a1 + 112) + 8) + 24) = [v19 count] == (id)1;
        if (*(_BYTE *)(*(void *)(*(void *)(a1 + 112) + 8LL) + 24LL))
        {
          double v20 = v5;
          double v21 = (void *)objc_claimAutoreleasedReturnValue([v16 valueForProperty:@"is_restore"]);
          unsigned __int8 v22 = [v21 BOOLValue];

          uint64_t v23 = *(void **)(a1 + 48);
          if ((v22 & 1) != 0)
          {
            [v23 addDownloadChangeTypes:32];
            id v24 = *(void **)(a1 + 48);
            uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue([v19 firstObject]);
            objc_msgSend(v24, "addRestorableDownloadID:", objc_msgSend(v25, "longLongValue"));
          }

          else
          {
            [v23 addDownloadsToPipelineWithIDs:v19];
          }

          id v5 = v20;
          if (SSDownloadKindIsSoftwareKind(v17))
          {
            uint64_t v34 = (void *)objc_claimAutoreleasedReturnValue([v16 valueForProperty:@"bundle_id"]);
            if (v34)
            {
              char v35 = *(void **)(a1 + 96);
              uint64_t v36 = (void *)objc_claimAutoreleasedReturnValue([v19 lastObject]);
              unsigned int v37 = v35;
              id v5 = v20;
              [v37 setObject:v36 forKey:v34];

              id v6 = 0LL;
            }
          }
        }

        goto LABEL_43;
      }

      unsigned int v46 = v5;
      double v18 = (NSArray *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
      if (!v18) {
        double v18 = (NSArray *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      unsigned int v38 = -[NSArray shouldLog](v18, "shouldLog");
      __int16 v39 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[NSArray OSLogObject](v18, "OSLogObject"));
      if (os_log_type_enabled(v39, OS_LOG_TYPE_DEFAULT)) {
        uint64_t v40 = v38;
      }
      else {
        uint64_t v40 = v38 & 2;
      }
      if (!(_DWORD)v40)
      {

        id v5 = v46;
        goto LABEL_44;
      }

      id v41 = (void *)objc_opt_class(*(void *)(a1 + 72));
      uint64_t v42 = *(void *)(a1 + 80);
      int v48 = 138412802;
      id v49 = v41;
      __int16 v50 = 2112;
      uint64_t v51 = v42;
      __int16 v52 = 2112;
      BOOL v53 = v17;
      id v43 = v41;
      uint64_t v33 = (void *)_os_log_send_and_compose_impl( v40,  0LL,  0LL,  0LL,  &_mh_execute_header,  v39,  0LL,  "%@: Client '%@' cannot access kind: %@",  &v48,  32);

      id v6 = 0LL;
      id v5 = v46;
      if (!v33)
      {
LABEL_44:

LABEL_45:
        *(double *)(*(void *)(*(void *)(a1 + 104) + 8LL) + 24LL) = *(double *)(a1 + 120)
                                                                     + *(double *)(*(void *)(*(void *)(a1 + 104)
                                                                                             + 8LL)
                                                                                 + 24LL);

        goto LABEL_46;
      }
    }

    else
    {
      double v18 = (NSArray *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
      if (!v18) {
        double v18 = (NSArray *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      LODWORD(v29) = -[NSArray shouldLog](v18, "shouldLog");
      uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(-[NSArray OSLogObject](v18, "OSLogObject"));
      if (os_log_type_enabled((os_log_t)v19, OS_LOG_TYPE_DEFAULT)) {
        uint64_t v29 = v29;
      }
      else {
        v29 &= 2u;
      }
      if (!(_DWORD)v29) {
        goto LABEL_43;
      }
      id v30 = (void *)objc_opt_class(*(void *)(a1 + 72));
      int v48 = 138412290;
      id v49 = v30;
      id v31 = v5;
      id v32 = v30;
      uint64_t v33 = (void *)_os_log_send_and_compose_impl( v29,  0LL,  0LL,  0LL,  &_mh_execute_header,  v19,  0LL,  "%@: Could not create import download for client download",  &v48,  12);

      id v5 = v31;
      if (!v33) {
        goto LABEL_44;
      }
    }

    uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v33,  4LL));
    free(v33);
    SSFileLog(v18, @"%@");
LABEL_43:

    goto LABEL_44;
  }

void sub_100119EB4(id a1)
{
  id v1 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
  [v1 postNotificationName:kSSNotificationAutomaticDownloadSettingsChanged object:0];
}

void sub_100119FA4(uint64_t a1)
{
  int64_t int64 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 32), "1");
  xpc_object_t value = xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 32), "2");
  id v4 = (_xpc_endpoint_s *)objc_claimAutoreleasedReturnValue(value);
  id v5 = v4;
  if (v4 && xpc_get_type(v4) == (xpc_type_t)&_xpc_type_endpoint)
  {
    xpc_connection_t v6 = xpc_connection_create_from_endpoint(v5);
    if (v6)
    {
      uint64_t v9 = -[DownloadHandlerClient initWithInputConnection:]( objc_alloc(&OBJC_CLASS___DownloadHandlerClient),  "initWithInputConnection:",  *(void *)(a1 + 48));
      -[DownloadHandlerClient setHandlerIdentifier:](v9, "setHandlerIdentifier:", int64);
      -[XPCClient setOutputConnectionWithConnection:](v9, "setOutputConnectionWithConnection:", v6);
      xpc_object_t v14 = xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 32), "3");
      uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
      id v16 = v15;
      if (v15 && xpc_get_type(v15) == (xpc_type_t)&_xpc_type_BOOL) {
        -[DownloadHandlerClient setSessionsShouldBlockOtherDownloads:]( v9,  "setSessionsShouldBlockOtherDownloads:",  xpc_BOOL_get_value(v16));
      }
      xpc_object_t v17 = xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 32), "4");
      double v18 = (void *)objc_claimAutoreleasedReturnValue(v17);

      if (v18 && xpc_get_type(v18) == (xpc_type_t)&_xpc_type_array)
      {
        uint64_t v19 = (void *)SSXPCCreateCFObjectFromXPCObject(v18);
        double v20 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](&OBJC_CLASS___NSSet, "setWithArray:", v19));
        -[DownloadHandlerClient setDownloadPhasesToIgnore:](v9, "setDownloadPhasesToIgnore:", v20);
      }

      xpc_object_t v21 = xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 32), "5");
      unsigned __int8 v22 = (void *)objc_claimAutoreleasedReturnValue(v21);

      if (v22 && xpc_get_type(v22) == (xpc_type_t)&_xpc_type_BOOL) {
        -[DownloadHandlerClient setSessionsNeedPowerAssertion:]( v9,  "setSessionsNeedPowerAssertion:",  xpc_BOOL_get_value(v22));
      }
      uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue(+[DownloadHandlerManager handlerManager](&OBJC_CLASS___DownloadHandlerManager, "handlerManager"));
      [v23 addDownloadHandler:v9];

      xpc_object_t v24 = xpc_dictionary_create(0LL, 0LL, 0LL);
      uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue(-[XPCClient outputConnection](v9, "outputConnection"));
      [v25 sendMessage:v24];
    }

    else
    {
      uint64_t v9 = (DownloadHandlerClient *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
      if (!v9) {
        uint64_t v9 = (DownloadHandlerClient *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      unsigned int v26 = -[DownloadHandlerClient shouldLog](v9, "shouldLog");
      else {
        LODWORD(v27) = v26;
      }
      id v28 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[DownloadHandlerClient OSLogObject](v9, "OSLogObject"));
      if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT)) {
        uint64_t v27 = v27;
      }
      else {
        v27 &= 2u;
      }
      if ((_DWORD)v27)
      {
        uint64_t v29 = (void *)objc_opt_class(*(void *)(a1 + 40));
        int v33 = 138412546;
        uint64_t v34 = v29;
        __int16 v35 = 2048;
        int64_t v36 = int64;
        id v30 = v29;
        id v31 = (void *)_os_log_send_and_compose_impl( v27,  0LL,  0LL,  0LL,  &_mh_execute_header,  v28,  0LL,  "%@: Could not create connection for endpoint: %lld",  &v33,  22);

        if (v31)
        {
          id v32 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v31,  4LL));
          free(v31);
          SSFileLog(v9, @"%@");
        }
      }

      else
      {
      }
    }

    goto LABEL_25;
  }

  xpc_connection_t v6 = (xpc_connection_t)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v6) {
    xpc_connection_t v6 = (xpc_connection_t)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v7 = -[_xpc_connection_s shouldLog](v6, "shouldLog");
  else {
    LODWORD(v_Block_object_dispose((const void *)(v1 - 192), 8) = v7;
  }
  uint64_t v9 = (DownloadHandlerClient *)objc_claimAutoreleasedReturnValue(-[_xpc_connection_s OSLogObject](v6, "OSLogObject"));
  if (os_log_type_enabled((os_log_t)v9, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v8 = v8;
  }
  else {
    v8 &= 2u;
  }
  if (!(_DWORD)v8)
  {
LABEL_25:

    goto LABEL_26;
  }

  id v10 = (void *)objc_opt_class(*(void *)(a1 + 40));
  int v33 = 138412546;
  uint64_t v34 = v10;
  __int16 v35 = 2048;
  int64_t v36 = int64;
  id v11 = v10;
  id v12 = (void *)_os_log_send_and_compose_impl( v8,  0LL,  0LL,  0LL,  &_mh_execute_header,  v9,  0LL,  "%@: No endpoint for asset handler: %lld",  &v33,  22);

  if (v12)
  {
    id v13 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v12,  4LL));
    free(v12);
    SSFileLog(v6, @"%@");
  }

void sub_10011A4D4(uint64_t a1)
{
  int64_t int64 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 32), "1");
  int64_t v3 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 32), "2");
  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v4) {
    id v4 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v5 = [v4 shouldLog];
  else {
    LODWORD(v6) = v5;
  }
  unsigned int v7 = (os_log_s *)objc_claimAutoreleasedReturnValue([v4 OSLogObject]);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO)) {
    uint64_t v6 = v6;
  }
  else {
    v6 &= 2u;
  }
  if (!(_DWORD)v6) {
    goto LABEL_12;
  }
  uint64_t v8 = (void *)objc_opt_class(*(void *)(a1 + 40));
  int v36 = 138412802;
  unsigned int v37 = v8;
  __int16 v38 = 2048;
  int64_t v39 = int64;
  __int16 v40 = 2048;
  int64_t v41 = v3;
  id v9 = v8;
  id v10 = (void *)_os_log_send_and_compose_impl( v6,  0LL,  0LL,  0LL,  &_mh_execute_header,  v7,  1LL,  "%@: Finish session %lld with type %lld",  &v36,  32);

  if (v10)
  {
    unsigned int v7 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v10,  4LL));
    free(v10);
    id v32 = v7;
    SSFileLog(v4, @"%@");
LABEL_12:
  }

  id v11 = (void *)objc_claimAutoreleasedReturnValue(+[DownloadHandlerManager handlerManager](&OBJC_CLASS___DownloadHandlerManager, "handlerManager"));
  id v12 = v11;
  switch(v3)
  {
    case 1000LL:
      [v11 cancelAuthenticationSessionWithID:int64];
      goto LABEL_50;
    case 1001LL:
      [v11 continueAuthenticationSessionWithID:int64];
      goto LABEL_50;
    case 1002LL:
      xpc_object_t value = xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 32), "3");
      xpc_object_t v17 = (void *)objc_claimAutoreleasedReturnValue(value);
      double v18 = v17;
      if (!v17 || xpc_get_type(v17) != (xpc_type_t)&_xpc_type_data)
      {
        uint64_t v19 = 0LL;
LABEL_49:
        objc_msgSend(v12, "useCredential:forAuthenticationSessionWithID:", v19, int64, v32);

        goto LABEL_50;
      }

      xpc_object_t v21 = (void *)SSXPCCreateCFObjectFromXPCObject(v18);
      id v35 = 0LL;
      id v22 = +[NSKeyedUnarchiver unarchivedObjectOfClass:fromData:error:]( &OBJC_CLASS___NSKeyedUnarchiver,  "unarchivedObjectOfClass:fromData:error:",  objc_opt_class(&OBJC_CLASS___NSURLCredential),  v21,  &v35);
      uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(v22);
      id v23 = v35;
      if (!v23) {
        goto LABEL_48;
      }
      uint64_t v34 = v21;
      xpc_object_t v24 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedStoreServicesConfig](&OBJC_CLASS___SSLogConfig, "sharedStoreServicesConfig"));
      if (!v24) {
        xpc_object_t v24 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      unsigned int v25 = objc_msgSend(v24, "shouldLog", v32);
      else {
        unsigned int v26 = v25;
      }
      uint64_t v27 = (os_log_s *)objc_claimAutoreleasedReturnValue([v24 OSLogObject]);
      if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
        uint64_t v28 = v26;
      }
      else {
        uint64_t v28 = v26 & 2;
      }
      if ((_DWORD)v28)
      {
        uint64_t v29 = (void *)objc_opt_class(*(void *)(a1 + 40));
        int v36 = 138543618;
        unsigned int v37 = v29;
        __int16 v38 = 2114;
        int64_t v39 = (int64_t)v23;
        id v30 = v29;
        LODWORD(v33) = 22;
        id v31 = (void *)_os_log_send_and_compose_impl( v28,  0LL,  0LL,  0LL,  &_mh_execute_header,  v27,  16LL,  "%{public}@: Failed to unarchive credential. Error = %{public}@",  &v36,  v33);

        xpc_object_t v21 = v34;
        if (!v31)
        {
LABEL_47:

LABEL_48:
          goto LABEL_49;
        }

        uint64_t v27 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v31,  4LL));
        free(v31);
        id v32 = v27;
        SSFileLog(v24, @"%@");
      }

      else
      {
        xpc_object_t v21 = v34;
      }

      goto LABEL_47;
    case 1003LL:
      [v11 performDefaultForAuthenticationSessionWithID:int64];
      goto LABEL_50;
    case 1004LL:
      [v11 rejectSpaceForAuthenticationSessionWithID:int64];
      goto LABEL_50;
    default:
      switch(v3)
      {
        case 0LL:
          xpc_object_t v13 = xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 32), "3");
          xpc_object_t v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
          if (v14) {
            uint64_t v15 = -[NSError initWithXPCEncoding:](objc_alloc(&OBJC_CLASS___NSError), "initWithXPCEncoding:", v14);
          }
          else {
            uint64_t v15 = 0LL;
          }
          objc_msgSend(v12, "failDownloadSessionWithID:error:", int64, v15, v32);
          goto LABEL_32;
        case 1LL:
          [v11 releaseDownloadSessionWithID:int64];
          break;
        case 2LL:
          [v11 finishDownloadSessionWithID:int64];
          break;
        case 3LL:
          xpc_object_t v20 = xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 32), "3");
          xpc_object_t v14 = (void *)objc_claimAutoreleasedReturnValue(v20);
          if (v14) {
            uint64_t v15 = -[NSError initWithXPCEncoding:](objc_alloc(&OBJC_CLASS___NSError), "initWithXPCEncoding:", v14);
          }
          else {
            uint64_t v15 = 0LL;
          }
          objc_msgSend(v12, "disavowDownloadSessionWithID:error:", int64, v15, v32);
LABEL_32:

          break;
        default:
          break;
      }

void sub_10011AA6C(uint64_t a1, void *a2)
{
  id v3 = a2;
  int64_t int64 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 32), "1");
  unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue(+[DownloadHandlerManager handlerManager](&OBJC_CLASS___DownloadHandlerManager, "handlerManager"));
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v5 sessionForSessionID:int64]);

  if (v6)
  {
    unsigned int v7 = (void *)objc_claimAutoreleasedReturnValue([v6 sessionProperties]);
    xpc_dictionary_set_int64(v3, "0", (int64_t)[v7 downloadIdentifier]);
    xpc_dictionary_set_int64(v3, "1", (int64_t)[v7 assetIdentifier]);
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v7 downloadPhase]);
    if (v8)
    {
LABEL_20:
      SSXPCDictionarySetCFObject(v3, "2", v8);

      goto LABEL_21;
    }

    uint64_t v9 = objc_claimAutoreleasedReturnValue([v7 authenticationChallenge]);
    if (!v9)
    {
      uint64_t v8 = 0LL;
      goto LABEL_20;
    }

    id v10 = (void *)v9;
    id v19 = 0LL;
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue( +[NSKeyedArchiver archivedDataWithRootObject:requiringSecureCoding:error:]( &OBJC_CLASS___NSKeyedArchiver,  "archivedDataWithRootObject:requiringSecureCoding:error:",  v9,  1LL,  &v19));
    id v11 = v19;

    if (!v11)
    {
LABEL_18:

      goto LABEL_20;
    }

    id v12 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedStoreServicesConfig](&OBJC_CLASS___SSLogConfig, "sharedStoreServicesConfig"));
    if (!v12) {
      id v12 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v13 = [v12 shouldLog];
    else {
      LODWORD(v14) = v13;
    }
    uint64_t v15 = (os_log_s *)objc_claimAutoreleasedReturnValue([v12 OSLogObject]);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
      uint64_t v14 = v14;
    }
    else {
      v14 &= 2u;
    }
    if ((_DWORD)v14)
    {
      id v16 = (void *)objc_opt_class(*(void *)(a1 + 40));
      int v20 = 138543618;
      xpc_object_t v21 = v16;
      __int16 v22 = 2114;
      id v23 = v11;
      id v17 = v16;
      double v18 = (void *)_os_log_send_and_compose_impl( v14,  0LL,  0LL,  0LL,  &_mh_execute_header,  v15,  16LL,  "%{public}@: Failed to archive auth challenge. Error = %{public}@",  &v20,  22);

      if (!v18)
      {
LABEL_17:

        goto LABEL_18;
      }

      uint64_t v15 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v18,  4LL));
      free(v18);
      SSFileLog(v12, @"%@");
    }

    goto LABEL_17;
  }

void sub_10011ADAC(uint64_t a1)
{
  int64_t int64 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 32), "1");
  id v2 = (id)objc_claimAutoreleasedReturnValue(+[DownloadHandlerManager handlerManager](&OBJC_CLASS___DownloadHandlerManager, "handlerManager"));
  [v2 resetDisavowedSessionsForHandlerWithID:int64];
}

void sub_10011AEAC(uint64_t a1)
{
  unsigned int v5 = -[DownloadHandlerClient initWithInputConnection:]( objc_alloc(&OBJC_CLASS___DownloadHandlerClient),  "initWithInputConnection:",  *(void *)(a1 + 32));
  id v2 = (void *)objc_claimAutoreleasedReturnValue(-[XPCClient clientIdentifier](v5, "clientIdentifier"));
  if (v2)
  {
    int64_t int64 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 40), "1");
    id v4 = (void *)objc_claimAutoreleasedReturnValue(+[DownloadHandlerManager handlerManager](&OBJC_CLASS___DownloadHandlerManager, "handlerManager"));
    [v4 setGlobalDownloadHandlerID:int64 forClientID:v2];
  }
}

void sub_10011AFCC(uint64_t a1)
{
  int64_t int64 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 32), "1");
  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[DownloadHandlerManager handlerManager](&OBJC_CLASS___DownloadHandlerManager, "handlerManager"));
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  v6[2] = sub_10011B07C;
  v6[3] = &unk_10034F130;
  id v4 = *(id *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  id v7 = v4;
  uint64_t v8 = v5;
  int64_t v9 = int64;
  [v3 modifyDownloadHandlerWithID:int64 usingBlock:v6];
}

void sub_10011B07C(uint64_t a1, void *a2)
{
  id v3 = a2;
  xpc_object_t value = xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 32), "2");
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(value);
  uint64_t v6 = v5;
  if (!v5 || xpc_get_type(v5) != (xpc_type_t)&_xpc_type_dictionary) {
    goto LABEL_27;
  }
  id v7 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v7) {
    id v7 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v8 = [v7 shouldLog];
  else {
    LODWORD(v9) = v8;
  }
  id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue([v7 OSLogObject]);
  if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO)) {
    uint64_t v9 = v9;
  }
  else {
    v9 &= 2u;
  }
  if ((_DWORD)v9)
  {
    id v11 = (void *)objc_opt_class(*(void *)(a1 + 40));
    uint64_t v12 = *(void *)(a1 + 48);
    int v24 = 138412802;
    unsigned int v25 = v11;
    __int16 v26 = 2048;
    uint64_t v27 = v12;
    __int16 v28 = 2112;
    id v29 = v3;
    id v13 = v11;
    uint64_t v14 = (void *)_os_log_send_and_compose_impl( v9,  0LL,  0LL,  0LL,  &_mh_execute_header,  v10,  1LL,  "%@: Changing handler properties: %lld, %@",  &v24,  32);

    if (!v14) {
      goto LABEL_15;
    }
    id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v14,  4LL));
    free(v14);
    SSFileLog(v7, @"%@");
  }

LABEL_15:
  xpc_object_t v15 = xpc_dictionary_get_value(v6, SSDownloadHandlerPropertySessionsShouldBlockOtherDownloads);
  id v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
  id v17 = v16;
  if (v16 && xpc_get_type(v16) == (xpc_type_t)&_xpc_type_BOOL) {
    [v3 setSessionsShouldBlockOtherDownloads:xpc_BOOL_get_value(v17)];
  }
  xpc_object_t v18 = xpc_dictionary_get_value(v6, SSDownloadHandlerPropertyDownloadPhasesToIgnore);
  id v19 = (void *)objc_claimAutoreleasedReturnValue(v18);

  if (v19)
  {
    if (xpc_get_type(v19) == (xpc_type_t)&_xpc_type_null)
    {
      [v3 setDownloadPhasesToIgnore:0];
    }

    else if (xpc_get_type(v19) == (xpc_type_t)&_xpc_type_array)
    {
      int v20 = (void *)SSXPCCreateCFObjectFromXPCObject(v19);
      xpc_object_t v21 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](&OBJC_CLASS___NSSet, "setWithArray:", v20));
      [v3 setDownloadPhasesToIgnore:v21];
    }
  }

  xpc_object_t v22 = xpc_dictionary_get_value(v6, SSDownloadHandlerPropertySessionsNeedPowerAssertion);
  id v23 = (void *)objc_claimAutoreleasedReturnValue(v22);

  if (v23 && xpc_get_type(v23) == (xpc_type_t)&_xpc_type_BOOL) {
    [v3 setSessionsNeedPowerAssertion:xpc_BOOL_get_value(v23)];
  }

LABEL_27:
}

void sub_10011B420(uint64_t a1)
{
  uint64_t v5 = -[NSNumber initWithDouble:]( objc_alloc(&OBJC_CLASS___NSNumber),  "initWithDouble:",  xpc_dictionary_get_double(*(xpc_object_t *)(a1 + 32), "2"));
  id v2 = -[NSDictionary initWithObjectsAndKeys:]( objc_alloc(&OBJC_CLASS___NSDictionary),  "initWithObjectsAndKeys:",  v5,  @"percent",  0LL);
  int64_t int64 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 32), "1");
  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[DownloadHandlerManager handlerManager](&OBJC_CLASS___DownloadHandlerManager, "handlerManager"));
  [v4 setSessionProperties:v2 forSessionWithID:int64];
}

void sub_10011B56C(uint64_t a1)
{
  xpc_object_t value = xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 32), "2");
  id v3 = (void *)objc_claimAutoreleasedReturnValue(value);
  if (v3)
  {
    xpc_object_t xdict = v3;
    BOOL v4 = xpc_get_type(v3) == (xpc_type_t)&_xpc_type_dictionary;
    id v3 = xdict;
    if (v4)
    {
      uint64_t v5 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
      xpc_object_t v6 = xpc_dictionary_get_value(xdict, "3");
      id v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
      unsigned int v8 = v7;
      if (v7 && xpc_get_type(v7) == (xpc_type_t)&_xpc_type_BOOL)
      {
        uint64_t v9 = +[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", xpc_BOOL_get_value(v8));
        id v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
        -[NSMutableDictionary setObject:forKey:](v5, "setObject:forKey:", v10, @"blocks");
      }

      xpc_object_t v11 = xpc_dictionary_get_value(xdict, "4");
      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(v11);

      if (v12 && xpc_get_type(v12) == (xpc_type_t)&_xpc_type_BOOL)
      {
        id v13 = +[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", xpc_BOOL_get_value(v12));
        uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
        -[NSMutableDictionary setObject:forKey:](v5, "setObject:forKey:", v14, @"pausable");
      }

      xpc_object_t v15 = xpc_dictionary_get_value(xdict, "5");
      id v16 = (void *)objc_claimAutoreleasedReturnValue(v15);

      if (v16 && xpc_get_type(v16) == (xpc_type_t)&_xpc_type_BOOL)
      {
        id v17 = +[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", xpc_BOOL_get_value(v16));
        xpc_object_t v18 = (void *)objc_claimAutoreleasedReturnValue(v17);
        -[NSMutableDictionary setObject:forKey:](v5, "setObject:forKey:", v18, @"needspowerassert");
      }

      if (-[NSMutableDictionary count](v5, "count"))
      {
        int64_t int64 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 32), "1");
        int v20 = (void *)objc_claimAutoreleasedReturnValue(+[DownloadHandlerManager handlerManager](&OBJC_CLASS___DownloadHandlerManager, "handlerManager"));
        [v20 setSessionProperties:v5 forSessionWithID:int64];
      }

      id v3 = xdict;
    }
  }
}

void sub_10011B814(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = objc_opt_class(&OBJC_CLASS___NSString);
  id v7 = (id)SSXPCDictionaryCopyCFObjectWithClass(v2, "2", v3);
  BOOL v4 = -[NSDictionary initWithObjectsAndKeys:]( objc_alloc(&OBJC_CLASS___NSDictionary),  "initWithObjectsAndKeys:",  v7,  @"status",  0LL);
  int64_t int64 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 32), "1");
  xpc_object_t v6 = (void *)objc_claimAutoreleasedReturnValue(+[DownloadHandlerManager handlerManager](&OBJC_CLASS___DownloadHandlerManager, "handlerManager"));
  [v6 setSessionProperties:v4 forSessionWithID:int64];
}

void sub_10011B948(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) object]);
  uint64_t v3 = *(void **)(*(void *)(a1 + 40) + 56LL);
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472LL;
  v15[2] = sub_10011BB94;
  v15[3] = &unk_10034F158;
  id v4 = v2;
  id v16 = v4;
  [v3 enumerateKeysAndObjectsUsingBlock:v15];
  uint64_t v5 = (uint64_t)[*(id *)(*(void *)(a1 + 40) + 24) count];
  while (v5-- >= 1)
  {
    id v7 = (id)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 40) + 24) objectAtIndex:v5]);

    if (v7 == v4)
    {
      unsigned int v8 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
      if (!v8) {
        unsigned int v8 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      unsigned int v9 = [v8 shouldLog];
      else {
        LODWORD(v10) = v9;
      }
      xpc_object_t v11 = (os_log_s *)objc_claimAutoreleasedReturnValue([v8 OSLogObject]);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO)) {
        uint64_t v10 = v10;
      }
      else {
        v10 &= 2u;
      }
      if ((_DWORD)v10)
      {
        uint64_t v12 = (void *)objc_opt_class(*(void *)(a1 + 40));
        int v17 = 138412546;
        xpc_object_t v18 = v12;
        __int16 v19 = 2112;
        id v20 = v4;
        id v13 = v12;
        uint64_t v14 = (void *)_os_log_send_and_compose_impl( v10,  0LL,  0LL,  0LL,  &_mh_execute_header,  v11,  1LL,  "%@: Client disconnect: %@",  &v17,  22);

        if (v14)
        {
          xpc_object_t v11 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v14,  4LL));
          free(v14);
          SSFileLog(v8, @"%@");
          goto LABEL_15;
        }
      }

      else
      {
LABEL_15:
      }

      [v4 setOutputConnectionWithConnection:0];
      [*(id *)(*(void *)(a1 + 40) + 24) removeObjectAtIndex:v5];
      break;
    }
  }
}

id sub_10011BB94(uint64_t a1, uint64_t a2, void *a3)
{
  return [a3 removeObjectIdenticalTo:*(void *)(a1 + 32)];
}

void sub_10011BCAC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

uint64_t sub_10011BCC4(uint64_t a1, void *a2)
{
  id v32 = a2;
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([v32 database]);
  __int128 v34 = 0u;
  __int128 v35 = 0u;
  __int128 v36 = 0u;
  __int128 v37 = 0u;
  id obj = *(id *)(a1 + 32);
  id v4 = [obj countByEnumeratingWithState:&v34 objects:v46 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v35;
    uint64_t v31 = SSDownloadPhaseCanceled;
    id v7 = (objc_class *)&OBJC_IVAR___ApplicationWorkspaceProgressOperation__applicationProgress;
    id v30 = v3;
    do
    {
      for (uint64_t i = 0LL; i != v5; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v35 != v6) {
          objc_enumerationMutation(obj);
        }
        unsigned int v9 = *(void **)(*((void *)&v34 + 1) + 8LL * (void)i);
        id v10 = objc_msgSend( objc_alloc(v7 + 266),  "initWithPersistentID:inDatabase:",  objc_msgSend(v9, "longLongValue"),  v3);
        if (([*(id *)(a1 + 40) canAccessDownload:v10] & 1) == 0)
        {
          *(_BYTE *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL) = 0;
          goto LABEL_35;
        }

        xpc_object_t v11 = @"download_state.can_cancel";
        id v44 = 0LL;
        uint64_t v45 = v11;
        [v10 getValues:&v44 forProperties:&v45 count:1];
        if (v44 && ![v44 BOOLValue])
        {
          __int16 v19 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
          if (!v19) {
            __int16 v19 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
          }
          LODWORD(v20) = objc_msgSend(v19, "shouldLog", v28);
          xpc_object_t v21 = (os_log_s *)objc_claimAutoreleasedReturnValue([v19 OSLogObject]);
          if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO)) {
            uint64_t v20 = v20;
          }
          else {
            v20 &= 2u;
          }
          if ((_DWORD)v20)
          {
            xpc_object_t v22 = (void *)objc_opt_class(*(void *)(a1 + 48));
            uint64_t v23 = *(void *)(a1 + 40);
            int v38 = 138412802;
            int64_t v39 = v22;
            __int16 v40 = 2112;
            int64_t v41 = v9;
            __int16 v42 = 2112;
            uint64_t v43 = v23;
            id v24 = v22;
            LODWORD(v29) = 32;
            unsigned int v25 = (void *)_os_log_send_and_compose_impl( v20,  0LL,  0LL,  0LL,  &_mh_execute_header,  v21,  1LL,  "%@: Cancel requested for a non-cancellable download %@ for client: %@",  &v38,  v29);

            uint64_t v3 = v30;
            if (v25)
            {
              xpc_object_t v21 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v25,  4LL));
              free(v25);
              __int16 v28 = v21;
              SSFileLog(v19, @"%@");
              goto LABEL_32;
            }
          }

          else
          {
LABEL_32:
          }

          goto LABEL_34;
        }

        uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig", v28));
        if (!v12) {
          uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
        }
        LODWORD(v13) = [v12 shouldLog];
        uint64_t v14 = (os_log_s *)objc_claimAutoreleasedReturnValue([v12 OSLogObject]);
        if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO)) {
          uint64_t v13 = v13;
        }
        else {
          v13 &= 2u;
        }
        if (!(_DWORD)v13) {
          goto LABEL_19;
        }
        xpc_object_t v15 = (void *)objc_opt_class(*(void *)(a1 + 48));
        uint64_t v16 = *(void *)(a1 + 40);
        int v38 = 138412802;
        int64_t v39 = v15;
        __int16 v40 = 2112;
        int64_t v41 = v9;
        __int16 v42 = 2112;
        uint64_t v43 = v16;
        id v17 = v15;
        LODWORD(v29) = 32;
        xpc_object_t v18 = (void *)_os_log_send_and_compose_impl( v13,  0LL,  0LL,  0LL,  &_mh_execute_header,  v14,  1LL,  "%@: Canceling download %@ for client: %@",  &v38,  v29);

        uint64_t v3 = v30;
        if (v18)
        {
          uint64_t v14 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v18,  4LL));
          free(v18);
          __int16 v28 = v14;
          SSFileLog(v12, @"%@");
LABEL_19:
        }

        *(_BYTE *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = objc_msgSend( v32,  "finishDownloadWithID:finalPhase:",  objc_msgSend( v9,  "longLongValue"),  v31);
LABEL_34:

        id v7 = (objc_class *)&OBJC_IVAR___ApplicationWorkspaceProgressOperation__applicationProgress;
LABEL_35:
      }

      id v5 = [obj countByEnumeratingWithState:&v34 objects:v46 count:16];
    }

    while (v5);
  }

  uint64_t v26 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL);
  return v26;
}

void sub_10011C1EC(uint64_t a1)
{
  id v1 = (id)objc_claimAutoreleasedReturnValue(+[Daemon daemon](&OBJC_CLASS___Daemon, "daemon"));
  [v1 releaseKeepAliveAssertion:@"com.apple.itunesstored.DownloadController"];
}

void sub_10011C304(uint64_t a1, void *a2)
{
  id v18 = a2;
  context = objc_autoreleasePoolPush();
  uint64_t v3 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  id v4 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[SSSQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SSSQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"kind",  SSDownloadKindSoftwareApplication));
  -[NSMutableArray addObject:](v3, "addObject:", v5);

  __int128 v23 = 0u;
  __int128 v24 = 0u;
  __int128 v21 = 0u;
  __int128 v22 = 0u;
  id v6 = *(id *)(a1 + 32);
  id v7 = [v6 countByEnumeratingWithState:&v21 objects:v26 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v22;
    do
    {
      for (uint64_t i = 0LL; i != v8; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v22 != v9) {
          objc_enumerationMutation(v6);
        }
        xpc_object_t v11 = *(void **)(*((void *)&v21 + 1) + 8LL * (void)i);
        if ([v11 length])
        {
          uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue( +[SSSQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SSSQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"bundle_id",  v11));
          -[NSMutableArray addObject:](v4, "addObject:", v12);
        }
      }

      id v8 = [v6 countByEnumeratingWithState:&v21 objects:v26 count:16];
    }

    while (v8);
  }

  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue( +[SSSQLiteCompoundPredicate predicateMatchingAnyPredicates:]( &OBJC_CLASS___SSSQLiteCompoundPredicate,  "predicateMatchingAnyPredicates:",  v4));
  -[NSMutableArray addObject:](v3, "addObject:", v13);
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue( +[SSSQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SSSQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v3));
  xpc_object_t v15 = (void *)objc_claimAutoreleasedReturnValue([v18 database]);
  uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue( +[DownloadEntity queryWithDatabase:predicate:]( &OBJC_CLASS___DownloadEntity,  "queryWithDatabase:predicate:",  v15,  v14));

  unsigned int v25 = @"bundle_id";
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472LL;
  v19[2] = sub_10011C598;
  v19[3] = &unk_10034B450;
  id v20 = *(id *)(a1 + 40);
  [v16 enumeratePersistentIDsAndProperties:&v25 count:1 usingBlock:v19];

  objc_autoreleasePoolPop(context);
}

void sub_10011C598(uint64_t a1, uint64_t a2, void *a3)
{
  if (*a3)
  {
    id v4 = *(void **)(a1 + 32);
    id v5 = (id)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", a2));
    [v4 setObject:v5 forKey:*a3];
  }

void sub_10011C6F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = objc_claimAutoreleasedReturnValue( +[DownloadEntity databasePropertyToGetClientProperty:]( &OBJC_CLASS___DownloadEntity,  "databasePropertyToGetClientProperty:",  a2));
  id v6 = (id)v5;
  if (v5) {
    [*(id *)(a1 + 32) addObject:v5];
  }
  else {
    [*(id *)(a1 + 40) addIndex:a3];
  }
}

void sub_10011C800(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 48);
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _managerClientForConnection:*(void *)(a1 + 40)]);
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_10011C914(uint64_t a1)
{
  xpc_object_t message = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 32));
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) _managerClientForConnection:*(void *)(a1 + 48)]);
  (*(void (**)(uint64_t, void *, xpc_object_t))(v2 + 16))(v2, v3, message);

  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 48), message);
}

uint64_t sub_10011CA00(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_10011CAD4(uint64_t a1)
{
  xpc_object_t message = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 32));
  (*(void (**)(void))(*(void *)(a1 + 48) + 16LL))();
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 40), message);
}

void sub_10011CF30( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
}

uint64_t sub_10011CF64(uint64_t a1, void *a2)
{
  id v33 = a2;
  __int128 v36 = (void *)objc_claimAutoreleasedReturnValue([v33 database]);
  __int128 v34 = objc_alloc_init(&OBJC_CLASS___NSMutableOrderedSet);
  __int128 v37 = 0u;
  __int128 v38 = 0u;
  __int128 v39 = 0u;
  __int128 v40 = 0u;
  id obj = *(id *)(a1 + 32);
  id v3 = [obj countByEnumeratingWithState:&v37 objects:v48 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v38;
    do
    {
      for (uint64_t i = 0LL; i != v4; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v38 != v5) {
          objc_enumerationMutation(obj);
        }
        id v7 = *(void **)(*((void *)&v37 + 1) + 8LL * (void)i);
        id v8 = objc_msgSend(v7, "longLongValue", v31);
        uint64_t v9 = -[DownloadEntity initWithPersistentID:inDatabase:]( objc_alloc(&OBJC_CLASS___DownloadEntity),  "initWithPersistentID:inDatabase:",  v8,  v36);
        if (([*(id *)(a1 + 40) canAccessDownload:v9] & 1) == 0)
        {
          *(_BYTE *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL) = 0;
          goto LABEL_49;
        }

        id v10 = (void *)objc_claimAutoreleasedReturnValue(-[DownloadEntity downloadKind](v9, "downloadKind"));
        int IsSoftwareKind = SSDownloadKindIsSoftwareKind(v10);

        if (IsSoftwareKind)
        {
          uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
          if (!v12) {
            uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
          }
          LODWORD(v13) = [v12 shouldLog];
          uint64_t v14 = (os_log_s *)objc_claimAutoreleasedReturnValue([v12 OSLogObject]);
          if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO)) {
            uint64_t v13 = v13;
          }
          else {
            v13 &= 2u;
          }
          if ((_DWORD)v13)
          {
            xpc_object_t v15 = (void *)objc_opt_class(*(void *)(a1 + 48));
            int v44 = 138412546;
            uint64_t v45 = v15;
            __int16 v46 = 2112;
            id v47 = v7;
            id v16 = v15;
            LODWORD(v32) = 22;
            id v17 = (void *)_os_log_send_and_compose_impl( v13,  0LL,  0LL,  0LL,  &_mh_execute_header,  v14,  1LL,  "[%@]: Ignoring pausing of software downloadID: %@",  &v44,  v32);

            if (v17)
            {
              uint64_t v14 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v17,  4LL));
              free(v17);
              uint64_t v31 = v14;
              SSFileLog(v12, @"%@");
              goto LABEL_18;
            }
          }

          else
          {
LABEL_18:
          }

          *(_BYTE *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL) = *(void *)(a1 + 64) > 1LL;
          goto LABEL_49;
        }

        v43[0] = @"download_state.phase";
        v43[1] = @"IFNULL(download_state.can_pause, 1)";
        int64_t v41 = 0LL;
        id v42 = 0LL;
        -[DownloadEntity getValues:forProperties:count:](v9, "getValues:forProperties:count:", &v41, v43, 2LL);
        if (*(_BYTE *)(a1 + 72) || ([v42 BOOLValue] & 1) != 0)
        {
          if ((SSDownloadPhaseIsPausable(v41) & 1) != 0)
          {
            -[NSMutableOrderedSet addObject:](v34, "addObject:", v7);
            *(_BYTE *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL) = 1;
            goto LABEL_47;
          }

          id v18 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
          if (!v18) {
            id v18 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
          }
          LODWORD(v19) = [v18 shouldLog];
          id v20 = (os_log_s *)objc_claimAutoreleasedReturnValue([v18 OSLogObject]);
          if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT)) {
            uint64_t v19 = v19;
          }
          else {
            v19 &= 2u;
          }
          if (!(_DWORD)v19) {
            goto LABEL_45;
          }
          __int128 v21 = (void *)objc_opt_class(*(void *)(a1 + 48));
          int v44 = 138412546;
          uint64_t v45 = v21;
          __int16 v46 = 2112;
          id v47 = v41;
          id v22 = v21;
          LODWORD(v32) = 22;
          uint64_t v23 = _os_log_send_and_compose_impl( v19,  0LL,  0LL,  0LL,  &_mh_execute_header,  v20,  0LL,  "%@: Can't pause phase: %@",  &v44,  v32);
        }

        else
        {
          id v18 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
          if (!v18) {
            id v18 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
          }
          LODWORD(v24) = [v18 shouldLog];
          id v20 = (os_log_s *)objc_claimAutoreleasedReturnValue([v18 OSLogObject]);
          if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT)) {
            uint64_t v24 = v24;
          }
          else {
            v24 &= 2u;
          }
          if (!(_DWORD)v24) {
            goto LABEL_45;
          }
          unsigned int v25 = (void *)objc_opt_class(*(void *)(a1 + 48));
          int v44 = 138412546;
          uint64_t v45 = v25;
          __int16 v46 = 2048;
          id v47 = v8;
          id v22 = v25;
          LODWORD(v32) = 22;
          uint64_t v23 = _os_log_send_and_compose_impl( v24,  0LL,  0LL,  0LL,  &_mh_execute_header,  v20,  0LL,  "%@: Can't pause download: %lld",  &v44,  v32);
        }

        uint64_t v26 = (void *)v23;

        if (v26)
        {
          id v20 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v26,  4LL));
          free(v26);
          uint64_t v31 = v20;
          SSFileLog(v18, @"%@");
LABEL_45:
        }

        *(_BYTE *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL) = *(void *)(a1 + 64) > 1LL;
LABEL_47:
        for (uint64_t j = 1LL; j != -1; --j)

LABEL_49:
        int v28 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL);

        if (!v28) {
          goto LABEL_52;
        }
      }

      id v4 = [obj countByEnumeratingWithState:&v37 objects:v48 count:16];
    }

    while (v4);
  }

void sub_10011D6F4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v12 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

BOOL sub_10011D718(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc(&OBJC_CLASS___DownloadEntity);
  id v5 = [*(id *)(a1 + 32) longLongValue];
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v3 database]);
  id v7 = -[DownloadEntity initWithPersistentID:inDatabase:](v4, "initWithPersistentID:inDatabase:", v5, v6);

  if (([*(id *)(a1 + 40) canAccessDownload:v7] & 1) == 0)
  {
    uint64_t v19 = SSError(SSErrorDomain, 107LL, 0LL, 0LL);
    uint64_t v20 = objc_claimAutoreleasedReturnValue(v19);
    uint64_t v21 = *(void *)(*(void *)(a1 + 64) + 8LL);
    id v22 = *(void **)(v21 + 40);
    *(void *)(v21 + 40) = v20;

LABEL_20:
    BOOL v18 = *(_BYTE *)(*(void *)(*(void *)(a1 + 72) + 8LL) + 24LL) != 0;
    goto LABEL_21;
  }

  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[DownloadEntity downloadKind](v7, "downloadKind"));
  int IsSoftwareKind = SSDownloadKindIsSoftwareKind(v8);

  if (!IsSoftwareKind)
  {
    id v23 = [*(id *)(a1 + 32) longLongValue];
    id v24 = [*(id *)(a1 + 56) longLongValue];
    id v29 = 0LL;
    unsigned __int8 v25 = [v3 prioritizeDownloadWithID:v23 aboveDownloadWithID:v24 error:&v29];
    id v26 = v29;
    id v27 = v29;
    *(_BYTE *)(*(void *)(*(void *)(a1 + 72) + 8LL) + 24LL) = v25;
    if (!*(_BYTE *)(*(void *)(*(void *)(a1 + 72) + 8LL) + 24LL)) {
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 64) + 8LL) + 40LL), v26);
    }

    goto LABEL_20;
  }

  id v10 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v10) {
    id v10 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v11 = [v10 shouldLog];
  else {
    LODWORD(v12) = v11;
  }
  uint64_t v13 = (os_log_s *)objc_claimAutoreleasedReturnValue([v10 OSLogObject]);
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v12 = v12;
  }
  else {
    v12 &= 2u;
  }
  if (!(_DWORD)v12) {
    goto LABEL_14;
  }
  uint64_t v14 = (void *)objc_opt_class(*(void *)(a1 + 48));
  uint64_t v15 = *(void *)(a1 + 32);
  int v30 = 138412546;
  uint64_t v31 = v14;
  __int16 v32 = 2112;
  uint64_t v33 = v15;
  id v16 = v14;
  id v17 = (void *)_os_log_send_and_compose_impl( v12,  0LL,  0LL,  0LL,  &_mh_execute_header,  v13,  0LL,  "[%@]: Unable to prioritize software downloadID: %@",  &v30,  22);

  if (v17)
  {
    uint64_t v13 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v17,  4LL));
    free(v17);
    SSFileLog(v10, @"%@");
LABEL_14:
  }

  BOOL v18 = 0LL;
LABEL_21:

  return v18;
}

void sub_10011DD98(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) object]);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  v10[2] = sub_10011DE60;
  v10[3] = &unk_10034F248;
  id v11 = v6;
  id v7 = *(id *)(a1 + 40);
  char v15 = a2;
  id v12 = v7;
  id v13 = v5;
  uint64_t v14 = *(void *)(a1 + 48);
  id v8 = v5;
  id v9 = v6;
  [v9 _dispatchAsync:v10];
}

id sub_10011DE60(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v2) {
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v3 = [v2 shouldLog];
  else {
    LODWORD(v4) = v3;
  }
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue([v2 OSLogObject]);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO)) {
    uint64_t v4 = v4;
  }
  else {
    v4 &= 2u;
  }
  if (!(_DWORD)v4) {
    goto LABEL_12;
  }
  id v6 = (void *)objc_opt_class(*(void *)(a1 + 32));
  int v7 = *(unsigned __int8 *)(a1 + 64);
  uint64_t v8 = *(void *)(a1 + 40);
  uint64_t v9 = *(void *)(a1 + 48);
  int v13 = 138413058;
  uint64_t v14 = v6;
  __int16 v15 = 2112;
  uint64_t v16 = v8;
  __int16 v17 = 1024;
  int v18 = v7;
  __int16 v19 = 2112;
  uint64_t v20 = v9;
  id v10 = v6;
  id v11 = (void *)_os_log_send_and_compose_impl( v4,  0LL,  0LL,  0LL,  &_mh_execute_header,  v5,  1LL,  "%@: Rescue for %@, success: %d, error: %@",  &v13,  38);

  if (v11)
  {
    id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v11,  4LL));
    free(v11);
    SSFileLog(v2, @"%@");
LABEL_12:
  }

  return [*(id *)(*(void *)(a1 + 56) + 40) removeObject:*(void *)(a1 + 40)];
}

uint64_t sub_10011E25C(uint64_t a1, void *a2)
{
  id v24 = a2;
  unsigned int v3 = (void *)objc_claimAutoreleasedReturnValue([v24 database]);
  uint64_t v4 = objc_alloc_init(&OBJC_CLASS___NSMutableOrderedSet);
  __int128 v28 = 0u;
  __int128 v29 = 0u;
  __int128 v30 = 0u;
  __int128 v31 = 0u;
  uint64_t v27 = a1;
  id obj = *(id *)(a1 + 32);
  id v5 = [obj countByEnumeratingWithState:&v28 objects:v36 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v29;
    unsigned __int8 v25 = v3;
    do
    {
      for (uint64_t i = 0LL; i != v6; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v29 != v7) {
          objc_enumerationMutation(obj);
        }
        uint64_t v9 = *(void **)(*((void *)&v28 + 1) + 8LL * (void)i);
        id v10 = -[DownloadEntity initWithPersistentID:inDatabase:]( [DownloadEntity alloc],  "initWithPersistentID:inDatabase:",  [v9 longLongValue],  v3);
        if ([*(id *)(v27 + 40) canAccessDownload:v10])
        {
          id v11 = (void *)objc_claimAutoreleasedReturnValue(-[DownloadEntity downloadKind](v10, "downloadKind"));
          int IsSoftwareKind = SSDownloadKindIsSoftwareKind(v11);

          if (IsSoftwareKind)
          {
            int v13 = v4;
            uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
            if (!v14) {
              uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
            }
            unsigned int v15 = objc_msgSend(v14, "shouldLog", v22);
            else {
              LODWORD(v16) = v15;
            }
            __int16 v17 = (os_log_s *)objc_claimAutoreleasedReturnValue([v14 OSLogObject]);
            if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT)) {
              uint64_t v16 = v16;
            }
            else {
              v16 &= 2u;
            }
            if ((_DWORD)v16)
            {
              int v18 = (void *)objc_opt_class(*(void *)(v27 + 48));
              int v32 = 138412546;
              uint64_t v33 = v18;
              __int16 v34 = 2112;
              __int128 v35 = v9;
              id v19 = v18;
              LODWORD(v23) = 22;
              uint64_t v20 = (void *)_os_log_send_and_compose_impl( v16,  0LL,  0LL,  0LL,  &_mh_execute_header,  v17,  0LL,  "[%@]: Unable to resume software downloadID: %@",  &v32,  v23);

              if (v20)
              {
                __int16 v17 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v20,  4LL));
                free(v20);
                id v22 = v17;
                SSFileLog(v14, @"%@");
                goto LABEL_19;
              }
            }

            else
            {
LABEL_19:
            }

            uint64_t v4 = v13;
            unsigned int v3 = v25;
            goto LABEL_22;
          }

          -[NSMutableOrderedSet addObject:](v4, "addObject:", v9);
        }

uint64_t sub_10011E7C0(uint64_t a1, void *a2)
{
  id v24 = a2;
  unsigned int v3 = (void *)objc_claimAutoreleasedReturnValue([v24 database]);
  uint64_t v4 = objc_alloc_init(&OBJC_CLASS___NSMutableOrderedSet);
  __int128 v28 = 0u;
  __int128 v29 = 0u;
  __int128 v30 = 0u;
  __int128 v31 = 0u;
  uint64_t v27 = a1;
  id obj = *(id *)(a1 + 32);
  id v5 = [obj countByEnumeratingWithState:&v28 objects:v36 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v29;
    unsigned __int8 v25 = v3;
    do
    {
      for (uint64_t i = 0LL; i != v6; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v29 != v7) {
          objc_enumerationMutation(obj);
        }
        uint64_t v9 = *(void **)(*((void *)&v28 + 1) + 8LL * (void)i);
        id v10 = -[DownloadEntity initWithPersistentID:inDatabase:]( [DownloadEntity alloc],  "initWithPersistentID:inDatabase:",  [v9 longLongValue],  v3);
        if ([*(id *)(v27 + 40) canAccessDownload:v10])
        {
          id v11 = (void *)objc_claimAutoreleasedReturnValue(-[DownloadEntity downloadKind](v10, "downloadKind"));
          int IsSoftwareKind = SSDownloadKindIsSoftwareKind(v11);

          if (IsSoftwareKind)
          {
            int v13 = v4;
            uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
            if (!v14) {
              uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
            }
            unsigned int v15 = objc_msgSend(v14, "shouldLog", v22);
            else {
              LODWORD(v16) = v15;
            }
            __int16 v17 = (os_log_s *)objc_claimAutoreleasedReturnValue([v14 OSLogObject]);
            if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT)) {
              uint64_t v16 = v16;
            }
            else {
              v16 &= 2u;
            }
            if ((_DWORD)v16)
            {
              int v18 = (void *)objc_opt_class(*(void *)(v27 + 48));
              int v32 = 138412546;
              uint64_t v33 = v18;
              __int16 v34 = 2112;
              __int128 v35 = v9;
              id v19 = v18;
              LODWORD(v23) = 22;
              uint64_t v20 = (void *)_os_log_send_and_compose_impl( v16,  0LL,  0LL,  0LL,  &_mh_execute_header,  v17,  0LL,  "[%@]: Unable to restart software downloadID: %@",  &v32,  v23);

              if (v20)
              {
                __int16 v17 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v20,  4LL));
                free(v20);
                id v22 = v17;
                SSFileLog(v14, @"%@");
                goto LABEL_19;
              }
            }

            else
            {
LABEL_19:
            }

            uint64_t v4 = v13;
            unsigned int v3 = v25;
            goto LABEL_22;
          }

          -[NSMutableOrderedSet addObject:](v4, "addObject:", v9);
        }

id sub_10011F1CC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _reloadOperationKeepAliveTransaction];
}

void sub_10011F1D4(uint64_t a1)
{
  id v2 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  if (!v2) {
    id v2 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  unsigned int v3 = [v2 shouldLog];
  else {
    LODWORD(v4) = v3;
  }
  id v5 = (os_log_s *)[v2 OSLogObject];
  if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
    uint64_t v4 = v4;
  }
  else {
    v4 &= 2u;
  }
  if ((_DWORD)v4)
  {
    id v6 = [*(id *)(*(void *)(a1 + 32) + 80) count];
    int v9 = 134217984;
    id v10 = v6;
    uint64_t v7 = _os_log_send_and_compose_impl( v4,  0LL,  0LL,  0LL,  &_mh_execute_header,  v5,  16LL,  "Received SIGTERM, releasing %lu transactions",  &v9);
    if (v7)
    {
      uint64_t v8 = (void *)v7;
      +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v7, 4LL);
      free(v8);
      SSFileLog(v2, @"%@");
    }
  }

  *(void *)(*(void *)(a1 + 32) + 72LL) = 0LL;
  *(void *)(*(void *)(a1 + 32) + 80LL) = 0LL;
}

id sub_10011F4D0(uint64_t a1)
{
  id result = objc_alloc_init((Class)objc_opt_class(*(void *)(a1 + 32)));
  qword_1003A3490 = (uint64_t)result;
  return result;
}

id sub_10011F724(uint64_t a1, _xpc_activity_s *a2)
{
  id v4 = [*(id *)(a1 + 40) UTF8String];
  if (xpc_activity_get_state(a2) == 2 && v4) {
    [*(id *)(a1 + 32) _handleWakeWithName:v4 job:*(void *)(a1 + 48)];
  }
  return [*(id *)(a1 + 32) releaseKeepAliveAssertion:*(void *)(a1 + 40)];
}

id sub_10011F7E4(uint64_t a1)
{
  id result = [*(id *)(*(void *)(a1 + 32) + 88) containsObject:*(void *)(a1 + 40)];
  if ((result & 1) == 0)
  {
    unsigned int v3 = +[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter");
    -[NSNotificationCenter addObserver:selector:name:object:]( v3,  "addObserver:selector:name:object:",  *(void *)(a1 + 32),  "_operationCountChanged:",  ISOperationQueueOperationCountChangedNotification,  *(void *)(a1 + 40));
    [*(id *)(*(void *)(a1 + 32) + 88) addObject:*(void *)(a1 + 40)];
    return [*(id *)(a1 + 32) _reloadOperationKeepAliveTransaction];
  }

  return result;
}

void sub_10011F8D4(void *a1)
{
  id v2 = [*(id *)(a1[4] + 16) objectForKey:a1[5]];
  if (v2)
  {
    [v2 addObject:a1[6]];
  }

  else
  {
    unsigned int v3 = -[NSMutableSet initWithObjects:](objc_alloc(&OBJC_CLASS___NSMutableSet), "initWithObjects:", a1[6], 0LL);
    [*(id *)(a1[4] + 16) setObject:v3 forKey:a1[5]];
  }

  xpc_object_t v4 = xpc_dictionary_create(0LL, 0LL, 0LL);
  uint64_t v5 = a1[5];
  id v6 = *(void **)(a1[4] + 112LL);
  applier[2] = sub_10011F9FC;
  applier[3] = &unk_10034F2C0;
  applier[0] = _NSConcreteStackBlock;
  applier[1] = 3221225472LL;
  void applier[4] = v5;
  applier[5] = v4;
  xpc_dictionary_apply(v6, applier);
  if (xpc_dictionary_get_count(v4))
  {
    uint64_t v7 = dispatch_queue_create("com.apple.itunesstored.Daemon.observers", 0LL);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_10011FA64;
    block[3] = &unk_10034E028;
    uint64_t v8 = a1[6];
    void block[5] = v7;
    void block[6] = v8;
    void block[4] = v4;
    dispatch_async(v7, block);
  }

  xpc_release(v4);
}

uint64_t sub_10011F9FC(uint64_t a1, const char *a2, void *a3)
{
  id v6 = -[NSString initWithUTF8String:](objc_alloc(&OBJC_CLASS___NSString), "initWithUTF8String:", a2);
  if (-[NSString hasPrefix:](v6, "hasPrefix:", *(void *)(a1 + 32))) {
    xpc_dictionary_set_value(*(xpc_object_t *)(a1 + 40), a2, a3);
  }

  return 1LL;
}

void sub_10011FA64(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  applier[0] = _NSConcreteStackBlock;
  applier[1] = 3221225472LL;
  applier[2] = sub_10011FACC;
  applier[3] = &unk_10034F2E8;
  void applier[4] = *(void *)(a1 + 48);
  xpc_dictionary_apply(v2, applier);
  dispatch_release(*(dispatch_object_t *)(a1 + 40));
}

uint64_t sub_10011FACC(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = -[NSString initWithUTF8String:](objc_alloc(&OBJC_CLASS___NSString), "initWithUTF8String:", a2);
  (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();

  return 1LL;
}

uint64_t sub_10011FBA0(uint64_t result)
{
  return result;
}

void sub_10011FC64( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_10011FC7C(uint64_t a1, uint64_t a2)
{
}

void sub_10011FC8C(uint64_t a1)
{
}

id sub_10011FC98(void *a1)
{
  id result = objc_msgSend(objc_msgSend(*(id *)(a1[4] + 40), "objectForKey:", a1[5]), "object");
  *(void *)(*(void *)(a1[6] + 8LL) + 40LL) = result;
  return result;
}

void sub_10011FD34(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    id v2 = objc_alloc_init(&OBJC_CLASS___DaemonCachedObject);
    -[DaemonCachedObject setObject:](v2, "setObject:", *(void *)(a1 + 32));
    if (*(double *)(a1 + 56) > 2.22044605e-16)
    {
      unsigned int v3 = +[SSWeakReference weakReferenceWithObject:]( &OBJC_CLASS___SSWeakReference,  "weakReferenceWithObject:",  *(void *)(a1 + 40));
      xpc_object_t v4 = dispatch_source_create( (dispatch_source_type_t)&_dispatch_source_type_timer,  0LL,  0LL,  *(dispatch_queue_t *)(*(void *)(a1 + 40) + 56LL));
      dispatch_time_t v5 = dispatch_time(0LL, (uint64_t)(*(double *)(a1 + 56) * 1000000000.0));
      dispatch_source_set_timer(v4, v5, 0LL, 0LL);
      v8[0] = _NSConcreteStackBlock;
      v8[1] = 3221225472LL;
      void v8[2] = sub_10011FEA8;
      v8[3] = &unk_10034AE70;
      uint64_t v6 = *(void *)(a1 + 48);
      void v8[4] = v3;
      void v8[5] = v6;
      dispatch_source_set_event_handler(v4, v8);
      -[DaemonCachedObject setExpirationTimer:](v2, "setExpirationTimer:", v4);
      dispatch_resume(v4);
      dispatch_release(v4);
    }

    uint64_t v7 = *(void **)(*(void *)(a1 + 40) + 40LL);
    if (!v7)
    {
      *(void *)(*(void *)(a1 + 40) + 40LL) = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
      uint64_t v7 = *(void **)(*(void *)(a1 + 40) + 40LL);
    }

    [v7 setObject:v2 forKey:*(void *)(a1 + 48)];
  }

  else
  {
    [*(id *)(*(void *)(a1 + 40) + 40) removeObjectForKey:*(void *)(a1 + 48)];
  }

id sub_10011FEA8(uint64_t a1)
{
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "object"), "_expireCachedObjectForKey:", *(void *)(a1 + 40));
}

void sub_10011FF28(uint64_t a1)
{
  id v2 = (const char *)[*(id *)(a1 + 32) UTF8String];
  xpc_activity_unregister(v2);
  id v3 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  unsigned int v4 = [v3 shouldLog];
  else {
    unsigned int v5 = v4;
  }
  uint64_t v6 = (os_log_s *)[v3 OSLogObject];
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = v5 & 2;
  }
  if ((_DWORD)v7)
  {
    uint64_t v8 = *(void *)(a1 + 32);
    int v11 = 138543362;
    uint64_t v12 = v8;
    uint64_t v9 = _os_log_send_and_compose_impl( v7,  0LL,  0LL,  0LL,  &_mh_execute_header,  v6,  0LL,  "Canceled activity: %{public}@",  &v11,  12);
    if (v9)
    {
      id v10 = (void *)v9;
      +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v9, 4LL);
      free(v10);
      SSFileLog(v3, @"%@");
    }
  }

  xpc_dictionary_set_value(*(xpc_object_t *)(*(void *)(a1 + 40) + 112LL), v2, 0LL);
}

uint64_t sub_1001200F8(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 32);
  uint64_t v2 = *(void *)(v1 + 48);
  BOOL v3 = v2 < 1;
  uint64_t v4 = v2 - 1;
  if (!v3) {
    *(void *)(v1 + 4_Block_object_dispose(va, 8) = v4;
  }
  return result;
}

id sub_100120190(uint64_t a1)
{
  return [*(id *)(a1 + 32) releaseKeepAliveAssertion:*(void *)(a1 + 40)];
}

void sub_1001201D0(_Unwind_Exception *a1)
{
}

void sub_1001201EC()
{
}

void sub_100120254(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  BOOL v3 = *(void **)(v2 + 72);
  if (v3 && *(void *)(v2 + 80))
  {
    [v3 addObject:*(void *)(a1 + 40)];
    if ([*(id *)(*(void *)(a1 + 32) + 72) countForObject:*(void *)(a1 + 40)] == (id)1)
    {
      id v4 = (id)os_transaction_create([*(id *)(a1 + 40) UTF8String]);
      [*(id *)(*(void *)(a1 + 32) + 80) setObject:v4 forKeyedSubscript:*(void *)(a1 + 40)];
    }
  }

id sub_100120354(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id result = *(id *)(v2 + 72);
  if (result && *(void *)(v2 + 80))
  {
    [result removeObject:*(void *)(a1 + 40)];
    id result = [*(id *)(*(void *)(a1 + 32) + 72) countForObject:*(void *)(a1 + 40)];
    if (!result) {
      return [*(id *)(*(void *)(a1 + 32) + 80) setObject:0 forKeyedSubscript:*(void *)(a1 + 40)];
    }
  }

  return result;
}

id sub_100120410(uint64_t a1)
{
  __int128 v10 = 0u;
  __int128 v11 = 0u;
  __int128 v8 = 0u;
  __int128 v9 = 0u;
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 16LL);
  id result = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (result)
  {
    id v4 = result;
    uint64_t v5 = *(void *)v9;
    do
    {
      uint64_t v6 = 0LL;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        id v7 = [*(id *)(*(void *)(a1 + 32) + 16) objectForKey:*(void *)(*((void *)&v8 + 1) + 8 * (void)v6)];
        if (v7) {
          [v7 removeObject:*(void *)(a1 + 40)];
        }
        uint64_t v6 = (char *)v6 + 1;
      }

      while (v4 != v6);
      id result = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
      id v4 = result;
    }

    while (result);
  }

  return result;
}

id sub_100120568(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 40) removeObjectForKey:*(void *)(a1 + 40)];
}

id sub_1001205CC(uint64_t a1)
{
  uint64_t v2 = +[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter");
  -[NSNotificationCenter removeObserver:name:object:]( v2,  "removeObserver:name:object:",  *(void *)(a1 + 32),  ISOperationQueueOperationCountChangedNotification,  *(void *)(a1 + 40));
  [*(id *)(*(void *)(a1 + 32) + 88) removeObject:*(void *)(a1 + 40)];
  return [*(id *)(a1 + 32) _reloadOperationKeepAliveTransaction];
}

id sub_100120D40(uint64_t a1)
{
  return [*(id *)(a1 + 32) releaseKeepAliveAssertion:@"com.apple.itunesstored.launch"];
}

id sub_100120FB4(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishWithSuccess];
}

id sub_100121220(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishWithSuccess];
}

void sub_1001214F8(uint64_t a1)
{
  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 32));
  xpc_dictionary_set_BOOL(reply, "0", *(void *)(*(void *)(a1 + 40) + 48LL) > 0LL);
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 48), reply);
  xpc_release(reply);
}

id sub_1001215E8(uint64_t a1)
{
  return [*(id *)(a1 + 32) _reloadWiFiManager];
}

id sub_100121648(uint64_t a1)
{
  return [*(id *)(a1 + 32) _reloadOperationKeepAliveTransaction];
}

void sub_100121950(uint64_t a1)
{
  __int128 v7 = 0u;
  __int128 v8 = 0u;
  __int128 v9 = 0u;
  __int128 v10 = 0u;
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      for (uint64_t i = 0LL; i != v4; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        (*(void (**)(void))(*(void *)(*((void *)&v7 + 1) + 8LL * (void)i) + 16LL))();
      }

      id v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }

    while (v4);
  }

  dispatch_release(*(dispatch_object_t *)(a1 + 56));
}

void sub_100121AA4(id a1)
{
  uint64_t v1 = objc_alloc_init(&OBJC_CLASS___SubscriptionOperation);
  -[SubscriptionOperation setOperationType:](v1, "setOperationType:", 2LL);
  objc_msgSend(+[ISOperationQueue mainQueue](ISOperationQueue, "mainQueue"), "addOperation:", v1);
}

BOOL sub_100121AEC(id a1)
{
  id v1 = objc_msgSend( objc_msgSend( objc_msgSend(+[SSAccountStore defaultStore](SSAccountStore, "defaultStore"), "activeAccount"),  "uniqueIdentifier"),  "unsignedLongLongValue");
  if (!v1) {
    return (uint64_t)objc_msgSend( objc_msgSend( +[SSDevice currentDevice](SSDevice, "currentDevice"),  "carrierBundleStatusForService:",  0),  "integerValue") > 0;
  }
  id v2 = v1;
  id v3 = objc_alloc_init(&OBJC_CLASS___SSVFairPlaySubscriptionController);
  LOBYTE(v2) = objc_msgSend( -[SSVFairPlaySubscriptionController subscriptionStatusForAccountUniqueIdentifier:]( v3,  "subscriptionStatusForAccountUniqueIdentifier:",  v2),  "hasSubscriptionSlot");

  dispatch_semaphore_t v5 = dispatch_semaphore_create(0LL);
  dispatch_retain(v5);
  uint64_t v13 = 0LL;
  uint64_t v14 = &v13;
  uint64_t v15 = 0x3052000000LL;
  uint64_t v16 = sub_10011FC7C;
  __int16 v17 = sub_10011FC8C;
  uint64_t v18 = 0LL;
  id v6 = +[SSVSubscriptionStatusCoordinator sharedCoordinator]( &OBJC_CLASS___SSVSubscriptionStatusCoordinator,  "sharedCoordinator");
  uint64_t v19 = SSVSubscriptionStatusOptionAuthenticatesIfNecessary;
  uint64_t v20 = &__kCFBooleanFalse;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472LL;
  v12[2] = sub_100121CF8;
  v12[3] = &unk_10034F398;
  void v12[4] = v5;
  void v12[5] = &v13;
  objc_msgSend( v6,  "getStatusWithOptions:statusBlock:",  +[NSDictionary dictionaryWithObjects:forKeys:count:]( NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v20,  &v19,  1),  v12);
  dispatch_time_t v7 = dispatch_time(0LL, 60000000000LL);
  uint64_t v8 = dispatch_semaphore_wait(v5, v7);
  dispatch_release(v5);
  __int128 v9 = v14;
  if (v8 || (__int128 v10 = (void *)v14[5]) == 0LL)
  {
    BOOL v4 = 0;
  }

  else
  {
    BOOL v4 = [v10 accountStatus] == (id)3;
    __int128 v9 = v14;
  }

  _Block_object_dispose(&v13, 8);
  return v4;
}

void sub_100121CDC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
}

void sub_100121CF8(uint64_t a1, void *a2, int a3)
{
  if (a3)
  {
    *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL) = a2;
    dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
    dispatch_release(*(dispatch_object_t *)(a1 + 32));
  }

uint64_t sub_100121FA4(uint64_t a1)
{
  if ((+[ISFileProtectionClassMigrator migrate](&OBJC_CLASS___ISFileProtectionClassMigrator, "migrate") & 1) == 0)
  {
    id v2 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v2) {
      id v2 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v3 = [v2 shouldLog];
    else {
      unsigned int v4 = v3;
    }
    dispatch_semaphore_t v5 = (os_log_s *)[v2 OSLogObject];
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      uint64_t v6 = v4;
    }
    else {
      uint64_t v6 = v4 & 2;
    }
    if ((_DWORD)v6)
    {
      v10[0] = 0;
      uint64_t v7 = _os_log_send_and_compose_impl( v6,  0LL,  0LL,  0LL,  &_mh_execute_header,  v5,  16LL,  "Data Protection migration to class C failed",  v10,  2);
      if (v7)
      {
        uint64_t v8 = (void *)v7;
        +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v7, 4LL);
        free(v8);
        SSFileLog(v2, @"%@");
      }
    }
  }

  return notify_cancel(*(_DWORD *)(a1 + 32));
}

void sub_100122220()
{
  id v0 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  if (!v0) {
    id v0 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  unsigned int v1 = [v0 shouldLog];
  else {
    unsigned int v2 = v1;
  }
  unsigned int v3 = (os_log_s *)[v0 OSLogObject];
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v4 = v2;
  }
  else {
    uint64_t v4 = v2 & 2;
  }
  if ((_DWORD)v4)
  {
    LOWORD(v75) = 0;
    uint64_t v5 = _os_log_send_and_compose_impl( v4,  0LL,  0LL,  0LL,  &_mh_execute_header,  v3,  0LL,  "Daemon: Setup finished",  &v75,  2);
    if (v5)
    {
      uint64_t v6 = (void *)v5;
      uint64_t v7 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v5, 4LL);
      free(v6);
      uint64_t v68 = v7;
      SSFileLog(v0, @"%@");
    }
  }

  int v8 = off_1003A2D00();
  id v9 = +[SSLogConfig sharedAccountsConfig](&OBJC_CLASS___SSLogConfig, "sharedAccountsConfig");
  id v10 = v9;
  if (v8)
  {
    if (!v9) {
      id v10 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v11 = objc_msgSend(v10, "shouldLog", v68);
    else {
      unsigned int v12 = v11;
    }
    uint64_t v13 = (os_log_s *)[v10 OSLogObject];
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v14 = v12;
    }
    else {
      uint64_t v14 = v12 & 2;
    }
    if ((_DWORD)v14)
    {
      LOWORD(v75) = 0;
      LODWORD(v72) = 2;
      uint64_t v15 = _os_log_send_and_compose_impl( v14,  0LL,  0LL,  0LL,  &_mh_execute_header,  v13,  0LL,  "Daemon: Not performing silent auth because setup has not finished",  &v75,  v72);
      goto LABEL_23;
    }
  }

  else
  {
    if (!v9) {
      id v10 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v17 = objc_msgSend(v10, "shouldLog", v68);
    else {
      unsigned int v18 = v17;
    }
    uint64_t v19 = (os_log_s *)[v10 OSLogObject];
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v21 = v18;
    }
    else {
      uint64_t v21 = v18 & 2;
    }
    if ((_DWORD)v21)
    {
      LOWORD(v75) = 0;
      LODWORD(v72) = 2;
      uint64_t v22 = _os_log_send_and_compose_impl( v21,  0LL,  0LL,  0LL,  &_mh_execute_header,  v19,  0LL,  "Daemon: Attempting to perform silent auth.",  &v75,  v72);
      if (v22)
      {
        uint64_t v23 = (void *)v22;
        id v24 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v22, 4LL);
        free(v23);
        unsigned int v69 = v24;
        *(void *)&double v20 = SSFileLog(v10, @"%@").n128_u64[0];
      }
    }

    if (objc_msgSend(+[AMSDevice deviceOffers](AMSDevice, "deviceOffers", v20, v69), "count"))
    {
      id v25 = +[ACAccountStore ams_sharedAccountStore](&OBJC_CLASS___ACAccountStore, "ams_sharedAccountStore");
      id v26 = objc_msgSend(v25, "ams_activeiTunesAccount");
      if (v26) {
        goto LABEL_50;
      }
      id v27 = +[SSLogConfig sharedAccountsConfig](&OBJC_CLASS___SSLogConfig, "sharedAccountsConfig");
      if (!v27) {
        id v27 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
      }
      unsigned int v28 = [v27 shouldLog];
      else {
        unsigned int v29 = v28;
      }
      __int128 v30 = (os_log_s *)[v27 OSLogObject];
      if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT)) {
        uint64_t v32 = v29;
      }
      else {
        uint64_t v32 = v29 & 2;
      }
      if ((_DWORD)v32)
      {
        LOWORD(v75) = 0;
        LODWORD(v72) = 2;
        uint64_t v33 = _os_log_send_and_compose_impl( v32,  0LL,  0LL,  0LL,  &_mh_execute_header,  v30,  0LL,  "Daemon: There's no active iTunes account. Trying to find an inactive iTunes account matching the active iCloud account.",  &v75,  v72);
        if (v33)
        {
          __int16 v34 = (void *)v33;
          __int128 v35 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v33, 4LL);
          free(v34);
          id v70 = v35;
          *(void *)&double v31 = SSFileLog(v27, @"%@").n128_u64[0];
        }
      }

      v74[0] = _NSConcreteStackBlock;
      v74[1] = 3221225472LL;
      v74[2] = sub_100123804;
      v74[3] = &unk_10034F4A0;
      v74[4] = objc_msgSend(v25, "ams_activeiCloudAccount", v31, v70);
      id v26 = objc_msgSend(objc_msgSend(v25, "ams_iTunesAccounts"), "ams_firstObjectPassingTest:", v74);
      if (v26)
      {
LABEL_50:
        uint64_t v73 = 0LL;
        id v36 = objc_msgSend( +[ACAccountStore ams_sharedAccountStore](ACAccountStore, "ams_sharedAccountStore"),  "_ss_IDMSAccountForAccount:error:",  v26,  &v73);
        if (v73)
        {
          id v38 = +[SSLogConfig sharedAccountsConfig](&OBJC_CLASS___SSLogConfig, "sharedAccountsConfig");
          if (!v38) {
            id v38 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
          }
          unsigned int v39 = [v38 shouldLog];
          else {
            unsigned int v40 = v39;
          }
          int64_t v41 = (os_log_s *)[v38 OSLogObject];
          if (os_log_type_enabled(v41, OS_LOG_TYPE_ERROR)) {
            uint64_t v42 = v40;
          }
          else {
            uint64_t v42 = v40 & 2;
          }
          if ((_DWORD)v42)
          {
            int v75 = 138543362;
            uint64_t v76 = v73;
            LODWORD(v72) = 12;
            uint64_t v43 = _os_log_send_and_compose_impl( v42,  0LL,  0LL,  0LL,  &_mh_execute_header,  v41,  16LL,  "Daemon: Failed to fetch IDMS account with error: %{public}@",  &v75,  v72);
            if (v43)
            {
              int v44 = (void *)v43;
              uint64_t v45 = +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v43,  4LL);
              free(v44);
              id v70 = v45;
              *(void *)&double v37 = SSFileLog(v38, @"%@").n128_u64[0];
            }
          }
        }

        if (v36
          && -[AKAccountManager securityLevelForAccount:]( +[AKAccountManager sharedInstance](&OBJC_CLASS___AKAccountManager, "sharedInstance", v37),  "securityLevelForAccount:",  v36) == (id)4)
        {
          id v46 = +[SSLogConfig sharedAccountsConfig](&OBJC_CLASS___SSLogConfig, "sharedAccountsConfig");
          if (!v46) {
            id v46 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
          }
          unsigned int v47 = objc_msgSend(v46, "shouldLog", v70);
          else {
            unsigned int v48 = v47;
          }
          id v49 = (os_log_s *)[v46 OSLogObject];
          if (os_log_type_enabled(v49, OS_LOG_TYPE_DEFAULT)) {
            uint64_t v51 = v48;
          }
          else {
            uint64_t v51 = v48 & 2;
          }
          if ((_DWORD)v51)
          {
            LOWORD(v75) = 0;
            LODWORD(v72) = 2;
            uint64_t v52 = _os_log_send_and_compose_impl( v51,  0LL,  0LL,  0LL,  &_mh_execute_header,  v49,  0LL,  "Daemon: Setting PET to nil",  &v75,  v72);
            if (v52)
            {
              BOOL v53 = (void *)v52;
              id v54 = +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v52,  4LL);
              free(v53);
              uint64_t v71 = v54;
              *(void *)&double v50 = SSFileLog(v46, @"%@").n128_u64[0];
            }
          }

          objc_msgSend(v26, "ams_setPassword:", 0, v50, v71);
          objc_msgSend( +[ACAccountStore ams_sharedAccountStore](ACAccountStore, "ams_sharedAccountStore"),  "ams_saveAccount:verifyCredentials:",  v26,  0);
        }

        else
        {
          id v55 = +[SSLogConfig sharedAccountsConfig](&OBJC_CLASS___SSLogConfig, "sharedAccountsConfig", v37, v70);
          if (!v55) {
            id v55 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
          }
          unsigned int v56 = [v55 shouldLog];
          else {
            unsigned int v57 = v56;
          }
          int v58 = (os_log_s *)[v55 OSLogObject];
          if (os_log_type_enabled(v58, OS_LOG_TYPE_DEFAULT)) {
            uint64_t v59 = v57;
          }
          else {
            uint64_t v59 = v57 & 2;
          }
          if ((_DWORD)v59)
          {
            LOWORD(v75) = 0;
            LODWORD(v72) = 2;
            uint64_t v60 = _os_log_send_and_compose_impl( v59,  0LL,  0LL,  0LL,  &_mh_execute_header,  v58,  0LL,  "Daemon: Skip Setting PET to nil",  &v75,  v72);
            if (v60)
            {
              id v61 = (void *)v60;
              +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v60, 4LL);
              free(v61);
              SSFileLog(v55, @"%@");
            }
          }
        }

        id v62 = objc_alloc_init(&OBJC_CLASS___AMSAuthenticateOptions);
        [v62 setAuthenticationType:1];
        [v62 setCanMakeAccountActive:0];
        id v63 = [[AMSAuthenticateTask alloc] initWithAccount:v26 options:v62];
        qword_1003A34A0 = (uint64_t)[v63 performAuthentication];
        [(id)qword_1003A34A0 addSuccessBlock:&stru_10034F4E0];
        [(id)qword_1003A34A0 addErrorBlock:&stru_10034F520];
      }

      else
      {
        id v10 = +[SSLogConfig sharedAccountsConfig](&OBJC_CLASS___SSLogConfig, "sharedAccountsConfig");
        if (!v10) {
          id v10 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
        }
        unsigned int v64 = [v10 shouldLog];
        else {
          unsigned int v65 = v64;
        }
        __int128 v66 = (os_log_s *)[v10 OSLogObject];
        if (os_log_type_enabled(v66, OS_LOG_TYPE_ERROR)) {
          uint64_t v67 = v65;
        }
        else {
          uint64_t v67 = v65 & 2;
        }
        if ((_DWORD)v67)
        {
          LOWORD(v75) = 0;
          LODWORD(v72) = 2;
          uint64_t v15 = _os_log_send_and_compose_impl( v67,  0LL,  0LL,  0LL,  &_mh_execute_header,  v66,  16LL,  "Daemon: We don't have an iTunes account to perform the silent auth with.",  &v75,  v72);
LABEL_23:
          if (v15)
          {
            uint64_t v16 = (void *)v15;
            +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v15, 4LL);
            free(v16);
            SSFileLog(v10, @"%@");
          }
        }
      }
    }
  }

void sub_100122A84(id a1, NSNotification *a2)
{
  unsigned int v2 = +[SpringBoardUtility sharedInstance](&OBJC_CLASS___SpringBoardUtility, "sharedInstance");
  id v3 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  if (!v3) {
    id v3 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  unsigned int v4 = [v3 shouldLog];
  else {
    unsigned int v5 = v4;
  }
  uint64_t v6 = (os_log_s *)[v3 OSLogObject];
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO)) {
    uint64_t v8 = v5;
  }
  else {
    uint64_t v8 = v5 & 2;
  }
  if ((_DWORD)v8)
  {
    v13[0] = 0;
    uint64_t v9 = _os_log_send_and_compose_impl( v8,  0LL,  0LL,  0LL,  &_mh_execute_header,  v6,  1LL,  "Removing default png snapshots after storefront change",  v13,  2);
    if (v9)
    {
      id v10 = (void *)v9;
      unsigned int v11 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v9, 4LL);
      free(v10);
      unsigned int v12 = v11;
      *(void *)&double v7 = SSFileLog(v3, @"%@").n128_u64[0];
    }
  }

  -[SpringBoardUtility removeDefaultPNGSnapshotsForIdentifier:]( v2,  "removeDefaultPNGSnapshotsForIdentifier:",  @"com.apple.AppStore",  v7,  v12);
  -[SpringBoardUtility removeDefaultPNGSnapshotsForIdentifier:]( v2,  "removeDefaultPNGSnapshotsForIdentifier:",  @"com.apple.MobileStore");
}

void sub_100122BB8(id a1, NSNotification *a2)
{
}

uint64_t sub_100122BC8(uint64_t a1)
{
  id v2 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  if (!v2) {
    id v2 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  unsigned int v3 = [v2 shouldLog];
  else {
    LODWORD(v4) = v3;
  }
  unsigned int v5 = (os_log_s *)[v2 OSLogObject];
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v4 = v4;
  }
  else {
    v4 &= 2u;
  }
  if ((_DWORD)v4)
  {
    uint64_t v6 = objc_opt_class(*(void *)(a1 + 32));
    int v10 = 138412290;
    uint64_t v11 = v6;
    uint64_t v7 = _os_log_send_and_compose_impl( v4,  0LL,  0LL,  0LL,  &_mh_execute_header,  v5,  0LL,  "[%@]: Received low memory warning",  &v10,  12);
    if (v7)
    {
      uint64_t v8 = (void *)v7;
      +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v7, 4LL);
      free(v8);
      SSFileLog(v2, @"%@");
    }
  }

  CFPreferencesAppSynchronize(kITunesStoreDaemonDefaultsID);
  +[PurchaseManifest jetsam](&OBJC_CLASS___PurchaseManifest, "jetsam");
  return ISURLCachePurgeMemoryCache(+[NSURLCache sharedURLCache](&OBJC_CLASS___NSURLCache, "sharedURLCache"));
}

void sub_100122D40(id a1, OS_xpc_object *a2)
{
  string = xpc_dictionary_get_string(a2, _xpc_event_key_name);
  if (!string) {
    return;
  }
  uint64_t v4 = string;
  if (!strcmp("com.apple.LaunchServices.applicationRegistered", string))
  {
    xpc_object_t value = xpc_dictionary_get_value(a2, "UserInfo");
    if (value)
    {
      xpc_object_t v14 = value;
      if (xpc_get_type(value) != (xpc_type_t)&_xpc_type_dictionary)
      {
        id v7 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
        if (!v7) {
          id v7 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
        }
        unsigned int v15 = [v7 shouldLog];
        else {
          unsigned int v16 = v15;
        }
        int v10 = (os_log_s *)[v7 OSLogObject];
        if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT)) {
          uint64_t v11 = v16;
        }
        else {
          uint64_t v11 = v16 & 2;
        }
        if ((_DWORD)v11) {
          goto LABEL_15;
        }
        return;
      }

      uint64_t v23 = (const void *)_CFXPCCreateCFObjectFromXPCObject(v14);
      if ((id)CFMakeCollectable(v23)) {
        return;
      }
      id v7 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
      if (!v7) {
        id v7 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
      }
      int v24 = [v7 shouldLog];
      unsigned int v25 = [v7 shouldLogToDisk] ? v24 | 2 : v24;
      id v26 = (os_log_s *)[v7 OSLogObject];
      uint64_t v27 = os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT) ? v25 : v25 & 2u;
      if (!(_DWORD)v27) {
        return;
      }
LABEL_94:
      int v56 = 136315138;
      unsigned int v57 = v4;
      uint64_t v12 = _os_log_send_and_compose_impl( v27,  0LL,  0LL,  0LL,  &_mh_execute_header,  v26,  0LL,  "Failed to convert user info XPC dictionary to CF dictionary for event: %s",  &v56);
LABEL_95:
      id v49 = (void *)v12;
      if (v12)
      {
        +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v12, 4LL);
        free(v49);
        SSFileLog(v7, @"%@");
      }

      return;
    }

    id v7 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v7) {
      id v7 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v17 = [v7 shouldLog];
    else {
      unsigned int v18 = v17;
    }
    uint64_t v19 = (os_log_s *)[v7 OSLogObject];
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v20 = v18;
    }
    else {
      uint64_t v20 = v18 & 2;
    }
    if (!(_DWORD)v20) {
      return;
    }
LABEL_37:
    int v56 = 136315138;
    unsigned int v57 = v4;
    uint64_t v12 = _os_log_send_and_compose_impl( v20,  0LL,  0LL,  0LL,  &_mh_execute_header,  v19,  0LL,  "Didn't get any user info from event: %s",  &v56);
    goto LABEL_95;
  }

  if (strcmp("com.apple.LaunchServices.applicationUnregistered", v4)) {
    return;
  }
  xpc_object_t v5 = xpc_dictionary_get_value(a2, "UserInfo");
  if (!v5)
  {
    id v7 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v7) {
      id v7 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v21 = [v7 shouldLog];
    else {
      unsigned int v22 = v21;
    }
    uint64_t v19 = (os_log_s *)[v7 OSLogObject];
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v20 = v22;
    }
    else {
      uint64_t v20 = v22 & 2;
    }
    if (!(_DWORD)v20) {
      return;
    }
    goto LABEL_37;
  }

  xpc_object_t v6 = v5;
  if (xpc_get_type(v5) != (xpc_type_t)&_xpc_type_dictionary)
  {
    id v7 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v7) {
      id v7 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v8 = [v7 shouldLog];
    else {
      unsigned int v9 = v8;
    }
    int v10 = (os_log_s *)[v7 OSLogObject];
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v11 = v9;
    }
    else {
      uint64_t v11 = v9 & 2;
    }
    if ((_DWORD)v11)
    {
LABEL_15:
      int v56 = 136315138;
      unsigned int v57 = v4;
      uint64_t v12 = _os_log_send_and_compose_impl( v11,  0LL,  0LL,  0LL,  &_mh_execute_header,  v10,  0LL,  "User info was not a dictionary for event: %s",  &v56);
      goto LABEL_95;
    }

    return;
  }

  unsigned int v28 = (const void *)_CFXPCCreateCFObjectFromXPCObject(v6);
  unsigned int v29 = (id)CFMakeCollectable(v28);
  if (v29)
  {
    __int128 v30 = v29;
    id v31 = [v29 objectForKeyedSubscript:@"bundleIDs"];
    unsigned __int8 v32 = objc_msgSend( objc_msgSend(v30, "objectForKeyedSubscript:", @"isPlaceholder"),  "BOOLValue");
    id v33 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v33) {
      id v33 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v34 = [v33 shouldLog];
    else {
      unsigned int v35 = v34;
    }
    id v36 = (os_log_s *)[v33 OSLogObject];
    if (os_log_type_enabled(v36, OS_LOG_TYPE_DEBUG)) {
      uint64_t v37 = v35;
    }
    else {
      uint64_t v37 = v35 & 2;
    }
    if ((_DWORD)v37)
    {
      int v56 = 136315650;
      unsigned int v57 = v4;
      __int16 v58 = 2112;
      id v59 = v31;
      __int16 v60 = 2112;
      id v61 = v30;
      uint64_t v38 = _os_log_send_and_compose_impl( v37,  0LL,  0LL,  0LL,  &_mh_execute_header,  v36,  2LL,  "Got distnoted event: %s with bundle IDs %@: %@",  &v56,  32);
      if (v38)
      {
        unsigned int v39 = (void *)v38;
        unsigned int v40 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v38, 4LL);
        free(v39);
        double v50 = v40;
        SSFileLog(v33, @"%@");
      }
    }

    if (v31) {
      char v41 = v32;
    }
    else {
      char v41 = 1;
    }
    if ((v41 & 1) == 0)
    {
      __int128 v53 = 0u;
      __int128 v54 = 0u;
      __int128 v51 = 0u;
      __int128 v52 = 0u;
      id v42 = [v31 countByEnumeratingWithState:&v51 objects:v55 count:16];
      if (v42)
      {
        id v43 = v42;
        uint64_t v44 = *(void *)v52;
        do
        {
          for (uint64_t i = 0LL; i != v43; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v52 != v44) {
              objc_enumerationMutation(v31);
            }
            id v46 = *(void **)(*((void *)&v51 + 1) + 8LL * (void)i);
            if (objc_msgSend(v46, "length", v50)) {
              -[PromotedIAPManager removeOverridesForApp:completionHandler:]( +[PromotedIAPManager sharedInstance](&OBJC_CLASS___PromotedIAPManager, "sharedInstance"),  "removeOverridesForApp:completionHandler:",  v46,  0LL);
            }
          }

          id v43 = [v31 countByEnumeratingWithState:&v51 objects:v55 count:16];
        }

        while (v43);
      }
    }

    return;
  }

  id v7 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  if (!v7) {
    id v7 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  unsigned int v47 = [v7 shouldLog];
  else {
    unsigned int v48 = v47;
  }
  id v26 = (os_log_s *)[v7 OSLogObject];
  if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v27 = v48;
  }
  else {
    uint64_t v27 = v48 & 2;
  }
  if ((_DWORD)v27) {
    goto LABEL_94;
  }
}

void sub_100123430(id a1, OS_xpc_object *a2)
{
  string = xpc_dictionary_get_string(a2, _xpc_event_key_name);
  if (string)
  {
    unsigned int v3 = string;
    if (!strcmp("com.apple.itunesstored.invalidatebags", string))
    {
      objc_msgSend(+[ISURLBagCache sharedCache](ISURLBagCache, "sharedCache"), "invalidateAllURLBags");
    }

    else if (!strcmp("com.apple.Preferences.ResetPrivacyWarningsNotification", v3))
    {
      -[ISDevice resetLocationAndPrivacy]( +[ISDevice sharedInstance](&OBJC_CLASS___ISDevice, "sharedInstance"),  "resetLocationAndPrivacy");
    }
  }

void sub_1001234BC(id a1, OS_xpc_object *a2)
{
  id v2 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  if (!v2) {
    id v2 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  unsigned int v3 = [v2 shouldLog];
  else {
    unsigned int v4 = v3;
  }
  xpc_object_t v5 = (os_log_s *)[v2 OSLogObject];
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG)) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 & 2;
  }
  if ((_DWORD)v6)
  {
    v9[0] = 0;
    uint64_t v7 = _os_log_send_and_compose_impl( v6,  0LL,  0LL,  0LL,  &_mh_execute_header,  v5,  2LL,  "Daemon: Launched by nsurlsessiond",  v9,  2);
    if (v7)
    {
      unsigned int v8 = (void *)v7;
      +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v7, 4LL);
      free(v8);
      SSFileLog(v2, @"%@");
    }
  }

uint64_t sub_100123804(uint64_t a1, void *a2)
{
  if ((objc_msgSend( objc_msgSend(a2, "ams_altDSID"),  "isEqualToString:",  objc_msgSend(*(id *)(a1 + 32), "ams_altDSID")) & 1) != 0 || objc_msgSend(*(id *)(a1 + 32), "ams_DSID")
    && (objc_msgSend( objc_msgSend(a2, "ams_DSID"),  "isEqualToNumber:",  objc_msgSend(*(id *)(a1 + 32), "ams_DSID")) & 1) != 0)
  {
    return 1LL;
  }

  else
  {
    return (uint64_t)objc_msgSend( objc_msgSend(a2, "username"),  "isEqualToString:",  objc_msgSend(*(id *)(a1 + 32), "username"));
  }

void sub_1001238B0(id a1, AMSAuthenticateResult *a2)
{
  id v3 = +[SSLogConfig sharedAccountsConfig](&OBJC_CLASS___SSLogConfig, "sharedAccountsConfig");
  if (!v3) {
    id v3 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  unsigned int v4 = [v3 shouldLog];
  else {
    unsigned int v5 = v4;
  }
  uint64_t v6 = (os_log_s *)[v3 OSLogObject];
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = v5 & 2;
  }
  if ((_DWORD)v7)
  {
    int v10 = 138543362;
    uint64_t v11 = a2;
    uint64_t v8 = _os_log_send_and_compose_impl( v7,  0LL,  0LL,  0LL,  &_mh_execute_header,  v6,  0LL,  "Daemon: Device offers auth succeeded with result: %{public}@",  &v10,  12);
    if (v8)
    {
      unsigned int v9 = (void *)v8;
      +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v8, 4LL);
      free(v9);
      SSFileLog(v3, @"%@");
    }
  }

void sub_1001239F0(id a1, NSError *a2)
{
  id v3 = +[SSLogConfig sharedAccountsConfig](&OBJC_CLASS___SSLogConfig, "sharedAccountsConfig");
  if (!v3) {
    id v3 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  unsigned int v4 = [v3 shouldLog];
  else {
    unsigned int v5 = v4;
  }
  uint64_t v6 = (os_log_s *)[v3 OSLogObject];
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = v5 & 2;
  }
  if ((_DWORD)v7)
  {
    int v10 = 138543362;
    uint64_t v11 = a2;
    uint64_t v8 = _os_log_send_and_compose_impl( v7,  0LL,  0LL,  0LL,  &_mh_execute_header,  v6,  0LL,  "Daemon: Device offers auth failed with error: %{public}@",  &v10,  12);
    if (v8)
    {
      unsigned int v9 = (void *)v8;
      +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v8, 4LL);
      free(v9);
      SSFileLog(v3, @"%@");
    }
  }

uint64_t sub_100123B30()
{
  if (qword_1003A34A8 != -1) {
    dispatch_once(&qword_1003A34A8, &stru_10034F540);
  }
  off_1003A2D00 = (uint64_t (*)())dlsym((void *)qword_1003A34B0, "BYSetupAssistantNeedsToRun");
  return off_1003A2D00();
}

void sub_100123B84(id a1)
{
  qword_1003A34B0 = (uint64_t)dlopen("/System/Library/PrivateFrameworks/SetupAssistant.framework/SetupAssistant", 2);
}

uint64_t sub_100123BAC()
{
  if (qword_1003A34A8 != -1) {
    dispatch_once(&qword_1003A34A8, &stru_10034F540);
  }
  id v0 = (uint64_t *)dlsym((void *)qword_1003A34B0, "BYSetupAssistantFinishedDarwinNotification");
  if (v0)
  {
    uint64_t result = *v0;
    qword_1003A34B8 = result;
  }

  else
  {
    uint64_t result = qword_1003A34B8;
  }

  off_1003A2C38 = sub_100123C24;
  return result;
}

uint64_t sub_100123C24()
{
  return qword_1003A34B8;
}

id sub_100124760(void *a1, void *a2)
{
  id v3 = a1;
  if ([v3 executeSQL:@"PRAGMA legacy_file_format = 0;"]
    && objc_msgSend( v3,  "executeSQL:",  @"CREATE TABLE IF NOT EXISTS purchase_intents_table (product_identifier TEXT, app_bundle_id TEXT, timestamp INTEGER, pid INTEGER PRIMARY KEY, product_name TEXT, app_name TEXT);")
    && objc_msgSend( v3,  "executeSQL:",  @"CREATE TABLE IF NOT EXISTS install_attribution_params_table (app_adam_id INTEGER PRIMARY KEY, ad_network_id TEXT, campaign_id INTEGER, impression_id TEXT, timestamp INTEGER, attribution_signature TEXT, local_timestamp INTEGER);")
    && objc_msgSend( v3,  "executeSQL:",  @"CREATE TABLE IF NOT EXISTS install_attribution_pingback_table (app_adam_id INTEGER PRIMARY KEY, ad_network_id TEXT, campaign_id INTEGER, transaction_id TEXT, attribution_signature TEXT, pingback_url TEXT, pending INTEGER, retry_count INTEGER, local_timestamp INTEGER);"))
  {
    [v3 executeSQL:@"PRAGMA journal_mode = WAL;"];
    *a2 = 11302LL;
    id v4 = [v3 setUserVersion:11302];
  }

  else
  {
    id v4 = 0LL;
  }

  return v4;
}

id sub_100124808(void *a1, void *a2)
{
  id v3 = a1;
  if ([v3 executeSQL:@"ALTER TABLE purchase_intents_table ADD COLUMN product_name TEXT;"]
    && [v3 executeSQL:@"ALTER TABLE purchase_intents_table ADD COLUMN app_name TEXT;"])
  {
    *a2 = 11001LL;
    id v4 = [v3 setUserVersion:11001];
  }

  else
  {
    id v4 = 0LL;
  }

  return v4;
}

id sub_100124878(void *a1, void *a2)
{
  id v3 = a1;
  if (objc_msgSend( v3,  "executeSQL:",  @"CREATE TABLE IF NOT EXISTS install_attribution_params_table (app_adam_id INTEGER PRIMARY KEY, ad_network_id TEXT, campaign_id INTEGER, impression_id TEXT, timestamp INTEGER, attribution_signature TEXT, local_timestamp INTEGER);")
    && objc_msgSend( v3,  "executeSQL:",  @"CREATE TABLE IF NOT EXISTS install_attribution_pingback_table (app_adam_id INTEGER PRIMARY KEY, ad_network_id TEXT, campaign_id INTEGER, transaction_id TEXT, attribution_signature TEXT, pingback_url TEXT, pending INTEGER, retry_count INTEGER, local_timestamp INTEGER);"))
  {
    *a2 = 11302LL;
    id v4 = [v3 setUserVersion:11302];
  }

  else
  {
    id v4 = 0LL;
  }

  return v4;
}

uint64_t sub_1001248E8(void *a1, void *a2)
{
  id v3 = a1;
  if ([v3 executeSQL:@"ALTER TABLE install_attribution_params_table ADD COLUMN local_timestamp INTEGER;"]
    && ([v3 executeSQL:@"ALTER TABLE install_attribution_pingback_table ADD COLUMN retry_count INTEGER;"] & 1) != 0)
  {
    *a2 = 11301LL;
    uint64_t v4 = (uint64_t)[v3 setUserVersion:11301];
  }

  else
  {
    [v3 executeSQL:@"DROP TABLE install_attribution_params_table;"];
    [v3 executeSQL:@"DROP TABLE install_attribution_pingback_table;"];
    sub_100124878(v3, a2);
    uint64_t v4 = 1LL;
  }

  return v4;
}

id sub_100124984(void *a1, void *a2)
{
  id v3 = a1;
  if ([v3 executeSQL:@"ALTER TABLE install_attribution_pingback_table ADD COLUMN local_timestamp INTEGER;"])
  {
    *a2 = 11302LL;
    id v4 = [v3 setUserVersion:11302];
  }

  else
  {
    id v4 = 0LL;
  }

  return v4;
}

void sub_100124A20(id a1)
{
  id v1 = [(id)CPSharedResourcesDirectory(a1) stringByAppendingPathComponent:@"Library"];
  id v5 = (id)objc_claimAutoreleasedReturnValue(v1);
  id v2 = (void *)objc_claimAutoreleasedReturnValue([v5 stringByAppendingPathComponent:@"com.apple.itunesstored"]);
  uint64_t v3 = objc_claimAutoreleasedReturnValue([v2 stringByAppendingPathComponent:@"purchase_intents.sqlitedb"]);
  id v4 = (void *)qword_1003A34C0;
  qword_1003A34C0 = v3;
}

void sub_100126588(uint64_t a1, void *a2)
{
  id v11 = a2;
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue( objc_msgSend( *(id *)(a1 + 56),  "_mediaAssetsForDownloadIdentifier:session:",  objc_msgSend(v11, "databaseID"),  *(void *)(a1 + 32)));
  id v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "valueForProperty:", @"IFNULL(download_state.restore_state, 0)"));
  unint64_t v5 = (unint64_t)[v4 integerValue];

  if ((unint64_t)[v3 count] | v5)
  {
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v11 valueForProperty:@"policy_id"]);
    id v7 = [v6 longLongValue];

    uint64_t v8 = objc_alloc(&OBJC_CLASS___PrepareDownloadOperation);
    unsigned int v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) downloadPolicyForID:v7]);
    id v10 = -[PrepareDownloadOperation _initWithDownload:mediaAssets:policy:]( v8,  "_initWithDownload:mediaAssets:policy:",  v11,  v3,  v9);

    (*(void (**)(void))(*(void *)(a1 + 48) + 16LL))();
  }
}

LABEL_57:
  if (!SSDownloadKindIsSoftwareKind(v5))
  {
    if (-[PrepareDownloadOperation _shouldFailForFinishedDownload](self, "_shouldFailForFinishedDownload"))
    {
      __int16 v60 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
      if (!v60) {
        __int16 v60 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      id v61 = [v60 shouldLog];
      else {
        id v62 = v61;
      }
      id v63 = (os_log_s *)objc_claimAutoreleasedReturnValue([v60 OSLogObject]);
      if (os_log_type_enabled(v63, OS_LOG_TYPE_DEFAULT)) {
        unsigned int v64 = v62;
      }
      else {
        unsigned int v64 = v62 & 2;
      }
      if ((_DWORD)v64)
      {
        unsigned int v65 = (void *)objc_opt_class(self);
        v234 = 138412546;
        v235 = v65;
        v236 = 2048;
        v237 = v226;
        __int128 v66 = v65;
        LODWORD(v212) = 22;
        uint64_t v67 = _os_log_send_and_compose_impl( v64,  0LL,  0LL,  0LL,  &_mh_execute_header,  v63,  0LL,  "%@: Skip prepare for finished download: %lld",  &v234,  v212);
LABEL_80:
        uint64_t v68 = (void *)v67;

        id v59 = &OBJC_METACLASS___LoadPassbookPassOperation;
        if (!v68)
        {
LABEL_224:

          uint64_t v82 = v3;
          unsigned int v83 = 4LL;
          goto LABEL_225;
        }

        id v63 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v68,  4LL));
        free(v68);
        v210 = v63;
        SSFileLog(v60, @"%@");
LABEL_223:

        goto LABEL_224;
      }

      goto LABEL_222;
    }

    if (-[PrepareDownloadOperation _shouldCancelAsDuplicate](self, "_shouldCancelAsDuplicate"))
    {
      unsigned int v69 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
      if (!v69) {
        unsigned int v69 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      id v70 = [v69 shouldLog];
      else {
        uint64_t v71 = v70;
      }
      uint64_t v72 = (os_log_s *)objc_claimAutoreleasedReturnValue([v69 OSLogObject]);
      if (os_log_type_enabled(v72, OS_LOG_TYPE_DEFAULT)) {
        uint64_t v73 = v71;
      }
      else {
        uint64_t v73 = v71 & 2;
      }
      if ((_DWORD)v73)
      {
        uint64_t v74 = (void *)objc_opt_class(self);
        v234 = 138412546;
        v235 = v74;
        v236 = 2048;
        v237 = v226;
        int v75 = v74;
        LODWORD(v212) = 22;
        uint64_t v76 = _os_log_send_and_compose_impl( v73,  0LL,  0LL,  0LL,  &_mh_execute_header,  v72,  0LL,  "%@: Cancel download that exists in library: %lld",  &v234,  v212);
LABEL_107:
        char v81 = (void *)v76;

        id v59 = &OBJC_METACLASS___LoadPassbookPassOperation;
        if (!v81)
        {
LABEL_111:

          uint64_t v82 = v3;
          unsigned int v83 = 1LL;
LABEL_225:
          -[PrepareDownloadResponse setResult:](v82, "setResult:", v83, v210);
          goto LABEL_226;
        }

        uint64_t v72 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v81,  4LL));
        free(v81);
        v210 = v72;
        SSFileLog(v69, @"%@");
LABEL_110:

        goto LABEL_111;
      }

      goto LABEL_109;
    }

    if (-[PrepareDownloadOperation _shouldCancelAutomaticDownload](self, "_shouldCancelAutomaticDownload"))
    {
      unsigned int v69 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
      if (!v69) {
        unsigned int v69 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      uint64_t v77 = [v69 shouldLog];
      else {
        uint64_t v78 = v77;
      }
      uint64_t v72 = (os_log_s *)objc_claimAutoreleasedReturnValue([v69 OSLogObject]);
      if (os_log_type_enabled(v72, OS_LOG_TYPE_DEFAULT)) {
        uint64_t v79 = v78;
      }
      else {
        uint64_t v79 = v78 & 2;
      }
      if ((_DWORD)v79)
      {
        double v80 = (void *)objc_opt_class(self);
        v234 = 138412546;
        v235 = v80;
        v236 = 2048;
        v237 = v226;
        int v75 = v80;
        LODWORD(v212) = 22;
        uint64_t v76 = _os_log_send_and_compose_impl( v79,  0LL,  0LL,  0LL,  &_mh_execute_header,  v72,  0LL,  "%@: Cancel invalid automatic download: %lld",  &v234,  v212);
        goto LABEL_107;
      }

LABEL_109:
      id v59 = &OBJC_METACLASS___LoadPassbookPassOperation;
      goto LABEL_110;
    }

    int v84 = (void *)objc_claimAutoreleasedReturnValue( -[SSMemoryEntity valueForProperty:]( self->_download,  "valueForProperty:",  @"IFNULL(download_state.restore_state, 0)"));
    id v85 = [v84 integerValue];

    if (v85 == (id)1)
    {
      __int16 v86 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
      if (!v86) {
        __int16 v86 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      id v87 = [v86 shouldLog];
      else {
        __int16 v88 = v87;
      }
      uint64_t v89 = (os_log_s *)objc_claimAutoreleasedReturnValue([v86 OSLogObject]);
      if (os_log_type_enabled(v89, OS_LOG_TYPE_DEFAULT)) {
        __int16 v90 = v88;
      }
      else {
        __int16 v90 = v88 & 2;
      }
      if ((_DWORD)v90)
      {
        id v91 = (void *)objc_opt_class(self);
        v234 = 138412546;
        v235 = v91;
        v236 = 2048;
        v237 = v226;
        double v92 = v91;
        LODWORD(v212) = 22;
        __int16 v93 = "%@: Flagging as finish only for hard-failed restore download: %lld";
        uint64_t v94 = v90;
        int v95 = v89;
        v96 = 0LL;
LABEL_123:
        v97 = (void *)_os_log_send_and_compose_impl(v94, 0LL, 0LL, 0LL, &_mh_execute_header, v95, v96, v93, &v234, v212);

LABEL_136:
        id v59 = &OBJC_METACLASS___LoadPassbookPassOperation;
        if (!v97)
        {
LABEL_192:

          uint64_t v82 = v3;
          unsigned int v83 = 3LL;
          goto LABEL_225;
        }

        uint64_t v89 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v97,  4LL));
        free(v97);
        v210 = v89;
        SSFileLog(v86, @"%@");
LABEL_191:

        goto LABEL_192;
      }

LABEL_190:
      id v59 = &OBJC_METACLASS___LoadPassbookPassOperation;
      goto LABEL_191;
    }

    if (v22)
    {
      if ((v24 & v29) == 1)
      {
        __int16 v86 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
        if (!v86) {
          __int16 v86 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
        }
        id v98 = [v86 shouldLog];
        else {
          unsigned int v99 = v98;
        }
        uint64_t v89 = (os_log_s *)objc_claimAutoreleasedReturnValue([v86 OSLogObject]);
        if (os_log_type_enabled(v89, OS_LOG_TYPE_INFO)) {
          v100 = v99;
        }
        else {
          v100 = v99 & 2;
        }
        if ((_DWORD)v100)
        {
          uint64_t v101 = (void *)objc_opt_class(self);
          id v102 = v101;
          id v103 = [v22 databaseID];
          v234 = 138412802;
          v235 = v101;
          v236 = 2048;
          v237 = v226;
          v238 = 2048;
          v239 = v103;
          LODWORD(v212) = 32;
          v97 = (void *)_os_log_send_and_compose_impl( v100,  0LL,  0LL,  0LL,  &_mh_execute_header,  v89,  1LL,  "%@: Flagging download %lld as finish only, already have asset: %lld",  &v234,  v212);

          goto LABEL_136;
        }

        goto LABEL_190;
      }

      if ((-[NSURL isFileURL](v232, "isFileURL") & v29) == 1)
      {
        __int16 v86 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
        if (!v86) {
          __int16 v86 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
        }
        id v121 = [v86 shouldLog];
        else {
          id v122 = v121;
        }
        uint64_t v89 = (os_log_s *)objc_claimAutoreleasedReturnValue([v86 OSLogObject]);
        if (os_log_type_enabled(v89, OS_LOG_TYPE_DEBUG)) {
          id v119 = v122;
        }
        else {
          id v119 = v122 & 2;
        }
        if (!(_DWORD)v119) {
          goto LABEL_190;
        }
        __int16 v123 = (void *)objc_opt_class(self);
        v234 = 138412546;
        v235 = v123;
        v236 = 2048;
        v237 = v226;
        double v92 = v123;
        LODWORD(v212) = 22;
        __int16 v93 = "%@: Skipping prepare for file URL download: %lld";
LABEL_175:
        uint64_t v94 = v119;
        int v95 = v89;
        v96 = 2LL;
        goto LABEL_123;
      }

      if (SSDownloadKindIsSoftwareKind(v5))
      {
        if (+[ApplicationWorkspace keepSafeHarborDataForBundleID:]( &OBJC_CLASS___ApplicationWorkspace,  "keepSafeHarborDataForBundleID:",  v231))
        {
          id v124 = objc_claimAutoreleasedReturnValue(-[PrepareDownloadResponse clientIdentifier](v3, "clientIdentifier"));
          if (v124)
          {
            __int16 v125 = (void *)v124;
            id v126 = (void *)objc_claimAutoreleasedReturnValue(-[PrepareDownloadResponse clientIdentifier](v3, "clientIdentifier"));
            v127 = [v126 isEqualToString:@"atc"];

            if (v127)
            {
              __int16 v86 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
              if (!v86) {
                __int16 v86 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
              }
              v128 = [v86 shouldLog];
              else {
                v129 = v128;
              }
              uint64_t v89 = (os_log_s *)objc_claimAutoreleasedReturnValue([v86 OSLogObject]);
              if (os_log_type_enabled(v89, OS_LOG_TYPE_DEBUG)) {
                id v119 = v129;
              }
              else {
                id v119 = v129 & 2;
              }
              if (!(_DWORD)v119) {
                goto LABEL_190;
              }
              v130 = (void *)objc_opt_class(self);
              v234 = 138412802;
              v235 = v130;
              v236 = 2048;
              v237 = v226;
              v238 = 2112;
              v239 = v231;
              double v92 = v130;
              LODWORD(v212) = 32;
              __int16 v93 = "%@: Keeping safe harbor data with finish only for atc download: %lld bundleID: %@";
              goto LABEL_175;
            }
          }
        }
      }

      v131 = -[PrepareDownloadOperation _loadSizeIfNecessaryForAsset:](self, "_loadSizeIfNecessaryForAsset:", v22);
      if (v131 >= 1) {
        -[PrepareDownloadResponse setMediaAssetSize:](v3, "setMediaAssetSize:", v131);
      }
      v132 = objc_claimAutoreleasedReturnValue([v22 valueForProperty:@"local_path"]);
      v133 = (void *)objc_claimAutoreleasedReturnValue([v22 valueForProperty:@"is_hls"]);
      v217 = v133;
      if ((objc_opt_respondsToSelector(v133, "BOOLValue") & 1) != 0)
      {
        v134 = [v133 BOOLValue];
        if (!v132 && v134)
        {
          v135 = (void *)objc_claimAutoreleasedReturnValue(-[SSMemoryEntity valueForProperty:](self->_download, "valueForProperty:", @"kind"));
          v136 = sub_10015AF78(v135);
          v137 = (void *)objc_claimAutoreleasedReturnValue(v136);

          v138 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( NSString,  "stringWithFormat:",  @"%lld",  [v22 databaseID]));
          v139 = (void *)objc_claimAutoreleasedReturnValue( [v138 stringByAppendingPathExtension:SSDownloadMetadataKeyFileExtensionMoviePackage]);

          v140 = objc_claimAutoreleasedReturnValue([v137 stringByAppendingPathComponent:v139]);
          v132 = v140;
          v220 = 1;
          goto LABEL_201;
        }

        v220 = v134;
        if (v132)
        {
LABEL_201:
          -[PrepareDownloadResponse setDestinationPath:](v3, "setDestinationPath:", v132);
          v141 = (void *)objc_claimAutoreleasedReturnValue(-[SSMemoryEntity valueForProperty:](self->_download, "valueForProperty:", @"has_hdr"));
          v214 = v141;
          if ((objc_opt_respondsToSelector(v141, "BOOLValue") & 1) != 0) {
            v142 = [v141 BOOLValue];
          }
          else {
            v142 = 0LL;
          }
          v143 = (void *)objc_claimAutoreleasedReturnValue(-[SSMemoryEntity valueForProperty:](self->_download, "valueForProperty:", @"has_4k"));
          v213 = v143;
          if ((objc_opt_respondsToSelector(v143, "BOOLValue") & 1) != 0) {
            v144 = [v143 BOOLValue];
          }
          else {
            v144 = 0LL;
          }
          -[PrepareDownloadResponse setHasHDR:](v3, "setHasHDR:", v142);
          -[PrepareDownloadResponse setHas4K:](v3, "setHas4K:", v144);
          v145 = -[PrepareDownloadOperation _newURLRequestWithAsset:](self, "_newURLRequestWithAsset:", v22);
          v215 = (void *)v132;
          v222 = v145;
          if (!v145)
          {
LABEL_265:
            -[PrepareDownloadResponse setHLS:](v3, "setHLS:", v220);
            -[PrepareDownloadResponse setRequiresDownloadHandler:](v3, "setRequiresDownloadHandler:", v145 == 0LL);
            -[PrepareDownloadResponse setURLRequest:](v3, "setURLRequest:", v145);
            v170 = (void *)objc_claimAutoreleasedReturnValue(-[PrepareDownloadResponse dataConsumer](v3, "dataConsumer"));
            v171 = -[PrepareDownloadOperation _shouldFailForDiskSpaceWithAsset:dataConsumer:]( self,  "_shouldFailForDiskSpaceWithAsset:dataConsumer:",  v22,  v170);

            if (v171)
            {
              v172 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
              if (!v172) {
                v172 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
              }
              v173 = [v172 shouldLog];
              else {
                v174 = v173;
              }
              v175 = (os_log_s *)objc_claimAutoreleasedReturnValue([v172 OSLogObject]);
              if (os_log_type_enabled(v175, OS_LOG_TYPE_DEFAULT)) {
                v176 = v174;
              }
              else {
                v176 = v174 & 2;
              }
              if ((_DWORD)v176)
              {
                v177 = (id)objc_opt_class(self);
                v234 = 138412546;
                v235 = v177;
                v236 = 2048;
                v237 = v226;
                LODWORD(v212) = 22;
                v178 = (void *)_os_log_send_and_compose_impl( v176,  0LL,  0LL,  0LL,  &_mh_execute_header,  v175,  0LL,  "%@: Fail download without enough disk space: %lld",  &v234,  v212);

                v145 = v222;
                id v59 = &OBJC_METACLASS___LoadPassbookPassOperation;
                if (!v178)
                {
LABEL_320:

                  v206 = SSError(SSErrorDomain, 103LL, 0LL, 0LL);
                  v207 = (void *)objc_claimAutoreleasedReturnValue(v206);
                  -[PrepareDownloadResponse setError:](v3, "setError:", v207);

                  -[PrepareDownloadResponse setResult:](v3, "setResult:", 2LL);
                  v208 = (void *)objc_claimAutoreleasedReturnValue(-[PrepareDownloadResponse dataConsumer](v3, "dataConsumer"));
                  v188 = v208;
                  if (v208)
                  {
                    [v208 suspend];
                    -[PrepareDownloadResponse setDataConsumer:](v3, "setDataConsumer:", 0LL);
                  }

                  __int128 v51 = v215;
                  v199 = v217;
LABEL_323:

                  goto LABEL_95;
                }

                v175 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v178,  4LL));
                free(v178);
                v210 = v175;
                SSFileLog(v172, @"%@");
              }

              else
              {
                id v59 = &OBJC_METACLASS___LoadPassbookPassOperation;
              }

              goto LABEL_320;
            }

            v179 = (void *)objc_claimAutoreleasedReturnValue( -[SSMemoryEntity valueForProperty:]( self->_download,  "valueForProperty:",  @"is_restore"));
            v180 = [v179 BOOLValue];

            if ((v180 & 1) != 0)
            {
              -[PrepareDownloadResponse setRestore:](v3, "setRestore:", 1LL);
              -[PrepareDownloadResponse setCellularAllowed:]( v3,  "setCellularAllowed:",  [v145 allowsCellularAccess]);
              if ((SSDownloadKindIsPodcastKind(v5) & v180) == 1)
              {
                -[PrepareDownloadResponse setInfersDiscretionary:](v3, "setInfersDiscretionary:", 1LL);
                -[PrepareDownloadResponse setClientIdentifier:](v3, "setClientIdentifier:", @"com.apple.podcasts");
                v181 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
                if (!v181) {
                  v181 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
                }
                LODWORD(v182) = [v181 shouldLog];
                v183 = (os_log_s *)objc_claimAutoreleasedReturnValue([v181 OSLogObject]);
                if (os_log_type_enabled(v183, OS_LOG_TYPE_DEFAULT)) {
                  v182 = v182;
                }
                else {
                  v182 &= 2u;
                }
                if ((_DWORD)v182)
                {
                  v184 = (id)objc_opt_class(self);
                  v234 = 138412546;
                  v235 = v184;
                  v236 = 2048;
                  v237 = v226;
                  LODWORD(v212) = 22;
                  v185 = (void *)_os_log_send_and_compose_impl( v182,  0LL,  0LL,  0LL,  &_mh_execute_header,  v183,  0LL,  "%@: Set infersdiscretionary for podcast download: %lld",  &v234,  v212);

                  if (!v185)
                  {
LABEL_292:

                    -[PrepareDownloadResponse setRequiresPowerPluggedIn:]( v3,  "setRequiresPowerPluggedIn:",  -[PrepareDownloadOperation _requiresPoweredPluggedIn](self, "_requiresPoweredPluggedIn"));
                    -[PrepareDownloadOperation _transferProgressFractionWithAsset:]( self,  "_transferProgressFractionWithAsset:",  v22);
                    -[PrepareDownloadResponse setTransferProgressFraction:](v3, "setTransferProgressFraction:");
                    v187 = (void *)objc_claimAutoreleasedReturnValue( -[SSMemoryEntity valueForProperty:]( self->_download,  "valueForProperty:",  @"rate_limit"));
                    v188 = v187;
                    if (v187) {
                      -[PrepareDownloadResponse setBytesPerSecondLimit:]( v3,  "setBytesPerSecondLimit:",  [v187 integerValue]);
                    }
                    v225 = v22;
                    v189 = (void *)objc_claimAutoreleasedReturnValue( -[SSMemoryEntity valueForProperty:]( self->_download,  "valueForProperty:",  @"resource_timeout_interval",  v210));
                    v190 = v189;
                    if (v189)
                    {
                      [v189 doubleValue];
                      -[PrepareDownloadResponse setTimeoutIntervalForResource:](v3, "setTimeoutIntervalForResource:");
                    }

                    v221 = v5;
                    v191 = (void *)objc_claimAutoreleasedReturnValue( -[SSMemoryEntity valueForProperty:]( self->_download,  "valueForProperty:",  @"timeout_interval"));
                    v192 = v191;
                    if (v191)
                    {
                      [v191 doubleValue];
                      -[PrepareDownloadResponse setTimeoutIntervalForRequest:](v3, "setTimeoutIntervalForRequest:");
                    }

                    v193 = (void *)objc_claimAutoreleasedReturnValue( -[SSMemoryEntity valueForProperty:]( self->_download,  "valueForProperty:",  @"loading_priority"));
                    if (v193) {
                      -[PrepareDownloadResponse setLoadingPriority:](v3, "setLoadingPriority:", v193);
                    }
                    v194 = (void *)objc_claimAutoreleasedReturnValue( -[SSMemoryEntity valueForProperty:]( self->_download,  "valueForProperty:",  @"is_automatic"));
                    v195 = [v194 integerValue];

                    -[PrepareDownloadResponse setAutomaticType:](v3, "setAutomaticType:", v195);
                    if (v195) {
                      v196 = v180;
                    }
                    else {
                      v196 = 1;
                    }
                    if ((v196 & 1) == 0)
                    {
                      -[PrepareDownloadResponse setDiscretionary:](v3, "setDiscretionary:", 1LL);
                      if (v195 == (id)2)
                      {
                        v197 = (void *)objc_claimAutoreleasedReturnValue( -[SSMemoryEntity valueForProperty:]( self->_download,  "valueForProperty:",  @"bundle_id"));
                        if (v197) {
                          -[PrepareDownloadResponse setClientSecondaryIdentifier:]( v3,  "setClientSecondaryIdentifier:",  v197);
                        }
                      }
                    }

                    -[PrepareDownloadResponse setTaskPriority:]( v3,  "setTaskPriority:",  [(id)objc_opt_class(self) _URLSessionTaskPriorityForDownload:self->_download]);
                    if (v195 == (id)2) {
                      v198 = 1;
                    }
                    else {
                      v198 = v180;
                    }
                    v199 = v217;
                    if ((v198 & 1) == 0)
                    {
                      v200 = objc_claimAutoreleasedReturnValue( -[SSMemoryEntity valueForProperty:]( self->_download,  "valueForProperty:",  @"thumbnail_url"));
                      v201 = (void *)v200;
                      if (v231 && v200 && SSDownloadKindIsSoftwareKind(v221))
                      {
                        v227 = -[ApplicationHandle initWithDownloadHandle:bundleIdentifier:]( objc_alloc(&OBJC_CLASS___ApplicationHandle),  "initWithDownloadHandle:bundleIdentifier:",  v230,  v231);
                        v202 = -[NSURL initWithString:](objc_alloc(&OBJC_CLASS___NSURL), "initWithString:", v201);
                        v203 = v3;
                        v204 = -[LoadSoftwareThumbnailOperation initWithApplicationHandle:thumbnailURL:]( objc_alloc(&OBJC_CLASS___LoadSoftwareThumbnailOperation),  "initWithApplicationHandle:thumbnailURL:",  v227,  v202);
                        v233 = v204;
                        v205 = (void *)objc_claimAutoreleasedReturnValue( +[NSArray arrayWithObjects:count:]( &OBJC_CLASS___NSArray,  "arrayWithObjects:count:",  &v233,  1LL));
                        -[PrepareDownloadResponse setBackgroundOperations:](v203, "setBackgroundOperations:", v205);

                        uint64_t v3 = v203;
                        v199 = v217;
                      }
                    }

                    unint64_t v5 = v221;
                    v145 = v222;
                    unsigned int v22 = v225;
                    id v59 = &OBJC_METACLASS___LoadPassbookPassOperation;
                    __int128 v51 = v215;
                    goto LABEL_323;
                  }

                  v183 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v185,  4LL));
                  free(v185);
                  v210 = v183;
                  SSFileLog(v181, @"%@");
                }

                goto LABEL_292;
              }
            }

            else
            {
              SSDownloadKindIsPodcastKind(v5);
            }

            v186 = (void *)objc_claimAutoreleasedReturnValue(-[PrepareDownloadOperation _clientIdentifier](self, "_clientIdentifier"));
            -[PrepareDownloadResponse setClientIdentifier:](v3, "setClientIdentifier:", v186);

            v181 = (void *)objc_claimAutoreleasedReturnValue([v22 valueForProperty:@"is_discretionary"]);
            -[PrepareDownloadResponse setDiscretionary:](v3, "setDiscretionary:", [v181 BOOLValue]);
            goto LABEL_292;
          }

          if (SSDownloadKindIsMediaKind(v5))
          {
            v146 = (void *)objc_claimAutoreleasedReturnValue([v22 valueForProperty:@"avfoundation_blocked"]);
            if ([v146 BOOLValue])
            {
            }

            else
            {
              v156 = -[PrepareDownloadOperation _isPodcastRestore](self, "_isPodcastRestore");

              if ((v156 & 1) == 0)
              {
                v163 = -[PrepareDownloadOperation _newAVAssetDownloadSessionOptionsWithAsset:URLRequest:]( self,  "_newAVAssetDownloadSessionOptionsWithAsset:URLRequest:",  v22,  v145);
                -[PrepareDownloadResponse setAVAssetDownloadSessionOptions:]( v3,  "setAVAssetDownloadSessionOptions:",  v163);
                goto LABEL_264;
              }
            }
          }

          if (!-[PrepareDownloadOperation _isPodcastRestore](self, "_isPodcastRestore"))
          {
LABEL_250:
            v163 = -[PrepareDownloadOperation _newDataConsumerWithAsset:destinationPath:]( self,  "_newDataConsumerWithAsset:destinationPath:",  v22,  v132,  v210);
            if (![(id)objc_opt_class(self) _isDTServiceHubIssuedRequest:v145])
            {
LABEL_263:
              -[PrepareDownloadResponse setDataConsumer:](v3, "setDataConsumer:", v163, v211);
LABEL_264:

              goto LABEL_265;
            }

            v164 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
            if (!v164) {
              v164 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
            }
            LODWORD(v165) = [v164 shouldLog];
            v166 = (os_log_s *)objc_claimAutoreleasedReturnValue([v164 OSLogObject]);
            if (os_log_type_enabled(v166, OS_LOG_TYPE_INFO)) {
              v165 = v165;
            }
            else {
              v165 &= 2u;
            }
            if ((_DWORD)v165)
            {
              v167 = v22;
              v168 = (id)objc_opt_class(self);
              v234 = 138412290;
              v235 = v168;
              LODWORD(v212) = 12;
              v169 = (void *)_os_log_send_and_compose_impl( v165,  0LL,  0LL,  0LL,  &_mh_execute_header,  v166,  1LL,  "%@: Asking data consumer to override progress value",  &v234,  v212);

              unsigned int v22 = v167;
              if (!v169)
              {
LABEL_262:

                [v163 setOverrideProgress:1];
                v145 = v222;
                goto LABEL_263;
              }

              v166 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v169,  4LL));
              free(v169);
              v211 = v166;
              SSFileLog(v164, @"%@");
            }

            goto LABEL_262;
          }

          v157 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
          if (!v157) {
            v157 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
          }
          LODWORD(v15_Block_object_dispose(va, 8) = [v157 shouldLog];
          v159 = (os_log_s *)objc_claimAutoreleasedReturnValue([v157 OSLogObject]);
          if (os_log_type_enabled(v159, OS_LOG_TYPE_DEFAULT)) {
            v158 = v158;
          }
          else {
            v158 &= 2u;
          }
          if ((_DWORD)v158)
          {
            v160 = (id)objc_opt_class(self);
            v161 = [v22 databaseID];
            v234 = 138543874;
            v235 = v160;
            v236 = 2048;
            v237 = v226;
            v238 = 2048;
            v239 = v161;
            LODWORD(v212) = 32;
            v162 = (void *)_os_log_send_and_compose_impl( v158,  0LL,  0LL,  0LL,  &_mh_execute_header,  v159,  0LL,  "[%{public}@] Skipping AV asset download for podcast restore download: %lld asset: %lld",  &v234,  v212);

            if (!v162)
            {
LABEL_249:

              v145 = v222;
              goto LABEL_250;
            }

            v159 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v162,  4LL));
            free(v162);
            v210 = v159;
            SSFileLog(v157, @"%@");
          }

          goto LABEL_249;
        }
      }

      else
      {
        v220 = 0;
        if (v132) {
          goto LABEL_201;
        }
      }

      v132 = objc_claimAutoreleasedReturnValue( +[ScratchManager directoryPathForDownloadID:assetID:kind:createIfNeeded:]( ScratchManager,  "directoryPathForDownloadID:assetID:kind:createIfNeeded:",  v226,  [v22 databaseID],  v5,  1));
      goto LABEL_201;
    }

    if (SSDownloadKindIsSoftwareKind(v5))
    {
      v104 = objc_claimAutoreleasedReturnValue(-[PrepareDownloadResponse clientIdentifier](v3, "clientIdentifier"));
      if (v104)
      {
        v105 = (void *)v104;
        v106 = (void *)objc_claimAutoreleasedReturnValue(-[PrepareDownloadResponse clientIdentifier](v3, "clientIdentifier"));
        if ([v106 isEqualToString:@"atc"])
        {
          id v107 = +[ApplicationWorkspace keepSafeHarborDataForBundleID:]( &OBJC_CLASS___ApplicationWorkspace,  "keepSafeHarborDataForBundleID:",  v231);

          if (v107)
          {
            v108 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
            if (!v108) {
              v108 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
            }
            LODWORD(v109) = [v108 shouldLog];
            __int128 v110 = (os_log_s *)objc_claimAutoreleasedReturnValue([v108 OSLogObject]);
            if (os_log_type_enabled(v110, OS_LOG_TYPE_DEBUG)) {
              __int128 v109 = v109;
            }
            else {
              v109 &= 2u;
            }
            if ((_DWORD)v109)
            {
              __int128 v111 = (void *)objc_opt_class(self);
              v234 = 138412802;
              v235 = v111;
              v236 = 2048;
              v237 = v226;
              v238 = 2112;
              v239 = v231;
              __int128 v112 = v111;
              LODWORD(v212) = 32;
              uint64_t v113 = (void *)_os_log_send_and_compose_impl( v109,  0LL,  0LL,  0LL,  &_mh_execute_header,  v110,  2LL,  "%@: Keeping no asset download safe harbor data with finish only for download: %lld bundleID: %@",  &v234,  v212);

              if (!v113)
              {
LABEL_154:

                -[PrepareDownloadResponse setIsPerDeviceVPP:](v3, "setIsPerDeviceVPP:", 1LL);
                int v114 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", 1LL));
                -[PrepareDownloadResponse setDownloadRestoreState:](v3, "setDownloadRestoreState:", v114);

                download = self->_download;
                __int16 v116 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", 1LL));
                -[SSMemoryEntity setValue:forProperty:]( download,  "setValue:forProperty:",  v116,  @"download_state.restore_state");

                __int16 v86 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
                if (!v86) {
                  __int16 v86 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
                }
                id v117 = objc_msgSend(v86, "shouldLog", v210);
                else {
                  __int16 v118 = v117;
                }
                uint64_t v89 = (os_log_s *)objc_claimAutoreleasedReturnValue([v86 OSLogObject]);
                if (os_log_type_enabled(v89, OS_LOG_TYPE_DEBUG)) {
                  id v119 = v118;
                }
                else {
                  id v119 = v118 & 2;
                }
                if (!(_DWORD)v119) {
                  goto LABEL_190;
                }
                __int16 v120 = (void *)objc_opt_class(self);
                v234 = 138412802;
                v235 = v120;
                v236 = 2048;
                v237 = v226;
                v238 = 2112;
                v239 = v231;
                double v92 = v120;
                LODWORD(v212) = 32;
                __int16 v93 = "%@: Updated download: %lld bundleID: %@ to only restore data";
                goto LABEL_175;
              }

              __int128 v110 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v113,  4LL));
              free(v113);
              v210 = v110;
              SSFileLog(v108, @"%@");
            }

            goto LABEL_154;
          }
        }

        else
        {
        }
      }
    }

    __int16 v60 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v60) {
      __int16 v60 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    v147 = [v60 shouldLog];
    else {
      v148 = v147;
    }
    id v63 = (os_log_s *)objc_claimAutoreleasedReturnValue([v60 OSLogObject]);
    if (os_log_type_enabled(v63, OS_LOG_TYPE_DEBUG)) {
      v149 = v148;
    }
    else {
      v149 = v148 & 2;
    }
    if ((_DWORD)v149)
    {
      v150 = (void *)objc_opt_class(self);
      v234 = 138412546;
      v235 = v150;
      v236 = 2048;
      v237 = v226;
      __int128 v66 = v150;
      LODWORD(v212) = 22;
      uint64_t v67 = _os_log_send_and_compose_impl( v149,  0LL,  0LL,  0LL,  &_mh_execute_header,  v63,  2LL,  "%@: Skip prepare for download with no media asset: %lld",  &v234,  v212);
      goto LABEL_80;
    }

LABEL_222:
    id v59 = &OBJC_METACLASS___LoadPassbookPassOperation;
    goto LABEL_223;
  }

  -[PrepareDownloadResponse setResult:](v3, "setResult:", 4LL);
  __int128 v51 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v51) {
    __int128 v51 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  __int128 v52 = [v51 shouldLog];
  else {
    __int128 v53 = v52;
  }
  __int128 v54 = (os_log_s *)objc_claimAutoreleasedReturnValue([v51 OSLogObject]);
  if (os_log_type_enabled(v54, OS_LOG_TYPE_INFO)) {
    id v55 = v53;
  }
  else {
    id v55 = v53 & 2;
  }
  if (!(_DWORD)v55)
  {
    id v59 = &OBJC_METACLASS___LoadPassbookPassOperation;
    goto LABEL_94;
  }

  int v56 = (void *)objc_opt_class(self);
  v234 = 138412546;
  v235 = v56;
  v236 = 2048;
  v237 = v226;
  unsigned int v57 = v56;
  LODWORD(v212) = 22;
  __int16 v58 = (void *)_os_log_send_and_compose_impl( v55,  0LL,  0LL,  0LL,  &_mh_execute_header,  v54,  1LL,  "%@: Ignoring software download: %lld",  &v234,  v212);

  id v59 = &OBJC_METACLASS___LoadPassbookPassOperation;
  if (v58)
  {
    __int128 v54 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v58,  4LL));
    free(v58);
    v210 = v54;
    SSFileLog(v51, @"%@");
LABEL_94:
  }

LABEL_95:
LABEL_226:
  v151 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(&v59[7], "defaultWorkspace", v210));
  if ([v151 isMultiUser] && !-[PrepareDownloadResponse result](v3, "result"))
  {
    v152 = (void *)objc_claimAutoreleasedReturnValue([&v59[7] defaultWorkspace]);
    v153 = [v152 shouldModifyQuota:v5];

    if (!v153) {
      goto LABEL_231;
    }
    v151 = (void *)objc_claimAutoreleasedReturnValue([&v59[7] defaultWorkspace]);
    [v151 suspendQuotas];
  }

LABEL_231:
  v154 = objc_claimAutoreleasedReturnValue(-[PrepareDownloadOperation outputBlock](self, "outputBlock"));
  v155 = (void *)v154;
  if (v154)
  {
    (*(void (**)(uint64_t, PrepareDownloadOperation *, PrepareDownloadResponse *))(v154 + 16))(v154, self, v3);
    -[PrepareDownloadOperation setOutputBlock:](self, "setOutputBlock:", 0LL);
  }
}

void sub_100128EF0(uint64_t a1, void *a2)
{
  id v8 = a2;
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([v8 valueForProperty:@"url"]);
  if (v3)
  {
    id v4 = -[NSURL initWithString:](objc_alloc(&OBJC_CLASS___NSURL), "initWithString:", v3);
    if (v4)
    {
      unint64_t v5 = v4;
      uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v8 valueForProperty:@"asset_type"]);
      if ([v6 isEqualToString:SSDownloadAssetTypeMedia])
      {
        id v7 = (id *)(a1 + 32);
      }

      else
      {
        if (![v6 isEqualToString:SSDownloadAssetTypeDeltaPackage])
        {
LABEL_8:

          goto LABEL_9;
        }

        id v7 = (id *)(a1 + 40);
      }

      [*v7 addObject:v8];
      goto LABEL_8;
    }
  }

uint64_t sub_100129DE0(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v7 = objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  id v8 = (void *)v7;
  if (!a2)
  {
    if (!v7) {
      id v8 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v17 = [v8 shouldLog];
    else {
      LODWORD(v1_Block_object_dispose(va, 8) = v17;
    }
    uint64_t v19 = (os_log_s *)objc_claimAutoreleasedReturnValue([v8 OSLogObject]);
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v18 = v18;
    }
    else {
      v18 &= 2u;
    }
    if ((_DWORD)v18)
    {
      uint64_t v20 = (void *)objc_opt_class(*(void *)(a1 + 32));
      unsigned int v21 = *(void **)(a1 + 40);
      id v22 = v20;
      int v25 = 138412802;
      id v26 = v20;
      __int16 v27 = 2048;
      id v28 = [v21 databaseID];
      __int16 v29 = 2112;
      __int128 v30 = a4;
      uint64_t v23 = (void *)_os_log_send_and_compose_impl( v18,  0LL,  0LL,  0LL,  &_mh_execute_header,  v19,  0LL,  "%@: No local cache URL for asset: %lld, error: %@",  &v25,  32);

      if (!v23) {
        goto LABEL_27;
      }
      uint64_t v19 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v23,  4LL));
      free(v23);
      SSFileLog(v8, @"%@");
    }

    goto LABEL_27;
  }

  if (!v7) {
    id v8 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v9 = [v8 shouldLog];
  else {
    LODWORD(v10) = v9;
  }
  id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue([v8 OSLogObject]);
  if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO)) {
    uint64_t v10 = v10;
  }
  else {
    v10 &= 2u;
  }
  if (!(_DWORD)v10) {
    goto LABEL_13;
  }
  uint64_t v12 = (void *)objc_opt_class(*(void *)(a1 + 32));
  uint64_t v13 = *(void **)(a1 + 40);
  id v14 = v12;
  int v25 = 138412802;
  id v26 = v12;
  __int16 v27 = 2048;
  id v28 = [v13 databaseID];
  __int16 v29 = 2112;
  __int128 v30 = a2;
  unsigned int v15 = (void *)_os_log_send_and_compose_impl( v10,  0LL,  0LL,  0LL,  &_mh_execute_header,  v11,  1LL,  "%@: Replacing URL for asset: %lld, with local cache URL: %@",  &v25,  32);

  if (v15)
  {
    id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v15,  4LL));
    free(v15);
    SSFileLog(v8, @"%@");
LABEL_13:
  }

  unsigned int v16 = *(void **)(a1 + 40);
  id v8 = (void *)objc_claimAutoreleasedReturnValue([a2 absoluteString]);
  [v16 setValue:v8 forProperty:@"url"];
LABEL_27:

  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 48));
}

void sub_10012A4A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
}

id sub_10012A4DC(uint64_t a1, uint64_t a2, id *a3, uint64_t a4, BOOL *a5)
{
  id result = [*a3 length];
  *(_BYTE *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = result != 0LL;
  *a5 = result != 0LL;
  return result;
}

id sub_10012AD28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return [*(id *)(a1 + 32) setValue:a3 forHTTPHeaderField:a2];
}

id sub_10012BF44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return [*(id *)(a1 + 32) setValue:a3 forHTTPHeaderField:a2];
}

id sub_10012C0C4(uint64_t a1)
{
  v7[0] = @"Client";
  v7[1] = @"Kind";
  uint64_t v2 = *(void *)(a1 + 40);
  v8[0] = *(void *)(a1 + 32);
  v8[1] = v2;
  void v7[2] = @"IsFromStoreQueue";
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", *(unsigned __int8 *)(a1 + 56)));
  v7[3] = @"URL";
  uint64_t v4 = *(void *)(a1 + 48);
  void v8[2] = v3;
  v8[3] = v4;
  unint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v8,  v7,  4LL));

  return v5;
}

void sub_10012CE7C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
}

uint64_t sub_10012CF04(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  *(_BYTE *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL) = a2 == 0;
  if (!a2)
  {
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v7) {
      uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v8 = [v7 shouldLog];
    else {
      LODWORD(v9) = v8;
    }
    uint64_t v10 = (os_log_s *)objc_claimAutoreleasedReturnValue([v7 OSLogObject]);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v9 = v9;
    }
    else {
      v9 &= 2u;
    }
    if ((_DWORD)v9)
    {
      id v11 = (void *)objc_opt_class(*(void *)(a1 + 32));
      uint64_t v12 = *(void **)(*(void *)(a1 + 32) + 96LL);
      id v13 = v11;
      id v14 = [v12 databaseID];
      id v15 = [*(id *)(a1 + 40) databaseID];
      int v19 = 138413314;
      uint64_t v20 = v11;
      __int16 v21 = 2048;
      id v22 = v14;
      __int16 v23 = 2048;
      id v24 = v15;
      __int16 v25 = 2048;
      uint64_t v26 = a3;
      __int16 v27 = 2112;
      uint64_t v28 = a4;
      unsigned int v16 = (void *)_os_log_send_and_compose_impl( v9,  0LL,  0LL,  0LL,  &_mh_execute_header,  v10,  0LL,  "%@: Not enough disk space for %lld/%lld, only %llu is available: %@",  &v19,  52);

      if (v16)
      {
        unsigned int v17 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v16,  4LL));
        free(v16);
        SSFileLog(v7, @"%@");
      }
    }

    else
    {
    }
  }

  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 48));
}

void sub_10012DD04( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
}

uint64_t sub_10012DD50(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_10012DD60(uint64_t a1)
{
}

void sub_10012DD68(uint64_t a1, void *a2)
{
  __int128 v9 = 0u;
  __int128 v10 = 0u;
  __int128 v11 = 0u;
  __int128 v12 = 0u;
  id v3 = a2;
  id v4 = [v3 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v10;
    while (2)
    {
      for (uint64_t i = 0LL; i != v5; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v10 != v6) {
          objc_enumerationMutation(v3);
        }
        unsigned int v8 = *(void **)(*((void *)&v9 + 1) + 8LL * (void)i);
        if (objc_msgSend(v8, "taskIdentifier", (void)v9) == *(id *)(a1 + 48))
        {
          objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL), v8);
          goto LABEL_11;
        }
      }

      id v5 = [v3 countByEnumeratingWithState:&v9 objects:v13 count:16];
      if (v5) {
        continue;
      }
      break;
    }
  }

LABEL_63:
          goto LABEL_64;
        }
      }

      else
      {
        int v19 = (void *)objc_claimAutoreleasedReturnValue([v5 originalRequest]);
        uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([v19 URL]);

        if ((v11 & 1) != 0) {
          goto LABEL_38;
        }
      }

      uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue(-[NSURLRequest URL](self->_URLRequest, "URL", v41));
      __int16 v21 = v20;
      if (v20 && v18)
      {
        id v22 = (void *)objc_claimAutoreleasedReturnValue(-[NSURLRequest URL](self->_URLRequest, "URL"));
        __int16 v23 = [v22 isEqual:v18];

        if (v23) {
          goto LABEL_38;
        }
      }

      else
      {
      }

      __int16 v27 = (os_log_s *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
      if (!v27) {
        __int16 v27 = (os_log_s *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      unsigned __int8 v32 = -[os_log_s shouldLog](v27, "shouldLog");
      else {
        LODWORD(v33) = v32;
      }
      unsigned int v34 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[os_log_s OSLogObject](v27, "OSLogObject"));
      if (os_log_type_enabled(v34, OS_LOG_TYPE_DEBUG)) {
        id v33 = v33;
      }
      else {
        v33 &= 2u;
      }
      if ((_DWORD)v33)
      {
        unsigned int v35 = [v5 taskIdentifier];
        id v36 = self->_downloadIdentifier;
        uint64_t v37 = (void *)objc_claimAutoreleasedReturnValue(-[PrepareDownloadResponse URLSessionIdentifier](self, "URLSessionIdentifier"));
        id v43 = 134218498;
        uint64_t v44 = v35;
        uint64_t v45 = 2048;
        id v46 = v36;
        unsigned int v47 = 2114;
        unsigned int v48 = v37;
        LODWORD(v42) = 32;
        uint64_t v38 = (void *)_os_log_send_and_compose_impl( v33,  0LL,  0LL,  0LL,  &_mh_execute_header,  v34,  2LL,  "[Download]: Ignoring existing task: %lu for download: %lld in session: %{public}@",  &v43,  v42);

        if (!v38)
        {
LABEL_62:
          id v24 = v5;
          id v5 = 0LL;
          goto LABEL_63;
        }

        unsigned int v34 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v38,  4LL));
        free(v38);
        SSFileLog(v27, @"%@");
      }

      goto LABEL_62;
    }
  }

  else
  {
    id v5 = 0LL;
  }

BOOL sub_10012E820(uint64_t a1)
{
  return a1 == 3 || a1 == 0;
}

void sub_10012EB88(uint64_t a1)
{
  uint64_t v2 = (__CFString *)SSXPCConnectionCopyExecutablePath(*(void *)(a1 + 32));
  if (v2 && (CFURLRef v3 = CFURLCreateWithFileSystemPath(0LL, v2, kCFURLPOSIXPathStyle, 0)) != 0LL)
  {
    CFURLRef v4 = v3;
    uint64_t v5 = _CFBundleCopyBundleURLForExecutableURL();
    if (v5)
    {
      uint64_t v6 = (const void *)v5;
      uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue( +[LSApplicationProxy applicationProxyForBundleURL:]( &OBJC_CLASS___LSApplicationProxy,  "applicationProxyForBundleURL:",  v5));
      unsigned int v8 = (void *)objc_claimAutoreleasedReturnValue([v7 dataContainerURL]);
      __int128 v9 = (void *)objc_claimAutoreleasedReturnValue([v8 path]);

      BOOL v10 = v9 != 0LL;
      if (v9)
      {
        unsigned int v11 = [v7 profileValidated];
        __int128 v12 = (void *)objc_claimAutoreleasedReturnValue([v9 stringByAppendingPathComponent:@"StoreKit"]);
        id v13 = v12;
        if (v11) {
          id v14 = @"sandboxReceipt";
        }
        else {
          id v14 = @"receipt";
        }
        id v16 = (id)objc_claimAutoreleasedReturnValue([v12 stringByAppendingPathComponent:v14]);
      }

      else
      {
        id v16 = 0LL;
      }

      CFRelease(v6);
    }

    else
    {
      id v16 = 0LL;
      BOOL v10 = 0;
    }

    CFRelease(v4);
  }

  else
  {
    id v16 = 0LL;
    BOOL v10 = 0;
  }

  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 40));
  xpc_dictionary_set_BOOL(reply, "0", v10);
  SSXPCDictionarySetObject(reply, "1", v16);
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 32), reply);
}

void sub_10012F2C0(uint64_t a1)
{
  uint64_t v2 = -[ReceiptRefreshOperation initWithClient:requestingClientIdentifier:receiptFlags:]( objc_alloc(&OBJC_CLASS___ReceiptRefreshOperation),  "initWithClient:requestingClientIdentifier:receiptFlags:",  *(void *)(a1 + 32),  *(void *)(a1 + 40),  *(void *)(a1 + 72));
  CFURLRef v3 = _NSConcreteStackBlock;
  uint64_t v4 = 3221225472LL;
  uint64_t v5 = sub_10012F370;
  uint64_t v6 = &unk_10034F678;
  id v7 = *(id *)(a1 + 48);
  id v8 = *(id *)(a1 + 56);
  -[ReceiptRefreshOperation setResultBlock:](v2, "setResultBlock:", &v3);
  objc_msgSend(*(id *)(a1 + 64), "_addOperation:", v2, v3, v4, v5, v6);
}

void sub_10012F370(uint64_t a1, uint64_t a2, void *a3)
{
  id v6 = a3;
  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 32));
  if (reply)
  {
    uint64_t v5 = sub_100146878(v6);
    sub_100146884(reply, "1", v5);
    xpc_connection_send_message(*(xpc_connection_t *)(a1 + 40), reply);
  }
}

void sub_10012F450(uint64_t a1)
{
  id v1 = objc_alloc_init((Class)objc_opt_class(*(void *)(a1 + 32)));
  uint64_t v2 = (void *)qword_1003A34D0;
  qword_1003A34D0 = (uint64_t)v1;
}

void sub_10012F588(uint64_t a1)
{
  id v1 = (id)objc_claimAutoreleasedReturnValue(+[Daemon daemon](&OBJC_CLASS___Daemon, "daemon"));
  [v1 releaseKeepAliveAssertion:@"com.apple.itunesstored.ReceiptRevocation"];
}

void sub_10012F7F0(id a1)
{
  id v1 = objc_alloc_init(&OBJC_CLASS___MetricsController);
  uint64_t v2 = (void *)qword_1003A34E0;
  qword_1003A34E0 = (uint64_t)v1;
}

void sub_10012FB34(uint64_t a1)
{
  uint64_t v2 = (const char *)[@"com.apple.itunesstored.MetricsController.Duet" UTF8String];
  CFURLRef v3 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v3) {
    CFURLRef v3 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v4 = [v3 shouldLog];
  else {
    LODWORD(v5) = v4;
  }
  id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue([v3 OSLogObject]);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v5 = v5;
  }
  else {
    v5 &= 2u;
  }
  if (!(_DWORD)v5) {
    goto LABEL_12;
  }
  id v7 = (void *)objc_opt_class(*(void *)(a1 + 32));
  int v11 = 138543618;
  __int128 v12 = v7;
  __int16 v13 = 2080;
  id v14 = v2;
  id v8 = v7;
  __int128 v9 = (void *)_os_log_send_and_compose_impl( v5,  0LL,  0LL,  0LL,  &_mh_execute_header,  v6,  0LL,  "%{public}@: Adding a background wakeup listener for activity: %s",  &v11,  22);

  if (v9)
  {
    id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v9,  4LL));
    free(v9);
    SSFileLog(v3, @"%@");
LABEL_12:
  }

  handler[0] = _NSConcreteStackBlock;
  handler[1] = 3221225472LL;
  handler[2] = sub_10012FD18;
  handler[3] = &unk_10034D4C8;
  void handler[4] = *(void *)(a1 + 32);
  xpc_activity_register(v2, XPC_ACTIVITY_CHECK_IN, handler);
}

void sub_10012FD18(uint64_t a1, void *a2)
{
  CFURLRef v3 = a2;
  unsigned int v4 = (void *)objc_claimAutoreleasedReturnValue(+[Daemon daemon](&OBJC_CLASS___Daemon, "daemon"));
  [v4 takeKeepAliveAssertion:@"com.apple.itunesstored.MetricsController.Duet"];

  xpc_activity_state_t state = xpc_activity_get_state(v3);
  if (!state)
  {
    __int16 v13 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v13) {
      __int16 v13 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v14 = [v13 shouldLog];
    else {
      LODWORD(v15) = v14;
    }
    id v16 = (os_log_s *)objc_claimAutoreleasedReturnValue([v13 OSLogObject]);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v15 = v15;
    }
    else {
      v15 &= 2u;
    }
    if ((_DWORD)v15)
    {
      unsigned int v17 = (void *)objc_opt_class(*(void *)(a1 + 32));
      int v32 = 138543362;
      id v33 = v17;
      id v18 = v17;
      int v19 = (void *)_os_log_send_and_compose_impl( v15,  0LL,  0LL,  0LL,  &_mh_execute_header,  v16,  0LL,  "%{public}@: XPC activity checking in",  &v32,  12);

      if (!v19) {
        goto LABEL_28;
      }
      id v16 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v19,  4LL));
      free(v19);
      __int128 v30 = v16;
      SSFileLog(v13, @"%@");
    }

LABEL_28:
    xpc_object_t v20 = xpc_activity_copy_criteria(v3);
    if (v20)
    {
LABEL_42:

      goto LABEL_43;
    }

    __int16 v21 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v21) {
      __int16 v21 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v22 = objc_msgSend(v21, "shouldLog", v30);
    else {
      LODWORD(v23) = v22;
    }
    id v24 = (os_log_s *)objc_claimAutoreleasedReturnValue([v21 OSLogObject]);
    if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v23 = v23;
    }
    else {
      v23 &= 2u;
    }
    if ((_DWORD)v23)
    {
      __int16 v25 = (void *)objc_opt_class(*(void *)(a1 + 32));
      int v32 = 138543362;
      id v33 = v25;
      id v26 = v25;
      LODWORD(v31) = 12;
      __int16 v27 = (void *)_os_log_send_and_compose_impl( v23,  0LL,  0LL,  0LL,  &_mh_execute_header,  v24,  0LL,  "%{public}@: No XPC activity criteria set, adding criteria",  &v32,  v31);

      if (!v27)
      {
LABEL_41:

        xpc_object_t v28 = xpc_dictionary_create(0LL, 0LL, 0LL);
        xpc_dictionary_set_BOOL(v28, XPC_ACTIVITY_REPEATING, 1);
        xpc_dictionary_set_BOOL(v28, XPC_ACTIVITY_ALLOW_BATTERY, 1);
        xpc_dictionary_set_string(v28, XPC_ACTIVITY_PRIORITY, XPC_ACTIVITY_PRIORITY_UTILITY);
        xpc_dictionary_set_BOOL(v28, XPC_ACTIVITY_REQUIRE_SCREEN_SLEEP, 1);
        xpc_dictionary_set_int64(v28, XPC_ACTIVITY_GRACE_PERIOD, XPC_ACTIVITY_INTERVAL_4_HOURS);
        xpc_dictionary_set_BOOL(v28, XPC_ACTIVITY_REQUIRE_NETWORK_CONNECTIVITY, 1);
        xpc_dictionary_set_BOOL(v28, XPC_ACTIVITY_REQUIRE_INEXPENSIVE_NETWORK_CONNECTIVITY, 0);
        xpc_activity_set_criteria(v3, v28);

        goto LABEL_42;
      }

      id v24 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v27,  4LL));
      free(v27);
      __int128 v30 = v24;
      SSFileLog(v21, @"%@");
    }

    goto LABEL_41;
  }

  if (state == 2)
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v6) {
      id v6 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v7 = [v6 shouldLog];
    else {
      LODWORD(v_Block_object_dispose(va, 8) = v7;
    }
    __int128 v9 = (os_log_s *)objc_claimAutoreleasedReturnValue([v6 OSLogObject]);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v8 = v8;
    }
    else {
      v8 &= 2u;
    }
    if ((_DWORD)v8)
    {
      BOOL v10 = (void *)objc_opt_class(*(void *)(a1 + 32));
      int v32 = 138543362;
      id v33 = v10;
      id v11 = v10;
      __int128 v12 = (void *)_os_log_send_and_compose_impl( v8,  0LL,  0LL,  0LL,  &_mh_execute_header,  v9,  0LL,  "%{public}@: Executing XPC activity to flush metrics (if needed)",  &v32,  12);

      if (!v12)
      {
LABEL_15:

        [*(id *)(a1 + 32) _reportEventsIfNeeded];
        goto LABEL_43;
      }

      __int128 v9 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v12,  4LL));
      free(v12);
      __int128 v30 = v9;
      SSFileLog(v6, @"%@");
    }

    goto LABEL_15;
  }

id sub_100130C5C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _reportEvents];
}

void sub_100131124(uint64_t a1, char a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  CFURLRef v3 = *(dispatch_queue_s **)(v2 + 24);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_100131180;
  v4[3] = &unk_10034B008;
  char v5 = a2;
  void v4[4] = v2;
  dispatch_async(v3, v4);
}

id sub_100131180(uint64_t a1)
{
  int v1 = *(unsigned __int8 *)(a1 + 40);
  uint64_t v2 = *(void **)(a1 + 32);
  if (v1) {
    return [v2 _scheduleBackoffRetry];
  }
  else {
    return [v2 _cancelBackoffRetry];
  }
}

id sub_1001317F0(uint64_t a1)
{
  return [*(id *)(a1 + 32) _cancelBackoffRetryTimer];
}

void sub_100131C74( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_100131C90(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_100131CA0(uint64_t a1)
{
}

void sub_100131CA8(uint64_t a1, void *a2)
{
  id v4 = a2;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_100132D4C(uint64_t a1, void *a2)
{
  CFURLRef v3 = (void *)objc_claimAutoreleasedReturnValue([a2 object]);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 valueForKey:@"ExplicitOffAndPreferencesEnabled"]);
  if ((objc_opt_respondsToSelector(v4, "BOOLValue") & 1) != 0) {
    id v5 = [v4 BOOLValue];
  }
  else {
    id v5 = 0LL;
  }
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v3 valueForKey:@"ExplicitOffAndPreferencesDisabled"]);
  if ((objc_opt_respondsToSelector(v6, "BOOLValue") & 1) != 0)
  {
    id v7 = [v6 BOOLValue];
    id v5 = (id)(v7 | v5);
  }

  else
  {
    id v7 = 0LL;
  }

  unsigned int v8 = [*(id *)(a1 + 32) explicitPreferencesDisabled:&v57];
  __int128 v9 = &ACSLocateCachingServer_ptr;
  if (!v57 || v7 != v8)
  {
    BOOL v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](&OBJC_CLASS___NSMutableDictionary, "dictionary"));
    uint64_t v11 = objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    __int128 v12 = (void *)v11;
    int v56 = v4;
    if ((_DWORD)v7)
    {
      if (!v11) {
        __int128 v12 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      unsigned int v13 = [v12 shouldLog];
      else {
        unsigned int v14 = v13;
      }
      uint64_t v15 = (os_log_s *)objc_claimAutoreleasedReturnValue([v12 OSLogObject]);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO)) {
        uint64_t v16 = v14;
      }
      else {
        uint64_t v16 = v14 & 2;
      }
      if ((_DWORD)v16)
      {
        unsigned int v17 = (void *)objc_opt_class(*(void *)(a1 + 32));
        int v58 = 138543362;
        id v59 = v17;
        id v18 = v17;

        if (!v19)
        {
LABEL_22:

          [v10 MCSetBoolRestriction:MCFeatureExplicitContentAllowed value:0];
LABEL_35:
          id v26 = +[NSBundle bundleForClass:]( &OBJC_CLASS___NSBundle,  "bundleForClass:",  objc_opt_class(&OBJC_CLASS___ISDialog));
          __int16 v27 = (void *)objc_claimAutoreleasedReturnValue(v26);
          xpc_object_t v28 = (void *)objc_claimAutoreleasedReturnValue( [v27 localizedStringForKey:@"ITUNES_STORE" value:&stru_10035EB18 table:0]);

          __int128 v9 = &ACSLocateCachingServer_ptr;
          __int16 v29 = (void *)objc_claimAutoreleasedReturnValue(+[MCProfileConnection sharedConnection](&OBJC_CLASS___MCProfileConnection, "sharedConnection"));
          [v29 applyRestrictionDictionary:v10 clientType:@"com.apple.itunesstored" clientUUID:SSRestrictionsExplicitUUID localizedClientDescription:v28 localizedWarningMessage:0 outRestr ictionChanged:0 outEffectiveSettingsChanged:0 outError:0];

          id v4 = v56;
          goto LABEL_36;
        }

        uint64_t v15 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v19,  4LL));
        free(v19);
        SSFileLog(v12, @"%@");
      }

      goto LABEL_22;
    }

    if (!v11) {
      __int128 v12 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v20 = [v12 shouldLog];
    __int16 v21 = (os_log_s *)objc_claimAutoreleasedReturnValue([v12 OSLogObject]);
    if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO)) {
      uint64_t v22 = v20;
    }
    else {
      uint64_t v22 = v20 & 2;
    }
    if ((_DWORD)v22)
    {
      uint64_t v23 = (void *)objc_opt_class(*(void *)(a1 + 32));
      int v58 = 138543362;
      id v59 = v23;
      id v24 = v23;

      if (!v25)
      {
LABEL_34:

        goto LABEL_35;
      }

      __int16 v21 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v25,  4LL));
      free(v25);
      SSFileLog(v12, @"%@");
    }

    goto LABEL_34;
  }

LABEL_74:
  CFPreferencesAppSynchronize(kITunesStoreDaemonDefaultsID);
}

void sub_100133650(uint64_t a1)
{
  id v1 = objc_alloc_init((Class)objc_opt_class(*(void *)(a1 + 32)));
  uint64_t v2 = (void *)qword_1003A34F0;
  qword_1003A34F0 = (uint64_t)v1;
}

void sub_1001341E8(uint64_t a1)
{
  uint64_t v2 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) activationHandler]);
  if (v2)
  {
    CFURLRef v3 = (void *)v2;
    unsigned __int8 v4 = [*(id *)(a1 + 32) didActivate];

    if ((v4 & 1) == 0)
    {
      id v5 = (void (**)(void, void))objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) activationHandler]);
      v5[2](v5, 0LL);

      [*(id *)(a1 + 32) setDidActivate:1];
    }
  }

id sub_10013640C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _initializePolicy];
}

void sub_100136738( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, char a27)
{
}

uint64_t sub_100136778(uint64_t a1, void *a2)
{
  unsigned __int8 v4 = -[NSDictionary initWithObjectsAndKeys:]( objc_alloc(&OBJC_CLASS___NSDictionary),  "initWithObjectsAndKeys:",  *(void *)(a1 + 32),  @"policy_data",  0LL);
  id v5 = -[DownloadPolicyEntity initWithPropertyValues:inDatabase:]( [DownloadPolicyEntity alloc],  "initWithPropertyValues:inDatabase:",  v4,  [a2 database]);
  if (v5)
  {
    id v6 = v5;
    id v7 = objc_alloc_init(&OBJC_CLASS___DownloadPolicy);
    *(void *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = -[DownloadPolicyEntity persistentID]( v6,  "persistentID");
    -[DownloadPolicy setDatabaseID:](v7, "setDatabaseID:", *(void *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL));
    -[DownloadPolicy setPolicyData:](v7, "setPolicyData:", *(void *)(a1 + 32));
    [*(id *)(a1 + 40) _addPolicy:v7];
  }

  return 1LL;
}

id sub_100136F04(uint64_t a1, void *a2)
{
  id v3 = +[DownloadPolicy queryWithDatabase:predicate:]( DownloadPolicy,  "queryWithDatabase:predicate:",  [a2 database],  0);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  v5[2] = sub_100136F84;
  v5[3] = &unk_10034F768;
  void v5[4] = *(void *)(a1 + 32);
  return [v3 enumerateMemoryEntitiesUsingBlock:v5];
}

id sub_100136F84(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) addObject:a2];
}

id sub_100137BB8(uint64_t a1)
{
  id result = objc_alloc_init((Class)objc_opt_class(*(void *)(a1 + 32)));
  qword_1003A3500 = (uint64_t)result;
  return result;
}

void sub_100137C34(uint64_t a1)
{
  uint64_t v2 = -[NSNumber initWithLongLong:]( [NSNumber alloc],  "initWithLongLong:",  [*(id *)(a1 + 32) handlerIdentifier]);
  id v3 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  if (!v3) {
    id v3 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  unsigned int v4 = [v3 shouldLog];
  else {
    LODWORD(v5) = v4;
  }
  id v6 = (os_log_s *)[v3 OSLogObject];
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO)) {
    uint64_t v5 = v5;
  }
  else {
    v5 &= 2u;
  }
  if ((_DWORD)v5)
  {
    uint64_t v8 = objc_opt_class(*(void *)(a1 + 40));
    uint64_t v9 = *(void *)(a1 + 32);
    int v18 = 138412802;
    uint64_t v19 = v8;
    __int16 v20 = 2112;
    __int16 v21 = v2;
    __int16 v22 = 2112;
    uint64_t v23 = v9;
    uint64_t v10 = _os_log_send_and_compose_impl( v5,  0LL,  0LL,  0LL,  &_mh_execute_header,  v6,  1LL,  "%@: Adding download handler: %@, %@",  &v18,  32);
    if (v10)
    {
      uint64_t v11 = (void *)v10;
      __int128 v12 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v10, 4LL);
      free(v11);
      unsigned int v17 = v12;
      *(void *)&double v7 = SSFileLog(v3, @"%@").n128_u64[0];
    }
  }

  id v13 = objc_msgSend(*(id *)(*(void *)(a1 + 40) + 8), "objectForKey:", v2, v7, v17);
  if (!v13)
  {
    [*(id *)(*(void *)(a1 + 40) + 8) setObject:*(void *)(a1 + 32) forKey:v2];
    objc_msgSend( *(id *)(a1 + 40),  "_endDisconnectedSessionsForClientID:",  objc_msgSend(*(id *)(a1 + 32), "clientIdentifier"));
    goto LABEL_19;
  }

  unsigned int v14 = v13;
  id v15 = [v13 copyInputConnection];
  id v16 = [*(id *)(a1 + 32) copyInputConnection];
  if (v16 != v15)
  {
    [*(id *)(*(void *)(a1 + 40) + 8) setObject:*(void *)(a1 + 32) forKey:v2];
    if (!v15) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }

  objc_msgSend(v14, "setDownloadPhasesToIgnore:", objc_msgSend(*(id *)(a1 + 32), "downloadPhasesToIgnore"));
  objc_msgSend(v14, "setSessionsNeedPowerAssertion:", objc_msgSend(*(id *)(a1 + 32), "sessionsNeedPowerAssertion"));
  objc_msgSend( v14,  "setSessionsShouldBlockOtherDownloads:",  objc_msgSend(*(id *)(a1 + 32), "sessionsShouldBlockOtherDownloads"));
  if (v15) {
LABEL_15:
  }
    xpc_release(v15);
LABEL_16:
  if (v16) {
    xpc_release(v16);
  }
LABEL_19:
  [*(id *)(a1 + 40) _notifyObserversOfHandlersChange];
}

id sub_100137EF4(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 40) addObject:*(void *)(a1 + 40)];
}

void sub_100137FB4(_Unwind_Exception *a1)
{
}

void sub_100137FCC(uint64_t a1, uint64_t a2)
{
}

void sub_100137FDC(uint64_t a1)
{
}

void sub_100137FE8(uint64_t a1)
{
  unsigned int v4 = -[NSNumber initWithLongLong:](objc_alloc(&OBJC_CLASS___NSNumber), "initWithLongLong:", *(void *)(a1 + 56));
  id v2 = objc_msgSend(*(id *)(*(void *)(a1 + 32) + 56), "objectForKey:");
  if (v2)
  {
    *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 4+[SSVSubscriptionEntitlementsCoordinator setCachedSubscriptionEntitlements:]( SSVSubscriptionEntitlementsCoordinator,  "setCachedSubscriptionEntitlements:", 0) = objc_msgSend( objc_msgSend( *(id *)(a1 + 32),  "_clientForSession:",  v2),  "beginBackgroundTaskWithReason:expirationBlock:",  *(unsigned int *)(a1 + 64),  *(void *)(a1 + 40));
    id v3 = *(id *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 40LL);
  }
}

id sub_1001380C8(uint64_t a1)
{
  id v2 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  if (!v2) {
    id v2 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  unsigned int v3 = [v2 shouldLog];
  else {
    LODWORD(v4) = v3;
  }
  uint64_t v5 = (os_log_s *)[v2 OSLogObject];
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO)) {
    uint64_t v4 = v4;
  }
  else {
    v4 &= 2u;
  }
  if ((_DWORD)v4)
  {
    uint64_t v6 = objc_opt_class(*(void *)(a1 + 32));
    uint64_t v7 = *(void *)(a1 + 40);
    int v13 = 138412546;
    uint64_t v14 = v6;
    __int16 v15 = 2048;
    uint64_t v16 = v7;
    uint64_t v8 = _os_log_send_and_compose_impl( v4,  0LL,  0LL,  0LL,  &_mh_execute_header,  v5,  1LL,  "%@: Begin session with ID: %lld",  &v13,  22);
    if (v8)
    {
      uint64_t v9 = (void *)v8;
      +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v8, 4LL);
      free(v9);
      SSFileLog(v2, @"%@");
    }
  }

  uint64_t v10 = -[NSNumber initWithLongLong:](objc_alloc(&OBJC_CLASS___NSNumber), "initWithLongLong:", *(void *)(a1 + 40));
  if (objc_msgSend( objc_msgSend(objc_msgSend(*(id *)(*(void *)(a1 + 32) + 56), "objectForKey:", v10), "sessionProperties"),  "authenticationChallenge"))
  {
    uint64_t v11 = 1005LL;
  }

  else
  {
    uint64_t v11 = 1000LL;
  }

  return objc_msgSend(*(id *)(a1 + 32), "_sendMessage:forSessionID:replyBlock:", v11);
}

uint64_t sub_1001382A8(uint64_t a1, xpc_object_t object)
{
  if (!object) {
    return (uint64_t)[*(id *)(a1 + 32) failDownloadSessionWithID:*(void *)(a1 + 40) error:0];
  }
  if (xpc_get_type(object) != (xpc_type_t)&_xpc_type_dictionary) {
    return (uint64_t)[*(id *)(a1 + 32) failDownloadSessionWithID:*(void *)(a1 + 40) error:0];
  }
  xpc_object_t value = xpc_dictionary_get_value(object, "0");
  if (!value) {
    return (uint64_t)[*(id *)(a1 + 32) failDownloadSessionWithID:*(void *)(a1 + 40) error:0];
  }
  uint64_t v6 = value;
  if (xpc_get_type(value) != (xpc_type_t)&_xpc_type_BOOL) {
    return (uint64_t)[*(id *)(a1 + 32) failDownloadSessionWithID:*(void *)(a1 + 40) error:0];
  }
  uint64_t result = xpc_BOOL_get_value(v6);
  if ((result & 1) == 0)
  {
    id v7 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v7) {
      id v7 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v8 = [v7 shouldLog];
    else {
      LODWORD(v9) = v8;
    }
    uint64_t v10 = (os_log_s *)[v7 OSLogObject];
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO)) {
      uint64_t v9 = v9;
    }
    else {
      v9 &= 2u;
    }
    if ((_DWORD)v9)
    {
      uint64_t v12 = objc_opt_class(*(void *)(a1 + 32));
      uint64_t v13 = *(void *)(a1 + 40);
      int v19 = 138412546;
      uint64_t v20 = v12;
      __int16 v21 = 2048;
      uint64_t v22 = v13;
      uint64_t v14 = _os_log_send_and_compose_impl( v9,  0LL,  0LL,  0LL,  &_mh_execute_header,  v10,  1LL,  "%@: Client handler returned NO for open session: %lld",  &v19,  22);
      if (v14)
      {
        __int16 v15 = (void *)v14;
        uint64_t v16 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v14, 4LL);
        free(v15);
        int v18 = v16;
        *(void *)&double v11 = SSFileLog(v7, @"%@").n128_u64[0];
      }
    }

    return (uint64_t)objc_msgSend(*(id *)(a1 + 32), "releaseDownloadSessionWithID:", *(void *)(a1 + 40), v11, v18);
  }

  return result;
}

id sub_10013853C(uint64_t a1)
{
  id v2 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  if (!v2) {
    id v2 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  unsigned int v3 = [v2 shouldLog];
  else {
    LODWORD(v4) = v3;
  }
  uint64_t v5 = (os_log_s *)[v2 OSLogObject];
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO)) {
    uint64_t v4 = v4;
  }
  else {
    v4 &= 2u;
  }
  if ((_DWORD)v4)
  {
    uint64_t v7 = objc_opt_class(*(void *)(a1 + 32));
    uint64_t v8 = *(void *)(a1 + 40);
    int v14 = 138412546;
    uint64_t v15 = v7;
    __int16 v16 = 2048;
    uint64_t v17 = v8;
    uint64_t v9 = _os_log_send_and_compose_impl( v4,  0LL,  0LL,  0LL,  &_mh_execute_header,  v5,  1LL,  "%@: Cancel authentication session with ID: %lld",  &v14,  22);
    if (v9)
    {
      uint64_t v10 = (void *)v9;
      double v11 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v9, 4LL);
      free(v10);
      uint64_t v13 = v11;
      *(void *)&double v6 = SSFileLog(v2, @"%@").n128_u64[0];
    }
  }

  return objc_msgSend(*(id *)(a1 + 32), "_endSessionWithID:state:", *(void *)(a1 + 40), 1, v6, v13);
}

id sub_1001386FC(uint64_t a1)
{
  id v2 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  if (!v2) {
    id v2 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  unsigned int v3 = [v2 shouldLog];
  else {
    LODWORD(v4) = v3;
  }
  uint64_t v5 = (os_log_s *)[v2 OSLogObject];
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO)) {
    uint64_t v4 = v4;
  }
  else {
    v4 &= 2u;
  }
  if ((_DWORD)v4)
  {
    uint64_t v7 = objc_opt_class(*(void *)(a1 + 32));
    uint64_t v8 = *(void *)(a1 + 40);
    int v14 = 138412546;
    uint64_t v15 = v7;
    __int16 v16 = 2048;
    uint64_t v17 = v8;
    uint64_t v9 = _os_log_send_and_compose_impl( v4,  0LL,  0LL,  0LL,  &_mh_execute_header,  v5,  1LL,  "%@: Cancel session with ID: %lld",  &v14,  22);
    if (v9)
    {
      uint64_t v10 = (void *)v9;
      double v11 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v9, 4LL);
      free(v10);
      uint64_t v13 = v11;
      *(void *)&double v6 = SSFileLog(v2, @"%@").n128_u64[0];
    }
  }

  objc_msgSend(*(id *)(a1 + 32), "_sendMessage:forSessionID:replyBlock:", 1001, *(void *)(a1 + 40), 0, v6, v13);
  return [*(id *)(a1 + 32) _endSessionWithID:*(void *)(a1 + 40) state:8];
}

id sub_100138908(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) _clientForProperties:*(void *)(a1 + 40)];
  *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = result != 0LL;
  return result;
}

void sub_10013899C(uint64_t a1)
{
  id v2 = -[NSNumber initWithLongLong:](objc_alloc(&OBJC_CLASS___NSNumber), "initWithLongLong:", *(void *)(a1 + 40));
  [*(id *)(*(void *)(a1 + 32) + 56) removeObjectForKey:v2];
}

id sub_100138A44(uint64_t a1)
{
  id v2 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  if (!v2) {
    id v2 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  unsigned int v3 = [v2 shouldLog];
  else {
    LODWORD(v4) = v3;
  }
  uint64_t v5 = (os_log_s *)[v2 OSLogObject];
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO)) {
    uint64_t v4 = v4;
  }
  else {
    v4 &= 2u;
  }
  if ((_DWORD)v4)
  {
    uint64_t v7 = objc_opt_class(*(void *)(a1 + 32));
    uint64_t v8 = *(void *)(a1 + 40);
    int v14 = 138412546;
    uint64_t v15 = v7;
    __int16 v16 = 2048;
    uint64_t v17 = v8;
    uint64_t v9 = _os_log_send_and_compose_impl( v4,  0LL,  0LL,  0LL,  &_mh_execute_header,  v5,  1LL,  "%@: Continue authentication session with ID: %lld",  &v14,  22);
    if (v9)
    {
      uint64_t v10 = (void *)v9;
      double v11 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v9, 4LL);
      free(v10);
      uint64_t v13 = v11;
      *(void *)&double v6 = SSFileLog(v2, @"%@").n128_u64[0];
    }
  }

  return objc_msgSend(*(id *)(a1 + 32), "_endSessionWithID:state:", *(void *)(a1 + 40), 2, v6, v13);
}

id sub_100138C08(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) _popDownloadSessionForSessionID:*(void *)(a1 + 48)];
  if (result)
  {
    unsigned int v3 = result;
    id v4 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v4) {
      id v4 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v5 = [v4 shouldLog];
    else {
      LODWORD(v6) = v5;
    }
    uint64_t v7 = (os_log_s *)[v4 OSLogObject];
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO)) {
      uint64_t v6 = v6;
    }
    else {
      v6 &= 2u;
    }
    if ((_DWORD)v6)
    {
      uint64_t v9 = objc_opt_class(*(void *)(a1 + 32));
      uint64_t v11 = *(void *)(a1 + 40);
      uint64_t v10 = *(void *)(a1 + 48);
      int v16 = 138412802;
      uint64_t v17 = v9;
      __int16 v18 = 2048;
      uint64_t v19 = v10;
      __int16 v20 = 2112;
      uint64_t v21 = v11;
      uint64_t v12 = _os_log_send_and_compose_impl( v6,  0LL,  0LL,  0LL,  &_mh_execute_header,  v7,  1LL,  "%@: Disavow session with ID: %lld error: %@",  &v16,  32);
      if (v12)
      {
        uint64_t v13 = (void *)v12;
        int v14 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v12, 4LL);
        free(v13);
        uint64_t v15 = v14;
        *(void *)&double v8 = SSFileLog(v4, @"%@").n128_u64[0];
      }
    }

    objc_msgSend( objc_msgSend(*(id *)(a1 + 32), "_clientForSession:", v3, v8, v15),  "addDisavowedSessionProperties:",  objc_msgSend(v3, "sessionProperties"));
    [v3 setError:*(void *)(a1 + 40)];
    [v3 setSessionState:6];
    return [*(id *)(a1 + 32) _notifyObserversOfSessionChange:v3];
  }

  return result;
}

id sub_100138E2C(uint64_t a1)
{
  id v2 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  if (!v2) {
    id v2 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  unsigned int v3 = [v2 shouldLog];
  else {
    LODWORD(v4) = v3;
  }
  unsigned int v5 = (os_log_s *)[v2 OSLogObject];
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO)) {
    uint64_t v4 = v4;
  }
  else {
    v4 &= 2u;
  }
  if ((_DWORD)v4)
  {
    uint64_t v7 = objc_opt_class(*(void *)(a1 + 32));
    uint64_t v8 = *(void *)(a1 + 40);
    int v14 = 138412546;
    uint64_t v15 = v7;
    __int16 v16 = 2048;
    uint64_t v17 = v8;
    uint64_t v9 = _os_log_send_and_compose_impl( v4,  0LL,  0LL,  0LL,  &_mh_execute_header,  v5,  1LL,  "%@: Disconnect session with ID: %lld",  &v14,  22);
    if (v9)
    {
      uint64_t v10 = (void *)v9;
      uint64_t v11 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v9, 4LL);
      free(v10);
      uint64_t v13 = v11;
      *(void *)&double v6 = SSFileLog(v2, @"%@").n128_u64[0];
    }
  }

  return objc_msgSend(*(id *)(a1 + 32), "_endSessionWithID:state:", *(void *)(a1 + 40), 7, v6, v13);
}

void sub_100138FF0(uint64_t a1)
{
  double v6 = -[NSNumber initWithLongLong:](objc_alloc(&OBJC_CLASS___NSNumber), "initWithLongLong:", *(void *)(a1 + 48));
  id v2 = objc_msgSend(*(id *)(*(void *)(a1 + 32) + 56), "objectForKey:");
  if (v2 && (id v3 = [*(id *)(a1 + 32) _clientForSession:v2]) != 0)
  {
    [v3 endBackgroundTaskWithIdentifier:*(void *)(a1 + 40)];
  }

  else
  {
    uint64_t v4 = *(void *)(a1 + 40);
    unsigned int v5 = *(void **)(*(void *)(a1 + 32) + 8LL);
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472LL;
    void v7[2] = sub_1001390A0;
    v7[3] = &unk_10034F7E0;
    void v7[4] = v4;
    [v5 enumerateKeysAndObjectsUsingBlock:v7];
  }
}

id sub_1001390A0(uint64_t a1, uint64_t a2, void *a3)
{
  return [a3 endBackgroundTaskWithIdentifier:*(void *)(a1 + 32)];
}

id sub_10013910C(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) _popDownloadSessionForSessionID:*(void *)(a1 + 48)];
  if (result)
  {
    id v3 = result;
    id v4 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v4) {
      id v4 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v5 = [v4 shouldLog];
    else {
      LODWORD(v6) = v5;
    }
    uint64_t v7 = (os_log_s *)[v4 OSLogObject];
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO)) {
      uint64_t v6 = v6;
    }
    else {
      v6 &= 2u;
    }
    if ((_DWORD)v6)
    {
      uint64_t v9 = objc_opt_class(*(void *)(a1 + 32));
      uint64_t v11 = *(void *)(a1 + 40);
      uint64_t v10 = *(void *)(a1 + 48);
      int v16 = 138412802;
      uint64_t v17 = v9;
      __int16 v18 = 2048;
      uint64_t v19 = v10;
      __int16 v20 = 2112;
      uint64_t v21 = v11;
      uint64_t v12 = _os_log_send_and_compose_impl( v6,  0LL,  0LL,  0LL,  &_mh_execute_header,  v7,  1LL,  "%@: Fail session with ID: %lld error: %@",  &v16,  32);
      if (v12)
      {
        uint64_t v13 = (void *)v12;
        int v14 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v12, 4LL);
        free(v13);
        uint64_t v15 = v14;
        *(void *)&double v8 = SSFileLog(v4, @"%@").n128_u64[0];
      }
    }

    objc_msgSend(v3, "setError:", *(void *)(a1 + 40), v8, v15);
    [v3 setSessionState:8];
    return [*(id *)(a1 + 32) _notifyObserversOfSessionChange:v3];
  }

  return result;
}

id sub_10013930C(uint64_t a1)
{
  id v2 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  if (!v2) {
    id v2 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  unsigned int v3 = [v2 shouldLog];
  else {
    LODWORD(v4) = v3;
  }
  unsigned int v5 = (os_log_s *)[v2 OSLogObject];
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO)) {
    uint64_t v4 = v4;
  }
  else {
    v4 &= 2u;
  }
  if ((_DWORD)v4)
  {
    uint64_t v7 = objc_opt_class(*(void *)(a1 + 32));
    uint64_t v8 = *(void *)(a1 + 40);
    int v14 = 138412546;
    uint64_t v15 = v7;
    __int16 v16 = 2048;
    uint64_t v17 = v8;
    uint64_t v9 = _os_log_send_and_compose_impl( v4,  0LL,  0LL,  0LL,  &_mh_execute_header,  v5,  1LL,  "%@: Finish session with ID: %lld",  &v14,  22);
    if (v9)
    {
      uint64_t v10 = (void *)v9;
      uint64_t v11 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v9, 4LL);
      free(v10);
      uint64_t v13 = v11;
      *(void *)&double v6 = SSFileLog(v2, @"%@").n128_u64[0];
    }
  }

  return objc_msgSend(*(id *)(a1 + 32), "_endSessionWithID:state:", *(void *)(a1 + 40), 9, v6, v13);
}

void sub_10013957C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
}

void sub_100139594(void *a1)
{
  id v2 = -[NSNumber initWithLongLong:](objc_alloc(&OBJC_CLASS___NSNumber), "initWithLongLong:", a1[6]);
  *(void *)(*(void *)(a1[5] + 8) + 4+[SSVSubscriptionEntitlementsCoordinator setCachedSubscriptionEntitlements:]( SSVSubscriptionEntitlementsCoordinator,  "setCachedSubscriptionEntitlements:", 0) = [*(id *)(a1[4] + 8) objectForKey:v2];
}

id sub_1001395F4(uint64_t a1)
{
  return [*(id *)(a1 + 32) _notifyObserversOfHandlersChange];
}

void sub_1001396AC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_1001396C4(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _clientForProperties:*(void *)(a1 + 40)];
  if (v2)
  {
    unsigned int v3 = v2;
    uint64_t v4 = -[DownloadHandlerSession initWithSessionProperties:]( objc_alloc(&OBJC_CLASS___DownloadHandlerSession),  "initWithSessionProperties:",  *(void *)(a1 + 40));
    -[DownloadHandlerSession setActiveHandlerIdentifier:]( v4,  "setActiveHandlerIdentifier:",  [v3 handlerIdentifier]);
    -[DownloadHandlerSession setBlocksOtherDownloads:]( v4,  "setBlocksOtherDownloads:",  [v3 sessionsShouldBlockOtherDownloads]);
    -[DownloadHandlerSession setNeedsPowerAssertion:]( v4,  "setNeedsPowerAssertion:",  [v3 sessionsNeedPowerAssertion]);
    objc_msgSend( *(id *)(*(void *)(a1 + 32) + 56),  "setObject:forKey:",  v4,  +[NSNumber numberWithLongLong:]( NSNumber,  "numberWithLongLong:",  -[DownloadHandlerSession sessionID](v4, "sessionID")));
    *(void *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 4+[SSVSubscriptionEntitlementsCoordinator setCachedSubscriptionEntitlements:]( &OBJC_CLASS___SSVSubscriptionEntitlementsCoordinator,  "setCachedSubscriptionEntitlements:", 0LL) = -[DownloadHandlerSession copy](v4, "copy");
  }

id sub_100139810(uint64_t a1)
{
  id v2 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  if (!v2) {
    id v2 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  unsigned int v3 = [v2 shouldLog];
  else {
    LODWORD(v4) = v3;
  }
  unsigned int v5 = (os_log_s *)[v2 OSLogObject];
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO)) {
    uint64_t v4 = v4;
  }
  else {
    v4 &= 2u;
  }
  if ((_DWORD)v4)
  {
    uint64_t v7 = objc_opt_class(*(void *)(a1 + 32));
    uint64_t v8 = *(void *)(a1 + 40);
    int v14 = 138412546;
    uint64_t v15 = v7;
    __int16 v16 = 2048;
    uint64_t v17 = v8;
    uint64_t v9 = _os_log_send_and_compose_impl( v4,  0LL,  0LL,  0LL,  &_mh_execute_header,  v5,  1LL,  "%@: Pause session with ID: %lld",  &v14,  22);
    if (v9)
    {
      uint64_t v10 = (void *)v9;
      uint64_t v11 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v9, 4LL);
      free(v10);
      uint64_t v13 = v11;
      *(void *)&double v6 = SSFileLog(v2, @"%@").n128_u64[0];
    }
  }

  return objc_msgSend( *(id *)(a1 + 32),  "_sendMessage:forSessionID:replyBlock:",  1002,  *(void *)(a1 + 40),  0,  v6,  v13);
}

id sub_1001399D4(uint64_t a1)
{
  id v2 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  if (!v2) {
    id v2 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  unsigned int v3 = [v2 shouldLog];
  else {
    LODWORD(v4) = v3;
  }
  unsigned int v5 = (os_log_s *)[v2 OSLogObject];
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO)) {
    uint64_t v4 = v4;
  }
  else {
    v4 &= 2u;
  }
  if ((_DWORD)v4)
  {
    uint64_t v7 = objc_opt_class(*(void *)(a1 + 32));
    uint64_t v8 = *(void *)(a1 + 40);
    int v14 = 138412546;
    uint64_t v15 = v7;
    __int16 v16 = 2048;
    uint64_t v17 = v8;
    uint64_t v9 = _os_log_send_and_compose_impl( v4,  0LL,  0LL,  0LL,  &_mh_execute_header,  v5,  1LL,  "%@: Perform default authentication for session with ID: %lld",  &v14,  22);
    if (v9)
    {
      uint64_t v10 = (void *)v9;
      uint64_t v11 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v9, 4LL);
      free(v10);
      uint64_t v13 = v11;
      *(void *)&double v6 = SSFileLog(v2, @"%@").n128_u64[0];
    }
  }

  return objc_msgSend(*(id *)(a1 + 32), "_endSessionWithID:state:", *(void *)(a1 + 40), 3, v6, v13);
}

id sub_100139B94(uint64_t a1)
{
  id v2 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  if (!v2) {
    id v2 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  unsigned int v3 = [v2 shouldLog];
  else {
    LODWORD(v4) = v3;
  }
  unsigned int v5 = (os_log_s *)[v2 OSLogObject];
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO)) {
    uint64_t v4 = v4;
  }
  else {
    v4 &= 2u;
  }
  if ((_DWORD)v4)
  {
    uint64_t v7 = objc_opt_class(*(void *)(a1 + 32));
    uint64_t v8 = *(void *)(a1 + 40);
    int v14 = 138412546;
    uint64_t v15 = v7;
    __int16 v16 = 2048;
    uint64_t v17 = v8;
    uint64_t v9 = _os_log_send_and_compose_impl( v4,  0LL,  0LL,  0LL,  &_mh_execute_header,  v5,  1LL,  "%@: Reject space for authentication session with ID: %lld",  &v14,  22);
    if (v9)
    {
      uint64_t v10 = (void *)v9;
      uint64_t v11 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v9, 4LL);
      free(v10);
      uint64_t v13 = v11;
      *(void *)&double v6 = SSFileLog(v2, @"%@").n128_u64[0];
    }
  }

  return objc_msgSend(*(id *)(a1 + 32), "_endSessionWithID:state:", *(void *)(a1 + 40), 4, v6, v13);
}

id sub_100139D54(uint64_t a1)
{
  id v2 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  if (!v2) {
    id v2 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  unsigned int v3 = [v2 shouldLog];
  else {
    LODWORD(v4) = v3;
  }
  unsigned int v5 = (os_log_s *)[v2 OSLogObject];
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO)) {
    uint64_t v4 = v4;
  }
  else {
    v4 &= 2u;
  }
  if ((_DWORD)v4)
  {
    uint64_t v7 = objc_opt_class(*(void *)(a1 + 32));
    uint64_t v8 = *(void *)(a1 + 40);
    int v14 = 138412546;
    uint64_t v15 = v7;
    __int16 v16 = 2048;
    uint64_t v17 = v8;
    uint64_t v9 = _os_log_send_and_compose_impl( v4,  0LL,  0LL,  0LL,  &_mh_execute_header,  v5,  1LL,  "%@: Release session with ID: %lld",  &v14,  22);
    if (v9)
    {
      uint64_t v10 = (void *)v9;
      uint64_t v11 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v9, 4LL);
      free(v10);
      uint64_t v13 = v11;
      *(void *)&double v6 = SSFileLog(v2, @"%@").n128_u64[0];
    }
  }

  return objc_msgSend(*(id *)(a1 + 32), "_endSessionWithID:state:", *(void *)(a1 + 40), 10, v6, v13);
}

id sub_100139F14(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 40) removeObject:*(void *)(a1 + 40)];
}

void sub_100139F78(uint64_t a1)
{
  id v2 = -[NSNumber initWithLongLong:](objc_alloc(&OBJC_CLASS___NSNumber), "initWithLongLong:", *(void *)(a1 + 40));
  id v3 = [*(id *)(*(void *)(a1 + 32) + 8) objectForKey:v2];
  if (v3)
  {
    id v4 = v3;
    id v5 = [v3 resetDisavowedSessionProperties];
    if ([v5 count])
    {
      id v6 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
      if (!v6) {
        id v6 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
      }
      unsigned int v7 = [v6 shouldLog];
      else {
        LODWORD(v_Block_object_dispose(va, 8) = v7;
      }
      uint64_t v9 = (os_log_s *)[v6 OSLogObject];
      if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO)) {
        uint64_t v8 = v8;
      }
      else {
        v8 &= 2u;
      }
      if ((_DWORD)v8)
      {
        uint64_t v11 = objc_opt_class(*(void *)(a1 + 32));
        int v16 = 138412802;
        uint64_t v17 = v11;
        __int16 v18 = 2048;
        id v19 = [v5 count];
        __int16 v20 = 2112;
        id v21 = v4;
        uint64_t v12 = _os_log_send_and_compose_impl( v8,  0LL,  0LL,  0LL,  &_mh_execute_header,  v9,  1LL,  "%@: Reset %ld disavowed properties for client: %@",  &v16,  32);
        if (v12)
        {
          uint64_t v13 = (void *)v12;
          int v14 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v12, 4LL);
          free(v13);
          uint64_t v15 = v14;
          *(void *)&double v10 = SSFileLog(v6, @"%@").n128_u64[0];
        }
      }

      objc_msgSend(*(id *)(a1 + 32), "_notifyObserversOfHandlersChange", v10, v15);
    }
  }
}

id sub_10013A19C(uint64_t a1)
{
  id v2 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  if (!v2) {
    id v2 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  unsigned int v3 = [v2 shouldLog];
  else {
    LODWORD(v4) = v3;
  }
  id v5 = (os_log_s *)[v2 OSLogObject];
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO)) {
    uint64_t v4 = v4;
  }
  else {
    v4 &= 2u;
  }
  if ((_DWORD)v4)
  {
    uint64_t v7 = objc_opt_class(*(void *)(a1 + 32));
    uint64_t v8 = *(void *)(a1 + 40);
    int v14 = 138412546;
    uint64_t v15 = v7;
    __int16 v16 = 2048;
    uint64_t v17 = v8;
    uint64_t v9 = _os_log_send_and_compose_impl( v4,  0LL,  0LL,  0LL,  &_mh_execute_header,  v5,  1LL,  "%@: Retry session with ID: %lld",  &v14,  22);
    if (v9)
    {
      double v10 = (void *)v9;
      uint64_t v11 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v9, 4LL);
      free(v10);
      uint64_t v13 = v11;
      *(void *)&double v6 = SSFileLog(v2, @"%@").n128_u64[0];
    }
  }

  objc_msgSend(*(id *)(a1 + 32), "_sendMessage:forSessionID:replyBlock:", 1001, *(void *)(a1 + 40), 0, v6, v13);
  return [*(id *)(a1 + 32) _endSessionWithID:*(void *)(a1 + 40) state:7];
}

void sub_10013A3C4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_10013A3DC(void *a1)
{
  id v2 = -[NSNumber initWithLongLong:](objc_alloc(&OBJC_CLASS___NSNumber), "initWithLongLong:", a1[6]);
  *(void *)(*(void *)(a1[5] + 8) + 4+[SSVSubscriptionEntitlementsCoordinator setCachedSubscriptionEntitlements:]( SSVSubscriptionEntitlementsCoordinator,  "setCachedSubscriptionEntitlements:", 0) = objc_msgSend( objc_msgSend(*(id *)(a1[4] + 56), "objectForKey:", v2),  "copy");
}

void sub_10013A498(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _globalHandlerIDForClientID:*(void *)(a1 + 40)];
  uint64_t v3 = *(void *)(a1 + 48);
  id v4 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  id v5 = v4;
  if (v3)
  {
    if (!v4) {
      id v5 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v6 = [v5 shouldLog];
    else {
      LODWORD(v7) = v6;
    }
    uint64_t v8 = (os_log_s *)[v5 OSLogObject];
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO)) {
      uint64_t v7 = v7;
    }
    else {
      v7 &= 2u;
    }
    if ((_DWORD)v7)
    {
      uint64_t v9 = objc_opt_class(*(void *)(a1 + 32));
      uint64_t v11 = *(void *)(a1 + 40);
      uint64_t v10 = *(void *)(a1 + 48);
      int v26 = 138412802;
      uint64_t v27 = v9;
      __int16 v28 = 2048;
      uint64_t v29 = v10;
      __int16 v30 = 2112;
      uint64_t v31 = v11;
      uint64_t v12 = _os_log_send_and_compose_impl( v7,  0LL,  0LL,  0LL,  &_mh_execute_header,  v8,  1LL,  "%@: Using download handler %lld for client: %@",  &v26,  32);
      if (v12)
      {
        uint64_t v13 = (void *)v12;
        +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v12, 4LL);
        free(v13);
        SSFileLog(v5, @"%@");
      }
    }

    int v14 = -[NSNumber initWithLongLong:](objc_alloc(&OBJC_CLASS___NSNumber), "initWithLongLong:", *(void *)(a1 + 48));
    [*(id *)(*(void *)(a1 + 32) + 32) setObject:v14 forKey:*(void *)(a1 + 40)];
  }

  else
  {
    if (!v4) {
      id v5 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v15 = [v5 shouldLog];
    else {
      LODWORD(v16) = v15;
    }
    uint64_t v17 = (os_log_s *)[v5 OSLogObject];
    if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO)) {
      uint64_t v16 = v16;
    }
    else {
      v16 &= 2u;
    }
    if ((_DWORD)v16)
    {
      uint64_t v19 = objc_opt_class(*(void *)(a1 + 32));
      uint64_t v20 = *(void *)(a1 + 40);
      int v26 = 138412546;
      uint64_t v27 = v19;
      __int16 v28 = 2112;
      uint64_t v29 = v20;
      uint64_t v21 = _os_log_send_and_compose_impl( v16,  0LL,  0LL,  0LL,  &_mh_execute_header,  v17,  1LL,  "%@: Removing download handler for client: %@",  &v26,  22);
      if (v21)
      {
        uint64_t v22 = (void *)v21;
        uint64_t v23 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v21, 4LL);
        free(v22);
        __int16 v25 = v23;
        *(void *)&double v18 = SSFileLog(v5, @"%@").n128_u64[0];
      }
    }

    objc_msgSend(*(id *)(*(void *)(a1 + 32) + 32), "removeObjectForKey:", *(void *)(a1 + 40), v18, v25);
  }

  if (v2 != *(id *)(a1 + 48))
  {
    id v24 = [*(id *)(a1 + 32) _disconnectSessionsForHandlerID:v2];
    [*(id *)(a1 + 32) _notifyObserversOfHandlersChange];
    if ([v24 count]) {
      [*(id *)(a1 + 32) _notifyObserversOfSessionChanges:v24];
    }
  }

void sub_10013A7E8(uint64_t a1)
{
  id v4 = -[NSNumber initWithLongLong:](objc_alloc(&OBJC_CLASS___NSNumber), "initWithLongLong:", *(void *)(a1 + 48));
  id v2 = objc_msgSend(*(id *)(*(void *)(a1 + 32) + 56), "objectForKey:");
  if (v2)
  {
    id v3 = v2;
    [v2 setSessionPropertyValues:*(void *)(a1 + 40)];
    [*(id *)(a1 + 32) _notifyObserversOfSessionChange:v3];
  }
}

id sub_10013A8B0(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) _popDownloadSessionForSessionID:*(void *)(a1 + 48)];
  if (result)
  {
    id v3 = result;
    id v4 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v4) {
      id v4 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v5 = [v4 shouldLog];
    else {
      LODWORD(v6) = v5;
    }
    uint64_t v7 = (os_log_s *)[v4 OSLogObject];
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO)) {
      uint64_t v6 = v6;
    }
    else {
      v6 &= 2u;
    }
    if ((_DWORD)v6)
    {
      uint64_t v9 = objc_opt_class(*(void *)(a1 + 32));
      uint64_t v10 = *(void *)(a1 + 40);
      uint64_t v11 = *(void *)(a1 + 48);
      int v16 = 138412802;
      uint64_t v17 = v9;
      __int16 v18 = 2112;
      uint64_t v19 = v10;
      __int16 v20 = 2048;
      uint64_t v21 = v11;
      uint64_t v12 = _os_log_send_and_compose_impl( v6,  0LL,  0LL,  0LL,  &_mh_execute_header,  v7,  1LL,  "%@: Use credential: %@ for session with ID: %lld",  &v16,  32);
      if (v12)
      {
        uint64_t v13 = (void *)v12;
        int v14 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v12, 4LL);
        free(v13);
        unsigned int v15 = v14;
        *(void *)&double v8 = SSFileLog(v4, @"%@").n128_u64[0];
      }
    }

    objc_msgSend(v3, "setSessionState:", 5, v8, v15);
    [v3 setURLCredential:*(void *)(a1 + 40)];
    return [*(id *)(a1 + 32) _notifyObserversOfSessionChange:v3];
  }

  return result;
}

void sub_10013AAB0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) object];
  uint64_t v3 = objc_opt_class(&OBJC_CLASS___DownloadHandlerClient);
  if ((objc_opt_isKindOfClass(v2, v3) & 1) != 0)
  {
    id v4 = -[NSNumber initWithLongLong:]( [NSNumber alloc],  "initWithLongLong:",  [v2 handlerIdentifier]);
    id v5 = [*(id *)(*(void *)(a1 + 40) + 8) objectForKey:v4];
    if (v5)
    {
      uint64_t v6 = v5;
      id v7 = objc_msgSend( *(id *)(a1 + 40),  "_disconnectSessionsForHandlerID:",  -[NSNumber longLongValue](v4, "longLongValue"));
      [v6 setOutputConnectionWithConnection:0];
      [*(id *)(*(void *)(a1 + 40) + 8) removeObjectForKey:v4];
      [*(id *)(a1 + 40) _notifyObserversOfHandlersChange];
      if ([v7 count])
      {
        id v8 = [v6 clientIdentifier];
        id v9 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
        if (!v9) {
          id v9 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
        }
        unsigned int v10 = [v9 shouldLog];
        else {
          LODWORD(v11) = v10;
        }
        uint64_t v12 = (os_log_s *)[v9 OSLogObject];
        if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO)) {
          uint64_t v11 = v11;
        }
        else {
          v11 &= 2u;
        }
        if ((_DWORD)v11)
        {
          uint64_t v14 = objc_opt_class(*(void *)(a1 + 40));
          int v24 = 138412802;
          uint64_t v25 = v14;
          __int16 v26 = 2048;
          id v27 = [v7 count];
          __int16 v28 = 2112;
          id v29 = v8;
          uint64_t v15 = _os_log_send_and_compose_impl( v11,  0LL,  0LL,  0LL,  &_mh_execute_header,  v12,  1LL,  "%@: Disconnecting %lu sessions for client: %@ after 20 seconds",  &v24,  32);
          if (v15)
          {
            int v16 = (void *)v15;
            uint64_t v17 = +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v15,  4LL);
            free(v16);
            uint64_t v22 = v17;
            *(void *)&double v13 = SSFileLog(v9, @"%@").n128_u64[0];
          }
        }

        objc_msgSend(*(id *)(*(void *)(a1 + 40) + 16), "setObject:forKey:", v7, v8, v13, v22);
        __int16 v18 = +[SSWeakReference weakReferenceWithObject:]( &OBJC_CLASS___SSWeakReference,  "weakReferenceWithObject:",  *(void *)(a1 + 40));
        dispatch_time_t v19 = dispatch_time(0LL, 20000000000LL);
        uint64_t v20 = *(void *)(a1 + 40);
        uint64_t v21 = *(dispatch_queue_s **)(v20 + 24);
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472LL;
        block[2] = sub_10013AD74;
        block[3] = &unk_10034AF00;
        void block[4] = v20;
        void block[5] = v8;
        void block[6] = v18;
        dispatch_after(v19, v21, block);
      }
    }
  }

id sub_10013AD74(uint64_t a1)
{
  id v2 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  if (!v2) {
    id v2 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  unsigned int v3 = [v2 shouldLog];
  else {
    LODWORD(v4) = v3;
  }
  id v5 = (os_log_s *)[v2 OSLogObject];
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO)) {
    uint64_t v4 = v4;
  }
  else {
    v4 &= 2u;
  }
  if ((_DWORD)v4)
  {
    uint64_t v7 = objc_opt_class(*(void *)(a1 + 32));
    uint64_t v8 = *(void *)(a1 + 40);
    int v14 = 138412546;
    uint64_t v15 = v7;
    __int16 v16 = 2112;
    uint64_t v17 = v8;
    uint64_t v9 = _os_log_send_and_compose_impl( v4,  0LL,  0LL,  0LL,  &_mh_execute_header,  v5,  1LL,  "%@: Timing out sessions for client: %@",  &v14,  22);
    if (v9)
    {
      unsigned int v10 = (void *)v9;
      uint64_t v11 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v9, 4LL);
      free(v10);
      double v13 = v11;
      *(void *)&double v6 = SSFileLog(v2, @"%@").n128_u64[0];
    }
  }

  return objc_msgSend( objc_msgSend(*(id *)(a1 + 48), "object", v6, v13),  "_endDisconnectedSessionsForClientID:",  *(void *)(a1 + 40));
}

id sub_10013B0B4(id *a1, uint64_t a2, void *a3)
{
  if ([a3 activeHandlerIdentifier] != a1[6]) {
    return [a1[4] setObject:a3 forKey:a2];
  }
  [a3 setSessionState:7];
  return [a1[5] addObject:a3];
}

void sub_10013B278(uint64_t a1)
{
  __int128 v8 = 0u;
  __int128 v9 = 0u;
  __int128 v10 = 0u;
  __int128 v11 = 0u;
  id v2 = *(void **)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      for (uint64_t i = 0LL; i != v4; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v7 = *(void **)(*((void *)&v8 + 1) + 8LL * (void)i);
        if ((objc_opt_respondsToSelector(v7, "downloadHandlerManagerHandlersDidChange:") & 1) != 0) {
          [v7 downloadHandlerManagerHandlersDidChange:*(void *)(a1 + 40)];
        }
      }

      id v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }

    while (v4);
  }
}

void sub_10013B460(uint64_t a1)
{
  __int128 v8 = 0u;
  __int128 v9 = 0u;
  __int128 v10 = 0u;
  __int128 v11 = 0u;
  id v2 = *(void **)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      for (uint64_t i = 0LL; i != v4; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v7 = *(void **)(*((void *)&v8 + 1) + 8LL * (void)i);
        if ((objc_opt_respondsToSelector(v7, "downloadHandlerManager:sessionsDidChange:") & 1) != 0) {
          [v7 downloadHandlerManager:*(void *)(a1 + 40) sessionsDidChange:*(void *)(a1 + 48)];
        }
      }

      id v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }

    while (v4);
  }
}

uint64_t sub_10013B8C8(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_10013C1AC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, char a31)
{
}

uint64_t sub_10013C1F0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_10013C200(uint64_t a1)
{
}

void sub_10013C208(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  id v6 = a2;
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 downloadPhase]);
  id v8 = [*(id *)(a1 + 32) indexOfObject:v7];
  if ((uint64_t)v8 >= *(void *)(a1 + 88))
  {
    if (v8 == *(id *)(a1 + 96))
    {
      __int128 v11 = 0LL;
    }

    else
    {
      __int128 v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) _downloadSessionPropertiesWithDownloadPhase:v7]);
      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(+[DownloadHandlerManager handlerManager](&OBJC_CLASS___DownloadHandlerManager, "handlerManager"));
      double v13 = (void *)objc_claimAutoreleasedReturnValue([v12 openSessionWithProperties:v11]);

      if (v13)
      {
        int v14 = objc_alloc_init(&OBJC_CLASS___FinishDownloadResponse);
        uint64_t v15 = *(void *)(*(void *)(a1 + 72) + 8LL);
        __int16 v16 = *(void **)(v15 + 40);
        *(void *)(v15 + 40) = v14;

        [*(id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40) setDownloadHandlerSession:v13];
        objc_msgSend( *(id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40),  "setDownloadIdentifier:",  objc_msgSend(v11, "downloadIdentifier"));
        objc_msgSend( *(id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40),  "setMediaAssetIdentifier:",  objc_msgSend(v11, "assetIdentifier"));
        [*(id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40) setResult:5];
        [*(id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40) setDownloadHandle:*(void *)(a1 + 48)];
        *a4 = 1;

        goto LABEL_27;
      }
    }

    uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v17) {
      uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v18 = [v17 shouldLog];
    else {
      LODWORD(v19) = v18;
    }
    uint64_t v20 = (os_log_s *)objc_claimAutoreleasedReturnValue([v17 OSLogObject]);
    if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO)) {
      uint64_t v19 = v19;
    }
    else {
      v19 &= 2u;
    }
    if ((_DWORD)v19)
    {
      uint64_t v21 = (void *)objc_opt_class(*(void *)(a1 + 40));
      uint64_t v22 = *(void *)(a1 + 104);
      int v36 = 138412802;
      uint64_t v37 = v21;
      __int16 v38 = 2112;
      unsigned int v39 = v7;
      __int16 v40 = 2048;
      uint64_t v41 = v22;
      id v23 = v21;
      int v24 = (void *)_os_log_send_and_compose_impl( v19,  0LL,  0LL,  0LL,  &_mh_execute_header,  v20,  1LL,  "%@: Running download phase: %@ for download: %lld",  &v36,  32);

      if (!v24) {
        goto LABEL_20;
      }
      uint64_t v20 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v24,  4LL));
      free(v24);
      __int16 v30 = v20;
      SSFileLog(v17, @"%@");
    }

LABEL_20:
    uint64_t v25 = *(void **)(a1 + 56);
    v32[0] = _NSConcreteStackBlock;
    v32[1] = 3221225472LL;
    v32[2] = sub_10013C700;
    v32[3] = &unk_10034E500;
    uint64_t v35 = *(void *)(a1 + 104);
    id v33 = v7;
    id v34 = *(id *)(a1 + 64);
    [v25 modifyAsyncUsingTransactionBlock:v32];
    [v6 setDelegate:*(void *)(a1 + 40)];
    v31[0] = _NSConcreteStackBlock;
    v31[1] = 3221225472LL;
    v31[2] = sub_10013C7F0;
    v31[3] = &unk_10034DBC0;
    v31[4] = *(void *)(a1 + 72);
    [v6 setOutputBlock:v31];
    [*(id *)(a1 + 40) runSubOperation:v6 returningError:0];
    [v6 setDelegate:0];
    if ([*(id *)(a1 + 40) isCancelled])
    {
      [*(id *)(a1 + 40) lock];
      __int16 v26 = *(void **)(a1 + 40);
      if (v26[16] != -1LL)
      {
        id v27 = objc_alloc_init(&OBJC_CLASS___FinishDownloadResponse);
        uint64_t v28 = *(void *)(*(void *)(a1 + 72) + 8LL);
        id v29 = *(void **)(v28 + 40);
        *(void *)(v28 + 40) = v27;

        [*(id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40) setDownloadIdentifier:*(void *)(a1 + 104)];
        [*(id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40) setResult:*(void *)(*(void *)(a1 + 40) + 128)];
        [*(id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40) setDownloadHandle:*(void *)(a1 + 48)];
        __int16 v26 = *(void **)(a1 + 40);
      }

      objc_msgSend(v26, "unlock", v30);
    }

    else if ([*(id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40) result] == (id)4)
    {

      goto LABEL_2;
    }

    *a4 = 1;

    goto LABEL_27;
  }

LABEL_2:
  objc_msgSend(v6, "progressFraction", v30);
  if (v9 > 2.22044605e-16)
  {
    *(double *)(*(void *)(*(void *)(a1 + 80) + 8LL) + 24LL) = v9
    uint64_t v10 = OBJC_IVAR___ISOperation__progress;
    objc_msgSend( *(id *)(*(void *)(a1 + 40) + OBJC_IVAR___ISOperation__progress),  "setCurrentValue:",  (uint64_t)(*(double *)(*(void *)(*(void *)(a1 + 80) + 8) + 24)
              * (double)(uint64_t)[*(id *)(*(void *)(a1 + 40) + OBJC_IVAR___ISOperation__progress) maxValue]));
    [*(id *)(a1 + 40) _sendProgressToDelegate:*(void *)(*(void *)(a1 + 40) + v10)];
  }

uint64_t sub_10013C700(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc(&OBJC_CLASS___DownloadEntity);
  uint64_t v5 = a1[6];
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v3 database]);

  uint64_t v7 = -[DownloadEntity initWithPersistentID:inDatabase:](v4, "initWithPersistentID:inDatabase:", v5, v6);
  -[DownloadEntity setValue:forProperty:](v7, "setValue:forProperty:", a1[4], @"download_state.phase");
  id v8 = objc_alloc(&OBJC_CLASS___NSDictionary);
  double v9 = -[NSDictionary initWithObjectsAndKeys:]( v8,  "initWithObjectsAndKeys:",  a1[4],  SSDownloadPropertyDownloadPhase,  0LL);
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(+[DownloadController controller](&OBJC_CLASS___DownloadController, "controller"));
  [v10 notifyClientsOfPropertyChanges:v9 forDownloadID:a1[6] downloadKind:a1[5]];

  return 1LL;
}

void sub_10013C7F0(uint64_t a1, void *a2)
{
}

id sub_10013DB5C(uint64_t a1)
{
  return objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "object"), "cancel");
}

void sub_100140240(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v2) {
    id v2 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v3 = [v2 shouldLog];
  else {
    unsigned int v4 = v3;
  }
  uint64_t v5 = (os_log_s *)objc_claimAutoreleasedReturnValue([v2 OSLogObject]);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 & 2;
  }
  if (!(_DWORD)v6) {
    goto LABEL_12;
  }
  uint64_t v7 = *(void *)(a1 + 32);
  int v9 = 138543362;
  uint64_t v10 = v7;
  id v8 = (void *)_os_log_send_and_compose_impl( v6,  0LL,  0LL,  0LL,  &_mh_execute_header,  v5,  0LL,  "DaemonBiometricStore: [%{public}@] tokenUpdateDidFinish",  &v9,  12);

  if (v8)
  {
    uint64_t v5 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v8,  4LL));
    free(v8);
    SSFileLog(v2, @"%@");
LABEL_12:
  }

  CFPreferencesSetAppValue(@"BiometricTokenUpdateTime", 0LL, kSSUserDefaultsIdentifier);
}

void sub_100140488( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_1001404A0(uint64_t a1)
{
  uint64_t Current = (uint64_t)CFAbsoluteTimeGetCurrent();
  unsigned int v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLong:](&OBJC_CLASS___NSNumber, "numberWithLong:", Current));
  unsigned int v4 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v4) {
    unsigned int v4 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v5 = [v4 shouldLog];
  else {
    unsigned int v6 = v5;
  }
  uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue([v4 OSLogObject]);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v8 = v6;
  }
  else {
    uint64_t v8 = v6 & 2;
  }
  if ((_DWORD)v8)
  {
    uint64_t v9 = *(void *)(a1 + 32);
    int v46 = 138543618;
    uint64_t v47 = v9;
    __int16 v48 = 2114;
    unsigned int v49 = v3;
    LODWORD(v45) = 22;
    uint64_t v10 = (void *)_os_log_send_and_compose_impl( v8,  0LL,  0LL,  0LL,  &_mh_execute_header,  v7,  0LL,  "DaemonBiometricStore: [%{public}@] tokenUpdateShouldStart: Current Time: %{public}@",  &v46,  v45);

    if (!v10) {
      goto LABEL_13;
    }
    uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v10,  4LL));
    free(v10);
    uint64_t v43 = v7;
    SSFileLog(v4, @"%@");
  }

LABEL_13:
  HIBYTE(v45) = 0;
  __int128 v11 = (const __CFString *)kSSUserDefaultsIdentifier;
  CFIndex AppIntegerValue = CFPreferencesGetAppIntegerValue( @"BiometricTokenUpdateTime",  kSSUserDefaultsIdentifier,  (Boolean *)&v45 + 7);
  double v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLong:](&OBJC_CLASS___NSNumber, "numberWithLong:", AppIntegerValue));
  int v14 = HIBYTE(v45);
  uint64_t v15 = objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  __int16 v16 = (void *)v15;
  if (v14)
  {
    if (!v15) {
      __int16 v16 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v17 = objc_msgSend(v16, "shouldLog", v43);
    else {
      unsigned int v18 = v17;
    }
    uint64_t v19 = (os_log_s *)objc_claimAutoreleasedReturnValue([v16 OSLogObject]);
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v20 = v18;
    }
    else {
      uint64_t v20 = v18 & 2;
    }
    if ((_DWORD)v20)
    {
      uint64_t v21 = *(void *)(a1 + 32);
      int v46 = 138543618;
      uint64_t v47 = v21;
      __int16 v48 = 2114;
      unsigned int v49 = v13;
      LODWORD(v45) = 22;
      uint64_t v22 = (void *)_os_log_send_and_compose_impl( v20,  0LL,  0LL,  0LL,  &_mh_execute_header,  v19,  0LL,  "DaemonBiometricStore: [%{public}@] tokenUpdateShouldStart: Found value: %{public}@",  &v46,  v45);

      if (!v22) {
        goto LABEL_26;
      }
      uint64_t v19 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v22,  4LL));
      free(v22);
      unsigned int v44 = v19;
      SSFileLog(v16, @"%@");
    }

LABEL_26:
    if (Current - AppIntegerValue > 59) {
      goto LABEL_53;
    }
    id v23 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v23) {
      id v23 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v24 = objc_msgSend(v23, "shouldLog", v44);
    else {
      unsigned int v25 = v24;
    }
    __int16 v26 = (os_log_s *)objc_claimAutoreleasedReturnValue([v23 OSLogObject]);
    if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v27 = v25;
    }
    else {
      uint64_t v27 = v25 & 2;
    }
    if ((_DWORD)v27)
    {
      uint64_t v28 = *(void *)(a1 + 32);
      int v46 = 138543362;
      uint64_t v47 = v28;
      LODWORD(v45) = 12;
      id v29 = (void *)_os_log_send_and_compose_impl( v27,  0LL,  0LL,  0LL,  &_mh_execute_header,  v26,  0LL,  "DaemonBiometricStore: [%{public}@] tokenUpdateShouldStart: Should cancel update",  &v46,  v45);

      if (!v29)
      {
LABEL_39:

        *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = 0;
        goto LABEL_53;
      }

      __int16 v26 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v29,  4LL));
      free(v29);
      unsigned int v44 = v26;
      SSFileLog(v23, @"%@");
    }

    goto LABEL_39;
  }

  if (!v15) {
    __int16 v16 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v30 = objc_msgSend(v16, "shouldLog", v43);
  else {
    unsigned int v31 = v30;
  }
  unsigned int v32 = (os_log_s *)objc_claimAutoreleasedReturnValue([v16 OSLogObject]);
  if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v33 = v31;
  }
  else {
    uint64_t v33 = v31 & 2;
  }
  if (!(_DWORD)v33) {
    goto LABEL_51;
  }
  uint64_t v34 = *(void *)(a1 + 32);
  int v46 = 138543362;
  uint64_t v47 = v34;
  LODWORD(v45) = 12;
  uint64_t v35 = (void *)_os_log_send_and_compose_impl( v33,  0LL,  0LL,  0LL,  &_mh_execute_header,  v32,  0LL,  "DaemonBiometricStore: [%{public}@] tokenUpdateShouldStart: No value found",  &v46,  v45);

  if (v35)
  {
    unsigned int v32 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v35,  4LL));
    free(v35);
    unsigned int v44 = v32;
    SSFileLog(v16, @"%@");
LABEL_51:
  }

LABEL_53:
  if (*(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL))
  {
    int v36 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v36) {
      int v36 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v37 = objc_msgSend(v36, "shouldLog", v44);
    else {
      unsigned int v38 = v37;
    }
    unsigned int v39 = (os_log_s *)objc_claimAutoreleasedReturnValue([v36 OSLogObject]);
    if (os_log_type_enabled(v39, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v40 = v38;
    }
    else {
      uint64_t v40 = v38 & 2;
    }
    if ((_DWORD)v40)
    {
      uint64_t v41 = *(void *)(a1 + 32);
      int v46 = 138543618;
      uint64_t v47 = v41;
      __int16 v48 = 2114;
      unsigned int v49 = v3;
      LODWORD(v45) = 22;
      id v42 = (void *)_os_log_send_and_compose_impl( v40,  0LL,  0LL,  0LL,  &_mh_execute_header,  v39,  0LL,  "DaemonBiometricStore: [%{public}@] tokenUpdateShouldStart: Writing value: %{public}@",  &v46,  v45);

      if (!v42)
      {
LABEL_66:

        CFPreferencesSetAppValue(@"BiometricTokenUpdateTime", v3, v11);
        goto LABEL_67;
      }

      unsigned int v39 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v42,  4LL));
      free(v42);
      SSFileLog(v36, @"%@");
    }

    goto LABEL_66;
  }

LABEL_67:
}

void sub_100140B90( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_100140BA8(uint64_t a1)
{
  double Current = CFAbsoluteTimeGetCurrent();
  unsigned int v3 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v3) {
    unsigned int v3 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v4 = [v3 shouldLog];
  else {
    LODWORD(v5) = v4;
  }
  unsigned int v6 = (os_log_s *)objc_claimAutoreleasedReturnValue([v3 OSLogObject]);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v5 = v5;
  }
  else {
    v5 &= 2u;
  }
  if ((_DWORD)v5)
  {
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLong:](&OBJC_CLASS___NSNumber, "numberWithLong:", (uint64_t)Current));
    int v32 = 138543362;
    uint64_t v33 = v7;
    LODWORD(v31) = 12;
    uint64_t v8 = (void *)_os_log_send_and_compose_impl( v5,  0LL,  0LL,  0LL,  &_mh_execute_header,  v6,  0LL,  "DaemonBiometricStore: tokenUpdateState: Current time: %{public}@",  &v32,  v31);

    if (!v8) {
      goto LABEL_13;
    }
    unsigned int v6 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v8,  4LL));
    free(v8);
    id v29 = v6;
    SSFileLog(v3, @"%@");
  }

LABEL_13:
  HIBYTE(v31) = 0;
  CFIndex AppIntegerValue = CFPreferencesGetAppIntegerValue( @"BiometricTokenUpdateTime",  kSSUserDefaultsIdentifier,  (Boolean *)&v31 + 7);
  int v10 = HIBYTE(v31);
  uint64_t v11 = objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  uint64_t v12 = (void *)v11;
  if (v10)
  {
    if (!v11) {
      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v13 = objc_msgSend(v12, "shouldLog", v29);
    else {
      LODWORD(v14) = v13;
    }
    uint64_t v15 = (os_log_s *)objc_claimAutoreleasedReturnValue([v12 OSLogObject]);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v14 = v14;
    }
    else {
      v14 &= 2u;
    }
    if ((_DWORD)v14)
    {
      __int16 v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLong:](&OBJC_CLASS___NSNumber, "numberWithLong:", AppIntegerValue));
      int v32 = 138543362;
      uint64_t v33 = v16;
      LODWORD(v31) = 12;
      unsigned int v17 = (void *)_os_log_send_and_compose_impl( v14,  0LL,  0LL,  0LL,  &_mh_execute_header,  v15,  0LL,  "DaemonBiometricStore: tokenUpdateState: Found value: %{public}@",  &v32,  v31);

      if (!v17) {
        goto LABEL_26;
      }
      uint64_t v15 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v17,  4LL));
      free(v17);
      unsigned int v30 = v15;
      SSFileLog(v12, @"%@");
    }

LABEL_26:
    unsigned int v18 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v18) {
      unsigned int v18 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v19 = objc_msgSend(v18, "shouldLog", v30);
    else {
      unsigned int v20 = v19;
    }
    uint64_t v21 = (os_log_s *)objc_claimAutoreleasedReturnValue([v18 OSLogObject]);
    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v22 = v20;
    }
    else {
      uint64_t v22 = v20 & 2;
    }
    if ((_DWORD)v22)
    {
      LOWORD(v32) = 0;
      LODWORD(v31) = 2;
      id v23 = (void *)_os_log_send_and_compose_impl( v22,  0LL,  0LL,  0LL,  &_mh_execute_header,  v21,  0LL,  "DaemonBiometricStore: tokenUpdateState: Should cancel update",  &v32,  v31);

      if (!v23)
      {
LABEL_39:

        *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = 1LL;
        return;
      }

      uint64_t v21 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v23,  4LL));
      free(v23);
      SSFileLog(v18, @"%@");
    }

    goto LABEL_39;
  }

  if (!v11) {
    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v24 = objc_msgSend(v12, "shouldLog", v29);
  else {
    unsigned int v25 = v24;
  }
  __int16 v26 = (os_log_s *)objc_claimAutoreleasedReturnValue([v12 OSLogObject]);
  if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v27 = v25;
  }
  else {
    uint64_t v27 = v25 & 2;
  }
  if (!(_DWORD)v27) {
    goto LABEL_51;
  }
  LOWORD(v32) = 0;
  LODWORD(v31) = 2;
  uint64_t v28 = (void *)_os_log_send_and_compose_impl( v27,  0LL,  0LL,  0LL,  &_mh_execute_header,  v26,  0LL,  "DaemonBiometricStore: tokenUpdateState: No value found",  &v32,  v31);

  if (v28)
  {
    __int16 v26 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v28,  4LL));
    free(v28);
    SSFileLog(v12, @"%@");
LABEL_51:
  }
}

void sub_1001412E0(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  unsigned int v6 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  if ((a2 & 1) != 0)
  {
    uint64_t v7 = *(void *)(a1 + 32);
    uint64_t v8 = objc_opt_class(&OBJC_CLASS___NSString);
    uint64_t v9 = (void *)SSXPCDictionaryCopyObjectWithClass(v7, "1", v8);
    uint64_t v10 = *(void *)(a1 + 32);
    uint64_t v11 = objc_opt_class(&OBJC_CLASS___NSNumber);
    uint64_t v12 = (void *)SSXPCDictionaryCopyObjectWithClass(v10, "2", v11);
    BOOL v13 = xpc_dictionary_get_BOOL(*(xpc_object_t *)(a1 + 32), "3");
    if (v9)
    {
      BOOL v14 = v13;
      uint64_t v15 = objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
      __int16 v16 = (void *)v15;
      if (v12)
      {
        if (!v15) {
          __int16 v16 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
        }
        unsigned int v17 = [v16 shouldLog];
        else {
          LODWORD(v1_Block_object_dispose(va, 8) = v17;
        }
        unsigned int v19 = (os_log_s *)objc_claimAutoreleasedReturnValue([v16 OSLogObject]);
        if (os_log_type_enabled(v19, OS_LOG_TYPE_DEBUG)) {
          uint64_t v18 = v18;
        }
        else {
          v18 &= 2u;
        }
        unsigned int v49 = v12;
        if ((_DWORD)v18)
        {
          unsigned int v20 = (void *)objc_opt_class(*(void *)(a1 + 40));
          int v50 = 138543874;
          uint64_t v51 = v20;
          __int16 v52 = 2114;
          id v53 = v9;
          __int16 v54 = 2112;
          uint64_t v55 = v12;
          id v21 = v20;
          uint64_t v22 = (void *)_os_log_send_and_compose_impl( v18,  0LL,  0LL,  0LL,  &_mh_execute_header,  v19,  2LL,  "%{public}@: Looking up biometric HTTP headers for token: %{public}@, DSID: %@",  &v50,  32);

          if (!v22)
          {
LABEL_16:

            __int16 v16 = (void *)objc_claimAutoreleasedReturnValue(+[ISBiometricStore sharedInstance](&OBJC_CLASS___ISBiometricStore, "sharedInstance"));
            uint64_t v47 = v9;
            id v23 = (void *)objc_claimAutoreleasedReturnValue([v16 fetchContextFromCacheWithToken:v9 evict:v14]);
            __int16 v48 = (void *)objc_claimAutoreleasedReturnValue([v23 challenge]);
            unsigned int v24 = (void *)objc_claimAutoreleasedReturnValue([v23 signature]);
            unsigned int v25 = (void *)objc_claimAutoreleasedReturnValue([v23 xAppleAMDHeader]);
            __int16 v26 = (void *)objc_claimAutoreleasedReturnValue([v23 xAppleAMDMHeader]);
            uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue( objc_msgSend( v16,  "publicKeyDataForAccountIdentifier:purpose:error:",  v49,  objc_msgSend(v23, "isExtendedAction"),  0));
            uint64_t v28 = v27;
            if (v27)
            {
              id v29 = v27;
              unsigned int v30 = (void *)ISCopyEncodedBase64([v29 bytes], objc_msgSend(v29, "length"));
            }

            else
            {
              unsigned int v30 = 0LL;
            }

            uint64_t v43 = ISBiometricsHTTPHeaderValueForBiometricStateWithStore(0LL);
            unsigned int v44 = (void *)objc_claimAutoreleasedReturnValue(v43);
            if (v48) {
              -[NSMutableDictionary setObject:forKeyedSubscript:]( v6,  "setObject:forKeyedSubscript:",  v48,  SSHTTPHeaderXAppleTouchIDChallenge);
            }
            if (v24) {
              -[NSMutableDictionary setObject:forKeyedSubscript:]( v6,  "setObject:forKeyedSubscript:",  v24,  SSHTTPHeaderXAppleTouchIDSignature);
            }
            -[NSMutableDictionary setObject:forKeyedSubscript:]( v6,  "setObject:forKeyedSubscript:",  @"1",  SSHTTPHeaderXAppleTouchIDSignatureVersion,  v46);
            if (v30) {
              -[NSMutableDictionary setObject:forKeyedSubscript:]( v6,  "setObject:forKeyedSubscript:",  v30,  SSHTTPHeaderXAppleTouchIDPublicKey);
            }
            if (v44) {
              -[NSMutableDictionary setObject:forKeyedSubscript:]( v6,  "setObject:forKeyedSubscript:",  v44,  SSHTTPHeaderXAppleTouchIDState);
            }
            if (v25) {
              -[NSMutableDictionary setObject:forKeyedSubscript:]( v6,  "setObject:forKeyedSubscript:",  v25,  SSHTTPHeaderXAppleAMD);
            }
            if (v26) {
              -[NSMutableDictionary setObject:forKeyedSubscript:]( v6,  "setObject:forKeyedSubscript:",  v26,  SSHTTPHeaderXAppleAMDM);
            }

            uint64_t v9 = v47;
            uint64_t v12 = v49;
            goto LABEL_56;
          }

          unsigned int v19 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v22,  4LL));
          free(v22);
          int v46 = v19;
          SSFileLog(v16, @"%@");
        }

        goto LABEL_16;
      }

      if (!v15) {
        __int16 v16 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      unsigned int v39 = [v16 shouldLog];
      else {
        LODWORD(v40) = v39;
      }
      uint64_t v35 = (os_log_s *)objc_claimAutoreleasedReturnValue([v16 OSLogObject]);
      if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR)) {
        uint64_t v40 = v40;
      }
      else {
        v40 &= 2u;
      }
      if (!(_DWORD)v40) {
        goto LABEL_41;
      }
      uint64_t v41 = (void *)objc_opt_class(*(void *)(a1 + 40));
      int v50 = 138543362;
      uint64_t v51 = v41;
      id v37 = v41;
      uint64_t v38 = _os_log_send_and_compose_impl( v40,  0LL,  0LL,  0LL,  &_mh_execute_header,  v35,  16LL,  "%{public}@: Failed to find DSID",  &v50,  12);
    }

    else
    {
      __int16 v16 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
      if (!v16) {
        __int16 v16 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      unsigned int v33 = [v16 shouldLog];
      else {
        LODWORD(v34) = v33;
      }
      uint64_t v35 = (os_log_s *)objc_claimAutoreleasedReturnValue([v16 OSLogObject]);
      if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR)) {
        uint64_t v34 = v34;
      }
      else {
        v34 &= 2u;
      }
      if (!(_DWORD)v34) {
        goto LABEL_41;
      }
      int v36 = (void *)objc_opt_class(*(void *)(a1 + 40));
      int v50 = 138543362;
      uint64_t v51 = v36;
      id v37 = v36;
      uint64_t v38 = _os_log_send_and_compose_impl( v34,  0LL,  0LL,  0LL,  &_mh_execute_header,  v35,  16LL,  "%{public}@: Failed to find touchID continue token",  &v50,  12);
    }

    id v42 = (void *)v38;

    if (!v42)
    {
LABEL_56:

      int v32 = 0LL;
      goto LABEL_57;
    }

    uint64_t v35 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v42,  4LL));
    free(v42);
    int v46 = v35;
    SSFileLog(v16, @"%@");
LABEL_41:

    goto LABEL_56;
  }

  uint64_t v31 = SSError(SSErrorDomain, 107LL, 0LL, 0LL);
  int v32 = (void *)objc_claimAutoreleasedReturnValue(v31);
LABEL_57:
  uint64_t v45 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithDictionary:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithDictionary:",  v6,  v46));
  SSXPCDictionarySetObject(v5, "0", v45);

  SSXPCDictionarySetObject(v5, "1", v32);
}

void sub_1001419A4(uint64_t a1, char a2, void *a3)
{
  if ((a2 & 1) != 0)
  {
    uint64_t v5 = *(void *)(a1 + 32);
    id v6 = a3;
    uint64_t v7 = objc_opt_class(&OBJC_CLASS___NSString);
    uint64_t v8 = (void *)SSXPCDictionaryCopyObjectWithClass(v5, "1", v7);
    BOOL v9 = xpc_dictionary_get_BOOL(*(xpc_object_t *)(a1 + 32), "2");
    uint64_t v10 = objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    uint64_t v11 = (void *)v10;
    if (v8)
    {
      if (!v10) {
        uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      unsigned int v12 = [v11 shouldLog];
      else {
        LODWORD(v13) = v12;
      }
      BOOL v14 = (os_log_s *)objc_claimAutoreleasedReturnValue([v11 OSLogObject]);
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG)) {
        uint64_t v13 = v13;
      }
      else {
        v13 &= 2u;
      }
      if ((_DWORD)v13)
      {
        uint64_t v15 = (void *)objc_opt_class(*(void *)(a1 + 40));
        int v29 = 138543618;
        unsigned int v30 = v15;
        __int16 v31 = 2114;
        int v32 = v8;
        id v16 = v15;
        unsigned int v17 = (void *)_os_log_send_and_compose_impl( v13,  0LL,  0LL,  0LL,  &_mh_execute_header,  v14,  2LL,  "%{public}@: Looking up biometric authentication context for token: %{public}@",  &v29,  22);

        if (!v17)
        {
LABEL_15:

          uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(+[ISBiometricStore sharedInstance](&OBJC_CLASS___ISBiometricStore, "sharedInstance"));
          uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([v11 fetchContextFromCacheWithToken:v8 evict:v9]);
LABEL_30:

          uint64_t v22 = 0LL;
          goto LABEL_31;
        }

        BOOL v14 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v17,  4LL));
        free(v17);
        SSFileLog(v11, @"%@");
      }

      goto LABEL_15;
    }

    if (!v10) {
      uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v23 = [v11 shouldLog];
    else {
      LODWORD(v24) = v23;
    }
    unsigned int v25 = (os_log_s *)objc_claimAutoreleasedReturnValue([v11 OSLogObject]);
    if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
      uint64_t v24 = v24;
    }
    else {
      v24 &= 2u;
    }
    if ((_DWORD)v24)
    {
      __int16 v26 = (void *)objc_opt_class(*(void *)(a1 + 40));
      int v29 = 138543362;
      unsigned int v30 = v26;
      id v27 = v26;
      uint64_t v28 = (void *)_os_log_send_and_compose_impl( v24,  0LL,  0LL,  0LL,  &_mh_execute_header,  v25,  16LL,  "%{public}@: Failed to find touchID continue token",  &v29,  12);

      if (!v28)
      {
LABEL_29:
        uint64_t v18 = 0LL;
        goto LABEL_30;
      }

      unsigned int v25 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v28,  4LL));
      free(v28);
      SSFileLog(v11, @"%@");
    }

    goto LABEL_29;
  }

  uint64_t v19 = SSErrorDomain;
  id v20 = a3;
  uint64_t v21 = SSError(v19, 107LL, 0LL, 0LL);
  uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue(v21);
  uint64_t v18 = 0LL;
LABEL_31:
  SSXPCDictionarySetObject(a3, "0", v18);
  SSXPCDictionarySetObject(a3, "1", v22);
}

void sub_100141DB8(uint64_t a1, char a2, void *a3)
{
  if ((a2 & 1) != 0)
  {
    uint64_t v5 = *(void *)(a1 + 32);
    id v6 = a3;
    uint64_t v7 = objc_opt_class(&OBJC_CLASS___NSString);
    uint64_t v8 = (void *)SSXPCDictionaryCopyObjectWithClass(v5, "1", v7);
    uint64_t v9 = *(void *)(a1 + 32);
    uint64_t v10 = objc_opt_class(&OBJC_CLASS___NSNumber);
    uint64_t v11 = (void *)SSXPCDictionaryCopyObjectWithClass(v9, "2", v10);
    BOOL v12 = xpc_dictionary_get_BOOL(*(xpc_object_t *)(a1 + 32), "3");
    if (v8)
    {
      BOOL v13 = v12;
      uint64_t v14 = objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
      uint64_t v15 = (void *)v14;
      if (v11)
      {
        if (!v14) {
          uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
        }
        unsigned int v16 = [v15 shouldLog];
        else {
          LODWORD(v17) = v16;
        }
        uint64_t v18 = (os_log_s *)objc_claimAutoreleasedReturnValue([v15 OSLogObject]);
        if (os_log_type_enabled(v18, OS_LOG_TYPE_DEBUG)) {
          uint64_t v17 = v17;
        }
        else {
          v17 &= 2u;
        }
        if ((_DWORD)v17)
        {
          uint64_t v19 = (void *)objc_opt_class(*(void *)(a1 + 40));
          *(_DWORD *)uint64_t v43 = 138543874;
          *(void *)&void v43[4] = v19;
          *(_WORD *)&v43[12] = 2114;
          *(void *)&v43[14] = v8;
          __int16 v44 = 2112;
          uint64_t v45 = v11;
          id v20 = v19;
          uint64_t v21 = (void *)_os_log_send_and_compose_impl( v17,  0LL,  0LL,  0LL,  &_mh_execute_header,  v18,  2LL,  "%{public}@: Looking up biometric HTTP headers for token: %{public}@, DSID: %@",  v43,  32);

          if (!v21)
          {
LABEL_16:

            uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(+[ISBiometricStore sharedInstance](&OBJC_CLASS___ISBiometricStore, "sharedInstance"));
            uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue([v15 fetchContextFromCacheWithToken:v8 evict:v13]);
            unsigned int v23 = (void *)objc_claimAutoreleasedReturnValue([v22 challenge]);
            uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue([v22 signature]);
            unsigned int v25 = (void *)objc_claimAutoreleasedReturnValue( objc_msgSend( v15,  "publicKeyDataForAccountIdentifier:purpose:error:",  v11,  objc_msgSend(v22, "isExtendedAction"),  0));
            __int16 v26 = v25;
            if (v25)
            {
              id v27 = v25;
              uint64_t v28 = (void *)ISCopyEncodedBase64([v27 bytes], objc_msgSend(v27, "length"));
            }

            else
            {
              uint64_t v28 = 0LL;
            }

            unsigned int v33 = @"1";
            goto LABEL_45;
          }

          uint64_t v18 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v21,  4LL));
          free(v21);
          SSFileLog(v15, @"%@");
        }

        goto LABEL_16;
      }

      if (!v14) {
        uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      unsigned int v40 = [v15 shouldLog];
      else {
        LODWORD(v41) = v40;
      }
      int v36 = (os_log_s *)objc_claimAutoreleasedReturnValue([v15 OSLogObject]);
      if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR)) {
        uint64_t v41 = v41;
      }
      else {
        v41 &= 2u;
      }
      if (!(_DWORD)v41) {
        goto LABEL_41;
      }
      id v42 = (void *)objc_opt_class(*(void *)(a1 + 40));
      *(_DWORD *)uint64_t v43 = 138543362;
      *(void *)&void v43[4] = v42;
      id v38 = v42;
      uint64_t v39 = _os_log_send_and_compose_impl( v41,  0LL,  0LL,  0LL,  &_mh_execute_header,  v36,  16LL,  "%{public}@: Failed to find DSID",  v43,  12,  *(_OWORD *)v43);
    }

    else
    {
      uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
      if (!v15) {
        uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      unsigned int v34 = [v15 shouldLog];
      else {
        LODWORD(v35) = v34;
      }
      int v36 = (os_log_s *)objc_claimAutoreleasedReturnValue([v15 OSLogObject]);
      if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR)) {
        uint64_t v35 = v35;
      }
      else {
        v35 &= 2u;
      }
      if (!(_DWORD)v35) {
        goto LABEL_41;
      }
      id v37 = (void *)objc_opt_class(*(void *)(a1 + 40));
      *(_DWORD *)uint64_t v43 = 138543362;
      *(void *)&void v43[4] = v37;
      id v38 = v37;
      uint64_t v39 = _os_log_send_and_compose_impl( v35,  0LL,  0LL,  0LL,  &_mh_execute_header,  v36,  16LL,  "%{public}@: Failed to find touchID continue token",  v43,  12,  *(_OWORD *)v43);
    }

    unsigned int v23 = (void *)v39;

    if (!v23)
    {
      uint64_t v28 = 0LL;
      unsigned int v33 = 0LL;
      uint64_t v24 = 0LL;
      goto LABEL_45;
    }

    int v36 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v23,  4LL));
    free(v23);
    SSFileLog(v15, @"%@");
LABEL_41:

    uint64_t v28 = 0LL;
    unsigned int v33 = 0LL;
    uint64_t v24 = 0LL;
    unsigned int v23 = 0LL;
LABEL_45:

    int v32 = 0LL;
    goto LABEL_46;
  }

  uint64_t v29 = SSErrorDomain;
  id v30 = a3;
  uint64_t v31 = SSError(v29, 107LL, 0LL, 0LL);
  int v32 = (void *)objc_claimAutoreleasedReturnValue(v31);
  uint64_t v28 = 0LL;
  unsigned int v33 = 0LL;
  uint64_t v24 = 0LL;
  unsigned int v23 = 0LL;
LABEL_46:
  SSXPCDictionarySetObject(a3, "0", v23);
  SSXPCDictionarySetObject(a3, "1", v24);
  SSXPCDictionarySetObject(a3, "2", v33);
  SSXPCDictionarySetObject(a3, "3", v28);
  SSXPCDictionarySetObject(a3, "4", v32);
}

void sub_100142330(id a1, BOOL a2, OS_xpc_object *a3)
{
  id v6 = a3;
  if (a2)
  {
    unsigned int v4 = 0LL;
  }

  else
  {
    uint64_t v5 = SSError(SSErrorDomain, 107LL, 0LL, 0LL);
    unsigned int v4 = (void *)objc_claimAutoreleasedReturnValue(v5);
  }

  SSXPCDictionarySetObject(v6, "0", 0LL);
  SSXPCDictionarySetObject(v6, "1", v4);
}

void sub_1001423C8(id a1, BOOL a2, OS_xpc_object *a3)
{
  unsigned int v4 = a3;
  id v6 = v4;
  if (a2)
  {
    SSXPCDictionarySetObject(v4, "0", 0LL);
    SSXPCDictionarySetObject(v6, "1", 0LL);
  }

  else
  {
    uint64_t v5 = SSError(SSErrorDomain, 107LL, 0LL, 0LL);
  }
}

void sub_100142498(uint64_t a1, char a2, void *a3)
{
  if ((a2 & 1) != 0)
  {
    unsigned int v4 = *(objc_class **)(a1 + 32);
    id v5 = a3;
    id v6 = objc_alloc_init(v4);
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 identityMap]);
    id v8 = [v7 count];

    id v13 = 0LL;
  }

  else
  {
    uint64_t v9 = SSErrorDomain;
    id v10 = a3;
    uint64_t v11 = SSError(v9, 107LL, 0LL, 0LL);
    id v13 = (id)objc_claimAutoreleasedReturnValue(v11);
    id v8 = 0LL;
  }

  BOOL v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInteger:", v8));
  SSXPCDictionarySetObject(a3, "0", v12);

  SSXPCDictionarySetObject(a3, "1", v13);
}

void sub_100142608(uint64_t a1, char a2, void *a3)
{
  if ((a2 & 1) != 0)
  {
    uint64_t v5 = *(void *)(a1 + 32);
    id v6 = a3;
    uint64_t v7 = objc_opt_class(&OBJC_CLASS___NSNumber);
    id v8 = (void *)SSXPCDictionaryCopyObjectWithClass(v5, "1", v7);
    if (v8)
    {
      uint64_t v9 = objc_alloc_init(&OBJC_CLASS___DaemonBiometricStore);
      unint64_t v10 = -[DaemonBiometricStore keyCountForAccountIdentifier:](v9, "keyCountForAccountIdentifier:", v8);

LABEL_18:
      uint64_t v14 = 0LL;
      goto LABEL_19;
    }

    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v15) {
      uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v16 = [v15 shouldLog];
    else {
      LODWORD(v17) = v16;
    }
    uint64_t v18 = (os_log_s *)objc_claimAutoreleasedReturnValue([v15 OSLogObject]);
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
      uint64_t v17 = v17;
    }
    else {
      v17 &= 2u;
    }
    if ((_DWORD)v17)
    {
      uint64_t v19 = (void *)objc_opt_class(*(void *)(a1 + 40));
      int v22 = 138543362;
      unsigned int v23 = v19;
      id v20 = v19;
      uint64_t v21 = (void *)_os_log_send_and_compose_impl( v17,  0LL,  0LL,  0LL,  &_mh_execute_header,  v18,  16LL,  "%{public}@: Key count failed with no account identifier",  &v22,  12);

      if (!v21)
      {
LABEL_17:

        unint64_t v10 = 0LL;
        goto LABEL_18;
      }

      uint64_t v18 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v21,  4LL));
      free(v21);
      SSFileLog(v15, @"%@");
    }

    goto LABEL_17;
  }

  uint64_t v11 = SSErrorDomain;
  id v12 = a3;
  uint64_t v13 = SSError(v11, 107LL, 0LL, 0LL);
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
  unint64_t v10 = 0LL;
LABEL_19:
  xpc_dictionary_set_uint64(a3, "0", v10);
  SSXPCDictionarySetObject(a3, "1", v14);
}

void sub_1001428AC(uint64_t a1, char a2, void *a3)
{
  if ((a2 & 1) == 0)
  {
    uint64_t v33 = SSErrorDomain;
    id v34 = a3;
    uint64_t v35 = SSError(v33, 107LL, 0LL, 0LL);
    int v32 = (void *)objc_claimAutoreleasedReturnValue(v35);
    int64_t v13 = 5LL;
    goto LABEL_44;
  }

  uint64_t v5 = *(objc_class **)(a1 + 32);
  id v6 = a3;
  id v7 = objc_alloc_init(v5);
  id v8 = [v7 biometricState];
  uint64_t v9 = 5LL;
  BOOL v10 = v8 == 0LL;
  if (!v8) {
    uint64_t v9 = 2LL;
  }
  if (v8 == (id)1)
  {
    BOOL v10 = 0;
    uint64_t v9 = 0LL;
  }

  BOOL v11 = v8 != (id)2 && v8 == (id)1;
  BOOL v12 = v8 != (id)2 && v10;
  if (v8 == (id)2) {
    int64_t v13 = 1LL;
  }
  else {
    int64_t v13 = v9;
  }
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v14) {
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v15 = [v14 shouldLog];
  else {
    LODWORD(v16) = v15;
  }
  uint64_t v17 = (os_log_s *)objc_claimAutoreleasedReturnValue([v14 OSLogObject]);
  if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v16 = v16;
  }
  else {
    v16 &= 2u;
  }
  uint64_t v39 = a1;
  if (!(_DWORD)v16) {
    goto LABEL_26;
  }
  id v18 = v7;
  uint64_t v19 = (void *)objc_opt_class(*(void *)(a1 + 32));
  BOOL v38 = v11;
  BOOL v20 = v12;
  id v21 = v19;
  int v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", v13));
  int v40 = 138543618;
  uint64_t v41 = v19;
  id v7 = v18;
  __int16 v42 = 2114;
  uint64_t v43 = v22;
  unsigned int v23 = (void *)_os_log_send_and_compose_impl( v16,  0LL,  0LL,  0LL,  &_mh_execute_header,  v17,  0LL,  "%{public}@: Retrieved biometric state: %{public}@",  &v40,  22);

  BOOL v11 = v38;
  BOOL v12 = v20;

  if (v23)
  {
    uint64_t v17 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v23,  4LL));
    free(v23);
    int v36 = v17;
    SSFileLog(v14, @"%@");
LABEL_26:
  }

  uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v24) {
    uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v25 = objc_msgSend(v24, "shouldLog", v36);
  else {
    unsigned int v26 = v25;
  }
  id v27 = (os_log_s *)objc_claimAutoreleasedReturnValue([v24 OSLogObject]);
  if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v28 = v26;
  }
  else {
    uint64_t v28 = v26 & 2;
  }
  if (!(_DWORD)v28) {
    goto LABEL_40;
  }
  uint64_t v29 = (void *)objc_opt_class(*(void *)(v39 + 32));
  int v40 = 138543362;
  uint64_t v41 = v29;
  id v30 = v29;
  LODWORD(v37) = 12;
  uint64_t v31 = (void *)_os_log_send_and_compose_impl( v28,  0LL,  0LL,  0LL,  &_mh_execute_header,  v27,  0LL,  "%{public}@: Falling back to unknown state",  &v40,  v37);

  if (v31)
  {
    id v27 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v31,  4LL));
    free(v31);
    SSFileLog(v24, @"%@");
LABEL_40:
  }

  int64_t v13 = 5LL;
LABEL_42:

  int v32 = 0LL;
LABEL_44:
  xpc_dictionary_set_int64(a3, "0", v13);
  SSXPCDictionarySetObject(a3, "1", v32);
}

void sub_100142D1C(uint64_t a1, char a2, void *a3)
{
  if ((a2 & 1) != 0)
  {
    uint64_t v5 = *(objc_class **)(a1 + 40);
    id v6 = a3;
    id v7 = objc_alloc_init(v5);
    uint64_t v8 = *(void *)(a1 + 32);
    uint64_t v9 = objc_opt_class(&OBJC_CLASS___NSNumber);
    BOOL v10 = (void *)SSXPCDictionaryCopyObjectWithClass(v8, "1", v9);
    unsigned __int8 v11 = [v7 isIdentityMapValidForAccountIdentifier:v10];

    id v15 = 0LL;
  }

  else
  {
    uint64_t v12 = SSErrorDomain;
    id v13 = a3;
    uint64_t v14 = SSError(v12, 107LL, 0LL, 0LL);
    id v15 = (id)objc_claimAutoreleasedReturnValue(v14);
    unsigned __int8 v11 = 0;
  }

  xpc_dictionary_set_BOOL(a3, "0", v11);
  SSXPCDictionarySetObject(a3, "1", v15);
}

void sub_100142EB8(uint64_t a1, BOOL a2, void *a3)
{
  if (a2)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    id v7 = a3;
    uint64_t v8 = objc_opt_class(&OBJC_CLASS___NSNumber);
    uint64_t v9 = (void *)SSXPCDictionaryCopyObjectWithClass(v6, "1", v8);
    [*(id *)(a1 + 48) _resetAccount:v9 withConnection:*(void *)(a1 + 40)];

    id v13 = 0LL;
  }

  else
  {
    uint64_t v10 = SSErrorDomain;
    id v11 = a3;
    uint64_t v12 = SSError(v10, 107LL, 0LL, 0LL);
    id v13 = (id)objc_claimAutoreleasedReturnValue(v12);
  }

  xpc_dictionary_set_BOOL(a3, "0", a2);
  SSXPCDictionarySetObject(a3, "1", v13);
}

void sub_100143028(uint64_t a1, BOOL a2, void *a3)
{
  if (a2)
  {
    id v6 = a3;
    id v7 = (void *)objc_claimAutoreleasedReturnValue(+[SSAccountStore defaultStore](&OBJC_CLASS___SSAccountStore, "defaultStore"));
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v7 activeAccount]);

    uint64_t v9 = *(void **)(a1 + 40);
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v8 uniqueIdentifier]);
    [v9 _resetAccount:v10 withConnection:*(void *)(a1 + 32)];

    id v14 = 0LL;
  }

  else
  {
    uint64_t v11 = SSErrorDomain;
    id v12 = a3;
    uint64_t v13 = SSError(v11, 107LL, 0LL, 0LL);
    id v14 = (id)objc_claimAutoreleasedReturnValue(v13);
  }

  xpc_dictionary_set_BOOL(a3, "0", a2);
  SSXPCDictionarySetObject(a3, "1", v14);
}

void sub_1001431B0(uint64_t a1, BOOL a2, void *a3)
{
  if (a2)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    id v7 = a3;
    uint64_t v8 = objc_opt_class(&OBJC_CLASS___NSNumber);
    uint64_t v9 = (void *)SSXPCDictionaryCopyObjectWithClass(v6, "1", v8);
    id v10 = objc_alloc_init(*(Class *)(a1 + 40));
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v10 identityMap]);
    [v10 saveIdentityMap:v11 forAccountIdentifier:v9];

    id v15 = 0LL;
  }

  else
  {
    uint64_t v12 = SSErrorDomain;
    id v13 = a3;
    uint64_t v14 = SSError(v12, 107LL, 0LL, 0LL);
    id v15 = (id)objc_claimAutoreleasedReturnValue(v14);
  }

  xpc_dictionary_set_BOOL(a3, "0", a2);
  SSXPCDictionarySetObject(a3, "1", v15);
}

void sub_1001432C4(id a1, BOOL a2, OS_xpc_object *a3)
{
  uint64_t v4 = SSErrorDomain;
  uint64_t v5 = a3;
  if (a2)
  {
    uint64_t v6 = @"Not Available";
    id v7 = @"Set-allowed for biometrics has been deprecated";
    uint64_t v8 = v4;
    uint64_t v9 = 106LL;
  }

  else
  {
    uint64_t v8 = v4;
    uint64_t v9 = 107LL;
    uint64_t v6 = 0LL;
    id v7 = 0LL;
  }

  uint64_t v10 = SSError(v8, v9, v6, v7);
  id v11 = (id)objc_claimAutoreleasedReturnValue(v10);
  xpc_dictionary_set_BOOL(v5, "0", 0);
  SSXPCDictionarySetObject(v5, "1", v11);
}

void sub_100143420(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  uint64_t v36 = 0LL;
  uint64_t v37 = &v36;
  uint64_t v38 = 0x2020000000LL;
  char v39 = 0;
  uint64_t v30 = 0LL;
  uint64_t v31 = &v30;
  uint64_t v32 = 0x3032000000LL;
  uint64_t v33 = sub_100143918;
  id v34 = sub_100143928;
  id v35 = 0LL;
  if ((a2 & 1) != 0)
  {
    id v6 = objc_alloc_init(*(Class *)(a1 + 48));
    id v7 = (void *)SSXPCConnectionCopyClientIdentifier(*(void *)(a1 + 32), 0LL);
    if (xpc_dictionary_get_BOOL(*(xpc_object_t *)(a1 + 40), "1"))
    {
      uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
      if (!v8) {
        uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      LODWORD(v9) = [v8 shouldLog];
      unsigned int v10 = [v8 shouldLogToDisk];
      id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue([v8 OSLogObject]);
      uint64_t v12 = v11;
      if (v10) {
        LODWORD(v9) = v9 | 2;
      }
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT)) {
        uint64_t v9 = v9;
      }
      else {
        v9 &= 2u;
      }
      if ((_DWORD)v9)
      {
        id v13 = (void *)objc_opt_class(*(void *)(a1 + 48));
        int v40 = 138543618;
        uint64_t v41 = v13;
        __int16 v42 = 2114;
        uint64_t v43 = v7;
        id v14 = v13;
        id v15 = (void *)_os_log_send_and_compose_impl( v9,  0LL,  0LL,  0LL,  &_mh_execute_header,  v12,  0LL,  "%{public}@: Enable biometrics for client: %{public}@",  &v40,  22);

        if (!v15)
        {
LABEL_14:

          uint64_t v16 = objc_alloc_init(&OBJC_CLASS___DaemonBiometricOptInOperation);
          if ([v7 isEqualToString:@"com.apple.purplebuddy"]) {
            -[DaemonBiometricOptInOperation setRequiresStoreAuthentication:]( v16,  "setRequiresStoreAuthentication:",  0LL);
          }
          v29[0] = _NSConcreteStackBlock;
          v29[1] = 3221225472LL;
          v29[2] = sub_100143930;
          v29[3] = &unk_10034F9B0;
          v29[4] = &v36;
          v29[5] = &v30;
          -[DaemonBiometricOptInOperation setResultBlock:](v16, "setResultBlock:", v29, v28);
          uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue( +[StoreServicesRequestQueue sharedInstance]( &OBJC_CLASS___StoreServicesRequestQueue,  "sharedInstance"));
          [v17 addOperation:v16];

          -[DaemonBiometricOptInOperation waitUntilFinished](v16, "waitUntilFinished");
          goto LABEL_30;
        }

        uint64_t v12 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v15,  4LL));
        free(v15);
        uint64_t v28 = v12;
        SSFileLog(v8, @"%@");
      }

      goto LABEL_14;
    }

    BOOL v20 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v20) {
      BOOL v20 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    LODWORD(v21) = [v20 shouldLog];
    unsigned int v22 = [v20 shouldLogToDisk];
    unsigned int v23 = (os_log_s *)objc_claimAutoreleasedReturnValue([v20 OSLogObject]);
    uint64_t v24 = v23;
    if (v22) {
      LODWORD(v21) = v21 | 2;
    }
    if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v21 = v21;
    }
    else {
      v21 &= 2u;
    }
    if ((_DWORD)v21)
    {
      unsigned int v25 = (void *)objc_opt_class(*(void *)(a1 + 48));
      int v40 = 138543618;
      uint64_t v41 = v25;
      __int16 v42 = 2114;
      uint64_t v43 = v7;
      id v26 = v25;
      id v27 = (void *)_os_log_send_and_compose_impl( v21,  0LL,  0LL,  0LL,  &_mh_execute_header,  v24,  0LL,  "%{public}@: Disable biometrics for client: %{public}@",  &v40,  22);

      if (!v27)
      {
LABEL_29:

        [v6 setBiometricState:1];
        *((_BYTE *)v37 + 24) = 1;
LABEL_30:

        goto LABEL_31;
      }

      uint64_t v24 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v27,  4LL));
      free(v27);
      SSFileLog(v20, @"%@");
    }

    goto LABEL_29;
  }

  uint64_t v18 = SSError(SSErrorDomain, 107LL, 0LL, 0LL);
  uint64_t v19 = objc_claimAutoreleasedReturnValue(v18);
  id v6 = (id)v31[5];
  void v31[5] = v19;
LABEL_31:

  xpc_dictionary_set_BOOL(v5, "0", *((_BYTE *)v37 + 24));
  SSXPCDictionarySetObject(v5, "1", v31[5]);
  _Block_object_dispose(&v30, 8);

  _Block_object_dispose(&v36, 8);
}

void sub_1001438B8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100143918(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_100143928(uint64_t a1)
{
}

void sub_100143930(uint64_t a1, char a2, void *a3)
{
  *(_BYTE *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = a2;
  id v4 = [a3 copy];
  uint64_t v5 = *(void *)(*(void *)(a1 + 40) + 8LL);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v4;
}

void sub_100143A3C(_Unwind_Exception *a1)
{
}

void sub_100143A58(uint64_t a1, char a2, void *a3)
{
  uint64_t v5 = (id *)(a1 + 40);
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained(v5);
  if ((a2 & 1) != 0)
  {
    uint64_t v7 = *(void *)(a1 + 32);
    uint64_t v8 = objc_opt_class(&OBJC_CLASS___NSString);
    uint64_t v9 = (void *)SSXPCDictionaryCopyObjectWithClass(v7, "1", v8);
    [(id)objc_opt_class(WeakRetained) tokenUpdateDidFinishWithLogKey:v9];

    uint64_t v10 = 0LL;
  }

  else
  {
    uint64_t v11 = SSError(SSErrorDomain, 107LL, 0LL, 0LL);
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(v11);
  }

  SSXPCDictionarySetObject(v6, "0", v10);
}

void sub_100143BF8(_Unwind_Exception *a1)
{
}

void sub_100143C14(uint64_t a1, char a2, void *a3)
{
  uint64_t v5 = (id *)(a1 + 40);
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained(v5);
  if ((a2 & 1) != 0)
  {
    uint64_t v7 = *(void *)(a1 + 32);
    uint64_t v8 = objc_opt_class(&OBJC_CLASS___NSString);
    uint64_t v9 = (void *)SSXPCDictionaryCopyObjectWithClass(v7, "1", v8);
    unsigned __int8 v10 = [(id)objc_opt_class(WeakRetained) tokenUpdateShouldStartWithLogKey:v9];

    uint64_t v11 = 0LL;
  }

  else
  {
    uint64_t v12 = SSError(SSErrorDomain, 107LL, 0LL, 0LL);
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(v12);
    unsigned __int8 v10 = 1;
  }

  xpc_dictionary_set_BOOL(v6, "0", v10);
  SSXPCDictionarySetObject(v6, "1", v11);
}

void sub_100143DBC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_100143DD8(uint64_t a1, char a2, void *a3)
{
  id v4 = (id *)(a1 + 32);
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained(v4);
  id v10 = WeakRetained;
  if ((a2 & 1) != 0)
  {
    id v7 = [(id)objc_opt_class(WeakRetained) tokenUpdateState];
    uint64_t v8 = 0LL;
  }

  else
  {
    uint64_t v9 = SSError(SSErrorDomain, 107LL, 0LL, 0LL);
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(v9);
    id v7 = 0LL;
  }

  xpc_dictionary_set_int64(v5, "0", (int64_t)v7);
  SSXPCDictionarySetObject(v5, "1", v8);
}

void sub_100143F74(uint64_t a1)
{
  if ((SSXPCConnectionHasEntitlement(*(void *)(a1 + 32), kSSITunesStorePrivateEntitlement) & 1) == 0
    && (SSXPCConnectionHasEntitlement(*(void *)(a1 + 32), kSSITunesStoreEntitlementBiometrics) & 1) == 0)
  {
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v2) {
      uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v3 = [v2 shouldLog];
    else {
      LODWORD(v4) = v3;
    }
    id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue([v2 OSLogObject]);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v4 = v4;
    }
    else {
      v4 &= 2u;
    }
    if ((_DWORD)v4)
    {
      id v6 = (void *)objc_opt_class(*(void *)(a1 + 56));
      int v10 = 138543362;
      uint64_t v11 = v6;
      id v7 = v6;
      uint64_t v8 = (void *)_os_log_send_and_compose_impl( v4,  0LL,  0LL,  0LL,  &_mh_execute_header,  v5,  0LL,  "%{public}@: Rejecting message from unentitled client",  &v10,  12);

      if (!v8)
      {
LABEL_16:

        goto LABEL_17;
      }

      id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v8,  4LL));
      free(v8);
      SSFileLog(v2, @"%@");
    }

    goto LABEL_16;
  }

void sub_1001445B0(id a1)
{
  dispatch_queue_t v1 = dispatch_queue_create("com.apple.itunesstored.DaemonBiometricStore.updateToken", 0LL);
  uint64_t v2 = (void *)qword_1003A3518;
  qword_1003A3518 = (uint64_t)v1;
}

void sub_100144830( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_100144848(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_100144858(uint64_t a1)
{
}

void sub_100144860(uint64_t a1, void *a2)
{
  id v9 = a2;
  uint64_t v3 = objc_claimAutoreleasedReturnValue([v9 objectForKey:*(void *)(a1 + 32)]);
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8LL);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;

  if (!*(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL))
  {
    dispatch_semaphore_t v6 = dispatch_semaphore_create(0LL);
    uint64_t v7 = *(void *)(*(void *)(a1 + 40) + 8LL);
    uint64_t v8 = *(void **)(v7 + 40);
    *(void *)(v7 + 40) = v6;

    [v9 setObject:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) forKey:*(void *)(a1 + 32)];
  }
}

void sub_1001449BC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_1001449D4(uint64_t a1, void *a2)
{
  id v9 = a2;
  uint64_t v3 = objc_claimAutoreleasedReturnValue([v9 objectForKey:*(void *)(a1 + 32)]);
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8LL);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;

  if (*(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL))
  {
    [v9 removeObjectForKey:*(void *)(a1 + 32)];
  }

  else
  {
    dispatch_semaphore_t v6 = dispatch_semaphore_create(0LL);
    uint64_t v7 = *(void *)(*(void *)(a1 + 40) + 8LL);
    uint64_t v8 = *(void **)(v7 + 40);
    *(void *)(v7 + 40) = v6;

    [v9 setObject:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) forKey:*(void *)(a1 + 32)];
  }
}

id sub_100144D40(uint64_t a1, void *a2)
{
  return [a2 removeObjectForKey:*(void *)(*(void *)(a1 + 32) + 24)];
}

void sub_100144DF8(id a1)
{
  dispatch_queue_t v1 = dispatch_queue_create("com.apple.itunesstored.DelayedGotoSemaphore", 0LL);
  uint64_t v2 = (void *)qword_1003A3528;
  qword_1003A3528 = (uint64_t)v1;

  uint64_t v3 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  uint64_t v4 = (void *)qword_1003A3530;
  qword_1003A3530 = (uint64_t)v3;
}

uint64_t sub_100144E40(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_100145108(uint64_t a1)
{
  else {
    return 6 - a1;
  }
}

uint64_t sub_100145764(uint64_t result)
{
  if (result)
  {
    dispatch_queue_t v1 = (void *)result;
    if ([(id)result isEqualToString:SSDownloadPhaseWaiting])
    {
      return 0LL;
    }

    else if ([v1 isEqualToString:SSDownloadPhaseCanceled])
    {
      return 1LL;
    }

    else if ([v1 isEqualToString:SSDownloadPhaseFailed])
    {
      return 2LL;
    }

    else if ([v1 isEqualToString:SSDownloadPhaseFinished])
    {
      return 3LL;
    }

    else if ([v1 isEqualToString:SSDownloadPhasePaused])
    {
      return 4LL;
    }

    else
    {
      return 5LL;
    }
  }

  return result;
}

uint64_t sub_1001467D4(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = *(void **)(a1 + 32);
  id v6 = a3;
  [v5 setSuccess:a2];
  [*(id *)(a1 + 32) setError:v6];

  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
}

__CFString *sub_100146868()
{
  return @"SKErrorDomain";
}

uint64_t sub_100146888()
{
  return objc_opt_class(&OBJC_CLASS___SKDownloadChangeset);
}

uint64_t sub_100146894()
{
  return objc_opt_class(&OBJC_CLASS___SKDownload);
}

uint64_t sub_1001468A0()
{
  return objc_opt_class(&OBJC_CLASS___SKMutablePayment);
}

uint64_t sub_1001468AC()
{
  return objc_opt_class(&OBJC_CLASS___SKPaymentDiscount);
}

uint64_t sub_1001468B8()
{
  return objc_opt_class(&OBJC_CLASS___SKPaymentQueueClient);
}

uint64_t sub_1001468C4()
{
  return objc_opt_class(&OBJC_CLASS___SKPaymentTransaction);
}

uint64_t sub_1001468D0()
{
  return objc_opt_class(&OBJC_CLASS___SKProductSubscriptionPeriod);
}

uint64_t sub_1001468DC()
{
  return objc_opt_class(&OBJC_CLASS___SKProduct);
}

uint64_t sub_1001468E8()
{
  return objc_opt_class(&OBJC_CLASS___SKProductDiscount);
}

uint64_t sub_1001468F4()
{
  return objc_opt_class(&OBJC_CLASS___SKProductsResponse);
}

void sub_100146F78( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
}

uint64_t sub_100146FA0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_100146FB0(uint64_t a1)
{
}

void sub_100146FB8(uint64_t a1, int a2, id obj)
{
  id v5 = obj;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

id sub_100147FA8(void *a1)
{
  id v1 = a1;
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue( +[LSApplicationProxy applicationProxyForIdentifier:]( &OBJC_CLASS___LSApplicationProxy,  "applicationProxyForIdentifier:",  v1));
  uint64_t v3 = (__CFString *)objc_claimAutoreleasedReturnValue([v2 shortVersionString]);
  if (!v3)
  {
    uint64_t v3 = (__CFString *)objc_claimAutoreleasedReturnValue([v2 bundleVersion]);
    if (!v3)
    {
      uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue( +[LSBundleProxy bundleProxyForIdentifier:]( &OBJC_CLASS___LSBundleProxy,  "bundleProxyForIdentifier:",  v1));
      uint64_t v5 = objc_claimAutoreleasedReturnValue([v4 bundleVersion]);

      if (v5) {
        uint64_t v3 = (__CFString *)v5;
      }
      else {
        uint64_t v3 = @"1.0";
      }
    }
  }

  id v6 = (void *)objc_claimAutoreleasedReturnValue(+[SSDevice currentDevice](&OBJC_CLASS___SSDevice, "currentDevice"));
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 userAgentWithBundleIdentifier:v1 version:v3]);

  return v7;
}

void sub_100148BD8(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
  {
    objc_begin_catch(exception_object);
    JUMPOUT(0x100148B24LL);
  }

  _Unwind_Resume(exception_object);
}

void sub_1001490E8(uint64_t a1, void *a2)
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([a2 identifier]);
  if (v3)
  {
    uint64_t v4 = v3;
    [*(id *)(a1 + 32) addObject:v3];
    uint64_t v3 = v4;
  }
}

void sub_10014A54C(uint64_t a1, void *a2)
{
  id v5 = a2;
  uint64_t v3 = objc_autoreleasePoolPush();
  id v4 = [*(id *)(a1 + 32) _newSoftwareLibraryItemWithApplicationRecord:v5];
  if (v4) {
    [*(id *)(a1 + 40) addObject:v4];
  }

  objc_autoreleasePoolPop(v3);
}

id sub_10014B148(uint64_t a1, void *a2, void *a3)
{
  id v4 = *(void **)(a1 + 32);
  id v5 = [a2 componentsSeparatedByString:@"$$"];
  uint64_t v6 = (uint64_t)[v5 count];
  if (v6 < 2)
  {
    id v10 = v4;
  }

  else
  {
    uint64_t v7 = 0LL;
    uint64_t v8 = v6 - 1;
    do
    {
      id v9 = [v5 objectAtIndex:v7];
      id v10 = [v4 objectForKey:v9];
      if (!v10)
      {
        id v10 = +[NSMutableDictionary dictionary](&OBJC_CLASS___NSMutableDictionary, "dictionary");
        [v4 setObject:v10 forKey:v9];
      }

      ++v7;
      id v4 = v10;
    }

    while (v8 != v7);
  }

  unsigned int v11 = objc_msgSend(a3, "isEqual:", +[NSNull null](NSNull, "null"));
  id v12 = [v5 lastObject];
  if (v11) {
    return [v10 removeObjectForKey:v12];
  }
  else {
    return [v10 setObject:a3 forKey:v12];
  }
}

void sub_10014D8AC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v7) {
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v8 = [v7 shouldLog];
  else {
    LODWORD(v9) = v8;
  }
  id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue([v7 OSLogObject]);
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v9 = v9;
  }
  else {
    v9 &= 2u;
  }
  if (!(_DWORD)v9) {
    goto LABEL_12;
  }
  unsigned int v11 = (void *)objc_opt_class(*(void *)(a1 + 32));
  int v14 = 138543874;
  uint64_t v15 = v11;
  __int16 v16 = 2112;
  id v17 = v5;
  __int16 v18 = 2112;
  id v19 = v6;
  id v12 = v11;
  uint64_t v13 = (void *)_os_log_send_and_compose_impl( v9,  0LL,  0LL,  0LL,  &_mh_execute_header,  v10,  0LL,  "[%{public}@]: Issued New Book Purchase Request resulting in downloadID: %@ error: %@",  &v14,  32);

  if (v13)
  {
    id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v13,  4LL));
    free(v13);
    SSFileLog(v7, @"%@");
LABEL_12:
  }
}

void sub_10014DA60(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v7) {
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v8 = [v7 shouldLog];
  else {
    LODWORD(v9) = v8;
  }
  id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue([v7 OSLogObject]);
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v9 = v9;
  }
  else {
    v9 &= 2u;
  }
  if (!(_DWORD)v9) {
    goto LABEL_12;
  }
  unsigned int v11 = (void *)objc_opt_class(*(void *)(a1 + 32));
  int v14 = 138543874;
  uint64_t v15 = v11;
  __int16 v16 = 2112;
  id v17 = v5;
  __int16 v18 = 2112;
  id v19 = v6;
  id v12 = v11;
  uint64_t v13 = (void *)_os_log_send_and_compose_impl( v9,  0LL,  0LL,  0LL,  &_mh_execute_header,  v10,  0LL,  "[%{public}@]: Issued download request with buyParameters resulting in downloadID: %@ error: %@",  &v14,  32);

  if (v13)
  {
    id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v13,  4LL));
    free(v13);
    SSFileLog(v7, @"%@");
LABEL_12:
  }
}

void sub_10014DC14(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v7) {
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v8 = [v7 shouldLog];
  else {
    LODWORD(v9) = v8;
  }
  id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue([v7 OSLogObject]);
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v9 = v9;
  }
  else {
    v9 &= 2u;
  }
  if (!(_DWORD)v9) {
    goto LABEL_12;
  }
  unsigned int v11 = (void *)objc_opt_class(*(void *)(a1 + 32));
  int v14 = 138543874;
  uint64_t v15 = v11;
  __int16 v16 = 2112;
  id v17 = v5;
  __int16 v18 = 2112;
  id v19 = v6;
  id v12 = v11;
  uint64_t v13 = (void *)_os_log_send_and_compose_impl( v9,  0LL,  0LL,  0LL,  &_mh_execute_header,  v10,  0LL,  "[%{public}@]: Issued download request with permalink resulting in downloadID: %@ error: %@",  &v14,  32);

  if (v13)
  {
    id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v13,  4LL));
    free(v13);
    SSFileLog(v7, @"%@");
LABEL_12:
  }
}

LABEL_76:
LABEL_77:
}

void sub_10014E534(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v7) {
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v8 = [v7 shouldLog];
  else {
    LODWORD(v9) = v8;
  }
  id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue([v7 OSLogObject]);
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v9 = v9;
  }
  else {
    v9 &= 2u;
  }
  if (!(_DWORD)v9) {
    goto LABEL_12;
  }
  unsigned int v11 = (void *)objc_opt_class(*(void *)(a1 + 32));
  int v14 = 138543874;
  uint64_t v15 = v11;
  __int16 v16 = 2112;
  id v17 = v5;
  __int16 v18 = 2112;
  id v19 = v6;
  id v12 = v11;
  uint64_t v13 = (void *)_os_log_send_and_compose_impl( v9,  0LL,  0LL,  0LL,  &_mh_execute_header,  v10,  0LL,  "[%{public}@]: Issued download restore request resulting in downloadID: %@ error: %@",  &v14,  32);

  if (v13)
  {
    id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v13,  4LL));
    free(v13);
    SSFileLog(v7, @"%@");
LABEL_12:
  }
}

void sub_10014EAEC(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v5 = objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  id v6 = (void *)v5;
  if (v4)
  {
    if (!v5) {
      id v6 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v7 = [v6 shouldLog];
    else {
      LODWORD(v_Block_object_dispose(va, 8) = v7;
    }
    uint64_t v9 = (os_log_s *)objc_claimAutoreleasedReturnValue([v6 OSLogObject]);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      uint64_t v8 = v8;
    }
    else {
      v8 &= 2u;
    }
    if (!(_DWORD)v8) {
      goto LABEL_24;
    }
    id v10 = (void *)objc_opt_class(*(void *)(a1 + 32));
    *(_DWORD *)id v17 = 138543618;
    *(void *)&v17[4] = v10;
    *(_WORD *)&v17[12] = 2112;
    *(void *)&v17[14] = v4;
    id v11 = v10;
    uint64_t v12 = _os_log_send_and_compose_impl( v8,  0LL,  0LL,  0LL,  &_mh_execute_header,  v9,  16LL,  "[%{public}@]: Error from bookassetd when processing automatic downloads: %@",  v17,  22,  *(_OWORD *)v17,  *(void *)&v17[16]);
  }

  else
  {
    if (!v5) {
      id v6 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v13 = [v6 shouldLog];
    else {
      LODWORD(v14) = v13;
    }
    uint64_t v9 = (os_log_s *)objc_claimAutoreleasedReturnValue([v6 OSLogObject]);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v14 = v14;
    }
    else {
      v14 &= 2u;
    }
    if (!(_DWORD)v14) {
      goto LABEL_24;
    }
    uint64_t v15 = (void *)objc_opt_class(*(void *)(a1 + 32));
    *(_DWORD *)id v17 = 138543362;
    *(void *)&v17[4] = v15;
    id v11 = v15;
    uint64_t v12 = _os_log_send_and_compose_impl( v14,  0LL,  0LL,  0LL,  &_mh_execute_header,  v9,  0LL,  "[%{public}@]: bookassetd processed automatic downloads",  v17,  12,  *(void *)v17,  *(_OWORD *)&v17[8]);
  }

  __int16 v16 = (void *)v12;

  if (v16)
  {
    uint64_t v9 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v16,  4LL));
    free(v16);
    SSFileLog(v6, @"%@");
LABEL_24:
  }
}

uint64_t sub_10014F3DC(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

LABEL_94:
  }

  else
  {
    id v102 = 0LL;
  }

  id v85 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig", v99));
  if (!v85) {
    id v85 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  __int16 v86 = [v85 shouldLog];
  else {
    id v87 = v86;
  }
  __int16 v88 = (os_log_s *)objc_claimAutoreleasedReturnValue([v85 OSLogObject]);
  if (os_log_type_enabled(v88, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v89 = v87;
  }
  else {
    uint64_t v89 = v87 & 2;
  }
  if (!(_DWORD)v89)
  {
    __int16 v90 = (id *)v114;
    goto LABEL_107;
  }

  __int16 v90 = (id *)v114;
  id v91 = (void *)objc_opt_class(v114);
  double v92 = v91;
  __int16 v93 = (void *)objc_claimAutoreleasedReturnValue(-[RedeemCodesOperation logCorrelationKey](v114, "logCorrelationKey"));
  uint64_t v94 = -[NSMutableDictionary count](v104, "count");
  int v95 = -[NSMutableDictionary count](v106, "count");
  v134 = 138544130;
  v135 = v91;
  v136 = 2114;
  v137 = v93;
  v138 = 2048;
  v139 = (NSUInteger)v94;
  v140 = 2048;
  v141 = v95;
  LODWORD(v100) = 42;
  v96 = (void *)_os_log_send_and_compose_impl( v89,  0LL,  0LL,  0LL,  &_mh_execute_header,  v88,  0LL,  "%{public}@: [%{public}@] Redeemed %lu codes with %lu failures",  &v134,  v100);

  if (v96)
  {
    __int16 v88 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v96,  4LL));
    free(v96);
    SSFileLog(v85, @"%@");
LABEL_107:
  }

  [v90 lock];
  v97 = objc_alloc_init(&OBJC_CLASS___SSRedeemCodesResponse);
  id v98 = v90[20];
  v90[20] = v97;

  [v90[20] setCodeResponses:v108];
  [v90[20] setFailedCodes:v106];
  [v90[20] setRedeemedCodes:v104];
  [v90 unlock];
  [v90 setSuccess:1];
}

LABEL_118:
      if (v62 != (id)++v66) {
        continue;
      }
      break;
    }

    __int16 v62 = [v126 countByEnumeratingWithState:&v128 objects:v142 count:16];
    if (v62) {
      continue;
    }
    break;
  }

uint64_t sub_100152F40(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

uint64_t DaemonPBFusePreferencesReadFrom(void *a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    uint64_t v6 = 0LL;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1LL || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        LODWORD(v6) = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      LODWORD(v6) = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      break;
    }
    if ((v6 & 0x7FFF8) == 8)
    {
      uint64_t v12 = objc_alloc_init(&OBJC_CLASS___DaemonPBFuseItemPreference);
      [a1 addPreferences:v12];
      if (!PBReaderPlaceMark(a2, v14) || (DaemonPBFuseItemPreferenceReadFrom((uint64_t)v12, a2) & 1) == 0)
      {

        return 0LL;
      }

      PBReaderRecallMark(a2, v14);
    }

    else
    {
      uint64_t result = PBReaderSkipValueWithTag(a2, (unsigned __int16)(v6 >> 3));
      if (!(_DWORD)result) {
        return result;
      }
    }
  }

  return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

id sub_100153DC4(uint64_t a1)
{
  id result = objc_alloc_init((Class)objc_opt_class(*(void *)(a1 + 32)));
  qword_1003A3538 = (uint64_t)result;
  return result;
}

void sub_100153EDC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_100153EF4(uint64_t a1, uint64_t a2)
{
}

void sub_100153F04(uint64_t a1)
{
}

uint64_t sub_100153F10(uint64_t a1, void *a2)
{
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 4+[SSVSubscriptionEntitlementsCoordinator setCachedSubscriptionEntitlements:]( &OBJC_CLASS___SSVSubscriptionEntitlementsCoordinator,  "setCachedSubscriptionEntitlements:", 0LL) = a2;
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

uint64_t sub_100153FB0(uint64_t a1)
{
  if ((SSXPCConnectionHasEntitlement(a1, kSSITunesStorePrivateEntitlement) & 1) != 0) {
    return 1LL;
  }
  else {
    return SSXPCConnectionHasEntitlement(a1, kSSITunesStoreEntitlementKeyValueStore);
  }
}

void sub_1001541B4(uint64_t a1, uint64_t a2)
{
  char v4 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = objc_opt_class(&OBJC_CLASS___NSString);
  uint64_t v7 = SSXPCDictionaryCopyCFObjectWithClass(v5, "1", v6);
  if (v7)
  {
    char v8 = (void *)v7;
    xpc_object_t value = xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 32), "2");
    if (value)
    {
      xpc_object_t v10 = value;
      if (xpc_get_type(value) == (xpc_type_t)&_xpc_type_array)
      {
        id v11 = *(void **)(*(void *)(a1 + 40) + 16LL);
        v12[0] = _NSConcreteStackBlock;
        v12[1] = 3221225472LL;
        v12[2] = sub_1001542B4;
        v12[3] = &unk_10034FBF8;
        void v12[4] = v10;
        void v12[5] = v8;
        void v12[6] = v4;
        [v11 readUsingSessionBlock:v12];
      }
    }
  }

  SSXPCDictionarySetCFObject(a2, "0", v4);
}

BOOL sub_1001542B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  applier[0] = _NSConcreteStackBlock;
  applier[1] = 3221225472LL;
  applier[2] = sub_100154314;
  applier[3] = &unk_10034FBD0;
  void applier[4] = a2;
  __int128 v5 = *(_OWORD *)(a1 + 40);
  return xpc_array_apply(v2, applier);
}

uint64_t sub_100154314(uint64_t a1, int a2, xpc_object_t object)
{
  if (xpc_get_type(object) == (xpc_type_t)&_xpc_type_string)
  {
    __int128 v5 = (void *)SSXPCCreateCFObjectFromXPCObject(object);
    id v6 = [*(id *)(a1 + 32) copyDataForDomain:*(void *)(a1 + 40) key:v5];
    if (v6)
    {
      uint64_t v7 = v6;
      [*(id *)(a1 + 48) setObject:v6 forKey:v5];
    }
  }

  return 1LL;
}

id sub_100154430(uint64_t a1)
{
  return objc_msgSend( +[Daemon daemon](Daemon, "daemon"),  "releaseKeepAliveAssertion:",  @"com.apple.itunesstored.KeyValueStore");
}

id sub_10015451C(uint64_t a1)
{
  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 32));
  uint64_t v3 = *(void *)(a1 + 48);
  if (v3) {
    (*(void (**)(uint64_t, xpc_object_t))(v3 + 16))(v3, reply);
  }
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 40), reply);
  xpc_release(reply);
  xpc_release(*(xpc_object_t *)(a1 + 32));
  xpc_release(*(xpc_object_t *)(a1 + 40));
  return objc_msgSend( +[Daemon daemon](Daemon, "daemon"),  "releaseKeepAliveAssertion:",  @"com.apple.itunesstored.KeyValueStore");
}

void sub_1001545E4(uint64_t *a1)
{
  if (sub_100153FB0(a1[4]))
  {
    uint64_t v2 = a1[5];
    uint64_t v3 = objc_opt_class(&OBJC_CLASS___NSString);
    id v4 = (id)SSXPCDictionaryCopyCFObjectWithClass(v2, "1", v3);
    [*(id *)(a1[6] + 16) removeAccountFromDomain:v4];
  }

void sub_1001546B0(uint64_t a1, void *a2)
{
  uint64_t v7 = 0LL;
  char v8 = &v7;
  uint64_t v9 = 0x2020000000LL;
  char v10 = 0;
  if (sub_100153FB0(*(void *)(a1 + 32)))
  {
    id v4 = dispatch_semaphore_create(0LL);
    __int128 v5 = *(void **)(*(void *)(a1 + 40) + 16LL);
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472LL;
    v6[2] = sub_1001547A8;
    v6[3] = &unk_10034FC48;
    void v6[4] = v4;
    void v6[5] = &v7;
    [v5 removeAllValuesWithCompletionBlock:v6];
    dispatch_semaphore_wait(v4, 0xFFFFFFFFFFFFFFFFLL);
    dispatch_release(v4);
  }

  xpc_dictionary_set_BOOL(a2, "0", *((_BYTE *)v8 + 24));
  _Block_object_dispose(&v7, 8);
}

void sub_10015478C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_1001547A8(uint64_t a1, char a2)
{
  *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = a2;
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_100154810(uint64_t *a1, void *a2)
{
  uint64_t v10 = 0LL;
  id v11 = &v10;
  uint64_t v12 = 0x2020000000LL;
  char v13 = 0;
  if (sub_100153FB0(a1[4]))
  {
    uint64_t v4 = a1[5];
    uint64_t v5 = objc_opt_class(&OBJC_CLASS___NSString);
    id v6 = (void *)SSXPCDictionaryCopyCFObjectWithClass(v4, "1", v5);
    if (v6)
    {
      uint64_t v7 = dispatch_semaphore_create(0LL);
      char v8 = *(void **)(a1[6] + 16);
      v9[0] = _NSConcreteStackBlock;
      v9[1] = 3221225472LL;
      v9[2] = sub_100154940;
      v9[3] = &unk_10034FC48;
      void v9[4] = v7;
      void v9[5] = &v10;
      [v8 removeAllValuesForDomain:v6 completionBlock:v9];
      dispatch_semaphore_wait(v7, 0xFFFFFFFFFFFFFFFFLL);
      dispatch_release(v7);
    }
  }

  xpc_dictionary_set_BOOL(a2, "0", *((_BYTE *)v11 + 24));
  _Block_object_dispose(&v10, 8);
}

void sub_100154920( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_100154940(uint64_t a1, char a2)
{
  *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = a2;
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1001549A8(uint64_t a1, void *a2)
{
  uint64_t v22 = 0LL;
  unsigned int v23 = &v22;
  uint64_t v24 = 0x2020000000LL;
  char v25 = 0;
  if (sub_100153FB0(*(void *)(a1 + 32)))
  {
    uint64_t v4 = *(void *)(a1 + 40);
    uint64_t v5 = objc_opt_class(&OBJC_CLASS___NSString);
    id v6 = (void *)SSXPCDictionaryCopyCFObjectWithClass(v4, "1", v5);
    if (v6)
    {
      xpc_object_t value = xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 40), "2");
      char v8 = value;
      if (value)
      {
        if (xpc_get_type(value) == (xpc_type_t)&_xpc_type_dictionary)
        {
          uint64_t v9 = *(void **)(*(void *)(a1 + 48) + 16LL);
          v21[0] = _NSConcreteStackBlock;
          v21[1] = 3221225472LL;
          void v21[2] = sub_100154C74;
          v21[3] = &unk_10034FC98;
          v21[5] = v6;
          void v21[6] = &v22;
          void v21[4] = v8;
          [v9 modifyUsingTransactionBlock:v21];
          if (*((_BYTE *)v23 + 24))
          {
            if (xpc_array_get_count(v8) >= 2
              && [v6 isEqualToString:kSSLockdownDomainITunesStoreDaemon])
            {
              id v10 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
              if (!v10) {
                id v10 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
              }
              LODWORD(v11) = [v10 shouldLog];
              unsigned int v12 = [v10 shouldLogToDisk];
              char v13 = (os_log_s *)[v10 OSLogObject];
              uint64_t v14 = v13;
              if (v12) {
                LODWORD(v11) = v11 | 2;
              }
              if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO)) {
                uint64_t v11 = v11;
              }
              else {
                v11 &= 2u;
              }
              if ((_DWORD)v11)
              {
                uint64_t v16 = objc_opt_class(*(void *)(a1 + 48));
                int v26 = 138412290;
                uint64_t v27 = v16;
                uint64_t v17 = _os_log_send_and_compose_impl( v11,  0LL,  0LL,  0LL,  &_mh_execute_header,  v14,  1LL,  "%@: Reloading accounts after KVS change",  &v26,  12);
                if (v17)
                {
                  __int16 v18 = (void *)v17;
                  id v19 = +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v17,  4LL);
                  free(v18);
                  BOOL v20 = v19;
                  *(void *)&double v15 = SSFileLog(v10, @"%@").n128_u64[0];
                }
              }

              objc_msgSend( +[SSAccountStore defaultStore](SSAccountStore, "defaultStore", v15, v20),  "accounts");
            }
          }
        }
      }
    }
  }

  xpc_dictionary_set_BOOL(a2, "0", *((_BYTE *)v23 + 24));
  _Block_object_dispose(&v22, 8);
}

void sub_100154C40( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
}

uint64_t sub_100154C74(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(a1 + 32);
  applier[0] = _NSConcreteStackBlock;
  applier[1] = 3221225472LL;
  applier[2] = sub_100154CE8;
  applier[3] = &unk_10034FC70;
  void applier[4] = a2;
  __int128 v6 = *(_OWORD *)(a1 + 40);
  xpc_dictionary_apply(v3, applier);
  return *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL);
}

uint64_t sub_100154CE8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = -[NSString initWithUTF8String:](objc_alloc(&OBJC_CLASS___NSString), "initWithUTF8String:", a2);
  xpc_type_t type = xpc_get_type(a3);
  if (type == (xpc_type_t)&_xpc_type_null)
  {
    *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = [*(id *)(a1 + 32) setData:0 forDomain:*(void *)(a1 + 40) key:v5];
  }

  else if (type == (xpc_type_t)&_xpc_type_data)
  {
    uint64_t v7 = (void *)SSXPCCreateCFObjectFromXPCObject(a3);
    *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = [*(id *)(a1 + 32) setData:v7 forDomain:*(void *)(a1 + 40) key:v5];
  }

  return *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL);
}

id sub_100154F9C(uint64_t a1)
{
  return [(id)qword_1003A3550 setObject:*(void *)(a1 + 40) forKeyedSubscript:*(void *)(a1 + 32)];
}

void sub_100155300( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

id sub_100155318(uint64_t a1)
{
  id result = objc_msgSend( objc_msgSend( (id)qword_1003A3550,  "objectForKeyedSubscript:",  objc_msgSend(*(id *)(a1 + 32), "bundleIdentifier")),  "timeIntervalSinceNow");
  if (v3 <= 0.0) {
    return objc_msgSend( (id)qword_1003A3550,  "setObject:forKeyedSubscript:",  0,  objc_msgSend(*(id *)(a1 + 32), "bundleIdentifier"));
  }
  *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = 1;
  return result;
}

void sub_100156290(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue( +[SSSQLiteComparisonPredicate predicateWithProperty:equalToLongLong:]( &OBJC_CLASS___SSSQLiteComparisonPredicate,  "predicateWithProperty:equalToLongLong:",  @"wake_up_on_finish",  1LL));
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v3 database]);

  __int128 v6 = (void *)objc_claimAutoreleasedReturnValue( +[PersistentDownloadManagerEntity queryWithDatabase:predicate:]( &OBJC_CLASS___PersistentDownloadManagerEntity,  "queryWithDatabase:predicate:",  v5,  v4));
  uint64_t v9 = @"client_id";
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  void v7[2] = sub_1001563D4;
  v7[3] = &unk_10034B450;
  id v8 = *(id *)(a1 + 32);
  [v6 enumeratePersistentIDsAndProperties:&v9 count:1 usingBlock:v7];
}

void sub_1001563D4(uint64_t a1, uint64_t a2, void *a3)
{
  if (*a3)
  {
    uint64_t v5 = -[NSNumber initWithLongLong:](objc_alloc(&OBJC_CLASS___NSNumber), "initWithLongLong:", a2);
    [*(id *)(a1 + 32) setObject:v5 forKey:*a3];
  }

void sub_100156450(uint64_t a1, uint64_t a2, void *a3)
{
  id v6 = a3;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( +[LSApplicationProxy applicationProxyForIdentifier:]( &OBJC_CLASS___LSApplicationProxy,  "applicationProxyForIdentifier:",  a2));
  if (!v5) {
    [*(id *)(a1 + 32) addObject:v6];
  }
}

uint64_t sub_1001564B0(uint64_t a1, void *a2)
{
  id v3 = a2;
  __int128 v11 = 0u;
  __int128 v12 = 0u;
  __int128 v13 = 0u;
  __int128 v14 = 0u;
  id v4 = *(id *)(a1 + 32);
  id v5 = [v4 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v12;
    while (2)
    {
      id v8 = 0LL;
      do
      {
        if (*(void *)v12 != v7) {
          objc_enumerationMutation(v4);
        }
        if (!objc_msgSend( v3,  "deletePersistentDownloadManagerWithID:",  objc_msgSend( *(id *)(*((void *)&v11 + 1) + 8 * (void)v8),  "longLongValue",  (void)v11)))
        {
          uint64_t v9 = 0LL;
          goto LABEL_11;
        }

        id v8 = (char *)v8 + 1;
      }

      while (v6 != v8);
      id v6 = [v4 countByEnumeratingWithState:&v11 objects:v15 count:16];
      if (v6) {
        continue;
      }
      break;
    }
  }

  uint64_t v9 = 1LL;
LABEL_11:

  return v9;
}

uint64_t sub_10015679C(uint64_t a1, void *a2)
{
  id v2 = a2;
  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate dateWithTimeIntervalSinceNow:](&OBJC_CLASS___NSDate, "dateWithTimeIntervalSinceNow:", -900.0));
  [v3 timeIntervalSince1970];
  double v5 = v4;

  id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v5));
  uint64_t v7 = objc_claimAutoreleasedReturnValue( +[SSSQLiteComparisonPredicate predicateWithProperty:value:comparisonType:]( &OBJC_CLASS___SSSQLiteComparisonPredicate,  "predicateWithProperty:value:comparisonType:",  @"timestamp",  v6,  4LL));

  uint64_t v31 = (void *)objc_claimAutoreleasedReturnValue( +[SSSQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SSSQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"kind",  SSDownloadKindSoftwareApplication));
  uint64_t v32 = (void *)v7;
  v45[0] = v7;
  v45[1] = v31;
  uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue( +[SSSQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SSSQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"is_purchase",  &__kCFBooleanFalse));
  v45[2] = v30;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v45, 3LL));
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue( +[SSSQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SSSQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v8));

  uint64_t v33 = v2;
  id v10 = (void *)objc_claimAutoreleasedReturnValue([v2 database]);
  __int128 v11 = (void *)objc_claimAutoreleasedReturnValue( +[DownloadEntity queryWithDatabase:predicate:]( &OBJC_CLASS___DownloadEntity,  "queryWithDatabase:predicate:",  v10,  v9));

  uint64_t v29 = v11;
  __int128 v36 = 0u;
  __int128 v37 = 0u;
  __int128 v38 = 0u;
  __int128 v39 = 0u;
  id obj = [v11 copyEntityIdentifiers];
  id v12 = [obj countByEnumeratingWithState:&v36 objects:v44 count:16];
  if (v12)
  {
    id v13 = v12;
    uint64_t v14 = *(void *)v37;
    do
    {
      for (uint64_t i = 0LL; i != v13; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v37 != v14) {
          objc_enumerationMutation(obj);
        }
        uint64_t v16 = *(void **)(*((void *)&v36 + 1) + 8LL * (void)i);
        uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig", v27));
        if (!v17) {
          uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
        }
        unsigned int v18 = [v17 shouldLog];
        else {
          unsigned int v19 = v18;
        }
        BOOL v20 = (os_log_s *)objc_claimAutoreleasedReturnValue([v17 OSLogObject]);
        if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO)) {
          uint64_t v21 = v19;
        }
        else {
          uint64_t v21 = v19 & 2;
        }
        if ((_DWORD)v21)
        {
          uint64_t v22 = (void *)objc_opt_class(*(void *)(a1 + 32));
          id v23 = v22;
          id v24 = [v16 longLongValue];
          int v40 = 138412546;
          uint64_t v41 = v22;
          __int16 v42 = 2048;
          id v43 = v24;
          LODWORD(v2_Block_object_dispose(va, 8) = 22;
          char v25 = (void *)_os_log_send_and_compose_impl( v21,  0LL,  0LL,  0LL,  &_mh_execute_header,  v20,  1LL,  "[%@]: Removing expired software download: %lld",  &v40,  v28);

          if (!v25) {
            goto LABEL_18;
          }
          BOOL v20 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v25,  4LL));
          free(v25);
          uint64_t v27 = v20;
          SSFileLog(v17, @"%@");
        }

LABEL_18:
      }

      id v13 = [obj countByEnumeratingWithState:&v36 objects:v44 count:16];
    }

    while (v13);
  }

  [v29 deleteAllEntities];
  return 1LL;
}

void sub_100157294(uint64_t a1, void *a2)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a2 database]);
  double v4 = (void *)objc_claimAutoreleasedReturnValue( +[DownloadEntity queryWithDatabase:predicate:]( &OBJC_CLASS___DownloadEntity,  "queryWithDatabase:predicate:",  v3,  0LL));

  id v13 = @"download_state.phase";
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  void v8[2] = sub_1001573BC;
  v8[3] = &unk_10034C140;
  id v5 = *(id *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v7 = *(void **)(a1 + 48);
  id v9 = v5;
  uint64_t v10 = v6;
  id v11 = v7;
  id v12 = *(id *)(a1 + 56);
  [v4 enumeratePersistentIDsAndProperties:&v13 count:1 usingBlock:v8];
}

void sub_1001573BC(uint64_t a1, uint64_t a2, id *a3, uint64_t a4, BOOL *a5)
{
  id v8 = *a3;
  if (v8)
  {
    id v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", a2));
    if (([v8 isEqualToString:SSDownloadPhaseCanceled] & 1) != 0
      || [v8 isEqualToString:SSDownloadPhaseFinished])
    {
      uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", a2));
      if (![*(id *)(a1 + 32) containsObject:v10])
      {
LABEL_57:

        goto LABEL_58;
      }

      id v11 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
      if (!v11) {
        id v11 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      unsigned int v12 = [v11 shouldLog];
      else {
        LODWORD(v13) = v12;
      }
      uint64_t v14 = (os_log_s *)objc_claimAutoreleasedReturnValue([v11 OSLogObject]);
      if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO)) {
        uint64_t v13 = v13;
      }
      else {
        v13 &= 2u;
      }
      if ((_DWORD)v13)
      {
        double v15 = (void *)objc_opt_class(*(void *)(a1 + 40));
        int v45 = 138412802;
        int v46 = v15;
        __int16 v47 = 2048;
        uint64_t v48 = a2;
        __int16 v49 = 2112;
        id v50 = v8;
        id v16 = v15;
        uint64_t v17 = (void *)_os_log_send_and_compose_impl( v13,  0LL,  0LL,  0LL,  &_mh_execute_header,  v14,  1LL,  "[%@]: Queuing directory: %lld phase: %@",  &v45,  32);

        if (!v17)
        {
LABEL_17:

          goto LABEL_57;
        }

        uint64_t v14 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v17,  4LL));
        free(v17);
        uint64_t v41 = v14;
        SSFileLog(v11, @"%@");
      }

      goto LABEL_17;
    }

    if (![v8 isEqualToString:SSDownloadPhaseFailed])
    {
      if (![*(id *)(a1 + 32) containsObject:v9])
      {
LABEL_58:

        goto LABEL_59;
      }

      [*(id *)(a1 + 32) removeObject:v9];
      uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
      if (!v10) {
        uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      unsigned int v30 = [v10 shouldLog];
      else {
        LODWORD(v31) = v30;
      }
      id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 OSLogObject]);
      if (os_log_type_enabled((os_log_t)v11, OS_LOG_TYPE_INFO)) {
        uint64_t v31 = v31;
      }
      else {
        v31 &= 2u;
      }
      if ((_DWORD)v31)
      {
        uint64_t v32 = (void *)objc_opt_class(*(void *)(a1 + 40));
        int v45 = 138412802;
        int v46 = v32;
        __int16 v47 = 2048;
        uint64_t v48 = a2;
        __int16 v49 = 2112;
        id v50 = v8;
        id v33 = v32;
        id v34 = (void *)_os_log_send_and_compose_impl( v31,  0LL,  0LL,  0LL,  &_mh_execute_header,  v11,  1LL,  "[%@]: Keeping directory: %lld phase: %@",  &v45,  32);

        if (!v34) {
          goto LABEL_57;
        }
        id v11 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v34,  4LL));
        free(v34);
        uint64_t v41 = (os_log_s *)v11;
        SSFileLog(v10, @"%@");
      }

      goto LABEL_17;
    }

    unsigned int v18 = *(void **)(a1 + 48);
    unsigned int v19 = (void *)objc_claimAutoreleasedReturnValue([v9 stringValue]);
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v18 stringByAppendingPathComponent:v19]);

    BOOL v20 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) attributesOfItemAtPath:v10 error:0]);
    if (!v20)
    {
LABEL_56:

      goto LABEL_57;
    }

    id v43 = v20;
    __int16 v44 = (void *)objc_claimAutoreleasedReturnValue([v20 objectForKey:NSFileModificationDate]);
    [v44 timeIntervalSinceNow];
    if (v21 >= -1814400.0)
    {
      [*(id *)(a1 + 32) removeObject:v9];
      uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
      if (!v22) {
        uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      unsigned int v35 = [v22 shouldLog];
      char v25 = (os_log_s *)objc_claimAutoreleasedReturnValue([v22 OSLogObject]);
      if (os_log_type_enabled(v25, OS_LOG_TYPE_INFO)) {
        uint64_t v36 = v35;
      }
      else {
        uint64_t v36 = v35 & 2;
      }
      if ((_DWORD)v36)
      {
        __int128 v37 = (void *)objc_opt_class(*(void *)(a1 + 40));
        id v42 = v37;
        [v44 timeIntervalSinceNow];
        int v45 = 138413058;
        int v46 = v37;
        __int16 v47 = 2048;
        uint64_t v48 = a2;
        __int16 v49 = 2112;
        id v50 = v8;
        __int16 v51 = 2048;
        double v52 = -v38;
        uint64_t v29 = _os_log_send_and_compose_impl( v36,  0LL,  0LL,  0LL,  &_mh_execute_header,  v25,  1LL,  "[%@]: Keeping directory: %lld phase: %@ last modification: %f",  &v45,  42);
LABEL_52:
        __int128 v39 = (void *)v29;

        if (v39)
        {
          int v40 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v39,  4LL));
          free(v39);
          uint64_t v41 = v40;
          SSFileLog(v22, @"%@");
        }

        goto LABEL_55;
      }
    }

    else
    {
      uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
      if (!v22) {
        uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      unsigned int v23 = [v22 shouldLog];
      else {
        unsigned int v24 = v23;
      }
      char v25 = (os_log_s *)objc_claimAutoreleasedReturnValue([v22 OSLogObject]);
      if (os_log_type_enabled(v25, OS_LOG_TYPE_INFO)) {
        uint64_t v26 = v24;
      }
      else {
        uint64_t v26 = v24 & 2;
      }
      if ((_DWORD)v26)
      {
        uint64_t v27 = (void *)objc_opt_class(*(void *)(a1 + 40));
        id v42 = v27;
        [v44 timeIntervalSinceNow];
        int v45 = 138413058;
        int v46 = v27;
        __int16 v47 = 2048;
        uint64_t v48 = a2;
        __int16 v49 = 2112;
        id v50 = v8;
        __int16 v51 = 2048;
        double v52 = -v28;
        uint64_t v29 = _os_log_send_and_compose_impl( v26,  0LL,  0LL,  0LL,  &_mh_execute_header,  v25,  1LL,  "[%@]: Queuing stale directory: %lld phase: %@ last modification: %f",  &v45,  42);
        goto LABEL_52;
      }
    }

LABEL_55:
    BOOL v20 = v43;
    goto LABEL_56;
  }

void sub_10015853C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    double v4 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v4) {
      double v4 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v5 = [v4 shouldLog];
    else {
      LODWORD(v6) = v5;
    }
    uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue([v4 OSLogObject]);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v6 = v6;
    }
    else {
      v6 &= 2u;
    }
    if ((_DWORD)v6)
    {
      id v8 = (void *)objc_opt_class(*(void *)(a1 + 32));
      int v11 = 138412546;
      unsigned int v12 = v8;
      __int16 v13 = 2112;
      id v14 = v3;
      id v9 = v8;
      uint64_t v10 = (void *)_os_log_send_and_compose_impl( v6,  0LL,  0LL,  0LL,  &_mh_execute_header,  v7,  0LL,  "%@ failed to insert events: %@",  &v11,  22);

      if (!v10)
      {
LABEL_14:

        goto LABEL_15;
      }

      uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v10,  4LL));
      free(v10);
      SSFileLog(v4, @"%@");
    }

    goto LABEL_14;
  }

void sub_1001586D4(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    double v4 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v4) {
      double v4 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v5 = [v4 shouldLog];
    else {
      LODWORD(v6) = v5;
    }
    uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue([v4 OSLogObject]);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v6 = v6;
    }
    else {
      v6 &= 2u;
    }
    if ((_DWORD)v6)
    {
      id v8 = (void *)objc_opt_class(*(void *)(a1 + 32));
      int v11 = 138412546;
      unsigned int v12 = v8;
      __int16 v13 = 2112;
      id v14 = v3;
      id v9 = v8;
      uint64_t v10 = (void *)_os_log_send_and_compose_impl( v6,  0LL,  0LL,  0LL,  &_mh_execute_header,  v7,  0LL,  "%@ failed to flush events: %@",  &v11,  22);

      if (!v10)
      {
LABEL_14:

        goto LABEL_15;
      }

      uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v10,  4LL));
      free(v10);
      SSFileLog(v4, @"%@");
    }

    goto LABEL_14;
  }

void sub_100158C20(uint64_t a1, void *a2)
{
  id v9 = a2;
  uint64_t v3 = objc_opt_class(&OBJC_CLASS___LSApplicationProxy);
  if ((objc_opt_isKindOfClass(v9, v3) & 1) != 0)
  {
    double v4 = objc_autoreleasePoolPush();
    id v5 = v9;
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v5 applicationType]);
    if ([v6 isEqualToString:@"System"])
    {
      unsigned int v7 = [v5 isDeletable];

      if (v7)
      {
        id v8 = (void *)objc_claimAutoreleasedReturnValue([v5 bundleIdentifier]);

        if (v8) {
          [*(id *)(a1 + 32) addObject:v5];
        }
      }
    }

    else
    {
    }

    objc_autoreleasePoolPop(v4);
  }
}

id sub_100158FE8(uint64_t a1)
{
  id result = objc_alloc_init((Class)objc_opt_class(*(void *)(a1 + 32)));
  qword_1003A3558 = (uint64_t)result;
  return result;
}

void sub_100159068(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) valueForSessionProperty:SSErrorSessionPropertyFailureType];
  if (v2
    && (id v3 = v2,
        __int128 v28 = 0u,
        __int128 v29 = 0u,
        __int128 v26 = 0u,
        __int128 v27 = 0u,
        double v4 = *(void **)(*(void *)(a1 + 40) + 8LL),
        (id v5 = [v4 countByEnumeratingWithState:&v26 objects:v36 count:16]) != 0))
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v27;
LABEL_4:
    uint64_t v8 = 0LL;
    while (1)
    {
      if (*(void *)v27 != v7) {
        objc_enumerationMutation(v4);
      }
      id v9 = *(void **)(*((void *)&v26 + 1) + 8 * v8);
      if (v6 == (id)++v8)
      {
        id v6 = [v4 countByEnumeratingWithState:&v26 objects:v36 count:16];
        if (v6) {
          goto LABEL_4;
        }
        goto LABEL_26;
      }
    }

    if (!v9) {
      goto LABEL_26;
    }
    uint64_t v10 = -[NSNumber initWithLongLong:]( [NSNumber alloc],  "initWithLongLong:",  [*(id *)(a1 + 32) sessionIdentifier]);
    if (!*(void *)(*(void *)(a1 + 40) + 16LL)) {
      *(void *)(*(void *)(a1 + 40) + 16LL) = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    }
    id v11 = [*(id *)(a1 + 48) copy];
    [*(id *)(*(void *)(a1 + 40) + 16) setObject:v11 forKey:v10];

    id v12 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v12) {
      id v12 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v13 = [v12 shouldLog];
    else {
      LODWORD(v14) = v13;
    }
    double v15 = (os_log_s *)[v12 OSLogObject];
    if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO)) {
      uint64_t v14 = v14;
    }
    else {
      v14 &= 2u;
    }
    if ((_DWORD)v14)
    {
      uint64_t v17 = objc_opt_class(*(void *)(a1 + 40));
      int v30 = 138412802;
      uint64_t v31 = v17;
      __int16 v32 = 2112;
      id v33 = v10;
      __int16 v34 = 2112;
      unsigned int v35 = v9;
      uint64_t v18 = _os_log_send_and_compose_impl( v14,  0LL,  0LL,  0LL,  &_mh_execute_header,  v15,  1LL,  "%@: Opening session: %@ for client: %@",  &v30,  32);
      if (v18)
      {
        unsigned int v19 = (void *)v18;
        BOOL v20 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v18, 4LL);
        free(v19);
        unsigned int v24 = v20;
        *(void *)&double v16 = SSFileLog(v12, @"%@").n128_u64[0];
      }
    }

    objc_msgSend(v9, "addSession:", *(void *)(a1 + 32), v16, v24);
    double v21 = (void *)SSXPCCreateMessageDictionary(1012LL);
    SSXPCDictionarySetCFObject(v21, "1", v10);
    SSXPCDictionarySetCFObject(v21, "2", [*(id *)(a1 + 32) sessionProperties]);
    objc_msgSend(objc_msgSend(v9, "outputConnection"), "sendMessage:", v21);
    xpc_release(v21);
  }

  else
  {
LABEL_26:
    uint64_t v22 = *(void *)(a1 + 48);
    unsigned int v23 = *(dispatch_queue_s **)(*(void *)(a1 + 40) + 24LL);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1001593A4;
    block[3] = &unk_10034BB20;
    void block[4] = v22;
    dispatch_async(v23, block);
  }

void sub_1001593A4(uint64_t a1)
{
  id v2 = objc_alloc_init(&OBJC_CLASS___ErrorHandlerResponse);
  -[ErrorHandlerResponse setResponseType:](v2, "setResponseType:", 0LL);
  (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_1001594F0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) object];
  uint64_t v3 = objc_opt_class(&OBJC_CLASS___ErrorHandlerClient);
  uint64_t result = objc_opt_isKindOfClass(v2, v3);
  if ((result & 1) != 0)
  {
    uint64_t result = (uint64_t)[*(id *)(*(void *)(a1 + 40) + 8) indexOfObjectIdenticalTo:v2];
    if (result != 0x7FFFFFFFFFFFFFFFLL)
    {
      id v5 = [v2 popAllSessions];
      id v6 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
      if (!v6) {
        id v6 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
      }
      unsigned int v7 = [v6 shouldLog];
      else {
        LODWORD(v_Block_object_dispose(va, 8) = v7;
      }
      id v9 = (os_log_s *)[v6 OSLogObject];
      if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO)) {
        uint64_t v8 = v8;
      }
      else {
        v8 &= 2u;
      }
      if ((_DWORD)v8)
      {
        uint64_t v10 = objc_opt_class(*(void *)(a1 + 40));
        int v29 = 138412802;
        uint64_t v30 = v10;
        __int16 v31 = 2112;
        id v32 = v2;
        __int16 v33 = 2048;
        id v34 = [v5 count];
        uint64_t v11 = _os_log_send_and_compose_impl( v8,  0LL,  0LL,  0LL,  &_mh_execute_header,  v9,  1LL,  "%@: Client disconnected: %@ with %lu sessions",  &v29,  32);
        if (v11)
        {
          id v12 = (void *)v11;
          unsigned int v13 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v11, 4LL);
          free(v12);
          uint64_t v22 = v13;
          SSFileLog(v6, @"%@");
        }
      }

      uint64_t v14 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
      __int128 v24 = 0u;
      __int128 v25 = 0u;
      __int128 v26 = 0u;
      __int128 v27 = 0u;
      id v15 = [v5 countByEnumeratingWithState:&v24 objects:v28 count:16];
      if (v15)
      {
        id v16 = v15;
        uint64_t v17 = *(void *)v25;
        do
        {
          for (uint64_t i = 0LL; i != v16; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v25 != v17) {
              objc_enumerationMutation(v5);
            }
            unsigned int v19 = -[NSNumber initWithLongLong:]( [NSNumber alloc],  "initWithLongLong:",  [*(id *)(*((void *)&v24 + 1) + 8 * (void)i) sessionIdentifier]);
            id v20 = [*(id *)(*(void *)(a1 + 40) + 16) objectForKey:v19];
            if (v20)
            {
              -[NSMutableArray addObject:](v14, "addObject:", v20);
              [*(id *)(*(void *)(a1 + 40) + 16) removeObjectForKey:v19];
            }
          }

          id v16 = [v5 countByEnumeratingWithState:&v24 objects:v28 count:16];
        }

        while (v16);
      }

      if (-[NSMutableArray count](v14, "count", v22))
      {
        double v21 = *(dispatch_queue_s **)(*(void *)(a1 + 40) + 24LL);
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472LL;
        block[2] = sub_100159814;
        block[3] = &unk_10034AE98;
        void block[4] = v14;
        dispatch_async(v21, block);
      }

      return (uint64_t)[*(id *)(*(void *)(a1 + 40) + 8) removeObjectIdenticalTo:v2];
    }
  }

  return result;
}

void sub_100159814(uint64_t a1)
{
  id v2 = objc_alloc_init(&OBJC_CLASS___ErrorHandlerResponse);
  -[ErrorHandlerResponse setResponseType:](v2, "setResponseType:", 0LL);
  __int128 v10 = 0u;
  __int128 v11 = 0u;
  __int128 v8 = 0u;
  __int128 v9 = 0u;
  uint64_t v3 = *(void **)(a1 + 32);
  id v4 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v9;
    do
    {
      unsigned int v7 = 0LL;
      do
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v3);
        }
        (*(void (**)(void))(*(void *)(*((void *)&v8 + 1) + 8LL * (void)v7) + 16LL))();
        unsigned int v7 = (char *)v7 + 1;
      }

      while (v5 != v7);
      id v5 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }

    while (v5);
  }
}

uint64_t sub_100159A84(uint64_t a1, void *a2)
{
  if ((SSXPCConnectionHasEntitlement(*(void *)(a1 + 32), kSSITunesStorePrivateEntitlement) & 1) == 0)
  {
    id v11 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v11) {
      id v11 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v12 = [v11 shouldLog];
    else {
      LODWORD(v13) = v12;
    }
    uint64_t v14 = (os_log_s *)[v11 OSLogObject];
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v13 = v13;
    }
    else {
      v13 &= 2u;
    }
    if ((_DWORD)v13)
    {
      uint64_t v15 = objc_opt_class(*(void *)(a1 + 40));
      int v65 = 138412290;
      uint64_t v66 = v15;
      uint64_t v16 = _os_log_send_and_compose_impl( v13,  0LL,  0LL,  0LL,  &_mh_execute_header,  v14,  0LL,  "%@: Cannot connect unentitled error handler",  &v65,  12);
      if (v16)
      {
        uint64_t v17 = (void *)v16;
        +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v16, 4LL);
        free(v17);
        SSFileLog(v11, @"%@");
      }
    }

    __int128 v10 = (void *)SSError(SSErrorDomain, 107LL, 0LL, 0LL);
    BOOL v8 = 0;
    goto LABEL_43;
  }

  if (![*(id *)(a1 + 40) _clientForConnection:*(void *)(a1 + 32)])
  {
    xpc_object_t value = (_xpc_endpoint_s *)xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 48), "1");
    uint64_t v19 = *(void *)(a1 + 48);
    uint64_t v20 = objc_opt_class(&OBJC_CLASS___NSArray);
    double v21 = (void *)SSXPCDictionaryCopyCFObjectWithClass(v19, "2", v20);
    if (value && xpc_get_type(value) == (xpc_type_t)&_xpc_type_endpoint)
    {
      if ([v21 count])
      {
        uint64_t v30 = -[NSSet initWithArray:](objc_alloc(&OBJC_CLASS___NSSet), "initWithArray:", v21);
        __int128 v61 = 0u;
        __int128 v62 = 0u;
        __int128 v63 = 0u;
        __int128 v64 = 0u;
        __int16 v31 = *(void **)(*(void *)(a1 + 40) + 8LL);
        id v32 = [v31 countByEnumeratingWithState:&v61 objects:v71 count:16];
        if (v32)
        {
          id v33 = v32;
          uint64_t v34 = *(void *)v62;
LABEL_47:
          uint64_t v35 = 0LL;
          while (1)
          {
            if (*(void *)v62 != v34) {
              objc_enumerationMutation(v31);
            }
            uint64_t v36 = *(void **)(*((void *)&v61 + 1) + 8 * v35);
            if (v33 == (id)++v35)
            {
              id v33 = [v31 countByEnumeratingWithState:&v61 objects:v71 count:16];
              if (v33) {
                goto LABEL_47;
              }
              goto LABEL_67;
            }
          }

          id v37 = v36;
          if (!v37) {
            goto LABEL_67;
          }
          double v38 = v37;
          id v39 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
          if (!v39) {
            id v39 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
          }
          unsigned int v40 = [v39 shouldLog];
          else {
            LODWORD(v41) = v40;
          }
          id v42 = (os_log_s *)[v39 OSLogObject];
          if (os_log_type_enabled(v42, OS_LOG_TYPE_DEFAULT)) {
            uint64_t v41 = v41;
          }
          else {
            v41 &= 2u;
          }
          if ((_DWORD)v41)
          {
            uint64_t v43 = objc_opt_class(*(void *)(a1 + 40));
            int v65 = 138412290;
            uint64_t v66 = v43;
            uint64_t v44 = _os_log_send_and_compose_impl( v41,  0LL,  0LL,  0LL,  &_mh_execute_header,  v42,  0LL,  "%@: Conflicted failure types for error handler",  &v65,  12);
            if (v44)
            {
              int v45 = (void *)v44;
              +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v44, 4LL);
              free(v45);
              SSFileLog(v39, @"%@");
            }
          }

          __int128 v10 = (void *)SSError(SSErrorDomain, 123LL, 0LL, 0LL);
          BOOL v8 = 0;
        }

        else
        {
LABEL_67:
          int v46 = -[XPCClient initWithInputConnection:]( objc_alloc(&OBJC_CLASS___ErrorHandlerClient),  "initWithInputConnection:",  *(void *)(a1 + 32));
          -[ErrorHandlerClient setFailureTypes:]( v46,  "setFailureTypes:",  +[NSSet setWithArray:](&OBJC_CLASS___NSSet, "setWithArray:", v21));
          xpc_connection_t v47 = xpc_connection_create_from_endpoint(value);
          -[XPCClient setOutputConnectionWithConnection:](v46, "setOutputConnectionWithConnection:", v47);
          xpc_release(v47);
          uint64_t v48 = *(void **)(*(void *)(a1 + 40) + 8LL);
          if (!v48)
          {
            *(void *)(*(void *)(a1 + 40) + 8LL) = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
            uint64_t v48 = *(void **)(*(void *)(a1 + 40) + 8LL);
          }

          [v48 addObject:v46];
          id v49 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
          if (!v49) {
            id v49 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
          }
          unsigned int v50 = [v49 shouldLog];
          else {
            LODWORD(v51) = v50;
          }
          double v52 = (os_log_s *)[v49 OSLogObject];
          if (os_log_type_enabled(v52, OS_LOG_TYPE_INFO)) {
            uint64_t v51 = v51;
          }
          else {
            v51 &= 2u;
          }
          if ((_DWORD)v51)
          {
            uint64_t v53 = objc_opt_class(*(void *)(a1 + 40));
            int v65 = 138412802;
            uint64_t v66 = v53;
            __int16 v67 = 2112;
            uint64_t v68 = v46;
            __int16 v69 = 2112;
            id v70 = v21;
            uint64_t v54 = _os_log_send_and_compose_impl( v51,  0LL,  0LL,  0LL,  &_mh_execute_header,  v52,  1LL,  "%@: Started client: %@ with failure types: %@",  &v65,  32);
            if (v54)
            {
              uint64_t v55 = (void *)v54;
              +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v54, 4LL);
              free(v55);
              SSFileLog(v49, @"%@");
            }
          }

          xpc_object_t v56 = xpc_dictionary_create(0LL, 0LL, 0LL);
          -[SSXPCConnection sendMessage:](-[XPCClient outputConnection](v46, "outputConnection"), "sendMessage:", v56);
          xpc_release(v56);

          double v38 = 0LL;
          __int128 v10 = 0LL;
          BOOL v8 = 1;
        }

        goto LABEL_42;
      }

      id v22 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
      if (!v22) {
        id v22 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
      }
      unsigned int v57 = [v22 shouldLog];
      else {
        LODWORD(v5_Block_object_dispose(va, 8) = v57;
      }
      id v59 = (os_log_s *)[v22 OSLogObject];
      if (os_log_type_enabled(v59, OS_LOG_TYPE_DEFAULT)) {
        uint64_t v58 = v58;
      }
      else {
        v58 &= 2u;
      }
      if (!(_DWORD)v58)
      {
LABEL_41:
        __int128 v10 = (void *)SSError(SSErrorDomain, 123LL, 0LL, 0LL);
        BOOL v8 = 0;
LABEL_42:

        goto LABEL_43;
      }

      uint64_t v60 = objc_opt_class(*(void *)(a1 + 40));
      int v65 = 138412290;
      uint64_t v66 = v60;
      uint64_t v27 = _os_log_send_and_compose_impl( v58,  0LL,  0LL,  0LL,  &_mh_execute_header,  v59,  0LL,  "%@: Invalid failure types for error handler",  &v65,  12);
    }

    else
    {
      id v22 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
      if (!v22) {
        id v22 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
      }
      unsigned int v23 = [v22 shouldLog];
      else {
        LODWORD(v24) = v23;
      }
      __int128 v25 = (os_log_s *)[v22 OSLogObject];
      if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT)) {
        uint64_t v24 = v24;
      }
      else {
        v24 &= 2u;
      }
      if (!(_DWORD)v24) {
        goto LABEL_41;
      }
      uint64_t v26 = objc_opt_class(*(void *)(a1 + 40));
      int v65 = 138412290;
      uint64_t v66 = v26;
      uint64_t v27 = _os_log_send_and_compose_impl( v24,  0LL,  0LL,  0LL,  &_mh_execute_header,  v25,  0LL,  "%@: Invalid enpoint for error handler",  &v65,  12);
    }

    if (v27)
    {
      __int128 v28 = (void *)v27;
      +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v27, 4LL);
      free(v28);
      SSFileLog(v22, @"%@");
    }

    goto LABEL_41;
  }

  id v4 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  if (!v4) {
    id v4 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  unsigned int v5 = [v4 shouldLog];
  else {
    LODWORD(v6) = v5;
  }
  unsigned int v7 = (os_log_s *)[v4 OSLogObject];
  BOOL v8 = 1;
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO)) {
    uint64_t v6 = v6;
  }
  else {
    v6 &= 2u;
  }
  if (!(_DWORD)v6) {
    goto LABEL_14;
  }
  uint64_t v9 = objc_opt_class(*(void *)(a1 + 40));
  int v65 = 138412290;
  uint64_t v66 = v9;
  __int128 v10 = (void *)_os_log_send_and_compose_impl( v6,  0LL,  0LL,  0LL,  &_mh_execute_header,  v7,  1LL,  "%@: Ignoring error handler re-connect",  &v65,  12);
  if (v10)
  {
    +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v10, 4LL);
    free(v10);
    SSFileLog(v4, @"%@");
LABEL_14:
    __int128 v10 = 0LL;
  }

id sub_10015A3D0(uint64_t a1)
{
  return objc_msgSend( +[Daemon daemon](Daemon, "daemon"),  "releaseKeepAliveAssertion:",  @"com.apple.itunesstored.ErrorHandlerManager");
}

id sub_10015A4BC(uint64_t a1)
{
  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 32));
  (*(void (**)(void))(*(void *)(a1 + 48) + 16LL))();
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 40), reply);
  xpc_release(reply);
  xpc_release(*(xpc_object_t *)(a1 + 32));
  xpc_release(*(xpc_object_t *)(a1 + 40));
  return objc_msgSend( +[Daemon daemon](Daemon, "daemon"),  "releaseKeepAliveAssertion:",  @"com.apple.itunesstored.ErrorHandlerManager");
}

void sub_10015A580(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _clientForConnection:*(void *)(a1 + 40)];
  if (v2)
  {
    uint64_t v3 = v2;
    int64_t int64 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 48), "1");
    [v3 popSessionWithIdentifier:int64];
    id v5 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v5) {
      id v5 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v6 = [v5 shouldLog];
    else {
      LODWORD(v7) = v6;
    }
    BOOL v8 = (os_log_s *)[v5 OSLogObject];
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO)) {
      uint64_t v7 = v7;
    }
    else {
      v7 &= 2u;
    }
    if ((_DWORD)v7)
    {
      uint64_t v10 = objc_opt_class(*(void *)(a1 + 32));
      int v22 = 138412802;
      uint64_t v23 = v10;
      __int16 v24 = 2048;
      int64_t v25 = int64;
      __int16 v26 = 2112;
      uint64_t v27 = v3;
      uint64_t v11 = _os_log_send_and_compose_impl( v7,  0LL,  0LL,  0LL,  &_mh_execute_header,  v8,  1LL,  "%@: Resolving session: %lld for client: %@",  &v22,  32);
      if (v11)
      {
        unsigned int v12 = (void *)v11;
        uint64_t v13 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v11, 4LL);
        free(v12);
        uint64_t v20 = v13;
        *(void *)&double v9 = SSFileLog(v5, @"%@").n128_u64[0];
      }
    }

    uint64_t v14 = +[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", int64, v9, v20);
    id v15 = [*(id *)(*(void *)(a1 + 32) + 16) objectForKey:v14];
    [*(id *)(*(void *)(a1 + 32) + 16) removeObjectForKey:v14];
    if (v15)
    {
      uint64_t v16 = objc_alloc_init(&OBJC_CLASS___ErrorHandlerResponse);
      int64_t v17 = xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 48), "2");
      -[ErrorHandlerResponse setResponseType:](v16, "setResponseType:", v17);
      if (v17 == 1)
      {
        uint64_t v18 = -[NSURL initWithXPCEncoding:]( objc_alloc(&OBJC_CLASS___NSURL),  "initWithXPCEncoding:",  xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 48), "3"));
        -[ErrorHandlerResponse setURL:](v16, "setURL:", v18);
      }

      uint64_t v19 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 24LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_10015A820;
      block[3] = &unk_10034C538;
      void block[4] = v16;
      void block[5] = v15;
      dispatch_async(v19, block);
    }
  }

uint64_t sub_10015A820(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(void *)(a1 + 32));
}

void sub_10015A900(uint64_t a1)
{
  if (!*(void *)(*(void *)(a1 + 32) + 144LL)) {
    *(void *)(*(void *)(a1 + 32) + 144LL) = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  }
  id v2 = -[NSNumber initWithLongLong:]( [NSNumber alloc],  "initWithLongLong:",  [*(id *)(a1 + 40) sessionIdentifier]);
  [*(id *)(*(void *)(a1 + 32) + 144) setObject:*(void *)(a1 + 40) forKey:v2];
}

void sub_10015AA48( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_10015AA60(uint64_t a1, uint64_t a2)
{
}

void sub_10015AA70(uint64_t a1)
{
}

id sub_10015AA7C(uint64_t a1)
{
  id result = *(id *)(*(void *)(a1 + 32) + 136LL);
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 4+[SSVSubscriptionEntitlementsCoordinator setCachedSubscriptionEntitlements:]( &OBJC_CLASS___SSVSubscriptionEntitlementsCoordinator,  "setCachedSubscriptionEntitlements:", 0LL) = result;
  return result;
}

void sub_10015AB70( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

id sub_10015AB88(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 4+[SSVSubscriptionEntitlementsCoordinator setCachedSubscriptionEntitlements:]( SSVSubscriptionEntitlementsCoordinator,  "setCachedSubscriptionEntitlements:", 0) =  [*(id *)(*(void *)(a1 + 32) + 144) allValues];
  return [*(id *)(*(void *)(a1 + 32) + 144) removeAllObjects];
}

void sub_10015AC8C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_10015ACA4(void *a1)
{
  id v2 = -[NSNumber initWithLongLong:](objc_alloc(&OBJC_CLASS___NSNumber), "initWithLongLong:", a1[6]);
  *(void *)(*(void *)(a1[5] + 8) + 4+[SSVSubscriptionEntitlementsCoordinator setCachedSubscriptionEntitlements:]( SSVSubscriptionEntitlementsCoordinator,  "setCachedSubscriptionEntitlements:", 0) = [*(id *)(a1[4] + 144) objectForKey:v2];
  [*(id *)(a1[4] + 144) removeObjectForKey:v2];
}

void *sub_10015AD80(void *result)
{
  id v1 = *(void **)(result[4] + 136LL);
  if (v1 != (void *)result[5])
  {
    id v2 = result;

    id result = [(id)v2[5] copy];
    *(void *)(v2[4] + 136LL) = result;
  }

  return result;
}

id sub_10015AF78(void *a1)
{
  id v1 = a1;
  if (SSDownloadKindIsPodcastKind())
  {
    id v2 = -[NSArray initWithObjects:]( objc_alloc(&OBJC_CLASS___NSArray),  "initWithObjects:",  CPSharedResourcesDirectory(),  @"Media",  @"Podcasts",  0LL,  v8);
  }

  else
  {
    if (!SSDownloadKindIsEBookKind(v1))
    {
      if (([v1 isEqualToString:SSDownloadKindMusic] & 1) != 0
        || [v1 isEqualToString:SSDownloadKindMusicVideo])
      {
        uint64_t v5 = 250LL;
      }

      else
      {
        if (!SSDownloadKindIsVideosAppKind(v1))
        {
          id v2 = -[NSArray initWithObjects:]( objc_alloc(&OBJC_CLASS___NSArray),  "initWithObjects:",  CPSharedResourcesDirectory(),  @"Media",  @"Purchases",  0LL,  v8);
          goto LABEL_5;
        }

        uint64_t v5 = 500LL;
      }

      id v4 = (void *)objc_claimAutoreleasedReturnValue( +[ML3MusicLibrary pathForBaseLocationPath:]( &OBJC_CLASS___ML3MusicLibrary,  "pathForBaseLocationPath:",  v5));
      goto LABEL_10;
    }

    id v2 = -[NSArray initWithObjects:]( objc_alloc(&OBJC_CLASS___NSArray),  "initWithObjects:",  CPSharedResourcesDirectory(),  @"Media",  @"Books",  @"Purchases",  0LL);
  }

LABEL_5:
  uint64_t v3 = v2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSString pathWithComponents:](&OBJC_CLASS___NSString, "pathWithComponents:", v2));

LABEL_10:
  unsigned int v6 = objc_alloc_init(&OBJC_CLASS___NSFileManager);
  -[NSFileManager createDirectoryAtPath:withIntermediateDirectories:attributes:error:]( v6,  "createDirectoryAtPath:withIntermediateDirectories:attributes:error:",  v4,  1LL,  0LL,  0LL);

  return v4;
}

    -[FinishDownloadResponse setError:](v5, "setError:", v10);
    -[FinishDownloadResponse setResult:](v5, "setResult:", 0LL);
    goto LABEL_6;
  }

  if ((SSDownloadKindIsMediaKind(v7) & 1) != 0 || SSDownloadKindIsToneKind(v7))
  {
    uint64_t v16 = 0LL;
    uint64_t v11 = -[DownloadDRMOperation _unprotectMediaAsset:](self, "_unprotectMediaAsset:", &v16);
    unsigned int v12 = v16;
    uint64_t v10 = v12;
    if (v11)
    {
      id v15 = v12;
      uint64_t v13 = -[DownloadDRMOperation _checkoutRentalKeys:](self, "_checkoutRentalKeys:", &v15);
      uint64_t v14 = v15;

      uint64_t v10 = v14;
      if ((v13 & 1) != 0) {
        goto LABEL_6;
      }
    }

    goto LABEL_5;
  }

void sub_10015BE60( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
}

uint64_t sub_10015BE90(uint64_t a1, void *a2)
{
  id v4 = [a2 responseType];
  [*(id *)(a1 + 32) setErrorHandlerResponseType:v4];
  if (v4 == (id)2)
  {
    *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = 0;
  }

  else if (v4 == (id)1)
  {
    id v5 = [a2 URL];
    id v6 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v6) {
      id v6 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v7 = [v6 shouldLog];
    else {
      LODWORD(v_Block_object_dispose(va, 8) = v7;
    }
    double v9 = (os_log_s *)[v6 OSLogObject];
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO)) {
      uint64_t v8 = v8;
    }
    else {
      v8 &= 2u;
    }
    if ((_DWORD)v8)
    {
      uint64_t v11 = objc_opt_class(*(void *)(a1 + 32));
      int v24 = 138412546;
      uint64_t v25 = v11;
      __int16 v26 = 2112;
      id v27 = v5;
      uint64_t v12 = _os_log_send_and_compose_impl( v8,  0LL,  0LL,  0LL,  &_mh_execute_header,  v9,  1LL,  "%@: Redirect from error handler: %@",  &v24,  22);
      if (v12)
      {
        uint64_t v13 = (void *)v12;
        uint64_t v14 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v12, 4LL);
        free(v13);
        uint64_t v23 = v14;
        *(void *)&double v10 = SSFileLog(v6, @"%@").n128_u64[0];
      }
    }

    objc_msgSend(*(id *)(a1 + 32), "setRedirectURL:", v5, v10, v23);
    *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = v5 != 0LL;
    return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
  }

  id v15 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  if (!v15) {
    id v15 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  unsigned int v16 = [v15 shouldLog];
  else {
    LODWORD(v17) = v16;
  }
  uint64_t v18 = (os_log_s *)[v15 OSLogObject];
  if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v17 = v17;
  }
  else {
    v17 &= 2u;
  }
  if ((_DWORD)v17)
  {
    uint64_t v19 = objc_opt_class(*(void *)(a1 + 32));
    int v24 = 138412546;
    uint64_t v25 = v19;
    __int16 v26 = 2048;
    id v27 = v4;
    uint64_t v20 = _os_log_send_and_compose_impl( v17,  0LL,  0LL,  0LL,  &_mh_execute_header,  v18,  0LL,  "%@: Error handler resolved with type: %ld",  &v24,  22);
    if (v20)
    {
      double v21 = (void *)v20;
      +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v20, 4LL);
      free(v21);
      SSFileLog(v15, @"%@");
    }
  }

  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
}

void sub_10015C2BC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_10015C2D8(uint64_t a1, uint64_t a2)
{
}

void sub_10015C2E8(uint64_t a1)
{
}

void sub_10015C2F4(uint64_t a1, void *a2)
{
  id v5 = -[NSArray initWithObjects:]( objc_alloc(&OBJC_CLASS___NSArray),  "initWithObjects:",  @"kind",  @"store_account_id",  @"store_download_key",  @"store_transaction_id",  0LL);
  id v4 = -[DownloadEntity initWithPersistentID:inDatabase:]( [DownloadEntity alloc],  "initWithPersistentID:inDatabase:",  *(void *)(*(void *)(a1 + 32) + 96),  [a2 database]);
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 4+[SSVSubscriptionEntitlementsCoordinator setCachedSubscriptionEntitlements:]( &OBJC_CLASS___SSVSubscriptionEntitlementsCoordinator,  "setCachedSubscriptionEntitlements:", 0LL) = -[Download initWithDatabaseEntity:properties:]( objc_alloc(&OBJC_CLASS___Download),  "initWithDatabaseEntity:properties:",  v4,  v5);
}

void sub_10015C9CC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
}

uint64_t sub_10015CA38(void *a1, void *a2)
{
  *(_BYTE *)(*(void *)(a1[6] + 8) + 24) = [a2 updateDownloadEntityWithIdentifier:*(void *)(a1[4] + 96) withDownload:a1[5]];
  return *(unsigned __int8 *)(*(void *)(a1[6] + 8LL) + 24LL);
}

void sub_10015CF98(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  id v2 = (void *)qword_1003A3568;
  qword_1003A3568 = (uint64_t)v1;
}

void sub_10015D220( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, char a29)
{
}

uint64_t sub_10015D244(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_10015D254(uint64_t a1)
{
}

void sub_10015D25C(uint64_t a1, void *a2)
{
  id v3 = [a2 copy];
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8LL);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_10015D298(uint64_t a1, void *a2)
{
  id v3 = [a2 copy];
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8LL);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_10015D2D4(void *a1)
{
  id v2 = objc_opt_new(&OBJC_CLASS___NSMutableSet);
  id v3 = objc_opt_new(&OBJC_CLASS___NSMutableSet);
  __int128 v17 = 0u;
  __int128 v18 = 0u;
  __int128 v19 = 0u;
  __int128 v20 = 0u;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(void *)(a1[5] + 8) + 40), "allKeys", 0));
  id v5 = [v4 countByEnumeratingWithState:&v17 objects:v21 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v18;
    do
    {
      for (uint64_t i = 0LL; i != v6; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v18 != v7) {
          objc_enumerationMutation(v4);
        }
        uint64_t v9 = *(void *)(*((void *)&v17 + 1) + 8LL * (void)i);
        double v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1[5] + 8) + 40) objectForKey:v9]);
        id v11 = [v10 integerValue];

        uint64_t v12 = v2;
        if (v11 != (id)1)
        {
          if (v11 != (id)2) {
            continue;
          }
          uint64_t v12 = v3;
        }

        -[NSMutableSet addObject:](v12, "addObject:", v9);
      }

      id v6 = [v4 countByEnumeratingWithState:&v17 objects:v21 count:16];
    }

    while (v6);
  }

  uint64_t v13 = a1[4];
  uint64_t v14 = *(void *)(*(void *)(a1[6] + 8LL) + 40LL);
  id v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithSet:](&OBJC_CLASS___NSSet, "setWithSet:", v3));
  unsigned int v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithSet:](&OBJC_CLASS___NSSet, "setWithSet:", v2));
  (*(void (**)(uint64_t, uint64_t, void *, void *, void))(v13 + 16))(v13, v14, v15, v16, 0LL);
}

void sub_10015E19C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

uint64_t sub_10015E1B8(void *a1, void *a2)
{
  *(_BYTE *)(*(void *)(a1[6] + 8) + 24) = [a2 updateDownloadEntityWithIdentifier:*(void *)(a1[4] + 96) withDownload:a1[5]];
  return *(unsigned __int8 *)(*(void *)(a1[6] + 8LL) + 24LL);
}

void sub_10015E344( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_10015E360(uint64_t a1, uint64_t a2)
{
}

void sub_10015E370(uint64_t a1)
{
}

void sub_10015E37C(uint64_t a1, void *a2)
{
  id v5 = -[NSArray initWithObjects:]( objc_alloc(&OBJC_CLASS___NSArray),  "initWithObjects:",  @"preferred_asset_flavor",  @"store_account_id",  @"store_item_id",  @"store_redownload_parameters",  0LL);
  uint64_t v4 = -[DownloadEntity initWithPersistentID:inDatabase:]( [DownloadEntity alloc],  "initWithPersistentID:inDatabase:",  *(void *)(*(void *)(a1 + 32) + 96),  [a2 database]);
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 4+[SSVSubscriptionEntitlementsCoordinator setCachedSubscriptionEntitlements:]( &OBJC_CLASS___SSVSubscriptionEntitlementsCoordinator,  "setCachedSubscriptionEntitlements:", 0LL) = -[Download initWithDatabaseEntity:properties:]( objc_alloc(&OBJC_CLASS___Download),  "initWithDatabaseEntity:properties:",  v4,  v5);
}

void sub_10015E878( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
}

uint64_t sub_10015E8C8(void *a1, void *a2)
{
  *(_BYTE *)(*(void *)(a1[6] + 8) + 24) = [a2 updateDownloadEntityWithIdentifier:*(void *)(a1[4] + 96) withDownload:a1[5]];
  return *(unsigned __int8 *)(*(void *)(a1[6] + 8LL) + 24LL);
}

void sub_10015F2B8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_10015F2D0(uint64_t a1, void *a2, _BYTE *a3)
{
  id v6 = a2;
  uint64_t v5 = objc_opt_class(&OBJC_CLASS___LSApplicationProxy);
  if ((objc_opt_isKindOfClass(v6, v5) & 1) != 0 && [v6 installType] == (id)7)
  {
    *(_BYTE *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = 1;
    *a3 = 1;
  }
}

void sub_10015F478(uint64_t a1)
{
  xpc_object_t v2 = xpc_dictionary_create(0LL, 0LL, 0LL);
  [*(id *)(*(void *)(a1 + 32) + 40) sendMessage:v2];
  xpc_release(v2);
}

uint64_t sub_10015F568(uint64_t result)
{
  *(_BYTE *)(*(void *)(*(void *)(result + 40) + 8LL) + 24LL) = *(_BYTE *)(*(void *)(result + 32) + 136LL);
  return result;
}

void sub_10015F5EC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (!*(_BYTE *)(v2 + 160))
  {
    id v3 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v3) {
      id v3 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v4 = [v3 shouldLog];
    else {
      LODWORD(v5) = v4;
    }
    id v6 = (os_log_s *)[v3 OSLogObject];
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      uint64_t v5 = v5;
    }
    else {
      v5 &= 2u;
    }
    if ((_DWORD)v5)
    {
      uint64_t v7 = objc_opt_class(*(void *)(a1 + 32));
      id v8 = [*(id *)(a1 + 40) logUUID];
      int v44 = 138543618;
      uint64_t v45 = v7;
      __int16 v46 = 2114;
      id v47 = v8;
      uint64_t v9 = _os_log_send_and_compose_impl( v5,  0LL,  0LL,  0LL,  &_mh_execute_header,  v6,  16LL,  "[%{public}@]: [%{public}@] Remote authentication requested for unsupported client, forcing local authentication",  &v44,  22);
      if (v9)
      {
        double v10 = (void *)v9;
        id v11 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v9, 4LL);
        free(v10);
        double v38 = v11;
        SSFileLog(v3, @"%@");
      }
    }

    uint64_t v12 = *(void *)(a1 + 48);
    uint64_t v13 = SSError(SSErrorDomain, 106LL, 0LL, 0LL);
    (*(void (**)(uint64_t, void, uint64_t))(v12 + 16))(v12, 0LL, v13);
    uint64_t v2 = *(void *)(a1 + 32);
  }

  if (*(void *)(v2 + 40))
  {
    xpc_object_t v14 = xpc_dictionary_create(0LL, 0LL, 0LL);
    xpc_dictionary_set_int64(v14, "0", 1100LL);
    id v15 = [*(id *)(a1 + 40) copyXPCEncoding];
    if (v15)
    {
      unsigned int v16 = v15;
      xpc_dictionary_set_value(v14, "1", v15);
      xpc_release(v16);
    }

    id v17 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig", v38);
    if (!v17) {
      id v17 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v18 = [v17 shouldLog];
    else {
      LODWORD(v19) = v18;
    }
    __int128 v20 = (os_log_s *)[v17 OSLogObject];
    if (os_log_type_enabled(v20, OS_LOG_TYPE_DEBUG)) {
      uint64_t v19 = v19;
    }
    else {
      v19 &= 2u;
    }
    if ((_DWORD)v19)
    {
      uint64_t v21 = objc_opt_class(*(void *)(a1 + 32));
      id v22 = [*(id *)(a1 + 40) logUUID];
      int v44 = 138543618;
      uint64_t v45 = v21;
      __int16 v46 = 2114;
      id v47 = v22;
      LODWORD(v40) = 22;
      uint64_t v23 = _os_log_send_and_compose_impl( v19,  0LL,  0LL,  0LL,  &_mh_execute_header,  v20,  2LL,  "[%{public}@]: [%{public}@] Sending remote authentication request",  &v44,  v40);
      if (v23)
      {
        int v24 = (void *)v23;
        uint64_t v25 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v23, 4LL);
        free(v24);
        id v39 = v25;
        SSFileLog(v17, @"%@");
      }
    }

    __int128 v26 = *(_OWORD *)(a1 + 32);
    id v27 = *(void **)(*(void *)(a1 + 32) + 40LL);
    v41[0] = _NSConcreteStackBlock;
    v41[1] = 3221225472LL;
    v41[2] = sub_10015FAB0;
    void v41[3] = &unk_10034FE18;
    __int128 v42 = v26;
    uint64_t v43 = *(void *)(a1 + 48);
    objc_msgSend(v27, "sendMessage:withReply:", v14, v41, v39);
    xpc_release(v14);
  }

  else
  {
    id v28 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v28) {
      id v28 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v29 = objc_msgSend(v28, "shouldLog", v38);
    else {
      LODWORD(v30) = v29;
    }
    __int16 v31 = (os_log_s *)[v28 OSLogObject];
    if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR)) {
      uint64_t v30 = v30;
    }
    else {
      v30 &= 2u;
    }
    if ((_DWORD)v30)
    {
      uint64_t v32 = objc_opt_class(*(void *)(a1 + 32));
      id v33 = [*(id *)(a1 + 40) logUUID];
      int v44 = 138543618;
      uint64_t v45 = v32;
      __int16 v46 = 2114;
      id v47 = v33;
      LODWORD(v40) = 22;
      uint64_t v34 = _os_log_send_and_compose_impl( v30,  0LL,  0LL,  0LL,  &_mh_execute_header,  v31,  16LL,  "[%{public}@]: [%{public}@] No output connection to client, forcing local authentication",  &v44,  v40);
      if (v34)
      {
        uint64_t v35 = (void *)v34;
        +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v34, 4LL);
        free(v35);
        SSFileLog(v28, @"%@");
      }
    }

    uint64_t v36 = *(void *)(a1 + 48);
    uint64_t v37 = SSError(SSErrorDomain, 110LL, 0LL, 0LL);
    (*(void (**)(uint64_t, void, uint64_t))(v36 + 16))(v36, 0LL, v37);
  }

void sub_10015FAB0(uint64_t a1, xpc_object_t object)
{
  if (object == &_xpc_error_connection_invalid || object == &_xpc_error_connection_interrupted)
  {
    id v4 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v4) {
      id v4 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v5 = [v4 shouldLog];
    else {
      LODWORD(v6) = v5;
    }
    uint64_t v7 = (os_log_s *)[v4 OSLogObject];
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      uint64_t v6 = v6;
    }
    else {
      v6 &= 2u;
    }
    if ((_DWORD)v6)
    {
      uint64_t v8 = objc_opt_class(*(void *)(a1 + 32));
      id v9 = [*(id *)(a1 + 40) logUUID];
      int v35 = 138543618;
      uint64_t v36 = v8;
      __int16 v37 = 2114;
      id v38 = v9;
      uint64_t v10 = _os_log_send_and_compose_impl( v6,  0LL,  0LL,  0LL,  &_mh_execute_header,  v7,  16LL,  "[%{public}@]: [%{public}@] Connection interrupted, forcing local authentication",  &v35,  22);
      if (v10)
      {
        id v11 = (void *)v10;
        +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v10, 4LL);
        free(v11);
        SSFileLog(v4, @"%@");
      }
    }

    uint64_t v12 = *(void *)(a1 + 48);
    uint64_t v13 = SSErrorDomain;
    uint64_t v14 = 121LL;
    goto LABEL_32;
  }

  if (!object || xpc_get_type(object) != (xpc_type_t)&_xpc_type_dictionary)
  {
    id v16 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v16) {
      id v16 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v17 = [v16 shouldLog];
    else {
      LODWORD(v1_Block_object_dispose(va, 8) = v17;
    }
    uint64_t v19 = (os_log_s *)[v16 OSLogObject];
    if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
      uint64_t v18 = v18;
    }
    else {
      v18 &= 2u;
    }
    if ((_DWORD)v18)
    {
      uint64_t v20 = objc_opt_class(*(void *)(a1 + 32));
      id v21 = [*(id *)(a1 + 40) logUUID];
      int v35 = 138543618;
      uint64_t v36 = v20;
      __int16 v37 = 2114;
      id v38 = v21;
      uint64_t v22 = _os_log_send_and_compose_impl( v18,  0LL,  0LL,  0LL,  &_mh_execute_header,  v19,  16LL,  "[%{public}@]: [%{public}@] Invalid authentication response, forcing local authentication",  &v35,  22);
      if (v22)
      {
        uint64_t v23 = (void *)v22;
        +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v22, 4LL);
        free(v23);
        SSFileLog(v16, @"%@");
      }
    }

    uint64_t v12 = *(void *)(a1 + 48);
    uint64_t v13 = SSErrorDomain;
    uint64_t v14 = 111LL;
LABEL_32:
    uint64_t v24 = SSError(v13, v14, 0LL, 0LL);
    (*(void (**)(uint64_t, void, uint64_t))(v12 + 16))(v12, 0LL, v24);
    return;
  }

  id v25 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  if (!v25) {
    id v25 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  unsigned int v26 = [v25 shouldLog];
  else {
    LODWORD(v27) = v26;
  }
  id v28 = (os_log_s *)[v25 OSLogObject];
  if (os_log_type_enabled(v28, OS_LOG_TYPE_DEBUG)) {
    uint64_t v27 = v27;
  }
  else {
    v27 &= 2u;
  }
  if ((_DWORD)v27)
  {
    uint64_t v29 = objc_opt_class(*(void *)(a1 + 32));
    id v30 = [*(id *)(a1 + 40) logUUID];
    int v35 = 138543618;
    uint64_t v36 = v29;
    __int16 v37 = 2114;
    id v38 = v30;
    uint64_t v31 = _os_log_send_and_compose_impl( v27,  0LL,  0LL,  0LL,  &_mh_execute_header,  v28,  2LL,  "[%{public}@]: [%{public}@] Received remote authentication response",  &v35,  22);
    if (v31)
    {
      uint64_t v32 = (void *)v31;
      +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v31, 4LL);
      free(v32);
      SSFileLog(v25, @"%@");
    }
  }

  id v33 = -[SSAuthenticateResponse initWithXPCEncoding:]( objc_alloc(&OBJC_CLASS___SSAuthenticateResponse),  "initWithXPCEncoding:",  xpc_dictionary_get_value(object, "0"));
  uint64_t v34 = *(void *)(a1 + 48);
  if (v34) {
    (*(void (**)(uint64_t, SSAuthenticateResponse *, void))(v34 + 16))(v34, v33, 0LL);
  }
}

id sub_10016006C(id *a1)
{
  if (*((void *)a1[4] + 5) && [a1[5] count])
  {
    xpc_object_t v2 = xpc_dictionary_create(0LL, 0LL, 0LL);
    xpc_dictionary_set_int64(v2, "0", 1101LL);
    xpc_object_t v3 = xpc_array_create(0LL, 0LL);
    __int128 v10 = 0u;
    __int128 v11 = 0u;
    __int128 v12 = 0u;
    __int128 v13 = 0u;
    id v4 = a1[5];
    id v5 = [v4 countByEnumeratingWithState:&v10 objects:v14 count:16];
    if (v5)
    {
      id v6 = v5;
      uint64_t v7 = *(void *)v11;
      do
      {
        for (uint64_t i = 0LL; i != v6; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v11 != v7) {
            objc_enumerationMutation(v4);
          }
          [a1[6] setPurchase:*(void *)(*((void *)&v10 + 1) + 8 * (void)i)];
          SSXPCArraySetCFObject(v3, -1LL, a1[6]);
        }

        id v6 = [v4 countByEnumeratingWithState:&v10 objects:v14 count:16];
      }

      while (v6);
    }

    xpc_dictionary_set_value(v2, "1", v3);
    xpc_release(v3);
    [*((id *)a1[4] + 5) sendMessage:v2];
    xpc_release(v2);
  }

  id result = [a1[5] count];
  if (result) {
    return [a1[4] postNotificationWithResponse:a1[6]];
  }
  return result;
}

void sub_10016027C(uint64_t a1)
{
  if (*(void *)(*(void *)(a1 + 32) + 40LL))
  {
    xpc_object_t v2 = xpc_dictionary_create(0LL, 0LL, 0LL);
    xpc_dictionary_set_int64(v2, "0", 1101LL);
    xpc_object_t v3 = xpc_array_create(0LL, 0LL);
    __int128 v10 = 0u;
    __int128 v11 = 0u;
    __int128 v12 = 0u;
    __int128 v13 = 0u;
    id v4 = *(void **)(a1 + 40);
    id v5 = [v4 countByEnumeratingWithState:&v10 objects:v14 count:16];
    if (v5)
    {
      id v6 = v5;
      uint64_t v7 = *(void *)v11;
      do
      {
        for (uint64_t i = 0LL; i != v6; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v11 != v7) {
            objc_enumerationMutation(v4);
          }
          uint64_t v9 = *(void *)(*((void *)&v10 + 1) + 8LL * (void)i);
          SSXPCArraySetCFObject(v3, -1LL, v9);
          [*(id *)(a1 + 32) postNotificationWithResponse:v9];
        }

        id v6 = [v4 countByEnumeratingWithState:&v10 objects:v14 count:16];
      }

      while (v6);
    }

    xpc_dictionary_set_value(v2, "1", v3);
    xpc_release(v3);
    [*(id *)(*(void *)(a1 + 32) + 40) sendMessage:v2];
    xpc_release(v2);
  }

uint64_t sub_100160904(uint64_t result)
{
  *(_BYTE *)(*(void *)(result + 32) + 136LL) = *(_BYTE *)(result + 40);
  return result;
}

uint64_t sub_100160980(uint64_t result)
{
  *(void *)(*(void *)(result + 32) + 152LL) = *(void *)(result + 40);
  return result;
}

uint64_t sub_1001609FC(uint64_t result)
{
  *(_BYTE *)(*(void *)(result + 32) + 16+[SSVSubscriptionEntitlementsCoordinator setCachedSubscriptionEntitlements:]( &OBJC_CLASS___SSVSubscriptionEntitlementsCoordinator,  "setCachedSubscriptionEntitlements:", 0LL) = *(_BYTE *)(result + 40);
  return result;
}

uint64_t sub_100160AB0(uint64_t result)
{
  *(void *)(*(void *)(*(void *)(result + 40) + 8LL) + 24LL) = *(void *)(*(void *)(result + 32) + 152LL);
  return result;
}

uint64_t sub_100160BA0(uint64_t result)
{
  *(_BYTE *)(*(void *)(*(void *)(result + 40) + 8LL) + 24LL) = *(_BYTE *)(*(void *)(result + 32) + 160LL);
  return result;
}

void sub_100160CE8(id a1, SSSQLiteDatabase *a2)
{
}

uint64_t sub_100160D74(uint64_t a1)
{
  xpc_object_t v2 = objc_autoreleasePoolPush();
  xpc_object_t v3 = -[PromotedIAPDatabaseTransaction initWithDatabase:]( objc_alloc(&OBJC_CLASS___PromotedIAPDatabaseTransaction),  "initWithDatabase:",  *(void *)(*(void *)(a1 + 32) + 8LL));
  uint64_t v4 = (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16LL))();

  objc_autoreleasePoolPop(v2);
  return v4;
}

id sub_100160E5C(uint64_t a1)
{
  return [*(id *)(a1 + 32) readUsingTransactionBlock:*(void *)(a1 + 40)];
}

uint64_t sub_100160EE4(uint64_t a1)
{
  xpc_object_t v2 = objc_autoreleasePoolPush();
  xpc_object_t v3 = -[PromotedIAPDatabaseTransaction initWithDatabase:]( objc_alloc(&OBJC_CLASS___PromotedIAPDatabaseTransaction),  "initWithDatabase:",  *(void *)(*(void *)(a1 + 32) + 8LL));
  (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();

  objc_autoreleasePoolPop(v2);
  return 1LL;
}

uint64_t sub_100161108(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_10016111C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 database]);
  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"SELECT product_id, visibility FROM promoted_iaps_visibility_table WHERE product_id IN (%@) AND bundle_id = ?;",
                   *(void *)(a1 + 32)));
  v19[0] = 0LL;
  v19[1] = v19;
  v19[2] = 0x3032000000LL;
  v19[3] = sub_1001612E0;
  void v19[4] = sub_1001612F0;
  uint64_t v20 = objc_opt_new(&OBJC_CLASS___NSMutableDictionary);
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472LL;
  v14[2] = sub_1001612F8;
  v14[3] = &unk_10034D2A8;
  id v15 = *(id *)(a1 + 40);
  id v16 = *(id *)(a1 + 48);
  id v6 = v4;
  id v17 = v6;
  uint64_t v18 = v19;
  [v6 prepareStatementForSQL:v5 cache:1 usingBlock:v14];
  uint64_t v7 = *(void **)(a1 + 56);
  if (v7)
  {
    dispatch_queue_global_t global_queue = dispatch_get_global_queue(0LL, 0LL);
    uint64_t v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1001614E0;
    block[3] = &unk_10034D258;
    id v12 = v7;
    __int128 v13 = v19;
    dispatch_async(v9, block);
  }

  _Block_object_dispose(v19, 8);
  return 1LL;
}

void sub_1001612C8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
}

uint64_t sub_1001612E0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1001612F0(uint64_t a1)
{
}

id sub_1001612F8(uint64_t a1, sqlite3_stmt *a2)
{
  __int128 v18 = 0u;
  __int128 v19 = 0u;
  __int128 v20 = 0u;
  __int128 v21 = 0u;
  id v4 = *(id *)(a1 + 32);
  id v5 = [v4 countByEnumeratingWithState:&v18 objects:v22 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v19;
    int v8 = 1;
    do
    {
      uint64_t v9 = 0LL;
      int v10 = v8;
      do
      {
        if (*(void *)v19 != v7) {
          objc_enumerationMutation(v4);
        }
        id v11 = *(id *)(*((void *)&v18 + 1) + 8LL * (void)v9);
        sqlite3_bind_text(a2, v10 + (_DWORD)v9, (const char *)objc_msgSend(v11, "UTF8String", (void)v18), -1, 0);
        uint64_t v9 = (char *)v9 + 1;
      }

      while (v6 != v9);
      id v6 = [v4 countByEnumeratingWithState:&v18 objects:v22 count:16];
      int v8 = v10 + (_DWORD)v9;
    }

    while (v6);
    int v12 = v10 + (_DWORD)v9;
  }

  else
  {
    int v12 = 1;
  }

  sqlite3_bind_text( a2, v12, (const char *)[*(id *)(a1 + 40) UTF8String], -1, 0);
  id result = [*(id *)(a1 + 48) statementHasRowAfterStepping:a2];
  if ((_DWORD)result)
  {
    do
    {
      uint64_t v14 = +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  sqlite3_column_text(a2, 0));
      id v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
      id v16 = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", sqlite3_column_int(a2, 1));
      id v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
      [*(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) setObject:v17 forKey:v15];

      id result = [*(id *)(a1 + 48) statementHasRowAfterStepping:a2];
    }

    while ((result & 1) != 0);
  }

  return result;
}

uint64_t sub_1001614E0(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 32) + 16LL))( *(void *)(a1 + 32),  *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL));
}

uint64_t sub_100161608(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_10016161C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 database]);
  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"SELECT product_id, visibility FROM promoted_iaps_visibility_table WHERE bundle_id = ?;"));
  v18[0] = 0LL;
  v18[1] = v18;
  v18[2] = 0x3032000000LL;
  v18[3] = sub_1001612E0;
  void v18[4] = sub_1001612F0;
  __int128 v19 = objc_opt_new(&OBJC_CLASS___NSMutableDictionary);
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472LL;
  v14[2] = sub_1001617BC;
  v14[3] = &unk_10034D230;
  id v15 = *(id *)(a1 + 32);
  id v6 = v4;
  id v16 = v6;
  id v17 = v18;
  [v6 prepareStatementForSQL:v5 cache:1 usingBlock:v14];
  uint64_t v7 = *(void **)(a1 + 40);
  if (v7)
  {
    dispatch_queue_global_t global_queue = dispatch_get_global_queue(0LL, 0LL);
    uint64_t v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_10016189C;
    block[3] = &unk_10034D258;
    id v12 = v7;
    __int128 v13 = v18;
    dispatch_async(v9, block);
  }

  _Block_object_dispose(v18, 8);
  return 1LL;
}

void sub_1001617A4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
}

id sub_1001617BC(uint64_t a1, sqlite3_stmt *a2)
{
  id result = [*(id *)(a1 + 40) statementHasRowAfterStepping:a2];
  if ((_DWORD)result)
  {
    do
    {
      id v5 = +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  sqlite3_column_text(a2, 0));
      id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
      uint64_t v7 = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", sqlite3_column_int(a2, 1));
      int v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
      [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) setObject:v8 forKey:v6];

      id result = [*(id *)(a1 + 40) statementHasRowAfterStepping:a2];
    }

    while ((result & 1) != 0);
  }

  return result;
}

uint64_t sub_10016189C(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 32) + 16LL))( *(void *)(a1 + 32),  *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL));
}

uint64_t sub_1001619F4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

BOOL sub_100161A04(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 database]);
  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"SELECT pid FROM promoted_iaps_visibility_table WHERE product_id = ? AND bundle_id = ?;"));
  uint64_t v44 = 0LL;
  uint64_t v45 = &v44;
  uint64_t v46 = 0x3032000000LL;
  id v47 = sub_1001612E0;
  uint64_t v48 = sub_1001612F0;
  id v49 = 0LL;
  v39[0] = _NSConcreteStackBlock;
  v39[1] = 3221225472LL;
  v39[2] = sub_100161DA0;
  v39[3] = &unk_10034D2A8;
  id v40 = *(id *)(a1 + 32);
  id v41 = *(id *)(a1 + 40);
  id v6 = v4;
  id v42 = v6;
  uint64_t v43 = &v44;
  [v6 prepareStatementForSQL:v5 cache:1 usingBlock:v39];
  uint64_t v7 = v45[5];
  if (v7)
  {
    uint64_t v35 = 0LL;
    uint64_t v36 = &v35;
    uint64_t v37 = 0x2020000000LL;
    char v38 = 0;
    int v8 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"INSERT OR REPLACE INTO promoted_iaps_visibility_table (product_id, bundle_id, visibility, pid) VALUES (?, ?, %li, %@);",
                     *(void *)(a1 + 56),
                     v7));
    v30[0] = _NSConcreteStackBlock;
    v30[1] = 3221225472LL;
    v30[2] = sub_100161E68;
    v30[3] = &unk_10034FEB0;
    id v31 = *(id *)(a1 + 32);
    id v32 = *(id *)(a1 + 40);
    uint64_t v34 = &v35;
    id v33 = v6;
    [v33 prepareStatementForSQL:v8 cache:0 usingBlock:v30];

    uint64_t v9 = *(void **)(a1 + 48);
    if (v9)
    {
      dispatch_queue_global_t global_queue = dispatch_get_global_queue(0LL, 0LL);
      id v11 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_100161EE8;
      block[3] = &unk_10034D258;
      id v28 = v9;
      uint64_t v29 = &v35;
      dispatch_async(v11, block);
    }

    int v12 = *((unsigned __int8 *)v36 + 24);

    __int128 v13 = v31;
  }

  else
  {
    uint64_t v35 = 0LL;
    uint64_t v36 = &v35;
    uint64_t v37 = 0x2020000000LL;
    char v38 = 0;
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"INSERT OR REPLACE INTO promoted_iaps_visibility_table (product_id, bundle_id, visibility) VALUES (?, ?, %li);",
                      *(void *)(a1 + 56)));
    v22[0] = _NSConcreteStackBlock;
    v22[1] = 3221225472LL;
    v22[2] = sub_100161F00;
    v22[3] = &unk_10034FEB0;
    id v23 = *(id *)(a1 + 32);
    id v24 = *(id *)(a1 + 40);
    unsigned int v26 = &v35;
    id v25 = v6;
    [v25 prepareStatementForSQL:v14 cache:0 usingBlock:v22];

    id v15 = *(void **)(a1 + 48);
    if (v15)
    {
      dispatch_queue_global_t v16 = dispatch_get_global_queue(0LL, 0LL);
      id v17 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(v16);
      v19[0] = _NSConcreteStackBlock;
      v19[1] = 3221225472LL;
      v19[2] = sub_100161F80;
      v19[3] = &unk_10034D258;
      id v20 = v15;
      __int128 v21 = &v35;
      dispatch_async(v17, v19);
    }

    int v12 = *((unsigned __int8 *)v36 + 24);

    __int128 v13 = v23;
  }

  _Block_object_dispose(&v35, 8);
  _Block_object_dispose(&v44, 8);

  return v12 != 0;
}

void sub_100161D70(_Unwind_Exception *a1)
{
}

id sub_100161DA0(uint64_t a1, sqlite3_stmt *a2)
{
  id result = [*(id *)(a1 + 48) statementHasRowAfterStepping:a2];
  if ((_DWORD)result)
  {
    do
    {
      id v5 = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", sqlite3_column_int(a2, 0));
      uint64_t v6 = objc_claimAutoreleasedReturnValue(v5);
      uint64_t v7 = *(void *)(*(void *)(a1 + 56) + 8LL);
      int v8 = *(void **)(v7 + 40);
      *(void *)(v7 + 40) = v6;

      id result = [*(id *)(a1 + 48) statementHasRowAfterStepping:a2];
    }

    while ((result & 1) != 0);
  }

  return result;
}

id sub_100161E68(uint64_t a1, sqlite3_stmt *a2)
{
  id result = [*(id *)(a1 + 48) statementDidFinishAfterStepping:a2];
  *(_BYTE *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL) = (_BYTE)result;
  return result;
}

uint64_t sub_100161EE8(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 32) + 16LL))( *(void *)(a1 + 32),  *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL));
}

id sub_100161F00(uint64_t a1, sqlite3_stmt *a2)
{
  id result = [*(id *)(a1 + 48) statementDidFinishAfterStepping:a2];
  *(_BYTE *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL) = (_BYTE)result;
  return result;
}

uint64_t sub_100161F80(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 32) + 16LL))( *(void *)(a1 + 32),  *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL));
}

uint64_t sub_1001620A8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_1001620BC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 database]);
  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"SELECT product_id, iap_order FROM promoted_iaps_order_table WHERE bundle_id = ? ORDER BY iap_order ASC;"));
  v18[0] = 0LL;
  v18[1] = v18;
  v18[2] = 0x3032000000LL;
  v18[3] = sub_1001612E0;
  void v18[4] = sub_1001612F0;
  __int128 v19 = objc_opt_new(&OBJC_CLASS___NSMutableArray);
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472LL;
  v14[2] = sub_10016225C;
  v14[3] = &unk_10034D230;
  id v15 = *(id *)(a1 + 32);
  id v6 = v4;
  id v16 = v6;
  id v17 = v18;
  [v6 prepareStatementForSQL:v5 cache:1 usingBlock:v14];
  uint64_t v7 = *(void **)(a1 + 40);
  if (v7)
  {
    dispatch_queue_global_t global_queue = dispatch_get_global_queue(0LL, 0LL);
    uint64_t v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_100162304;
    block[3] = &unk_10034D258;
    id v12 = v7;
    __int128 v13 = v18;
    dispatch_async(v9, block);
  }

  _Block_object_dispose(v18, 8);
  return 1LL;
}

void sub_100162244( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
}

id sub_10016225C(uint64_t a1, sqlite3_stmt *a2)
{
  id result = [*(id *)(a1 + 40) statementHasRowAfterStepping:a2];
  if ((_DWORD)result)
  {
    do
    {
      id v5 = +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  sqlite3_column_text(a2, 0));
      id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
      [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) addObject:v6];

      id result = [*(id *)(a1 + 40) statementHasRowAfterStepping:a2];
    }

    while ((result & 1) != 0);
  }

  return result;
}

uint64_t sub_100162304(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 32) + 16LL))( *(void *)(a1 + 32),  *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL));
}

uint64_t sub_100162478(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_100162488(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 database]);
  uint64_t v39 = 0LL;
  id v40 = &v39;
  uint64_t v41 = 0x2020000000LL;
  char v42 = 0;
  v35[0] = _NSConcreteStackBlock;
  v35[1] = 3221225472LL;
  v35[2] = sub_100162828;
  v35[3] = &unk_10034D1E0;
  id v36 = *(id *)(a1 + 32);
  char v38 = &v39;
  id v5 = v4;
  id v37 = v5;
  objc_msgSend( v5,  "prepareStatementForSQL:cache:usingBlock:",  @"DELETE FROM promoted_iaps_order_table WHERE bundle_id = ?;",
    0LL,
    v35);
  if (!*((_BYTE *)v40 + 24))
  {
    __int128 v13 = *(void **)(a1 + 48);
    if (!v13)
    {
      uint64_t v12 = 0LL;
      goto LABEL_17;
    }

    dispatch_queue_global_t global_queue = dispatch_get_global_queue(0LL, 0LL);
    id v15 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
    v33[0] = _NSConcreteStackBlock;
    v33[1] = 3221225472LL;
    v33[2] = sub_100162884;
    v33[3] = &unk_10034ACB8;
    uint64_t v34 = v13;
    dispatch_async(v15, v33);

    uint64_t v12 = 0LL;
    id v6 = v34;
    goto LABEL_16;
  }

  if ([*(id *)(a1 + 40) count])
  {
    id v6 = objc_opt_new(&OBJC_CLASS___NSMutableString);
    -[NSMutableString deleteCharactersInRange:]( v6,  "deleteCharactersInRange:",  (char *)-[NSMutableString length](v6, "length") - 2,  2LL);
    uint64_t v29 = 0LL;
    id v30 = &v29;
    uint64_t v31 = 0x2020000000LL;
    char v32 = 0;
    int v8 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"INSERT OR REPLACE INTO promoted_iaps_order_table (product_id, bundle_id, iap_order) VALUES %@;",
                     v6));
    v24[0] = _NSConcreteStackBlock;
    v24[1] = 3221225472LL;
    void v24[2] = sub_100162894;
    void v24[3] = &unk_10034FEB0;
    id v25 = *(id *)(a1 + 40);
    id v26 = *(id *)(a1 + 32);
    id v28 = &v29;
    id v27 = v5;
    [v27 prepareStatementForSQL:v8 cache:0 usingBlock:v24];

    if (!*((_BYTE *)v30 + 24))
    {
      id v16 = *(void **)(a1 + 48);
      if (v16)
      {
        dispatch_queue_global_t v17 = dispatch_get_global_queue(0LL, 0LL);
        __int128 v18 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(v17);
        v22[0] = _NSConcreteStackBlock;
        v22[1] = 3221225472LL;
        v22[2] = sub_1001629FC;
        v22[3] = &unk_10034ACB8;
        id v23 = v16;
        dispatch_async(v18, v22);
      }

      _Block_object_dispose(&v29, 8);
      uint64_t v12 = 0LL;
      goto LABEL_16;
    }

    _Block_object_dispose(&v29, 8);
  }

  uint64_t v9 = *(void **)(a1 + 48);
  if (v9)
  {
    dispatch_queue_global_t v10 = dispatch_get_global_queue(0LL, 0LL);
    id v11 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(v10);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_100162A0C;
    block[3] = &unk_10034ACB8;
    __int128 v21 = v9;
    dispatch_async(v11, block);

    uint64_t v12 = 1LL;
    id v6 = v21;
LABEL_16:

    goto LABEL_17;
  }

  uint64_t v12 = 1LL;
LABEL_17:

  _Block_object_dispose(&v39, 8);
  return v12;
}

void sub_1001627F4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, char a29)
{
}

id sub_100162828(uint64_t a1, sqlite3_stmt *a2)
{
  id result = [*(id *)(a1 + 40) statementDidFinishAfterStepping:a2];
  *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = (_BYTE)result;
  return result;
}

uint64_t sub_100162884(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

id sub_100162894(uint64_t a1, sqlite3_stmt *a2)
{
  __int128 v13 = 0u;
  __int128 v14 = 0u;
  __int128 v15 = 0u;
  __int128 v16 = 0u;
  id v4 = *(id *)(a1 + 32);
  id v5 = [v4 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v14;
    int v8 = 1;
    do
    {
      for (unint64_t i = 0LL; i != v6; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v14 != v7) {
          objc_enumerationMutation(v4);
        }
        id v10 = *(id *)(*((void *)&v13 + 1) + 8LL * (void)i);
        sqlite3_bind_text(a2, v8, (const char *)objc_msgSend(v10, "UTF8String", (void)v13), -1, 0);
        int v11 = v8 + 2;
        sqlite3_bind_text( a2, v8 + 1, (const char *)[*(id *)(a1 + 40) UTF8String], -1, 0);
        v8 += 2;
      }

      id v6 = [v4 countByEnumeratingWithState:&v13 objects:v17 count:16];
      int v8 = v11;
    }

    while (v6);
  }

  id result = [*(id *)(a1 + 48) statementDidFinishAfterStepping:a2];
  *(_BYTE *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL) = (_BYTE)result;
  return result;
}

uint64_t sub_1001629FC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_100162A0C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

unint64_t sub_100162ABC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 database]);
  uint64_t v31 = 0LL;
  char v32 = &v31;
  uint64_t v33 = 0x2020000000LL;
  char v34 = 0;
  v27[0] = _NSConcreteStackBlock;
  v27[1] = 3221225472LL;
  v27[2] = sub_100162D4C;
  void v27[3] = &unk_10034D1E0;
  id v28 = *(id *)(a1 + 32);
  id v30 = &v31;
  id v5 = v4;
  id v29 = v5;
  objc_msgSend( v5,  "prepareStatementForSQL:cache:usingBlock:",  @"DELETE FROM promoted_iaps_order_table WHERE bundle_id = ?;",
    0LL,
    v27);
  if (*((_BYTE *)v32 + 24))
  {
    v21[0] = _NSConcreteStackBlock;
    v21[1] = 3221225472LL;
    void v21[2] = sub_100162DB8;
    v21[3] = &unk_10034D1E0;
    id v22 = *(id *)(a1 + 32);
    id v24 = &v31;
    id v23 = (dispatch_queue_s *)v5;
    -[dispatch_queue_s prepareStatementForSQL:cache:usingBlock:]( v23,  "prepareStatementForSQL:cache:usingBlock:",  @"DELETE FROM promoted_iaps_visibility_table WHERE bundle_id = ?;",
      0LL,
      v21);
    id v6 = &v22;
    unint64_t v7 = *((_BYTE *)v32 + 24) != 0;
    int v8 = *(void **)(a1 + 40);
    if (*((_BYTE *)v32 + 24))
    {
      if (v8)
      {
        dispatch_queue_global_t global_queue = dispatch_get_global_queue(0LL, 0LL);
        id v10 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
        v17[0] = _NSConcreteStackBlock;
        v17[1] = 3221225472LL;
        v17[2] = sub_100162E24;
        v17[3] = &unk_10034ACB8;
        int v11 = &v18;
        id v18 = v8;
        uint64_t v12 = v17;
LABEL_9:
        dispatch_async(v10, v12);
      }
    }

    else if (v8)
    {
      dispatch_queue_global_t v15 = dispatch_get_global_queue(0LL, 0LL);
      id v10 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(v15);
      v19[0] = _NSConcreteStackBlock;
      v19[1] = 3221225472LL;
      v19[2] = sub_100162E14;
      v19[3] = &unk_10034ACB8;
      int v11 = &v20;
      id v20 = v8;
      uint64_t v12 = v19;
      goto LABEL_9;
    }

    __int128 v14 = v23;
    goto LABEL_11;
  }

  unint64_t v7 = *(void *)(a1 + 40);
  if (v7)
  {
    dispatch_queue_global_t v13 = dispatch_get_global_queue(0LL, 0LL);
    __int128 v14 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(v13);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_100162DA8;
    block[3] = &unk_10034ACB8;
    id v6 = &v26;
    id v26 = (id)v7;
    dispatch_async(v14, block);
    unint64_t v7 = 0LL;
LABEL_11:
  }

  _Block_object_dispose(&v31, 8);
  return v7;
}

void sub_100162D34(_Unwind_Exception *a1)
{
}

id sub_100162D4C(uint64_t a1, sqlite3_stmt *a2)
{
  id result = [*(id *)(a1 + 40) statementDidFinishAfterStepping:a2];
  *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = (_BYTE)result;
  return result;
}

uint64_t sub_100162DA8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

id sub_100162DB8(uint64_t a1, sqlite3_stmt *a2)
{
  id result = [*(id *)(a1 + 40) statementDidFinishAfterStepping:a2];
  *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = (_BYTE)result;
  return result;
}

uint64_t sub_100162E14(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_100162E24(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_100162EC4(uint64_t a1)
{
  xpc_object_t v2 = objc_autoreleasePoolPush();
  id v3 = objc_alloc_init(&OBJC_CLASS___NSFileManager);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) stringByDeletingLastPathComponent]);
  -[NSFileManager createDirectoryAtPath:withIntermediateDirectories:attributes:error:]( v3,  "createDirectoryAtPath:withIntermediateDirectories:attributes:error:",  v4,  1LL,  0LL,  0LL);

  objc_autoreleasePoolPop(v2);
}

void sub_100162FD8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_100162FF0(uint64_t a1)
{
  *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = +[PromotedIAPDatabaseSchema createOrUpdateSchemaInDatabase:]( &OBJC_CLASS___PromotedIAPDatabaseSchema,  "createOrUpdateSchemaInDatabase:",  *(void *)(a1 + 32));
  return *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL);
}

id sub_10016320C(uint64_t a1)
{
  id result = objc_alloc_init((Class)objc_opt_class(*(void *)(a1 + 32)));
  qword_1003A3580 = (uint64_t)result;
  return result;
}

id sub_100163280(uint64_t a1)
{
  return [*(id *)(a1 + 32) _addPurchases:*(void *)(a1 + 40) forClient:0];
}

id sub_1001632E0(uint64_t a1)
{
  return [*(id *)(a1 + 32) _beginPurchaseBatch:*(void *)(a1 + 40) forClient:0];
}

void sub_100163340(uint64_t a1)
{
  id v2 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  if (!v2) {
    id v2 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  unsigned int v3 = [v2 shouldLog];
  else {
    LODWORD(v4) = v3;
  }
  id v5 = (os_log_s *)[v2 OSLogObject];
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO)) {
    uint64_t v4 = v4;
  }
  else {
    v4 &= 2u;
  }
  if ((_DWORD)v4)
  {
    uint64_t v6 = objc_opt_class(*(void *)(a1 + 32));
    id v7 = [*(id *)(a1 + 40) count];
    *(_DWORD *)id v29 = 138412546;
    *(void *)&v29[4] = v6;
    *(_WORD *)&v29[12] = 2048;
    *(void *)&v29[14] = v7;
    uint64_t v8 = _os_log_send_and_compose_impl( v4,  0LL,  0LL,  0LL,  &_mh_execute_header,  v5,  1LL,  "%@: Canceling purchases for %ld downloads",  v29,  22);
    if (v8)
    {
      uint64_t v9 = (void *)v8;
      id v10 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v8, 4LL);
      free(v9);
      id v20 = v10;
      SSFileLog(v2, @"%@");
    }
  }

  id v22 = objc_alloc_init(&OBJC_CLASS___SSPurchaseResponse);
  -[SSPurchaseResponse setError:](v22, "setError:", SSError(SSErrorDomain, 140LL, 0LL, 0LL));
  id v21 = [*(id *)(a1 + 32) _newEncodedPurchaseEntityPropertiesWithResponse:v22];
  objc_msgSend( v21,  "setObject:forKey:",  +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", 2),  @"state");
  int v11 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
  uint64_t v12 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
  id v13 = +[DownloadsDatabase downloadsDatabase](&OBJC_CLASS___DownloadsDatabase, "downloadsDatabase");
  v28[0] = _NSConcreteStackBlock;
  v28[1] = 3221225472LL;
  v28[2] = sub_100163734;
  void v28[3] = &unk_10034FF50;
  void v28[4] = *(void *)(a1 + 40);
  v28[5] = v12;
  v28[6] = *(void *)(a1 + 32);
  v28[7] = v11;
  v28[8] = v21;
  [v13 modifyUsingPurchaseTransactionBlock:v28];
  __int128 v26 = 0u;
  __int128 v27 = 0u;
  __int128 v24 = 0u;
  __int128 v25 = 0u;
  id v14 = -[NSMutableSet countByEnumeratingWithState:objects:count:]( v12,  "countByEnumeratingWithState:objects:count:",  &v24,  v32,  16LL);
  if (v14)
  {
    uint64_t v15 = *(void *)v25;
    do
    {
      for (unint64_t i = 0LL; i != v14; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v25 != v15) {
          objc_enumerationMutation(v12);
        }
        dispatch_queue_global_t v17 = *(void **)(*((void *)&v24 + 1) + 8LL * (void)i);
        if ((-[NSMutableSet containsObject:](v11, "containsObject:", v17, v20) & 1) == 0)
        {
          *(void *)id v29 = 0LL;
          *(void *)&v29[8] = v29;
          *(void *)&v29[16] = 0x3052000000LL;
          id v30 = sub_100163954;
          uint64_t v31 = sub_100163964;
          id v18 = objc_msgSend(*(id *)(a1 + 32), "_clientForUniqueIdentifier:", objc_msgSend(v17, "longLongValue"));
          id v19 = +[DownloadsDatabase downloadsDatabase](&OBJC_CLASS___DownloadsDatabase, "downloadsDatabase");
          v23[0] = _NSConcreteStackBlock;
          v23[1] = 3221225472LL;
          void v23[2] = sub_100163970;
          void v23[3] = &unk_10034FF78;
          v23[5] = v18;
          void v23[6] = v29;
          v23[4] = *(void *)(a1 + 32);
          [v19 readUsingTransactionBlock:v23];
          if ([*(id *)(*(void *)&v29[8] + 40) count]) {
            [v18 sendResponses:*(void *)(*(void *)&v29[8] + 40)];
          }

          _Block_object_dispose(v29, 8);
        }
      }

      id v14 = -[NSMutableSet countByEnumeratingWithState:objects:count:]( v12,  "countByEnumeratingWithState:objects:count:",  &v24,  v32,  16LL);
    }

    while (v14);
  }
}

void sub_100163714( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, char a39)
{
}

uint64_t sub_100163734(uint64_t a1, void *a2)
{
  id v4 = [a2 database];
  id v5 = +[DownloadEntity queryWithDatabase:predicate:]( DownloadEntity,  "queryWithDatabase:predicate:",  [a2 database],  +[SSSQLiteContainsPredicate containsPredicateWithProperty:values:]( SSSQLiteContainsPredicate,  "containsPredicateWithProperty:values:",  SSSQLEntityPropertyPersistentID,  objc_msgSend(*(id *)(a1 + 32), "allObjects")));
  int v11 = @"purchase_id";
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  void v8[2] = sub_100163854;
  v8[3] = &unk_10034FF28;
  void v8[4] = v4;
  __int128 v6 = *(_OWORD *)(a1 + 56);
  __int128 v9 = *(_OWORD *)(a1 + 40);
  __int128 v10 = v6;
  [v5 enumeratePersistentIDsAndProperties:&v11 count:1 usingBlock:v8];
  return 1LL;
}

void sub_100163854(uint64_t a1, uint64_t a2, id *a3)
{
  id v4 = -[PurchaseEntity initWithPersistentID:inDatabase:]( [PurchaseEntity alloc],  "initWithPersistentID:inDatabase:",  [*a3 longLongValue],  *(void *)(a1 + 32));
  if (v4)
  {
    id v7 = v4;
    id v5 = -[PurchaseEntity valueForProperty:](v4, "valueForProperty:", @"client_id");
    if (!v5) {
      goto LABEL_8;
    }
    __int128 v6 = v5;
    if (([*(id *)(a1 + 40) containsObject:v5] & 1) == 0)
    {
      [*(id *)(a1 + 40) addObject:v6];
      if (objc_msgSend( objc_msgSend( *(id *)(a1 + 48),  "_clientForUniqueIdentifier:",  objc_msgSend(v6, "longLongValue")),  "finishesPurchases")) {
        [*(id *)(a1 + 56) addObject:v6];
      }
    }

    else {
LABEL_8:
    }
      -[PurchaseEntity deleteFromDatabase](v7, "deleteFromDatabase");
  }

void sub_100163954(uint64_t a1, uint64_t a2)
{
}

void sub_100163964(uint64_t a1)
{
}

id sub_100163970(uint64_t a1, void *a2)
{
  id result = objc_msgSend( *(id *)(a1 + 32),  "_newResponsesToPurchasesForClient:inDatabase:",  *(void *)(a1 + 40),  objc_msgSend(a2, "database"));
  *(void *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 4+[SSVSubscriptionEntitlementsCoordinator setCachedSubscriptionEntitlements:]( &OBJC_CLASS___SSVSubscriptionEntitlementsCoordinator,  "setCachedSubscriptionEntitlements:", 0LL) = result;
  return result;
}

id sub_100163A0C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _enqueueNextPurchase];
}

void sub_100163A88(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    objc_msgSend( *(id *)(a1 + 40),  "_addEncodedPurchases:forClient:",  xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 32), "2"),  a2);
    xpc_dictionary_set_BOOL(a3, "0", 1);
  }

  else
  {
    uint64_t v4 = SSError(SSErrorDomain, 107LL, 0LL, 0LL);
    SSXPCDictionarySetCFObject(a3, "1", v4);
  }

void sub_100163B98(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    objc_msgSend( *(id *)(a1 + 32),  "_cancelEncodedPurchases:forClient:",  xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 40), "2"),  a2);
    xpc_dictionary_set_BOOL(a3, "0", 1);
  }

  else
  {
    uint64_t v4 = SSError(SSErrorDomain, 107LL, 0LL, 0LL);
    SSXPCDictionarySetCFObject(a3, "1", v4);
  }

void sub_100163CA4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    xpc_object_t value = (_xpc_endpoint_s *)xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 32), "2");
    if (value)
    {
      id v5 = value;
      if (xpc_get_type(value) == (xpc_type_t)&_xpc_type_endpoint)
      {
        xpc_connection_t v6 = xpc_connection_create_from_endpoint(v5);
        if (v6)
        {
          xpc_connection_t v7 = v6;
          [*(id *)(a1 + 40) _connectClient:a2 withOutputConnection:v6];
          xpc_release(v7);
        }
      }
    }
  }

void sub_100163D6C(id a1, PurchaseManagerClient *a2, OS_xpc_object *a3)
{
  if (a2)
  {
    int64_t v4 = -[PurchaseManagerClient uniqueIdentifier](a2, "uniqueIdentifier");
    if (v4)
    {
      int64_t v5 = v4;
      xpc_object_t v6 = xpc_array_create(0LL, 0LL);
      v8[0] = _NSConcreteStackBlock;
      v8[1] = 3221225472LL;
      void v8[2] = sub_100163E70;
      v8[3] = &unk_100350008;
      void v8[4] = v6;
      void v8[5] = v5;
      objc_msgSend( +[DownloadsDatabase downloadsDatabase](DownloadsDatabase, "downloadsDatabase"),  "readUsingTransactionBlock:",  v8);
      xpc_dictionary_set_value(a3, "2", v6);
      xpc_release(v6);
    }

    xpc_dictionary_set_BOOL(a3, "0", 1);
  }

  else
  {
    uint64_t v7 = SSError(SSErrorDomain, 107LL, 0LL, 0LL);
    SSXPCDictionarySetCFObject(a3, "1", v7);
  }

id sub_100163E70(uint64_t a1, void *a2)
{
  int64_t v4 = +[SSSQLiteComparisonPredicate predicateWithProperty:equalToLongLong:]( &OBJC_CLASS___SSSQLiteComparisonPredicate,  "predicateWithProperty:equalToLongLong:",  @"client_id",  *(void *)(a1 + 40));
  __int128 v9 = @"order_id";
  id v5 = +[PurchaseEntity queryWithDatabase:predicate:orderingProperties:]( PurchaseEntity,  "queryWithDatabase:predicate:orderingProperties:",  [a2 database],  v4,  +[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v9, 1));
  uint64_t v8 = @"encoded_data";
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  void v7[2] = sub_100163F8C;
  v7[3] = &unk_10034ADA8;
  void v7[4] = *(void *)(a1 + 32);
  return [v5 enumeratePersistentIDsAndProperties:&v8 count:1 usingBlock:v7];
}

void sub_100163F8C(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = +[SSPurchase newPurchaseWithDatabaseEncoding:](&OBJC_CLASS___SSPurchase, "newPurchaseWithDatabaseEncoding:", *a3);
  if (v5)
  {
    id v6 = v5;
    [v5 setUniqueIdentifier:a2];
    SSXPCArraySetCFObject(*(void *)(a1 + 32), -1LL, v6);
  }

void sub_10016406C(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    objc_msgSend( *(id *)(a1 + 40),  "_finishEncodedPurchaseIdentifiers:forClient:",  xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 32), "2"),  a2);
    xpc_dictionary_set_BOOL(a3, "0", 1);
  }

  else
  {
    uint64_t v4 = SSError(SSErrorDomain, 107LL, 0LL, 0LL);
    SSXPCDictionarySetCFObject(a3, "1", v4);
  }

void sub_10016417C(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    xpc_object_t value = xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 32), "2");
    objc_msgSend( *(id *)(a1 + 40),  "_insertEncodedPurchases:afterPurchaseID:forClient:",  value,  xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 32), "3"),  a2);
    xpc_dictionary_set_BOOL(a3, "0", 1);
  }

  else
  {
    uint64_t v7 = SSError(SSErrorDomain, 107LL, 0LL, 0LL);
    SSXPCDictionarySetCFObject(a3, "1", v7);
  }

void sub_1001642A4(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    xpc_object_t value = xpc_dictionary_get_value(*(xpc_object_t *)(a1 + 32), "2");
    objc_msgSend( *(id *)(a1 + 40),  "_moveEncodedPurchaseIDs:afterPurchaseID:forClient:",  value,  xpc_dictionary_get_int64(*(xpc_object_t *)(a1 + 32), "3"),  a2);
    xpc_dictionary_set_BOOL(a3, "0", 1);
  }

  else
  {
    uint64_t v7 = SSError(SSErrorDomain, 107LL, 0LL, 0LL);
    SSXPCDictionarySetCFObject(a3, "1", v7);
  }

uint64_t sub_100164648(uint64_t a1, void *a2)
{
  id v3 = [a2 database];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  v6[2] = sub_1001646B8;
  v6[3] = &unk_100350030;
  uint64_t v4 = *(void **)(a1 + 32);
  void v6[4] = *(void *)(a1 + 40);
  void v6[5] = v3;
  xpc_array_apply(v4, v6);
  return 1LL;
}

uint64_t sub_1001646B8(uint64_t a1, int a2, xpc_object_t object)
{
  if (xpc_get_type(object) == (xpc_type_t)&_xpc_type_int64)
  {
    int64_t value = xpc_int64_get_value(object);
    id v6 = -[NSNumber initWithLongLong:](objc_alloc(&OBJC_CLASS___NSNumber), "initWithLongLong:", value);
    if ([*(id *)(*(void *)(a1 + 32) + 64) containsObject:v6])
    {
      [*(id *)(a1 + 32) _markInFlightCanceledPurchaseIdentifier:v6];
    }

    else
    {
      uint64_t v7 = -[PurchaseEntity initWithPersistentID:inDatabase:]( objc_alloc(&OBJC_CLASS___PurchaseEntity),  "initWithPersistentID:inDatabase:",  value,  *(void *)(a1 + 40));
      -[PurchaseEntity deleteFromDatabase](v7, "deleteFromDatabase");
    }
  }

  return 1LL;
}

void sub_1001649B0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
}

id sub_1001649D0(uint64_t a1, void *a2)
{
  id result = objc_msgSend( *(id *)(a1 + 32),  "_newResponsesToPurchasesForClient:inDatabase:",  *(void *)(a1 + 40),  objc_msgSend(a2, "database"));
  *(void *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 4+[SSVSubscriptionEntitlementsCoordinator setCachedSubscriptionEntitlements:]( &OBJC_CLASS___SSVSubscriptionEntitlementsCoordinator,  "setCachedSubscriptionEntitlements:", 0LL) = result;
  return result;
}

uint64_t sub_100164BFC(uint64_t a1, void *a2)
{
  id v3 = [a2 database];
  uint64_t v4 = *(void **)(a1 + 32);
  applier[0] = _NSConcreteStackBlock;
  applier[1] = 3221225472LL;
  applier[2] = sub_100164C6C;
  applier[3] = &unk_10034BAF8;
  void applier[4] = v3;
  xpc_array_apply(v4, applier);
  return 1LL;
}

uint64_t sub_100164C6C(uint64_t a1, int a2, xpc_object_t object)
{
  if (xpc_get_type(object) == (xpc_type_t)&_xpc_type_int64)
  {
    id v5 = -[PurchaseEntity initWithPersistentID:inDatabase:]( objc_alloc(&OBJC_CLASS___PurchaseEntity),  "initWithPersistentID:inDatabase:",  xpc_int64_get_value(object),  *(void *)(a1 + 32));
  }

  return 1LL;
}

void sub_1001650EC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, char a27)
{
}

id sub_10016512C(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  void v7[2] = sub_1001651B8;
  v7[3] = &unk_1003500A8;
  void v7[4] = v4;
  void v7[5] = a2;
  __int128 v8 = *(_OWORD *)(a1 + 56);
  [v4 _filterPurchases:v5 withTransaction:a2 block:v7];
  return [a2 insertPurchases:*(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) afterPurchaseWithIdentifier:*(void *)(a1 + 72) forClient:*(void *)(a1 + 48)];
}

id sub_1001651B8(uint64_t a1, void *a2, void *a3)
{
  if ([a3 count])
  {
    id v6 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v6) {
      id v6 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v7 = [v6 shouldLog];
    else {
      LODWORD(v_Block_object_dispose((const void *)(v27 - 176), 8) = v7;
    }
    __int128 v9 = (os_log_s *)[v6 OSLogObject];
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO)) {
      uint64_t v8 = v8;
    }
    else {
      v8 &= 2u;
    }
    if ((_DWORD)v8)
    {
      uint64_t v10 = objc_opt_class(*(void *)(a1 + 32));
      int v17 = 138412546;
      uint64_t v18 = v10;
      __int16 v19 = 2048;
      id v20 = [a3 count];
      uint64_t v11 = _os_log_send_and_compose_impl( v8,  0LL,  0LL,  0LL,  &_mh_execute_header,  v9,  1LL,  "%@: Reset %ld existing downloads for purchases",  &v17,  22);
      if (v11)
      {
        uint64_t v12 = (void *)v11;
        id v13 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v11, 4LL);
        free(v12);
        __int128 v16 = v13;
        SSFileLog(v6, @"%@");
      }
    }

    id v14 = -[NSOrderedSet initWithArray:]( [NSOrderedSet alloc],  "initWithArray:",  [a3 allKeys]);
    [*(id *)(a1 + 40) resetDownloadsWithIdentifiers:v14];
  }

  *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 4+[SSVSubscriptionEntitlementsCoordinator setCachedSubscriptionEntitlements:]( SSVSubscriptionEntitlementsCoordinator,  "setCachedSubscriptionEntitlements:", 0) = objc_msgSend(a3, "copy", v16);
  id result = [a2 copy];
  *(void *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 4+[SSVSubscriptionEntitlementsCoordinator setCachedSubscriptionEntitlements:]( &OBJC_CLASS___SSVSubscriptionEntitlementsCoordinator,  "setCachedSubscriptionEntitlements:", 0LL) = result;
  return result;
}

void sub_1001653A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = objc_alloc_init(&OBJC_CLASS___SSPurchaseResponse);
  uint64_t v7 = a2;
  -[SSPurchaseResponse setDownloadIdentifiers:]( v6,  "setDownloadIdentifiers:",  +[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v7, 1LL));
  [*(id *)(a1 + 32) sendResponse:v6 forPurchases:a3];
}

id sub_100165654(uint64_t a1, void *a2)
{
  return [a2 movePurchasesWithIdentifiers:*(void *)(a1 + 32) afterPurchaseWithIdentifier:*(void *)(a1 + 40)];
}

void sub_1001657F0(uint64_t a1, uint64_t a2, void *a3)
{
  id v11 = +[SSPurchase newPurchaseWithDatabaseEncoding:]( &OBJC_CLASS___SSPurchase,  "newPurchaseWithDatabaseEncoding:",  *a3);
  [v11 setUniqueIdentifier:a2];
  if (v11)
  {
    id v6 = objc_alloc_init(&OBJC_CLASS___SSPurchaseResponse);
    -[SSPurchaseResponse setPurchase:](v6, "setPurchase:", v11);
    uint64_t v7 = a3[1];
    if (v7)
    {
      uint64_t v8 = objc_opt_class(&OBJC_CLASS___NSError);
      id ObjectWithArchivedData = (void *)SSCodingCreateObjectWithArchivedData(v7, v8);
      -[SSPurchaseResponse setError:](v6, "setError:", ObjectWithArchivedData);
    }

    if (a3[2])
    {
      uint64_t v10 = -[SSURLConnectionResponse initWithDatabaseEncoding:]( objc_alloc(&OBJC_CLASS___SSURLConnectionResponse),  "initWithDatabaseEncoding:",  a3[2]);
      -[SSPurchaseResponse setURLResponse:](v6, "setURLResponse:", v10);
    }

    [*(id *)(a1 + 32) addObject:v6];
  }

id sub_100165980(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 24) removeObjectIdenticalTo:*(void *)(a1 + 40)];
}

void sub_100165D6C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
}

id sub_100165DAC(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  void v7[2] = sub_100165E38;
  v7[3] = &unk_1003500A8;
  void v7[4] = v4;
  void v7[5] = a2;
  __int128 v8 = *(_OWORD *)(a1 + 56);
  [v4 _filterPurchases:v5 withTransaction:a2 block:v7];
  return [a2 addPurchases:*(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) forClient:*(void *)(a1 + 48)];
}

id sub_100165E38(uint64_t a1, void *a2, void *a3)
{
  if ([a3 count])
  {
    id v6 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v6) {
      id v6 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v7 = [v6 shouldLog];
    else {
      LODWORD(v_Block_object_dispose((const void *)(v17 - 176), 8) = v7;
    }
    __int128 v9 = (os_log_s *)[v6 OSLogObject];
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO)) {
      uint64_t v8 = v8;
    }
    else {
      v8 &= 2u;
    }
    if ((_DWORD)v8)
    {
      uint64_t v10 = objc_opt_class(*(void *)(a1 + 32));
      int v17 = 138412546;
      uint64_t v18 = v10;
      __int16 v19 = 2048;
      id v20 = [a3 count];
      uint64_t v11 = _os_log_send_and_compose_impl( v8,  0LL,  0LL,  0LL,  &_mh_execute_header,  v9,  1LL,  "%@: Reset %ld existing downloads for purchases",  &v17,  22);
      if (v11)
      {
        uint64_t v12 = (void *)v11;
        id v13 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v11, 4LL);
        free(v12);
        __int128 v16 = v13;
        SSFileLog(v6, @"%@");
      }
    }

    id v14 = -[NSOrderedSet initWithArray:]( [NSOrderedSet alloc],  "initWithArray:",  [a3 allKeys]);
    [*(id *)(a1 + 40) resetDownloadsWithIdentifiers:v14];
  }

  *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 4+[SSVSubscriptionEntitlementsCoordinator setCachedSubscriptionEntitlements:]( SSVSubscriptionEntitlementsCoordinator,  "setCachedSubscriptionEntitlements:", 0) = objc_msgSend(a3, "copy", v16);
  id result = a2;
  *(void *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 4+[SSVSubscriptionEntitlementsCoordinator setCachedSubscriptionEntitlements:]( &OBJC_CLASS___SSVSubscriptionEntitlementsCoordinator,  "setCachedSubscriptionEntitlements:", 0LL) = result;
  return result;
}

void sub_10016601C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = objc_alloc_init(&OBJC_CLASS___SSPurchaseResponse);
  uint64_t v7 = a2;
  -[SSPurchaseResponse setDownloadIdentifiers:]( v6,  "setDownloadIdentifiers:",  +[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v7, 1LL));
  [*(id *)(a1 + 32) sendResponse:v6 forPurchases:a3];
}

id sub_100166294(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return objc_msgSend( objc_msgSend(*(id *)(a1 + 32), "object"),  "_finishAuthenticationRequestForBatchIdentifier:client:withAccountID:error:",  *(void *)(a1 + 48),  *(void *)(a1 + 40),  a2,  a3);
}

void sub_100166630(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  __int128 v9 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  id v10 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  id v11 = v10;
  uint64_t v42 = a1;
  if (a2)
  {
    if (!v10) {
      id v11 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v12 = [v11 shouldLog];
    else {
      unsigned int v13 = v12;
    }
    id v14 = (os_log_s *)[v11 OSLogObject];
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG)) {
      uint64_t v16 = v13;
    }
    else {
      uint64_t v16 = v13 & 2;
    }
    if ((_DWORD)v16)
    {
      uint64_t v17 = objc_opt_class(*(void *)(a1 + 32));
      int v49 = 138412290;
      uint64_t v50 = v17;
      uint64_t v18 = _os_log_send_and_compose_impl( v16,  0LL,  0LL,  0LL,  &_mh_execute_header,  v14,  2LL,  "%@: Space is available for all purchases",  &v49,  12);
      if (v18)
      {
        __int16 v19 = (void *)v18;
        id v20 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v18, 4LL);
        free(v19);
        uint64_t v41 = v20;
        *(void *)&double v15 = SSFileLog(v11, @"%@").n128_u64[0];
      }
    }

    -[NSMutableArray addObjectsFromArray:](v9, "addObjectsFromArray:", *(void *)(a1 + 40), v15, v41);
    goto LABEL_38;
  }

  if (!v10) {
    id v11 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  unsigned int v21 = [v11 shouldLog];
  else {
    unsigned int v22 = v21;
  }
  id v23 = (os_log_s *)[v11 OSLogObject];
  if (os_log_type_enabled(v23, OS_LOG_TYPE_DEBUG)) {
    uint64_t v24 = v22;
  }
  else {
    uint64_t v24 = v22 & 2;
  }
  if ((_DWORD)v24)
  {
    uint64_t v25 = objc_opt_class(*(void *)(a1 + 32));
    int v49 = 138412802;
    uint64_t v50 = v25;
    __int16 v51 = 2048;
    uint64_t v52 = a3;
    __int16 v53 = 2112;
    uint64_t v54 = a4;
    uint64_t v26 = _os_log_send_and_compose_impl( v24,  0LL,  0LL,  0LL,  &_mh_execute_header,  v23,  2LL,  "%@: Only %llu bytes available: %@",  &v49,  32);
    if (v26)
    {
      uint64_t v27 = (void *)v26;
      id v28 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v26, 4LL);
      free(v27);
      uint64_t v41 = v28;
      SSFileLog(v11, @"%@");
    }
  }

  __int128 v46 = 0u;
  __int128 v47 = 0u;
  __int128 v44 = 0u;
  __int128 v45 = 0u;
  id v29 = *(void **)(a1 + 40);
  id v30 = objc_msgSend(v29, "countByEnumeratingWithState:objects:count:", &v44, v48, 16, v41);
  if (v30)
  {
    id v31 = v30;
    uint64_t v32 = 0LL;
    uint64_t v33 = *(void *)v45;
    do
    {
      for (unint64_t i = 0LL; i != v31; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v45 != v33) {
          objc_enumerationMutation(v29);
        }
        uint64_t v35 = *(void **)(*((void *)&v44 + 1) + 8LL * (void)i);
        if (([v35 createsDownloads] & 1) == 0)
        {
          id v37 = v9;
          goto LABEL_34;
        }

        id v36 = [v35 expectedDownloadFileSize];
        if ((unint64_t)v36 > a3 - v32)
        {
          id v37 = v8;
LABEL_34:
          -[NSMutableArray addObject:](v37, "addObject:", v35);
          continue;
        }

        id v38 = v36;
        -[NSMutableArray addObject:](v9, "addObject:", v35);
        v32 += (uint64_t)v38;
      }

      id v31 = [v29 countByEnumeratingWithState:&v44 objects:v48 count:16];
    }

    while (v31);
  }

id sub_1001669F8(uint64_t a1)
{
  if ([*(id *)(a1 + 32) count])
  {
    id v2 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v2) {
      id v2 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v3 = [v2 shouldLog];
    else {
      LODWORD(v4) = v3;
    }
    uint64_t v5 = (os_log_s *)[v2 OSLogObject];
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG)) {
      uint64_t v4 = v4;
    }
    else {
      v4 &= 2u;
    }
    if ((_DWORD)v4)
    {
      uint64_t v7 = objc_opt_class(*(void *)(a1 + 40));
      uint64_t v8 = *(void *)(a1 + 32);
      int v25 = 138412546;
      uint64_t v26 = v7;
      __int16 v27 = 2112;
      uint64_t v28 = v8;
      uint64_t v9 = _os_log_send_and_compose_impl( v4,  0LL,  0LL,  0LL,  &_mh_execute_header,  v5,  2LL,  "%@: Failing purchases due to lack of space: %@",  &v25,  22);
      if (v9)
      {
        id v10 = (void *)v9;
        id v11 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v9, 4LL);
        free(v10);
        id v23 = v11;
        *(void *)&double v6 = SSFileLog(v2, @"%@").n128_u64[0];
      }
    }

    objc_msgSend( *(id *)(a1 + 40),  "_cancelPurchasesForLackOfDiskSpace:client:",  *(void *)(a1 + 32),  *(void *)(a1 + 48),  v6,  v23);
  }

  id result = [*(id *)(a1 + 56) count];
  if (result)
  {
    id v13 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v13) {
      id v13 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v14 = [v13 shouldLog];
    else {
      LODWORD(v15) = v14;
    }
    uint64_t v16 = (os_log_s *)[v13 OSLogObject];
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEBUG)) {
      uint64_t v15 = v15;
    }
    else {
      v15 &= 2u;
    }
    if ((_DWORD)v15)
    {
      uint64_t v18 = objc_opt_class(*(void *)(a1 + 40));
      uint64_t v19 = *(void *)(a1 + 56);
      int v25 = 138412546;
      uint64_t v26 = v18;
      __int16 v27 = 2112;
      uint64_t v28 = v19;
      LODWORD(v24) = 22;
      uint64_t v20 = _os_log_send_and_compose_impl( v15,  0LL,  0LL,  0LL,  &_mh_execute_header,  v16,  2LL,  "%@: Proceeding with purchases that fit in remaining space: %@",  &v25,  v24);
      if (v20)
      {
        unsigned int v21 = (void *)v20;
        unsigned int v22 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v20, 4LL);
        free(v21);
        id v23 = v22;
        *(void *)&double v17 = SSFileLog(v13, @"%@").n128_u64[0];
      }
    }

    objc_msgSend( *(id *)(a1 + 40),  "_authenticateForPurchases:client:",  *(void *)(a1 + 56),  *(void *)(a1 + 48),  v17,  v23);
    return [*(id *)(a1 + 40) _enqueueNextPurchase];
  }

  return result;
}

uint64_t sub_100166D44(uint64_t a1, void *a2)
{
  __int128 v9 = 0u;
  __int128 v10 = 0u;
  __int128 v11 = 0u;
  __int128 v12 = 0u;
  unsigned int v3 = *(void **)(a1 + 32);
  id v4 = [v3 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (!v4) {
    return 1LL;
  }
  id v5 = v4;
  uint64_t v6 = *(void *)v10;
LABEL_3:
  uint64_t v7 = 0LL;
  while (1)
  {
    if (*(void *)v10 != v6) {
      objc_enumerationMutation(v3);
    }
    uint64_t result = (uint64_t)objc_msgSend( a2,  "cancelPurchaseWithIdentifier:applyingProperties:",  objc_msgSend(*(id *)(*((void *)&v9 + 1) + 8 * v7), "uniqueIdentifier"),  0);
    if (!(_DWORD)result) {
      return result;
    }
    if (v5 == (id)++v7)
    {
      id v5 = [v3 countByEnumeratingWithState:&v9 objects:v13 count:16];
      if (v5) {
        goto LABEL_3;
      }
      return 1LL;
    }
  }

void sub_100166F6C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
}

uint64_t sub_100166F8C(uint64_t a1, void *a2)
{
  id v4 = +[PurchaseEntity queryWithDatabase:predicate:]( PurchaseEntity,  "queryWithDatabase:predicate:",  [a2 database],  +[SSSQLiteComparisonPredicate predicateWithProperty:equalToLongLong:]( SSSQLiteComparisonPredicate,  "predicateWithProperty:equalToLongLong:",  @"batch_id",  *(void *)(a1 + 56)));
  v10[0] = @"client_id";
  v10[1] = @"encoded_data";
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  v6[2] = sub_1001670AC;
  v6[3] = &unk_1003501C0;
  uint64_t v8 = *(void *)(a1 + 56);
  char v9 = *(_BYTE *)(a1 + 64);
  void v6[4] = *(void *)(a1 + 32);
  void v6[5] = a2;
  __int128 v7 = *(_OWORD *)(a1 + 40);
  [v4 enumeratePersistentIDsAndProperties:v10 count:2 usingBlock:v6];
  return *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL);
}

void sub_1001670AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _BYTE *a5)
{
  id v10 = +[SSPurchase newPurchaseWithDatabaseEncoding:]( &OBJC_CLASS___SSPurchase,  "newPurchaseWithDatabaseEncoding:",  *(void *)(a3 + 8));
  [v10 setBatchIdentifier:*(void *)(a1 + 64)];
  [v10 setUniqueIdentifier:a2];
  if (v10) {
    [*(id *)(a1 + 32) addObject:v10];
  }
  uint64_t v8 = *(void **)(a1 + 40);
  if (*(_BYTE *)(a1 + 72)) {
    unsigned __int8 v9 = [v8 deletePurchaseWithIdentifier:a2];
  }
  else {
    unsigned __int8 v9 = [v8 cancelPurchaseWithIdentifier:a2 applyingProperties:*(void *)(a1 + 48)];
  }
  *(_BYTE *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL) = v9;
  *a5 = *(_BYTE *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL) ^ 1;
}

uint64_t sub_10016763C(uint64_t a1, void *a2)
{
  id v4 = +[SSSQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SSSQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"process_id",  *(void *)(a1 + 32));
  id v5 = +[SSSQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SSSQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"manager_id",  *(void *)(a1 + 40));
  v10[0] = v4;
  v10[1] = v5;
  uint64_t v6 = (PurchaseManagerEntity *) +[PurchaseManagerEntity anyInDatabase:predicate:]( PurchaseManagerEntity,  "anyInDatabase:predicate:",  [a2 database],  +[SSSQLiteCompoundPredicate predicateMatchingAllPredicates:]( SSSQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  +[NSArray arrayWithObjects:count:]( NSArray,  "arrayWithObjects:count:",  v10,  2)));
  if (!v6)
  {
    __int128 v7 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    -[NSMutableDictionary setObject:forKey:](v7, "setObject:forKey:", *(void *)(a1 + 40), @"manager_id");
    -[NSMutableDictionary setObject:forKey:](v7, "setObject:forKey:", *(void *)(a1 + 32), @"process_id");
    -[NSMutableDictionary setObject:forKey:]( v7,  "setObject:forKey:",  SSGetStringForURLBagType([*(id *)(a1 + 48) URLBagType]),  @"url_bag_type");
    id v8 = [*(id *)(a1 + 48) clientIdentifierHeader];
    if (v8) {
      -[NSMutableDictionary setObject:forKey:](v7, "setObject:forKey:", v8, @"client_id_header");
    }
    uint64_t v6 = -[PurchaseManagerEntity initWithPropertyValues:inDatabase:]( [PurchaseManagerEntity alloc],  "initWithPropertyValues:inDatabase:",  v7,  [a2 database]);
  }

  [*(id *)(a1 + 48) setFinishesPurchases:1];
  objc_msgSend(*(id *)(a1 + 48), "setUniqueIdentifier:", -[PurchaseManagerEntity persistentID](v6, "persistentID"));

  return 1LL;
}

uint64_t sub_100167810(uint64_t a1, void *a2)
{
  return 1LL;
}

id sub_1001679C0(uint64_t a1)
{
  id v2 = *(_BYTE **)(a1 + 32);
  if (!v2[32])
  {
    [v2 _garbageCollectInflightPurchases];
    *(_BYTE *)(*(void *)(a1 + 32) + 32LL) = 1;
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
  return objc_msgSend( +[Daemon daemon](Daemon, "daemon"),  "releaseKeepAliveAssertion:",  @"com.apple.itunesstored.PurchaseController");
}

void sub_100167C28(_Unwind_Exception *a1)
{
}

uint64_t sub_100167C58(uint64_t a1, void *a2)
{
  id v3 = [a2 database];
  id v10 = @"order_id";
  id v4 = +[PurchaseEntity queryWithDatabase:predicate:orderingProperties:]( &OBJC_CLASS___PurchaseEntity,  "queryWithDatabase:predicate:orderingProperties:",  v3,  +[SSSQLiteComparisonPredicate predicateWithProperty:equalToLongLong:]( &OBJC_CLASS___SSSQLiteComparisonPredicate,  "predicateWithProperty:equalToLongLong:",  @"state",  0LL),  +[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v10, 1LL));
  v9[0] = @"batch_id";
  v9[1] = @"client_id";
  v9[2] = @"encoded_data";
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  void v7[2] = sub_100167D98;
  v7[3] = &unk_100350260;
  uint64_t v5 = *(void *)(a1 + 32);
  __int128 v8 = *(_OWORD *)(a1 + 40);
  void v7[4] = v5;
  void v7[5] = v3;
  [v4 enumeratePersistentIDsAndProperties:v9 count:3 usingBlock:v7];
  return 1LL;
}

void sub_100167D98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _BYTE *a5)
{
  id v9 = [*(id *)a3 integerValue];
  if (([*(id *)(*(void *)(a1 + 32) + 16) containsIndex:v9] & 1) == 0)
  {
    id v10 = +[SSPurchase newPurchaseWithDatabaseEncoding:]( &OBJC_CLASS___SSPurchase,  "newPurchaseWithDatabaseEncoding:",  *(void *)(a3 + 16));
    if (v10)
    {
      id v17 = v10;
      [v10 setBatchIdentifier:v9];
      [v17 setUniqueIdentifier:a2];
      *(void *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 4+[SSVSubscriptionEntitlementsCoordinator setCachedSubscriptionEntitlements:]( &OBJC_CLASS___SSVSubscriptionEntitlementsCoordinator,  "setCachedSubscriptionEntitlements:", 0LL) = -[PurchaseManagerOperation initWithPurchase:]( objc_alloc(&OBJC_CLASS___PurchaseManagerOperation),  "initWithPurchase:",  v17);
      *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = [*(id *)(a3 + 8) longLongValue];
      if (*(void *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL))
      {
        id v11 = objc_msgSend(*(id *)(a1 + 32), "_clientForUniqueIdentifier:");
        if (v11)
        {
          __int128 v12 = v11;
          id v13 = [v11 URLBagType];
          objc_msgSend( *(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40),  "setClientIdentifier:",  objc_msgSend(v12, "clientIdentifier"));
          objc_msgSend( *(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40),  "setClientIdentifierHeader:",  objc_msgSend(v12, "clientIdentifierHeader"));
          objc_msgSend( *(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40),  "setUseRemoteAuthentication:",  objc_msgSend(v12, "useRemoteAuthentication"));
        }

        else
        {
          unsigned int v14 = -[PurchaseManagerEntity initWithPersistentID:inDatabase:]( objc_alloc(&OBJC_CLASS___PurchaseManagerEntity),  "initWithPersistentID:inDatabase:",  *(void *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL),  *(void *)(a1 + 40));
          objc_msgSend( *(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40),  "setClientIdentifierHeader:",  -[PurchaseManagerEntity valueForProperty:](v14, "valueForProperty:", @"client_id_header"));
          id v13 = (id)SSURLBagTypeForString(-[PurchaseManagerEntity valueForProperty:](v14, "valueForProperty:", @"url_bag_type"));
        }
      }

      else
      {
        id v13 = 0LL;
      }

      uint64_t v15 = (void *)ISClientIdentifierForBundleIdentifier([v17 buyParametersValueForKey:@"originatingBundleID"]);
      if ([v15 length]) {
        [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) setClientIdentifierHeader:v15];
      }
      if ([v17 requestProperties]) {
        id v13 = objc_msgSend(objc_msgSend(v17, "requestProperties"), "URLBagType");
      }
      [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) setURLBagType:v13];
      uint64_t v16 = -[PurchaseEntity initWithPersistentID:inDatabase:]( objc_alloc(&OBJC_CLASS___PurchaseEntity),  "initWithPersistentID:inDatabase:",  a2,  *(void *)(a1 + 40));
      -[PurchaseEntity setValue:forProperty:]( v16,  "setValue:forProperty:",  +[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", 1LL),  @"state");

      *a5 = 1;
    }
  }

id sub_10016802C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return objc_msgSend( objc_msgSend(*(id *)(a1 + 32), "object"),  "_sendAuthenticateRequestForClientUniqueID:withContext:responseHandler:",  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24),  a2,  a3);
}

id sub_100168074(uint64_t a1, uint64_t a2)
{
  return objc_msgSend( objc_msgSend(*(id *)(a1 + 32), "object"),  "_finishPurchaseRequestForClientUniqueID:withResponse:",  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24),  a2);
}

id sub_100168470(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    id v2 = +[DownloadsDatabase downloadsDatabase](&OBJC_CLASS___DownloadsDatabase, "downloadsDatabase");
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472LL;
    v14[2] = sub_100168654;
    v14[3] = &unk_1003502F8;
    void v14[4] = *(void *)(a1 + 64);
    [v2 modifyUsingPurchaseTransactionBlock:v14];
  }

  else
  {
    id v3 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v3) {
      id v3 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v4 = [v3 shouldLog];
    else {
      LODWORD(v5) = v4;
    }
    uint64_t v6 = (os_log_s *)[v3 OSLogObject];
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v5 = v5;
    }
    else {
      v5 &= 2u;
    }
    if ((_DWORD)v5)
    {
      uint64_t v7 = objc_opt_class(*(void *)(a1 + 40));
      int v15 = 138412290;
      uint64_t v16 = v7;
      uint64_t v8 = _os_log_send_and_compose_impl( v5,  0LL,  0LL,  0LL,  &_mh_execute_header,  v6,  0LL,  "%@: Canceling purchase batch after authentication failure",  &v15,  12);
      if (v8)
      {
        id v9 = (void *)v8;
        id v10 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v8, 4LL);
        free(v9);
        id v13 = v10;
        SSFileLog(v3, @"%@");
      }
    }

    id v11 = objc_alloc_init(&OBJC_CLASS___SSPurchaseResponse);
    -[SSPurchaseResponse setError:](v11, "setError:", *(void *)(a1 + 48));
    [*(id *)(a1 + 40) _cancelPurchasesWithBatchIdentifier:*(void *)(a1 + 64) client:*(void *)(a1 + 56) response:v11];
  }

  objc_msgSend(*(id *)(*(void *)(a1 + 40) + 16), "removeIndex:", *(void *)(a1 + 64), v13);
  return [*(id *)(a1 + 40) _enqueueNextPurchase];
}

uint64_t sub_100168654(uint64_t a1, void *a2)
{
  id v3 = [a2 database];
  id v4 = +[PurchaseEntity queryWithDatabase:predicate:]( &OBJC_CLASS___PurchaseEntity,  "queryWithDatabase:predicate:",  v3,  +[SSSQLiteComparisonPredicate predicateWithProperty:equalToLongLong:]( &OBJC_CLASS___SSSQLiteComparisonPredicate,  "predicateWithProperty:equalToLongLong:",  @"batch_id",  *(void *)(a1 + 32)));
  uint64_t v7 = @"encoded_data";
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  v6[2] = sub_100168734;
  v6[3] = &unk_10034ADA8;
  void v6[4] = v3;
  [v4 enumeratePersistentIDsAndProperties:&v7 count:1 usingBlock:v6];
  return 1LL;
}

void sub_100168734(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = +[SSPurchase newPurchaseWithDatabaseEncoding:](&OBJC_CLASS___SSPurchase, "newPurchaseWithDatabaseEncoding:", *a3);
  if (v5)
  {
    uint64_t v6 = v5;
    [v5 setUniqueIdentifier:a2];
    [v6 setPreauthenticated:1];
    uint64_t v7 = -[PurchaseEntity initWithPersistentID:inDatabase:]( objc_alloc(&OBJC_CLASS___PurchaseEntity),  "initWithPersistentID:inDatabase:",  a2,  *(void *)(a1 + 32));
    uint64_t v8 = @"encoded_data";
    id v9 = [v6 databaseEncoding];
    -[PurchaseEntity setValuesWithDictionary:]( v7,  "setValuesWithDictionary:",  +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v9,  &v8,  1LL));
  }

id sub_100168874(uint64_t a1)
{
  return objc_msgSend( objc_msgSend(*(id *)(a1 + 32), "_clientForUniqueIdentifier:", *(void *)(a1 + 56)),  "sendAuthenticateRequestWithContext:responseHandler:",  *(void *)(a1 + 40),  *(void *)(a1 + 48));
}

void sub_1001688F4(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _clientForUniqueIdentifier:*(void *)(a1 + 48)];
  id v3 = [v2 clientIdentifier];
  id v4 = [*(id *)(a1 + 40) purchase];
  id v5 = [v4 uniqueIdentifier];
  uint64_t v6 = -[NSNumber initWithLongLong:](objc_alloc(&OBJC_CLASS___NSNumber), "initWithLongLong:", v5);
  id v7 = [v4 valueForDownloadProperty:SSDownloadPropertyKind];
  unsigned __int8 v8 = [v7 isEqual:@"book"];
  if ([*(id *)(a1 + 40) cancelsPurchaseBatch])
  {
    id v9 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v9) {
      id v9 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v10 = [v9 shouldLog];
    else {
      LODWORD(v11) = v10;
    }
    __int128 v12 = (os_log_s *)[v9 OSLogObject];
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v11 = v11;
    }
    else {
      v11 &= 2u;
    }
    if ((_DWORD)v11)
    {
      uint64_t v14 = objc_opt_class(*(void *)(a1 + 32));
      int v29 = 138412290;
      uint64_t v30 = v14;
      uint64_t v15 = _os_log_send_and_compose_impl( v11,  0LL,  0LL,  0LL,  &_mh_execute_header,  v12,  0LL,  "%@: Canceling purchase batch after purchase failure",  &v29,  12);
      if (v15)
      {
        uint64_t v16 = (void *)v15;
        id v17 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v15, 4LL);
        free(v16);
        uint64_t v20 = v17;
        *(void *)&double v13 = SSFileLog(v9, @"%@").n128_u64[0];
      }
    }

    objc_msgSend( *(id *)(a1 + 32),  "_cancelPurchasesWithBatchIdentifier:client:response:",  objc_msgSend(v4, "batchIdentifier", v13, v20),  v2,  *(void *)(a1 + 40));
  }

  else
  {
    unsigned __int8 v18 = [*(id *)(*(void *)(a1 + 32) + 48) containsObject:v6];
    id v19 = +[DownloadsDatabase downloadsDatabase](&OBJC_CLASS___DownloadsDatabase, "downloadsDatabase");
    v21[0] = _NSConcreteStackBlock;
    v21[1] = 3221225472LL;
    void v21[2] = sub_100168BC8;
    v21[3] = &unk_100350348;
    unsigned __int8 v27 = v18;
    void v21[4] = v2;
    __int128 v22 = *(_OWORD *)(a1 + 32);
    id v23 = v7;
    id v24 = v4;
    id v25 = v3;
    id v26 = v5;
    unsigned __int8 v28 = v8;
    [v19 modifyUsingPurchaseTransactionBlock:v21];
    if ((v18 & 1) == 0) {
      [v2 sendResponse:*(void *)(a1 + 40)];
    }
  }

  if (objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "decodedResponse"), "triggeredQueueCheck")) {
    objc_msgSend( *(id *)(a1 + 32),  "_checkStoreDownloadQueuesForPurchase:response:",  v4,  objc_msgSend(*(id *)(a1 + 40), "decodedResponse"));
  }
  [*(id *)(*(void *)(a1 + 32) + 48) removeObject:v6];
  [*(id *)(*(void *)(a1 + 32) + 64) removeObject:v6];
  [*(id *)(a1 + 32) _enqueueNextPurchase];
}

uint64_t sub_100168BC8(uint64_t a1, void *a2)
{
  if (*(_BYTE *)(a1 + 88))
  {
    [a2 deletePurchaseWithIdentifier:*(void *)(a1 + 80)];
  }

  else
  {
    id v4 = -[PurchaseEntity initWithPersistentID:inDatabase:]( [PurchaseEntity alloc],  "initWithPersistentID:inDatabase:",  *(void *)(a1 + 80),  [a2 database]);
    id v5 = *(void **)(a1 + 32);
    if (v5 && ([v5 finishesPurchases] & 1) == 0)
    {
      -[PurchaseEntity deleteFromDatabase](v4, "deleteFromDatabase");
    }

    else
    {
      id v6 = [*(id *)(a1 + 40) _newEncodedPurchaseEntityPropertiesWithResponse:*(void *)(a1 + 48)];
      objc_msgSend( v6,  "setObject:forKey:",  +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", 2),  @"state");
      -[PurchaseEntity setValuesWithDictionary:](v4, "setValuesWithDictionary:", v6);
    }
  }

  if ((SSDownloadKindIsSoftwareKind(*(void *)(a1 + 56)) & 1) == 0
    && ([*(id *)(a1 + 64) createsDownloads] & 1) != 0
    || SSDownloadKindIsSoftwareKind(*(void *)(a1 + 56))
    && [*(id *)(a1 + 64) createsJobs])
  {
    if ([a2 placeholderDownloadCanceledForPurchaseIdentifier:*(void *)(a1 + 80)])
    {
      id v7 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
      if (!v7) {
        id v7 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
      }
      unsigned int v8 = [v7 shouldLog];
      else {
        LODWORD(v9) = v8;
      }
      unsigned int v10 = (os_log_s *)[v7 OSLogObject];
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT)) {
        uint64_t v9 = v9;
      }
      else {
        v9 &= 2u;
      }
      if ((_DWORD)v9)
      {
        uint64_t v11 = objc_opt_class(*(void *)(a1 + 40));
        int v17 = 138412290;
        uint64_t v18 = v11;
        uint64_t v12 = _os_log_send_and_compose_impl( v9,  0LL,  0LL,  0LL,  &_mh_execute_header,  v10,  0LL,  "%@: Not queuing downloads for purchase because placeholder download was canceled",  &v17,  12);
        if (v12)
        {
          double v13 = (void *)v12;
          +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v12, 4LL);
          free(v13);
          SSFileLog(v7, @"%@");
        }
      }
    }

    else
    {
      id v14 = objc_msgSend( a2,  "replacePurchase:withDownloadQueueResponse:withClientIdentifier:",  objc_msgSend(*(id *)(a1 + 48), "purchase"),  objc_msgSend(*(id *)(a1 + 48), "decodedResponse"),  *(void *)(a1 + 72));
      uint64_t v15 = v14;
      if (*(_BYTE *)(a1 + 89)) {
        objc_msgSend(*(id *)(a1 + 48), "setDownloadIdentifiers:", objc_msgSend(v14, "array"));
      }
      if (*(_BYTE *)(a1 + 88) && [v15 count]) {
        [a2 finishDownloadsWithIdentifiers:v15 finalPhase:SSDownloadPhaseCanceled];
      }
    }
  }

  return 1LL;
}

uint64_t sub_100168EEC(uint64_t a1, void *a2)
{
  id v4 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  uint64_t v27 = 0LL;
  unsigned __int8 v28 = &v27;
  uint64_t v29 = 0x3052000000LL;
  uint64_t v30 = sub_100163954;
  id v31 = sub_100163964;
  uint64_t v32 = 0LL;
  uint64_t v23 = 0LL;
  id v24 = &v23;
  uint64_t v25 = 0x2020000000LL;
  uint64_t v26 = 0LL;
  id v5 = objc_alloc_init(&OBJC_CLASS___SSPurchaseResponse);
  -[SSPurchaseResponse setError:](v5, "setError:", SSError(SSErrorDomain, 121LL, 0LL, 0LL));
  id v6 = [*(id *)(a1 + 32) _newEncodedPurchaseEntityPropertiesWithResponse:v5];
  id v7 = +[PurchaseEntity queryWithDatabase:predicate:]( PurchaseEntity,  "queryWithDatabase:predicate:",  [a2 database],  +[SSSQLiteComparisonPredicate predicateWithProperty:equalToLongLong:]( SSSQLiteComparisonPredicate,  "predicateWithProperty:equalToLongLong:",  @"state",  1));
  v37[0] = @"client_id";
  v37[1] = @"encoded_data";
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 3221225472LL;
  v22[2] = sub_100169294;
  v22[3] = &unk_100350370;
  void v22[4] = v4;
  v22[5] = a2;
  v22[6] = v6;
  v22[7] = &v27;
  v22[8] = &v23;
  [v7 enumeratePersistentIDsAndProperties:v37 count:2 usingBlock:v22];
  if (v24[3] >= 1)
  {
    id v8 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v8) {
      id v8 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    LODWORD(v9) = [v8 shouldLog];
    unsigned int v10 = [v8 shouldLogToDisk];
    uint64_t v11 = (os_log_s *)[v8 OSLogObject];
    uint64_t v12 = v11;
    if (v10) {
      LODWORD(v9) = v9 | 2;
    }
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v9 = v9;
    }
    else {
      v9 &= 2u;
    }
    if ((_DWORD)v9)
    {
      uint64_t v14 = objc_opt_class(*(void *)(a1 + 32));
      uint64_t v15 = v24[3];
      int v33 = 138412546;
      uint64_t v34 = v14;
      __int16 v35 = 2048;
      uint64_t v36 = v15;
      uint64_t v16 = _os_log_send_and_compose_impl( v9,  0LL,  0LL,  0LL,  &_mh_execute_header,  v12,  0LL,  "%@: Pruned %ld orphaned purchases",  &v33,  22);
      if (v16)
      {
        int v17 = (void *)v16;
        uint64_t v18 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v16, 4LL);
        free(v17);
        uint64_t v20 = v18;
        *(void *)&double v13 = SSFileLog(v8, @"%@").n128_u64[0];
      }
    }

    objc_msgSend(*(id *)(a1 + 32), "_showPurchasesFailedDialogWithFirstTitle:count:", v28[5], v24[3], v13, v20);
  }

  v21[0] = _NSConcreteStackBlock;
  v21[1] = 3221225472LL;
  void v21[2] = sub_10016938C;
  v21[3] = &unk_100350398;
  void v21[4] = *(void *)(a1 + 32);
  void v21[5] = v5;
  -[NSMutableDictionary enumerateKeysAndObjectsUsingBlock:](v4, "enumerateKeysAndObjectsUsingBlock:", v21);

  _Block_object_dispose(&v23, 8);
  _Block_object_dispose(&v27, 8);
  return 1LL;
}

void sub_10016924C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, char a27, uint64_t a28, uint64_t a29, uint64_t a30, char a31)
{
}

id sub_100169294(uint64_t a1, uint64_t a2, void *a3)
{
  id v6 = +[SSPurchase newPurchaseWithDatabaseEncoding:]( &OBJC_CLASS___SSPurchase,  "newPurchaseWithDatabaseEncoding:",  a3[1]);
  [v6 setUniqueIdentifier:a2];
  if (v6)
  {
    if (!*(void *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 40LL)) {
      *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 4+[SSVSubscriptionEntitlementsCoordinator setCachedSubscriptionEntitlements:]( SSVSubscriptionEntitlementsCoordinator,  "setCachedSubscriptionEntitlements:", 0) =  [v6 valueForDownloadProperty:SSDownloadPropertyTitle];
    }
    if (*a3)
    {
      id v7 = (NSMutableArray *)objc_msgSend(*(id *)(a1 + 32), "objectForKey:");
      if (!v7)
      {
        id v7 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
        [*(id *)(a1 + 32) setObject:v7 forKey:*a3];
      }

      -[NSMutableArray addObject:](v7, "addObject:", v6);
    }
  }

  id result = [*(id *)(a1 + 40) cancelPurchaseWithIdentifier:a2 applyingProperties:*(void *)(a1 + 48)];
  ++*(void *)(*(void *)(*(void *)(a1 + 64) + 8LL) + 24LL);
  return result;
}

id sub_10016938C(uint64_t a1, void *a2, uint64_t a3)
{
  return objc_msgSend( objc_msgSend(*(id *)(a1 + 32), "_clientForUniqueIdentifier:", objc_msgSend(a2, "longLongValue")),  "sendResponse:forPurchases:",  *(void *)(a1 + 40),  a3);
}

void sub_10016945C(uint64_t a1)
{
  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 40));
  (*(void (**)(void))(*(void *)(a1 + 56) + 16LL))();
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 48), reply);
  xpc_release(reply);
  xpc_release(*(xpc_object_t *)(a1 + 40));
  xpc_release(*(xpc_object_t *)(a1 + 48));
}

uint64_t sub_1001695FC(uint64_t a1, int a2, xpc_object_t object)
{
  if (xpc_get_type(object) == (xpc_type_t)&_xpc_type_int64)
  {
    id v5 = -[NSNumber initWithLongLong:]( objc_alloc(&OBJC_CLASS___NSNumber),  "initWithLongLong:",  xpc_int64_get_value(object));
    [*(id *)(a1 + 32) addObject:v5];
  }

  return 1LL;
}

uint64_t sub_100169728(uint64_t a1)
{
  id v2 = +[SSPurchase newPurchaseWithXPCEncoding:](&OBJC_CLASS___SSPurchase, "newPurchaseWithXPCEncoding:");
  if (v2)
  {
    id v3 = v2;
    SSVPurchaseAddDownloadPropertiesForBuyParameters();
    [v3 setDefaultUserAgent:*(void *)(a1 + 32)];
    [*(id *)(a1 + 40) addObject:v3];
  }

  return 1LL;
}

void sub_100169C30(id a1, unint64_t a2)
{
  if (!a2)
  {
    id v3 = objc_msgSend( [ISOpenURLRequest alloc],  "initWithURL:",  +[NSURL URLWithString:](NSURL, "URLWithString:", @"prefs:root=General&path=USAGE"));
    [v3 setITunesStoreURL:0];
    id v2 = [[ISOpenURLOperation alloc] initWithOpenURLRequest:v3];
    objc_msgSend(+[ISOperationQueue mainQueue](ISOperationQueue, "mainQueue"), "addOperation:", v2);
  }

void sub_10016C868( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_10016C884(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_10016C894(uint64_t a1)
{
}

uint64_t sub_10016C89C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[SSSQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SSSQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  SSAppPurchaseHistoryEntryStoreID,  *(void *)(a1 + 32)));
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v3 database]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[SSAppPurchaseHistoryEntry queryWithDatabase:predicate:]( &OBJC_CLASS___SSAppPurchaseHistoryEntry,  "queryWithDatabase:predicate:",  v5,  v4));

  v10[0] = SSAppPurchaseHistoryEntryRedownloadParams;
  v10[1] = SSAppPurchaseHistoryEntryAccountUniqueIdentifier;
  void v10[2] = SSAppPurchaseHistoryEntryIsFamilyShareable;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  v9[2] = sub_10016CA0C;
  void v9[3] = &unk_10034AE48;
  void v9[4] = *(void *)(a1 + 40);
  [v6 enumeratePersistentIDsAndProperties:v10 count:3 usingBlock:v9];
  for (uint64_t i = 2LL; i != -1; --i)

  return 1LL;
}

void sub_10016CA0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _BYTE *a5)
{
  if (*(void *)a3 && *(void *)(a3 + 8))
  {
    id v8 = (void *)objc_claimAutoreleasedReturnValue(+[SSAccountStore defaultStore](&OBJC_CLASS___SSAccountStore, "defaultStore"));
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v8 activeAccount]);
    unsigned int v10 = (void *)objc_claimAutoreleasedReturnValue([v9 uniqueIdentifier]);

    unsigned int v11 = [*(id *)(a3 + 8) isEqualToNumber:v10];
    id v12 = *(id *)(a3 + 16);
    double v13 = v12;
    if (v12) {
      LODWORD(v12) = [v12 BOOLValue];
    }
    if ((v11 | v12) == 1)
    {
      uint64_t v14 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"%@&ownerDsid=%@",  *(void *)a3,  *(void *)(a3 + 8));
      uint64_t v15 = *(void *)(*(void *)(a1 + 32) + 8LL);
      uint64_t v16 = *(void **)(v15 + 40);
      *(void *)(v15 + 40) = v14;
    }
  }

  else
  {
    id v17 = [*(id *)a3 copy];
    uint64_t v18 = *(void *)(*(void *)(a1 + 32) + 8LL);
    unsigned int v10 = *(void **)(v18 + 40);
    *(void *)(v18 + 40) = v17;
  }

  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 40LL)) {
    *a5 = 1;
  }
}

void sub_10016CC6C(uint64_t a1, void *a2, void *a3)
{
  id v10 = a2;
  id v5 = a3;
  uint64_t v6 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) remoteAuthenticationHandler]);
  id v7 = (void *)v6;
  if (v6)
  {
    (*(void (**)(uint64_t, id, id))(v6 + 16))(v6, v10, v5);
  }

  else
  {
    uint64_t v8 = SSError(SSErrorDomain, 106LL, 0LL, 0LL);
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
    v5[2](v5, 0LL, v9);
  }
}

LABEL_101:
}

void sub_10016D998( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, char a27)
{
}

void sub_10016D9CC(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (!v3) {
    goto LABEL_23;
  }
  id v4 = objc_alloc_init(&OBJC_CLASS___ISLoadURLBagOperation);
  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[ISOperationQueue mainQueue](&OBJC_CLASS___ISOperationQueue, "mainQueue"));
  id v37 = v4;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v37, 1LL));
  [v5 addOperations:v6 waitUntilFinished:1];

  if (-[ISLoadURLBagOperation success](v4, "success"))
  {
    id v7 = (void *)objc_claimAutoreleasedReturnValue(-[ISLoadURLBagOperation URLBag](v4, "URLBag"));
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v7 valueForKey:@"install-attribution-max-cache-age"]);

    double v9 = -2592000.0;
    goto LABEL_19;
  }

  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharediTunesStoreConfig](&OBJC_CLASS___SSLogConfig, "sharediTunesStoreConfig"));
  if (!v8) {
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v10 = [v8 shouldLog];
  else {
    unsigned int v11 = v10;
  }
  id v12 = (os_log_s *)objc_claimAutoreleasedReturnValue([v8 OSLogObject]);
  if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v11 & 2;
  }
  if (!(_DWORD)v13) {
    goto LABEL_17;
  }
  uint64_t v14 = (void *)objc_opt_class(*(void *)(a1 + 32));
  int v35 = 138543362;
  uint64_t v36 = v14;
  id v15 = v14;
  uint64_t v16 = (void *)_os_log_send_and_compose_impl( v13,  0LL,  0LL,  0LL,  &_mh_execute_header,  v12,  16LL,  "[%{public}@]: Failed to load URL bag to check Install Attribution params age",  &v35,  12);

  if (v16)
  {
    id v12 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v16,  4LL));
    free(v16);
    SSFileLog(v8, @"%@");
LABEL_17:
  }

  double v9 = -2592000.0;
LABEL_19:

  id v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate dateWithTimeIntervalSinceNow:](&OBJC_CLASS___NSDate, "dateWithTimeIntervalSinceNow:", v9));
  [v17 timeIntervalSince1970];
  uint64_t v19 = (uint64_t)(v18 * 1000.0);
  uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([v3 localTimestamp]);
  id v21 = [v20 longLongValue];

  if ((uint64_t)v21 >= v19)
  {
    uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue([v3 adNetworkId]);
    id v24 = (void *)objc_claimAutoreleasedReturnValue([v3 campaignId]);
    uint64_t v34 = v4;
    uint64_t v25 = a1;
    uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue([v3 appAdamId]);
    uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue([v3 impressionId]);
    unsigned __int8 v28 = (void *)objc_claimAutoreleasedReturnValue([v3 timestamp]);
    uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue([v3 attributionSignature]);
    uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"{ ad-network-id = %@; campaign-id = %@; adam-id = %@; impression-id = %@; timestamp = %@; signature = %@; }",
                      v23,
                      v24,
                      v26,
                      v27,
                      v28,
                      v29));

    a1 = v25;
    id v4 = v34;

    __int128 v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL escapedStringForString:](&OBJC_CLASS___NSURL, "escapedStringForString:", v30));
    uint64_t v31 = objc_claimAutoreleasedReturnValue( [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) stringByAppendingFormat:@"&%@=%@", @"ad-network", v22]);
    uint64_t v32 = *(void *)(*(void *)(a1 + 48) + 8LL);
    int v33 = *(void **)(v32 + 40);
    *(void *)(v32 + 40) = v31;
  }

  else
  {
    __int128 v22 = (void *)objc_claimAutoreleasedReturnValue(+[PurchaseActionsManager sharedInstance](&OBJC_CLASS___PurchaseActionsManager, "sharedInstance"));
    [v22 removeInstallAttributionParamsBeforeDate:v17];
  }

LABEL_23:
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
}

void sub_10016EE00( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
}

uint64_t sub_10016EE30(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_10016EE40(uint64_t a1)
{
}

void sub_10016EE48(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  id v7 = a2;
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v7 valueForProperty:@"is_purchase"]);
  if ([v8 BOOLValue])
  {
    double v9 = (void *)objc_claimAutoreleasedReturnValue([v7 valueForProperty:@"purchase_id"]);
    if (!v9)
    {
LABEL_5:

      goto LABEL_6;
    }

    unsigned int v10 = objc_alloc(&OBJC_CLASS___PurchaseEntity);
    id v11 = [v9 longLongValue];
    id v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) database]);
    uint64_t v13 = -[PurchaseEntity initWithPersistentID:inDatabase:](v10, "initWithPersistentID:inDatabase:", v11, v12);

    if ((-[PurchaseEntity existsInDatabase](v13, "existsInDatabase") & 1) != 0)
    {

      goto LABEL_5;
    }

    uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v16) {
      uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v17 = [v16 shouldLog];
    else {
      unsigned int v18 = v17;
    }
    uint64_t v19 = (os_log_s *)objc_claimAutoreleasedReturnValue([v16 OSLogObject]);
    if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO)) {
      uint64_t v20 = v18;
    }
    else {
      uint64_t v20 = v18 & 2;
    }
    if ((_DWORD)v20)
    {
      v24[0] = 0;
      id v21 = (void *)_os_log_send_and_compose_impl( v20,  0LL,  0LL,  0LL,  &_mh_execute_header,  v19,  1LL,  "Found existing download for purchase but no matching purchase, canceling download.",  v24,  2);

      if (!v21)
      {
LABEL_20:

        __int128 v22 = *(void **)(a1 + 32);
        id v23 = [v7 databaseID];
        [v22 finishDownloadWithID:v23 finalPhase:SSDownloadPhaseCanceled updatePipeline:0];

        goto LABEL_21;
      }

      uint64_t v19 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v21,  4LL));
      free(v21);
      SSFileLog(v16, @"%@");
    }

    goto LABEL_20;
  }

void sub_10016F95C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
}

void sub_10016F99C(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  id v6 = a2;
  context = objc_autoreleasePoolPush();
  id v7 = v6;
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v7 kind]);
  int IsSoftwareKind = SSDownloadKindIsSoftwareKind(v8);

  if (IsSoftwareKind)
  {
    unsigned int v10 = (void *)objc_claimAutoreleasedReturnValue([v7 requiredDeviceCapabilities]);
    if (v10)
    {
      id v11 = (void *)objc_claimAutoreleasedReturnValue(+[ISDevice sharedInstance](&OBJC_CLASS___ISDevice, "sharedInstance"));
      LODWORD(v12) = [v11 checkCapabilities:v10 withMismatches:0];
    }

    else
    {
      LODWORD(v12) = 1;
    }
  }

  else
  {
    LODWORD(v12) = 1;
  }

  uint64_t v13 = -[Download initWithStoreDownload:](objc_alloc(&OBJC_CLASS___Download), "initWithStoreDownload:", v7);
  uint64_t v14 = &ACSLocateCachingServer_ptr;
  id v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", 0LL));
  -[Download setValue:forProperty:](v13, "setValue:forProperty:", v15, @"is_purchase");

  uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", 1LL));
  -[Download setValue:forProperty:](v13, "setValue:forProperty:", v16, @"is_from_store");

  -[Download setValue:forProperty:](v13, "setValue:forProperty:", *(void *)(a1 + 32), @"store_account_id");
  unsigned int v17 = (void *)objc_claimAutoreleasedReturnValue(-[Download valueForProperty:](v13, "valueForProperty:", @"is_store_queued"));
  if (!v17)
  {
    unsigned int v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", 1LL));
    -[Download setValue:forProperty:](v13, "setValue:forProperty:", v18, @"is_store_queued");
  }

  uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) downloadForStoreDownload:v7]);
  if (!SSDebugShouldUseAppstored(v19, v20)
    || (id v21 = (void *)objc_claimAutoreleasedReturnValue([v7 kind]),
        int v22 = SSDownloadKindIsSoftwareKind(v21),
        v21,
        !v22))
  {
    uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue([v7 kind]);
    int IsBookToShimKind = SSDownloadKindIsBookToShimKind(v30);

    if (IsBookToShimKind)
    {
      [*(id *)(a1 + 56) addObject:v7];
      goto LABEL_106;
    }

    char v102 = v12;
    if (v19)
    {
      uint64_t v32 = objc_claimAutoreleasedReturnValue([v19 valueForProperty:@"download_state.phase"]);
      v113[0] = SSDownloadPhaseDownloading;
      v113[1] = SSDownloadPhaseProcessing;
      v113[2] = SSDownloadPhaseDataRestore;
      v113[3] = SSDownloadPhaseInstalling;
      v97 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v113, 4LL));
      v100 = (void *)v32;
      unsigned int v33 = [v97 containsObject:v32];
      uint64_t v34 = objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
      int v35 = (void *)v34;
      if (v33)
      {
        if (!v34) {
          int v35 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
        }
        unsigned int v36 = [v35 shouldLog];
        else {
          unsigned int v37 = v36;
        }
        id v38 = (os_log_s *)objc_claimAutoreleasedReturnValue([v35 OSLogObject]);
        if (os_log_type_enabled(v38, OS_LOG_TYPE_INFO)) {
          uint64_t v39 = v37;
        }
        else {
          uint64_t v39 = v37 & 2;
        }
        if (!(_DWORD)v39) {
          goto LABEL_97;
        }
        id v98 = a4;
        id v40 = (void *)objc_opt_class(*(void *)(a1 + 40));
        id v41 = v40;
        int v105 = 138412802;
        uint64_t v106 = (uint64_t)v40;
        __int16 v107 = 2048;
        id v108 = [v19 persistentID];
        __int16 v109 = 2112;
        __int128 v110 = v100;
        uint64_t v42 = (void *)_os_log_send_and_compose_impl( v39,  0LL,  0LL,  0LL,  &_mh_execute_header,  v38,  1LL,  "%@: Skipping queue update to in flight download: %llu with downloadPhase: %@",  &v105,  32);

        if (!v42)
        {
          a4 = v98;
          uint64_t v14 = &ACSLocateCachingServer_ptr;
          LOBYTE(v12) = v102;
          goto LABEL_99;
        }

        id v38 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v42,  4LL));
        free(v42);
        uint64_t v94 = v38;
        SSFileLog(v35, @"%@");
LABEL_96:
        a4 = v98;
LABEL_97:
        uint64_t v14 = &ACSLocateCachingServer_ptr;
        LOBYTE(v12) = v102;
        goto LABEL_98;
      }

      if (!v34) {
        int v35 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      unsigned int v57 = [v35 shouldLog];
      else {
        unsigned int v58 = v57;
      }
      id v59 = (os_log_s *)objc_claimAutoreleasedReturnValue([v35 OSLogObject]);
      if (os_log_type_enabled(v59, OS_LOG_TYPE_INFO)) {
        uint64_t v60 = v58;
      }
      else {
        uint64_t v60 = v58 & 2;
      }
      id v98 = a4;
      if ((_DWORD)v60)
      {
        uint64_t v12 = objc_opt_class(*(void *)(a1 + 40));
        id v61 = (id)v12;
        int v105 = 138412802;
        uint64_t v106 = v12;
        __int16 v107 = 2048;
        id v108 = [v19 persistentID];
        __int16 v109 = 2112;
        __int128 v110 = v100;
        __int128 v62 = (void *)_os_log_send_and_compose_impl( v60,  0LL,  0LL,  0LL,  &_mh_execute_header,  v59,  1LL,  "%@: Resetting existing download: %llu phase: %@ with store queue download",  &v105,  32);

        a4 = v98;
        LOBYTE(v12) = v102;
        if (!v62) {
          goto LABEL_84;
        }
        id v59 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v62,  4LL));
        free(v62);
        uint64_t v94 = v59;
        SSFileLog(v35, @"%@");
      }

      else
      {
        LOBYTE(v12) = v102;
      }

LABEL_84:
      *(_BYTE *)(*(void *)(*(void *)(a1 + 80) + 8) + 24) = objc_msgSend( *(id *)(a1 + 40),  "updateDownloadEntityWithIdentifier:withDownload:",  objc_msgSend(v19, "persistentID"),  v13);
      uint64_t v14 = &ACSLocateCachingServer_ptr;
      if (!*(_BYTE *)(*(void *)(*(void *)(a1 + 80) + 8LL) + 24LL))
      {
LABEL_100:

        goto LABEL_106;
      }

      __int16 v69 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithLongLong:]( NSNumber,  "numberWithLongLong:",  [v19 persistentID]));
      int v35 = (void *)objc_claimAutoreleasedReturnValue( +[NSOrderedSet orderedSetWithObjects:]( &OBJC_CLASS___NSOrderedSet,  "orderedSetWithObjects:",  v69,  0LL));

      *(_BYTE *)(*(void *)(*(void *)(a1 + 80) + 8) + 24) = [*(id *)(a1 + 40) restartDownloadsWithIdentifiers:v35];
      id v38 = (os_log_s *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
      if (!v38) {
        id v38 = (os_log_s *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      unsigned int v70 = -[os_log_s shouldLog](v38, "shouldLog");
      uint64_t v71 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[os_log_s OSLogObject](v38, "OSLogObject"));
      if (os_log_type_enabled(v71, OS_LOG_TYPE_INFO)) {
        uint64_t v72 = v70;
      }
      else {
        uint64_t v72 = v70 & 2;
      }
      if ((_DWORD)v72)
      {
        uint64_t v73 = (void *)objc_opt_class(*(void *)(a1 + 40));
        id v96 = v73;
        id v74 = [v19 persistentID];
        int v75 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 80) + 8LL) + 24LL);
        int v105 = 138413058;
        uint64_t v106 = (uint64_t)v73;
        __int16 v107 = 2048;
        id v108 = v74;
        __int16 v109 = 2112;
        __int128 v110 = v100;
        __int16 v111 = 1024;
        int v112 = v75;
        LODWORD(v95) = 38;
        uint64_t v76 = (void *)_os_log_send_and_compose_impl( v72,  0LL,  0LL,  0LL,  &_mh_execute_header,  v71,  1LL,  "%@: Restart existing download: %llu phase: %@ with store queue download with result: %d",  &v105,  v95);

        if (!v76) {
          goto LABEL_96;
        }
        uint64_t v71 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v76,  4LL));
        free(v76);
        uint64_t v94 = v71;
        SSFileLog(v38, @"%@");
      }

      LOBYTE(v12) = v102;

      a4 = v98;
      uint64_t v14 = &ACSLocateCachingServer_ptr;
LABEL_98:

LABEL_99:
      goto LABEL_100;
    }

    uint64_t v43 = v17;
    __int128 v44 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v44) {
      __int128 v44 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v45 = [v44 shouldLog];
    else {
      LODWORD(v46) = v45;
    }
    __int128 v47 = (os_log_s *)objc_claimAutoreleasedReturnValue([v44 OSLogObject]);
    if (os_log_type_enabled(v47, OS_LOG_TYPE_INFO)) {
      uint64_t v46 = v46;
    }
    else {
      v46 &= 2u;
    }
    if ((_DWORD)v46)
    {
      uint64_t v48 = (void *)objc_opt_class(*(void *)(a1 + 40));
      int v105 = 138412546;
      uint64_t v106 = (uint64_t)v48;
      __int16 v107 = 2112;
      id v108 = v7;
      id v49 = v48;
      uint64_t v50 = (void *)_os_log_send_and_compose_impl( v46,  0LL,  0LL,  0LL,  &_mh_execute_header,  v47,  1LL,  "%@: Insert new store queue download: %@",  &v105,  22);

      if (!v50)
      {
LABEL_52:

        uint64_t v51 = objc_claimAutoreleasedReturnValue(-[Download valueForProperty:](v13, "valueForProperty:", @"store_preorder_id"));
        uint64_t v52 = (void *)v51;
        if (v51 && SSGetItemIdentifierFromValue(v51))
        {
          -[Download setValue:forProperty:]( v13,  "setValue:forProperty:",  SSDownloadPhasePaused,  @"download_state.phase");
          [*(id *)(a1 + 64) addObject:v52];
        }

        LOBYTE(v12) = v102;
        if (v13)
        {
          __int16 v53 = *(void **)(a1 + 40);
          uint64_t v54 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObject:](&OBJC_CLASS___NSArray, "arrayWithObject:", v13));
          uint64_t v55 = (void *)objc_claimAutoreleasedReturnValue([v53 addDownloads:v54]);
          uint64_t v56 = a1 + 80;
          *(_BYTE *)(*(void *)(*(void *)(a1 + 80) + 8LL) + 24LL) = v55 != 0LL;
        }

        else
        {
          uint64_t v56 = a1 + 80;
          *(_BYTE *)(*(void *)(*(void *)(a1 + 80) + 8LL) + 24LL) = 0;
        }

        unsigned int v17 = v43;
        uint64_t v14 = &ACSLocateCachingServer_ptr;
        if (*(_BYTE *)(*(void *)(*(void *)v56 + 8LL) + 24LL))
        {
          uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) downloadForStoreDownload:v7]);
          if (v19)
          {
            unsigned int v99 = a4;
            __int128 v63 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
            if (!v63) {
              __int128 v63 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
            }
            unsigned int v64 = objc_msgSend(v63, "shouldLog", v94);
            int v65 = (os_log_s *)objc_claimAutoreleasedReturnValue([v63 OSLogObject]);
            if (os_log_type_enabled(v65, OS_LOG_TYPE_INFO)) {
              uint64_t v66 = v64;
            }
            else {
              uint64_t v66 = v64 & 2;
            }
            if ((_DWORD)v66)
            {
              uint64_t v12 = objc_opt_class(*(void *)(a1 + 40));
              id v101 = (id)v12;
              id v67 = [v19 persistentID];
              int v105 = 138412546;
              uint64_t v106 = v12;
              __int16 v107 = 2048;
              id v108 = v67;
              LODWORD(v95) = 22;
              uint64_t v68 = (void *)_os_log_send_and_compose_impl( v66,  0LL,  0LL,  0LL,  &_mh_execute_header,  v65,  1LL,  "%@: Inserted new store queue download with downloadID: %llu",  &v105,  v95);

              LOBYTE(v12) = v102;
              if (!v68)
              {
LABEL_104:

                a4 = v99;
                uint64_t v14 = &ACSLocateCachingServer_ptr;
                goto LABEL_105;
              }

              int v65 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v68,  4LL));
              free(v68);
              uint64_t v94 = v65;
              SSFileLog(v63, @"%@");
            }

            else
            {
              LOBYTE(v12) = v102;
            }

            goto LABEL_104;
          }
        }

        else
        {
          uint64_t v19 = 0LL;
        }

LABEL_106:
  if (*(_BYTE *)(*(void *)(*(void *)(a1 + 80) + 8LL) + 24LL) && v19)
  {
    id v77 = objc_msgSend(objc_alloc((Class)v14[390]), "initWithLongLong:", objc_msgSend(v19, "persistentID"));
    if ((v12 & 1) != 0)
    {
      id v78 = [v19 persistentID];
      uint64_t v79 = (void *)objc_claimAutoreleasedReturnValue([v7 kind]);
      double v80 = (void *)objc_claimAutoreleasedReturnValue( +[ScratchManager directoryPathForDownloadID:kind:createIfNeeded:]( &OBJC_CLASS___ScratchManager,  "directoryPathForDownloadID:kind:createIfNeeded:",  v78,  v79,  1LL));
      char v81 = (void *)objc_claimAutoreleasedReturnValue([v80 stringByAppendingPathComponent:@"iTunesMetadata.plist"]);

      [v7 writeToFile:v81 options:0 error:0];
      [*(id *)(a1 + 72) removeObject:v77];

LABEL_123:
      goto LABEL_124;
    }

    uint64_t v82 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v82) {
      uint64_t v82 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v83 = objc_msgSend(v82, "shouldLog", v94);
    else {
      LODWORD(v84) = v83;
    }
    id v85 = (os_log_s *)objc_claimAutoreleasedReturnValue([v82 OSLogObject]);
    if (os_log_type_enabled(v85, OS_LOG_TYPE_DEFAULT)) {
      uint64_t v84 = v84;
    }
    else {
      v84 &= 2u;
    }
    if ((_DWORD)v84)
    {
      __int16 v86 = (void *)objc_opt_class(*(void *)(a1 + 40));
      int v105 = 138412546;
      uint64_t v106 = (uint64_t)v86;
      __int16 v107 = 2112;
      id v108 = v7;
      id v103 = v7;
      id v87 = v13;
      uint64_t v88 = a1;
      uint64_t v89 = v17;
      __int16 v90 = v19;
      id v91 = a4;
      id v92 = v86;
      LODWORD(v95) = 22;
      __int16 v93 = (void *)_os_log_send_and_compose_impl( v84,  0LL,  0LL,  0LL,  &_mh_execute_header,  v85,  0LL,  "%@: Pruning incompatible app download: %@",  &v105,  v95);

      a4 = v91;
      uint64_t v19 = v90;
      unsigned int v17 = v89;
      a1 = v88;
      uint64_t v13 = v87;
      id v7 = v103;

      if (!v93)
      {
LABEL_122:

        [*(id *)(a1 + 72) addObject:v77];
        goto LABEL_123;
      }

      id v85 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v93,  4LL));
      free(v93);
      SSFileLog(v82, @"%@");
    }

    goto LABEL_122;
  }

LABEL_124:
  objc_autoreleasePoolPop(context);
  *a4 = *(_BYTE *)(*(void *)(*(void *)(a1 + 80) + 8LL) + 24LL) ^ 1;
}

void sub_100171CC8(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v5 valueForProperty:@"asset_type"]);
  unsigned int v4 = [v3 isEqualToString:SSDownloadAssetTypeMedia];

  if (v4) {
    [v5 setValue:*(void *)(a1 + 32) forProperty:@"protection_type"];
  }
}

void sub_1001722CC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
}

void sub_1001722F8(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  id v7 = objc_autoreleasePoolPush();
  *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [*(id *)(a1 + 32) finishDownloadWithID:a2 finalPhase:SSDownloadPhaseCanceled];
  *a4 = *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) ^ 1;
  objc_autoreleasePoolPop(v7);
}

void sub_1001725D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
}

id sub_100172608(uint64_t a1, uint64_t a2, id *a3, uint64_t a4, _BYTE *a5)
{
  id result = [*a3 doubleValue];
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = v8;
  *a5 = 1;
  return result;
}

void sub_100172788( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
}

void sub_1001727BC(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  id v9 = a2;
  id v6 = objc_autoreleasePoolPush();
  [v9 setBatchIdentifier:*(void *)(a1 + 64)];
  id v7 = (void *)objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 32) _addEntityForPurchase:v9 managerIdentifier:*(void *)(a1 + 72) orderIdentifier:*(double *)(*(void *)(*(void *)(a1 + 48) + 8) + 24)]);
  if (v7)
  {
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v9 valueForDownloadProperty:SSDownloadPropertyStorePreorderIdentifier]);
    if ([v9 createsDownloads] && !objc_msgSend(v8, "longLongValue")) {
      *(_BYTE *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = [*(id *)(a1 + 32) _addPlaceholderDownloadForPurchase :v9 clientIdentifier:*(void *)(a1 + 40)];
    }
  }

  else
  {
    *(_BYTE *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL) = 0;
  }

  *(double *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = *(double *)(a1 + 80)
  *a4 = *(_BYTE *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL) ^ 1;

  objc_autoreleasePoolPop(v6);
}

void sub_100173668( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, id location, char a25)
{
}

void sub_100173730(uint64_t a1)
{
  id WeakRetained = (dispatch_semaphore_s *)objc_loadWeakRetained((id *)(a1 + 48));
  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v3) {
    id v3 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v4 = [v3 shouldLog];
  else {
    unsigned int v5 = v4;
  }
  id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue([v3 OSLogObject]);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = v5 & 2;
  }
  if (!(_DWORD)v7) {
    goto LABEL_12;
  }
  uint64_t v8 = *(void *)(a1 + 32);
  int v10 = 138543362;
  uint64_t v11 = v8;
  id v9 = (void *)_os_log_send_and_compose_impl( v7,  0LL,  0LL,  0LL,  &_mh_execute_header,  v6,  0LL,  "%{public}@: Display payment sheet operation did complete",  &v10,  12);

  if (v9)
  {
    id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v9,  4LL));
    free(v9);
    SSFileLog(v3, @"%@");
LABEL_12:
  }

  *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = 1;
  dispatch_semaphore_signal(WeakRetained);
}

id sub_1001738C0(uint64_t a1)
{
  return [*(id *)(a1 + 32) _postMetricsEventForError:*(void *)(a1 + 40)];
}

void sub_100173F24(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    unsigned int v4 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v4) {
      unsigned int v4 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v5 = [v4 shouldLog];
    else {
      LODWORD(v6) = v5;
    }
    uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue([v4 OSLogObject]);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      uint64_t v6 = v6;
    }
    else {
      v6 &= 2u;
    }
    if ((_DWORD)v6)
    {
      uint64_t v8 = (void *)objc_opt_class(*(void *)(a1 + 32));
      int v11 = 138543618;
      uint64_t v12 = v8;
      __int16 v13 = 2114;
      id v14 = v3;
      id v9 = v8;
      int v10 = (void *)_os_log_send_and_compose_impl( v6,  0LL,  0LL,  0LL,  &_mh_execute_header,  v7,  16LL,  "%{public}@: Failed to insert metrics event with error: %{public}@",  &v11,  22);

      if (!v10)
      {
LABEL_14:

        goto LABEL_15;
      }

      uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v10,  4LL));
      free(v10);
      SSFileLog(v4, @"%@");
    }

    goto LABEL_14;
  }

void sub_1001740BC(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    unsigned int v4 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v4) {
      unsigned int v4 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v5 = [v4 shouldLog];
    else {
      LODWORD(v6) = v5;
    }
    uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue([v4 OSLogObject]);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      uint64_t v6 = v6;
    }
    else {
      v6 &= 2u;
    }
    if ((_DWORD)v6)
    {
      uint64_t v8 = (void *)objc_opt_class(*(void *)(a1 + 32));
      int v11 = 138543618;
      uint64_t v12 = v8;
      __int16 v13 = 2114;
      id v14 = v3;
      id v9 = v8;
      int v10 = (void *)_os_log_send_and_compose_impl( v6,  0LL,  0LL,  0LL,  &_mh_execute_header,  v7,  16LL,  "%{public}@: Failed to flush metrics events with error: %{public}@",  &v11,  22);

      if (!v10)
      {
LABEL_14:

        goto LABEL_15;
      }

      uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v10,  4LL));
      free(v10);
      SSFileLog(v4, @"%@");
    }

    goto LABEL_14;
  }

id sub_100175084(uint64_t a1)
{
  id result = objc_alloc_init(*(Class *)(a1 + 32));
  qword_1003A3590 = (uint64_t)result;
  return result;
}

uint64_t sub_100175130(uint64_t result)
{
  *(_DWORD *)(*(void *)(*(void *)(result + 40) + 8LL) + 24LL) = *(_DWORD *)(*(void *)(result + 32) + 8LL);
  return result;
}

void sub_1001751F0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_100175208(uint64_t a1, uint64_t a2)
{
}

void sub_100175218(uint64_t a1)
{
}

void sub_100175224(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _wifiInterfaceName];
  if (v2)
  {
    id v3 = v2;
    id v9 = 0LL;
    int v4 = getifaddrs(&v9);
    unsigned int v5 = v9;
    if (v4)
    {
      if (!v9) {
        return;
      }
LABEL_12:
      freeifaddrs(v5);
      return;
    }

    if (v9)
    {
      do
      {
        if (v5->ifa_addr->sa_family == 2)
        {
          uint64_t v6 = -[NSString initWithUTF8String:](objc_alloc(&OBJC_CLASS___NSString), "initWithUTF8String:", v5->ifa_name);
          if (-[NSString isEqualToString:](v6, "isEqualToString:", v3))
          {

            uint64_t v7 = objc_alloc(&OBJC_CLASS___NSString);
            v8.s_addr = *(_DWORD *)&v5->ifa_addr->sa_data[2];
            *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 4+[SSVSubscriptionEntitlementsCoordinator setCachedSubscriptionEntitlements:]( &OBJC_CLASS___SSVSubscriptionEntitlementsCoordinator,  "setCachedSubscriptionEntitlements:", 0LL) = -[NSString initWithUTF8String:]( v7,  "initWithUTF8String:",  inet_ntoa(v8));
          }
        }

        unsigned int v5 = v5->ifa_next;
      }

      while (v5);
      unsigned int v5 = v9;
      if (v9) {
        goto LABEL_12;
      }
    }
  }

uint64_t sub_100175374(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 32);
  int v2 = *(_DWORD *)(result + 40);
  if (*(_DWORD *)(v1 + 8) != v2)
  {
    uint64_t v3 = result;
    *(_DWORD *)(v1 + _Block_object_dispose(va, 8) = v2;
    id v4 = [*(id *)(result + 32) _wifiClientTypeForManagerType:*(unsigned int *)(*(void *)(result + 32) + 8)];
    id v5 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
    if (!v5) {
      id v5 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
    }
    unsigned int v6 = [v5 shouldLog];
    else {
      LODWORD(v7) = v6;
    }
    in_addr v8 = (os_log_s *)[v5 OSLogObject];
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG)) {
      uint64_t v7 = v7;
    }
    else {
      v7 &= 2u;
    }
    if ((_DWORD)v7)
    {
      uint64_t v10 = objc_opt_class(*(void *)(v3 + 32));
      int v14 = 138412546;
      uint64_t v15 = v10;
      __int16 v16 = 1024;
      int v17 = (int)v4;
      uint64_t v11 = _os_log_send_and_compose_impl( v7,  0LL,  0LL,  0LL,  &_mh_execute_header,  v8,  2LL,  "%@: Set wifi client type: %d",  &v14,  18);
      if (v11)
      {
        uint64_t v12 = (void *)v11;
        +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v11, 4LL);
        free(v12);
        __n128 v9 = SSFileLog(v5, @"%@");
      }
    }

    uint64_t v13 = *(void *)(*(void *)(v3 + 32) + 24LL);
    if (v13)
    {
      return WiFiManagerClientSetType(v13, v4, v9);
    }

    else
    {
      id result = WiFiManagerClientCreate(0LL, v4, v9);
      *(void *)(*(void *)(v3 + 32) + 24LL) = result;
    }
  }

  return result;
}

uint64_t DaemonPBFuseItemPreferenceReadFrom(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    uint64_t v6 = 0LL;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1LL || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        LODWORD(v6) = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      LODWORD(v6) = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      break;
    }
    switch((unsigned __int16)(v6 >> 3))
    {
      case 1u:
        char v12 = 0;
        unsigned int v13 = 0;
        uint64_t v14 = 0LL;
        while (1)
        {
          unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v15 == -1LL || v15 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v16 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
          v14 |= (unint64_t)(v16 & 0x7F) << v12;
          if ((v16 & 0x80) == 0) {
            goto LABEL_50;
          }
          v12 += 7;
          BOOL v9 = v13++ >= 9;
          if (v9)
          {
            LODWORD(v14) = 0;
            goto LABEL_52;
          }
        }

        *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_50:
        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_52:
        uint64_t v34 = 32LL;
        goto LABEL_66;
      case 2u:
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0LL;
        *(_BYTE *)(a1 + 40) |= 1u;
        while (2)
        {
          unint64_t v21 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v21 == -1LL || v21 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v22 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v21);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v21 + 1;
            v20 |= (unint64_t)(v22 & 0x7F) << v18;
            if (v22 < 0)
            {
              v18 += 7;
              BOOL v9 = v19++ >= 9;
              if (v9)
              {
                uint64_t v20 = 0LL;
                goto LABEL_56;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v20 = 0LL;
        }
LABEL_56:
        uint64_t v35 = 8LL;
        goto LABEL_61;
      case 3u:
        uint64_t String = PBReaderReadString(a2);
        uint64_t v24 = objc_claimAutoreleasedReturnValue(String);
        uint64_t v25 = *(void **)(a1 + 24);
        *(void *)(a1 + 24) = v24;

        continue;
      case 4u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v20 = 0LL;
        *(_BYTE *)(a1 + 40) |= 2u;
        while (2)
        {
          unint64_t v28 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v28 == -1LL || v28 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v29 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v28);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v28 + 1;
            v20 |= (unint64_t)(v29 & 0x7F) << v26;
            if (v29 < 0)
            {
              v26 += 7;
              BOOL v9 = v27++ >= 9;
              if (v9)
              {
                uint64_t v20 = 0LL;
                goto LABEL_60;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v20 = 0LL;
        }
LABEL_60:
        uint64_t v35 = 16LL;
LABEL_61:
        *(void *)(a1 + v35) = v20;
        continue;
      case 5u:
        char v30 = 0;
        unsigned int v31 = 0;
        uint64_t v14 = 0LL;
        *(_BYTE *)(a1 + 40) |= 4u;
        break;
      default:
        uint64_t result = PBReaderSkipValueWithTag(a2, (unsigned __int16)(v6 >> 3));
        if (!(_DWORD)result) {
          return result;
        }
        continue;
    }

    while (1)
    {
      unint64_t v32 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v32 == -1LL || v32 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v33 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v32);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v32 + 1;
      v14 |= (unint64_t)(v33 & 0x7F) << v30;
      if ((v33 & 0x80) == 0) {
        goto LABEL_63;
      }
      v30 += 7;
      BOOL v9 = v31++ >= 9;
      if (v9)
      {
        LODWORD(v14) = 0;
        goto LABEL_65;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_63:
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      LODWORD(v14) = 0;
    }
LABEL_65:
    uint64_t v34 = 36LL;
LABEL_66:
    *(_DWORD *)(a1 + v34) = v14;
  }

  return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_10017776C(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v6) {
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v7 = [v6 shouldLog];
  else {
    LODWORD(v_Block_object_dispose(va, 8) = v7;
  }
  BOOL v9 = (os_log_s *)objc_claimAutoreleasedReturnValue([v6 OSLogObject]);
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO)) {
    uint64_t v8 = v8;
  }
  else {
    v8 &= 2u;
  }
  if (!(_DWORD)v8) {
    goto LABEL_12;
  }
  int v10 = (void *)objc_opt_class(*(void *)(a1 + 32));
  int v13 = 138543874;
  uint64_t v14 = v10;
  __int16 v15 = 1024;
  int v16 = a2;
  __int16 v17 = 2112;
  id v18 = v5;
  id v11 = v10;
  char v12 = (void *)_os_log_send_and_compose_impl( v8,  0LL,  0LL,  0LL,  &_mh_execute_header,  v9,  1LL,  "[%{public}@]: Download queue request completed with result: %d error: %@",  &v13,  28);

  if (v12)
  {
    BOOL v9 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v12,  4LL));
    free(v12);
    SSFileLog(v6, @"%@");
LABEL_12:
  }
}

void sub_100177C54(uint64_t a1, int a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  BOOL v9 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v9) {
    BOOL v9 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v10 = [v9 shouldLog];
  else {
    LODWORD(v11) = v10;
  }
  char v12 = (os_log_s *)objc_claimAutoreleasedReturnValue([v9 OSLogObject]);
  if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO)) {
    uint64_t v11 = v11;
  }
  else {
    v11 &= 2u;
  }
  if (!(_DWORD)v11) {
    goto LABEL_12;
  }
  int v13 = (void *)objc_opt_class(*(void *)(a1 + 32));
  id v14 = v13;
  __int16 v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "componentsJoinedByString:", @", "));
  int v17 = 138544130;
  id v18 = v13;
  __int16 v19 = 1024;
  int v20 = a2;
  __int16 v21 = 2114;
  char v22 = v15;
  __int16 v23 = 2112;
  id v24 = v8;
  int v16 = (void *)_os_log_send_and_compose_impl( v11,  0LL,  0LL,  0LL,  &_mh_execute_header,  v12,  1LL,  "[%{public}@]: Claim completed with result: %d claimedBundleIdentifiers: [%{public}@] error: %@",  &v17,  38);

  if (v16)
  {
    char v12 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v16,  4LL));
    free(v16);
    SSFileLog(v9, @"%@");
LABEL_12:
  }
}

uint64_t sub_100178724(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, BOOL))(result + 16))(result, a3 == 0);
  }
  return result;
}

void sub_100178C34(uint64_t a1, void *a2)
{
  id v3 = a2;
  char v4 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v4) {
    char v4 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v5 = [v4 shouldLog];
  else {
    LODWORD(v6) = v5;
  }
  id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue([v4 OSLogObject]);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
    uint64_t v6 = v6;
  }
  else {
    v6 &= 2u;
  }
  if (!(_DWORD)v6) {
    goto LABEL_12;
  }
  id v8 = (void *)objc_opt_class(*(void *)(a1 + 32));
  int v11 = 138543618;
  char v12 = v8;
  __int16 v13 = 2112;
  id v14 = v3;
  id v9 = v8;
  unsigned int v10 = (void *)_os_log_send_and_compose_impl( v6,  0LL,  0LL,  0LL,  &_mh_execute_header,  v7,  16LL,  "[%{public}@]: Error requesting restore for demoted applications: %@",  &v11,  22);

  if (v10)
  {
    id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v10,  4LL));
    free(v10);
    SSFileLog(v4, @"%@");
LABEL_12:
  }
}

void sub_100179678(uint64_t a1, void *a2)
{
  id v13 = a2;
  id v3 = [v13 copyJobActivity];
  char v4 = (void *)objc_claimAutoreleasedReturnValue([v3 clientID]);

  if (!v4) {
    [v3 setClientID:*(void *)(a1 + 32)];
  }
  unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue([v3 storeAccountID]);

  if (!v5)
  {
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) uniqueIdentifier]);
    [v3 setStoreAccountID:v6];
  }

  id v7 = (void *)objc_claimAutoreleasedReturnValue([v3 storeAccountName]);

  if (!v7)
  {
    id v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) accountName]);
    [v3 setStoreAccountName:v8];
  }

  id v9 = [v13 databaseID];
  unsigned int v10 = *(void **)(a1 + 48);
  if (v9)
  {
    int v11 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithLongLong:]( NSNumber,  "numberWithLongLong:",  [v13 databaseID]));
    [v10 addActivity:v3 withIdentifier:v11];
  }

  else
  {
    id v12 = [v10 addActivity:v3];
  }
}

void sub_100179A34(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  id v9 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v9) {
    id v9 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v10 = [v9 shouldLog];
  else {
    LODWORD(v11) = v10;
  }
  id v12 = (os_log_s *)objc_claimAutoreleasedReturnValue([v9 OSLogObject]);
  if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO)) {
    uint64_t v11 = v11;
  }
  else {
    v11 &= 2u;
  }
  if ((_DWORD)v11)
  {
    id v13 = (void *)objc_opt_class(*(void *)(a1 + 40));
    id v14 = v13;
    __int16 v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "componentsJoinedByString:", @", "));
    int v18 = 138544130;
    __int16 v19 = v13;
    __int16 v20 = 1024;
    int v21 = a2;
    __int16 v22 = 2114;
    __int16 v23 = v15;
    __int16 v24 = 2112;
    id v25 = v8;
    int v16 = (void *)_os_log_send_and_compose_impl( v11,  0LL,  0LL,  0LL,  &_mh_execute_header,  v12,  1LL,  "[%{public}@]: appstored replied to claim request with result: %d claimedBundleIdentifiers: [%{public}@] error: %@",  &v18,  38);

    if (!v16) {
      goto LABEL_13;
    }
    id v12 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v16,  4LL));
    free(v16);
    SSFileLog(v9, @"%@");
  }

LABEL_13:
  uint64_t v17 = *(void *)(a1 + 32);
  if (v17) {
    (*(void (**)(uint64_t, uint64_t, id, id))(v17 + 16))(v17, a2, v7, v8);
  }
}

void sub_100179D7C(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v8) {
    id v8 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v9 = [v8 shouldLog];
  else {
    LODWORD(v10) = v9;
  }
  uint64_t v11 = (os_log_s *)objc_claimAutoreleasedReturnValue([v8 OSLogObject]);
  if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO)) {
    uint64_t v10 = v10;
  }
  else {
    v10 &= 2u;
  }
  if (!(_DWORD)v10) {
    goto LABEL_12;
  }
  id v12 = (void *)objc_opt_class(*(void *)(a1 + 40));
  uint64_t v13 = *(void *)(a1 + 32);
  id v14 = v12;
  __int16 v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "componentsJoinedByString:", @", "));
  int v17 = 138544130;
  int v18 = v12;
  __int16 v19 = 2114;
  uint64_t v20 = v13;
  __int16 v21 = 2112;
  __int16 v22 = v15;
  __int16 v23 = 2112;
  id v24 = v7;
  int v16 = (void *)_os_log_send_and_compose_impl( v10,  0LL,  0LL,  0LL,  &_mh_execute_header,  v11,  1LL,  "[%{public}@]: Completed sending downloads for %{public}@ with job(s): %@ error: %@",  &v17,  42);

  if (v16)
  {
    uint64_t v11 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v16,  4LL));
    free(v16);
    SSFileLog(v8, @"%@");
LABEL_12:
  }
}

void sub_100179FDC(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  int v2 = (void *)qword_1003A35A0;
  qword_1003A35A0 = (uint64_t)v1;
}

void sub_10017A558(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3)
  {
    if ((a2 & 1) != 0)
    {
      uint64_t v5 = 0LL;
    }

    else
    {
      uint64_t v6 = SSError(SSErrorDomain, 112LL, 0LL, 0LL);
      uint64_t v5 = objc_claimAutoreleasedReturnValue(v6);
      uint64_t v3 = *(void *)(a1 + 32);
    }

    id v7 = (id)v5;
    (*(void (**)(uint64_t, uint64_t))(v3 + 16))(v3, a2);
  }

void sub_10017A88C(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  xpc_activity_state_t state = xpc_activity_get_state(v3);
  if (state == 2)
  {
    __int16 v15 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v15) {
      __int16 v15 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v16 = [v15 shouldLog];
    else {
      LODWORD(v17) = v16;
    }
    int v18 = (os_log_s *)objc_claimAutoreleasedReturnValue([v15 OSLogObject]);
    if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO)) {
      uint64_t v17 = v17;
    }
    else {
      v17 &= 2u;
    }
    if ((_DWORD)v17)
    {
      __int16 v19 = (objc_class *)objc_opt_class(*(void *)(a1 + 40));
      uint64_t v20 = NSStringFromClass(v19);
      __int16 v21 = (void *)objc_claimAutoreleasedReturnValue(v20);
      int v58 = 138412290;
      id v59 = v21;
      __int16 v22 = (void *)_os_log_send_and_compose_impl( v17,  0LL,  0LL,  0LL,  &_mh_execute_header,  v18,  1LL,  "[%@]: running Install Attribution clean params task",  &v58,  12);

      if (!v22) {
        goto LABEL_29;
      }
      int v18 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v22,  4LL));
      free(v22);
      uint64_t v55 = v18;
      SSFileLog(v15, @"%@");
    }

LABEL_29:
    uint64_t v6 = objc_alloc_init(&OBJC_CLASS___ISLoadURLBagOperation);
    __int16 v23 = (void *)objc_claimAutoreleasedReturnValue(+[ISOperationQueue mainQueue](&OBJC_CLASS___ISOperationQueue, "mainQueue"));
    __int128 v62 = v6;
    id v24 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v62, 1LL));
    [v23 addOperations:v24 waitUntilFinished:1];

    if (-[ISLoadURLBagOperation success](v6, "success"))
    {
      id v25 = (void *)objc_claimAutoreleasedReturnValue(-[ISLoadURLBagOperation URLBag](v6, "URLBag"));
      char v26 = (void *)objc_claimAutoreleasedReturnValue([v25 valueForKey:@"install-attribution-max-cache-age"]);

      else {
        uint64_t v27 = 30LL;
      }
      uint64_t v42 = (void *)objc_claimAutoreleasedReturnValue(-[ISLoadURLBagOperation URLBag](v6, "URLBag", v55));
      id v38 = (void *)objc_claimAutoreleasedReturnValue([v42 valueForKey:@"install-attribution-max-pingback-cache-age"]);

      if (v38 && [v38 integerValue])
      {
        uint64_t v43 = (uint64_t)[v38 integerValue];
LABEL_62:

        goto LABEL_63;
      }
    }

    else
    {
      char v26 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharediTunesStoreConfig](&OBJC_CLASS___SSLogConfig, "sharediTunesStoreConfig"));
      if (!v26) {
        char v26 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
      }
      unsigned int v36 = objc_msgSend(v26, "shouldLog", v55);
      else {
        LODWORD(v37) = v36;
      }
      id v38 = (void *)objc_claimAutoreleasedReturnValue([v26 OSLogObject]);
      if (os_log_type_enabled((os_log_t)v38, OS_LOG_TYPE_ERROR)) {
        uint64_t v37 = v37;
      }
      else {
        v37 &= 2u;
      }
      if ((_DWORD)v37)
      {
        uint64_t v39 = (void *)objc_opt_class(*(void *)(a1 + 40));
        int v58 = 138543362;
        id v59 = v39;
        id v40 = v39;
        LODWORD(v57) = 12;
        id v41 = (void *)_os_log_send_and_compose_impl( v37,  0LL,  0LL,  0LL,  &_mh_execute_header,  v38,  16LL,  "[%{public}@]: Failed to load URL bag in Install Attribution clean params task",  &v58,  v57);

        if (!v41)
        {
          uint64_t v27 = 30LL;
          uint64_t v43 = 60LL;
LABEL_63:

          __int128 v44 = (void *)objc_claimAutoreleasedReturnValue( +[PurchaseActionsManager sharedInstance]( &OBJC_CLASS___PurchaseActionsManager,  "sharedInstance"));
          unsigned int v45 = (void *)objc_claimAutoreleasedReturnValue( +[NSDate dateWithTimeIntervalSinceNow:]( &OBJC_CLASS___NSDate,  "dateWithTimeIntervalSinceNow:",  (double)(-86400 * v27)));
          [v44 removeInstallAttributionParamsBeforeDate:v45];

          uint64_t v46 = (void *)objc_claimAutoreleasedReturnValue( +[PurchaseActionsManager sharedInstance]( &OBJC_CLASS___PurchaseActionsManager,  "sharedInstance"));
          __int128 v47 = (void *)objc_claimAutoreleasedReturnValue( +[NSDate dateWithTimeIntervalSinceNow:]( &OBJC_CLASS___NSDate,  "dateWithTimeIntervalSinceNow:",  (double)(-86400 * v43)));
          [v46 removeNonPendingInstallAttributionPingbacksBeforeDate:v47];

          if (xpc_activity_set_state(v3, 5LL)) {
            goto LABEL_77;
          }
          uint64_t v35 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
          if (!v35) {
            uint64_t v35 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
          }
          unsigned int v48 = objc_msgSend(v35, "shouldLog", v56);
          else {
            LODWORD(v49) = v48;
          }
          uint64_t v50 = (os_log_s *)objc_claimAutoreleasedReturnValue([v35 OSLogObject]);
          if (os_log_type_enabled(v50, OS_LOG_TYPE_INFO)) {
            uint64_t v49 = v49;
          }
          else {
            v49 &= 2u;
          }
          if ((_DWORD)v49)
          {
            uint64_t v51 = (objc_class *)objc_opt_class(*(void *)(a1 + 40));
            uint64_t v52 = NSStringFromClass(v51);
            __int16 v53 = (void *)objc_claimAutoreleasedReturnValue(v52);
            int v58 = 138412290;
            id v59 = v53;
            LODWORD(v57) = 12;
            uint64_t v54 = (void *)_os_log_send_and_compose_impl( v49,  0LL,  0LL,  0LL,  &_mh_execute_header,  v50,  1LL,  "[%@] Could not set state of the Install Attribution clean params task activity to XPC_ACTIVITY_STATE_DONE.",  &v58,  v57);

            if (!v54) {
              goto LABEL_76;
            }
            uint64_t v50 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v54,  4LL));
            free(v54);
            SSFileLog(v35, @"%@");
          }

          goto LABEL_76;
        }

        id v38 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v41,  4LL));
        free(v41);
        uint64_t v56 = v38;
        SSFileLog(v26, @"%@");
      }

      uint64_t v27 = 30LL;
    }

    uint64_t v43 = 60LL;
    goto LABEL_62;
  }

  int v5 = state;
  if (state)
  {
    uint64_t v6 = (ISLoadURLBagOperation *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v6) {
      uint64_t v6 = (ISLoadURLBagOperation *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v28 = -[ISLoadURLBagOperation shouldLog](v6, "shouldLog");
    else {
      LODWORD(v29) = v28;
    }
    char v30 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[ISLoadURLBagOperation OSLogObject](v6, "OSLogObject"));
    if (os_log_type_enabled(v30, OS_LOG_TYPE_INFO)) {
      uint64_t v29 = v29;
    }
    else {
      v29 &= 2u;
    }
    if (!(_DWORD)v29)
    {

      goto LABEL_77;
    }

    unsigned int v31 = (objc_class *)objc_opt_class(*(void *)(a1 + 40));
    unint64_t v32 = NSStringFromClass(v31);
    char v33 = (void *)objc_claimAutoreleasedReturnValue(v32);
    int v58 = 138412546;
    id v59 = v33;
    __int16 v60 = 1024;
    int v61 = v5;
    uint64_t v34 = (void *)_os_log_send_and_compose_impl( v29,  0LL,  0LL,  0LL,  &_mh_execute_header,  v30,  1LL,  "[%@] Unknown state: %d when processing Install Attribution clean params task",  &v58,  18);

    if (!v34) {
      goto LABEL_77;
    }
    uint64_t v35 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v34,  4LL));
    free(v34);
    SSFileLog(v6, @"%@");
LABEL_76:

    goto LABEL_77;
  }

  uint64_t v6 = (ISLoadURLBagOperation *)xpc_activity_copy_criteria(v3);
  if (!v6)
  {
    id v7 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v7) {
      id v7 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v8 = [v7 shouldLog];
    else {
      LODWORD(v9) = v8;
    }
    uint64_t v10 = (os_log_s *)objc_claimAutoreleasedReturnValue([v7 OSLogObject]);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO)) {
      uint64_t v9 = v9;
    }
    else {
      v9 &= 2u;
    }
    if ((_DWORD)v9)
    {
      uint64_t v11 = (objc_class *)objc_opt_class(*(void *)(a1 + 40));
      id v12 = NSStringFromClass(v11);
      uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
      int v58 = 138412290;
      id v59 = v13;
      id v14 = (void *)_os_log_send_and_compose_impl( v9,  0LL,  0LL,  0LL,  &_mh_execute_header,  v10,  1LL,  "[%@]: setting criteria for Install Attribution clean params task",  &v58,  12);

      if (!v14)
      {
LABEL_16:

        xpc_activity_set_criteria(v3, *(xpc_object_t *)(a1 + 32));
        goto LABEL_77;
      }

      uint64_t v10 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v14,  4LL));
      free(v14);
      SSFileLog(v7, @"%@");
    }

    goto LABEL_16;
  }

LABEL_77:
}

id sub_10017B148(uint64_t a1)
{
  return [*(id *)(a1 + 32) sendPendingPingbacks];
}

void sub_10017B3D8(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (![v3 count])
  {
    +[PurchaseActionsManager unregisterInstallAttributionPingbackRetryTask]( &OBJC_CLASS___PurchaseActionsManager,  "unregisterInstallAttributionPingbackRetryTask");
    goto LABEL_25;
  }

  __int128 v45 = 0u;
  __int128 v46 = 0u;
  __int128 v43 = 0u;
  __int128 v44 = 0u;
  id v34 = v3;
  id obj = v3;
  id v38 = [obj countByEnumeratingWithState:&v43 objects:v55 count:16];
  if (!v38) {
    goto LABEL_23;
  }
  uint64_t v37 = *(void *)v44;
  do
  {
    for (uint64_t i = 0LL; i != v38; uint64_t i = (char *)i + 1)
    {
      if (*(void *)v44 != v37) {
        objc_enumerationMutation(obj);
      }
      int v5 = *(void **)(*((void *)&v43 + 1) + 8LL * (void)i);
      uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "appAdamId", v32));
      id v7 = [v6 copy];

      unsigned int v8 = objc_alloc(&OBJC_CLASS___NSMutableURLRequest);
      uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v5 pingbackUrl]);
      uint64_t v10 = -[NSMutableURLRequest initWithURL:cachePolicy:timeoutInterval:]( v8,  "initWithURL:cachePolicy:timeoutInterval:",  v9,  1LL,  60.0);

      -[NSMutableURLRequest setHTTPMethod:](v10, "setHTTPMethod:", @"POST");
      v53[0] = @"ad-network-id";
      uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v5 adNetworkId]);
      v54[0] = v11;
      v54[1] = v7;
      v53[1] = @"app-id";
      v53[2] = @"campaign-id";
      id v12 = (void *)objc_claimAutoreleasedReturnValue([v5 campaignId]);
      v54[2] = v12;
      v53[3] = @"transaction-id";
      uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v5 transactionId]);
      v54[3] = v13;
      v53[4] = @"attribution-signature";
      id v14 = (void *)objc_claimAutoreleasedReturnValue([v5 attributionSignature]);
      v54[4] = v14;
      __int16 v15 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v54,  v53,  5LL));

      id v42 = 0LL;
      unsigned int v16 = (void *)objc_claimAutoreleasedReturnValue( +[NSJSONSerialization dataWithJSONObject:options:error:]( &OBJC_CLASS___NSJSONSerialization,  "dataWithJSONObject:options:error:",  v15,  1LL,  &v42));
      id v17 = v42;
      if (v17)
      {
        int v18 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
        if (!v18) {
          int v18 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
        }
        LODWORD(v19) = [v18 shouldLog];
        uint64_t v20 = (os_log_s *)objc_claimAutoreleasedReturnValue([v18 OSLogObject]);
        if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
          uint64_t v19 = v19;
        }
        else {
          v19 &= 2u;
        }
        if ((_DWORD)v19)
        {
          __int16 v21 = (void *)objc_opt_class(*(void *)(a1 + 32));
          int v47 = 138543874;
          unsigned int v48 = v21;
          __int16 v49 = 2112;
          id v50 = v7;
          __int16 v51 = 2114;
          id v52 = v17;
          id v36 = v17;
          __int16 v22 = v10;
          id v23 = v7;
          id v24 = v15;
          id v25 = v16;
          uint64_t v26 = a1;
          id v27 = v21;
          LODWORD(v33) = 32;
          unsigned int v28 = (void *)_os_log_send_and_compose_impl( v19,  0LL,  0LL,  0LL,  &_mh_execute_header,  v20,  16LL,  "[%{public}@]: Install attribution pingback serialization for app: %@ failed with error: %{public}@",  &v47,  v33);

          a1 = v26;
          unsigned int v16 = v25;
          __int16 v15 = v24;
          id v7 = v23;
          uint64_t v10 = v22;
          id v17 = v36;

          if (v28)
          {
            uint64_t v20 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v28,  4LL));
            free(v28);
            unint64_t v32 = v20;
            SSFileLog(v18, @"%@");
            goto LABEL_18;
          }
        }

        else
        {
LABEL_18:
        }

        [*(id *)(*(void *)(a1 + 32) + 8) removeInstallAttributionPingbackForApp:v7];
        goto LABEL_21;
      }

      -[NSMutableURLRequest setHTTPBody:](v10, "setHTTPBody:", v16);
      -[NSMutableURLRequest setValue:forHTTPHeaderField:]( v10,  "setValue:forHTTPHeaderField:",  @"App Store",  @"User-Agent");
      -[NSMutableURLRequest setValue:forHTTPHeaderField:]( v10,  "setValue:forHTTPHeaderField:",  @"application/json",  @"Content-Type");
      BOOL v29 = (uint64_t)[v5 retryCount] + 1 >= *(void *)(a1 + 40);
      char v30 = (void *)objc_claimAutoreleasedReturnValue(+[NSURLSession sharedSession](&OBJC_CLASS___NSURLSession, "sharedSession"));
      v39[0] = _NSConcreteStackBlock;
      v39[1] = 3221225472LL;
      v39[2] = sub_10017B8DC;
      v39[3] = &unk_100350710;
      void v39[4] = *(void *)(a1 + 32);
      id v40 = v7;
      BOOL v41 = v29;
      unsigned int v31 = (void *)objc_claimAutoreleasedReturnValue([v30 dataTaskWithRequest:v10 completionHandler:v39]);

      [v31 resume];
LABEL_21:
    }

    id v38 = [obj countByEnumeratingWithState:&v43 objects:v55 count:16];
  }

  while (v38);
LABEL_23:

  id v3 = v34;
LABEL_25:
}

void sub_10017B8DC(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  if (!v9)
  {
    uint64_t v18 = *(void *)(a1 + 40);
    uint64_t v19 = *(void **)(*(void *)(a1 + 32) + 8LL);
    goto LABEL_17;
  }

  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v10) {
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v11 = [v10 shouldLog];
  else {
    LODWORD(v12) = v11;
  }
  uint64_t v13 = (os_log_s *)objc_claimAutoreleasedReturnValue([v10 OSLogObject]);
  if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
    uint64_t v12 = v12;
  }
  else {
    v12 &= 2u;
  }
  if ((_DWORD)v12)
  {
    id v14 = (void *)objc_opt_class(*(void *)(a1 + 32));
    uint64_t v15 = *(void *)(a1 + 40);
    int v21 = 138543874;
    __int16 v22 = v14;
    __int16 v23 = 2112;
    uint64_t v24 = v15;
    __int16 v25 = 2114;
    id v26 = v9;
    id v16 = v14;
    id v17 = (void *)_os_log_send_and_compose_impl( v12,  0LL,  0LL,  0LL,  &_mh_execute_header,  v13,  16LL,  "[%{public}@]: Install attribution pingback for app: %@ failed with error: %{public}@",  &v21,  32);

    if (!v17) {
      goto LABEL_14;
    }
    uint64_t v13 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v17,  4LL));
    free(v17);
    uint64_t v20 = v13;
    SSFileLog(v10, @"%@");
  }

LABEL_14:
  uint64_t v18 = *(void *)(a1 + 40);
  uint64_t v19 = *(void **)(*(void *)(a1 + 32) + 8LL);
  if (*(_BYTE *)(a1 + 48))
  {
LABEL_17:
    objc_msgSend(v19, "removeInstallAttributionPingbackForApp:", v18, v20);
    goto LABEL_18;
  }

  [v19 incrementPingbackRetryCountForApp:v18];
LABEL_18:
}

void sub_10017BBE4(uint64_t a1, void *a2)
{
  id v3 = a2;
  xpc_activity_state_t state = xpc_activity_get_state(v3);
  if (state != 2)
  {
    int v5 = state;
    if (!state)
    {
      xpc_object_t v6 = xpc_activity_copy_criteria(v3);
      if (!v6)
      {
        id v7 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
        if (!v7) {
          id v7 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
        }
        unsigned int v8 = [v7 shouldLog];
        else {
          LODWORD(v9) = v8;
        }
        uint64_t v10 = (os_log_s *)objc_claimAutoreleasedReturnValue([v7 OSLogObject]);
        if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO)) {
          uint64_t v9 = v9;
        }
        else {
          v9 &= 2u;
        }
        if ((_DWORD)v9)
        {
          unsigned int v11 = (objc_class *)objc_opt_class(*(void *)(a1 + 40));
          uint64_t v12 = NSStringFromClass(v11);
          uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
          int v39 = 138412290;
          id v40 = v13;
          id v14 = (void *)_os_log_send_and_compose_impl( v9,  0LL,  0LL,  0LL,  &_mh_execute_header,  v10,  1LL,  "[%@]: setting criteria for Install Attribution send pending pingbacks task",  &v39,  12);

          if (!v14)
          {
LABEL_16:

            xpc_activity_set_criteria(v3, *(xpc_object_t *)(a1 + 32));
            goto LABEL_54;
          }

          uint64_t v10 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v14,  4LL));
          free(v14);
          SSFileLog(v7, @"%@");
        }

        goto LABEL_16;
      }

LABEL_55:
}

LABEL_70:
    -[AnalyticsReportingOperation _destroyOutputFile:](self, "_destroyOutputFile:", v7, v62);

    objc_autoreleasePoolPop(v73);
    if ((v12 & 1) == 0) {
      goto LABEL_73;
    }
  }

  objc_autoreleasePoolPop(v73);
LABEL_73:
  if (a5 && (v65 & 1) == 0) {
    *a5 = v67;
  }

  return v65 & 1;
}

void sub_10017C47C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_10017C4A0(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = (id *)(a1 + 32);
  id v4 = a3;
  id WeakRetained = objc_loadWeakRetained(v3);
  [WeakRetained _handleBackgroundTaskEvent:v4];
}

void sub_10017C66C(uint64_t a1)
{
  if (![*(id *)(*(void *)(a1 + 32) + 40) operationCount])
  {
    uint64_t v23 = a1;
    int v2 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
    if (!v2) {
      int v2 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
    }
    unsigned int v3 = [v2 shouldLog];
    else {
      unsigned int v4 = v3;
    }
    int v5 = (os_log_s *)objc_claimAutoreleasedReturnValue([v2 OSLogObject]);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO)) {
      uint64_t v6 = v4;
    }
    else {
      uint64_t v6 = v4 & 2;
    }
    if ((_DWORD)v6)
    {
      id v7 = (void *)objc_opt_class(*(void *)(v23 + 32));
      unsigned int v8 = *(void **)(*(void *)(v23 + 32) + 56LL);
      id v9 = v7;
      *(_DWORD *)id location = 138412546;
      *(void *)&location[4] = v7;
      __int16 v32 = 2048;
      id v33 = [v8 count];
      uint64_t v10 = (void *)_os_log_send_and_compose_impl( v6,  0LL,  0LL,  0LL,  &_mh_execute_header,  v5,  1LL,  "%@: Polling for %ld request(s)",  location,  22);

      if (v10)
      {
        unsigned int v11 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v10,  4LL));
        free(v10);
        __int16 v22 = v11;
        SSFileLog(v2, @"%@");
      }
    }

    else
    {
    }

    uint64_t v12 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    __int128 v28 = 0u;
    __int128 v29 = 0u;
    __int128 v26 = 0u;
    __int128 v27 = 0u;
    id v13 = *(id *)(*(void *)(v23 + 32) + 56LL);
    id v14 = [v13 countByEnumeratingWithState:&v26 objects:v30 count:16];
    if (v14)
    {
      uint64_t v15 = *(void *)v27;
      do
      {
        for (uint64_t i = 0LL; i != v14; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v27 != v15) {
            objc_enumerationMutation(v13);
          }
          uint64_t v17 = *(void **)(*((void *)&v26 + 1) + 8LL * (void)i);
          uint64_t v18 = objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "sourceApplicationIdentifier", v22));
          if (v18) {
            uint64_t v19 = (__CFString *)v18;
          }
          else {
            uint64_t v19 = &stru_10035EB18;
          }
          uint64_t v20 = (NSMutableArray *)objc_claimAutoreleasedReturnValue(-[NSMutableDictionary objectForKey:](v12, "objectForKey:", v19));
          int v21 = v20;
          if (v20)
          {
            -[NSMutableArray addObject:](v20, "addObject:", v17);
          }

          else
          {
            int v21 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
            -[NSMutableArray addObject:](v21, "addObject:", v17);
            -[NSMutableDictionary setObject:forKey:](v12, "setObject:forKey:", v21, v19);
          }
        }

        id v14 = [v13 countByEnumeratingWithState:&v26 objects:v30 count:16];
      }

      while (v14);
    }

    objc_initWeak((id *)location, *(id *)(v23 + 32));
    v24[0] = _NSConcreteStackBlock;
    v24[1] = 3221225472LL;
    void v24[2] = sub_10017C9F4;
    void v24[3] = &unk_100350788;
    objc_copyWeak(&v25, (id *)location);
    void v24[4] = *(void *)(v23 + 32);
    -[NSMutableDictionary enumerateKeysAndObjectsUsingBlock:](v12, "enumerateKeysAndObjectsUsingBlock:", v24);
    objc_destroyWeak(&v25);
    objc_destroyWeak((id *)location);
  }

void sub_10017C9D0(_Unwind_Exception *a1)
{
}

void sub_10017C9F4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = -[MediaSocialStatusPollOperation initWithStatusPollRequests:]( objc_alloc(&OBJC_CLASS___MediaSocialStatusPollOperation),  "initWithStatusPollRequests:",  v6);
  id v9 = _NSConcreteStackBlock;
  uint64_t v10 = 3221225472LL;
  unsigned int v11 = sub_10017CAF0;
  uint64_t v12 = &unk_100350760;
  objc_copyWeak(&v14, (id *)(a1 + 40));
  id v8 = v6;
  id v13 = v8;
  -[MediaSocialStatusPollOperation setResponseBlock:](v7, "setResponseBlock:", &v9);
  objc_msgSend(*(id *)(*(void *)(a1 + 32) + 40), "addOperation:", v7, v9, v10, v11, v12);

  objc_destroyWeak(&v14);
}

void sub_10017CAD8(_Unwind_Exception *a1)
{
}

void sub_10017CAF0(uint64_t a1, void *a2)
{
  unsigned int v3 = (id *)(a1 + 40);
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained(v3);
  [WeakRetained _finishRequests:*(void *)(a1 + 32) withResponses:v4];
}

void sub_10017CE70(uint64_t a1)
{
  uint64_t v2 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  __int128 v31 = 0u;
  __int128 v32 = 0u;
  __int128 v33 = 0u;
  __int128 v34 = 0u;
  id v3 = *(id *)(a1 + 32);
  id v4 = [v3 countByEnumeratingWithState:&v31 objects:v43 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v32;
    uint64_t v29 = a1;
    do
    {
      id v7 = 0LL;
      id v30 = v5;
      do
      {
        if (*(void *)v32 != v6) {
          objc_enumerationMutation(v3);
        }
        id v8 = *(void **)(*((void *)&v31 + 1) + 8LL * (void)v7);
        id v9 = *(void **)(a1 + 40);
        uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v8 activityIdentifier]);
        unsigned int v11 = (void *)objc_claimAutoreleasedReturnValue([v9 objectForKey:v10]);

        if (v11)
        {
          double Current = CFAbsoluteTimeGetCurrent();
          [v8 postCreateTime];
          double v14 = v13;
          [v8 pollingDuration];
          double v16 = v14 + v15;
          if (Current <= v16)
          {
            if ([v11 result] == (id)4) {
              goto LABEL_21;
            }
          }

          else
          {
            uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
            if (!v17) {
              uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
            }
            LODWORD(v1_Block_object_dispose(va, 8) = [v17 shouldLog];
            uint64_t v19 = (os_log_s *)objc_claimAutoreleasedReturnValue([v17 OSLogObject]);
            if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO)) {
              uint64_t v18 = v18;
            }
            else {
              v18 &= 2u;
            }
            if ((_DWORD)v18)
            {
              uint64_t v20 = (void *)objc_opt_class(*(void *)(a1 + 48));
              int v35 = 138413058;
              id v36 = v20;
              __int16 v37 = 2112;
              uint64_t v38 = v8;
              __int16 v39 = 2048;
              double v40 = Current;
              __int16 v41 = 2048;
              double v42 = v16;
              uint64_t v21 = v6;
              id v22 = v3;
              uint64_t v23 = v2;
              id v24 = v20;
              LODWORD(v2_Block_object_dispose(va, 8) = 42;
              id v25 = (void *)_os_log_send_and_compose_impl( v18,  0LL,  0LL,  0LL,  &_mh_execute_header,  v19,  1LL,  "%@: Request %@ exceeded poll for now: %f timeout time: %f",  &v35,  v28);

              uint64_t v2 = v23;
              id v3 = v22;
              uint64_t v6 = v21;
              a1 = v29;

              if (v25)
              {
                uint64_t v19 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v25,  4LL));
                free(v25);
                __int128 v27 = v19;
                SSFileLog(v17, @"%@");
                goto LABEL_18;
              }
            }

            else
            {
LABEL_18:
            }

            [v11 setResult:5];
            id v5 = v30;
LABEL_21:
            objc_msgSend(*(id *)(*(void *)(a1 + 48) + 56), "removeObject:", v8, v27);
          }

          -[NSMutableArray addObject:](v2, "addObject:", v11);
        }

        id v7 = (char *)v7 + 1;
      }

      while (v5 != v7);
      id v5 = [v3 countByEnumeratingWithState:&v31 objects:v43 count:16];
    }

    while (v5);
  }

  if (*(_BYTE *)(a1 + 56) && [*(id *)(*(void *)(a1 + 48) + 56) count])
  {
    *(CFAbsoluteTime *)(*(void *)(a1 + 48) + 32LL) = CFAbsoluteTimeGetCurrent()
                                                     + *(double *)(*(void *)(a1 + 48) + 48LL);
    [*(id *)(a1 + 48) _addBackgroundTaskJob];
  }

  __int128 v26 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) delegate]);
  if ((objc_opt_respondsToSelector(v26, "pollingCoordinator:didPollWithResponses:") & 1) != 0) {
    [v26 pollingCoordinator:*(void *)(a1 + 48) didPollWithResponses:v2];
  }
}

void sub_10017D41C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_10017D434(uint64_t a1, uint64_t a2)
{
}

void sub_10017D444(uint64_t a1)
{
}

void sub_10017D450(uint64_t a1, void *a2)
{
  id v4 = -[DownloadEntity initWithPersistentID:inDatabase:]( [DownloadEntity alloc],  "initWithPersistentID:inDatabase:",  objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "applicationHandle"), "downloadID"),  objc_msgSend(a2, "database"));
  id v3 = -[NSArray initWithObjects:](objc_alloc(&OBJC_CLASS___NSArray), "initWithObjects:", @"bundle_id", 0LL);
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 4+[SSVSubscriptionEntitlementsCoordinator setCachedSubscriptionEntitlements:]( &OBJC_CLASS___SSVSubscriptionEntitlementsCoordinator,  "setCachedSubscriptionEntitlements:", 0LL) = -[Download initWithDatabaseEntity:properties:]( objc_alloc(&OBJC_CLASS___Download),  "initWithDatabaseEntity:properties:",  v4,  v3);
}

LABEL_153:
  -[FinishDownloadStepOperation finishWithDownloadResponse:](self, "finishWithDownloadResponse:", v4, v113);
}

void sub_10017E8AC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15)
{
  if (a2)
  {
    objc_begin_catch(exception_object);
    JUMPOUT(0x10017DF44LL);
  }

  _Unwind_Resume(exception_object);
}

uint64_t sub_10017E91C(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v2) {
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v3 = [v2 shouldLog];
  else {
    LODWORD(v4) = v3;
  }
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue([v2 OSLogObject]);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO)) {
    uint64_t v4 = v4;
  }
  else {
    v4 &= 2u;
  }
  if (!(_DWORD)v4) {
    goto LABEL_12;
  }
  uint64_t v6 = (void *)objc_opt_class(*(void *)(a1 + 32));
  uint64_t v7 = *(void *)(a1 + 56);
  uint64_t v8 = *(void *)(a1 + 40);
  int v12 = 138412802;
  double v13 = v6;
  __int16 v14 = 2048;
  uint64_t v15 = v7;
  __int16 v16 = 2112;
  uint64_t v17 = v8;
  id v9 = v6;
  uint64_t v10 = (void *)_os_log_send_and_compose_impl( v4,  0LL,  0LL,  0LL,  &_mh_execute_header,  v5,  1LL,  "%@: Continuing after bubble termination complete for download: %lld bundleID: %@",  &v12,  32);

  if (v10)
  {
    id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v10,  4LL));
    free(v10);
    SSFileLog(v2, @"%@");
LABEL_12:
  }

  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 48));
}

uint64_t sub_10017EAC0(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_10017EE38(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v2) {
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v3 = [v2 shouldLog];
  else {
    unsigned int v4 = v3;
  }
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue([v2 OSLogObject]);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO)) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 & 2;
  }
  if (!(_DWORD)v6) {
    goto LABEL_12;
  }
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 40);
  int v18 = 134218242;
  uint64_t v19 = v7;
  __int16 v20 = 2112;
  uint64_t v21 = v8;
  id v9 = (void *)_os_log_send_and_compose_impl( v6,  0LL,  0LL,  0LL,  &_mh_execute_header,  v5,  1LL,  "InstallSoftwareDownloadOperation: Retry download after termination allowed: %lld / %@",  &v18,  22);

  if (v9)
  {
    id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v9,  4LL));
    free(v9);
    SSFileLog(v2, @"%@");
LABEL_12:
  }

  uint64_t v10 = objc_alloc(&OBJC_CLASS___NSOrderedSet);
  unsigned int v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", *(void *)(a1 + 40)));
  int v12 = -[NSOrderedSet initWithObject:](v10, "initWithObject:", v11);

  double v13 = (void *)objc_claimAutoreleasedReturnValue(+[DownloadsDatabase downloadsDatabase](&OBJC_CLASS___DownloadsDatabase, "downloadsDatabase"));
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472LL;
  v16[2] = sub_10017F050;
  v16[3] = &unk_10034CEB8;
  uint64_t v17 = v12;
  __int16 v14 = v12;
  id v15 = [v13 modifyUsingTransactionBlock:v16];
}

id sub_10017F050(uint64_t a1, void *a2)
{
  return [a2 resetDownloadsWithIdentifiers:*(void *)(a1 + 32)];
}

BOOL sub_10017F05C(uint64_t a1)
{
  unsigned __int8 v5 = 0;
  uint64_t v1 = SBSApplicationTerminationAssertionCreateWithError(0LL, *(void *)(a1 + 32), 0LL, &v5);
  int v2 = v5;
  if (v1)
  {
    unsigned int v3 = (const void *)v1;
    SBSApplicationTerminationAssertionInvalidate();
    CFRelease(v3);
  }

  return v2 != 1;
}

void sub_10017FA94( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
}

uint64_t sub_10017FAC4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_10017FAD4(uint64_t a1)
{
}

void sub_10017FADC(uint64_t a1, void *a2, int a3)
{
  id v6 = a2;
  if (a3)
  {
    id v7 = v6;
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 40LL), a2);
    id v6 = v7;
  }
}

id sub_1001800D8(uint64_t a1, uint64_t a2)
{
  id result = objc_retainBlock(*(id *)(a2 + 40));
  *(void *)(a1 + 40) = result;
  return result;
}

void sub_100180100(uint64_t a1)
{
}

void sub_100180108(uint64_t a1)
{
  id v2 = objc_retainBlock(*(id *)(*(void *)(a1 + 32) + 24LL));
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8LL);
  unsigned int v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_1001801F4(uint64_t a1)
{
  id v2 = objc_retainBlock(*(id *)(*(void *)(a1 + 32) + 32LL));
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8LL);
  unsigned int v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

uint64_t sub_100180358(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

id sub_100180400(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 32);
  id result = *(id *)(a1 + 40);
  if (*(id *)(v3 + 24) != result)
  {
    id v4 = [result copy];
    uint64_t v5 = *(void *)(a1 + 32);
    id v6 = *(void **)(v5 + 24);
    *(void *)(v5 + 24) = v4;

    return [*(id *)(a1 + 32) _reloadEventHandler];
  }

  return result;
}

id sub_1001804CC(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 32);
  id result = *(id *)(a1 + 40);
  if (*(id *)(v3 + 32) != result)
  {
    id v4 = [result copy];
    uint64_t v5 = *(void *)(a1 + 32);
    id v6 = *(void **)(v5 + 32);
    *(void *)(v5 + 32) = v4;

    return [*(id *)(a1 + 32) _reloadEventHandler];
  }

  return result;
}

void sub_1001805C4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  if (v3 == &_xpc_error_connection_interrupted || v3 == &_xpc_error_connection_invalid)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6) {
      (*(void (**)(void))(v6 + 16))();
    }
  }

  else if (xpc_get_type(v3) == (xpc_type_t)&_xpc_type_connection)
  {
    handler[0] = _NSConcreteStackBlock;
    handler[1] = 3221225472LL;
    handler[2] = sub_1001806B4;
    handler[3] = &unk_100350828;
    id v10 = *(id *)(a1 + 32);
    id v11 = *(id *)(a1 + 40);
    id v7 = v4;
    id v9 = v7;
    xpc_connection_set_event_handler((xpc_connection_t)v7, handler);
    xpc_connection_resume((xpc_connection_t)v7);
  }
}

void sub_1001806B4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  if (v3 == &_xpc_error_connection_interrupted || v3 == &_xpc_error_connection_invalid)
  {
    uint64_t v6 = *(void *)(a1 + 40);
    if (v6) {
      goto LABEL_9;
    }
  }

  else
  {
    uint64_t v6 = *(void *)(a1 + 48);
    if (v6)
    {
LABEL_9:
      id v7 = v4;
      (*(void (**)(void))(v6 + 16))();
      id v4 = v7;
    }
  }
}

void sub_100180820(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  id v2 = (void *)qword_1003A35B0;
  qword_1003A35B0 = (uint64_t)v1;
}

void sub_100180AEC(uint64_t a1, BOOL a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v6) {
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v7 = [v6 shouldLog];
  else {
    LODWORD(v_Block_object_dispose(va, 8) = v7;
  }
  id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue([v6 OSLogObject]);
  if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
    uint64_t v8 = v8;
  }
  else {
    v8 &= 2u;
  }
  if (!(_DWORD)v8) {
    goto LABEL_12;
  }
  id v10 = (void *)objc_opt_class(*(void *)(a1 + 48));
  int v14 = 138412802;
  id v15 = v10;
  __int16 v16 = 1024;
  BOOL v17 = a2;
  __int16 v18 = 2112;
  id v19 = v5;
  id v11 = v10;
  int v12 = (void *)_os_log_send_and_compose_impl( v8,  0LL,  0LL,  0LL,  &_mh_execute_header,  v9,  16LL,  "[%@]: Update check complete with result: %d error: %@",  &v14,  28);

  if (v12)
  {
    id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v12,  4LL));
    free(v12);
    SSFileLog(v6, @"%@");
LABEL_12:
  }

  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(a1 + 32));
  xpc_dictionary_set_BOOL(reply, "0", a2);
  SSXPCDictionarySetCFObject(reply, "1", v5);
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 40), reply);
}

void sub_100182F58(_Unwind_Exception *a1)
{
}

void sub_100183860( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, int a10, int a11, int a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, int a29, uint64_t a30, __int16 a31, uint64_t a32)
{
  if (a2 != 1) {
    _Unwind_Resume(exception_object);
  }
  id v33 = objc_begin_catch(exception_object);
  __int128 v34 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v34) {
    __int128 v34 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v35 = [v34 shouldLog];
  unsigned int v36 = [v34 shouldLogToDisk];
  __int16 v37 = (os_log_s *)objc_claimAutoreleasedReturnValue([v34 OSLogObject]);
  uint64_t v38 = v37;
  if (v36) {
    unsigned int v39 = v35 | 2;
  }
  else {
    unsigned int v39 = v35;
  }
  if (os_log_type_enabled(v37, OS_LOG_TYPE_ERROR)) {
    uint64_t v40 = v39;
  }
  else {
    uint64_t v40 = v39 & 2;
  }
  if ((_DWORD)v40)
  {
    id v41 = (id)objc_opt_class(v32);
    double v42 = (void *)_os_log_send_and_compose_impl( v40,  0LL,  0LL,  0LL,  &_mh_execute_header,  v38,  16LL,  "[%@] Exception Caught at outer-loop: %@");

    if (!v42)
    {
LABEL_14:

      objc_end_catch();
      JUMPOUT(0x100183818LL);
    }

    uint64_t v38 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v42,  4LL));
    free(v42);
    SSFileLog(v34, @"%@");
  }

  goto LABEL_14;
}

void sub_100183CE4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

uint64_t sub_100183D08(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_100183D18(uint64_t a1)
{
}

void sub_100183D20(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL), a3);
  id v9 = a3;
  uint64_t v6 = *(void *)(*(void *)(a1 + 48) + 8LL);
  unsigned int v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;
  id v8 = v5;

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_10018415C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, char a31)
{
}

void sub_1001841A4(uint64_t a1)
{
  id v2 = objc_msgSend( [ML3DatabaseImport alloc],  "initWithLibraryPath:trackData:playlistData:",  +[ML3MusicLibrary sharedLibraryDatabasePath](ML3MusicLibrary, "sharedLibraryDatabasePath"),  *(void *)(a1 + 32),  0);
  id v3 = +[MLMediaLibraryService sharedMediaLibraryService]( &OBJC_CLASS___MLMediaLibraryService,  "sharedMediaLibraryService");
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  v5[2] = sub_100184264;
  v5[3] = &unk_1003508C8;
  uint64_t v8 = *(void *)(a1 + 72);
  __int128 v4 = *(_OWORD *)(a1 + 56);
  __int128 v6 = *(_OWORD *)(a1 + 40);
  __int128 v7 = v4;
  [v3 performImport:v2 fromSource:6 withProgressBlock:0 completionHandler:v5];
}

uint64_t sub_100184264(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  if ((a2 & 1) != 0)
  {
    uint64_t v30 = 0LL;
    uint64_t v7 = objc_opt_class(&OBJC_CLASS___NSArray);
    id v8 = +[NSKeyedUnarchiver unarchivedObjectOfClasses:fromData:error:]( &OBJC_CLASS___NSKeyedUnarchiver,  "unarchivedObjectOfClasses:fromData:error:",  +[NSSet setWithObjects:]( &OBJC_CLASS___NSSet,  "setWithObjects:",  v7,  objc_opt_class(&OBJC_CLASS___NSNumber),  0LL),  a4,  &v30);
    if (v30)
    {
      id v10 = +[SSLogConfig sharedStoreServicesConfig](&OBJC_CLASS___SSLogConfig, "sharedStoreServicesConfig");
      if (!v10) {
        id v10 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
      }
      unsigned int v11 = [v10 shouldLog];
      else {
        LODWORD(v12) = v11;
      }
      double v13 = (os_log_s *)[v10 OSLogObject];
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        uint64_t v12 = v12;
      }
      else {
        v12 &= 2u;
      }
      if ((_DWORD)v12)
      {
        uint64_t v14 = objc_opt_class(*(void *)(a1 + 32));
        int v31 = 138543618;
        *(void *)uint64_t v32 = v14;
        *(_WORD *)&v32[8] = 2114;
        *(void *)&v32[10] = v30;
        LODWORD(v29) = 22;
        uint64_t v15 = _os_log_send_and_compose_impl( v12,  0LL,  0LL,  0LL,  &_mh_execute_header,  v13,  16LL,  "%{public}@: Failed to unarchived items. Error = %{public}@",  &v31,  v29);
        if (v15)
        {
          __int16 v16 = (void *)v15;
          BOOL v17 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v15, 4LL);
          free(v16);
          uint64_t v28 = v17;
          *(void *)&double v9 = SSFileLog(v10, @"%@").n128_u64[0];
        }
      }
    }

    objc_msgSend(*(id *)(a1 + 40), "addObjectsFromArray:", v8, v9, v28);
    id v18 = [v8 count];
    *(_BYTE *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = v18 == [*(id *)(a1 + 48) count];
  }

  else
  {
    *(_BYTE *)(*(void *)(*(void *)(a1 + 64) + 8LL) + 24LL) = 0;
  }

  id v19 = +[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig");
  if (!v19) {
    id v19 = +[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig");
  }
  unsigned int v20 = [v19 shouldLog];
  else {
    unsigned int v21 = v20;
  }
  id v22 = (os_log_s *)[v19 OSLogObject];
  if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO)) {
    uint64_t v23 = v21;
  }
  else {
    uint64_t v23 = v21 & 2;
  }
  if ((_DWORD)v23)
  {
    int v24 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 64) + 8LL) + 24LL);
    int v31 = 67109378;
    *(_DWORD *)uint64_t v32 = v24;
    *(_WORD *)&void v32[4] = 2112;
    *(void *)&void v32[6] = a3;
    LODWORD(v29) = 18;
    uint64_t v25 = _os_log_send_and_compose_impl( v23,  0LL,  0LL,  0LL,  &_mh_execute_header,  v22,  1LL,  "store import complete. success=%d, err=%@",  &v31,  v29);
    if (v25)
    {
      __int128 v26 = (void *)v25;
      +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", v25, 4LL);
      free(v26);
      SSFileLog(v19, @"%@");
    }
  }

  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 56));
}

void sub_100186D90(id a1)
{
  id v1 = objc_alloc_init(&OBJC_CLASS___UserNotificationManager);
  id v2 = (void *)qword_1003A35C0;
  qword_1003A35C0 = (uint64_t)v1;
}

void sub_100186E74(uint64_t a1)
{
  if (+[AMSUserNotification shouldHandleNotificationResponse:]( &OBJC_CLASS___AMSUserNotification,  "shouldHandleNotificationResponse:",  *(void *)(a1 + 32)))
  {
    uint64_t v2 = *(void *)(a1 + 32);
    id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) _bag]);
    __int128 v4 = (void *)objc_claimAutoreleasedReturnValue( +[AMSUserNotification handleNotificationResponse:bag:]( &OBJC_CLASS___AMSUserNotification,  "handleNotificationResponse:bag:",  v2,  v3));

    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472LL;
    v12[2] = sub_100187094;
    v12[3] = &unk_100350940;
    id v13 = *(id *)(a1 + 48);
    [v4 addFinishBlock:v12];

    return;
  }

  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v5) {
    id v5 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v6 = [v5 shouldLog];
  else {
    LODWORD(v7) = v6;
  }
  id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue([v5 OSLogObject]);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
    uint64_t v7 = v7;
  }
  else {
    v7 &= 2u;
  }
  if (!(_DWORD)v7) {
    goto LABEL_14;
  }
  double v9 = (void *)objc_opt_class(*(void *)(a1 + 40));
  int v14 = 138543362;
  uint64_t v15 = v9;
  id v10 = v9;
  unsigned int v11 = (void *)_os_log_send_and_compose_impl( v7,  0LL,  0LL,  0LL,  &_mh_execute_header,  v8,  16LL,  "%{public}@: Unhandled notification",  &v14,  12);

  if (v11)
  {
    id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v11,  4LL));
    free(v11);
    SSFileLog(v5, @"%@");
LABEL_14:
  }

  (*(void (**)(void))(*(void *)(a1 + 48) + 16LL))(*(void *)(a1 + 48));
}

uint64_t sub_100187094(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_10018715C(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedDaemonConfig](&OBJC_CLASS___SSLogConfig, "sharedDaemonConfig"));
  if (!v2) {
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[SSLogConfig sharedConfig](&OBJC_CLASS___SSLogConfig, "sharedConfig"));
  }
  unsigned int v3 = [v2 shouldLog];
  else {
    LODWORD(v4) = v3;
  }
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue([v2 OSLogObject]);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT)) {
    uint64_t v4 = v4;
  }
  else {
    v4 &= 2u;
  }
  if (!(_DWORD)v4) {
    goto LABEL_12;
  }
  unsigned int v6 = (void *)objc_opt_class(*(void *)(a1 + 32));
  int v13 = 138543362;
  int v14 = v6;
  id v7 = v6;
  id v8 = (void *)_os_log_send_and_compose_impl( v4,  0LL,  0LL,  0LL,  &_mh_execute_header,  v5,  0LL,  "%{public}@: Settings did change",  &v13,  12);

  if (v8)
  {
    id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v8,  4LL));
    free(v8);
    SSFileLog(v2, @"%@");
LABEL_12:
  }

  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v9 = *(void *)(a1 + 48);
  unsigned int v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _bag]);
  id v12 =  +[AMSUserNotification notificationCenter:didChangeSettings:bag:]( &OBJC_CLASS___AMSUserNotification,  "notificationCenter:didChangeSettings:bag:",  v10,  v9,  v11);
}

uint64_t sub_100187708(mach_port_t a1, uint64_t a2, int a3, void *a4, _DWORD *a5)
{
  int v15 = 1;
  uint64_t v16 = a2;
  int v17 = 16777472;
  int v18 = a3;
  NDR_record_t v19 = NDR_record;
  int v20 = a3;
  mach_port_t reply_port = mig_get_reply_port();
  v14.msgh_remote_port = a1;
  v14.msgh_local_port = reply_port;
  v14.msgh_bits = -2147478253;
  *(void *)&v14.msgh_voucher_port = 0x4B000000000LL;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&v14);
    mach_port_t reply_port = v14.msgh_local_port;
  }

  uint64_t v9 = mach_msg(&v14, 3, 0x38u, 0x40u, reply_port, 0, 0);
  uint64_t v10 = v9;
  if ((v9 - 268435458) <= 0xE && ((1 << (v9 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(v14.msgh_local_port);
    return v10;
  }

  if ((_DWORD)v9)
  {
    mig_dealloc_reply_port(v14.msgh_local_port);
    return v10;
  }

  if (v14.msgh_id == 71)
  {
    uint64_t v12 = 4294966988LL;
  }

  else if (v14.msgh_id == 1300)
  {
    if ((v14.msgh_bits & 0x80000000) != 0)
    {
      uint64_t v12 = 4294966996LL;
      if (v15 == 1 && v14.msgh_size == 56 && !v14.msgh_remote_port && HIBYTE(v17) == 1)
      {
        int v13 = v18;
        if (v18 == v20)
        {
          *a4 = v16;
          *a5 = v13;
          return 0LL;
        }
      }
    }

    else if (v14.msgh_size == 36)
    {
      uint64_t v12 = 4294966996LL;
      if (HIDWORD(v16))
      {
        if (v14.msgh_remote_port) {
          uint64_t v12 = 4294966996LL;
        }
        else {
          uint64_t v12 = HIDWORD(v16);
        }
      }
    }

    else
    {
      uint64_t v12 = 4294966996LL;
    }
  }

  else
  {
    uint64_t v12 = 4294966995LL;
  }

  mach_msg_destroy(&v14);
  return v12;
}

uint64_t sub_1001878F0(uint64_t a1, uint64_t a2)
{
  if ((unint64_t)(a1 + 8) <= 6 && ((0x7Du >> (a1 + 8)) & 1) != 0) {
    __asm { BR              X8 }
  }

  return 4294922295LL;
}

void sub_100187E00( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, _DWORD *a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19)
{
  int v20 = *(void **)(v19 - 136);
  (*(void (**)(void))(v19 - 184))(*v20);
  void *v20 = a13;
  *a14 = a19;
  JUMPOUT(0x100187E48LL);
}

uint64_t sub_100187EEC()
{
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * ((51 * (((v1 == 0) ^ (v0 - 25)) & 1)) ^ v0)) - 12LL))();
}

uint64_t sub_100187F34()
{
  int v3 = v0 & 0x3B14F77B;
  unsigned int v4 = *(_DWORD *)(v1 + 12) - 437755;
  unsigned int v5 = *(_DWORD *)(v1 + 8) - 1168668869 + 35 * ((v3 - 581074497) & 0x22A27DDD ^ 0x131);
  BOOL v6 = v4 < 0xFFF95201;
  BOOL v7 = v4 > v5;
  if (v6 != v5 < 0xFFF95201) {
    BOOL v7 = v6;
  }
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * ((725 * v7) ^ v3)) - 12LL))();
}

uint64_t sub_100187FD4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21)
{
  __int128 v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 8LL * ((54 * (((v22 == 0) ^ (v25 + ((v21 + 109) | 7) - 1)) & 1)) ^ v21));
  *(void *)(v26 - 152) = v24;
  return v27(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21);
}

uint64_t sub_100188028()
{
  unsigned int v5 = v1 - 1264275502;
  BOOL v6 = (v1 - 1264275502) < 0xFA4674F9;
  unsigned int v7 = (((5 * (v0 ^ (v4 + 40))) ^ 0xCFF3ABE4) & (2 * (2 * v1 + 1958507946))) + ((2 * v1 + 1958507946) ^ 0x67F9D57F);
  if (v6 != v7 - 1840472198 < 0xFA4674F9) {
    BOOL v8 = v7 - 1840472198 < 0xFA4674F9;
  }
  else {
    BOOL v8 = v7 - 1840472198 > v5;
  }
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * ((53 * v8) ^ (v3 + v0 + 116))) - 8LL))();
}

uint64_t sub_1001880D8@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22)
{
  int v28 = (v23 - 23) | 0x420;
  uint64_t v29 = *(void *)(v24 - 0x7E68C352E3647217LL);
  unsigned int v30 = (a9 ^ 0x9FB77FEF) + 1615362802 + ((2 * a9) & 0x3F6EFFDE);
  *(_BYTE *)(v29 + v30 + 1311) = -123;
  *(_BYTE *)(v29 + v30 + 1312) = -2;
  *(_BYTE *)(v29 + v30 + v2_Block_object_dispose((const void *)(v9 - 96), 8) = 99;
  *(_BYTE *)(v29 + v30 + 1314) = -80;
  *v22 += 4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 + 8LL * ((((v28 + 443) ^ (v26 + 446)) + v27 + v28 - 1313) ^ v28)) - 8LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22);
}

uint64_t sub_1001882A8()
{
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * (v0 | (v1 == 0)))
                            - ((v0 - 1475) | 2u)
                            - ((v0 - 1085851773) & 0x40B8C3F7)
                            + 878LL))();
}

uint64_t sub_1001882F0()
{
  unsigned int v3 = *(_DWORD *)(v1 + 12) - 1642909503;
  unsigned int v4 = ((v0 - 494) ^ 0x58716B92 ^ ((v0 - 567) | 0x49)) + *(_DWORD *)(v1 + 8);
  BOOL v5 = v3 < 0x9E1330BD;
  BOOL v6 = v3 > v4;
  if (v5 != v4 < 0x9E1330BD) {
    BOOL v6 = v5;
  }
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * ((1239 * v6) ^ v0)) - 12LL))();
}

uint64_t sub_100188370( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24)
{
  LODWORD(a24) = v24;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 + 8LL * ((556 * (((v26 == 0) ^ (v25 - 22)) & 1)) ^ v25)) - 8LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  v27);
}

uint64_t sub_1001883B4()
{
  unsigned int v3 = v0 - 1838730449;
  BOOL v4 = (v0 - 1838730449) < 0xD808F856;
  unsigned int v5 = ((2 * (2 * v0 + 1958507946)) & 0xAB77CB74) + ((2 * v0 + 1958507946) ^ 0x55BBE5BB);
  if (v4 != v5 - 2108878181 < ((v1 - 1290690224) & 0x4CEE5DFDu) - 670500883) {
    BOOL v6 = v5 - 2108878181 < ((v1 - 1290690224) & 0x4CEE5DFDu) - 670500883;
  }
  else {
    BOOL v6 = v5 - 2108878181 > v3;
  }
  return (*(uint64_t (**)(void))(v2 + 8LL * ((1671 * v6) ^ (v1 + 489))))();
}

uint64_t sub_100188470( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v20 = (*(uint64_t (**)(void))(v19 - 144))(v16 + (v17 ^ 0x60) - 1438377412);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)(v18 + 8LL * ((21 * (((v20 == 0) ^ (v17 - 78)) & 1)) ^ v17)) - 8LL))( v20,  v21,  v22,  v23,  v24,  v25,  v26,  v27,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  0LL);
}

void sub_1001884D0()
{
  *(void *)(v1 - 16_Block_object_dispose((const void *)(v9 - 96), 8) = v0;
  JUMPOUT(0x100188534LL);
}

uint64_t sub_100188540( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, int a24, _DWORD *a25)
{
  uint64_t v27 = *(void *)(v26 - 168);
  uint64_t v28 = (*(uint64_t (**)(void))(v26 - 184))(*(void *)(v27 - 0x7E68C352E3647217LL));
  *(void *)(v27 - 0x7E68C352E3647217LL) = a17;
  *a25 = a24;
  *(void *)(v26 - 152) = v25;
  return sub_100188598(v28);
}

uint64_t sub_100188598@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26)
{
  int v32 = v28 + 178;
  uint64_t v33 = *(void *)(v29 - 0x7E68C352E3647217LL);
  unsigned int v34 = ((2 * a9) & 0xF3FEFBDE) + (a9 ^ 0x79FF7DEF);
  *(_BYTE *)(v33 + v34 + (v32 ^ 0x8600830A)) = 0;
  v34 -= 2046787054;
  *(_BYTE *)(v33 + v34) = 0;
  *(_BYTE *)(v33 + v34 + 1) = 0;
  *(_BYTE *)(v33 + v34 + 2) = 1;
  *v26 += 4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 + 8LL * (int)((((v32 + 708763203) & 0xD5C121F9) - 116) ^ v32)) - (v32 ^ (v31 + 261) ^ v27)))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26);
}

uint64_t sub_100188650()
{
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * ((((v0 + 387) ^ 0x41) * (v1 != 0)) ^ v0)) - 12LL))();
}

uint64_t sub_100188688()
{
  unsigned int v3 = *(_DWORD *)(v1 + 12) + 1189778007;
  unsigned int v4 = *(_DWORD *)(v1 + 8) + 21548324;
  BOOL v5 = v3 < (v0 ^ 0x46EA9094u);
  BOOL v6 = v3 > v4;
  if (v5 != v4 < ((v0 - 459) | 0x48u) + 1189777655) {
    BOOL v6 = v5;
  }
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * ((1685 * v6) ^ v0)) - 4LL))();
}

uint64_t sub_100188710( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26)
{
  HIDWORD(a24) = v26;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 + 8LL * (v27 ^ (822 * (v28 != 0)))) - ((v27 + 969) ^ (v27 - 2078692058) & 0x7BE653BDu ^ 0x711LL)))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26);
}

uint64_t sub_100188768()
{
  unsigned int v3 = v0 - 1788623653;
  BOOL v4 = (v0 - 1788623653) < 0xDB0589FE;
  unsigned int v5 = (((2 * v0 + 1958507946) << (v1 - 59)) & 0xEB6FFEF4) + ((2 * v0 + 1958507946) ^ 0xF5B7FF7B);
  if (v4 != v5 - 447903101 < 0xDB0589FE) {
    BOOL v6 = v5 - 447903101 < 0xDB0589FE;
  }
  else {
    BOOL v6 = v5 - 447903101 > v3;
  }
  return (*(uint64_t (**)(void))(v2 + 8LL * ((1691 * v6) ^ v1)))();
}

uint64_t sub_100188808@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unsigned int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27)
{
  uint64_t v34 = v30;
  uint64_t v35 = *(void *)(v33 - 160);
  int v36 = v29 + 969;
  uint64_t v37 = v35 - ((v35 << (v36 ^ 0x20u)) & 0x3C26F14D02574F54LL) + 0x1E1378A6812BA7AALL;
  uint64_t v38 = (_BYTE *)(*(void *)(v34 - 0x7E68C352E3647217LL)
                + ((2LL * a9) & 0x1F7FBEEBELL)
                + (a9 ^ 0x478DBFF7FBFDF75FLL)
                - 0x478DBFF7FBFDF75FLL);
  *uint64_t v38 = HIBYTE(v37) ^ 0x1E;
  v38[1] = BYTE6(v37) ^ 0x13;
  v38[2] = BYTE5(v37) ^ 0x78;
  v38[3] = BYTE4(v37) ^ 0xA6;
  v38[4] = ((v35 - (((_DWORD)v35 << (v36 ^ 0x20)) & 0x2574F54) - 2127845462) >> 24) ^ 0x81;
  v38[5] = ((v35 - (((_DWORD)v35 << (v36 ^ 0x20)) & 0x2574F54) - 2127845462) >> 16) ^ 0x2B;
  v38[6] = ((unsigned __int16)(v35 - (((_WORD)v35 << (v36 ^ 0x20)) & 0x4F54) - 22614) >> 8) ^ 0xA7;
  v38[7] = (v35 - (((_BYTE)v35 << (v36 ^ 0x20)) & 0x54) - 86) ^ 0xAA;
  *v27 += 8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v28 - (v32 + ((v36 + 1904485778) & 0x8E7BD7EE) - 674) + *(void *)(v31 + 8LL * (v36 ^ 0x47)) - 4))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27);
}

uint64_t sub_100188A84()
{
  *(void *)(v3 - 120) = 0LL;
  return (*(uint64_t (**)(void))(v1 + 8LL * (((v2 - 207) * (v0 != 0)) ^ v2)))();
}

uint64_t sub_100188AC0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28)
{
  uint64_t v33 = (*(uint64_t (**)(void))(v28 + 8LL * (v30 ^ 0x2BD)))();
  (*(void (**)(uint64_t, uint64_t, void, void))(v28 + 8LL * (v30 - 647)))( v33,  *(void *)(v28 + 8LL * (v30 ^ 0x2BF)) - 4LL,  **(void **)(v32 - 136),  *(unsigned int *)(*(void *)(v32 - 136) + 12LL));
  uint64_t v34 = (*(uint64_t (**)(void, void))(v28 + 8LL * (v30 - 659)))(*(void *)(v32 - 176), 0LL);
  *(void *)(v32 - 20_Block_object_dispose((const void *)(v9 - 96), 8) = 0LL;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8LL * ((30 * (((v30 ^ (v31 - 98)) ^ (v34 == 0)) & 1)) ^ v30)))( v34,  v35,  v36,  v37,  v38,  v39,  v40,  v41,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28);
}

uint64_t sub_100188B60( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29)
{
  uint64_t v33 = (*(uint64_t (**)(void, uint64_t, void))(v29 + 8LL * (v31 - 651)))(*(void *)(v32 - 176), a1, 0LL);
  uint64_t v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 8LL * (int)((((((v31 - 392) ^ (v33 == 0)) & 1) == 0) * (((v31 + 807546725) | 0xC0C10408) + 253545970)) | v31));
  *(void *)(v32 - 20_Block_object_dispose((const void *)(v9 - 96), 8) = a1;
  return v34( v33,  v35,  v36,  v37,  v38,  v39,  v40,  v41,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29);
}

uint64_t sub_100188BF0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36)
{
  uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v37 + 8LL * (v36 - 270));
  *(void *)(v39 - 16_Block_object_dispose((const void *)(v9 - 96), 8) = v41;
  v41(a1, a36);
  double v42 = *(uint64_t (**)(void))(v37 + 8LL * (v36 - 252));
  *(void *)(v39 - 200) = v42;
  uint64_t v43 = v42();
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v38 + 8LL * (((v43 == *(void *)(v37 + 8LL * (v36 - 250)) - 12LL) * (v36 + 1278)) ^ v36)) - ((v36 + 1205) ^ 0x5CBLL)))( v43,  v44,  v45,  v46,  v47,  v48,  v49,  v50,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22);
}

uint64_t sub_100188C98( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, int *a30)
{
  return ((uint64_t (*)(void))(*(void *)(v31
                                        + 8LL
                                        * (int)(((a30 == (&off_100354840)[(v30 + 93) & 0x809DBC84] - 2)
                                               * ((((v30 - 213657567) & 0xCBC27DE) - 253545338) ^ (v30 + 93) ^ 0xF0E33778)) ^ (v30 + 93)))
                            - 4LL))();
}

uint64_t sub_100188D20( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36)
{
  uint64_t v40 = (*(uint64_t (**)(void))(v39 - 200))();
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 + 8LL * (int)(((v40 == v36) * ((((v38 - 218) | 0x110) ^ 0xFFFFFE47) + v38 + 1205)) ^ v38)) - 4LL))( v40,  v41,  v42,  v43,  v44,  v45,  v46,  v47,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22);
}

uint64_t sub_100188D74( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30)
{
  return ((uint64_t (*)(void))(*(void *)(v32 + 8LL * ((39 * (a30 != v30)) ^ v31)) - 4LL))();
}

uint64_t sub_100188DC0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36)
{
  unsigned int v40 = 2 * (v36 ^ 0xF0E33682);
  (*(void (**)(uint64_t, uint64_t))(v39 - 168))(a26, a36);
  uint64_t v41 = (*(uint64_t (**)(void))(v39 - 200))();
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v38 + 8LL * (int)(((v41 == v37) * (((v40 ^ 0x4D5) - 1112) ^ 0x145)) ^ v40)) - 4LL))( v41,  v42,  v43,  v44,  v45,  v46,  v47,  v48,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22);
}

uint64_t sub_100188E20( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30)
{
  return ((uint64_t (*)(void))(*(void *)(v31
}

uint64_t sub_100188E8C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36)
{
  uint64_t v40 = (*(uint64_t (**)(void))(v39 - 200))();
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v38 + 8LL * ((1344 * (v40 == v37)) ^ v36)) - ((v36 + 66925797) & 0xFC02CFCF ^ ((v36 + 810) | 0x18B) ^ 4LL)))( v40,  v41,  v42,  v43,  v44,  v45,  v46,  v47,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22);
}

uint64_t sub_100188EF4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30)
{
  return ((uint64_t (*)(void))(*(void *)(v31 + 8LL * (v32 ^ (904 * (a30 == v30)))) - (((v32 - 1485) | 0x118u) ^ 0x116LL)))();
}

uint64_t sub_100188F50( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36)
{
  uint64_t v41 = (*(uint64_t (**)(void))(v40 - 200))();
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v36 - ((v37 + 1356935400) | 0xA002040D) + *(void *)(v39 + 8LL * (((v41 == v38) * ((v37 ^ 0x4D5) - 1378)) ^ v37))))( v41,  v42,  v43,  v44,  v45,  v46,  v47,  v48,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22);
}

uint64_t sub_100188FC4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30)
{
  uint64_t v34 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(&off_100354840)[v32 - 370])(a30, v31, v33 - 120);
  uint64_t v35 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 + 8LL * ((21 * (v34 != 0)) ^ v32))
                                                                                              - (((v32 - 1063256007) | 0x30433007u)
                                                                                               + (((v32 - 963) | 0x401u) ^ 0xFFFFFFFF0F1CCFF0LL)));
  *(void *)(v33 - 216) = 0x79483BA612D83A8ELL;
  return v35(v34, v36, v37, v38, v39, v40, v41);
}

uint64_t sub_10018906C()
{
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(v2 - 144))(24LL);
  BOOL v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v1
                                                                                               + 8LL
                                                                                               * (((v3 != 0)
                                                                                                 * ((537 * (v0 ^ 0x60E)) ^ 0x676)) ^ v0));
  *(void *)(v2 - 216) = 0x79483BA612D83A8ELL;
  return v4(v3, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1001890F0(uint64_t a1)
{
  *(void *)(v3 - 200) = a1 + 0x79483BA612D83A8ELL;
  *(void *)a1 = 0LL;
  *(_DWORD *)(a1 + _Block_object_dispose((const void *)(v9 - 96), 8) = 349861347;
  *(_DWORD *)(a1 + 12) = 2131113073;
  *(_DWORD *)(a1 + 16) = 0;
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(v3 - 144))(4096LL);
  *(void *)a1 = v5;
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * ((39 * (v5 == 0)) ^ v1))
                            - (257 * (v1 ^ 0x64Fu)
}

uint64_t sub_100189174()
{
  uint64_t v6 = (uint64_t (*)(void))(*(void *)(v2 + 8LL * ((138 * (((v3 == 0) ^ (v1 + 24)) & 1)) ^ v1))
                         + v0
                         - (v4 + v1 - 375));
  *(void *)(v5 - 216) = 0x79483BA612D83A8ELL;
  return v6();
}

uint64_t sub_1001891D4@<X0>( int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30)
{
  unsigned int v33 = a1 & 0xF6E3FF7F;
  (*(void (**)(uint64_t))(v32 - 184))(v31);
  *(void *)(v32 - 216) = 0x79483BA612D83A8ELL;
  uint64_t v34 = (&off_100354840)[v33 + 253544953];
  ((void (*)(uint64_t))v34)(a30);
  ((void (*)(uint64_t))v34)(a19);
  return ((uint64_t (*)(void))(*(void *)(v30 + 8LL * (int)((47 * (a29 != 0)) ^ (v33 + 253545269))) - 4LL))();
}

uint64_t sub_100189744( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30)
{
  uint64_t v35 = v30();
  uint64_t v36 = *(uint64_t (**)(uint64_t))(v32 + 8LL * ((v31 + 640) ^ (1085 * (a30 != 0))));
  *(void *)(v34 - 20_Block_object_dispose((const void *)(v9 - 96), 8) = v33;
  return v36(v35);
}

uint64_t sub_100189788( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30)
{
  uint64_t v37 = v30(a30);
  uint64_t v38 = *(void *)(v36 - 136);
  *(void *)(v36 - 20_Block_object_dispose((const void *)(v9 - 96), 8) = v34;
  if (v32 == -45004)
  {
    *(void *)(v36 - 200) = v33;
    *(void *)(v36 - 12_Block_object_dispose((const void *)(v9 - 96), 8) = 0LL;
    *(_DWORD *)(v36 - 112) = 0;
    uint64_t v39 = ((uint64_t (*)(void, void, void, uint64_t, uint64_t))*(&off_100354840 + v35 + 253544950))( **(&off_100354840 + v35 + 253544945),  *(void *)v38,  *(unsigned int *)(v38 + 12),  v36 - 128,  v36 - 112);
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 + 8LL * ((1521 * ((v39 ^ 0x55D7BC4F) - 88152072 + ((2 * (_DWORD)v39) & 0xABAF789E) == 1620485194)) ^ (v35 + 253545143))) - (v35 + 253545228) + 271LL))( v39,  v40,  v41,  v42,  v43,  v44,  v45,  v46,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27);
  }

  else if (v32)
  {
    return ((uint64_t (*)(uint64_t))(*(void *)(v31 + 8LL * ((17 * (v38 == 0)) ^ 0x5AF)) - 12LL))(v37);
  }

  else
  {
    return ((uint64_t (*)(uint64_t))(*(void *)(v31
                                                        + 8LL
                                                        * ((698
  }

uint64_t sub_100189DCC()
{
  return ((uint64_t (*)(void))(*(void *)(v1 + 8LL * (v2 ^ 0x757 ^ (110 * (v3 != 0))))
                            - (v0
                             + (v2 ^ 0x757u)
                             - 1582)
                            - (v0
                             + (v2 ^ 0x757u)
                             - 1582)
                            + 0x1E1C66C12LL))();
}

uint64_t sub_100189E14()
{
  uint64_t v6 = ((uint64_t (*)(void, void, void))*(&off_100354840 + v4 + v0 - 6))( **(&off_100354840 + v4 + v0 + 3),  *(void *)(v5 - 128),  *(unsigned int *)(v5 - 112));
  uint64_t v7 = (uint64_t (*)(uint64_t))(*(void *)(v1 + 8LL * ((448 * (v2 != 0)) ^ (v4 + v0 + 185))) - 4LL);
  *(void *)(v5 - 216) = 0x79483BA612D83A8ELL;
  return v7(v6);
}

uint64_t sub_100189E34( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, _DWORD *a31, int a32, int a33)
{
  uint64_t v38 = (*(uint64_t (**)(void))(v37 - 184))(*(void *)(v34 - 0x79483BA612D83A8ELL));
  *(void *)(v34 - 0x79483BA612D83A8ELL) = a23;
  *a31 = a33;
  *(void *)(v37 - 152) = v35;
  return ((uint64_t (*)(uint64_t))(*(void *)(v33
                                                      + 8LL
                                                      * (int)(((((v36 ^ (v36 + 364)) - 343) ^ 0xFFFFFF6F)
                                                             + (v36 ^ (v36 + 364))
                                                             - 217) ^ v36 ^ (v36 + 364)))
                                          - 8LL))(v38);
}

void sub_100189EC0()
{
  *(void *)(v1 - 192) = v0;
  JUMPOUT(0x100189F30LL);
}

uint64_t sub_100189F40@<X0>(unint64_t a1@<X0>, unint64_t a2@<X8>)
{
  return ((uint64_t (*)(void))(*(void *)(v4 + 8LL * (((a2 > a1) * (35 * v3 - 490)) ^ v2)) - 12LL))();
}

uint64_t sub_100189F7C()
{
  return ((uint64_t (*)(void))(*(void *)(v3 + 8LL * ((((v1 - v4 - 561) ^ (v5 + 267)) * (v0 != v2)) ^ v1))
                            - 5 * (v1 ^ 0x22Eu)
                            + 613LL))();
}

uint64_t sub_100189FB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  BOOL v7 = (unint64_t)(a1 - a2) < 0x20 || v2 < 8;
  return ((uint64_t (*)(void))(*(void *)(v4
                                        + 8LL
}

uint64_t sub_100189FFC()
{
  return ((uint64_t (*)(void))(*(void *)(v2
                                        + 8LL
                                        * ((526
}

uint64_t sub_10018A050@<X0>(_OWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  __int128 v7 = a2[1];
  *a1 = *a2;
  a1[1] = v7;
}

void sub_10018A0A0()
{
}

uint64_t sub_10018A0B0()
{
}

uint64_t sub_10018A0F8()
{
}

uint64_t sub_10018A12C()
{
}

uint64_t sub_10018A170()
{
  return ((uint64_t (*)(void))(*(void *)(v3
                                        + 8LL
}

uint64_t sub_10018A1D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v7 = ((151 * (v3 ^ (v6 - 7))) ^ 0xFFFFFBDE) + v2;
  __int128 v8 = *(_OWORD *)(a2 + v7 - 15);
  __int128 v9 = *(_OWORD *)(a2 + v7 - 31);
  uint64_t v10 = a1 + v7;
  *(_OWORD *)(v10 - 15) = v8;
  *(_OWORD *)(v10 - 31) = v9;
  return ((uint64_t (*)(void))(*(void *)(v4 + 8LL * ((747 * ((v2 & 0xFFFFFFE0) == 32LL)) ^ (v5 + v3 + 1241))) - 8LL))();
}

void sub_10018A23C()
{
}

uint64_t sub_10018A244()
{
  return (*(uint64_t (**)(void))(v3 + 8LL * (v2 | (v1 == v0))))();
}

uint64_t sub_10018A258()
{
  return ((uint64_t (*)(void))(v2
                            + *(void *)(v3 + 8LL
                                             * (int)((v1 + 181907749) & 0xF5284AF3 ^ (1690 * ((v0 & 0x18) != 0LL))))
                            - (((v1 + 181907749) & 0xF5284AF3 ^ 0x7DA)
                             - v4
                             - 1417)
                            - 8))();
}

uint64_t sub_10018A2A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a1 + v3) = *(void *)(a2 + v3);
}

void sub_10018A2F4()
{
}

uint64_t sub_10018A2FC()
{
  return ((uint64_t (*)(void))(*(void *)(v3 + 8LL * ((((v2 ^ (v5 - 435)) + v4) * (v1 != v0)) ^ v2)) - 12LL))();
}

uint64_t sub_10018A324@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(_BYTE *)(a1 + v3) = *(_BYTE *)(a2 + v3);
  return ((uint64_t (*)(void))(*(void *)(v5 + 8LL * ((60 * (v3 + 1 == v2)) ^ (v6 + v4 + 1019))) - 8LL))();
}

uint64_t sub_10018A358()
{
  return ((uint64_t (*)(void))(*(void *)(v3 + 8LL * ((176 * (((v1 == v0) ^ v2) & 1)) ^ v2)) - 8LL))();
}

uint64_t sub_10018A380()
{
  return ((uint64_t (*)(void))(*(void *)(v3
                                        + 8LL
                                        * ((((v0 & 0x18) == ((v1 - 539 - v4 - 484) ^ (unint64_t)(v2 + 4)))
                                          * (((v1 - 1023) | 0x2C8) ^ 0x5E8)) ^ (v1 - 539)))
                            - 12LL))();
}

uint64_t sub_10018A3CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a1 - 7 + (~(_DWORD)v3 + v2)) = *(void *)(a2 - 7 + (~(_DWORD)v3 + v2));
  return ((uint64_t (*)(void))(*(void *)(v5 + 8LL * (((v3 - (v2 & 0xFFFFFFF8) == -8) * ((v4 ^ 0xB9) - 94)) ^ v4)) - 4LL))();
}

uint64_t sub_10018A424(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v5 + a2) = *(void *)(v3 + a2);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 + 8LL * (((a3 == 0) * v6) ^ v4)) - 4LL))( a1,  a2 - 8,  a3 + 8);
}

uint64_t sub_10018A454()
{
}

uint64_t sub_10018A498()
{
  uint64_t v3 = *(void *)(v2 - 192);
  *(_DWORD *)(v3 - 0x79483BA612D83A86LL) = (*(_DWORD *)(v2 - 112) ^ 0x76DF7DE3)
                                         - 1644496896
                                         + ((2 * *(_DWORD *)(v2 - 112)) & 0xEDBEFBC6);
  *(_DWORD *)(v3 - 0x79483BA612D83A82LL) = 2131113073;
  uint64_t v4 = ((uint64_t (*)(void, void, void))*(&off_100354840 + v1 - 253544951))( **(&off_100354840 + v1 - 253544942),  *(void *)(v2 - 128),  *(unsigned int *)(v2 - 112));
  uint64_t v5 = (uint64_t (*)(uint64_t))(*(void *)(v0 + 8LL * (v1 - 253544760)) - 4LL);
  *(void *)(v2 - 216) = v3;
  return v5(v4);
}

uint64_t sub_10018A508@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned int v6 = v2 - 1;
  *(_BYTE *)(a1 + v6) = *(_BYTE *)(a2 + v6);
  return ((uint64_t (*)(void))(*(void *)(v4 + 8LL * ((1991 * (v6 != 0LL)) ^ (v5 + v3 + 561))) - 12LL))();
}

uint64_t sub_10018A53C()
{
  return ((uint64_t (*)(void))(*(void *)(v2
                                        + 8LL
                                        * (int)(((v3 + ((v0 - 201361580) & 0xFCE3BE1F) + 18)
                                               * (v1 == 0x79483BA612D83A8ELL)) ^ v0))
                            - ((v0 - 201361580) ^ 0xF3FF77E7LL)))();
}

uint64_t sub_10018A59C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8LL
}

void sub_10018A5F4()
{
  int v3 = *(void (**)(void))(v2 - 184);
  v3();
  *uint64_t v1 = 0LL;
  *(_DWORD *)(v0 - 0x79483BA612D83A86LL) = 349861347;
  *(_DWORD *)(v0 - 0x79483BA612D83A82LL) = 2131113073;
  ((void (*)(void *))v3)(v1);
  JUMPOUT(0x10018A650LL);
}

uint64_t sub_10018A718()
{
  uint64_t v4 = *(void *)(v3 - 216);
  int v5 = *(_DWORD *)(v4 - 0x79483BA612D83A86LL);
  LODWORD(v4) = *(_DWORD *)(v4 - 0x79483BA612D83A82LL) - 1624582410;
  BOOL v6 = v4 < 0x1E310B63;
  BOOL v7 = v4 > v5 + 156669312;
  return ((uint64_t (*)(void))(*(void *)(v1 + 8LL * ((115 * (((v0 ^ (v2 + 31)) ^ v7) & 1)) ^ v0)) - 8LL))();
}

uint64_t sub_10018A7BC@<X0>(int a1@<W8>)
{
  int v5 = (void *)(*(void *)(v4 - 216) - 0x79483BA612D83A8ELL);
  int v6 = (*(unsigned __int8 *)(*v5 + (a1 - 2131113073)) << 24) | (*(unsigned __int8 *)(*v5
                                                                                                 + (a1 - 2131113072)) << 16) | (*(unsigned __int8 *)(*v5 + (a1 - 2131113071)) << 8);
  int v7 = *(unsigned __int8 *)(*v5 + (a1 - 2131113070));
  *uint64_t v1 = a1 + 4;
  if (!(v6 | v7)) {
    return ((uint64_t (*)(void))(*(void *)(v2
  }
                                          + 8LL
                                          * ((424
  if ((v6 | v7) == 0xFFFF4FFB) {
    return ((uint64_t (*)(void))(*(void *)(v2
  }
                                          + 8LL
                                          * (((((*(void *)(&off_100354840)[v3 ^ (v3 + 7)] == 0LL) ^ ((v3 ^ (v3 + 90)) + 1)) & 1)
                                            * (v3 + 253545289)) ^ (v3 + 253546583)))
                              - 12LL))();
  return ((uint64_t (*)(void))(*(void *)(v2
                                        + 8LL
                                        * ((1001
                                          * ((((*(void *)(v4 - 216) == 0x79483BA612D83A8ELL) ^ 0xD63F553C) & 1) == 0)) ^ 0x11B))
                            - 4LL))();
}

uint64_t sub_10018ABF8@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8LL
                              * ((994 * (((*v1 == 0LL) ^ (v3 + (a1 & 0xDF) - 28)) & 1)) ^ a1 & 0x29C0AFDFu)))();
}

void sub_10018AC34()
{
  uint64_t v4 = *(void (**)(void))(v3 - 184);
  v4();
  void *v0 = 0LL;
  _DWORD *v2 = 349861347;
  *uint64_t v1 = 2131113073;
  ((void (*)(void *))v4)(v0);
  JUMPOUT(0x10018AC68LL);
}

uint64_t sub_10018ACB0@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * (((*v1 != 0LL) * ((v3 + a1 - 1629) ^ (v3 + 125))) ^ a1)) - 12LL))();
}

void sub_10018ACE0()
{
  uint64_t v2 = *(void **)(v1 - 136);
  void *v2 = 0LL;
  v2[1] = 1168229675LL;
  ((void (*)(void *))v0)(v2);
  JUMPOUT(0x100187A7CLL);
}

uint64_t sub_10018AD04()
{
  return ((uint64_t (*)(void))(*(void *)(v1
                                        + 8LL
}

void sub_10018AD34()
{
  unint64_t v0 = (qword_1003A2EF8 + qword_1003A2F18) ^ (unint64_t)&v2;
  qword_1003A2F18 = 142025987 * v0 + 0x60A26FE5DEEB276BLL;
  qword_1003A2EF8 = 142025987 * (v0 ^ 0x9F5D901A2114D895LL);
  uint64_t v1 = (char *)*(&off_1003509B0
               + ((485
                 * (((uint64_t (*)(uint64_t))*(&off_100354840
                                                      + ((3
                                                                         * ((qword_1003A2EF8 - qword_1003A2F18) ^ 0x95)) ^ byte_1002D4D00[byte_1002D49D0[(3 * ((qword_1003A2EF8 - qword_1003A2F18) ^ 0x95))] ^ 0x89])
                                                      - 98))(24LL) != 0)) ^ 0x4E7u))
     - 12;
  __asm { BR              X8 }

uint64_t sub_10018AE44(uint64_t a1)
{
  *(void *)a1 = 0LL;
  *(void *)(a1 + _Block_object_dispose((const void *)(v9 - 96), 8) = 650052673LL;
  *(_DWORD *)(a1 + 16) = 0;
  *(void *)(v3 - 160) = v1;
  uint64_t v5 = v1(4096LL);
  *(void *)a1 = v5;
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * ((4 * (v5 == 0)) | (8 * (v5 == 0)) | 0x392u)) - 4LL))();
}

uint64_t sub_10018AE94()
{
  return ((uint64_t (*)(void))(*(void *)(v1 + 8LL * ((324 * (v0 != 0)) ^ 0x4E7)) - 12LL))();
}

uint64_t sub_10018AF04()
{
  return v2;
}

void sub_10018E6D8(unint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 > 0xFFFFFFFFFFFFFFEFLL && a2 != 0;
  __asm { BR              X8 }

uint64_t sub_10018E744(uint64_t a1, _DWORD *a2)
{
  *a2 = 0;
  BOOL v5 = (*(uint64_t (**)(uint64_t))(v4 + 168))(24LL) != 0;
  return ((uint64_t (*)(void))(*(void *)(v3 + 8LL * ((81 * v5) ^ v2)) - 4LL))();
}

uint64_t sub_10018E780(uint64_t a1)
{
  *(void *)a1 = 0LL;
  *(void *)(a1 + _Block_object_dispose((const void *)(v9 - 96), 8) = 499716454LL;
  *(_DWORD *)(a1 + 16) = 0;
  uint64_t v4 = v2(4096LL);
  *(void *)a1 = v4;
  return (*(uint64_t (**)(void))(v1 + 8LL * ((3 * (v4 == 0)) ^ 0x6A5)))();
}

uint64_t sub_10018E7E8()
{
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * (v1 ^ (485 * (v0 == 0))))
                            - ((v1 - 1096859086) & 0xFDFFFFED)
                            + 3164554501LL))();
}

uint64_t sub_10018E830()
{
  return v2;
}

void sub_100191964()
{
  uint64_t v0 = qword_1003A2EF8 - qword_1003A2EF0 - (void)&v2;
  qword_1003A2EF0 = 142025987 * v0 + 0x60A26FE5DEEB276BLL;
  qword_1003A2EF8 = 142025987 * (v0 ^ 0x9F5D901A2114D895LL);
  uint64_t v1 = (char *)*(&off_1003509B0
               + ((1233
                 * (((uint64_t (*)(uint64_t))(&off_100354840)[((3
                                                                                        * (qword_1003A2EF0 ^ 0x95 ^ qword_1003A2EF8)) ^ byte_1002D45C0[byte_1002D4E20[(3 * (qword_1003A2EF0 ^ 0x95 ^ qword_1003A2EF8))] ^ 0x9C])
                                                                     - 50])(24LL) != 0)) ^ 0x2CDu))
     - 12;
  __asm { BR              X8 }

uint64_t sub_100191A64( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28)
{
  *(void *)a1 = 0LL;
  *(void *)(a1 + _Block_object_dispose((const void *)(v9 - 96), 8) = 1102267496LL;
  *(_DWORD *)(a1 + 16) = 0;
  uint64_t v31 = v28(4096LL);
  *(void *)a1 = v31;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8LL * ((182 * (v31 == 0)) ^ 0x55Du)))( v31,  v32,  v33,  v34,  v35,  v36,  v37,  v38,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28);
}

uint64_t sub_100191AD4()
{
  return ((uint64_t (*)(void))(*(void *)(v4
                                        + 8LL
                                        * (((((v0 == 0) ^ (v1 - v2)) & 1)
                                          * ((v3 + v1 - 717) ^ (v3 - 276))) ^ v1))
                            - 12LL))();
}

uint64_t sub_100191B10()
{
  return v2;
}

int *sub_1001950CC(int *result)
{
  int v1 = 998368041;
  unsigned int v2 = result[2] ^ (2052531167
                  * (((result | 0x5A1B0962) - (_DWORD)result + (result & 0xA5E4F69D)) ^ 0x9F91BE4E));
  if (v2 - 1341909376 > 0x3B
    || ((1LL << ((*((_BYTE *)result + 8) ^ (-33
                                                           * (((result | 0x62)
                                                             - (_BYTE)result
                                                             + (result & 0x9D)) ^ 0x4E)))
               + 0x80)) & 0xF8C2F00FC610FC3LL) == 0)
  {
    unsigned int v4 = v2 - 1341912672;
    BOOL v5 = v4 > 0xD;
    int v6 = (1 << v4) & 0x20F3;
    if (v5 || v6 == 0) {
      int v1 = 998368040;
    }
  }

  *id result = v1;
  return result;
}

void sub_10019517C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a4) {
    BOOL v7 = a5 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  int v10 = v7 || a6 == 0 || a7 == 0;
  __asm { BR              X8 }

uint64_t sub_100195228( uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, _DWORD *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, _DWORD *a24, void *a25)
{
  *a4 = 0LL;
  *a24 = 0;
  *a25 = 0LL;
  *a7 = 0;
  return (*(uint64_t (**)(void, uint64_t, uint64_t, void *, uint64_t, uint64_t, _DWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 8LL * ((133 * (**(void **)(v26 + 200) != 0LL)) | 0x430u)))( **(void **)(v26 + 200),  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11,  a12);
}

uint64_t sub_100195284()
{
  *(void *)(v3 + _Block_object_dispose((const void *)(v9 - 96), 8) = 0LL;
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * ((98 * (*(void *)(v3 + 24) == 0LL)) ^ (v0 - 745677406))) - 8LL))();
}

uint64_t sub_1001952C0()
{
  *(_DWORD *)(v3 + 36) = 0;
  *(void *)uint64_t v3 = 0LL;
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * ((1621 * (*(void *)(v3 + 48) != 0LL)) ^ (v1 + v0 - 1020))) - 4LL))();
}

uint64_t sub_1001952F4()
{
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * ((868 * (*(void *)(v3 + 64) != 0LL)) ^ (v1 + v0 - 699))) - 4LL))();
}

uint64_t sub_100195320( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  int v14 = v10 + v9;
  *(_DWORD *)(v13 + 76) = 0;
  *(void *)(v13 + 40) = 0LL;
  uint64_t v15 = (*(uint64_t (**)(uint64_t))(v12 + 8LL * (v14 - 1729)))(24LL);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 + 8LL * ((386 * (((v14 - 1) ^ (v15 == 0)) & 1)) ^ (v14 - 1219))) - 4LL))( v15,  v16,  v17,  v18,  v19,  v20,  v21,  v22,  a9);
}

uint64_t sub_100195424( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  *(void *)a1 = 0LL;
  *(void *)(a1 + _Block_object_dispose((const void *)(v9 - 96), 8) = 1208856636LL;
  *(_DWORD *)(a1 + 16) = 0;
  uint64_t v19 = v17(4096LL);
  *(void *)a1 = v19;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 8LL * (((v19 == 0) * ((79 * (((v15 - 1622) | 0x430) ^ 0x4BD)) ^ 0x401)) | (v15 - 1622) | 0x430)))( v19,  v20,  v21,  v22,  v23,  v24,  v25,  v26,  a9,  a10,  a11,  a12,  a13,  a14,  a15);
}

uint64_t sub_100195484()
{
  return (*(uint64_t (**)(void))(v2
                              + 8LL
}

uint64_t sub_1001954C8()
{
  return v1;
}

void sub_100199218()
{
  unint64_t v0 = (unint64_t)&v2[qword_1003A2EF8 - qword_1003A2EE8];
  qword_1003A2EE8 = (142025987 * v0) ^ 0x9F5D901A2114D895LL;
  qword_1003A2EF8 = 142025987 * (v0 ^ 0x9F5D901A2114D895LL);
  uint64_t v1 = (uint64_t)*(&off_1003509B0
                + ((285
                  * (((uint64_t (*)(uint64_t))*(&off_100354840
                                                       + ((3
  __asm { BR              X8 }

uint64_t sub_100199314(uint64_t a1)
{
  *(void *)a1 = 0LL;
  *(void *)(a1 + _Block_object_dispose((const void *)(v9 - 96), 8) = 1543509817LL;
  *(_DWORD *)(a1 + 16) = 0;
  *(void *)(v3 - 160) = v1;
  uint64_t v5 = v1(4096LL);
  *(void *)a1 = v5;
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * ((4 * (v5 != 0)) | (32 * (v5 != 0)) | 0x400u)) - 12LL))();
}

uint64_t sub_100199368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v9 - 184) = v4;
  *(void *)(v9 - 152) = v5 + 0x5CD1B4246DA47A0FLL;
  *(_DWORD *)(v5 + _Block_object_dispose((const void *)(v9 - 96), 8) = v6 + 4096;
  int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8LL * ((10 * (v5 == 0)) ^ 0x4B6u));
  *(void *)(v9 - 176) = *(void *)(v7 + 208) - 4LL;
  return v10(a1, a2, a3, a4, 2279997039LL);
}

uint64_t sub_100199404()
{
  unsigned int v3 = *(_DWORD *)(v1 + 12) + 1718780259;
  unsigned int v4 = *(_DWORD *)(v1 + 8) + 175270438;
  BOOL v5 = v3 < 0x6672815F;
  BOOL v6 = v3 > v4;
  if (v5 != v4 < v0 + 1718779840) {
    BOOL v7 = v5;
  }
  else {
    BOOL v7 = v6;
  }
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * ((52 * !v7) ^ v0)) - 97 * (v0 ^ 0x19D) + 186LL))();
}

void sub_100199490(int a1@<W4>, int a2@<W8>)
{
  uint64_t v8 = *v3;
  unsigned int v9 = ((2 * a2) & 0xF357FFDE) + (a2 ^ 0x79ABFFEF) - 2041315880;
  *(_BYTE *)(*v3 + v9 + (v4 ^ 0x2FB)) = 0;
  *(_BYTE *)(v8 + v9 + 570) = 0;
  *(_BYTE *)(v8 + v9 + 571) = 0;
  *(_BYTE *)(v8 + v9 + 572) = 1;
  *v2 += 4;
  *(void *)(v7 - 16_Block_object_dispose((const void *)(v9 - 96), 8) = v5;
  __asm { BR              X8 }

uint64_t sub_1001997DC()
{
  return (*(uint64_t (**)(void))(v2 + 8LL * (((((v1 == 0) ^ (v0 - 31)) & 1) * (v0 ^ 0x734)) ^ v0)))();
}

uint64_t sub_100199824()
{
  int v3 = v0 ^ 0x6B1;
  unsigned int v4 = *(_DWORD *)(v1 + 12) - 660788086;
  unsigned int v5 = *(_DWORD *)(v1 + 8) + 2090669389;
  BOOL v6 = v4 < 0xD89D2C86;
  BOOL v7 = v4 > v5;
  if (v6 != v5 < 0xD89D2C86) {
    BOOL v7 = v6;
  }
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * (int)((v7 * (((v3 + 1875697041) & 0x903327DD) - 1702)) ^ v3)) - 8LL))();
}

uint64_t sub_1001998AC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 8LL * (((((v21 == 0) ^ (v20 - 45)) & 1) * (((v20 - 1772) | 0x209) ^ 0x2A9)) ^ v20));
  *(void *)(v24 - 16_Block_object_dispose((const void *)(v9 - 96), 8) = v22;
  return v25(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

uint64_t sub_1001998FC()
{
  int v3 = (v1 & 0x490DAA5F) - 27;
  unsigned int v4 = v0 - 710944396;
  BOOL v5 = v0 - 710944396 < (v3 + 832564853);
  unsigned int v6 = ((2 * (2 * v0 + 1207947662)) & 0xFDF6FE70) + ((2 * v0 + 1207947662) ^ 0x7EFB7F39);
  if (v5 != v6 - 1297845904 < ((v3 + 618) ^ 0x319FF437u)) {
    BOOL v7 = v6 - 1297845904 < ((v3 + 618) ^ 0x319FF437u);
  }
  else {
    BOOL v7 = v6 - 1297845904 > v4;
  }
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * ((123 * !v7) ^ v3)) - 4LL))();
}

uint64_t sub_1001999B8@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21)
{
  uint64_t v25 = *(void *)(v24 - 152);
  *(void *)(v24 - 152) = v25;
  uint64_t v26 = *(void *)(v25 - 0x5CD1B4246DA47A0FLL);
  unsigned int v27 = ((2 * a9) & 0x3B6EEBDE) + (a9 ^ 0x9DB775EF);
  *(_BYTE *)(v26 + v27 + 1648921105) = 85;
  int v28 = (v21 - 346413853) & 0x14A5D639;
  *(_BYTE *)(v26 + v27 + (v28 ^ 0x6248882B)) = -90;
  *(_BYTE *)(v26 + v27 + 1648921107) = 55;
  *(_BYTE *)(v26 + v27 + 164892110_Block_object_dispose((const void *)(v9 - 96), 8) = -64;
  *v22 += 4;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 8LL * (int)(((v28 - 2124371447) | 0x685522D) ^ (a5 - 1541) ^ (v28 - 476653370) & 0x1C6927E6 ^ v28)))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21);
}

uint64_t sub_100199BC0()
{
  return ((uint64_t (*)(void))(*(void *)(v2
                                        + 8LL
                                        * ((((v0 - 173) ^ 0x5DB ^ (v0 + 260725015) & 0x3075A7CA) * (v1 != 0)) ^ v0))
                            - 12LL))();
}

uint64_t sub_100199C0C()
{
  unsigned int v3 = *(_DWORD *)(v1 + 12) - 1044275876;
  unsigned int v4 = *(_DWORD *)(v1 + 8) + 1707181599;
  BOOL v5 = v3 < ((v0 - 227) ^ 0xC1C19FBD);
  BOOL v6 = v3 > v4;
  if (v5 != v4 < 0xC1C19D58) {
    BOOL v6 = v5;
  }
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * ((1175 * v6) ^ v0)) - (v0 ^ 0x3CCLL)))();
}

uint64_t sub_100199C90( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 + 8LL * (((((v24 - 173) | 1) - 566) * (v25 == 0)) ^ v24)) - ((v24 + 685) ^ 0x59ELL)))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24);
}

uint64_t sub_100199CD4()
{
  unsigned int v3 = v1 + 733052899 + ((2 * (2 * v0 + 1207947662)) & 0xBB8C7F7C) + ((2 * v0 + 1207947662) ^ 0xDDC63FBF);
  BOOL v4 = v3 < 0x977C534;
  BOOL v5 = v3 > v0 - 1384665601;
  else {
    BOOL v6 = v5;
  }
  return ((uint64_t (*)(BOOL))(*(void *)(v2 + 8LL * ((111 * v6) ^ v1)) - 4LL))(v5);
}

uint64_t sub_100199D74@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25)
{
  uint64_t v29 = *(void *)(v28 - 152);
  int v30 = v26 - 173;
  *(void *)(v28 - 152) = v29;
  uint64_t v31 = *(void *)(v29 - 0x5CD1B4246DA47A0FLL);
  int v32 = (a9 ^ 0x35FFF5FF) - 905967671 + ((2 * a9) & 0x6BFFEBFE);
  *(_BYTE *)(v31 + (v32 + 568)) = 0;
  *(_BYTE *)(v31 + (v32 + v30)) = 0;
  *(_BYTE *)(v31 + (v32 + 570)) = 0;
  *(_BYTE *)(v31 + (v32 + 571)) = 1;
  *v25 += 4;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 8LL * (int)((v30 - 672662474) & 0xAFFDFFFF ^ (a5 - 1538) ^ (v30 - 862307162) & 0x3365C77E ^ v30)))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25);
}

uint64_t sub_100199F60()
{
  return (*(uint64_t (**)(void))(v2 + 8LL * ((((v0 ^ 0x720) - 248) * (v1 == 0)) ^ v0)))();
}

uint64_t sub_100199F90()
{
  unsigned int v3 = ((v0 + 551) ^ 0xD8D73B46) + *(_DWORD *)(v1 + 12);
  unsigned int v4 = ((v0 - 871975359) & 0x33F94F5F) + *(_DWORD *)(v1 + 8) + 2094471815;
  BOOL v5 = v3 < 0xD8D738DF;
  BOOL v6 = v3 > v4;
  if (v5 != v4 < 0xD8D738DF) {
    BOOL v6 = v5;
  }
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * ((244 * v6) ^ v0)) - 12LL))();
}

uint64_t sub_10019A01C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25)
{
  HIDWORD(a25) = v25;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 + 8LL * ((54 * (((v27 == 0) ^ v26) & 1)) ^ v26)) - (((v26 - 1782) | 0x210) ^ 0x23DLL)))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25);
}

uint64_t sub_10019A068()
{
  unsigned int v3 = v0 + 307057024;
  BOOL v4 = (v0 + 307057024) < 0x6E4D68B5;
  unsigned int v5 = (((2 * v0 + 1207947662) << (((v1 ^ 0xC2) + 26) & 0xAD ^ 0xA4)) & 0xFC15AEFC)
     + ((2 * v0 + 1207947662) ^ 0x7E0AD77F);
  if (v4 != v5 - 264072906 < 0x6E4D68B5) {
    BOOL v6 = v5 - 264072906 < 0x6E4D68B5;
  }
  else {
    BOOL v6 = v5 - 264072906 > v3;
  }
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * (((8 * v6) | (32 * v6)) ^ v1 ^ 0x4C2u)) - 4LL))();
}

uint64_t sub_10019A12C@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, int a32, int a33)
{
  uint64_t v38 = *(void *)(v37 - 152);
  *(void *)(v37 - 152) = v38;
  uint64_t v39 = *(void *)(v38 - 0x5CD1B4246DA47A0FLL);
  int v40 = (v34 - 884) | 0x208;
  unsigned int v41 = a33 - ((2 * a33) & 0xB523D97E) - 627970881;
  unsigned int v42 = ((v40 + 929036741) & (2 * a9)) + (a9 ^ 0x9BAFFDFF) + 1682964993;
  *(_BYTE *)(v39 + v42 + 1) = BYTE2(v41) ^ 0x91;
  *(_BYTE *)(v39 + v42 + 2) = BYTE1(v41) ^ 0xEC;
  *(_BYTE *)(v39 + v42) = HIBYTE(v41) ^ 0xDA;
  *(_BYTE *)(v39 + v42 + 3) = (a33 - ((2 * a33) & 0x7E) - 65) ^ 0xBF;
  *v33 += 4;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 8LL * (int)((v35 + (v40 ^ (a5 - 537)) + v40 + 1255 - 410) ^ v40)))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26);
}

uint64_t sub_10019A350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  *(void *)(v8 - 144) = 0LL;
  return (*(uint64_t (**)(void))(v7 + 8LL * ((168 * (((v6 == 0) ^ a5) & 1)) ^ v5)))();
}

uint64_t sub_10019A38C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27)
{
  int v31 = 4 * (v27 ^ 0x69F);
  int v32 = (v31 - 2014972045) ^ (a5 - 1092);
  uint64_t v33 = ((uint64_t (*)(void))(&off_100354840)[v31 ^ 0x6E3])();
  ((void (*)(uint64_t, int *, void, void))(&off_100354840)[v31 ^ 0x6E7])( v33,  *(&off_100354840 + v31 - 1759) - 1,  *(void *)v28,  *(unsigned int *)(v28 + 12));
  uint64_t v34 = ((uint64_t (*)(void, void))*(&off_100354840 + v31 - 1773))(*(void *)(v30 - 176), 0LL);
  *(void *)(v30 - 20_Block_object_dispose((const void *)(v9 - 96), 8) = 0LL;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8LL * (((v34 == 0) * (v32 - 616)) ^ v31)))( v34,  v35,  v36,  v37,  2279997039LL,  v38,  v39,  v40,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27);
}

uint64_t sub_10019A444( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26)
{
  int v30 = a5 + (v26 ^ 0x446) - 2;
  uint64_t v31 = ((uint64_t (*)(void, uint64_t, void))(&off_100354840)[v26 ^ 0x453])( *(void *)(v28 - 176),  a1,  0LL);
  int v32 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 + 8LL * (int)(((v31 != 0) * (v30 ^ 0x87E5FC50)) ^ v26)) - ((417 * (v26 ^ 0x446u)) ^ 0x34ELL));
  *(void *)(v28 - 20_Block_object_dispose((const void *)(v9 - 96), 8) = a1;
  return v32( v31,  v33,  v34,  v35,  2279997039LL,  v36,  v37,  v38,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26);
}

uint64_t sub_10019A4D0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35)
{
  uint64_t v40 = (void (*)(uint64_t, uint64_t))*(&off_100354840 + v35 - 822);
  *(void *)(v38 - 200) = v40;
  v40(a1, a35);
  unsigned int v41 = (uint64_t (*)(void))(&off_100354840)[v35 ^ 0x35C];
  *(void *)(v38 - 20_Block_object_dispose((const void *)(v9 - 96), 8) = v41;
  unsigned int v42 = (int *)v41();
  return ((uint64_t (*)(int *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 + 8LL * (((v42 == *(&off_100354840 + v35 - 802) - 3) * ((v35 + 711) ^ 0x24C)) ^ v35)) - (v35 - 330) + 496LL))( v42,  v43,  v44,  v45,  v46,  v47,  v48,  v49,  a9,  v36,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21);
}

uint64_t sub_10019A580( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, int *a29)
{
  return (*(uint64_t (**)(void))(v30
                              + 8LL
                              * (int)(((a29 == (&off_100354840)[v29 ^ 0x1FC] - 2) * ((v29 ^ 0x87E5FF97) + 2014971774)) ^ v29)))();
}

uint64_t sub_10019A5DC@<X0>( int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28)
{
  int v32 = a1 + 834;
  uint64_t v33 = 309 * (((a1 + 24) | 0x1E0) ^ 0x1FDu);
  (*(void (**)(uint64_t, uint64_t))(v31 - 200))(v29, a28);
  uint64_t v34 = (*(uint64_t (**)(void))(v31 - 208))();
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 + 8LL * ((151 * (v34 == v28)) ^ v32)) - v33 + 1537))( v34,  v35,  v36,  v37,  v38,  v39,  v40,  v41,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11,  a12,  a13,  a14);
}

uint64_t sub_10019A638( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29)
{
  return (*(uint64_t (**)(void))(v31
                              + 8LL
}

uint64_t sub_10019A69C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35)
{
  uint64_t v40 = (*(uint64_t (**)(void))(v39 - 208))();
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v38 + 8LL * (((v40 == v36) * ((v35 ^ 0x54B) - 1536)) | v35)) - 8LL))( v40,  v41,  v42,  v43,  v44,  v45,  v46,  v47,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21);
}

uint64_t sub_10019A6E0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29)
{
  return (*(uint64_t (**)(void))(v31
                              + 8LL
}

uint64_t sub_10019A748( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35)
{
  uint64_t v40 = (*(uint64_t (**)(void))(v39 - 208))();
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v38 + 8LL * ((1044 * (v40 == v36)) | v35)) - (((v35 - 682) | 0x160) ^ (v35 - 1690342345) & 0x64C0968F ^ 0x7F9LL)))( v40,  v41,  v42,  v43,  v44,  v45,  v46,  v47,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21);
}

uint64_t sub_10019A7B4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29)
{
  return (*(uint64_t (**)(void))(v31
                              + 8LL
                              * ((((((v29 - 1382390286) & 0x52659B57) - 2014972212) ^ (v29 - 2014970761)) * (a29 == v30)) ^ v29)))();
}

uint64_t sub_10019A818( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35)
{
  uint64_t v40 = (*(uint64_t (**)(void))(v39 - 208))();
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v38 + 8LL * ((1358 * (v40 == v36)) ^ v35)) - ((v35 + 113569538) | 0x81210C2B) - ((v35 - 337841287) & 0x14230F4D ^ 0xFFFFFFFF781A0790LL)))( v40,  v41,  v42,  v43,  v44,  v45,  v46,  v47,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21);
}

uint64_t sub_10019A8AC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29)
{
  uint64_t v33 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))*(&off_100354840 + v29 - 1538))(a29, v30, v32 - 144);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 + 8LL * (int)(((v33 == 0) * ((((v29 - 1217) | 0xB0) ^ 0x781A006E) + (v29 ^ 0x87E5F866))) ^ v29)) - 8LL))( v33,  v34,  v35,  v36,  v37,  v38,  v39,  v40,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  0LL,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28);
}

uint64_t sub_10019A948( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28)
{
  uint64_t v31 = (*(uint64_t (**)(uint64_t))(v30 - 160))(24LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8LL * (int)(((v31 != 0) * (((v28 + 666) ^ 0x87E5FAFD) + 2014971654)) ^ v28)))( v31,  v32,  v33,  v34,  v35,  v36,  v37,  v38,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a1,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28);
}

uint64_t sub_10019A9C0(uint64_t a1)
{
  *(void *)(v3 - 200) = a1 + 0x3972785B6BCAF92ALL;
  *(void *)a1 = 0LL;
  *(_DWORD *)(a1 + _Block_object_dispose((const void *)(v9 - 96), 8) = 445517218;
  *(void *)(a1 + 12) = 0LL;
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(v3 - 160))(4096LL);
  *(void *)a1 = v5;
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * (int)(((v5 == 0) * ((v1 + 378) ^ 0x605)) | v1)) - (v1 ^ 0x496LL)))();
}

uint64_t sub_10019AA38( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 + 8LL * (((((v29 == 0) ^ (v28 - 29)) & 1) * (v28 ^ 0x61D)) | v28)) - 8LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28);
}

uint64_t sub_10019AA9C@<X0>( int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28)
{
  unsigned int v33 = a1 & 0xFFE7FF7F;
  (*(void (**)(uint64_t))(v32 - 184))(v30);
  v33 += 2014970826;
  uint64_t v34 = (&off_100354840)[v33 - 561];
  ((void (*)(uint64_t))v34)(v28);
  ((void (*)(uint64_t))v34)(v29);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 + 8LL * (int)((1955 * (a28 != 0)) ^ (v33 - 279))) - 8LL))( a28,  v35,  v36,  v37,  v38,  v39,  v40,  v41,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21);
}

uint64_t sub_10019AF88( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29)
{
  uint64_t v34 = v31();
  uint64_t v35 = (uint64_t (*)(uint64_t))(*(void *)(v32 + 8LL * ((v29 + 523) | ((a29 != 0) << 7))) - 12LL);
  *(void *)(v33 - 20_Block_object_dispose((const void *)(v9 - 96), 8) = v30;
  return v35(v34);
}

uint64_t sub_10019AFC0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36)
{
  uint64_t v43 = v38(a29);
  *(void *)(v42 - 20_Block_object_dispose((const void *)(v9 - 96), 8) = v37;
  if (v39 == -45004)
  {
    *(void *)(v42 - 200) = v40;
    *(void *)(v42 - 12_Block_object_dispose((const void *)(v9 - 96), 8) = 0LL;
    *(_DWORD *)(v42 - 132) = 0;
    uint64_t v50 = sub_100187708( dword_1003A364C,  *(void *)v36,  *(_DWORD *)(v36 + 12),  (void *)(v42 - 128),  (_DWORD *)(v42 - 132));
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v41 + 8LL * ((467 * ((v50 ^ 0x5BDEE567) - 189284640 + ((2 * (_DWORD)v50) & 0xB7BDCACE) == 1620485194)) ^ 0x642)) - 8LL))( v50,  v51,  v52,  v53,  v54,  v55,  v56,  v57,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26);
  }

  else if (v39)
  {
    return (*(uint64_t (**)(uint64_t))(v41 + 8LL * ((487 * (v36 != 0)) ^ 0x413)))(v43);
  }

  else
  {
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v41 + 8LL * ((27 * (a36 != 0x3972785B6BCAF92ALL)) ^ 0x22C)) - 8LL))( a36,  v44,  v45,  v46,  2279997039LL,  v47,  v48,  v49,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26);
  }

uint64_t sub_10019B694(uint64_t a1)
{
  unsigned int v3 = *(_DWORD *)(a1 - 0x3972785B6BCAF91ELL) + 1105157517 + ((278 * ((v1 + 530) ^ 0x210)) ^ 0x15) - 565;
  unsigned int v4 = *(_DWORD *)(a1 - 0x3972785B6BCAF922LL) + 659640299;
  int v5 = (v4 < 0x41DF5D8D) ^ (v3 < 0x41DF5D8D);
  BOOL v6 = v3 > v4;
  if (v5) {
    BOOL v6 = v3 < 0x41DF5D8D;
  }
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * ((62 * v6) ^ (v1 + 530))) - 8LL))();
}

uint64_t sub_10019B73C@<X0>(uint64_t a1@<X0>, int a2@<W4>, int a3@<W8>)
{
  _DWORD *v5 = v6 + 4;
  return (*(uint64_t (**)(void))(v7
                              + 8LL
                              * (((((a1 == v4) ^ ((a3 ^ 0xE1) + 1)) & 1) * (a3 ^ v3 ^ (a2 - 1426))) ^ a3)))();
}

uint64_t sub_10019B7E8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36)
{
  return ((uint64_t (*)(void))(*(void *)(v38
                                        + 8LL
                                        * (((*(void *)(a36 - 0x3972785B6BCAF92ALL) == 0LL)
                                          * ((v36 - v37 - 671) ^ (a5 - 47))) ^ v36))
                            - 12LL))();
}

void sub_10019B830()
{
  int v3 = *(void (**)(void *))(v2 - 184);
  void *v0 = 0LL;
  *(_DWORD *)(v1 - 0x3972785B6BCAF922LL) = 445517218;
  *(_DWORD *)(v1 - 0x3972785B6BCAF91ELL) = 0;
  v3(v0);
  JUMPOUT(0x10019C07CLL);
}

uint64_t sub_10019B888( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, _DWORD *a30, int a31)
{
  int v36 = v33 + a5 - 396;
  uint64_t v37 = (*(uint64_t (**)(void))(v35 - 184))(*(void *)(v32 - 0x3972785B6BCAF92ALL));
  *(void *)(v32 - 0x3972785B6BCAF92ALL) = a24;
  *a30 = a31;
  *(void *)(v35 - 16_Block_object_dispose((const void *)(v9 - 96), 8) = v31;
  return ((uint64_t (*)(uint64_t))(*(void *)(v34 + 8LL * (v36 ^ 0x72))
}

void sub_10019B90C()
{
  *(void *)(v1 - 192) = v0;
  JUMPOUT(0x10019B96CLL);
}

uint64_t sub_10019B9B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7 + 8LL * (((v6 ^ 0x3A ^ (a5 - 1607) ^ (a5 + v6 - 605)) * (v5 != 0)) | v6)))();
}

uint64_t sub_10019B9EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v8 + 8LL * ((233 * (v6 < ((v7 + (v5 ^ (a5 - 615)) + 1150) ^ 0x6BFu))) ^ v5)))();
}

uint64_t sub_10019BA24()
{
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * (v1 ^ ((4 * (v0 > 0x1F)) | (8 * (v0 > 0x1F))))) - 8LL))();
}

uint64_t sub_10019BA50()
{
  return ((uint64_t (*)(void))(*(void *)(v2
                                        + 8LL
                                        * (((((v0 < 0x20) ^ ((v1 ^ 0xAF) - 25)) & 1)
                                          * ((((v1 ^ 0x3AF) - 1212) | 0x221) - 490)) ^ v1 ^ 0x3AF))
                            - 4LL))();
}

uint64_t sub_10019BA9C@<X0>(uint64_t a1@<X0>, int a2@<W4>, uint64_t a3@<X8>)
{
  uint64_t v7 = (v3 - 1);
  __int128 v8 = *(_OWORD *)(a3 + v7 - 15);
  __int128 v9 = *(_OWORD *)(a3 + v7 - 31);
  uint64_t v10 = a1 + v7;
  *(_OWORD *)(v10 - 15) = v8;
  *(_OWORD *)(v10 - 31) = v9;
  return ((uint64_t (*)(void))(*(void *)(v6
                                        + 8LL
}

uint64_t sub_10019BB0C()
{
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL
}

uint64_t sub_10019BB38@<X0>(uint64_t a1@<X0>, int a2@<W4>, uint64_t a3@<X8>)
{
  int v6 = v4 + 8;
  int v7 = (v4 + 8) ^ (a2 - 1550);
  BOOL v9 = (unint64_t)(a1 - a3) > 0x1F && v3 > 7;
  return ((uint64_t (*)(void))(*(void *)(v5 + 8LL * (v6 ^ (155 * v9))) - 2 * (v7 ^ (a2 - 101)) + 190LL))();
}

uint64_t sub_10019BB80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return ((uint64_t (*)(void))(*(void *)(v8
                                        + 8LL
}

uint64_t sub_10019BBBC@<X0>(_OWORD *a1@<X0>, int a2@<W4>, _OWORD *a3@<X8>)
{
  __int128 v7 = a3[1];
  *a1 = *a3;
  a1[1] = v7;
  return ((uint64_t (*)(void))(*(void *)(v6
                                        + 8LL
}

uint64_t sub_10019BC14()
{
  return (*(uint64_t (**)(void))(v3 + 8LL * (((((v0 == v1) ^ (v2 - 118)) & 1) * (v2 + 576)) ^ v2)))();
}

uint64_t sub_10019BC3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return ((uint64_t (*)(void))(*(void *)(v7
                                        + 8LL
                                        * ((1769 * ((v5 & 0x18) == ((v6 - 2069856491) & 0x7B5F837B ^ 0x378LL))) ^ v6))
}

uint64_t sub_10019BC94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a1 + v2) = *(void *)(a2 + v2);
  return (*(uint64_t (**)(void))(v5
                              + 8LL
                              * ((107
                                * ((((v4 - 101) ^ 0xFFFFFCEB) & v3) - (unint64_t)(v4 - 351) + 529 != v2)) ^ (v4 - 101))))();
}

uint64_t sub_10019BCE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a1 + v5) = *(void *)(a2 + v5);
  return (*(uint64_t (**)(void))(v6 + 8LL * (((v3 != v5) * v4) ^ v2)))();
}

uint64_t sub_10019BD08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v8 + 8LL * (((v7 ^ (a5 - 505) ^ (a5 - 68)) * (v5 == v6)) ^ v7)))();
}

uint64_t sub_10019BD30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(_BYTE *)(a1 + v2) = *(_BYTE *)(a2 + v2);
  return ((uint64_t (*)(void))(*(void *)(v6 + 8LL * ((322 * (v2 + 1 == v3)) | (v5 + v4 + 496))) - 4LL))();
}

uint64_t sub_10019BD64()
{
  return ((uint64_t (*)(void))(*(void *)(v4
                                        + 8LL
                                        * (int)((((v3 + ((v2 - 134742705) & 0x8FEDFEFF) + 694) ^ ((v2 - 544) | 0x518))
                                               * (v0 != v1)) ^ v2))
                            - 12LL))();
}

uint64_t sub_10019BDB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return ((uint64_t (*)(void))(*(void *)(v7
                                        + 8LL * ((655 * ((((v6 - 667) ^ (a5 - 605) ^ 0x87E5FE77) & v5) == 0LL)) ^ v6))
                            - 4LL))();
}

uint64_t sub_10019BDEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a1 - 7 + (~(_DWORD)v2 + v3)) = *(void *)(a2 - 7 + (~(_DWORD)v2 + v3));
  return ((uint64_t (*)(void))(*(void *)(v5
                                        + 8LL
}

uint64_t sub_10019BE40()
{
  return (*(uint64_t (**)(void))(v4 + 8LL * (int)(((v3 + ((v2 + 23135698) | 0x8684F640) - 358) * (v1 != v0)) ^ v2)))();
}

uint64_t sub_10019BE7C()
{
  uint64_t v2 = *(void *)(v1 - 192);
  *(_DWORD *)(v2 - 0x3972785B6BCAF922LL) = (*(_DWORD *)(v1 - 132) ^ 0x7F8F6DE6)
                                         - 1694588996
                                         + ((2 * *(_DWORD *)(v1 - 132)) & 0xFF1EDBCC);
  *(_DWORD *)(v2 - 0x3972785B6BCAF91ELL) = 0;
  uint64_t v3 = vm_deallocate(mach_task_self_, *(void *)(v1 - 128), *(unsigned int *)(v1 - 132));
  return (*(uint64_t (**)(uint64_t))(v0 + 13264))(v3);
}

uint64_t sub_10019BEE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(_BYTE *)(a1 + (v2 - 1)) = *(_BYTE *)(a2 + (v2 - 1));
  return ((uint64_t (*)(void))(*(void *)(v5 + 8LL * ((v4 + v3 - 25) | (2 * (v2 != 1)))) - 12LL))();
}

uint64_t sub_10019BF10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return ((uint64_t (*)(void))(*(void *)(v7
                                        + 8LL
                                        * (int)(((((v5 - 403310276) & 0x9FEFFFEF) - a5 + 24)
                                               * (v6 == 0x3972785B6BCAF92ALL)) ^ v5))
                            - 4LL))();
}

uint64_t sub_10019BF60@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(2279997027LL
                            - (a1 - 2014970257)
                            + *(void *)(v2
                                        + 8LL * ((55 * (*(void *)(v1 - 0x3972785B6BCAF92ALL) != 0LL)) ^ (a1 + 1562)))
                            + 8))();
}

void sub_10019BFBC()
{
  int v3 = *(void (**)(void))(v2 - 184);
  v3();
  void *v0 = 0LL;
  *(_DWORD *)(v1 - 0x3972785B6BCAF922LL) = 445517218;
  *(_DWORD *)(v1 - 0x3972785B6BCAF91ELL) = 0;
  ((void (*)(void *))v3)(v0);
  JUMPOUT(0x10019C00CLL);
}

uint64_t sub_10019C0A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7 + 8LL * (((*v5 != 0LL) * (2 * (v6 ^ (a5 - 525)) - 1009)) ^ (2 * (v6 ^ (a5 - 525))))))();
}

void sub_10019C0D0()
{
  void *v0 = 0LL;
  v0[1] = 1543509817LL;
  ((void (*)(void *))v1)(v0);
  JUMPOUT(0x10019C0ECLL);
}

void sub_10019C12C(uint64_t a1)
{
  __asm { BR              X9 }

uint64_t sub_10019C164@<X0>(uint64_t a1@<X8>)
{
  return 0LL;
}

void sub_10019C178(uint64_t a1, uint64_t a2)
{
  if (a1) {
    BOOL v2 = a2 == 0;
  }
  else {
    BOOL v2 = 1;
  }
  int v3 = !v2;
  __asm { BR              X8 }

uint64_t sub_10019C1E0(void *a1, _DWORD *a2)
{
  *a1 = 0LL;
  *a2 = 0;
  BOOL v4 = (*(uint64_t (**)(uint64_t))(v3 + 168))(24LL) != 0;
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * ((936 * v4) ^ 0xC3u)) - 12LL))();
}

uint64_t sub_10019C238(uint64_t a1)
{
  *(void *)a1 = 0LL;
  *(void *)(a1 + _Block_object_dispose((const void *)(v9 - 96), 8) = 1892096462LL;
  *(_DWORD *)(a1 + 16) = 0;
  *(void *)(v3 - 144) = v1;
  uint64_t v5 = v1(4096LL);
  *(void *)a1 = v5;
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * ((50 * (v5 != 0)) | 0x581u)) - 4LL))();
}

uint64_t sub_10019C2A4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31)
{
  *(void *)(v37 - 160) = 0LL;
  *(void *)(v37 - 152) = v33;
  *(void *)(v37 - 16_Block_object_dispose((const void *)(v9 - 96), 8) = 0LL;
  *(_DWORD *)(v36 + _Block_object_dispose((const void *)(v9 - 96), 8) = v32 + 4096;
  uint64_t v38 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v34 + 8LL * (((v36 == 0) ^ (2 * (v31 ^ 0xF7) + 65)) & 1 | (2 * (((v36 == 0) ^ (2 * (v31 ^ 0xF7) + 65)) & 1)) | (2 * (v31 ^ 0x6F7u)))) - (2 * (v31 ^ 0x6F7u) - 814) + 946LL);
  *(void *)(v37 - 136) = 0x16EE0D5CAB47214BLL;
  *(void *)(v37 - 224) = v36;
  *(void *)(v37 - 216) = 0x16EE0D5CAB47214BLL;
  *(void *)(v37 - 20_Block_object_dispose((const void *)(v9 - 96), 8) = v35;
  return v38( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31);
}

uint64_t sub_10019C358()
{
  unsigned int v3 = *(_DWORD *)(v2 + 12) - 1521723536;
  unsigned int v4 = *(_DWORD *)(v2 + 8) + 881147294;
  BOOL v5 = v3 < 0xA54C576C;
  BOOL v6 = v3 > v4;
  if (v5 != v4 < 0xA54C576C) {
    BOOL v7 = v5;
  }
  else {
    BOOL v7 = v6;
  }
  return (*(uint64_t (**)(void))(v1 + 8LL * ((v7 * (((v0 - 951) | 0x410) - 935)) ^ v0)))();
}

uint64_t sub_10019C3C8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  *(void *)(v21 - 16_Block_object_dispose((const void *)(v9 - 96), 8) = 0LL;
  *(void *)(v21 - 160) = 0LL;
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 8LL * ((((v18 - 746) ^ 0x114) * (v20 == 0)) ^ v18));
  *(void *)(v21 - 136) = 0x16EE0D5CAB47214BLL;
  *(void *)(v21 - 216) = 0x16EE0D5CAB47214BLL;
  return v22(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
}

uint64_t sub_10019C418( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, int a26, int a27)
{
  unsigned int v29 = (((((v27 ^ 0x3FF) - 708) | 0x420) - 235965522) & (2 * (2 * a27 + 510774372)))
      + ((2 * a27 + 510774372) ^ 0xF8F7BBEF);
  if (a27 + 1250756789 < (v27 ^ 0x3FFu) - 1152114771 != v29 - 1034131824 < 0xBB54227F) {
    BOOL v30 = v29 - 1034131824 < 0xBB54227F;
  }
  else {
    BOOL v30 = v29 - 1034131824 > a27 + 1250756789;
  }
  return ((uint64_t (*)(void))(*(void *)(v28 + 8LL * ((19 * !v30) ^ ((v27 ^ 0x3FF) - 17))) - 8LL))();
}

uint64_t sub_10019C4D4()
{
}

uint64_t sub_10019C514()
{
  return v1;
}

void sub_10019F938(uint64_t a1, int a2)
{
  __asm { BR              X8 }

uint64_t sub_10019F988()
{
  return ((uint64_t (*)(void))(*(void *)(v1 + 8LL * ((787 * (v0 != 0)) ^ 0x3Eu)) - 4LL))();
}

uint64_t sub_10019F9A8()
{
}

uint64_t sub_10019F9F0()
{
  return (*(uint64_t (**)(void))(v1
                              + 8LL
                              * ((1781 * ((((v3 + 145) ^ (*(void *)(v0 + 32 * v2 + 24) == 0LL)) & 1) == 0)) ^ v3)))();
}

uint64_t sub_10019FA24@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(void *)(v1
                                        + 8LL
}

uint64_t sub_10019FA5C@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(void *)(v2
                                        + 8LL
                                        * ((1284
}

uint64_t sub_10019FA98@<X0>(int a1@<W8>)
{
  int v5 = (a1 - 1048556093) & 0x3E7FB3EF;
  v2();
  return (*(uint64_t (**)(void))(v3
                              + 8LL
                              * ((1781 * ((((v5 + 145) ^ (*(void *)(v1 + 32 * v4 + 24) == 0LL)) & 1) == 0)) ^ v5)))();
}

uint64_t sub_10019FAE8()
{
  uint64_t v5 = v0();
  return ((uint64_t (*)(uint64_t))(*(void *)(v1
                                                      + 8LL
                                                      * ((341
                                                        * (v2
                                                         + (v4 - 435)
                                                         + (v4 - 425)
                                                         - 113 == v3)) ^ (v4 + 145)))
                                          - 4LL))(v5);
}

uint64_t sub_10019FB24()
{
  return 0LL;
}

void sub_10019FB44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a4) {
    BOOL v6 = a5 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  int v8 = v6 || a6 == 0;
  __asm { BR              X8 }

uint64_t sub_10019FBBC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, _DWORD *a5)
{
  *a4 = 0LL;
  *a5 = 0;
  BOOL v7 = (*(uint64_t (**)(uint64_t))(v5 + 168))(24LL) != 0;
  return ((uint64_t (*)(void))(*(void *)(v6 + 8LL * ((77 * v7) ^ 0x2B1u)) - 12LL))();
}

uint64_t sub_10019FC2C(uint64_t a1)
{
  *(void *)(v5 - 216) = v4;
  *(void *)a1 = 0LL;
  *(void *)(a1 + _Block_object_dispose((const void *)(v9 - 96), 8) = 793839657LL;
  *(_DWORD *)(a1 + 16) = 0;
  uint64_t v7 = v1(4096LL);
  *(void *)a1 = v7;
  return (*(uint64_t (**)(void))(v3 + 8LL * (((v7 == 0) * ((v2 - 672) ^ 0x435 ^ (817 * (v2 ^ 0x553)))) ^ v2)))();
}

uint64_t sub_10019FC98()
{
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * ((((v0 ^ 0x9C5F26D) - 163967193) * (v1 != 0)) ^ v0)) - 12LL))();
}

uint64_t sub_10019FCD0()
{
  return v2;
}

uint64_t sub_1001A39BC(uint64_t a1)
{
  if ((unint64_t)(a1 + 8) <= 6 && ((0x7Du >> (a1 + 8)) & 1) != 0)
  {
    uint64_t v1 = (char *)*(&off_1003509B0 + ((189 * (_malloc(0x18uLL) != 0LL)) ^ 0x235u)) - 4;
    __asm { BR              X8 }
  }

  return 4294922295LL;
}

void sub_1001A3E4C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, _DWORD *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20, int a21)
{
  *uint64_t v21 = a13;
  *a14 = a21;
  JUMPOUT(0x1001A3E78LL);
}

uint64_t sub_1001A3F34()
{
  return (*(uint64_t (**)(void))(v2 + 8LL * (((v1 != 0) * (((v0 - 649) | 0x10) ^ 0x427)) ^ v0)))();
}

uint64_t sub_1001A3F6C()
{
  int v3 = (v0 - 1481) | 0x311;
  unsigned int v4 = *(_DWORD *)(v1 + 12) + 1483162170;
  unsigned int v5 = *(_DWORD *)(v1 + 8) - 577715717;
  BOOL v6 = v4 < 0x58674236;
  BOOL v7 = v4 > v5;
  if (v6 != v5 < ((16 * (v3 ^ 0x3E7)) ^ 0x58674336u)) {
    BOOL v7 = v6;
  }
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * ((2038 * v7) ^ v3)) - (((v3 ^ 0x3E7u) + 240) ^ 0x10CLL)))();
}

uint64_t sub_1001A4000( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26)
{
  uint64_t v33 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 + 8LL * ((1407 * (((v28 == 0) ^ (v31 + v27 + v27 + 54 + 1)) & 1)) ^ v27)) - 8LL);
  LODWORD(a23) = v26;
  *(void *)(v32 - 144) = v30;
  return v33( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26);
}

uint64_t sub_1001A404C()
{
  unsigned int v4 = v0 + 2140273744;
  int v5 = v3 + v1;
  unsigned int v6 = ((2 * (2 * v0 + 173211530)) & 0xF5AF9A74) + ((2 * v0 + 173211530) ^ 0xFAD7CD3B);
  if (v4 < 0xFA687C87 != v6 - 7295156 < (((v5 - 111) | 1) ^ 0xFA687C66)) {
    BOOL v7 = v6 - 7295156 < (((v5 - 111) | 1) ^ 0xFA687C66);
  }
  else {
    BOOL v7 = v6 - 7295156 > v4;
  }
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * ((2047 * v7) ^ (v5 + 583))) - 12LL))();
}

uint64_t sub_1001A4100@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27)
{
  uint64_t v33 = *(void *)(v32 - 136);
  int v34 = v28 + 822;
  *(void *)(v32 - 136) = v33;
  uint64_t v35 = *(void *)(v33 - 0x12ED93D78B085839LL);
  int v36 = ((2 * a9) & 0x3FFEFFDE) + (a9 ^ 0x1FFF7FEF) - 536839204;
  *(_BYTE *)(v35 + (v36 + 1077)) = 99;
  *(_BYTE *)(v35 + (v36 + v34)) = 43;
  *(_BYTE *)(v35 + (v36 + 1079)) = -115;
  *(_BYTE *)(v35 + (v36 + 1080)) = 110;
  *v27 += 4;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8LL * ((v30 + (v34 ^ 0xC9) + v31 + v34 - 1078 - 874) ^ v34)))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27);
}

uint64_t sub_1001A4284()
{
  return (*(uint64_t (**)(void))(v2 + 8LL * (((v0 - 491 + ((v0 - 1095605136) & 0x414D97DF) - 629) * (v1 == 0)) ^ v0)))();
}

uint64_t sub_1001A42C8()
{
  unsigned int v3 = *(_DWORD *)(v1 + 12) - 929556043 + ((v0 - 772) | 0x14B) + 408;
  unsigned int v4 = *(_DWORD *)(v1 + 8) + 1304534121;
  BOOL v5 = v3 < (v0 ^ 0xC8981FB0);
  BOOL v6 = v3 > v4;
  if (v4 < 0xC8981CA4 != v5) {
    BOOL v6 = v5;
  }
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * (v6 | (32 * v6) | v0)) - 8LL))();
}

uint64_t sub_1001A434C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25)
{
  HIDWORD(a23) = v25;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 + 8LL * (v26 ^ (218 * (v27 == 0)))) - (v26 ^ 0x5F0 ^ ((v26 - 337) | 0x145u) ^ 0x5E8LL)))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25);
}

uint64_t sub_1001A439C()
{
  unsigned int v3 = v0 - 1557549799;
  BOOL v4 = (v0 - 1557549799) < 0x1E002D50;
  unsigned int v5 = ((11 * (v1 ^ 0x488) - 38940805) & (2 * (2 * v0 + 173211530))) + ((2 * v0 + 173211530) ^ 0xFED6E87F);
  if (v4 != v5 + 522798289 < 0x1E002D50) {
    BOOL v6 = v5 + 522798289 < 0x1E002D50;
  }
  else {
    BOOL v6 = v5 + 522798289 > v3;
  }
  return (*(uint64_t (**)(BOOL))(v2 + 8LL * ((75 * v6) ^ v1)))(v5 + 522798289 > v3);
}

uint64_t sub_1001A4448@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26)
{
  uint64_t v31 = *(void *)(v30 - 136);
  int v32 = 67 * (v27 ^ 0x514);
  *(void *)(v30 - 136) = v31;
  uint64_t v33 = *(void *)(v31 - 0x12ED93D78B085839LL);
  unsigned int v34 = ((a9 << (v32 - 78)) & 0xBB7FFBFE) + (a9 ^ 0x5DBFFDFF) - 1572863487;
  *(_BYTE *)(v33 + v34) = 0;
  *(_BYTE *)(v33 + v34 + 1) = 0;
  *(_BYTE *)(v33 + v34 + 2) = 0;
  *(_BYTE *)(v33 + v34 + 3) = 1;
  *v26 += 4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 + 8LL * ((3 * (v32 ^ 0x1D0) + (v32 ^ (v29 - 181) ^ (v29 + 69))) ^ v32)) - 12LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26);
}

uint64_t sub_1001A4450( uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v21 = a3(((((v19 - 641203730) & 0x2637FDDF) + 19469882) ^ v19 ^ 0x189u) + v18);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t))(*(void *)(v20 + 8LL * ((665 * (v21 != 0)) ^ v19)) - 12LL))( v21,  v22,  v23,  v24,  v25,  v26,  v27,  v28,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  0LL,  a18);
}

void sub_1001A44BC()
{
}

void sub_1001A4508( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, int a23, int a24, uint64_t a25, uint64_t a26, _DWORD *a27)
{
  uint64_t v29 = *(void *)(v28 - 136);
  (*(void (**)(void))(v28 - 176))(*(void *)(v29 - 0x12ED93D78B085839LL));
  *(void *)(v29 - 0x12ED93D78B085839LL) = a17;
  *a27 = a24;
  *(void *)(v28 - 144) = v27;
  JUMPOUT(0x1001A4554LL);
}

uint64_t sub_1001A4618()
{
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * (((v0 + 415) * (v1 != 0)) ^ v0)) - (v0 ^ 0x8Eu) + 335LL))();
}

uint64_t sub_1001A4650()
{
  unsigned int v3 = *(_DWORD *)(v1 + 12) - 1382934046;
  unsigned int v4 = ((9 * (((v0 - 271) | 0x199) ^ 0x1E8)) ^ 0x32BB9842) + *(_DWORD *)(v1 + 8);
  BOOL v5 = v3 < 0xAD9219DA;
  BOOL v6 = v3 > v4;
  if (v5 != v4 < 0xAD9219DA) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v2 + 8LL * ((1922 * v6) ^ v0)))();
}

uint64_t sub_1001A46D0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24)
{
  LODWORD(a24) = v24;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 + 8LL * (((v25 - 148 + ((v25 - 474) | 0x4A0) + 14) * (v26 != 0)) ^ v25)) - 4LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24);
}

uint64_t sub_1001A4714()
{
  unsigned int v3 = v1 - 438351421;
  BOOL v4 = (v1 - 438351421) < 0x60B5C9F6;
  unsigned int v5 = ((2 * ((v1 << (((v0 + 121) | 0xC1) + 36)) + 173211530)) & 0xF5FF08FC)
     + (((v1 << (((v0 + 121) | 0xC1) + 36)) + 173211530) ^ 0x7AFF847F);
  if (v4 != v5 - 441039497 < 0x60B5C9F6) {
    BOOL v6 = v5 - 441039497 < 0x60B5C9F6;
  }
  else {
    BOOL v6 = v5 - 441039497 > v3;
  }
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * (((2 * v6) | (4 * v6)) ^ v0)) - 8LL))();
}

uint64_t sub_1001A47C4@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unsigned int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25)
{
  uint64_t v29 = *(void *)(v28 - 136);
  uint64_t v30 = v26 ^ 0x94u;
  uint64_t v31 = *(void *)(v28 - 224) + 0x1E1378A6812BA6E5LL - ((v30 ^ 0x3C26F14D02574E1DLL) & (2LL * *(void *)(v28 - 224)));
  *(void *)(v28 - 136) = v29;
  v31 += 197LL;
  int v32 = (_BYTE *)(((2LL * a9) & 0x173F99FB6LL)
                + (a9 ^ 0xC3B9F93FB9FCCFDBLL)
                + *(void *)(v29 - 0x12ED93D78B085839LL)
                + 0x3C4606C046033025LL);
  *int v32 = HIBYTE(v31) ^ 0x1E;
  v32[1] = BYTE6(v31) ^ 0x13;
  v32[2] = BYTE5(v31) ^ 0x78;
  v32[3] = BYTE4(v31) ^ 0xA6;
  void v32[4] = BYTE3(v31) ^ 0x81;
  v32[5] = BYTE2(v31) ^ 0x2B;
  void v32[6] = BYTE1(v31) ^ 0xA7;
  v32[7] = v31 ^ 0xAA;
  *v25 += 8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 + 8LL * (int)(((2 * (((((_DWORD)v30 - 1873786905) ^ ((_DWORD)v30 + 1651) ^ 1) & 1) == 0)) & 0xFB | (4 * ((((v30 - 25) ^ (v30 + 115)) ^ 0xFE) & 1))) ^ v30)) - 12LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25);
}

uint64_t sub_1001A4A2C()
{
  return (*(uint64_t (**)(void))(v2 + 8LL * (((((v0 - 1980) | 0x302) ^ (v0 - 1095)) * (v1 == 0)) ^ v0)))();
}

uint64_t sub_1001A4A64()
{
  unsigned int v3 = *(_DWORD *)(v1 + 12) - 1452124039;
  unsigned int v4 = *(_DWORD *)(v1 + 8) + (v0 ^ 0x2E9BDB34);
  BOOL v5 = v3 < ((v0 - 641) | 2u) - 1452124178;
  BOOL v6 = v3 > v4;
  if (v5 != v4 < 0xA9725871) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v2 + 8LL * ((30 * !v6) ^ v0)))();
}

uint64_t sub_1001A4AE0@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unsigned int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28)
{
  uint64_t v32 = *(void *)(v31 - 136);
  uint64_t v33 = (v29 + 204);
  uint64_t v34 = *(void *)(v31 - 216);
  uint64_t v35 = v34 - ((2 * v34) & 0x3C26F14D02574F54LL) + (v33 ^ 0x1E1378A6812BA6E5LL);
  *(void *)(v31 - 136) = v32;
  int v36 = (_BYTE *)(((2LL * a9) & 0x1EDFF6FBELL)
                + (a9 ^ 0x5BEFFECBF6FFB7DFLL)
                + *(void *)(v32 - 0x12ED93D78B085839LL)
                - 0x5BEFFECBF6FFB7DFLL);
  *int v36 = HIBYTE(v35) ^ 0x1E;
  v36[1] = BYTE6(v35) ^ 0x13;
  v36[2] = BYTE5(v35) ^ 0x78;
  v36[3] = BYTE4(v35) ^ 0xA6;
  void v36[4] = (((_DWORD)v34 - ((2 * (_DWORD)v34) & 0x2574F54) + (v33 ^ 0x812BA6E5)) >> 24) ^ 0x81;
  v36[5] = BYTE2(v35) ^ 0x2B;
  void v36[6] = BYTE1(v35) ^ 0xA7;
  v36[7] = v35 ^ 0xAA;
  *v28 += 8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 + 8LL * (int)((((v33 + 147343073) ^ 0x2AEFE3C5) + ((v33 + 147343073) | 0xD5101102)) ^ v33)) - 12LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28);
}

uint64_t sub_1001A4E14()
{
  *(void *)(v4 - 12_Block_object_dispose((const void *)(v9 - 96), 8) = 0LL;
  return ((uint64_t (*)(void))(3721943338LL
                            - (v3 + v0 - 835)
}

uint64_t sub_1001A4E78@<X0>( int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23)
{
  int v27 = a1 | 0x144;
  int v28 = ((a1 | 0x144) - 1720402906) & 0x668B43DE;
  uint64_t v29 = (*(uint64_t (**)(void))(v25 + 8LL * ((a1 | 0x144) ^ 0x1DA)))();
  (*(void (**)(uint64_t, uint64_t, void, void))(v25 + 8LL * (v27 - 426)))( v29,  *(void *)(v25 + 8LL * (v27 ^ 0x1D8)) - 4LL,  *(void *)v23,  *(unsigned int *)(v23 + 12));
  uint64_t v30 = (*(uint64_t (**)(void, void))(v25 + 8LL * (v27 - 438)))(*(void *)(v26 - 168), 0LL);
  *(void *)(v26 - 200) = 0LL;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 8LL * (((v30 == 0) * (v28 - 443)) ^ v27)))( v30,  v31,  v32,  v33,  v34,  v35,  v36,  v37,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23);
}

uint64_t sub_1001A4F1C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28)
{
  uint64_t v33 = (*(uint64_t (**)(void, uint64_t, void))(v30 + 8LL * (v28 ^ 0x1DD)))( *(void *)(v31 - 168),  a1,  0LL);
  uint64_t v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8LL * ((704 * (v33 != 0)) ^ v28));
  *(void *)(v31 - 200) = a1;
  return v34( v33,  v35,  v36,  v37,  v38,  v39,  v40,  v41,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28);
}

uint64_t sub_1001A4F60( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38)
{
  int v44 = 32 * (v38 ^ v39);
  (*(void (**)(uint64_t, uint64_t))(v41 + 8LL * (v44 ^ 0x224)))( a1,  *(void *)(v41 + 8LL * (v44 ^ 0x211)) - 4LL);
  (*(void (**)(uint64_t))(v41 + 8LL * (v44 ^ 0x20D)))(a1);
  (*(void (**)(uint64_t, uint64_t))(v41 + 8LL * (v44 ^ 0x20C)))(a1, a38);
  uint64_t v45 = *(uint64_t (**)(void))(v41 + 8LL * (v44 ^ 0x21E));
  *(void *)(v42 - 200) = v45;
  uint64_t v46 = v45();
  BOOL v47 = v46 != *(void *)(v41 + 8LL * (v44 ^ 0x220)) - 12LL;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 8LL * ((v47 | (16 * v47)) + v44)))( v46,  v48,  v49,  v50,  v51,  v52,  v53,  v54,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21);
}

uint64_t sub_1001A5010( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, int *a29)
{
  uint64_t v32 = *(uint64_t (**)(void))(v30
                            + 8LL
  *(void *)(v31 - 160) = 0x50417EF54FC55D4FLL;
  return v32();
}

uint64_t sub_1001A5098( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38)
{
  uint64_t v43 = (*(uint64_t (**)(void))(v42 - 200))();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 8LL * (((v43 == v40) * (36 * (v38 ^ 0x208) + 463)) ^ v38)))( v43,  v44,  v45,  v46,  v47,  v48,  v49,  v50,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28);
}

uint64_t sub_1001A50E4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29)
{
  uint64_t v33 = (uint64_t (*)(void))(*(void *)(v30
                                      + 8LL
  *(void *)(v32 - 160) = 0x50417EF54FC55D4FLL;
  return v33();
}

uint64_t sub_1001A5148( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38)
{
  uint64_t v43 = (*(uint64_t (**)(void))(v42 - 200))();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 8LL * (((v43 == v40) * (((v39 - 640) | 0x280) + 190)) | (v39 - 371))))( v43,  v44,  v45,  v46,  v47,  v48,  v49,  v50,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21);
}

uint64_t sub_1001A5190( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29)
{
  uint64_t v33 = *(uint64_t (**)(void))(v31
                            + 8LL * (int)(((((v30 - 33630298) & 0xDFD97F7A) + 573024234) * (a29 == v29)) ^ (v30 - 3)));
  *(void *)(v32 - 160) = 0x50417EF54FC55D4FLL;
  return v33();
}

uint64_t sub_1001A51EC@<X0>( int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31)
{
  int v35 = a1 + 3;
  v33(a20, a31);
  uint64_t v37 = (*(uint64_t (**)(void))(v34 - 200))();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 8LL * (((v37 == v32) * (a1 ^ v35 ^ 0x195 ^ 0x1D6)) ^ v35)))( v37,  v38,  v39,  v40,  v41,  v42,  v43,  v44,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11,  a12,  a13,  a14);
}

uint64_t sub_1001A523C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29)
{
  uint64_t v33 = *(uint64_t (**)(void))(v31 + 8LL * (int)((((v30 - 2401304) & 0xDDFCFB3B ^ 0xDDD85C1D) * (a29 == v29)) ^ v30));
  *(void *)(v32 - 160) = 0x50417EF54FC55D4FLL;
  return v33();
}

uint64_t sub_1001A5290( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38)
{
  uint64_t v43 = (*(uint64_t (**)(void))(v42 - 200))();
  uint64_t v44 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 8LL * (int)(((v43 != v40) * ((v38 ^ 0xDDD85B3C) + 573023981)) ^ v38));
  *(void *)(v42 - 160) = 0x50417EF54FC55D4FLL;
  return v44(v43, v45, v46, v47, v48, v49, v50, v51, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21);
}

uint64_t sub_1001A52F4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29)
{
  uint64_t v33 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))*(&off_100354840 + v30 - 893))(a29, v31, v32 - 128);
  *(void *)(v32 - 20_Block_object_dispose((const void *)(v9 - 96), 8) = 0x50417EF54FC55D4FLL;
  *(void *)(v32 - 160) = 0x50417EF54FC55D4FLL;
  return v34(v33, v35, v36, v37, v38, v39, v40);
}

uint64_t sub_1001A5394()
{
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(v2 - 152))(24LL);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v1
                                                                                               + 8LL
                                                                                               * (int)(((((v3 == 0) ^ (5 * (v0 & 0x6F ^ 0x5B))) & 1) * (((v0 & 0x2B162E6F) - 573024476) ^ 0xDDD85C5B)) ^ v0 & 0x2B162E6F));
  *(void *)(v2 - 20_Block_object_dispose((const void *)(v9 - 96), 8) = 0x50417EF54FC55D4FLL;
  *(void *)(v2 - 160) = 0x50417EF54FC55D4FLL;
  return v4(v3, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1001A5418(uint64_t a1)
{
  *(void *)(v3 - 160) = a1 + 0x50417EF54FC55D4FLL;
  *(void *)a1 = 0LL;
  *(_DWORD *)(a1 + _Block_object_dispose((const void *)(v9 - 96), 8) = 1169621817;
  *(void *)(a1 + 12) = 0LL;
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(v3 - 152))(4096LL);
  *(void *)a1 = v5;
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * (((v5 == 0) * (((v1 - 1161) | 0x52) - 621)) ^ v1)) - 12LL))();
}

uint64_t sub_1001A5484()
{
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8LL * (((((v2 == 0) ^ (v1 - 51)) & 1) * (v1 - 540)) ^ (v1 - 100)));
  *(void *)(v3 - 20_Block_object_dispose((const void *)(v9 - 96), 8) = 0x50417EF54FC55D4FLL;
  return v4();
}

uint64_t sub_1001A54E4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38)
{
  *(void *)(v42 - 20_Block_object_dispose((const void *)(v9 - 96), 8) = 0x50417EF54FC55D4FLL;
  *(void *)(v42 - 160) = 0x50417EF54FC55D4FLL;
  int v43 = v39 + 573025135;
  uint64_t v44 = (&off_100354840)[v39 ^ 0xDDD8593A];
  ((void (*)(uint64_t))v44)(v38);
  ((void (*)(uint64_t))v44)(a27);
  return ((uint64_t (*)(void))(*(void *)(v40 + 8LL * ((14 * (a38 != 0)) | v43)) - 4LL))();
}

uint64_t sub_1001A59B8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29)
{
  uint64_t v34 = v30();
  uint64_t v35 = (uint64_t (*)(uint64_t))(*(void *)(v32 + 8LL * ((v31 + 471) ^ (101 * (a29 == 0)))) - 4LL);
  *(void *)(v33 - 200) = v29;
  return v35(v34);
}

uint64_t sub_1001A59F0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29)
{
  uint64_t v37 = v31(a29);
  *(void *)(v36 - 200) = v30;
  if (v34 == -45004)
  {
    *(void *)(v36 - 160) = v33;
    *(void *)(v36 - 120) = 0LL;
    *(_DWORD *)(v36 - 112) = 0;
    uint64_t v38 = ((uint64_t (*)(void, void, void, uint64_t, uint64_t))v35[5])( **v35,  *(void *)v29,  *(unsigned int *)(v29 + 12),  v36 - 120,  v36 - 112);
    BOOL v39 = (v38 ^ 0x569EEEF7) - 101206704 + ((2 * (_DWORD)v38) & 0xAD3DDDEE) != 1620485194;
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 + 8LL * (((4 * v39) | (32 * v39)) ^ 0x8E)) - 12LL))( v38,  v40,  v41,  v42,  v43,  v44,  v45,  v46,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28);
  }

  else if (v34)
  {
    return (*(uint64_t (**)(uint64_t))(v32 + 8LL * ((82 * (v29 != 0)) ^ 0x6BC)))(v37);
  }

  else
  {
    return ((uint64_t (*)(uint64_t))(*(void *)(v32
                                                        + 8LL
                                                        * ((51
                                                          * (((*(void *)(v36 - 208) == 0x50417EF54FC55D4FLL) ^ 0x93) & 1)) ^ 0x14F))
                                            - 12LL))(v37);
  }

uint64_t sub_1001A605C()
{
  uint64_t v3 = *(void *)(v2 - 208);
  unsigned int v4 = *(_DWORD *)(v3 - 0x50417EF54FC55D43LL) - 886711989;
  unsigned int v5 = *(_DWORD *)(v3 - 0x50417EF54FC55D47LL) - 2056333810;
  LODWORD(v3) = (v4 < 0xCB25D947) ^ (v5 < 0xCB25D947);
  BOOL v6 = v4 > v5;
  if ((_DWORD)v3) {
    BOOL v6 = v4 < 0xCB25D947;
  }
  return ((uint64_t (*)(void))(*(void *)(v1 + 8LL * (int)((v6 * (((v0 + 2035646180) & 0x86AA7DBE) - 991)) ^ v0)) - 4LL))();
}

uint64_t sub_1001A6114@<X0>(int a1@<W8>)
{
  uint64_t v5 = *(void *)(v4 - 208);
  _DWORD *v2 = v1 + 4;
  return (*(uint64_t (**)(void))(v3 + 8LL * (a1 ^ (84 * (v5 != 0x50417EF54FC55D4FLL)))))();
}

void sub_1001A61C8()
{
  uint64_t v4 = *(void (**)(void))(v3 - 176);
  v4();
  void *v0 = 0LL;
  _DWORD *v2 = 1169621817;
  *int v1 = 0;
  ((void (*)(void *))v4)(v0);
  JUMPOUT(0x1001A6AE8LL);
}

uint64_t sub_1001A6208( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, _DWORD *a30, int a31, int a32)
{
  uint64_t v38 = (*(uint64_t (**)(void))(v37 - 176))(*(void *)(v34 - 0x50417EF54FC55D4FLL));
  *(void *)(v34 - 0x50417EF54FC55D4FLL) = a22;
  *a30 = a32;
  *(void *)(v37 - 144) = v35;
  return ((uint64_t (*)(uint64_t))(*(void *)(v32 + 8LL * ((v33 + v36 + 948) ^ 0x47))
}

void sub_1001A6294()
{
  *(void *)(v1 - 184) = v0;
  JUMPOUT(0x1001A62DCLL);
}

uint64_t sub_1001A6340()
{
}

uint64_t sub_1001A638C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  BOOL v7 = (unint64_t)(a1 - a2) > 0x1F && v2 >= (((v3 + 358110588) | 0xC8800110) ^ (v5 + 8));
  return ((uint64_t (*)(void))(*(void *)(v4 + 8LL * ((479 * v7) ^ v3)) - 8LL))();
}

uint64_t sub_1001A63D8()
{
  return (*(uint64_t (**)(void))(v2
                              + 8LL
                              * ((30 * (v0 < ((((v1 - 1723312550) | 0x44900032) - v3 + 193) ^ 0xE1u))) ^ (v1 + 701))))();
}

uint64_t sub_1001A6424@<X0>(_OWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  __int128 v7 = a2[1];
  *a1 = *a2;
  a1[1] = v7;
  return ((uint64_t (*)(void))(*(void *)(v4
                                        + 8LL
}

uint64_t sub_1001A647C()
{
  return ((uint64_t (*)(void))(*(void *)(v3 + 8LL * ((v0 - 311) ^ (1926 * (v1 != v2))))
                            - (v4
                             + ((v0 + 470287938) | 0xC1D05110)
                             + 1549)
                            + 1880LL))();
}

uint64_t sub_1001A64C4()
{
}

uint64_t sub_1001A6514()
{
}

uint64_t sub_1001A6558()
{
  return (*(uint64_t (**)(void))(v2
                              + 8LL
                              * (int)((199
                                     * (((v0 < v3 + (((v1 & 0x95F65F7F) - 858783082) | 0x11085122) - 303) ^ ((v1 & 0x7F) + 63)) & 1)) ^ v1 & 0x95F65F7F)))();
}

uint64_t sub_1001A65C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v6 = a2 + (v2 - 1);
  __int128 v7 = *(_OWORD *)(v6 - 31);
  uint64_t v8 = a1 + (v2 - 1);
  *(_OWORD *)(v8 - 15) = *(_OWORD *)(v6 - 15);
  *(_OWORD *)(v8 - 31) = v7;
  return (*(uint64_t (**)(void))(v4
                              + 8LL
                              * ((((v2 & 0xFFFFFFE0) == 32LL) * ((v3 - 1284081977) & 0x6EB131CE ^ 0x2A8)) ^ (v5 + v3 + 1156))))();
}

void sub_1001A662C()
{
}

uint64_t sub_1001A6638()
{
  return ((uint64_t (*)(void))(*(void *)(v3 + 8LL * (v2 ^ (482 * (v0 == v1))))
                            + 3721943338LL
                            - (v2 - 185)
                            - ((v2 - 1734865359) | 0x45404812u)
                            + 562))();
}

uint64_t sub_1001A6688()
{
  return ((uint64_t (*)(void))(*(void *)(v2
                                        + 8LL
                                        * (int)(((((v4 + v1 - 566 + v3) & v0) == 0LL)
                                               * (((v1 + 606748071) & 0xDBD5C0E3) - 49)) ^ v1))
                            - 8LL))();
}

uint64_t sub_1001A66CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a1 + v2) = *(void *)(a2 + v2);
  return ((uint64_t (*)(void))(*(void *)(v5
                                        + 8LL * ((1902 * (v2 + ((v4 + 325) | 0xA0u) - 670 == (v3 & 0xFFFFFFF8))) ^ v4))
                            - 8LL))();
}

uint64_t sub_1001A670C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a1 + v4) = *(void *)(a2 + v4);
  return ((uint64_t (*)(void))(*(void *)(v7 + 8LL * (((v4 + v5 - 670 == v2) * v6) ^ v3)) - 8LL))();
}

uint64_t sub_1001A6738()
{
  return ((uint64_t (*)(void))(*(void *)(v3 + 8LL * (((v2 ^ (v4 + 610) ^ (v4 + 1551)) * (v0 == v1)) ^ v2)) - 8LL))();
}

uint64_t sub_1001A6764@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(_BYTE *)(a1 + v2) = *(_BYTE *)(a2 + v2);
  return (*(uint64_t (**)(void))(v5 + 8LL * ((22 * (v2 + 1 == v3)) | (v6 + v4 + 186))))();
}

uint64_t sub_1001A6794()
{
  return (*(uint64_t (**)(void))(v3 + 8LL * ((((v4 + v2 - 194 + 173) ^ (v4 + v2 - 456)) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_1001A67C4()
{
  BOOL v4 = (((v3 + ((v1 - 933740788) | 0x15801920) + 1226) ^ 0x601) & v0) != 0LL;
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * (((2 * v4) | (8 * v4)) ^ v1)) - 4LL))();
}

uint64_t sub_1001A6810@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a1 - 7 + (~(_DWORD)v2 + v3)) = *(void *)(a2 - 7 + (~(_DWORD)v2 + v3));
  return ((uint64_t (*)(void))(*(void *)(v5
                                        + 8LL * (((v2 - (v3 & 0xFFFFFFF8) != -8) * ((v4 ^ 0x3D0) - 505)) ^ v4 ^ 0x3D0))
                            - 8LL))();
}

uint64_t sub_1001A6874(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v5 + a2) = *(void *)(v4 + a2);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 + 8LL * (((a3 != 0) * v6) ^ v3)) - 8LL))( a1,  a2 - 8,  a3 + 8);
}

uint64_t sub_1001A68A4()
{
  return ((uint64_t (*)(void))(*(void *)(v3 + 8LL
                                             * (((v4 + ((v0 - 1781002857) | 0x48004812) + 1549) * (v2 == v1)) ^ v0))
                            + 3721943338LL
                            - ((v0 - 537101202) & 0xFDDBD93A)))();
}

uint64_t sub_1001A6908()
{
  uint64_t v2 = *(void *)(v1 - 184);
  *(_DWORD *)(v2 - 0x50417EF54FC55D47LL) = (*(_DWORD *)(v1 - 112) ^ 0xF7BF2F3D)
                                         + 1308087292
                                         + ((2 * *(_DWORD *)(v1 - 112)) & 0xEF7E5E7A);
  *(_DWORD *)(v2 - 0x50417EF54FC55D43LL) = 0;
  uint64_t v3 = vm_deallocate(mach_task_self_, *(void *)(v1 - 120), *(unsigned int *)(v1 - 112));
  int v4 = (uint64_t (*)(uint64_t))(*(void *)(v0 + 6416) - 12LL);
  *(void *)(v1 - 20_Block_object_dispose((const void *)(v9 - 96), 8) = v2;
  return v4(v3);
}

uint64_t sub_1001A6970@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned int v6 = v2 - 1;
  *(_BYTE *)(a1 + v6) = *(_BYTE *)(a2 + v6);
  return ((uint64_t (*)(void))(*(void *)(v4 + 8LL * ((1587 * (v6 != 0LL)) ^ (v5 + v3 - 166))) - 4LL))();
}

uint64_t sub_1001A69A4()
{
  return ((uint64_t (*)(void))(*(void *)(v2
                                        + 8LL
}

uint64_t sub_1001A69F8@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8LL * ((49 * (((v2 ^ (*(void *)(v1 - 0x50417EF54FC55D4FLL) == 0LL)) & 1) == 0)) ^ a1)))();
}

void sub_1001A6A38()
{
  uint64_t v3 = *(void (**)(void))(v2 - 176);
  v3();
  *uint64_t v1 = 0LL;
  *(_DWORD *)(v0 - 0x50417EF54FC55D47LL) = 1169621817;
  *(_DWORD *)(v0 - 0x50417EF54FC55D43LL) = 0;
  ((void (*)(void *))v3)(v1);
  JUMPOUT(0x1001A6A88LL);
}

uint64_t sub_1001A6B20@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8LL * (((*v2 == 0LL) * (a1 ^ v1 ^ (v4 + 153))) ^ a1)))();
}

void sub_1001A6B48()
{
  void *v0 = 0LL;
  v0[1] = 2060877883LL;
  ((void (*)(void *))v1)(v0);
  JUMPOUT(0x1001A3D08LL);
}

void sub_1001A6B68()
{
  unint64_t v0 = (qword_1003A2EF8 - qword_1003A2F00) ^ (unint64_t)&v2;
  qword_1003A2F00 = 142025987 * v0 - 0x60A26FE5DEEB276BLL;
  qword_1003A2EF8 = 142025987 * (v0 ^ 0x9F5D901A2114D895LL);
  int v1 = (char *)*(&off_1003509B0
               + ((998
                 * (((uint64_t (*)(uint64_t))*(&off_100354840
                                                      + ((3
                                                                                       * ((qword_1003A2EF8
                                                                                         - qword_1003A2F00) ^ 0x95)) ^ byte_1002D48D0[byte_1002D44C0[(3 * ((qword_1003A2EF8 - qword_1003A2F00) ^ 0x95))] ^ 0x34])
                                                      + 5))(24LL) != 0)) ^ 0x5Eu))
     - 4;
  __asm { BR              X8 }

uint64_t sub_1001A6C64(uint64_t a1)
{
  *(void *)a1 = 0LL;
  *(void *)(a1 + _Block_object_dispose((const void *)(v9 - 96), 8) = 1718823473LL;
  *(_DWORD *)(a1 + 16) = 0;
  *(void *)(v3 - 160) = v1;
  uint64_t v5 = v1(4096LL);
  *(void *)a1 = v5;
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * (((8 * (v5 != 0)) | (16 * (v5 != 0))) ^ 0x5C8u)) - 12LL))();
}

uint64_t sub_1001A6CBC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22)
{
  *(void *)(v27 - 184) = v22;
  *(void *)(v27 - 152) = v23 + 0x295A40E3506E2D9DLL;
  *(_DWORD *)(v23 + _Block_object_dispose((const void *)(v9 - 96), 8) = v24 + 4096;
  unsigned int v28 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 + 8LL * ((1453 * (((v23 == 0) ^ 0x35) & 1)) ^ 0x1D1u)) - 12LL);
  *(void *)(v27 - 176) = *(void *)(v25 + 208) - 4LL;
  *(void *)(v27 - 216) = 0x4058876633BACC37LL;
  return v28(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22);
}

uint64_t sub_1001A6D70()
{
  unsigned int v3 = *(_DWORD *)(v1 + 12) + 1039020030;
  unsigned int v4 = ((v0 - 196) ^ 0x5A0) - 679803912 + *(_DWORD *)(v1 + 8);
  BOOL v5 = v3 < 0x3DEE2FFA;
  BOOL v6 = v3 > v4;
  if (v5 != v4 < 0x3DEE2FFA) {
    BOOL v7 = v5;
  }
  else {
    BOOL v7 = v6;
  }
  return (*(uint64_t (**)(void))(v2 + 8LL * ((102 * !v7) ^ v0)))();
}

void sub_1001A6DE8(int a1@<W8>)
{
  *(void *)(v7 - 216) = 0x4058876633BACC37LL;
  uint64_t v8 = *v2;
  int v9 = ((2 * a1) & 0x2756EBD6) + (a1 ^ 0x13AB75EB);
  *(_BYTE *)(*v2 + (v9 - 330003947)) = 0;
  *(_BYTE *)(v8 + (v9 - 330003946)) = 0;
  *(_BYTE *)(v8 + v9 + ((v3 + 76) ^ 0xEC54880A)) = 0;
  *(_BYTE *)(v8 + (v9 - 330003944)) = 1;
  *v1 += 4;
  *(void *)(v7 - 16_Block_object_dispose((const void *)(v9 - 96), 8) = v4;
  __asm { BR              X8 }

uint64_t sub_1001A7134()
{
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * (v0 ^ (13 * (v1 == 0)))) - ((v0 ^ 0x2C9u) - 756) + 381LL))();
}

uint64_t sub_1001A716C()
{
  unsigned int v3 = *(_DWORD *)(v1 + 12) + 384473146;
  unsigned int v4 = (((v0 ^ 0x182) + 595) ^ 0xB0776C5F) + *(_DWORD *)(v1 + 8);
  BOOL v5 = v3 < ((86 * (v0 ^ 0x182)) ^ 0x16EA9A6Cu);
  BOOL v6 = v3 > v4;
  if (v5 != v4 < 0x16EA9836) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v2 + 8LL * ((1131 * v6) ^ v0)))();
}

uint64_t sub_1001A71F0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24)
{
  uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 + 8LL * ((((v25 ^ 0x623) + 757) * (v26 != 0)) ^ v25)) - 4LL);
  LODWORD(a21) = v24;
  *(void *)(v29 - 16_Block_object_dispose((const void *)(v9 - 96), 8) = v27;
  return v30( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24);
}

uint64_t sub_1001A7228()
{
  unsigned int v3 = v0 + 1206103780;
  BOOL v4 = (v0 + 1206103780) < 0xAE56D911;
  unsigned int v5 = ((2 * (((v1 + 1213874021) & 0xB7A5BE7B) + 857320350 + 2 * v0 - 602)) & 0xEEE7F6EC)
     + ((((v1 + 1213874021) & 0xB7A5BE7B) + 857320350 + 2 * v0 - 602) ^ 0xF773FB77);
  if (v4 != v5 - 1226646118 < 0xAE56D911) {
    BOOL v6 = v5 - 1226646118 < 0xAE56D911;
  }
  else {
    BOOL v6 = v5 - 1226646118 > v3;
  }
  return ((uint64_t (*)(BOOL))(*(void *)(v2 + 8LL * ((1011 * v6) ^ (v1 + 96))) - 4LL))(v5 - 1226646118 > v3);
}

uint64_t sub_1001A72E4@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25)
{
  uint64_t v30 = *(void *)(v29 - 152);
  *(void *)(v29 - 152) = v30;
  uint64_t v31 = *(void *)(v30 - 0x295A40E3506E2D9DLL);
  unsigned int v32 = (((v26 ^ 0x623) + 1808788349) & (2 * a9)) + (a9 ^ 0x35E7F7FB) - 904394747;
  *(_BYTE *)(v31 + v32 + 1) = -19;
  *(_BYTE *)(v31 + v32 + 2) = -89;
  *(_BYTE *)(v31 + v32) = -80;
  *(_BYTE *)(v31 + v32 + 3) = -81;
  *v25 += 4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 + 8LL * ((v27 + (v26 ^ 0x7B) - 545) ^ (v27 - 228) ^ v26 ^ 0x623)) - 12LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25);
}

uint64_t sub_1001A74D0()
{
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * (((v0 + 1039) * (v1 != 0)) ^ v0)) - ((v0 - 24) | 0x14u) + 537LL))();
}

uint64_t sub_1001A7508()
{
  unsigned int v3 = *(_DWORD *)(v1 + 12) + 1334657051;
  unsigned int v4 = *(_DWORD *)(v1 + 8) - 384166426;
  BOOL v5 = v3 < v0 + 1334656502;
  BOOL v6 = v3 > v4;
  if (v5 != v4 < ((v0 + 264) ^ 0x4F8D433Eu)) {
    BOOL v6 = v5;
  }
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * ((186 * v6) ^ (v0 + 264))) - 4LL))();
}

uint64_t sub_1001A758C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23)
{
  HIDWORD(a21) = v23;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 + 8LL * ((((v24 ^ 0x721) - 1177) * (v25 != 0)) ^ v24)) - ((v24 - 1556357730) & 0x5CC4225D ^ 0x219LL)))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23);
}

uint64_t sub_1001A75E4()
{
  unsigned int v3 = v0 + 2129151133;
  BOOL v4 = (v0 + 2129151133) < 0xE55B6ECA;
  unsigned int v5 = ((2 * (((v1 - 735) ^ 0x3319A9BF) + 2 * v0)) & 0xDCF6F778) + ((((v1 - 735) ^ 0x3319A9BF) + 2 * v0) ^ 0xEE7B7BBD);
  if (v4 != v5 - 153095411 < 0xE55B6ECA) {
    BOOL v6 = v5 - 153095411 < 0xE55B6ECA;
  }
  else {
    BOOL v6 = v5 - 153095411 > v3;
  }
  return ((uint64_t (*)(BOOL))(*(void *)(v2 + 8LL * (v1 ^ (8 * v6))) - 12LL))(v5 - 153095411 > v3);
}

uint64_t sub_1001A7680@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24)
{
  uint64_t v29 = *(void *)(v28 - 152);
  *(void *)(v28 - 152) = v29;
  uint64_t v30 = *(void *)(v29 - 0x295A40E3506E2D9DLL);
  unsigned int v31 = ((2 * a9) & 0x634EFBDE) + ((v25 - 4) ^ a9 ^ 0xB1A77FF2) + 1314423313;
  *(_BYTE *)(v30 + v31) = 0;
  *(_BYTE *)(v30 + v31 + 1) = 0;
  *(_BYTE *)(v30 + v31 + 2) = 0;
  *(_BYTE *)(v30 + v31 + 3) = 1;
  *v24 += 4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 + 8LL * ((((v25 - 4) ^ (v26 - 485)) + 1149335092) ^ (v25 - 4))) - 4LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24);
}

uint64_t sub_1001A783C()
{
  return (*(uint64_t (**)(void))(v2 + 8LL * ((981 * (((v1 == 0) ^ (v0 - 31)) & 1)) ^ (v0 + 1490))))();
}

uint64_t sub_1001A7884()
{
  int v3 = v0 & 0x4E48AF7F;
  unsigned int v4 = *(_DWORD *)(v1 + 12) - 811595064;
  unsigned int v5 = *(_DWORD *)(v1 + 8) + 1764548751;
  BOOL v6 = v4 < (v3 ^ 0xCFA008A1);
  BOOL v7 = v4 > v5;
  if (v6 != v5 < 0xCFA00AC0) {
    BOOL v7 = v6;
  }
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * (v3 | (8 * (((v3 - 72) ^ v7) & 1u)))) - 12LL))();
}

uint64_t sub_1001A790C@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unsigned int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31)
{
  uint64_t v36 = *(void *)(v35 - 152);
  uint64_t v37 = a31 - ((2 * a31) & 0x3C26F14D02574F54LL) + 0x1E1378A6812BA7AALL;
  *(void *)(v35 - 152) = v36;
  uint64_t v38 = (_BYTE *)(*(void *)(v36 - 0x295A40E3506E2D9DLL)
                + (((unint64_t)a9 << ((v32 ^ 4u) - 28)) & 0x167FF5FBELL)
                + (a9 ^ 0xFFEBFDFFB3FFAFDFLL)
                + 0x1402004C005021LL);
  *uint64_t v38 = HIBYTE(v37) ^ 0x1E;
  v38[1] = BYTE6(v37) ^ 0x13;
  v38[2] = BYTE5(v37) ^ 0x78;
  v38[3] = BYTE4(v37) ^ 0xA6;
  v38[4] = ((a31 - ((2 * (_DWORD)a31) & 0x2574F54) - 2127845462) >> 24) ^ 0x81;
  v38[5] = BYTE2(v37) ^ 0x2B;
  v38[6] = BYTE1(v37) ^ 0xA7;
  v38[7] = (a31 - ((2 * a31) & 0x54) - 86) ^ 0xAA;
  *v31 += 8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v34 + 8LL * (v32 ^ 0x572)) - (((v32 ^ 0x104) - 1140855656) & 0xFF7E9BEB ^ v33)))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28);
}

uint64_t sub_1001A7C90()
{
  *(void *)(v4 - 12_Block_object_dispose((const void *)(v9 - 96), 8) = 0LL;
  return ((uint64_t (*)(void))(*(void *)(v3 + 8LL
                                             * ((((v2 + ((v0 - 178) | 0x311) - 817) ^ (v2 - 12)) * (v1 != 0)) ^ v0))
                            - 8LL))();
}

uint64_t sub_1001A7CE8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29)
{
  uint64_t v35 = ((uint64_t (*)(void))*(&off_100354840 + v30 - 786))();
  ((void (*)(uint64_t, int *, void, void))*(&off_100354840 + v30 - 790))( v35,  (&off_100354840)[v30 - 197] - 1,  *(void *)v29,  *(unsigned int *)(v29 + 12));
  uint64_t v36 = ((uint64_t (*)(void, void))*(&off_100354840 + v30 - 802))(*(void *)(v34 - 176), 0LL);
  *(void *)(v34 - 20_Block_object_dispose((const void *)(v9 - 96), 8) = 0LL;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 + 8LL * (((v36 == 0) * (v31 ^ (v32 + 9))) ^ v30)) - ((v30 + 1499139241) & 0xA6A4F0F7 ^ 0xD6LL)))( v36,  v37,  v38,  v39,  v40,  v41,  v42,  v43,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29);
}

uint64_t sub_1001A7D94( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28)
{
  uint64_t v32 = ((uint64_t (*)(void, uint64_t, void))(&off_100354840)[v28 ^ 0xC5])(*(void *)(v30 - 176), a1, 0LL);
  uint64_t v33 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 + 8LL * ((50 * (v32 != 0)) ^ v28)) - ((((2 * v28) ^ 0x2Au) + 3145632027LL) ^ ((v28 + 712507823) | 0x91068820)));
  *(void *)(v30 - 20_Block_object_dispose((const void *)(v9 - 96), 8) = a1;
  return v33( v32,  v34,  v35,  v36,  v37,  v38,  v39,  v40,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28);
}

uint64_t sub_1001A7E28( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37)
{
  uint64_t v41 = (uint64_t (*)(void))(&off_100354840)[v37 ^ 0x190];
  *(void *)(v39 - 200) = v41;
  uint64_t v42 = (int *)v41();
  return (*(uint64_t (**)(int *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 8LL * (((v42 == *(&off_100354840 + v37 - 366) - 3) * ((v37 + 436) ^ v37 ^ 0x109)) ^ v37)))( v42,  v43,  v44,  v45,  v46,  v47,  v48,  v49,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20);
}

uint64_t sub_1001A7ED4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, int *a28)
{
  return (*(uint64_t (**)(void))(v30
                              + 8LL
                              * (((a28 == (&off_100354840)[(v28 - 263) & 0xA132350C] - 2)
                                * (((v28 - 1149335277) ^ (v29 + 142)) + 731)) ^ (v28 - 263))))();
}

uint64_t sub_1001A7F40( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37)
{
  *(void *)(v42 - 20_Block_object_dispose((const void *)(v9 - 96), 8) = v37;
  v39(a27, a37);
  uint64_t v43 = (*(uint64_t (**)(void))(v42 - 200))();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 8LL * (((v43 == v40) * (((v38 - 391) | 0x80) ^ ((v38 ^ 0x109) + 585))) ^ v38)))( v43,  v44,  v45,  v46,  v47,  v48,  v49,  v50,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20);
}

uint64_t sub_1001A7F90( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28)
{
  return (*(uint64_t (**)(void))(v31 + 8LL * ((((v29 ^ (v30 - 123)) + 1149334897) * (a28 == v28)) ^ v29)))();
}

uint64_t sub_1001A7FD8@<X0>( int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30)
{
  int v34 = a1 + 398;
  v30(a20, a30);
  uint64_t v35 = (*(uint64_t (**)(void))(v33 - 200))();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 8LL * (((v35 == v31) * ((v34 ^ 0x187) + 126 + 15 * (v34 ^ 0x187) + 417)) ^ v34)))( v35,  v36,  v37,  v38,  v39,  v40,  v41,  v42,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11,  a12,  a13);
}

uint64_t sub_1001A802C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28)
{
  return (*(uint64_t (**)(void))(v31 + 8LL * ((((v30 ^ v29) + 1149336561) * (a28 == v28)) ^ v30)))();
}

uint64_t sub_1001A8074@<X0>( int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30)
{
  int v34 = a1 + 373;
  unsigned int v35 = (a1 + 1073855711) & 0xBFFE43A7;
  unsigned __int8 v36 = a1 - 89;
  v30(a20, a30);
  uint64_t v37 = (*(uint64_t (**)(void))(v33 - 200))();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 8LL * (int)(((((v37 == v31) ^ v36) & 1) * (v35 ^ 0x7C)) ^ v34)))( v37,  v38,  v39,  v40,  v41,  v42,  v43,  v44,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11,  a12,  a13);
}

uint64_t sub_1001A80DC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28)
{
  return (*(uint64_t (**)(void))(v30
                              + 8LL
                              * (int)(((((v29 & 0xC701A6DF) - 1149335014) ^ 0xBB7E8F10) * (a28 == v28)) ^ v29 & 0xC701A6DF)))();
}

uint64_t sub_1001A812C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37)
{
  uint64_t v42 = (*(uint64_t (**)(void))(v41 - 200))();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 8LL * ((265 * (((v37 + 26) ^ (v42 == v39)) & 1)) ^ v37)))( v42,  v43,  v44,  v45,  v46,  v47,  v48,  v49,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20);
}

uint64_t sub_1001A8188( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28)
{
  uint64_t v32 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(&off_100354840)[v28 & 0x454F5C0F])(a28, v29, v31 - 128);
  uint64_t v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v30
                                                                                                + 8LL
                                                                                                * ((1454
                                                                                                  * (((v28 + 106) & 0xAF ^ (v32 == 0)) & 1)) ^ v28));
  *(void *)(v31 - 216) = 0x4058876633BACC37LL;
  return v33(v32, v34, v35, v36, v37, v38, v39);
}

uint64_t sub_1001A821C()
{
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(v2 - 160))(24LL);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v1
                                                                                               + 8LL
                                                                                               * (((v3 != 0)
                                                                                                 * ((v0 ^ 0x54A)
                                                                                                  + 1149334879
                                                                                                  + ((v0 - 1574828134) | 0x195C8280)
                                                                                                  + 35)) ^ v0));
  *(void *)(v2 - 216) = 0x4058876633BACC37LL;
  return v4(v3, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1001A82A0(uint64_t a1)
{
  *(void *)(v3 - 200) = a1 + 0x4058876633BACC37LL;
  *(void *)a1 = 0LL;
  *(_DWORD *)(a1 + _Block_object_dispose((const void *)(v9 - 96), 8) = 962475340;
  *(void *)(a1 + 12) = 0LL;
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(v3 - 160))(4096LL);
  *(void *)a1 = v5;
  return (*(uint64_t (**)(void))(v2
                              + 8LL
                              * (int)(((v5 == 0) * (((v1 - 1883917776) & 0x704A4CAF ^ 0xFFFFFB0C) + ((v1 - 1353) | 3))) ^ v1)))();
}

uint64_t sub_1001A8324()
{
  uint64_t v4 = *(uint64_t (**)(void))(v2 + 8LL * (int)(((v1 != 0) * (((v0 + 22546937) ^ 0xBA268021) + 1149334989)) ^ v0));
  *(void *)(v3 - 216) = 0x4058876633BACC37LL;
  return v4();
}

uint64_t sub_1001A8380@<X0>( int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30)
{
  int v34 = a1 | v30;
  (*(void (**)(uint64_t))(v33 - 184))(v31);
  *(void *)(v33 - 216) = 0x4058876633BACC37LL;
  uint64_t v35 = (void (*)(uint64_t))*(&off_100354840 + v34 + 1149334887);
  v35(a17);
  v35(a20);
  return ((uint64_t (*)(void))(*(void *)(v32 + 8LL * ((1779 * (a30 != 0)) ^ (v34 + 1149335576))) - 8LL))();
}

uint64_t sub_1001A88F4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28)
{
  uint64_t v33 = v28();
  int v34 = (uint64_t (*)(uint64_t))(*(void *)(v31 + 8LL * ((v29 + 826) ^ (1767 * (a28 != 0)))) - 4LL);
  *(void *)(v32 - 20_Block_object_dispose((const void *)(v9 - 96), 8) = v30;
  return v34(v33);
}

uint64_t sub_1001A892C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28)
{
  *(void *)(v34 - 20_Block_object_dispose((const void *)(v9 - 96), 8) = v32;
  if (v31 == -45004)
  {
    *(void *)(v34 - 200) = v30;
    *(void *)(v34 - 144) = 0LL;
    *(_DWORD *)(v34 - 132) = 0;
    uint64_t v42 = sub_100187708( dword_1003A364C,  *(void *)v28,  *(_DWORD *)(v28 + 12),  (void *)(v34 - 144),  (_DWORD *)(v34 - 132));
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 + 8LL * ((1378 * ((v42 ^ 0xFEB6BFDF) + 1373627496 + ((2 * (_DWORD)v42) & 0xFD6D7FBE) == 1620485194)) ^ 0x142)) - 12LL))( v42,  v43,  v44,  v45,  v46,  v47,  v48,  v49,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28);
  }

  else if (v31)
  {
    return sub_1001A9AA4(0);
  }

  else
  {
    return ((uint64_t (*)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 + 8LL * ((508 * ((((*(void *)(v34 - 216) == 0x4058876633BACC37LL) ^ 0xDA) & 1) == 0)) ^ 0xDA)) - 12LL))( *(void *)(v34 - 216),  v35,  v36,  v37,  v38,  v39,  v40,  v41,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28);
  }

uint64_t sub_1001A9004(uint64_t a1)
{
  unsigned int v3 = *(_DWORD *)(a1 - 0x4058876633BACC2BLL) - 1638623536;
  unsigned int v4 = *(_DWORD *)(a1 - 0x4058876633BACC2FLL) + 1693868416;
  int v5 = (v3 < 0x9E5496CC) ^ (v4 < ((v1 + 323) ^ 0x9E5494D1));
  BOOL v6 = v3 > v4;
  if (v5) {
    BOOL v6 = v3 < 0x9E5496CC;
  }
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * ((1711 * !v6) ^ v1)) - 12LL))();
}

uint64_t sub_1001A909C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _DWORD *v2 = v3 + 4;
  return ((uint64_t (*)(void))(*(void *)(v6
                                        + 8LL
                                        * ((471 * (((a1 == a2) ^ (v5 + ((v4 + 3) & 0x3F) - 29)) & 1)) ^ (v4 - 572663293) & 0x2222273F))
                            - ((((v4 - 572663293) & 0x2222273F) - 487) | 0x308u)
                            + 826LL))();
}

uint64_t sub_1001A916C()
{
  return ((uint64_t (*)(void))(*(void *)(v1
                                        + 8LL
                                        * (int)(((((v0 - 1140856971) & 0xFF7E9FED) + 1149334965)
                                               * (*(void *)(*(void *)(v2 - 216) - 0x4058876633BACC37LL) == 0LL)) ^ v0))
                            - 8LL))();
}

void sub_1001A91D0()
{
  int v3 = *(void (**)(void *))(v2 - 184);
  void *v0 = 0LL;
  *(_DWORD *)(v1 - 0x4058876633BACC2FLL) = 962475340;
  *(_DWORD *)(v1 - 0x4058876633BACC2BLL) = 0;
  v3(v0);
  JUMPOUT(0x1001A9A98LL);
}

uint64_t sub_1001A9220( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, _DWORD *a33, int a34, int a35)
{
  uint64_t v40 = (*(uint64_t (**)(void))(v39 - 184))(*(void *)(v35 - 0x4058876633BACC37LL));
  *(void *)(v35 - 0x4058876633BACC37LL) = a22;
  *a33 = a35;
  *(void *)(v39 - 16_Block_object_dispose((const void *)(v9 - 96), 8) = v36;
  return ((uint64_t (*)(uint64_t))(*(void *)(v38 + 8LL * (v37 ^ (v37 + 910))) - 12LL))(v40);
}

void sub_1001A92B8()
{
  *(void *)(v1 - 192) = v0;
  JUMPOUT(0x1001A931CLL);
}

uint64_t sub_1001A9330()
{
  return ((uint64_t (*)(void))(*(void *)(v3 + 8LL * ((98 * v2) ^ v0)) - v1 + 894))();
}

uint64_t sub_1001A9358()
{
  return (*(uint64_t (**)(void))(v2 + 8LL * (((v1 + ((v1 - 736) | 0x309) - 1819) * (v0 != 0)) ^ v1)))();
}

uint64_t sub_1001A938C()
{
  return (*(uint64_t (**)(void))(v3 + 8LL * (((v2 + ((v1 - 1304263435) | 0x93C0201) + 6) * (v0 > 7)) ^ v1)))();
}

uint64_t sub_1001A93C8()
{
  return ((uint64_t (*)(void))(*(void *)(v3
                                        + 8LL
}

uint64_t sub_1001A9414()
{
  return (*(uint64_t (**)(void))(v3
                              + 8LL
                              * (int)(((v0 < ((v1 - 906) | 0x100u) - 800) * ((v1 - 1073829579) & 0xFB7FDBA1 ^ (v2 + 4))) | v1)))();
}

uint64_t sub_1001A945C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v6 = a2 + (v2 - 1);
  __int128 v7 = *(_OWORD *)(v6 - 31);
  uint64_t v8 = a1 + (v2 - 1);
  *(_OWORD *)(v8 - 15) = *(_OWORD *)(v6 - 15);
  *(_OWORD *)(v8 - 31) = v7;
  return (*(uint64_t (**)(void))(v5 + 8LL * ((((v2 & 0xFFFFFFE0) != 32LL) * ((v4 + v3 + 345) ^ 0x13F)) ^ (v4 + v3 + 687))))();
}

void sub_1001A94B0()
{
}

uint64_t sub_1001A94BC()
{
  return (*(uint64_t (**)(void))(v2 + 8LL * (((((v0 == 0) ^ v1 ^ 0x51) & 1) * (v1 + 1068)) ^ v1)))();
}

uint64_t sub_1001A94F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  BOOL v8 = v2 > 7 && a1 - a2 >= (unint64_t)(v3 - 84) - 351;
  return ((uint64_t (*)(void))(*(void *)(v6 + 8LL * ((v8 * (v4 + (v3 ^ (v5 + 209)) + 898)) ^ v3)) - 8LL))();
}

uint64_t sub_1001A9530()
{
  return ((uint64_t (*)(void))(*(void *)(v3
}

uint64_t sub_1001A9574@<X0>(_OWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  __int128 v7 = a2[1];
  *a1 = *a2;
  a1[1] = v7;
  return (*(uint64_t (**)(void))(v6 + 8LL
                                   * ((((v2 & 0xFFFFFFE0) == 32LL) * ((v3 - v5 + 1315) ^ 0x3FE)) ^ (v4 + v3 + 773))))();
}

void sub_1001A95B8()
{
}

uint64_t sub_1001A95C8()
{
}

uint64_t sub_1001A9610()
{
  return ((uint64_t (*)(void))(*(void *)(v2
                                        + 8LL
                                        * ((172
}

uint64_t sub_1001A9664@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a1 + v3) = *(void *)(a2 + v3);
  return (*(uint64_t (**)(void))(v5
                              + 8LL
                              * (((((173 * (v4 ^ 0x363) - 873) & v2) - 8LL != v3) * ((173 * (v4 ^ 0x363) - 398) ^ 0x1D4)) ^ (173 * (v4 ^ 0x363)))))();
}

uint64_t sub_1001A96B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a1 + v4) = *(void *)(a2 + v4);
  return (*(uint64_t (**)(void))(v6 + 8LL * (((v3 != v4) * v5) ^ v2)))();
}

uint64_t sub_1001A96D8()
{
}

uint64_t sub_1001A9710@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(_BYTE *)(a1 + v3) = *(_BYTE *)(a2 + v3);
  return ((uint64_t (*)(void))(*(void *)(v6 + 8LL * ((31 * (v3 + 1 != v2)) ^ (v5 + v4 + 1064))) - 12LL))();
}

uint64_t sub_1001A9744()
{
}

uint64_t sub_1001A9780()
{
  return ((uint64_t (*)(void))(*(void *)(v3 + 8LL * (v1 ^ (51 * ((v0 & 0x18) != 0LL))))
                            + 3145632421LL
                            - (v2
                             + ((v1 + 357841540) & 0xEAABC7E4)
                             - 832)
                            - 8))();
}

uint64_t sub_1001A97D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a1 - 7 + (~(_DWORD)v3 + v2)) = *(void *)(a2 - 7 + (~(_DWORD)v3 + v2));
  return ((uint64_t (*)(void))(*(void *)(v5
                                        + 8LL
}

uint64_t sub_1001A9828(uint64_t a1, int a2)
{
  return ((uint64_t (*)(void))(*(void *)(v5
}

uint64_t sub_1001A9894()
{
  uint64_t v3 = *(void *)(v2 - 192);
  *(_DWORD *)(v3 - 0x4058876633BACC2FLL) = (*(_DWORD *)(v2 - 132) ^ 0xFF5FF7FC)
                                         + 972963152
                                         + ((2 * *(_DWORD *)(v2 - 132)) & 0xFEBFEFF8);
  *(_DWORD *)(v3 - 0x4058876633BACC2BLL) = 0;
  uint64_t v4 = vm_deallocate(**(&off_100354840 + v0 - 1149334842), *(void *)(v2 - 144), *(unsigned int *)(v2 - 132));
  uint64_t v5 = (uint64_t (*)(uint64_t))(*(void *)(v1 + 8LL * ((v0 - 1149333734) ^ 0xDB)) - 12LL);
  *(void *)(v2 - 216) = v3;
  return v5(v4);
}

uint64_t sub_1001A98FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned int v6 = v2 - 1;
  *(_BYTE *)(a1 + v6) = *(_BYTE *)(a2 + v6);
  return ((uint64_t (*)(void))(*(void *)(v5 + 8LL * ((60 * (v6 == 0LL)) ^ (v4 + v3 + 1311))) - 8LL))();
}

uint64_t sub_1001A9930()
{
  return ((uint64_t (*)(void))(*(void *)(v2
                                        + 8LL
                                        * (int)((((v0 ^ 0xBB7E8A11) + 1149334879 + ((v0 - 174) | 0x69) + 311)
                                               * (v1 != 0x4058876633BACC37LL)) ^ v0))
                            - 4LL))();
}

uint64_t sub_1001A9990@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(void *)(v3
                                        + 8LL
                                        * ((1310
}

void sub_1001A99E4()
{
  uint64_t v3 = *(void (**)(void))(v2 - 184);
  v3();
  void *v0 = 0LL;
  *(_DWORD *)(v1 - 0x4058876633BACC2FLL) = 962475340;
  *(_DWORD *)(v1 - 0x4058876633BACC2BLL) = 0;
  ((void (*)(void *))v3)(v0);
  JUMPOUT(0x1001A9A34LL);
}

uint64_t sub_1001A9AA4@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * ((216 * (v1 != 0)) ^ (a1 + 94))) - 4LL))();
}

uint64_t sub_1001A9ACC()
{
  return ((uint64_t (*)(void))(*(void *)(v3
                                        + 8LL
}

void sub_1001A9B08()
{
  void *v0 = 0LL;
  v0[1] = 1718823473LL;
  ((void (*)(void *))v1)(v0);
  JUMPOUT(0x1001A9B24LL);
}

void sub_1001A9B64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a2) {
    BOOL v5 = a3 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  int v8 = v5 || a4 == 0 || a5 == 0;
  __asm { BR              X8 }

uint64_t sub_1001A9C1C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, _DWORD *a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, void *a37, uint64_t a38, uint64_t a39, uint64_t a40, _DWORD *a41, void *a42)
{
  *a37 = 0LL;
  *a41 = 0;
  *a42 = 0LL;
  *a21 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v42
                                                                                                  + 8LL * ((37 * (((a40 == 0) ^ 0xB) & 1)) ^ 0x29Bu)))( a1,  a2,  a3,  a4,  a5,  a6,  1449003542LL);
}

uint64_t sub_1001A9D34( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unsigned __int8 *a15)
{
  return (*(uint64_t (**)(void))(v16
                              + 8LL
                              * (int)((((((v15 + 673194573) | 0x8181D102) + 14) ^ (v15 - 496) ^ 0xA9A1F541) * *a15) ^ (v15 - 496))))();
}

uint64_t sub_1001A9D8C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned int *a11, unsigned int *a12, unsigned int *a13, uint64_t (*a14)(void, char *), uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, char a46, int a47, int a48, char a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,int a54,char a55)
{
  if (a40 == -1)
  {
    char v75 = (a7 - 107) & 0x5F;
    char v76 = (a7 - 11) | 0xA0;
    int v77 = a7 - 1449002875;
    uint64_t v78 = a14(*a11, &a55);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned int *, unsigned int *, unsigned int *, uint64_t (*)(void, char *), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 8LL * ((325 * ((((_DWORD)v78 << ((v75 - 97) ^ v76)) & 0xDFAFEFB6) + (v78 ^ 0xEFD7F7DB) == -271058981)) ^ v77)))( v78,  v79,  v80,  v81,  v82,  v83,  1449003542LL,  v84,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20);
  }

  else
  {
    if (a40 == -8)
    {
LABEL_2:
      int v56 = a7 - 1449002875;
      uint64_t v57 = a14(*a13, &a46);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned int *, unsigned int *, unsigned int *, uint64_t (*)(void, char *), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 8LL * ((325 * ((v57 ^ 0x5FDF57DF) + ((2 * (_DWORD)v57) & 0xBFBEAFBE) == 1608472543)) ^ v56)))( v57,  v58,  v59,  v60,  v61,  v62,  1449003542LL,  v63,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20);
    }

    int v65 = a7 - 1449003371;
    int v66 = a7 - 1449003019;
    int v67 = a7 - 1449002875;
    uint64_t v68 = a14(*a12, &a49);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned int *, unsigned int *, unsigned int *, uint64_t (*)(void, char *), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 8LL * (((((2 * (_DWORD)v68) & 0xFFEFFFBE) + (v68 ^ 0xFFF7FFDF) == v65 - 524492) * (v66 ^ 0x34E)) ^ v67)))( v68,  v69,  v70,  v71,  v72,  v73,  1449003542LL,  v74,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20);
  }

void sub_1001AA3C4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, _DWORD *a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, _DWORD *a41)
{
  *a41 = *a32;
  JUMPOUT(0x1001AA440LL);
}

uint64_t sub_1001AA468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, char a7)
{
  return ((uint64_t (*)(void))(*(void *)(v9
                                        + 8LL
}

uint64_t sub_1001AA49C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v11 = v8 ^ 0x43A;
  BOOL v12 = v7 >= a7 + v9 + (v8 ^ 0x43Au) - 1784 + 8;
  return (*(uint64_t (**)(void))(v10 + 8LL * (v12 | (2 * v12) | v11)))();
}

uint64_t sub_1001AA4D0()
{
  return (*(uint64_t (**)(void))(v2
                              + 8LL
                              * ((333
}

uint64_t sub_1001AA520()
{
  return ((uint64_t (*)(void))(*(void *)(v3
                                        + 8LL
                                        * (int)((((2 * ((v1 - 1443234146) & 0xFFA7F5EB ^ (v2 - 163))) ^ 0x7BF)
                                               * (v0 > 0x1F)) ^ v1))
                            - 8LL))();
}

uint64_t sub_1001AA56C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v12 = v9 + (v7 - 1);
  __int128 v13 = *(_OWORD *)(v12 - 31);
  uint64_t v14 = a1 + (v7 - 1);
  *(_OWORD *)(v14 - 15) = *(_OWORD *)(v12 - 15);
  *(_OWORD *)(v14 - 31) = v13;
  return ((uint64_t (*)(void))(*(void *)(v11
                                        + 8LL * ((((v7 & 0xFFFFFFE0) == 32LL) * (v8 - v10 + 1506)) ^ (a7 + v8 + 431)))
                            - 12LL))();
}

void sub_1001AA5C0()
{
}

uint64_t sub_1001AA5CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v10 + 8LL * ((74 * (v9 & ~((v8 - a7 + 1) ^ (v7 == 0)))) ^ v8)))();
}

uint64_t sub_1001AA5F8(uint64_t a1)
{
  BOOL v7 = (unint64_t)(a1 - v3) < 0x20 || v1 < ((((v2 ^ 0x504) - 1451139657) | 0x20948A) ^ (v4 - 8));
  return (*(uint64_t (**)(void))(v5 + 8LL * ((v7 * ((((v2 ^ 0x504) - 933) | 0x110) ^ 0x176)) ^ v2 ^ 0x504)))();
}

uint64_t sub_1001AA658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return ((uint64_t (*)(void))(*(void *)(v11
                                        + 8LL * (((v9 & ~(v8 ^ (v7 < 0x20))) * ((v8 - a7 - 276) ^ (v10 - 1145))) ^ v8))
                            - 8LL))();
}

uint64_t sub_1001AA698(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  __int128 v14 = v10[1];
  *a1 = *v10;
  a1[1] = v14;
}

void sub_1001AA6E0()
{
}

uint64_t sub_1001AA6F0()
{
  return ((uint64_t (*)(void))(*(void *)(v3 + 8LL * ((((46 * (v2 ^ 0x2C4)) ^ 0x6B4) * (v1 != v0)) ^ v2))
                            + 2845963750LL
                            - ((v2 + 8494624) | 0xA9205508)))();
}

uint64_t sub_1001AA74C()
{
  return ((uint64_t (*)(void))(*(void *)(v2
                                        + 8LL
                                        * ((35
}

uint64_t sub_1001AA7A8(uint64_t a1)
{
  *(void *)(a1 + v2) = *(void *)(v5 + v2);
  return ((uint64_t (*)(void))(*(void *)(v6 + 8LL * (((v2 + (v3 ^ 0x379u) - 303 == (v1 & 0xFFFFFFF8)) * v4) ^ v3)) - 8LL))();
}

uint64_t sub_1001AA7E0(uint64_t a1)
{
  *(void *)(a1 + v1) = *(void *)(v6 + v1);
  return ((uint64_t (*)(void))(*(void *)(v7 + 8LL * (((v1 + v4 - 303 == v3) * v5) ^ v2)) - 8LL))();
}

uint64_t sub_1001AA80C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
}

uint64_t sub_1001AA864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  *(_BYTE *)(a1 + v_Block_object_dispose((const void *)(v9 - 96), 8) = *(_BYTE *)(v11 + v8);
  return ((uint64_t (*)(void))(*(void *)(v12 + 8LL * (((v8 + 1 != v7) * v10) ^ (a7 + v9 + 513))) - 8LL))();
}

uint64_t sub_1001AA894()
{
  return ((uint64_t (*)(void))(*(void *)(v4
                                        + 8LL
}

uint64_t sub_1001AA8F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return ((uint64_t (*)(void))(*(void *)(v9
                                        + 8LL * ((76 * (((((v8 ^ 0x76) - a7 - 346) ^ 0xA9A1F5F2) & v7) != 0LL)) ^ v8))
                            - 8LL))();
}

uint64_t sub_1001AA93C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, uint64_t a7, unint64_t a8)
{
  *(void *)(a1 - 7 + (~(_DWORD)v9 + v8)) = *(void *)(v11 - 7 + (~(_DWORD)v9 + v8));
  return ((uint64_t (*)(void))(*(void *)(v12
                                        + 8LL
                                        * (((((30 * ((v10 - 1085378041) & 0x40B18DDE ^ a6)) ^ a8) + v9 != ((((v10 - 1085378041) & 0x40B18DDE) - 328) & v8))
                                          * v13) | (v10 - 1085378041) & 0x40B18DDEu))
                            - 8LL))();
}

uint64_t sub_1001AA9AC(uint64_t a1)
{
  return ((uint64_t (*)(uint64_t, uint64_t))(*(void *)(v5
                                                               + 8LL
                                                               * (int)((((v4 + v3 + 1346502868) & 0xAFBDFDFF ^ (v4 + 221))
                                                                      * (v2 == v1)) ^ v3))
                                                   - 8LL))( a1,  1186LL);
}

uint64_t sub_1001AA9F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v12 = v7 - 1;
  *(_BYTE *)(a1 + v12) = *(_BYTE *)(v10 + v12);
  return ((uint64_t (*)(void))(*(void *)(v11 + 8LL * (((v12 != 0LL) * v9) ^ (a7 + v8 + 513))) - 8LL))();
}

void sub_1001AAA2C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, _DWORD *a27, int a28)
{
  *a27 = a28;
  JUMPOUT(0x1001AA43CLL);
}

void sub_1001AAA5C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, int a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t (*a39)(uint64_t), uint64_t a40, _DWORD *a41, void *a42)
{
  *a41 = a35;
  *a42 = a39(a36);
  JUMPOUT(0x1001AA43CLL);
}

uint64_t sub_1001AAAD4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, _DWORD *a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, void *a37, uint64_t a38, uint64_t a39, uint64_t a40, unsigned int *a41, void *a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49)
{
  *a21 = a36;
  uint64_t v51 = *a41;
  if (a40) {
    BOOL v52 = *a37 == 0LL;
  }
  else {
    BOOL v52 = 1;
  }
  char v56 = v52 || v51 == 0 || *a42 == 0LL || a36 == 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _DWORD *, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *, uint64_t, uint64_t, uint64_t, unsigned int *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v50 + 8LL * ((1138 * (((v49 + a7 - 1) ^ v56) & 1)) ^ (v49 + (int)a7 + 388))) - (a19 ^ 0x38D)))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  *a42,  a26,  a27,  v51,  a29,  a30,  a31,  a32,  a33,  a34,  a35,  a36,  a37,  a38,  a39,  a40,  a41,  a42,  a43,  a44,  a45,  a46,  a47,  a48,  a49);
}

uint64_t sub_1001AAB64( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unsigned __int8 *a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19)
{
  return (*(uint64_t (**)(void))(v19 + 8LL * (((((194 * (a19 ^ 0x387) - 132) | 0x84) - 302) * *a15) ^ a19)))();
}

uint64_t sub_1001AABA0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t (*a24)(unint64_t *, void))
{
  uint64_t v26 = a24(&STACK[0x290], 0LL);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 + 8LL * ((((int)((v26 ^ 0x4DFFB9CF) + 838878769 + ((2 * v26) & 0x9BFF739E)) < 2 * (v24 ^ 0x7F) - 1014) * ((v24 ^ 0x7F) + 1168)) ^ v24)) - 8LL))( v26,  v27,  v28,  v29,  v30,  v31,  v32,  v33,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18);
}

uint64_t sub_1001AAE70( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, void *a38, uint64_t a39, uint64_t a40)
{
  BOOL v43 = *a38 == a40 || *a38 == 0LL;
}

uint64_t sub_1001AAED0@<X0>( uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  int v22 = a8 - 1047706859;
  unsigned int v23 = v22 + ((v19 + 1482895953) & 0xA79CCB7B);
  unsigned int v24 = v22 + 564;
  if (v23 < 0x7FFFFFFE) {
    unsigned int v25 = 1;
  }
  else {
    unsigned int v25 = v24;
  }
  return ((uint64_t (*)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 + 8LL * ((134 * (*(void *)(v20 + 40LL * v25 + 8) == 0LL)) ^ v19)) - 8LL))( *(void *)(v20 + 40LL * v25 + 8),  a1,  a2,  a3,  a4,  a5,  a6,  a7,  STACK[0x290],  v20 + 40LL * v25,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19);
}

uint64_t sub_1001AAF78( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t (*a39)(uint64_t))
{
  int v43 = v39 - 563;
  uint64_t v44 = a39(a28);
  uint64_t *v40 = v44;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 8LL * ((114 * ((((v43 + 14) ^ (v43 - 432) ^ (*(void *)(a38 + 40LL * v41 + 24) == 0LL)) & 1) == 0)) ^ v43)))( v44,  v45,  v46,  v47,  v48,  v49,  v50,  v51,  a9,  a10);
}

uint64_t sub_1001AAFD8(uint64_t a1)
{
  return ((uint64_t (*)(void))(*(void *)(v3
                                        + 8LL
                                        * ((1086 * (v2 & ~((687 * ((((v1 | 0x254) - 722) | 0x100) ^ 0x106)) ^ (a1 == 0)))) ^ (v1 | 0x254)))
                            - 8LL))();
}

uint64_t sub_1001AB070( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, void *a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t (*a39)(uint64_t))
{
  int v42 = v39 + 150;
  void *v40 = a39(a36);
  return ((uint64_t (*)(void))(*(void *)(v41
                                        + 8LL
                                        * ((1086 * ((((687 * (((v42 - 722) | 0x100) ^ 0x106)) ^ (*a27 == 0LL)) & 1) == 0)) ^ v42))
                            - 8LL))();
}

uint64_t sub_1001AB124@<X0>(uint64_t a1@<X8>)
{
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * ((((11 * (v1 ^ 0x146) - 693) ^ 0x2C) * (a1 != 0)) ^ v1)) - 12LL))();
}

void sub_1001AB15C()
{
}

void sub_1001AB1C8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, _DWORD *a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,_DWORD *a61)
{
  *a21 = *a61;
  JUMPOUT(0x1001AB1E8LL);
}

uint64_t sub_1001AB250()
{
  BOOL v3 = v0(24LL) == 0;
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * ((245 * ((v3 ^ v1) & 1)) ^ v1))
}

uint64_t sub_1001AB28C(uint64_t a1)
{
  *(void *)a1 = 0LL;
  *(_DWORD *)(a1 + _Block_object_dispose((const void *)(v9 - 96), 8) = 588232612;
  *(void *)(a1 + 12) = 0LL;
  uint64_t v5 = v2(4096LL);
  *(void *)a1 = v5;
  return ((uint64_t (*)(void))(*(void *)(v3 + 8LL * (((v5 != 0) * ((v1 - 461) ^ 0xC1)) ^ v1)) - (v1 ^ 0x9Au) + 515LL))();
}

uint64_t sub_1001AB2E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(_DWORD *)(v6 + _Block_object_dispose((const void *)(v9 - 96), 8) = v8 + 4096;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 + 8LL * ((1647 * (((v6 == 0) ^ (v7 + 49)) & 1)) ^ v7))
                                                                                                - 8LL))( a1,  a2,  a3,  a4,  a5,  a6,  1449003542LL);
}

uint64_t sub_1001AB368( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  unsigned int v59 = *(_DWORD *)(v56 + 12) - 1142993535;
  unsigned int v60 = ((v57 + 561) ^ 0x2F1) + 192 + *(_DWORD *)(v56 + 8) - 1731226347;
  BOOL v61 = v59 < 0xBBDF4D7D;
  BOOL v62 = v59 > v60;
  if (v61 != v60 < ((49 * ((v57 + 561) ^ 0x2F1)) ^ 0xBBDF4DB9)) {
    BOOL v63 = v61;
  }
  else {
    BOOL v63 = v62;
  }
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v58 + 8LL * ((14 * v63) ^ (v57 + 561))) - 4LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31,  a32,  a33,  a34,  a35,  a36,  a37,  a38,  a39,  a40,  a41,  a42,  a43,  a44,  a45,  a46,  a47,  a48,  a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56);
}

uint64_t sub_1001AB3F8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  LODWORD(a47) = v57;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v60 + 8LL * (((((v58 - 128) | 0xB1) + 226) * (v59 != 0)) ^ v58)) - 8LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31,  a32,  a33,  a34,  a35,  a36,  a37,  a38,  a39,  a40,  a41,  a42,  a43,  a44,  a45,  a46,  a47,  a48,  a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57);
}

uint64_t sub_1001AB430()
{
  unsigned int v3 = ((2 * ((v0 << (((v1 + 11) | 0xC4) + 61)) - 1176465224)) & 0x4E9FEFFC)
     + (((v0 << (((v1 + 11) | 0xC4) + 61)) - 1176465224) ^ 0xA74FF7FF)
     - 1145035424;
  BOOL v4 = v3 < 0x63101D5F;
  BOOL v5 = v3 > v0 + 1073767871;
  else {
    BOOL v6 = v5;
  }
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * ((1403 * v6) ^ (v1 + 678))) - 12LL))();
}

uint64_t sub_1001AB4E4@<X0>(int a1@<W8>)
{
  uint64_t v5 = *(void *)(v3 - 0x58857C7A642A563DLL);
  int v6 = v2 + 49;
  unsigned int v7 = ((2 * a1) & 0x3B67EBFE) + (a1 ^ 0x9DB3F5FF) + 1649150223;
  *(_BYTE *)(v5 + v7 + 242) = 0;
  *(_BYTE *)(v5 + v7 + 243) = 0;
  *(_BYTE *)(v5 + v7 + 244) = 0;
  *(_BYTE *)(v5 + v7 + v6) = 1;
  *v1 += 4;
  return ((uint64_t (*)(void))(*(void *)(v4 + 8LL * ((10 * (v6 ^ 0x87)) ^ 0x6E ^ v6)) - (v6 + 724) + 957LL))();
}

uint64_t sub_1001AB6A4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v60 + 8LL * ((1872 * (a49 != 0x58857C7A642A563DLL)) ^ v59)) - ((v59 - 90) ^ 0x36BLL)))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31,  a32,  a33,  a34,  a35,  a36,  a37,  a38,  a39,  a40,  a41,  a42,  a43,  a44,  a45,  a46,  a47,  a48,  a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59);
}

uint64_t sub_1001AB700( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60)
{
  unsigned int v63 = *(_DWORD *)(v61 - 0x58857C7A642A5631LL) + 28854473;
  unsigned int v64 = 23 * (v60 ^ 0x348) + *(_DWORD *)(v61 - 0x58857C7A642A5635LL) - 559379040;
  BOOL v65 = v63 < (v60 ^ 0x1B84BAAu);
  BOOL v66 = v63 > v64;
  if (v65 != v64 < 0x1B848C5) {
    BOOL v67 = v65;
  }
  else {
    BOOL v67 = v66;
  }
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v62 + 8LL * ((240 * v67) ^ v60)) - 4LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31,  a32,  a33,  a34,  a35,  a36,  a37,  a38,  a39,  a40,  a41,  a42,  a43,  a44,  a45,  a46,  a47,  a48,  a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60);
}

uint64_t sub_1001AB7B0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61)
{
  LODWORD(a53) = v61;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v64 + 8LL * (int)(((v62 ^ 0x3C9) * (v63 == 0x58857C7A642A563DLL)) ^ v62)) - (v62 ^ 0x385LL)))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31,  a32,  a33,  a34,  a35,  a36,  a37,  a38,  a39,  a40,  a41,  a42,  a43,  a44,  a45,  a46,  a47,  a48,  a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61);
}

uint64_t sub_1001AB818(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v10 = ((v8 + 882768354) & (2 * (2 * v7 - 1176465224))) + ((2 * v7 - 1176465224) ^ 0xEF1FF7E6) - 1090463875;
  BOOL v11 = v10 < 0xAE20CF63;
  BOOL v12 = v10 > v7 - 1961814077;
  else {
    BOOL v13 = v12;
  }
  return ((uint64_t (*)(uint64_t))(*(void *)(v9 + 8LL * ((1931 * v13) ^ (a7 + v8 + 976))) - 4LL))(3204503421LL);
}

uint64_t sub_1001AB8C4@<X0>(_DWORD *a1@<X8>)
{
  int v5 = 108 * (v3 ^ 0x598);
  uint64_t v6 = *(void *)(v2 - 0x58857C7A642A563DLL);
  unsigned int v7 = ((2 * v1) & 0x277EFFFE) + (v1 ^ 0x93BF7FFF) + 1816166186;
  *(_BYTE *)(v6 + v7 + 215) = -49;
  *(_BYTE *)(v6 + v7 + v5) = -32;
  *(_BYTE *)(v6 + v7 + 217) = -76;
  *(_BYTE *)(v6 + v7 + 21_Block_object_dispose((const void *)(v9 - 96), 8) = 106;
  *a1 += 4;
  return ((uint64_t (*)(void))(*(void *)(v4 + 8LL * v5) - (((v5 - 148) | 0x430u) ^ 0x478LL)))();
}

uint64_t sub_1001ABAB8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v64 + 8LL * ((67 * (a49 != 0x58857C7A642A563DLL)) ^ (v63 + 1370))) - ((v63 + 1173) ^ 0x569LL)))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31,  a32,  a33,  a34,  a35,  a36,  a37,  a38,  a39,  a40,  a41,  a42,  a43,  a44,  a45,  a46,  a47,  a48,  a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63);
}

#error "1001ABBB0: call analysis failed (funcsize=33)"
uint64_t sub_1001ABBB4@<X0>(int a1@<W8>)
{
  _DWORD *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  unsigned int v7;
  int v5 = v2 - 903;
  uint64_t v6 = *(void *)(v3 - 0x58857C7A642A563DLL);
  unsigned int v7 = (((v5 ^ 0x113) - 272109823) & (2 * a1)) + (a1 ^ 0x77E3F7FB) - 2011428859;
  *(_BYTE *)(v6 + v7) = 0;
  *(_BYTE *)(v6 + v7 + 1) = 0;
  *(_BYTE *)(v6 + v7 + 2) = 0;
  *(_BYTE *)(v6 + v7 + 3) = 1;
  *v1 += 4;
  return ((uint64_t (*)(void))(*(void *)(v4 + 8LL * (((v5 ^ 0x592) + 274) ^ v5 ^ 0x113)) - 12LL))();
}

uint64_t sub_1001ABE74( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, unint64_t a49)
{
  STACK[0x210] = a49;
  return ((uint64_t (*)(void))(*(void *)(v50
                                        + 8LL
                                        * (((a49 == 0x58857C7A642A563DLL) * (v49 - 895 + v49 - 153 - 1189)) ^ (v49 - 731)))
                            - 12LL))();
}

uint64_t sub_1001ABEC4()
{
  STACK[0x218] = v1 - 0x58857C7A642A5631LL;
  unsigned int v3 = *(_DWORD *)(v1 - 0x58857C7A642A5631LL) + 1685400264;
  unsigned int v4 = *(_DWORD *)(v1 - 0x58857C7A642A5635LL) + 1097167644;
  BOOL v5 = v3 < ((v0 + 1022629404) ^ 0x588130F9) + ((v0 + 1022629404) & 0xC30BE7BA);
  BOOL v6 = v3 > v4;
  if (v5 != v4 < 0x64752AC0) {
    BOOL v7 = v5;
  }
  else {
    BOOL v7 = v6;
  }
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * ((1546 * v7) ^ v0)) - 12LL))();
}

uint64_t sub_1001ABF7C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45)
{
  STACK[0x220] = v47;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v48 + 8LL * (v45 ^ (1875 * (v46 != 0x58857C7A642A563DLL)))) - (((v45 + 679576534) | 0x81207062) ^ 0xA9A1F5E6LL)))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31,  a32,  a33,  a34,  a35,  a36,  a37,  a38,  a39,  a40,  a41,  a42,  a43,  a44,  a45);
}

uint64_t sub_1001ABFE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v10 = (((2 * v7 - 1176465224) << ((a7 + v8 - 78) ^ 0xB3)) & 0x5F7F6F7C)
      + ((2 * v7 - 1176465224) ^ 0x2FBFB7BF)
      + 666939289;
  BOOL v11 = v10 < 0x57806758;
  BOOL v12 = v10 > v7 + 879800252;
  else {
    BOOL v13 = v12;
  }
  return ((uint64_t (*)(void))(*(void *)(v9 + 8LL * ((1940 * v13) ^ (a7 + v8 + 204))) - 12LL))();
}

uint64_t sub_1001AC094( uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45)
{
  uint64_t v48 = v45((a2 - 801093567));
  STACK[0x228] = v48;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v47 + 8LL * (((v48 != 0) * (((v46 ^ 0x147) - 129) ^ 0x782)) ^ v46)) - 12LL))( v48,  v49,  v50,  v51,  v52,  v53,  1449003542LL,  v54,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31,  a32,  a33,  a34,  a35,  a36,  a37,  a38,  a39,  a40,  a41,  a42,  a43,  a44,  a45);
}

void sub_1001AC0EC()
{
}

uint64_t sub_1001AC14C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned int a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, int a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40)
{
  uint64_t v41 = a38 + 40 * a18;
  *(_DWORD *)(v41 + 32) = a23;
  *(_DWORD *)(v41 + 36) = a9 / ((v40 + 12250798) & 0x55A31F7F ^ 0x406u);
  *a10 = a40;
  return sub_1001ADAF4();
}

uint64_t sub_1001AC1A8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t (*a22)(void), uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,int a54)
{
  unint64_t v54 = STACK[0x210];
  uint64_t v55 = a22(*(void *)(STACK[0x210] - 0x58857C7A642A563DLL));
  *(void *)(v54 - 0x58857C7A642A563DLL) = STACK[0x228];
  *(_DWORD *)STACK[0x220] = a54;
  return sub_1001AC1F8(v55);
}

uint64_t sub_1001AC1F8@<X0>( _DWORD *a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33)
{
  uint64_t v37 = 49 * (v35 ^ 0x1B7u);
  uint64_t v38 = a33 - ((2 * a33) & 0x3C26F14D02574F54LL) + 0x1E1378A6812BA6B5LL + v37;
  int v39 = (_BYTE *)(((2LL * v33) & 0x16DF9CFF6LL)
                + (v33 ^ 0x5FCDFD07B6FCE7FBLL)
                + *(void *)(v34 - 0x58857C7A642A563DLL)
                - 0x5FCDFD07B6FCE7FBLL);
  _BYTE *v39 = HIBYTE(v38) ^ 0x1E;
  v39[1] = BYTE6(v38) ^ 0x13;
  v39[2] = BYTE5(v38) ^ 0x78;
  v39[3] = BYTE4(v38) ^ 0xA6;
  void v39[4] = ((a33 - ((2 * (_DWORD)a33) & 0x2574F54) - 2127845707 + v37) >> 24) ^ 0x81;
  void v39[5] = ((a33 - ((2 * (_DWORD)a33) & 0x2574F54) - 2127845707 + v37) >> 16) ^ 0x2B;
  v39[6] = ((unsigned __int16)(a33 - ((2 * a33) & 0x4F54) - 22859 + v37) >> 8) ^ 0xA7;
  v39[7] = (a33 - ((2 * a33) & 0x54) - 75 + v37) ^ 0xAA;
  *a1 += 8;
  return ((uint64_t (*)(void))(*(void *)(v36 + 8LL * (int)((v37 + 895) ^ 9 ^ v37)) - 12LL))();
}

uint64_t sub_1001AC32C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t))(v50 + 8LL * ((((((v49 ^ 0x37) - 4) ^ (a49 == 0x58857C7A642A563DLL)) & 1) * (v49 ^ 0x5A1)) ^ v49 ^ 0x237)))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31,  a32,  a33,  a34,  a35,  a36,  a37,  a38,  a39,  a40,  a41,  a42,  a43,  a44,  a45,  a46,  a47,  0LL,  a49);
}

uint64_t sub_1001AC3A0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  int v22 = (v20 - a7 + 199537510) & 0x4A7953FC;
  uint64_t v23 = ((uint64_t (*)(void))(&off_100354840)[v20 - 392])();
  unsigned int v24 = (void (*)(void))(&off_100354840)[v20 - 393];
  STACK[0x230] = v23;
  v24();
  uint64_t v25 = ((uint64_t (*)(uint64_t, void))(&off_100354840)[v20 - 396])(a20, 0LL);
  STACK[0x238] = v25;
  return (*(uint64_t (**)(void))(v21 + 8LL * (((v25 == 0) * (v22 - 784)) ^ v20)))();
}

uint64_t sub_1001AC46C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v22 = ((uint64_t (*)(uint64_t, uint64_t, void))(&off_100354840)[v20 - 885])(a20, a1, 0LL);
  STACK[0x240] = v22;
}

uint64_t sub_1001AC4E4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28)
{
  STACK[0x248] = ((uint64_t (*)(uint64_t, uint64_t))(&off_100354840)[v28 - 224])(a1, v29);
  uint64_t v32 = (int *)((uint64_t (*)(void))*(&off_100354840 + v28 - 878))();
  return ((uint64_t (*)(int *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 + 8LL * (int)(((v32 == (&off_100354840)[(v28 - 409) ^ 0x1D3] - 3) * ((13 * ((v28 - 1179389329) & 0xEFEDFFEE ^ 0xA9A1F5CF)) ^ 0x308)) ^ (v28 - 409))) - 8LL))( v32,  v33,  v34,  v35,  v36,  v37,  v38,  v39,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28);
}

uint64_t sub_1001AC5BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9
                                                                                                  + 8LL * ((((((v7 ^ (v6 + 33)) + 1) ^ (v8 == *(&off_100354840 + v7 - 477) - 2)) & 1) * ((226 * (v7 ^ 0x1E4)) ^ 0x47C)) | v7)))( a1,  a2,  a3,  a4,  a5,  a6,  1449003542LL);
}

uint64_t sub_1001AC620( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, void (*a34)(uint64_t, uint64_t), uint64_t a35, uint64_t a36)
{
  int v40 = (v37 - a7 - 95922269) & 0x5C15AFFF;
  uint64_t v49 = v36;
  a34(a35, a36);
  uint64_t v41 = v38();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 8LL * (((v41 == v49) * (v40 - 112)) ^ v37)))( v41,  v42,  v43,  v44,  v45,  v46,  1449003542LL,  v47,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25);
}

uint64_t sub_1001AC680()
{
  return (*(uint64_t (**)(void))(v3 + 8LL * ((((2 * (v1 ^ 0x3C2)) ^ (v1 + 165)) * (v2 == v0)) ^ v1)))();
}

uint64_t sub_1001AC6B4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, void (*a34)(uint64_t, uint64_t), uint64_t a35, uint64_t a36)
{
  BOOL v39 = v37() == a33;
  return (*(uint64_t (**)(void))(v38
                              + 8LL
                              * (int)((v39 * ((((v36 - 274334827) & 0xB9FBF5EA) + 1449004191) ^ (v36 - 627))) ^ v36)))();
}

uint64_t sub_1001AC714()
{
  return (*(uint64_t (**)(void))(v3 + 8LL * (int)(((v1 ^ 0x19B ^ (v1 + 1851743363) & 0x91A0A5EF) * (v2 == v0)) ^ v1)))();
}

uint64_t sub_1001AC760( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, void (*a34)(uint64_t, uint64_t), uint64_t a35, uint64_t a36)
{
  BOOL v39 = v37() == a33;
  return (*(uint64_t (**)(void))(v38 + 8LL * (int)((v39 * (v36 ^ 0xA9A1F199 ^ (v36 - 339872880) & 0xBDE3FDEF)) ^ v36)))();
}

uint64_t sub_1001AC7CC()
{
  return (*(uint64_t (**)(void))(v3 + 8LL * (int)((((v1 - 1346374152) & 0xF9E1FDFA ^ 0xA9A1F122) * (v2 == v0)) ^ v1)))();
}

uint64_t sub_1001AC80C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, void (*a34)(uint64_t, uint64_t), uint64_t a35, uint64_t a36)
{
  unsigned int v40 = (v37 - 73271805) & 0xADFFFDEF;
  int v41 = v37 - 104989177;
  int v51 = v37;
  uint64_t v42 = v36;
  a34(a35, a36);
  uint64_t v43 = v38();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 8LL * (int)(((((v41 ^ (v43 == v42)) & 1) == 0) * (v40 ^ 0xA9A1F077)) ^ v51)))( v43,  v44,  v45,  v46,  v47,  v48,  1449003542LL,  v49,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23);
}

uint64_t sub_1001AC898( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48)
{
  STACK[0x248] = v50;
  int v52 = a7 + v48 + 542;
  uint64_t v53 = ((uint64_t (*)(unint64_t, uint64_t, uint64_t *))*(&off_100354840 + a7 + v48 + 7))(v50, v49, &a48);
  STACK[0x250] = v53;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v51 + 8LL * (((v53 != 0) * ((v48 + 1449005230) ^ 0x234)) ^ v52)) - 8LL))( v53,  v54,  v55,  v56,  v57,  v58,  1449003542LL,  v59,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31,  a32,  a33,  a34,  a35);
}

uint64_t sub_1001ACB8C()
{
  BOOL v4 = v1(24LL) == 0;
}

uint64_t sub_1001ACBE0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26)
{
  *(void *)a1 = 0LL;
  *(_DWORD *)(a1 + _Block_object_dispose((const void *)(v9 - 96), 8) = 874649185;
  *(void *)(a1 + 12) = 362193104LL;
  uint64_t v29 = v26(4096LL);
  *(void *)a1 = v29;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 + 8LL * (v27 ^ ((v29 == 0) << 6))) - ((v27 ^ 0x5A7u) - 1219) + 348LL))( v29,  v30,  v31,  v32,  v33,  v34,  v35,  v36,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26);
}

uint64_t sub_1001ACC58()
{
  return ((uint64_t (*)(void))(*(void *)(v3
                                        + 8LL * (((((v2 + v1 - 562066854) | 0x21807442) + 1449003545) * (v0 == 0)) ^ v1))
                            - 4LL))();
}

void sub_1001ACCA4()
{
  STACK[0x248] = v0;
  JUMPOUT(0x1001ACCB4LL);
}

uint64_t sub_1001ACD04()
{
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * ((46 * (STACK[0x248] != 0)) ^ (v0 + 908))) - 4LL))();
}

uint64_t sub_1001ACD38()
{
  uint64_t v4 = v1();
  return ((uint64_t (*)(uint64_t))(*(void *)(v3 + 8LL * ((720 * (v2 == -45004)) ^ (v0 + 1449004927)))
                                          - 7 * (v0 ^ 0xA9A1F5C9)
                                          + 241LL))(v4);
}

uint64_t sub_1001ACD94( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,int a56,int a57)
{
  a44 = 0LL;
  a57 = 0;
  a55 = 0x2DA9DB6A38780128LL;
  uint64_t v59 = ((uint64_t (*)(void, void, void, uint64_t *, int *))(&off_100354840)[v57 - 543])( *(&off_100354840)[v57 - 548],  *(void *)(a49 - 0x58857C7A642A563DLL),  *(unsigned int *)(a49 - 0x58857C7A642A5631LL),  &a44,  &a57);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v58 + 8LL * (int)((13 * ((v57 ^ 0xDCDEB7CB ^ v59) + 1941433944 + ((2 * (_DWORD)v59) & 0xB9BD6BDE) != 1620485194)) ^ v57)) - (v57 ^ 0x22CLL)))( v59,  v60,  v61,  v62,  v63,  v64,  v65,  v66,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31,  a32,  a33,  a34,  a35,  a36,  a37,  a38,  a39,  a40,  a41,  a42,  a43,  a44,  a45,  a46,  a47,  a48);
}

uint64_t sub_1001ACE70( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  BOOL v23 = ((uint64_t (*)(void, uint64_t, uint64_t))(&off_100354840)[v20 - 136])( **(&off_100354840 + v20 - 547),  a20,  v21) == (v20 ^ 0xA9A1F7C3) + 1449003542;
  return ((uint64_t (*)(void))(*(void *)(v22 + 8LL * ((1762 * v23) ^ v20)) - 8LL))();
}

uint64_t sub_1001ACEE0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t (*a39)(uint64_t), uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, char a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,int a56,char a57)
{
  int v64 = v58(*v59, *v60, *v61, &a44, &a57);
  unsigned int v65 = (v64 ^ 0x559EB54F) + (v57 ^ 0xFAF7ECD1) + ((2 * v64) & 0xAB3D6A9E);
  if (v65 == 1620485194) {
LABEL_6:
  }
    JUMPOUT(0x1001AD3FCLL);
  if (v65 != 1352049735)
  {
    int v68 = 2052531167 * (((v63 - 108) & 0xAC0229D1 | ~((v63 - 108) | 0xAC0229D1)) ^ 0x96776102);
    *(_DWORD *)(v63 - 104) = -1239432284 - v68;
    *(_DWORD *)(v63 - 100) = (v65 + 1601049945 + (~(2 * v65 + 1590867826) | 0x9FF68CC1)) ^ v68;
    sub_1001950CC((int *)(v63 - 108));
    goto LABEL_6;
  }

  BOOL v66 = a39(24LL) != 0;
  return ((uint64_t (*)(void))(*(void *)(v62 + 8LL * ((350 * v66) ^ 0x91)) - 8LL))();
}

uint64_t sub_1001AD1A8()
{
  return ((uint64_t (*)(void))(*(void *)(v1 + 8LL * ((46 * (STACK[0x248] != 0)) ^ (v0 + 908))) - 4LL))();
}

uint64_t sub_1001AD1D8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,int a56,unsigned int a57)
{
  *(_DWORD *)(v58 + _Block_object_dispose((const void *)(v9 - 96), 8) = v59;
  STACK[0x270] = v57;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v61 + 8LL * ((1222 * (a57 > 0x1000)) ^ v60)) - ((v60 - 855) | 0x11C) + 278LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31,  a32,  a33,  a34,  a35,  a36,  a37,  a38,  a39,  a40,  a41,  a42,  a43,  a44,  a45,  a46,  a47);
}

uint64_t sub_1001AD21C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42)
{
  STACK[0x278] = v43;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 8LL * (int)((((v42 + 480061663) & 0xE362D7EF ^ (v42 + 223450705) & 0xF2AE6FB3 ^ 0x6EF) * (v44 == 0)) | v42)))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31,  a32,  a33,  a34,  a35,  a36,  a37,  a38,  a39,  a40,  a41,  a42);
}

uint64_t sub_1001AD27C@<X0>(int a1@<W8>)
{
  int v4 = 6 * (v1 ^ 0x1A0);
  unsigned int v5 = a1 - 438907778;
  int v6 = ((2 * (2 * v2 - 1749298370)) & 0x6BD6ACCC) + ((2 * v2 - 1749298370) ^ 0x35EB5667);
  else {
    BOOL v7 = v6 - 1343527401 > v5;
  }
  return ((uint64_t (*)(void))(*(void *)(v3 + 8LL * ((35 * !v7) ^ v4)) - 8LL))();
}

uint64_t sub_1001AD340()
{
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * (((v1 ^ 0x289) * (v0 != 0)) ^ v1)) - 8LL))();
}

uint64_t sub_1001AD364( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t (*a22)(uint64_t))
{
  uint64_t v23 = a22(v22);
  return sub_1001ADD04(v23);
}

void sub_1001AD36C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, void (*a22)(uint64_t))
{
}

uint64_t sub_1001AD454@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40
                                                                                          + 8LL
                                                                                          * (((a40 != 0x2DA9DB6A38780128LL)
                                                                                            * ((a5 ^ 0x46D) - 391)) ^ a5))
                                                                              - ((5 * (a5 ^ 0x44u)) ^ 0xFDLL)))( a1,  a2,  a3,  a4,  3932774192LL);
}

uint64_t sub_1001AD4B0()
{
  unsigned int v3 = *(_DWORD *)(v1 - 0x2DA9DB6A3878011CLL) + 2119264585;
  unsigned int v4 = *(_DWORD *)(v1 - 0x2DA9DB6A38780120LL) + 1606808500;
  BOOL v5 = v3 < 0x93E80A15;
  BOOL v6 = v3 > v4;
  if (v5 != v4 < 0x93E80A15) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v2 + 8LL * ((!v6 * (((v0 - 804) | 1) ^ 0x227)) ^ v0)))();
}

uint64_t sub_1001AD548@<X0>(int a1@<W4>, _DWORD *a2@<X8>)
{
  int v6 = v3 - 931;
  uint64_t v7 = *(void *)(v4 - 0x2DA9DB6A38780128LL);
  int v8 = (*(unsigned __int8 *)(v7 + (v2 + a1)) << 24) | (*(unsigned __int8 *)(v7
                                                                                        + (v2 + a1 + 1)) << 16) | (*(unsigned __int8 *)(v7 + (v2 + a1 + 2)) << 8) | *(unsigned __int8 *)(v7 + (v2 + a1 + 3));
  *a2 = (((7 * (v6 ^ 0x56) + 443) | 0x102) ^ 0x3B6) + v2;
  return ((uint64_t (*)(void))(*(void *)(v5 + 8LL * (((8 * (v8 == 0)) | ((v8 == 0) << 10)) ^ v6)) - 8LL))();
}

uint64_t sub_1001AD5DC()
{
  return (*(uint64_t (**)(void))(v2
                              + 8LL
                              * ((((v0 ^ 0x383) + 790 + 5 * (v0 ^ 0x383) + 878) * (v1 == 0x2DA9DB6A38780128LL)) ^ v0)))();
}

uint64_t sub_1001AD620()
{
  unsigned int v4 = v1 + 1435283491 + ((v2 - 594) ^ 0x80);
  BOOL v5 = v0 + 1947739697 > v4;
  return ((uint64_t (*)(void))(*(void *)(v3 + 8LL * (((4 * v5) | (32 * v5)) ^ v2)) - 12LL))();
}

uint64_t sub_1001AD68C@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _DWORD *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38)
{
  *a9 = v38 + 8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v41 + 8LL * (v39 ^ (1786 * (v40 != 0x2DA9DB6A38780128LL)))) - 8LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31,  a32,  a33,  a34,  a35,  a36,  a37,  a38);
}

uint64_t sub_1001AD708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  unsigned int v10 = v8 + v6 + ((49 * (v7 ^ 0x70)) ^ (a5 + 149));
  unsigned int v11 = v10 + 1357771870;
  BOOL v12 = v10 > 0xAF120BA1;
  BOOL v13 = v11 > v5 + 483122685;
  return ((uint64_t (*)(void))(*(void *)(v9 + 8LL * ((!v12 * (v7 + 563)) ^ v7)) - 8LL))();
}

uint64_t sub_1001AD788@<X0>(_DWORD *a1@<X8>)
{
  *a1 = v1;
  return ((uint64_t (*)(void))(*(void *)(v4 + 8LL * ((v2 - 15) ^ (19 * (v3 == 0x2DA9DB6A38780128LL)))) - 8LL))();
}

uint64_t sub_1001AD7CC()
{
  int v4 = v2 + 904;
  BOOL v5 = v1 + 1499873272 > (v0 + 987417187);
}

uint64_t sub_1001AD85C@<X0>( uint64_t a1@<X3>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X7>, _DWORD *a6@<X8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41)
{
  uint64_t v45 = (v41 + 4);
  *a6 = v45;
  uint64_t v46 = (uint64_t (*)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v44 + 8LL * (v42 ^ (84 * (v43 != 0x2DA9DB6A38780128LL)))) - 12LL);
  return v46( v45,  v46,  84LL,  a1,  a2,  a3,  a4,  a5,  a7,  a8,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31,  a32,  a33,  a34,  a35,  a36,  a37,  a38,  a39,  a40,  a41);
}

uint64_t sub_1001AD8E8(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  unsigned int v9 = v7 + a1 + a5;
  unsigned int v10 = ((52 * (v6 ^ 0x19F)) ^ 0xEDD1490A) + v9;
  unsigned int v11 = v5 - 1179700479;
  BOOL v12 = v9 > 0x122EB69D;
  int v13 = (v11 < 0xEDD14962) ^ v12;
  BOOL v14 = v10 > v11;
  if (v13) {
    BOOL v14 = v12;
  }
  return ((uint64_t (*)(void))(*(void *)(v8 + 8LL * ((1976 * !v14) ^ v6)) - ((13 * (v6 ^ 0x194)) ^ 0x79LL)))();
}

void sub_1001AD984( _DWORD *a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, void *a30)
{
  *a1 = v30;
  LODWORD(STACK[0x28C]) = 0;
  *a30 = v32(v31);
  JUMPOUT(0x1001ADA10LL);
}

uint64_t sub_1001ADAEC()
{
  LODWORD(STACK[0x28C]) = v0;
  return sub_1001ADAF4();
}

uint64_t sub_1001ADAF4()
{
  return ((uint64_t (*)(void))(*(void *)(v2
                                        + 8LL
                                        * ((1294 * ((((v0 + 1803733233) ^ (v1 == 0x2DA9DB6A38780128LL)) & 1) == 0)) ^ v0))
}

uint64_t sub_1001ADB44@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(void *)(v2
                                        + 8LL
                                        * (int)(((*(void *)(v1 - 0x2DA9DB6A38780128LL) != 0LL)
                                               * (((a1 & 0x947D377B) - 1449003896) ^ 0xA9A1F5EE)) | a1 & 0x947D377B))
                            - (a1 & 0x947D377B ^ 0x16ELL)))();
}

uint64_t sub_1001ADBAC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, void (*a22)(void), uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49)
{
  void *v49 = 0LL;
  *(_DWORD *)(v51 - 0x2DA9DB6A3878012+[SSVSubscriptionEntitlementsCoordinator setCachedSubscriptionEntitlements:]( &OBJC_CLASS___SSVSubscriptionEntitlementsCoordinator,  "setCachedSubscriptionEntitlements:", 0LL) = 874649185;
  *(_DWORD *)(v51 - 0x2DA9DB6A3878011CLL) = 362193104;
  uint64_t v53 = ((uint64_t (*)(void *))a22)(v49);
  return (*(uint64_t (**)(uint64_t))(v52
                                            + 8LL
                                            * ((241
                                              * ((((v50 + 44) ^ 0xFC ^ (a49 == 0x58857C7A642A563DLL)) & 1) == 0)) ^ (v50 + 1449004682))))(v53);
}

uint64_t sub_1001ADC68@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(void *)(v3
                                        + 8LL
                                        * ((543
                                          * (v1 & ~((a1 - 1449003820) ^ (*(void *)(v2 - 0x58857C7A642A563DLL) == 0LL)))) ^ a1))
                            - 12LL))();
}

void sub_1001ADCB8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, void (*a22)(void))
{
  void *v23 = 0LL;
  *(_DWORD *)(v22 - 0x58857C7A642A5635LL) = 588232612;
  *(_DWORD *)(v22 - 0x58857C7A642A5631LL) = 0;
  JUMPOUT(0x1001ADCFCLL);
}

uint64_t sub_1001ADD04()
{
  return sub_1001ADD0C();
}

uint64_t sub_1001ADD0C()
{
  return v0;
}

void sub_1001ADD40()
{
}

uint64_t sub_1001ADD68( int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42)
{
  uint64_t v45 = v42((a1 - 904615527));
  STACK[0x280] = v45;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 8LL * (((v45 != 0) * (((v43 - 604398084) & 0x240667E7 ^ 0x4E) + v43 - 247)) ^ v43)))( v45,  v46,  v47,  v48,  v49,  v50,  v51,  v52,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31,  a32,  a33,  a34,  a35,  a36,  a37,  a38,  a39,  a40,  a41,  a42);
}

void sub_1001ADDC4()
{
}

uint64_t sub_1001ADE34()
{
  LODWORD(STACK[0x288]) = v2;
  return ((uint64_t (*)(void))(*(void *)(v3 + 8LL * (((18 * (v1 ^ 0x701) - 486) * (v0 == 0)) ^ v1))
                            - ((v1 - 1666) | 0x104u)
                            + 409LL))();
}

uint64_t sub_1001ADE78@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(2845963750LL
                            - (a1 - 1449003963)
                            + *(void *)(v2 + 8LL * ((102 * ((((a1 - 1449003963) ^ (*v1 == 0LL)) & 1) == 0)) ^ a1))
                            - 8))();
}

uint64_t sub_1001ADED8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, void (*a22)(void), uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,int a56,unsigned int a57)
{
  *(void *)uint64_t v59 = 0LL;
  int v65 = v62 + 1449004154;
  *(_DWORD *)(v59 + _Block_object_dispose((const void *)(v9 - 96), 8) = v61;
  *(_DWORD *)(v59 + 12) = v60;
  ((void (*)(uint64_t))a22)(v59);
  uint64_t v57 = ((uint64_t (*)(void, uint64_t, void))(&off_100354840)[v65 - 146])( *(&off_100354840)[v65 ^ 0x241],  a44,  a57);
  return ((uint64_t (*)(uint64_t))(*(void *)(v64
                                                      + 8LL
                                                      * (int)((1322 * (v63 == 0)) ^ (((v65 + 161595838) | 0xA00031C8)
                                                                                   + 1449003787)))
                                          - 3 * ((((v65 + 161595838) | 0xA00031C8) + 1449003787) ^ 0x189)
                                          + 1128LL))(v57);
}

uint64_t sub_1001ADEE4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, unint64_t a48)
{
  *(_DWORD *)(v48 + _Block_object_dispose((const void *)(v9 - 96), 8) = v49;
  STACK[0x258] = v51;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v52 + 8LL * ((310 * (a48 > ((v50 - 819) ^ v50 ^ 0x60Eu ^ 0x12DDuLL))) ^ v50))
                                                                                                - 12LL))( a1,  a2,  a3,  a4,  a5,  a6,  1449003542LL);
}

uint64_t sub_1001ADF38( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38)
{
  STACK[0x260] = v39;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v41 + 8LL * (v38 ^ (13 * (v40 == 0)))) - ((v38 + 1355160522) & 0xAF39E35F ^ 0x216LL)))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31,  a32,  a33,  a34,  a35,  a36,  a37,  a38);
}

uint64_t sub_1001ADF84@<X0>(int a1@<W8>)
{
  int v4 = 75 * ((v1 + 898) ^ 0x660);
  unsigned int v5 = (v4 ^ 0x48B) + 1651051930 + ((2 * (2 * v2 - 1749298370)) & 0xECFDECD4) + ((2 * v2 - 1749298370) ^ 0x767EF66B);
  BOOL v6 = v5 < 0xD8E806FE;
  BOOL v7 = v5 > a1 - 655878402;
  else {
    BOOL v8 = v7;
  }
  return ((uint64_t (*)(void))(*(void *)(v3 + 8LL * (v4 ^ (4 * !v8))) - 8LL))();
}

uint64_t sub_1001AE038( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t (*a22)(uint64_t))
{
  uint64_t v23 = a22(v22);
  return sub_1001AE060(v23);
}

uint64_t sub_1001AE060( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49)
{
  int v49 = a7 + v59 + 235;
  int v50 = (&off_100354840)[v59 ^ (v61 - 8)];
  ((void (*)(uint64_t))v50)(v60);
  ((void (*)(uint64_t))v50)(a35);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v62 + 8LL * ((2030 * (a36 != 0)) ^ v49)) - 8LL))( a36,  v51,  v52,  v53,  v54,  v55,  v56,  v57,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31,  a32,  a33,  a34,  a35,  a36,  a37,  a38,  a39,  a40,  a41,  a42,  a43,  a44,  a45,  a46,  a47,  a48,  a49);
}

void sub_1001AE06C()
{
}

uint64_t sub_1001AE098@<X0>(uint64_t a1@<X8>)
{
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * ((534 * ((((v1 - 986) ^ (a1 == 0)) & 1) == 0)) ^ v1)) - 4LL))();
}

void sub_1001AE0CC( uint64_t a1@<X8>, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31)
{
  *uint64_t v32 = 0LL;
  *a3 = 0LL;
  *(_DWORD *)(a31 + 40LL * a11 + 36) = 0;
  JUMPOUT(0x1001AC194LL);
}

uint64_t sub_1001AE100( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t (*a22)(void), uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, void *a27)
{
  unsigned int v30 = (v27 + 1970598664) & 0x8A8B0F7F;
  uint64_t v31 = a22();
  *a27 = 0LL;
  return ((uint64_t (*)(uint64_t))(*(void *)(v29
                                                      + 8LL
}

uint64_t sub_1001AE15C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38)
{
  uint64_t v42 = v39(v38 + (v40 ^ 0x2FBu) - 1988032109);
  STACK[0x268] = v42;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v41 + 8LL * ((1065 * (((v42 == 0) ^ (15 * (v40 ^ 0xFB) + 1)) & 1)) ^ v40)) - 8LL))( v42,  v43,  v44,  v45,  v46,  v47,  1449003542LL,  v48,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31,  a32,  a33,  a34,  a35,  a36,  a37,  a38);
}

void sub_1001AE1C8()
{
}

uint64_t sub_1001AE220()
{
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * ((148 * (((v0 == 0) ^ (v1 - 63)) & 1)) ^ v1)) - 8LL))();
}

uint64_t sub_1001AE264@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8LL
                              * ((168 * (((*v1 == 0LL) ^ ((a1 & 0x7B ^ (v2 - 57)) + 1)) & 1)) ^ a1 & 0x3EED4B7Bu)))();
}

uint64_t sub_1001AE2A4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, void (*a22)(void), uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, int a33, uint64_t a34, uint64_t a35, uint64_t a36)
{
  *(void *)a34 = 0LL;
  *(_DWORD *)(a34 + _Block_object_dispose((const void *)(v9 - 96), 8) = a33;
  *(_DWORD *)(a34 + 12) = 362193104;
  ((void (*)(uint64_t))a22)(a34);
  uint64_t v36 = (&off_100354840)[v38 ^ (v40 - 8)];
  ((void (*)(uint64_t))v36)(v39);
  ((void (*)(uint64_t))v36)(a35);
  return ((uint64_t (*)(void))(*(void *)(v41 + 8LL * ((2030 * (a36 != 0)) ^ (v38 + 1449003777))) - 8LL))();
}

void sub_1001AE2E4()
{
  qword_1003A2F20 = 142025987 * ((unint64_t)&v0[qword_1003A2F20 + qword_1003A2EF8] ^ 0x9F5D901A2114D895LL);
  qword_1003A2EF8 = qword_1003A2F20;
  __asm { BR              X8 }

uint64_t sub_1001AE3A8()
{
  return ((uint64_t (*)(void))(*(void *)(v1 + 8LL * ((71 * (((*(void *)(v0 + 24) == 0LL) ^ 0xB9) & 1)) ^ 0x18B)) - 4LL))();
}

uint64_t sub_1001AE3DC()
{
  *(_DWORD *)(v0 + 36) = 0;
  *(void *)uint64_t v0 = 0LL;
}

uint64_t sub_1001AE478()
{
  *(void *)(v0 + 4_Block_object_dispose((const void *)(v9 - 96), 8) = 0LL;
  return ((uint64_t (*)(void))(*(void *)(v2
                                        + 8LL
                                        * ((1268
}

uint64_t sub_1001AE4BC()
{
  *(void *)(v0 + 64) = 0LL;
  *(_DWORD *)(v0 + 76) = 0;
  *(void *)(v0 + 40) = 0LL;
  return 0LL;
}

uint64_t sub_1001AE4E8@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(void *)(v2
                                        + 8LL
}

uint64_t sub_1001AE518()
{
  qword_1003A2F08 = 142025987 * ((unint64_t)&v4[qword_1003A2F08 + qword_1003A2EF8] ^ 0x9F5D901A2114D895LL);
  uint64_t v0 = (3 * ((2 * qword_1003A2F08) ^ 0x95));
  char v1 = byte_1002D4D00[byte_1002D49D0[v0] ^ 0x36];
  qword_1003A2EF8 = qword_1003A2F08;
  ((void (*)(void))v3)(**(&off_100354840
  ((void (*)(void))v3)(*(&off_100354840)[((3
                                                                                     * ((qword_1003A2EF8
  return ((uint64_t (*)(void))v3)(**(&off_100354840
                                                             + ((3
}

void sub_1001AE6B4(id a1, void *a2)
{
  qword_1003A2F10 = 142025987 * ((unint64_t)&v3[qword_1003A2EF8 - qword_1003A2F10] ^ 0x9F5D901A2114D895LL);
  qword_1003A2EF8 = qword_1003A2F10;
  uint64_t v2 = ((uint64_t (*)(void *))(&off_100354840)[(unk_1002D4B98 ^ 0xBF) - 13])(a2);
}

uint64_t sub_1001AE7AC()
{
  if (qword_1003A35D8 != -1) {
    dispatch_once(&qword_1003A35D8, &stru_1003549D0);
  }
  dispatch_sync((dispatch_queue_t)qword_1003A35E0, &stru_100354990);
  uint64_t result = dword_1003A35D0;
  if (!dword_1003A35D0)
  {
    syslog(3, "failed to open connection to %s\n", "AppleKeyStore");
    return dword_1003A35D0;
  }

  return result;
}

void sub_1001AE834(id a1)
{
  if (!dword_1003A35D0) {
    dword_1003A35D0 = sub_1001AE898("IOService:/IOResources/AppleKeyStore", "AppleKeyStore");
  }
}

void sub_1001AE870(id a1)
{
  qword_1003A35E0 = (uint64_t)dispatch_queue_create("aks-client-queue", 0LL);
}

uint64_t sub_1001AE898(char *path, const char *a2)
{
  kern_return_t v5;
  CFDictionaryRef v6;
  io_service_t MatchingService;
  io_object_t v8;
  uint64_t result;
  kern_return_t v10;
  io_connect_t connect;
  connect = 0;
  io_service_t v3 = IORegistryEntryFromPath(kIOMasterPortDefault, path);
  if (!v3 || (v4 = v3, unsigned int v5 = IOServiceOpen(v3, mach_task_self_, 0, &connect), IOObjectRelease(v4), v5))
  {
    BOOL v6 = IOServiceMatching(a2);
    MatchingService = IOServiceGetMatchingService(kIOMasterPortDefault, v6);
    if (MatchingService)
    {
      BOOL v8 = MatchingService;
      IOServiceOpen(MatchingService, mach_task_self_, 0, &connect);
      IOObjectRelease(v8);
    }
  }

  uint64_t result = connect;
  if (connect)
  {
    unsigned int v10 = IOConnectCallMethod(connect, 0, 0LL, 0, 0LL, 0LL, 0LL, 0LL, 0LL, 0LL);
    uint64_t result = connect;
    if (v10)
    {
      IOServiceClose(connect);
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_1001AE98C(int a1, uint64_t a2, int a3, unsigned int a4, void *a5, size_t *a6)
{
  uint64_t v12 = 3758097084LL;
  mach_port_t v13 = sub_1001AE7AC();
  if (v13)
  {
    uint64_t v12 = 3758097090LL;
    if (a5 && a6)
    {
      input[0] = a1;
      input[1] = a4;
      input[2] = a2;
      input[3] = a3;
      return IOConnectCallMethod(v13, 0x26u, input, 4u, 0LL, 0LL, 0LL, 0LL, a5, a6);
    }
  }

  else
  {
    fprintf( __stdoutp,  "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n",  "aks",  "",  "",  "",  "aks_auth_token_create",  ":",  1415,  "",  0,  "",  "");
  }

  return v12;
}

uint64_t sub_1001AEABC( mach_port_t a1, int a2, int *a3, uint64_t a4, int a5, _OWORD *a6, void *a7, _DWORD *a8, _DWORD *a9, _DWORD *a10, _DWORD *a11, _DWORD *a12)
{
  int v30 = 1;
  uint64_t v31 = a4;
  int v32 = 16777472;
  int v33 = a5;
  NDR_record_t v34 = NDR_record;
  int v17 = *a3;
  int v35 = a2;
  int v36 = v17;
  int v37 = a5;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(void *)&msg.msgh_voucher_port = 0x4B000000000LL;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }

  uint64_t v19 = mach_msg(&msg, 3, 0x40u, 0xDCu, reply_port, 0, 0);
  uint64_t v20 = v19;
  if ((v19 - 268435458) <= 0xE && ((1 << (v19 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
  }

  else
  {
    if (!(_DWORD)v19)
    {
      if (msg.msgh_id == 71)
      {
        uint64_t v20 = 4294966988LL;
      }

      else if (msg.msgh_id == 1300)
      {
        if ((msg.msgh_bits & 0x80000000) != 0)
        {
          uint64_t v20 = 4294966996LL;
          if (v30 == 2
            && msg.msgh_size == 212
            && !msg.msgh_remote_port
            && HIBYTE(v32) == 1
            && HIWORD(v35) << 16 == 1114112)
          {
            int v21 = v33;
            if (v33 == v47)
            {
              uint64_t v20 = 0LL;
              int v22 = *(_DWORD *)&v34.mig_vers;
              *a3 = v38;
              __int128 v23 = v46;
              a6[6] = v45;
              a6[7] = v23;
              __int128 v24 = v44;
              a6[4] = v43;
              a6[5] = v24;
              __int128 v25 = v40;
              *a6 = v39;
              a6[1] = v25;
              __int128 v26 = v42;
              a6[2] = v41;
              a6[3] = v26;
              *a7 = v31;
              *a8 = v21;
              int v27 = v49;
              *a9 = v48;
              *a10 = v27;
              *a11 = v50;
              *a12 = v22;
              return v20;
            }
          }
        }

        else if (msg.msgh_size == 36)
        {
          uint64_t v20 = 4294966996LL;
          if (HIDWORD(v31))
          {
            if (msg.msgh_remote_port) {
              uint64_t v20 = 4294966996LL;
            }
            else {
              uint64_t v20 = HIDWORD(v31);
            }
          }
        }

        else
        {
          uint64_t v20 = 4294966996LL;
        }
      }

      else
      {
        uint64_t v20 = 4294966995LL;
      }

      mach_msg_destroy(&msg);
      return v20;
    }

    mig_dealloc_reply_port(msg.msgh_local_port);
  }

  return v20;
}

uint64_t sub_1001AED14(mach_port_t a1, unsigned int a2, __int128 *a3)
{
  __int128 v4 = a3[5];
  __int128 v19 = a3[4];
  __int128 v20 = v4;
  __int128 v5 = a3[7];
  __int128 v21 = a3[6];
  __int128 v22 = v5;
  __int128 v6 = a3[1];
  __int128 v15 = *a3;
  __int128 v16 = v6;
  __int128 v7 = a3[3];
  __int128 v17 = a3[2];
  NDR_record_t v13 = NDR_record;
  unsigned int v14 = a2;
  __int128 v18 = v7;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(void *)&msg.msgh_voucher_port = 0x4B100000000LL;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }

  uint64_t v9 = mach_msg(&msg, 3, 0xA4u, 0x2Cu, reply_port, 0, 0);
  uint64_t v10 = v9;
  if ((v9 - 268435458) <= 0xE && ((1 << (v9 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
    return v10;
  }

  if ((_DWORD)v9)
  {
    mig_dealloc_reply_port(msg.msgh_local_port);
    return v10;
  }

  if (msg.msgh_id == 71)
  {
    uint64_t v10 = 4294966988LL;
LABEL_17:
    mach_msg_destroy(&msg);
    return v10;
  }

  if (msg.msgh_id != 1301)
  {
    uint64_t v10 = 4294966995LL;
    goto LABEL_17;
  }

  uint64_t v10 = 4294966996LL;
  if ((msg.msgh_bits & 0x80000000) != 0) {
    goto LABEL_17;
  }
  if (msg.msgh_size != 36) {
    goto LABEL_17;
  }
  if (msg.msgh_remote_port) {
    goto LABEL_17;
  }
  uint64_t v10 = v14;
  if (v14) {
    goto LABEL_17;
  }
  return v10;
}

uint64_t sub_1001AEEA0( mach_port_t a1, int a2, int a3, int a4, _OWORD *a5, uint64_t a6, int a7, _OWORD *a8, void *a9, _DWORD *a10)
{
  int v18 = 1;
  uint64_t v19 = a6;
  int v20 = 16777472;
  int v21 = a7;
  NDR_record_t v22 = NDR_record;
  *(_DWORD *)__int128 v23 = a2;
  *(_DWORD *)&v23[4] = a3;
  *(_DWORD *)&v23[8] = a4;
  *(_OWORD *)&v23[12] = *a5;
  int v24 = a7;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(void *)&msg.msgh_voucher_port = 0x4B200000000LL;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }

  uint64_t v13 = mach_msg(&msg, 3, 0x54u, 0x50u, reply_port, 0, 0);
  uint64_t v14 = v13;
  if ((v13 - 268435458) <= 0xE && ((1 << (v13 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
  }

  else
  {
    if (!(_DWORD)v13)
    {
      if (msg.msgh_id == 71)
      {
        uint64_t v14 = 4294966988LL;
      }

      else if (msg.msgh_id == 1302)
      {
        if ((msg.msgh_bits & 0x80000000) != 0)
        {
          uint64_t v14 = 4294966996LL;
          if (v18 == 1 && msg.msgh_size == 72 && !msg.msgh_remote_port && HIBYTE(v20) == 1)
          {
            int v15 = v21;
            if (v21 == *(_DWORD *)&v23[16])
            {
              uint64_t v14 = 0LL;
              *a8 = *(_OWORD *)v23;
              *a9 = v19;
              *a10 = v15;
              return v14;
            }
          }
        }

        else if (msg.msgh_size == 36)
        {
          uint64_t v14 = 4294966996LL;
          if (HIDWORD(v19))
          {
            if (msg.msgh_remote_port) {
              uint64_t v14 = 4294966996LL;
            }
            else {
              uint64_t v14 = HIDWORD(v19);
            }
          }
        }

        else
        {
          uint64_t v14 = 4294966996LL;
        }
      }

      else
      {
        uint64_t v14 = 4294966995LL;
      }

      mach_msg_destroy(&msg);
      return v14;
    }

    mig_dealloc_reply_port(msg.msgh_local_port);
  }

  return v14;
}

uint64_t sub_1001AF08C(mach_port_t a1, _DWORD *a2, _DWORD *a3, _DWORD *a4, _DWORD *a5)
{
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(void *)&msg.msgh_voucher_port = 0x4B300000000LL;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }

  uint64_t v11 = mach_msg(&msg, 3, 0x18u, 0x3Cu, reply_port, 0, 0);
  uint64_t v12 = v11;
  if ((v11 - 268435458) > 0xE || ((1 << (v11 - 2)) & 0x4003) == 0)
  {
    if ((_DWORD)v11)
    {
      mig_dealloc_reply_port(msg.msgh_local_port);
      return v12;
    }

    if (msg.msgh_id == 71)
    {
      uint64_t v12 = 4294966988LL;
    }

    else if (msg.msgh_id == 1303)
    {
      if ((msg.msgh_bits & 0x80000000) == 0)
      {
        if (msg.msgh_size == 52)
        {
          if (!msg.msgh_remote_port)
          {
            uint64_t v12 = v18;
            if (!v18)
            {
              int v15 = v20;
              *a2 = v19;
              *a3 = v15;
              int v16 = v22;
              *a4 = v21;
              *a5 = v16;
              return v12;
            }

            goto LABEL_23;
          }
        }

        else if (msg.msgh_size == 36)
        {
          if (msg.msgh_remote_port) {
            BOOL v13 = 1;
          }
          else {
            BOOL v13 = v18 == 0;
          }
          if (v13) {
            uint64_t v12 = 4294966996LL;
          }
          else {
            uint64_t v12 = v18;
          }
          goto LABEL_23;
        }
      }

      uint64_t v12 = 4294966996LL;
    }

    else
    {
      uint64_t v12 = 4294966995LL;
    }

void sub_1001AF204(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) - 366490169 * (((a1 | 0x4671CE0E) - a1 + (a1 & 0xB98E31F1)) ^ 0x50DF984A);
  __asm { BR              X10 }

uint64_t sub_1001AF2DC@<X0>( uint64_t a1@<X8>, uint64_t a2, uint64_t a3, unsigned int a4, unint64_t *a5, int a6, uint64_t a7, unsigned int a8)
{
  unsigned int v11 = 1401278017 * (((&a4 | 0xB846F41B) + (~&a4 | 0x47B90BE4)) ^ 0xBC6582FD);
  a4 = 157505327 - v11;
  a6 = (v8 + 159) ^ v11;
  a5 = &STACK[0x353E30ECE087130A];
  a8 = v11 - 996931722;
  a7 = v9;
  uint64_t v12 = ((uint64_t (*)(unsigned int *))(*(void *)(a1 + 8LL * (int)(v8 & 0xCD9F5880)) - 8LL))(&a4);
  return ((uint64_t (*)(uint64_t))(*(void *)(v10
                                                      + 8LL
                                                      * ((598 * (*(_DWORD *)(v9 - 0x7DE3BD1438CBE37ALL) == 774154701)) | v8))
                                          - 12LL))(v12);
}

void sub_1001AF3BC(_DWORD *a1@<X8>)
{
  unsigned int v3 = *v1 - v2 - ((2 * (*v1 - v2) - 1681751972) & 0xBD3E0E8A) - 1400879245;
  *__int128 v4 = (HIBYTE(v3) ^ 0xDE) - ((2 * (HIBYTE(v3) ^ 0xDE)) & 0xEC) + 118;
  v4[1] = (BYTE2(v3) ^ 0x9F) - ((2 * (BYTE2(v3) ^ 0x9F)) & 0xEC) + 118;
  v4[2] = (BYTE1(v3) ^ 7) - ((2 * (BYTE1(v3) ^ 7)) & 0xEC) + 118;
  v4[3] = v3 ^ 0x33;
  v1[5] = *a1;
}

void sub_1001AF480()
{
  v0[1] = 31090337 * (((v0 | 0x69A0C507) - (v0 & 0x69A0C507)) ^ 0xAE21A54E) + 1655392376;
  sub_10029C578(v0);
  __asm { BR              X8 }

uint64_t sub_1001AF560( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t *a17, int a18, unsigned int a19)
{
  a19 = 3673
      - (((&a17 ^ 0x9B346CF1 | 0x497732E5)
        - (&a17 ^ 0x9B346CF1)
  a17 = &STACK[0x17731A7695F8FE7D];
  sub_10025A9A0((uint64_t)&a17);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 + 8LL * ((2264 * (a18 == v22)) ^ v20)) - 4LL))( v23,  v24,  v25,  v26,  v27,  v28,  v29,  v30,  a9,  a10);
}

uint64_t sub_1001AF60C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t *a17, uint64_t a18, uint64_t a19, unsigned int a20, int a21, int a22)
{
  unsigned int v25 = 366490169 * ((2 * (&a17 & 0x7215F290) - &a17 + 233442664) ^ 0x1B445B2C);
  LODWORD(a19) = v25 + 1313;
  a18 = a13;
  LODWORD(a17) = ((2 * v22) & 0x7D3F7FA4) + (v22 ^ 0x3E9FBFD2) - 209780736 + v25;
  sub_1001AF204((uint64_t)&a17);
  unsigned int v26 = 1314530549 * (((&a17 | 0x84781B0E) - (&a17 & 0x84781B0E)) ^ 0x35719DC0);
  a17 = &STACK[0x26BE0E4707FD38D8];
  a20 = -587734544 - v26;
  a22 = v26 ^ 0x4A7654E4;
  LODWORD(a1_Block_object_dispose((const void *)(v9 - 96), 8) = v26 ^ 0x6A279D57;
  a19 = a13;
  uint64_t v27 = sub_10029CA6C((uint64_t)&a17);
}

uint64_t sub_1001AF78C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, char *a16, unint64_t *a17, char *a18, char *a19, uint64_t a20, unint64_t *a21)
{
  a17 = &STACK[0x3C06360CF86149A0];
  LODWORD(a1_Block_object_dispose((const void *)(v9 - 96), 8) = (v24 - 439) ^ (1401278017
                              * ((&a17 & 0x4F686A02 | ~(&a17 | 0x4F686A02)) ^ 0xB4B4E31A));
  a19 = a16;
  a21 = &STACK[0x5DF7F15B2688CC8E];
  ((void (*)(unint64_t **))(*(void *)(v25 + 8LL * (int)(v24 - 1306)) - 12LL))(&a17);
  a18 = a16;
  a19 = &a15;
  ((void (*)(unint64_t **))(*(void *)(v25 + 8LL * (v24 ^ 0x689)) - 8LL))(&a17);
  LODWORD(a19) = v24 - 476588053 * (&a17 ^ 0xBDFD0443) - 1203;
  a18 = a16;
  uint64_t v26 = sub_10023EFA0((uint64_t)&a17);
  return ((uint64_t (*)(uint64_t))(*(void *)(v21
                                                      + 8LL
}

uint64_t sub_1001AF8EC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15)
{
  return ((uint64_t (*)(void))(*(void *)(v16 + 8LL * ((5670 * (a15 == 0)) ^ v15 & 0x47FBu)) - 12LL))();
}

uint64_t sub_1001AF958@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return ((uint64_t (*)(void))(*(void *)(v5
                                        + 8LL
}

uint64_t sub_1001AF99C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return ((uint64_t (*)(void))(*(void *)(v12 + 8LL * ((v11 | 0x400) ^ (3998 * (a11 != 0))))
                            - (((v11 | 0x400) - 934262374) & 0x37AFB6FF)
                            + 1689LL))();
}

uint64_t sub_1001AFA08( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  uint64_t v20 = (*(uint64_t (**)(void))(v19 + 8LL * (v17 - 1519)))((((v17 ^ 0x610) + 2387) ^ 0xFFFFF69E) & a16 ^ v18);
  return ((uint64_t (*)(uint64_t))(*(void *)(v16
                                                      + 8LL
                                                      * ((2930
}

uint64_t sub_1001AFA74( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  unsigned int v12 = v11 - (((((a10 + 704908909) & 0xD5FBEE2F) + 984) ^ 0x448F42) & (2 * v11)) + 2245471;
  return ((uint64_t (*)(void))(*(void *)(v10
                                        + 8LL
                                        * ((231
                                          * (((2 * v12) & 0xBDDF7ED8 ^ 0x440698) + (v12 ^ 0x5ECDFC33) - 134521152 != 1458249260)) ^ a10))
                            - 4LL))();
}

uint64_t sub_1001AFB44()
{
  return ((uint64_t (*)(void))(*(void *)(v3
                                        + 8LL
}

uint64_t sub_1001AFB9C(uint64_t a1, int a2)
{
  return ((uint64_t (*)(void))(*(void *)(v5
                                        + 8LL
                                        * (((v3 - a1 >= (((a2 - 276) | 0x100u) ^ 0x1A8uLL))
                                          * ((a2 - v4 - 1164) ^ (v2 + 1646))) ^ a2))
                            - 8LL))();
}

uint64_t sub_1001AFBE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return ((uint64_t (*)(uint64_t, uint64_t))(*(void *)(v8
                                                               + 8LL
                                                               * (int)((((((a6 + 915447696) | 0xC8410481) ^ (v6 + 2535))
                                                                       + ((a6 - 134) | 0xA09))
                                                                      * (v7 > 0x1F)) ^ a6))
                                                   - 8LL))( a1,  2702196883LL);
}

uint64_t sub_1001AFC38(uint64_t a1, int a2, int a3)
{
  unsigned int v10 = v8 + v7 + a2;
  uint64_t v11 = v4 + v10;
  __int128 v12 = *(_OWORD *)(v11 - 31);
  uint64_t v13 = a1 + v10;
  *(_OWORD *)(v13 - 15) = *(_OWORD *)(v11 - 15);
  *(_OWORD *)(v13 - 31) = v12;
  return ((uint64_t (*)(void))(*(void *)(v9 + 8LL * ((3614 * ((v6 & 0xFFFFFFE0) == 32)) ^ (v5 + a3 + 2497)))
}

void sub_1001AFC98()
{
}

uint64_t sub_1001AFCA4()
{
  v5[1] = v4;
  unsigned int v6 = v0 + 366490169 * ((((2 * v5) | 0x9BBD4C82) - v5 - 1306437185) ^ 0x5B70F005) + 400;
  v1(v5);
  return (v2 - 774154701);
}

void sub_1001AFF20(uint64_t a1)
{
  int v1 = 1401278017 * (((a1 | 0x7E048411) - a1 + (a1 & 0x81FB7BEE)) ^ 0x7A27F2F6);
  __asm { BR              X11 }

uint64_t sub_1001AFFDC@<X0>(unsigned int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * (int)((8172 * (*v1 != 0)) ^ a1)) - (a1 ^ 0xFC8LL)))();
}

uint64_t sub_1001B0020@<X0>(int a1@<W8>)
{
  int v5 = a1 - 2699;
  uint64_t v6 = v3(*v4);
}

uint64_t sub_1001B0060()
{
  uint64_t result = v2(*v3);
  *int v1 = 0;
  *(_DWORD *)uint64_t v0 = 0;
  *(void *)(v0 + 344) = 0LL;
  *(void *)(v0 + 352) = 0LL;
  *(_DWORD *)(v0 + 360) = 22870354;
  *(_DWORD *)(v0 + 56) = 453317453;
  return result;
}

uint64_t sub_1001B00A0()
{
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * (((*v1 != 0) * ((10 * (v0 ^ 0x4CD)) ^ 0x623)) ^ v0)) - 8LL))();
}

void sub_1001B00D4(uint64_t a1)
{
  uint64_t v2 = qword_1003A2F38 - (void)&v4 + qword_1003A30E0;
  qword_1003A2F38 = 1437825391 * v2 + 0x5F228405B95CAEDDLL;
  qword_1003A30E0 = 1437825391 * (v2 ^ 0x35414C93324FFE73LL);
  int v3 = (void (*)(char *, void (*)()))*(&off_10035D440
  LOBYTE(v2) = 111 * ((qword_1003A30E0 - (111 * v2 - 35)) ^ 0x73);
  v3( (char *)*(&off_10035D440 + (v2 ^ byte_1002DEA60[byte_1002DA0F0[v2] ^ 0xCB])
            + 5)
  - 8,
    sub_10029C73C);
  __asm { BR              X11 }

uint64_t sub_1001B01FC()
{
  BOOL v3 = *(void *)(*(void *)(v2 + 512) - 4LL) == 0LL;
  return ((uint64_t (*)(void))(*(void *)(v1 + 8LL * (v3 | (2 * v3) | v0)) - 4LL))();
}

  ;
}

uint64_t sub_1001B0230@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(uint64_t))(v2 + 8LL * (a1 - 1556)))(v1);
}

void sub_1001B024C(uint64_t a1)
{
  int v1 = 1697562443 * ((((2 * a1) | 0x8DDECFB0) - a1 - 1190094808) ^ 0x917F5F5C);
  int v2 = *(_DWORD *)(a1 + 40) ^ v1;
  uint64_t v3 = *(void *)a1;
  int v4 = *(_DWORD *)(a1 + 20) + v1;
  sub_10029C314(v7, 0, 0x128uLL);
  if (v3) {
    BOOL v5 = ((2 * v4) & 0xD73059FA ^ 0xD23040FA) + (v4 ^ 0x16C48C80) == 1805135133;
  }
  else {
    BOOL v5 = 1;
  }
  int v6 = v5;
  __asm { BR              X9 }

uint64_t sub_1001B0398@<X0>(int a1@<W8>)
{
  LODWORD(STACK[0x710]) = v2;
  STACK[0x330] = v5;
  int v6 = ((a1 - 582) | 0x21C) + v4;
  LODWORD(STACK[0x720]) = v3;
  LODWORD(STACK[0x718]) = v6;
  STACK[0x6F8] = v1;
  LODWORD(STACK[0x728]) = 1841561934;
  return v7(2342507265LL, 255634940LL);
}

uint64_t sub_1001B0444(uint64_t a1, uint64_t a2)
{
  STACK[0x700] = (unint64_t)&STACK[0xCB0];
  unint64_t v3 = STACK[0x6F8];
  *(_BYTE *)(STACK[0x700] + 22) = 81;
  return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t))(v3
                                                                      + 8LL
                                                                      * (((8 * (v2 == 1580)) | ((v2 == 1580) << 6)) ^ v2)))( a1,  a2,  (v2 - 1083),  2112814707LL);
}

void sub_1001B04E0()
{
}

uint64_t sub_1001B04F4(uint64_t a1, uint64_t a2, int a3)
{
  unsigned int v8 = (v3 ^ v7) % 0xF;
  uint64_t v9 = (unsigned __int16)(7 * (v5 & 0xF ^ 3)
                        + 5782
                        - 960 * ((unsigned __int16)((8739 * (7 * (v5 & 0xF ^ 3u) + 5782)) >> 16) >> 7));
  unint64_t v10 = STACK[0x700];
  char v11 = STACK[0xCC6];
  LOBYTE(STACK[0xCC6]) = *(_BYTE *)(STACK[0x700] + v9);
  int v12 = STACK[0x728];
  unsigned int v13 = (((v12 ^ 0x853521C9) % 0xE) ^ 0xAE675AEF) + 2 * ((v12 ^ 0x853521C9) % 0xE);
  LODWORD(STACK[0x70C]) = v13 + 19;
  *(_BYTE *)(v10 + v9) = v11;
  char v14 = STACK[0xCCD];
  uint64_t v15 = (unsigned __int16)(7 * v8
                         + 5789
                         - 960
                         * ((unsigned __int16)((8739 * (unsigned __int16)(7 * v8 + 5789)) >> 16) >> 7));
  LOBYTE(STACK[0xCCD]) = *(_BYTE *)(v10 + v15);
  *(_BYTE *)(v10 + v15) = v14;
  uint64_t v16 = (unsigned __int16)(7 * v13 - 26085) % 0x3C0u;
  char v17 = STACK[0xCD4];
  LOBYTE(STACK[0xCD4]) = *(_BYTE *)(v10 + v16);
  *(_BYTE *)(v10 + v16) = v17;
  LODWORD(v16) = (v6 ^ v4) + (v5 ^ 0x137B5F53);
  LOBYTE(v9) = STACK[0xCDB];
  int v18 = v6 ^ v3 ^ 0x26B66902;
  uint64_t v19 = (unsigned __int16)(7 * ((v6 ^ v4) % 0xD)
                         + 5803
                         - 960
                         * ((unsigned __int16)((8739 * (unsigned __int16)(7 * ((v6 ^ v4) % 0xD) + 5803)) >> 16) >> 7));
  int v20 = ((2 * (v18 - v16)) & 0xFB2CFFFA) + ((v18 - v16) ^ 0xFD967FFD);
  int v21 = (v3 ^ v12 ^ 0xEA047448) - v20;
  LOBYTE(STACK[0xCDB]) = *(_BYTE *)(v10 + v19);
  *(_BYTE *)(v10 + v19) = v9;
  uint64_t v23 = (unsigned __int16)(7 * (((int)v16 + 1297094960) % 0xCu)
                         + 5810
                         - 960
                         * ((unsigned __int16)((8739
  char v24 = STACK[0xCE2];
  int v25 = STACK[0x70C] & 0x13;
  LOBYTE(STACK[0xCE2]) = *(_BYTE *)(v10 + v23);
  *(_BYTE *)(v10 + v23) = v24;
  uint64_t v26 = (unsigned __int16)(7 * ((v21 - 40468483) % 0xBu)
                         + 5817
                         - 960
                         * ((unsigned __int16)((8739
                                              * (unsigned __int16)(7 * ((v21 - 40468483) % 0xBu) + 5817)) >> 16) >> 7));
  int v27 = v16 - v21;
  LOBYTE(v25) = *(_BYTE *)(v10 + ((5 * (v25 | (44 - v13) & 0xFFFFFFF3)) & 0x39LL));
  LOBYTE(STACK[0xCE9]) = *(_BYTE *)(v10 + v26);
  *(_BYTE *)(v10 + v26) = v25;
  LOBYTE(v25) = STACK[0xCF0];
  uint64_t v28 = (unsigned __int16)(7 * (v22 % 0xA)
                         + 5824
                         - 960
                         * ((unsigned __int16)((8739 * (unsigned __int16)(7 * (v22 % 0xA) + 5824)) >> 16) >> 7));
  LOBYTE(STACK[0xCF0]) = *(_BYTE *)(v10 + v28);
  LODWORD(v26) = ((2 * v22) & 0x37B23E66 ^ 0x16B02462) + (v22 ^ 0x14814D8E);
  *(_BYTE *)(v10 + v2_Block_object_dispose((const void *)(v9 - 96), 8) = v25;
  LODWORD(v2_Block_object_dispose((const void *)(v9 - 96), 8) = v27 + v26;
  int v29 = v27 + v26 + 688821778;
  uint64_t v30 = (unsigned __int16)(7 * ((v20 + 40468483) % 9u)
                         + 5831
                         - 960
                         * ((unsigned __int16)((8739
                                              * (unsigned __int16)(7 * ((v20 + 40468483) % 9u) + 5831)) >> 16) >> 7));
  char v31 = STACK[0xCF7];
  unsigned int v32 = v20 + v27 - v26 - 302237591;
  LOWORD(v27) = 24778 - (v20 - v26);
  LOBYTE(STACK[0xCF7]) = *(_BYTE *)(v10 + v30);
  unsigned int v33 = v21 + v26 - 326155080 + v29;
  *(_BYTE *)(v10 + v30) = v31;
  uint64_t v34 = (unsigned __int16)(7 * (v27 & 7) + 5838 - 960
                                                * ((unsigned __int16)((8739 * (7 * (v27 & 7u) + 5838)) >> 16) >> 7));
  char v35 = STACK[0xCFE];
  LOBYTE(STACK[0xCFE]) = *(_BYTE *)(v10 + v34);
  *(_BYTE *)(v10 + v34) = v35;
  LODWORD(v34) = ((int)v28 - 1277134336) % 6u;
  int v36 = v28 + 1779924962;
  LOWORD(v26) = (v28 + 32738) ^ v27;
  uint64_t v37 = (unsigned __int16)(7 * (v33 % 7)
                         + 5845
                         - 960
                         * ((unsigned __int16)((8739 * (unsigned __int16)(7 * (v33 % 7) + 5845)) >> 16) >> 7));
  char v38 = STACK[0xD05];
  LOBYTE(STACK[0xD05]) = *(_BYTE *)(v10 + v37);
  *(_BYTE *)(v10 + v37) = v38;
  char v39 = STACK[0xD0C];
  uint64_t v40 = (unsigned __int16)(7 * v34
                         + 5852
                         - 960
                         * ((unsigned __int16)((8739 * (unsigned __int16)(7 * v34 + 5852)) >> 16) >> 7));
  LOBYTE(STACK[0xD0C]) = *(_BYTE *)(v10 + v40);
  unint64_t v41 = STACK[0x6F8];
  *(_BYTE *)(v10 + v40) = v39;
  uint64_t v42 = (unsigned __int16)(7 * (v32 % 5)
                         + 5859
                         - 960
                         * ((unsigned __int16)((8739 * (unsigned __int16)(7 * (v32 % 5) + 5859)) >> 16) >> 7));
  char v43 = STACK[0xD13];
  LOBYTE(STACK[0xD13]) = *(_BYTE *)(v10 + v42);
  *(_BYTE *)(v10 + v42) = v43;
  LODWORD(v42) = ((((unsigned __int16)v36 ^ (unsigned __int16)v27)
                 - 15309
  LODWORD(v26) = 7 * (((v36 ^ v27) + 51) & 3 ^ 2) + 5866;
  LOBYTE(v40) = STACK[0xD1A];
  LOBYTE(STACK[0xD1A]) = *(_BYTE *)(v10 + v26 % v42);
  *(_BYTE *)(v10 + (unsigned __int16)(v26 - 960 * ((unsigned __int16)((8739 * v26) >> 16) >> 7))) = v40;
  LOBYTE(v42) = STACK[0xD21];
  uint64_t v44 = (unsigned __int16)(7 * (((v33 ^ 0x4B49A8FB) - v36) % 3)
                         + 5873
                         - 960
                         * ((unsigned __int16)((8739
  LOBYTE(STACK[0xD21]) = *(_BYTE *)(v10 + v44);
  *(_BYTE *)(v10 + v44) = v42;
  uint64_t v45 = 127LL;
  char v46 = STACK[0xD28];
  LOBYTE(STACK[0xD28]) = *(_BYTE *)(v10 + v45);
  *(_BYTE *)(v10 + v45) = v46;
  int v47 = 7 * (*(_BYTE *)(STACK[0x700] + 22) ^ ((a3 - 112) | 1) ^ 0x22) + 6244;
  *(_BYTE *)(STACK[0x700] + (unsigned __int16)(v47 - 960 * ((unsigned __int16)((17477 * v47) >> 16) >> 8))) = 81;
  return (*(uint64_t (**)(void))(v41 + 8LL * a3))();
}

uint64_t sub_1001B0BBC@<X0>(int a1@<W3>, int a2@<W6>, int a3@<W8>)
{
  *(_BYTE *)(STACK[0x700] + (unsigned __int16)((a3 - 1388) * a2 + 22648) % 0x3C0u) = a2 - ((2 * a2 + 28) & 0xA2) - 33;
  return (*(uint64_t (**)(void))(v3 + 8LL * ((158 * (a2 + 1 != a1 + 16)) ^ a3)))();
}

uint64_t sub_1001B0C28@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W8>)
{
  int v8 = 2 * (a3 - 177);
  int v9 = v8 ^ 0xB56;
  uint64_t v10 = (7 * (a1 & 0xF ^ 0xAu) + 5782) % (((unsigned __int16)v8 ^ 0xA44) & 0xFFFEu);
  char v11 = STACK[0xCC6];
  unint64_t v12 = STACK[0x700];
  unsigned int v13 = v7 + a2 - 1;
  LOBYTE(STACK[0xCC6]) = *(_BYTE *)(STACK[0x700] + v10);
  *(_BYTE *)(v12 + v10) = v11;
  char v14 = STACK[0xCCD];
  uint64_t v15 = (unsigned __int16)(7 * (v13 % 0xF)
                         + 5789
  LOBYTE(STACK[0xCCD]) = *(_BYTE *)(v12 + v15);
  *(_BYTE *)(v12 + v15) = v14;
  LODWORD(v15) = 7 * ((v3 ^ 0x31AEDC49u) % 0xE)
               + 5796
               - ((8739 * (unsigned __int16)(7 * ((v3 ^ 0x31AEDC49u) % 0xE) + 5796)) >> 23) * v6;
  int v16 = ~(_WORD)v15 & 0x633D | 0xDEBF0000 | v15 & 0x33D;
  unsigned int v17 = ~(_WORD)v15 & 0x6319 | 0xDEBF0000 | v15 & 0x319;
  uint64_t v18 = (unsigned __int16)(7 * ((v3 ^ 0x31AEDC49u) % 0xE)
                         + 5796
                         - ((unsigned __int16)((8739
  LOBYTE(v17) = *(_BYTE *)(v12 + (v16 ^ v17));
  LOBYTE(STACK[0xCD4]) = *(_BYTE *)(v12 + v18);
  *(_BYTE *)(v12 + v1_Block_object_dispose((const void *)(v9 - 96), 8) = v17;
  uint64_t v19 = (unsigned __int16)(7 * ((v4 ^ 0xC04519E1) % 0xD)
                         + 5803
                         - ((unsigned __int16)((8739
  char v20 = STACK[0xCDB];
  LOBYTE(STACK[0xCDB]) = *(_BYTE *)(v12 + v19);
  int v21 = a2 + 938206311;
  int v22 = v3 ^ 0x31AEDC49 ^ v13;
  unsigned int v23 = (a1 ^ 0x29253CBA) + (v4 ^ 0xC04519E1);
  unsigned int v24 = v13 + (v4 ^ 0xC04519E1) - 2 * (v21 & (v4 ^ 0x404519E1));
  unsigned int v25 = ((2 * (v24 - v23)) & 0xFEFD3DE6) + ((v24 - v23) ^ 0xFF7E9EF3);
  *(_BYTE *)(v12 + v19) = v20;
  unsigned int v26 = ((v24 + 833543241 - ((2 * v24) & 0x635DB892)) ^ v3) - 595635374;
  unsigned int v27 = v22 - v25 - 8478989 - ((2 * (v22 - v25 - 8478989)) & 0xFDF9CF24) + 2130503570;
  v23 += 1297094960;
  char v28 = STACK[0xCE2];
  uint64_t v29 = (unsigned __int16)(7 * (v23 % 0xC)
                         + 5810
  LOBYTE(STACK[0xCE2]) = *(_BYTE *)(v12 + v29);
  *(_BYTE *)(v12 + v29) = v28;
  uint64_t v30 = (unsigned __int16)(7 * ((v27 ^ 0x7EFCE792) % 0xB)
                         + 5817
                         - ((unsigned __int16)((8739
  char v31 = STACK[0xCE9];
  LOBYTE(STACK[0xCE9]) = *(_BYTE *)(v12 + v30);
  unsigned int v32 = ((2 * (v23 + (v27 ^ 0x8103186D) + 1)) & 0xAF7FDB7C) + ((v23 + (v27 ^ 0x8103186D) + 1) ^ 0x57BFEDBE);
  *(_BYTE *)(v12 + v30) = v31;
  uint64_t v33 = (unsigned __int16)(7 * (v26 % 0xA)
                         + 5824
  char v34 = STACK[0xCF0];
  LOBYTE(STACK[0xCF0]) = *(_BYTE *)(v12 + v33);
  int v35 = (v27 ^ 0x7EFCE792) & (v26 ^ 0xF5852BD);
  unsigned int v36 = v26 ^ 0xF1A4B52F ^ v27;
  int v37 = ((2 * (v25 + (v26 ^ 0x70A7AD42) - 1463717040 + v32)) & 0x7FFFFF2E)
      + ((v25 + (v26 ^ 0x70A7AD42) - 1463717040 + v32) ^ 0x3FFFFF97);
  *(_BYTE *)(v12 + v33) = v34;
  uint64_t v38 = (unsigned __int16)(7 * ((v25 + 8478989) % 9)
                         + 5831
  char v39 = STACK[0xCF7];
  LODWORD(v33) = (v26 ^ 0x8F5852BD) - 1472196030 + v32;
  int v40 = ((2 * v33) & 0xCFF9F5B4) + (v33 ^ 0xE7FCFADA);
  int v41 = v36 + 2 * v35 + v40 + 402851110 - 1134894403 - ((2 * (v36 + 2 * v35 + v40 + 402851110)) & 0x78B5C57A);
  LOBYTE(STACK[0xCF7]) = *(_BYTE *)(v12 + v38);
  LOBYTE(v32) = v37 + v32 - 2 * v37 - ((2 * (v37 + v32 - 2 * v37) - 78) & 0x44) - 5;
  *(_BYTE *)(v12 + v3_Block_object_dispose((const void *)(v9 - 96), 8) = v39;
  LOBYTE(v25) = STACK[0xCFE];
  uint64_t v42 = (unsigned __int16)(7 * (v32 & 7 ^ 2)
                         + 5838
                         - ((unsigned __int16)((8739 * (7 * (v32 & 7 ^ 2) + 5838)) >> 16) >> 7) * v6);
  LOBYTE(STACK[0xCFE]) = *(_BYTE *)(v12 + v42);
  *(_BYTE *)(v12 + v42) = v25;
  LOBYTE(v25) = STACK[0xD05];
  uint64_t v43 = (unsigned __int16)(7 * ((v41 ^ 0xBC5AE2BD) % 7)
                         + 5845
                         - ((unsigned __int16)((8739
  LOBYTE(STACK[0xD05]) = *(_BYTE *)(v12 + v43);
  *(_BYTE *)(v12 + v43) = v25;
  LOBYTE(v43) = STACK[0xD0C];
  uint64_t v44 = (unsigned __int16)(7 * ((v40 + 402851110) % 6u)
                         + 5852
                         - ((unsigned __int16)((8739
  LOBYTE(STACK[0xD0C]) = *(_BYTE *)(v12 + v44);
  *(_BYTE *)(v12 + v44) = v43;
  uint64_t v45 = (unsigned __int16)(7 * ((v37 - 1073741719) % 5u)
                         + 5859
                         - ((unsigned __int16)((8739
  LOBYTE(v32) = (v32 ^ (v40 + 42)) + 121;
  LOBYTE(v43) = STACK[0xD13];
  LOBYTE(STACK[0xD13]) = *(_BYTE *)(v12 + v45);
  *(_BYTE *)(v12 + v45) = v43;
  LODWORD(v45) = ((v41 ^ 0xF7134A46) - v40 + 835056888) % 3;
  uint64_t v46 = (unsigned __int16)(7 * (v32 & 3) + 5866 - ((unsigned __int16)((8739 * (7 * (v32 & 3) + 5866)) >> 16) >> 7) * v6);
  LOBYTE(v41) = STACK[0xD1A];
  LOBYTE(STACK[0xD1A]) = *(_BYTE *)(v12 + v46);
  *(_BYTE *)(v12 + v46) = v41;
  LOBYTE(v46) = STACK[0xD21];
  uint64_t v47 = (unsigned __int16)(7 * v45
                         + 5873
  LOBYTE(STACK[0xD21]) = *(_BYTE *)(v12 + v47);
  *(_BYTE *)(v12 + v47) = v46;
  char v48 = STACK[0xD28];
  BOOL v49 = ((v32 ^ v33) & 1) == 0;
  uint64_t v50 = 127LL;
  if (v49) {
    uint64_t v50 = 120LL;
  }
  LOBYTE(STACK[0xD28]) = *(_BYTE *)(v12 + v50);
  *(_BYTE *)(v12 + v50) = v48;
  char v51 = (16 * *(_BYTE *)(STACK[0x700] + (unsigned __int16)(6244 - 6 * v6))) ^ 0x10;
  unsigned int v52 = 135
  LOBYTE(v52) = *((_BYTE *)*(&off_10035D440 + v9 - 661)
                + (v52 - 944 * ((4549754 * (unint64_t)v52) >> 32)));
  int v53 = 7
      * (v52 ^ 0x4C ^ ((((v52 ^ 0x8D) >> 3) ^ ((v52 ^ 0x8D) >> 1))
                                                       - ((2
                                                         * (((v52 ^ 0x8D) >> 3) ^ ((v52 ^ 0x8D) >> 1))) & 0xC3)
                                                       - 31))
      + 5782;
  *(_BYTE *)(STACK[0x700] + (unsigned __int16)(3983 - ((unsigned __int16)((3983 * v5) >> 16) >> 9) * v6)) = *(_BYTE *)(STACK[0x700] + (unsigned __int16)(v53 - ((unsigned __int16)((8739 * v53) >> 16) >> 7) * v6));
  return (*(uint64_t (**)(uint64_t, uint64_t))(STACK[0x6F8] + 8LL * (v9 ^ 0x610)))(944LL, 141LL);
}

void sub_1001B1478()
{
}

uint64_t sub_1001B1480( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, unint64_t a7)
{
  STACK[0x590] = a7;
  int v10 = 7 * ((a5 + 2622) >> 4) + 6244;
  unint64_t v11 = STACK[0x700];
  char v12 = (16
       * *(_BYTE *)(STACK[0x700]
                  + (unsigned __int16)(v10 - 960 * ((unsigned __int16)((17477 * v10) >> 16) >> 8)))) ^ 0x10;
  unsigned int v13 = 135
      * (*(unsigned __int8 *)(STACK[0x700]
  LOBYTE(v13) = *(_BYTE *)(a7 + (v13 - 944 * ((4549754 * (unint64_t)v13) >> 32)));
  int v14 = 7 * (((-67 * (v13 ^ 0xE1)) ^ ~(4 * ((-67 * (v13 ^ 0xE1)) ^ (40 * (v13 ^ 0x21))))) >> 4) + 5782;
  unsigned int v15 = v7 - a5 + 8 * a5;
  unsigned int v16 = v14 - 960 * ((8739 * v14) >> 23);
  if (v15 >= 0xFFFFFC40) {
    v15 += 960;
  }
  char v17 = (16 * *(_BYTE *)(v11 + (unsigned __int16)v16)) ^ 0x10;
  *(_BYTE *)(v11 + v15) = v17 - ((2 * v17) & 0xBF) + 81;
  return (*(uint64_t (**)(void))(v9
                              + 8LL
                              * ((7
                                * (a5 + (~v15 & 0xC6B53499 | v15 & 0x99) * (~v15 & 0x5067DFA9 | v15 & 0x3A9) - 97052098 > 0xFF)) ^ v8)))();
}

uint64_t sub_1001B1618( __int16 a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  int v13 = 7 * ((v8 - 470) & ((unsigned __int16)((a8 + 3626) & 0xFFF0) >> 4)) + v9;
  int v14 = 7 * (((_BYTE)a8 + 10) & 0xF) + v9;
  LOBYTE(v13) = (16 * *(_BYTE *)(STACK[0x700] + (unsigned __int16)(v13 - (unsigned __int16)v13 / 0x3C0u * v10))) ^ 0x10;
  LOBYTE(v13) = (v13 - ((2 * v13) & 0xBF) + 81) ^ *(_BYTE *)(STACK[0x700]
                                                           + (unsigned __int16)(v14
  int v15 = *(unsigned __int8 *)(a7
                           + (unsigned __int16)((v13 ^ 0xF) * a1
                                              + 6750
                                              - (unsigned __int16)((v13 ^ 0xF) * a1 + 6750)
                                              / 0x3B0u
                                              * a2)) ^ (v13 - ((2 * v13) & 0xC3) - 31) ^ 0xDB;
  *(_BYTE *)(STACK[0x700] + (unsigned __int16)(7 * a8 - 13765 - (unsigned __int16)(7 * a8 - 13765) / 0x3C0u * v10)) = *(_BYTE *)(STACK[0x700] + (unsigned __int16)(7 * v15 + a6 - ((unsigned __int16)(((7 * v15 + a6) * v11) >> 16) >> 7) * v10));
  return (*(uint64_t (**)(void))(v12 + 8LL * ((3028 * (a8 == 1617122005)) ^ v8)))();
}

uint64_t sub_1001B1758@<X0>(int a1@<W4>, uint64_t a2@<X6>, int a3@<W8>)
{
  unsigned int v5 = 135
     * (((a3 ^ 0xB2) - 94) ^ *(unsigned __int8 *)(STACK[0x700]
                                                                 + (unsigned __int16)(7 * v3
                                                                                    + 20368
                                                                                    - 960
  LOBYTE(v5) = *(_BYTE *)(a2 + (v5 - 944 * ((4549754 * (unint64_t)v5) >> 32)));
  *(_BYTE *)(STACK[0x700]
           + (unsigned __int16)(7 * v3
                              + 17946
                              - 960
                              * ((unsigned __int16)(((unsigned __int16)(7 * v3 + 17946) * a1) >> 16) >> 9))) = ((v5 ^ 0xE1) + 98) ^ ((~(_BYTE)v5 << 7) | 0x49) ^ (8 * ((v5 ^ 0xE1) + 98));
  return (*(uint64_t (**)(void))(v4 + 8LL * ((1439 * (v3 == 291558299)) ^ a3)))();
}

uint64_t sub_1001B1830(int a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v13 = *(_BYTE *)(a7 + (v7 ^ v11) * v10 - (v7 ^ v11) * v10 / 0x3B0 * a1);
  char v14 = v13 & 0x78 ^ 0x18 | v13 & 0x78 ^ 0x60;
  int v15 = 7
      * ((v13 ^ (((v14 - ((((v9 - 80) & 0xBF) + 77) & (2 * v14)) - 68) ^ v7)
                                - ((2 * ((v14 - ((((v9 - 80) & 0xBF) + 77) & (2 * v14)) - 68) ^ v7)) & 0xC2)
                                - 31)) ^ 0xC3)
      + 5782;
  *(_BYTE *)(STACK[0x700] + 7 * a4 - 140244925 - (7 * a4 - 140244925) / 0x3C0u * v_Block_object_dispose((const void *)(v9 - 96), 8) = *(_BYTE *)(STACK[0x700]
                                                                                                + (unsigned __int16)(v15 - ((unsigned __int16)((8739 * v15) >> 16) >> 7) * v8));
  return ((uint64_t (*)(void))(*(void *)(v12 + 8LL * ((99 * (a4 == 1860735794)) ^ v9)) - 8LL))();
}

uint64_t sub_1001B195C()
{
  BOOL v2 = LODWORD(STACK[0x720]) != LODWORD(STACK[0x718]);
  LODWORD(STACK[0x720]) = -207442122;
  LODWORD(STACK[0x728]) = 883691638;
  unint64_t v3 = (v0 - 1260959908) & 0x4B28B5AE;
  uint64_t v4 = *(void *)(v1 + 8LL * (((v0 ^ 0xDE8) * v2) ^ v0));
  STACK[0x718] = v3;
  LODWORD(STACK[0x70C]) = 983493256;
  return ((uint64_t (*)(void))(v4 - (v3 ^ 0x422)))();
}

uint64_t sub_1001B19F8()
{
  unsigned int v1 = LODWORD(STACK[0x710]) + 1204850478;
  unsigned int v2 = (-2109510243 * *(unsigned __int8 *)STACK[0x598]
  unsigned int v3 = (((v2 % 0x101) ^ v2) + 1070473962) ^ LODWORD(STACK[0x728]);
  unsigned int v4 = ((2 * v3) & 0xFA5291B0 ^ 0xF8029080) + (v3 ^ 0x1A886BE);
  unsigned int v5 = (v4 - 277124776) ^ 0xA0503851;
  int v6 = (198411806 - v4) & 0x10002040;
  int v7 = (v4 + 338459105) & 0x10002040;
  unsigned int v8 = 1113758868 - v4;
  HIDWORD(v9) = v4 + 1870358872;
  LODWORD(v9) = v4 - 277124776;
  int v10 = (LODWORD(STACK[0x728]) ^ 0x7C81CE66) - (v4 - 277124776);
  unsigned int v11 = (v4 - 277124776) ^ 0x8E53D72A;
  int v12 = ((v11 + (v9 >> 31)) ^ (1113758868 - v4)) + v10;
  unsigned int v13 = (v5 & 0xF10DA82A ^ 0xD10C0000) + (v5 & 0xF10DA82A ^ 0x2001A82A) - ((v6 + v7) | 0x4058B15F);
  unsigned int v14 = (v12 ^ 0xA6E151A8) + v10;
  unsigned int v15 = v13 + v11 + (v12 ^ 0xA6E151A8) - 2 * v13;
  unsigned int v16 = (v8 - ((2 * v8) & 0xCCE5436C) - 428695114) ^ v12 ^ 0x4093F01E;
  HIDWORD(v9) = v12 ^ 0x26E151A8;
  LODWORD(v9) = ~v12;
  int v17 = (((v9 >> 31) + 1598753077 - v15) ^ v16) - v14;
  unsigned int v18 = ((2 * v17) & 0x89622112 ^ 0x88622112) + (v17 ^ 0x13888870);
  unsigned int v19 = v18 - 1152454793;
  int v20 = v18 - ((2 * v18 + 1990057710) & 0x547DC520) - 443690489;
  unsigned int v21 = v16 - v19;
  HIDWORD(v9) = v20 ^ 0x2A3EE290;
  LODWORD(v9) = v19;
  unsigned int v22 = v14 + (v20 ^ 0xD5C11D6F) + 1;
  int v23 = (v21 - (v20 ^ (v15 - ((2 * v15 + 1097461142) & 0x547DC520) - 889988773)) + (v9 >> 31)) ^ v22;
  BOOL v24 = v1 > 0xB368BC2C;
  if (v1 < 0xB368BC2B) {
    BOOL v24 = 1;
  }
  LODWORD(STACK[0x728]) = v22 ^ 0x18B681B0 ^ (v23 - 2 * ((v23 + 749963932) & 0x64374FD7 ^ v23 & 1) + 283826802);
  return ((uint64_t (*)(uint64_t, uint64_t))(*(void *)(STACK[0x6F8]
                                                               + 8LL * ((2950 * !v24) ^ ((v0 ^ 0xC72) - 2062)))
                                                   - 12LL))( 1417528608LL,  268443712LL);
}

void sub_1001B1DC4()
{
}

uint64_t sub_1001B1DD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  unsigned int v6 = LODWORD(STACK[0x710]) - 1322953315;
  BOOL v7 = v6 < 0x1CBD829A;
  if (v6 >= 0x1CBD829A) {
    BOOL v7 = v6 > 0x1CBD829B;
  }
  return (*(uint64_t (**)(void))(STACK[0x6F8] + 8LL * ((234 * v7) ^ (a6 + 1066))))();
}

void sub_1001B20C8()
{
}

uint64_t sub_1001B20DC()
{
  LODWORD(STACK[0x70C]) = ((((v1 + 1681344012) ^ v0) + 1598753077) ^ 0x5DC1DAAB)
                        - 281137282
                        + ((2 * (((v1 + 1681344012) ^ v0) + 1598753077)) & 0xBB83B556);
  unsigned int v3 = LODWORD(STACK[0x710]) - 1026617604;
  int v4 = *(unsigned __int8 *)STACK[0x598];
  STACK[0x718] = (v1 - 1436);
  unsigned int v5 = (v4 * (v1 - 2109512749) - ((75946810 * v4 + 569646290) & 0x5015FCF8) + 2030374117) ^ 0xC7FE994;
  unsigned int v6 = (LODWORD(STACK[0x720]) ^ 0x820E87E3) - 836634093 + ((v5 % 0x101) ^ v5) + 2;
  unsigned int v7 = (v6 - 94364246 - ((2 * v6) & 0xF4C03B54)) ^ 0xB24DC3BA;
  unsigned int v8 = v7 - ((2 * v7 - 649501600) & 0xEC03EDC2) - 492394223;
  int v9 = LODWORD(STACK[0x720]) ^ 0xBF08EFD ^ v8;
  unsigned int v10 = (v8 ^ 0x89FE091E) + 1210965521;
  unsigned int v11 = (v8 ^ 0x89FE091E) + 836634093;
  HIDWORD(v12) = v8 ^ 0x7601F6E1;
  LODWORD(v12) = v8;
  int v13 = (((v12 >> 31) + v9) ^ v11) + v10;
  int v14 = (v13 ^ v2) + v9;
  int v15 = (v11 - ((2 * v11) & 0x114F8314) - 2002271862) ^ v13 ^ 0x2E469022;
  unsigned int v16 = (v13 ^ v2) + v10;
  HIDWORD(v12) = v13 ^ 0x26E151A8;
  LODWORD(v12) = ~v13;
  int v17 = (((v12 >> 31) - v14) ^ v15) - v16;
  int v18 = v17 ^ v14;
  HIDWORD(v12) = v17 ^ 0x573998F9;
  LODWORD(v12) = v17;
  int v19 = (v15 + (v17 ^ 0xA8C66706) + 2 + (v12 >> 31) + (v18 ^ 0x573998F9) + ((2 * v18) ^ 0x518CCE0D)) ^ ((v17 ^ 0xA8C66706) + v16 + 1);
  unsigned int v20 = v19 - ((2 * v19 + 1499927864) & 0xD3D6CD54) + 379515206;
  BOOL v21 = v3 < 0x2E673BF9 || v3 > 0x2E673BFA;
  LODWORD(STACK[0x720]) = v18 ^ 0x4323864F ^ v20;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(void *)(STACK[0x6F8] + 8LL * ((477 * !v21) ^ (v1 - 716))) - 12LL))( 1463392505LL,  778517497LL);
}

void sub_1001B2458()
{
}

uint64_t sub_1001B2468()
{
  int v2 = STACK[0x718] + 2126;
  LODWORD(STACK[0x5A0]) = LODWORD(STACK[0x710]) + 2035694390;
  LODWORD(STACK[0x3C8]) = 146168948;
  LODWORD(STACK[0x5A4]) = 252132387;
  LODWORD(STACK[0x3B8]) = -1870285459;
  LODWORD(STACK[0x344]) = 1873571740;
  LODWORD(STACK[0x36C]) = -1811287135;
  LODWORD(STACK[0x39C]) = -920315253;
  LODWORD(STACK[0x38C]) = -1282714548;
  LODWORD(STACK[0x370]) = 1045169164;
  LODWORD(STACK[0x33C]) = -322342672;
  LODWORD(STACK[0x34C]) = -796657520;
  LODWORD(STACK[0x340]) = 1653484856;
  LODWORD(STACK[0x364]) = 531693315;
  LODWORD(STACK[0x3B4]) = 60280086;
  LODWORD(STACK[0x394]) = 1103460941;
  LODWORD(STACK[0x378]) = -1054135890;
  LODWORD(STACK[0x3BC]) = 1053261178;
  LODWORD(STACK[0x35C]) = -377000106;
  LODWORD(STACK[0x348]) = -869899977;
  LODWORD(STACK[0x3B0]) = -917493159;
  LODWORD(STACK[0x350]) = -2044450126;
  LODWORD(STACK[0x3A4]) = -227661952;
  LODWORD(STACK[0x360]) = -1488657288;
  LODWORD(STACK[0x338]) = -162846980;
  LODWORD(STACK[0x398]) = -1923743000;
  LODWORD(STACK[0x358]) = -1274248737;
  LODWORD(STACK[0x368]) = 485727466;
  LODWORD(STACK[0x37C]) = -782296389;
  LODWORD(STACK[0x3A0]) = 442149969;
  LODWORD(STACK[0x374]) = -1559823133;
  LODWORD(STACK[0x354]) = -2046046697;
  LODWORD(STACK[0x3AC]) = 1837065704;
  LODWORD(STACK[0x390]) = -635252150;
  LODWORD(STACK[0x3A8]) = 1375294217;
  LODWORD(STACK[0x380]) = 734227087;
  LODWORD(STACK[0x3DC]) = 52;
  int v3 = 15 * (v2 ^ 0xCC2) + (LODWORD(STACK[0x728]) ^ 0x7C81CE66) - LODWORD(STACK[0x70C]) - 1404368836;
  unsigned int v4 = ((((v2 - 1116) | 0x302) ^ 0xFFBED4DC) & (2 * v3)) + (v3 ^ 0xFFDF6FFF);
  unsigned int v5 = (v4 + 2134017) & 0xA0B4F6CB;
  unsigned int v6 = ((2 * (v0 + 1435648628)) & 0xF8EF7BEC ^ 0x60CD4A88) + ((v0 + 1435648628) ^ 0xCF195AB3);
  int v7 = v4 - ((2 * v4 + 921736442) & 0x3A317042) - 124714338;
  unsigned int v8 = (LODWORD(STACK[0x70C]) - 1291848233 + v5 + (v5 ^ 0xA0B4F6CB) + (v1 ^ 0xD5B96F0F)) ^ v7;
  unsigned int v9 = (v7 ^ 0x1D18B821) + v6 + 59261450 - ((2 * ((v7 ^ 0x1D18B821) + v6 + 59261450)) & 0xA9567D74) - 726974790;
  unsigned int v10 = (((v8 ^ 0x356127EF) + (v8 ^ 0x1D18B821) + 1) ^ 0xFFFFFFFE) + (v8 ^ 0x1D18B821);
  unsigned int v11 = (uint64_t (*)(void))(*(void *)(STACK[0x6F8] + 8LL * (v2 ^ 0xFE)) - 12LL);
  LODWORD(STACK[0x3C4]) = 0;
  return v11( (((935767404 - v6) | (v6 + 1211716243)) & 0x4BD15AB3)
         - 1835846507
         + ((v10 - 247342356 - ((2 * v10) & 0xE283B5D8)) ^ v9 ^ 0x25EAE456)
         + (v9 & 0x7204A2A ^ 0xFCFFBFFF)
         + (v9 & 0x7204A2A ^ 0xFBDFF5D5)
         + ((2 * (((v10 - 247342356 - ((2 * v10) & 0xE283B5D8)) ^ 0xF141DAEC) + 80921574)) & 0xDAD996D6)
         + ((((v10 - 247342356 - ((2 * v10) & 0xE283B5D8)) ^ 0xF141DAEC) + 80921574) ^ 0x6D6CCB6B)
         + 2);
}

uint64_t sub_1001B2AC8(int a1, uint64_t a2, int a3, int a4, int a5)
{
  int v13 = v5 + 247;
  int v14 = v7 - v6;
  int v15 = a5 - v8;
  int v16 = a3 - (a5 - v8) + 1937790741;
  int v17 = v9 + v7 - v6 - a1;
  int v18 = v9 + v7 - a1 - 1222630635;
  int v19 = v9 + v7 - a1 - 1153556654;
  int v20 = a1 - v18;
  int v21 = v14 - v18 - 1556347041;
  int v22 = v8 - 637873266 + a4 - v16;
  int v23 = v15 - v22 + (v13 ^ 0x151C431E);
  int v24 = a4 - v16 - 1475304323;
  int v25 = v16 + 672652583 + v23;
  char v26 = (a1 + 119) ^ 0x39;
  int v27 = a3 ^ 0x3E0FC14E;
  LODWORD(STACK[0x570]) = v20 + 144795436;
  LODWORD(STACK[0x56C]) = a4 - v16 + 1181652273;
  LODWORD(STACK[0x650]) = 680046887 - v19 - ((1577912486 - 2 * v19) & ((v13 - 2144) ^ 0xF3045A11));
  LODWORD(STACK[0x568]) = v21 - 1650415915;
  LODWORD(STACK[0x57C]) = -1560664970 - v17;
  LODWORD(STACK[0x64C]) = -1262212182 - v23 - ((32898322 - 2 * v23) & 0x7925A42);
  unsigned int v28 = (v23 - 469191175) & 0xA0B4F6CB;
  LODWORD(STACK[0x58C]) = v22 + 704644856;
  int v29 = v17 + 2076776953 - v19;
  LODWORD(STACK[0x65C]) = 907297488 - v25 - ((-1135272274 - 2 * v25) & 0xAFD366F2);
  int v30 = v25 + v23 - 1611034933;
  int v31 = v25 - v24 - 865572197;
  int v32 = (v20 - 1326209107 - (v17 + 2076776953) - 1309535589) ^ 0x24AF81B7;
  unsigned int v33 = v21 + v20 - 1326209107 + v28 + (v28 ^ 0xA0B4F6CB) + 770124142;
  int v34 = v33 - ((2 * v33) & 0x55BD5C16) - 1428247029;
  unsigned int v35 = ((2 * v34) & 0xEFFFBBBE ^ 0xC13400B4) + (v34 ^ 0x9F65FDA5);
  LODWORD(STACK[0x574]) = v19 + 1295543201;
  LODWORD(STACK[0x584]) = 714176310 - v22;
  unsigned int v36 = ((2 * v30) & 0xBFDC3FFE ^ 0x84881CE2) + (v30 ^ 0x9DAA918E);
  LODWORD(STACK[0x580]) = 525802064 - v32 - ((-1146142398 - 2 * v32) & v10);
  int v37 = v29 - v35 + 28447868;
  int v38 = v24 - v22;
  v31 ^= 0x24AF81B7u;
  LODWORD(STACK[0x658]) = -2072901979 - v38 - ((338065098 - 2 * v38) & 0x14BD9680);
  LODWORD(STACK[0x578]) = v31 + 702377858;
  int v39 = v32 + v37 - 1070826996;
  LODWORD(STACK[0x588]) = v36 + 624810374;
  LODWORD(STACK[0x564]) = v29 - 885639851;
  unsigned int v40 = v36 + v22;
  unsigned int v41 = v35 + v19;
  LODWORD(STACK[0x3C0]) = v36;
  int v42 = v38 - v36 + 1949901370;
  unsigned int v43 = (v34 ^ 0x517FA0B6) + ((2 * v34) & 0xBE96126A ^ 0x1C001203) - v41 + 1;
  int v44 = v43 - ((2 * v43 + 783511308) & 0x7F9AB13A) + 1462177827;
  unsigned int v45 = (v30 ^ 0xA4EA0788) - v40 + 1250227248 - ((2 * ((v30 ^ 0xA4EA0788) - v40 - 862749676)) & 0xFBE2F038);
  LODWORD(STACK[0x654]) = 971216822 - v35 - ((-617675428 - 2 * v35) & 0x98982A10);
  unsigned int v46 = v40 - ((2 * v40 + 890549036) & 0xF4C03B54) + 350910272;
  unsigned int v47 = v41 - ((2 * v41 - 521000486) & 0xF9039CCC) - 319102125;
  unsigned int v48 = v37 ^ 0xEA743792 ^ v44;
  int v49 = v42 ^ 0x533D8335 ^ v45;
  int v50 = v42 + v31 - 438496761 + ~(2 * ((v42 + v31 + 364821632) & 0x501E5597 ^ (v42 + v31) & 0x11));
  LODWORD(STACK[0x560]) = 1697054864;
  LODWORD(STACK[0x3E8]) = 377126494;
  LODWORD(STACK[0x728]) = v13 - 2144;
  unsigned int v51 = (v13 + 967205818) & 0xC6599B7D;
  LODWORD(STACK[0x6D4]) = v51;
  unsigned int v52 = v51 ^ v27 ^ v50 ^ 0xEE119F5D;
  LOBYTE(v30) = v26 ^ (v32 + v37 + 12 - ((2 * (v32 + v37 + 12) - 24) & 0x96) + 63);
  LOBYTE(STACK[0xCC6]) = v30 ^ 0xC4;
  unsigned int v53 = (v48 ^ 0xD5B96F0F) + (v44 ^ 0x3FCD589D);
  LOBYTE(v30) = (v30 - 99 - ((2 * v30) & 0x3A)) ^ v44;
  LOBYTE(STACK[0xE94]) = v52 - ((2 * v52) & 0xA2) + 81;
  int v54 = (v52 + 2112976924 - 2 * (v52 & 0x7DF1781D ^ (v27 ^ v50) & 1)) ^ v45;
  LOBYTE(STACK[0xE9B]) = v54 - ((2 * v54) & 0xA2) + 81;
  int v55 = (v49 ^ 0x2ECCFB29) + (v45 ^ 0x7DF1781C);
  int v56 = (v54 + 785185577 - ((2 * v54) & 0x5D99F652)) ^ v49;
  LOBYTE(v35) = (v30 + 15 - ((2 * v30) & 0x1E)) ^ v48;
  LOBYTE(v37) = (v35 + v12 - ((2 * v35) & 0xCC)) ^ v47;
  unsigned int v57 = v53 + (v48 ^ 0xD5B96F0F) - 1887502241 - ((2 * (v53 + (v48 ^ 0xD5B96F0F))) & 0x1EFE00BE);
  LOBYTE(STACK[0xCD4]) = v35 ^ 0xC4;
  LOBYTE(STACK[0xCCD]) = v30 ^ 0xC4;
  int v58 = (v47 ^ v12) - v53 + (v57 ^ 0x7080FFA0);
  LOBYTE(STACK[0xEA2]) = v56 - ((2 * v56) & 0xA2) + 81;
  unsigned int v59 = (v56 - 94364246 - ((2 * v56) & 0xF4C03B54)) ^ v46;
  unsigned int v60 = (v50 ^ v11) + (v49 ^ 0xD13304D6) + 1196511587;
  LOBYTE(STACK[0xEA9]) = v59 - ((2 * v59) & 0xA2) + 81;
  unsigned int v61 = v55 + (v49 ^ 0x2ECCFB29) + 1148685506 - ((2 * (v55 + (v49 ^ 0x2ECCFB29))) & 0x88EF1984);
  int v62 = v59 ^ v60;
  LOBYTE(STACK[0xEB0]) = v62 - ((2 * v62) & 0xA2) + 81;
  unsigned int v63 = (v62 + 1148685506 - ((2 * v62) & 0x88EF1984)) ^ v61;
  int v64 = (v48 ^ 0x2A4690F0) + v39 - 1662807081;
  LOBYTE(STACK[0xCDB]) = v37 ^ 0xC4;
  LOBYTE(v37) = v37 ^ v64;
  LOBYTE(STACK[0xEB7]) = v63 - ((2 * v63) & 0xA2) + 81;
  unsigned int v65 = ((2 * (v57 ^ v48)) & 0xAF3A6FFE ^ 0xA5084EA0) + (v57 ^ v48 ^ 0x8D5B58AF);
  BOOL v66 = LODWORD(STACK[0x5A0]) == -454137805;
  ++v58;
  int v67 = (v63 + 785185577 - ((2 * v63) & 0x5D99F652)) ^ v49;
  LOBYTE(v35) = (v37 + 95 - ((2 * v37) & 0xBE)) ^ v57;
  unsigned int v68 = (v61 ^ 0xBB88733D) - v55 + (v46 ^ 0xFA601DAA) + 1;
  LOBYTE(STACK[0xEBE]) = v67 - ((2 * v67) & 0xA2) + 81;
  LOBYTE(v47) = (v35 + 15 - ((2 * v35) & 0x1E)) ^ v48 ^ v58;
  int v69 = (v48 ^ 0x2A4690F0) + v58 + 1;
  LOBYTE(STACK[0xCE2]) = v37 ^ 0xC4;
  LOBYTE(STACK[0xCE9]) = v35 ^ 0xC4;
  int v70 = v64 - v69;
  int v71 = v67 ^ v68;
  unsigned int v72 = (v49 ^ 0xD13304D6) + v68 + 1;
  unsigned int v73 = v60 - v72;
  LOBYTE(STACK[0xCF0]) = (v35 + 15 - ((2 * v35) & 0x1E)) ^ v48 ^ 0xC4;
  unsigned int v74 = v69 - v70 + 1933959011 - ((2 * (v69 - v70)) & 0xE68BBEC6);
  int v75 = v49 ^ 0x6ABB77EB ^ v61;
  int v76 = v72 - v73 + 663195944 - ((2 * (v72 - v73)) & 0x4F0F2250);
  int v77 = v74 ^ 0x7345DF63;
  LOBYTE(STACK[0xEC5]) = v71 - ((2 * v71) & 0xA2) + 81;
  unsigned int v78 = (v48 ^ 0xD5B96F0F)
      - 2068978999
      + (v74 ^ 0x7345DF63)
      + 1565641670
      - ((2 * ((v48 ^ 0xD5B96F0F) - 2068978999 + (v74 ^ 0x7345DF63))) & 0xBAA3978C);
  int v79 = v71 ^ (v73 - 1620707570);
  LOBYTE(STACK[0xCF7]) = v47 ^ 0xC4;
  LOBYTE(STACK[0xECC]) = v79 - ((2 * v79) & 0xA2) + 81;
  LOBYTE(v37) = (v65 - ((2 * v65 + 92) & 0xFE) + 45) ^ v47 ^ (v70 + 14);
  int v80 = v79 ^ (v75 - 2080828115);
  LOBYTE(STACK[0xED3]) = v80 - ((2 * v80) & 0xA2) + 81;
  int v81 = (v49 ^ 0x2ECCFB29) - 2068978999 + (v76 ^ 0x27879128);
  char v82 = (-(char)v37 - 59 - ((2 * ~(_BYTE)v37) & 0x8C)) ^ ((v48 ^ 0xF)
                                                        - 55
                                                        + (v74 ^ 0x63)
                                                        - 58
                                                        - ((2 * ((v48 ^ 0xF) - 55 + (v74 ^ 0x63))) & 0x8C));
  unsigned int v83 = v78 ^ 0xB94B5D51;
  LOBYTE(STACK[0xCFE]) = (((v47 ^ (v70 + 14)) & 8 | 0x95) ^ (v47 ^ (v70 + 14)) & 0xF7)
                       - ((2 * (((v47 ^ (v70 + 14)) & 8 | 0x95) ^ (v47 ^ (v70 + 14)) & 0xF7)) & 0xA2)
                       + 81;
  int v84 = v80 ^ v81;
  LOBYTE(STACK[0xD05]) = v37 ^ 0x3B;
  unsigned int v85 = (v70 - ((2 * (v70 - 1620707570)) & 0xE68BBEC6) + 313251441) ^ v74;
  LOBYTE(STACK[0xEDA]) = v84 - ((2 * v84) & 0xA2) + 81;
  unsigned int v86 = v65 - (v78 ^ 0xB94B5D51) - 32360879 - ((2 * (v65 - (v78 ^ 0xB94B5D51) + 89469758)) & 0xF17A0626);
  LOBYTE(v74) = (v82 + 99 - ((2 * v82) & 0xC6)) ^ v74;
  int v87 = (v84 + 663195944 - ((2 * v84) & 0x4F0F2250)) ^ v76;
  unsigned int v88 = (v85 + 1565641670 - ((2 * v85) & 0xBAA3978C)) ^ 0xE41A9697 ^ v78;
  LOBYTE(STACK[0xD13]) = v74 ^ 0xC4;
  int v89 = (v73 - ((2 * (v73 - 1620707570)) & 0x4F0F2250) - 957511626) ^ v76 ^ v81;
  LOBYTE(STACK[0xD0C]) = v82 ^ 0xC4;
  LOBYTE(STACK[0xEE1]) = v87 - ((2 * v87) & 0xA2) + 81;
  unsigned int v90 = (v81 ^ 0x1BE56968) + v75 + 1138027356 - ((2 * ((v81 ^ 0x1BE56968) + v75) - 1176185220) & 0xCDC50E1E) + 1777;
  int v91 = (v87 - 1944376184 - ((2 * v87) & 0x18365910)) ^ v89 ^ 0x6801BA1F;
  LOBYTE(v74) = v74 ^ v88;
  LOBYTE(STACK[0xEE8]) = v91 - ((2 * v91) & 0xA2) + 81;
  int v92 = v90 ^ 0x66E2870F;
  int v93 = (v76 ^ 0x27879128) + 222383983 + (v90 ^ 0x66E2870F);
  unsigned int v94 = v86 ^ 0xF8BD0313;
  unsigned int v95 = v77 + 222383983 + (v86 ^ 0xF8BD0313);
  LOBYTE(STACK[0xD21]) = (v74 + 19 - ((2 * v74) & 0x26)) ^ v86 ^ 0xC4;
  LOBYTE(v35) = (v74 + 19 - ((2 * v74) & 0x26)) ^ v86 ^ (v83 - 101) ^ v95;
  LOBYTE(STACK[0xD28]) = (v74 + 19 - ((2 * v74) & 0x26)) ^ v86 ^ (v83 - 101) ^ 0xC4;
  unsigned int v96 = (v91 + 1726121743 - ((2 * v91) & 0xCDC50E1E)) ^ v90;
  int v97 = v95 ^ v86;
  LOBYTE(STACK[0xD1A]) = v74 ^ 0xC4;
  v81 ^= 0xE41A9697;
  LOBYTE(STACK[0xEEF]) = v96 - ((2 * v96) & 0xA2) + 81;
  int v98 = v96 ^ (v81 + 1965514907);
  LOBYTE(STACK[0xEF6]) = v98 - ((2 * v98) & 0xA2) + 81;
  int v99 = v97 & 0x209260CA;
  int v100 = v97 & 0x209260CA ^ 0x20900002;
  int v101 = v98 ^ v93;
  unsigned int v102 = ((2 * (v93 ^ v90)) & 0x953CEB7E ^ 0x85040A1E) + (v93 ^ v90 ^ 0xAC7CF2B0);
  v97 ^= 0xF8BD0313;
  int v103 = v99 ^ 0x260C8;
  LOBYTE(STACK[0xD2F]) = v35 ^ 0xC4;
  unsigned int v104 = v102 + v81;
  unsigned int v105 = v88 - 369504901 * (v89 & 0x21074043 ^ 0x1054040 | v89 & 0x21074043 ^ 0x20020003 | (v100 + v103));
  LOBYTE(v95) = v35 ^ (v105 + 119);
  LOBYTE(STACK[0xEFD]) = v101 + (~(2 * v101) | 0x5D) + 82;
  v102 += 895584833;
  unsigned int v106 = v97 + v94;
  int v107 = (v101 - 1944376184 - ((2 * v101) & 0x18365910)) ^ v89 ^ 0x6801BA1F;
  unsigned int v108 = v89 ^ 0xE41A9697;
  unsigned int v109 = v89 ^ 0xE41A9697 ^ (v104 - 1433867556);
  int v110 = v102 + v92 - ((2 * (v102 + v92) + 1533400130) & 0x59CB3EE2) - 1701279342;
  int v111 = (v105 - 1152454793) ^ (v97 + v83 + 1965514907);
  unsigned int v112 = v111 ^ 0xEE9CD32B;
  LOBYTE(v100) = v95 ^ (v106 + 33);
  LOBYTE(STACK[0xF04]) = v107 - ((2 * v107) & 0xA2) + 81;
  int v113 = (v107 - 1394237583 - ((2 * v107) & 0x59CB3EE2)) ^ v110;
  LOBYTE(STACK[0xD36]) = v95 ^ 0xC4;
  LOBYTE(v95) = (v100 + 43 - ((2 * v100) & 0x56)) ^ (v105 + 119) ^ (v97 + v83 - 101) ^ 0x2B;
  int v114 = v111 + v97;
  unsigned int v115 = (v105 - ((2 * v105 + 1990057710) & 0xDD39A656) - 1444167006) ^ v112;
  LOBYTE(STACK[0xF0B]) = v113 + (~(2 * v113) | 0x5D) + 82;
  unsigned int v116 = v109 + v102;
  int v117 = v113 ^ v109;
  LOBYTE(v112) = v95 ^ 0xC4;
  LOBYTE(v95) = v95 ^ v114;
  LOBYTE(v92) = v95 ^ 0x5F;
  LOBYTE(STACK[0xD3D]) = v100 ^ 0xC4;
  unsigned int v118 = v106 - 307041759 - v115;
  LOBYTE(STACK[0xF12]) = v117 - ((2 * v117) & 0xA2) + 81;
  LOBYTE(STACK[0xD44]) = v112;
  unsigned int v119 = (v110 ^ 0xACE59F71) - v104;
  int v120 = v117 ^ v116;
  LOBYTE(STACK[0xD4B]) = v95 ^ 0xC4;
  unsigned int v121 = v108 - ((2 * v108 + 68836958) & 0xF4A04698) - 60992901;
  unsigned int v122 = (v89 ^ 0x1BE56968) - v104 + 1961338858 + v116;
  LOBYTE(STACK[0xF19]) = v120 ^ 0x51;
  LOBYTE(STACK[0xF20]) = (v120 ^ v121 ^ 0x4C) + (~(2 * (v120 ^ v121 ^ 0x4C)) | 0x5D) + 82;
  int v123 = 2 * v119 - 1427232184;
  unsigned int v124 = (v119 - (v123 & 0xB72AB808) + 822898984) ^ 0xDB955C04 ^ v120;
  LOBYTE(STACK[0xF27]) = v124 + (~(2 * v124) | 0x5D) + 82;
  unsigned int v125 = (v119 - (v123 & 0xF4A04698) - 809027472) ^ v121;
  LOBYTE(STACK[0xD52]) = v92 ^ (v105 - ((2 * (v105 - 90)) & 0xBF) + 5) ^ 0xC4;
  int v126 = (v124 - 1394237583 - ((2 * v124) & 0x59CB3EE2)) ^ v110;
  LOBYTE(v104) = v92 ^ (v106 + 33 - v115 + 95 - ((2 * (v106 + 33 - v115)) & 0xBE));
  unsigned int v127 = ((2 * ((v110 ^ 0xACE59F71) + (v121 ^ 0x7A50234C))) & 0xFB52FDBE)
       + (((v110 ^ 0xACE59F71) + (v121 ^ 0x7A50234C)) ^ 0x7DA97EDF);
  LOBYTE(STACK[0xF2E]) = v126 - ((2 * v126) & 0xA2) + 81;
  LOBYTE(v123) = v104 ^ (v106 + 33);
  int v128 = v114 - v105 - v115 + 1679926094;
  int v129 = v126 ^ v122;
  unsigned int v130 = v105 + v106;
  LOBYTE(STACK[0xF35]) = v129 - ((2 * v129) & 0xA2) + 81;
  LOBYTE(STACK[0xD60]) = v123 ^ 0xC4;
  LOBYTE(v115) = v123 ^ v128;
  unsigned int v131 = (v118 ^ (v105 + 1029447334)) - v130;
  int v132 = v128 - v130 + v131 - 92689159;
  int v133 = v132 - 529064792;
  unsigned int v134 = ((2 * ((v130 + 722405575) ^ (v105 + 2059837235))) & 0xFF9F57FC)
       + ((v130 + 722405575) ^ (v105 + 2059837235) ^ 0x7FCFABFE);
  LOBYTE(STACK[0xD59]) = v104 ^ 0xC4;
  int v135 = v105 + 1569038159 + v132 - 529064792;
  int v136 = v125 - v127 + v122 - v127;
  LOBYTE(v11_Block_object_dispose((const void *)(v9 - 96), 8) = v115 ^ v135 ^ (v131 - 124);
  unsigned int v137 = ((2 * ((v127 - 2108260063) ^ (v108 - 1082675268))) & 0xFF465B7A)
       + ((v127 - 2108260063) ^ (v108 - 1082675268) ^ 0xFFA32DBD);
  unsigned int v138 = v108 - 828864315 + v136;
  int v139 = v129 ^ v138;
  LOBYTE(STACK[0xF3C]) = v139 - ((2 * v139) & 0xA2) + 81;
  LOBYTE(STACK[0xD67]) = v115 ^ 0xC4;
  int v140 = v139 ^ (v125 - v127 - 1854449110);
  LOBYTE(STACK[0xD75]) = v118 ^ 0xC4;
  LOBYTE(STACK[0xD6E]) = v115 ^ v135 ^ 0xC4;
  LOBYTE(STACK[0xF43]) = v140 - ((2 * v140) & 0xA2) + 81;
  int v141 = v140 ^ (v137 + 6083139);
  LOBYTE(STACK[0xF4A]) = v141 - ((2 * v141) & 0xA2) + 81;
  int v142 = v141 ^ (v136 + 253810953);
  int v143 = (2144316414 - v134 + v135) ^ (v131 - 447118999);
  LOBYTE(STACK[0xF51]) = v142 - ((2 * v142) & 0xA2) + 81;
  int v144 = (-6083139 - v137 + v138) ^ (v125 - v127 - 1911420657);
  LOBYTE(v132) = v118 ^ (v134 + 2) ^ (v132 - 60);
  int v145 = v134 + 1221509010 + v131 - 92689159;
  LOBYTE(STACK[0xD7C]) = v118 ^ (v134 + 2) ^ 0xC4;
  int v146 = v142 ^ v144;
  LOBYTE(STACK[0xD83]) = v132 ^ 0xC4;
  LOBYTE(v132) = v132 ^ v143;
  int v147 = v133 - v134 + 214183395;
  LOBYTE(v37) = v132 ^ 0xC4;
  LOBYTE(v132) = v132 ^ v145;
  LOBYTE(STACK[0xD8A]) = v37;
  char v148 = v132 ^ (v134 + 14);
  char v149 = v148 ^ v147;
  int v150 = v125 - v127 - 1911420657 + v137 - 568628893;
  LOBYTE(STACK[0xF58]) = v146 - ((2 * v146) & 0xA2) + 81;
  LOBYTE(STACK[0xD91]) = v132 ^ 0xC4;
  int v151 = v146 ^ v150;
  unsigned int v152 = v143 + v134;
  LOBYTE(STACK[0xF5F]) = v151 - ((2 * v151) & 0xA2) + 81;
  int v153 = v151 ^ (v137 + 323819087);
  LOBYTE(STACK[0xF66]) = v153 - ((2 * v153) & 0xA2) + 81;
  unsigned int v154 = v144 + v137 - ((2 * (v144 + v137) + 946554726) & 0xEB964684);
  unsigned int v155 = v147 + v134 - 1826580466;
  int v156 = v143 + v134 + 470361458;
  int v157 = v156 + v155 + 815406455 - ((2 * (v156 + v155)) & 0x61343AEE);
  LOBYTE(STACK[0xD9F]) = v149 ^ 0xC4;
  int v159 = v66;
  LODWORD(STACK[0x718]) = v159;
  int v160 = v136 - v137 - 1191606129;
  unsigned int v161 = v154 - 1845442827;
  int v162 = v153 ^ v160;
  LOBYTE(STACK[0xD98]) = v148 ^ 0xC4;
  unsigned int v163 = v160 + v137 + 323819087;
  int v164 = v163 ^ v150;
  LOBYTE(STACK[0xF6D]) = v162 - ((2 * v162) & 0xA2) + 81;
  unsigned int v165 = (v162 - 171236542 - ((2 * v162) & 0xEB964684)) ^ v161;
  unsigned int v166 = (v161 ^ 0xF5CB2342) + v163;
  unsigned int v167 = v137 - 1651494617 + v164;
  int v168 = v134 + 493073126 + (v155 ^ v145);
  char v169 = v149 ^ v156;
  char v170 = v169 ^ v168;
  LOBYTE(STACK[0xF74]) = v165 - ((2 * v165) & 0xA2) + 81;
  LOBYTE(STACK[0xDA6]) = v169 ^ 0xC4;
  LOBYTE(v160) = v169 ^ v168 ^ 0x68 | v169 ^ v168 ^ 0x95;
  int v171 = v165 ^ v167;
  char v172 = v169 ^ v168 ^ (v134 + 67);
  *(_BYTE *)(STACK[0x700] + (v160 & 0xFD)) = v170 ^ 0xC4;
  LOBYTE(v160) = (v172 + 119 - ((2 * v172) & 0xEE)) ^ v157;
  LOBYTE(STACK[0xF7B]) = v171 - ((2 * v171) & 0xA2) + 81;
  int v173 = v171 ^ (v137 + 555827332);
  LOBYTE(STACK[0xF82]) = v173 - ((2 * v173) & 0xA2) + 81;
  LOBYTE(STACK[0xDB4]) = v172 ^ 0xC4;
  LOBYTE(STACK[0xDBB]) = v160 ^ 0xC4;
  int v174 = v173 ^ v166;
  LOBYTE(STACK[0xF89]) = v174 - ((2 * v174) & 0xA2) + 81;
  unsigned int v175 = v168 + v152;
  unsigned int v176 = (v161 ^ 0xF5CB2342) + v167;
  unsigned int v177 = (v166 - 171236542 - ((2 * v166) & 0xEB964684)) ^ v161;
  unsigned int v178 = v143 + v175;
  unsigned int v179 = v137 + 868819828;
  int v180 = v143 + v175 + 1751941183;
  unsigned int v181 = v175 + v134;
  unsigned int v182 = v176 + (v161 ^ 0xF5CB2342) - v179;
  int v183 = v174 ^ v182;
  LOBYTE(STACK[0xF90]) = v183 - ((2 * v183) & 0xA2) + 81;
  int v158 = (v157 & 0x107238A4 ^ 0x10121824) + (v157 & 0x107238A4 ^ 0x602080);
  unsigned int v184 = ((v152
         + 280026855 * (v158 ^ 0xEC6D1055)
         - 1856744590
         - ((2 * (v152 + 280026855 * (v158 ^ 0xEC6D1055) + 1622816251)) & 0x61343AEE)) ^ v157)
       - v180;
  int v185 = v184 - ((2 * v184 + 1206760732) & 0x4F5DB7BE) + 195409517;
  v176 -= 2146437509;
  unsigned int v186 = v176 + v179;
  LOBYTE(v160) = v160 ^ (v143 + v175 - 79);
  int v187 = v183 ^ v176;
  char v188 = v160 ^ (v175 - 19);
  LOBYTE(STACK[0xF97]) = v187 - ((2 * v187) & 0xA2) + 81;
  LOBYTE(STACK[0xDC9]) = v188 ^ 0xC4;
  char v189 = v188 ^ (v181 + 32);
  LOBYTE(v161) = v189 ^ v185;
  int v190 = v187 ^ v186;
  unsigned int v191 = v177 - v182;
  int v192 = v185 ^ (v175 - ((2 * v175 + 1884913692) & 0x4F5DB7BE) - 1612997651);
  unsigned int v193 = ((2 * v185) & 0xFCE676DA ^ 0xF8221448) + (v185 ^ 0x83EA754B);
  LOBYTE(STACK[0xDC2]) = v160 ^ 0xC4;
  unsigned int v194 = v186 - v182;
  LOBYTE(STACK[0xF9E]) = v190 - ((2 * v190) & 0xA2) + 81;
  v178 += 658484707;
  int v195 = v190 ^ v191;
  LOBYTE(STACK[0xFA5]) = v195 ^ 0x51;
  LOBYTE(STACK[0xDD7]) = v189 ^ v185 ^ 0x1B;
  unsigned int v196 = v181 - v180;
  int v197 = v192 ^ v178;
  LOBYTE(STACK[0xDD0]) = v189 ^ 0xC4;
  unsigned int v198 = v182 - 1563817934;
  unsigned int v199 = ((-65809455 - v193) & 0xDC13A421) + v176 + ((v193 + 65809454) & 0xDC13A421);
  int v200 = v191 ^ 0x77EEAC7E ^ (v199 - ((2 * v199) & 0x5BB2730E) - 1378272889);
  LOBYTE(v199) = v192 ^ v178 ^ v189 ^ v185 ^ 0x26;
  int v201 = v200 ^ (v182 - 1563817934);
  LOBYTE(v176) = (v195 ^ v200 ^ (v182 + 50)) - ((2 * (v195 ^ v200 ^ (v182 + 50))) & 0xA2);
  char v202 = v199 - ((2 * v199) & 0x2A);
  int v203 = (v193 + 65809454) ^ (v196 + 866950062);
  unsigned int v204 = v191 ^ 0xDA3795F9;
  LOBYTE(STACK[0xFAC]) = v176 + 81;
  char v205 = v161 ^ v178;
  char v206 = v205 ^ 0x44;
  unsigned int v207 = ((v191 ^ 0xDA3795F9) - 2107676773) ^ v194;
  int v208 = v195 ^ v198;
  int v209 = v208 ^ 0x37089C0A;
  LOBYTE(STACK[0xFB3]) = v208 ^ 0x51;
  LOBYTE(STACK[0xDDE]) = v202 - 107 - ((2 * (v202 - 107)) & 0xA2) + 81;
  int v210 = 2 * v203;
  if ((v205 & 0x10) != 0) {
    char v211 = 16;
  }
  else {
    char v211 = -16;
  }
  char v212 = v211 + (v205 ^ 0xDF);
  char v213 = v209 ^ (v207 - ((2 * v207) & 0x14) + 10);
  char v214 = v206 ^ (v196 - ((2 * (v196 - 82)) & 0x36) + 73);
  LOBYTE(STACK[0xDEC]) = v206 ^ 0xC4 ^ (((v193 + 46) ^ (v196 - 82)) - (v210 & 0x36) - 101);
  LOBYTE(STACK[0xDE5]) = v212 ^ 0xD4;
  unsigned int v215 = v193 - ((2 * v193 + 702006758) & 0xC2116EC6) - 168519082;
  LOBYTE(STACK[0xFBA]) = v213 - ((2 * v213) & 0xA2) + 81;
  unsigned int v216 = (v192 ^ 0xDA3795F9) + (v197 ^ 0xDA3795F9) + (v215 ^ 0x9EF7489C) + 1;
  unsigned int v217 = v216 + 1663276001 - ((2 * v216) & 0xC64727C2);
  int v218 = v209 ^ (v194 + 923311114 - ((2 * v194) & 0x6E113814));
  LOBYTE(STACK[0xDF3]) = v214 ^ 0xC4;
  unsigned int v219 = ((v197 ^ 0xDC21E020) + 1627961187 - 2 * ((v197 ^ 0xDC21E020) & 0x6108B777 ^ v197 & 0x14)) ^ 0x38266952 ^ v215;
  LOBYTE(STACK[0xFC1]) = v218 - ((2 * v218) & 0xA2) + 81;
  unsigned int v220 = v204 - ((2 * v204 + 650001600) & 0x97FC1DFA) + 1599941981;
  int v221 = v220 ^ v207 ^ v201 ^ 0x61675D9;
  unsigned int v222 = v215 ^ v197 ^ (v203 + 1627961187 - (v210 & 0xC2116EC6));
  unsigned int v223 = (v220 ^ 0xB401F102) + v200 + v201 + 1309963168 - ((2 * ((v220 ^ 0xB401F102) + v200 + v201 + 1)) & 0x9C28E73E);
  LOBYTE(STACK[0xDFA]) = v214 ^ v219 ^ 0xC4;
  unsigned int v224 = ((v201 ^ 0x61675D9) - 1230882352 - ((2 * (v201 ^ 0x61675D9)) & 0x6D4473A0)) ^ v220 ^ 0xC57A5E7F;
  char v225 = ((v214 ^ v219) - 31 - ((2 * (v214 ^ v219)) & 0xC2)) ^ v217;
  int v226 = v218 ^ v224;
  LOBYTE(STACK[0xE01]) = v225 ^ 0xC4;
  unsigned int v227 = v222 ^ 0xDC21E020;
  LOBYTE(STACK[0xFC8]) = v226 - ((2 * v226) & 0xA2) + 81;
  unsigned int v228 = (v226 + 1309963167 - ((2 * v226) & 0x9C28E73E)) ^ v223;
  LOBYTE(STACK[0xFCF]) = v228 + (~(2 * v228) | 0x5D) + 82;
  char v229 = v222 ^ (v225 - ((2 * v225) & 0x76) - 69);
  v215 ^= 0x592EDE31u;
  unsigned int v230 = v221 ^ 0x1AADEAC0 ^ (v228 - ((2 * v228) & 0xA2A7C87A) + 1364452413);
  LOBYTE(STACK[0xFD6]) = v230 - ((2 * v230) & 0xA2) + 81;
  char v231 = v229 ^ v215;
  unsigned int v232 = (v222 ^ 0xBF0273C1 ^ v217) - ((2 * (v222 ^ 0xBF0273C1 ^ v217) + 1433858588) & 0x5052687A) + 1390718283;
  unsigned int v233 = (v230 - 1230882352 - ((2 * v230) & 0x6D4473A0)) ^ v220 ^ 0xC57A5E7F;
  int v234 = v219 + v227 + (v232 ^ 0x57D6CBC2) + 1;
  int v235 = v215 - 1473694659 - ((2 * v215) & 0x5052687A);
  unsigned int v236 = (v221 ^ 0x5EA7D62 ^ v223) - ((2 * (v221 ^ 0x5EA7D62 ^ v223) + 1433858588) & 0xC3521BBE) - 1939568915;
  LOBYTE(STACK[0xFDD]) = v233 - ((2 * v233) & 0xA2) + 81;
  int v237 = (v221 ^ 0x4BFE0EFD) + v224 + (v236 ^ 0x1E56F220) + 1;
  int v238 = v220 ^ 0x3DCC1430 ^ v223;
  LOBYTE(STACK[0xE08]) = v229 ^ 0x5F;
  LOBYTE(STACK[0xE0F]) = v231 ^ 0x5F;
  LOBYTE(STACK[0xE16]) = v231 ^ v234 ^ 0x5F;
  LOBYTE(STACK[0xFE4]) = (v233 ^ v237) + (~(2 * (v233 ^ v237)) | 0x5D) + 82;
  char v239 = v217 ^ ((v231 ^ v234 ^ 0x9B) - ((2 * (v231 ^ v234 ^ 0x9B)) & 0xE) + 7);
  int v240 = v233 ^ v237 ^ v223;
  LOBYTE(STACK[0xFEB]) = v233 ^ v237 ^ v223 ^ 0x65;
  char v241 = (v239 ^ 0x4D) + 61 - ((2 * (v239 ^ 0x4D)) & 0x7A);
  int v242 = v232 ^ v217 ^ v235;
  LOBYTE(v232) = v232 ^ (((v217 ^ 0xB5) - 53) ^ ((v217 ^ 0x4A) + 53)) & 0x95 ^ v241;
  unsigned int v243 = v234 + (v242 ^ 0x9CDC6C1E);
  LOBYTE(STACK[0xE24]) = v232 - ((2 * v232) & 0xA2) + 81;
  int v244 = v236 ^ v238;
  unsigned int v245 = v243 + 1;
  LOBYTE(STACK[0xFF2]) = (v240 ^ v236 ^ 0xEB) - ((2 * (v240 ^ v236 ^ 0xEB)) & 0xA2) + 81;
  int v246 = v240 ^ v238;
  LOBYTE(STACK[0xFF9]) = v240 ^ v238 ^ 0x65;
  LOBYTE(v232) = v239 ^ 0x89;
  unsigned int v247 = ((2 * v245) & 0x89622112) + (v245 ^ 0x44B11089);
  int v248 = (v244 ^ 0x1E56F220) + v237 + 1;
  LOBYTE(v230) = v241 ^ v217 ^ v235;
  LOBYTE(STACK[0xE1D]) = v232;
  HIDWORD(v249) = v244 ^ 0x90DDF;
  LODWORD(v249) = v244 ^ 0xE1A00000;
  unsigned int v250 = v247
       - 1152454793
       + (v217 ^ 0x9326EB4A)
       + 303916795
       - ((2 * (v247 - 1152454793 + (v217 ^ 0x9326EB4A))) & 0x243ACDF6);
  int v251 = (v247 - ((2 * (v247 - 1152454793)) & 0x61CABC60) - 332116569) ^ v242;
  LOBYTE(STACK[0xE2B]) = v230 ^ 0x25;
  HIDWORD(v249) = (v249 >> 21) ^ 0xFF0A9E8F;
  LODWORD(v249) = HIDWORD(v249);
  int v252 = v249 >> 11;
  unsigned int v253 = v223 ^ 0xF93EC1BD ^ (v252 - ((2 * v252) & 0x8E5F9512) + 1194314377);
  unsigned int v254 = v248 + (v223 ^ 0xBE110B34) + 1463680341 - ((2 * (v248 + (v223 ^ 0xBE110B34))) & 0xAE7BFAAA);
  unsigned int v255 = v252 ^ 0xC7FC9DD4;
  int v256 = v252 ^ v248;
  int v257 = (v254 ^ 0x573DFD55) + v255 - 1825563673 - ((2 * ((v254 ^ 0x573DFD55) + v255)) & 0x266037CE);
  int v258 = v250 ^ 0x41E1A7C ^ v251 ^ 0x53C6CDD1;
  LOBYTE(STACK[0x1000]) = (v246 ^ v256 ^ 0xE0) - 2 * ((v246 ^ v256 ^ 0xE0) & 0x55 ^ (v246 ^ v256) & 4) + 81;
  unsigned int v259 = v256 ^ 0x90C16081 ^ v254;
  LOBYTE(v240) = v230 ^ v251 ^ 0xD1;
  unsigned int v260 = v254 ^ 0xE92CF661 ^ v246;
  LOBYTE(v230) = v250 ^ v230;
  int v261 = v235 ^ 0x4E2F3011;
  int v262 = (v250 ^ 0x121D66FB)
       + (v242 ^ 0x7520EF66)
       + 1046738033
       - ((2 * ((v250 ^ 0x121D66FB) + (v242 ^ 0x7520EF66))) & 0x7CC7E8E2);
  unsigned int v263 = v253 - ((2 * v253) & 0xC3521BBE);
  LOBYTE(v253) = v230 ^ v261;
  unsigned int v264 = v236 ^ 0xC7FC9DD4 ^ (v263 - 509014561);
  LOBYTE(STACK[0x1007]) = v260 - ((2 * v260) & 0xA2) + 81;
  int v265 = v260 ^ v264;
  LOBYTE(STACK[0xE32]) = v240 ^ 0xA2;
  LOBYTE(STACK[0x100E]) = v265 - ((2 * v265) & 0xA2) + 81;
  int v266 = (v251 ^ 0x45C5B156) - v258;
  LOBYTE(v263) = ((v230 ^ v261 ^ 0x1A) + 113 - ((2 * (v230 ^ v261 ^ 0x1A)) & 0xE2)) ^ v262;
  unsigned int v267 = (v256 ^ 0xC7FC9DD4) - v259;
  int v268 = (v265 - 1825563673 - ((2 * v265) & 0x266037CE)) ^ v257;
  LOBYTE(STACK[0xE39]) = v230 ^ 0xDE;
  unsigned int v269 = v264 + v267 - 205263854 - ((2 * (v264 + v267)) & 0xE787D824);
  LOBYTE(STACK[0xE40]) = v253 ^ 0xDE;
  int v270 = v266 + v261 + 32205079 - ((2 * (v266 + v261)) & 0x3D6D22E);
  LOBYTE(STACK[0xE47]) = v263 ^ 0xC4;
  int v271 = v269 ^ v267;
  int v272 = v270 ^ v266;
  unsigned int v273 = (v259 + (v257 ^ 0x6CCFE418) - 205263853 - ((2 * (v259 + (v257 ^ 0x6CCFE418) + 1)) & 0xE787D824)) ^ v269;
  LOBYTE(STACK[0x1015]) = v268 - ((2 * v268) & 0xA2) + 81;
  unsigned int v274 = v269 ^ v267 ^ 0xBB542DD ^ (v268 - ((2 * v268) & 0xF0ED5D9E) - 126439729);
  unsigned int v275 = (v258 + (v262 ^ 0xC19C0B8E) + 32205080 - ((2 * (v258 + (v262 ^ 0xC19C0B8E) + 1)) & 0x3D6D22E)) ^ v270;
  LOBYTE(v263) = v272 ^ (v263 - ((2 * v263) & 0x32) - 103);
  unsigned int v276 = (v269 ^ 0xF3C3EC12) - 1256310069;
  int v277 = (v270 ^ 0x1EB6917) - 1256310069;
  LOBYTE(STACK[0x101C]) = v274 - ((2 * v274) & 0xA2) + 81;
  int v278 = v274 ^ v273;
  LOBYTE(STACK[0x1023]) = v278 - ((2 * v278) & 0xA2) + 81;
  int v279 = v278 ^ v276;
  LOBYTE(STACK[0x102A]) = v279 - ((2 * v279) & 0xA2) + 81;
  LOBYTE(v259) = v263 ^ v275 ^ v277;
  LOBYTE(STACK[0xE4E]) = v263 ^ 0x4A;
  int v280 = (v271 ^ 0xC3C13ED) + v276 + 1;
  int v281 = (v279 - 1825563673 - ((2 * v279) & 0x266037CE)) ^ v257;
  LOBYTE(STACK[0xE55]) = v263 ^ v275 ^ 0x4A;
  LOBYTE(v261) = ((v259 ^ 0x8E) + 113 - ((2 * (v259 ^ 0x8E)) & 0xE2)) ^ v262;
  unsigned int v282 = (v257 ^ 0x93301BE7) - 613696715;
  unsigned int v283 = (v272 ^ 0xFE1496E8) + v277 + 1;
  unsigned int v284 = v275 - v283;
  unsigned int v285 = (v271 ^ 0xF3C3EC12) - ((2 * (v271 ^ 0xF3C3EC12) + 1072556834) & 0x38479F7A) + 471516494;
  int v286 = (v262 ^ 0x3E63F471) - 613696715;
  LOBYTE(STACK[0x1031]) = v281 - ((2 * v281) & 0xA2) + 81;
  int v287 = (v281 - 1675374659 - ((2 * v281) & 0x38479F7A)) ^ v285;
  int v288 = (v272 ^ 0x1EB6917) - ((2 * (v272 ^ 0x1EB6917) + 535685922) & 0x1699F8B6) - 1958481428;
  LOBYTE(STACK[0x1038]) = v287 - ((2 * v287) & 0xA2) + 81;
  LOBYTE(STACK[0xE63]) = v261 ^ 0xC4;
  unsigned int v289 = (v273 - v280) ^ 0xAB62164D ^ (v287 - ((2 * v287) & 0x4D989C96) - 1496560053);
  int v290 = (v283 + 189594715 - ((2 * v283) & 0x1699F8B6)) ^ v288;
  LOBYTE(STACK[0x103F]) = v289 - ((2 * v289) & 0xA2) + 81;
  int v291 = (v280 - 1675374659 - ((2 * v280) & 0x38479F7A)) ^ v285;
  LOBYTE(v280) = (v261 + 91 - ((2 * v261) & 0xB6)) ^ v288;
  LOBYTE(v269) = v280 ^ 0xC4;
  LOBYTE(v280) = v284 ^ (v280 - ((2 * v280) & 0x10) - 120);
  LOBYTE(v250) = v280 ^ v290;
  int v292 = v289 ^ v291;
  LOBYTE(STACK[0xE6A]) = v269;
  LOBYTE(STACK[0xE71]) = v280 ^ 0x4A;
  LOBYTE(STACK[0x1046]) = v292 - ((2 * v292) & 0xA2) + 81;
  int v293 = (v280 ^ v290) ^ 0x8E ^ v286;
  LOBYTE(STACK[0xE5C]) = v259 ^ 0x4A;
  unsigned int v294 = ((2 * ((v284 ^ 0xF251A7F9) + v290 + 1)) & 0xDFFF737C)
       + (((v284 ^ 0xF251A7F9) + v290 + 1) ^ 0x6FFFB9BE)
       - 1879030206;
  unsigned int v295 = v294 + v286;
  LOBYTE(STACK[0xE78]) = v250 ^ 0x4A;
  LODWORD(STACK[0x3E0]) = v292 ^ v282;
  unsigned int v296 = (v288 ^ 0xB4CFC5B ^ v294) - v295 - 645547940 - ((2 * ((v288 ^ 0xB4CFC5B ^ v294) - v295)) & 0xB30B70B8);
  LOBYTE(STACK[0x104D]) = (v292 ^ v282) - ((2 * (v292 ^ v282)) & 0xA2) + 81;
  unsigned int v297 = ((2 * (v294 + (v296 ^ 0x267A47A3) + 1)) & 0xF974F7A2) + ((v294 + (v296 ^ 0x267A47A3) + 1) ^ 0xFCBA7BD1);
  LODWORD(STACK[0x3E4]) = v293 ^ 0x340A19CB;
  LOBYTE(STACK[0xE7F]) = v293 ^ 0xC4;
  LODWORD(STACK[0x720]) = ((v297 + 54887471) ^ v295 ^ 0x975FE3F0)
                        + 1795096432
                        + ((2 * ((v297 + 54887471) ^ v295)) & 0x2EBFC7E0);
  LODWORD(STACK[0x710]) = v297 + 2144194304;
}

uint64_t sub_1001B513C()
{
  LODWORD(STACK[0x6F0]) = v1;
  LODWORD(STACK[0x6E4]) = v5 - 656;
  int v12 = v3 ^ (v5 - 508606774);
  int v13 = 7 * v12;
  unsigned int v14 = 7 * v12 + 5782 - ((((7 * v12 + 5782) * (unint64_t)v10) >> 32) >> 9) * v0;
  unint64_t v15 = STACK[0x700];
  unsigned int v16 = 7 * (v12 + (v14 & 0x33A) + (v14 & 0x33A ^ 0x33A)) + 7;
  int v17 = ((*(unsigned __int8 *)(STACK[0x700] + v14) ^ 0xC4) << 24) | ((*(unsigned __int8 *)(STACK[0x700]
                                                                                         + v16
  int v18 = *(unsigned __int8 *)(STACK[0x700]
                           + v13
                           + 5803
                           - ((((v13 + 5803) * (unint64_t)v10) >> 32) >> 9) * v0) ^ 0x51;
  int v19 = v17 | ((*(unsigned __int8 *)(STACK[0x700]
                                   + v13
                                   + 5796
  int v20 = v19 - 2 * (v19 & 0x52D50EFE ^ v18 & 0x10) - 757788946;
  int v21 = v20 ^ v1;
  *((_DWORD *)&STACK[0x860]
  + 199 * v2
  % (((v20 & 0x2D8FA949 ^ 0x850848) + (v20 & 0x2D8FA949 ^ 0x2D0AA101)) ^ ((v3 & 0x2D8FA85D ^ 0xC00A844)
                                                                        + (v3 & 0x2D8FA85D ^ 0x218F0019u)))) = v20 ^ v1 ^ 0xD6EA48AC;
  int v22 = *(unsigned __int8 *)(v15
                           + v13
                           + 6244
                           - ((((v13 + 6244) * (unint64_t)v10) >> 32) >> 9) * v0);
  int v23 = *(unsigned __int8 *)(v15
                           + v13
                           + 6251
                           - ((((v13 + 6251) * (unint64_t)v10) >> 32) >> 9) * v0) ^ 0x51;
  int v24 = *(unsigned __int8 *)(v15
                           + v13
                           + 6258
                           - ((((v13 + 6258) * (unint64_t)v10) >> 32) >> 9) * v0);
  int v25 = v22 ^ 0x51;
  unsigned int v26 = (v3 ^ 0xE1AF521A) + ((2 * (v3 & 1)) ^ 0xAEF929D2) + 1723292678;
  LODWORD(STACK[0x718]) = v26;
  unsigned int v27 = 1747742161 - v26 + 8 * v26;
  unsigned __int8 v28 = v24 ^ 0x51;
  int v29 = *(unsigned __int8 *)(v15 + v27 + 455 - ((((v27 + 455) * (unint64_t)v10) >> 32) >> 9) * v0);
  int v30 = 199 * v7;
  int v31 = v6;
  LODWORD(STACK[0x70C]) = v6;
  __int16 v32 = v7;
  LODWORD(STACK[0x728]) = v7;
  int v33 = v29 ^ 0x51;
  LOWORD(v29) = (unsigned __int16)(199 * v7 + 1711) % 0x114u;
  unsigned int v34 = v8 ^ 0xA3716CA9;
  uint64_t v35 = (unsigned __int16)v29;
  int v36 = v9;
  int v37 = v9 ^ 0x11851C6F ^ v20;
  int v38 = v37 + 1023878943 - ((2 * v37) & 0x7A0E4E3E);
  int v39 = v4 ^ 0x41A5B26;
  int v40 = LODWORD(STACK[0x710])
      - 2089306833
      + (v21 ^ 0xB50B627)
      + 2119146050
      - ((2 * (LODWORD(STACK[0x710]) - 2089306833 + (v21 ^ 0xB50B627)) + 43050566) & 0x7A0E4E3E);
  unsigned int v41 = v8 ^ 0xA76B378F;
  int v42 = v11;
  unsigned int v43 = (v24 ^ 0xCCCCCCCC | v24 ^ 0x33333333) & 0x95;
  unsigned int v44 = LODWORD(STACK[0x710]) + LODWORD(STACK[0x720]) + (v36 ^ 0xC3501281) - 2129079857;
  int v45 = v37 ^ v43;
  unsigned int v46 = v31 + v42 + (v8 ^ 0x5894C870) + 2113177708 - ((2 * (v31 + v42 + (v8 ^ 0x5894C870) - 1156101101)) & 0x85BA78B2);
  int v47 = LODWORD(STACK[0x710]) - ((2 * LODWORD(STACK[0x710]) + 1348435990) & 0x541BC8FC) + 306029705;
  LODWORD(STACK[0x710]) = v47;
  int v48 = (v25 << 24) | (v23 << 16) | (v28 << 8) | v33;
  unsigned int v49 = ((2 * (v42 - 553307845)) & 0xBFBFBBF6) + ((v42 - 553307845) ^ 0x5FDFDDFB);
  int v50 = v48 ^ v4;
  unsigned int v51 = (v4 ^ 0xFBE5A4D9 ^ (v49 - 1608506875))
      - ((2 * (v4 ^ 0xFBE5A4D9 ^ (v49 - 1608506875))) & 0x6C8E7F08)
      - 1236844668;
  int v52 = v47 ^ LODWORD(STACK[0x6F0]);
  *((_DWORD *)&STACK[0x860] + v35) = v50 ^ 0xC6E283C6;
  LOWORD(v25) = ((((v52 ^ 0xE5) + 119) & 0xC7) + (((v52 ^ 0x1A) - 119) & 0xC7)) * (v32 - 19818);
  int v53 = (((*(unsigned __int8 *)(v15 + v27 % 0x3C0) ^ 0xC4) << 24) | ((*(unsigned __int8 *)(v15 + (v27 + 7) % 0x3C0) ^ 0xC4) << 16) | ((*(unsigned __int8 *)(v15 + (v27 + 14) % 0x3C0) ^ 0xC4) << 8) | *(unsigned __int8 *)(v15 + (v27 + 21) % 0x3C0) ^ 0x51) ^ v44;
  LODWORD(STACK[0x6D8]) = v44;
  *((_DWORD *)&STACK[0x860] + (unsigned __int16)(v30 + 16238) % 0x114u) = v40;
  uint64_t v54 = (unsigned __int16)v25 % 0x114u;
  int v55 = *(unsigned __int8 *)(v15 + (v27 + 462) % 0x3C0) ^ 0x51;
  int v56 = (v55 << 24) - 1671080722 - ((v55 << 25) & 0x38000000);
  int v57 = LODWORD(STACK[0x718]) - 363890132;
  unsigned int v58 = (v41 + (v34 ^ v50) + 1) ^ (v39 + v48 + 1) ^ ((v50 ^ 0xC6E28353 ^ v38) - v45);
  LODWORD(v35) = *(unsigned __int8 *)(v15 + (v27 + 476) % 0x3C0) ^ 0x51;
  int v59 = v51 & 0x95 ^ 0x84 | v51 & 0x95 ^ 0x11;
  unsigned int v60 = (((v53 & 0x5EAFEAA3 ^ 0x1E272283) + (v53 & 0x5EAFEAA3 ^ 0x4088C820)) ^ 0xE28E482E)
      * (LODWORD(STACK[0x718]) - 363889238)
      * (((v56 & 0x3C000000 ^ 0x1C000000) + (v56 & 0x3C000000 ^ 0x2067D9EB)) & 0x3C4791E3);
  LODWORD(STACK[0x6E8]) = (v59 - ((2 * v59) & 0x99999999) - 865602362) ^ v53;
  int v61 = v51 ^ 0x4D2725BC;
  *((_DWORD *)&STACK[0x860] + (unsigned __int16)(v30 + 30168) % 0x114u) = v58
                                                                        - v42
                                                                        - ((2 * (v58 - v42) + 962099180) & 0x7A0E4E3E)
                                                                        + 1504928533;
  LODWORD(STACK[0x6F0]) = ((v46 ^ 0xC2DD3CCC ^ v53) - (v46 ^ 0xE2E83974)) ^ ((v51 ^ 0x6D122004 ^ v53)
                                                                           - (v51 ^ 0x4D2725BC));
  int v62 = v44 ^ 0x2035052D;
  *((_DWORD *)&STACK[0x860] + v54) = v53 ^ 0xFD8FFB33;
  LOWORD(v59) = (unsigned __int16)(v30 + 16437) % 0x114u;
  int v63 = LODWORD(STACK[0x70C]) + 88929697;
  unsigned int v64 = (v46 ^ 0xE2E83974) + v63 - ((2 * ((v46 ^ 0xE2E83974) + v63)) & 0xFEC7B228) + 2137250068;
  unsigned int v65 = v49 - 1608506875 + (v64 ^ 0x809C26EB);
  int v66 = 1608506875 - v49 + (((v59 & 0x55 ^ 0x17F96255) + (v59 & 0x55)) & 0x16F962DD);
  LOWORD(v23) = (unsigned __int16)(v30 + 30367) % 0x114u;
  unsigned int v67 = v63 + v61 + (v64 ^ 0x809C26EB) + 1 - ((2 * (v63 + v61 + (v64 ^ 0x809C26EB) + 1)) & 0xEEFFBF68);
  LODWORD(v54) = ((*(unsigned __int8 *)(v15 + v60 % 0x3C0) ^ 0x51) << 16) | ((_DWORD)v35 << 8);
  LODWORD(v35) = (v52 ^ 0x88E8461A) - (v44 ^ 0x2035052D);
  LODWORD(v54) = (v54 | *(unsigned __int8 *)(v15 + (v27 + 483) % 0x3C0) ^ 0x51) + (v56 ^ 0x9C6554EE);
  int v68 = STACK[0x720];
  int v70 = ((*(unsigned __int8 *)(v15 + (v27 + 28) % 0x3C0) ^ 0xC4) << 24) | ((*(unsigned __int8 *)(v15 + (v27 + 35) % 0x3C0) ^ 0xC4) << 16) | ((*(unsigned __int8 *)(v15 + (7 * (v57 + (((((v27 + 35) % 0x3C0) & 0x300 ^ 0x8B06FF00) + (((v27 + 35) % 0x3C0) & 0x300)) ^ 0x8B06FC39)) + 56) % 0x3C0) ^ 0xC4) << 8) | *(unsigned __int8 *)(v15 + (v27 + 49) % 0x3C0) ^ 0x51;
  LOWORD(v44) = v30;
  LODWORD(STACK[0x6F4]) = v30;
  LODWORD(v54) = (v54 - 1025688487 - ((2 * v54) & 0x85BA78B2)) ^ v46;
  LOWORD(v56) = (unsigned __int16)(v30 - 11423) % 0x114u;
  *((_DWORD *)&STACK[0x860] + (unsigned __int16)(v30 + 1910) % 0x114u) = v54 ^ 0x1D322232;
  int v71 = v52 ^ 0xA8DD4337 ^ v54;
  unsigned int v72 = LODWORD(STACK[0x710]) ^ 0xAA0DE47E;
  int v73 = ((*(unsigned __int8 *)(v15 + (v27 + 490) % v69) ^ 0x51) << 24) | ((*(unsigned __int8 *)(v15 + (v27 + 497) % 0x3C0) ^ 0x51) << 16);
  LODWORD(v54) = (v54 ^ 0x2035052D) + v72 + 2119146050 - ((2 * ((v54 ^ 0x2035052D) + v72) + 43050566) & 0x7A0E4E3E);
  int v74 = v62 + v68 + 1109650573;
  unsigned int v75 = v72 - v74;
  unsigned int v76 = v65 + 1;
  v74 ^= 0x83FEB30A;
  int v77 = v70 ^ v75;
  int v78 = (v35 - 1356298313 - ((2 * v35) & 0x5E510F6E)) ^ v74 ^ v70 ^ v75;
  int v79 = v73 | ((*(unsigned __int8 *)(v15 + (v27 + 504) % 0x3C0) ^ 0x51) << 8) | *(unsigned __int8 *)(v15 + (v27 + 511) % 0x3C0) ^ 0x51;
  *((_DWORD *)&STACK[0x860] + (unsigned __int16)v59) = v54;
  int v80 = v79 ^ v76;
  LOWORD(v70) = (unsigned __int16)(v44 + 2109) % 0x114u;
  LODWORD(v54) = (v78 ^ 0x8ABC1F7F)
               + (((v78 ^ 0xAF2887B7) + 1126109253 - ((2 * (v78 ^ 0xAF2887B7)) & 0x863E21A0) + 139) ^ v80 ^ 0x431F1045);
  unsigned int v81 = ((2 * v75) & 0x7FAF37F4 ^ 0x34860744) + (v75 ^ 0xE5BCFC58);
  unsigned int v82 = ((v68 + 1109650573) ^ 0xD321E511)
      - v81
      - 2080875573
      - ((2 * (((v68 + 1109650573) ^ 0xD321E511) - v81 + 1071094778)) & 0x88417FA2);
  unsigned int v83 = LODWORD(STACK[0x6D8]) ^ 0x807A2300 ^ (v71 - ((2 * v71) & 0x409E4C5A) - 1605425619);
  unsigned int v84 = ((2 * v76) & 0xB4FFEBEE ^ 0xB4D6CB44) + (v76 ^ 0x80149255);
  unsigned int v85 = v67 + 2004869044;
  unsigned int v86 = (v63 ^ 0xD321E511) - v84 + 654957829 - ((2 * ((v63 ^ 0xD321E511) - v84 + 1518335479)) & 0x9913CE1C);
  int v87 = v82 ^ (v35 + 1142996945 - ((2 * v35) & 0x88417FA2));
  unsigned int v88 = v82 ^ (v74 + 1142996945 - ((2 * v74) & 0x88417FA2));
  unsigned int v89 = v64 ^ 0xFC9D6A1E;
  unsigned int v90 = v66 + (LODWORD(STACK[0x6F0]) ^ ((LODWORD(STACK[0x6E8]) ^ 0xEC52F1EB ^ v83) - v83));
  LODWORD(v35) = (2 * v90) & 0x7A0E4E3E;
  unsigned int v91 = (v64 ^ 0x26F60DBC ^ v80) - (v64 ^ 0xFC9D6A1E);
  int v92 = (v82 ^ 0x4420BFD1) - ((2 * (v82 ^ 0x4420BFD1) + 438115668) & 0x3E57CB10);
  unsigned int v93 = v90 + 1023878943;
  unsigned int v94 = v89 - 863377650 - ((2 * v89) & 0x9913CE1C);
  uint64_t v95 = (unsigned __int16)v56;
  unsigned int v96 = v91 ^ (((v67 + 2004869044) ^ 0x8880204B) + ((v67 + 2004869044) ^ 0xAD14B816 ^ v80) + 1);
  *((_DWORD *)&STACK[0x860] + (unsigned __int16)v23) = v93 - v35;
  int v97 = STACK[0x6F4];
  int v98 = LODWORD(STACK[0x6F4]) + 16636;
  LODWORD(v54) = v96 ^ (v54 + 1);
  LOWORD(v96) = (unsigned __int16)(LOWORD(STACK[0x6F4]) + 30566) % 0x114u;
  *((_DWORD *)&STACK[0x860] + v95) = v77 ^ 0x7D199BC;
  LODWORD(v95) = ((*(unsigned __int8 *)(v15 + (v27 + 56) % 0x3C0) ^ 0xC4) << 24) | ((*(unsigned __int8 *)(v15 + (v27 + 63) % 0x3C0) ^ 0xC4) << 16) | ((*(unsigned __int8 *)(v15 + (v27 + 70) % 0x3C0) ^ 0xC4) << 8);
  *((_DWORD *)&STACK[0x860] + (unsigned __int16)v70) = v80 ^ 0xE76C40BD;
  int v99 = v86 ^ v85;
  unsigned int v100 = v81 - 2 * ((v81 + 376127272) & 0x1F2BE58F ^ v81 & 7);
  unsigned int v101 = v81 - 1071094778;
  int v102 = v86 ^ v94;
  int v103 = v87 ^ (v92 - 1942326222);
  *((_DWORD *)&STACK[0x860] + (unsigned __int16)v98 % 0x114u) = v54
                                                              - v84
                                                              - ((2 * (v54 - v84) + 932237876) & 0x7A0E4E3E)
                                                              - 657485767;
  unsigned int v104 = (v86 ^ 0xCC89E70E) - ((2 * (v86 ^ 0xCC89E70E) - 635626156) & 0xCFAB8BA6) - 723233667;
  LODWORD(v95) = v95 | *(unsigned __int8 *)(v15 + (v27 + 77) % 0x3C0) ^ 0x51;
  int v105 = v102 - ((2 * v102 + 1815728682) & 0x53706E0E) + 1607802908;
  unsigned int v106 = v104 ^ (v84 - ((2 * v84 - 1215968682) & 0xCFAB8BA6) - 1013404930);
  int v107 = v99 ^ v104;
  int v108 = *(unsigned __int8 *)(v15 + (v27 + 518) % 0x3C0);
  unint64_t v109 = STACK[0x6F8];
  int v110 = *(unsigned __int8 *)(v15 + (v27 + 525) % 0x3C0) ^ 0x51;
  LODWORD(v54) = *(unsigned __int8 *)(v15 + (v27 + 532) % 0x3C0) ^ 0x51;
  int v111 = *(unsigned __int8 *)(v15 + (v27 + 539) % 0x3C0);
  LODWORD(v54) = ((v108 ^ 0x51) << 24) | (v110 << 16) | ((_DWORD)v54 << 8);
  int v112 = (v111 ^ 0x51) - 1379321336 - ((2 * v111) & 0x10);
  LODWORD(STACK[0x720]) = LODWORD(STACK[0x718]) - ((2 * LODWORD(STACK[0x718]) - 727780238) & 0xC35EA436);
  *((_DWORD *)&STACK[0x860] + (unsigned __int16)v96) = v101
                                                     + (v77 ^ 0xDA6B6737)
                                                     + 1409321332
                                                     - ((2 * (v101 + (v77 ^ 0xDA6B6737)) + 770884778) & 0x7A0E4E3E);
  int v113 = (v112 ^ 0xADC93A08 | v54) ^ v104;
  LODWORD(v95) = v95 ^ (v92 - 1942326222);
  *((_DWORD *)&STACK[0x860] + (unsigned __int16)(v97 - 11224) % 0x114u) = v95 ^ 0xC2911B96;
  int v114 = (v92 - 1942326222) ^ (v100 - 1785256784);
  int v115 = (v114 - 614722942) ^ 0x5A9F3FB1;
  LODWORD(v54) = v115 + ((v88 - ((2 * (v88 - 1239619307)) & 0xB4EE78F4) + 278144399) ^ 0x455CD9F2 ^ v103);
  int v116 = (((v105 ^ 0x5647C8F8) + (v105 ^ v95 ^ 0xB693D21A) + 1) ^ ((v107 ^ 0x23DC0296) + (v107 ^ v95 ^ 0xC3081874) + 1) ^ ((v95 ^ 0x266845F9 ^ (((v88 - 1239619307) ^ v103 ^ 0x78FE205B ^ v113) - ((2 * ((v88 - 1239619307) ^ v103 ^ 0x78FE205B ^ v113)) & 0x728741C8) + 960733412)) - ((v88 - 1239619307) ^ v103 ^ 0x78FE205B ^ v113)))
       - v106;
  *((_DWORD *)&STACK[0x860] + (unsigned __int16)v101) = v113 ^ 0x5AD2E2CC;
  int v117 = STACK[0x6F4];
  *((_DWORD *)&STACK[0x860] + (unsigned __int16)(LOWORD(STACK[0x6F4]) + 16835) % 0x114u) = v116
                                                                                         + 2119146050
                                                                                         - ((2 * v116 + 43050566) & 0x7A0E4E3E);
  int v118 = ((1239619306 - v102) & 0x86F6821B)
       + ((v92 - 1942326222) ^ 0x1F2BE588)
       + ((v54 - 391893079 - ((2 * v54) & 0xD1485F52)) ^ 0x175BD056)
       + (v105 & 0x86F6821B ^ 0x80B00203)
       - (((v112 ^ 0xADC93A45) + (v112 & 0xADC93BB2 ^ 0x5236C5FF) + 1) | v111 & 0x4D ^ 0x41);
  unsigned int v119 = v115
       - ((v103 ^ 0xBE1445AA)
        + 1492057882)
       - 706852913
       - ((2 * (v115 - ((v103 ^ 0xBE1445AA) + 1492057882))) & 0xABBC8F9E);
  LODWORD(v54) = LODWORD(STACK[0x6D4]) - 1678;
  *((_DWORD *)&STACK[0x860] + (unsigned __int16)(v117 + 30765) % 0x114u) = (v113 ^ 0x67D5C5D3)
                                                                         + v114
                                                                         + 1409321332
                                                                         - ((2 * ((v113 ^ 0x67D5C5D3) + v114) + 770884778) & 0x7A0E4E3E);
  int v120 = (v119 ^ 0x2A21B830) + v118 + 584614049 + 1;
  unsigned int v121 = (2 * v120) & 0xFCBDF7C8;
  unsigned int v122 = (v120 ^ 0xFE5EFBE4) + 67102588;
  unsigned int v123 = LODWORD(STACK[0x728]) - 835669351;
  LODWORD(STACK[0x720]) = v122 + v121;
  LODWORD(STACK[0x710]) = (v119 ^ 0xD9302B17) + 2089319418 + ((2 * v119) & 0xFFFF9DAE ^ 0x4D9F8980);
  return (*(uint64_t (**)(void))(v109 + 8LL * (int)((57 * (v123 < 0x10)) ^ v54)))();
}

uint64_t sub_1001B66D0()
{
  LODWORD(STACK[0x6D8]) = 302841948 - v2;
  LODWORD(STACK[0x660]) = 16 * (LOBYTE(STACK[0xFA8]) ^ 0x51);
  LODWORD(STACK[0x6F4]) = -234080212;
  LODWORD(STACK[0x664]) = 234080250;
  LODWORD(STACK[0x6D4]) = 16716;
  LODWORD(STACK[0x6F0]) = 29850;
  LODWORD(STACK[0x6E8]) = 28059;
  LODWORD(STACK[0x718]) = 211;
  LODWORD(STACK[0x66C]) = 536870946;
  int v7 = STACK[0x6E4];
  LODWORD(STACK[0x70C]) = v3;
  LODWORD(STACK[0x6C0]) = 76110607;
  LODWORD(STACK[0x728]) = 0;
  LODWORD(STACK[0x68C]) = -468160482;
  LODWORD(STACK[0x668]) = -234080242;
  LODWORD(STACK[0x688]) = 45173;
  STACK[0x690] = 163LL;
  LODWORD(STACK[0x680]) = 43780;
  STACK[0x698] = 158LL;
  LODWORD(STACK[0x67C]) = 31243;
  LODWORD(STACK[0x678]) = 16318;
  LODWORD(STACK[0x674]) = 2786;
  LODWORD(STACK[0x670]) = 199;
  unsigned int v8 = *((_DWORD *)&STACK[0x860] + 0x35A3 % (v7 ^ 0x9D5u));
  HIDWORD(v10) = LODWORD(STACK[0xB7C]) ^ 0xB;
  LODWORD(v10) = LODWORD(STACK[0xB7C]) ^ 0xDDBAFE80;
  int v9 = v10 >> 7;
  HIDWORD(v10) = LODWORD(STACK[0xB7C]) ^ 0x2FE8B;
  LODWORD(v10) = LODWORD(STACK[0xB7C]) ^ 0xDDB80000;
  int v11 = v10 >> 18;
  int v12 = v9 ^ (LODWORD(STACK[0xB7C]) >> 3);
  HIDWORD(v10) = v8 ^ 0x1F;
  LODWORD(v10) = v8 ^ 0x3D072700;
  int v13 = v10 >> 7;
  int v14 = v12 ^ v11;
  HIDWORD(v10) = v8 ^ 0x3271F;
  LODWORD(v10) = v8 ^ 0x3D040000;
  int v15 = v10 >> 18;
  HIDWORD(v10) = LODWORD(STACK[0x8C8]) ^ 0xFE8B;
  LODWORD(v10) = LODWORD(STACK[0x8C8]) ^ 0xDDBA0000;
  int v16 = (LODWORD(STACK[0x8C8]) << 13) ^ (LODWORD(STACK[0x8C8]) >> 10) ^ (v10 >> 17) ^ ((LODWORD(STACK[0x8C8]) ^ 0xDDBAFE8B) >> 19);
  int v17 = v13 ^ (v8 >> 3) ^ v15 ^ 0x7A0E4E3;
  HIDWORD(v10) = LODWORD(STACK[0x8E8]) ^ 0x1271F;
  LODWORD(v10) = LODWORD(STACK[0x8E8]) ^ 0x3D060000;
  int v18 = v10 >> 17;
  HIDWORD(v10) = LODWORD(STACK[0x8E8]) ^ 0x7271F;
  LODWORD(v10) = LODWORD(STACK[0x8E8]) ^ 0x3D000000;
  int v19 = (LODWORD(STACK[0x8E8]) >> 10) ^ 0xF41C9 ^ v18 ^ (v10 >> 19);
  int v20 = STACK[0x710];
  unsigned int v21 = LODWORD(STACK[0x710]) - ((2 * LODWORD(STACK[0x710]) + 1240081176) & 0xE3F6F82E) + 384863651;
  unsigned int v22 = (v0 ^ 0xD985B85C) + 1653622086;
  unsigned int v23 = (v1 ^ 0xFBE5A4D9) + 1653622086;
  unsigned int v24 = ((v4 ^ 0xA76B378F) + (v4 ^ 0x432397A1 ^ v14) + 1) ^ ((v1 ^ 0x41A5B26) + (v1 ^ 0xE052FB08 ^ v14) + 1) ^ ((v14 ^ 0xD6DB98A0 ^ ((v0 ^ v5 ^ 0x1AD5AADD ^ v17) - ((2 * (v0 ^ v5 ^ 0x1AD5AADD ^ v17)) & 0x9AD98EE2) - 848509071)) - (v0 ^ v5 ^ 0x1AD5AADD ^ v17));
  unsigned int v25 = (v22 ^ 0x8984EEB7) + LODWORD(STACK[0x720]) - 39773024 + (v21 ^ 0x71FB7C17);
  unsigned int v26 = v22 ^ 0xF87F92A0 ^ v21;
  int v27 = v22 ^ 0x10E3AEE2 ^ (v19 - ((2 * v19) & 0x32CE80AA) - 1721286571);
  unsigned int v28 = (v5 ^ 0xC3501281) + 1921811461;
  int v29 = v28 - v26 - 2001759974 - ((2 * (v28 - v26)) & 0x115F2234);
  int v30 = (v27 - 2001759974 - ((2 * v27) & 0x115F2234)) ^ v29;
  unsigned int v31 = (v16 ^ 0x94BEFD20 ^ (v30 - ((2 * v30) & 0x96B1E73E) - 883362913)) - v30;
  unsigned int v32 = (v23 ^ 0x8984EEB7 ^ (v6 + 466256572)) + 395932768 - ((2 * (v23 ^ 0x8984EEB7 ^ (v6 + 466256572))) & 0x2F32E8C0);
  int v33 = v6;
  unsigned int v34 = (v4 ^ 0x5894C870) + (v32 ^ 0xE8668B9F) + 1;
  LODWORD(STACK[0x6C8]) = v34;
  int v35 = v34 - ((2 * v34 + 622397450) & 0x3A8A35F4) + 265395967;
  unsigned int v36 = ((2 * ((v25 ^ 0x1E6F9566) + (v21 ^ 0x71FB7C17))) & 0xF1FFCFFE)
      + (((v25 ^ 0x1E6F9566) + (v21 ^ 0x71FB7C17)) ^ 0xF8FFE7FF);
  LODWORD(STACK[0x720]) = v36;
  unsigned int v37 = (v23 ^ 0x767B1148) + (v23 ^ 0xD662E008 ^ v16);
  int v38 = v22 ^ 0x12B7FAD ^ v29;
  unsigned int v39 = LODWORD(STACK[0x70C]) + v33 - 594237328 + (v23 ^ 0x8984EEB7);
  unsigned int v40 = v16 ^ v35 ^ 0xC2A31445;
  unsigned int v41 = v36 + 117446657;
  unsigned int v42 = v38 + v41 - 785132199 - ((2 * (v38 + v41)) & 0xA267AAB2);
  LODWORD(STACK[0x6A4]) = v42;
  unsigned int v43 = LODWORD(STACK[0x6F0]) / 0x114;
  int v44 = ((v35 ^ 0x62BAE505) + v40 + 1) ^ (v37 + 1);
  unsigned int v45 = LODWORD(STACK[0x6E8]) / 0x114;
  int v46 = v44 ^ v31;
  v29 ^= 0x88AF911A;
  LODWORD(STACK[0x6B8]) = v23 ^ 0x14C1F44D ^ v35;
  unsigned int v47 = v20 - 2089306833 + ((1527443059 - v20) & 0x5F4B0935) + (v21 & 0x5F4B0935 ^ 0x514B0815) - v29;
  LODWORD(STACK[0x6B0]) = v47 - ((2 * v47 + 2061522264) & 0x643F1B2E);
  LODWORD(STACK[0x6A8]) = v29 - 468897359 + (v42 ^ 0xD133D559);
  LODWORD(STACK[0x6D0]) = v33;
  LODWORD(STACK[0x70C]) = v33 - v34 - ((2 * (v33 - v34) + 150449270) & 0x33051DD6);
  int v48 = (v39 ^ 0x1E6F9566) + v33;
  unsigned int v49 = LODWORD(STACK[0x6D8])
      + v26
      + (*((_DWORD *)&STACK[0x860] + LODWORD(STACK[0x728]) - 276 * v45 + 28059) ^ 0x3D07271F)
      + (*((_DWORD *)&STACK[0x860] + LODWORD(STACK[0x728]) - 276 * v43 + 29850) ^ 0x3D07271F)
      + v19
      - 2094927013
      + v24;
  *((_DWORD *)&STACK[0x860] + (LODWORD(STACK[0x728]) + 55)) = v49
                                                                          + 2119146050
                                                                          - ((2 * v49 + 43050566) & 0x7A0E4E3E);
  unsigned int v50 = v20
      + (v32 ^ 0x17997460)
      + ((2 * v32) ^ 0xD0CD173F)
      + (*((_DWORD *)&STACK[0x860]
         + ((LODWORD(STACK[0x6F4]) | LODWORD(STACK[0x718])) & 0xC7u) * LODWORD(STACK[0x718]) % 0x114) ^ 0x3D07271F)
      + (*((_DWORD *)&STACK[0x860] + LODWORD(STACK[0x728]) - 276 * STACK[0x698] + 43780) ^ 0x3D07271F)
      + v17
      + 1434775686
      + v46;
  unsigned int v51 = v50 - v48 - ((2 * (v50 - v48) + 141228680) & 0x8C5A646) - 392671129;
  *((_DWORD *)&STACK[0x860] + LODWORD(STACK[0x728]) - 276 * STACK[0x690] + 45173) = v50
                                                                                                + 1409321332
                                                                                                - ((2 * v50 + 770884778) & 0x7A0E4E3E);
  unsigned int v52 = v49 + v41 - ((2 * (v49 + v41)) & 0x4A8B4268) + 625320244;
  unint64_t v53 = STACK[0x700];
  int v54 = ((v52 >> 23) & 0x10 | HIBYTE(v52) & 0xF) ^ 0x20D;
  unint64_t v55 = (unint64_t)(*(unsigned __int8 *)(STACK[0x700]
                                              + (unsigned __int16)(7 * ((v52 >> 28) ^ 2)
                                                                 + 3640
                                                                 - 960
                                                                 * ((unsigned __int16)((2185
                                                                                      * (7 * ((v52 >> 28) ^ 2) + 3640)) >> 16) >> 5))) ^ 0x51u) << ((v28 & 0x3A) - 54 + (v28 & 0x3A ^ 0x3A));
  int v56 = 7 * ((v52 >> 20) & 0xF ^ 4) + 3640;
  int v57 = 7 * (HIWORD(v52) & 0xF ^ 5) + 3640;
  int v58 = 7 * (((unsigned __int16)(v52 & 0xF000) >> 12) ^ 0xA) + 3640;
  LODWORD(v55) = *(unsigned __int8 *)(STACK[0x700]
                                    + (unsigned __int16)(7 * v54
                                                       - 960
                                                       * ((unsigned __int16)((15295 * v54) >> 16) >> 5))) ^ 0x51 ^ v55;
  int v59 = *(unsigned __int8 *)(STACK[0x700]
                           + (unsigned __int16)(v57 - 960 * ((unsigned __int16)((2185 * v57) >> 16) >> 5))) ^ 0x51;
  int v60 = *(unsigned __int8 *)(STACK[0x700]
                           + (unsigned __int16)(v58 - 960 * ((unsigned __int16)((2185 * v58) >> 16) >> 5)));
  int v61 = 7 * ((v52 >> 8) & 0xF ^ 1) + 3640;
  LODWORD(v55) = ((v59 << 8) | ((_DWORD)v55 << 16)) ^ ((*(unsigned __int8 *)(STACK[0x700]
                                                                           + (unsigned __int16)(v56
                                                                                              - 960
                                                                                              * ((unsigned __int16)((2185 * v56) >> 16) >> 5))) ^ 0x51) << 12) | *(unsigned __int8 *)(STACK[0x700] + (unsigned __int16)(v61 - 960 * ((unsigned __int16)((2185 * v61) >> 16) >> 5))) ^ 0x51;
  int v62 = 7 * ((v52 >> 4) ^ 3) + 3640;
  unsigned int v63 = (((_DWORD)v55 << 8) ^ ((v60 ^ 0x51) << 12))
      - 411471542
      - ((2 * (((_DWORD)v55 << 8) ^ ((v60 ^ 0x51) << 12))) & 0xCEF2E200);
  LODWORD(v55) = *(unsigned __int8 *)(STACK[0x700]
                                    + (unsigned __int16)(7 * (v52 & 0xF ^ 4)
                                                       + 3640
                                                       - 960
                                                       * ((unsigned __int16)((2185 * (7 * (v52 & 0xF ^ 4) + 3640)) >> 16) >> 5)));
  int v64 = v55 ^ 0x51;
  int v65 = 7 * (HIBYTE(v51) & 0xF ^ 4) + 3640;
  unsigned int v66 = (v63 ^ 0xE779714A | ((v55 ^ 0x51) + 172520104 - ((2 * v55) & 0x150)) ^ 0xA4872A8) ^ (16
                                                                                           * (*(unsigned __int8 *)(STACK[0x700] + (unsigned __int16)(v62 - 960 * ((unsigned __int16)((2185 * v62) >> 16) >> 5))) ^ 0x51));
  LODWORD(v55) = 7 * ((v51 >> 20) & 0xF ^ 6) + 3640;
  int v67 = 7 * (HIWORD(v51) & 0xF ^ 2) + 3640;
  int v68 = ((*(unsigned __int8 *)(STACK[0x700]
                             + (unsigned __int16)(v65 - 960
                                                      * ((unsigned __int16)((2185 * v65) >> 16) >> 5))) ^ 0x51) << 8) ^ ((*(unsigned __int8 *)(STACK[0x700] + (unsigned __int16)(7 * (v51 >> 28) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * (v51 >> 28) + 3640)) >> 16) >> 5))) ^ 0x51) << 12) | *(unsigned __int8 *)(STACK[0x700] + (unsigned __int16)(v67 - 960 * ((unsigned __int16)((2185 * v67) >> 16) >> 5))) ^ 0x51;
  int v69 = 7 * (((unsigned __int16)(v51 & 0xF000) >> 12) ^ 0xD) + 3640;
  int v70 = 7 * ((v51 >> 8) & 0xF ^ 3) + 3640;
  LODWORD(v55) = (v68 << 8) ^ ((*(unsigned __int8 *)(STACK[0x700]
                                                   + (unsigned __int16)(v55
                                                                      - 960
                                                                      * ((unsigned __int16)((2185 * v55) >> 16) >> 5))) ^ 0x51) << 12);
  int v71 = *(unsigned __int8 *)(STACK[0x700]
                           + (unsigned __int16)(v69 - 960 * ((unsigned __int16)((2185 * v69) >> 16) >> 5))) ^ 0x51;
  int v72 = *(unsigned __int8 *)(STACK[0x700]
                           + (unsigned __int16)(v70 - 960 * ((unsigned __int16)((2185 * v70) >> 16) >> 5))) ^ 0x51;
  int v73 = 7 * ((v51 >> 4) ^ 2) + 3640;
  unsigned int v74 = ((v55 | v72) << 8) - 1901918075 - (((v55 | v72) << 9) & 0x1D461000);
  unsigned int v75 = v74 ^ (v71 << 12);
  LODWORD(v55) = *(unsigned __int8 *)(STACK[0x700]
                                    + (unsigned __int16)(7 * (v51 & 0xF ^ 3)
                                                       + 3640
                                                       - 960
                                                       * ((unsigned __int16)((2185 * (7 * (v51 & 0xF ^ 3) + 3640)) >> 16) >> 5)));
  __int16 v76 = (v64 + 29352) & 0xF ^ 8;
  LODWORD(v55) = v55 ^ 0x51;
  unsigned int v77 = (v75 ^ 0x8EA30885 | v55) ^ (16
                                  * (*(unsigned __int8 *)(STACK[0x700]
                                                        + (unsigned __int16)(v73
                                                                           - 960
                                                                           * ((unsigned __int16)((2185 * v73) >> 16) >> 5))) ^ 0x51));
  unsigned int v78 = 7 * (((v64 + 172520104) & 0xF ^ 8) & 0xFFFFFF0F | (16 * (v55 & 0xF)));
  int v79 = *(unsigned __int8 *)(STACK[0x700] + (unsigned __int16)(v78 + 3983) % 0x3C0u);
  if (v78 >= 0x3C0) {
    v78 -= 960;
  }
  unsigned int v80 = v79 ^ LODWORD(STACK[0x660]) ^ 0x51;
  int v81 = (v66 >> 4) - 506352938 - ((v66 >> 3) & 0x3A355AC);
  int v82 = 7 * v80;
  v80 *= 244671;
  unsigned int v83 = v82 - 960 * ((v80 + 139217799) >> 25);
  int v84 = *(unsigned __int8 *)(v53 + (unsigned __int16)(v82 - 960 * (v80 >> 25))) >> 4;
  unsigned int v85 = 7 * ((v77 & 0xF0 | v81 & 0xF) ^ 6);
  int v86 = *(unsigned __int8 *)(v53 + (unsigned __int16)(v83 + 3983));
  unsigned int v87 = 7
  unsigned int v88 = v85 - 960;
  if (v85 < 0x3C0) {
    unsigned int v88 = 7 * ((v77 & 0xF0 | v81 & 0xF) ^ 6);
  }
  unsigned int v89 = *(unsigned __int8 *)(v53 + (unsigned __int16)(7 * ((v77 & 0xF0 | v81 & 0xF) ^ 6) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v53 + v87 % 0x3C0) ^ 0x51)) ^ 0x51;
  int v90 = *(unsigned __int8 *)(v53 + v88);
  __int16 v91 = 7 * v89;
  v89 *= 244671;
  int v92 = *(unsigned __int8 *)(v53 + (unsigned __int16)(v91 - 960 * ((v89 + 139217799) >> 25) + 3983));
  int v93 = *(unsigned __int8 *)(v53 + (unsigned __int16)(v91 - 960 * (v89 >> 25))) >> 4;
  int v94 = 7 * (((v93 ^ 5) - 2 * ((v93 ^ 5) & 3 ^ v93 & 2) + 81) ^ v90) + 3983;
  unsigned int v95 = 7
      * ((v77 >> 4) & 0xF0 ^ ((v52 & 0x6CC400F1 ^ 0x488000C1) + (v52 & 0x6CC400F1 ^ 0x24440030) - 1824784610) & (v66 >> 8));
  int v96 = *(unsigned __int8 *)(v53
                           + v95
                           + 3983
                           - 960 * (((143165577 * (unint64_t)(v95 + 3983)) >> 32) >> 5));
  int v97 = v96 ^ (16
             * (*(unsigned __int8 *)(v53
                                   + (unsigned __int16)(v94
                                                      - 960
                                                      * ((unsigned __int16)((8739 * v94) >> 16) >> 7))) ^ 0x51));
  int v98 = v86 ^ (16 * (v92 ^ 0x51)) ^ ((*(unsigned __int8 *)(v53 + (unsigned __int16)(7 * (v97 ^ 0x51) + 3983) % 0x3C0u) ^ 0x51) << 8);
  int v99 = *(unsigned __int8 *)(v53 + v95 - 960 * (((143165577 * (unint64_t)v95) >> 32) >> 5));
  if ((v97 ^ 0x50u) <= 0x89) {
    unsigned int v100 = 7 * (v97 ^ 0x51);
  }
  else {
    unsigned int v100 = (7 * (v97 ^ 0x51u) - 960) % 0x3C0;
  }
  int v101 = *(unsigned __int8 *)(v53 + v100) >> 4;
  int v102 = ((v101 ^ 5) - 2 * ((v101 ^ 5) & 0xF9 ^ v101 & 8) + 81) ^ v99;
  unsigned int v103 = 7 * (((v75 >> 8) & 0xF0 | ((unsigned __int16)v63 >> 12)) ^ 7);
  int v104 = 16
       * (*(unsigned __int8 *)(v53
                             + (unsigned __int16)(7 * v102
                                                + 3983
                                                - 960
                                                * ((unsigned __int16)((8739 * (7 * v102 + 3983)) >> 16) >> 7))) ^ 0x51);
  int v105 = *(unsigned __int8 *)(v53
  unsigned int v106 = 7 * (v104 + v105 - 2 * (v104 & v105));
  __int16 v107 = v106 + 3983;
  unsigned __int16 v108 = v106 + 3983;
  if (v103 >= 0x3C0) {
    v103 -= 960;
  }
  char v109 = (*(_BYTE *)(v53 + v106 % 0x3C0) >> 4) ^ 5;
  int v110 = 7 * ((v109 - 2 * (v109 & 1) + 81) ^ *(unsigned __int8 *)(v53 + v103)) + 3983;
  unsigned int v111 = 7 * (((v75 >> 12) & 0xF0 | HIWORD(v63) & 0xF) ^ 0x39);
  int v112 = *(unsigned __int8 *)(v53 + (unsigned __int16)(v111 + 3983) % 0x3C0u) ^ (16
                                                                               * (*(unsigned __int8 *)(v53 + (unsigned __int16)(v110 - 960 * ((unsigned __int16)((8739 * v110) >> 16) >> 7))) ^ 0x51)) ^ 0x51;
  int v113 = v98 ^ ((*(unsigned __int8 *)(v53 + (unsigned __int16)(v107 - 960 * (v108 / 0x3C0u))) ^ 0x51) << 12);
  int v114 = *(unsigned __int8 *)(v53 + (unsigned __int16)(7 * v112 + 3983) % 0x3C0u) ^ 0x51;
  if (v111 >= 0x3C0) {
    v111 -= 960;
  }
  char v115 = (*(_BYTE *)(v53
                   + (unsigned __int16)(7 * v112 - 960 * ((unsigned __int16)((244671 * v112) >> 16) >> 9))) >> 4) ^ 5;
  int v116 = 7 * ((v115 - 2 * (v115 & 1) + 81) ^ *(unsigned __int8 *)(v53 + v111));
  unsigned __int16 v117 = 7 * (((v63 >> 20) & 0xF | (16 * (((v96 & 0xF ^ 0xE) + (v96 & 0xF ^ 1)) & ((v74 >> 20) ^ 0xA)))) ^ 7);
  unsigned int v118 = *(unsigned __int8 *)(v53 + (unsigned __int16)(v117 + 3983) % 0x3C0u) ^ (16
                                                                               * (*(unsigned __int8 *)(v53 + (unsigned __int16)(v116 + 3983 - 960 * ((unsigned __int16)((8739 * (v116 + 3983)) >> 16) >> 7))) ^ 0x51)) ^ 0x51;
  __int16 v119 = 7 * v118;
  v118 *= 244671;
  int v120 = v113 ^ (v114 << 16) ^ ((*(unsigned __int8 *)(v53
                                                    + (unsigned __int16)(v119 - 960 * ((v118 + 139217799) >> 25) + 3983)) ^ 0x51) << 20);
  LOWORD(v11_Block_object_dispose((const void *)(v9 - 96), 8) = v119 - 960 * (v118 >> 25);
  int v121 = v120 ^ 0x51;
  LOBYTE(v11_Block_object_dispose((const void *)(v9 - 96), 8) = (*(_BYTE *)(v53 + (unsigned __int16)v118) >> 4) ^ 5;
  int v122 = (v118 - 2 * (v118 & 1) + 81) ^ *(unsigned __int8 *)(v53 + v117 % 0x3C0u);
  unsigned int v123 = 7 * (((v74 >> 20) & 0xF0 | HIBYTE(v63) & 0xF) ^ 0xE7);
  int v124 = *(unsigned __int8 *)(v53
                            + (unsigned __int16)(7 * v122
                                               + 3983
                                               - 960
                                               * ((unsigned __int16)((8739 * (7 * v122 + 3983)) >> 16) >> 7))) ^ 0x51;
  if (v123 >= 0x3C0) {
    v123 -= 960;
  }
  unsigned int v125 = *(unsigned __int8 *)(v53
                            + (unsigned __int16)(7 * (((v74 >> 20) & 0xF0 | HIBYTE(v63) & 0xF) ^ 0xE7) + 3983) % 0x3C0u) ^ (16 * v124) ^ 0x51;
  __int16 v126 = 7 * v125;
  v125 *= 244671;
  int v127 = *(unsigned __int8 *)(v53 + (unsigned __int16)(v126 - 960 * ((v125 + 139217799) >> 25) + 3983));
  int v128 = *(unsigned __int8 *)(v53 + (unsigned __int16)(v126 - 960 * (v125 >> 25))) >> 4;
  int v129 = 7 * (*(_BYTE *)(v53 + v123) ^ 0x54 ^ v128);
  unsigned int v130 = (((v127 ^ 0x51) << 24) & 0x8D000000 ^ v121 & 0x8DD89A41 | ((v127 ^ 0x51) << 24) & 0x72000000 ^ v121 & 0x722765BE)
       + 1874848151
       - ((2
         * (((v127 ^ 0x51) << 24) & 0x8D000000 ^ v121 & 0x8DD89A41 | ((v127 ^ 0x51) << 24) & 0x72000000 ^ v121 & 0x722765BE)) & 0xDF7FD32E);
  unsigned int v131 = *(unsigned __int8 *)(v53
                            + (unsigned __int16)(7
                                               * (*(unsigned __int8 *)(v53
                                                                     + (unsigned __int16)(7
                                                                                        * (((((v128 ^ 0xAAAA)
                                                                                            + (v128 ^ 0x5555)) | 4) & ((v63 >> 28) ^ 0xE) | (16 * (v74 >> 28))) ^ 0x80)
                                                                                        + 3983)
                                                                     % 0x3C0u) ^ (unsigned __int16)(16
                                                                                                  * (*(unsigned __int8 *)(v53 + (unsigned __int16)(v129 + 3023 - 960 * ((unsigned __int16)((8739 * (v129 + 3023)) >> 16) >> 7))) ^ 0x51)) ^ 0x51)
                                               + 3983)
                            % 0x3C0u);
  unsigned int v132 = (((v131 ^ 1) << 28) + 1874848151 - (v131 >> 1 << 30)) ^ v130;
  __int16 v133 = v76 & 0xFF0F | (16 * ((v121 - 5737 - ((2 * v121) & 0xD32E)) & 0xF));
  int v134 = v81 ^ 0x2E2E5526;
  if (LODWORD(STACK[0x6A4]) == 1786591790) {
    int v134 = 15;
  }
  unsigned int v135 = v134 & (v81 ^ 0xE1D1AAD6) ^ 0x90 ^ ((_BYTE)v121 - 105 - ((2 * (_BYTE)v121) & 0x2E)) & 0xF0;
  char v136 = *(_BYTE *)(v53 + (unsigned __int16)(7 * (v133 ^ 0x70) + 1813) % 0x3C0u);
  unsigned int v137 = (7 * v135 + 1813) % 0x3C0;
  int v138 = 7 * (((v130 >> 4) & 0xF0 | (v66 >> 8) & 0xF) ^ 0x90) + 1813;
  unsigned __int16 v139 = v138 - 960 * ((unsigned __int16)((2185 * v138) >> 16) >> 5);
  int v140 = 7 * (((v130 >> 8) & 0xF0 | ((unsigned __int16)v63 >> 12)) ^ 0xE7) + 1813;
  unsigned int v141 = v140 - 960 * ((2185 * v140) >> 21);
  int v142 = (v130 >> 12) & 0xF0 | HIWORD(v63) & 0xF;
  unsigned __int16 v143 = 7 * (v142 ^ 0xF9) + 1813 - 960 * ((unsigned __int16)((2185 * (7 * (v142 ^ 0xF9u) + 1813)) >> 16) >> 5);
  int v144 = 7 * ((HIWORD(v132) & 0xF0 | (v63 >> 20) & 0xF) ^ 7) + 1813;
  int v145 = *(unsigned __int8 *)(v53 + v137);
  *((_DWORD *)&STACK[0x860] + 199 * (LODWORD(STACK[0x6C0]) ^ 0x4895B1Fu) % 0x114) = v52 ^ (LODWORD(STACK[0x6A8])
                                                                                         - ((2 * LODWORD(STACK[0x6A8])
                                                                                           + 1097461142) & 0x4A8B4268)
                                                                                         - 973432833) ^ 0xDDBAFE8B;
  v145 ^= 0x51u;
  int v146 = 7
       * ((HIBYTE(v63) & 0xF | (16
                              * ((v132 >> 20 >> (((HIBYTE(v63) & 0x86 ^ 0x86)
                                                + (HIBYTE(v63) & 0x86)
                                                - (v136 & 0x82)
                                                - (v136 & 0x82 ^ 0x82)) & 0xFE)) & 0xF))) ^ 7)
       + 1813;
  unsigned int v147 = (16 * v145) ^ ((*(unsigned __int8 *)(v53 + v139) ^ 0x51) << 8);
  int v148 = v147 ^ ((*(unsigned __int8 *)(v53 + (unsigned __int16)v141) ^ 0x51) << 12);
  unsigned int v149 = v148 ^ ((*(unsigned __int8 *)(v53 + v143) ^ 0x51) << 16);
  unsigned int v150 = v149 ^ ((*(unsigned __int8 *)(v53
                                     + (unsigned __int16)(v144
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v144) >> 16) >> 5))) ^ 0x51) << 20);
  unsigned int v151 = v150 ^ ((*(unsigned __int8 *)(v53
                                     + (unsigned __int16)(v146
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v146) >> 16) >> 5))) ^ 0x51) << 24);
  int v152 = 7
       * (((v132 >> 20 >> (((HIBYTE(v63) & 0x86 ^ 0x86) + (HIBYTE(v63) & 0x86) - (v136 & 0x82) - (v136 & 0x82 ^ 0x82)) & 0xFE)) & 0xF0 | (v63 >> 28)) ^ 0xE)
       + 1813;
  unsigned int v153 = v151 ^ ((*(unsigned __int8 *)(v53
                                     + (unsigned __int16)(v152
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v152) >> 16) >> 5))) ^ 1) << 28);
  int v154 = ((v153 >> 27) & 4) + ((v153 >> 28) ^ 0x222);
  int v155 = 7 * (HIWORD(v149) & 0xF) + 3822;
  char v156 = 16 * v145 + (~(32 * v145) | 0x5F);
  int v157 = 7 * ((unsigned __int16)v148 >> 12) + 3822;
  int v158 = 7 * (((v156 + 82) ^ v136) >> 4) + 3822;
  int v159 = ((((((*(unsigned __int8 *)(v53
                                  + (unsigned __int16)(7 * (HIBYTE(v151) & 0xF)
                                                     + 3822
                                                     - 960
                                                     * ((unsigned __int16)((2185
                                                                                        * (7 * (HIBYTE(v151) & 0xF)
                                                                                         + 3822)) >> 16) >> 5))) ^ 0x51) << 8) ^ ((*(unsigned __int8 *)(v53 + (unsigned __int16)(7 * v154 - 960 * ((unsigned __int16)((15295 * v154) >> 16) >> 5))) ^ 0x51) << 12) | *(unsigned __int8 *)(v53 + (unsigned __int16)(v155 - 960 * ((unsigned __int16)((2185 * v155) >> 16) >> 5))) ^ 0x51) << 8) ^ ((*(unsigned __int8 *)(v53 + (unsigned __int16)(7 * ((v150 >> 20) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((v150 >> 20) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x51) << 12) | *(unsigned __int8 *)(v53 + (unsigned __int16)(7 * ((v147 >> 8) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((v147 >> 8) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x51) << 8) ^ ((*(unsigned __int8 *)(v53 + (unsigned __int16)(v157 - 960 * ((unsigned __int16)((2185 * v157) >> 16) >> 5))) ^ 0x51) << 12) | *(unsigned __int8 *)(v53 + (unsigned __int16)(7 * (v136 & 0xF ^ 1) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (v136 & 0xF ^ 1u) + 3822)) >> 16) >> 5))) ^ 0x51;
  int v160 = LODWORD(STACK[0x6B0]) - 275793853;
  int v161 = LODWORD(STACK[0x70C]) + 1040082214;
  *((_DWORD *)&STACK[0x860] + LODWORD(STACK[0x728]) - 276 * (LODWORD(STACK[0x6D4]) / 0x114) + 16716) = (LODWORD(STACK[0x6C8]) + 320417597 + LODWORD(STACK[0x6B8]) + v48) ^ 0x3D07271F ^ (16 * (*(unsigned __int8 *)(v53 + (unsigned __int16)(v158 - 960 * ((unsigned __int16)((2185 * v158) >> 16) >> 5))) ^ 0x51)) ^ v159;
  LODWORD(STACK[0x710]) = (((v160 ^ 0x11877BC9) - LODWORD(STACK[0x720]) - 1730925557) ^ 0x7DCFFFD7)
                        - 21476614
                        + ((2 * ((v160 ^ 0x11877BC9) - LODWORD(STACK[0x720]) - 1730925557)) & 0xFB9FFFAE);
  unsigned int v162 = (((v161 ^ 0xBA1A78B5) - v48 - 2079735472) ^ 0x47BBF9A7)
       + ((2 * ((v161 ^ 0xBA1A78B5) - v48 - 2079735472)) & 0x8F77F34E);
  int v163 = STACK[0x6E4];
  LODWORD(STACK[0x6D8]) = 1107894278 - v162;
  return ((uint64_t (*)(void))(*(void *)(STACK[0x6F8] + 8LL * ((1752 * (LODWORD(STACK[0x718]) == 258)) ^ v163)) - 4LL))();
}

void sub_1001B7FE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  LODWORD(STACK[0x720]) = v7;
  LODWORD(STACK[0x70C]) = v6 - 1154737923;
  int v8 = STACK[0x66C];
  int v9 = LODWORD(STACK[0x664]) + 1;
  LODWORD(STACK[0x6D4]) = a6 + 199;
  LODWORD(STACK[0x6F0]) += 199;
  LODWORD(STACK[0x6E8]) += 199;
  ++LODWORD(STACK[0x718]);
  --LODWORD(STACK[0x6F4]);
  LODWORD(STACK[0x66C]) = v8 + 2;
  LODWORD(STACK[0x664]) = v9;
  JUMPOUT(0x1001B6778LL);
}

uint64_t sub_1001B80CC@<X0>(int a1@<W8>)
{
  int v8 = LODWORD(STACK[0x570]) + v5 + 2059667914 - ((2 * (LODWORD(STACK[0x570]) + v5 + 2059667914)) & 0x6B56195E);
  unsigned int v9 = v8 + 900402351;
  LODWORD(STACK[0x6D0]) = v6;
  unint64_t v10 = STACK[0x700];
  int v11 = *(unsigned __int8 *)(STACK[0x700]
                           + (unsigned __int16)(7 * ((v9 >> 28) ^ 3)
                                              + 3640
                                              - 960
                                              * ((unsigned __int16)((2185 * (7 * ((v9 >> 28) ^ 3) + 3640)) >> 16) >> 5))) ^ 0x51;
  unsigned int v12 = LODWORD(STACK[0x65C]) ^ 0xD7E9B379;
  LODWORD(STACK[0x55C]) = v12;
  unsigned int v13 = 7 * (((v8 + 900402351) >> 24) & 0xF ^ 5) + 3640;
  unsigned int v14 = v12 - v4 - ((2 * (v12 - v4) + 135496350) & 0xB1EBE098) - 587222629;
  int v15 = ((*(unsigned __int8 *)(v10 + (unsigned __int16)(v13 - 960 * ((unsigned __int16)((2185 * v13) >> 16) >> 5))) ^ 0x51) << 8) ^ (v11 << 12);
  unsigned int v16 = 7 * (((v8 + 900402351) >> 16) & 0xF ^ 0xB) + 3640;
  int v17 = *(unsigned __int8 *)(v10 + (unsigned __int16)(v16 - 960 * ((unsigned __int16)((2185 * v16) >> 16) >> 5))) ^ 0x51 | v15;
  unsigned int v18 = 7 * (((v8 + 900402351) >> 8) & 0xF ^ 0xC) + 3640;
  int v19 = 7 * ((unsigned __int16)(v8 + 3247) >> 12) + 3640;
  int v20 = *(unsigned __int8 *)(v10
                           + (unsigned __int16)(v19 - 960 * ((unsigned __int16)((2185 * v19) >> 16) >> 5))) ^ 0x51;
  int v21 = 7 * (((v8 - 81) >> 4) ^ 0xA) + 3640;
  int v22 = *(unsigned __int8 *)(v10
                           + (unsigned __int16)(v21 - 960 * ((unsigned __int16)((2185 * v21) >> 16) >> 5))) ^ 0x51;
  int v23 = 7 * ((64 - (_BYTE)v8) & 0xF) + 3640;
  int v24 = *(unsigned __int8 *)(v10
                           + (unsigned __int16)(v23 - 960 * ((unsigned __int16)((2185 * v23) >> 16) >> 5)));
  int v25 = (v17 << 8) ^ ((*(unsigned __int8 *)(v10
                                          + (7 * ((v9 >> 20) & 0xF ^ 0xA) + 3640)
                                          % ((((LODWORD(STACK[0x588]) + 472167217) & 0x1464D6C8)
                                            - 30642919
                                            + ((LODWORD(STACK[0x588]) + 472167217) & 0x1464D6C8 ^ 0x1464D6C8)) & 0xE424B7C8)) ^ 0x51) << 12) | *(unsigned __int8 *)(v10 + (unsigned __int16)(v18 - 960 * ((unsigned __int16)((2185 * v18) >> 16) >> 5))) ^ 0x51;
  int v26 = (v25 << 8) - 2065556279 - ((v25 << 9) & 0x9C43800);
  LODWORD(STACK[0x728]) = v26;
  unsigned int v27 = v26 ^ (v20 << 12);
  v24 ^= 0x51u;
  unsigned int v28 = (v27 ^ 0x84E21CC9 | v24) ^ (16 * v22);
  unsigned int v29 = (BYTE2(v14) ^ 0xF5u) >> ((BYTE2(v14) & 4 ^ 4) + (BYTE2(v14) & 4));
  int v30 = 7 * (HIBYTE(v14) & 0xF ^ 8) + 3640;
  unsigned int v32 = (v29 & 7 ^ (((v29 - ((2 * v29) & 0x70) - 72) ^ 0x40)
                                   + ((v29 - ((2 * v29) & 0x70) - 72) & 0xF8 ^ 0xBF)
                                   + 1) ^ 7)
      * ((HIWORD(v14) & 0xF ^ 5) + 520);
  int v33 = 7 * ((unsigned __int16)~(_WORD)v14 >> 12) + 3640;
  int v34 = ((((*(unsigned __int8 *)(v10
                               + (unsigned __int16)(v30
                                                  - 960 * ((unsigned __int16)((2185 * v30) >> 16) >> 5))) ^ 0x51) << 8) ^ ((*(unsigned __int8 *)(v10 + (unsigned __int16)(7 * ((v14 >> 28) ^ 5) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v14 >> 28) ^ 5) + 3640)) >> 16) >> 5))) ^ 0x51) << 12) | *(unsigned __int8 *)(v10 + (v32 - 960 * ((4473925 * (unint64_t)v32) >> 32))) ^ 0x51) << 8) ^ ((v31 ^ 0x51) << 12);
  int v35 = *(unsigned __int8 *)(v10
                           + (unsigned __int16)(v33 - 960 * ((unsigned __int16)((2185 * v33) >> 16) >> 5))) ^ 0x51;
  int v36 = 7 * ((v14 >> 4) ^ 4) + 3640;
  int v37 = *(unsigned __int8 *)(v10
                           + (unsigned __int16)(7 * ((v14 >> 8) & 0xF)
                                              + 3640
                                              - 960
                                              * ((unsigned __int16)((2185 * (7 * ((v14 >> 8) & 0xF) + 3640)) >> 16) >> 5))) ^ 0x51;
  int v38 = *(unsigned __int8 *)(v10
                           + (unsigned __int16)(v36 - 960 * ((unsigned __int16)((2185 * v36) >> 16) >> 5)));
  int v39 = *(unsigned __int8 *)(v10
                           + (unsigned __int16)(7 * (v14 & 0xF ^ 0xC)
                                              + 3640
                                              - 960
                                              * ((unsigned __int16)((2185 * (7 * (v14 & 0xF ^ 0xC) + 3640)) >> 16) >> 5)));
  LODWORD(STACK[0x6E8]) = v24 & 0xF;
  unsigned int v40 = ((v34 | v37) << 8) - 1672767244 - (((v34 | v37) << 9) & 0x38973000);
  unsigned int v41 = v40 ^ (v35 << 12);
  v39 ^= 0x51u;
  unsigned int v42 = (v41 ^ 0x9C4B98F4 | v39) ^ (16 * (v38 ^ 0x51));
  unsigned int v43 = 7 * (v24 & 0xF | (16 * (v39 & 0xF)));
  int v44 = LOBYTE(STACK[0xFA8]) ^ 0x51;
  int v45 = (32 * v44) & 0x1F00;
  v44 *= 16;
  LODWORD(STACK[0x5C4]) = v44;
  int v46 = v44 + 1253351297 - v45;
  LODWORD(STACK[0x6F0]) = v46;
  int v47 = *(unsigned __int8 *)(v10 + (unsigned __int16)(v43 + 3983) % 0x3C0u) ^ 0x51;
  unsigned int v48 = v47 + 1253351297 - ((2 * v47) & 0xFFFFFF03);
  if (v43 >= 0x3C0) {
    v43 -= 960;
  }
  int v49 = *(unsigned __int8 *)(v10 + v43);
  unsigned int v50 = 7 * (v48 ^ v46);
  LODWORD(STACK[0x6C0]) = v50;
  unsigned int v51 = *(unsigned __int8 *)(v10 + v50 % 0x3C0);
  LODWORD(STACK[0x698]) = v28;
  unsigned int v52 = 7 * (v42 & 0xF0 | (v28 >> 4));
  int v53 = 7 * ((((v51 >> 4) ^ 5) - 2 * (((v51 >> 4) ^ 5) & 1) + 81) ^ v49) + 3983;
  int v54 = *(unsigned __int8 *)(v10 + (unsigned __int16)(7 * (v42 & 0xF0 | (v28 >> 4)) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v10 + (unsigned __int16)(v53 - 960 * ((unsigned __int16)((8739 * v53) >> 16) >> 7))) ^ 0x51)) ^ 0x51;
  LODWORD(STACK[0x6B8]) = v54;
  v54 *= 7;
  LODWORD(STACK[0x6B0]) = v54;
  int v55 = v1 + 1730925558;
  unsigned int v56 = (v2 ^ 0x22ED725F) - LODWORD(STACK[0x710]) + (v7 ^ 0x3CAFED7E) + (v55 ^ 0xEF273CCA ^ v7) + 2089306834;
  unsigned int v57 = v7 ^ 0xC3501281;
  unsigned int v58 = ((2 * (v56 ^ (LODWORD(STACK[0x710]) + 1862159571 + v57))) & 0xBFBFEE46)
      + (v56 ^ (LODWORD(STACK[0x710]) + 1862159571 + v57) ^ 0xDFDFF723);
  v55 ^= 0x2C772E4Bu;
  int v59 = (v55 + 1526310849 + v58) ^ v56;
  LODWORD(STACK[0x720]) = v59;
  int v60 = v55 + 987340516;
  LODWORD(STACK[0x5E4]) = v59 + v58 + 538970333;
  unsigned int v61 = (v59 + v58 + 538970333) ^ 0xDCF3890C;
  LODWORD(STACK[0x54C]) = v61;
  LODWORD(STACK[0x6F4]) = v61 + v60;
  unsigned int v62 = LODWORD(STACK[0x58C])
      - 1207157398
      + v61
      + v60
      - ((2 * (LODWORD(STACK[0x58C]) - 1207157398 + v61 + v60) - 2008140650) & 0x8890E2DA);
  LODWORD(STACK[0x648]) = v7;
  LODWORD(STACK[0x6A8]) = v9 ^ v7;
  unsigned int v63 = v62 + 141527992;
  unsigned int v64 = (7 * ((v62 + 141527992) & 0xF ^ 0xD) + 3640)
      % (((7 * ((v62 + 141527992) & 0xF ^ 0xD) + 3640) & 0xCB3 ^ (-3641 - 7 * ((v62 + 141527992) & 0xF ^ 0xD)) & 0xE59AB0B3)
       * (((v9 ^ v7) & 0x5321EFA1 ^ 0x52210E20 | (v9 ^ v7) & 0x5321EFA1 ^ 0x100E181) + 2039700895));
  LOBYTE(v62) = v4 - 79;
  int v65 = (v4 + 2079735473) ^ 0x2C772E4B;
  int v66 = STACK[0x6D0];
  unsigned int v67 = (v3 ^ 0x5843A47A)
      + LODWORD(STACK[0x6D8])
      + (v66 ^ 0xA76B378F)
      + ((v65 + 1486145648 - 2 * (v65 & 0x5894C874 ^ v62 & 4)) ^ v66)
      + 95607202;
  unsigned int v68 = ((2 * (v67 ^ (a1 - 439108093 + (v66 ^ 0x5894C870)))) & 0xB6DD9DBE)
      + (v67 ^ (a1 - 439108093 + (v66 ^ 0x5894C870)) ^ 0xDB6ECEDF);
  int v69 = (v65 + 1600835589 + v68) ^ v67;
  unsigned int v70 = v68 + (v66 ^ 0x5894C870) - ((2 * (v68 + (v66 ^ 0x5894C870)) + 2125325470) & 0xE3F33CA8);
  unsigned int v71 = v68 + 613495073 + v69;
  LODWORD(STACK[0x540]) = v71;
  LODWORD(STACK[0x500]) = v69 + 1175937652 - ((2 * v69) & 0x8C2EC4E8);
  LODWORD(STACK[0x718]) = v65 + 1489241569 + (v71 ^ 0xDCF3890C);
  if (v52 >= 0x3C0) {
    int v72 = v52 - 960;
  }
  else {
    int v72 = 7 * (v42 & 0xF0 | (v28 >> 4));
  }
  LODWORD(STACK[0x608]) = v72;
  unsigned int v73 = 7 * ((v42 >> 4) & 0xF0 | (v28 >> 8) & 0xF);
  unsigned int v74 = 7 * (((v41 >> 8) & 0xF0 | ((unsigned __int16)v27 >> 12)) ^ 0x91);
  unsigned int v75 = 7 * (((v41 >> 12) & 0xF0 | HIWORD(v27) & 0xF) ^ 0xB2);
  LODWORD(STACK[0x678]) = v40;
  unsigned int v76 = 7 * ((HIWORD(v40) & 0xF0 | (LODWORD(STACK[0x728]) >> 20) & 0xF) ^ 0x4E);
  unsigned int v77 = 7 * (((v40 >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x728])) & 0xF) ^ 0xC4);
  unsigned int v78 = ((2
  LODWORD(STACK[0x638]) = v78;
  LODWORD(STACK[0x5F0]) = v73;
  if (v73 >= 0x3C0) {
    v73 -= 960;
  }
  LODWORD(STACK[0x604]) = v73;
  LODWORD(STACK[0x600]) = v74;
  if (v74 >= 0x3C0) {
    v74 -= 960;
  }
  LODWORD(STACK[0x618]) = v74;
  LODWORD(STACK[0x614]) = v75;
  if (v75 >= 0x3C0) {
    v75 -= 960;
  }
  LODWORD(STACK[0x634]) = v75;
  LODWORD(STACK[0x628]) = v76;
  if (v76 >= 0x3C0) {
    v76 -= 960;
  }
  LODWORD(STACK[0x640]) = v76;
  if (v77 >= 0x3C0) {
    unsigned int v79 = v77 - 960;
  }
  else {
    unsigned int v79 = v77;
  }
  LODWORD(STACK[0x66C]) = v79;
  BOOL v80 = v78 - 1525084135 >= 0x3C0;
  int v81 = LODWORD(STACK[0x568]) + 1383941372;
  LODWORD(STACK[0x3D8]) = v81;
  int v82 = v60 + v81;
  unsigned int v83 = v82 - ((2 * v82) & 0xEB0F1580) + 1971817152;
  LODWORD(STACK[0x6D8]) = v83;
  int v84 = 7 * (HIBYTE(v83) & 0xF ^ 5) + 3640;
  int v85 = 7 * ((v83 >> 20) & 0xF ^ 8) + 3640;
  int v86 = 7 * (HIWORD(v83) & 0xF ^ 7) + 3640;
  int v87 = ((*(unsigned __int8 *)(v10
                             + (unsigned __int16)(v84 - 960
                                                      * ((unsigned __int16)((2185 * v84) >> 16) >> 5))) ^ 0x51) << 8) ^ ((*(unsigned __int8 *)(v10 + (unsigned __int16)(7 * ((v83 >> 28) ^ 7) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v83 >> 28) ^ 7) + 3640)) >> 16) >> 5))) ^ 1) << 12) | *(unsigned __int8 *)(v10 + (unsigned __int16)(v86 - 960 * ((unsigned __int16)((2185 * v86) >> 16) >> 5)));
  int v88 = 7 * (((unsigned __int16)(v82 - ((2 * v82) & 0x1580) - 30016) >> 12) ^ 8) + 3640;
  int v89 = 7 * ((v83 >> 8) & 0xF ^ 0xA) + 3640;
  int v90 = 7 * (((v82 - ((2 * v82) & 0x80) - 64) >> 4) ^ 0xC) + 3640;
  int v91 = ((*(unsigned __int8 *)(v10
                             + (unsigned __int16)(v85 - 960
                                                      * ((unsigned __int16)((2185 * v85) >> 16) >> 5))) ^ 0x51) << 20) ^ (v87 << 16) ^ 0x510000;
  unsigned int v92 = v91 + 1826985408 - ((2 * v91) & 0xD9CA0000);
  unsigned int v93 = ((v92 ^ 0x6CE595C0)
       + ((*(unsigned __int8 *)(v10
                              + (unsigned __int16)(v89
                                                 - 960 * ((unsigned __int16)((2185 * v89) >> 16) >> 5))) ^ 0x51) << 8)) ^ ((*(unsigned __int8 *)(v10 + (unsigned __int16)(v88 - 960 * ((unsigned __int16)((2185 * v88) >> 16) >> 5))) ^ 0x51) << 12);
  unsigned int v94 = LODWORD(STACK[0x64C]) ^ 0x83C92D21;
  LODWORD(STACK[0x558]) = v94;
  int v95 = v94 - v65 - 987340516;
  unsigned int v96 = v95 - ((2 * v95) & 0xE24F53C0) + 1898424800;
  int v97 = *(unsigned __int8 *)(v10
                           + (unsigned __int16)(7 * (v82 & 0xF)
                                              + 3640
                                              - 960
                                              * ((unsigned __int16)((2185 * (7 * (v82 & 0xFu) + 3640)) >> 16) >> 5))) ^ 0x51;
  unsigned int v98 = (v93 | v97) ^ (16
                     * (*(unsigned __int8 *)(v10
                                           + (unsigned __int16)(v90
                                                              - 960
                                                              * ((unsigned __int16)((2185 * v90) >> 16) >> 5))) ^ 0x51));
  int v99 = 7 * (HIBYTE(v96) & 0xF ^ 1) + 3640;
  LOWORD(v99) = v99 - 960 * ((unsigned __int16)((2185 * v99) >> 16) >> 5);
  int v100 = 7 * ((v96 >> 20) & 0xF ^ 2) + 3640;
  int v101 = 7 * (HIWORD(v96) & 0xF ^ 7) + 3640;
  int v102 = *(unsigned __int8 *)(v10
                            + (unsigned __int16)(v101
                                               - 960 * ((unsigned __int16)((2185 * v101) >> 16) >> 5))) ^ 0x51 ^ ((unint64_t)(*(unsigned __int8 *)(v10 + (unsigned __int16)v99) ^ (16 * (*(unsigned __int8 *)(v10 + (unsigned __int16)(7 * ((v96 >> 28) ^ 7) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v96 >> 28) ^ 7) + 3640)) >> 16) >> 5))) ^ 0x51)) ^ 0x51u) << (((v99 & 0x18 ^ 0x18) + (v99 & 0x18)) & 0xEF));
  int v103 = 7 * (((unsigned __int16)((v95 - ((2 * v95) & 0x53C0) - 22048) & 0xF000) >> 12) ^ 0xA) + 3640;
  int v104 = *(unsigned __int8 *)(v10
                            + (unsigned __int16)(v103
                                               - 960 * ((unsigned __int16)((2185 * v103) >> 16) >> 5))) ^ 0x51;
  unsigned int v105 = (((v96 >> 8) ^ 0x7127A9) & 0xF | (16 * ((((v96 >> 8) ^ 0x7127A9) >> 3) & 1))) ^ 0x208;
  int v106 = (v102 << 8) ^ ((*(unsigned __int8 *)(v10
                                            + (unsigned __int16)(v100
                                                               - 960
                                                               * ((unsigned __int16)((2185 * v100) >> 16) >> 5))) ^ 0x51) << 12);
  int v107 = *(unsigned __int8 *)(v10 + (unsigned __int16)(7 * v105 - 960 * ((unsigned __int16)((15295 * v105) >> 16) >> 5))) ^ 0x51;
  int v108 = ((v106 | v107) + 7720489 - 2 * ((v106 | v107) & 0x75CE3F ^ v107 & 0x16)) ^ (16 * v104
                                                                                   - ((32 * v104) & 0x1C40)
                                                                                   - 1586115031);
  LOBYTE(v107) = (16 * v104 - ((32 * v104) & 0x40) + 41) & 0x70;
  LOWORD(v95) = 7 * (v95 & 0xF) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * (v95 & 0xFu) + 3640)) >> 16) >> 5);
  unsigned int v110 = (*(unsigned __int8 *)(v10 + (unsigned __int16)v95) ^ 0x51 | (v108 << 8)) ^ ((unint64_t)(*(unsigned __int8 *)(v10 + (unsigned __int16)(v109 - 960 * ((unsigned __int16)((8739 * v109) >> 16) >> 7))) ^ 0x51u) << (((v95 & 0x21 ^ 0x21) + (v95 & 0x21)) ^ 0x25u));
  int v111 = v97 & 0xF;
  LODWORD(STACK[0x690]) = v111;
  unsigned __int16 v112 = 7 * (v111 & 0xFF0F | (16 * (v110 & 0xF)));
  int v113 = *(unsigned __int8 *)(v10 + (unsigned __int16)(v112 + 3983) % 0x3C0u) ^ 0x51;
  int v114 = STACK[0x6F0];
  unsigned int v115 = 7 * ((v113 + 1253351297 - ((2 * v113) & 0xFFFFFF03)) ^ LODWORD(STACK[0x6F0]));
  LODWORD(STACK[0x670]) = v115;
  if (v80) {
    int v116 = -10650628;
  }
  else {
    int v116 = -10649668;
  }
  LODWORD(STACK[0x5D4]) = v116;
  if (v112 >= 0x3C0u) {
    v112 -= 960;
  }
  int v117 = *(unsigned __int8 *)(v10 + v115 % 0x3C0) >> 4;
  int v118 = 7
  unsigned int v119 = v118 - 960 * ((8739 * v118) >> 23);
  LODWORD(STACK[0x674]) = v98;
  unsigned int v120 = 7 * (v110 & 0xF0 | (v98 >> 4));
  if (v120 >= 0x3C0) {
    v120 -= 960;
  }
  unsigned int v121 = *(unsigned __int8 *)(v10 + (unsigned __int16)(7 * (v110 & 0xF0 | (v98 >> 4)) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v10 + (unsigned __int16)v119) ^ 0x51)) ^ 0x51;
  __int16 v122 = 7 * v121;
  LODWORD(STACK[0x668]) = 7 * v121;
  v121 *= 244671;
  LODWORD(STACK[0x664]) = v121;
  LOBYTE(v121) = (*(_BYTE *)(v10 + (unsigned __int16)(v122 - 960 * (v121 >> 25))) >> 4) ^ 5;
  int v123 = 7 * ((v121 - 2 * (v121 & 1) + 81) ^ *(unsigned __int8 *)(v10 + v120)) + 3983;
  unsigned int v124 = 7 * ((v110 >> 4) & 0xF0 | (v98 >> 8) & 0xF);
  int v125 = *(unsigned __int8 *)(v10 + (unsigned __int16)(7 * ((v110 >> 4) & 0xF0 | (v98 >> 8) & 0xF) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v10 + (unsigned __int16)(v123 - 960 * ((unsigned __int16)((8739 * v123) >> 16) >> 7))) ^ 0x51));
  if (v124 >= 0x3C0) {
    v124 -= 960;
  }
  int v126 = v125 ^ 0x51;
  LODWORD(STACK[0x64C]) = 7 * v126;
  int v127 = *(unsigned __int8 *)(v10
                            + (unsigned __int16)(7 * v126
                                               - 960 * ((unsigned __int16)((244671 * v126) >> 16) >> 9))) >> 4;
  LODWORD(STACK[0x63C]) = v93;
  unsigned int v129 = 7 * ((v110 >> 8) & 0xF0 | ((unsigned __int16)v93 >> 12));
  int v130 = *(unsigned __int8 *)(v10
                            + (unsigned __int16)(7 * ((v110 >> 8) & 0xF0 | ((unsigned __int16)v93 >> 12)) + 3983)
                            % 0x3C0u) ^ (16
                                       * (*(unsigned __int8 *)(v10
                                                             + (unsigned __int16)(v128
                                                                                - 960
                                                                                * ((unsigned __int16)((8739 * v128) >> 16) >> 7))) ^ 0x51));
  if (v129 >= 0x3C0) {
    v129 -= 960;
  }
  int v131 = v130 ^ 0x51;
  LODWORD(STACK[0x620]) = 7 * v131;
  LODWORD(STACK[0x61C]) = 244671 * v131;
  int v132 = *(unsigned __int8 *)(v10
                            + (unsigned __int16)(7 * v131
                                               - 960 * ((unsigned __int16)((244671 * v131) >> 16) >> 9))) >> 4;
  int v133 = ((v132 ^ 5) - 2 * ((v132 ^ 5) & 0xF9 ^ v132 & 8) + 81) ^ *(unsigned __int8 *)(v10 + v129);
  unsigned int v134 = 7 * ((v110 >> 12) & 0xF0 | HIWORD(v93) & 0xF);
  unsigned int v135 = 7 * v133 + 3983 - 960 * ((8739 * (7 * v133 + 3983)) >> 23);
  unsigned int v136 = v134 + 3983 - 960 * ((unsigned __int16)(7 * ((v110 >> 12) & 0xF0 | BYTE2(v93) & 0xF) + 3983) / 0x3C0u);
  if (v134 >= 0x3C0) {
    v134 -= 960;
  }
  int v137 = *(unsigned __int8 *)(v10 + (unsigned __int16)v136) ^ (16
                                                             * (*(unsigned __int8 *)(v10 + (unsigned __int16)v135) ^ 0x51)) ^ 0x51;
  LODWORD(STACK[0x5FC]) = 7 * v137;
  LOBYTE(v137) = (*(_BYTE *)(v10
                           + (unsigned __int16)(7 * v137
                                              - 960 * ((unsigned __int16)((244671 * v137) >> 16) >> 9))) >> 4) ^ 5;
  int v138 = 7 * ((v137 - 2 * (v137 & 1) + 81) ^ *(unsigned __int8 *)(v10 + v134)) + 3983;
  unsigned int v139 = 7 * ((HIWORD(v110) & 0xF0 | (v92 >> 20) & 0xF) ^ 0xE);
  int v140 = *(unsigned __int8 *)(v10
                            + (unsigned __int16)(7 * ((BYTE2(v110) & 0xF0 | (v92 >> 20) & 0xF) ^ 0xE) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v10 + (unsigned __int16)(v138 - 960 * ((unsigned __int16)((8739 * v138) >> 16) >> 7))) ^ 0x51));
  if (v139 >= 0x3C0) {
    v139 -= 960;
  }
  unsigned int v141 = HIBYTE(v110);
  LODWORD(STACK[0x5F8]) = v92;
  int v142 = v140 ^ 0x51;
  LODWORD(STACK[0x5EC]) = 7 * v142;
  LODWORD(STACK[0x5E8]) = 244671 * v142;
  int v143 = *(unsigned __int8 *)(v10
                            + (unsigned __int16)(7 * v142
                                               - 960 * ((unsigned __int16)((244671 * v142) >> 16) >> 9))) >> 4;
  unsigned int v145 = 7 * (((HIBYTE(v92) & 0xF | (16 * ((v141 ^ 0xFFFFFF0) + (v141 | 0xF)))) + 16) ^ 0xC);
  int v146 = *(unsigned __int8 *)(v10 + (v145 + 3983) % 0x3C0) ^ (16
                                                            * (*(unsigned __int8 *)(v10
                                                                                  + (unsigned __int16)(v144 - 960 * ((unsigned __int16)((8739 * v144) >> 16) >> 7))) ^ 0x51)) ^ 0x51;
  LODWORD(STACK[0x5E0]) = 7 * v146;
  LODWORD(STACK[0x5DC]) = 244671 * v146;
  int v147 = *(unsigned __int8 *)(v10
                            + (unsigned __int16)(7 * v146
                                               - 960 * ((unsigned __int16)((244671 * v146) >> 16) >> 9))) >> 4;
  int v148 = 7
  int v149 = 7 * ((v141 & 0xF0 | (v92 >> 28)) ^ 6) + 3983;
  int v150 = *(unsigned __int8 *)(v10
                            + (unsigned __int16)(v149
                                               - 960 * ((unsigned __int16)((8739 * v149) >> 16) >> 7))) ^ (16 * (*(unsigned __int8 *)(v10 + (unsigned __int16)(v148 - 960 * ((unsigned __int16)((8739 * v148) >> 16) >> 7))) ^ 0x51));
  unsigned int v151 = ((2 * (v150 ^ 0x11111111)) & 0x472) + (v150 ^ 0x268);
  if (v151 <= 0x89) {
    unsigned int v152 = 7 * v151;
  }
  else {
    unsigned int v152 = (7 * v151 - 960) % 0x3C0;
  }
  LODWORD(STACK[0x5F4]) = v152;
  int v153 = ((LODWORD(STACK[0x6E4]) ^ 0xD7) - 285) | 0x100;
  LODWORD(STACK[0x6D4]) = v153;
  unsigned int v154 = (v153 ^ 0xF1219820) + LODWORD(STACK[0x56C]);
  LODWORD(STACK[0x3D4]) = v154;
  int v155 = v154 + v60;
  unsigned int v156 = v155 - 826220752 - ((2 * v155) & 0x9D81BE60);
  LODWORD(STACK[0x70C]) = v58 + 538970333 + v57 - 1698315986;
  unsigned int v157 = (v156 ^ 0xCEC0DF30) >> (((v57 + 46) ^ (17 - v7)) & 0x18);
  unsigned int v158 = LODWORD(STACK[0x57C]) - v65 - ((2 * (LODWORD(STACK[0x57C]) - v65) - 539643918) & 0xB95363DE);
  LODWORD(STACK[0x710]) = v70 - 1320120157;
  int v159 = ((*(unsigned __int8 *)(v10
                              + (unsigned __int16)(7 * (v157 & 0xF)
                                                 + 3640
                                                 - 960
                                                 * ((unsigned __int16)((2185 * (7 * (v157 & 0xF) + 3640)) >> 16) >> 5))) ^ 0x51) << 8) ^ ((*(unsigned __int8 *)(v10 + (unsigned __int16)(7 * (v157 >> 4) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * (v157 >> 4) + 3640)) >> 16) >> 5))) ^ 0x51) << 12);
  LODWORD(STACK[0x6E4]) = v156;
  int v160 = 7 * ((v156 >> 20) & 0xF ^ 0xC) + 3640;
  int v161 = 7 * (((v70 - 1320120157) & 0xF ^ 4 | (v70 - 1320120157) & 0xF ^ 0xB) & HIWORD(v156)) + 3640;
  int v162 = 7 * (((unsigned __int16)(v156 & 0xF000) >> 12) ^ 0xD) + 3640;
  int v163 = v159 | *(unsigned __int8 *)(v10 + (unsigned __int16)v161 % 0x3C0u) ^ 0x51;
  int v164 = 7 * (~(v156 >> 8) & 0xF) + 3640;
  int v165 = 7 * (((v155 + 48 - ((2 * v155) & 0x60)) >> 4) ^ 3) + 3640;
  unsigned int v166 = v165 - 960 * ((2185 * v165) >> 21);
  int v167 = (v163 << 8) ^ ((*(unsigned __int8 *)(v10
                                            + (unsigned __int16)(v160
                                                               - 960
                                                               * ((unsigned __int16)((2185 * v160) >> 16) >> 5))) ^ 0x51) << 12);
  int v168 = (v166 & 0x208) + (v155 & 0xF) + (v166 & 0x208 ^ 0x208);
  int v169 = v167 | *(unsigned __int8 *)(v10
                                   + (unsigned __int16)(v164
                                                      - 960
                                                      * ((unsigned __int16)((2185 * v164) >> 16) >> 5))) ^ 0x51;
  int v170 = (v169 << 8) - 1684728521 - ((v169 << 9) & 0x372A2A00);
  unsigned int v171 = 7 * (((v158 - 862680600) >> 28) ^ 5) + 3640;
  int v172 = *(unsigned __int8 *)(v10
                            + (unsigned __int16)(v162
                                               - 960 * ((unsigned __int16)((2185 * v162) >> 16) >> 5))) ^ 0x51;
  int v173 = *(unsigned __int8 *)(v10 + (unsigned __int16)v166) ^ 0x51;
  unsigned int v174 = v170 ^ (v172 << 12);
  unsigned int v175 = v170;
  LODWORD(STACK[0x68C]) = v170;
  int v176 = *(unsigned __int8 *)(v10
                            + (unsigned __int16)(7 * v168
                                               - 960 * ((unsigned __int16)((122339 * v168) >> 16) >> 8))) ^ 0x51;
  unsigned int v177 = (v174 ^ 0x9B951537 | v176) ^ (16 * v173);
  unsigned int v178 = 7 * (((v158 - 862680600) >> 24) & 0xF ^ 0xC) + 3640;
  unsigned int v179 = 7 * (((v158 - 862680600) >> 20) & 0xF ^ 0xA) + 3640;
  unsigned int v180 = 7 * (((v158 - 862680600) >> 16) & 0xF ^ 9) + 3640;
  int v181 = ((*(unsigned __int8 *)(v10 + (unsigned __int16)(v178 - 960 * ((unsigned __int16)((2185 * v178) >> 16) >> 5))) ^ 0x51) << 8) ^ ((*(unsigned __int8 *)(v10 + (unsigned __int16)(v171 - 960 * ((unsigned __int16)((2185 * v171) >> 16) >> 5))) ^ 0x51) << 12) | *(unsigned __int8 *)(v10 + (unsigned __int16)(v180 - 960 * ((unsigned __int16)((2185 * v180) >> 16) >> 5))) ^ 0x51;
  unsigned int v182 = 7 * ((((v158 - 862680600) & 0xF000) >> 12) ^ 0xB) + 3640;
  int v183 = (v181 << 8) ^ ((*(unsigned __int8 *)(v10
                                            + (unsigned __int16)(v179
                                                               - 960 * ((unsigned __int16)((2185 * v179) >> 16) >> 5))) ^ 0x51) << 12);
  unsigned int v184 = 7 * (((v158 - 862680600) >> 8) & 0xF ^ 1) + 3640;
  int v185 = *(unsigned __int8 *)(v10 + (unsigned __int16)(v184 - 960 * ((unsigned __int16)((2185 * v184) >> 16) >> 5))) ^ 0x51 ^ v183 ^ (16 * (*(unsigned __int8 *)(v10 + (unsigned __int16)(v182 - 960 * ((unsigned __int16)((2185 * v182) >> 16) >> 5))) ^ 0x51));
  unsigned int v186 = (v185 << 8) + 1798927650 - ((v185 << 9) & 0xD672EA00);
  int v187 = 7 * (((v158 - 24) >> 4) ^ 0xE) + 3640;
  int v188 = 7 * ((23 - (_BYTE)v158) & 0xF) + 3640;
  int v189 = *(unsigned __int8 *)(v10
                            + (unsigned __int16)(v188
                                               - 960 * ((unsigned __int16)((2185 * v188) >> 16) >> 5))) ^ 0x51;
  unsigned int v190 = (v186 ^ 0x6B397522 | v189) ^ (16
                                     * (*(unsigned __int8 *)(v10
                                                           + (unsigned __int16)(v187
                                                                              - 960
                                                                              * ((unsigned __int16)((2185 * v187) >> 16) >> 5))) ^ 0x51));
  int v191 = v176 & 0xF;
  LODWORD(STACK[0x680]) = v191;
  unsigned int v192 = 7 * (v191 & 0xFFFFFF0F | (16 * (v189 & 0xF)));
  LODWORD(STACK[0x67C]) = v177;
  unsigned int v193 = 7 * (v190 & 0xF0 | (v177 >> 4));
  unsigned int v194 = 7 * ((v190 >> 4) & 0xF0 | (v177 >> 8) & 0xF);
  LODWORD(STACK[0x688]) = v174;
  unsigned int v195 = 7 * ((v185 & 0xF0 | ((unsigned __int16)v174 >> 12)) ^ 1);
  LODWORD(STACK[0x660]) = v186;
  unsigned int v196 = 7 * (((v186 >> 12) & 0xF0 | HIWORD(v174) & 0xF) ^ 0x95);
  LOBYTE(v189) = (6 - LODWORD(STACK[0x720])) | (LODWORD(STACK[0x720]) + 9);
  int v197 = (v175 >> 20) ^ 0x9B9;
  LODWORD(STACK[0x65C]) = v197;
  unsigned int v198 = 7 * ((v189 & v197 & 0xF | (16 * ((v186 >> 20) & 0xF))) ^ 0x30);
  unsigned int v199 = 7 * (((v186 >> 20) & 0xF0 | (v197 >> 4)) ^ 0xB0);
  LODWORD(STACK[0x550]) = LODWORD(STACK[0x5E4]) - ((2 * LODWORD(STACK[0x5E4])) & 0xE4B83C88);
  LODWORD(STACK[0x6A4]) = v63;
  int v200 = 7 * (HIBYTE(v63) & 0xF ^ 4) + 3640;
  int v201 = 7 * ((v63 >> 20) & 0xF ^ 4) + 3640;
  int v202 = 7 * (HIWORD(v63) & 0xF ^ 8) + 3640;
  int v203 = ((((*(unsigned __int8 *)(v10
                                + (unsigned __int16)(v200
                                                   - 960 * ((unsigned __int16)((2185 * v200) >> 16) >> 5))) ^ 0x51) << 8) ^ ((*(unsigned __int8 *)(v10 + (unsigned __int16)(7 * ((v63 >> 28) ^ 4) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v63 >> 28) ^ 4) + 3640)) >> 16) >> 5))) ^ 0x51) << 12) | *(unsigned __int8 *)(v10 + (unsigned __int16)(v202 - 960 * ((unsigned __int16)((2185 * v202) >> 16) >> 5))) ^ 0x51) << 8) ^ ((*(unsigned __int8 *)(v10 + (unsigned __int16)(v201 - 960 * ((unsigned __int16)((2185 * v201) >> 16) >> 5))) ^ 0x51) << 12);
  int v204 = 7 * (((unsigned __int16)v63 >> 12) ^ 7) + 3640;
  int v205 = 7 * ((v63 >> 8) & 0xF ^ 1) + 3640;
  int v206 = 7 * ((v63 >> 4) ^ 6) + 3640;
  int v207 = v203 | *(unsigned __int8 *)(v10
                                   + (unsigned __int16)(v205
                                                      - 960
                                                      * ((unsigned __int16)((2185 * v205) >> 16) >> 5))) ^ 0x51;
  unsigned int v208 = (v207 << 8) - 1116331069 - ((v207 << 9) & 0x7AEC4600);
  unsigned int v209 = LODWORD(STACK[0x650]) ^ 0xF9822CD4;
  LODWORD(STACK[0x554]) = v209;
  unsigned int v210 = v209 - LODWORD(STACK[0x718]);
  unsigned int v211 = v210 - ((2 * v210) & 0x347C3F60) + 440278960;
  int v212 = (v64 & 0x208) + ((v211 >> 28) ^ 1) + (v64 & 0x208 ^ 0x208);
  LOWORD(v184) = 7 * v212 - 960 * ((unsigned __int16)((122339 * v212) >> 16) >> 8);
  unsigned int v213 = v208 ^ ((*(unsigned __int8 *)(v10
                                     + (unsigned __int16)(v204
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v204) >> 16) >> 5))) ^ 0x51) << 12);
  int v214 = *(unsigned __int8 *)(v10 + v64);
  char v215 = v214 ^ 0x51;
  unsigned int v216 = (v213 ^ 0xBD7623C3 | v214 ^ 0x51) ^ (16
                                            * (*(unsigned __int8 *)(v10
                                                                  + (unsigned __int16)(v206
                                                                                     - 960
                                                                                     * ((unsigned __int16)((2185 * v206) >> 16) >> 5))) ^ 0x51));
  int v217 = 7 * (HIBYTE(v211) & 0xF ^ 0xA) + 3640;
  int v218 = *(unsigned __int8 *)(v10 + (unsigned __int16)v184);
  int v219 = 7 * ((BYTE2(v211) ^ 0x3E) >> ((v218 & 4 ^ 4) + (v218 & 4))) + 3640;
  int v220 = 7 * ((BYTE2(v211) ^ 0x3E) & 0xF) + 3640;
  int v221 = ((*(unsigned __int8 *)(v10
                              + (unsigned __int16)(v217
                                                 - 960 * ((unsigned __int16)((2185 * v217) >> 16) >> 5))) ^ 0x51) << 8) ^ ((v218 ^ 0x51) << 12) | *(unsigned __int8 *)(v10 + (unsigned __int16)(v220 - 960 * ((unsigned __int16)((2185 * v220) >> 16) >> 5))) ^ 0x51;
  int v222 = 7 * (((unsigned __int16)v211 >> 12) ^ 1) + 3640;
  int v223 = 7 * (~(v211 >> 8) & 0xF) + 3640;
  int v224 = (v221 << 8) ^ ((*(unsigned __int8 *)(v10
                                            + (unsigned __int16)(v219
                                                               - 960
                                                               * ((unsigned __int16)((8739 * v219) >> 16) >> 7))) ^ 0x51) << 12);
  int v225 = 7 * (((v210 - ((2 * v210) & 0x60) - 80) >> 4) ^ 0xB) + 3640;
  int v226 = *(unsigned __int8 *)(v10
                            + (unsigned __int16)(v225
                                               - 960 * ((unsigned __int16)((2185 * v225) >> 16) >> 5)));
  int v227 = v226 & 0xF ^ 0xE | v226 & 0xF ^ 1;
  unsigned int v228 = 7 * (v210 & 0xF) + 3640 - 960 * ((2185 * (7 * (v210 & 0xF) + 3640)) >> 21);
  int v229 = v224 | *(unsigned __int8 *)(v10
                                   + (unsigned __int16)(v223
                                                      - 960
                                                      * ((unsigned __int16)((2185 * v223) >> 16) >> 5))) ^ 0x51;
  unsigned int v230 = (v229 << 8) + 251477261 - ((v229 << 9) & 0x1DFA7A00);
  unsigned int v231 = v230 ^ ((*(unsigned __int8 *)(v10
                                     + (unsigned __int16)(v222
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v222) >> 16) >> 5))) ^ 0x51) << 12);
  int v232 = *(unsigned __int8 *)(v10 + (unsigned __int16)v228) ^ 0x51;
  unsigned int v233 = (v231 ^ 0xEFD3D0D | v232) ^ (16 * (v226 ^ 0x51));
  unsigned int v234 = 7 * (v227 & (v214 ^ 1) & 0xFFFFFF0F | (16 * (v232 & 0xF)));
  LODWORD(STACK[0x51C]) = v192;
  unsigned int v235 = v192 - 960;
  if (v192 < 0x3C0) {
    unsigned int v235 = v192;
  }
  LODWORD(STACK[0x5B0]) = v235;
  LODWORD(STACK[0x528]) = v193;
  unsigned int v236 = v193 - 960;
  if (v193 < 0x3C0) {
    unsigned int v236 = v193;
  }
  LODWORD(STACK[0x5B4]) = v236;
  LODWORD(STACK[0x534]) = v194;
  unsigned int v237 = v194 - 960;
  if (v194 < 0x3C0) {
    unsigned int v237 = v194;
  }
  LODWORD(STACK[0x5B8]) = v237;
  LODWORD(STACK[0x5A8]) = v195;
  unsigned int v238 = v195 - 960;
  if (v195 < 0x3C0) {
    unsigned int v238 = v195;
  }
  LODWORD(STACK[0x5C0]) = v238;
  LODWORD(STACK[0x5AC]) = v196;
  if (v196 >= 0x3C0) {
    unsigned int v239 = v196 - 960;
  }
  else {
    unsigned int v239 = v196;
  }
  LODWORD(STACK[0x5CC]) = v239;
  LODWORD(STACK[0x5BC]) = v198;
  if (v198 >= 0x3C0) {
    unsigned int v240 = v198 - 960;
  }
  else {
    unsigned int v240 = v198;
  }
  LODWORD(STACK[0x5D0]) = v240;
  LODWORD(STACK[0x5C8]) = v199;
  if (v199 >= 0x3C0) {
    unsigned int v241 = v199 - 960;
  }
  else {
    unsigned int v241 = v199;
  }
  LODWORD(STACK[0x5E4]) = v241;
  unsigned int v242 = v234 - 960;
  if (v234 < 0x3C0) {
    unsigned int v242 = v234;
  }
  int v243 = *(unsigned __int8 *)(v10 + (unsigned __int16)(v234 + 3983) % 0x3C0u) ^ 0x51;
  unsigned int v244 = 7 * ((v243 + 1253351297 - ((2 * v243) & 0xFFFFFF03)) ^ v114);
  unsigned int v245 = (v244 + 3983) % 0x3C0;
  LODWORD(STACK[0x650]) = v216;
  unsigned int v246 = 7 * (v233 & 0xF0 | (v216 >> 4));
  LOBYTE(v244) = (*(_BYTE *)(v10 + v244 % 0x3C0) >> 4) ^ 5;
  int v247 = 7 * ((v244 - 2 * (v244 & 1) + 81) ^ *(unsigned __int8 *)(v10 + v242)) + 3983;
  unsigned int v248 = v247 - 960 * ((8739 * v247) >> 23);
  unsigned int v249 = v246 - 960;
  if (v246 < 0x3C0) {
    unsigned int v249 = 7 * (v233 & 0xF0 | (v216 >> 4));
  }
  unsigned int v250 = *(unsigned __int8 *)(v10 + (unsigned __int16)(v246 + 3983) % 0x3C0u) ^ (16
                                                                               * (*(unsigned __int8 *)(v10 + (unsigned __int16)v248) ^ 0x51)) ^ 0x51;
  __int16 v251 = 7 * v250;
  v250 *= 244671;
  __int16 v252 = v251 - 960 * ((v250 + 139217799) >> 25);
  unsigned int v253 = 7 * ((v233 >> 4) & 0xF0 | (v216 >> 8) & 0xF);
  int v254 = *(unsigned __int8 *)(v10 + (unsigned __int16)(v251 - 960 * (v250 >> 25))) >> 4;
  int v255 = ((v254 ^ 5) - 2 * ((v254 ^ 5) & 3 ^ v254 & 2) + 81) ^ *(unsigned __int8 *)(v10 + v249);
  int v256 = *(unsigned __int8 *)(v10 + (unsigned __int16)(v253 + 3983) % 0x3C0u);
  int v257 = 16
       * (*(unsigned __int8 *)(v10
                             + (unsigned __int16)(7 * v255
                                                + 3983
                                                - 960
                                                * ((unsigned __int16)((8739 * (7 * v255 + 3983)) >> 16) >> 7))) ^ 0x51);
  unsigned int v258 = (v257 | v256) & 0x4040404 | (v256 ^ 0x51) & 0xFFFFFFFB ^ v257 & 0xFFFFFBFF;
  int v259 = *(unsigned __int8 *)(v10 + v245) ^ (16 * (*(unsigned __int8 *)(v10 + (unsigned __int16)(v252 + 3983)) ^ 0x51)) ^ ((*(unsigned __int8 *)(v10 + (unsigned __int16)(7 * v258 + 3983) % 0x3C0u) ^ 0x51) << 8);
  if (v253 >= 0x3C0) {
    v253 -= 960;
  }
  int v260 = *(unsigned __int8 *)(v10 + (unsigned __int16)(7 * v258 - 960 * ((unsigned __int16)((244671 * v258) >> 16) >> 9))) >> 4;
  LOWORD(v261) = v261 - 960 * ((unsigned __int16)((8739 * v261) >> 16) >> 7);
  LODWORD(STACK[0x5D8]) = v213;
  int v262 = ((unsigned __int16)v213 >> 12) ^ ((unint64_t)(((unsigned __int16)v231 >> 12) ^ 3u) << ((v261 | 0x2E) - (v261 & 0xD1u) - 42)) ^ 2;
  int v263 = *(unsigned __int8 *)(v10 + (7 * v262 + 3983) % 0x3C0u);
  int v264 = v263 ^ (16 * (*(unsigned __int8 *)(v10 + (unsigned __int16)v261) ^ 0x51)) ^ 0x51;
  int v265 = v259 ^ ((*(unsigned __int8 *)(v10 + (unsigned __int16)(7 * v264 + 3983) % 0x3C0u) ^ 0x51) << 12);
  int v266 = *(unsigned __int8 *)(v10
                            + (unsigned __int16)(7 * v264
                                               - 960 * ((unsigned __int16)((244671 * v264) >> 16) >> 9))) >> 4;
  int v267 = ((v266 ^ 0xA) + (v266 ^ 5)) & (HIWORD(v213) ^ 0x16) ^ (v231 >> 12) & 0xF0;
  int v268 = 7
  unsigned int v269 = 7 * (v267 ^ 0xD0);
  int v270 = *(unsigned __int8 *)(v10 + (unsigned __int16)(v269 + 3983) % 0x3C0u) ^ (16
                                                                               * (*(unsigned __int8 *)(v10 + (unsigned __int16)(v268 - 960 * ((unsigned __int16)((8739 * v268) >> 16) >> 7))) ^ 0x51));
  if (v269 >= 0x3C0) {
    v269 -= 960;
  }
  unsigned int v271 = v270 ^ 0x51;
  __int16 v272 = 7 * v271;
  v271 *= 244671;
  __int16 v273 = v272 - 960 * ((v271 + 139217799) >> 25);
  int v274 = *(unsigned __int8 *)(v10 + (unsigned __int16)(v272 - 960 * (v271 >> 25))) >> 4;
  int v275 = 7
  unsigned int v276 = 7 * ((((v208 >> 20) ^ 0xFFFFF427) + ((v208 >> 20) & 0xFF0 ^ 0xBDF) + 1) ^ HIWORD(v230) & 0xF0 ^ 0xF0);
  int v277 = *(unsigned __int8 *)(v10 + (v276 + 3983) % 0x3C0) ^ (16
                                                            * (*(unsigned __int8 *)(v10
                                                                                  + (unsigned __int16)(v275 - 960 * ((unsigned __int16)((8739 * v275) >> 16) >> 7))) ^ 0x51)) ^ 0x51;
  int v278 = v265 ^ ((*(unsigned __int8 *)(v10 + (unsigned __int16)(v273 + 3983)) ^ 0x51) << 16) ^ ((*(unsigned __int8 *)(v10 + (unsigned __int16)(7 * v277 + 3983) % 0x3C0u) ^ 0x51) << 20);
  LOBYTE(v277) = (*(_BYTE *)(v10
                           + (unsigned __int16)(7 * v277
                                              - 960 * ((unsigned __int16)((244671 * v277) >> 16) >> 9))) >> 4) ^ 5;
  int v279 = 7 * ((v277 - 2 * (v277 & 1) + 81) ^ *(unsigned __int8 *)(v10 + v276 % 0x3C0)) + 3983;
  LODWORD(STACK[0x538]) = v208;
  unsigned int v280 = 7 * (((v230 >> 20) & 0xF0 | HIBYTE(v208) & 0xF) ^ 0xED);
  int v281 = *(unsigned __int8 *)(v10
                            + (unsigned __int16)(7 * (((v230 >> 20) & 0xF0 | HIBYTE(v208) & 0xF) ^ 0xED) + 3983)
                            % 0x3C0u) ^ (16
                                       * (*(unsigned __int8 *)(v10
                                                             + (unsigned __int16)(v279
                                                                                - 960
                                                                                * ((unsigned __int16)((8739 * v279) >> 16) >> 7))) ^ 0x51));
  if (v280 >= 0x3C0) {
    v280 -= 960;
  }
  unsigned int v282 = v281 ^ 0x51;
  __int16 v283 = 7 * v282;
  v282 *= 244671;
  __int16 v284 = v283 - 960 * ((v282 + 139217799) >> 25);
  LOWORD(v282) = v283 - 960 * (v282 >> 25);
  int v285 = (*(unsigned __int8 *)(v10 + (unsigned __int16)(v284 + 3983)) ^ 0x51) << 24;
  LOBYTE(v282) = (*(_BYTE *)(v10 + (unsigned __int16)v282) >> 4) ^ 5;
  int v286 = (v282 - 2 * (v282 & 1) + 81) ^ *(unsigned __int8 *)(v10 + v280);
  unsigned int v287 = v285 & 0x27000000 ^ (v278 ^ 0x51) & 0x27169850 | v285 & 0xD8000000 ^ (v278 ^ 0x51) & 0xD8E967AF;
  unsigned int v288 = v287 - 360215989 - ((2 * v287) & 0xD50F1496);
  LODWORD(STACK[0x510]) = v288;
  int v289 = 7 * ((HIBYTE(v230) & 0xF0 | (v208 >> 28)) ^ 0xB) + 3983;
  int v290 = *(unsigned __int8 *)(v10
                            + (unsigned __int16)(7
                                               * (*(unsigned __int8 *)(v10
                                                                     + (unsigned __int16)(v289
                                                                                        - 960
                                                                                        * ((unsigned __int16)((8739 * v289) >> 16) >> 7))) ^ (unsigned __int16)(16 * (*(unsigned __int8 *)(v10 + (unsigned __int16)(7 * v286 + 3983 - 960 * ((unsigned __int16)((8739 * (7 * v286 + 3983)) >> 16) >> 7))) ^ 0x51)) ^ 0x51)
                                               + 3983)
                            % 0x3C0u);
  LODWORD(STACK[0x518]) = v290;
  int v291 = LODWORD(STACK[0x550]) + 1918639684;
  int v292 = *(unsigned __int8 *)(v10
                            + (unsigned __int16)(7
                                               * (v215 & 0xF | (16
                                                              * ((v288 ^ 0xB) & (20 - (v290 & 5 ^ 1 | v290 & 5 ^ 4)))))
                                               + 1813)
                            % 0x3C0u);
  LODWORD(STACK[0x4FC]) = v292;
  int v293 = v291 ^ LODWORD(STACK[0x720]);
  int v294 = *(unsigned __int8 *)(v10
                            + (unsigned __int16)(7 * (v292 & 0xF ^ 1)
                                               + 3822
                                               - 960
                                               * ((unsigned __int16)((2185 * (7 * (v292 & 0xF ^ 1u) + 3822)) >> 16) >> 5)));
  unsigned int v295 = (v293 ^ 0xAEAF9748) + LODWORD(STACK[0x6F4]);
  int v296 = LODWORD(STACK[0x580]) ^ 0x417F79AF;
  LODWORD(STACK[0x550]) = v296;
  LODWORD(STACK[0x50C]) = v294;
  unsigned int v297 = v296 - 1944238268 + v295 - ((2 * (v296 - 1944238268 + v295)) & 0xCCF7EC0E) - 428083705;
  int v298 = ((v294 ^ 0xE) & 0xF | v294 & 0xF ^ 1) & (HIBYTE(v297) ^ 0xE6);
  int v299 = v293 ^ LODWORD(STACK[0x70C]);
  unsigned int v300 = (v293 ^ 0xAEAF9748) - 169560882;
  int v301 = v299 ^ 0x61C4E6CE;
  unsigned int v302 = (-1800351891 - ((v300 + v301) & 0x20)) ^ (v300 + v301) & 0xFFFFFFDF;
  unsigned int v303 = ((2 * v302) & 0x6EFFB5FA) + (v302 ^ 0xB77FDAFD);
  unsigned int v304 = LODWORD(STACK[0x540]) ^ 0x9AE4EB78;
  int v305 = LODWORD(STACK[0x500]) ^ v304;
  int v306 = v305 - 169560882;
  int v307 = v305 - 169560882 + LODWORD(STACK[0x718]);
  unsigned __int16 v308 = 7 * v298 + 3640 - 960 * ((unsigned __int16)((8739 * (7 * v298 + 3640)) >> 16) >> 7);
  int v309 = 7 * ((v297 >> 20) & 0xF ^ 7) + 3640;
  int v310 = 7 * (HIWORD(v297) & 0xF ^ 0xB) + 3640;
  int v311 = ((*(unsigned __int8 *)(v10 + v308) ^ 0x51) << 8) ^ ((*(unsigned __int8 *)(v10
                                                                                 + (unsigned __int16)(7 * ((v297 >> 28) ^ 0xE) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v297 >> 28) ^ 0xE) + 3640)) >> 16) >> 5))) ^ 0x51) << 12) | *(unsigned __int8 *)(v10 + (unsigned __int16)(v310 - 960 * ((unsigned __int16)((2185 * v310) >> 16) >> 5))) ^ 0x51;
  int v312 = 7 * ((v297 >> 8) & 0xF ^ 6) + 3640;
  LOWORD(v310) = v312 - 960 * ((unsigned __int16)((2185 * v312) >> 16) >> 5);
  int v313 = 7 * ((unsigned __int16)~(_WORD)v297 >> 12) + 3640;
  int v314 = (v311 << 8) ^ ((*(unsigned __int8 *)(v10
                                            + (unsigned __int16)(v309
                                                               - 960
                                                               * ((unsigned __int16)((2185 * v309) >> 16) >> 5))) ^ 0x51) << 12);
  unsigned int v315 = v303;
  unsigned int v316 = LODWORD(STACK[0x578])
       - v307
       - 2058854482
       - ((2 * (LODWORD(STACK[0x578]) - v307 - 2058854482) - 1752863126) & 0x9B6F2116)
       + 427444160;
  int v317 = (((627 - v303) ^ (v303 + 396)) & 0x208) + (HIBYTE(v316) & 0xF ^ 0xD);
  int v318 = v314 | *(unsigned __int8 *)(v10 + (unsigned __int16)v310) ^ 0x51;
  unsigned int v319 = (v318 << 8) + 1677814365 - ((v318 << 9) & 0xC802D400);
  int v320 = 7 * (HIWORD(v316) & 0xF ^ 7) + 3640;
  int v321 = ((*(unsigned __int8 *)(v10
                              + (unsigned __int16)(7 * v317
                                                 - 960 * ((unsigned __int16)((15295 * v317) >> 16) >> 5))) ^ 0x51) << 8) ^ ((*(unsigned __int8 *)(v10 + (unsigned __int16)(7 * ((v316 >> 28) ^ 0xC) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v316 >> 28) ^ 0xC) + 3640)) >> 16) >> 5))) ^ 0x51) << 12);
  int v322 = 7 * ((v316 >> 20) & 0xF ^ 0xB) + 3640;
  int v323 = v321 | *(unsigned __int8 *)(v10
                                   + (unsigned __int16)(v320
                                                      - 960
                                                      * ((unsigned __int16)((2185 * v320) >> 16) >> 5))) ^ 0x51;
  int v324 = 7
       * (((unsigned __int16)((LOWORD(STACK[0x578])
                             - v307
                             + 24494
                             - ((2 * (LOWORD(STACK[0x578]) - v307 + 24494) + 28266) & 0x2116)
                             + 18368) & 0xF000) >> 12) ^ 9)
       + 3640;
  int v325 = (v323 << 8) ^ ((*(unsigned __int8 *)(v10
                                            + (unsigned __int16)(v322
                                                               - 960
                                                               * ((unsigned __int16)((2185 * v322) >> 16) >> 5))) ^ 0x51) << 12) | *(unsigned __int8 *)(v10 + (unsigned __int16)(7 * ((v316 >> 8) & 0xF) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v316 >> 8) & 0xF) + 3640)) >> 16) >> 5))) ^ 0x51;
  unsigned int v326 = v319 ^ ((*(unsigned __int8 *)(v10
                                     + (unsigned __int16)(v313
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v313) >> 16) >> 5))) ^ 0x51) << 12);
  unsigned int v327 = ((v325 << 8) - ((v325 << 9) & 0x30C21600) + 409012998) ^ ((*(unsigned __int8 *)(v10
                                                                                       + (unsigned __int16)(v324 - 960 * ((unsigned __int16)((2185 * v324) >> 16) >> 5))) ^ 0x51) << 12);
  LODWORD(STACK[0x4E8]) = v327;
  unsigned int v328 = (v325 << 8) - ((v325 << 9) & 0x30C21600) + 409012998;
  LODWORD(STACK[0x4D8]) = v326;
  unsigned int v329 = 7 * (((v327 >> 12) & 0xF0 | HIWORD(v326) & 0xF) ^ 0x11);
  LODWORD(STACK[0x4F0]) = (unsigned __int16)(7 * (((v327 >> 12) & 0xF0 | BYTE2(v326) & 0xF) ^ 0x11) + 3983)
                        % (((112 - 7 * (((v327 >> 12) & 0xF0 | BYTE2(v326) & 0xF) ^ 0x11)) & 0x3C0)
                         + ((7 * (((v327 >> 12) & 0xF0 | BYTE2(v326) & 0xF) ^ 0x11) + 3983) & 0x3C0));
  int v330 = v305 ^ LODWORD(STACK[0x710]);
  unsigned int v331 = ((v330 ^ 0xB66BB932) + 1175937652 - ((2 * (v330 ^ 0xB66BB932)) & 0x8C2EC4E8)) ^ v304;
  int v332 = v330;
  LODWORD(STACK[0x6F4]) = v330;
  int v333 = (v330 ^ 0x3E92EFD2) + v306;
  unsigned int v334 = (v330 ^ 0x3E92EFD2) - (v333 ^ 0x94B0CF6D) - 632164114 + v331;
  LODWORD(STACK[0x520]) = v297;
  int v335 = *(unsigned __int8 *)(v10
                            + (unsigned __int16)(7 * (v297 >> 4)
                                               + 3640
                                               - 960
                                               * ((unsigned __int16)((2185
  int v336 = *(unsigned __int8 *)(v10
                            + (unsigned __int16)(7 * (v297 & 0xF ^ 7)
                                               + 3640
                                               - 960
                                               * ((unsigned __int16)((2185 * (7 * (v297 & 0xF ^ 7) + 3640)) >> 16) >> 5)));
  unsigned int v337 = ((2 * v334) & 0xAFEF2B7E ^ 0x74D0B66) + (v334 ^ 0x5C51324C);
  LODWORD(STACK[0x4F8]) = v337;
  unsigned int v338 = (v326 ^ 0x64016A5D | v336 ^ 0x51) ^ (16 * (v335 ^ 0x51));
  LODWORD(STACK[0x4CC]) = v338;
  int v339 = 7 * ((v316 >> 4) ^ 8);
  int v340 = *(unsigned __int8 *)(v10
                            + (unsigned __int16)(7 * (v316 & 0xF ^ 0xB)
                                               + 3640
                                               - 960
                                               * ((unsigned __int16)((2185 * (7 * (v316 & 0xF ^ 0xB) + 3640)) >> 16) >> 5))) ^ 0x51;
  LODWORD(STACK[0x4C8]) = v340;
  LODWORD(STACK[0x4F4]) = (v336 ^ 0x51) & 0xF;
  unsigned int v341 = 7 * ((v336 ^ 0x51) & 0xF | (16 * (v340 & 0xF)));
  LODWORD(STACK[0x4C0]) = v341;
  int v342 = *(unsigned __int8 *)(v10
                            + (unsigned __int16)(v339
                                               + 3640
                                               - 960
                                               * ((unsigned __int16)((2185 * (v339 + 3640)) >> 16) >> 5))) ^ 0x51;
  LODWORD(STACK[0x4C4]) = 16 * v342;
  unsigned int v343 = 7 * ((((v328 ^ (16 * v342 - ((32 * v342) & 0xC40) + 3631)) >> 4) & 0xF0 | (v338 >> 8) & 0xF) ^ 0x50);
  LODWORD(STACK[0x4D0]) = v343;
  if (v341 >= 0x3C0) {
    unsigned int v344 = v341 - 960;
  }
  else {
    unsigned int v344 = v341;
  }
  LODWORD(STACK[0x4D4]) = v344;
  if (v343 >= 0x3C0) {
    unsigned int v345 = v343 - 960;
  }
  else {
    unsigned int v345 = v343;
  }
  LODWORD(STACK[0x4DC]) = v345;
  if (v329 >= 0x3C0) {
    int v346 = v329 - 960;
  }
  else {
    int v346 = 7 * (((v327 >> 12) & 0xF0 | HIWORD(v326) & 0xF) ^ 0x11);
  }
  LODWORD(STACK[0x4EC]) = v346;
  LODWORD(STACK[0x4E4]) = v328;
  LODWORD(STACK[0x4E0]) = v319;
  unsigned int v347 = 7 * ((HIWORD(v328) & 0xF0 | (v319 >> 20) & 0xF) ^ 0x60);
  unsigned int v348 = 7 * (((v328 >> 20) & 0xF0 | HIBYTE(v319) & 0xF) ^ 0x84);
  unsigned int v349 = LODWORD(STACK[0x54C]) ^ 0xE93DB02E;
  LODWORD(STACK[0x4BC]) = v299;
  unsigned int v350 = (v349 ^ v299)
       + ((v301 + 1598753077) ^ 0xA0B4F6CB)
       + ((2 * (v301 + 1598753077)) & 0x4169ED96)
       - v303
       - 1848521749;
  unsigned int v351 = ((2 * v350) & 0xBEF67D56 ^ 0x16444D46) + (v350 ^ 0xD4DD9958);
  LODWORD(STACK[0x500]) = v351;
  unsigned int v352 = v295 + (v299 ^ 0x88D090D8);
  unsigned int v353 = v295 + 714354560 + v351;
  int v354 = LODWORD(STACK[0x654]) ^ 0x4C4C1508;
  LODWORD(STACK[0x54C]) = v354;
  unsigned int v355 = ((2 * (v333 ^ 0x94B0CF6D)) & 0xAD858B32) + (v333 ^ 0x42720AF4);
  unsigned int v356 = v353 + v354 - ((2 * (v353 + v354)) & 0x3F1C0988) + 529401028;
  unsigned int v357 = v307 + (v332 ^ 0xD78699C4);
  unsigned int v358 = v307 - 1639400287 + v337;
  unsigned int v359 = LODWORD(STACK[0x588]) - v358 + 541182520 - ((2 * (LODWORD(STACK[0x588]) - v358 + 541182520)) & 0xB29C9182);
  int v360 = 7 * (~HIBYTE(v356) & 0xF) + 3640;
  int v361 = 7 * ((v356 >> 20) & 0xF ^ 8) + 3640;
  int v362 = 7 * (HIWORD(v356) & 0xF ^ 0xE) + 3640;
  int v363 = ((((*(unsigned __int8 *)(v10
                                + (unsigned __int16)(v360
                                                   - 960 * ((unsigned __int16)((2185 * v360) >> 16) >> 5))) ^ 0x51) << 8) ^ ((*(unsigned __int8 *)(v10 + (unsigned __int16)(7 * ((v356 >> 28) ^ 1) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v356 >> 28) ^ 1) + 3640)) >> 16) >> 5))) ^ 0x51) << 12) | *(unsigned __int8 *)(v10 + (unsigned __int16)(v362 - 960 * ((unsigned __int16)((2185 * v362) >> 16) >> 5))) ^ 0x51) << 8) ^ ((*(unsigned __int8 *)(v10 + (unsigned __int16)(v361 - 960 * ((unsigned __int16)((2185 * v361) >> 16) >> 5))) ^ 0x51) << 12);
  int v364 = 7 * ((v356 >> 8) & 0xF ^ 4) + 3640;
  int v365 = 7 * ((v356 >> 4) ^ 0xC) + 3640;
  int v366 = v363 | *(unsigned __int8 *)(v10
                                   + (unsigned __int16)(v364
                                                      - 960
                                                      * ((unsigned __int16)((2185 * v364) >> 16) >> 5))) ^ 0x51;
  unsigned int v367 = (v366 << 8) + 891326294 - ((v366 << 9) & 0x6A411E00);
  unsigned int v368 = 7 * (((v359 + 1498302657) >> 28) ^ 5) + 3640;
  unsigned int v369 = (((v359 + 1498302657) >> 24) & 7 ^ 1 | ((v359 + 1498302657) >> 24) & 7 ^ 6)
       * ((((v359 + 1498302657) >> 24) & 0xF ^ 9) + 520);
  int v370 = *(unsigned __int8 *)(v10
                            + (unsigned __int16)(v365
                                               - 960 * ((unsigned __int16)((2185 * v365) >> 16) >> 5)));
  int v371 = *(unsigned __int8 *)(v10
                            + (unsigned __int16)(7 * (v356 & 0xF ^ 4)
                                               + 3640
                                               - 960
                                               * ((unsigned __int16)((2185 * (7 * (v356 & 0xF ^ 4) + 3640)) >> 16) >> 5))) ^ 0x51;
  unsigned int v372 = v367 ^ ((*(unsigned __int8 *)(v10
                                     + (unsigned __int16)(7 * ((unsigned __int16)v356 >> 12)
                                                        + 3640
                                                        - 960
                                                        * ((unsigned __int16)((2185
                                                                             * (7
  unsigned int v373 = (v372 ^ 0x35208F56 | v371) ^ (16 * (v370 ^ 0x51));
  unsigned int v374 = 7 * (((v359 + 1498302657) >> 20) & 0xF ^ 4) + 3640;
  int v375 = ((*(unsigned __int8 *)(v10 + (unsigned __int16)(v369 - 960 * ((unsigned __int16)((2185 * v369) >> 16) >> 5))) ^ 0x51) << 8) ^ ((*(unsigned __int8 *)(v10 + (unsigned __int16)(v368 - 960 * ((unsigned __int16)((2185 * v368) >> 16) >> 5))) ^ 0x51) << 12);
  unsigned int v376 = 7 * (((v359 + 1498302657) >> 16) & 0xF ^ 0xE) + 3640;
  int v377 = 7
       * (((unsigned __int16)(LOWORD(STACK[0x588])
                            - v358
                            - 13768
                            - ((2 * (LOWORD(STACK[0x588]) - v358 - 13768)) & 0x9182)
                            + 18625) >> 12) ^ 4)
       + 3640;
  int v378 = v375 | *(unsigned __int8 *)(v10
                                   + (unsigned __int16)(v376 - 960 * ((unsigned __int16)((2185 * v376) >> 16) >> 5))) ^ 0x51;
  unsigned int v379 = 7 * (((v359 + 1498302657) >> 8) & 0xF ^ 8) + 3640;
  int v380 = 7 * (((v359 - 63) >> 4) ^ 0xC) + 3640;
  int v381 = (v378 << 8) ^ ((*(unsigned __int8 *)(v10
                                            + (unsigned __int16)(v374
                                                               - 960 * ((unsigned __int16)((2185 * v374) >> 16) >> 5))) ^ 0x51) << 12) | *(unsigned __int8 *)(v10 + (unsigned __int16)(v379 - 960 * ((unsigned __int16)((2185 * v379) >> 16) >> 5))) ^ 0x51;
  int v382 = 7 * (((_BYTE)v359 - 47) & 0xF ^ 1) + 3640;
  unsigned int v383 = (v381 << 8) + 924021367 - ((v381 << 9) & 0x6E26E400);
  unsigned int v384 = v383 ^ ((*(unsigned __int8 *)(v10
                                     + (unsigned __int16)(v377
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v377) >> 16) >> 5))) ^ 0x51) << 12);
  int v385 = *(unsigned __int8 *)(v10
                            + (unsigned __int16)(v382
                                               - 960 * ((unsigned __int16)((2185 * v382) >> 16) >> 5))) ^ 0x51;
  unsigned int v386 = (v384 ^ 0x37137277 | v385) ^ (16
                                     * (*(unsigned __int8 *)(v10
                                                           + (unsigned __int16)(v380
                                                                              - 960
                                                                              * ((unsigned __int16)((2185 * v380) >> 16) >> 5))) ^ 0x51));
  LODWORD(STACK[0x654]) = v371 & 0xF;
  unsigned int v387 = 7 * (v371 & 0xF | (16 * (v385 & 0xF)));
  LODWORD(STACK[0x4B8]) = v373;
  unsigned int v388 = 7 * (v386 & 0xF0 | (v373 >> 4));
  unsigned int v389 = 7 * ((v386 >> 4) & 0xF0 | (v373 >> 8) & 0xF);
  LODWORD(STACK[0x4B4]) = v372;
  unsigned int v390 = 7 * (((v384 >> 8) & 0xF0 | ((unsigned __int16)v372 >> 12)) ^ 0x78);
  unsigned int v391 = 7 * (((v384 >> 12) & 0xF0 | HIWORD(v372) & 0xF) ^ 0x30);
  LODWORD(STACK[0x4B0]) = v383;
  LODWORD(STACK[0x4AC]) = v367;
  unsigned int v392 = 7 * ((HIWORD(v383) & 0xF0 | (v367 >> 20) & 0xF) ^ 0x12);
  unsigned int v393 = 7 * (((v383 >> 20) & 0xF0 | HIBYTE(v367) & 0xF) ^ 0x75);
  LODWORD(STACK[0x4A8]) = v315;
  unsigned int v394 = v352 - 1454221113 + v315;
  __int16 v395 = v356 ^ v394;
  LODWORD(STACK[0x430]) = v356 ^ v394;
  int v396 = v394 ^ (v315 + 43210045);
  LODWORD(STACK[0x4A4]) = v396;
  LODWORD(STACK[0x498]) = v353 ^ 0x7CE5DB61;
  int v397 = LODWORD(STACK[0x564]) + 1335991635;
  int v398 = (v353 ^ 0x7CE5DB61) - v396;
  LODWORD(STACK[0x49C]) = v398;
  LODWORD(STACK[0x3D0]) = v397;
  unsigned int v399 = v398 + v397 - ((2 * (v398 + v397)) & 0xB1D91444) - 655586782;
  int v400 = 7 * (HIBYTE(v399) & 0xF ^ 8) + 3640;
  unsigned int v401 = v357 + 1983926880 + v355;
  LODWORD(STACK[0x488]) = v401;
  unsigned int v402 = v355 - 481269087;
  LODWORD(STACK[0x490]) = v355 - 481269087;
  LODWORD(STACK[0x48C]) = v358 ^ 0x7CE5DB61;
  unsigned int v403 = LODWORD(STACK[0x658]) ^ 0x8A5ECB40;
  LODWORD(STACK[0x658]) = v401 ^ v402;
  int v404 = (v358 ^ 0x7CE5DB61) - (v401 ^ v402);
  LODWORD(STACK[0x480]) = v404;
  LODWORD(STACK[0x540]) = v403;
  unsigned int v405 = v403 - v404 - ((2 * (v403 - v404)) & 0x116CB8E8);
  int v406 = 7 * ((v399 >> 20) & 0xF ^ 0xE) + 3640;
  LOWORD(v357) = v406 - 960 * ((unsigned __int16)((2185 * v406) >> 16) >> 5);
  int v407 = 7 * (HIWORD(v399) & 0xF ^ 0xC) + 3640;
  LOWORD(v401) = v407 - 960 * ((unsigned __int16)((2185 * v407) >> 16) >> 5);
  int v408 = 7 * (((unsigned __int16)v399 >> 12) ^ 8) + 3640;
  int v409 = 7 * ((v399 >> 8) & 0xF ^ 0xA) + 3640;
  int v410 = (((*(unsigned __int8 *)(v10
                               + (unsigned __int16)(v400
                                                  - 960 * ((unsigned __int16)((2185 * v400) >> 16) >> 5))) ^ 0x51) << 16) ^ ((*(unsigned __int8 *)(v10 + (unsigned __int16)(7 * ((v399 >> 28) ^ 0xD) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v399 >> 28) ^ 0xD) + 3640)) >> 16) >> 5))) ^ 0x51) << 20) | ((*(unsigned __int8 *)(v10 + (unsigned __int16)v401) ^ 0x51) << 8)) ^ ((*(unsigned __int8 *)(v10 + (unsigned __int16)v357) ^ 0x51) << 12) | *(unsigned __int8 *)(v10 + (unsigned __int16)(v409 - 960 * ((unsigned __int16)((2185 * v409) >> 16) >> 5))) ^ 0x51;
  LODWORD(STACK[0x4A0]) = v399;
  int v411 = 7 * ((v399 >> 4) ^ 2) + 3640;
  unsigned int v412 = (v410 << 8) - 656154796 - ((v410 << 9) & 0xB1C7BE00);
  int v413 = 7 * (v399 & 0xF ^ 2) + 3640;
  unsigned int v414 = 7 * ((v405 + LODWORD(STACK[0x3C8])) >> 28) + 3640;
  v405 -= 2001314700;
  int v415 = 7 * (HIBYTE(v405) & 0xF ^ 8) + 3640;
  int v416 = 7 * ((v405 >> 20) & 0xF ^ 0xB) + 3640;
  int v417 = ((*(unsigned __int8 *)(v10
                              + (unsigned __int16)(v415
                                                 - 960 * ((unsigned __int16)((2185 * v415) >> 16) >> 5))) ^ 0x51) << 8) ^ ((*(unsigned __int8 *)(v10 + (unsigned __int16)(v414 - 960 * ((unsigned __int16)((2185 * v414) >> 16) >> 5))) ^ 0x51) << 12);
  int v418 = 7 * (HIWORD(v405) & 0xF ^ 6) + 3640;
  LOWORD(v383) = v418 - 960 * ((unsigned __int16)((2185 * v418) >> 16) >> 5);
  unsigned int v419 = v412 ^ ((*(unsigned __int8 *)(v10
                                     + (unsigned __int16)(v408
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v408) >> 16) >> 5))) ^ 0x51) << 12);
  int v420 = *(unsigned __int8 *)(v10
                            + (unsigned __int16)(v413
                                               - 960 * ((unsigned __int16)((2185 * v413) >> 16) >> 5))) ^ 0x51;
  unsigned int v421 = (v419 ^ 0xD8E3DF54 | v420) ^ (16
                                     * (*(unsigned __int8 *)(v10
                                                           + (unsigned __int16)(v411
                                                                              - 960
                                                                              * ((unsigned __int16)((2185 * v411) >> 16) >> 5))) ^ 0x51));
  int v422 = 7 * (((unsigned __int16)(v405 & 0xF000) >> 12) ^ 5) + 3640;
  int v423 = ((v417 | *(unsigned __int8 *)(v10 + (unsigned __int16)v383) ^ 0x51) << 8) ^ ((*(unsigned __int8 *)(v10 + (unsigned __int16)(v416 - 960 * ((unsigned __int16)((2185 * v416) >> 16) >> 5))) ^ 0x51) << 12);
  int v424 = 7 * ((v405 >> 8) & 0xF ^ 0xC) + 3640;
  int v425 = *(unsigned __int8 *)(v10
                            + (unsigned __int16)(v424
                                               - 960 * ((unsigned __int16)((2185 * v424) >> 16) >> 5))) ^ 0x51;
  int v426 = (v423 | v425) - 2 * ((v423 | v425) & 0x270C829F ^ v425 & 0x18);
  int v427 = 7 * ((v405 >> 4) ^ 7) + 3640;
  LOWORD(v416) = 7 * (v405 & 0xF ^ 4)
               + 3640
               - 960 * ((unsigned __int16)((2185 * (7 * (v405 & 0xF ^ 4) + 3640)) >> 16) >> 5);
  int v428 = (v426 - 1492352377) & 0x7FFFFDC7;
  unsigned int v429 = (((v426 - 1492352377) << 8) ^ 0xC828700)
       + 441831239
       - ((2 * (((v426 - 1492352377) << 8) ^ 0xC828700)) & 0x34AB9E00);
  unsigned int v430 = v429 ^ ((*(unsigned __int8 *)(v10
                                     + (unsigned __int16)(v422
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v422) >> 16) >> 5))) ^ 0x51) << 12);
  int v431 = *(unsigned __int8 *)(v10 + (unsigned __int16)v416) ^ 0x51;
  unsigned int v432 = (v430 ^ 0x1A55CF47 | v431) ^ (16
                                     * (*(unsigned __int8 *)(v10
                                                           + (unsigned __int16)(v427
                                                                              - 960
                                                                              * ((unsigned __int16)((2185 * v427) >> 16) >> 5))) ^ 0x51));
  int v433 = v420 & 0xF;
  LODWORD(STACK[0x478]) = v433;
  unsigned int v434 = 7 * (v433 & 0xFFFFFF0F | (16 * (v431 & 0xF)));
  unsigned __int16 v435 = (unsigned __int16)(v434 + 3983) % 0x3C0u;
  LODWORD(STACK[0x40C]) = v347;
  if (v347 >= 0x3C0) {
    unsigned int v436 = v347 - 960;
  }
  else {
    unsigned int v436 = v347;
  }
  LODWORD(STACK[0x3F4]) = v436;
  LODWORD(STACK[0x41C]) = v348;
  if (v348 >= 0x3C0) {
    unsigned int v437 = v348 - 960;
  }
  else {
    unsigned int v437 = v348;
  }
  LODWORD(STACK[0x3F8]) = v437;
  LODWORD(STACK[0x44C]) = v387;
  if (v387 >= 0x3C0) {
    unsigned int v438 = v387 - 960;
  }
  else {
    unsigned int v438 = v387;
  }
  LODWORD(STACK[0x440]) = v438;
  LODWORD(STACK[0x454]) = v388;
  if (v388 >= 0x3C0) {
    unsigned int v439 = v388 - 960;
  }
  else {
    unsigned int v439 = v388;
  }
  LODWORD(STACK[0x444]) = v439;
  LODWORD(STACK[0x45C]) = v389;
  if (v389 >= 0x3C0) {
    unsigned int v440 = v389 - 960;
  }
  else {
    unsigned int v440 = v389;
  }
  LODWORD(STACK[0x448]) = v440;
  LODWORD(STACK[0x464]) = v390;
  if (v390 >= 0x3C0) {
    unsigned int v441 = v390 - 960;
  }
  else {
    unsigned int v441 = v390;
  }
  LODWORD(STACK[0x450]) = v441;
  LODWORD(STACK[0x46C]) = v391;
  if (v391 >= 0x3C0) {
    unsigned int v442 = v391 - 960;
  }
  else {
    unsigned int v442 = v391;
  }
  LODWORD(STACK[0x458]) = v442;
  LODWORD(STACK[0x470]) = v392;
  if (v392 >= 0x3C0) {
    unsigned int v443 = v392 - 960;
  }
  else {
    unsigned int v443 = v392;
  }
  LODWORD(STACK[0x460]) = v443;
  LODWORD(STACK[0x474]) = v393;
  if (v393 >= 0x3C0) {
    unsigned int v444 = v393 - 960;
  }
  else {
    unsigned int v444 = v393;
  }
  LODWORD(STACK[0x468]) = v444;
  if (v434 >= 0x3C0) {
    v434 -= 960;
  }
  unsigned int v445 = v428 ^ 0x270C8087 | v428 ^ 0xD8F37D40;
  int v446 = *(unsigned __int8 *)(v10 + v435) ^ 0x51;
  int v447 = STACK[0x6F0];
  unsigned int v448 = (v446 + 1253351297 - ((2 * v446) & 0xFFFFFF03)) ^ LODWORD(STACK[0x6F0]);
  unsigned int v449 = 7 * v448 % 0x3C0;
  unsigned int v450 = 7 * (v448 - v445) % 0x3C0;
  LOBYTE(v445) = (*(_BYTE *)(v10 + v449) >> 4) ^ 5;
  int v451 = (v445 - 2 * (v445 & 1) + 81) ^ *(unsigned __int8 *)(v10 + v434);
  unsigned int v452 = 7 * (v432 & 0xF0 | (v421 >> 4));
  unsigned int v453 = 7 * v451 + 3983 - 960 * ((8739 * (7 * v451 + 3983)) >> 23);
  if (v452 >= 0x3C0) {
    v452 -= 960;
  }
  unsigned int v454 = *(unsigned __int8 *)(v10 + (unsigned __int16)(7 * (v432 & 0xF0 | (v421 >> 4)) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v10 + (unsigned __int16)v453) ^ 0x51)) ^ 0x51;
  __int16 v455 = 7 * v454;
  v454 *= 244671;
  int v456 = *(unsigned __int8 *)(v10 + v450) ^ (16
                                           * (*(unsigned __int8 *)(v10
                                                                 + (unsigned __int16)(v455
                                                                                    - 960 * ((v454 + 139217799) >> 25)
                                                                                    + 3983)) ^ 0x51));
  int v457 = *(unsigned __int8 *)(v10 + (unsigned __int16)(v455 - 960 * (v454 >> 25))) >> 4;
  int v458 = 7
  unsigned int v459 = v458 - 960 * ((8739 * v458) >> 23);
  unsigned int v460 = 7 * ((v432 >> 4) & 0xF0 | (v421 >> 8) & 0xF);
  unsigned int v461 = v460 - 960;
  if (v460 < 0x3C0) {
    unsigned int v461 = v460;
  }
  int v462 = *(unsigned __int8 *)(v10 + (unsigned __int16)(v460 + 3983) % 0x3C0u) ^ (16
                                                                               * (*(unsigned __int8 *)(v10 + (unsigned __int16)v459) ^ 0x51)) ^ 0x51;
  unsigned __int16 v463 = 7 * v462 - 960 * ((unsigned __int16)((244671 * v462) >> 16) >> 9);
  unsigned int v464 = 7 * v462 + 3983 - 960 * ((34953 * (7 * v462 + 3983)) >> 25);
  int v465 = *(unsigned __int8 *)(v10 + v463) >> 4;
  int v466 = ((v465 ^ 5) - 2 * ((v465 ^ 5) & 3 ^ v465 & 2) + 81) ^ *(unsigned __int8 *)(v10 + v461);
  unsigned int v467 = 7 * (((v430 >> 8) & 0xF0 | ((unsigned __int16)v419 >> 12)) ^ 0xCD);
  unsigned int v468 = 7 * v466 + 3983 - 960 * ((8739 * (7 * v466 + 3983)) >> 23);
  unsigned int v469 = v467
       + 3983
       - 960 * ((unsigned __int16)(7 * (((v430 >> 8) & 0xF0 | ((unsigned __int16)v419 >> 12)) ^ 0xCD) + 3983) / 0x3C0u);
  if (v467 >= 0x3C0) {
    v467 -= 960;
  }
  unsigned int v470 = *(unsigned __int8 *)(v10 + (unsigned __int16)v469) ^ (16
                                                             * (*(unsigned __int8 *)(v10 + (unsigned __int16)v468) ^ 0x51)) ^ 0x51;
  int v471 = 7 * v470;
  v470 *= 244671;
  unsigned int v472 = *(unsigned __int8 *)(v10 + (unsigned __int16)(v471 - 960 * (v470 >> 25)));
  unsigned int v473 = v471 - 960 * ((v470 + 139217799) >> 25);
  int v474 = 7
       * ((((v472 >> 4) ^ 5) - 2 * (((v472 >> 4) ^ 5) & 1) + 81) ^ *(unsigned __int8 *)(v10 + v467));
  LODWORD(STACK[0x428]) = v419;
  unsigned int v475 = 7 * (((v430 >> 12) & 0xF0 | HIWORD(v419) & 0xF) ^ 0x53);
  unsigned __int16 v476 = (unsigned __int16)(v475 + 3983) % 0x3C0u;
  int v477 = *(unsigned __int8 *)(v10
                            + (unsigned __int16)(v474
                                               + 3983
                                               - 960
                                               * ((unsigned __int16)((8739 * (v474 + 3983)) >> 16) >> 7)));
  if (v475 >= 0x3C0) {
    v475 -= 960;
  }
  unsigned int v478 = *(unsigned __int8 *)(v10 + v476) ^ (16 * (v477 ^ 0x51)) ^ 0x51;
  int v479 = 7 * v478;
  v478 *= 244671;
  unsigned int v480 = v479 - 960 * ((v478 + 139217799) >> 25);
  LOBYTE(v47_Block_object_dispose((const void *)(v9 - 96), 8) = (*(_BYTE *)(v10 + (unsigned __int16)(v479 - 960 * (v478 >> 25))) >> 4) ^ 5;
  int v481 = 7 * ((v478 - 2 * (v478 & 1) + 81) ^ *(unsigned __int8 *)(v10 + v475)) + 3983;
  unsigned int v482 = v481 - 960 * ((8739 * v481) >> 23);
  int v483 = ((*(unsigned __int8 *)(v10 + (unsigned __int16)(v480 + 3983)) ^ 0x51) << 16) ^ ((*(unsigned __int8 *)(v10 + (unsigned __int16)(v473 + 3983)) ^ 0x51) << 12);
  LODWORD(STACK[0x438]) = v483;
  unsigned int v484 = 7 * ((HIWORD(v429) & 0xF0 | (v412 >> 20) & 0xF) ^ 0x5E);
  unsigned int v485 = v484
       + 3983
       - 960 * ((unsigned __int16)(7 * ((BYTE2(v429) & 0xF0 | (v412 >> 20) & 0xF) ^ 0x5E) + 3983) / 0x3C0u);
  if (v484 >= 0x3C0) {
    v484 -= 960;
  }
  unsigned int v486 = 7
       * (*(unsigned __int8 *)(v10 + (unsigned __int16)v485) ^ (16
                                                              * (*(unsigned __int8 *)(v10 + (unsigned __int16)v482) ^ 0x51)) ^ 0x51);
  int v487 = v456 ^ 0x51;
  int v488 = v487 ^ ((*(unsigned __int8 *)(v10 + (unsigned __int16)v464) ^ 0x51) << 8);
  unsigned int v489 = v486 % ((v488 & 0x3C0 ^ 0x3C0) + (v488 & 0x3C0u));
  unsigned int v490 = v486 + 3983 - 960 * ((34953 * (v486 + 3983)) >> 25);
  int v491 = (*(unsigned __int8 *)(v10 + v489) >> 4) ^ 5;
  int v492 = 7 * ((v491 + (~(2 * v491) | 0xFD) + 82) ^ *(unsigned __int8 *)(v10 + v484)) + 3983;
  unsigned int v493 = v492 - 960 * ((8739 * v492) >> 23);
  unsigned int v494 = 7 * (((v429 >> 20) & 0xF0 | HIBYTE(v412) & 0xF) ^ 0xA8);
  if (v494 >= 0x3C0) {
    v494 -= 960;
  }
  char v495 = *(_BYTE *)(v10 + v494);
  __int16 v496 = *(unsigned __int8 *)(v10
                            + (unsigned __int16)(7 * (((v429 >> 20) & 0xF0 | HIBYTE(v412) & 0xF) ^ 0xA8) + 3983)
                            % 0x3C0u) ^ (unsigned __int16)(16
                                                         * (*(unsigned __int8 *)(v10 + (unsigned __int16)v493) ^ 0x51)) ^ 0x51;
  char v497 = (*(_BYTE *)(v10 + (unsigned __int16)((v495 & 7 ^ 6 | v495 & 7 ^ 1) * v496) % 0x3C0u) >> 4) ^ 5;
  int v498 = 7 * ((v497 - 2 * (v497 & 1) + 81) ^ v495) + 3983;
  int v499 = 7 * ((HIBYTE(v429) & 0xF0 | (v412 >> 28)) ^ 0x1D) + 3983;
  int v500 = ((*(unsigned __int8 *)(v10
                              + (unsigned __int16)(7
                                                 * (*(unsigned __int8 *)(v10
                                                                       + (unsigned __int16)(v499
                                                                                          - 960
                                                                                          * ((unsigned __int16)((8739 * v499) >> 16) >> 7))) ^ (unsigned __int16)(16 * (*(unsigned __int8 *)(v10 + (unsigned __int16)(v498 - 960 * ((unsigned __int16)((8739 * v498) >> 16) >> 7))) ^ 0x51)) ^ 0x51)
                                                 + 3983)
                              % 0x3C0u) ^ 1) << 28) ^ ((*(unsigned __int8 *)(v10
  LODWORD(STACK[0x420]) = v500;
  int v501 = 7 * (v487 & 0xF0 | (v421 >> 4)) + 1813;
  unint64_t v502 = v501 - 960 * ((2185 * v501) >> 21);
  STACK[0x410] = v502;
  int v503 = v483 ^ ((*(unsigned __int8 *)(v10 + (unsigned __int16)v490) ^ 0x51) << 20);
  LODWORD(STACK[0x404]) = v503;
  int v504 = v500 ^ v503;
  LODWORD(STACK[0x408]) = v504;
  unsigned int v505 = v504 ^ v488;
  LODWORD(STACK[0x424]) = v505;
  LODWORD(v502) = 7 * ((((v505 >> 8) & 0xF) << ((v502 & 4 ^ 4) + (v502 & 4))) ^ (v421 >> 8) & 0xF) + 1813;
  int v506 = 7 * (((v505 >> 8) & 0xF0 | ((unsigned __int16)v419 >> 12)) ^ 0xD) + 1813;
  int v507 = ((*(unsigned __int8 *)(v10
                              + (unsigned __int16)(v506
                                                 - 960 * ((unsigned __int16)((2185 * v506) >> 16) >> 5))) ^ 0x51) << 12) ^ ((*(unsigned __int8 *)(v10 + v502 % 0x3C0) ^ 0x51) << 8);
  LODWORD(STACK[0x3F0]) = v507;
  int v508 = *(unsigned __int8 *)(v10
                            + (unsigned __int16)(LODWORD(STACK[0x6B0])
                                               - 960
                                               * ((unsigned __int16)((244671 * LODWORD(STACK[0x6B8])) >> 16) >> 9))) >> 4;
  int v509 = 7
  int v510 = *(unsigned __int8 *)(v10 + (unsigned __int16)(LODWORD(STACK[0x5F0]) + 3983) % 0x3C0u) ^ (16
                                                                                                * (*(unsigned __int8 *)(v10 + (unsigned __int16)(v509 - 960 * ((unsigned __int16)((8739 * v509) >> 16) >> 7))) ^ 0x51)) ^ 0x51;
  LOBYTE(v507) = (*(_BYTE *)(v10
                           + (unsigned __int16)(7 * v510
                                              - 960 * ((unsigned __int16)((244671 * v510) >> 16) >> 9))) >> 4) ^ 5;
  int v511 = 7 * ((v507 - 2 * (v507 & 1) + 81) ^ *(unsigned __int8 *)(v10 + LODWORD(STACK[0x604]))) + 3983;
  int v512 = *(unsigned __int8 *)(v10 + (unsigned __int16)(LODWORD(STACK[0x600]) + 3983) % 0x3C0u) ^ (16
                                                                                                * (*(unsigned __int8 *)(v10 + (unsigned __int16)(v511 - 960 * ((unsigned __int16)((8739 * v511) >> 16) >> 7))) ^ 0x51)) ^ 0x51;
  LOBYTE(v502) = (*(_BYTE *)(v10
                           + (unsigned __int16)(7 * v512
                                              - 960 * ((unsigned __int16)((244671 * v512) >> 16) >> 9))) >> 4) ^ 5;
  LODWORD(v502) = 7
  LODWORD(v502) = *(unsigned __int8 *)(v10 + (unsigned __int16)(LODWORD(STACK[0x614]) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v10 + (unsigned __int16)(v502 - 960 * ((unsigned __int16)((8739 * v502) >> 16) >> 7))) ^ 0x51)) ^ 0x51;
  __int16 v513 = 7 * v502;
  LODWORD(v502) = 244671 * v502;
  __int16 v514 = v513 - 960 * ((v502 + 139217799) >> 25);
  LODWORD(v502) = *(unsigned __int8 *)(v10 + (unsigned __int16)(v513 - 960 * (v502 >> 25))) >> 4;
  LODWORD(v502) = 7
  LODWORD(v502) = *(unsigned __int8 *)(v10 + (unsigned __int16)(LODWORD(STACK[0x628]) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v10 + (unsigned __int16)(v502 - 960 * ((unsigned __int16)((8739 * v502) >> 16) >> 7))) ^ 0x51)) ^ 0x51;
  __int16 v515 = 7 * v502;
  LODWORD(v502) = 244671 * v502;
  __int16 v516 = v515 - 960 * ((v502 + 139217799) >> 25);
  LODWORD(v502) = (*(unsigned __int8 *)(v10 + (unsigned __int16)(v515 - 960 * (v502 >> 25))) >> 4) ^ 5;
  LODWORD(v502) = 7
  LODWORD(v502) = *(unsigned __int8 *)(v10 + (LODWORD(STACK[0x638]) - 1514434467 + LODWORD(STACK[0x5D4]))) ^ (16 * (*(unsigned __int8 *)(v10 + (unsigned __int16)(v502 - 960 * ((unsigned __int16)((8739 * v502) >> 16) >> 7))) ^ 0x51)) ^ 0x51;
  __int16 v517 = 7 * v502;
  LOBYTE(v502) = (*(_BYTE *)(v10
                           + (unsigned __int16)(7 * v502
                                              - 960 * ((unsigned __int16)((244671 * v502) >> 16) >> 9))) >> 4) ^ 5;
  LODWORD(v502) = 7
  LODWORD(v502) = *(unsigned __int8 *)(v10
                                     + (unsigned __int16)(v502
                                                        - 960
                                                        * ((unsigned __int16)((8739 * v502) >> 16) >> 7)));
  LODWORD(v502) = 16 * (v502 ^ 0x51) + 1705087630 - ((32 * v502) & 0x500);
  unsigned int v518 = 7 * ((HIBYTE(LODWORD(STACK[0x678])) & 0xF0 | ((LODWORD(STACK[0x728]) + 0x80000000) >> 28)) ^ 0x90) + 3983;
  int v519 = *(unsigned __int8 *)(v10 + (unsigned __int16)(v518 - 960 * ((unsigned __int16)((8739 * v518) >> 16) >> 7))) ^ 0x51;
  int v520 = v519 + 1324208980 - ((2 * v519) & 0xA8);
  int v521 = v502 ^ v520 ^ 0xD4B3BE25;
  v520 ^= 0x4EEDD354u;
  int v522 = (v521 + v520 + 1) ^ ((v502 ^ 0x9A5E6D71) + 1);
  LODWORD(v502) = 7 * (v520 + ((v522 + 1705087630 - ((2 * v522) & 0xCB43251C)) ^ v502)) + 3983;
  unint64_t v523 = v10;
  int v524 = 16 * (*(unsigned __int8 *)(v10 + LODWORD(STACK[0x6C8])) ^ 0x51);
  LOBYTE(v505) = *(_BYTE *)(v10 + (LODWORD(STACK[0x6C0]) + 3983) % 0x3C0u) ^ 0x51;
  int v525 = (*(unsigned __int8 *)(v10
                             + (unsigned __int16)(7 * v510
  int v526 = (*(unsigned __int8 *)(v10 + (unsigned __int16)(7 * v512 + 3983) % 0x3C0u) ^ 0x51) << 12;
  int v527 = (*(unsigned __int8 *)(v10 + (unsigned __int16)(v514 + 3983)) ^ 0x51) << 16;
  int v528 = (*(unsigned __int8 *)(v10 + (unsigned __int16)(v516 + 3983)) ^ 0x51) << 20;
  int v529 = (*(unsigned __int8 *)(v10 + (unsigned __int16)(v517 + 3983) % 0x3C0u) ^ 0x51) << 24;
  unsigned int v530 = v529 ^ ((*(unsigned __int8 *)(v10 + v502 % 0x3C0) ^ 1) << 28);
  unsigned int v531 = v529 ^ v528;
  unsigned int v532 = v528 ^ v527;
  unsigned int v533 = v527 ^ v526;
  LOWORD(v526) = v526 ^ v525;
  unsigned int v534 = v525 ^ v524;
  LOBYTE(v524) = v524 ^ v505;
  unsigned int v535 = 7 * (STACK[0x6E8] & 0xFFFFFF0F | (16 * (v505 & 0xF))) + 1813;
  int v536 = 7 * (v524 & 0xF0 | (LODWORD(STACK[0x698]) >> 4)) + 1813;
  int v537 = 7 * ((v534 >> 4) & 0xF0 | (LODWORD(STACK[0x698]) >> 8) & 0xF) + 1813;
  LOWORD(v537) = v537 - 960 * ((unsigned __int16)((2185 * v537) >> 16) >> 5);
  int v538 = LODWORD(STACK[0x698]) >> 8 >> ((v537 & 4 ^ 4) + (v537 & 4));
  int v539 = *(unsigned __int8 *)(v10 + (unsigned __int16)v537);
  int v540 = (2 * v538) & 0x225710;
  v538 -= 753849464;
  unsigned int v541 = v538 - v540;
  LODWORD(v502) = ((v539 & 7 ^ 1) + (v539 & 7 ^ 6)) * (((v538 & 0xF | (16 * ((unsigned __int16)v526 >> 12))) ^ 8) + 259);
  LOWORD(v526) = (LODWORD(STACK[0x58C]) + 10) & 0xF;
  LOWORD(v526) = 7 * (((v541 >> 4) ^ 0x18) & ((v526 ^ 0xF) + v526) ^ (v533 >> 12) & 0xF0) + 1813;
  LODWORD(v502) = ((*(unsigned __int8 *)(v10
                                       + (unsigned __int16)(v502
                                                          - 960
                                                          * ((unsigned __int16)((17477 * v502) >> 16) >> 8))) ^ 0x51) << 12) ^ ((v539 ^ 0x51) << 8);
  int v542 = 7 * ((HIWORD(v532) & 0xF0 | (v541 >> 8) & 0xF) ^ 0xB) + 1813;
  int v543 = 7 * (((v531 >> 20) & 0xF0 | ((unsigned __int16)v541 >> 12)) ^ 2) + 1813;
  int v544 = 7 * ((HIBYTE(v530) & 0xF0 | HIWORD(v541) & 0xF) ^ 1) + 1813;
  LOBYTE(v542) = *(_BYTE *)(v10
                          + (unsigned __int16)(v542 - 960 * ((unsigned __int16)((2185 * v542) >> 16) >> 5)));
  unsigned int v545 = ((v542 ^ 0x51) << 20) ^ ((*(unsigned __int8 *)(v10 + (unsigned __int16)v526 % 0x3C0u) ^ 0x51) << 16) ^ ((*(unsigned __int8 *)(v10 + (unsigned __int16)(v543 - 960 * ((unsigned __int16)((2185 * v543) >> 16) >> 5))) ^ 0x51) << 24);
  int v546 = *(unsigned __int8 *)(v10 + (unsigned __int16)(v535 - 960 * ((unsigned __int16)((2185 * v535) >> 16) >> 5)));
  int v547 = v546 ^ (16
               * (*(unsigned __int8 *)(v10
                                     + (unsigned __int16)(v536
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v536) >> 16) >> 5))) ^ 0x51)) ^ 0x51;
  unsigned int v548 = (v502 ^ v547 | ((*(unsigned __int8 *)(v10
                                             + (unsigned __int16)(v544
                                                                - 960
                                                                * ((unsigned __int16)((2185 * v544) >> 16) >> 5))) ^ 1) << 28)) ^ v545;
  LOWORD(v536) = 7 * (v548 >> 28) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (v548 >> 28) + 3822)) >> 16) >> 5);
  unsigned int v549 = v548 >> (HIBYTE(LODWORD(STACK[0x728])) & 0x10 ^ 0x10) >> (HIBYTE(LODWORD(STACK[0x728])) & 0x10);
  int v550 = (v549 >> 4) + (((v542 & 0xD0 ^ 0xAF) + (v542 & 0xD0 ^ 0x7F) - 46) & 0xF0 ^ 0x222);
  int v551 = *(unsigned __int8 *)(v10
                            + (unsigned __int16)(7 * (v549 & 0xF)
                                               + 3822
                                               - 960
                                               * ((unsigned __int16)((2185 * (7 * (v549 & 0xF) + 3822)) >> 16) >> 5)));
  int v552 = ((*(unsigned __int8 *)(v10
                              + (unsigned __int16)(7 * (HIBYTE(v545) & 0xF)
                                                 + 3822
                                                 - 960
                                                 * ((unsigned __int16)((2185
                                                                                    * (7 * (HIBYTE(v545) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x51) << 8) ^ ((*(unsigned __int8 *)(v10 + (unsigned __int16)v536) ^ 0x51) << 12) | v551 ^ 0x51;
  unsigned int v553 = (v551 & 0xF ^ 0xE | v551 & 0xF ^ 1) & ((v502 ^ v547) >> 8);
  int v554 = *(unsigned __int8 *)(v10
                            + (unsigned __int16)(7 * v553
                                               + 3822
                                               - 960 * ((unsigned __int16)((2185 * (7 * v553 + 3822)) >> 16) >> 5))) ^ 0x51 | (v552 << 8) ^ ((*(unsigned __int8 *)(v10 + (unsigned __int16)(7 * v550 - 960 * ((unsigned __int16)((61173 * v550) >> 16) >> 7))) ^ 0x51) << 12);
  int v555 = ((*(unsigned __int8 *)(v10
                              + (unsigned __int16)(7 * ((unsigned __int16)v502 >> 12)
                                                 + 3822
                                                 - 960
                                                 * ((unsigned __int16)((2185
                                                                      * (7
  LODWORD(v502) = LODWORD(STACK[0x6D0]) ^ 0x8CF7DBE1;
  LODWORD(STACK[0x728]) = *(unsigned __int8 *)(v10
                                             + (unsigned __int16)(7 * (v546 & 0xF ^ 1)
                                                                + 3822
                                                                - 960
                                                                * ((unsigned __int16)((2185
                                                                                     * (7 * (v546 & 0xF ^ 1u) + 3822)) >> 16) >> 5))) ^ v502 ^ v555 ^ (v554 << 8);
  int v556 = 16
       * (*(unsigned __int8 *)(v10
                             + (unsigned __int16)(LODWORD(STACK[0x668])
  unsigned int v557 = v556 ^ ((*(unsigned __int8 *)(v10 + (unsigned __int16)(LOWORD(STACK[0x64C]) + 3983) % 0x3C0u) ^ 0x51) << 8) ^ ((*(unsigned __int8 *)(v10 + (unsigned __int16)(LODWORD(STACK[0x620]) - 960 * ((LODWORD(STACK[0x61C]) + 139217799) >> 25) + 3983)) ^ 0x51) << 12) ^ ((*(unsigned __int8 *)(v10 + (unsigned __int16)(LOWORD(STACK[0x5FC]) + 3983) % 0x3C0u) ^ 0x51) << 16) ^ ((*(unsigned __int8 *)(v10 + (unsigned __int16)(LODWORD(STACK[0x5EC]) - 960 * ((LODWORD(STACK[0x5E8]) + 139217799) >> 25) + 3983)) ^ 0x51) << 20) ^ ((*(unsigned __int8 *)(v10 + (unsigned __int16)(LODWORD(STACK[0x5E0]) - 960 * ((LODWORD(STACK[0x5DC]) + 139217799) >> 25) + 3983)) ^ 0x51) << 24) ^ ((*(unsigned __int8 *)(v10 + LODWORD(STACK[0x5F4])) ^ 1) << 28);
  LOBYTE(v554) = *(_BYTE *)(v10 + (LODWORD(STACK[0x670]) + 3983) % 0x3C0u) ^ 0x51;
  LOBYTE(v556) = v556 ^ v554;
  unsigned int v558 = 7 * (STACK[0x690] & 0xFFFFFF0F | (16 * (v554 & 0xF))) + 1813;
  int v559 = 7 * (v556 & 0xF0 | (LODWORD(STACK[0x674]) >> 4)) + 1813;
  unsigned int v560 = (v557 >> 8) - ((2 * (v557 >> 8)) & 0x14E946C) - 475575754;
  int v561 = 7 * (((LODWORD(STACK[0x674]) >> 8) & 0xF | (16 * (v560 & 0xF))) ^ 0x60) + 1813;
  int v562 = 7 * ((v560 & 0xF0 | ((unsigned __int16)LODWORD(STACK[0x63C]) >> 12)) ^ 0x30) + 1813;
  int v563 = 7 * (((v560 >> 4) & 0xF0 | HIWORD(LODWORD(STACK[0x63C])) & 0xF) ^ 0xA0) + 1813;
  int v564 = 7 * (((v560 >> 8) & 0xF0 | (LODWORD(STACK[0x5F8]) >> 20) & 0xF) ^ 0x4E) + 1813;
  unsigned int v565 = ((*(unsigned __int8 *)(v10
                              + (unsigned __int16)(v563
                                                 - 960 * ((unsigned __int16)((2185 * v563) >> 16) >> 5))) ^ 0x51) << 16) ^ ((*(unsigned __int8 *)(v10 + (unsigned __int16)(v562 - 960 * ((unsigned __int16)((2185 * v562) >> 16) >> 5))) ^ 0x51) << 12);
  int v566 = *(unsigned __int8 *)(v10 + (unsigned __int16)(v558 - 960 * ((unsigned __int16)((2185 * v558) >> 16) >> 5)));
  int v567 = 7 * (((v560 >> 12) & 0xF0 | HIBYTE(LODWORD(STACK[0x5F8])) & 0xF) ^ 0x7C) + 1813;
  int v568 = v566 ^ (16
               * (*(unsigned __int8 *)(v10
                                     + (unsigned __int16)(v559
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v559) >> 16) >> 5))) ^ 0x51)) ^ 0x51;
  int v569 = 7 * ((HIWORD(v560) & 0xF0 | (LODWORD(STACK[0x5F8]) >> 28)) ^ 0xA6) + 1813;
  unsigned int v570 = (v568 ^ ((*(unsigned __int8 *)(v10
                                      + (unsigned __int16)(v561
                                                         - 960
                                                         * ((unsigned __int16)((2185 * v561) >> 16) >> 5))) ^ 0x51) << 8) | ((*(unsigned __int8 *)(v10 + (unsigned __int16)(v564 - 960 * ((unsigned __int16)((2185 * v564) >> 16) >> 5))) ^ 0x51) << 20)) ^ v565;
  unsigned int v571 = ((*(unsigned __int8 *)(v10
                              + (unsigned __int16)(v569
                                                 - 960 * ((unsigned __int16)((2185 * v569) >> 16) >> 5))) ^ 1) << 28) ^ ((*(unsigned __int8 *)(v10 + (unsigned __int16)(v567 - 960 * ((unsigned __int16)((2185 * v567) >> 16) >> 5))) ^ 0x51) << 24) ^ v570;
  int v572 = ((*(unsigned __int8 *)(v10
                              + (unsigned __int16)(7 * (HIBYTE(v571) & 0xF)
                                                 + 3822
                                                 - 960
                                                 * ((unsigned __int16)((2185
                                                                                    * (7 * (HIBYTE(v571) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x51) << 8) ^ ((*(unsigned __int8 *)(v10 + (unsigned __int16)(7 * (v571 >> 28) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (v571 >> 28) + 3822)) >> 16) >> 5))) ^ 0x51) << 12);
  v571 >>= 8;
  LOWORD(v567) = 7 * (v571 >> 4)
               + 3822
               - 960 * ((unsigned __int16)((2185 * (7 * (v571 >> 4) + 3822)) >> 16) >> 5);
  unsigned int v573 = 7 * (v571 & 0xF) + 3822 - 960 * ((2185 * (7 * (v571 & 0xF) + 3822)) >> 21);
  int v574 = (((~(2 * v573) + v573) ^ v573) & 0x222) + (v568 >> 4);
  int v575 = *(unsigned __int8 *)(v10 + (unsigned __int16)v573) ^ 0x51 ^ (((*(unsigned __int8 *)(v10
                                                                                           + (unsigned __int16)(7 * ((v570 >> 20) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((v570 >> 20) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x51) << 12) | (16 * (*(unsigned __int8 *)(v10 + (unsigned __int16)v567) ^ 0x51)));
  int v576 = *(unsigned __int8 *)(v10
                            + (unsigned __int16)(7 * (BYTE2(v565) & 0xF)
                                               + 3822
                                               - 960
                                               * ((unsigned __int16)((2185
                                                                                  * (7 * (HIWORD(v565) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x51;
  LODWORD(STACK[0x720]) = LODWORD(STACK[0x6D8]) ^ LODWORD(STACK[0x648]);
  int v577 = (v575 << 8) ^ ((v572 | v576) << 16) | *(unsigned __int8 *)(v10
                                                                  + (unsigned __int16)(7 * (v566 & 0xF ^ 1)
                                                                                     + 3822
                                                                                     - 960
                                                                                     * ((unsigned __int16)((2185 * (7 * (v566 & 0xF ^ 1u) + 3822)) >> 16) >> 5))) ^ 0x51;
  int v578 = v502 ^ (16
               * (*(unsigned __int8 *)(v10
                                     + (unsigned __int16)(7 * v574
                                                        - 960
                                                        * ((unsigned __int16)((15295 * v574) >> 16) >> 5))) ^ 0x51));
  LODWORD(v502) = *(unsigned __int8 *)(v10 + (unsigned __int16)(LODWORD(STACK[0x51C]) + 3983) % 0x3C0u) ^ 0x51;
  LODWORD(v502) = 7 * ((v502 + 1253351297 - ((2 * v502) & 0xFFFFFF03)) ^ v447);
  unsigned int v579 = ((int)v502 + 3983) % 0x3C0u;
  LOBYTE(v502) = (*(_BYTE *)(v10 + v502 % 0x3C0) >> 4) ^ 5;
  LODWORD(v502) = 7
  LODWORD(v502) = *(unsigned __int8 *)(v10 + (unsigned __int16)(LODWORD(STACK[0x528]) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v10 + (unsigned __int16)(v502 - 960 * ((unsigned __int16)((8739 * v502) >> 16) >> 7))) ^ 0x51)) ^ 0x51;
  int v580 = (*(unsigned __int8 *)(v10
                             + (unsigned __int16)(7 * v502
                                                - 960 * ((unsigned __int16)((244671 * v502) >> 16) >> 9))) >> 4) ^ 5;
  unsigned int v582 = *(unsigned __int8 *)(v10 + (unsigned __int16)(LODWORD(STACK[0x534]) + 3983) % 0x3C0u) ^ (16
                                                                                                * (*(unsigned __int8 *)(v10 + (unsigned __int16)(v581 - 960 * ((unsigned __int16)((8739 * v581) >> 16) >> 7))) ^ 0x51)) ^ 0x51;
  LOWORD(v575) = 7 * v582;
  v582 *= 244671;
  LOWORD(v570) = v575 - 960 * ((v582 + 139217799) >> 25);
  LOBYTE(v582) = (*(_BYTE *)(v10 + (unsigned __int16)(v575 - 960 * (v582 >> 25))) >> 4) ^ 5;
  int v583 = 7 * ((v582 - 2 * (v582 & 1) + 81) ^ *(unsigned __int8 *)(v10 + LODWORD(STACK[0x5B8]))) + 3983;
  int v584 = *(unsigned __int8 *)(v10 + (unsigned __int16)(LODWORD(STACK[0x5A8]) + 3983) % 0x3C0u) ^ (16
                                                                                                * (*(unsigned __int8 *)(v10 + (unsigned __int16)(v583 - 960 * ((unsigned __int16)((8739 * v583) >> 16) >> 7))) ^ 0x51)) ^ 0x51;
  LOWORD(v575) = 7 * v584;
  int v585 = *(unsigned __int8 *)(v10
                            + (unsigned __int16)(7 * v584
                                               - 960 * ((unsigned __int16)((244671 * v584) >> 16) >> 9))) >> 4;
  int v586 = 7
  int v587 = *(unsigned __int8 *)(v10 + (unsigned __int16)(LODWORD(STACK[0x5AC]) + 3983) % 0x3C0u) ^ (16
                                                                                                * (*(unsigned __int8 *)(v10 + (unsigned __int16)(v586 - 960 * ((unsigned __int16)((8739 * v586) >> 16) >> 7))) ^ 0x51));
  unsigned int v588 = ((*(unsigned __int8 *)(v10 + (unsigned __int16)(v575 + 3983) % 0x3C0u) ^ 0x51) << 12) ^ ((*(unsigned __int8 *)(v10 + (unsigned __int16)(v570 + 3983)) ^ 0x51) << 8);
  LOWORD(v570) = 7 * (v587 ^ 0x51);
  unsigned int v589 = 244671 * (v587 ^ 0x51);
  LOWORD(v587) = v570 - 960 * ((v589 + 139217799) >> 25);
  int v590 = *(unsigned __int8 *)(v10 + (unsigned __int16)(v570 - 960 * (v589 >> 25))) >> 4;
  int v591 = 7
  LOBYTE(v570) = *(_BYTE *)(v10 + LODWORD(STACK[0x5D0]));
  LOWORD(v591) = *(unsigned __int8 *)(v10 + (unsigned __int16)(LODWORD(STACK[0x5BC]) + 3983) % 0x3C0u) ^ (unsigned __int16)(16 * (*(unsigned __int8 *)(v10 + (unsigned __int16)(v591 - 960 * ((unsigned __int16)((8739 * v591) >> 16) >> 7))) ^ 0x51)) ^ 0x51;
  LOWORD(v532) = (unsigned __int16)(7 * v591 + 3983) % 0x3C0u;
  LOBYTE(v591) = (*(_BYTE *)(v10 + (unsigned __int16)(((v570 & 7 ^ 1) + (v570 & 7 ^ 6)) * v591) % 0x3C0u) >> 4) ^ 5;
  int v592 = 7 * ((v591 - 2 * (v591 & 1) + 81) ^ v570) + 3983;
  int v593 = *(unsigned __int8 *)(v10 + v579) ^ 0x51;
  int v594 = *(unsigned __int8 *)(v10 + (unsigned __int16)(v587 + 3983));
  int v595 = v593 ^ (16
               * (*(unsigned __int8 *)(v10
                                     + (unsigned __int16)(7 * v502
  LODWORD(v502) = v588 ^ v595 ^ ((v594 ^ 0x51) << 16) ^ ((*(unsigned __int8 *)(v10 + (unsigned __int16)v532) ^ 0x51) << 20);
  unsigned int v596 = *(unsigned __int8 *)(v10 + (unsigned __int16)(LODWORD(STACK[0x5C8]) + 3983) % 0x3C0u) ^ (16
                                                                                                * (*(unsigned __int8 *)(v10 + (unsigned __int16)(v592 - 960 * ((unsigned __int16)((8739 * v592) >> 16) >> 7))) ^ 0x51)) ^ 0x51;
  LOWORD(v594) = 7 * v596;
  v596 *= 244671;
  LOWORD(v53_Block_object_dispose((const void *)(v9 - 96), 8) = v594 - 960 * ((v596 + 139217799) >> 25);
  unsigned int v597 = *(unsigned __int8 *)(v10 + (unsigned __int16)(v594 - 960 * (v596 >> 25)));
  int v598 = 7
  int v599 = ((*(unsigned __int8 *)(v10
                              + (unsigned __int16)(7
                                                 * (*(unsigned __int8 *)(v10
                                                                       + (unsigned __int16)(7
                                                                                          * ((HIBYTE(LODWORD(STACK[0x660])) & 0xF0 | (LODWORD(STACK[0x65C]) >> 8)) ^ 0x60)
                                                                                          + 3983)
                                                                       % 0x3C0u) ^ (unsigned __int16)(16 * (*(unsigned __int8 *)(v10 + (unsigned __int16)(v598 - 960 * ((unsigned __int16)((8739 * v598) >> 16) >> 7))) ^ 0x51)) ^ 0x51)
                                                 + 3983)
                              % 0x3C0u) ^ 1) << 28) ^ ((*(unsigned __int8 *)(v10 + (unsigned __int16)(v538 + 3983)) ^ 0x51) << 24);
  unsigned int v600 = v502 ^ 0x1627FC8C ^ (v599 + 371719308 - ((2 * v599) & 0x2C000000));
  unsigned int v601 = 7 * (STACK[0x680] & 0xFFFFFF0F | (16 * (v593 & 0xF))) + 1813;
  int v602 = 7 * (v595 & 0xF0 | (LODWORD(STACK[0x67C]) >> 4)) + 1813;
  unsigned int v603 = 7 * (((v588 ^ v595) >> 4) & 0xF0 | (LODWORD(STACK[0x67C]) >> 8) & 0xF) + 1813;
  int v604 = 7 * (((v588 >> 8) & 0xF0 | ((unsigned __int16)LODWORD(STACK[0x688]) >> 12)) ^ 1) + 1813;
  int v605 = ((*(unsigned __int8 *)(v10
                              + (unsigned __int16)(v604
                                                 - 960 * ((unsigned __int16)((2185 * v604) >> 16) >> 5))) ^ 0x51) << 12) ^ ((*(unsigned __int8 *)(v10 + (unsigned __int16)(v603 - 960 * ((unsigned __int16)((2185 * v603) >> 16) >> 5))) ^ 0x51) << 8);
  unsigned int v606 = ((v502 >> 12) & 0xF0 | HIWORD(LODWORD(STACK[0x688])) & 0xF) ^ 5;
  unsigned __int16 v607 = 7 * ((v606 - 2 * (v606 & 0x34 ^ (v502 >> 12) & 0x10) + 11044) ^ 0x2B24) + 1813;
  LODWORD(v502) = ((WORD1(v502) & 0xF0 | (LODWORD(STACK[0x68C]) >> 20) & 0xF) ^ 9)
  unsigned int v608 = ((*(unsigned __int8 *)(v10 + (unsigned __int16)(7 * (v502 ^ 0xF60) + 1813) % 0x3C0u) ^ 0x51) << 20) ^ ((*(unsigned __int8 *)(v10 + v607 % 0x3C0u) ^ 0x51) << 16);
  HIDWORD(v609) = v600 >> 28;
  LODWORD(v609) = LODWORD(STACK[0x68C]) ^ 0x90000000;
  int v610 = *(unsigned __int8 *)(v10 + (unsigned __int16)(v601 - 960 * ((unsigned __int16)((2185 * v601) >> 16) >> 5)));
  int v611 = v610 ^ (16
               * (*(unsigned __int8 *)(v10
                                     + (unsigned __int16)(v602
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v602) >> 16) >> 5))) ^ 0x51)) ^ 0x51;
  unsigned int v612 = v605 ^ v611;
  unsigned int v613 = v608 ^ v605 ^ v611;
  LODWORD(v502) = v613 ^ ((*(unsigned __int8 *)(v10
                                              + (unsigned __int16)(7
                                                                 * ((HIBYTE(LODWORD(STACK[0x68C])) & 0xF | (16 * ((27969 * (v502 & 0x4F ^ 0x40 | v502 & 0x4F ^ 0x90F)) & HIBYTE(v600)))) ^ 0xB)
                                                                 + 1813)
                                              % 0x3C0u) ^ 0x51) << 24);
  unsigned int v614 = 7
       * ((v502 ^ ((*(unsigned __int8 *)(v10
                                                     + (7 * (v609 >> 28)
                                                                    + 1813
                                                                    - 960
                                                                    * ((4473925
                                                                      * (unint64_t)(7
                                                                                         * (v609 >> 28)
                                                                                         + 1813)) >> 32))) ^ 1) << 28)) >> 28)
       + 3822;
  int v615 = *(unsigned __int8 *)(v10 + (unsigned __int16)(v614 - 960 * ((unsigned __int16)((2185 * v614) >> 16) >> 5)));
  LODWORD(v502) = *(unsigned __int8 *)(v10
                                     + (unsigned __int16)(7 * (BYTE3(v502) & 0xF)
                                                        + 3822
                                                        - 960
                                                        * ((unsigned __int16)((2185
                                                                                           * (7 * (BYTE3(v502) & 0xF)
                                                                                            + 3822)) >> 16) >> 5)));
  LODWORD(STACK[0x718]) = v578 ^ v577;
  unsigned int v616 = LODWORD(STACK[0x710]) ^ (16
                                * (*(unsigned __int8 *)(v10
                                                      + (unsigned __int16)(7 * (v611 >> 4)
                                                                         + 3822
                                                                         - 960
                                                                         * ((unsigned __int16)((2185
                                                                                              * (7
  LODWORD(STACK[0x6D8]) = v616;
  LODWORD(STACK[0x68C]) = LODWORD(STACK[0x70C]) ^ LODWORD(STACK[0x6E4]) ^ 0x1AA3CCA1;
  int v617 = 7 * ((STACK[0x510] & 0xF0 | (LODWORD(STACK[0x650]) >> 4)) ^ 0x40) + 1813;
  int v618 = 7 * (((LODWORD(STACK[0x510]) >> 4) & 0xF0 | (LODWORD(STACK[0x650]) >> 8) & 0xF) ^ 0xA0) + 1813;
  unsigned int v619 = (LODWORD(STACK[0x5D8]) >> 12) ^ 0xBD762;
  int v620 = v619 & 0xF | (16 * ((unsigned __int16)LODWORD(STACK[0x510]) >> 12));
  int v621 = 7 * (((v619 >> (v576 & 4) >> (v576 & 4 ^ 4)) & 0xF | (16 * (HIWORD(LODWORD(STACK[0x510])) & 0xF))) ^ 0x70)
       + 1813;
  int v622 = 7 * ((HIWORD(LODWORD(STACK[0x510])) & 0xF0 | (LODWORD(STACK[0x538]) >> 20) & 0xF) ^ 0x87) + 1813;
  int v623 = 7 * (((LODWORD(STACK[0x510]) >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x538])) & 0xF) ^ 0xAD) + 1813;
  LODWORD(v502) = 7
                * (((((((LODWORD(STACK[0x518]) ^ 1u) << 28) - 360215989 - (LODWORD(STACK[0x518]) >> 1 << 30)) ^ LODWORD(STACK[0x510])) >> 24) & 0xF0 | (LODWORD(STACK[0x538]) >> 28)) ^ 0xB)
                + 1813;
  int v624 = *(unsigned __int8 *)(v10
                            + (unsigned __int16)(v623
                                               - 960 * ((unsigned __int16)((2185 * v623) >> 16) >> 5)));
  int v625 = LODWORD(STACK[0x4FC]) ^ (16
                                * (*(unsigned __int8 *)(v10
                                                      + (unsigned __int16)(v617
                                                                         - 960
                                                                         * ((unsigned __int16)((2185 * v617) >> 16) >> 5))) ^ 0x51)) ^ 0x51;
  unsigned int v626 = v625 ^ ((*(unsigned __int8 *)(v10
                                     + (unsigned __int16)(v618
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v618) >> 16) >> 5))) ^ 0x51) << 8);
  int v627 = v626 ^ ((*(unsigned __int8 *)(v10
                                     + (unsigned __int16)(7 * (v620 ^ 0x80)
                                                        + 1813
                                                        - 960
                                                        * ((unsigned __int16)((2185 * (7 * (v620 ^ 0x80u) + 1813)) >> 16) >> 5))) ^ 0x51) << 12);
  unsigned int v628 = v627 ^ ((*(unsigned __int8 *)(v10
                                     + (unsigned __int16)(v621
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v621) >> 16) >> 5))) ^ 0x51) << 16);
  unsigned int v629 = v628 ^ ((*(unsigned __int8 *)(v10
                                     + (unsigned __int16)(v622
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v622) >> 16) >> 5))) ^ 0x51) << 20);
  unsigned int v630 = (((v624 ^ 0x51) << 24) - ((v624 << 25) & 0x4000000) + 38875217) ^ v629;
  LODWORD(v502) = 7
                * ((v630 ^ ((*(unsigned __int8 *)(v10
                                                + (unsigned __int16)(v502
                                                                   - 960
  int v631 = 7 * (HIBYTE(v630) & 0xF ^ 2) + 3822;
  LODWORD(v502) = ((((((*(unsigned __int8 *)(v10
                                           + (unsigned __int16)(v631
                                                              - 960
                                                              * ((unsigned __int16)((2185 * v631) >> 16) >> 5))) ^ 0x51) << 8) ^ ((*(unsigned __int8 *)(v10 + (unsigned __int16)(v502 - 960 * ((unsigned __int16)((2185 * v502) >> 16) >> 5))) ^ 0x51) << 12) | *(unsigned __int8 *)(v10 + (unsigned __int16)(7 * (BYTE2(v628) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (HIWORD(v628) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x51) << 8) ^ ((*(unsigned __int8 *)(v10 + (unsigned __int16)(7 * ((v629 >> 20) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((v629 >> 20) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x51) << 12) | *(unsigned __int8 *)(v10 + (unsigned __int16)(7 * ((v626 >> 8) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((v626 >> 8) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x51) << 8) ^ ((*(unsigned __int8 *)(v10 + (unsigned __int16)(7 * ((unsigned __int16)v627 >> 12) + 2862 - 960 * ((unsigned __int16)((2185 * (7 * ((unsigned __int16)v627 >> 12) + 2862)) >> 16) >> 5))) ^ 0x51) << 12) | LODWORD(STACK[0x50C]) ^ 0x51;
  LODWORD(STACK[0x6E8]) = LODWORD(STACK[0x6F4]) ^ (16
                                                 * (*(unsigned __int8 *)(v10
                                                                       + (unsigned __int16)(7
                                                                                          * (v625 >> 4)
                                                                                          + 3822
                                                                                          - 960
                                                                                          * ((unsigned __int16)((2185 * (7 * (v625 >> 4) + 3822)) >> 16) >> 5))) ^ 0x51)) ^ 0x6208AAA3 ^ v502;
  LODWORD(v502) = *(unsigned __int8 *)(v10 + (unsigned __int16)(LODWORD(STACK[0x4C0]) + 3983) % 0x3C0u) ^ 0x51;
  LODWORD(v502) = 7 * ((v502 + 1253351297 - ((2 * v502) & 0xFFFFFF03)) ^ v447);
  int v632 = *(unsigned __int8 *)(v10 + v502 % 0x3C0) >> 4;
  int v633 = 7
  int v634 = (LODWORD(STACK[0x4C4]) ^ LODWORD(STACK[0x4C8])) & 0xF0 | (LODWORD(STACK[0x4CC]) >> 4);
  unsigned int v635 = ((2 * v634) & 0xFFFFFF9F) + (v634 ^ 0xFFBFFBCF);
  int v636 = *(unsigned __int8 *)(v523
                            + (((v635 + 4195946) & 0x233 | (2143287701 - v635) & 0x6F2D3433) ^ ((v616 & 0x6F2D3634 ^ 0xE042020)
                                                                                              + (v616 & 0x6F2D3634 ^ 0x61291614)))
                            * (v635 + 4195946)
                            % 0x3C0) ^ (16
                                      * (*(unsigned __int8 *)(v523
                                                            + (unsigned __int16)(v633
                                                                               - 960
                                                                               * ((unsigned __int16)((8739 * v633) >> 16) >> 7))) ^ 0x51)) ^ 0x51;
  LOWORD(v629) = (unsigned __int16)(7 * v636 + 3983) % 0x3C0u;
  LOBYTE(v636) = (*(_BYTE *)(v10
                           + (unsigned __int16)(7 * v636
                                              - 960 * ((unsigned __int16)((244671 * v636) >> 16) >> 9))) >> 4) ^ 5;
  int v638 = *(unsigned __int8 *)(v523 + (unsigned __int16)(LODWORD(STACK[0x4D0]) + 3983) % 0x3C0u) ^ (16
                                                                                                 * (*(unsigned __int8 *)(v523 + (unsigned __int16)(v637 - 960 * ((unsigned __int16)((8739 * v637) >> 16) >> 7))) ^ 0x51)) ^ 0x51;
  LOWORD(v637) = (unsigned __int16)(7 * v638 + 3983) % 0x3C0u;
  unsigned int v639 = (-1167387660
        - (((LODWORD(STACK[0x4D8]) >> 12) ^ 0xF430D31D) & 0x4000C02 | 0xBA6B13F4)
        + (((LODWORD(STACK[0x4D8]) >> 12) ^ 0xF430D31D) & 0x902B0294 | 0x4594EC0B)) ^ ((LODWORD(STACK[0x4D8]) >> 12) ^ 0xF430D31D) & 0x942B0E99;
  int v640 = 7
       * ((*(_BYTE *)(v523 + LODWORD(STACK[0x4DC])) ^ (*(_BYTE *)(v523
  unsigned int v641 = ((LODWORD(STACK[0x4E8]) >> 7) & 0x1A0) + 1091330081 + ((LODWORD(STACK[0x4E8]) >> 8) & 0xF0 ^ 0xBEF39FDF);
  unsigned int v642 = (v641 - (v641 | v639 ^ 0x4594EC00)) ^ ((v639 ^ 0xBA6B13FF) + 1);
  unsigned int v643 = 7 * ((v639 ^ 0x10AAB325 ^ (v642 - ((2 * v642) & 0xAA7CBE4A) + 1430150949)) + v641);
  unsigned int v644 = *(unsigned __int8 *)(v523 + (v643 + 3983) % 0x3C0) ^ (16
                                                             * (*(unsigned __int8 *)(v523
                                                                                   + (unsigned __int16)(v640 - 960 * ((unsigned __int16)((8739 * v640) >> 16) >> 7))) ^ 0x51)) ^ 0x51;
  LOWORD(v641) = 7 * v644;
  v644 *= 244671;
  int v645 = *(unsigned __int8 *)(v10 + (unsigned __int16)(v641 - 960 * (v644 >> 25))) >> 4;
  unsigned int v646 = ((v645 ^ 5) - 2 * ((v645 ^ 5) & 0xFFFFFFF9 ^ v645 & 8) + 81) ^ *(unsigned __int8 *)(v10 + v643 % 0x3C0);
  int v647 = ((2 * v646) & 0x72) + (v646 ^ 0x239);
  LOWORD(v645) = v641 - 960 * ((v644 + 139217799) >> 25);
  unsigned int v648 = *(unsigned __int8 *)(v523 + LODWORD(STACK[0x4F0])) ^ (16
                                                             * (*(unsigned __int8 *)(v523
                                                                                   + (unsigned __int16)(7 * v647 - 960 * ((unsigned __int16)((61173 * v647) >> 16) >> 7))) ^ 0x51)) ^ 0x51;
  LOWORD(v647) = 7 * v648;
  v648 *= 244671;
  LOWORD(v641) = v647 - 960 * ((v648 + 139217799) >> 25);
  LOBYTE(v64_Block_object_dispose((const void *)(v9 - 96), 8) = (*(_BYTE *)(v10 + (unsigned __int16)(v647 - 960 * (v648 >> 25))) >> 4) ^ 5;
  int v649 = 7 * ((v648 - 2 * (v648 & 1) + 81) ^ *(unsigned __int8 *)(v10 + LODWORD(STACK[0x4EC]))) + 3023;
  unsigned int v650 = *(unsigned __int8 *)(v523 + (unsigned __int16)(LODWORD(STACK[0x40C]) + 3983) % 0x3C0u) ^ (16
                                                                                                 * (*(unsigned __int8 *)(v523 + (unsigned __int16)(v649 - 960 * ((unsigned __int16)((8739 * v649) >> 16) >> 7))) ^ 0x51)) ^ 0x51;
  LOWORD(v647) = 7 * v650;
  v650 *= 244671;
  LOWORD(v60_Block_object_dispose((const void *)(v9 - 96), 8) = v647 - 960 * ((v650 + 139217799) >> 25);
  LOWORD(v647) = v647 - 960 * (v650 >> 25);
  unsigned int v651 = ((*(unsigned __int8 *)(v10 + (unsigned __int16)(v608 + 3983)) ^ 0x51) << 20) ^ ((*(unsigned __int8 *)(v10 + (unsigned __int16)(v641 + 3983)) ^ 0x51) << 16);
  LOBYTE(v647) = (*(_BYTE *)(v10 + (unsigned __int16)v647) >> 4) ^ 5;
  int v652 = 7 * ((v647 - 2 * (v647 & 1) + 81) ^ *(unsigned __int8 *)(v10 + LODWORD(STACK[0x3F4]))) + 3983;
  int v653 = *(unsigned __int8 *)(v523 + (unsigned __int16)(LODWORD(STACK[0x41C]) + 3983) % 0x3C0u) ^ (16
                                                                                                 * (*(unsigned __int8 *)(v523 + (unsigned __int16)(v652 - 960 * ((unsigned __int16)((8739 * v652) >> 16) >> 7))) ^ 0x51)) ^ 0x51;
  LOWORD(v641) = 7 * v653;
  LOBYTE(v653) = (*(_BYTE *)(v10
                           + (unsigned __int16)(7 * v653
                                              - 960 * ((unsigned __int16)((244671 * v653) >> 16) >> 9))) >> 4) ^ 5;
  int v654 = 7 * ((v653 - 2 * (v653 & 1) + 81) ^ *(unsigned __int8 *)(v10 + LODWORD(STACK[0x3F8]))) + 3983;
  int v655 = 7 * ((HIBYTE(LODWORD(STACK[0x4E4])) & 0xF0 | (LODWORD(STACK[0x4E0]) >> 28)) ^ 0x16) + 3983;
  unsigned int v656 = ((*(unsigned __int8 *)(v523
                              + (unsigned __int16)(7
                                                 * (*(unsigned __int8 *)(v523
                                                                       + (unsigned __int16)(v655
                                                                                          - 960
                                                                                          * ((unsigned __int16)((8739 * v655) >> 16) >> 7))) ^ (unsigned __int16)(16 * (*(unsigned __int8 *)(v523 + (unsigned __int16)(v654 - 960 * ((unsigned __int16)((8739 * v654) >> 16) >> 7))) ^ 0x51)) ^ 0x51)
                                                 + 3983)
                              % 0x3C0u) ^ 1) << 28) ^ ((*(unsigned __int8 *)(v523
                                                                           + (unsigned __int16)(v641 + 3983) % 0x3C0u) ^ 0x51) << 24);
  int v657 = 16 * (*(unsigned __int8 *)(v10 + (unsigned __int16)v629) ^ 0x51);
  LOBYTE(v502) = *(_BYTE *)(v10 + ((int)v502 + 3983) % 0x3C0u) ^ 0x51;
  int v658 = (*(unsigned __int8 *)(v10 + (unsigned __int16)v637) ^ 0x51) << 8;
  int v659 = v658 ^ ((*(unsigned __int8 *)(v10 + (unsigned __int16)(v645 + 3983)) ^ 0x51) << 12);
  unsigned int v660 = v658 ^ v657;
  LOBYTE(v657) = v657 ^ v502;
  LODWORD(v502) = 7 * (STACK[0x4F4] & 0xFFFFFF0F | (16 * (v502 & 0xF))) + 1813;
  unsigned int v662 = v659 ^ v651;
  int v663 = 7 * ((v660 >> 4) & 0xF0 | (LODWORD(STACK[0x4CC]) >> 8) & 0xF) + 1813;
  unsigned int v664 = ((v656 ^ v662) >> 12) - (((v656 ^ v662) >> 11) & 0x2D59E) - 944674085;
  int v665 = 7
       * ((((-80 - 16 * (_BYTE)v664) & 0xF0 | ((unsigned __int16)LODWORD(STACK[0x4D8]) >> 12)) ^ 6)
        + (v664 & 3)
        + (v664 & 3 ^ 3))
       + 1792;
  int v666 = *(unsigned __int8 *)(v10
                            + (unsigned __int16)(v663
                                               - 960 * ((unsigned __int16)((2185 * v663) >> 16) >> 5)));
  int v667 = ((*(unsigned __int8 *)(v10
                              + (unsigned __int16)(v665
                                                 - 960 * ((unsigned __int16)((8739 * v665) >> 16) >> 7))) ^ 0x51) << 12) ^ ((v666 ^ 0x51) << 8);
  int v668 = (v666 & 7 ^ 1 | v666 & 7 ^ 6) * ((((v662 >> 12) & 0xF0 | HIWORD(LODWORD(STACK[0x4D8])) & 0xF) ^ 1) + 259);
  int v669 = 7 * (HIWORD(v651) & 0xF0 | (LODWORD(STACK[0x4E0]) >> 20) & 0xF) + 1813;
  unsigned int v670 = 7 * ((((v656 ^ v662) >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x4E0])) & 0xF) ^ 4) + 1813;
  int v671 = 7 * ((HIBYTE(v656) & 0xF0 | (LODWORD(STACK[0x4E0]) >> 28)) ^ 6) + 1813;
  LODWORD(v502) = *(unsigned __int8 *)(v10
                                     + (unsigned __int16)(v502
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v502) >> 16) >> 5)));
  unsigned int v672 = v502 ^ (16
               * (*(unsigned __int8 *)(v10
                                     + (unsigned __int16)(v661
                                                        - 960
                                                        * ((unsigned __int16)((8739 * v661) >> 16) >> 7))) ^ 0x51)) ^ 0x51;
  unsigned int v673 = v667 ^ v672 ^ ((*(unsigned __int8 *)(v10
                                            + (unsigned __int16)(v668
                                                               - 960
                                                               * ((unsigned __int16)((8739 * v668) >> 16) >> 7))) ^ 0x51) << 16);
  unsigned int v674 = v673 ^ ((*(unsigned __int8 *)(v10
                                     + (unsigned __int16)(v669
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v669) >> 16) >> 5))) ^ 0x51) << 20);
  unsigned int v675 = ((*(unsigned __int8 *)(v523
                              + (unsigned __int16)(v671
                                                 - 960 * ((unsigned __int16)((2185 * v671) >> 16) >> 5))) ^ 1) << 28) ^ ((*(unsigned __int8 *)(v523 + (unsigned __int16)(v670 - 960 * ((unsigned __int16)((2185 * v670) >> 16) >> 5))) ^ 0x51) << 24) ^ v674;
  unsigned int v676 = 7 * (((v667 ^ v672) >> 8) & 0xF) + 3822;
  int v677 = ((((((*(unsigned __int8 *)(v523
                                  + (unsigned __int16)(7 * (HIBYTE(v675) & 0xF)
                                                     + 3822
                                                     - 960
                                                     * ((unsigned __int16)((2185
                                                                                        * (7 * (HIBYTE(v675) & 0xF)
                                                                                         + 3822)) >> 16) >> 5))) ^ 0x51) << 8) ^ ((*(unsigned __int8 *)(v523 + (unsigned __int16)(7 * (v675 >> 28) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (v675 >> 28) + 3822)) >> 16) >> 5))) ^ 0x51) << 12) | *(unsigned __int8 *)(v523 + (unsigned __int16)(7 * (BYTE2(v673) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (HIWORD(v673) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x51) << 8) ^ ((*(unsigned __int8 *)(v523 + (unsigned __int16)(7 * ((v674 >> 20) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((v674 >> 20) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x51) << 12) | *(unsigned __int8 *)(v523 + (unsigned __int16)(v676 - 960 * ((unsigned __int16)((2185 * v676) >> 16) >> 5))) ^ 0x51) << 8) ^ ((*(unsigned __int8 *)(v523 + (unsigned __int16)(7 * ((unsigned __int16)v667 >> 12) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((unsigned __int16)v667 >> 12) + 3822)) >> 16) >> 5))) ^ 0x51) << 12);
  int v678 = LODWORD(STACK[0x6A4]) ^ LODWORD(STACK[0x4BC]);
  unsigned int v679 = LODWORD(STACK[0x4BC]) ^ 0xC4F0BD9A ^ LODWORD(STACK[0x520]);
  LODWORD(v502) = *(unsigned __int8 *)(v10
                                     + (unsigned __int16)(7 * (v502 & 0xF ^ 1)
                                                        + 3822
                                                        - 960
                                                        * ((unsigned __int16)((2185 * (7 * (v502 & 0xF ^ 1) + 3822)) >> 16) >> 5))) ^ 0x51;
  int v680 = (v677 | v502) ^ (16
                        * (*(unsigned __int8 *)(v10
                                              + (unsigned __int16)(7 * (v672 >> 4)
                                                                 + 3822
                                                                 - 960
                                                                 * ((unsigned __int16)((2185
                                                                                      * (7
  int v681 = v680 - 2 * (v680 & 0x407E557D ^ v502 & 1);
  LODWORD(v502) = *(unsigned __int8 *)(v10 + (unsigned __int16)(LODWORD(STACK[0x44C]) + 3983) % 0x3C0u) ^ 0x51;
  LODWORD(v502) = 7 * ((v502 + 1253351297 - ((2 * v502) & 0xFFFFFF03)) ^ v447);
  unsigned int v682 = *(unsigned __int8 *)(v10 + v502 % 0x3C0);
  unsigned int v683 = ((int)v502 + 3983) % 0x3C0u;
  LODWORD(v502) = 7
  LODWORD(v502) = *(unsigned __int8 *)(v10 + (unsigned __int16)(LODWORD(STACK[0x454]) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v10 + (unsigned __int16)(v502 - 960 * ((unsigned __int16)((8739 * v502) >> 16) >> 7))) ^ 0x51)) ^ 0x51;
  LOWORD(v674) = 7 * v502;
  LODWORD(v502) = 244671 * v502;
  unsigned int v684 = *(unsigned __int8 *)(v10 + (unsigned __int16)(v674 - 960 * (v502 >> 25)));
  LOWORD(v502) = v674 - 960 * ((v502 + 139217799) >> 25);
  int v685 = 7
  int v686 = *(unsigned __int8 *)(v10 + (unsigned __int16)(LODWORD(STACK[0x45C]) + 3983) % 0x3C0u) ^ (16
                                                                                                * (*(unsigned __int8 *)(v10 + (unsigned __int16)(v685 - 960 * ((unsigned __int16)((8739 * v685) >> 16) >> 7))) ^ 0x51)) ^ 0x51;
  LOWORD(v682) = 7 * v686;
  int v687 = *(unsigned __int8 *)(v10
                            + (unsigned __int16)(7 * v686
                                               - 960 * ((unsigned __int16)((244671 * v686) >> 16) >> 9))) >> 4;
  int v688 = 7
  int v689 = *(unsigned __int8 *)(v10 + (unsigned __int16)(v682 + 3983) % 0x3C0u);
  int v690 = *(unsigned __int8 *)(v10 + (unsigned __int16)(LODWORD(STACK[0x464]) + 3983) % 0x3C0u) ^ (16
                                                                                                * (*(unsigned __int8 *)(v10 + (unsigned __int16)(v688 - 960 * ((unsigned __int16)((8739 * v688) >> 16) >> 7))) ^ 0x51)) ^ 0x51;
  LOWORD(v684) = (v690 + 569) * ((v689 & 7 ^ 1) + (v689 & 7 ^ 6));
  int v691 = *(unsigned __int8 *)(v10
                            + (unsigned __int16)(7 * v690
                                               - 960 * ((unsigned __int16)((244671 * v690) >> 16) >> 9))) >> 4;
  int v692 = 7
  unsigned int v693 = ((*(unsigned __int8 *)(v10 + (unsigned __int16)v684 % 0x3C0u) ^ 0x51) << 12) ^ ((v689 ^ 0x51) << 8);
  int v694 = *(unsigned __int8 *)(v10 + (unsigned __int16)(LODWORD(STACK[0x46C]) + 3983) % 0x3C0u) ^ (16
                                                                                                * (*(unsigned __int8 *)(v10 + (unsigned __int16)(v692 - 960 * ((unsigned __int16)((8739 * v692) >> 16) >> 7))) ^ 0x51)) ^ 0x51;
  int v695 = *(unsigned __int8 *)(v10
                            + (unsigned __int16)(7 * v694
                                               - 960 * ((unsigned __int16)((244671 * v694) >> 16) >> 9))) >> 4;
  int v696 = 7
  unsigned int v697 = *(unsigned __int8 *)(v10 + (unsigned __int16)(LODWORD(STACK[0x470]) + 3983) % 0x3C0u) ^ (16
                                                                                                * (*(unsigned __int8 *)(v10 + (unsigned __int16)(v696 - 960 * ((unsigned __int16)((8739 * v696) >> 16) >> 7))) ^ 0x51)) ^ 0x51;
  LOWORD(v684) = 7 * v697;
  v697 *= 244671;
  LOWORD(v655) = v684 - 960 * ((v697 + 139217799) >> 25);
  int v698 = (*(unsigned __int8 *)(v10 + (unsigned __int16)(v684 - 960 * (v697 >> 25))) >> 4) ^ 5;
  int v700 = *(unsigned __int8 *)(v10
                            + (unsigned __int16)(v699
                                               - 960 * ((unsigned __int16)((8739 * v699) >> 16) >> 7))) ^ 0x51;
  int v701 = 16 * v700 + 1737096299 - ((32 * v700) & 0x18C0);
  int v702 = *(unsigned __int8 *)(v10 + (unsigned __int16)(LODWORD(STACK[0x474]) + 3983) % 0x3C0u) ^ 0x51;
  int v703 = v702 + 369374605 - ((2 * v702) & 0x11A);
  unsigned int v704 = v701 ^ v703 ^ 0x8E723619;
  v703 ^= 0x1604358Du;
  unsigned int v705 = (v704 + v703 + 1) ^ ((v701 ^ 0x98760394) + 1);
  unsigned int v706 = 7 * (((v705 + 1737096299 - ((2 * v705) & 0xCF13F8D6)) ^ v701) + v703);
  unsigned int v707 = (v706 + 3983) % 0x3C0;
  LOBYTE(v706) = *(_BYTE *)(v10 + LODWORD(STACK[0x468])) ^ (*(_BYTE *)(v10 + v706 % 0x3C0) >> 4);
  LOWORD(v705) = 7 * (v706 ^ 0x54)
               + 3983
               - 960 * ((unsigned __int16)((8739 * (7 * (v706 ^ 0x54u) + 3983)) >> 16) >> 7);
  int v708 = (v706 & 7 ^ 4 | v706 & 7 ^ 3)
       * (((HIBYTE(LODWORD(STACK[0x4B0])) & 0xF0 | (LODWORD(STACK[0x4AC]) >> 28)) ^ 0x33) + 569);
  int v709 = ((*(unsigned __int8 *)(v10
                              + (unsigned __int16)(7
                                                 * (*(unsigned __int8 *)(v10
                                                                       + (unsigned __int16)(v708
                                                                                          - 960
                                                                                          * ((unsigned __int16)((8739 * v708) >> 16) >> 7))) ^ (unsigned __int16)(16 * (*(unsigned __int8 *)(v10 + (unsigned __int16)v705) ^ 0x51)) ^ 0x51)
                                                 + 3983)
                              % 0x3C0u) ^ 1) << 28) ^ ((*(unsigned __int8 *)(v10 + v707) ^ 0x51) << 24);
  LODWORD(v502) = 16 * (*(unsigned __int8 *)(v10 + (unsigned __int16)(v502 + 3983)) ^ 0x51);
  int v710 = *(unsigned __int8 *)(v10 + (unsigned __int16)(v655 + 3983)) ^ 0x51;
  unsigned int v711 = v693 ^ v502;
  unsigned int v712 = v693 ^ v502 ^ ((*(unsigned __int8 *)(v10
                                            + (unsigned __int16)(7 * v694
  unsigned int v713 = v712 ^ (v710 << 20);
  unsigned int v714 = v713 ^ 0x5FA87F9B ^ (v709 + 1604878235 - ((2 * v709) & 0xBE000000));
  LOBYTE(v683) = *(_BYTE *)(v10 + v683) ^ 0x51;
  LOBYTE(v502) = v502 ^ v683;
  unsigned int v715 = 7 * (STACK[0x654] & 0xFFFFFF0F | (16 * (v683 & 0xF))) + 1813;
  LODWORD(v502) = 7 * (v502 & 0xF0 | (LODWORD(STACK[0x4B8]) >> 4)) + 1813;
  unsigned __int16 v716 = v502 - 960 * ((unsigned __int16)((2185 * v502) >> 16) >> 5);
  LODWORD(v502) = *(unsigned __int8 *)(v10
                                     + (unsigned __int16)(v715 - 960 * ((unsigned __int16)((2185 * v715) >> 16) >> 5)));
  unsigned int v717 = 7 * ((((v711 >> 8) & 0xF) << ((v502 & 4 ^ 4) + (v502 & 4))) ^ (LODWORD(STACK[0x4B8]) >> 8) & 0xF) + 1813;
  int v718 = 7 * (((v693 >> 8) & 0xF0 | ((unsigned __int16)LODWORD(STACK[0x4B4]) >> 12)) ^ 8) + 1813;
  int v719 = 7 * ((v712 >> 12) & 0xF0 | HIWORD(LODWORD(STACK[0x4B4])) & 0xF) + 1813;
  int v720 = (v714 >> 28) - ((v714 >> 27) & 8);
  int v721 = 7 * ((HIWORD(v713) & 0xF0 | (LODWORD(STACK[0x4AC]) >> 20) & 0xF) ^ 2) + 1813;
  int v722 = *(unsigned __int8 *)(v10
                            + (unsigned __int16)(v721
                                               - 960 * ((unsigned __int16)((2185 * v721) >> 16) >> 5))) ^ 0x51;
  int v723 = (v722 << 20) - 1004179420 - ((v722 << 21) & 0x8400000);
  unsigned int v724 = HIBYTE(LODWORD(STACK[0x4AC])) ^ 0x35;
  unsigned int v725 = 7
       * ((v724 & 0xF | (16 * (HIBYTE(v714) & 0xF)))
        + (((v723 & 0x7C00000 ^ 0x4000000) + (v723 & 0x7C00000 ^ 0xB3CABD6A)) ^ 0xB7CABC69));
  LOWORD(v724) = (unsigned __int16)(7 * ((((v724 >> 4) | (16 * v720)) - 28096) ^ 0x9240) + 1813) % 0x3C0u;
  int v726 = v502 ^ (16 * (*(unsigned __int8 *)(v10 + v716) ^ 0x51)) ^ 0x51;
  unsigned int v727 = v726 ^ ((*(unsigned __int8 *)(v10 + v717 % 0x3C0) ^ 0x51) << 8);
  int v728 = v727 ^ ((*(unsigned __int8 *)(v10
                                     + (unsigned __int16)(v718
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v718) >> 16) >> 5))) ^ 0x51) << 12);
  unsigned int v729 = v728 ^ ((*(unsigned __int8 *)(v10
                                     + (unsigned __int16)(v719
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v719) >> 16) >> 5))) ^ 0x51) << 16);
  unsigned int v730 = v729 ^ ((*(unsigned __int8 *)(v10 + v725 % 0x3C0) ^ 0x51) << 24) ^ ((*(unsigned __int8 *)(v10
                                                                                                 + (unsigned __int16)v724) ^ 1) << 28);
  unsigned int v731 = (v730 - 1004179420 - ((2 * v730) & 0x884AE048)) ^ v723;
  int v732 = ((((((*(unsigned __int8 *)(v10
                                  + (unsigned __int16)(7 * (HIBYTE(v731) & 0xF)
                                                     + 3822
                                                     - 960
                                                     * ((unsigned __int16)((2185
                                                                                        * (7 * (HIBYTE(v731) & 0xF)
                                                                                         + 3822)) >> 16) >> 5))) ^ 0x51) << 8) ^ ((*(unsigned __int8 *)(v10 + (unsigned __int16)(7 * (v730 >> 28) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (v730 >> 28) + 3822)) >> 16) >> 5))) ^ 0x51) << 12) | *(unsigned __int8 *)(v10 + (unsigned __int16)(7 * (BYTE2(v729) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (HIWORD(v729) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x51) << 8) ^ ((*(unsigned __int8 *)(v10 + (unsigned __int16)(7 * ((v731 >> 20) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((v731 >> 20) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x51) << 12) | *(unsigned __int8 *)(v10 + (unsigned __int16)(7 * ((v727 >> 8) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((v727 >> 8) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x51) << 8) ^ ((*(unsigned __int8 *)(v10 + (unsigned __int16)(7 * ((unsigned __int16)v728 >> 12) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((unsigned __int16)v728 >> 12) + 3822)) >> 16) >> 5))) ^ 0x51) << 12);
  LOWORD(v730) = 7 * (v502 & 0xF ^ 1)
               + 3822
               - 960 * ((unsigned __int16)((2185 * (7 * (v502 & 0xF ^ 1) + 3822)) >> 16) >> 5);
  LODWORD(v502) = LODWORD(STACK[0x498]) + LODWORD(STACK[0x4A8]);
  unsigned int v733 = LODWORD(STACK[0x488]) ^ 0xFB6C1D62 ^ (16
                                             * (*(unsigned __int8 *)(v10
                                                                   + (unsigned __int16)(7 * (v726 >> 4)
                                                                                      + 3822
                                                                                      - 960
                                                                                      * ((unsigned __int16)((2185 * (7 * (v726 >> 4) + 3822)) >> 16) >> 5))) ^ 0x51)) ^ (v732 | *(unsigned __int8 *)(v10 + (unsigned __int16)v730) ^ 0x51);
  int v734 = LODWORD(STACK[0x500]) + 1341418799 + LODWORD(STACK[0x49C]);
  int v735 = LODWORD(STACK[0x4F8]) - 679995877 + LODWORD(STACK[0x480]);
  unsigned int v736 = 7 * (STACK[0x478] & 0xFFFFFF0F | (16 * (STACK[0x424] & 0xF))) + 1813;
  int v737 = 7 * (((LODWORD(STACK[0x438]) >> 12) & 0xF0 | HIWORD(LODWORD(STACK[0x428])) & 0xF) ^ 3) + 1813;
  int v738 = 7 * ((HIWORD(LODWORD(STACK[0x404])) & 0xF0 | (v412 >> 20) & 0xF) ^ 0xE) + 1813;
  int v739 = 7 * (((LODWORD(STACK[0x408]) >> 20) & 0xF0 | HIBYTE(v412) & 0xF) ^ 8) + 1813;
  unsigned int v740 = ((*(unsigned __int8 *)(v523
                              + (unsigned __int16)(v738
                                                 - 960 * ((unsigned __int16)((2185 * v738) >> 16) >> 5))) ^ 0x51) << 20) ^ ((*(unsigned __int8 *)(v523 + (unsigned __int16)(v737 - 960 * ((unsigned __int16)((2185 * v737) >> 16) >> 5))) ^ 0x51) << 16);
  int v741 = 7 * ((HIBYTE(LODWORD(STACK[0x420])) & 0xF0 | (v412 >> 28)) ^ 0xD) + 1813;
  int v742 = *(unsigned __int8 *)(v10 + (unsigned __int16)(v736 - 960 * ((unsigned __int16)((2185 * v736) >> 16) >> 5)));
  int v743 = v742 ^ (16 * (*(unsigned __int8 *)(v10 + (unsigned __int16)STACK[0x410]) ^ 0x51)) ^ 0x51;
  unsigned int v744 = LODWORD(STACK[0x3F0]) ^ v743;
  unsigned int v745 = v740 ^ v744 ^ ((*(unsigned __int8 *)(v10
                                            + (unsigned __int16)(v739
                                                               - 960
                                                               * ((unsigned __int16)((2185 * v739) >> 16) >> 5))) ^ 0x51) << 24);
  unsigned int v746 = 7
       * ((v745 ^ ((*(unsigned __int8 *)(v10
                                       + (unsigned __int16)(v741
                                                          - 960
  int v747 = ((*(unsigned __int8 *)(v523
                              + (unsigned __int16)(7 * (HIBYTE(v745) & 0xF)
                                                 + 3822
                                                 - 960
                                                 * ((unsigned __int16)((2185
                                                                                    * (7 * (HIBYTE(v745) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x51) << 8) ^ ((*(unsigned __int8 *)(v523 + (unsigned __int16)(v746 - 960 * ((unsigned __int16)((2185 * v746) >> 16) >> 5))) ^ 0x51) << 12) | *(unsigned __int8 *)(v523 + (unsigned __int16)(7 * (((v740 ^ v744) >> 16) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (((v740 ^ v744) >> 16) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x51;
  LOWORD(v745) = 7 * (v743 >> 4)
               + 3822
               - 960 * ((unsigned __int16)((2185 * (7 * (v743 >> 4) + 3822)) >> 16) >> 5);
  int v748 = v734 ^ LODWORD(STACK[0x4A4]);
  int v749 = v748 ^ 0x72B75167 ^ LODWORD(STACK[0x4A0]);
  int v750 = (((v747 << 8) ^ ((*(unsigned __int8 *)(v523
                                              + (unsigned __int16)(7 * ((v740 >> 20) & 0xF)
                                                                 + 3822
                                                                 - 960
                                                                 * ((unsigned __int16)((2185
                                                                                      * (7 * ((v740 >> 20) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x51) << 12) | *(unsigned __int8 *)(v523 + (unsigned __int16)(7 * ((v744 >> 8) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((v744 >> 8) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x51) << 8) ^ ((*(unsigned __int8 *)(v523 + LODWORD(STACK[0x3EC])) ^ 0x51) << 12) | *(unsigned __int8 *)(v523 + (unsigned __int16)(7 * (v742 & 0xF ^ 1) + 2862 - 960 * ((unsigned __int16)((2185 * (7 * (v742 & 0xF ^ 1u) + 2862)) >> 16) >> 5))) ^ 0x51;
  int v751 = v735 ^ LODWORD(STACK[0x658]);
  unsigned int v752 = v751 ^ 0xFB6C1D62 ^ (16 * (*(unsigned __int8 *)(v10 + (unsigned __int16)v745) ^ 0x51)) ^ v750;
  unsigned int v753 = LODWORD(STACK[0x6F4]) ^ 0xEC94D1DA ^ (v681 - 1065462404);
  unsigned int v754 = LODWORD(STACK[0x48C])
       + LODWORD(STACK[0x490])
       - ((2 * (LODWORD(STACK[0x48C]) + LODWORD(STACK[0x490])) + 1298107182) & 0xA4FCAAD0)
       - 114418945;
  int v755 = (679995877 - LODWORD(STACK[0x4F8])) ^ 0x32A81CB3 ^ v754;
  unsigned int v756 = ((2 * v754) & 0x87969D68 ^ 0x84948840) + (v754 ^ 0x91B51BDC);
  int v757 = (-1341418799 - LODWORD(STACK[0x500])) ^ 0xCB0F6007 ^ (v502 + 692263636);
  int v758 = (v734 + 2022316030) ^ (v502 + 1829661064);
  unsigned int v759 = (v756 ^ (v735 + 2022316030) ^ 0x7BB2DFDF) - 689980482 + ((2 * (v756 ^ (v735 + 2022316030))) & 0xF765BFBE);
  LODWORD(STACK[0x710]) = LODWORD(STACK[0x6A8]) ^ 0x402C866F;
  LODWORD(STACK[0x6F0]) = LODWORD(STACK[0x728]) ^ 0x51;
  LODWORD(STACK[0x640]) = LODWORD(STACK[0x6D8]) ^ 0x472E0615;
  unsigned int v760 = LODWORD(STACK[0x430]) ^ 0xB5D5DF81;
  int v761 = v751 - 1625741522;
  int v762 = v748 + 1635037802;
  int v763 = v502 - 773265485;
  LODWORD(v502) = v758 - 149305208;
  unsigned int v764 = v756 + 1833757912;
  unsigned int v765 = -1833757912 - v756;
  LODWORD(STACK[0x728]) = v678 ^ 0x1BA25902;
  LODWORD(STACK[0x6F4]) = v678 ^ 0xCDBD0030;
  LODWORD(STACK[0x6D8]) = LODWORD(STACK[0x574]) - 1867744091;
  LODWORD(STACK[0x6E4]) = STACK[0x584];
  int v766 = STACK[0x6D4];
  HIDWORD(v609) = v679 ^ 0x345;
  LODWORD(v609) = v679 ^ 0xAA5BD800;
  unsigned int v767 = ((v679 ^ 0xAA5BDB45) >> (((7 - v502) ^ v502) & 6))
       + (((LODWORD(STACK[0x6D4]) ^ 0xCA8) + 335541423) ^ (v679 << 26));
  LODWORD(STACK[0x70C]) = v733;
  LODWORD(STACK[0x5C0]) = v733 ^ 0xFB6C1D62;
  LODWORD(STACK[0x6B8]) = v679;
  int v768 = (v609 >> 11) ^ __ROR4__(v679, 25) ^ v767;
  HIDWORD(v609) = v753 ^ 0x562;
  LODWORD(v609) = v753 ^ 0xFB6C1800;
  int v769 = v609 >> 11;
  HIDWORD(v609) = v753 ^ 0x22222222;
  LODWORD(v609) = v753 ^ 0xFB6C1D40;
  LODWORD(STACK[0x6C0]) = v760;
  v760 ^= 0xAA5BDB45;
  LODWORD(STACK[0x6D0]) = v753;
  int v770 = (v609 >> 6) ^ v769 ^ (((v753 << 7) ^ 0xB60EB100)
  LODWORD(STACK[0x6A4]) = v752 ^ 0xFB6C1D62;
  unsigned int v771 = (v753 ^ 0xFB6C1D62) & (v749 ^ 0xAA5BDB45) ^ (v752 ^ 0xFB6C1D62) & (v679 ^ 0xAA5BDB45) ^ (((v753 ^ 0xFB6C1D62) & v760)
                                                                                                + ((v733 ^ 0xFB6C1D62) & (v679 ^ 0xAA5BDB45))
                                                                                                - 2
                                                                                                * ((v753 ^ 0xFB6C1D62) & v760 & (v733 ^ 0xFB6C1D62) & (v679 ^ 0xAA5BDB45)));
  LODWORD(STACK[0x6C8]) = 1421325962;
  int v772 = v771 - 1436820667 - ((2 * v771) & 0x54B7B68A);
  LODWORD(STACK[0x5B8]) = v760;
  LODWORD(STACK[0x5B4]) = v679 ^ 0xAA5BDB45;
  LODWORD(STACK[0x698]) = v752;
  LODWORD(STACK[0x5BC]) = v753 ^ 0xFB6C1D62;
  unsigned int v773 = v760 & (v679 ^ 0xAA5BDB45) ^ (v679 ^ 0xAA5BDB45) & (v749 ^ 0xAA5BDB45) ^ v752 ^ (v753 ^ 0xFB6C1D62) & (v752 ^ v733);
  LODWORD(STACK[0x688]) = (-931309721 - v761 + (v768 ^ 0x2DEDA2D5 ^ (v761 + 931309721))) ^ (v765
                                                                                          + 1833757912
                                                                                          + (v768 ^ 0x2DEDA2D5 ^ (v764 - 1833757912))) ^ ((v768 ^ 0xD3CC028A ^ (((v762 + 1965497693) ^ (v763 - 1692040747) ^ v770) - ((2 * ((v762 + 1965497693) ^ (v763 - 1692040747) ^ v770)) & 0xFC4340BE) - 31350689)) - ((v762 + 1965497693) ^ (v763 - 1692040747) ^ v770));
  int v774 = v770 + v502;
  int v775 = v502 - v763;
  int v776 = ((2 * (v762 - (v502 - v763) - 276440980)) & 0xF7E7FFF8) + ((v762 - (v502 - v763) - 276440980) ^ 0xFBF3FFFC);
  LODWORD(v502) = v759 - v764;
  unsigned int v777 = ((2 * (v761 - (v759 - v764) + 82298896)) & 0xF3FBA7E4) + ((v761 - (v759 - v764) + 82298896) ^ 0x79FDD3F2);
  LODWORD(STACK[0x690]) = v749;
  int v778 = v772 ^ v749;
  int v779 = LODWORD(STACK[0x6D8]) + v774 + (LODWORD(STACK[0xB3C]) ^ 0x3D07271F);
  unsigned int v780 = (2046678002 - v777 + (v773 ^ 0xFB6C1D62 ^ (v777 - 2046678002))) ^ (v765
                                                                          - 105381884
                                                                          + (v773 ^ 0xFB6C1D62 ^ (v764 + 105381884))) ^ ((v773 ^ 0x2870D7E6 ^ (((v776 + 67895300) ^ (v763 + 247099049) ^ v778) - ((2 * ((v776 + 67895300) ^ (v763 + 247099049) ^ v778)) & 0xA6399508) - 753087868)) - ((v776 + 67895300) ^ (v763 + 247099049) ^ v778));
  int v781 = v775 + v778;
  unsigned int v782 = (v755 ^ 0xE0D649DB) + v761;
  int v783 = v775 - v763 - ((2 * (v775 - v763) + 514580260) & 0x5AE5FFF2) + 2093543307;
  int v784 = (v757 ^ 0xCB0F6007) + v762 - 492215534 + v776;
  unsigned int v785 = (v783 ^ 0xD28D0006) - v763 + v776 - 179203748;
  LODWORD(STACK[0x63C]) = v785;
  unsigned int v786 = (v783 ^ (v763 - ((2 * v763 + 971510468) & 0x5AE5FFF2) - 1972958885))
       + ((v774 + 149305208) | 0x97F3BF30)
       - ((v774 + 149305208) & 0x680C40CF);
  int v787 = v759 - v764 - v764 + 79821271;
  unsigned int v788 = v782 + 653990488 + v777;
  int v789 = v787 ^ (v764 + 1417779893);
  LODWORD(STACK[0x61C]) = v789;
  unsigned int v790 = ((2 * (v788 ^ v787)) & 0xF9FFFEFE) + (v788 ^ v787 ^ 0x7CFFFF7F);
  unsigned int v791 = ((2 * (v784 ^ v783)) & 0xFFDFDFFE ^ 0x5AC5DFF2) + (v784 ^ v783 ^ 0x529D1006);
  int v792 = v781 + v779;
  LODWORD(STACK[0x6B0]) = 2095260918;
  LODWORD(STACK[0x6A8]) = 0;
  v793 = (char *)*(&off_10035D440 + v766 - 1880) - 4;
  int v794 = *(_DWORD *)&v793[4
                        * (7
                         * (((((v781 + 1842372155) & 0x911DF ^ 0x911DF) + ((v781 + 1842372155) & 0x911DF)) & 0x10006Fu)
                          + 31)
                         % 0xC0)] ^ 0x42A70C8A;
  unsigned int v795 = v794 - ((2 * v794 + 1550027442) & 0xB5F4CD74) + 153889811;
  unsigned int v796 = ((v795 ^ 0x5AFA66BA) + (v795 ^ 0xA0AA3F2E ^ (v795 >> 4)) + 1) ^ (((v795 >> 4) ^ 0xFA505994) + 1);
  unsigned int v797 = ((v795 >> 4) ^ 0xD7531E07 ^ (v796 - ((2 * v796) & 0xA5F970D8) - 755189652)) + (v795 ^ 0x5AFA66BA);
  unsigned int v798 = v792 + 605409627 + (v795 ^ 0xF08BE10A ^ ((v797 >> 1) + 1526359738 - (v797 & 0xB5F4CD74)));
  LODWORD(STACK[0x5E0]) = v798;
  int v799 = *((_DWORD *)v793 + 151);
  int v800 = ((8 * v799) ^ 0x7DDEDC18) - 22682256;
  unsigned int v801 = (v800 + (v799 ^ 0x9044247C ^ v800) + 1) ^ ((v799 ^ 0x9044247C) + 1);
  unsigned int v802 = LODWORD(STACK[0x6E4]) - v759;
  LODWORD(v523) = v777 - v502;
  LODWORD(STACK[0x620]) = v777 - v502;
  LODWORD(v502) = v802 - v502 + LODWORD(STACK[0x688]);
  int v803 = STACK[0x6F0];
  LODWORD(STACK[0x634]) = v786 + 1;
  LODWORD(v502) = v502 + v780 + (LODWORD(STACK[0x8F4]) ^ 0x3D07271F);
  HIDWORD(v609) = v803 ^ 0x1391;
  LODWORD(v609) = v803 ^ 0xD4630000;
  LODWORD(STACK[0x5F0]) = v609 >> 13;
  int v804 = v502 + (((v799 ^ 0x700245AB ^ (v801 - ((2 * v801) & 0x3F733C50) + 532258344)) + v800) ^ 0xA65ACDE9);
  HIDWORD(v609) = v803 ^ 1;
  LODWORD(v609) = v803 ^ 0xD4631390;
  LODWORD(STACK[0x5D0]) = v609 >> 2;
  unsigned int v805 = v791 + v785;
  LODWORD(STACK[0x618]) = v791 - 2146430975;
  unsigned int v806 = v784 ^ 0xF1C1D3AC;
  unsigned int v807 = v786 + 1 - v805 + 447751502 - ((2 * (v786 + 1 - v805 + 447751502) + 955580602) & 0xD747BCDE) + 136208076;
  unsigned int v808 = v791 - 2146430975 - (v784 ^ 0xF1C1D3AC) + (v807 & 0x72FE50BF ^ 0xEFA3FF6F) + (v807 & 0x72FE50BF ^ 0x9D5DAFD0);
  LODWORD(STACK[0x5FC]) = v790;
  int v809 = v790 + v523;
  unsigned int v810 = v789 - v809 + 1479012056 - ((2 * (v789 - v809 + 1479012056) - 233003374) & 0x8E10941A);
  unsigned int v811 = ((2 * v788) & 0xF77FDFB6 ^ 0xE3038710) + (v788 ^ 0x8A7E3C77);
  LODWORD(STACK[0x6E4]) = v791 + v785 + 1967601271;
  unsigned int v812 = ((2 * ((v805 + 1967601271) ^ (234233500 - v806))) & 0xB97C5DDE)
       + ((v805 + 1967601271) ^ (234233500 - v806) ^ 0xDCBE2EEF);
  int v813 = v807 ^ (v806 - 234233500);
  LODWORD(STACK[0x67C]) = v813;
  int v814 = v806 - v812 + (v813 ^ 0x61DE48F5);
  LODWORD(STACK[0x604]) = v808 + 2;
  int v815 = v808 + 2 - (v791 + v785);
  LODWORD(STACK[0x6D8]) = v815;
  int v816 = v814 - 1168718635 + v815 - 1298106939 - ((2 * (v814 - 1168718635 + v815)) & 0x6540EB8A);
  v812 += 591515921;
  unsigned int v817 = v812 + (v807 ^ (v806 - 234233500) ^ 0x9E21B70A);
  LODWORD(v793) = v816 ^ v817;
  int v818 = v816;
  unsigned int v819 = v812 + (v816 ^ v817 ^ 0xB2A075C5) + ((2 * (v816 ^ v817)) ^ 0x9ABF1475) + 1;
  unsigned int v820 = v819 - 697125782 - ((2 * v819) & 0xACE568D4);
  int v821 = STACK[0x728];
  int v822 = v820 ^ (LODWORD(STACK[0x6F4]) - 697125782 - 2 * (STACK[0x728] & 4 ^ STACK[0x6F4] & 0x5672B46E));
  unsigned int v823 = (v822 - ((2 * v822) & 0xC8652278) - 466448068) ^ v793;
  LODWORD(v793) = STACK[0x6E8];
  unsigned int v824 = (v823 ^ 0xC9A5DA75)
       + (LODWORD(STACK[0x6E8]) ^ 0x60C8C173 ^ ((v823 ^ 0x5692E4F9)
                                              - 731704431
                                              - ((2 * (v823 ^ 0x5692E4F9)) & 0xA8C62722)));
  unsigned int v825 = v810 - 1072259754;
  unsigned int v826 = (v810 - 1072259754) ^ (v811 - ((2 * (v811 + 1984557449)) & 0x8E10941A) + 1028799382);
  LODWORD(STACK[0x66C]) = v826;
  unsigned int v827 = v809 - ((2 * v809 - 430001564) & 0xA3DF26E6) - 987829083;
  LODWORD(STACK[0x674]) = v827;
  LODWORD(STACK[0x5E8]) = v790 - v811;
  LODWORD(STACK[0x678]) = -v811 - v523 - 110612125;
  unsigned int v828 = v827 ^ (1537581546 - v811 - ((325852398 - 2 * v811) & 0xA3DF26E6));
  LODWORD(STACK[0x670]) = v826 ^ 0x75826965;
  unsigned int v829 = (v826 ^ 0x75826965) + v828;
  int v830 = 1873945324 - v523 - v829;
  int v831 = v830 ^ v829;
  LODWORD(STACK[0x680]) = v831;
  unsigned int v832 = ((2 * (v828 - v831)) & 0xEEB5BF7E) + ((v828 - v831) ^ 0x775ADFBF);
  unsigned int v833 = (v820 ^ 0x298D4B95) - v806;
  LODWORD(STACK[0x668]) = v832;
  LODWORD(STACK[0x6F0]) = v818;
  LODWORD(v502) = ((2 * ((v818 ^ 0x70947136) + 558097747)) & 0xFEB77F9C)
                + (((v818 ^ 0x70947136) + 558097747) ^ 0xFF5BBFCE);
  LODWORD(STACK[0x5E4]) = v502;
  unsigned int v834 = v832 + v811;
  int v835 = v834
       + v502
       + ((2002444223 - v832 + (v793 ^ 0xD4631391 ^ (v832 - 2002444223))) ^ ((v793 ^ 0xD4631391 ^ v831)
                                                                                         - v831) ^ (v824 + 1))
       - 7122436
       + v798;
  unsigned int v836 = -1918741487 - (v820 & 0x10402 ^ 0x8CE981B0 | v820 & 0x10402 ^ 0x402);
  unsigned int v837 = ((2 * v836) & 0x1339CFC) + (v836 ^ 0xC5DFEF7E);
  unsigned int v838 = (v830 ^ 0x3D733553) - v834;
  LODWORD(v793) = (v837 + 975179906 + (v830 ^ 0x3D733553 ^ (v837 + 975179906)) + 1) ^ ((v830 ^ 0x3D733553) + 1);
  unsigned int v839 = (v830 ^ 0x360B460B ^ ((_DWORD)v793 - ((2 * (_DWORD)v793) & 0xE90F194E) - 192443225)) + v837;
  unsigned int v840 = v835 - ((2 * v835) & 0x6A575DDC) - 1255428370;
  LODWORD(STACK[0x664]) = v838 + 17886775;
  LODWORD(STACK[0x5D8]) = v839;
  int v841 = 7 * (HIBYTE(v840) & 0xF ^ 5) + 3640;
  LOWORD(v793) = v841 - 960 * ((unsigned __int16)((2185 * v841) >> 16) >> 5);
  unsigned int v842 = v833 + 234233501;
  unsigned int v843 = (v818 ^ 0x8FD34096) + v833 + 234233501;
  LODWORD(STACK[0x5DC]) = v804 - 217751797;
  unsigned int v844 = (v821 ^ 0xB6D79841) + v804 - 217751797 + v842 - v839 - 1918720042;
  unsigned int v845 = v844 - 452493535 - ((2 * v844) & 0xCA0EFE42);
  int v846 = 7 * ((v840 >> 20) & 0xF ^ 2) + 3640;
  int v847 = 7 * (HIWORD(v840) & 0xF ^ 0xB) + 3640;
  unint64_t v848 = STACK[0x700];
  int v849 = (((*(unsigned __int8 *)(STACK[0x700] + (unsigned __int16)v793) ^ 0x51) << 8) ^ ((*(unsigned __int8 *)(STACK[0x700] + (unsigned __int16)(7 * ((v840 >> 28) ^ 0xB) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v840 >> 28) ^ 0xB) + 3640)) >> 16) >> 5))) ^ 1) << 12) | *(unsigned __int8 *)(STACK[0x700] + (unsigned __int16)(v847 - 960 * ((unsigned __int16)((2185 * v847) >> 16) >> 5))) ^ 0x51) ^ (16 * (*(unsigned __int8 *)(STACK[0x700] + (unsigned __int16)(v846 - 960 * ((unsigned __int16)((2185 * v846) >> 16) >> 5))) ^ 0x51));
  int v850 = 7 * (((unsigned __int16)(v840 & 0xF000) >> 12) ^ 0xA) + 3640;
  LODWORD(v793) = 7 * ((v840 >> 8) & 0xF ^ 0xE) + 3640;
  LOWORD(v847) = (_WORD)v793 - 960 * ((unsigned __int16)((2185 * (_DWORD)v793) >> 16) >> 5);
  LODWORD(STACK[0x688]) = v840;
  LODWORD(v793) = 7 * ((v840 >> 4) ^ 0xE) + 3640;
  LOWORD(v79_Block_object_dispose((const void *)(v9 - 96), 8) = (_WORD)v793 - 960 * ((unsigned __int16)((2185 * (_DWORD)v793) >> 16) >> 5);
  unsigned int v851 = (v849 << 16) - 1488751281 - ((v849 << 17) & 0x4E860000);
  unsigned int v852 = ((v851 ^ 0xA743754F) + ((*(unsigned __int8 *)(v848 + (unsigned __int16)v847) ^ 0x51) << 8)) ^ ((*(unsigned __int8 *)(v848 + (unsigned __int16)(v850 - 960 * ((unsigned __int16)((2185 * v850) >> 16) >> 5))) ^ 0x51) << 12);
  int v853 = *(unsigned __int8 *)(v848
                            + (unsigned __int16)(7 * (v840 & 0xF ^ 0xE)
                                               + 3640
                                               - 960
                                               * ((unsigned __int16)((2185 * (7 * (v840 & 0xF ^ 0xE) + 3640)) >> 16) >> 5))) ^ 0x51;
  unsigned int v854 = (v852 | v853) ^ (16 * (*(unsigned __int8 *)(v848 + (unsigned __int16)v798) ^ 0x51));
  int v855 = 7 * (HIBYTE(v845) & 0xF ^ 5) + 3640;
  LOBYTE(v79_Block_object_dispose((const void *)(v9 - 96), 8) = (STACK[0x70C] & 0x5C ^ 0x1C) + (STACK[0x70C] & 0x5C ^ 0x40);
  LODWORD(STACK[0x6F4]) = ((v839 + 975179906) ^ (v838 + 17886775))
                        - ((2 * ((v839 + 975179906) ^ (v838 + 17886775))) & 0x91A63906)
                        + 1221794947;
  LOBYTE(v83_Block_object_dispose((const void *)(v9 - 96), 8) = (((v839 - 126) ^ (v838 + 55)) - ((2 * ((v839 - 126) ^ (v838 + 55))) & 6) - 125) & 0xB4;
  unsigned int v856 = (v845 ^ 0xE5077F21) >> (v798 + (v838 ^ 0x80 | v838 ^ 0x34));
  int v857 = ((*(unsigned __int8 *)(v848
                              + (unsigned __int16)(v855
                                                 - 960 * ((unsigned __int16)((2185 * v855) >> 16) >> 5))) ^ 0x51) << 8) ^ ((*(unsigned __int8 *)(v848 + (unsigned __int16)(7 * ((v845 >> 28) ^ 0xE) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v845 >> 28) ^ 0xE) + 3640)) >> 16) >> 5))) ^ 0x51) << 12);
  int v858 = 7 * (v856 >> 4);
  int v859 = v857 | *(unsigned __int8 *)(v848
                                   + (unsigned __int16)(7 * (v856 & 0xF)
                                                      + 3640
                                                      - 960
                                                      * ((unsigned __int16)((2185 * (7 * (v856 & 0xF) + 3640)) >> 16) >> 5))) ^ 0x51;
  int v860 = 7 * (((unsigned __int16)v845 >> 12) ^ 7) + 3640;
  int v861 = 7 * (~(v845 >> 8) & 0xF) + 3640;
  int v862 = (v859 << 8) ^ ((*(unsigned __int8 *)(v848
                                            + (unsigned __int16)(v858
                                                               + 3640
                                                               - 960
                                                               * ((unsigned __int16)((2185 * (v858 + 3640)) >> 16) >> 5))) ^ 0x51) << 12);
  int v863 = 7 * ((v845 >> 4) ^ 2) + 3640;
  int v864 = v862 | *(unsigned __int8 *)(v848
                                   + (unsigned __int16)(v861
                                                      - 960
                                                      * ((unsigned __int16)((2185 * v861) >> 16) >> 5))) ^ 0x51;
  unsigned int v865 = (v864 << 8) - ((v864 << 9) & 0x931F8000) - 913326080;
  unsigned int v866 = v865 ^ ((*(unsigned __int8 *)(v848
                                     + (unsigned __int16)(v860
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v860) >> 16) >> 5))) ^ 0x51) << 12);
  int v867 = *(unsigned __int8 *)(v848
                            + (unsigned __int16)(7 * (v845 & 0xF ^ 1)
                                               + 3640
                                               - 960
                                               * ((unsigned __int16)((2185 * (7 * (v845 & 0xF ^ 1) + 3640)) >> 16) >> 5))) ^ 0x51;
  unsigned int v868 = (v866 | v867) ^ (16
                        * (*(unsigned __int8 *)(v848
                                              + (unsigned __int16)(v863
                                                                 - 960
                                                                 * ((unsigned __int16)((2185 * v863) >> 16) >> 5))) ^ 0x51));
  int v869 = v853 & 0xF;
  LODWORD(STACK[0x65C]) = v869;
  unsigned int v870 = 7 * (v869 & 0xFFFFFF0F | (16 * (v867 & 0xF)));
  unsigned __int16 v871 = (unsigned __int16)(v870 + 3983) % 0x3C0u;
  if (v870 >= 0x3C0) {
    v870 -= 960;
  }
  unsigned int v872 = v854;
  LODWORD(STACK[0x654]) = v854;
  int v873 = (v854 >> 4) - ((v854 >> 3) & 0x49E43DC);
  int v874 = *(unsigned __int8 *)(v848 + v871);
  int v875 = LODWORD(STACK[0x5C4]) ^ 0x51;
  LODWORD(STACK[0x5D4]) = v875;
  int v876 = v874 ^ v875;
  LODWORD(STACK[0x650]) = 7 * v876;
  LODWORD(STACK[0x64C]) = 244671 * v876;
  int v877 = *(unsigned __int8 *)(v848
                            + (unsigned __int16)(7 * v876
                                               - 960 * ((unsigned __int16)((244671 * v876) >> 16) >> 9))) >> 4;
  int v879 = ((_BYTE)v873 - 18) & 0xF ^ 0xE;
  LODWORD(STACK[0x658]) = v879;
  int v880 = v868 & 0xF0 | v879;
  int v881 = *(unsigned __int8 *)(v848
                            + (unsigned __int16)(7
                                               * (v880
                                                + ((((v873 + 8686) & 0xD ^ 0xC) + ((v873 + 8686) & 0xD ^ 0x331)) & 0x23B)))
                            % 0x3C0u) ^ (16
                                       * (*(unsigned __int8 *)(v848
                                                             + (unsigned __int16)(v878
                                                                                - 960
                                                                                * ((unsigned __int16)((8739 * v878) >> 16) >> 7))) ^ 0x51));
  unsigned int v882 = 7 * v880;
  unsigned int v883 = 7 * v880 - 960;
  if (v882 < 0x3C0) {
    unsigned int v883 = v882;
  }
  unsigned int v884 = v843 + 1;
  int v885 = v884 - ((2 * v884) & 0x5F7DD9AC) - 1346442026;
  LODWORD(STACK[0x660]) = v885 ^ v817;
  int v886 = v881 ^ 0x51;
  LODWORD(STACK[0x648]) = 7 * v886;
  unsigned int v887 = (*(unsigned __int8 *)(v848
                             + (unsigned __int16)(7 * v886
                                                - 960 * ((unsigned __int16)((244671 * v886) >> 16) >> 9))) ^ 0x51u) >> (((v884 - ((2 * v884) & 0xAC) - 42) ^ v817 ^ 0xC0) + (~((v884 - ((2 * v884) & 0xAC) - 42) ^ v817) & 0x1A) + (((v884 - ((2 * v884) & 0xAC) - 42) ^ v817) & 0xE5 ^ 0x3F) - 21);
  int v888 = 7 * ((v887 - ((2 * v887) & 0xA2) + 81) ^ *(unsigned __int8 *)(v848 + v883)) + 3983;
  unsigned int v889 = 7 * ((v868 >> 4) & 0xF0 | (v872 >> 8) & 0xF);
  int v890 = *(unsigned __int8 *)(v848 + (unsigned __int16)(v889 + 3983) % 0x3C0u) ^ (16
                                                                                * (*(unsigned __int8 *)(v848 + (unsigned __int16)(v888 - 960 * ((unsigned __int16)((8739 * v888) >> 16) >> 7))) ^ 0x51));
  if (v889 >= 0x3C0) {
    v889 -= 960;
  }
  int v891 = v890 ^ 0x51;
  LODWORD(STACK[0x628]) = 7 * v891;
  int v892 = *(unsigned __int8 *)(v848
                            + (unsigned __int16)(7 * v891
                                               - 960 * ((unsigned __int16)((244671 * v891) >> 16) >> 9))) >> 4;
  LODWORD(STACK[0x638]) = v852;
  unsigned int v894 = 7 * (((v866 >> 8) & 0xF0 | ((unsigned __int16)v852 >> 12)) ^ 0xC0);
  int v895 = *(unsigned __int8 *)(v848
                            + (unsigned __int16)(7 * (((v866 >> 8) & 0xF0 | ((unsigned __int16)v852 >> 12)) ^ 0xC0)
                                               + 3983)
                            % 0x3C0u) ^ (16
                                       * (*(unsigned __int8 *)(v848
                                                             + (unsigned __int16)(v893
                                                                                - 960
                                                                                * ((unsigned __int16)((8739 * v893) >> 16) >> 7))) ^ 0x51));
  if (v894 >= 0x3C0) {
    v894 -= 960;
  }
  int v896 = v895 ^ 0x51;
  LODWORD(STACK[0x614]) = 7 * v896;
  LODWORD(STACK[0x608]) = 244671 * v896;
  int v897 = (*(unsigned __int8 *)(v848
                             + (unsigned __int16)(7 * v896
                                                - 960 * ((unsigned __int16)((244671 * v896) >> 16) >> 9))) >> 4) ^ 5;
  int v898 = 7 * ((v897 + (~(2 * v897) | 0xFD) + 82) ^ *(unsigned __int8 *)(v848 + v894)) + 3983;
  int v899 = *(unsigned __int8 *)(v848
                            + (unsigned __int16)(7
                                               * (BYTE2(v852) & 0xF | (16
                                                                     * ((HIWORD(v866) ^ 0xF) & ((((_BYTE)v804 + 22) & 0xF ^ 0xF)
                                                                                              + (((_BYTE)v804 + 22) & 0xF)))))
                                               + 3983)
                            % 0x3C0u) ^ (16
                                       * (*(unsigned __int8 *)(v848
                                                             + (unsigned __int16)(v898
                                                                                - 960
                                                                                * ((unsigned __int16)((8739 * v898) >> 16) >> 7))) ^ 0x51)) ^ 0x51;
  LODWORD(STACK[0x600]) = 7 * v899;
  LOBYTE(v899) = (*(_BYTE *)(v848
                           + (unsigned __int16)(7 * v899
                                              - 960 * ((unsigned __int16)((244671 * v899) >> 16) >> 9))) >> 4) ^ 5;
  int v900 = 7
       * ((v899 - 2 * (v899 & 1) + 81) ^ *(unsigned __int8 *)(v848
                                                                             + (unsigned __int16)(7
                                                                                                * (BYTE2(v852) & 0xF | (16 * ((HIWORD(v866) ^ 0xF) & ((((_BYTE)v804 + 22) & 0xF ^ 0xF) + (((_BYTE)v804 + 22) & 0xF))))))
                                                                             % 0x3C0u))
       + 3983;
  unsigned int v901 = v865;
  LODWORD(STACK[0x5CC]) = v865;
  LODWORD(STACK[0x5C8]) = v851;
  unsigned int v902 = 7 * ((HIWORD(v865) & 0xF0 | (v851 >> 20) & 0xF) ^ 0x84);
  int v903 = *(unsigned __int8 *)(v848
                            + (unsigned __int16)(7 * ((BYTE2(v865) & 0xF0 | (v851 >> 20) & 0xF) ^ 0x84) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v848 + (unsigned __int16)(v900 - 960 * ((unsigned __int16)((8739 * v900) >> 16) >> 7))) ^ 0x51));
  if (v902 >= 0x3C0) {
    v902 -= 960;
  }
  int v904 = v903 ^ 0x51;
  LODWORD(STACK[0x5F8]) = 7 * v904;
  LODWORD(STACK[0x5F4]) = 244671 * v904;
  int v905 = (*(unsigned __int8 *)(v848
                             + (unsigned __int16)(7 * v904
                                                - 960 * ((unsigned __int16)((244671 * v904) >> 16) >> 9))) >> 4) ^ 5;
  LODWORD(STACK[0x5EC]) = (7
                         * ((v905 + (~(2 * v905) | 0xFD) + 82) ^ *(unsigned __int8 *)(v848 + v902))
                         + 3983)
                        % (((STACK[0x6B0] & 0x362B9D ^ 0x222094) + (STACK[0x6B0] & 0x362B9D ^ 0x140B09) + 5167190) & 0x70EFCCu);
  HIDWORD(v906) = v803 ^ 0x231391;
  LODWORD(v906) = v803 ^ 0xD4400000;
  int v907 = LODWORD(STACK[0x5D0]) ^ LODWORD(STACK[0x5F0]) ^ (v906 >> 22);
  int v908 = STACK[0x640];
  LODWORD(STACK[0x728]) = STACK[0x640];
  unsigned int v909 = v908 ^ 0xB6D79841;
  LODWORD(STACK[0x6B0]) = v803;
  unsigned int v910 = LODWORD(STACK[0x720]) ^ 0xB6D79841;
  int v911 = STACK[0x68C];
  int v912 = STACK[0x710];
  unsigned int v913 = LODWORD(STACK[0x710]) ^ 0xB6D79841;
  LODWORD(STACK[0x6E8]) = STACK[0x68C];
  v911 ^= 0xD4631391;
  unsigned int v914 = LODWORD(STACK[0x718]) ^ 0xD4631391;
  unsigned int v915 = (v913 ^ v910) & v911 ^ (v803 ^ 0xD4631391) & v910 ^ (v803 ^ 0xD4631391) & v909 ^ v914 & v913 ^ v914 & v909;
  LODWORD(STACK[0x5A8]) = v910;
  LODWORD(STACK[0x5B0]) = v913;
  LODWORD(STACK[0x5D0]) = v914;
  LODWORD(STACK[0x5AC]) = v803 ^ 0xD4631391;
  unsigned int v916 = v913 & v910 ^ v910 & v909 ^ v913 & v909 ^ (v803 ^ 0xD4631391) & v911 ^ v914 & (v803 ^ 0xD4631391) ^ v914 & v911;
  unsigned int v917 = (((v805 - 1384700448) ^ v916) - ((2 * ((v805 - 1384700448) ^ v916)) & 0xD747BCDE) - 341582225) ^ v807;
  unsigned int v918 = ((v825 ^ 0x38F7B5F2) + (v915 ^ 0xC7084A0D ^ v825) + 1) ^ (v915 - 2 * (v915 & (v809 + 727664795))) ^ ((v915 ^ 0xEDDDF1A5 ^ (v917 - 304221787 - ((2 * v917) & 0xDBBBE34A))) - v917);
  int v919 = STACK[0x6F0];
  unsigned int v920 = (LODWORD(STACK[0x6F0]) ^ 0x8F6B8EC9)
       + (v820 ^ 0xD672B46A)
       + v884
       - 1054772001
       - ((2 * ((LODWORD(STACK[0x6F0]) ^ 0x8F6B8EC9) + (v820 ^ 0xD672B46A) + v884 + 1)) & 0x8242E9BC);
  LODWORD(STACK[0x5F0]) = v920;
  int v921 = v907 - LODWORD(STACK[0x5E8]) + LODWORD(STACK[0x618]) + v918 + LODWORD(STACK[0x5E0]);
  int v922 = v885 ^ v919;
  LODWORD(STACK[0x640]) = v885 ^ v919;
  int v923 = LODWORD(STACK[0x5E4]) + 10764338;
  LODWORD(STACK[0x5E4]) = v923;
  LODWORD(STACK[0x618]) = v922 ^ 0x1B0B116;
  int v924 = (v923 + (v922 ^ 0x1B0B116) + 1) ^ v922;
  LODWORD(STACK[0x68C]) = v924;
  LODWORD(STACK[0x5E8]) = v924 ^ 0xFE4F4EE9;
  unsigned int v925 = v921 + (v924 ^ 0xFE4F4EE9) + 1950244963 - ((2 * (v921 + (v924 ^ 0xFE4F4EE9) + 1950244963)) & 0x1E0E7846);
  unsigned int v926 = (7 * ((v925 + LODWORD(STACK[0x5A4])) >> 28) + 3640) % ((v920 & 0x3C0 ^ 0x300) + (v920 & 0x3C0 ^ 0xC0));
  HIDWORD(v906) = v912 ^ 1;
  LODWORD(v906) = v912 ^ 0xB6D79840;
  int v927 = v906 >> 2;
  HIDWORD(v906) = v912 ^ 0x1841;
  LODWORD(v906) = v912 ^ 0xB6D78000;
  int v928 = v906 >> 13;
  HIDWORD(v906) = v912 ^ 0x179841;
  LODWORD(v906) = v912 ^ 0xB6C00000;
  int v929 = v928 ^ v927 ^ (v906 >> 22);
  int v930 = LODWORD(STACK[0x63C]) ^ v907 ^ (LODWORD(STACK[0x634]) + 1745633487);
  unsigned int v931 = LODWORD(STACK[0x5FC])
       + 2097151871
       - 2 * LODWORD(STACK[0x5FC])
       + ((((LODWORD(STACK[0x620]) + 2063086139) ^ v929) - LODWORD(STACK[0x620]) - 2063086139) ^ ((v929 ^ LODWORD(STACK[0x61C]))
                                                                                                - LODWORD(STACK[0x61C])) ^ ((v929 ^ 0x72033C4D ^ (v930 + 1912814669 - ((2 * v930) & 0xE406789A))) - v930));
  unsigned int v932 = (v931 ^ 0x433ADFFF) + v916 + ((2 * v931) & 0x8675BFFE) + LODWORD(STACK[0x604]);
  LODWORD(STACK[0x61C]) = v932;
  unsigned int v933 = 7 * (((v901 >> 20) & 0xF0 | HIBYTE(v851) & 0xF) ^ 0x97);
  int v934 = STACK[0x6F4];
  LODWORD(STACK[0x634]) = LODWORD(STACK[0x6F4]) ^ 0x96493075;
  unsigned int v935 = (LODWORD(STACK[0x5D8]) + 1533277654 + (v934 ^ 0x96493075)) ^ v934;
  LODWORD(STACK[0x63C]) = v935;
  unsigned int v936 = v932
       + LODWORD(STACK[0x5DC])
       + (v935 ^ 0x96493075)
       - ((2 * (v932 + LODWORD(STACK[0x5DC]) + (v935 ^ 0x96493075)) + 194476890) & 0x3559C172);
  unsigned int v937 = v925 - 1895351261;
  unsigned int v938 = 7 * (~((v925 - 1895351261) >> 24) & 0xF) + 3640;
  int v939 = 7 * (HIWORD(v937) & 0xF ^ 7) + 3640;
  int v940 = ((*(unsigned __int8 *)(v848 + (unsigned __int16)(v938 - 960 * ((unsigned __int16)((2185 * v938) >> 16) >> 5))) ^ 0x51) << 8) ^ ((*(unsigned __int8 *)(v848 + v926) ^ 0x51) << 12) | *(unsigned __int8 *)(v848 + (unsigned __int16)(v939 - 960 * ((unsigned __int16)((2185 * v939) >> 16) >> 5))) ^ 0x51;
  int v941 = 7 * (((unsigned __int16)v937 >> 12) ^ 3) + 3640;
  int v942 = 7 * ((v937 >> 8) & 0xF ^ 0xC) + 3640;
  int v943 = 7 * ((v937 >> 4) ^ 2) + 3640;
  int v944 = (v940 << 8) ^ (16
                      * (*(unsigned __int8 *)(v848
                                            + (unsigned __int16)(v941
                                                               - 960
                                                               * ((unsigned __int16)((2185 * v941) >> 16) >> 5))) ^ 0x51)) ^ (*(unsigned __int8 *)(v848 + (unsigned __int16)(v942 - 960 * ((unsigned __int16)((2185 * v942) >> 16) >> 5))) ^ 0x51 | ((*(unsigned __int8 *)(v848 + (unsigned __int16)(7 * ((v937 >> 20) & 0xF) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v937 >> 20) & 0xF) + 3640)) >> 16) >> 5))) ^ 0x51) << 12));
  unsigned int v945 = (v944 << 8) + 2081083225 - ((v944 << 9) & 0xF8159E00);
  v936 += 1081646694;
  int v946 = 7 * (HIBYTE(v936) & 0xF ^ 0xA) + 3640;
  int v947 = *(unsigned __int8 *)(v848
                            + (unsigned __int16)(7 * (v937 & 0xF ^ 3)
                                               + 3640
                                               - 960
                                               * ((unsigned __int16)((2185 * (7 * (v937 & 0xF ^ 3) + 3640)) >> 16) >> 5))) ^ 0x51;
  unsigned int v948 = (v945 ^ 0x7C0ACF59 | v947) ^ (16
                                     * (*(unsigned __int8 *)(v848
                                                           + (unsigned __int16)(v943
                                                                              - 960
                                                                              * ((unsigned __int16)((2185 * v943) >> 16) >> 5))) ^ 0x51));
  int v949 = 7 * ((v936 >> 20) & 0xF ^ 0xA) + 3640;
  int v950 = 7 * (HIWORD(v936) & 0xF ^ 0xC) + 3640;
  int v951 = ((((*(unsigned __int8 *)(v848
                                + (unsigned __int16)(v946
                                                   - 960 * ((unsigned __int16)((2185 * v946) >> 16) >> 5))) ^ 0x51) << 8) ^ ((*(unsigned __int8 *)(v848 + (unsigned __int16)(7 * ((v936 >> 28) ^ 9) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v936 >> 28) ^ 9) + 3640)) >> 16) >> 5))) ^ 0x51) << 12) | *(unsigned __int8 *)(v848 + (unsigned __int16)(v950 - 960 * ((unsigned __int16)((2185 * v950) >> 16) >> 5))) ^ 0x51) << 8) ^ ((*(unsigned __int8 *)(v848 + (unsigned __int16)(v949 - 960 * ((unsigned __int16)((2185 * v949) >> 16) >> 5))) ^ 0x51) << 12);
  LOWORD(v942) = 7 * ((v936 >> 8) & 0xF)
               + 3640
               - 960 * ((unsigned __int16)((2185 * (7 * ((v936 >> 8) & 0xF) + 3640)) >> 16) >> 5);
  int v952 = 7 * (((unsigned __int16)v936 >> 12) ^ 0xE) + 3640;
  int v953 = 7 * ((v936 >> 4) ^ 0xB) + 3640;
  int v954 = *(unsigned __int8 *)(v848
                            + (unsigned __int16)(7 * (v936 & 0xF ^ 9)
                                               + 3640
                                               - 960
                                               * ((unsigned __int16)((2185 * (7 * (v936 & 0xF ^ 9) + 3640)) >> 16) >> 5))) ^ 0x51;
  unsigned int v955 = (((v951 | *(unsigned __int8 *)(v848 + (unsigned __int16)v942) ^ 0x51) << 8) ^ ((*(unsigned __int8 *)(v848 + (unsigned __int16)(v952 - 960 * ((unsigned __int16)((2185 * v952) >> 16) >> 5))) ^ 0x51) << 12) | v954) ^ (16 * (*(unsigned __int8 *)(v848 + (unsigned __int16)(v953 - 960 * ((unsigned __int16)((2185 * v953) >> 16) >> 5))) ^ 0x51));
  unsigned int v956 = 7 * (v947 & 0xF | (16 * (v954 & 0xF)));
  int v957 = *(unsigned __int8 *)(v848 + (unsigned __int16)(v956 + 3983) % 0x3C0u) ^ LODWORD(STACK[0x5D4]);
  if (v933 >= 0x3C0) {
    unsigned int v958 = v933 - 960;
  }
  else {
    unsigned int v958 = v933;
  }
  LODWORD(STACK[0x5E0]) = v958;
  LODWORD(STACK[0x604]) = 7 * v957;
  unsigned int v959 = *(unsigned __int8 *)(v848
                            + (unsigned __int16)(7 * v957
                                               - 960 * ((unsigned __int16)((244671 * v957) >> 16) >> 9)));
  if (v956 >= 0x3C0) {
    v956 -= 960;
  }
  int v960 = 7
  unsigned int v961 = v960 - 960 * ((8739 * v960) >> 23);
  unsigned int v962 = 7 * (v955 & 0xF0 | (v948 >> 4));
  if (v962 >= 0x3C0) {
    v962 -= 960;
  }
  char v963 = *(_BYTE *)(v848 + v962);
  int v965 = (*(unsigned __int8 *)(v848
                             + (unsigned __int16)(7 * v964
                                                - 960 * ((unsigned __int16)((244671 * v964) >> 16) >> 9))) >> 4) ^ 5;
  int v966 = 7 * (v965 + (v963 ^ 0x51) - 2 * (v965 & (v963 ^ 1))) + 3983;
  LODWORD(STACK[0x620]) = v948;
  int v967 = ((v948 >> 8) & 0xF) + 1139588358 - ((v948 >> 7) & 0xC) + ((v955 >> 4) & 0xF0);
  int v968 = *(unsigned __int8 *)(v848
                            + (((((2 * v967) & 0x72) + (v967 ^ 0x3F)) & 0xB9)
                                              + ((((2 * v967) & 0x72) + (v967 ^ 0x3F)) & 0xB9 ^ 0xB9)
                                              + 78)
                            * (((2 * v967) & 0x72) + (v967 ^ 0x43ECBF3Fu))
                            % 0x3C0) ^ (16
                                      * (*(unsigned __int8 *)(v848
                                                            + (unsigned __int16)(v966
                                                                               - 960
                                                                               * ((unsigned __int16)((8739 * v966) >> 16) >> 7))) ^ 0x51)) ^ 0x51;
  LOBYTE(v96_Block_object_dispose((const void *)(v9 - 96), 8) = (*(_BYTE *)(v848
                           + (unsigned __int16)(7 * v968
                                              - 960 * ((unsigned __int16)((244671 * v968) >> 16) >> 9))) >> 4) ^ 5;
  int v969 = 7
       * ((v968 - 2 * (v968 & 1) + 81) ^ *(unsigned __int8 *)(v848
                                                                             + (unsigned __int16)(7 * (v967 ^ 0xBD06))
                                                                             % 0x3C0u))
       + 3023;
  LOBYTE(v969) = (v969 - -64 * ((8739 * v969) >> 23)) & 4;
  unsigned int v970 = (v955 >> 8 >> ((v969 ^ 4) + v969)) - 1613970117 + (~(2 * (v955 >> 8 >> ((v969 ^ 4) + v969))) | 0xFE66758B);
  int v971 = HIBYTE(v945) & 8;
  unsigned int v972 = (v971 + (HIBYTE(v945) & 0xF ^ 0xA) - ((HIBYTE(v945) & 0xF ^ 0xA) & 8) - 34519024) ^ 0xBDB1EC1A;
  unsigned int v973 = v972 - 1213057664;
  LODWORD(STACK[0x5FC]) = v972 - 1213057664;
  unsigned int v974 = (v970 >> 8) & 0xF0 ^ 0xC0 | (v972 - 1213057664) ^ 0xF7F2D984;
  LOWORD(v972) = v974 + 15557 - 2 * (v974 & 0x3CCF ^ v972 & 0xA);
  LOWORD(v974) = 7 * (v972 ^ 0x3CC5) - ((14 * (v972 ^ 0x3CC5)) & 0x8FEC) + 18422;
  int v975 = STACK[0x6C8];
  int v976 = STACK[0x690];
  int v977 = (LODWORD(STACK[0x690]) ^ 0x75826965 ^ (LODWORD(STACK[0x66C])
                                              - 1436820667
                                              - (STACK[0x6C8] & (2 * LODWORD(STACK[0x66C])))))
       - LODWORD(STACK[0x670]);
  LODWORD(STACK[0x6D8]) += LODWORD(STACK[0x6A4]) + 1436584686;
  int v978 = LODWORD(STACK[0x698]) ^ LODWORD(STACK[0x6E4]) ^ 0x654DAA68 ^ LODWORD(STACK[0x67C]);
  int v979 = (v977 ^ ((LODWORD(STACK[0x674]) ^ 0x2E106C8C) + (v976 ^ 0x7BB44836 ^ LODWORD(STACK[0x674])) + 1) ^ (((v978 - 1436820667 - (v975 & (2 * v978))) ^ v976) - v978))
       - LODWORD(STACK[0x678]);
  LODWORD(STACK[0x6E4]) = (v979 ^ 0x7E8FC6FF) - 705463360 + ((2 * v979) & 0xFD1F8DFE);
  return ((uint64_t (*)(void))(*(void *)(STACK[0x6F8]
                                        + 8LL
                                        * ((4079
                                          * (((LODWORD(STACK[0x6A8])
                                             + 2095260918
                                             - ((2 * LODWORD(STACK[0x6A8]) + 2) & 0xF9C649EC)
                                             + 1) ^ 0x7CE324C0) < 0x40)) ^ LODWORD(STACK[0x6D4])))
                            - 4LL))();
}