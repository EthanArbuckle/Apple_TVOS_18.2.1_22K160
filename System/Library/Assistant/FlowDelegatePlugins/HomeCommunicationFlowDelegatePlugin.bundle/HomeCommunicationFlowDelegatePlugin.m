uint64_t sub_3E98(uint64_t a1)
{
  const char *v2;
  char *v3;
  v2 = "(";
  v3 = (char *)&value witness table for Builtin.NativeObject + 64;
  return swift_initClassMetadata2(a1, 0LL);
}

uint64_t sub_3EF0(uint64_t a1, uint64_t a2, void (*a3)(void *))
{
  uint64_t v5 = sub_41BC(&qword_9F9C8);
  __chkstk_darwin(v5);
  v7 = (uint64_t *)((char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v8 = *(void *)((char *)v3 + *(void *)(qword_A3DC8 + *v3 + 16));
  void *v7 = v8;
  uint64_t v9 = enum case for AppResolutionResult.selected(_:);
  uint64_t v10 = type metadata accessor for AppResolutionResult(0LL);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104LL))(v7, v9, v10);
  swift_storeEnumTagMultiPayload(v7, v5, 0LL);
  swift_retain(v8);
  a3(v7);
  return sub_41FC((uint64_t)v7);
}

void sub_3FD4(uint64_t a1)
{
}

void sub_3FE8()
{
}

void sub_4010(uint64_t a1)
{
}

void sub_4024(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v3 = sub_445C();
  a2(v3);
  __break(1u);
}

void sub_4040()
{
}

void sub_4068()
{
}

void sub_4078()
{
}

uint64_t sub_40A0()
{
  return swift_release(*(void *)((char *)v0 + *(void *)(qword_A3DC8 + *v0 + 16)));
}

void *sub_40E8()
{
  v0 = (void *)AppSelectionService.deinit();
  sub_423C((void *)((char *)v0 + *(void *)(qword_A3DC8 + *v0 + 8)));
  swift_release(*(void *)((char *)v0 + *(void *)(qword_A3DC8 + *v0 + 16)));
  return v0;
}

uint64_t sub_4140()
{
  v0 = sub_40E8();
  return swift_deallocClassInstance(v0, 64LL, 7LL);
}

uint64_t type metadata accessor for AnnouncementAppSelectionService( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_425C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnnouncementAppSelectionService);
}

void type metadata accessor for INSendAnnouncementIntentResponseCode(uint64_t a1)
{
}

void type metadata accessor for INSendAnnouncementRecipientUnsupportedReason(uint64_t a1)
{
}

void type metadata accessor for INSendAnnouncementAnnouncementUnsupportedReason(uint64_t a1)
{
}

Swift::Int sub_41A4()
{
  return sub_4418(*v0);
}

void sub_41AC(int a1)
{
}

Swift::Int sub_41B4(uint64_t a1)
{
  return sub_43D8(a1, *v1);
}

uint64_t sub_41BC(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2((char *)a1 + (int)result, -(result >> 32), 0LL, 0LL);
    *a1 = result;
  }

  return result;
}

uint64_t sub_41FC(uint64_t a1)
{
  uint64_t v2 = sub_41BC(&qword_9F9C8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_423C(void *a1)
{
  uint64_t v1 = *(void *)(a1[3] - 8LL);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0) {
    return swift_release(*a1);
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_425C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return swift_getGenericMetadata(a1, v6, a5);
}

void type metadata accessor for INDeviceIdiom(uint64_t a1)
{
}

void type metadata accessor for INIntentSlotValueType(uint64_t a1)
{
}

void sub_42B0(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata(0LL, a3);
    if (!v5) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

BOOL sub_42F4(uint64_t *a1, uint64_t *a2)
{
  return sub_43A8(*a1, *a2);
}

void sub_4300(uint64_t a1@<X8>)
{
  *(void *)a1 = v2;
  *(_BYTE *)(a1 + 8) = v3 & 1;
}

  ;
}

uint64_t sub_4338@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *v2;
  uint64_t result = SendAnnouncementNeedsValueModel.init(targetName:)(*(Swift::String_optional *)(&a1 - 1)).targetName.value._countAndFlagsBits;
  *a2 = result;
  return result;
}

unint64_t sub_4364()
{
  unint64_t result = qword_9F9E0;
  if (!qword_9F9E0)
  {
    type metadata accessor for INIntentSlotValueType(255LL);
    unint64_t result = swift_getWitnessTable(&unk_6F828, v1);
    atomic_store(result, (unint64_t *)&qword_9F9E0);
  }

  return result;
}

BOOL sub_43A8(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

void sub_43B4(int a1, Swift::UInt a2)
{
}

Swift::Int sub_43D8(uint64_t a1, Swift::UInt a2)
{
  return Hasher._finalize()();
}

Swift::Int sub_4418(Swift::UInt a1)
{
  return Hasher._finalize()();
}

uint64_t sub_445C()
{
  return swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
}

uint64_t sub_446C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_stdlib_reportUnimplementedInitializer(a1, a2, a3, a4, 0LL);
}

uint64_t sub_4474(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL);
}

void sub_44B4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Parse(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_41BC(&qword_9FDD0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for SiriKitConfirmationState(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  v33 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = __chkstk_darwin(v13);
  v17 = (char *)&v32 - v16;
  __chkstk_darwin(v15);
  v19 = (char *)&v32 - v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  sub_5A9EC((uint64_t)v7, (uint64_t)v10);
  uint64_t v20 = type metadata accessor for SmsNLIntent(0LL);
  if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0((uint64_t)v10, 1LL, v20) == 1)
  {
    sub_4830((uint64_t)v10);
    (*(void (**)(uint64_t, void, uint64_t))(v12 + 104))( a2,  enum case for SiriKitConfirmationState.unset(_:),  v11);
  }

  else
  {
    sub_5AE58();
    sub_4888((uint64_t)v10);
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(a2, v19, v11);
  }

  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v21 = type metadata accessor for Logger(0LL);
  sub_4870(v21, (uint64_t)qword_A3EB0);
  v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v23 = v22(v17, a2, v11);
  v24 = (os_log_s *)Logger.logObject.getter(v23);
  os_log_type_t v25 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v27 = swift_slowAlloc(32LL, -1LL);
    uint64_t v35 = v27;
    *(_DWORD *)v26 = 136315138;
    v32 = v26 + 4;
    v28 = v33;
    v22(v33, (uint64_t)v17, v11);
    uint64_t v29 = String.init<A>(describing:)(v28, v11);
    unint64_t v31 = v30;
    uint64_t v34 = sub_68DC4(v29, v30, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35, v32, v26 + 12);
    swift_bridgeObjectRelease(v31);
    sub_48C4();
    _os_log_impl(&dword_0, v24, v25, "Returning confirmation state: %s.", v26, 0xCu);
    swift_arrayDestroy(v27, 1LL, (char *)&type metadata for Any + 8);
    sub_48D4(v27);
    sub_48D4((uint64_t)v26);
  }

  else
  {
    sub_48C4();
  }
}

uint64_t sub_47CC()
{
  return BaseRCHFlowDelegate.init()();
}

uint64_t sub_47FC()
{
  uint64_t v0 = BaseRCHFlowDelegate.deinit();
  return swift_deallocClassInstance(v0, 16LL, 7LL);
}

uint64_t type metadata accessor for AnnouncementBaseRCHFlowDelegate( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_425C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnnouncementBaseRCHFlowDelegate);
}

uint64_t _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0( uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48LL))();
}

uint64_t sub_4830(uint64_t a1)
{
  uint64_t v2 = sub_41BC(&qword_9FDD0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_4870(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(void *)(a1 - 8) + 82LL) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_4888(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SmsNLIntent(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_48C4()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_48D4(uint64_t a1)
{
  return swift_slowDealloc(a1, -1LL, -1LL);
}

id sub_48E0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v10 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v3)) init];
  uint64_t v11 = UUID.init()(v10);
  uint64_t v12 = UUID.uuidString.getter(v11);
  uint64_t v14 = v13;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_4BAC(v12, v14, v10, (SEL *)&selRef_setAceId_);

  id v15 = v10;
  if (a3)
  {
    NSString v16 = String._bridgeToObjectiveC()();
    id v15 = (id)swift_bridgeObjectRelease(a3);
  }

  else
  {
    NSString v16 = 0LL;
  }

  sub_4C98((uint64_t)v15, "setAppId:");

  sub_4C04();
  id v17 = a1;
  id v18 = sub_4A40(v17);
  sub_4C98((uint64_t)v18, "setIntent:");

  return v10;
}

id sub_4A40(void *a1)
{
  id v3 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v1)) init];
  uint64_t v4 = sub_4B40([a1 backingStore]);
  if (v5 >> 60 == 15)
  {
    Class isa = 0LL;
  }

  else
  {
    uint64_t v7 = v4;
    unint64_t v8 = v5;
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    sub_4C40(v7, v8);
  }

  [v3 setData:isa];

  id v9 = [a1 typeName];
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  uint64_t v12 = v11;

  sub_4BAC(v10, v12, v3, (SEL *)&selRef_setTypeName_);
  return v3;
}

uint64_t sub_4B40(void *a1)
{
  id v2 = [a1 data];

  if (!v2) {
    return 0LL;
  }
  uint64_t v3 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v2);

  return v3;
}

void sub_4BAC(uint64_t a1, uint64_t a2, void *a3, SEL *a4)
{
  id v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  objc_msgSend(a3, *a4, v7);
}

unint64_t sub_4C04()
{
  unint64_t result = qword_9FDD8;
  if (!qword_9FDD8)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___SAIntentGroupProtobufMessage);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_9FDD8);
  }

  return result;
}

uint64_t sub_4C40(uint64_t result, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_4C54(result, a2);
  }
  return result;
}

uint64_t sub_4C54(uint64_t result, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release(result);
  }

  return swift_release(a2 & 0x3FFFFFFFFFFFFFFFLL);
}

id sub_4C98(uint64_t a1, const char *a2)
{
  return objc_msgSend(v3, a2, v2);
}

uint64_t sub_4CA4()
{
  return swift_deallocClassInstance(v0, 32LL, 7LL);
}

uint64_t type metadata accessor for AppIntentDispatcher()
{
  return objc_opt_self(&OBJC_CLASS____TtC35HomeCommunicationFlowDelegatePlugin19AppIntentDispatcher);
}

ValueMetadata *type metadata accessor for AppIntentTransformer()
{
  return &type metadata for AppIntentTransformer;
}

void sub_4CF8(uint64_t a1)
{
  uint64_t v42 = type metadata accessor for IdentifierAppBundle(0LL);
  uint64_t v2 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  v41 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_62D0();
  __chkstk_darwin(v4);
  v40 = (char *)&v33 - v5;
  uint64_t v6 = type metadata accessor for UsoIdentifier(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  sub_6314();
  v43 = v8;
  sub_62D0();
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v33 - v10;
  v44 = &_swiftEmptyArrayStorage;
  uint64_t v12 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain(a1);
  if (v12)
  {
    unint64_t v13 = (*(unsigned __int8 *)(v7 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v14 = *(void *)(v7 + 72);
    uint64_t v33 = a1;
    unint64_t v34 = v13;
    uint64_t v15 = v7;
    uint64_t v16 = a1 + v13;
    uint64_t v38 = v15;
    v37 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 16);
    unsigned int v36 = enum case for IdentifierAppBundle.abHomeKit(_:);
    uint64_t v39 = v2;
    uint64_t v35 = v6;
    id v17 = v40;
    do
    {
      uint64_t v18 = v37(v11, v16, v6);
      UsoIdentifier.appBundleSemantic.getter(v18);
      v19 = *(void (**)(char *, void, uint64_t))(v2 + 104);
      uint64_t v20 = v2;
      uint64_t v21 = v41;
      v22 = v11;
      uint64_t v23 = v42;
      v19(v41, v36, v42);
      char v24 = static IdentifierAppBundle.== infix(_:_:)(v17, v21);
      os_log_type_t v25 = *(void (**)(char *, uint64_t))(v20 + 8);
      v25(v21, v23);
      v25(v17, v23);
      if ((v24 & 1) != 0)
      {
        uint64_t v26 = v6;
        uint64_t v27 = *(void (**)(uint64_t, char *, uint64_t))(v38 + 32);
        v27((uint64_t)v43, v22, v26);
        v28 = v44;
        uint64_t v11 = v22;
        if ((swift_isUniquelyReferenced_nonNull_native(v44) & 1) == 0)
        {
          sub_45DBC(0LL, v28[2] + 1LL, 1);
          v28 = v44;
        }

        unint64_t v30 = v28[2];
        unint64_t v29 = v28[3];
        if (v30 >= v29 >> 1)
        {
          sub_45DBC(v29 > 1, v30 + 1, 1);
          v28 = v44;
        }

        v28[2] = v30 + 1;
        unint64_t v31 = (char *)v28 + v34 + v30 * v14;
        uint64_t v32 = v35;
        v27((uint64_t)v31, v43, v35);
        uint64_t v6 = v32;
        v44 = v28;
      }

      else
      {
        (*(void (**)(char *, uint64_t))(v38 + 8))(v22, v6);
        uint64_t v11 = v22;
      }

      uint64_t v2 = v39;
      v16 += v14;
      --v12;
    }

    while (v12);
    a1 = v33;
  }

  swift_bridgeObjectRelease(a1);
  sub_6360();
}

void sub_4F80(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UsoIdentifier(0LL);
  __chkstk_darwin(v2);
  v48 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_62D0();
  __chkstk_darwin(v4);
  v49 = (char *)&v39 - v6;
  uint64_t v7 = &_swiftEmptyDictionarySingleton;
  v50 = &_swiftEmptyDictionarySingleton;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    uint64_t v9 = *(unsigned __int8 *)(v5 + 80);
    uint64_t v10 = (v9 + 32) & ~v9;
    uint64_t v11 = a1 + v10;
    uint64_t v12 = *(void *)(v5 + 72);
    uint64_t v45 = v10;
    uint64_t v46 = v5;
    uint64_t v42 = v9 | 7;
    uint64_t v43 = v12 + v10;
    v47 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v40 = a1;
    swift_bridgeObjectRetain(a1);
    __int128 v41 = xmmword_6FA70;
    uint64_t v44 = v2;
    while (1)
    {
      uint64_t v13 = v47(v49, v11, v2);
      unint64_t v14 = UsoIdentifier.interpretationGroup.getter(v13);
      int v15 = v14;
      uint64_t v16 = HIDWORD(v14) & 1;
      unint64_t v18 = sub_63E8(v16);
      uint64_t v19 = v7[2];
      BOOL v20 = (v17 & 1) == 0;
      uint64_t v21 = v19 + v20;
      if (__OFADD__(v19, v20)) {
        break;
      }
      char v22 = v17;
      if (v7[3] < v21)
      {
        sub_5FE0(v21, 1LL);
        uint64_t v7 = v50;
        unint64_t v23 = sub_63E8(v16);
        if ((v22 & 1) != (v24 & 1)) {
          goto LABEL_20;
        }
        unint64_t v18 = v23;
      }

      if ((v22 & 1) != 0)
      {
        uint64_t v25 = v7[7];
        uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v46 + 32);
        v26(v48, v49, v2);
        uint64_t v27 = *(void *)(v25 + 8 * v18);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v27);
        *(void *)(v25 + 8 * v18) = v27;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v27 = sub_63F4(0, *(void *)(v27 + 16) + 1LL);
          *(void *)(v25 + 8 * v18) = v27;
        }

        unint64_t v30 = *(void *)(v27 + 16);
        unint64_t v29 = *(void *)(v27 + 24);
        if (v30 >= v29 >> 1)
        {
          uint64_t v27 = sub_63F4(v29 > 1, v30 + 1);
          *(void *)(v25 + 8 * v18) = v27;
        }

        *(void *)(v27 + 16) = v30 + 1;
        uint64_t v31 = v27 + v45 + v30 * v12;
        uint64_t v2 = v44;
        v26((char *)v31, v48, v44);
      }

      else
      {
        uint64_t v32 = sub_41BC(&qword_9FEA0);
        uint64_t v33 = swift_allocObject(v32, v43, v42);
        *(_OWORD *)(v33 + 16) = v41;
        (*(void (**)(uint64_t, char *, uint64_t))(v46 + 32))(v33 + v45, v49, v2);
        v7[(v18 >> 6) + 8] |= 1LL << v18;
        uint64_t v34 = v7[6] + 8 * v18;
        *(_DWORD *)uint64_t v34 = v15;
        *(_BYTE *)(v34 + 4) = v16;
        *(void *)(v7[7] + 8 * v18) = v33;
        uint64_t v35 = v7[2];
        BOOL v36 = __OFADD__(v35, 1LL);
        uint64_t v37 = v35 + 1;
        if (v36) {
          goto LABEL_19;
        }
        v7[2] = v37;
      }

      v11 += v12;
      if (!--v8)
      {
        swift_bridgeObjectRelease(v40);
        goto LABEL_17;
      }
    }

    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    uint64_t v38 = sub_41BC(&qword_9FEA8);
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v38);
    __break(1u);
  }

  else
  {
LABEL_17:
    sub_6360();
  }

#error "5D28: call analysis failed (funcsize=801)"
uint64_t _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0( uint64_t a1,  uint64_t a2,  uint64_t a3,  uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56LL))();
}

uint64_t sub_5F1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_41BC((uint64_t *)&off_9FE90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_5F64(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_41BC(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8LL))(a1, v3);
  return a1;
}

int *sub_5FA0()
{
  unint64_t result = off_9FE98;
  if (!off_9FE98)
  {
    uint64_t v1 = type metadata accessor for IdentifierNamespace(255LL);
    unint64_t result = (int *)swift_getWitnessTable(&protocol conformance descriptor for IdentifierNamespace, v1);
    atomic_store((unint64_t)result, (unint64_t *)&off_9FE98);
  }

  return result;
}

unint64_t sub_5FE0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  if (*(void *)(*v2 + 24) <= a1) {
    uint64_t v6 = a1;
  }
  else {
    uint64_t v6 = *(void *)(*v2 + 24);
  }
  sub_41BC(&qword_9FEB0);
  uint64_t v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  if (*(void *)(v5 + 16))
  {
    uint64_t v26 = v3;
    uint64_t v8 = 1LL << *(_BYTE *)(v5 + 32);
    uint64_t v9 = (void *)(v5 + 64);
    uint64_t v10 = -1LL;
    if (v8 < 64) {
      uint64_t v10 = ~(-1LL << v8);
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v8 + 63) >> 6;
    unint64_t result = swift_retain(v5);
    int64_t v14 = 0LL;
    if (!v11) {
      goto LABEL_9;
    }
LABEL_8:
    unint64_t v15 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    for (unint64_t i = v15 | (v14 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v14 << 6))
    {
      uint64_t v20 = *(void *)(v5 + 56);
      uint64_t v21 = (unsigned int *)(*(void *)(v5 + 48) + 8 * i);
      uint64_t v22 = *v21;
      unsigned __int8 v23 = *((_BYTE *)v21 + 4);
      uint64_t v24 = *(void *)(v20 + 8 * i);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain(*(void *)(v20 + 8 * i));
      }
      unint64_t result = sub_61E0(v22 | ((unint64_t)v23 << 32), v24, v7);
      if (v11) {
        goto LABEL_8;
      }
LABEL_9:
      int64_t v17 = v14 + 1;
      if (__OFADD__(v14, 1LL))
      {
        __break(1u);
LABEL_32:
        __break(1u);
        return result;
      }

      if (v17 >= v12) {
        goto LABEL_25;
      }
      unint64_t v18 = v9[v17];
      ++v14;
      if (!v18)
      {
        int64_t v14 = v17 + 1;
        if (v17 + 1 >= v12) {
          goto LABEL_25;
        }
        unint64_t v18 = v9[v14];
        if (!v18)
        {
          int64_t v19 = v17 + 2;
          if (v19 >= v12)
          {
LABEL_25:
            swift_release(v5);
            uint64_t v3 = v26;
            if ((a2 & 1) != 0)
            {
              uint64_t v25 = 1LL << *(_BYTE *)(v5 + 32);
              if (v25 > 63) {
                sub_5E2F8(0LL, (unint64_t)(v25 + 63) >> 6, (void *)(v5 + 64));
              }
              else {
                *uint64_t v9 = -1LL << v25;
              }
              *(void *)(v5 + 16) = 0LL;
            }

            break;
          }

          unint64_t v18 = v9[v19];
          if (!v18)
          {
            while (1)
            {
              int64_t v14 = v19 + 1;
              if (__OFADD__(v19, 1LL)) {
                goto LABEL_32;
              }
              if (v14 >= v12) {
                goto LABEL_25;
              }
              unint64_t v18 = v9[v14];
              ++v19;
              if (v18) {
                goto LABEL_20;
              }
            }
          }

          int64_t v14 = v19;
        }
      }

LABEL_20:
      unint64_t v11 = (v18 - 1) & v18;
    }
  }

  unint64_t result = swift_release(v5);
  uint64_t *v3 = v7;
  return result;
}

unint64_t sub_61E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((a1 & 0x100000000LL) != 0)
  {
    Hasher._combine(_:)(0);
  }

  else
  {
    Hasher._combine(_:)(1u);
    Hasher._combine(_:)(a1);
  }

  Swift::Int v6 = Hasher._finalize()();
  unint64_t result = _HashTable.nextHole(atOrAfter:)(v6 & ~(-1LL << *(_BYTE *)(a3 + 32)), a3 + 64, ~(-1LL << *(_BYTE *)(a3 + 32)));
  *(void *)(a3 + 64 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << result;
  uint64_t v8 = *(void *)(a3 + 48) + 8 * result;
  *(_DWORD *)uint64_t v8 = a1;
  *(_BYTE *)(v8 + 4) = BYTE4(a1) & 1;
  *(void *)(*(void *)(a3 + 56) + 8 * result) = a2;
  ++*(void *)(a3 + 16);
  return result;
}

uint64_t sub_62B4(uint64_t a1)
{
  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(a1, 1LL, v1);
}

  ;
}

uint64_t sub_62DC(uint64_t a1)
{
  return sub_5F64(a1, v1);
}

uint64_t sub_62E4(uint64_t a1)
{
  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(a1, 0LL, 1LL, v1);
}

  ;
}

  ;
}

uint64_t sub_6328(uint64_t a1)
{
  return sub_5F64(a1, v1);
}

uint64_t sub_6330()
{
  return (*(uint64_t (**)(void, uint64_t, uint64_t))(*(void *)(v2 - 160) + 32LL))( *(void *)(v2 - 184),  v0,  v1);
}

uint64_t sub_634C(uint64_t a1, uint64_t a2)
{
  return dispatch thunk of static Equatable.== infix(_:_:)(a1, a2, v2);
}

uint64_t sub_6358(uint64_t a1)
{
  return sub_5F64(a1, v1);
}

  ;
}

uint64_t sub_6378()
{
  return (*(uint64_t (**)(void))(v0 - 144))();
}

uint64_t sub_6380()
{
  return swift_bridgeObjectRelease(*(void *)(v0 - 272));
}

uint64_t sub_638C()
{
  return v0(v2, v1);
}

uint64_t sub_63A0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 - 112))(a1, a2, v2);
}

uint64_t sub_63AC(uint64_t a1)
{
  return sub_5F1C(a1, v1);
}

uint64_t sub_63B4(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, void, uint64_t))(v2 - 136))(a1, *(unsigned int *)(v2 - 124), v1);
}

uint64_t sub_63C4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  return a2(a1, v2);
}

uint64_t sub_63CC@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  return a2(a1, v2, v3);
}

uint64_t sub_63D8(uint64_t a1)
{
  return sub_5F64(a1, v1);
}

uint64_t sub_63E0()
{
  return (*(uint64_t (**)(void))(v0 - 168))();
}

unint64_t sub_63E8@<X0>(uint64_t a1@<X8>)
{
  return sub_4AC94(v1 | (a1 << 32));
}

uint64_t sub_63F4(char a1, int64_t a2)
{
  return sub_5D420(a1, a2, 1, v2);
}

uint64_t sub_6400(uint64_t a1)
{
  return sub_5F64(a1, v1);
}

uint64_t sub_6408()
{
  return swift_bridgeObjectRelease(*(void *)(v0 - 344));
}

uint64_t sub_6414()
{
  return 1LL;
}

uint64_t sub_641C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BaseFlow();
  unint64_t v5 = sub_663C();
  return Flow.deferToExecuteAsync(_:)(a1, a2, v4, v5);
}

uint64_t sub_6474(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return swift_task_switch(sub_648C, 0LL, 0LL);
}

uint64_t sub_648C()
{
  return sub_6698(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_64B4()
{
  return swift_deallocClassInstance(v0, 16LL, 7LL);
}

uint64_t type metadata accessor for BaseFlow()
{
  return objc_opt_self(&OBJC_CLASS____TtC35HomeCommunicationFlowDelegatePlugin8BaseFlow);
}

uint64_t sub_64E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc(async function pointer to Flow.onAsync(input:)[1]);
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_654C;
  return Flow.onAsync(input:)(a1, a2, a3);
}

uint64_t sub_654C(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(v1 + 8))(a1);
}

uint64_t sub_6580(uint64_t a1, uint64_t a2)
{
  return sub_641C(a1, a2);
}

uint64_t sub_65A0(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc(dword_9FEE4);
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_65F0;
  return sub_6474(a1);
}

uint64_t sub_65F0()
{
  return sub_6698(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_6614(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for BaseFlow();
  return Flow<>.exitValue.getter(v3, a2);
}

unint64_t sub_663C()
{
  unint64_t result = qword_9FF80;
  if (!qword_9FF80)
  {
    uint64_t v1 = type metadata accessor for BaseFlow();
    unint64_t result = swift_getWitnessTable(&unk_6FA90, v1);
    atomic_store(result, (unint64_t *)&qword_9FF80);
  }

  return result;
}

uint64_t sub_6678()
{
  uint64_t v2 = *v0;
  *(void *)(v1 - 8) = *v0;
  uint64_t v3 = *(void *)(v2 + 16);
  *(void *)(v1 - 8) = *v0;
  return swift_task_dealloc(v3);
}

uint64_t sub_6698(uint64_t (*a1)(void))
{
  return a1();
}

HomeCommunicationFlowDelegatePlugin::ABCErrorType_optional __swiftcall ABCErrorType.init(rawValue:)( Swift::String rawValue)
{
  object = rawValue._object;
  v3._countAndFlagsBits = rawValue._countAndFlagsBits;
  v3._object = object;
  _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_92318, v3);
  sub_6C14();
  if (v1 == 1) {
    v4.value = HomeCommunicationFlowDelegatePlugin_ABCErrorType_error;
  }
  else {
    v4.value = HomeCommunicationFlowDelegatePlugin_ABCErrorType_unknownDefault;
  }
  if (v1) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t ABCErrorType.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0) {
    return 0x726F727265LL;
  }
  else {
    return 0x6775626564LL;
  }
}

uint64_t sub_6714(char *a1, char *a2)
{
  return sub_1E00C(*a1, *a2);
}

void sub_6720()
{
}

uint64_t sub_6728(uint64_t a1)
{
  return sub_1E534(a1, *v1);
}

void sub_6730(uint64_t a1)
{
}

HomeCommunicationFlowDelegatePlugin::ABCErrorType_optional sub_6738@<W0>( Swift::String *a1@<X0>, HomeCommunicationFlowDelegatePlugin::ABCErrorType_optional *a2@<X8>)
{
  result.value = ABCErrorType.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t sub_6764@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ABCErrorType.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

HomeCommunicationFlowDelegatePlugin::ABCErrorSubType_optional __swiftcall ABCErrorSubType.init(rawValue:)( Swift::String rawValue)
{
  object = rawValue._object;
  v3._countAndFlagsBits = rawValue._countAndFlagsBits;
  v3._object = object;
  _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_92368, v3);
  sub_6C14();
  if (v1 >= 4) {
    return (HomeCommunicationFlowDelegatePlugin::ABCErrorSubType_optional)4;
  }
  else {
    return (HomeCommunicationFlowDelegatePlugin::ABCErrorSubType_optional)v1;
  }
}

uint64_t ABCErrorSubType.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_6808 + 4 * byte_6FAF0[a1]))( 0xD00000000000001ELL,  0x80000000000759A0LL);
}

unint64_t sub_6808()
{
  return 0xD000000000000010LL;
}

uint64_t sub_6830()
{
  return 0x636972656E6567LL;
}

unint64_t sub_684C()
{
  unint64_t result = qword_9FF88;
  if (!qword_9FF88)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for ABCErrorType, &type metadata for ABCErrorType);
    atomic_store(result, (unint64_t *)&qword_9FF88);
  }

  return result;
}

void sub_6888(char *a1)
{
}

unint64_t sub_6898()
{
  unint64_t result = qword_9FF90[0];
  if (!qword_9FF90[0])
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for ABCErrorSubType,  &type metadata for ABCErrorSubType);
    atomic_store(result, qword_9FF90);
  }

  return result;
}

void sub_68D4()
{
}

void sub_68DC(uint64_t a1)
{
}

void sub_68E4(uint64_t a1)
{
}

HomeCommunicationFlowDelegatePlugin::ABCErrorSubType_optional sub_68EC@<W0>( Swift::String *a1@<X0>, HomeCommunicationFlowDelegatePlugin::ABCErrorSubType_optional *a2@<X8>)
{
  result.value = ABCErrorSubType.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t sub_6918@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ABCErrorSubType.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

_BYTE *initializeBufferWithCopyOfBuffer for ABCErrorType(_BYTE *result, _BYTE *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ABCErrorType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }

  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 1) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }

    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }

    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }

    int v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }

LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v5 = v6 - 2;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v5 = v6 - 4;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v5 = v6 - 3;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v5 = v6 - 7;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x5F;
  int v5 = v6 - 95;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v5 = v6 - 6;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xF;
  int v5 = v6 - 15;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x1F;
  int v5 = v6 - 31;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v5 = v6 - 5;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ABCErrorType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_6A24 + 4 * byte_6FAF9[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_6A58 + 4 * byte_6FAF4[v4]))();
}

uint64_t sub_6A58(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_6A60(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x6A68LL);
  }
  return result;
}

uint64_t sub_6A74(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x6A7CLL);
  }
  *(_BYTE *)uint64_t result = a2 + 1;
  return result;
}

uint64_t sub_6A80(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_6A88(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_6A94(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_6A9C(_BYTE *result, char a2)
{
  *uint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ABCErrorType()
{
  return &type metadata for ABCErrorType;
}

uint64_t getEnumTagSinglePayload for ABCErrorSubType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }

  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 3) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }

    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }

    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }

    int v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }

uint64_t storeEnumTagSinglePayload for ABCErrorSubType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFC) {
    return ((uint64_t (*)(void))((char *)&loc_6B8C + 4 * byte_6FB03[v4]))();
  }
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_6BC0 + 4 * byte_6FAFE[v4]))();
}

uint64_t sub_6BC0(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_6BC8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x6BD0LL);
  }
  return result;
}

uint64_t sub_6BDC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x6BE4LL);
  }
  *(_BYTE *)uint64_t result = a2 + 3;
  return result;
}

uint64_t sub_6BE8(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_6BF0(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_6BFC(_BYTE *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for ABCErrorSubType()
{
  return &type metadata for ABCErrorSubType;
}

uint64_t sub_6C14()
{
  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_6C20(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL);
}

void sub_6C78( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10 = v27;
  uint64_t v11 = sub_7C90();
  char v12 = v33;
  if ((v33 & 1) != 0)
  {
    swift_errorRetain(v27);
  }

  else
  {
    v26[0] = v27;
    v26[1] = v28;
    v26[2] = v29;
    v26[3] = v30;
    v26[4] = v31;
    v26[5] = v32;
    v26[6] = v8;
    v26[7] = v9;
    sub_7CA4(v11, (void (*)(void, void, void, void, void, void, void, void, char))sub_7BCC);
    sub_6D2C(v26, v21, v22, &v25);
    sub_7CA4(v20, (void (*)(void, void, void, void, void, void, void, void, char))sub_7C20);
    uint64_t v10 = v25;
  }

  sub_7CCC(v10, v13, v14, v15, v16, v17, v18, v19, v21, v22, v23, v24);
  sub_7AF8(v10, v12);
  sub_7C74();
}

void sub_6D2C(uint64_t *a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v5 = a1[1];
  uint64_t v63 = *a1;
  uint64_t v6 = a1[3];
  uint64_t v65 = a1[2];
  uint64_t v56 = a1[5];
  uint64_t v58 = a1[4];
  uint64_t v7 = a1[7];
  uint64_t v51 = a1[6];
  if (qword_9F848 != -1) {
    swift_once(&qword_9F848, sub_21A64);
  }
  uint64_t v8 = (void *)static CasinoFactory.makeSendCommandsFromMachineUtterance(machineUtterance:)(qword_A3EF8, qword_A3F00);
  if (qword_9F850 != -1) {
    swift_once(&qword_9F850, sub_21A84);
  }
  uint64_t v69 = a2;
  unint64_t v52 = v7;
  v53 = (void *)static CasinoFactory.makeSendCommandsFromMachineUtterance(machineUtterance:)(qword_A3F08, qword_A3F10);
  if (qword_9F858 != -1) {
    swift_once(&qword_9F858, sub_21B44);
  }
  v60 = (void *)static CasinoFactory.makeSendCommandsFromMachineUtterance(machineUtterance:)(qword_A3F18, unk_A3F20);
  sub_7B50(0LL, (unint64_t *)&qword_A2180, &OBJC_CLASS___SAUIConfirmationOption_ptr);
  swift_bridgeObjectRetain(v5);
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(SAUIConfirmationOptionConfirmationOptionTypeCONFIRMValue);
  uint64_t v11 = v10;
  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(SAUIConfirmationOptionIconTypeNewAnnouncementValue);
  uint64_t v14 = v13;
  uint64_t v15 = sub_41BC(&qword_A2100);
  uint64_t v16 = swift_allocObject(v15, 40LL, 7LL);
  *(_OWORD *)(v16 + 16) = xmmword_6FCA0;
  *(void *)(v16 + 32) = v8;
  uint64_t v71 = v16;
  specialized Array._endMutation()(v16, v17);
  id v67 = v8;
  id v55 = sub_3C704(v63, v5, v9, v11, v12, v14, v71);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v5);
  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(SAUIConfirmationOptionConfirmationOptionTypeREADValue);
  uint64_t v20 = v19;
  uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(SAUIConfirmationOptionIconTypeReadingValue);
  uint64_t v23 = v22;
  uint64_t v24 = swift_allocObject(v15, 40LL, 7LL);
  *(_OWORD *)(v24 + 16) = xmmword_6FCA0;
  *(void *)(v24 + 32) = v53;
  uint64_t v71 = v24;
  specialized Array._endMutation()(v24, v25);
  id v64 = v53;
  id v54 = sub_3C704(v65, v6, v18, v20, v21, v23, v71);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v56);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v6);
  uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(SAUIConfirmationOptionsCancelTriggerDenyValue);
  uint64_t v28 = v27;
  uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(SAUIConfirmationOptionIconTypeCancelValue);
  uint64_t v31 = v30;
  uint64_t v66 = v15;
  uint64_t v32 = swift_allocObject(v15, 40LL, 7LL);
  *(_OWORD *)(v32 + 16) = xmmword_6FCA0;
  *(void *)(v32 + 32) = v60;
  uint64_t v71 = v32;
  specialized Array._endMutation()(v32, v33);
  id v61 = v60;
  id v34 = sub_3C704(v58, v56, v26, v28, v29, v31, v71);
  sub_7B50(0LL, &qword_A0020, &OBJC_CLASS___SAUIConfirmationOptions_ptr);
  id v35 = v34;
  id v36 = v54;
  id v59 = v55;
  id v57 = sub_3C7C0(v35, v36, v59);
  if (a3)
  {
    unint64_t v37 = a3;
  }

  else
  {
    swift_bridgeObjectRetain(v5);
    swift_bridgeObjectRetain(v6);
    unint64_t v37 = v52;
    swift_bridgeObjectRetain(v52);
    swift_bridgeObjectRelease(v5);
    swift_bridgeObjectRelease(v6);
    uint64_t v69 = v51;
  }

  uint64_t v38 = qword_9F820;
  swift_bridgeObjectRetain(a3);
  if (v38 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v39 = type metadata accessor for Logger(0LL);
  sub_4870(v39, (uint64_t)qword_A3EB0);
  uint64_t v40 = swift_bridgeObjectRetain_n(v37, 2LL);
  __int128 v41 = (os_log_s *)Logger.logObject.getter(v40);
  os_log_type_t v42 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v41, v42))
  {
    uint64_t v43 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v44 = swift_slowAlloc(32LL, -1LL);
    uint64_t v71 = v44;
    *(_DWORD *)uint64_t v43 = 136315138;
    swift_bridgeObjectRetain(v37);
    uint64_t v45 = v69;
    uint64_t v70 = sub_68DC4(v69, v37, &v71);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v70, &v71, v43 + 4, v43 + 12);
    swift_bridgeObjectRelease_n(v37, 3LL);
    _os_log_impl( &dword_0,  v41,  v42,  "Making a CarPlay snippet to stop announcements with an announcer name: %s.",  v43,  0xCu);
    swift_arrayDestroy(v44, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v44, -1LL, -1LL);
    swift_slowDealloc(v43, -1LL, -1LL);
  }

  else
  {

    swift_bridgeObjectRelease_n(v37, 2LL);
    uint64_t v45 = v69;
  }

  uint64_t v46 = swift_allocObject(v66, 40LL, 7LL);
  *(_OWORD *)(v46 + 16) = xmmword_6FCA0;
  sub_7B50(0LL, &qword_A0028, &OBJC_CLASS___SAHomeCommunicationAnnouncementSnippet_ptr);
  id v47 = v57;
  id v48 = sub_3C980(v45, v37, v47);
  *(void *)(v46 + 32) = v48;
  uint64_t v71 = v46;
  specialized Array._endMutation()(v48, v49);
  uint64_t v50 = v71;

  *a4 = v50;
}

void sub_7328( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10 = v28;
  uint64_t v11 = sub_7C90();
  char v12 = v34;
  if ((v34 & 1) != 0)
  {
    swift_errorRetain(v28);
  }

  else
  {
    v27[0] = v28;
    v27[1] = v29;
    v27[2] = v30;
    v27[3] = v31;
    v27[4] = v32;
    v27[5] = v33;
    v27[6] = v8;
    v27[7] = v9;
    sub_7CA4(v11, (void (*)(void, void, void, void, void, void, void, void, char))sub_7BCC);
    sub_73DC(v27, v23, &v26);
    sub_7CA4(v20, (void (*)(void, void, void, void, void, void, void, void, char))sub_7C20);
    uint64_t v10 = v26;
  }

  sub_7CCC(v10, v13, v14, v15, v16, v17, v18, v19, v22, (uint64_t)v23, v24, v25);
  sub_7AF8(v10, v12);
  sub_7C74();
}

void sub_73DC(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[3];
  uint64_t v67 = *a1;
  uint64_t v69 = a1[2];
  uint64_t v60 = a1[4];
  uint64_t v59 = a1[5];
  unint64_t v55 = a1[7];
  uint64_t v56 = a1[6];
  if (qword_9F848 != -1) {
    swift_once(&qword_9F848, sub_21A64);
  }
  uint64_t v65 = v4;
  uint64_t v5 = (void *)static CasinoFactory.makeSendCommandsFromMachineUtterance(machineUtterance:)(qword_A3EF8, qword_A3F00);
  if (qword_9F840 != -1) {
    swift_once(&qword_9F840, sub_21A4C);
  }
  uint64_t v6 = (void *)static CasinoFactory.makeSendCommandsFromMachineUtterance(machineUtterance:)(qword_A3EE8, qword_A3EF0);
  if (qword_9F858 != -1) {
    swift_once(&qword_9F858, sub_21B44);
  }
  uint64_t v63 = (void *)static CasinoFactory.makeSendCommandsFromMachineUtterance(machineUtterance:)(qword_A3F18, unk_A3F20);
  sub_7B50(0LL, (unint64_t *)&qword_A2180, &OBJC_CLASS___SAUIConfirmationOption_ptr);
  swift_bridgeObjectRetain(v3);
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(SAUIConfirmationOptionConfirmationOptionTypeCONFIRMValue);
  uint64_t v9 = v8;
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(SAUIConfirmationOptionIconTypeNewAnnouncementValue);
  uint64_t v12 = v11;
  uint64_t v13 = sub_41BC(&qword_A2100);
  uint64_t v14 = swift_allocObject(v13, 40LL, 7LL);
  *(_OWORD *)(v14 + 16) = xmmword_6FCA0;
  *(void *)(v14 + 32) = v5;
  uint64_t v73 = v14;
  specialized Array._endMutation()(v14, v15);
  id v70 = v5;
  id v58 = sub_3C704(v67, v3, v7, v9, v10, v12, v73);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v65);
  swift_bridgeObjectRelease(v3);
  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(SAUIConfirmationOptionConfirmationOptionTypeDENYValue);
  uint64_t v18 = v17;
  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(SAUIConfirmationOptionIconTypeStopValue);
  uint64_t v21 = v20;
  uint64_t v22 = swift_allocObject(v13, 40LL, 7LL);
  *(_OWORD *)(v22 + 16) = xmmword_6FCA0;
  *(void *)(v22 + 32) = v6;
  uint64_t v73 = v22;
  specialized Array._endMutation()(v22, v23);
  id v68 = v6;
  id v57 = sub_3C704(v69, v65, v16, v18, v19, v21, v73);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v65);
  swift_bridgeObjectRetain(v59);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v65);
  uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(SAUIConfirmationOptionsCancelTriggerDenyValue);
  uint64_t v26 = v25;
  uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(SAUIConfirmationOptionIconTypeCancelValue);
  uint64_t v29 = v28;
  uint64_t v30 = swift_allocObject(v13, 40LL, 7LL);
  *(_OWORD *)(v30 + 16) = xmmword_6FCA0;
  *(void *)(v30 + 32) = v63;
  uint64_t v73 = v30;
  specialized Array._endMutation()(v30, v31);
  id v64 = v63;
  id v32 = sub_3C704(v60, v59, v24, v26, v27, v29, v73);
  id v33 = a2;
  uint64_t v34 = sub_5CAAC();

  uint64_t v35 = sub_5CFB4(v34);
  unint64_t v37 = v36;
  swift_bridgeObjectRelease(v34);
  if (!v37)
  {
    swift_bridgeObjectRetain(v3);
    swift_bridgeObjectRetain(v65);
    unint64_t v37 = v55;
    swift_bridgeObjectRetain(v55);
    swift_bridgeObjectRelease(v3);
    swift_bridgeObjectRelease(v65);
    uint64_t v35 = v56;
  }

  sub_7B50(0LL, &qword_A0020, &OBJC_CLASS___SAUIConfirmationOptions_ptr);
  id v38 = v32;
  id v39 = v57;
  id v40 = v58;
  id v41 = sub_3C7C0(v38, v39, v40);
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v42 = type metadata accessor for Logger(0LL);
  sub_4870(v42, (uint64_t)qword_A3EB0);
  uint64_t v43 = swift_bridgeObjectRetain_n(v37, 2LL);
  uint64_t v44 = (os_log_s *)Logger.logObject.getter(v43);
  os_log_type_t v45 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v44, v45))
  {
    id v66 = v40;
    uint64_t v46 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    id v62 = v41;
    uint64_t v47 = swift_slowAlloc(32LL, -1LL);
    uint64_t v73 = v47;
    *(_DWORD *)uint64_t v46 = 136315138;
    swift_bridgeObjectRetain(v37);
    uint64_t v72 = sub_68DC4(v35, v37, &v73);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, &v73, v46 + 4, v46 + 12);
    swift_bridgeObjectRelease_n(v37, 3LL);
    _os_log_impl( &dword_0,  v44,  v45,  "Making a CarPlay snippet to play announcements with an announcer name: %s.",  v46,  0xCu);
    swift_arrayDestroy(v47, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v48 = v47;
    id v41 = v62;
    swift_slowDealloc(v48, -1LL, -1LL);
    uint64_t v49 = v46;
    id v40 = v66;
    swift_slowDealloc(v49, -1LL, -1LL);
  }

  else
  {

    swift_bridgeObjectRelease_n(v37, 2LL);
  }

  uint64_t v50 = swift_allocObject(v13, 40LL, 7LL);
  *(_OWORD *)(v50 + 16) = xmmword_6FCA0;
  sub_7B50(0LL, &qword_A0028, &OBJC_CLASS___SAHomeCommunicationAnnouncementSnippet_ptr);
  id v51 = v41;
  id v52 = sub_3C980(v35, v37, v51);
  *(void *)(v50 + 32) = v52;
  uint64_t v73 = v50;
  specialized Array._endMutation()(v52, v53);
  uint64_t v54 = v73;

  *a3 = v54;
}

void sub_79E8()
{
}

void sub_7A04()
{
}

uint64_t sub_7A30()
{
  return sub_423C((void *)((char *)v0 + *(void *)(qword_A3DE8 + *v0 + 24)));
}

void *sub_7A78()
{
  uint64_t v0 = (void *)DefaultAceViewProvider.deinit();
  swift_release(*(void *)((char *)v0 + *(void *)(qword_A3DE8 + *v0 + 16)));
  sub_423C((void *)((char *)v0 + *(void *)(qword_A3DE8 + *v0 + 24)));
  return v0;
}

uint64_t sub_7AD0()
{
  uint64_t v0 = sub_7A78();
  return swift_deallocClassInstance(v0, 64LL, 7LL);
}

uint64_t type metadata accessor for CarPlayAceViewProvider(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_425C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CarPlayAceViewProvider);
}

uint64_t sub_7AF8(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0) {
    return swift_errorRelease();
  }
  else {
    return swift_bridgeObjectRelease(a1);
  }
}

uint64_t sub_7B04( uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, char))
{
  char v4 = *(_BYTE *)(a1 + 64);
  a2( *(void *)a1,  *(void *)(a1 + 8),  *(void *)(a1 + 16),  *(void *)(a1 + 24),  *(void *)(a1 + 32),  *(void *)(a1 + 40),  *(void *)(a1 + 48),  *(void *)(a1 + 56),  v4);
  return a1;
}

uint64_t sub_7B50(uint64_t a1, unint64_t *a2, void *a3)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t v5 = objc_opt_self(*a3);
    uint64_t result = swift_getObjCClassMetadata(v5);
    atomic_store(result, a2);
  }

  return result;
}

uint64_t sub_7B88(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_41BC(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32LL))(a2, a1, v5);
  return a2;
}

uint64_t sub_7BCC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if ((a9 & 1) != 0) {
    return swift_errorRetain(a1);
  }
  uint64_t v13 = sub_7CB8(a1, a2);
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRetain(v10);
  return swift_bridgeObjectRetain(v9);
}

uint64_t sub_7C20( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if ((a9 & 1) != 0) {
    return swift_errorRelease(a1);
  }
  uint64_t v13 = sub_7CB8(a1, a2);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v11);
  swift_bridgeObjectRelease(v10);
  return swift_bridgeObjectRelease(v9);
}

  ;
}

uint64_t sub_7C90()
{
  return sub_7B88(v1, v2 - 160, v0);
}

uint64_t sub_7CA4( uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, char))
{
  return sub_7B04(v2, a2);
}

uint64_t sub_7CAC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  return sub_7B88(a1, (uint64_t)va, v14);
}

uint64_t sub_7CB8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_7CCC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t (*a12)(uint64_t, uint64_t))
{
  return a12(a1, v12);
}

void property wrapper backing initializer of CarPlayIntercomControlModel.playStopText( uint64_t a1, uint64_t a2)
{
  v2[0] = a1;
  v2[1] = a2;
  Loggable.init(wrappedValue:)(v2, &type metadata for String);
  sub_9334();
}

uint64_t CarPlayIntercomControlModel.playStopText.getter()
{
  uint64_t v0 = sub_41BC(&qword_A0038);
  Loggable.wrappedValue.getter(&v2, v0);
  return v2;
}

void CarPlayIntercomControlModel.playStopText.setter(uint64_t a1)
{
  uint64_t v1 = sub_41BC(&qword_A0038);
  sub_9328(v1, v2, v3, v4, v5, v6, v7, v8, a1);
  sub_9334();
}

void CarPlayIntercomControlModel.playStopText.modify()
{
  uint64_t v1 = sub_92D8();
  void *v0 = v1;
  uint64_t v2 = sub_41BC(&qword_A0038);
  v1[4] = sub_92E4(v2);
  sub_9304();
}

uint64_t CarPlayIntercomControlModel.replyText.getter()
{
  uint64_t v0 = sub_41BC(&qword_A0038);
  Loggable.wrappedValue.getter(&v2, v0);
  return v2;
}

uint64_t type metadata accessor for CarPlayIntercomControlModel(uint64_t a1)
{
  uint64_t result = qword_A00E8;
  if (!qword_A00E8) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CarPlayIntercomControlModel);
  }
  return result;
}

void CarPlayIntercomControlModel.replyText.setter(uint64_t a1)
{
  uint64_t v1 = sub_41BC(&qword_A0038);
  sub_9328(v1, v2, v3, v4, v5, v6, v7, v8, a1);
  sub_935C();
}

void CarPlayIntercomControlModel.replyText.modify()
{
  uint64_t v1 = sub_92D8();
  void *v0 = v1;
  sub_9290();
  uint64_t v2 = sub_41BC(&qword_A0038);
  v1[4] = sub_92E4(v2);
  sub_9304();
}

void property wrapper backing initializer of CarPlayIntercomControlModel.isPlaying(char a1)
{
  char v1 = a1;
  Loggable.init(wrappedValue:)(&v1, &type metadata for Bool);
  sub_9334();
}

uint64_t CarPlayIntercomControlModel.isPlaying.getter()
{
  uint64_t v0 = sub_41BC(&qword_A0040);
  Loggable.wrappedValue.getter(&v2, v0);
  return v2;
}

void CarPlayIntercomControlModel.isPlaying.setter(char a1)
{
  char v2 = a1;
  sub_9290();
  uint64_t v1 = sub_41BC(&qword_A0040);
  Loggable.wrappedValue.setter(&v2, v1);
  sub_935C();
}

void CarPlayIntercomControlModel.isPlaying.modify()
{
  uint64_t v1 = sub_92D8();
  void *v0 = v1;
  sub_9290();
  uint64_t v2 = sub_41BC(&qword_A0040);
  v1[4] = sub_92E4(v2);
  sub_9304();
}

void sub_7F94(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 32LL))(*a1, 0LL);
  free(v1);
}

void *CarPlayIntercomControlModel.responseViewId.unsafeMutableAddressor()
{
  return &static CarPlayIntercomControlModel.responseViewId;
}

unint64_t static CarPlayIntercomControlModel.responseViewId.getter()
{
  return 0xD00000000000002BLL;
}

uint64_t CarPlayIntercomControlModel.init(playStopText:replyText:isPlaying:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char v8 = a5;
  sub_9350(a1, a2, a3, a4, a5, a6, a7, a8, a1);
  uint64_t v11 = sub_9290();
  v20[1] = a4;
  sub_9350(v11, v12, v13, v14, v15, v16, v17, v18, a3);
  LOBYTE(v20[0]) = v8;
  return Loggable.init(wrappedValue:)(v20, &type metadata for Bool);
}

BOOL sub_8070(char a1, char a2)
{
  return a1 == a2;
}

void sub_8080(uint64_t a1, unsigned __int8 a2)
{
}

uint64_t sub_80A4(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x706F745379616C70LL && a2 == 0xEC00000074786554LL;
  if (v3
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0x706F745379616C70LL, 0xEC00000074786554LL, a1, a2, 0LL) & 1) != 0)
  {
    swift_bridgeObjectRelease(a2);
    return 0LL;
  }

  else
  {
    BOOL v6 = a1 == 0x786554796C706572LL && a2 == 0xE900000000000074LL;
    if (v6
      || (_stringCompareWithSmolCheck(_:_:expecting:)(0x786554796C706572LL, 0xE900000000000074LL, a1, a2, 0LL) & 1) != 0)
    {
      swift_bridgeObjectRelease(a2);
      return 1LL;
    }

    else if (a1 == 0x6E6979616C507369LL && a2 == 0xE900000000000067LL)
    {
      swift_bridgeObjectRelease(a2);
      return 2LL;
    }

    else
    {
      char v8 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6E6979616C507369LL, 0xE900000000000067LL, a1, a2, 0LL);
      swift_bridgeObjectRelease(a2);
      if ((v8 & 1) != 0) {
        return 2LL;
      }
      else {
        return 3LL;
      }
    }
  }

uint64_t sub_81FC()
{
  return 3LL;
}

Swift::Int sub_8204(unsigned __int8 a1)
{
  return Hasher._finalize()();
}

uint64_t sub_8248()
{
  return 0LL;
}

uint64_t sub_8254(char a1)
{
  return *(void *)&aPlaystopreplyt[8 * a1];
}

BOOL sub_8274(char *a1, char *a2)
{
  return sub_8070(*a1, *a2);
}

Swift::Int sub_8280()
{
  return sub_8204(*v0);
}

void sub_8288(uint64_t a1)
{
}

Swift::Int sub_8290()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

uint64_t sub_82D0()
{
  return sub_8254(*v0);
}

uint64_t sub_82D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = sub_80A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_82FC()
{
  return sub_8248();
}

uint64_t sub_8318@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result = sub_81FC();
  *a1 = result;
  return result;
}

uint64_t sub_833C(uint64_t a1)
{
  unint64_t v2 = sub_8528();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_8364(uint64_t a1)
{
  unint64_t v2 = sub_8528();
  return CodingKey.debugDescription.getter(a1, v2);
}

void CarPlayIntercomControlModel.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_41BC(&qword_A0048);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_9298();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  sub_8504(a1, v10);
  unint64_t v12 = sub_8528();
  dispatch thunk of Encoder.container<A>(keyedBy:)( &type metadata for CarPlayIntercomControlModel.CodingKeys,  &type metadata for CarPlayIntercomControlModel.CodingKeys,  v12,  v10,  v11);
  char v20 = 0;
  sub_41BC(&qword_A0038);
  sub_8930(&qword_A0058);
  sub_92A8(v3, (uint64_t)&v20);
  if (!v2)
  {
    uint64_t v13 = type metadata accessor for CarPlayIntercomControlModel(0LL);
    uint64_t v14 = v3 + *(int *)(v13 + 20);
    char v19 = 1;
    sub_92A8(v14, (uint64_t)&v19);
    uint64_t v15 = v3 + *(int *)(v13 + 24);
    char v18 = 2;
    uint64_t v16 = sub_41BC(&qword_A0040);
    sub_85A8(&qword_A0060);
    KeyedEncodingContainer.encode<A>(_:forKey:)(v15, &v18, v5, v16, v17);
  }

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  sub_92C0();
}

void *sub_8504(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80LL) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80LL) + 16LL) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80LL)));
  return result;
}

unint64_t sub_8528()
{
  unint64_t result = qword_A0050;
  if (!qword_A0050)
  {
    unint64_t result = swift_getWitnessTable(&unk_6FE80, &type metadata for CarPlayIntercomControlModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_A0050);
  }

  return result;
}

uint64_t sub_8564(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2( 255LL,  (char *)a1 + (int)result,  -(result >> 32),  0LL,  0LL);
    *a1 = result;
  }

  return result;
}

void sub_85A8(unint64_t *a1)
{
  if (!*a1)
  {
    uint64_t v2 = sub_8564(&qword_A0040);
    atomic_store(sub_9310(v2, v2), a1);
  }

  sub_935C();
}

void CarPlayIntercomControlModel.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v43 = sub_41BC(&qword_A0040);
  uint64_t v41 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  sub_9298();
  uint64_t v44 = v4 - v3;
  uint64_t v5 = sub_41BC(&qword_A0038);
  uint64_t v47 = *(void *)(v5 - 8);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  os_log_type_t v45 = (char *)&v39 - v9;
  uint64_t v46 = sub_41BC(&qword_A0068);
  uint64_t v10 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  sub_9298();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = type metadata accessor for CarPlayIntercomControlModel(0LL);
  __chkstk_darwin(v14);
  sub_9298();
  uint64_t v17 = v16 - v15;
  uint64_t v19 = a1[3];
  uint64_t v18 = a1[4];
  uint64_t v49 = a1;
  sub_8504(a1, v19);
  unint64_t v20 = sub_8528();
  uint64_t v48 = v13;
  uint64_t v21 = v50;
  dispatch thunk of Decoder.container<A>(keyedBy:)( &type metadata for CarPlayIntercomControlModel.CodingKeys,  &type metadata for CarPlayIntercomControlModel.CodingKeys,  v20,  v19,  v18);
  if (v21)
  {
    sub_9320();
  }

  else
  {
    uint64_t v50 = v10;
    uint64_t v39 = v14;
    uint64_t v40 = v17;
    uint64_t v22 = v47;
    v51[2] = 0;
    sub_8930(&qword_A0070);
    uint64_t v24 = v45;
    uint64_t v23 = v46;
    uint64_t v25 = sub_933C();
    KeyedDecodingContainer.decode<A>(_:forKey:)(v25, v26, v27, v28);
    uint64_t v29 = *(void (**)(uint64_t, char *, uint64_t))(v22 + 32);
    v29(v40, v24, v5);
    v51[1] = 1;
    uint64_t v30 = sub_933C();
    KeyedDecodingContainer.decode<A>(_:forKey:)(v30, v31, v32, v33);
    uint64_t v34 = v23;
    uint64_t v35 = v39;
    uint64_t v36 = v40;
    v29(v40 + *(int *)(v39 + 20), v8, v5);
    v51[0] = 2;
    sub_85A8(&qword_A0078);
    uint64_t v37 = v43;
    uint64_t v38 = v44;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v43, v51, v34, v43);
    sub_92F0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 32))(v36 + *(int *)(v35 + 24), v38, v37);
    sub_8980(v36, v42);
    sub_9320();
    sub_89C4(v36);
  }

  sub_92C0();
}

void sub_8930(unint64_t *a1)
{
  if (!*a1)
  {
    uint64_t v2 = sub_8564(&qword_A0038);
    atomic_store(sub_9310(v2, v2), a1);
  }

  sub_935C();
}

uint64_t sub_8980(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CarPlayIntercomControlModel(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_89C4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CarPlayIntercomControlModel(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_8A00()
{
  return sub_8A48(&qword_A0080, (uint64_t)&protocol conformance descriptor for CarPlayIntercomControlModel);
}

uint64_t sub_8A24()
{
  return sub_8A48(&qword_A0088, (uint64_t)&protocol conformance descriptor for CarPlayIntercomControlModel);
}

uint64_t sub_8A48(unint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v5 = type metadata accessor for CarPlayIntercomControlModel(255LL);
    uint64_t result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }

  return result;
}

void sub_8A88(void *a1@<X0>, uint64_t a2@<X8>)
{
}

void sub_8A9C(void *a1)
{
}

uint64_t *initializeBufferWithCopyOfBuffer for CarPlayIntercomControlModel( uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v13);
  }

  else
  {
    uint64_t v7 = sub_41BC(&qword_A0038);
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16LL);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_41BC(&qword_A0040);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16LL))(v10, v11, v12);
  }

  return a1;
}

uint64_t destroy for CarPlayIntercomControlModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_41BC(&qword_A0038);
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 20), v4);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = sub_41BC(&qword_A0040);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8LL))(v6, v7);
}

uint64_t initializeWithCopy for CarPlayIntercomControlModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_41BC(&qword_A0038);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_41BC(&qword_A0040);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16LL))(v9, v10, v11);
  return a1;
}

uint64_t assignWithCopy for CarPlayIntercomControlModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_41BC(&qword_A0038);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24LL);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_41BC(&qword_A0040);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24LL))(v9, v10, v11);
  return a1;
}

uint64_t initializeWithTake for CarPlayIntercomControlModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_41BC(&qword_A0038);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_41BC(&qword_A0040);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32LL))(v9, v10, v11);
  return a1;
}

uint64_t assignWithTake for CarPlayIntercomControlModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_41BC(&qword_A0038);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40LL);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_41BC(&qword_A0040);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40LL))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for CarPlayIntercomControlModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_8E9C);
}

uint64_t sub_8E9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_41BC(&qword_A0038);
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84LL) == (_DWORD)a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = a1;
  }

  else
  {
    uint64_t v7 = sub_41BC(&qword_A0040);
    uint64_t v8 = a1 + *(int *)(a3 + 24);
  }

  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v8, a2, v7);
}

uint64_t storeEnumTagSinglePayload for CarPlayIntercomControlModel( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_8F18);
}

uint64_t sub_8F18(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_41BC(&qword_A0038);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84LL) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = a1;
  }

  else
  {
    uint64_t v9 = sub_41BC(&qword_A0040);
    uint64_t v10 = a1 + *(int *)(a4 + 24);
  }

  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v10, a2, a2, v9);
}

void sub_8F90(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v6[0] = *(void *)(v2 - 8) + 64LL;
    v6[1] = v6[0];
    sub_9034(319LL, (unint64_t *)&unk_A0100, (uint64_t)&type metadata for Bool);
    if (v5 <= 0x3F)
    {
      v6[2] = *(void *)(v4 - 8) + 64LL;
      swift_initStructMetadata(a1, 256LL, 3LL, v6, a1 + 16);
    }
  }

void sub_9034(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  if (!*a2)
  {
    unint64_t v4 = type metadata accessor for Loggable(0LL, a3);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }

uint64_t getEnumTagSinglePayload for CarPlayIntercomControlModel.CodingKeys( unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }

  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 2) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }

    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }

    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }

    int v5 = (*a1 | (v4 << 8)) - 3;
    return (v5 + 1);
  }

uint64_t storeEnumTagSinglePayload for CarPlayIntercomControlModel.CodingKeys( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFD) {
    return ((uint64_t (*)(void))((char *)&loc_914C + 4 * byte_6FD15[v4]))();
  }
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_9180 + 4 * byte_6FD10[v4]))();
}

uint64_t sub_9180(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_9188(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x9190LL);
  }
  return result;
}

uint64_t sub_919C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x91A4LL);
  }
  *(_BYTE *)uint64_t result = a2 + 2;
  return result;
}

uint64_t sub_91A8(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_91B0(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CarPlayIntercomControlModel.CodingKeys()
{
  return &type metadata for CarPlayIntercomControlModel.CodingKeys;
}

unint64_t sub_91D0()
{
  unint64_t result = qword_A0138;
  if (!qword_A0138)
  {
    unint64_t result = swift_getWitnessTable(&unk_6FE58, &type metadata for CarPlayIntercomControlModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_A0138);
  }

  return result;
}

unint64_t sub_9210()
{
  unint64_t result = qword_A0140;
  if (!qword_A0140)
  {
    unint64_t result = swift_getWitnessTable(&unk_6FDC8, &type metadata for CarPlayIntercomControlModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_A0140);
  }

  return result;
}

unint64_t sub_9250()
{
  unint64_t result = qword_A0148;
  if (!qword_A0148)
  {
    unint64_t result = swift_getWitnessTable(&unk_6FDF0, &type metadata for CarPlayIntercomControlModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_A0148);
  }

  return result;
}

uint64_t sub_9290()
{
  return type metadata accessor for CarPlayIntercomControlModel(0LL);
}

  ;
}

uint64_t sub_92A8(uint64_t a1, uint64_t a2)
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)(a1, a2, v2, v3, v4);
}

  ;
}

void *sub_92D8()
{
  return malloc(0x28uLL);
}

uint64_t sub_92E4(uint64_t a1)
{
  return Loggable.wrappedValue.modify(v1, a1);
}

uint64_t sub_92F0()
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)(v1 - 88) + 8LL))(v0, *(void *)(v1 - 120));
}

  ;
}

uint64_t sub_9310(uint64_t a1, uint64_t a2)
{
  return swift_getWitnessTable(v2, a2);
}

uint64_t sub_9320()
{
  return sub_423C(*(void **)(v0 - 96));
}

uint64_t sub_9328( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return Loggable.wrappedValue.setter(&a9, a1);
}

  ;
}

uint64_t sub_933C()
{
  return v0;
}

uint64_t sub_9350( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return Loggable.init(wrappedValue:)(&a9, v9);
}

  ;
}

void sub_9368(uint64_t a1)
{
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v3 = sub_4870(v2, (uint64_t)qword_A3EB0);
  oslog = (os_log_s *)Logger.logObject.getter(v3);
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(oslog, v4))
  {
    int v5 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)int v5 = 0;
    _os_log_impl( &dword_0,  oslog,  v4,  "#CATBundleRegisterer Registering HomeCommunicationFlowDelegatePlugin bundle with DialogEngine",  v5,  2u);
    swift_slowDealloc(v5, -1LL, -1LL);
  }
}

uint64_t type metadata accessor for CATBundleRegisterer()
{
  return objc_opt_self(&OBJC_CLASS____TtC35HomeCommunicationFlowDelegatePlugin19CATBundleRegisterer);
}

uint64_t sub_946C()
{
  if ((dispatch thunk of DeviceState.isMac.getter() & 1) != 0) {
    return 7LL;
  }
  uint64_t v1 = sub_9508();
  if ((dispatch thunk of DeviceState.isPad.getter(v1, v2) & 1) != 0) {
    return 2LL;
  }
  uint64_t v3 = sub_9508();
  if ((dispatch thunk of DeviceState.isWatch.getter(v3, v4) & 1) != 0) {
    return 3LL;
  }
  uint64_t v5 = sub_9508();
  if ((dispatch thunk of DeviceState.isHomePod.getter(v5, v6) & 1) != 0) {
    return 4LL;
  }
  uint64_t v7 = sub_9508();
  if ((dispatch thunk of DeviceState.isCarPlay.getter(v7, v8) & 1) != 0) {
    return 5LL;
  }
  uint64_t v9 = sub_9508();
  if ((dispatch thunk of DeviceState.isAppleTV.getter(v9) & 1) != 0) {
    return 6LL;
  }
  else {
    return 1LL;
  }
}

uint64_t sub_9508()
{
  return v0;
}

uint64_t sub_9514()
{
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v0 = type metadata accessor for Logger(0LL);
  uint64_t v1 = sub_4870(v0, (uint64_t)qword_A3EB0);
  uint64_t v2 = (os_log_s *)Logger.logObject.getter(v1);
  os_log_type_t v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (_WORD *)sub_A968();
    *uint64_t v4 = 0;
    sub_A9C8(&dword_0, v2, v3, "#DirectInvocationHomeCommunicationFlow on(input:) returning true");
    sub_48D4((uint64_t)v4);
  }

  return 1LL;
}

uint64_t sub_95CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DirectInvocationHomeCommunicationFlow(0LL);
  sub_A880(&qword_A0318, type metadata accessor for DirectInvocationHomeCommunicationFlow, (uint64_t)&unk_6FFA0);
  return Flow.deferToExecuteAsync(_:)(a1, a2, v4, v5);
}

uint64_t sub_9640(uint64_t a1)
{
  v2[78] = v1;
  v2[77] = a1;
  uint64_t v3 = type metadata accessor for Input(0LL);
  v2[79] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[80] = v4;
  v2[81] = sub_A8C8(*(void *)(v4 + 64));
  uint64_t v5 = type metadata accessor for Parse(0LL);
  v2[82] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v2[83] = v6;
  v2[84] = sub_A8C8(*(void *)(v6 + 64));
  return swift_task_switch(sub_96BC, 0LL, 0LL);
}

uint64_t sub_96BC()
{
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v3 = (os_log_s *)sub_4870(v2, (uint64_t)qword_A3EB0);
  Logger.logObject.getter(v3);
  os_log_type_t v4 = sub_A9E8();
  if (sub_AA1C(v4))
  {
    uint64_t v5 = (uint8_t *)sub_A968();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_0, v3, v0, "#DirectInvocationHomeCommunicationFlow executing", v5, 2u);
    sub_48D4((uint64_t)v5);
  }

  uint64_t v6 = *(void *)(v1 + 672);
  uint64_t v7 = *(void *)(v1 + 664);
  uint64_t v8 = *(void *)(v1 + 656);
  uint64_t v9 = *(void *)(v1 + 624);

  uint64_t v10 = sub_8504( (void *)(v9 + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin37DirectInvocationHomeCommunicationFlow_sharedGlobals),  *(void *)(v9 + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin37DirectInvocationHomeCommunicationFlow_sharedGlobals + 24))[1];
  uint64_t v11 = swift_retain(v10);
  Input.parse.getter(v11);
  sub_26EF4(v6, v1 + 56);
  sub_AAB8();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  if (*(void *)(v1 + 80))
  {
    uint64_t v12 = (void *)(v1 + 16);
    uint64_t v13 = sub_A780((__int128 *)(v1 + 56), v1 + 16);
    static Device.current.getter(v123, v13);
    uint64_t v14 = sub_41BC(&qword_A02F8);
    sub_A8BC(v14);
    uint64_t v15 = (void *)sub_625F0(v123);
    uint64_t v16 = *(void *)((char *)v15 + *(void *)(qword_A3DC8 + *v15 + 16));
    sub_A9E0();
    swift_release(v15);
    uint64_t v17 = *(void **)(v1 + 40);
    uint64_t v18 = *(void *)(v1 + 48);
    sub_8504((void *)(v1 + 16), (uint64_t)v17);
    uint64_t v19 = (*(uint64_t (**)(void *, uint64_t))(v18 + 16))(v17, v18);
    uint64_t v120 = v1 + 176;
    uint64_t v121 = v16;
    switch((char)v19)
    {
      case 0:
        uint64_t v25 = (os_log_s *)(v1 + 336);
        sub_A940();
        sub_A95C();
        sub_AA3C();
        uint64_t v26 = *(void *)(v1 + 360);
        sub_AA50();
        uint64_t v27 = sub_A8C8(*(void *)(*(void *)(v26 - 8) + 64LL));
        sub_A9F0(v27);
        sub_A9E0();
        sub_A97C();
        sub_AA7C();
        uint64_t AnnouncementFlow = type metadata accessor for SendAnnouncementFlow(0LL);
        *(void *)(v1 + 200) = AnnouncementFlow;
        sub_A880(&qword_A0300, type metadata accessor for SendAnnouncementFlow, (uint64_t)&unk_73758);
        *(void *)(v1 + 208) = v29;
        *(void *)(v1 + 176) = v1 + 296;
        sub_A974();
        os_log_type_t v30 = sub_A9E8();
        if (!sub_A8F0(v30)) {
          goto LABEL_23;
        }
        uint64_t v31 = "#DirectInvocationHomeCommunicationFlow pushing send flow";
        goto LABEL_21;
      case 1:
        uint64_t v25 = (os_log_s *)(v1 + 416);
        sub_A940();
        sub_A95C();
        sub_AA3C();
        uint64_t v51 = *(void *)(v1 + 440);
        sub_AA50();
        uint64_t v52 = sub_A8C8(*(void *)(*(void *)(v51 - 8) + 64LL));
        sub_A9F0(v52);
        sub_A9E0();
        sub_A97C();
        sub_AA7C();
        uint64_t AnnouncementFlow = type metadata accessor for SendAnnouncementFlow(0LL);
        *(void *)(v1 + 200) = AnnouncementFlow;
        sub_A880(&qword_A0300, type metadata accessor for SendAnnouncementFlow, (uint64_t)&unk_73758);
        *(void *)(v1 + 208) = v53;
        *(void *)(v1 + 176) = v1 + 376;
        sub_A974();
        os_log_type_t v54 = sub_A9E8();
        if (!sub_A8F0(v54)) {
          goto LABEL_23;
        }
        uint64_t v31 = "#DirectInvocationHomeCommunicationFlow pushing reply flow";
        goto LABEL_21;
      case 2:
        sub_A900(v19, v20, v21, v22, v23, v24);
        sub_A95C();
        sub_AA04();
        uint64_t v55 = *(void *)(v1 + 160);
        uint64_t v56 = sub_A7D8(v1 + 136, v55);
        uint64_t v57 = *(void *)(v55 - 8);
        uint64_t v58 = sub_A8C8(*(void *)(v57 + 64));
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 16))(v58, v56, v55);
        uint64_t v59 = type metadata accessor for SharedGlobals(0LL);
        *(void *)(v1 + 120) = v59;
        *(void *)(v1 + 128) = &off_977A0;
        uint64_t v60 = sub_AA70();
        sub_AA64((uint64_t)v60);
        uint64_t AnnouncementFlow = type metadata accessor for ReadAnnouncementFlow(0LL);
        uint64_t v17 = (void *)sub_A8BC(AnnouncementFlow);
        uint64_t v25 = *(os_log_s **)(v1 + 120);
        uint64_t v61 = sub_A7D8(v1 + 96, (uint64_t)v25);
        uint64_t v16 = *((void *)v25 - 1);
        uint64_t v62 = sub_A8C8(*(void *)(v16 + 64));
        (*(void (**)(uint64_t, uint64_t, os_log_s *))(v16 + 16))(v62, v61, v25);
        v17[11] = v59;
        v17[12] = &off_977A0;
        uint64_t v63 = sub_A800(v17 + 8);
        sub_A83C(v62, (uint64_t)v63);
        uint64_t v64 = sub_A9B4( OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin20ReadAnnouncementFlow_input,  v96,  v99,  v104,  v107,  v110,  v113);
        sub_A990(v64, v65, v66, v67, v68, v69, v70, v71, v97, v100, v105, v108, v111, v114, v116, v1 + 16, v120, v121);
        sub_423C(v101);
        swift_task_dealloc(v62);
        sub_423C(v117);
        swift_task_dealloc(v58);
        *(void *)(v1 + 200) = AnnouncementFlow;
        sub_A880(&qword_A0310, type metadata accessor for ReadAnnouncementFlow, (uint64_t)&unk_72CB0);
        *(void *)(v1 + 208) = v72;
        *(void *)(v1 + 176) = v17;
        sub_A974();
        os_log_type_t v73 = sub_A9E8();
        if (!sub_A8F0(v73)) {
          goto LABEL_22;
        }
        uint64_t v31 = "#DirectInvocationHomeCommunicationFlow pushing reading flow";
        goto LABEL_20;
      case 3:
        sub_A900(v19, v20, v21, v22, v23, v24);
        sub_A95C();
        sub_AA04();
        uint64_t v74 = *(void *)(v1 + 520);
        uint64_t v75 = sub_A7D8(v1 + 496, v74);
        uint64_t v76 = *(void *)(v74 - 8);
        uint64_t v77 = sub_A8C8(*(void *)(v76 + 64));
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v76 + 16))(v77, v75, v74);
        uint64_t v78 = type metadata accessor for SharedGlobals(0LL);
        *(void *)(v1 + 560) = v78;
        *(void *)(v1 + 568) = &off_977A0;
        v79 = sub_AA70();
        sub_AA64((uint64_t)v79);
        uint64_t AnnouncementFlow = type metadata accessor for StopAnnouncementFlow(0LL);
        uint64_t v17 = (void *)sub_A8BC(AnnouncementFlow);
        uint64_t v80 = *(void *)(v1 + 560);
        uint64_t v25 = (os_log_s *)sub_A7D8(v1 + 536, v80);
        uint64_t v16 = *(void *)(v80 - 8);
        uint64_t v81 = sub_A8C8(*(void *)(v16 + 64));
        (*(void (**)(uint64_t, os_log_s *, uint64_t))(v16 + 16))(v81, v25, v80);
        v17[11] = v78;
        v17[12] = &off_977A0;
        v82 = sub_A800(v17 + 8);
        sub_A83C(v81, (uint64_t)v82);
        uint64_t v83 = sub_A9B4( OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin20StopAnnouncementFlow_input,  v96,  v99,  v104,  v107,  v110,  v113);
        sub_A990(v83, v84, v85, v86, v87, v88, v89, v90, v98, v102, v106, v109, v112, v115, v116, v1 + 16, v120, v121);
        sub_423C(v103);
        swift_task_dealloc(v81);
        sub_423C(v118);
        swift_task_dealloc(v77);
        *(void *)(v1 + 200) = AnnouncementFlow;
        sub_A880(&qword_A0308, type metadata accessor for StopAnnouncementFlow, (uint64_t)&unk_74960);
        *(void *)(v1 + 208) = v91;
        *(void *)(v1 + 176) = v17;
        sub_A974();
        os_log_type_t v92 = sub_A9E8();
        if (sub_A8F0(v92))
        {
          uint64_t v31 = "#DirectInvocationHomeCommunicationFlow pushing stop flow";
LABEL_20:
          uint64_t v12 = v119;
LABEL_21:
          v93 = (void *)v120;
          v94 = (_WORD *)sub_A968();
          _WORD *v94 = 0;
          sub_A9C8(&dword_0, v25, (os_log_type_t)v17, v31);
          sub_48D4((uint64_t)v94);
        }

        else
        {
LABEL_22:
          uint64_t v12 = v119;
LABEL_23:
          v93 = (void *)v120;
        }

        v95 = sub_8504(v93, AnnouncementFlow);
        static ExecuteResponse.complete<A>(next:)(v95, AnnouncementFlow);
        swift_release(v16);
        sub_423C(v93);
LABEL_27:
        sub_423C(v12);
        sub_A9D4();
        sub_AA14();
        uint64_t result = (*(uint64_t (**)(void))(v1 + 8))();
        break;
      default:
        sub_A798(v1 + 16, v1 + 216);
        uint64_t v37 = (os_log_s *)sub_A974();
        os_log_type_t v38 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v37, v38))
        {
          uint64_t v122 = v16;
          uint64_t v39 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          uint64_t v40 = swift_slowAlloc(32LL, -1LL);
          v123[0] = v40;
          *(_DWORD *)uint64_t v39 = 136315138;
          uint64_t v41 = *(void *)(v1 + 240);
          uint64_t v42 = *(void *)(v1 + 248);
          sub_8504((void *)(v1 + 216), v41);
          char v43 = (*(uint64_t (**)(uint64_t, uint64_t))(v42 + 16))(v41, v42);
          sub_178BC(v43);
          os_log_type_t v45 = v44;
          id v46 = [v44 _className];

          uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)(v46);
          unint64_t v49 = v48;

          *(void *)(v1 + 600) = sub_68DC4(v47, v49, v123);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 600, v1 + 608, v39 + 4, v39 + 12);
          swift_bridgeObjectRelease(v49);
          sub_423C((void *)(v1 + 216));
          _os_log_impl( &dword_0,  v37,  v38,  "#DirectInvocationHomeCommunicationFlow failed to get flow from announcementType%s",  v39,  0xCu);
          swift_arrayDestroy(v40, 1LL, (char *)&type metadata for Any + 8);
          sub_48D4(v40);
          uint64_t v50 = (uint64_t)v39;
          uint64_t v12 = (void *)(v1 + 16);
          uint64_t v16 = v122;
          sub_48D4(v50);
        }

        else
        {
          sub_423C((void *)(v1 + 216));
        }

        static ExecuteResponse.complete()();
        swift_release(v16);
        goto LABEL_27;
    }
  }

  else
  {
    sub_A6B0(v1 + 56);
    uint64_t v32 = (os_log_s *)sub_A974();
    os_log_type_t v33 = static os_log_type_t.error.getter();
    if (sub_AA1C(v33))
    {
      uint64_t v34 = (_WORD *)sub_A968();
      *uint64_t v34 = 0;
      sub_A9C8( &dword_0,  v32,  (os_log_type_t)v6,  "#DirectInvocationHomeCommunicationFlow failed to get nlIntent from parse. Returning nil");
      sub_48D4((uint64_t)v34);
    }

    uint64_t v35 = (void *)swift_task_alloc(dword_A237C);
    *(void *)(v1 + 680) = v35;
    *uint64_t v35 = v1;
    v35[1] = sub_9F54;
    return sub_3F26C();
  }

  return result;
}

uint64_t sub_9F54(uint64_t a1)
{
  uint64_t v4 = *v2;
  swift_task_dealloc(*(void *)(*v2 + 680));
  if (v1)
  {
    swift_errorRelease(v1);
    uint64_t v5 = sub_A0E4;
  }

  else
  {
    *(void *)(v4 + 688) = a1;
    uint64_t v5 = sub_9FCC;
  }

  return swift_task_switch(v5, 0LL, 0LL);
}

uint64_t sub_9FCC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = *(void **)(v8 + 688);
  uint64_t v10 = *(void *)(v8 + 624);
  sub_AA98(a1, a2, a3, a4, a5, a6, a7, a8, v21[0]);
  uint64_t v11 = sub_AA48((uint64_t)&unk_94850, 32LL);
  *(void *)(v11 + 16) = v10;
  *(void *)(v11 + 24) = v9;
  uint64_t v12 = type metadata accessor for SimpleOutputFlowAsync(0LL);
  sub_A8BC(v12);
  swift_retain(v10);
  id v13 = v9;
  uint64_t v14 = SimpleOutputFlowAsync.init(outputPublisher:outputGenerator:)(v21, &unk_A02F0, v11);
  uint64_t v15 = type metadata accessor for RadarUtils();
  uint64_t inited = swift_initStackObject(v15, v8 + 576);
  uint64_t v17 = type metadata accessor for AutoBugCaptureManager(0LL);
  sub_A8BC(v17);
  *(void *)(inited + 16) = sub_A920((uint64_t)"SiriHomeCommunication");
  uint64_t v18 = sub_AAA4();
  sub_30234(v18, v19);
  sub_AAB8();
  *(void *)(v8 + 608) = v14;
  sub_AA2C();
  swift_release(v14);

  sub_A9D4();
  sub_AA14();
  return sub_A8D4(*(uint64_t (**)(void))(v8 + 8));
}

uint64_t sub_A0E4()
{
  id v1 = [objc_allocWithZone(DialogExecutionResult) init];
  uint64_t v2 = *(void *)(v0 + 624);
  sub_AA98((uint64_t)v1, v3, v4, v5, v6, v7, v8, v9, v20[0]);
  uint64_t v10 = sub_AA48((uint64_t)&unk_94850, 32LL);
  *(void *)(v10 + 16) = v2;
  *(void *)(v10 + 24) = v1;
  uint64_t v11 = type metadata accessor for SimpleOutputFlowAsync(0LL);
  sub_A8BC(v11);
  swift_retain(v2);
  id v12 = v1;
  uint64_t v13 = SimpleOutputFlowAsync.init(outputPublisher:outputGenerator:)(v20, &unk_A02F0, v10);
  uint64_t v14 = type metadata accessor for RadarUtils();
  uint64_t inited = swift_initStackObject(v14, v0 + 576);
  uint64_t v16 = type metadata accessor for AutoBugCaptureManager(0LL);
  sub_A8BC(v16);
  *(void *)(inited + 16) = sub_A920((uint64_t)"SiriHomeCommunication");
  uint64_t v17 = sub_AAA4();
  sub_30234(v17, v18);
  sub_AAB8();
  *(void *)(v0 + 608) = v13;
  sub_AA2C();
  swift_release(v13);

  sub_A9D4();
  sub_AA14();
  return sub_A8D4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_A214(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a1;
  v3[4] = a3;
  uint64_t v4 = type metadata accessor for DialogPhase(0LL);
  v3[5] = swift_task_alloc((*(void *)(*(void *)(v4 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for OutputGenerationManifest(0LL);
  v3[6] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[7] = v6;
  v3[8] = swift_task_alloc((*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_A294, 0LL, 0LL);
}

uint64_t sub_A294()
{
  uint64_t v2 = (void *)v0[4];
  uint64_t v1 = v0[5];
  uint64_t v3 = type metadata accessor for ResponseFactory(0LL);
  sub_A8BC(v3);
  v0[2] = ResponseFactory.init()();
  uint64_t v4 = sub_41BC(&qword_A2100);
  uint64_t v5 = sub_AA48(v4, 40LL);
  *(_OWORD *)(v5 + 16) = xmmword_6FCA0;
  *(void *)(v5 + 32) = v2;
  uint64_t v9 = v5;
  specialized Array._endMutation()(v5, v6);
  v0[9] = v9;
  static DialogPhase.error.getter(v2);
  OutputGenerationManifest.init(dialogPhase:_:)(v1, sub_A45C, 0LL);
  uint64_t v7 = (void *)swift_task_alloc(async function pointer to dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)[1]);
  v0[10] = v7;
  void *v7 = v0;
  v7[1] = sub_A398;
  return dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)( v0[3],  v9,  v0[8],  v3,  &protocol witness table for ResponseFactory);
}

uint64_t sub_A398()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 72LL);
  uint64_t v3 = *(void *)(*(void *)v0 + 56LL);
  uint64_t v2 = *(void *)(*(void *)v0 + 64LL);
  uint64_t v4 = *(void *)(*(void *)v0 + 48LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 80LL));
  swift_bridgeObjectRelease(v1);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch(sub_A414, 0LL, 0LL);
}

uint64_t sub_A414()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_release(*(void *)(v0 + 16));
  sub_AA14();
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_A45C()
{
  return OutputGenerationManifest.listenAfterSpeaking.setter(0LL);
}

void sub_A488()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin37DirectInvocationHomeCommunicationFlow_input;
  uint64_t v2 = type metadata accessor for Input(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(v1, v2);
  sub_423C((void *)(v0
                    + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin37DirectInvocationHomeCommunicationFlow_sharedGlobals));
  swift_release(*(void *)(v0
                          + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin37DirectInvocationHomeCommunicationFlow_sendAnnouncementCATsSimple));
  sub_AA5C();
}

uint64_t sub_A4E8()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_A50C()
{
  return type metadata accessor for DirectInvocationHomeCommunicationFlow(0LL);
}

uint64_t type metadata accessor for DirectInvocationHomeCommunicationFlow(uint64_t a1)
{
  uint64_t result = qword_A0218;
  if (!qword_A0218) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DirectInvocationHomeCommunicationFlow);
  }
  return result;
}

uint64_t sub_A54C(uint64_t a1)
{
  uint64_t result = type metadata accessor for Input(319LL);
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(result - 8) + 64LL;
    v4[1] = "(";
    v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
    uint64_t result = swift_updateClassMetadata2(a1, 256LL, 3LL, v4, a1 + 80);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_A5D0()
{
  return 1LL;
}

uint64_t sub_A5E8(uint64_t a1, uint64_t a2)
{
  return sub_95CC(a1, a2);
}

uint64_t sub_A608(uint64_t a1)
{
  unint64_t v3 = (void *)swift_task_alloc(dword_A022C);
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_A65C;
  return sub_9640(a1);
}

uint64_t sub_A65C()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_A688(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for DirectInvocationHomeCommunicationFlow(0LL);
  return Flow<>.exitValue.getter(v3, a2);
}

uint64_t sub_A6B0(uint64_t a1)
{
  uint64_t v2 = sub_41BC(&qword_A02E0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_A6F0()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_A71C(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc(dword_A02EC);
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_A65C;
  return sub_A214(a1, v5, v4);
}

uint64_t sub_A780(__int128 *a1, uint64_t a2)
{
  __int128 v2 = *a1;
  __int128 v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

void sub_A798(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v2;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v2 - 8))(a2, a1);
  sub_AA5C();
}

uint64_t sub_A7D8(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80LL) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }

  return result;
}

void *sub_A800(void *a1)
{
  uint64_t v1 = a1;
  if ((*(_BYTE *)(*(void *)(a1[3] - 8LL) + 82LL) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (void *)v2;
  }

  return v1;
}

uint64_t sub_A83C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SharedGlobals(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

void sub_A880(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  if (!*a1)
  {
    uint64_t v5 = a2(255LL);
    atomic_store(swift_getWitnessTable(a3, v5), a1);
  }

  sub_AA5C();
}

uint64_t sub_A8BC(uint64_t a1)
{
  return swift_allocObject(a1, *(unsigned int *)(a1 + 48), *(unsigned __int16 *)(a1 + 52));
}

uint64_t sub_A8C8@<X0>(uint64_t a1@<X8>)
{
  return swift_task_alloc((a1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
}

uint64_t sub_A8D4(uint64_t (*a1)(void))
{
  return a1();
}

BOOL sub_A8F0(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_A900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void, uint64_t, void, uint64_t, uint64_t, uint64_t))(v6[80] + 16LL))( v6[81],  v7,  v6[79],  a4,  a5,  a6);
}

uint64_t sub_A920@<X0>(uint64_t a1@<X8>)
{
  return AutoBugCaptureManager.init(domain:sessionDuration:)( 0xD000000000000015LL,  (a1 - 32) | 0x8000000000000000LL,  30.0);
}

uint64_t sub_A940()
{
  return (*(uint64_t (**)(void, uint64_t, void))(v0[80] + 16LL))(v0[81], v1, v0[79]);
}

void sub_A95C()
{
}

uint64_t sub_A968()
{
  return swift_slowAlloc(2LL, -1LL);
}

uint64_t sub_A974()
{
  return Logger.logObject.getter();
}

void *sub_A97C()
{
  return sub_132F8(v2, v1, v0, v3);
}

uint64_t sub_A990( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, __int128 *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  *(void *)(v18 + 56) = a18;
  return swift_retain(a18);
}

uint64_t sub_A9B4@<X0>( uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 32))(v7 + a1, a7, a5);
}

void sub_A9C8(void *a1, os_log_s *a2, os_log_type_t a3, const char *a4)
{
}

uint64_t sub_A9D4()
{
  return swift_task_dealloc(*(void *)(v0 + 672));
}

uint64_t sub_A9E0()
{
  return swift_retain(v0);
}

uint64_t sub_A9E8()
{
  return static os_log_type_t.debug.getter();
}

uint64_t sub_A9F0(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(a1, v3, v2);
}

void sub_AA04()
{
}

uint64_t sub_AA14()
{
  return swift_task_dealloc(v0);
}

BOOL sub_AA1C(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_AA2C()
{
  return static ExecuteResponse.complete<A>(next:)(v0, v1);
}

void sub_AA3C()
{
}

uint64_t sub_AA48(uint64_t a1, uint64_t a2)
{
  return swift_allocObject(a1, a2, 7LL);
}

uint64_t sub_AA50()
{
  return sub_A7D8(v0, v1);
}

  ;
}

uint64_t sub_AA64(uint64_t a1)
{
  return sub_A83C(v1, a1);
}

void *sub_AA70()
{
  return sub_A800(v0);
}

uint64_t sub_AA7C()
{
  return swift_task_dealloc(v1);
}

void *sub_AA98( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return static OutputPublisherFactory.makeOutputPublisherAsync()(&a9);
}

uint64_t sub_AAA4()
{
  return 1LL;
}

uint64_t sub_AAB8()
{
  return swift_release(v0);
}

uint64_t sub_AAC0(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(_BYTE *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  *(void *)(v6 + 32) = a3;
  *(void *)(v6 + 40) = a4;
  *(void *)(v6 + 48) = a5;
  *(void *)(v6 + 56) = a6;
  return v6;
}

void *sub_AAD8()
{
  return v0;
}

uint64_t sub_AB0C()
{
  return swift_deallocClassInstance(v0, 64LL, 7LL);
}

uint64_t type metadata accessor for DirectInvocationHomeCommunicationNLIntent()
{
  return objc_opt_self(&OBJC_CLASS____TtC35HomeCommunicationFlowDelegatePlugin41DirectInvocationHomeCommunicationNLIntent);
}

uint64_t sub_AB4C()
{
  return *(unsigned __int8 *)(*(void *)v0 + 16LL);
}

uint64_t sub_AB58()
{
  return swift_bridgeObjectRetain(*(void *)(*(void *)v0 + 48LL));
}

uint64_t sub_AB64()
{
  return swift_bridgeObjectRetain(*(void *)(*(void *)v0 + 56LL));
}

uint64_t sub_AB70()
{
  return swift_bridgeObjectRetain(*(void *)(*(void *)v0 + 40LL));
}

uint64_t sub_AB7C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 24LL);
  swift_bridgeObjectRetain(*(void *)(*(void *)v0 + 32LL));
  return v1;
}

uint64_t sub_ABAC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_70084, a1);
  return sub_1C25C(a1, WitnessTable);
}

unint64_t sub_ABE0(uint64_t a1)
{
  unint64_t result = sub_AC04();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_AC04()
{
  unint64_t result = qword_A03E0;
  if (!qword_A03E0)
  {
    uint64_t v1 = type metadata accessor for DirectInvocationHomeCommunicationNLIntent();
    unint64_t result = swift_getWitnessTable(&unk_7005C, v1);
    atomic_store(result, (unint64_t *)&qword_A03E0);
  }

  return result;
}

id sub_AC40(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (void *)objc_opt_self(&OBJC_CLASS___SKIDirectInvocation);
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  sub_8504(a1, v5);
  uint64_t v7 = (void *)DeviceState.asInvocationContext.getter(v5, v6);
  id v8 = [v4 runSiriKitExecutorCommandWithContext:v7 payload:v2];

  return v8;
}

void sub_ACD0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void (*v14)(__int128 *__return_ptr, uint64_t);
  uint64_t v15;
  uint64_t v16;
  os_log_s *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(__int128 *__return_ptr, char *);
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40[2];
  char v41[16];
  uint64_t v37 = a2;
  os_log_type_t v38 = a3;
  uint64_t v39 = type metadata accessor for Parse.DirectInvocation(0LL);
  uint64_t v4 = *(void *)(v39 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = __chkstk_darwin(v39);
  __chkstk_darwin(v6);
  id v8 = (char *)&v37 - v7;
  uint64_t v9 = sub_41BC(&qword_A0488);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_9F7D0 != -1) {
    swift_once(&qword_9F7D0, sub_B1C0);
  }
  uint64_t v13 = sub_41BC(&qword_A0490);
  sub_4870(v13, (uint64_t)qword_A3E10);
  uint64_t v14 = (void (*)(__int128 *__return_ptr, uint64_t))Transformer.transform.getter(v13);
  v14(v40, a1);
  sub_BD1C();
  if (LOBYTE(v40[0]) == 7)
  {
    if (qword_9F820 != -1) {
      swift_once(&qword_9F820, sub_17ADC);
    }
    uint64_t v15 = type metadata accessor for Logger(0LL);
    sub_4870(v15, (uint64_t)qword_A3EB0);
    uint64_t v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))( (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL),  a1,  v39);
    uint64_t v17 = (os_log_s *)Logger.logObject.getter(v16);
    uint64_t v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v17, v18))
    {
      sub_BD34();
      char v19 = sub_BD0C();
      *(void *)&v40[0] = v19;
      *(_DWORD *)uint64_t v10 = 136315138;
      uint64_t v20 = Parse.DirectInvocation.identifier.getter(v19);
      uint64_t v22 = v21;
      uint64_t v23 = sub_68DC4(v20, v21, (uint64_t *)v40);
      uint64_t v24 = sub_BD40(v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v24, v25, v10 + 4, v10 + 12);
      swift_bridgeObjectRelease(v22);
      sub_BD24();
      swift_arrayDestroy(v19, 1LL, (char *)&type metadata for Any + 8);
      sub_48D4(v19);
      sub_48D4(v10);
    }

    else
    {
      sub_BD24();
    }

    uint64_t v26 = (_OWORD *)v38;
    *(void *)(v38 + 32) = 0LL;
    uint64_t *v26 = 0u;
    v26[1] = 0u;
  }

  else
  {
    uint64_t v27 = v37;
    LODWORD(v37) = LOBYTE(v40[0]);
    sub_BB78(v27, (uint64_t)v40);
    uint64_t v28 = a1;
    uint64_t v29 = v39;
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v8, v28, v39);
    os_log_type_t v30 = *(unsigned __int8 *)(v4 + 80);
    uint64_t v31 = (v30 + 56) & ~v30;
    uint64_t v32 = swift_allocObject(&unk_94980, v31 + v5, v30 | 7);
    sub_A780(v40, v32 + 16);
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v32 + v31, v8, v29);
    os_log_type_t v33 = type metadata accessor for DirectInvocationHomeCommunicationNLIntent();
    Transformer.init(transform:)(sub_BC30, v32, &type metadata for HomeCommunicationIntentClassNames, v33);
    uint64_t v34 = (void (*)(__int128 *__return_ptr, char *))Transformer.transform.getter(v9);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v41[0] = v37;
    v34(v40, v41);
    sub_BD1C();
    uint64_t v35 = *(void *)&v40[0];
    uint64_t v36 = (void *)v38;
    *(void *)(v38 + 24) = v33;
    v36[4] = sub_BC8C();
    *uint64_t v36 = v35;
  }

uint64_t type metadata accessor for DirectInvocationTransformer()
{
  return objc_opt_self(&OBJC_CLASS____TtC35HomeCommunicationFlowDelegatePlugin27DirectInvocationTransformer);
}

uint64_t sub_B1C0()
{
  uint64_t v0 = sub_41BC(&qword_A0490);
  sub_BCCC(v0, qword_A3E10);
  sub_4870(v0, (uint64_t)qword_A3E10);
  uint64_t v1 = type metadata accessor for Parse.DirectInvocation(0LL);
  uint64_t v2 = sub_41BC(&qword_A04B8);
  return Transformer.init(transform:)(sub_B23C, 0LL, v1, v2);
}

void sub_B23C(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Parse.DirectInvocation(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  id v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = Parse.DirectInvocation.identifier.getter(v6);
  unint64_t v11 = v9;
  if (v10 == 0xD00000000000003ALL)
  {
    unint64_t v12 = 0x8000000000076480LL;
    if (v9 == 0x8000000000076480LL) {
      goto LABEL_3;
    }
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000003ALL, 0x8000000000076480LL, v10, v9, 0LL) & 1) != 0) {
    goto LABEL_5;
  }
  if (v10 == 0xD000000000000047LL)
  {
    unint64_t v12 = 0x80000000000764C0LL;
    if (v11 == 0x80000000000764C0LL)
    {
LABEL_3:
      unint64_t v13 = v12;
LABEL_6:
      swift_bridgeObjectRelease(v13);
      char v14 = 2;
      goto LABEL_7;
    }
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000047LL, 0x80000000000764C0LL, v10, v11, 0LL) & 1) != 0) {
    goto LABEL_5;
  }
  if (v10 == 0xD000000000000036LL)
  {
    unint64_t v13 = 0x8000000000076510LL;
    if (v11 == 0x8000000000076510LL) {
      goto LABEL_6;
    }
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000036LL, 0x8000000000076510LL, v10, v11, 0LL) & 1) != 0)
  {
LABEL_5:
    unint64_t v13 = v11;
    goto LABEL_6;
  }

  if (v10 == 0xD000000000000036LL)
  {
    unint64_t v15 = 0x8000000000076550LL;
    if (v11 == 0x8000000000076550LL)
    {
LABEL_18:
      swift_bridgeObjectRelease(v15);
      char v14 = 3;
      goto LABEL_7;
    }
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000036LL, 0x8000000000076550LL, v10, v11, 0LL) & 1) != 0)
  {
    unint64_t v15 = v11;
    goto LABEL_18;
  }

  if (v10 == 0xD000000000000037LL && v11 == 0x8000000000076590LL)
  {
    unint64_t v16 = 0x8000000000076590LL;
LABEL_24:
    swift_bridgeObjectRelease(v16);
    char v14 = 1;
    goto LABEL_7;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000037LL, 0x8000000000076590LL, v10, v11, 0LL) & 1) != 0)
  {
    unint64_t v16 = v11;
    goto LABEL_24;
  }

  if (v10 == 0xD000000000000036LL && v11 == 0x80000000000765D0LL)
  {
    swift_bridgeObjectRelease(0x80000000000765D0LL);
    char v14 = 0;
  }

  else
  {
    char v17 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000036LL, 0x80000000000765D0LL, v10, v11, 0LL);
    swift_bridgeObjectRelease(v11);
    char v14 = 0;
    if ((v17 & 1) == 0)
    {
      if (qword_9F820 != -1) {
        swift_once(&qword_9F820, sub_17ADC);
      }
      uint64_t v18 = type metadata accessor for Logger(0LL);
      sub_4870(v18, (uint64_t)qword_A3EB0);
      uint64_t v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
      uint64_t v20 = (os_log_s *)Logger.logObject.getter(v19);
      os_log_type_t v21 = static os_log_type_t.debug.getter();
      int v22 = v21;
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v23 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v24 = swift_slowAlloc(32LL, -1LL);
        uint64_t v31 = v24;
        uint64_t v34 = v24;
        *(_DWORD *)uint64_t v23 = 136315138;
        uint64_t v29 = v23 + 4;
        int v30 = v22;
        uint64_t v25 = Parse.DirectInvocation.identifier.getter(v24);
        unint64_t v27 = v26;
        uint64_t v32 = sub_68DC4(v25, v26, &v34);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33, v29, v23 + 12);
        swift_bridgeObjectRelease(v27);
        (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
        uint64_t v28 = v31;
        swift_arrayDestroy(v31, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v28, -1LL, -1LL);
        swift_slowDealloc(v23, -1LL, -1LL);
      }

      else
      {
        (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      }

      char v14 = 7;
    }
  }

LABEL_7:
  *a2 = v14;
}

    uint64_t v7 = *v5;
    id v8 = v5[1];
    *(void *)(v4 + 32) = *((void *)v5 + 4);
    *(_OWORD *)uint64_t v4 = v7;
    *(_OWORD *)(v4 + 16) = v8;
    goto LABEL_8;
  }

  if (!v6)
  {
    sub_423C((void *)(a1 + 8));
    goto LABEL_7;
  }

  sub_E074((void *)(a1 + 8), (void *)(a2 + 8));
LABEL_8:
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_BYTE *)(a1 + 50) = *(_BYTE *)(a2 + 50);
  *(_BYTE *)(a1 + 51) = *(_BYTE *)(a2 + 51);
  unint64_t v9 = *(void *)(a2 + 56);
  uint64_t v10 = *(void *)(a1 + 56);
  *(void *)(a1 + 56) = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease(v10);
  unint64_t v11 = *(void *)(a2 + 64);
  unint64_t v12 = *(void *)(a1 + 64);
  *(void *)(a1 + 64) = v11;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease(v12);
  unint64_t v13 = *(void *)(a2 + 72);
  char v14 = *(void *)(a1 + 72);
  *(void *)(a1 + 72) = v13;
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRelease(v14);
  unint64_t v15 = *(void *)(a2 + 80);
  unint64_t v16 = *(void *)(a1 + 80);
  *(void *)(a1 + 80) = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease(v16);
  char v17 = *(void *)(a2 + 88);
  uint64_t v18 = *(void *)(a1 + 88);
  *(void *)(a1 + 88) = v17;
  swift_bridgeObjectRetain(v17);
  swift_bridgeObjectRelease(v18);
  uint64_t v19 = *(void *)(a2 + 96);
  uint64_t v20 = *(void *)(a1 + 96);
  *(void *)(a1 + 96) = v19;
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRelease(v20);
  os_log_type_t v21 = *(void *)(a1 + 104);
  int v22 = *(void *)(a2 + 104);
  *(void *)(a1 + 104) = v22;
  swift_retain(v22);
  swift_release(v21);
  uint64_t v23 = *(void *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(void *)(a1 + 112) = v23;
  uint64_t v24 = *(void *)(a2 + 128);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(void *)(a1 + 128) = v24;
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  uint64_t v25 = *(void *)(a2 + 152);
  unint64_t v26 = *(void *)(a1 + 152);
  *(void *)(a1 + 152) = v25;
  swift_bridgeObjectRetain(v25);
  swift_bridgeObjectRelease(v26);
  unint64_t v27 = *(void *)(a2 + 160);
  uint64_t v28 = *(void *)(a1 + 160);
  *(void *)(a1 + 160) = v27;
  swift_bridgeObjectRetain(v27);
  swift_bridgeObjectRelease(v28);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  uint64_t v29 = *(void *)(a2 + 176);
  int v30 = *(void *)(a1 + 176);
  *(void *)(a1 + 176) = v29;
  swift_bridgeObjectRetain(v29);
  swift_bridgeObjectRelease(v30);
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  uint64_t v31 = *(void **)(a1 + 192);
  uint64_t v32 = *(void **)(a2 + 192);
  *(void *)(a1 + 192) = v32;
  uint64_t v33 = v32;

  return a1;
}

    uint64_t v6 = *(_OWORD *)v4;
    uint64_t v7 = *((_OWORD *)v4 + 1);
    v3[4] = v4[4];
    *(_OWORD *)uint64_t v3 = v6;
    *((_OWORD *)v3 + 1) = v7;
    return a1;
  }

  if (!v5)
  {
    sub_423C(a1 + 1);
    goto LABEL_7;
  }

  sub_E074(a1 + 1, a2 + 1);
  return a1;
}

    unint64_t v11 = *v9;
    unint64_t v12 = v9[1];
    *(void *)(v8 + 32) = *((void *)v9 + 4);
    *(_OWORD *)id v8 = v11;
    *(_OWORD *)(v8 + 16) = v12;
    return a1;
  }

  if (!v10)
  {
    sub_423C((void *)v8);
    goto LABEL_7;
  }

  sub_E074((void *)v8, v9);
  return a1;
}

  char v14 = a4(v10, v11, a3);
  swift_bridgeObjectRelease(v9);
  return v14;
}

uint64_t sub_B644@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_41BC(&qword_A04A0);
  uint64_t v7 = __chkstk_darwin(v6);
  unint64_t v9 = (char *)v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  int v10 = *a1;
  if (!v10)
  {
    uint64_t v22 = Parse.DirectInvocation.userData.getter(v7);
    if (v22)
    {
      uint64_t v23 = v22;
      sub_49314(0x73656D6F68LL, 0xE500000000000000LL, v22, &v46);
      swift_bridgeObjectRelease(v23);
      if (*((void *)&v47 + 1))
      {
        uint64_t v24 = sub_41BC(&qword_A04B0);
        uint64_t v25 = swift_dynamicCast(&v48, &v46, (char *)&type metadata for Any + 8, v24, 6LL);
        if ((_DWORD)v25)
        {
          os_log_type_t v21 = (void *)v48;
          goto LABEL_22;
        }

LABEL_21:
        os_log_type_t v21 = &_swiftEmptyArrayStorage;
LABEL_22:
        uint64_t v36 = Parse.DirectInvocation.userData.getter(v25);
        if (v36)
        {
          uint64_t v37 = v36;
          sub_49314(0x736D6F6F72LL, 0xE500000000000000LL, v36, &v46);
          swift_bridgeObjectRelease(v37);
          if (*((void *)&v47 + 1))
          {
            uint64_t v38 = sub_41BC(&qword_A04B0);
            uint64_t v39 = swift_dynamicCast(&v48, &v46, (char *)&type metadata for Any + 8, v38, 6LL);
            if ((_DWORD)v39)
            {
              uint64_t v20 = (void *)v48;
              goto LABEL_29;
            }

    if (v8 < v4)
    {
      if (__OFSUB__(v8, v11)) {
        goto LABEL_136;
      }
      if (v8 - v11 < v94) {
        break;
      }
    }

LABEL_28:
            uint64_t v20 = &_swiftEmptyArrayStorage;
LABEL_29:
            uint64_t v40 = Parse.DirectInvocation.userData.getter(v39);
            if (v40)
            {
              uint64_t v41 = v40;
              sub_49314(0x73656E6F7ALL, 0xE500000000000000LL, v40, &v46);
              swift_bridgeObjectRelease(v41);
              if (*((void *)&v47 + 1))
              {
                uint64_t v42 = sub_41BC(&qword_A04B0);
                if (swift_dynamicCast(&v48, &v46, (char *)&type metadata for Any + 8, v42, 6LL))
                {
                  uint64_t v19 = (void *)v48;
LABEL_36:
                  unint64_t v17 = 0LL;
                  uint64_t v18 = 0LL;
                  goto LABEL_37;
                }

    uint64_t v6 = (v12 - 1) & v12;
    int v10 = __clz(__rbit64(v12)) + (v13 << 6);
    uint64_t v8 = v13;
  }

  unint64_t v17 = v16 + 4;
  if (v17 >= v32)
  {
LABEL_40:
    swift_release(v3);
    sub_2EEC8(a1);
    return;
  }

  uint64_t v12 = *(void *)(v33 + 8 * v17);
  if (v12)
  {
    uint64_t v13 = v17;
    goto LABEL_28;
  }

  while (!__OFADD__(v17, 1LL))
  {
    sub_568E0();
    if (v14 == v15) {
      goto LABEL_40;
    }
    sub_568D4();
    unint64_t v17 = v18 + 1;
    if (v12) {
      goto LABEL_28;
    }
  }

LABEL_35:
                uint64_t v19 = &_swiftEmptyArrayStorage;
                goto LABEL_36;
              }
            }

            else
            {
              __int128 v46 = 0u;
              __int128 v47 = 0u;
            }

            sub_5F64((uint64_t)&v46, &qword_A04A8);
            goto LABEL_35;
          }
        }

        else
        {
          __int128 v46 = 0u;
          __int128 v47 = 0u;
        }

        uint64_t v39 = sub_5F64((uint64_t)&v46, &qword_A04A8);
        goto LABEL_28;
      }
    }

    else
    {
      __int128 v46 = 0u;
      __int128 v47 = 0u;
    }

    uint64_t v25 = sub_5F64((uint64_t)&v46, &qword_A04A8);
    goto LABEL_21;
  }

  if (v10 == 1)
  {
    sub_27EA4();
    uint64_t v11 = type metadata accessor for RREntity(0LL);
    if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0((uint64_t)v9, 1LL, v11) != 1)
    {
      uint64_t v18 = RREntity.id.getter();
      unint64_t v17 = v26;
      (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8LL))(v9, v11);
      uint64_t v27 = qword_9F820;
      swift_bridgeObjectRetain(v17);
      if (v27 != -1) {
        swift_once(&qword_9F820, sub_17ADC);
      }
      uint64_t v28 = type metadata accessor for Logger(0LL);
      sub_4870(v28, (uint64_t)qword_A3EB0);
      uint64_t v29 = swift_bridgeObjectRetain(v17);
      int v30 = (os_log_s *)Logger.logObject.getter(v29);
      os_log_type_t v31 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v30, v31))
      {
        v45[1] = v3;
        uint64_t v32 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v33 = swift_slowAlloc(32LL, -1LL);
        v45[0] = a2;
        uint64_t v34 = v33;
        *(void *)&__int128 v46 = v33;
        *(_DWORD *)uint64_t v32 = 136315138;
        swift_bridgeObjectRetain(v17);
        uint64_t v48 = sub_68DC4(v18, v17, (uint64_t *)&v46);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, &v49, v32 + 4, v32 + 12);
        swift_bridgeObjectRelease_n(v17, 3LL);
        _os_log_impl(&dword_0, v30, v31, "DirectInvocationTransformer replying to intercom with id=%s", v32, 0xCu);
        swift_arrayDestroy(v34, 1LL, (char *)&type metadata for Any + 8);
        uint64_t v35 = v34;
        a2 = (uint64_t *)v45[0];
        swift_slowDealloc(v35, -1LL, -1LL);
        swift_slowDealloc(v32, -1LL, -1LL);
      }

      else
      {

        swift_bridgeObjectRelease_n(v17, 2LL);
      }

      goto LABEL_10;
    }

    sub_5F64((uint64_t)v9, &qword_A04A0);
    if (qword_9F820 != -1) {
      swift_once(&qword_9F820, sub_17ADC);
    }
    uint64_t v12 = type metadata accessor for Logger(0LL);
    uint64_t v13 = sub_4870(v12, (uint64_t)qword_A3EB0);
    char v14 = (os_log_s *)Logger.logObject.getter(v13);
    os_log_type_t v15 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v14, v15))
    {
      unint64_t v16 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)unint64_t v16 = 0;
      _os_log_impl( &dword_0,  v14,  v15,  "#DirectInvocationTransformer replying to intercom through direct invocation but found no announcement ID",  v16,  2u);
      swift_slowDealloc(v16, -1LL, -1LL);
    }
  }

  unint64_t v17 = 0LL;
  uint64_t v18 = 0LL;
LABEL_10:
  uint64_t v19 = &_swiftEmptyArrayStorage;
  uint64_t v20 = &_swiftEmptyArrayStorage;
  os_log_type_t v21 = &_swiftEmptyArrayStorage;
LABEL_37:
  uint64_t v43 = type metadata accessor for DirectInvocationHomeCommunicationNLIntent();
  swift_allocObject(v43, 64LL, 7LL);
  uint64_t result = sub_AAC0(v10, v18, v17, (uint64_t)v21, (uint64_t)v20, (uint64_t)v19);
  *a2 = result;
  return result;
}

uint64_t sub_BB78(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_BBBC()
{
  uint64_t v1 = type metadata accessor for Parse.DirectInvocation(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  sub_423C((void *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_BC30@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_B644(a1, a2);
}

unint64_t sub_BC8C()
{
  unint64_t result = qword_A0498;
  if (!qword_A0498)
  {
    uint64_t v1 = type metadata accessor for DirectInvocationHomeCommunicationNLIntent();
    unint64_t result = swift_getWitnessTable(&unk_70084, v1);
    atomic_store(result, (unint64_t *)&qword_A0498);
  }

  return result;
}

uint64_t *sub_BCCC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *(void *)(a1 - 8);
  if ((*(_DWORD *)(v3 + 80) & 0x20000) != 0)
  {
    uint64_t v4 = swift_slowAlloc(*(void *)(v3 + 64), *(_DWORD *)(v3 + 80));
    *a2 = v4;
    return (uint64_t *)v4;
  }

  return a2;
}

uint64_t sub_BD0C()
{
  return swift_slowAlloc(32LL, -1LL);
}

uint64_t sub_BD1C()
{
  return swift_release(v0);
}

uint64_t sub_BD24()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t sub_BD34()
{
  return swift_slowAlloc(12LL, -1LL);
}

uint64_t sub_BD40(uint64_t a1)
{
  *(void *)(v1 - 96) = a1;
  return v1 - 96;
}

void sub_BD54(void *a1, os_log_s *a2, os_log_type_t a3, const char *a4)
{
}

uint64_t type metadata accessor for DisplayTextTemplatingService(uint64_t a1)
{
  uint64_t result = qword_A04C8;
  if (!qword_A04C8) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DisplayTextTemplatingService);
  }
  return result;
}

uint64_t sub_BD98(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL);
}

uint64_t sub_BDE4(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v34 = a1;
  uint64_t v8 = sub_41BC(&qword_A0518);
  __chkstk_darwin(v8);
  int v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for Locale(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  char v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)(v4 + qword_A04C0) = a4;
  uint64_t v15 = a3[3];
  sub_8504(a3, v15);
  sub_D328();
  uint64_t v16 = dispatch thunk of DeviceState.siriLocale.getter(v15);
  uint64_t v17 = Locale.identifier.getter(v16);
  uint64_t v19 = v18;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v36[0] = v17;
  v36[1] = v19;
  v35[0] = 45LL;
  v35[1] = 0xE100000000000000LL;
  v37[0] = 95LL;
  v37[1] = 0xE100000000000000LL;
  unint64_t v20 = sub_CD6C();
  uint64_t v21 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( v35,  v37,  0LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String,  &type metadata for String,  v20,  v20,  v20);
  uint64_t v23 = v22;
  swift_bridgeObjectRelease(v19);
  type metadata accessor for INIntentSlotValueType(0LL);
  uint64_t v25 = v24;
  unint64_t v26 = sub_CDA8();
  uint64_t v27 = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage, v25, &type metadata for String, v26);
  sub_BB78((uint64_t)a2, (uint64_t)v36);
  sub_BB78((uint64_t)a3, (uint64_t)v35);
  uint64_t v28 = type metadata accessor for DucTemplatingLocalContext(0LL);
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = v34;
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v10, v34, v28);
  _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0((uint64_t)v10, 0LL, 1LL, v28);
  uint64_t v31 = DucTemplatingService.init(ducFamily:locale:extensionValueTypeNamesByValueType:aceServiceInvoker:deviceState:localContext:)( 0xD00000000000001CLL,  0x8000000000076680LL,  v21,  v23,  v27,  v36,  v35,  v10);
  swift_release(a4);
  sub_423C(a2);
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v30, v28);
  sub_423C(a3);
  return v31;
}

uint64_t sub_C04C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)sub_D31C((uint64_t)&unk_94A48);
  v5[2] = v2;
  v5[3] = a1;
  v5[4] = a2;
  sub_D328();
  swift_retain(a2);
  sub_1009C();
  return sub_D2EC((uint64_t)v5);
}

uint64_t sub_C0B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_41BC(&qword_A0530);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  sub_CDF8(a1, (uint64_t)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = (v11 + 40) & ~v11;
  uint64_t v13 = (void *)swift_allocObject(&unk_94A70, v12 + v10, v11 | 7);
  v13[2] = a2;
  v13[3] = a3;
  v13[4] = a4;
  sub_CE44((uint64_t)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL), (uint64_t)v13 + v12);
  swift_retain(a2);
  swift_retain(a4);
  sub_10024();
  return swift_release(v13);
}

uint64_t sub_C1AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_41BC(&qword_A0530);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = __chkstk_darwin(v10);
  char v14 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v22 - v15;
  sub_CDF8(a1, (uint64_t)&v22 - v15);
  sub_CDF8(a5, (uint64_t)v14);
  uint64_t v17 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v18 = (v17 + 40) & ~v17;
  uint64_t v19 = (v12 + v17 + v18) & ~v17;
  unint64_t v20 = (void *)swift_allocObject(&unk_94A98, v19 + v12, v17 | 7);
  void v20[2] = a2;
  v20[3] = a3;
  v20[4] = a4;
  sub_CE44((uint64_t)v16, (uint64_t)v20 + v18);
  sub_CE44((uint64_t)v14, (uint64_t)v20 + v19);
  swift_retain(a2);
  swift_retain(a4);
  sub_10074();
  return swift_release(v20);
}

uint64_t sub_C2EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v27[1] = a2;
  uint64_t v11 = sub_41BC(&qword_A0530);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)v27 - v17;
  __chkstk_darwin(v16);
  unint64_t v20 = (char *)v27 - v19;
  sub_CDF8(a1, (uint64_t)v27 - v19);
  sub_CDF8(a5, (uint64_t)v18);
  sub_CDF8(a6, (uint64_t)v15);
  uint64_t v21 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v22 = (v21 + 32) & ~v21;
  uint64_t v23 = (v13 + v21 + v22) & ~v21;
  uint64_t v24 = (v13 + v21 + v23) & ~v21;
  uint64_t v25 = swift_allocObject(&unk_94AC0, v24 + v13, v21 | 7);
  *(void *)(v25 + 16) = a3;
  *(void *)(v25 + 24) = a4;
  sub_CE44((uint64_t)v20, v25 + v22);
  sub_CE44((uint64_t)v18, v25 + v23);
  sub_CE44((uint64_t)v15, v25 + v24);
  swift_retain(a4);
  sub_FFFC();
  return swift_release(v25);
}

uint64_t sub_C468(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)sub_D31C((uint64_t)&unk_949A8);
  v5[2] = v2;
  v5[3] = a1;
  v5[4] = a2;
  sub_D328();
  swift_retain(a2);
  sub_1004C();
  return sub_D2EC((uint64_t)v5);
}

uint64_t sub_C4D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_41BC(&qword_A0530);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  sub_CDF8(a1, (uint64_t)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = (v11 + 40) & ~v11;
  uint64_t v13 = (void *)swift_allocObject(&unk_949D0, v12 + v10, v11 | 7);
  v13[2] = a2;
  v13[3] = a3;
  v13[4] = a4;
  sub_CE44((uint64_t)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL), (uint64_t)v13 + v12);
  swift_retain(a2);
  swift_retain(a4);
  sub_10024();
  return swift_release(v13);
}

uint64_t sub_C5C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_41BC(&qword_A0530);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v22 - v15;
  sub_CDF8(a1, (uint64_t)&v22 - v15);
  sub_CDF8(a5, (uint64_t)v14);
  uint64_t v17 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v18 = (v17 + 40) & ~v17;
  uint64_t v19 = (v12 + v17 + v18) & ~v17;
  unint64_t v20 = (void *)swift_allocObject(&unk_949F8, v19 + v12, v17 | 7);
  void v20[2] = a2;
  v20[3] = a3;
  v20[4] = a4;
  sub_CE44((uint64_t)v16, (uint64_t)v20 + v18);
  sub_CE44((uint64_t)v14, (uint64_t)v20 + v19);
  swift_retain(a2);
  swift_retain(a4);
  sub_10074();
  return swift_release(v20);
}

uint64_t sub_C708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v27[1] = a2;
  uint64_t v11 = sub_41BC(&qword_A0530);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)v27 - v17;
  __chkstk_darwin(v16);
  unint64_t v20 = (char *)v27 - v19;
  sub_CDF8(a1, (uint64_t)v27 - v19);
  sub_CDF8(a5, (uint64_t)v18);
  sub_CDF8(a6, (uint64_t)v15);
  uint64_t v21 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v22 = (v21 + 32) & ~v21;
  uint64_t v23 = (v13 + v21 + v22) & ~v21;
  uint64_t v24 = (v13 + v21 + v23) & ~v21;
  uint64_t v25 = swift_allocObject(&unk_94A20, v24 + v13, v21 | 7);
  *(void *)(v25 + 16) = a3;
  *(void *)(v25 + 24) = a4;
  sub_CE44((uint64_t)v20, v25 + v22);
  sub_CE44((uint64_t)v18, v25 + v23);
  sub_CE44((uint64_t)v15, v25 + v24);
  swift_retain(a4);
  sub_FFFC();
  return swift_release(v25);
}

void sub_C884( void (*a1)(char *, uint64_t *, uint64_t), void (*a2)(uint64_t *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v42 = a6;
  uint64_t v44 = a5;
  uint64_t v46 = a3;
  __int128 v47 = a2;
  uint64_t v8 = sub_D2D4();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v40 = (uint64_t)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v43 = (uint64_t)&v39 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v45 = (uint64_t)&v39 - v15;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v39 - v16;
  uint64_t v18 = sub_41BC(&qword_A0530);
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v21 = (uint64_t *)((char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v24 = (uint64_t *)((char *)&v39 - v23);
  uint64_t v25 = __chkstk_darwin(v22);
  uint64_t v27 = (uint64_t *)((char *)&v39 - v26);
  __chkstk_darwin(v25);
  uint64_t v29 = (uint64_t *)((char *)&v39 - v28);
  sub_CDF8((uint64_t)a1, (uint64_t)&v39 - v28);
  if (sub_D30C((uint64_t)v29) == 1)
  {
    uint64_t v30 = 0LL;
    sub_D2BC();
    uint64_t v32 = *v29;
    char v33 = 1;
  }

  else
  {
    a1 = *(void (**)(char *, uint64_t *, uint64_t))(v9 + 32);
    uint64_t v41 = v17;
    a1(v17, v29, v8);
    sub_CDF8(a4, (uint64_t)v27);
    if (sub_D30C((uint64_t)v27) == 1)
    {
      uint64_t v44 = 0LL;
      uint64_t v42 = 0LL;
      sub_D2BC();
      uint64_t v32 = *v27;
      char v33 = 1;
    }

    else
    {
      uint64_t v39 = v9;
      sub_D340(v45, (uint64_t)v27);
      sub_CDF8(v44, (uint64_t)v24);
      if (sub_D30C((uint64_t)v24) == 1)
      {
        uint64_t v44 = 0LL;
        uint64_t v42 = 0LL;
        sub_D2BC();
        uint64_t v32 = *v24;
        char v33 = 1;
      }

      else
      {
        uint64_t v34 = v43;
        sub_D340(v43, (uint64_t)v24);
        sub_CDF8(v42, (uint64_t)v21);
        int v35 = sub_D30C((uint64_t)v21);
        char v33 = v35 == 1;
        if (v35 == 1)
        {
          uint64_t v44 = 0LL;
          uint64_t v42 = 0LL;
          a1 = 0LL;
          uint64_t v8 = 0LL;
          uint64_t v37 = v34;
          uint64_t v17 = 0LL;
          uint64_t v18 = 0LL;
          a4 = 0LL;
          uint64_t v32 = *v21;
        }

        else
        {
          uint64_t v36 = v40;
          sub_D340(v40, (uint64_t)v21);
          sub_CBDC(&v48);
          uint64_t v32 = v48;
          uint64_t v44 = v49;
          a1 = v51;
          uint64_t v42 = v50;
          uint64_t v8 = v52;
          uint64_t v17 = v53;
          uint64_t v18 = v54;
          a4 = v55;
          sub_D314(v36);
          uint64_t v37 = v43;
        }

        sub_D314(v37);
      }

      sub_D314(v45);
    }

    sub_D314((uint64_t)v41);
    uint64_t v31 = v44;
    uint64_t v30 = v42;
  }

  uint64_t v48 = v32;
  uint64_t v49 = v31;
  uint64_t v50 = v30;
  uint64_t v51 = a1;
  uint64_t v52 = v8;
  uint64_t v53 = v17;
  uint64_t v54 = v18;
  uint64_t v55 = a4;
  char v56 = v33;
  uint64_t v38 = v31;
  v47(&v48);
  sub_D240(v32, v38, v30, (uint64_t)a1, v8, (uint64_t)v17, v18, a4, v33);
  sub_6360();
}

void sub_CBDC(void *a1@<X8>)
{
  uint64_t v2 = (void *)((uint64_t (*)(void))TemplatingResult.print.getter)();
  if (!v2[2])
  {
    __break(1u);
    goto LABEL_7;
  }

  uint64_t v4 = v2[4];
  uint64_t v3 = v2[5];
  swift_bridgeObjectRetain(v3);
  uint64_t v5 = sub_D304();
  uint64_t v6 = (void *)TemplatingResult.print.getter(v5);
  if (!v6[2])
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }

  uint64_t v8 = v6[4];
  uint64_t v7 = v6[5];
  swift_bridgeObjectRetain(v7);
  uint64_t v9 = sub_D304();
  uint64_t v10 = (void *)TemplatingResult.print.getter(v9);
  if (!v10[2])
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }

  uint64_t v12 = v10[4];
  uint64_t v11 = v10[5];
  swift_bridgeObjectRetain(v11);
  uint64_t v13 = sub_D304();
  uint64_t v14 = (void *)TemplatingResult.print.getter(v13);
  if (v14[2])
  {
    uint64_t v16 = v14[4];
    uint64_t v15 = v14[5];
    swift_bridgeObjectRetain(v15);
    sub_D304();
    *a1 = v4;
    a1[1] = v3;
    a1[2] = v8;
    a1[3] = v7;
    a1[4] = v12;
    a1[5] = v11;
    a1[6] = v16;
    a1[7] = v15;
    sub_6360();
    return;
  }

LABEL_9:
  __break(1u);
}

void sub_CCC0()
{
}

void sub_CCEC()
{
}

uint64_t sub_CD18()
{
  return swift_release(*(void *)(v0 + qword_A04C0));
}

uint64_t sub_CD28()
{
  uint64_t v0 = DucTemplatingService.deinit();
  swift_release(*(void *)(v0 + qword_A04C0));
  return swift_deallocClassInstance(v0, 24LL, 7LL);
}

uint64_t sub_CD64()
{
  return type metadata accessor for DisplayTextTemplatingService(0LL);
}

unint64_t sub_CD6C()
{
  unint64_t result = qword_A0520;
  if (!qword_A0520)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_A0520);
  }

  return result;
}

unint64_t sub_CDA8()
{
  unint64_t result = qword_A0528;
  if (!qword_A0528)
  {
    type metadata accessor for INIntentSlotValueType(255LL);
    unint64_t result = swift_getWitnessTable(&unk_6F888, v1);
    atomic_store(result, (unint64_t *)&qword_A0528);
  }

  return result;
}

uint64_t sub_CDEC(uint64_t a1)
{
  return sub_C4D4(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_CDF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_41BC(&qword_A0530);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_CE44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_41BC(&qword_A0530);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_CE8C(uint64_t a1)
{
  return sub_CF84(a1, (uint64_t (*)(uint64_t, void, void, void, char *))sub_C5C8);
}

uint64_t sub_CE9C(uint64_t a1)
{
  return sub_D08C(a1, (uint64_t (*)(uint64_t, void, void, void, char *, char *))sub_C708);
}

uint64_t sub_CEB4()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_CED8(uint64_t a1)
{
  return sub_C0B8(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_CEE8()
{
  uint64_t v1 = sub_41BC(&qword_A0530);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  sub_D338();
  sub_D330();
  if (swift_getEnumCaseMultiPayload(v0 + v4, v1) == 1)
  {
    swift_errorRelease(*(void *)(v0 + v4));
  }

  else
  {
    uint64_t v6 = sub_D2D4();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8LL))(v0 + v4, v6);
  }

  return sub_D2DC(v0, v4 + v5, v3 | 7);
}

uint64_t sub_CF78(uint64_t a1)
{
  return sub_CF84(a1, (uint64_t (*)(uint64_t, void, void, void, char *))sub_C1AC);
}

uint64_t sub_CF84(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, char *))
{
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(sub_41BC(&qword_A0530) - 8) + 80LL);
  return a2(a1, *((void *)v2 + 2), *((void *)v2 + 3), *((void *)v2 + 4), &v2[(v4 + 40) & ~v4]);
}

uint64_t sub_CFE0()
{
  uint64_t v1 = *(void *)(sub_41BC(&qword_A0530) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  sub_D338();
  sub_D330();
  if (sub_D2B0() == 1)
  {
    sub_D2FC();
  }

  else
  {
    uint64_t v4 = sub_D2D4();
    sub_D29C(v4);
  }

  if (sub_D2B0() == 1)
  {
    sub_D2FC();
  }

  else
  {
    uint64_t v5 = sub_D2D4();
    sub_D29C(v5);
  }

  return sub_D2DC(v0, ((v3 + v2 + ((v2 + 40) & ~v2)) & ~v2) + v3, v2 | 7);
}

uint64_t sub_D080(uint64_t a1)
{
  return sub_D08C(a1, (uint64_t (*)(uint64_t, void, void, void, char *, char *))sub_C2EC);
}

uint64_t sub_D08C(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, char *, char *))
{
  uint64_t v4 = *(void *)(sub_41BC(&qword_A0530) - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  return a2( a1,  *((void *)v2 + 2),  *((void *)v2 + 3),  *((void *)v2 + 4),  &v2[(v5 + 40) & ~v5],  &v2[(*(void *)(v4 + 64) + v5 + ((v5 + 40) & ~v5)) & ~v5]);
}

uint64_t sub_D0FC()
{
  uint64_t v1 = *(void *)(sub_41BC(&qword_A0530) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  swift_release(*(void *)(v0 + 24));
  if (sub_D2B0() == 1)
  {
    sub_D2FC();
  }

  else
  {
    uint64_t v4 = sub_D2D4();
    sub_D29C(v4);
  }

  if (sub_D2B0() == 1)
  {
    sub_D2FC();
  }

  else
  {
    uint64_t v5 = sub_D2D4();
    sub_D29C(v5);
  }

  if (sub_D2B0() == 1)
  {
    sub_D2FC();
  }

  else
  {
    uint64_t v6 = sub_D2D4();
    sub_D29C(v6);
  }

  return swift_deallocObject(v0, ((v3 + v2 + ((v3 + v2 + ((v2 + 32) & ~v2)) & ~v2)) & ~v2) + v3, v2 | 7);
}

void sub_D1D8(void (*a1)(char *, uint64_t *, uint64_t))
{
  uint64_t v3 = *(void *)(sub_41BC(&qword_A0530) - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  sub_C884( a1,  *(void (**)(uint64_t *))(v1 + 16),  *(void *)(v1 + 24),  v1 + ((v4 + 32) & ~v4),  v1 + ((*(void *)(v3 + 64) + v4 + ((v4 + 32) & ~v4)) & ~v4),  v1 + ((*(void *)(v3 + 64) + v4 + ((*(void *)(v3 + 64) + v4 + ((v4 + 32) & ~v4)) & ~v4)) & ~v4));
}

uint64_t sub_D240( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if ((a9 & 1) != 0) {
    return swift_errorRelease(a1);
  }
  swift_bridgeObjectRelease(a2);
  swift_bridgeObjectRelease(a4);
  sub_D304();
  return swift_bridgeObjectRelease(a8);
}

uint64_t sub_D29C(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8LL))(v1, a1);
}

uint64_t sub_D2B0()
{
  return swift_getEnumCaseMultiPayload(v1, v0);
}

  ;
}

uint64_t sub_D2D4()
{
  return type metadata accessor for TemplatingResult(0LL);
}

uint64_t sub_D2DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_deallocObject(a1, a2, a3);
}

uint64_t sub_D2EC(uint64_t a1)
{
  return swift_release(a1);
}

uint64_t sub_D2FC()
{
  return swift_errorRelease(*v0);
}

uint64_t sub_D304()
{
  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_D30C(uint64_t a1)
{
  return swift_getEnumCaseMultiPayload(a1, v1);
}

uint64_t sub_D314(uint64_t a1)
{
  return v1(a1, v2);
}

uint64_t sub_D31C(uint64_t a1)
{
  return swift_allocObject(a1, 40LL, 7LL);
}

uint64_t sub_D328()
{
  return swift_retain(v0);
}

uint64_t sub_D330()
{
  return swift_release(*(void *)(v0 + 32));
}

uint64_t sub_D338()
{
  return swift_release(*(void *)(v0 + 16));
}

uint64_t sub_D340(uint64_t a1, uint64_t a2)
{
  return v3(a1, a2, v2);
}

uint64_t sub_D348(void (*a1)(uint64_t *__return_ptr, char *))
{
  uint64_t v3 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_41BC(&qword_A0530);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_CDF8(v1, (uint64_t)v9);
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v9, v3);
  a1(&v13, v6);
  uint64_t v10 = v13;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v10;
}

uint64_t sub_D46C@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, void *a5@<X4>, void *a6@<X8>)
{
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v13 = type metadata accessor for Logger(0LL);
  uint64_t v14 = sub_4870(v13, (uint64_t)qword_A3EB0);
  uint64_t v15 = (os_log_s *)Logger.logObject.getter(v14);
  os_log_type_t v16 = static os_log_type_t.debug.getter();
  if (sub_E310(v16))
  {
    *(_WORD *)sub_A968() = 0;
    sub_E304(&dword_0, v15, v6, "[SendAnnouncementViewBuilders] Providing ErrorButtonBuilder");
    sub_E2F4();
  }

  uint64_t v17 = a5[3];
  uint64_t v18 = a5[4];
  sub_8504(a5, v17);
  if ((dispatch thunk of DeviceState.isWatch.getter(v17, v18) & 1) != 0)
  {
    unint64_t v19 = 0x80000000000767B0LL;
    unint64_t v20 = 0xD000000000000012LL;
  }

  else
  {
    if (qword_9F7E0 != -1) {
      swift_once(&qword_9F7E0, sub_F85C);
    }
    unint64_t v20 = qword_A3E60;
    unint64_t v19 = *(void *)algn_A3E68;
    swift_bridgeObjectRetain(*(void *)algn_A3E68);
  }

  type metadata accessor for App(0LL);
  uint64_t v21 = App.__allocating_init(appIdentifier:)(v20, v19);
  uint64_t v22 = (os_log_s *)Logger.logObject.getter([a4 code]);
  os_log_type_t v23 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v22, v23))
  {
    *(_WORD *)sub_A968() = 0;
    sub_E304(&dword_0, v22, v23, "[SendAnnouncementViewBuilders] Defaulting to Home app button");
    sub_E2F4();
  }

  sub_7B50(0LL, &qword_A0558, &OBJC_CLASS___SAIntentGroupLaunchAppWithIntent_ptr);
  uint64_t v24 = static SAIntentGroupLaunchAppWithIntent.launchAppWithIntent(app:intent:intentResponse:)(a2, a3, a4);
  sub_BB78((uint64_t)a5, (uint64_t)v28);
  a6[3] = &type metadata for ButtonBuilder;
  a6[4] = &off_94C58;
  uint64_t v25 = (void *)sub_AA48((uint64_t)&unk_94B50, 80LL);
  *a6 = v25;
  uint64_t v26 = sub_AA48((uint64_t)&unk_94B78, 32LL);
  *(void *)(v26 + 16) = a1;
  *(void *)(v26 + 24) = v21;
  v25[2] = sub_DF08;
  v25[3] = v26;
  v25[4] = v24;
  sub_A780(v28, (uint64_t)(v25 + 5));
  return swift_retain(a1);
}

uint64_t sub_D6EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_D9B0(a1, a2, a3, "ButtonBuilder: Building button views for Watch", (uint64_t)&unk_94B00, (uint64_t)sub_DE0C);
}

void sub_D708(unint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = TemplatingResult.sections.getter();
  uint64_t v9 = *(void *)(v8 + 16);
  swift_bridgeObjectRelease(v8);
  unint64_t v10 = (unint64_t)a2 >> 62;
  if (v9)
  {
    if (v10)
    {
      if (a2 < 0) {
        uint64_t v27 = a2;
      }
      else {
        uint64_t v27 = a2 & 0xFFFFFFFFFFFFFF8LL;
      }
      uint64_t v28 = sub_7B50(0LL, &qword_A0538, &OBJC_CLASS___SAAceView_ptr);
      swift_bridgeObjectRetain(a2);
      uint64_t v29 = _bridgeCocoaArray<A>(_:)(v27, v28);
      swift_bridgeObjectRelease(a2);
      a2 = v29;
    }

    else
    {
      uint64_t v11 = swift_bridgeObjectRetain(a2);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v11);
      sub_7B50(0LL, &qword_A0538, &OBJC_CLASS___SAAceView_ptr);
    }

    uint64_t v12 = sub_7B50(0LL, (unint64_t *)&unk_A0540, &OBJC_CLASS___SASTItemGroup_ptr);
    uint64_t v13 = (void *)TemplatingResult.print.getter(v12);
    unint64_t v14 = v13[2];
    if (v14)
    {
      uint64_t v15 = v13;
      uint64_t v16 = v13[4];
      uint64_t v17 = v13[5];
      swift_bridgeObjectRetain(v17);
      swift_bridgeObjectRelease(v15);
      uint64_t v18 = sub_41BC(&qword_A2100);
      uint64_t v19 = swift_allocObject(v18, 40LL, 7LL);
      *(_OWORD *)(v19 + 16) = xmmword_6FCA0;
      uint64_t v20 = a3[2];
      *(void *)(v19 + 32) = v20;
      uint64_t v33 = v19;
      specialized Array._endMutation()(v19, v21);
      swift_unknownObjectRetain(v20);
      id v22 = sub_3C3B0(v16, v17, v33, 1);
      swift_bridgeObjectRelease(v17);
      swift_bridgeObjectRelease(v33);
      uint64_t v32 = a2;
      swift_bridgeObjectRetain(a2);
      a3 = v22;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      a1 = *(void *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFFF8LL));
      unint64_t v14 = *(void *)((char *)&dword_18 + (a2 & 0xFFFFFFFFFFFFFF8LL));
      if (a1 < v14 >> 1)
      {
LABEL_6:
        uint64_t v23 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(a1, a3);
        specialized Array._endMutation()(v23, v24);
        uint64_t v25 = v32;
        swift_bridgeObjectRelease(a2);

        goto LABEL_7;
      }
    }

    else
    {
      __break(1u);
    }

    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, a1 + 1, 1LL);
    goto LABEL_6;
  }

  if (!v10)
  {
    uint64_t v26 = swift_bridgeObjectRetain(a2);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v26);
    sub_7B50(0LL, &qword_A0538, &OBJC_CLASS___SAAceView_ptr);
    goto LABEL_10;
  }

  if (a2 < 0) {
    uint64_t v30 = a2;
  }
  else {
    uint64_t v30 = a2 & 0xFFFFFFFFFFFFFF8LL;
  }
  uint64_t v31 = sub_7B50(0LL, &qword_A0538, &OBJC_CLASS___SAAceView_ptr);
  swift_bridgeObjectRetain(a2);
  uint64_t v25 = _bridgeCocoaArray<A>(_:)(v30, v31);
  swift_bridgeObjectRelease(a2);
LABEL_7:
  a2 = v25;
LABEL_10:
  *a4 = a2;
}

uint64_t sub_D994(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_D9B0(a1, a2, a3, "ButtonBuilder: Building button views for Phone", (uint64_t)&unk_94B28, (uint64_t)sub_DE80);
}

uint64_t sub_D9B0(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = v6;
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v15 = type metadata accessor for Logger(0LL);
  uint64_t v16 = sub_4870(v15, (uint64_t)qword_A3EB0);
  uint64_t v17 = (os_log_s *)Logger.logObject.getter(v16);
  os_log_type_t v18 = static os_log_type_t.info.getter();
  if (sub_E310(v18))
  {
    *(_WORD *)sub_A968() = 0;
    sub_E304(&dword_0, v17, v7, a4);
    sub_E2F4();
  }

  uint64_t v19 = *v11;
  sub_DDD4((uint64_t)v11, (uint64_t)v24);
  uint64_t v20 = sub_AA48(a5, 104LL);
  *(void *)(v20 + 16) = a2;
  *(void *)(v20 + 24) = a3;
  *(void *)(v20 + 32) = a1;
  __int128 v21 = v24[1];
  *(_OWORD *)(v20 + 40) = v24[0];
  *(_OWORD *)(v20 + 56) = v21;
  __int128 v22 = v24[3];
  *(_OWORD *)(v20 + 72) = v24[2];
  *(_OWORD *)(v20 + 88) = v22;
  swift_retain(a3);
  swift_bridgeObjectRetain(a1);
  v19(a6, v20);
  return swift_release(v20);
}

uint64_t sub_DAF0( uint64_t a1, void (*a2)(uint64_t, void), uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t *__return_ptr, char *))
{
  uint64_t v7 = sub_D348(a6);
  char v9 = v8 & 1;
  a2(v7, v8 & 1);
  return sub_7AF8(v7, v9);
}

void sub_DB5C(unint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = TemplatingResult.sections.getter();
  uint64_t v9 = *(void *)(v8 + 16);
  swift_bridgeObjectRelease(v8);
  unint64_t v10 = (unint64_t)a2 >> 62;
  if (v9)
  {
    if (v10)
    {
      if (a2 < 0) {
        uint64_t v27 = a2;
      }
      else {
        uint64_t v27 = a2 & 0xFFFFFFFFFFFFFF8LL;
      }
      uint64_t v28 = sub_7B50(0LL, &qword_A0538, &OBJC_CLASS___SAAceView_ptr);
      swift_bridgeObjectRetain(a2);
      uint64_t v29 = _bridgeCocoaArray<A>(_:)(v27, v28);
      swift_bridgeObjectRelease(a2);
      a2 = v29;
    }

    else
    {
      uint64_t v11 = swift_bridgeObjectRetain(a2);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v11);
      sub_7B50(0LL, &qword_A0538, &OBJC_CLASS___SAAceView_ptr);
    }

    uint64_t v12 = sub_7B50(0LL, &qword_A0550, &OBJC_CLASS___SAUIButton_ptr);
    uint64_t v13 = (void *)TemplatingResult.print.getter(v12);
    unint64_t v14 = v13[2];
    if (v14)
    {
      uint64_t v15 = v13;
      uint64_t v16 = v13[4];
      uint64_t v17 = v13[5];
      swift_bridgeObjectRetain(v17);
      swift_bridgeObjectRelease(v15);
      uint64_t v18 = sub_41BC(&qword_A2100);
      uint64_t v19 = swift_allocObject(v18, 40LL, 7LL);
      *(_OWORD *)(v19 + 16) = xmmword_6FCA0;
      uint64_t v20 = a3[2];
      *(void *)(v19 + 32) = v20;
      specialized Array._endMutation()(v19, v21);
      swift_unknownObjectRetain(v20);
      id v22 = sub_3C4D0(v16, v17);
      uint64_t v32 = a2;
      swift_bridgeObjectRetain(a2);
      a3 = v22;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      a1 = *(void *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFFF8LL));
      unint64_t v14 = *(void *)((char *)&dword_18 + (a2 & 0xFFFFFFFFFFFFFF8LL));
      if (a1 < v14 >> 1)
      {
LABEL_6:
        uint64_t v23 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(a1, a3);
        specialized Array._endMutation()(v23, v24);
        uint64_t v25 = v32;
        swift_bridgeObjectRelease(a2);

        goto LABEL_7;
      }
    }

    else
    {
      __break(1u);
    }

    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, a1 + 1, 1LL);
    goto LABEL_6;
  }

  if (!v10)
  {
    uint64_t v26 = swift_bridgeObjectRetain(a2);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v26);
    sub_7B50(0LL, &qword_A0538, &OBJC_CLASS___SAAceView_ptr);
    goto LABEL_10;
  }

  if (a2 < 0) {
    uint64_t v30 = a2;
  }
  else {
    uint64_t v30 = a2 & 0xFFFFFFFFFFFFFF8LL;
  }
  uint64_t v31 = sub_7B50(0LL, &qword_A0538, &OBJC_CLASS___SAAceView_ptr);
  swift_bridgeObjectRetain(a2);
  uint64_t v25 = _bridgeCocoaArray<A>(_:)(v30, v31);
  swift_bridgeObjectRelease(a2);
LABEL_7:
  a2 = v25;
LABEL_10:
  *a4 = a2;
}

uint64_t sub_DDD4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_DE0C(uint64_t a1)
{
  return sub_DAF0( a1,  *(void (**)(uint64_t, void))(v1 + 16),  *(void *)(v1 + 24),  *(void *)(v1 + 32),  v1 + 40,  (void (*)(uint64_t *__return_ptr, char *))sub_DE34);
}

void sub_DE34(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
}

uint64_t sub_DE40()
{
  return swift_deallocObject(v0, 104LL, 7LL);
}

uint64_t sub_DE80(uint64_t a1)
{
  return sub_DAF0( a1,  *(void (**)(uint64_t, void))(v1 + 16),  *(void *)(v1 + 24),  *(void *)(v1 + 32),  v1 + 40,  (void (*)(uint64_t *__return_ptr, char *))sub_DEA8);
}

void sub_DEA8(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
}

uint64_t sub_DEB0()
{
  return swift_deallocObject(v0, 80LL, 7LL);
}

uint64_t sub_DEE0()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

void sub_DF08(uint64_t a1, uint64_t a2)
{
}

uint64_t initializeBufferWithCopyOfBuffer for ButtonBuilder(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain(v2);
  return v3;
}

uint64_t destroy for ButtonBuilder(void *a1)
{
  return sub_423C(a1 + 3);
}

uint64_t initializeWithCopy for ButtonBuilder(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + sub_423C(v0 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = a2 + 24;
  __int128 v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 4sub_423C(v0 + 8) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_retain(v3);
  swift_unknownObjectRetain(v4);
  v8(a1 + 24, v5, v7);
  return a1;
}

void *assignWithCopy for ButtonBuilder(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  uint64_t v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  uint64_t v6 = a2[2];
  uint64_t v7 = a1[2];
  a1[2] = v6;
  swift_unknownObjectRetain(v6);
  swift_unknownObjectRelease(v7);
  sub_E074(a1 + 3, a2 + 3);
  return a1;
}

void *sub_E074(void *result, void *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v9 = *(void *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        uint64_t v11 = *result;
        uint64_t v12 = *a2;
        swift_retain(*a2);
        unint64_t result = (void *)swift_release(v11);
        void *v3 = v12;
      }

      else
      {
        return (void *)(*(uint64_t (**)(void *, void *, void))(v9 + 24))(result, a2, result[3]);
      }
    }

    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      int v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        uint64_t v10 = *result;
        if ((v8 & 0x20000) != 0)
        {
          uint64_t v14 = *a2;
          void *v3 = *a2;
          swift_retain(v14);
        }

        else
        {
          (*(void (**)(void *, void *, uint64_t))(v7 + 16))(result, a2, v5);
        }

        return (void *)swift_release(v10);
      }

      else
      {
        (*(void (**)(_BYTE *, void *, uint64_t))(v6 + 32))(v15, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          uint64_t v13 = *a2;
          void *v3 = *a2;
          swift_retain(v13);
        }

        else
        {
          (*(void (**)(void *, void *, uint64_t))(v7 + 16))(v3, a2, v5);
        }

        return (void *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v15, v4);
      }
    }
  }

  return result;
}

__n128 initializeWithTake for ButtonBuilder(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  __int128 v3 = *(_OWORD *)(a2 + 16);
  __int128 v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 4sub_423C(v0 + 8) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ButtonBuilder(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  uint64_t v5 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_unknownObjectRelease(v5);
  sub_423C((void *)(a1 + 24));
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for ButtonBuilder(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }

    else
    {
      uint64_t v2 = *a1;
    }
  }

  else
  {
    LODWORD(v2) = -1;
  }

  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ButtonBuilder(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0LL;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + sub_423C(v0 + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 64) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for ButtonBuilder()
{
  return &type metadata for ButtonBuilder;
}

uint64_t sub_E2F4()
{
  return swift_slowDealloc(v0, -1LL, -1LL);
}

void sub_E304(void *a1, os_log_s *a2, os_log_type_t a3, const char *a4)
{
}

BOOL sub_E310(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_E320()
{
  return swift_release(*(void *)(v0 + 24));
}

uint64_t HomeAppLaunchModel.bundleId.setter(uint64_t a1)
{
  uint64_t v1 = sub_41BC(&qword_A0038);
  return sub_9328(v1, v2, v3, v4, v5, v6, v7, v8, a1);
}

uint64_t property wrapper backing initializer of HomeAppLaunchModel.buttonLabel(uint64_t a1, uint64_t a2)
{
  v3[0] = a1;
  v3[1] = a2;
  return Loggable.init(wrappedValue:)(v3, &type metadata for String);
}

uint64_t HomeAppLaunchModel.buttonLabel.getter()
{
  uint64_t v0 = sub_41BC(&qword_A0038);
  Loggable.wrappedValue.getter(&v2, v0);
  return v2;
}

uint64_t type metadata accessor for HomeAppLaunchModel(uint64_t a1)
{
  uint64_t result = qword_A0640;
  if (!qword_A0640) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HomeAppLaunchModel);
  }
  return result;
}

uint64_t HomeAppLaunchModel.buttonLabel.setter(uint64_t a1)
{
  uint64_t v1 = sub_41BC(&qword_A0038);
  return sub_9328(v1, v2, v3, v4, v5, v6, v7, v8, a1);
}

void HomeAppLaunchModel.buttonLabel.modify()
{
  uint64_t v1 = sub_92D8();
  void *v0 = v1;
  sub_F23C();
  uint64_t v2 = sub_41BC(&qword_A0038);
  v1[4] = sub_92E4(v2);
  sub_9304();
}

void *HomeAppLaunchModel.responseViewId.unsafeMutableAddressor()
{
  return &static HomeAppLaunchModel.responseViewId;
}

unint64_t static HomeAppLaunchModel.responseViewId.getter()
{
  return 0xD00000000000001FLL;
}

BOOL sub_E4B0(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void sub_E4C0(uint64_t a1, char a2)
{
}

uint64_t sub_E4E4(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6449656C646E7562LL && a2 == 0xE800000000000000LL;
  if (v3
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0x6449656C646E7562LL, 0xE800000000000000LL, a1, a2, 0LL) & 1) != 0)
  {
    swift_bridgeObjectRelease(a2);
    return 0LL;
  }

  else if (a1 == 0x614C6E6F74747562LL && a2 == 0xEB000000006C6562LL)
  {
    swift_bridgeObjectRelease(a2);
    return 1LL;
  }

  else
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x614C6E6F74747562LL, 0xEB000000006C6562LL, a1, a2, 0LL);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0) {
      return 1LL;
    }
    else {
      return 2LL;
    }
  }

uint64_t sub_E5D8()
{
  return 2LL;
}

Swift::Int sub_E5E0(char a1)
{
  return Hasher._finalize()();
}

uint64_t sub_E624(char a1)
{
  if ((a1 & 1) != 0) {
    return 0x614C6E6F74747562LL;
  }
  else {
    return 0x6449656C646E7562LL;
  }
}

BOOL sub_E664(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_E4B0(*a1, *a2);
}

Swift::Int sub_E670()
{
  return sub_E5E0(*v0);
}

void sub_E678(uint64_t a1)
{
}

uint64_t sub_E680()
{
  return sub_E624(*v0);
}

uint64_t sub_E688@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = sub_E4E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_E6AC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result = sub_E5D8();
  *a1 = result;
  return result;
}

uint64_t sub_E6D0(uint64_t a1)
{
  unint64_t v2 = sub_E848();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_E6F8(uint64_t a1)
{
  unint64_t v2 = sub_E848();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t HomeAppLaunchModel.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_41BC(&qword_A05C0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_9298();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  sub_8504(a1, v10);
  unint64_t v12 = sub_E848();
  dispatch thunk of Encoder.container<A>(keyedBy:)( &type metadata for HomeAppLaunchModel.CodingKeys,  &type metadata for HomeAppLaunchModel.CodingKeys,  v12,  v10,  v11);
  char v16 = 0;
  sub_41BC(&qword_A0038);
  sub_EAE4(&qword_A0058, (uint64_t)&protocol conformance descriptor for <A> Loggable<A>);
  sub_92A8(v3, (uint64_t)&v16);
  if (!v2)
  {
    uint64_t v13 = v3 + *(int *)(type metadata accessor for HomeAppLaunchModel(0LL) + 20);
    char v15 = 1;
    sub_92A8(v13, (uint64_t)&v15);
  }

  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
}

unint64_t sub_E848()
{
  unint64_t result = qword_A05C8;
  if (!qword_A05C8)
  {
    unint64_t result = swift_getWitnessTable(&unk_702A8, &type metadata for HomeAppLaunchModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_A05C8);
  }

  return result;
}

uint64_t HomeAppLaunchModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v25 = sub_41BC(&qword_A0038);
  uint64_t v23 = *(void *)(v25 - 8);
  uint64_t v4 = __chkstk_darwin(v25);
  uint64_t v21 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v4);
  uint64_t v24 = (char *)&v18 - v6;
  uint64_t v22 = sub_41BC(&qword_A05D0);
  __chkstk_darwin(v22);
  sub_9298();
  uint64_t v7 = type metadata accessor for HomeAppLaunchModel(0LL);
  __chkstk_darwin(v7);
  sub_9298();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = a1[3];
  uint64_t v12 = a1[4];
  sub_8504(a1, v11);
  unint64_t v13 = sub_E848();
  dispatch thunk of Decoder.container<A>(keyedBy:)( &type metadata for HomeAppLaunchModel.CodingKeys,  &type metadata for HomeAppLaunchModel.CodingKeys,  v13,  v11,  v12);
  if (v2) {
    return sub_423C(a1);
  }
  uint64_t v18 = v7;
  uint64_t v19 = a1;
  uint64_t v14 = v21;
  uint64_t v15 = v23;
  char v27 = 0;
  sub_EAE4(&qword_A0070, (uint64_t)&protocol conformance descriptor for <A> Loggable<A>);
  sub_F230();
  char v16 = v24;
  uint64_t v24 = *(char **)(v15 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v24)(v10, v16, v25);
  char v26 = 1;
  sub_F230();
  sub_F220();
  ((void (*)(uint64_t, char *, uint64_t))v24)(v10 + *(int *)(v18 + 20), v14, v25);
  sub_EB48(v10, v20);
  sub_423C(v19);
  return sub_EB8C(v10);
}

uint64_t sub_EAE4(unint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v5 = sub_8564(&qword_A0038);
    uint64_t result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }

  return result;
}

uint64_t sub_EB48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HomeAppLaunchModel(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_EB8C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for HomeAppLaunchModel(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_EBC8()
{
  return sub_EC10(&qword_A05D8, (uint64_t)&protocol conformance descriptor for HomeAppLaunchModel);
}

uint64_t sub_EBEC()
{
  return sub_EC10(&qword_A05E0, (uint64_t)&protocol conformance descriptor for HomeAppLaunchModel);
}

uint64_t sub_EC10(unint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v5 = type metadata accessor for HomeAppLaunchModel(255LL);
    uint64_t result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }

  return result;
}

uint64_t sub_EC50@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return HomeAppLaunchModel.init(from:)(a1, a2);
}

uint64_t sub_EC64(void *a1)
{
  return HomeAppLaunchModel.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for HomeAppLaunchModel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v9);
  }

  else
  {
    uint64_t v7 = sub_41BC(&qword_A0038);
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16LL);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
  }

  return a1;
}

uint64_t destroy for HomeAppLaunchModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_41BC(&qword_A0038);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL);
  v6(a1, v4);
  return ((uint64_t (*)(uint64_t, uint64_t))v6)(a1 + *(int *)(a2 + 20), v4);
}

uint64_t initializeWithCopy for HomeAppLaunchModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_41BC(&qword_A0038);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t assignWithCopy for HomeAppLaunchModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_41BC(&qword_A0038);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24LL);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t initializeWithTake for HomeAppLaunchModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_41BC(&qword_A0038);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t assignWithTake for HomeAppLaunchModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_41BC(&qword_A0038);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40LL);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for HomeAppLaunchModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_EF60);
}

uint64_t sub_EF60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_41BC(&qword_A0038);
  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for HomeAppLaunchModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_EFA4);
}

uint64_t sub_EFA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_41BC(&qword_A0038);
  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(a1, a2, a2, v4);
}

void sub_EFE0(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(v2 - 8) + 64LL;
    v4[1] = v4[0];
    swift_initStructMetadata(a1, 256LL, 2LL, v4, a1 + 16);
  }

void sub_F048()
{
  if (!qword_A00F8)
  {
    unint64_t v0 = type metadata accessor for Loggable(0LL, &type metadata for String);
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_A00F8);
    }
  }

uint64_t storeEnumTagSinglePayload for HomeAppLaunchModel.CodingKeys( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_F0DC + 4 * byte_70145[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_F110 + 4 * byte_70140[v4]))();
}

uint64_t sub_F110(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_F118(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0xF120LL);
  }
  return result;
}

uint64_t sub_F12C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0xF134LL);
  }
  *(_BYTE *)uint64_t result = a2 + 1;
  return result;
}

uint64_t sub_F138(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_F140(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HomeAppLaunchModel.CodingKeys()
{
  return &type metadata for HomeAppLaunchModel.CodingKeys;
}

unint64_t sub_F160()
{
  unint64_t result = qword_A0678;
  if (!qword_A0678)
  {
    unint64_t result = swift_getWitnessTable(&unk_70280, &type metadata for HomeAppLaunchModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_A0678);
  }

  return result;
}

unint64_t sub_F1A0()
{
  unint64_t result = qword_A0680;
  if (!qword_A0680)
  {
    unint64_t result = swift_getWitnessTable(&unk_701F0, &type metadata for HomeAppLaunchModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_A0680);
  }

  return result;
}

unint64_t sub_F1E0()
{
  unint64_t result = qword_A0688;
  if (!qword_A0688)
  {
    unint64_t result = swift_getWitnessTable(&unk_70218, &type metadata for HomeAppLaunchModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_A0688);
  }

  return result;
}

uint64_t sub_F220()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t sub_F230()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_F23C()
{
  return type metadata accessor for HomeAppLaunchModel(0LL);
}

uint64_t sub_F244()
{
  uint64_t v0 = sub_41BC(&qword_A0690);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  uint64_t result = TerminalOntologyNode.init(name:multicardinal:)(0xD000000000000012LL, 0x80000000000767F0LL, 0LL);
  qword_A3E38 = result;
  return result;
}

uint64_t type metadata accessor for HomeCommunicationCATs(uint64_t a1)
{
  uint64_t result = qword_A0698;
  if (!qword_A0698) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HomeCommunicationCATs);
  }
  return result;
}

uint64_t sub_F2D8(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL);
}

uint64_t sub_F314(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_F364(a1, a2, a3);
}

uint64_t sub_F364(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CATOption(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_41BC(&qword_A06E8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_F488(a1, (uint64_t)v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  uint64_t v13 = CATWrapper.init(templateDir:options:globals:)(v12, v9, a3);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a2, v6);
  sub_F4D0(a1);
  return v13;
}

uint64_t sub_F464()
{
  uint64_t v0 = CATWrapper.deinit();
  return swift_deallocClassInstance(v0, 16LL, 7LL);
}

uint64_t sub_F480()
{
  return type metadata accessor for HomeCommunicationCATs(0LL);
}

uint64_t sub_F488(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_41BC(&qword_A06E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_F4D0(uint64_t a1)
{
  uint64_t v2 = sub_41BC(&qword_A06E8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for HomeCommunicationCATsSimple(uint64_t a1)
{
  uint64_t result = qword_A06F0;
  if (!qword_A06F0) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HomeCommunicationCATsSimple);
  }
  return result;
}

uint64_t sub_F548(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL);
}

uint64_t sub_F584()
{
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_F5FC;
  return ((uint64_t (*)(unint64_t, unint64_t, void *))v3)( 0xD000000000000021LL,  0x80000000000768B0LL,  _swiftEmptyArrayStorage);
}

uint64_t sub_F5FC(uint64_t a1)
{
  uint64_t v4 = *(void *)(*v2 + 16);
  uint64_t v5 = *v2;
  uint64_t v6 = swift_task_dealloc(v4);
  if (!v1) {
    uint64_t v6 = a1;
  }
  return (*(uint64_t (**)(uint64_t))(v5 + 8))(v6);
}

uint64_t sub_F650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_F694(a1, a2, a3);
}

uint64_t sub_F694(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CATOption(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  sub_9298();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = sub_41BC(&qword_A06E8);
  __chkstk_darwin(v11);
  sub_9298();
  uint64_t v14 = v13 - v12;
  sub_F488(a1, v13 - v12);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v10, a2, v6);
  uint64_t v15 = CATWrapperSimple.init(templateDir:options:globals:)(v14, v10, a3);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a2, v6);
  sub_F4D0(a1);
  return v15;
}

uint64_t sub_F784(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CATOption(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  sub_9298();
  uint64_t v8 = v7 - v6;
  sub_F84C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v8, a2, v4);
  uint64_t v9 = CATWrapperSimple.init(useResponseMode:options:)(a1, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  return v9;
}

uint64_t sub_F828()
{
  uint64_t v0 = CATWrapperSimple.deinit();
  return swift_deallocClassInstance(v0, 16LL, 7LL);
}

uint64_t sub_F844()
{
  return type metadata accessor for HomeCommunicationCATsSimple(0LL);
}

uint64_t sub_F84C()
{
  return swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
}

void sub_F85C()
{
  algn_A3E68[7] = -18;
}

void sub_F88C()
{
  qword_A3E70 = 0x7865646E69LL;
  *(void *)algn_A3E78 = 0xE500000000000000LL;
}

uint64_t sub_F8AC(Swift::String a1)
{
  v1._rawValue = &off_92278;
  return sub_F8C4(a1, v1);
}

uint64_t sub_F8B8(Swift::String a1)
{
  v1._rawValue = &off_922C8;
  return sub_F8C4(a1, v1);
}

uint64_t sub_F8C4(Swift::String string, Swift::OpaquePointer cases)
{
  object = string._object;
  v3._countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  Swift::Int v5 = _findStringSwitchCase(cases:string:)(cases, v3);
  swift_bridgeObjectRelease(object);
  if (v5 == 1) {
    unsigned int v6 = 1;
  }
  else {
    unsigned int v6 = 2;
  }
  if (v5) {
    return v6;
  }
  else {
    return 0LL;
  }
}

void sub_F910()
{
  qword_A3E80 = 0x6C646E7542707061LL;
  qword_A3E88 = 0xEB00000000644965LL;
}

uint64_t sub_F93C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  if (qword_9F7F0 != -1) {
    swift_once(&qword_9F7F0, sub_F910);
  }
  if (!*(void *)(a1 + 16))
  {
    __int128 v70 = 0u;
    __int128 v71 = 0u;
    goto LABEL_16;
  }

  uint64_t v4 = qword_A3E88;
  uint64_t v5 = qword_A3E80;
  swift_bridgeObjectRetain(qword_A3E88);
  unint64_t v6 = sub_4AD08(v5, v4);
  if ((v7 & 1) == 0)
  {
    __int128 v70 = 0u;
    __int128 v71 = 0u;
    swift_bridgeObjectRelease(v4);
    goto LABEL_16;
  }

  sub_FC5C(*(void *)(a1 + 56) + 32 * v6, (uint64_t)&v70);
  uint64_t v8 = swift_bridgeObjectRelease(v4);
  if (!*((void *)&v71 + 1))
  {
LABEL_16:
    uint64_t v28 = sub_D304();
    uint64_t result = sub_FF80(v28, v29);
LABEL_17:
    uint64_t v15 = 0LL;
    uint64_t v16 = 0LL;
    uint64_t v26 = 0LL;
    uint64_t v27 = 0LL;
    uint64_t v31 = 0LL;
    uint64_t v32 = 0LL;
    uint64_t v33 = 0LL;
    uint64_t v34 = 0LL;
LABEL_18:
    uint64_t v35 = 0LL;
    goto LABEL_19;
  }

  if ((sub_FF5C(v8, v9, v10, (uint64_t)&type metadata for String, v11, v12, v13, v14, v68, v69, v70) & 1) == 0)
  {
    uint64_t result = sub_D304();
    goto LABEL_17;
  }

  uint64_t v15 = v68;
  uint64_t v16 = v69;
  double v24 = sub_49314(0x65636E756F6E6E61LL, 0xEE006449746E656DLL, a1, &v70);
  if (*((void *)&v71 + 1))
  {
    int v25 = sub_FF5C(v17, v18, v19, (uint64_t)&type metadata for String, v20, v21, v22, v23, v68, v69, v70);
    if (v25) {
      uint64_t v26 = v68;
    }
    else {
      uint64_t v26 = 0LL;
    }
    if (v25) {
      uint64_t v27 = v69;
    }
    else {
      uint64_t v27 = 0LL;
    }
  }

  else
  {
    sub_FF80(v17, v18, v24);
    uint64_t v26 = 0LL;
    uint64_t v27 = 0LL;
  }

  double v43 = sub_49314(0xD000000000000010LL, 0x80000000000768E0LL, a1, &v70);
  if (*((void *)&v71 + 1))
  {
    int v44 = sub_FF5C(v36, v37, v38, (uint64_t)&type metadata for String, v39, v40, v41, v42, v68, v69, v70);
    if (v44) {
      uint64_t v31 = v68;
    }
    else {
      uint64_t v31 = 0LL;
    }
    if (v44) {
      uint64_t v32 = v69;
    }
    else {
      uint64_t v32 = 0LL;
    }
  }

  else
  {
    sub_FF80(v36, v37, v43);
    uint64_t v31 = 0LL;
    uint64_t v32 = 0LL;
  }

  double v47 = sub_FF70(1701670760LL, &v70);
  if (*((void *)&v71 + 1))
  {
    uint64_t v48 = sub_41BC(&qword_A04B0);
    else {
      uint64_t v33 = 0LL;
    }
  }

  else
  {
    sub_FF80(v45, v46, v47);
    uint64_t v33 = 0LL;
  }

  double v57 = sub_FF70(1836019570LL, &v70);
  if (*((void *)&v71 + 1))
  {
    uint64_t v58 = sub_41BC(&qword_A04B0);
    else {
      uint64_t v34 = 0LL;
    }
  }

  else
  {
    sub_FF80(v55, v56, v57);
    uint64_t v34 = 0LL;
  }

  sub_FF70(1701736314LL, &v70);
  uint64_t v65 = sub_D304();
  if (!*((void *)&v71 + 1))
  {
    uint64_t result = sub_FF80(v65, v66);
    goto LABEL_18;
  }

  uint64_t v67 = sub_41BC(&qword_A04B0);
  uint64_t result = swift_dynamicCast(&v68, &v70, (char *)&type metadata for Any + 8, v67, 6LL);
  uint64_t v35 = v68;
  if (!(_DWORD)result) {
    uint64_t v35 = 0LL;
  }
LABEL_19:
  *a2 = v15;
  a2[1] = v16;
  a2[2] = v26;
  a2[3] = v27;
  a2[4] = v31;
  a2[5] = v32;
  a2[6] = v33;
  a2[7] = v34;
  a2[8] = v35;
  return result;
}

uint64_t sub_FC1C(uint64_t a1)
{
  uint64_t v2 = sub_41BC(&qword_A04A8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_FC5C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t destroy for HomeCommunicationDirectInvocation(void *a1)
{
  return swift_bridgeObjectRelease(a1[8]);
}

void *initializeWithCopy for HomeCommunicationDirectInvocation(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[6];
  uint64_t v7 = a2[7];
  a1[6] = v6;
  a1[7] = v7;
  uint64_t v8 = a2[8];
  a1[8] = v8;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  return a1;
}

void *assignWithCopy for HomeCommunicationDirectInvocation(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[4] = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v9 = a1[5];
  a1[5] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  uint64_t v10 = a1[6];
  uint64_t v11 = a2[6];
  a1[6] = v11;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease(v10);
  uint64_t v12 = a1[7];
  uint64_t v13 = a2[7];
  a1[7] = v13;
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRelease(v12);
  uint64_t v14 = a1[8];
  uint64_t v15 = a2[8];
  a1[8] = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease(v14);
  return a1;
}

void *initializeWithTake for HomeCommunicationDirectInvocation(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x48uLL);
}

void *assignWithTake for HomeCommunicationDirectInvocation(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = a1[1];
  *a1 = *(void *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = a1[3];
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v6;
  swift_bridgeObjectRelease(v7);
  a1[4] = *(void *)(a2 + 32);
  swift_bridgeObjectRelease(a1[5]);
  uint64_t v8 = a1[6];
  *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(a1[7]);
  uint64_t v9 = a1[8];
  *(_OWORD *)(a1 + 7) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease(v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for HomeCommunicationDirectInvocation(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 72))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }

    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }

  else
  {
    LODWORD(v2) = -1;
  }

  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HomeCommunicationDirectInvocation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + sub_423C(v0 + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 72) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + sub_423C(v0 + 8) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for HomeCommunicationDirectInvocation()
{
  return &type metadata for HomeCommunicationDirectInvocation;
}

uint64_t sub_FF5C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  return swift_dynamicCast(&a9, &a11, v11 + 8, a4, 6LL);
}

double sub_FF70@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_49314(a1 & 0xFFFF0000FFFFFFFFLL | 0x7300000000LL, 0xE500000000000000LL, v2, a2);
}

uint64_t sub_FF80(uint64_t a1, uint64_t a2, ...)
{
  return sub_FC1C((uint64_t)va);
}

uint64_t type metadata accessor for HomeCommunicationDisplayTextCATs(uint64_t a1)
{
  uint64_t result = qword_A0748;
  if (!qword_A0748) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HomeCommunicationDisplayTextCATs);
  }
  return result;
}

uint64_t sub_FFC0(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL);
}

uint64_t sub_FFFC()
{
  return sub_100CC(49LL);
}

uint64_t sub_10024()
{
  return sub_100CC(45LL);
}

uint64_t sub_1004C()
{
  return sub_100CC(43LL);
}

uint64_t sub_10074()
{
  return sub_100CC(44LL);
}

uint64_t sub_1009C()
{
  return sub_100CC(43LL);
}

uint64_t sub_100C4()
{
  return type metadata accessor for HomeCommunicationDisplayTextCATs(0LL);
}

uint64_t sub_100CC(uint64_t a1)
{
  return dispatch thunk of CATWrapper.execute(catId:parameters:completion:)(a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000LL);
}

uint64_t type metadata accessor for HomeCommunicationDisplayTextCATsSimple(uint64_t a1)
{
  uint64_t result = qword_A0798;
  if (!qword_A0798) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HomeCommunicationDisplayTextCATsSimple);
  }
  return result;
}

uint64_t sub_1010C(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL);
}

uint64_t sub_10148()
{
  return 0x74706D6F7270LL;
}

BOOL sub_1016C@<W0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  v3._rawValue = &off_934E8;
  BOOL result = sub_103F4(*a1, v3);
  *a2 = result;
  return result;
}

void sub_101A8(uint64_t *a1@<X8>)
{
  *a1 = sub_10148();
  a1[1] = v2;
  sub_AA5C();
}

uint64_t sub_101C8()
{
  uint64_t v2 = sub_10838((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  sub_10874(v2);
  sub_105CC();
  void *v0 = v1;
  v0[1] = sub_10828;
  sub_10868();
  unint64_t v3 = sub_1084C();
  return sub_1082C(v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1022C()
{
  return 2036427888LL;
}

BOOL sub_10248@<W0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  v3._rawValue = &off_93520;
  BOOL result = sub_103F4(*a1, v3);
  *a2 = result;
  return result;
}

void sub_10284(uint64_t *a1@<X8>)
{
  *a1 = sub_1022C();
  a1[1] = v2;
  sub_AA5C();
}

uint64_t sub_102A4()
{
  uint64_t v2 = sub_10838((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  sub_10874(v2);
  sub_10590();
  void *v0 = v1;
  v0[1] = sub_F5FC;
  sub_10868();
  unint64_t v3 = sub_1084C();
  return sub_1082C(v3, v4, v5, v6, v7, v8);
}

uint64_t sub_10308()
{
  return 0x796C706572LL;
}

BOOL sub_10328@<W0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  v3._rawValue = &off_93558;
  BOOL result = sub_103F4(*a1, v3);
  *a2 = result;
  return result;
}

void sub_10364(uint64_t *a1@<X8>)
{
  *a1 = sub_10308();
  a1[1] = v2;
  sub_AA5C();
}

uint64_t sub_10384()
{
  uint64_t v2 = sub_10838((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  sub_10874(v2);
  sub_10554();
  void *v0 = v1;
  v0[1] = sub_10828;
  sub_10868();
  return sub_1082C(0xD00000000000002CLL, v3, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)&unk_95058, v4, v6);
}

BOOL sub_103F4(Swift::String string, Swift::OpaquePointer cases)
{
  object = string._object;
  v3._countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  Swift::Int v5 = _findStringSwitchCase(cases:string:)(cases, v3);
  swift_bridgeObjectRelease(object);
  return v5 != 0;
}

uint64_t sub_10434()
{
  return 1886352499LL;
}

BOOL sub_10450@<W0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  v3._rawValue = &off_93590;
  BOOL result = sub_103F4(*a1, v3);
  *a2 = result;
  return result;
}

void sub_1048C(uint64_t *a1@<X8>)
{
  *a1 = sub_10434();
  a1[1] = v2;
  sub_AA5C();
}

uint64_t sub_104AC()
{
  uint64_t v2 = sub_10838((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  sub_10874(v2);
  sub_10518();
  void *v0 = v1;
  v0[1] = sub_10828;
  sub_10868();
  unint64_t v3 = sub_1084C();
  return sub_1082C(v3, v4, v5, v6, v7, v8);
}

uint64_t sub_10510()
{
  return type metadata accessor for HomeCommunicationDisplayTextCATsSimple(0LL);
}

unint64_t sub_10518()
{
  unint64_t result = qword_A0808;
  if (!qword_A0808)
  {
    unint64_t result = swift_getWitnessTable(&unk_70710, &unk_950E8);
    atomic_store(result, (unint64_t *)&qword_A0808);
  }

  return result;
}

unint64_t sub_10554()
{
  unint64_t result = qword_A0810;
  if (!qword_A0810)
  {
    unint64_t result = swift_getWitnessTable(&unk_706D8, &unk_95058);
    atomic_store(result, (unint64_t *)&qword_A0810);
  }

  return result;
}

unint64_t sub_10590()
{
  unint64_t result = qword_A0818;
  if (!qword_A0818)
  {
    unint64_t result = swift_getWitnessTable(&unk_706A0, &unk_94FC8);
    atomic_store(result, (unint64_t *)&qword_A0818);
  }

  return result;
}

unint64_t sub_105CC()
{
  unint64_t result = qword_A0820;
  if (!qword_A0820)
  {
    unint64_t result = swift_getWitnessTable(&unk_70668, &unk_94F38);
    atomic_store(result, (unint64_t *)&qword_A0820);
  }

  return result;
}

uint64_t sub_10614()
{
  return 0LL;
}

void type metadata accessor for HomeCommunicationDisplayTextCATsSimple.HomeNamePromptDialogIds()
{
}

void type metadata accessor for HomeCommunicationDisplayTextCATsSimple.PlayButtonTextDialogIds()
{
}

void type metadata accessor for HomeCommunicationDisplayTextCATsSimple.ReplyButtonTextDialogIds()
{
}

uint64_t getEnumTagSinglePayload for SendAnnouncementCATsSimple.OpenHomeAppDialogIds( unsigned int *a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  else {
    int v2 = 2;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

uint64_t sub_10690(uint64_t a1, int a2, int a3)
{
  else {
    int v3 = 2;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2) {
    return ((uint64_t (*)(void))((char *)sub_106D0 + 4 * byte_70400[v4]))();
  }
  else {
    return ((uint64_t (*)(void))((char *)sub_106F0 + 4 * byte_70405[v4]))();
  }
}

_BYTE *sub_106D0(_BYTE *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

_BYTE *sub_106F0(_BYTE *result)
{
  *unint64_t result = 0;
  return result;
}

_DWORD *sub_106F8(_DWORD *result, int a2)
{
  *unint64_t result = a2;
  return result;
}

_WORD *sub_10700(_WORD *result, __int16 a2)
{
  *unint64_t result = a2;
  return result;
}

_WORD *sub_10708(_WORD *result)
{
  *unint64_t result = 0;
  return result;
}

_DWORD *sub_10710(_DWORD *result)
{
  *unint64_t result = 0;
  return result;
}

void type metadata accessor for HomeCommunicationDisplayTextCATsSimple.StopButtonTextDialogIds()
{
}

unint64_t sub_1072C()
{
  unint64_t result = qword_A0828;
  if (!qword_A0828)
  {
    unint64_t result = swift_getWitnessTable(&unk_70508, &unk_950E8);
    atomic_store(result, (unint64_t *)&qword_A0828);
  }

  return result;
}

unint64_t sub_1076C()
{
  unint64_t result = qword_A0830;
  if (!qword_A0830)
  {
    unint64_t result = swift_getWitnessTable(&unk_70570, &unk_95058);
    atomic_store(result, (unint64_t *)&qword_A0830);
  }

  return result;
}

unint64_t sub_107AC()
{
  unint64_t result = qword_A0838;
  if (!qword_A0838)
  {
    unint64_t result = swift_getWitnessTable(&unk_705D8, &unk_94FC8);
    atomic_store(result, (unint64_t *)&qword_A0838);
  }

  return result;
}

unint64_t sub_107EC()
{
  unint64_t result = qword_A0840;
  if (!qword_A0840)
  {
    unint64_t result = swift_getWitnessTable(&unk_70640, &unk_94F38);
    atomic_store(result, (unint64_t *)&qword_A0840);
  }

  return result;
}

uint64_t sub_1082C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void))
{
  return a6();
}

uint64_t sub_10838@<X0>(uint64_t a1@<X8>)
{
  return swift_task_alloc(*(unsigned int *)(a1 + 4));
}

unint64_t sub_1084C()
{
  return 0xD00000000000002BLL;
}

  ;
}

  ;
}

uint64_t sub_10874(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

void sub_10880()
{
}

uint64_t type metadata accessor for HomeCommunicationError(uint64_t a1)
{
  return sub_111E8(a1, qword_A08C8, (uint64_t)&nominal type descriptor for HomeCommunicationError);
}

void sub_108C0(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for RadarUtils();
  uint64_t inited = swift_initStackObject(v2, v22);
  uint64_t v4 = type metadata accessor for AutoBugCaptureManager(0LL);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  uint64_t v5 = sub_11FA8();
  *(void *)(inited + 16) = v5;
  sub_30300(1, v1);
  swift_release(v5);
  swift_initStackObject(v2, v21);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  uint64_t v6 = sub_11FA8();
  uint64_t v19 = 0LL;
  unint64_t v20 = 0xE000000000000000LL;
  _StringGuts.grow(_:)(40LL);
  v7._countAndFlagsBits = 0xD000000000000026LL;
  v7._object = (void *)0x8000000000076AE0LL;
  String.append(_:)(v7);
  sub_11FE4();
  _print_unlocked<A, B>(_:_:)(v1, &v19);
  uint64_t v8 = v19;
  uint64_t v9 = v20;
  sub_10A88();
  uint64_t v19 = v10;
  unint64_t v20 = v11;
  v12._countAndFlagsBits = 2570LL;
  v12._object = (void *)0xE200000000000000LL;
  String.append(_:)(v12);
  uint64_t v13 = (uint64_t)v19;
  uint64_t v14 = v20;
  sub_10EF8();
  uint64_t v16 = v15;
  sub_306A4(v8, v9, v13, v14, v17, v15);
  swift_release(v6);
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v16);
  sub_11ECC(v1, a1, type metadata accessor for HomeCommunicationError);
}

void sub_10A88()
{
  uint64_t v2 = sub_11FE4();
  sub_11F5C();
  __chkstk_darwin(v3);
  sub_11FCC();
  sub_11ECC(v0, v0, v4);
  uint64_t v5 = (char *)sub_10B38 + 4 * byte_70750[swift_getEnumCaseMultiPayload(v0, v2)];
  __asm { BR              X10 }

void sub_10B38()
{
  uint64_t v3 = *(void *)(v0 + 24);
  sub_11F20();
  _StringGuts.grow(_:)(37LL);
  sub_11F48();
  *(void *)(v2 - 64) = v1 + 13;
  *(void *)(v2 - 56) = 0x8000000000076D80LL;
  sub_11F9C();
  swift_bridgeObjectRelease(v3);
  v4._countAndFlagsBits = 8250LL;
  v4._object = (void *)0xE200000000000000LL;
  String.append(_:)(v4);
  sub_11F50();
  sub_11F94();
  *(void *)(v2 - 64) = 0LL;
  *(void *)(v2 - 56) = 0xE000000000000000LL;
  _StringGuts.grow(_:)(27LL);
  sub_11F48();
  sub_11F30(v1 + 7);
  sub_11F94();
  sub_11F6C();
}

void sub_10DC4()
{
  uint64_t v1 = type metadata accessor for Parse(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v3);
  Swift::String v7 = (char *)v15 - v6;
  sub_11FEC();
  sub_11F5C();
  __chkstk_darwin(v8);
  sub_9298();
  uint64_t v11 = v10 - v9;
  sub_11ECC(v0, v10 - v9, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 32))(v7, v11, v1);
  sub_11F20();
  _StringGuts.grow(_:)(21LL);
  sub_11F48();
  v15[0] = 0xD000000000000013LL;
  v15[1] = 0x8000000000076DA0LL;
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v5, v7, v1);
  v13._countAndFlagsBits = sub_5A5B4(v5);
  object = v13._object;
  String.append(_:)(v13);
  swift_bridgeObjectRelease(object);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
  sub_11F6C();
}

void sub_10EF8()
{
  uint64_t v1 = sub_11FEC();
  sub_11F5C();
  __chkstk_darwin(v2);
  sub_9298();
  uint64_t v5 = v4 - v3;
  uint64_t v6 = sub_11FE4();
  sub_11F5C();
  __chkstk_darwin(v7);
  sub_11FCC();
  sub_11ECC(v0, v0, v8);
  switch(swift_getEnumCaseMultiPayload(v0, v6))
  {
    case 1u:
      sub_11F0C();
      _StringGuts.grow(_:)(30LL);
      sub_11F48();
      sub_12024();
      uint64_t v10 = v9 | 0xC;
      goto LABEL_11;
    case 2u:
      sub_11F0C();
      _StringGuts.grow(_:)(27LL);
      sub_11F48();
      sub_11FBC();
      goto LABEL_11;
    case 3u:
      sub_11E50(v0, v5);
      sub_11F20();
      v11._countAndFlagsBits = 0x7272456573726170LL;
      v11._object = (void *)0xEB000000003A726FLL;
      String.append(_:)(v11);
      _print_unlocked<A, B>(_:_:)(v5, &v18);
      sub_11E94(v5, type metadata accessor for HomeCommunicationParseError);
      break;
    case 4u:
      sub_11F0C();
      _StringGuts.grow(_:)(24LL);
      sub_11F48();
      sub_12024();
      uint64_t v10 = v12 | 6;
      goto LABEL_11;
    case 5u:
      sub_11F0C();
      _StringGuts.grow(_:)(18LL);
      sub_11F48();
      sub_12024();
      goto LABEL_11;
    case 6u:
      uint64_t v13 = *(void *)(v0 + 24);
      sub_11F20();
      _StringGuts.grow(_:)(38LL);
      sub_11F48();
      sub_11FBC();
      sub_11F30(v14);
      sub_11F94();
      v15._countAndFlagsBits = 0x3D74757074756F20LL;
      v15._object = (void *)0xE800000000000000LL;
      String.append(_:)(v15);
      sub_11F9C();
      uint64_t v16 = v13;
      goto LABEL_12;
    case 8u:
      sub_11F20();
      _StringGuts.grow(_:)(22LL);
      sub_12018();
      sub_12024();
      sub_12000(v17 | 4, (uint64_t)"unhandledFailureCode");
      sub_1200C();
      sub_11FF4();
      break;
    case 9u:
      sub_11F0C();
      _StringGuts.grow(_:)(29LL);
      sub_11F48();
      sub_11FBC();
LABEL_11:
      sub_11F30(v10);
      uint64_t v16 = v1;
LABEL_12:
      swift_bridgeObjectRelease(v16);
      break;
    default:
      sub_11E94(v0, type metadata accessor for HomeCommunicationError);
      break;
  }

  sub_11F6C();
}

void sub_111A8()
{
}

uint64_t type metadata accessor for HomeCommunicationParseError(uint64_t a1)
{
  return sub_111E8(a1, (uint64_t *)&unk_A0978, (uint64_t)&nominal type descriptor for HomeCommunicationParseError);
}

uint64_t sub_111E8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata(a1, a3);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for HomeCommunicationError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 - 8);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v6 + 16LL) & ~(unint64_t)v6));
    swift_retain(v14);
  }

  else
  {
    switch(swift_getEnumCaseMultiPayload(a2, a3))
    {
      case 0u:
        uint64_t v8 = a2[1];
        *a1 = *a2;
        a1[1] = v8;
        uint64_t v9 = a2[2];
        uint64_t v10 = a2[3];
        a1[2] = v9;
        a1[3] = v10;
        swift_bridgeObjectRetain(v8);
        swift_bridgeObjectRetain(v10);
        Swift::String v11 = a1;
        uint64_t v12 = a3;
        uint64_t v13 = 0LL;
        goto LABEL_14;
      case 1u:
        uint64_t v15 = a2[1];
        *a1 = *a2;
        a1[1] = v15;
        swift_bridgeObjectRetain(v15);
        Swift::String v11 = a1;
        uint64_t v12 = a3;
        uint64_t v13 = 1LL;
        goto LABEL_14;
      case 2u:
        uint64_t v16 = a2[1];
        *a1 = *a2;
        a1[1] = v16;
        swift_bridgeObjectRetain(v16);
        Swift::String v11 = a1;
        uint64_t v12 = a3;
        uint64_t v13 = 2LL;
        goto LABEL_14;
      case 3u:
        uint64_t v17 = type metadata accessor for Parse(0LL);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v17 - 8) + 16LL))(a1, a2, v17);
        Swift::String v11 = a1;
        uint64_t v12 = a3;
        uint64_t v13 = 3LL;
        goto LABEL_14;
      case 4u:
        uint64_t v18 = a2[1];
        *a1 = *a2;
        a1[1] = v18;
        swift_bridgeObjectRetain(v18);
        Swift::String v11 = a1;
        uint64_t v12 = a3;
        uint64_t v13 = 4LL;
        goto LABEL_14;
      case 5u:
        uint64_t v19 = a2[1];
        *a1 = *a2;
        a1[1] = v19;
        swift_bridgeObjectRetain(v19);
        Swift::String v11 = a1;
        uint64_t v12 = a3;
        uint64_t v13 = 5LL;
        goto LABEL_14;
      case 6u:
        uint64_t v20 = a2[1];
        *a1 = *a2;
        a1[1] = v20;
        uint64_t v21 = a2[2];
        uint64_t v22 = a2[3];
        a1[2] = v21;
        a1[3] = v22;
        swift_bridgeObjectRetain(v20);
        swift_bridgeObjectRetain(v22);
        Swift::String v11 = a1;
        uint64_t v12 = a3;
        uint64_t v13 = 6LL;
        goto LABEL_14;
      case 7u:
        uint64_t v23 = a2[1];
        *a1 = *a2;
        a1[1] = v23;
        swift_bridgeObjectRetain(v23);
        Swift::String v11 = a1;
        uint64_t v12 = a3;
        uint64_t v13 = 7LL;
        goto LABEL_14;
      case 9u:
        uint64_t v24 = a2[1];
        *a1 = *a2;
        a1[1] = v24;
        swift_bridgeObjectRetain(v24);
        Swift::String v11 = a1;
        uint64_t v12 = a3;
        uint64_t v13 = 9LL;
LABEL_14:
        swift_storeEnumTagMultiPayload(v11, v12, v13);
        break;
      default:
        memcpy(a1, a2, *(void *)(v5 + 64));
        break;
    }
  }

  return a1;
}

uint64_t destroy for HomeCommunicationError(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_getEnumCaseMultiPayload(a1, a2);
  switch((int)result)
  {
    case 0:
    case 6:
      swift_bridgeObjectRelease(*(void *)(a1 + 8));
      uint64_t v4 = *(void *)(a1 + 24);
      goto LABEL_4;
    case 1:
    case 2:
    case 4:
    case 5:
    case 7:
    case 9:
      uint64_t v4 = *(void *)(a1 + 8);
LABEL_4:
      uint64_t result = swift_bridgeObjectRelease(v4);
      break;
    case 3:
      uint64_t v5 = type metadata accessor for Parse(0LL);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8LL))(a1, v5);
      break;
    default:
      return result;
  }

  return result;
}

void *initializeWithCopy for HomeCommunicationError(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload(a2, a3))
  {
    case 0u:
      uint64_t v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      uint64_t v7 = a2[2];
      uint64_t v8 = a2[3];
      a1[2] = v7;
      a1[3] = v8;
      swift_bridgeObjectRetain(v6);
      swift_bridgeObjectRetain(v8);
      uint64_t v9 = a1;
      uint64_t v10 = a3;
      uint64_t v11 = 0LL;
      goto LABEL_12;
    case 1u:
      uint64_t v12 = a2[1];
      *a1 = *a2;
      a1[1] = v12;
      swift_bridgeObjectRetain(v12);
      uint64_t v9 = a1;
      uint64_t v10 = a3;
      uint64_t v11 = 1LL;
      goto LABEL_12;
    case 2u:
      uint64_t v13 = a2[1];
      *a1 = *a2;
      a1[1] = v13;
      swift_bridgeObjectRetain(v13);
      uint64_t v9 = a1;
      uint64_t v10 = a3;
      uint64_t v11 = 2LL;
      goto LABEL_12;
    case 3u:
      uint64_t v14 = type metadata accessor for Parse(0LL);
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16LL))(a1, a2, v14);
      uint64_t v9 = a1;
      uint64_t v10 = a3;
      uint64_t v11 = 3LL;
      goto LABEL_12;
    case 4u:
      uint64_t v15 = a2[1];
      *a1 = *a2;
      a1[1] = v15;
      swift_bridgeObjectRetain(v15);
      uint64_t v9 = a1;
      uint64_t v10 = a3;
      uint64_t v11 = 4LL;
      goto LABEL_12;
    case 5u:
      uint64_t v16 = a2[1];
      *a1 = *a2;
      a1[1] = v16;
      swift_bridgeObjectRetain(v16);
      uint64_t v9 = a1;
      uint64_t v10 = a3;
      uint64_t v11 = 5LL;
      goto LABEL_12;
    case 6u:
      uint64_t v17 = a2[1];
      *a1 = *a2;
      a1[1] = v17;
      uint64_t v18 = a2[2];
      uint64_t v19 = a2[3];
      a1[2] = v18;
      a1[3] = v19;
      swift_bridgeObjectRetain(v17);
      swift_bridgeObjectRetain(v19);
      uint64_t v9 = a1;
      uint64_t v10 = a3;
      uint64_t v11 = 6LL;
      goto LABEL_12;
    case 7u:
      uint64_t v20 = a2[1];
      *a1 = *a2;
      a1[1] = v20;
      swift_bridgeObjectRetain(v20);
      uint64_t v9 = a1;
      uint64_t v10 = a3;
      uint64_t v11 = 7LL;
      goto LABEL_12;
    case 9u:
      uint64_t v21 = a2[1];
      *a1 = *a2;
      a1[1] = v21;
      swift_bridgeObjectRetain(v21);
      uint64_t v9 = a1;
      uint64_t v10 = a3;
      uint64_t v11 = 9LL;
LABEL_12:
      swift_storeEnumTagMultiPayload(v9, v10, v11);
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
      break;
  }

  return a1;
}

void *assignWithCopy for HomeCommunicationError(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_11E94((uint64_t)a1, type metadata accessor for HomeCommunicationError);
    switch(swift_getEnumCaseMultiPayload(a2, a3))
    {
      case 0u:
        *a1 = *a2;
        uint64_t v6 = a2[1];
        a1[1] = v6;
        a1[2] = a2[2];
        uint64_t v7 = a2[3];
        a1[3] = v7;
        swift_bridgeObjectRetain(v6);
        swift_bridgeObjectRetain(v7);
        uint64_t v8 = a1;
        uint64_t v9 = a3;
        uint64_t v10 = 0LL;
        goto LABEL_13;
      case 1u:
        *a1 = *a2;
        uint64_t v11 = a2[1];
        a1[1] = v11;
        swift_bridgeObjectRetain(v11);
        uint64_t v8 = a1;
        uint64_t v9 = a3;
        uint64_t v10 = 1LL;
        goto LABEL_13;
      case 2u:
        *a1 = *a2;
        uint64_t v12 = a2[1];
        a1[1] = v12;
        swift_bridgeObjectRetain(v12);
        uint64_t v8 = a1;
        uint64_t v9 = a3;
        uint64_t v10 = 2LL;
        goto LABEL_13;
      case 3u:
        uint64_t v13 = type metadata accessor for Parse(0LL);
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16LL))(a1, a2, v13);
        uint64_t v8 = a1;
        uint64_t v9 = a3;
        uint64_t v10 = 3LL;
        goto LABEL_13;
      case 4u:
        *a1 = *a2;
        uint64_t v14 = a2[1];
        a1[1] = v14;
        swift_bridgeObjectRetain(v14);
        uint64_t v8 = a1;
        uint64_t v9 = a3;
        uint64_t v10 = 4LL;
        goto LABEL_13;
      case 5u:
        *a1 = *a2;
        uint64_t v15 = a2[1];
        a1[1] = v15;
        swift_bridgeObjectRetain(v15);
        uint64_t v8 = a1;
        uint64_t v9 = a3;
        uint64_t v10 = 5LL;
        goto LABEL_13;
      case 6u:
        *a1 = *a2;
        uint64_t v16 = a2[1];
        a1[1] = v16;
        a1[2] = a2[2];
        uint64_t v17 = a2[3];
        a1[3] = v17;
        swift_bridgeObjectRetain(v16);
        swift_bridgeObjectRetain(v17);
        uint64_t v8 = a1;
        uint64_t v9 = a3;
        uint64_t v10 = 6LL;
        goto LABEL_13;
      case 7u:
        *a1 = *a2;
        uint64_t v18 = a2[1];
        a1[1] = v18;
        swift_bridgeObjectRetain(v18);
        uint64_t v8 = a1;
        uint64_t v9 = a3;
        uint64_t v10 = 7LL;
        goto LABEL_13;
      case 9u:
        *a1 = *a2;
        uint64_t v19 = a2[1];
        a1[1] = v19;
        swift_bridgeObjectRetain(v19);
        uint64_t v8 = a1;
        uint64_t v9 = a3;
        uint64_t v10 = 9LL;
LABEL_13:
        swift_storeEnumTagMultiPayload(v8, v9, v10);
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
        break;
    }
  }

  return a1;
}

void *initializeWithTake for HomeCommunicationError(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload(a2, a3) == 3)
  {
    uint64_t v6 = type metadata accessor for Parse(0LL);
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
    swift_storeEnumTagMultiPayload(a1, a3, 3LL);
  }

  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
  }

  return a1;
}

void *assignWithTake for HomeCommunicationError(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_11E94((uint64_t)a1, type metadata accessor for HomeCommunicationError);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 3)
    {
      uint64_t v6 = type metadata accessor for Parse(0LL);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
      swift_storeEnumTagMultiPayload(a1, a3, 3LL);
    }

    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
    }
  }

  return a1;
}

uint64_t sub_11964(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_storeEnumTagMultiPayload(a1, a3, a2);
}

uint64_t sub_11974(uint64_t a1)
{
  v4[0] = " ";
  v4[1] = &unk_70910;
  void v4[2] = &unk_70910;
  uint64_t result = type metadata accessor for Parse(319LL);
  if (v3 <= 0x3F)
  {
    void v4[3] = *(void *)(result - 8) + 64LL;
    v4[4] = &unk_70910;
    v4[5] = &unk_70910;
    v4[6] = " ";
    v4[7] = &unk_70910;
    v4[8] = (char *)&value witness table for Builtin.Int64 + 64;
    void v4[9] = &unk_70910;
    swift_initEnumMetadataMultiPayload(a1, 256LL, 10LL, v4);
    return 0LL;
  }

  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for HomeCommunicationParseError( uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v7);
  }

  else
  {
    uint64_t v6 = type metadata accessor for Parse(0LL);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
  }

  return a1;
}

uint64_t destroy for HomeCommunicationParseError(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Parse(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
}

uint64_t initializeWithCopy for HomeCommunicationParseError(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Parse(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for HomeCommunicationParseError(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Parse(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24LL))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for HomeCommunicationParseError(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Parse(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for HomeCommunicationParseError(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Parse(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for HomeCommunicationParseError(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_41BC(&qword_A0900);
  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for HomeCommunicationParseError(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_41BC(&qword_A0900);
  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(a1, a2, a3, v6);
}

uint64_t sub_11C44(uint64_t a1)
{
  uint64_t result = type metadata accessor for Parse(319LL);
  if (v3 <= 0x3F)
  {
    uint64_t v4 = *(void *)(result - 8);
    swift_initEnumMetadataSingleCase(a1, 256LL, v4 + 64);
    uint64_t result = 0LL;
    *(_DWORD *)(*(void *)(a1 - 8) + 84LL) = *(_DWORD *)(v4 + 84);
  }

  return result;
}

uint64_t destroy for AppIntentDispatcherError(uint64_t a1)
{
  return swift_errorRelease(*(void *)(a1 + 16));
}

void _s35HomeCommunicationFlowDelegatePlugin24AppIntentDispatcherErrorOwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[2];
  swift_bridgeObjectRetain(v3);
  swift_errorRetain(v4);
  a1[2] = v4;
  sub_AA5C();
}

void *assignWithCopy for AppIntentDispatcherError(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  uint64_t v6 = a2[2];
  swift_errorRetain(v6);
  uint64_t v7 = a1[2];
  a1[2] = v6;
  swift_errorRelease(v7);
  return a1;
}

__n128 initializeWithTake for AppIntentDispatcherError(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

void *assignWithTake for AppIntentDispatcherError(void *a1, uint64_t a2)
{
  *a1 = *(void *)a2;
  swift_bridgeObjectRelease(a1[1]);
  uint64_t v4 = a1[2];
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  swift_errorRelease(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppIntentDispatcherError(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }

    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }

  else
  {
    LODWORD(v2) = -1;
  }

  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AppIntentDispatcherError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + sub_423C(v0 + 8) = 0LL;
    *(void *)(result + 16) = 0LL;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 24) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + sub_423C(v0 + 8) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for AppIntentDispatcherError()
{
  return &type metadata for AppIntentDispatcherError;
}

uint64_t sub_11E50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HomeCommunicationParseError(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

void sub_11E94(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8LL))(a1, v3);
  sub_AA5C();
}

void sub_11ECC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16LL))(a2, a1, v5);
  sub_AA5C();
}

void sub_11F0C()
{
  *(void *)(v0 - 64) = 0LL;
  *(void *)(v0 - 56) = 0xE000000000000000LL;
}

void sub_11F20()
{
  *(void *)(v0 - 64) = 0LL;
  *(void *)(v0 - 56) = 0xE000000000000000LL;
}

void sub_11F30(uint64_t a1@<X8>)
{
  *(void *)(v4 - 64) = a1;
  *(void *)(v4 - 56) = (v1 - 32) | 0x8000000000000000LL;
  v5._countAndFlagsBits = v2;
  v5._object = v3;
  String.append(_:)(v5);
}

uint64_t sub_11F48()
{
  return swift_bridgeObjectRelease(*(void *)(v0 - 56));
}

void sub_11F50()
{
  v2._countAndFlagsBits = v0;
  v2._object = v1;
  String.append(_:)(v2);
}

  ;
}

  ;
}

void sub_11F7C()
{
  *(void *)(v0 - 64) = 0LL;
  *(void *)(v0 - 56) = 0xE000000000000000LL;
  _StringGuts.grow(_:)(28LL);
}

uint64_t sub_11F94()
{
  return swift_bridgeObjectRelease(v0);
}

void sub_11F9C()
{
  v2._countAndFlagsBits = v0;
  v2._object = v1;
  String.append(_:)(v2);
}

uint64_t sub_11FA8()
{
  return AutoBugCaptureManager.init(domain:sessionDuration:)(0xD000000000000015LL, v0, 30.0);
}

  ;
}

  ;
}

uint64_t sub_11FE4()
{
  return type metadata accessor for HomeCommunicationError(0LL);
}

uint64_t sub_11FEC()
{
  return type metadata accessor for HomeCommunicationParseError(0LL);
}

uint64_t sub_11FF4()
{
  return _print_unlocked<A, B>(_:_:)(v0 - 72, v0 - 64);
}

void sub_12000(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v2 = (a2 - 32) | 0x8000000000000000LL;
  String.append(_:)(*(Swift::String *)&a1);
}

void sub_1200C()
{
  *(void *)(v1 - 72) = v0;
  type metadata accessor for INSendAnnouncementIntentResponseCode(0LL);
}

void sub_12018()
{
  uint64_t v1 = *(void *)(v0 - 56);
  *(void *)(v0 - 64) = *(void *)(v0 - 64);
  *(void *)(v0 - 56) = v1;
}

  ;
}

void sub_12030()
{
}

void sub_12058(uint64_t a1)
{
  char v1 = a1;
  sub_1236C(a1);
  Hasher._combine(_:)(v1 & 1);
  Hasher._finalize()();
  sub_12378();
}

void sub_1208C()
{
}

void sub_12094()
{
}

void sub_120A4()
{
}

void sub_120C0()
{
}

void sub_120E4(uint64_t a1)
{
}

Swift::Int sub_1211C()
{
  return Hasher._finalize()();
}

void sub_12158()
{
}

void sub_12168()
{
}

uint64_t sub_12178(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_121C4 + 4 * byte_70975[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_121F8 + 4 * asc_70970[v4]))();
}

uint64_t sub_121F8(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_12200(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x12208LL);
  }
  return result;
}

uint64_t sub_12214(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x1221CLL);
  }
  *(_BYTE *)__n128 result = a2 + 1;
  return result;
}

uint64_t sub_12220(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_12228(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for SiriNLFeature()
{
}

void type metadata accessor for HomeCommunicationFeatureFlags()
{
}

uint64_t sub_1224C(uint64_t a1, int a2, int a3)
{
  else {
    int v3 = 2;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2) {
    return ((uint64_t (*)(void))((char *)sub_1228C + 4 * byte_7097A[v4]))();
  }
  else {
    return ((uint64_t (*)(void))((char *)sub_122AC + 4 * byte_7097F[v4]))();
  }
}

_BYTE *sub_1228C(_BYTE *result, char a2)
{
  *__n128 result = a2;
  return result;
}

_BYTE *sub_122AC(_BYTE *result)
{
  *__n128 result = 0;
  return result;
}

_DWORD *sub_122B4(_DWORD *result, int a2)
{
  *__n128 result = a2;
  return result;
}

_WORD *sub_122BC(_WORD *result, __int16 a2)
{
  *__n128 result = a2;
  return result;
}

_WORD *sub_122C4(_WORD *result)
{
  *__n128 result = 0;
  return result;
}

_DWORD *sub_122CC(_DWORD *result)
{
  *__n128 result = 0;
  return result;
}

void type metadata accessor for RFFeature()
{
}

unint64_t sub_122E8()
{
  unint64_t result = qword_A0988;
  if (!qword_A0988)
  {
    unint64_t result = swift_getWitnessTable(&unk_70A38, &unk_953A0);
    atomic_store(result, (unint64_t *)&qword_A0988);
  }

  return result;
}

unint64_t sub_12328()
{
  unint64_t result = qword_A0990;
  if (!qword_A0990)
  {
    unint64_t result = swift_getWitnessTable(&unk_70AA0, &unk_952F0);
    atomic_store(result, (unint64_t *)&qword_A0990);
  }

  return result;
}

  ;
}

void *sub_1236C(uint64_t a1, ...)
{
  return Hasher.init(_seed:)((uint64_t *)va);
}

  ;
}

uint64_t sub_12384()
{
  if ((sub_3FDE8(0) & 1) != 0) {
    char v0 = sub_3FDE8(1) ^ 1;
  }
  else {
    char v0 = 1;
  }
  return v0 & 1;
}

uint64_t sub_123B8()
{
  return swift_deallocClassInstance(v0, 56LL, 7LL);
}

uint64_t type metadata accessor for HomeCommunicationFeatureManager()
{
  return objc_opt_self(&OBJC_CLASS____TtC35HomeCommunicationFlowDelegatePlugin31HomeCommunicationFeatureManager);
}

uint64_t sub_123FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HomeCommunicationFlow(0LL);
  sub_A880(&qword_A0BD8, type metadata accessor for HomeCommunicationFlow, (uint64_t)&unk_70BB0);
  return Flow.deferToExecuteAsync(_:)(a1, a2, v4, v5);
}

uint64_t sub_12470(uint64_t a1)
{
  v2[24] = a1;
  v2[25] = v1;
  uint64_t v3 = sub_14548();
  v2[26] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[27] = v4;
  unint64_t v5 = (*(void *)(v4 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[28] = swift_task_alloc(v5);
  v2[29] = swift_task_alloc(v5);
  return swift_task_switch(sub_124DC, 0LL, 0LL);
}

uint64_t sub_124DC()
{
  uint64_t v1 = *(void *)(v0 + 200) + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin21HomeCommunicationFlow_input;
  unint64_t v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 216) + 16LL);
  v2(*(void *)(v0 + 232), v1, *(void *)(v0 + 208));
  uint64_t v3 = sub_12B50(v0 + 56);
  unint64_t v5 = v4;
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 216) + 8LL);
  v6(*(void *)(v0 + 232), *(void *)(v0 + 208));
  uint64_t v7 = (void *)(v0 + 96);
  uint64_t v50 = v0 + 184;
  uint64_t v8 = (void *)(v0 + 16);
  sub_A780((__int128 *)(v0 + 56), v0 + 16);
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v9 = type metadata accessor for Logger(0LL);
  sub_4870(v9, (uint64_t)qword_A3EB0);
  uint64_t v10 = swift_bridgeObjectRetain_n(v5, 2LL);
  uint64_t v11 = (os_log_s *)Logger.logObject.getter(v10);
  os_log_type_t v12 = static os_log_type_t.debug.getter();
  uint64_t v51 = v2;
  uint64_t v52 = v6;
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)sub_144F0(12LL);
    uint64_t v14 = sub_144F0(32LL);
    v53[0] = v14;
    *(_DWORD *)uint64_t v13 = 136315138;
    swift_bridgeObjectRetain(v5);
    *(void *)(v0 + 184) = sub_68DC4(v3, v5, v53);
    uint64_t v7 = (void *)(v0 + 96);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v50, v0 + 192, v13 + 4, v13 + 12);
    swift_bridgeObjectRelease_n(v5, 3LL);
    sub_14550(&dword_0, v11, v12, "#HomeCommunicationFlow Chose SKIntent name: %s. ", v13);
    swift_arrayDestroy(v14, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v15 = v14;
    uint64_t v8 = (void *)(v0 + 16);
    sub_48D4(v15);
    sub_48D4((uint64_t)v13);
  }

  else
  {
    swift_bridgeObjectRelease_n(v5, 2LL);
  }

  uint64_t v16 = *(void *)(v0 + 200);
  static Device.current.getter(v53, v17);
  uint64_t v18 = sub_41BC(&qword_A02F8);
  sub_A8BC(v18);
  uint64_t v19 = (void *)sub_625F0(v53);
  uint64_t v20 = *(void *)((char *)v19 + *(void *)(qword_A3DC8 + *v19 + 16));
  swift_retain(v20);
  sub_BD1C();
  sub_A798(v16 + 16, (uint64_t)v7);
  uint64_t v21 = sub_8504(v7, *(void *)(v0 + 120));
  char v22 = sub_142AC((uint64_t)v21, v8);
  sub_423C(v7);
  uint64_t v23 = *(void *)(v0 + 224);
  uint64_t v24 = *(void *)(v0 + 208);
  if (v22 == 7)
  {
    swift_bridgeObjectRelease(v5);
    v51(v23, v1, v24);
    uint64_t v25 = *(void *)(v0 + 40);
    uint64_t v26 = *(void *)(v0 + 48);
    sub_8504(v8, v25);
    unsigned __int8 v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 16))(v25, v26);
    uint64_t v28 = sub_12D40(v23, (uint64_t)v8, v27, v20);
    v52(v23, v24);
    if (v28)
    {
      static ExecuteResponse.complete(next:)(v28);
      sub_BD1C();
      uint64_t v29 = v20;
    }

    else
    {
      uint64_t v47 = v20;
      uint64_t v33 = swift_retain_n(*(void *)(v0 + 200), 2LL);
      uint64_t v34 = (os_log_s *)Logger.logObject.getter(v33);
      os_log_type_t v35 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v34, v35))
      {
        uint64_t v36 = *(void *)(v0 + 224);
        uint64_t v37 = *(void *)(v0 + 208);
        uint64_t v49 = *(void *)(v0 + 200);
        uint64_t v48 = v8;
        uint64_t v38 = (uint8_t *)sub_144F0(12LL);
        uint64_t v39 = sub_144F0(32LL);
        v53[0] = v39;
        *(_DWORD *)uint64_t v38 = 136315138;
        v51(v36, v1, v37);
        sub_A880( &qword_A0BD0,  (uint64_t (*)(uint64_t))&type metadata accessor for Input,  (uint64_t)&protocol conformance descriptor for Input);
        uint64_t v41 = dispatch thunk of CustomStringConvertible.description.getter(v37, v40);
        unint64_t v43 = v42;
        v52(v36, v37);
        *(void *)(v0 + 176) = sub_68DC4(v41, v43, v53);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 176, v50, v38 + 4, v38 + 12);
        swift_bridgeObjectRelease(v43);
        swift_release_n(v49, 2LL);
        sub_14550(&dword_0, v34, v35, "HomeCommunicationFlow unable to find flow for input %s", v38);
        sub_1450C((uint64_t)&type metadata for Any);
        sub_48D4(v39);
        uint64_t v44 = (uint64_t)v38;
        uint64_t v8 = v48;
        sub_48D4(v44);
      }

      else
      {
        swift_release_n(*(void *)(v0 + 200), 2LL);
      }

      static ExecuteResponse.complete()();
      uint64_t v29 = v47;
    }

    swift_release(v29);
  }

  else
  {
    v51(*(void *)(v0 + 224), v1, *(void *)(v0 + 208));
    sub_12E14(v22, v30, v8, v31, v32, v20);
    swift_release(v20);
    swift_bridgeObjectRelease(v5);
    v52(v23, v24);
  }

  sub_423C(v8);
  uint64_t v45 = *(void *)(v0 + 224);
  swift_task_dealloc(*(void *)(v0 + 232));
  swift_task_dealloc(v45);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_12B50(uint64_t a1)
{
  uint64_t v5 = type metadata accessor for Parse(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_144D8();
  uint64_t v7 = sub_8504((void *)(v1 + 16), *(void *)(v1 + 40))[1];
  uint64_t v8 = swift_retain(v7);
  Input.parse.getter(v8);
  sub_26EF4(v3, (uint64_t)&v17);
  swift_release(v7);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v3, v5);
  if (v18)
  {
    sub_A780(&v17, (uint64_t)v19);
    sub_A798(v1 + 16, (uint64_t)&v17);
    sub_1E904(v19);
    uint64_t v10 = v9;
    sub_423C(&v17);
    if (!v2)
    {
      sub_A798((uint64_t)v19, a1);
      id v15 = [v10 _className];
      a1 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    }

    sub_423C(v19);
  }

  else
  {
    sub_A6B0((uint64_t)&v17);
    uint64_t v11 = type metadata accessor for TransformationError(0LL);
    sub_A880( &qword_A0BC8,  (uint64_t (*)(uint64_t))&type metadata accessor for TransformationError,  (uint64_t)&protocol conformance descriptor for TransformationError);
    swift_allocError(v11, v12, 0LL, 0LL);
    *uint64_t v13 = 0xD00000000000001FLL;
    v13[1] = 0x8000000000076F30LL;
    uint64_t v14 = (*(uint64_t (**)(void *, void, uint64_t))(*(void *)(v11 - 8) + 104LL))( v13,  enum case for TransformationError.cannotTransform(_:),  v11);
    swift_willThrow(v14);
  }

  return a1;
}

uint64_t sub_12D40(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for Parse(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  sub_9298();
  uint64_t v12 = v11 - v10;
  Input.parse.getter(v13);
  sub_A798(v4 + 16, (uint64_t)v17);
  uint64_t v14 = sub_8504(v17, v17[3]);
  uint64_t v15 = sub_13788(v12, a3, a4, a2, (uint64_t)v14);
  sub_423C(v17);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v12, v8);
  return v15;
}

uint64_t sub_12E14(char a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v11 = type metadata accessor for CATOption(0LL);
  __chkstk_darwin(v11);
  sub_144D8();
  sub_A798(v6 + 16, (uint64_t)&v38);
  type metadata accessor for SendAnnouncementCATsSimple(0LL);
  uint64_t v12 = sub_14528();
  static CATOption.defaultMode.getter(v12);
  uint64_t v13 = sub_14500();
  type metadata accessor for ReadAnnouncementCATsSimple(0LL);
  sub_1451C();
  uint64_t v14 = sub_14500();
  type metadata accessor for SkipAnnouncementCATsSimple(0LL);
  sub_1451C();
  uint64_t v15 = sub_14500();
  sub_A7D8((uint64_t)&v38, v39);
  sub_14534();
  __chkstk_darwin(v16);
  sub_9298();
  uint64_t v19 = v18 - v17;
  (*(void (**)(uint64_t))(v20 + 16))(v18 - v17);
  uint64_t v21 = sub_135F8(a1, v19, a6, v13, v14, v15);
  sub_423C(&v38);
  char v22 = (void *)(v7 + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin21HomeCommunicationFlow_siriKitEventSender);
  uint64_t v23 = *(void *)(v7
                  + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin21HomeCommunicationFlow_siriKitEventSender
                  + 24);
  uint64_t v24 = v22[4];
  sub_8504(v22, v23);
  type metadata accessor for SiriKitEvent(0LL);
  uint64_t v25 = a3[3];
  uint64_t v26 = a3[4];
  sub_8504(a3, v25);
  char v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 16))(v25, v26);
  sub_178BC(v27);
  uint64_t v29 = v28;
  id v30 = [v28 _className];

  uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
  uint64_t v33 = v32;

  sub_A798((uint64_t)a3, (uint64_t)&v38);
  uint64_t v34 = swift_allocObject(&unk_95430, 56LL, 7LL);
  sub_A780(&v38, v34 + 16);
  uint64_t v35 = SiriKitEvent.__allocating_init(stateType:taskType:statusReason:_:)(131LL, v31, v33, 31LL, sub_1372C, v34);
  dispatch thunk of SiriKitEventSending.send(_:)(v35, v23, v24);
  swift_release(v35);
  static OutputPublisherFactory.makeOutputPublisherAsync()(&v38);
  uint64_t v36 = type metadata accessor for SimpleOutputFlowAsync(0LL);
  sub_A8BC(v36);
  sub_14528();
  *(void *)&__int128 v38 = SimpleOutputFlowAsync.init(outputPublisher:outputGenerator:)(&v38, &unk_A0BC0, v21);
  static ExecuteResponse.complete<A>(next:)(&v38, v36);
  sub_BD1C();
  return swift_release(v21);
}

uint64_t sub_1309C(uint64_t a1, void *a2)
{
  uint64_t v2 = sub_17FA4(a2);
  return dispatch thunk of SiriKitEvent.SiriKitEventBuilder.domainContext.setter(v2);
}

uint64_t sub_130C4(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc(dword_A3C84);
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_65F0;
  return sub_67E78(a1);
}

void sub_13118()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin21HomeCommunicationFlow_input;
  uint64_t v2 = sub_14548();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(v1, v2);
  sub_423C((void *)(v0
                    + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin21HomeCommunicationFlow_siriKitEventSender));
  sub_AA5C();
}

uint64_t sub_13174()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_13198()
{
  return type metadata accessor for HomeCommunicationFlow(0LL);
}

uint64_t type metadata accessor for HomeCommunicationFlow(uint64_t a1)
{
  uint64_t result = qword_A0A88;
  if (!qword_A0A88) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HomeCommunicationFlow);
  }
  return result;
}

uint64_t sub_131D8(uint64_t a1)
{
  v4[0] = "(";
  v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  uint64_t result = type metadata accessor for Input(319LL);
  if (v3 <= 0x3F)
  {
    void v4[2] = *(void *)(result - 8) + 64LL;
    void v4[3] = "(";
    uint64_t result = swift_updateClassMetadata2(a1, 256LL, 4LL, v4, a1 + 80);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_1325C(uint64_t a1, uint64_t a2)
{
  return sub_123FC(a1, a2);
}

uint64_t sub_1327C(uint64_t a1)
{
  unint64_t v3 = (void *)swift_task_alloc(dword_A0A9C);
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_A65C;
  return sub_12470(a1);
}

uint64_t sub_132D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for HomeCommunicationFlow(0LL);
  return Flow<>.exitValue.getter(v3, a2);
}

void *sub_132F8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_14548();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  sub_9298();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = type metadata accessor for SharedGlobals(0LL);
  v33[3] = v13;
  v33[4] = &off_977A0;
  uint64_t v14 = sub_A800(v33);
  sub_A83C(a4, (uint64_t)v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v12, a1, v8);
  sub_A798((uint64_t)a2, (uint64_t)v32);
  sub_A798((uint64_t)v33, (uint64_t)v31);
  uint64_t v15 = sub_A7D8((uint64_t)v31, v31[3]);
  __chkstk_darwin(v15);
  sub_144D8();
  (*(void (**)(uint64_t))(v16 + 16))(v4);
  uint64_t v29 = v13;
  id v30 = &off_977A0;
  uint64_t v17 = sub_A800(v28);
  sub_A83C(v4, (uint64_t)v17);
  uint64_t v18 = type metadata accessor for SendAnnouncementFlow(0LL);
  uint64_t v19 = (void *)sub_A8BC(v18);
  sub_A7D8((uint64_t)v28, v29);
  sub_14534();
  __chkstk_darwin(v20);
  sub_9298();
  uint64_t v23 = v22 - v21;
  (*(void (**)(uint64_t))(v24 + 16))(v22 - v21);
  v19[11] = v13;
  v19[12] = &off_977A0;
  uint64_t v25 = sub_A800(v19 + 8);
  sub_A83C(v23, (uint64_t)v25);
  *((_BYTE *)v19 + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin20SendAnnouncementFlow_state) = 0;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))( (uint64_t)v19 + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin20SendAnnouncementFlow_input,  v12,  v8);
  sub_A780(v32, (uint64_t)(v19 + 2));
  v19[7] = a3;
  sub_423C(v28);
  sub_423C(v31);
  sub_423C(v33);
  sub_423C(a2);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
  return v19;
}

uint64_t sub_134FC(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = type metadata accessor for DialogPhase(0LL);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = type metadata accessor for SharedGlobals(0LL);
  uint64_t v23 = &off_977A0;
  uint64_t v17 = sub_A800(&v21);
  uint64_t v18 = sub_A83C(a2, (uint64_t)v17);
  static DialogPhase.completion.getter(v18);
  OutputGenerationManifest.init(dialogPhase:_:)(v16, sub_A45C, 0LL);
  *(_BYTE *)(a7 + 16) = a1;
  sub_A780(&v21, a7 + 24);
  *(void *)(a7 + 64) = a3;
  *(void *)(a7 + 72) = a4;
  *(void *)(a7 + 80) = a5;
  *(void *)(a7 + 8sub_423C(v0 + 8) = a6;
  return a7;
}

uint64_t sub_135F8(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v23 = type metadata accessor for SharedGlobals(0LL);
  uint64_t v24 = &off_977A0;
  uint64_t v12 = sub_A800(v22);
  sub_A83C(a2, (uint64_t)v12);
  uint64_t v13 = type metadata accessor for UnsupportedFlowOutputFactory(0LL);
  uint64_t v14 = swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
  uint64_t v15 = sub_A7D8((uint64_t)v22, v23);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v22[-1] - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *))(v18 + 16))(v17);
  uint64_t v19 = sub_134FC(a1, (uint64_t)v17, a3, a4, a5, a6, v14);
  sub_423C(v22);
  return v19;
}

uint64_t sub_13708()
{
  return swift_deallocObject(v0, 56LL, 7LL);
}

uint64_t sub_1372C(uint64_t a1)
{
  return sub_1309C(a1, (void *)(v1 + 16));
}

uint64_t sub_13734(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc(dword_A0BBC);
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_65F0;
  return sub_130C4(a1);
}

uint64_t sub_13788(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v94 = (uint64_t *)a4;
  uint64_t v96 = a3;
  uint64_t v93 = a1;
  unsigned int v7 = a2;
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v93 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for Parse(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v93 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v99 = type metadata accessor for Input(0LL);
  uint64_t v98 = *(void *)(v99 - 8);
  uint64_t v16 = __chkstk_darwin(v99);
  v95 = (char *)&v93 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  uint64_t v97 = (os_log_s *)((char *)&v93 - v18);
  uint64_t v19 = type metadata accessor for SharedGlobals(0LL);
  v107[3] = v19;
  v107[4] = &off_977A0;
  uint64_t v20 = sub_A800(v107);
  sub_14268(a5, (uint64_t)v20);
  if (v7 == 7) {
    goto LABEL_2;
  }
  if (v7 < 2)
  {
    if (qword_9F820 != -1) {
      swift_once(&qword_9F820, sub_17ADC);
    }
    uint64_t v53 = sub_4870(v8, (uint64_t)qword_A3EB0);
    uint64_t v54 = (os_log_s *)Logger.logObject.getter(v53);
    os_log_type_t v55 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v54, v55))
    {
      uint64_t v56 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v56 = 0;
      _os_log_impl(&dword_0, v54, v55, "#HomeCommunicationRequestSupportPolicy calling SendAnnouncementFlow", v56, 2u);
      swift_slowDealloc(v56, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v93, v12);
    double v57 = v97;
    Input.init(parse:)(v15);
    uint64_t v58 = v98;
    uint64_t v59 = (uint64_t)v95;
    uint64_t v60 = v99;
    (*(void (**)(char *, os_log_s *, uint64_t))(v98 + 16))(v95, v57, v99);
    sub_A798((uint64_t)v94, (uint64_t)v106);
    sub_A798((uint64_t)v107, (uint64_t)&v103);
    uint64_t v61 = sub_A7D8((uint64_t)&v103, v105);
    __chkstk_darwin(v61);
    uint64_t v63 = (char *)&v93 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0LL);
    (*(void (**)(char *))(v64 + 16))(v63);
    uint64_t v65 = v96;
    swift_retain(v96);
    uint64_t v66 = sub_132F8(v59, v106, v65, (uint64_t)v63);
    sub_423C(&v103);
    sub_46EA8(v57);
    *(void *)&v106[0] = v66;
    uint64_t v67 = type metadata accessor for SendAnnouncementFlow(0LL);
    sub_A880(&qword_A0300, type metadata accessor for SendAnnouncementFlow, (uint64_t)&unk_73758);
    uint64_t v69 = Flow.eraseToAnyFlow()(v67, v68);
    (*(void (**)(os_log_s *, uint64_t))(v58 + 8))(v57, v60);
    __int128 v70 = v66;
    goto LABEL_29;
  }

  if (v7 == 3)
  {
    if (qword_9F820 != -1) {
      swift_once(&qword_9F820, sub_17ADC);
    }
    uint64_t v75 = sub_4870(v8, (uint64_t)qword_A3EB0);
    uint64_t v76 = (os_log_s *)Logger.logObject.getter(v75);
    os_log_type_t v77 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v76, v77))
    {
      uint64_t v78 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v78 = 0;
      _os_log_impl(&dword_0, v76, v77, "#HomeCommunicationRequestSupportPolicy calling StopAnnouncementFlow", v78, 2u);
      swift_slowDealloc(v78, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v93, v12);
    uint64_t v33 = v97;
    Input.init(parse:)(v15);
    uint64_t v34 = v98;
    v79 = v95;
    uint64_t v36 = v99;
    (*(void (**)(char *, os_log_s *, uint64_t))(v98 + 16))(v95, v33, v99);
    sub_A798((uint64_t)v94, (uint64_t)v106);
    sub_A798((uint64_t)v107, (uint64_t)&v103);
    uint64_t v80 = sub_A7D8((uint64_t)&v103, v105);
    v94 = &v93;
    __chkstk_darwin(v80);
    v82 = (char *)&v93 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0LL);
    (*(void (**)(char *))(v83 + 16))(v82);
    uint64_t v101 = v19;
    uint64_t v102 = &off_977A0;
    uint64_t v84 = sub_A800(v100);
    sub_A83C((uint64_t)v82, (uint64_t)v84);
    uint64_t AnnouncementFlow = type metadata accessor for StopAnnouncementFlow(0LL);
    unint64_t v43 = (void *)swift_allocObject( AnnouncementFlow,  *(unsigned int *)(AnnouncementFlow + 48),  *(unsigned __int16 *)(AnnouncementFlow + 52));
    uint64_t v85 = sub_A7D8((uint64_t)v100, v101);
    __chkstk_darwin(v85);
    uint64_t v87 = (char *)&v93 - ((v86 + 15) & 0xFFFFFFFFFFFFFFF0LL);
    (*(void (**)(char *))(v88 + 16))(v87);
    v43[11] = v19;
    v43[12] = &off_977A0;
    uint64_t v89 = sub_A800(v43 + 8);
    sub_A83C((uint64_t)v87, (uint64_t)v89);
    (*(void (**)(uint64_t, char *, uint64_t))(v34 + 32))( (uint64_t)v43 + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin20StopAnnouncementFlow_input,  v79,  v36);
    sub_A780(v106, (uint64_t)(v43 + 2));
    uint64_t v90 = v96;
    v43[7] = v96;
    swift_retain(v90);
    sub_423C(v100);
    sub_423C(&v103);
    sub_5EF14();
    *(void *)&v106[0] = v43;
    uint64_t v50 = &qword_A0308;
    uint64_t v51 = &unk_74960;
    uint64_t v52 = type metadata accessor for StopAnnouncementFlow;
    goto LABEL_28;
  }

  if (v7 == 2)
  {
    if (qword_9F820 != -1) {
      swift_once(&qword_9F820, sub_17ADC);
    }
    uint64_t v29 = sub_4870(v8, (uint64_t)qword_A3EB0);
    id v30 = (os_log_s *)Logger.logObject.getter(v29);
    os_log_type_t v31 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v32 = 0;
      _os_log_impl(&dword_0, v30, v31, "#HomeCommunicationRequestSupportPolicy calling ReadAnnouncementFlow", v32, 2u);
      swift_slowDealloc(v32, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v93, v12);
    uint64_t v33 = v97;
    Input.init(parse:)(v15);
    uint64_t v34 = v98;
    uint64_t v35 = v95;
    uint64_t v36 = v99;
    (*(void (**)(char *, os_log_s *, uint64_t))(v98 + 16))(v95, v33, v99);
    sub_A798((uint64_t)v94, (uint64_t)v106);
    sub_A798((uint64_t)v107, (uint64_t)&v103);
    uint64_t v37 = sub_A7D8((uint64_t)&v103, v105);
    v94 = &v93;
    __chkstk_darwin(v37);
    uint64_t v39 = (char *)&v93 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0LL);
    (*(void (**)(char *))(v40 + 16))(v39);
    uint64_t v101 = v19;
    uint64_t v102 = &off_977A0;
    uint64_t v41 = sub_A800(v100);
    sub_A83C((uint64_t)v39, (uint64_t)v41);
    uint64_t AnnouncementFlow = type metadata accessor for ReadAnnouncementFlow(0LL);
    unint64_t v43 = (void *)swift_allocObject( AnnouncementFlow,  *(unsigned int *)(AnnouncementFlow + 48),  *(unsigned __int16 *)(AnnouncementFlow + 52));
    uint64_t v44 = sub_A7D8((uint64_t)v100, v101);
    __chkstk_darwin(v44);
    uint64_t v46 = (char *)&v93 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0LL);
    (*(void (**)(char *))(v47 + 16))(v46);
    v43[11] = v19;
    v43[12] = &off_977A0;
    uint64_t v48 = sub_A800(v43 + 8);
    sub_A83C((uint64_t)v46, (uint64_t)v48);
    (*(void (**)(uint64_t, char *, uint64_t))(v34 + 32))( (uint64_t)v43 + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin20ReadAnnouncementFlow_input,  v35,  v36);
    sub_A780(v106, (uint64_t)(v43 + 2));
    uint64_t v49 = v96;
    v43[7] = v96;
    swift_retain(v49);
    sub_423C(v100);
    sub_423C(&v103);
    sub_32E48();
    *(void *)&v106[0] = v43;
    uint64_t v50 = &qword_A0310;
    uint64_t v51 = &unk_72CB0;
    uint64_t v52 = type metadata accessor for ReadAnnouncementFlow;
LABEL_28:
    sub_A880(v50, v52, (uint64_t)v51);
    uint64_t v69 = Flow.eraseToAnyFlow()(AnnouncementFlow, v91);
    (*(void (**)(os_log_s *, uint64_t))(v34 + 8))(v33, v36);
    __int128 v70 = v43;
LABEL_29:
    swift_release(v70);
    goto LABEL_30;
  }

LABEL_2:
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v21 = sub_4870(v8, (uint64_t)qword_A3EB0);
  uint64_t v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v21, v8);
  uint64_t v23 = (os_log_s *)Logger.logObject.getter(v22);
  os_log_type_t v24 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v26 = swift_slowAlloc(32LL, -1LL);
    *(void *)&v106[0] = v26;
    *(_DWORD *)uint64_t v25 = 136315138;
    if (a2 == 7)
    {
      unint64_t v27 = 0xEF3E656D616E2073LL;
      uint64_t v28 = 0x73616C63206F4E3CLL;
    }

    else
    {
      sub_178BC(a2);
      uint64_t v72 = v71;
      id v73 = [v71 _className];

      uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v73);
      unint64_t v27 = v74;
    }

    uint64_t v103 = sub_68DC4(v28, v27, (uint64_t *)v106);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v103, &v104, v25 + 4, v25 + 12);
    swift_bridgeObjectRelease(v27);
    _os_log_impl( &dword_0,  v23,  v24,  "#HomeCommunicationRequestSupportPolicy unknown HomeCommunicationIntentClassName. Can't find an intent matching %s",  v25,  0xCu);
    swift_arrayDestroy(v26, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1LL, -1LL);
    swift_slowDealloc(v25, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v69 = 0LL;
LABEL_30:
  sub_423C(v107);
  return v69;
}

uint64_t sub_14268(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SharedGlobals(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_142AC(uint64_t a1, void *a2)
{
  uint64_t v3 = a2[3];
  uint64_t v4 = a2[4];
  sub_8504(a2, v3);
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 144))(v3, v4);
  uint64_t v6 = *(void *)(v5 + 16);
  swift_bridgeObjectRelease(v5);
  if (v6)
  {
    uint64_t v7 = a2[3];
    uint64_t v8 = a2[4];
    sub_8504(a2, v7);
    uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 144))(v7, v8);
    uint64_t v10 = v9;
    uint64_t v11 = *(void *)(v9 + 16);
    if (!v11)
    {
LABEL_8:
      swift_bridgeObjectRelease(v10);
      return 6LL;
    }

    uint64_t v12 = (uint64_t *)(v9 + 56);
    while (1)
    {
      uint64_t v13 = *(v12 - 1);
      uint64_t v14 = *v12;
      if ((v13 != 0xD00000000000001BLL || v14 != 0x8000000000075960LL)
        && (_stringCompareWithSmolCheck(_:_:expecting:)(v13, v14, 0xD00000000000001BLL, 0x8000000000075960LL, 0LL) & 1) == 0)
      {
        break;
      }

      v12 += 4;
      if (!--v11) {
        goto LABEL_8;
      }
    }

    swift_bridgeObjectRelease(v10);
  }

  uint64_t v16 = a2[3];
  uint64_t v17 = a2[4];
  sub_8504(a2, v16);
  char v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 40))(v16, v17);
  sub_A798((uint64_t)a2, (uint64_t)v28);
  if ((v18 & 1) != 0)
  {
    uint64_t v19 = v29;
    uint64_t v20 = v30;
    sub_8504(v28, v29);
    char v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 48))(v19, v20);
    sub_423C(v28);
    if ((v21 & 1) == 0) {
      return 0LL;
    }
  }

  else
  {
    sub_423C(v28);
  }

  uint64_t v22 = a2[3];
  uint64_t v23 = a2[4];
  sub_8504(a2, v22);
  uint64_t v24 = a2[3];
  uint64_t v25 = a2[4];
  sub_8504(a2, v24);
  uint64_t v26 = a2[3];
  uint64_t v27 = a2[4];
  sub_8504(a2, v26);
  else {
    return 7LL;
  }
}

  ;
}

uint64_t sub_144F0(uint64_t a1)
{
  return swift_slowAlloc(a1, -1LL);
}

uint64_t sub_144F8()
{
  return swift_errorRelease(v0);
}

uint64_t sub_14500()
{
  return CATWrapperSimple.__allocating_init(options:globals:)(v0, 0LL);
}

uint64_t sub_1450C@<X0>(uint64_t a1@<X8>)
{
  return swift_arrayDestroy(v1, 1LL, a1 + 8);
}

uint64_t sub_1451C()
{
  return static CATOption.defaultMode.getter();
}

uint64_t sub_14528()
{
  return swift_retain(v0);
}

  ;
}

uint64_t sub_14548()
{
  return type metadata accessor for Input(0LL);
}

void sub_14550(void *a1, os_log_s *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
}

uint64_t sub_14558@<X0>(uint64_t a1@<X8>)
{
  if (static SiriEnvironment.forCurrentTask.getter())
  {
    uint64_t v2 = SiriEnvironment.userIdentity.getter();
    uint64_t v3 = sub_BD1C();
    dispatch thunk of UserIdentityProvider.identifiedUser.getter(v3);
    swift_release(v2);
    uint64_t v4 = 0LL;
  }

  else
  {
    uint64_t v4 = 1LL;
  }

  uint64_t v5 = type metadata accessor for IdentifiedUser(0LL);
  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(a1, v4, 1LL, v5);
}

void sub_145D8()
{
  uint64_t v0 = sub_17438();
  sub_11F5C();
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v4 = &v28[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v2);
  uint64_t v6 = (uint64_t *)&v28[-v5];
  os_log_type_t v31 = &unk_95310;
  uint64_t v32 = &off_953B0;
  uint64_t v7 = type metadata accessor for HomeCommunicationFeatureManager();
  uint64_t v8 = sub_AA48(v7, 56LL);
  uint64_t v9 = sub_176CC();
  __chkstk_darwin(v9);
  uint64_t v11 = *(void (**)(void))(v10 + 16);
  v11();
  *(void *)(v8 + 40) = &unk_95310;
  *(void *)(v8 + 4sub_423C(v0 + 8) = &off_953B0;
  sub_423C(v30);
  unsigned int v29 = [(id)objc_opt_self(ANAnnounceFeatureStatus) isAnnounceEnabled];
  os_log_type_t v31 = &unk_95310;
  uint64_t v32 = &off_953B0;
  uint64_t v12 = sub_AA48(v7, 56LL);
  uint64_t v13 = sub_176CC();
  __chkstk_darwin(v13);
  v11();
  *(void *)(v12 + 40) = &unk_95310;
  *(void *)(v12 + 4sub_423C(v0 + 8) = &off_953B0;
  sub_423C(v30);
  uint64_t v14 = type metadata accessor for SKFlowFactory();
  uint64_t v15 = sub_AA48(v14, 16LL);
  v6[5] = v14;
  v6[6] = (uint64_t)&off_97828;
  v6[2] = v15;
  sub_14558((uint64_t)v6 + *(int *)(v0 + 28));
  uint64_t v16 = type metadata accessor for RadarUtils();
  uint64_t v17 = sub_AA48(v16, 24LL);
  uint64_t v18 = type metadata accessor for AutoBugCaptureManager(0LL);
  sub_A8BC(v18);
  *(void *)(v17 + 16) = AutoBugCaptureManager.init(domain:sessionDuration:)( 0xD000000000000015LL,  0x80000000000762E0LL,  30.0);
  uint64_t v19 = (uint64_t *)((char *)v6 + *(int *)(v0 + 32));
  v19[3] = v16;
  v19[4] = (uint64_t)&off_964E8;
  uint64_t *v19 = v17;
  type metadata accessor for ReferenceResolutionClient(0LL);
  uint64_t v20 = ReferenceResolutionClient.__allocating_init()();
  *uint64_t v6 = v12;
  uint64_t v21 = type metadata accessor for DirectInvocationTransformer();
  uint64_t v22 = sub_AA48(v21, 16LL);
  uint64_t v23 = type metadata accessor for NLTransformer();
  uint64_t v24 = sub_AA48(v23, 136LL);
  uint64_t v25 = swift_retain(v12);
  v6[1] = sub_16A20(v25, v20, v22, v24);
  uint64_t v26 = type metadata accessor for CATBundleRegisterer();
  uint64_t v27 = sub_AA48(v26, 16LL);
  sub_14268((uint64_t)v6, (uint64_t)v4);
  sub_168BC(v8, v29, (uint64_t)v4, v27);
  sub_17180((uint64_t)v6, type metadata accessor for SharedGlobals);
  sub_6360();
}

uint64_t sub_14868@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Parse(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v34 - v11;
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v13 = type metadata accessor for Logger(0LL);
  uint64_t v14 = (os_log_s *)sub_4870(v13, (uint64_t)qword_A3EB0);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v16 = v15(v12, a1, v6);
  uint64_t v39 = v14;
  Logger.logObject.getter(v16);
  os_log_type_t v17 = sub_A9E8();
  if (os_log_type_enabled(v14, v17))
  {
    uint64_t v18 = sub_144F0(12LL);
    uint64_t v36 = a1;
    uint64_t v19 = (uint8_t *)v18;
    uint64_t v20 = sub_144F0(32LL);
    uint64_t v37 = v3;
    uint64_t v21 = v20;
    uint64_t v41 = v20;
    uint64_t v38 = a2;
    *(_DWORD *)uint64_t v19 = 136315138;
    uint64_t v35 = v19 + 4;
    v15(v10, (uint64_t)v12, v6);
    uint64_t v22 = sub_5A5B4(v10);
    unint64_t v24 = v23;
    uint64_t v40 = sub_68DC4(v22, v23, &v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41, v35, v19 + 12);
    swift_bridgeObjectRelease(v24);
    sub_17624();
    sub_14550(&dword_0, v14, v17, "#HomeCommunicationFlowDelegatePlugin executing findFlowForX with parse: %s", v19);
    sub_17528(v21, v25, (uint64_t)&type metadata for Any + 8);
    sub_48D4(v21);
    uint64_t v26 = (uint64_t)v19;
    a1 = v36;
    sub_48D4(v26);
  }

  else
  {
    sub_17624();
  }

  sub_14AD8(a1);
  if (v27)
  {
    static FlowSearchResult.flow(_:)();
    return sub_17678();
  }

  else
  {
    unsigned int v29 = (void *)Logger.logObject.getter(0LL);
    os_log_type_t v30 = static os_log_type_t.error.getter();
    if (sub_17380(v30))
    {
      os_log_type_t v31 = (_WORD *)sub_144F0(2LL);
      sub_176AC(v31);
      sub_48D4(a1);
    }

    return static FlowSearchResult.noFlow.getter();
  }

void sub_14AD8(uint64_t a1)
{
  uint64_t v371 = type metadata accessor for Parse.DirectInvocation(0LL);
  uint64_t v364 = *(void *)(v371 - 8);
  sub_1736C();
  __chkstk_darwin(v3);
  sub_6314();
  sub_17538();
  __chkstk_darwin(v4);
  sub_1771C((uint64_t)&v355 - v5);
  sub_41BC(&qword_A0CB0);
  sub_11F5C();
  __chkstk_darwin(v6);
  sub_172F4();
  sub_1771C(v7);
  sub_41BC(&qword_A0CB8);
  sub_11F5C();
  __chkstk_darwin(v8);
  sub_172F4();
  sub_1771C(v9);
  sub_41BC(&qword_A0CC0);
  sub_11F5C();
  __chkstk_darwin(v10);
  sub_172F4();
  sub_1771C(v11);
  sub_41BC(&qword_A0CC8);
  sub_11F5C();
  __chkstk_darwin(v12);
  sub_172F4();
  uint64_t v362 = v13;
  uint64_t v14 = sub_175BC();
  type metadata accessor for CATOption(v14);
  sub_11F5C();
  __chkstk_darwin(v15);
  sub_172F4();
  uint64_t v384 = v16;
  uint64_t v17 = sub_175BC();
  uint64_t v18 = type metadata accessor for SpeakableString(v17);
  uint64_t v377 = *(void *)(v18 - 8);
  uint64_t v378 = v18;
  sub_1736C();
  __chkstk_darwin(v19);
  sub_172F4();
  uint64_t v360 = v20;
  uint64_t v21 = sub_175BC();
  uint64_t v369 = type metadata accessor for SmsNLIntent(v21);
  sub_11F5C();
  __chkstk_darwin(v22);
  sub_6314();
  sub_17538();
  __chkstk_darwin(v23);
  v368 = (os_log_s *)((char *)&v355 - v24);
  uint64_t v25 = sub_175BC();
  uint64_t v26 = type metadata accessor for NLIntent(v25);
  uint64_t v372 = *(void *)(v26 - 8);
  sub_1736C();
  __chkstk_darwin(v27);
  sub_6314();
  sub_17538();
  __chkstk_darwin(v28);
  v383 = (char *)&v355 - v29;
  uint64_t v30 = sub_175BC();
  uint64_t v366 = type metadata accessor for Input(v30);
  uint64_t v365 = *(void *)(v366 - 8);
  sub_1736C();
  __chkstk_darwin(v31);
  sub_172F4();
  uint64_t v375 = v32;
  uint64_t v33 = sub_175BC();
  uint64_t v34 = (os_log_s *)type metadata accessor for Parse(v33);
  uint64_t v35 = *((void *)v34 - 1);
  __chkstk_darwin(v34);
  sub_6314();
  sub_17538();
  uint64_t v37 = __chkstk_darwin(v36);
  v380 = (char *)&v355 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  v379 = (char *)&v355 - v40;
  __chkstk_darwin(v39);
  unint64_t v42 = (char *)&v355 - v41;
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v43 = type metadata accessor for Logger(0LL);
  uint64_t v44 = (os_log_s *)sub_4870(v43, (uint64_t)qword_A3EB0);
  uint64_t v45 = *(uint64_t (**)(char *, uint64_t, os_log_s *))(v35 + 16);
  uint64_t v381 = a1;
  uint64_t v46 = v45(v42, a1, v34);
  v382 = v44;
  Logger.logObject.getter(v46);
  os_log_type_t v47 = sub_A9E8();
  BOOL v48 = os_log_type_enabled(v44, v47);
  uint64_t v374 = v26;
  v376 = (void (*)(char *, uint64_t, os_log_s *))v45;
  if (v48)
  {
    uint64_t v49 = (uint8_t *)sub_144F0(12LL);
    v355 = (unint64_t *)sub_144F0(32LL);
    v389 = v355;
    *(_DWORD *)uint64_t v49 = 136315138;
    v373 = (void (*)(void *, os_log_s *))(v49 + 4);
    a1 = (uint64_t)v379;
    v45(v379, (uint64_t)v42, v34);
    uint64_t v50 = sub_5A5B4((char *)a1);
    unint64_t v52 = v51;
    uint64_t v53 = sub_1764C(v50, v51);
    uint64_t v54 = sub_17700(v53);
    uint64_t v1 = (char *)&type metadata for Any;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v54, v55, v373, v49 + 12);
    unint64_t v56 = v52;
    double v57 = v383;
    swift_bridgeObjectRelease(v56);
    sub_174B8();
    sub_14550(&dword_0, v44, v47, "#HomeCommunicationFlowDelegatePlugin Executing makeFlowFor with parse: %s", v49);
    uint64_t v58 = (uint64_t)v355;
    sub_17528((uint64_t)v355, v59, (uint64_t)&type metadata for Any + 8);
    uint64_t v60 = (uint64_t)v385;
    sub_48D4(v58);
    sub_48D4((uint64_t)v49);

    uint64_t v61 = v34;
  }

  else
  {
    sub_174B8();

    double v57 = v383;
    uint64_t v61 = v34;
    uint64_t v60 = (uint64_t)v385;
  }

  int v62 = *(unsigned __int8 *)(v60 + 16);
  uint64_t v64 = v380;
  uint64_t v63 = v381;
  if (v62 != 1)
  {
    sub_17390();
    os_log_type_t v80 = sub_17654();
    if (sub_17380(v80))
    {
      uint64_t v81 = (_WORD *)sub_144F0(2LL);
      sub_176AC(v81);
      sub_17358(&dword_0, v82, v83, "The entire Home Communication feature is disabled.");
      sub_48D4(a1);
    }

    sub_17338();
    sub_F844();
    sub_172E0();
    uint64_t v84 = sub_172D4();
    sub_17418(v84);
    sub_172E0();
    v383 = (char *)sub_172D4();
    type metadata accessor for ReadAnnouncementCATsSimple(0LL);
    sub_172E0();
    sub_172D4();
    sub_1755C();
    sub_172E0();
    sub_172D4();
    sub_17424();
    sub_1732C();
    __chkstk_darwin(v85);
    sub_172B0(v86, v87, (uint64_t)v355);
    uint64_t v88 = sub_17438();
    uint64_t v387 = v88;
    v388 = &off_977A0;
    uint64_t v89 = sub_17530();
    sub_175A8((uint64_t)v89);
    uint64_t v90 = sub_175B4();
    uint64_t v91 = (unint64_t *)sub_AA48(v90, 96LL);
    sub_A7D8((uint64_t)&v386, v387);
    sub_1732C();
    __chkstk_darwin(v92);
    (*(void (**)(char *))(v94 + 16))((char *)&v355 - ((v93 + 15) & 0xFFFFFFFFFFFFFFF0LL));
    v91[6] = v88;
    v91[7] = (unint64_t)&off_977A0;
    v95 = sub_A800(v91 + 3);
    sub_1759C((uint64_t)v95);
    v91[2] = 0LL;
    uint64_t v96 = v383;
    v91[8] = (unint64_t)v385;
    v91[9] = (unint64_t)v96;
    v91[10] = (unint64_t)v1;
    v91[11] = (unint64_t)v44;
    sub_423C(&v386);
    sub_1765C();
    v389 = v91;
    sub_17144( &qword_A0CD0,  255LL,  (uint64_t (*)(uint64_t))type metadata accessor for UnsupportedDialogFlow,  (uint64_t)&unk_750E8);
    sub_174F8(v97);
    v79 = v91;
    goto LABEL_15;
  }

  uint64_t v65 = v376;
  v376(v380, v381, v61);
  uint64_t v66 = (*(uint64_t (**)(void *, os_log_s *))(a1 + 88))(v64, v61);
  if ((_DWORD)v66 == enum case for Parse.NLv3IntentOnly(_:))
  {
    v373(v64, v61);
LABEL_9:
    sub_17390();
    os_log_type_t v67 = sub_A9E8();
    if (sub_17498(v67))
    {
      uint64_t v68 = (_WORD *)sub_144F0(2LL);
      *uint64_t v68 = 0;
      sub_17440(&dword_0, v69, v70, "#HomeCommunicationFlowDelegatePlugin NLv3/NLv4/USO");
      sub_48D4((uint64_t)v68);
    }

    __int128 v71 = v379;
    sub_17614();
    uint64_t v72 = v375;
    Input.init(parse:)(v71);
    sub_17338();
    static SiriKitEventSender.current.getter(&v386);
    sub_1746C();
    sub_1732C();
    __chkstk_darwin(v73);
    sub_17308(v74, v75, (uint64_t)v355);
    uint64_t v76 = (unint64_t *)sub_16E5C(v72, (uint64_t)v44, &v386);
    sub_423C(&v389);
    v389 = v76;
    type metadata accessor for HomeCommunicationFlow(0LL);
    sub_176E0(&qword_A0BD8, v77, type metadata accessor for HomeCommunicationFlow, (uint64_t)&unk_70BB0);
    sub_17348(v78);
    v79 = v76;
LABEL_15:
    swift_release(v79);
    goto LABEL_16;
  }

  uint64_t v44 = (os_log_s *)v66;
  if ((_DWORD)v66 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    sub_175E4();
    uint64_t v98 = v61;
    uint64_t v99 = *(void *)((char *)v64 + *(int *)(sub_41BC(&qword_A0CD8) + 48));
    uint64_t v100 = v64;
    uint64_t v101 = v372;
    uint64_t v102 = v57;
    uint64_t v1 = v57;
    uint64_t v103 = v374;
    uint64_t v104 = (*(uint64_t (**)(char *, void *, uint64_t))(v372 + 32))(v102, v100, v374);
    uint64_t v105 = (char *)Parse.ServerConversion.siriKitIntent.getter(v104);
    uint64_t v106 = objc_opt_self(&OBJC_CLASS___INSendAnnouncementIntent);
    if (sub_174EC(v106))
    {
      uint64_t v107 = v105;
      uint64_t v381 = v99;
      uint64_t v108 = v367;
      (*(void (**)(uint64_t, char *, uint64_t))(v101 + 16))(v367, v1, v103);
      sub_17390();
      os_log_type_t v109 = sub_17654();
      BOOL v110 = os_log_type_enabled(v98, v109);
      v380 = v107;
      if (v110)
      {
        v111 = (uint8_t *)sub_144F0(12LL);
        uint64_t v112 = sub_144F0(32LL);
        v389 = (unint64_t *)v112;
        *(_DWORD *)v111 = 136315138;
        sub_176E0( &qword_A0D48,  v113,  (uint64_t (*)(uint64_t))&type metadata accessor for NLIntent,  (uint64_t)&protocol conformance descriptor for NLIntent);
        uint64_t v115 = dispatch thunk of CustomStringConvertible.description.getter(v374, v114);
        unint64_t v117 = v116;
        uint64_t v118 = sub_1764C(v115, v116);
        uint64_t v119 = sub_17454(v118);
        uint64_t v120 = (uint64_t)v385;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v119, v121, v122, v111 + 12);
        swift_bridgeObjectRelease(v117);
        v123 = *(void (**)(uint64_t, uint64_t))(v101 + 8);
        v123(v108, v374);
        sub_14550(&dword_0, v98, v109, "NL intent: %s", v111);
        sub_17528(v112, v124, (uint64_t)&type metadata for Any + 8);
        uint64_t v125 = v112;
        v126 = v383;
        sub_48D4(v125);
        uint64_t v127 = (uint64_t)v111;
        uint64_t v128 = v374;
        sub_48D4(v127);
      }

      else
      {
        uint64_t v128 = v103;
        v123 = *(void (**)(uint64_t, uint64_t))(v101 + 8);
        v123(v108, v103);

        v126 = v1;
        uint64_t v120 = (uint64_t)v385;
      }

      v164 = v368;
      sub_174A8();
      BOOL v165 = sub_5AF50();
      sub_17180((uint64_t)v164, type metadata accessor for SmsNLIntent);
      if (v165)
      {
        sub_174A8();
        if (qword_9F8C8 != -1) {
          swift_once(&qword_9F8C8, sub_5B3A4);
        }
        uint64_t v168 = qword_A4090;
        sub_176E8(&qword_A0D20, v166, v167, (uint64_t)&unk_74468);
        uint64_t v170 = IntentNodeTraversable.values<A>(forNode:)(v168, v369, v169);
        sub_176A0();
        int64_t v171 = *(void *)(v170 + 16);
        if (v171)
        {
          v172 = v123;
          v389 = (unint64_t *)&_swiftEmptyArrayStorage;
          sub_45DF8(0LL, v171, 0);
          v173 = v389;
          v174 = (void *)(v170 + 40);
          uint64_t v175 = v360;
          do
          {
            v164 = (os_log_s *)*(v174 - 1);
            uint64_t v176 = *v174;
            swift_bridgeObjectRetain(*v174);
            SpeakableString.init(serializedValue:)(v164, v176);
            v389 = v173;
            unint64_t v178 = v173[2];
            unint64_t v177 = v173[3];
            if (v178 >= v177 >> 1)
            {
              v164 = (os_log_s *)&v389;
              sub_45DF8(v177 > 1, v178 + 1, 1);
              v173 = v389;
            }

            v174 += 2;
            v173[2] = v178 + 1;
            (*(void (**)(unint64_t, uint64_t, uint64_t))(v377 + 32))( (unint64_t)v173 + ((*(unsigned __int8 *)(v377 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v377 + 80))
            + *(void *)(v377 + 72) * v178,
              v175,
              v378);
            --v171;
          }

          while (v171);
          swift_bridgeObjectRelease(v170);
          v123 = v172;
        }

        else
        {
          swift_bridgeObjectRelease(v170);
          v173 = (unint64_t *)&_swiftEmptyArrayStorage;
        }

        v379 = (char *)v123;
        swift_bridgeObjectRetain_n(v173, 2LL);
        sub_17390();
        os_log_type_t v289 = sub_A9E8();
        if (sub_17604(v289))
        {
          v290 = (uint8_t *)sub_144F0(12LL);
          uint64_t v291 = sub_144F0(32LL);
          v389 = (unint64_t *)v291;
          *(_DWORD *)v290 = 136315138;
          uint64_t v292 = swift_bridgeObjectRetain(v173);
          uint64_t v293 = Array.description.getter(v292, v378);
          unint64_t v295 = v294;
          swift_bridgeObjectRelease(v173);
          uint64_t v296 = sub_68DC4(v293, v295, (uint64_t *)&v389);
          uint64_t v297 = sub_17454(v296);
          sub_17664(v297, v298, v299);
          sub_1768C();
          swift_bridgeObjectRelease(v295);
          sub_14550( &dword_0,  v164,  (os_log_type_t)v170,  "Non-existing targets - %s, cannot receive announcements.",  v290);
          sub_17528(v291, v300, (uint64_t)&type metadata for Any + 8);
          sub_48D4(v291);
          sub_48D4((uint64_t)v290);
        }

        else
        {

          sub_1768C();
        }

        uint64_t v301 = v384;
        sub_17378(v120 + 32);
        sub_F844();
        sub_174E0();
        uint64_t v302 = sub_172EC(v301);
        sub_17418(v302);
        sub_174E0();
        uint64_t v303 = sub_172EC(v301);
        sub_1748C(v303);
        sub_174E0();
        uint64_t v378 = sub_172EC(v301);
        type metadata accessor for SkipAnnouncementCATsSimple(0LL);
        sub_174E0();
        sub_172EC(v301);
        sub_17574();
        sub_1732C();
        __chkstk_darwin(v304);
        v306 = sub_17508(v305, (uint64_t)v355);
        v307(v306);
        uint64_t v308 = sub_17438();
        uint64_t v387 = v308;
        v388 = &off_977A0;
        v309 = sub_17530();
        sub_AA64((uint64_t)v309);
        uint64_t v310 = sub_175B4();
        v311 = (unint64_t *)sub_AA48(v310, 96LL);
        sub_1747C();
        sub_1732C();
        __chkstk_darwin(v312);
        v314 = (char *)&v355 - ((v313 + 15) & 0xFFFFFFFFFFFFFFF0LL);
        (*(void (**)(char *))(v315 + 16))(v314);
        v311[6] = v308;
        v311[7] = (unint64_t)&off_977A0;
        v316 = sub_A800(v311 + 3);
        sub_A83C((uint64_t)v314, (uint64_t)v316);
        v311[2] = (unint64_t)v173;
        v317 = v382;
        v311[8] = (unint64_t)v385;
        v311[9] = (unint64_t)v317;
        v311[10] = v378;
        v311[11] = (unint64_t)v164;
        sub_423C(&v386);
        sub_423C(&v389);
        v389 = v311;
        sub_17144( &qword_A0CD0,  255LL,  (uint64_t (*)(uint64_t))type metadata accessor for UnsupportedDialogFlow,  (uint64_t)&unk_750E8);
        sub_1763C(v318);
        v250 = v311;
      }

      else
      {
        uint64_t v179 = v361;
        sub_174A8();
        if (qword_9F8A0 != -1) {
          swift_once(&qword_9F8A0, sub_5B1BC);
        }
        uint64_t v182 = qword_A4068;
        sub_176E8(&qword_A0D20, v180, v181, (uint64_t)&unk_74468);
        uint64_t v183 = v362;
        IntentNodeTraversable.intentNode(forOntologyNode:)(v182, v369, v184);
        uint64_t v185 = type metadata accessor for NonTerminalIntentNode(0LL);
        v186 = (void *)_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v183, 1LL, v185);
        sub_17288(v183, &qword_A0CC8);
        sub_176A0();
        uint64_t v187 = v381;
        uint64_t v188 = v384;
        if ((_DWORD)v186 == 1)
        {
          sub_17378(v120 + 32);
          sub_176D8();
          sub_1746C();
          sub_1732C();
          __chkstk_darwin(v189);
          sub_17308(v190, v191, (uint64_t)v355);
          sub_16F4C(&v386, v179, 0);
          sub_423C(&v389);
          uint64_t v192 = sub_41BC(&qword_A0D28);
          uint64_t v193 = v359;
          uint64_t v196 = sub_175C8(v359, v194, v195, v192);
          uint64_t v197 = type metadata accessor for SendAnnouncementRCHFlowDelegate(v196);
          sub_176E0( &qword_A0D30,  v198,  type metadata accessor for SendAnnouncementRCHFlowDelegate,  (uint64_t)&protocol conformance descriptor for BaseRCHFlowDelegate<A, B>);
          v200 = (unint64_t *)RCHFlowDelegate.makeRCHFlow(producers:)(v193, v197, v199);
          sub_BD1C();
          sub_17288(v193, &qword_A0CC0);
          v389 = v200;
          sub_17698();
          sub_176C4(&qword_A0D40);
          sub_17348(v201);
          sub_17678();
          sub_17714();
          swift_release(v187);
          v123((uint64_t)v126, v128);
          goto LABEL_16;
        }

        v379 = (char *)v123;
        sub_17390();
        os_log_type_t v232 = sub_17654();
        if (sub_17380(v232))
        {
          v233 = (_WORD *)sub_144F0(2LL);
          sub_176AC(v233);
          sub_17358(&dword_0, v234, v235, "Announcing to a contact or relationship isn't supported.");
          sub_48D4((uint64_t)type metadata accessor for SmsNLIntent);
        }

        sub_17378(v120 + 32);
        sub_F844();
        sub_174D4();
        uint64_t v236 = sub_172EC(v188);
        sub_17418(v236);
        sub_174D4();
        uint64_t v237 = sub_172EC(v188);
        sub_1748C(v237);
        sub_174D4();
        sub_172EC(v188);
        sub_1755C();
        sub_174D4();
        sub_172EC(v188);
        sub_17424();
        sub_1732C();
        __chkstk_darwin(v238);
        sub_172B0(v239, v240, (uint64_t)v355);
        uint64_t v387 = sub_17438();
        v388 = &off_977A0;
        v241 = sub_17530();
        sub_175A8((uint64_t)v241);
        uint64_t v242 = sub_175B4();
        v243 = (unint64_t *)sub_AA48(v242, 96LL);
        sub_1747C();
        sub_1732C();
        __chkstk_darwin(v244);
        sub_173AC(v245, v246, (uint64_t)v355);
        v247 = sub_1766C();
        sub_1759C((uint64_t)v247);
        v243[2] = 1LL;
        v248 = v382;
        v243[8] = (unint64_t)v385;
        v243[9] = (unint64_t)v248;
        v243[10] = v187;
        v243[11] = v179;
        sub_423C(&v386);
        sub_423C(&v389);
        v389 = v243;
        sub_17144( &qword_A0CD0,  255LL,  (uint64_t (*)(uint64_t))type metadata accessor for UnsupportedDialogFlow,  (uint64_t)&unk_750E8);
        sub_174F8(v249);
        v250 = v243;
      }

      swift_release(v250);
      sub_17714();
      swift_release(v381);
      ((void (*)(char *, uint64_t))v379)(v383, v374);
      goto LABEL_16;
    }

    uint64_t v146 = objc_opt_self(&OBJC_CLASS___INReadAnnouncementIntent);
    uint64_t v147 = sub_174EC(v146);
    if (v147)
    {
      v148 = (void *)v147;
      v149 = v105;
      if ([v148 userNotificationType] == (char *)&dword_0 + 2)
      {
        v150 = (void *)sub_17390();
        os_log_type_t v151 = static os_log_type_t.error.getter();
        BOOL v152 = sub_17498(v151);
        uint64_t v153 = v374;
        if (v152)
        {
          v154 = (_WORD *)sub_144F0(2LL);
          _WORD *v154 = 0;
          sub_17440( &dword_0,  v155,  v156,  "Delivery failure occurred while attempting to read announcements on airpods.");
          sub_48D4((uint64_t)v154);
        }

        uint64_t v157 = type metadata accessor for BaseFlow();
        v389 = (unint64_t *)sub_AA48(v157, 16LL);
        sub_176F4((unint64_t *)&qword_9FF80, v158, v159, (uint64_t)&unk_6FA90);
        sub_17348(v160);
        sub_17568();

        sub_17634();
        uint64_t v161 = sub_17398();
        uint64_t v163 = v153;
        goto LABEL_74;
      }

      v265 = (char *)[v148 readType];
      uint64_t v266 = v374;
      if (v265 != (_BYTE *)&dword_0 + 2)
      {
        sub_17338();
        sub_176D8();
        sub_175F4();
        sub_1732C();
        __chkstk_darwin(v319);
        sub_173D0(v320, v321, (uint64_t)v355);
        uint64_t v322 = sub_1703C( &v386,  (uint64_t)v105,  type metadata accessor for ReadAnnouncementRCHFlowDelegate,  &qword_A1FE8,  &qword_A1FF0);
        sub_1765C();
        uint64_t v323 = sub_41BC(&qword_A0D00);
        uint64_t v324 = v356;
        uint64_t v327 = sub_175C8(v356, v325, v326, v323);
        uint64_t AnnouncementRCHFlowDelegate = type metadata accessor for ReadAnnouncementRCHFlowDelegate(v327);
        sub_176F4(&qword_A0D08, v329, v330, (uint64_t)&protocol conformance descriptor for BaseRCHFlowDelegate<A, B>);
        v332 = (unint64_t *)RCHFlowDelegate.makeRCHFlow(producers:)(v324, AnnouncementRCHFlowDelegate, v331);
        swift_release(v322);
        sub_17288(v324, &qword_A0CB8);
        v389 = v332;
        sub_17698();
        sub_176C4(&qword_A0D18);
        sub_17348(v333);
        sub_17568();

        sub_17634();
        uint64_t v161 = sub_17398();
        uint64_t v163 = v266;
LABEL_74:
        v162(v161, v163);
        goto LABEL_16;
      }

      uint64_t v381 = v99;
      sub_17390();
      os_log_type_t v267 = sub_A9E8();
      BOOL v268 = sub_17498(v267);
      uint64_t v269 = (uint64_t)v385;
      if (v268)
      {
        v270 = (_WORD *)sub_144F0(2LL);
        _WORD *v270 = 0;
        sub_17440(&dword_0, v271, v272, "Repeating announcements isn't supported.");
        sub_48D4((uint64_t)v270);
      }

      sub_17378(v269 + 32);
      sub_F844();
      sub_172E0();
      uint64_t v273 = sub_172D4();
      sub_17418(v273);
      sub_172E0();
      uint64_t v274 = sub_172D4();
      sub_1748C(v274);
      sub_172E0();
      v380 = (char *)sub_172D4();
      type metadata accessor for SkipAnnouncementCATsSimple(0LL);
      sub_172E0();
      sub_172D4();
      sub_17574();
      sub_1732C();
      __chkstk_darwin(v275);
      sub_173F4(v276, v277, (uint64_t)v355);
      uint64_t v278 = sub_17438();
      uint64_t v387 = v278;
      v388 = &off_977A0;
      v279 = sub_17530();
      sub_176B8((uint64_t)v279);
      uint64_t v280 = sub_175B4();
      v281 = (unint64_t *)sub_AA48(v280, 96LL);
      sub_A7D8((uint64_t)&v386, v387);
      sub_1732C();
      __chkstk_darwin(v282);
      v284 = sub_17508(v283, (uint64_t)v355);
      v285(v284);
      v281[6] = v278;
      v281[7] = (unint64_t)&off_977A0;
      v286 = sub_A800(v281 + 3);
      sub_AA64((uint64_t)v286);
      v281[2] = 2LL;
      v287 = v382;
      v281[8] = (unint64_t)v385;
      v281[9] = (unint64_t)v287;
      v281[10] = (unint64_t)v380;
      v281[11] = (unint64_t)v148;
      sub_423C(&v386);
      sub_423C(&v389);
      v389 = v281;
      sub_17144( &qword_A0CD0,  255LL,  (uint64_t (*)(uint64_t))type metadata accessor for UnsupportedDialogFlow,  (uint64_t)&unk_750E8);
      sub_1763C(v288);
      swift_release(v281);

      goto LABEL_72;
    }

    uint64_t v251 = objc_opt_self(&OBJC_CLASS___INStopAnnouncementIntent);
    if (sub_174EC(v251))
    {
      sub_17338();
      sub_176D8();
      sub_1746C();
      v252 = v105;
      sub_1732C();
      __chkstk_darwin(v253);
      sub_17308(v254, v255, (uint64_t)v355);
      sub_1703C(&v386, v99, type metadata accessor for StopAnnouncementRCHFlowDelegate, &qword_A3880, &qword_A3888);
      sub_423C(&v389);
      uint64_t v256 = sub_41BC(&qword_A0CE0);
      uint64_t v257 = v357;
      uint64_t v260 = sub_175C8(v357, v258, v259, v256);
      uint64_t v261 = type metadata accessor for StopAnnouncementRCHFlowDelegate(v260);
      sub_17144( &qword_A0CE8,  255LL,  type metadata accessor for StopAnnouncementRCHFlowDelegate,  (uint64_t)&protocol conformance descriptor for BaseRCHFlowDelegate<A, B>);
      v263 = (unint64_t *)RCHFlowDelegate.makeRCHFlow(producers:)(v257, v261, v262);
      sub_BD1C();
      sub_17288(v257, &qword_A0CB0);
      v389 = v263;
      sub_17698();
      sub_176C4(&qword_A0CF8);
      sub_17348(v264);
      sub_17678();

      sub_17634();
      uint64_t v161 = sub_17398();
LABEL_73:
      uint64_t v163 = v374;
      goto LABEL_74;
    }

    uint64_t v334 = objc_opt_self(&OBJC_CLASS___INSkipAnnouncementIntent);
    if (sub_174EC(v334))
    {
      v380 = v105;
      uint64_t v381 = v99;
      sub_17390();
      os_log_type_t v335 = sub_17654();
      if (sub_17380(v335))
      {
        v336 = (_WORD *)sub_144F0(2LL);
        sub_176AC(v336);
        sub_17358(&dword_0, v337, v338, "Skipping announcements isn't supported.");
        sub_48D4((uint64_t)v105);
      }

      sub_17338();
      sub_F844();
      sub_172E0();
      uint64_t v339 = sub_172D4();
      sub_17418(v339);
      sub_172E0();
      uint64_t v340 = sub_172D4();
      sub_1748C(v340);
      sub_172E0();
      sub_172D4();
      sub_1755C();
      sub_172E0();
      sub_172D4();
      sub_17424();
      sub_1732C();
      __chkstk_darwin(v341);
      sub_172B0(v342, v343, (uint64_t)v355);
      uint64_t v387 = sub_17438();
      v388 = &off_977A0;
      v344 = sub_17530();
      sub_175A8((uint64_t)v344);
      uint64_t v345 = sub_175B4();
      v346 = (unint64_t *)sub_AA48(v345, 96LL);
      sub_1747C();
      sub_1732C();
      __chkstk_darwin(v347);
      sub_173AC(v348, v349, (uint64_t)v355);
      v350 = sub_1766C();
      sub_1759C((uint64_t)v350);
      v346[2] = 3LL;
      v351 = v382;
      v346[8] = (unint64_t)v385;
      v346[9] = (unint64_t)v351;
      v346[10] = (unint64_t)v1;
      v346[11] = v99;
      sub_423C(&v386);
      sub_423C(&v389);
      v389 = v346;
      sub_17144( &qword_A0CD0,  255LL,  (uint64_t (*)(uint64_t))type metadata accessor for UnsupportedDialogFlow,  (uint64_t)&unk_750E8);
      sub_174F8(v352);
      swift_release(v346);
      sub_17714();
LABEL_72:
      swift_release(v381);
      v162 = *(void (**)(uint64_t, uint64_t))(v372 + 8);
      uint64_t v161 = (uint64_t)v383;
      goto LABEL_73;
    }

    sub_17634();
    uint64_t v353 = sub_17398();
    v354(v353, v374);
    v145 = (void *)&loc_6F000;
    uint64_t v61 = v98;
    goto LABEL_48;
  }

  if ((_DWORD)v66 != enum case for Parse.directInvocation(_:))
  {
    v145 = &loc_6F000;
    if ((_DWORD)v66 == enum case for Parse.NLv4IntentOnly(_:))
    {
      sub_175E4();
      swift_unknownObjectRelease(*v64);
      goto LABEL_9;
    }

    int v218 = enum case for Parse.uso(_:);
    v373(v64, v61);
    if ((_DWORD)v44 == v218) {
      goto LABEL_9;
    }
LABEL_48:
    uint64_t v219 = v358;
    sub_17614();
    v220 = (os_log_s *)sub_17390();
    os_log_type_t v221 = static os_log_type_t.error.getter();
    if (sub_17604(v221))
    {
      v222 = (uint8_t *)sub_144F0(12LL);
      uint64_t v223 = sub_144F0(32LL);
      v389 = (unint64_t *)v223;
      *(_DWORD *)v222 = v145[281];
      v385 = v222 + 4;
      v224 = v379;
      v65(v379, v219, v61);
      uint64_t v225 = sub_5A5B4(v224);
      unint64_t v227 = v226;
      uint64_t v228 = sub_1764C(v225, v226);
      uint64_t v229 = sub_17700(v228);
      sub_17664(v229, v230, (uint64_t)v385);
      swift_bridgeObjectRelease(v227);
      sub_17680();
      sub_14550(&dword_0, v220, (os_log_type_t)v1, "#HomeCommunicationFlowDelegatePlugin unsupportedParse %s", v222);
      sub_17528(v223, v231, (uint64_t)&type metadata for Any + 8);
      sub_48D4(v223);
      sub_48D4((uint64_t)v222);
    }

    else
    {
      sub_17680();
    }

    goto LABEL_16;
  }

  v129 = *(void (**)(void *, os_log_s *))(a1 + 96);
  v383 = (char *)v61;
  v129(v64, v61);
  uint64_t v130 = v364;
  uint64_t v131 = v370;
  uint64_t v132 = v371;
  (*(void (**)(uint64_t, void *, uint64_t))(v364 + 32))(v370, v64, v371);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v130 + 16))(v363, v131, v132);
  v133 = (os_log_s *)sub_17390();
  os_log_type_t v134 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v133, v134))
  {
    v135 = (uint8_t *)sub_144F0(12LL);
    uint64_t v136 = sub_144F0(32LL);
    v389 = (unint64_t *)v136;
    *(_DWORD *)v135 = 136315138;
    uint64_t v137 = Parse.DirectInvocation.identifier.getter(v136);
    unint64_t v139 = v138;
    uint64_t v140 = sub_1764C(v137, v138);
    uint64_t v141 = sub_17454(v140);
    sub_17664(v141, v142, v143);
    swift_bridgeObjectRelease(v139);
    sub_17548();
    sub_14550( &dword_0,  v133,  v134,  "#HomeCommunicationFlowDelegatePlugin pushing DirectInvocationHomeCommunicationFlow for DI with id=%s",  v135);
    sub_17528(v136, v144, (uint64_t)&type metadata for Any + 8);
    uint64_t v63 = v381;
    sub_48D4(v136);
    sub_48D4((uint64_t)v135);
  }

  else
  {
    sub_17548();
  }

  v202 = v379;
  v376(v379, v63, (os_log_s *)v383);
  uint64_t v203 = v375;
  Input.init(parse:)(v202);
  sub_17338();
  type metadata accessor for SendAnnouncementCATsSimple(0LL);
  sub_172E0();
  uint64_t v204 = sub_172D4();
  sub_175F4();
  sub_1732C();
  __chkstk_darwin(v205);
  sub_173D0(v206, v207, (uint64_t)v355);
  uint64_t v208 = sub_17438();
  uint64_t v387 = v208;
  v388 = &off_977A0;
  v209 = sub_17530();
  sub_A83C((uint64_t)v133, (uint64_t)v209);
  uint64_t v210 = type metadata accessor for DirectInvocationHomeCommunicationFlow(0LL);
  v211 = (char *)sub_A8BC(v210);
  sub_A7D8((uint64_t)&v386, v387);
  sub_1732C();
  __chkstk_darwin(v212);
  sub_173F4(v213, v214, (uint64_t)v355);
  v215 = &v211[OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin37DirectInvocationHomeCommunicationFlow_sharedGlobals];
  *((void *)v215 + 3) = v208;
  *((void *)v215 + 4) = &off_977A0;
  v216 = sub_A800(v215);
  sub_176B8((uint64_t)v216);
  (*(void (**)(char *, uint64_t, uint64_t))(v365 + 32))( &v211[OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin37DirectInvocationHomeCommunicationFlow_input],  v203,  v366);
  *(void *)&v211[OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin37DirectInvocationHomeCommunicationFlow_sendAnnouncementCATsSimple] = v204;
  sub_423C(&v386);
  sub_1765C();
  v389 = (unint64_t *)v211;
  sub_17144(&qword_A0318, 255LL, type metadata accessor for DirectInvocationHomeCommunicationFlow, (uint64_t)&unk_6FFA0);
  sub_17348(v217);
  sub_17568();
  ((void (*)(uint64_t, uint64_t))v382)(v370, v371);
LABEL_16:
  sub_6360();
}

uint64_t sub_16560()
{
  return swift_deallocClassInstance(v0, 72LL, 7LL);
}

uint64_t type metadata accessor for HomeCommunicationFlowDelegatePlugin()
{
  return objc_opt_self(&OBJC_CLASS____TtC35HomeCommunicationFlowDelegatePlugin35HomeCommunicationFlowDelegatePlugin);
}

uint64_t sub_165AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_14868(a1, a2);
}

void sub_165CC(void *a1@<X8>)
{
  *a1 = v2;
}

void sub_16604(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_16630(uint64_t a1, uint64_t a2, __int128 *a3, uint64_t a4)
{
  uint64_t v18 = type metadata accessor for SharedGlobals(0LL);
  uint64_t v19 = &off_977A0;
  uint64_t v8 = sub_A800(&v17);
  sub_A83C(a2, (uint64_t)v8);
  *(void *)(a4 + 56) = &_swiftEmptyArrayStorage;
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v9 = type metadata accessor for Logger(0LL);
  uint64_t v10 = sub_4870(v9, (uint64_t)qword_A3EB0);
  uint64_t v11 = (os_log_s *)Logger.logObject.getter(v10);
  os_log_type_t v12 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl(&dword_0, v11, v12, "#HomeCommunicationFlow state is initialized.", v13, 2u);
    swift_slowDealloc(v13, -1LL, -1LL);
  }

  uint64_t v14 = a4 + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin21HomeCommunicationFlow_input;
  uint64_t v15 = type metadata accessor for Input(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32LL))(v14, a1, v15);
  sub_A780(&v17, a4 + 16);
  sub_A780(a3, a4 + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin21HomeCommunicationFlow_siriKitEventSender);
  return a4;
}

uint64_t *sub_167A0(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v10 = *a5;
  v18[3] = type metadata accessor for SharedGlobals(0LL);
  v18[4] = &off_977A0;
  uint64_t v11 = sub_A800(v18);
  sub_A83C(a3, (uint64_t)v11);
  uint64_t v12 = type metadata accessor for CATBundleRegisterer();
  v17[3] = v12;
  v17[4] = &off_94830;
  v17[0] = a4;
  *((_BYTE *)a5 + 16) = a2;
  a5[3] = a1;
  sub_A798((uint64_t)v18, (uint64_t)(a5 + 4));
  sub_8504(v17, v12);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v10);
  uint64_t v14 = (void *)objc_opt_self(&OBJC_CLASS___NSBundle);
  swift_retain(a1);
  id v15 = objc_msgSend(v14, "bundleForClass:", ObjCClassFromMetadata, v17[0]);
  sub_9368((uint64_t)v15);
  swift_release(a1);

  sub_423C(v18);
  sub_423C(v17);
  return a5;
}

uint64_t *sub_168BC(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v24 = type metadata accessor for SharedGlobals(0LL);
  uint64_t v25 = &off_977A0;
  uint64_t v8 = sub_A800(v23);
  sub_A83C(a3, (uint64_t)v8);
  uint64_t v9 = type metadata accessor for CATBundleRegisterer();
  void v22[3] = v9;
  v22[4] = &off_94830;
  v22[0] = a4;
  uint64_t v10 = type metadata accessor for HomeCommunicationFlowDelegatePlugin();
  uint64_t v11 = (uint64_t *)swift_allocObject(v10, 72LL, 7LL);
  uint64_t v12 = sub_A7D8((uint64_t)v23, v24);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *))(v15 + 16))(v14);
  uint64_t v16 = sub_A7D8((uint64_t)v22, v9);
  __chkstk_darwin(v16);
  uint64_t v18 = (void *)((char *)v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(uint64_t *))(v19 + 16))(v18);
  uint64_t v20 = sub_167A0(a1, a2, (uint64_t)v14, *v18, v11);
  sub_423C(v22);
  sub_423C(v23);
  return v20;
}

uint64_t sub_16A20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v13 = type metadata accessor for ReferenceResolutionClient(0LL);
  uint64_t v14 = &protocol witness table for ReferenceResolutionClient;
  *(void *)&__int128 v12 = a2;
  *(void *)(a4 + 24) = _swiftEmptyArrayStorage;
  *(_OWORD *)(a4 + 32) = 0u;
  *(_OWORD *)(a4 + 4sub_423C(v0 + 8) = 0u;
  *(_OWORD *)(a4 + 64) = xmmword_70C10;
  uint64_t v8 = type metadata accessor for NLv4Transformer(0LL);
  uint64_t v9 = swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  swift_retain(a2);
  uint64_t v10 = swift_retain(a1);
  *(void *)(a4 + 16) = sub_16AE4(v10, a2, v9);
  sub_A780(&v12, a4 + 96);
  *(void *)(a4 + 80) = a1;
  *(void *)(a4 + 8sub_423C(v0 + 8) = a3;
  return a4;
}

uint64_t sub_16AE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_41BC(&qword_A0D50);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v21[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  void v23[3] = type metadata accessor for ReferenceResolutionClient(0LL);
  v23[4] = &protocol witness table for ReferenceResolutionClient;
  v23[0] = a2;
  sub_A798((uint64_t)v23, (uint64_t)v22);
  sub_171A8((uint64_t)v22, (uint64_t)v21);
  uint64_t v10 = swift_allocObject(&unk_95498, 64LL, 7LL);
  sub_17224((uint64_t)v21, v10 + 16);
  *(void *)(v10 + 56) = a1;
  uint64_t v11 = type metadata accessor for TransformerInput(0LL);
  swift_retain(a1);
  uint64_t v12 = sub_41BC(&qword_A02E0);
  Transformer.init(transform:)(sub_1726C, v10, v11, v12);
  sub_17288((uint64_t)v22, &qword_A0D58);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v7 + 32))( a3 + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin15NLv4Transformer_transformer,  v9,  v6);
  *(void *)(a3 + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin15NLv4Transformer_featureManager) = a1;
  uint64_t v13 = qword_9F820;
  swift_retain(a1);
  if (v13 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v14 = type metadata accessor for Logger(0LL);
  uint64_t v15 = sub_4870(v14, (uint64_t)qword_A3EB0);
  uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
  os_log_type_t v17 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v18 = 0;
    _os_log_impl( &dword_0,  v16,  v17,  "#NLv4Transformer is initiated, this function should be only be called once for each makeFlowFor function",  v18,  2u);
    swift_slowDealloc(v18, -1LL, -1LL);
  }

  swift_release(a1);
  sub_423C(v23);
  return a3;
}

uint64_t sub_16CF8(void *a1, uint64_t a2, char a3, uint64_t a4)
{
  v11[3] = type metadata accessor for SharedGlobals(0LL);
  v11[4] = &off_977A0;
  uint64_t v8 = sub_A800(v11);
  sub_A83C(a2, (uint64_t)v8);
  sub_A798((uint64_t)a1, a4 + qword_A2D08);
  sub_A798((uint64_t)v11, a4 + qword_A2D10);
  *(_BYTE *)(a4 + qword_A2D1sub_423C(v0 + 8) = a3;
  uint64_t v9 = BaseRCHFlowDelegate.init()();
  sub_423C(v11);
  sub_423C(a1);
  return v9;
}

uint64_t sub_16DB4(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  v13[3] = sub_17438();
  v13[4] = &off_977A0;
  uint64_t v10 = sub_A800(v13);
  sub_A83C(a2, (uint64_t)v10);
  sub_A798((uint64_t)a1, a3 + *a4);
  sub_A798((uint64_t)v13, a3 + *a5);
  uint64_t v11 = BaseRCHFlowDelegate.init()();
  sub_423C(v13);
  sub_423C(a1);
  return v11;
}

uint64_t sub_16E5C(uint64_t a1, uint64_t a2, __int128 *a3)
{
  uint64_t v17 = type metadata accessor for SharedGlobals(0LL);
  uint64_t v18 = &off_977A0;
  uint64_t v6 = sub_A800(v16);
  sub_A83C(a2, (uint64_t)v6);
  uint64_t v7 = type metadata accessor for HomeCommunicationFlow(0LL);
  uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  uint64_t v9 = sub_A7D8((uint64_t)v16, v17);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v16[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *))(v12 + 16))(v11);
  uint64_t v13 = sub_16630(a1, (uint64_t)v11, a3, v8);
  sub_423C(v16);
  return v13;
}

uint64_t sub_16F4C(void *a1, uint64_t a2, char a3)
{
  uint64_t v17 = type metadata accessor for SharedGlobals(0LL);
  uint64_t v18 = &off_977A0;
  uint64_t v6 = sub_A800(v16);
  sub_A83C(a2, (uint64_t)v6);
  uint64_t v7 = type metadata accessor for SendAnnouncementRCHFlowDelegate(0LL);
  uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  uint64_t v9 = sub_A7D8((uint64_t)v16, v17);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v16[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *))(v12 + 16))(v11);
  uint64_t v13 = sub_16CF8(a1, (uint64_t)v11, a3, v8);
  sub_423C(v16);
  return v13;
}

uint64_t sub_1703C(void *a1, uint64_t a2, uint64_t (*a3)(void), void *a4, void *a5)
{
  uint64_t v21 = sub_17438();
  uint64_t v22 = &off_977A0;
  uint64_t v11 = sub_A800(v20);
  sub_A83C(a2, (uint64_t)v11);
  uint64_t v12 = a3(0LL);
  uint64_t v13 = sub_A8BC(v12);
  sub_A7D8((uint64_t)v20, v21);
  sub_1732C();
  __chkstk_darwin(v14);
  sub_172B0(v15, v16, v19);
  uint64_t v17 = sub_16DB4(a1, v5, v13, a4, a5);
  sub_423C(v20);
  return v17;
}

void sub_17108(unint64_t *a1, uint64_t *a2)
{
  if (!*a1)
  {
    uint64_t v3 = sub_8564(a2);
    atomic_store(swift_getWitnessTable(&protocol conformance descriptor for RCHFlow<A>, v3), a1);
  }

  sub_AA5C();
}

void sub_17144(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  if (!*a1)
  {
    uint64_t v6 = a3(a2);
    atomic_store(swift_getWitnessTable(a4, v6), a1);
  }

  sub_AA5C();
}

void sub_17180(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v2 = a2(0LL);
  sub_17588(v2);
  sub_AA5C();
}

uint64_t sub_171A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_41BC(&qword_A0D58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_171F0()
{
  if (v0[5]) {
    sub_423C(v0 + 2);
  }
  swift_release(v0[7]);
  return swift_deallocObject(v0, 64LL, 7LL);
}

uint64_t sub_17224(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_41BC(&qword_A0D58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1726C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_28BE8(a1, (const char *)(v2 + 16), *(uint8_t **)(v2 + 56), a2);
}

void sub_17288(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = sub_41BC(a2);
  sub_17588(v2);
  sub_AA5C();
}

uint64_t sub_172B0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>, uint64_t a3)
{
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))( (char *)&a3 - ((a2 + 15) & 0xFFFFFFFFFFFFFFF0LL),  a1,  v4);
}

uint64_t sub_172D4()
{
  return CATWrapperSimple.__allocating_init(options:globals:)(v0, 0LL);
}

uint64_t sub_172E0()
{
  return static CATOption.defaultMode.getter();
}

uint64_t sub_172EC(uint64_t a1)
{
  return CATWrapperSimple.__allocating_init(options:globals:)(a1, 0LL);
}

  ;
}

uint64_t sub_17308@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>, uint64_t a3)
{
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))( (char *)&a3 - ((a2 + 15) & 0xFFFFFFFFFFFFFFF0LL),  a1,  v4);
}

  ;
}

void sub_17338()
{
}

uint64_t sub_17348(uint64_t a1)
{
  return Flow.eraseToAnyFlow()(v1, a1);
}

void sub_17358(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
}

  ;
}

void sub_17378(uint64_t a1)
{
}

BOOL sub_17380(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_17390()
{
  return Logger.logObject.getter();
}

uint64_t sub_17398()
{
  return v0;
}

uint64_t sub_173AC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>, uint64_t a3)
{
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))( (char *)&a3 - ((a2 + 15) & 0xFFFFFFFFFFFFFFF0LL),  a1,  v4);
}

uint64_t sub_173D0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>, uint64_t a3)
{
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))( (char *)&a3 - ((a2 + 15) & 0xFFFFFFFFFFFFFFF0LL),  a1,  v4);
}

uint64_t sub_173F4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>, uint64_t a3)
{
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))( (char *)&a3 - ((a2 + 15) & 0xFFFFFFFFFFFFFFF0LL),  a1,  v4);
}

uint64_t sub_17418(uint64_t a1)
{
  *(void *)(v1 - 176) = a1;
  return type metadata accessor for SendAnnouncementCATsSimple(0LL);
}

uint64_t sub_17424()
{
  return sub_A7D8(v0 - 128, *(void *)(v0 - 104));
}

uint64_t sub_17438()
{
  return type metadata accessor for SharedGlobals(0LL);
}

void sub_17440(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
}

uint64_t sub_17454(uint64_t a1)
{
  *(void *)(v1 - 16sub_423C(v0 + 8) = a1;
  return v1 - 168;
}

uint64_t sub_1746C()
{
  return sub_A7D8(v0 - 128, *(void *)(v0 - 104));
}

uint64_t sub_1747C()
{
  return sub_A7D8(v0 - 168, *(void *)(v0 - 144));
}

uint64_t sub_1748C(uint64_t a1)
{
  *(void *)(v1 - 200) = a1;
  return type metadata accessor for ReadAnnouncementCATsSimple(0LL);
}

BOOL sub_17498(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_174A8()
{
  return v2(v0, v1, v3);
}

uint64_t sub_174B8()
{
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8);
  *(void *)(v3 - 272) = v4;
  return v4(v1, v0);
}

uint64_t sub_174D4()
{
  return static CATOption.defaultMode.getter();
}

uint64_t sub_174E0()
{
  return static CATOption.defaultMode.getter();
}

uint64_t sub_174EC(uint64_t a1)
{
  return swift_dynamicCastObjCClass(v1, a1);
}

uint64_t sub_174F8(uint64_t a1)
{
  return Flow.eraseToAnyFlow()(v1, a1);
}

char *sub_17508@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
}

uint64_t sub_17528(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_arrayDestroy(a1, 1LL, a3);
}

void *sub_17530()
{
  return sub_A800((void *)(v0 - 168));
}

void sub_17538()
{
  *(void *)(v1 - 256) = v0;
}

uint64_t sub_17548()
{
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8);
  *(void *)(v3 - 200) = v4;
  return v4(v1, v0);
}

uint64_t sub_1755C()
{
  return type metadata accessor for SkipAnnouncementCATsSimple(0LL);
}

uint64_t sub_17568()
{
  return swift_release(v0);
}

uint64_t sub_17574()
{
  return sub_A7D8(v0 - 128, *(void *)(v0 - 104));
}

uint64_t sub_17588(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8LL))(v1, a1);
}

uint64_t sub_1759C(uint64_t a1)
{
  return sub_A83C(v1, a1);
}

uint64_t sub_175A8(uint64_t a1)
{
  return sub_A83C(v1, a1);
}

uint64_t sub_175B4()
{
  return type metadata accessor for UnsupportedDialogFlow();
}

uint64_t sub_175BC()
{
  return 0LL;
}

uint64_t sub_175C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return 0LL;
}

uint64_t sub_175E4()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 96))(v2, v1);
}

uint64_t sub_175F4()
{
  return sub_A7D8(v0 - 128, *(void *)(v0 - 104));
}

BOOL sub_17604(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_17614()
{
  return v3(v0, v2, v1);
}

uint64_t sub_17624()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_17634()
{
  return swift_release(v0);
}

uint64_t sub_1763C(uint64_t a1)
{
  return Flow.eraseToAnyFlow()(v1, a1);
}

uint64_t sub_1764C(uint64_t a1, unint64_t a2)
{
  return sub_68DC4(a1, a2, (uint64_t *)(v2 - 128));
}

uint64_t sub_17654()
{
  return static os_log_type_t.debug.getter();
}

uint64_t sub_1765C()
{
  return sub_423C((void *)(v0 - 128));
}

uint64_t sub_17664(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(a1, a2, a3, v3);
}

void *sub_1766C()
{
  v1[6] = v2;
  v1[7] = v0;
  return sub_A800(v1 + 3);
}

uint64_t sub_17678()
{
  return swift_release(v0);
}

uint64_t sub_17680()
{
  return v1(v0, v2);
}

uint64_t sub_1768C()
{
  return swift_bridgeObjectRelease_n(v0, 2LL);
}

uint64_t sub_17698()
{
  return sub_41BC(v0);
}

void sub_176A0()
{
}

_WORD *sub_176AC(_WORD *result)
{
  *uint64_t result = 0;
  return result;
}

uint64_t sub_176B8(uint64_t a1)
{
  return sub_A83C(v1, a1);
}

void sub_176C4(unint64_t *a1)
{
}

uint64_t sub_176CC()
{
  return sub_A7D8(v1 - 120, v0);
}

uint64_t sub_176D8()
{
  return static Device.current.getter();
}

void sub_176E0(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
}

void sub_176E8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_176F4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_17700(uint64_t a1)
{
  *(void *)(v1 - 16sub_423C(v0 + 8) = a1;
  return v1 - 168;
}

void sub_17714()
{
}

void sub_1771C(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
}

uint64_t getEnumTagSinglePayload for HomeCommunicationIntentClassNames(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }

  if (a2 >= 0xFA)
  {
    if (a2 + 6 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 6) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }

    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }

    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }

    int v5 = (*a1 | (v4 << 8)) - 7;
    return (v5 + 1);
  }

uint64_t storeEnumTagSinglePayload for HomeCommunicationIntentClassNames( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xF9) {
    return ((uint64_t (*)(void))((char *)&loc_177FC + 4 * byte_70CF5[v4]))();
  }
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_17830 + 4 * byte_70CF0[v4]))();
}

uint64_t sub_17830(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_17838(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x17840LL);
  }
  return result;
}

uint64_t sub_1784C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x17854LL);
  }
  *(_BYTE *)uint64_t result = a2 + 6;
  return result;
}

uint64_t sub_17858(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_17860(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HomeCommunicationIntentClassNames()
{
  return &type metadata for HomeCommunicationIntentClassNames;
}

unint64_t sub_17880()
{
  unint64_t result = qword_A0D88;
  if (!qword_A0D88)
  {
    unint64_t result = swift_getWitnessTable(&unk_70D74, &type metadata for HomeCommunicationIntentClassNames);
    atomic_store(result, (unint64_t *)&qword_A0D88);
  }

  return result;
}

void sub_178BC(char a1)
{
  __asm { BR              X10 }

id sub_178E0()
{
  if (qword_9F7F8 != -1) {
    swift_once(&qword_9F7F8, sub_179EC);
  }
  return (id)qword_A0D60;
}

id sub_179EC()
{
  id result = [objc_allocWithZone(INSendAnnouncementIntent) init];
  qword_A0D60 = (uint64_t)result;
  return result;
}

id sub_17A1C()
{
  id result = [objc_allocWithZone(INReadAnnouncementIntent) init];
  qword_A0D68 = (uint64_t)result;
  return result;
}

id sub_17A4C()
{
  id result = [objc_allocWithZone(INStopAnnouncementIntent) init];
  qword_A0D70 = (uint64_t)result;
  return result;
}

id sub_17A7C()
{
  id result = [objc_allocWithZone(INSkipAnnouncementIntent) init];
  qword_A0D78 = (uint64_t)result;
  return result;
}

id sub_17AAC()
{
  id result = [objc_allocWithZone(INIntent) init];
  qword_A0D80 = (uint64_t)result;
  return result;
}

uint64_t sub_17ADC()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_BCCC(v0, qword_A3EB0);
  sub_4870(v0, (uint64_t)qword_A3EB0);
  return Logger.init(subsystem:category:)( 0xD000000000000020LL,  0x8000000000076FC0LL,  0xD000000000000015LL,  0x80000000000762E0LL);
}

uint64_t sub_17B5C()
{
  uint64_t result = OS_os_log.init(subsystem:category:)( 0xD000000000000020LL,  0x8000000000076FC0LL,  0xD000000000000015LL,  0x80000000000762E0LL);
  qword_A0D90 = result;
  return result;
}

unint64_t sub_17BC0()
{
  unint64_t result = qword_A0D98;
  if (!qword_A0D98)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___OS_os_log);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_A0D98);
  }

  return result;
}

uint64_t *sub_17BFC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v11);
  }

  else
  {
    uint64_t v7 = type metadata accessor for OSSignpostID(0LL);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    v9[16] = v10[16];
  }

  return a1;
}

uint64_t sub_17C94(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for OSSignpostID(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
}

uint64_t sub_17CC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for OSSignpostID(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  return a1;
}

uint64_t sub_17D34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for OSSignpostID(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)v9;
  *(void *)(v8 + sub_423C(v0 + 8) = *(void *)(v9 + 8);
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  return a1;
}

uint64_t sub_17DA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for OSSignpostID(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  return a1;
}

uint64_t sub_17E14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for OSSignpostID(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  return a1;
}

uint64_t sub_17E80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_17E8C);
}

uint64_t sub_17E8C()
{
  uint64_t v2 = sub_17F94();
  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v1, v0, v2);
}

uint64_t sub_17EB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_17EC0);
}

uint64_t sub_17EC0()
{
  uint64_t v2 = sub_17F94();
  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v1, v0, v0, v2);
}

uint64_t type metadata accessor for SignpostLog.Signpost(uint64_t a1)
{
  uint64_t result = qword_A0DF8;
  if (!qword_A0DF8) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SignpostLog.Signpost);
  }
  return result;
}

uint64_t sub_17F24(uint64_t a1)
{
  uint64_t result = type metadata accessor for OSSignpostID(319LL);
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(result - 8) + 64LL;
    v4[1] = &unk_70DB0;
    swift_initStructMetadata(a1, 256LL, 2LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

uint64_t sub_17F94()
{
  return type metadata accessor for OSSignpostID(0LL);
}

void *sub_17FA4(void *a1)
{
  id v2 = [objc_allocWithZone(FLOWSchemaFLOWDomainContext) init];
  if (v2)
  {
    unint64_t v3 = v2;
    uint64_t v4 = (os_log_s *)[objc_allocWithZone(FLOWSchemaFLOWHomeCommunicationContext) init];
    if (v4)
    {
      int v5 = v4;
      sub_180F4(a1, v4);
      [v3 setHomeCommunicationContext:v5];
      [v3 setHasHomeCommunicationContext:1];
      goto LABEL_10;
    }
  }

  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v6 = type metadata accessor for Logger(0LL);
  uint64_t v7 = sub_4870(v6, (uint64_t)qword_A3EB0);
  int v5 = (os_log_s *)Logger.logObject.getter(v7);
  os_log_type_t v8 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v5, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl( &dword_0,  v5,  v8,  "#HomeCommunicationDomainContextMetricsUtils returning without logging homeCommunication domain context",  v9,  2u);
    swift_slowDealloc(v9, -1LL, -1LL);
  }

  unint64_t v3 = 0LL;
LABEL_10:

  return v3;
}

void sub_180F4(void *a1, void *a2)
{
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v4 = type metadata accessor for Logger(0LL);
  sub_4870(v4, (uint64_t)qword_A3EB0);
  uint64_t v5 = sub_BB78((uint64_t)a1, (uint64_t)v26);
  uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    os_log_type_t v8 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v23 = swift_slowAlloc(32LL, -1LL);
    uint64_t v25 = v23;
    *(_DWORD *)os_log_type_t v8 = 136315138;
    uint64_t v22 = v8 + 4;
    uint64_t v10 = v27;
    uint64_t v9 = v28;
    uint64_t v11 = sub_8504(v26, v27);
    __chkstk_darwin(v11);
    uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
    (*(void (**)(char *))(v14 + 16))(v13);
    uint64_t v15 = String.init<A>(describing:)(v13, v10, *(void *)(v9 + 8));
    unint64_t v17 = v16;
    uint64_t v24 = sub_68DC4(v15, v16, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v22, v8 + 12);
    swift_bridgeObjectRelease(v17);
    sub_423C(v26);
    _os_log_impl( &dword_0,  v6,  v7,  "#HomeCommunicationDomainContextMetricsUtils addTaskType with homeCommunicationNLIntent: %s",  v8,  0xCu);
    uint64_t v18 = v23;
    swift_arrayDestroy(v23, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1LL, -1LL);
    swift_slowDealloc(v8, -1LL, -1LL);
  }

  else
  {
    sub_423C(v26);
  }

  uint64_t v19 = a1[3];
  uint64_t v20 = a1[4];
  sub_8504(a1, v19);
  switch((*(unsigned __int8 (**)(uint64_t, uint64_t))(v20 + 16))(v19, v20))
  {
    case 0u:
      [a2 setTaskType:1];
      goto LABEL_10;
    case 1u:
      [a2 setTaskType:2];
LABEL_10:
      sub_183B8(a1, a2);
      break;
    case 2u:
      [a2 setTaskType:3];
      break;
    case 3u:
      [a2 setTaskType:4];
      break;
    default:
      [a2 setTaskType:0];
      break;
  }

void sub_183B8(void *a1, void *a2)
{
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v5 = sub_4870(v4, (uint64_t)qword_A3EB0);
  uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    os_log_type_t v8 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)os_log_type_t v8 = 0;
    _os_log_impl( &dword_0,  v6,  v7,  "#HomeCommunicationDomainContextMetricsUtils addTargetType for send or reply announcement",  v8,  2u);
    swift_slowDealloc(v8, -1LL, -1LL);
  }

  id v9 = [objc_allocWithZone(FLOWSchemaFLOWHomeCommunicationSendOrReply) init];
  if (v9)
  {
    id v50 = v9;
    uint64_t v10 = a1[3];
    uint64_t v11 = a1[4];
    sub_8504(a1, v10);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 112);
    uint64_t v13 = v12(v10, v11);
    uint64_t v14 = *(void *)(v13 + 16);
    swift_bridgeObjectRelease(v13);
    BOOL v15 = v14 == 0;
    if (v14)
    {
      uint64_t v16 = v12(v10, v11);
      for (uint64_t i = *(void *)(v16 + 16); i; --i)
        [v50 addTargetType:5];
      swift_bridgeObjectRelease(v16);
    }

    uint64_t v18 = a1[3];
    uint64_t v19 = a1[4];
    sub_8504(a1, v18);
    uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 96))(v18, v19);
    uint64_t v21 = *(void *)(v20 + 16);
    swift_bridgeObjectRelease(v20);
    if (v21)
    {
      uint64_t v22 = a1[3];
      uint64_t v23 = a1[4];
      sub_8504(a1, v22);
      uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 96))(v22, v23);
      for (uint64_t j = *(void *)(v24 + 16); j; --j)
        [v50 addTargetType:3];
      swift_bridgeObjectRelease(v24);
      BOOL v15 = 0;
    }

    uint64_t v26 = a1[3];
    uint64_t v27 = a1[4];
    sub_8504(a1, v26);
    uint64_t v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 104))(v26, v27);
    uint64_t v29 = *(void *)(v28 + 16);
    swift_bridgeObjectRelease(v28);
    if (v29)
    {
      uint64_t v30 = a1[3];
      uint64_t v31 = a1[4];
      sub_8504(a1, v30);
      uint64_t v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 104))(v30, v31);
      for (uint64_t k = *(void *)(v32 + 16); k; --k)
        [v50 addTargetType:4];
      swift_bridgeObjectRelease(v32);
      BOOL v15 = 0;
    }

    uint64_t v34 = a1[3];
    uint64_t v35 = a1[4];
    sub_8504(a1, v34);
    uint64_t v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 72))(v34, v35);
    uint64_t v37 = *(void *)(v36 + 16);
    swift_bridgeObjectRelease(v36);
    if (v37)
    {
      uint64_t v38 = a1[3];
      uint64_t v39 = a1[4];
      sub_8504(a1, v38);
      uint64_t v40 = (*(uint64_t (**)(uint64_t, uint64_t))(v39 + 72))(v38, v39);
      for (uint64_t m = *(void *)(v40 + 16); m; --m)
        [v50 addTargetType:0];
      swift_bridgeObjectRelease(v40);
      BOOL v15 = 0;
    }

    uint64_t v42 = a1[3];
    uint64_t v43 = a1[4];
    sub_8504(a1, v42);
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v43 + 40))(v42, v43) & 1) != 0)
    {
      [v50 addTargetType:6];
      BOOL v15 = 0;
    }

    uint64_t v44 = a1[3];
    uint64_t v45 = a1[4];
    sub_8504(a1, v44);
    char v46 = (*(uint64_t (**)(uint64_t, uint64_t))(v45 + 64))(v44, v45);
    if ((v46 & 1) != 0 || v15)
    {
      if ((v46 & 1) != 0) {
        uint64_t v47 = 2LL;
      }
      else {
        uint64_t v47 = 1LL;
      }
      [v50 addTargetType:v47];
    }

    [a2 setSendOrReplyContext:v50];
    [a2 setHasSendOrReplyContext:1];
  }

  else
  {
    id v50 = (id)Logger.logObject.getter(0LL);
    os_log_type_t v48 = static os_log_type_t.error.getter();
    if (os_log_type_enabled((os_log_t)v50, v48))
    {
      uint64_t v49 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v49 = 0;
      _os_log_impl( &dword_0,  (os_log_t)v50,  v48,  "#HomeCommunicationDomainContextMetricsUtils returning without logging homeCommunication entityType",  v49,  2u);
      swift_slowDealloc(v49, -1LL, -1LL);
    }
  }
}

void sub_187F0(unsigned __int8 a1)
{
  uint64_t v2 = sub_18880(a1);
  uint64_t v4 = sub_63E48(v2, v3);
  uint64_t v6 = v5;
  sub_18FB8();
  v7._countAndFlagsBits = v4;
  v7._object = v6;
  String.append(_:)(v7);
  swift_bridgeObjectRelease(v6);
  sub_18FA8();
}

uint64_t sub_18880(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_188B8 + 4 * byte_70DF0[a1]))( 0xD000000000000012LL,  0x80000000000767F0LL);
}

uint64_t sub_188B8()
{
  return 7564659LL;
}

uint64_t sub_188C8()
{
  return 0x62726556736D73LL;
}

uint64_t sub_188E0()
{
  return 0x6E756F4E736D73LL;
}

uint64_t sub_188F8()
{
  return 0x69666E6F43736D73LL;
}

uint64_t sub_1891C()
{
  return 0x617373654D736D73LL;
}

void sub_18938(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  v3._countAndFlagsBits = 0x2E65756C61562ELL;
  v3._object = (void *)0xE700000000000000LL;
  String.append(_:)(v3);
  Swift::String v4 = String.uppercased()();
  String.append(_:)(v4);
  sub_18FB8();
  sub_18FA8();
}

uint64_t sub_189A4(char a1)
{
  return qword_70F50[a1];
}

unint64_t sub_189C4(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_935C8, v2);
  sub_18FB8();
  if (v3 >= 4) {
    return 4LL;
  }
  else {
    return v3;
  }
}

void sub_18A08()
{
}

void sub_18A14()
{
}

uint64_t sub_18A1C(uint64_t a1)
{
  return sub_1E3A8(a1, *v1);
}

void sub_18A24(uint64_t a1)
{
}

unint64_t sub_18A2C@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result = sub_189C4(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_18A58@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_189A4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_18A80(void *a1@<X8>)
{
  *a1 = &off_93648;
}

uint64_t sub_18A90(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_18E94();
  unint64_t v5 = sub_18ED0();
  unint64_t v6 = sub_18F0C();
  return static TerminalNodeBoundedSemanticValue<>.fromIntentNodeValue(_:)(a1, a2, v4, v5, v6);
}

uint64_t sub_18AF0()
{
  uint64_t v1 = sub_41BC(&qword_A0E30);
  uint64_t v2 = swift_allocObject(v1, 80LL, 7LL);
  *(_OWORD *)(v2 + 16) = xmmword_70F90;
  Swift::String v3 = String.uppercased()();
  Swift::String v39 = v3;
  uint64_t v37 = 32LL;
  uint64_t v38 = 0xE100000000000000LL;
  uint64_t v35 = 95LL;
  uint64_t v36 = 0xE100000000000000LL;
  unint64_t v4 = sub_CD6C();
  StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( &v37,  &v35,  0LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String,  &type metadata for String,  v4,  v4,  v4);
  sub_18F88();
  sub_18938((uint64_t)&v39, v0, 3u);
  sub_18F98();
  *(void *)(v2 + 32) = &v39;
  *(void *)(v2 + 40) = v3._object;
  Swift::String v5 = String.uppercased()();
  sub_18F48( v5._countAndFlagsBits,  (uint64_t)v5._object,  v6,  v7,  v8,  v9,  v10,  v11,  v27,  v29,  v31,  v33,  v35,  v36,  v37,  v38,  v39._countAndFlagsBits,  (uint64_t)v39._object);
  sub_18F88();
  sub_18938((uint64_t)&v39, v0, 1u);
  sub_18F98();
  *(void *)(v2 + 4sub_423C(v0 + 8) = &v39;
  *(void *)(v2 + 56) = v3._object;
  Swift::String v12 = String.uppercased()();
  uint64_t v19 = sub_18F48( v12._countAndFlagsBits,  (uint64_t)v12._object,  v13,  v14,  v15,  v16,  v17,  v18,  v28,  v30,  v32,  v34,  v35,  v36,  v37,  v38,  v39._countAndFlagsBits,  (uint64_t)v39._object);
  uint64_t v21 = v20;
  swift_bridgeObjectRelease(v3._object);
  sub_18938(v19, v21, 1u);
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t result = swift_bridgeObjectRelease(v21);
  *(void *)(v2 + 64) = v23;
  *(void *)(v2 + 72) = v25;
  qword_A3EC8 = v2;
  return result;
}

void sub_18C60()
{
  uint64_t v0 = sub_41BC(&qword_A0E30);
  uint64_t v1 = swift_allocObject(v0, 64LL, 7LL);
  *(_OWORD *)(v1 + 16) = xmmword_70FA0;
  sub_187F0(3u);
  *(void *)(v1 + 32) = v2;
  *(void *)(v1 + 40) = v3;
  sub_187F0(1u);
  *(void *)(v1 + 4sub_423C(v0 + 8) = v4;
  *(void *)(v1 + 56) = v5;
  qword_A3ED0 = v1;
}

uint64_t storeEnumTagSinglePayload for SmsConfirmationSemantics(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFC) {
    return ((uint64_t (*)(void))((char *)&loc_18D0C + 4 * byte_70DFB[v4]))();
  }
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_18D40 + 4 * byte_70DF6[v4]))();
}

uint64_t sub_18D40(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_18D48(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x18D50LL);
  }
  return result;
}

uint64_t sub_18D5C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x18D64LL);
  }
  *(_BYTE *)uint64_t result = a2 + 3;
  return result;
}

uint64_t sub_18D68(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_18D70(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SmsConfirmationSemantics()
{
  return &type metadata for SmsConfirmationSemantics;
}

unint64_t sub_18D90()
{
  unint64_t result = qword_A0E38;
  if (!qword_A0E38)
  {
    unint64_t result = swift_getWitnessTable(&unk_70EE4, &type metadata for SmsConfirmationSemantics);
    atomic_store(result, (unint64_t *)&qword_A0E38);
  }

  return result;
}

unint64_t sub_18DD0()
{
  unint64_t result = qword_A0E40;
  if (!qword_A0E40)
  {
    uint64_t v1 = sub_8564(&qword_A0E48);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_A0E40);
  }

  return result;
}

unint64_t sub_18E18()
{
  unint64_t result = qword_A0E50;
  if (!qword_A0E50)
  {
    unint64_t result = swift_getWitnessTable(&unk_70E1C, &type metadata for SmsConfirmationSemantics);
    atomic_store(result, (unint64_t *)&qword_A0E50);
  }

  return result;
}

unint64_t sub_18E58()
{
  unint64_t result = qword_A0E58;
  if (!qword_A0E58)
  {
    unint64_t result = swift_getWitnessTable(&unk_70F24, &type metadata for SmsConfirmationSemantics);
    atomic_store(result, (unint64_t *)&qword_A0E58);
  }

  return result;
}

unint64_t sub_18E94()
{
  unint64_t result = qword_A0E60;
  if (!qword_A0E60)
  {
    unint64_t result = swift_getWitnessTable(&unk_70E84, &type metadata for SmsConfirmationSemantics);
    atomic_store(result, (unint64_t *)&qword_A0E60);
  }

  return result;
}

unint64_t sub_18ED0()
{
  unint64_t result = qword_A0E68;
  if (!qword_A0E68)
  {
    unint64_t result = swift_getWitnessTable(&unk_70E4C, &type metadata for SmsConfirmationSemantics);
    atomic_store(result, (unint64_t *)&qword_A0E68);
  }

  return result;
}

unint64_t sub_18F0C()
{
  unint64_t result = qword_A0E70[0];
  if (!qword_A0E70[0])
  {
    unint64_t result = swift_getWitnessTable(&unk_70EAC, &type metadata for SmsConfirmationSemantics);
    atomic_store(result, qword_A0E70);
  }

  return result;
}

uint64_t sub_18F48( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  a17 = a1;
  a18 = a2;
  a15 = v20;
  a16 = v21;
  a13 = v22;
  a14 = v21;
  return ((uint64_t (*)(uint64_t *, uint64_t *, void, void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))StringProtocol.replacingOccurrences<A, B>(of:with:options:range:))( &a15,  &a13,  0LL,  0LL,  0LL,  1LL,  v19,  v19,  v19,  v18,  v18,  v18);
}

uint64_t sub_18F88()
{
  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_18F98()
{
  return swift_bridgeObjectRelease(v0);
}

  ;
}

uint64_t sub_18FB8()
{
  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_18FC0(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL);
}

void sub_19000()
{
  uint64_t v19 = v3;
  uint64_t v20 = v4;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v13 = *v0;
  sub_41BC(&qword_A0EF8);
  sub_1736C();
  __chkstk_darwin(v14);
  sub_144D8();
  uint64_t v15 = sub_1C048();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  sub_1BF74();
  swift_bridgeObjectRetain(v8);
  v21._countAndFlagsBits = v10;
  v21._object = v8;
  if (sub_1EDD4(v21))
  {
    uint64_t v17 = sub_1BEEC((void *)(v13 + qword_A3ED8));
    uint64_t v18 = (uint64_t (*)(void))method lookup function for DefaultNLContextProvider( v17,  &method descriptor for DefaultNLContextProvider.makeNeedsValueContextFor(intent:parameter:resolutionResult:_:));
    sub_1BD9C(v12, v10, (uint64_t)v8, v6, (uint64_t)v19, v20, v18);
  }

  else
  {
    sub_193E8();
    sub_1BFF8(v1, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 16));
    sub_1BF4C(v1);
    v19(v1);
    sub_5F64(v1, &qword_A0EF8);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v2, v15);
    sub_6360();
  }

#error "19328: call analysis failed (funcsize=171)"
uint64_t sub_193E8()
{
  os_log_s *v0;
  uint64_t v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v26;
  uint64_t v27;
  void v28[4];
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v1 = sub_1BDD8();
  sub_1BE18(v1, (uint64_t)qword_A3EB0);
  uint64_t v2 = sub_A9E8();
  if (os_log_type_enabled(v0, v2))
  {
    int v3 = (uint8_t *)sub_144F0(2LL);
    *(_WORD *)int v3 = 0;
    sub_1BE98(&dword_0, v0, v2, "#HomeCommunicationNLContextProvider generateNLContextForAnnouncement", v3);
    sub_48D4((uint64_t)v3);
  }

  NLContextUpdate.init()();
  sub_1BFB0();
  NLContextUpdate.dictationPromptTargetDomain.setter();
  uint64_t v4 = sub_41BC(&qword_A0E30);
  uint64_t v5 = sub_1BDCC(v4);
  *(_OWORD *)(v5 + 16) = xmmword_6FA70;
  uint64_t v6 = sub_1BED8();
  uint64_t v8 = v7;
  __int128 v28[2] = v6;
  void v28[3] = v7;
  uint64_t v9 = sub_CD6C();
  uint64_t v15 = sub_1BE58( (uint64_t)v28,  (uint64_t)&v27,  v10,  v11,  v12,  v13,  (uint64_t)&type metadata for String,  v14,  (uint64_t)&type metadata for String,  v9,  v9,  v9,  1LL,  2LL,  95LL,  0xE100000000000000LL,  32LL,  0xE100000000000000LL);
  uint64_t v17 = v16;
  swift_bridgeObjectRelease(v8);
  sub_18938(v15, v17, 3u);
  uint64_t v19 = v18;
  Swift::String v21 = v20;
  swift_bridgeObjectRelease(v17);
  *(void *)(v5 + 32) = v19;
  *(void *)(v5 + 40) = v21;
  NLContextUpdate.dictationPromptAbortValues.setter(v5);
  uint64_t v22 = sub_1BDCC(v4);
  *(_OWORD *)(v22 + 16) = v26;
  sub_187F0(4u);
  *(void *)(v22 + 32) = v23;
  *(void *)(v22 + 40) = v24;
  NLContextUpdate.dictationPromptTargetNodes.setter(v22);
  sub_1959C();
  return NLContextUpdate.nluSystemDialogActs.setter();
}

void sub_1959C()
{
  uint64_t v2 = type metadata accessor for Siri_Nlu_External_SystemDialogAct(0LL);
  uint64_t v57 = *(void *)(v2 - 8);
  uint64_t v58 = v2;
  sub_1736C();
  __chkstk_darwin(v3);
  sub_172F4();
  uint64_t v56 = v4;
  sub_1C058();
  sub_1736C();
  __chkstk_darwin(v5);
  uint64_t v6 = sub_1BEF8();
  uint64_t v7 = type metadata accessor for Siri_Nlu_External_SystemPrompted(v6);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v13 = (os_log_s *)((char *)&v51 - v12);
  sub_41BC(&qword_A0F30);
  sub_1736C();
  __chkstk_darwin(v14);
  uint64_t v15 = sub_1BF14();
  uint64_t v16 = type metadata accessor for UsoTaskBuilder_send_common_Announcement(v15);
  sub_A8BC(v16);
  uint64_t v17 = UsoTaskBuilder_send_common_Announcement.init()();
  uint64_t v18 = type metadata accessor for UsoEntityBuilder_common_Announcement(0LL);
  sub_A8BC(v18);
  uint64_t v19 = UsoEntityBuilder_common_Announcement.init()();
  dispatch thunk of UsoEntityBuilder_common_Announcement.setContent(value:)(0LL, 0xE000000000000000LL);
  dispatch thunk of Uso_VerbTemplateBuilder_Target.setTarget(value:)(v19);
  uint64_t v20 = sub_41BC(&qword_A2100);
  uint64_t v21 = sub_AA48(v20, 40LL);
  *(_OWORD *)(v21 + 16) = xmmword_6FCA0;
  *(void *)(v21 + 32) = v17;
  v63[0] = v21;
  specialized Array._endMutation()(v21, v22);
  uint64_t v23 = v63[0];
  uint64_t v24 = type metadata accessor for UsoBuilderOptions(0LL);
  sub_1C010(v0, v25, v26, v24);
  uint64_t v59 = v17;
  swift_retain(v17);
  uint64_t v27 = static UsoGraphBuilder.buildGraphWithOptions(taskBuilders:options:)(v23, v0);
  sub_D304();
  uint64_t v28 = sub_5F64(v0, &qword_A0F30);
  Siri_Nlu_External_SystemPrompted.init()(v28);
  uint64_t v60 = v27;
  static UsoGraphProtoWriter.toSwiftProtobuf(graph:vocabManager:)(v27, 0LL);
  uint64_t v54 = v11;
  uint64_t v55 = v8;
  Siri_Nlu_External_SystemPrompted.target.setter(v1);
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v29 = sub_1BDD8();
  sub_1BE18(v29, (uint64_t)qword_A3EB0);
  os_log_type_t v30 = sub_A9E8();
  uint64_t v31 = v7;
  if (os_log_type_enabled(v13, v30))
  {
    uint64_t v32 = v7;
    uint64_t v33 = sub_144F0(12LL);
    uint64_t v53 = v19;
    uint64_t v34 = (uint8_t *)v33;
    uint64_t v35 = sub_144F0(32LL);
    v63[0] = v35;
    *(_DWORD *)uint64_t v34 = 136315138;
    unint64_t v52 = v34 + 4;
    sub_1BE4C((uint64_t)v13, (uint64_t)v62);
    uint64_t v36 = (uint64_t)v54;
    uint64_t v37 = v55;
    (*(void (**)(char *, os_log_s *, uint64_t))(v55 + 16))(v54, v13, v32);
    uint64_t v38 = sub_546E0(v36);
    unint64_t v40 = v39;
    uint64_t v61 = sub_68DC4(v38, v39, v63);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, v62, v52, v34 + 12);
    unint64_t v41 = v40;
    uint64_t v31 = v32;
    swift_bridgeObjectRelease(v41);
    sub_14550( &dword_0,  v13,  v30,  "#HomeCommunicationNLContextProvider Returning NLUSystemPrompted for prompt for send Announcement: %s",  v34);
    sub_17528(v35, v42, (uint64_t)&type metadata for Any + 8);
    sub_48D4(v35);
    uint64_t v43 = (uint64_t)v34;
    uint64_t v19 = v53;
    sub_48D4(v43);

    uint64_t v45 = v57;
    uint64_t v44 = v58;
  }

  else
  {

    uint64_t v45 = v57;
    uint64_t v44 = v58;
    uint64_t v36 = (uint64_t)v54;
    uint64_t v37 = v55;
  }

  uint64_t v46 = v56;
  Siri_Nlu_External_SystemDialogAct.init()();
  sub_1BE4C((uint64_t)v13, (uint64_t)v63);
  (*(void (**)(uint64_t, os_log_s *, uint64_t))(v37 + 16))(v36, v13, v31);
  Siri_Nlu_External_SystemDialogAct.prompted.setter(v36);
  uint64_t v47 = sub_41BC(&qword_A0F40);
  uint64_t v48 = *(unsigned __int8 *)(v45 + 80);
  uint64_t v49 = (v48 + 32) & ~v48;
  uint64_t v50 = swift_allocObject(v47, v49 + *(void *)(v45 + 72), v48 | 7);
  *(_OWORD *)(v50 + 16) = xmmword_6FA70;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 32))(v50 + v49, v46, v44);
  sub_1C000();
  swift_release(v19);
  sub_1BEA0();
  (*(void (**)(os_log_s *, uint64_t))(v37 + 8))(v13, v31);
  sub_6360();
}

void sub_19ACC()
{
  uint64_t v2 = (uint64_t)v0;
  uint64_t v4 = v3;
  v111 = v5;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t v14 = *v0;
  sub_41BC(&qword_A0EF8);
  sub_1736C();
  __chkstk_darwin(v15);
  sub_172F4();
  uint64_t v109 = v16;
  uint64_t v17 = sub_1C048();
  uint64_t v107 = *(void *)(v17 - 8);
  uint64_t v108 = v17;
  sub_1736C();
  __chkstk_darwin(v18);
  uint64_t v106 = (uint64_t)&v101 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_62D0();
  __chkstk_darwin(v20);
  sub_1BF8C();
  uint64_t v110 = v21;
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v22 = sub_1BDD8();
  uint64_t v112 = sub_4870(v22, (uint64_t)qword_A3EB0);
  uint64_t v23 = (os_log_s *)v112;
  Logger.logObject.getter(v112);
  os_log_type_t v24 = sub_A9E8();
  if (sub_17604(v24))
  {
    uint64_t v25 = (uint8_t *)sub_144F0(2LL);
    *(_WORD *)uint64_t v25 = 0;
    sub_1BE98(&dword_0, v23, v1, "#HomeCommunicationNLContextProvider makeNeedsDisambiguationContextFor called", v25);
    sub_48D4((uint64_t)v25);
  }

  sub_1C030();
  v118._countAndFlagsBits = v11;
  v118._object = v9;
  if (sub_1EDD4(v118) == 1)
  {
    uint64_t v26 = v110;
    NLContextUpdate.init()();
    sub_1BFB0();
    NLContextUpdate.weightedPromptTargetDomain.setter();
    uint64_t v27 = sub_41BC(&qword_A0E30);
    uint64_t v28 = sub_1BDCC(v27);
    __int128 v103 = xmmword_6FA70;
    *(_OWORD *)(v28 + 16) = xmmword_6FA70;
    uint64_t v29 = sub_1C01C();
    uint64_t v31 = v30;
    v113[0] = v29;
    v113[1] = v30;
    uint64_t v114 = 32LL;
    unint64_t v115 = 0xE100000000000000LL;
    uint64_t v116 = 95LL;
    unint64_t v117 = 0xE100000000000000LL;
    unint64_t v32 = sub_CD6C();
    sub_1BE58( (uint64_t)&v114,  (uint64_t)&v116,  v33,  v34,  v35,  v36,  (uint64_t)&type metadata for String,  v37,  (uint64_t)&type metadata for String,  v32,  v32,  v32,  v101,  v102,  v103,  *((uint64_t *)&v103 + 1),  v104,  v105);
    swift_bridgeObjectRelease(v31);
    sub_1BE2C();
    uint64_t v39 = v38;
    uint64_t v41 = v40;
    sub_1BF6C();
    *(void *)(v28 + 32) = v39;
    *(void *)(v28 + 40) = v41;
    NLContextUpdate.weightedPromptResponseOptions.setter(v28);
    uint64_t v42 = sub_260F0();
    uint64_t v43 = (uint64_t)sub_569D4(v42);
    sub_D304();
    uint64_t v105 = v4;
    if (!v43)
    {
LABEL_37:
      uint64_t v88 = (os_log_s *)sub_1BFF0();
      os_log_type_t v89 = static os_log_type_t.debug.getter();
      if (sub_1BF30(v89))
      {
        uint64_t v90 = (uint8_t *)sub_144F0(12LL);
        uint64_t v91 = sub_144F0(32LL);
        *(_DWORD *)uint64_t v90 = 136315138;
        uint64_t v112 = (uint64_t)(v90 + 4);
        v113[0] = v91;
        sub_1BE4C(v26, (uint64_t)&v114);
        uint64_t v92 = v106;
        uint64_t v93 = v107;
        uint64_t v94 = v26;
        uint64_t v95 = v108;
        sub_1BFF8(v106, v26, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v107 + 16));
        uint64_t v96 = String.init<A>(describing:)(v92, v95);
        unint64_t v98 = v97;
        uint64_t v116 = sub_68DC4(v96, v97, v113);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, &v117, v112, v90 + 12);
        swift_bridgeObjectRelease(v98);
        sub_14550(&dword_0, v88, (os_log_type_t)v28, "#HomeCommunicationNLContextProvider nlContext: %s", v90);
        sub_17528(v91, v99, (uint64_t)&type metadata for Any + 8);
        sub_48D4(v91);
        sub_48D4((uint64_t)v90);
      }

      else
      {

        uint64_t v94 = v26;
        uint64_t v93 = v107;
        uint64_t v95 = v108;
      }

      sub_1BE4C(v94, (uint64_t)v113);
      uint64_t v100 = v109;
      sub_1BFF8(v109, v94, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v93 + 16));
      sub_1BF4C(v100);
      v111(v100);
      sub_5F64(v100, &qword_A0EF8);
      (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v94, v95);
      sub_6360();
      return;
    }

    uint64_t v44 = sub_1BDCC(v27);
    *(_OWORD *)(v44 + 16) = v103;
    sub_187F0(5u);
    *(void *)(v44 + 32) = v45;
    *(void *)(v44 + 40) = v46;
    NLContextUpdate.weightedPromptResponseTargets.setter(v44);
    NLContextUpdate.weightedPromptStrict.setter(1LL);
    swift_bridgeObjectRetain_n(v43, 2LL);
    uint64_t v47 = (os_log_s *)sub_1BFF0();
    os_log_type_t v48 = static os_log_type_t.debug.getter();
    if (sub_1BF30(v48))
    {
      uint64_t v49 = (uint8_t *)sub_144F0(12LL);
      uint64_t v50 = sub_144F0(32LL);
      v113[0] = v50;
      *(_DWORD *)uint64_t v49 = 136315138;
      uint64_t v51 = sub_7B50(0LL, (unint64_t *)&qword_A0F08, &OBJC_CLASS___INHomeFilter_ptr);
      uint64_t v52 = sub_1BFD4();
      uint64_t v53 = Array.description.getter(v52, v51);
      unint64_t v55 = v54;
      sub_1BFE8();
      uint64_t v114 = sub_68DC4(v53, v55, v113);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v114, &v115, v49 + 4, v49 + 12);
      sub_1BFDC();
      swift_bridgeObjectRelease(v55);
      sub_14550( &dword_0,  v47,  (os_log_type_t)v28,  "#HomeCommunicationNLContextProvider makeDisambiguationSDAForFilters for homes: %s",  v49);
      sub_17528(v50, v56, (uint64_t)&type metadata for Any + 8);
      sub_48D4(v50);
      sub_48D4((uint64_t)v49);
    }

    else
    {

      sub_1BFDC();
    }

    uint64_t v102 = v2;
    if ((unint64_t)v43 >> 62)
    {
      if (v43 >= 0) {
        uint64_t v80 = v43 & 0xFFFFFFFFFFFFFF8LL;
      }
      else {
        uint64_t v80 = v43;
      }
      sub_1BFD4();
      uint64_t v63 = _CocoaArrayWrapper.endIndex.getter(v80);
      if (v63) {
        goto LABEL_15;
      }
    }

    else
    {
      uint64_t v63 = *(void *)((char *)&dword_10 + (v43 & 0xFFFFFFFFFFFFFF8LL));
      sub_1BFD4();
      if (v63)
      {
LABEL_15:
        if (v63 < 1)
        {
          __break(1u);
          return;
        }

        uint64_t v64 = 0LL;
        uint64_t v65 = (char *)_swiftEmptyArrayStorage;
        do
        {
          if ((v43 & 0xC000000000000001LL) != 0) {
            id v66 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v64, v43);
          }
          else {
            id v66 = *(id *)(v43 + 8 * v64 + 32);
          }
          os_log_type_t v67 = v66;
          id v68 = [v66 home];
          if (v68)
          {
            uint64_t v69 = v68;
            id v70 = [v68 spokenPhrase];

            uint64_t v71 = static String._unconditionallyBridgeFromObjectiveC(_:)(v70);
            uint64_t v73 = v72;

            if ((swift_isUniquelyReferenced_nonNull_native(v65) & 1) == 0)
            {
              uint64_t v77 = (char *)sub_1BDF8();
              uint64_t v65 = sub_5D33C(v77, v78, v79, (uint64_t)v65);
            }

            unint64_t v75 = *((void *)v65 + 2);
            unint64_t v74 = *((void *)v65 + 3);
            if (v75 >= v74 >> 1) {
              uint64_t v65 = sub_5D33C((char *)(v74 > 1), v75 + 1, 1, (uint64_t)v65);
            }
            *((void *)v65 + 2) = v75 + 1;
            uint64_t v76 = &v65[16 * v75];
            *((void *)v76 + 4) = v71;
            *((void *)v76 + 5) = v73;
          }

          else
          {
          }

          ++v64;
        }

        while (v63 != v64);
        goto LABEL_34;
      }
    }

    uint64_t v65 = (char *)_swiftEmptyArrayStorage;
LABEL_34:
    sub_1BFE8();
    if (qword_9F7D8 != -1) {
      swift_once(&qword_9F7D8, sub_F244);
    }
    uint64_t v81 = qword_A3E38;
    v113[3] = sub_41BC(&qword_A0690);
    v113[4] = sub_1BC3C();
    v113[0] = v81;
    swift_retain(v81);
    sub_1B0CC();
    uint64_t v83 = v82;
    sub_423C(v113);
    uint64_t v26 = v110;
    NLContextUpdate.displayHints.setter(v83);
    LOBYTE(v2sub_423C(v0 + 8) = v102;
    sub_1B4B0();
    uint64_t v85 = v84;
    sub_1BFE8();
    NLContextUpdate.rrEntities.setter(v85);
    sub_1A268();
    uint64_t v87 = v86;
    swift_bridgeObjectRelease(v65);
    NLContextUpdate.nluSystemDialogActs.setter(v87);
    goto LABEL_37;
  }

  sub_1BFF0();
  os_log_type_t v57 = sub_1C040();
  if (sub_17604(v57))
  {
    uint64_t v58 = v4;
    uint64_t v59 = (uint8_t *)sub_144F0(2LL);
    *(_WORD *)uint64_t v59 = 0;
    sub_1BE98(&dword_0, v23, v1, "Incorrect slot presented for disambiguation", v59);
    uint64_t v60 = (uint64_t)v59;
    uint64_t v4 = v58;
    sub_48D4(v60);
  }

  uint64_t v61 = sub_1BEEC((void *)(v14 + qword_A3ED8));
  int v62 = (uint64_t (*)(void))method lookup function for DefaultNLContextProvider( v61,  &method descriptor for DefaultNLContextProvider.makeNeedsDisambiguationContextFor(intent:parameter:resolutionResult:_:));
  sub_1BD9C(v13, v11, (uint64_t)v9, v7, (uint64_t)v111, v4, v62);
}

void sub_1A268()
{
  uint64_t v3 = v2;
  uint64_t v4 = type metadata accessor for Siri_Nlu_External_SystemDialogAct(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = sub_1BF14();
  uint64_t v121 = type metadata accessor for Siri_Nlu_External_SystemGaveOptions(v6);
  uint64_t v120 = *(void *)(v121 - 8);
  sub_1736C();
  __chkstk_darwin(v7);
  sub_6314();
  uint64_t v118 = v8;
  sub_62D0();
  __chkstk_darwin(v9);
  sub_1BF8C();
  uint64_t v119 = v10;
  sub_1C058();
  sub_1736C();
  __chkstk_darwin(v11);
  sub_9298();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = type metadata accessor for Siri_Nlu_External_UserStatedTask(0LL);
  uint64_t v148 = *(void *)(v15 - 8);
  uint64_t v149 = v15;
  sub_1736C();
  __chkstk_darwin(v16);
  uint64_t v142 = (char *)v117 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_62D0();
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v27 = sub_1BF98(v19, v20, v21, v22, v23, v24, v25, v26, v117[0]);
  uint64_t v28 = type metadata accessor for Siri_Nlu_External_UserDialogAct(v27);
  uint64_t v150 = *(void *)(v28 - 8);
  uint64_t v151 = v28;
  sub_1736C();
  __chkstk_darwin(v29);
  uint64_t v147 = (char *)v117 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_62D0();
  __chkstk_darwin(v31);
  uint64_t v33 = (char *)v117 - v32;
  uint64_t v135 = type metadata accessor for Siri_Nl_Core_Protocol_UsoGraph(0LL);
  uint64_t v134 = *(void *)(v135 - 8);
  sub_1736C();
  __chkstk_darwin(v34);
  sub_144D8();
  sub_41BC(&qword_A0F30);
  sub_1736C();
  __chkstk_darwin(v35);
  sub_172F4();
  uint64_t v139 = v36;
  uint64_t v138 = sub_1C050();
  uint64_t v137 = *(void *)(v138 - 8);
  sub_1736C();
  __chkstk_darwin(v37);
  sub_172F4();
  uint64_t v136 = v38;
  uint64_t v39 = _swiftEmptyArrayStorage;
  unint64_t v156 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v40 = *(void *)(v3 + 16);
  if (v40)
  {
    uint64_t v130 = v14;
    v117[1] = v0;
    v117[2] = v5;
    v117[3] = v4;
    uint64_t v129 = sub_7B50(0LL, &qword_A0F38, &OBJC_CLASS___USOSerializedGraph_ptr);
    unsigned int v133 = enum case for IdentifierValue.vHomeAutomationHome(_:);
    v123 = &v155;
    uint64_t v132 = type metadata accessor for UsoEntityBuilder_common_UserEntity(0LL);
    sub_1C030();
    uint64_t v4 = 0LL;
    BOOL v152 = _swiftEmptyArrayStorage;
    v117[0] = v3;
    uint64_t v41 = (void *)(v3 + 40);
    *((void *)&v42 + 1) = 3LL;
    __int128 v131 = xmmword_6FCA0;
    *(void *)&__int128 v42 = 136315138LL;
    __int128 v124 = v42;
    uint64_t v122 = (char *)&type metadata for Any + 8;
    uint64_t v43 = v140;
    uint64_t v141 = v33;
    uint64_t v128 = v1;
    while (1)
    {
      v145 = v41;
      uint64_t v146 = v40;
      uint64_t v44 = *v41;
      sub_A8BC(v132);
      uint64_t v45 = swift_bridgeObjectRetain(v44);
      uint64_t v0 = UsoEntityBuilder_common_UserEntity.init()(v45);
      uint64_t v46 = v137;
      uint64_t v47 = v136;
      (*(void (**)(uint64_t, void, uint64_t))(v137 + 104))(v136, v133, v138);
      sub_1AC6C();
      swift_bridgeObjectRelease(v44);
      sub_1C038(v47, *(uint64_t (**)(uint64_t, uint64_t))(v46 + 8));
      uint64_t v48 = type metadata accessor for UsoTaskBuilder_noVerb_common_UserEntity(0LL);
      uint64_t v49 = sub_A8BC(v48);
      uint64_t v50 = UsoTaskBuilder_noVerb_common_UserEntity.init()(v49);
      uint64_t v51 = swift_retain(v0);
      dispatch thunk of Uso_VerbTemplateBuilder_NoVerb.addUserEntities(value:)( v51,  &protocol witness table for UsoEntityBuilder_common_UserEntity);
      sub_17634();
      uint64_t v52 = sub_41BC(&qword_A2100);
      uint64_t v53 = sub_AA48(v52, 40LL);
      *(_OWORD *)(v53 + 16) = v131;
      *(void *)(v53 + 32) = v50;
      v153[0] = v53;
      specialized Array._endMutation()(v53, v54);
      uint64_t v55 = v153[0];
      uint64_t v56 = type metadata accessor for UsoBuilderOptions(0LL);
      uint64_t v57 = v139;
      sub_1C010(v139, v58, v59, v56);
      swift_retain(v50);
      uint64_t v60 = static UsoGraphBuilder.buildGraphWithOptions(taskBuilders:options:)(v55, v57);
      sub_D304();
      sub_5F64(v57, &qword_A0F30);
      Graph.protobufGraphSiriNl(vocabManager:)(0LL);
      if (v4) {
        break;
      }
      uint64_t v61 = static USOSerializedGraph.fromProto(protoGraph:)(v1);
      (*(void (**)(uint64_t, uint64_t))(v134 + 8))(v1, v135);
      id v62 = objc_allocWithZone(&OBJC_CLASS___SIRINLUUserStatedTask);
      uint64_t v144 = v61;
      id v63 = objc_msgSend(v62, "initWithTask:", v61, v117[0]);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      unint64_t v65 = *(void *)((char *)&dword_10 + (v156 & 0xFFFFFFFFFFFFFF8LL));
      unint64_t v64 = *(void *)((char *)&dword_18 + (v156 & 0xFFFFFFFFFFFFFF8LL));
      if (v65 >= v64 >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v64 > 1, v65 + 1, 1LL);
      }
      uint64_t v5 = (uint64_t)v63;
      uint64_t v66 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v65, v63);
      uint64_t v68 = specialized Array._endMutation()(v66, v67);
      uint64_t v69 = v141;
      uint64_t v70 = Siri_Nlu_External_UserDialogAct.init()(v68);
      Siri_Nlu_External_UserStatedTask.init()(v70);
      uint64_t v71 = v130;
      static UsoGraphProtoWriter.toSwiftProtobuf(graph:vocabManager:)(v60, 0LL);
      uint64_t v143 = 0LL;
      swift_beginAccess(v43, v153, 33LL, 0LL);
      Siri_Nlu_External_UserStatedTask.task.setter(v71);
      swift_endAccess(v153);
      uint64_t v72 = *(void (**)(char *, uint64_t, uint64_t))(v148 + 16);
      uint64_t v73 = v142;
      v72(v142, v43, v149);
      Siri_Nlu_External_UserDialogAct.userStatedTask.setter(v73);
      (*(void (**)(char *, char *, uint64_t))(v150 + 16))(v147, v69, v151);
      if ((swift_isUniquelyReferenced_nonNull_native(v152) & 1) == 0)
      {
        char v90 = sub_1BDF8();
        BOOL v152 = (void *)sub_5D628(v90, v91, v92, v93);
      }

      unint64_t v75 = v152[2];
      unint64_t v74 = v152[3];
      uint64_t v76 = (os_log_s *)(v75 + 1);
      if (v75 >= v74 >> 1)
      {
        char v94 = sub_1BE70(v74);
        BOOL v152 = (void *)sub_5D628(v94, v95, v96, (uint64_t)v152);
      }

      v152[2] = v76;
      sub_1BF5C();
      (*(void (**)(unint64_t, char *))(v79 + 32))(v78 + v77 + *(void *)(v79 + 72) * v75, v147);
      if (qword_9F820 != -1) {
        swift_once(&qword_9F820, sub_17ADC);
      }
      uint64_t v80 = sub_1BDD8();
      sub_1BE18(v80, (uint64_t)qword_A3EB0);
      os_log_type_t v81 = sub_A9E8();
      if (os_log_type_enabled((os_log_t)(v75 + 1), v81))
      {
        uint64_t v82 = (uint8_t *)sub_144F0(12LL);
        uint64_t v83 = sub_144F0(32LL);
        v153[0] = v83;
        uint64_t v127 = v60;
        *(_DWORD *)uint64_t v82 = v124;
        uint64_t v126 = v50;
        uint64_t v84 = v149;
        uint64_t v125 = v0;
        uint64_t v85 = (uint64_t)v142;
        v72(v142, v140, v149);
        uint64_t v86 = sub_547D0(v85);
        unint64_t v88 = v87;
        uint64_t v154 = sub_68DC4(v86, v87, v153);
        uint64_t v89 = v148;
        uint64_t v0 = v140;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v154, v123, v82 + 4, v82 + 12);
        swift_bridgeObjectRelease(v88);
        sub_14550( &dword_0,  v76,  v81,  "#HomeCommunicationNLContextProvider Building UserStatedTask for disambiguating between homes: %s",  v82);
        swift_arrayDestroy(v83, 1LL, v122);
        sub_48D4(v83);
        sub_48D4((uint64_t)v82);
        swift_release(v125);
        uint64_t v43 = v0;
        swift_release(v126);
        sub_1BFC0();

        swift_release(v127);
        sub_1BE08();
        (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v0, v84);
      }

      else
      {
        sub_17634();
        sub_1C008();
        sub_1BFC0();

        sub_AAB8();
        sub_1BE08();
        (*(void (**)(uint64_t, uint64_t))(v148 + 8))(v43, v149);
      }

      uint64_t v4 = v143;
      uint64_t v1 = v128;
      uint64_t v41 = v145 + 2;
      uint64_t v40 = v146 - 1;
      if (v146 == 1)
      {
        sub_1BE8C();
        sub_1BEBC();
        goto LABEL_24;
      }
    }

    sub_1BE8C();
    sub_17634();
    sub_1C008();
    sub_AAB8();
    swift_bridgeObjectRelease(v156);
    if (qword_9F820 != -1) {
      swift_once(&qword_9F820, sub_17ADC);
    }
    uint64_t v97 = sub_1BDD8();
    sub_4870(v97, (uint64_t)qword_A3EB0);
    sub_1BE84();
    uint64_t v98 = sub_1BE84();
    uint64_t v99 = (os_log_s *)Logger.logObject.getter(v98);
    os_log_type_t v100 = static os_log_type_t.error.getter();
    uint64_t v5 = v100;
    if (os_log_type_enabled(v99, v100))
    {
      uint64_t v101 = (uint8_t *)sub_144F0(12LL);
      uint64_t v0 = sub_144F0(32LL);
      v153[0] = v0;
      *(_DWORD *)uint64_t v101 = v124;
      uint64_t v154 = v4;
      sub_1BE84();
      uint64_t v102 = sub_41BC(&qword_A0F48);
      uint64_t v103 = String.init<A>(describing:)(&v154, v102);
      unint64_t v105 = v104;
      uint64_t v154 = sub_68DC4(v103, v104, v153);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v154, &v155, v101 + 4, v101 + 12);
      swift_bridgeObjectRelease(v105);
      sub_144F8();
      sub_144F8();
      sub_14550( &dword_0,  v99,  (os_log_type_t)v5,  "#HomeCommunicationNLContextProvider Error building system dialog act for disambiguation: %s",  v101);
      sub_17528(v0, v106, (uint64_t)&type metadata for Any + 8);
      sub_48D4(v0);
      sub_48D4((uint64_t)v101);

      sub_144F8();
    }

    else
    {
      sub_144F8();
      sub_144F8();
      sub_144F8();
    }

    sub_1BEBC();
  }

  else
  {
    BOOL v152 = _swiftEmptyArrayStorage;
LABEL_24:
    uint64_t v107 = swift_bridgeObjectRelease(v39);
  }

  uint64_t v108 = v119;
  Siri_Nlu_External_SystemGaveOptions.init()(v107);
  uint64_t v109 = Siri_Nlu_External_SystemGaveOptions.choices.setter(v152);
  Siri_Nlu_External_SystemDialogAct.init()(v109);
  uint64_t v110 = v120;
  uint64_t v111 = v118;
  uint64_t v112 = v121;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v120 + 16))(v118, v108, v121);
  Siri_Nlu_External_SystemDialogAct.gaveOptions.setter(v111);
  uint64_t v113 = sub_41BC(&qword_A0F40);
  uint64_t v114 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v115 = (v114 + 32) & ~v114;
  uint64_t v116 = swift_allocObject(v113, v115 + *(void *)(v5 + 72), v114 | 7);
  *(_OWORD *)(v116 + 16) = xmmword_6FA70;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v116 + v115, v0, v4);
  (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v108, v112);
  sub_6360();
}

void sub_1AC6C()
{
  uint64_t v65 = v3;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  sub_41BC(&qword_A0F28);
  sub_1736C();
  __chkstk_darwin(v8);
  sub_1BDE0();
  sub_41BC((uint64_t *)&off_9FE90);
  sub_1736C();
  __chkstk_darwin(v9);
  sub_172F4();
  uint64_t v66 = v10;
  uint64_t v11 = sub_1C050();
  uint64_t v58 = *(void *)(v11 - 8);
  uint64_t v59 = v11;
  sub_1736C();
  __chkstk_darwin(v12);
  uint64_t v13 = sub_1BEF8();
  uint64_t v14 = type metadata accessor for IdentifierNamespace(v13);
  uint64_t v57 = *(void *)(v14 - 8);
  sub_1736C();
  __chkstk_darwin(v15);
  sub_9298();
  uint64_t v18 = v17 - v16;
  uint64_t v19 = type metadata accessor for IdentifierAppBundle(0LL);
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  sub_1BF74();
  uint64_t v64 = type metadata accessor for UsoIdentifier(0LL);
  uint64_t v62 = *(void *)(v64 - 8);
  sub_1736C();
  __chkstk_darwin(v21);
  sub_6314();
  uint64_t v61 = v22;
  sub_62D0();
  __chkstk_darwin(v23);
  sub_1BF8C();
  uint64_t v60 = v24;
  uint64_t v63 = v7;
  ((void (*)(uint64_t, uint64_t))dispatch thunk of UsoEntityBuilder_common_UserEntity.addNames(value:))(v7, v5);
  uint64_t v25 = ((uint64_t (*)(void))type metadata accessor for UsoPrimitiveStringBuilder)(0LL);
  uint64_t v26 = ((uint64_t (*)(uint64_t, unint64_t, uint64_t))dispatch thunk of UsoEntityBuilder.getAsListHelper<A>(attributeName:))( 0x73656D616ELL,  0xE500000000000000LL,  v25);
  if (v26)
  {
    uint64_t v27 = v26;
    if ((unint64_t)v26 >> 62)
    {
      if (v26 >= 0) {
        v26 &= 0xFFFFFFFFFFFFFF8uLL;
      }
      uint64_t v28 = _CocoaArrayWrapper.endIndex.getter(v26);
      if (v28)
      {
LABEL_4:
        uint64_t v56 = v1;
        uint64_t v29 = v28 - 1;
        if (__OFSUB__(v28, 1LL))
        {
          __break(1u);
        }

        else
        {
          uint64_t v55 = v0;
          sub_25868(v28 - 1, (v27 & 0xC000000000000001LL) == 0, v27);
          if ((v27 & 0xC000000000000001LL) == 0)
          {
            uint64_t v30 = v14;
            uint64_t v54 = *(void *)(v27 + 8 * v29 + 32);
            swift_retain(v54);
LABEL_7:
            sub_D304();
            unsigned int v52 = enum case for IdentifierAppBundle.abHomeKit(_:);
            uint64_t v53 = *(void (**)(uint64_t))(v20 + 104);
            v53(v2);
            uint64_t v31 = swift_bridgeObjectRetain(v5);
            uint64_t v51 = ((uint64_t (*)(uint64_t))IdentifierAppBundle.rawValue.getter)(v31);
            uint64_t v33 = v32;
            (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v2, v19);
            uint64_t v34 = *(uint64_t (**)(uint64_t, void, uint64_t))(v57 + 104);
            uint64_t v35 = v34(v18, enum case for IdentifierNamespace.nsSemanticValue(_:), v30);
            uint64_t v36 = IdentifierNamespace.rawValue.getter(v35);
            uint64_t v38 = v37;
            (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v18, v30);
            ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))UsoIdentifier.init(value:appBundleId:namespace:))( v63,  v5,  v51,  v33,  v36,  v38);
            ((void (*)(uint64_t))dispatch thunk of UsoBuilder.addUsoIdentifier(usoIdentifier:))(v60);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 16))(v56, v65, v59);
            ((void (*)(uint64_t, void, uint64_t))v53)(v2, v52, v19);
            v34(v66, enum case for IdentifierNamespace.nsHomeKitEntityType(_:), v30);
            sub_1BF40();
            _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v39, v40, v41, v30);
            uint64_t v42 = enum case for UsoIdentifier.NluComponent.unknown(_:);
            uint64_t v43 = ((uint64_t (*)(void))type metadata accessor for UsoIdentifier.NluComponent)(0LL);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 104LL))(v55, v42, v43);
            sub_1BF40();
            _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v44, v45, v46, v43);
            ((void (*)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t))UsoIdentifier.init(value:appBundleId:namespace:probability:sourceComponent:))( v56,  v2,  v66,  0LL,  1LL,  v55);
            ((void (*)(uint64_t))dispatch thunk of UsoBuilder.addUsoIdentifier(usoIdentifier:))(v61);
            swift_release(v54);
            uint64_t v47 = *(void (**)(uint64_t, uint64_t))(v62 + 8);
            v47(v61, v64);
            v47(v60, v64);
            sub_6360();
            return;
          }
        }

        uint64_t v30 = v14;
        uint64_t v54 = specialized _ArrayBuffer._getElementSlowPath(_:)(v29, v27);
        goto LABEL_7;
      }
    }

    else
    {
      uint64_t v28 = *(void *)((char *)&dword_10 + (v26 & 0xFFFFFFFFFFFFFF8LL));
      if (v28) {
        goto LABEL_4;
      }
    }

    sub_D304();
  }

  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v48 = sub_1BDD8();
  uint64_t v67 = (os_log_s *)sub_1BE18(v48, (uint64_t)qword_A3EB0);
  os_log_type_t v49 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v67, v49))
  {
    uint64_t v50 = (uint8_t *)sub_144F0(2LL);
    *(_WORD *)uint64_t v50 = 0;
    sub_1BE98(&dword_0, v67, v49, "Unable to get name string builder", v50);
    sub_48D4((uint64_t)v50);
  }
}

void sub_1B0CC()
{
  uint64_t v78 = v1;
  uint64_t v3 = v2;
  uint64_t v4 = type metadata accessor for OrdinalDisplayHintsBuilder(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  sub_9298();
  uint64_t v8 = v7 - v6;
  sub_41BC(&qword_A0F20);
  sub_1736C();
  __chkstk_darwin(v9);
  sub_172F4();
  uint64_t v77 = v10;
  uint64_t v11 = type metadata accessor for DisplayHint(0LL);
  uint64_t v75 = *(void *)(v11 - 8);
  uint64_t v76 = v11;
  sub_1736C();
  __chkstk_darwin(v12);
  sub_1BDE0();
  uint64_t v13 = type metadata accessor for SemanticValue(0LL);
  uint64_t v81 = *(void *)(v13 - 8);
  sub_1736C();
  __chkstk_darwin(v14);
  sub_6314();
  uint64_t v74 = v15;
  sub_62D0();
  __chkstk_darwin(v16);
  uint64_t v73 = (uint64_t)&v67 - v17;
  sub_62D0();
  __chkstk_darwin(v18);
  sub_1BF8C();
  uint64_t v80 = v19;
  uint64_t v82 = _swiftEmptyArrayStorage;
  uint64_t v20 = *(void *)(v3 + 16);
  if (v20)
  {
    uint64_t v69 = v8;
    uint64_t v70 = v5;
    uint64_t v71 = v4;
    sub_1C030();
    uint64_t v68 = v3;
    uint64_t v21 = (uint64_t *)(v3 + 40);
    uint64_t v79 = _swiftEmptyArrayStorage;
    uint64_t v72 = v0;
    do
    {
      uint64_t v22 = *(v21 - 1);
      uint64_t v23 = *v21;
      uint64_t v24 = HIBYTE(*v21) & 0xF;
      if ((*v21 & 0x2000000000000000LL) == 0) {
        uint64_t v24 = v22 & 0xFFFFFFFFFFFFLL;
      }
      if (v24)
      {
        uint64_t v25 = v78;
        uint64_t v26 = v78[3];
        uint64_t v27 = v78[4];
        sub_8504(v78, v26);
        swift_bridgeObjectRetain(v23);
        uint64_t v28 = dispatch thunk of OntologyNode.name.getter(v26, v27);
        uint64_t v30 = v29;
        uint64_t v31 = v25[3];
        uint64_t v32 = v25[4];
        sub_8504(v25, v31);
        unint64_t v33 = sub_5B018(v31, v32);
        uint64_t v34 = v80;
        SemanticValue.init(string:label:nodeClass:)(v22, v23, v28, v30, v33, v35);
        uint64_t v36 = v73;
        sub_1BFB8(v73, v34);
        uint64_t v37 = (uint64_t)v79;
        if ((swift_isUniquelyReferenced_nonNull_native(v79) & 1) == 0)
        {
          char v55 = sub_1BDF8();
          uint64_t v37 = sub_5D600(v55, v56, v57, v37);
        }

        unint64_t v39 = *(void *)(v37 + 16);
        unint64_t v38 = *(void *)(v37 + 24);
        uint64_t v40 = v72;
        if (v39 >= v38 >> 1)
        {
          char v58 = sub_1BE70(v38);
          uint64_t v37 = sub_5D600(v58, v59, v60, v37);
        }

        *(void *)(v37 + 16) = v39 + 1;
        sub_1BF5C();
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v42 + 32))( v37 + v41 + *(void *)(v42 + 72) * v39,  v36,  v13);
        uint64_t v43 = v77;
        uint64_t v44 = v80;
        sub_1BFB8(v77, v80);
        sub_1BF40();
        _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v45, v46, v47, v13);
        uint64_t v48 = v74;
        sub_1BFB8(v74, v44);
        DisplayHint.init(idValue:displayValue:)(v43, v48);
        uint64_t v49 = (uint64_t)v82;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v82);
        uint64_t v79 = (void *)v37;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          char v61 = sub_1BDF8();
          uint64_t v49 = sub_5D434(v61, v62, v63, v49);
        }

        unint64_t v52 = *(void *)(v49 + 16);
        unint64_t v51 = *(void *)(v49 + 24);
        if (v52 >= v51 >> 1) {
          uint64_t v49 = sub_5D434(v51 > 1, v52 + 1, 1, v49);
        }
        *(void *)(v49 + 16) = v52 + 1;
        sub_1BF5C();
        (*(void (**)(unint64_t, uint64_t))(v54 + 32))(v49 + v53 + *(void *)(v54 + 72) * v52, v40);
        uint64_t v82 = (void *)v49;
        (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v80, v13);
      }

      v21 += 2;
      --v20;
    }

    while (v20);
    swift_bridgeObjectRelease(v68);
    uint64_t v5 = v70;
    uint64_t v4 = v71;
    uint64_t v8 = v69;
  }

  else
  {
    uint64_t v79 = _swiftEmptyArrayStorage;
  }

  if (qword_9F8C0 != -1) {
    swift_once(&qword_9F8C0, sub_5B374);
  }
  uint64_t v64 = TerminalOntologyNode.name.getter();
  OrdinalDisplayHintsBuilder.init(referenceNode:)(v64);
  uint64_t v65 = v79;
  uint64_t v66 = OrdinalDisplayHintsBuilder.build(for:)(v79);
  swift_bridgeObjectRelease(v65);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
  sub_251D8(v66);
  sub_6360();
}

void sub_1B4B0()
{
  unint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UUID(0LL);
  uint64_t v101 = *(void *)(v2 - 8);
  uint64_t v102 = v2;
  sub_1736C();
  __chkstk_darwin(v3);
  sub_172F4();
  uint64_t v100 = v4;
  uint64_t v5 = type metadata accessor for RREntity(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_6314();
  int64_t v95 = v7;
  sub_62D0();
  __chkstk_darwin(v8);
  int64_t v91 = (void (*)(uint64_t, uint64_t))((char *)&v86 - v9);
  sub_62D0();
  __chkstk_darwin(v10);
  sub_1BF8C();
  uint64_t v107 = v11;
  sub_41BC(&qword_A0F10);
  sub_1736C();
  __chkstk_darwin(v12);
  uint64_t v99 = (uint64_t)&v86 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_62D0();
  __chkstk_darwin(v14);
  uint64_t v98 = (char *)&v86 - v15;
  sub_62D0();
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v25 = sub_1BF98(v17, v18, v19, v20, v21, v22, v23, v24, v86);
  uint64_t v26 = type metadata accessor for GroupIdentifierGenerator(v25);
  sub_A8BC(v26);
  uint64_t v103 = GroupIdentifierGenerator.init()();
  uint64_t v106 = v1;
  if (!(v1 >> 62))
  {
    uint64_t v27 = *(void *)((char *)&dword_10 + (v106 & 0xFFFFFFFFFFFFF8LL));
    swift_bridgeObjectRetain(v106);
    if (v27) {
      goto LABEL_3;
    }
LABEL_35:
    sub_1BEA0();
    swift_bridgeObjectRelease(v106);
    sub_6360();
    return;
  }

  if (v106 < 0) {
    uint64_t v85 = v106;
  }
  else {
    uint64_t v85 = v106 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v106);
  uint64_t v27 = _CocoaArrayWrapper.endIndex.getter(v85);
  if (!v27) {
    goto LABEL_35;
  }
LABEL_3:
  if (v27 >= 1)
  {
    uint64_t v94 = v5;
    uint64_t v29 = 0LL;
    uint64_t v108 = 0LL;
    unint64_t v105 = v106 & 0xC000000000000001LL;
    unint64_t v104 = _swiftEmptyArrayStorage;
    unint64_t v96 = 0x8000000000077010LL;
    *(void *)&__int128 v28 = 136315138LL;
    __int128 v88 = v28;
    unint64_t v87 = (char *)&type metadata for Any + 8;
    uint64_t v90 = v6;
    uint64_t v30 = v92;
    uint64_t v97 = v27;
    do
    {
      if (v105) {
        id v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v29, v106);
      }
      else {
        id v31 = *(id *)(v106 + 8 * v29 + 32);
      }
      uint64_t v32 = v31;
      uint64_t v33 = sub_1BAB8(v31);
      if (v33)
      {
        uint64_t v34 = v33;
        uint64_t v35 = type metadata accessor for GroupIdentifier(0LL);
        uint64_t v36 = _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v30, 1LL, 1LL, v35);
        uint64_t v37 = v30;
        uint64_t v38 = (uint64_t)v98;
        dispatch thunk of GroupIdentifierGenerator.addGroupIdentifier()(v36);
        sub_1BFC8();
        sub_1BF40();
        _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v39, v40, v41, v35);
        uint64_t v42 = sub_1BC80(v38, v37);
        uint64_t v43 = v100;
        uint64_t v44 = UUID.init()(v42);
        uint64_t v45 = (os_log_s *)UUID.uuidString.getter(v44);
        uint64_t v47 = v46;
        (*(void (**)(uint64_t, uint64_t))(v101 + 8))(v43, v102);
        uint64_t v48 = v99;
        sub_1BCC8(v37, v99);
        uint64_t v49 = sub_7B50(0LL, (unint64_t *)&qword_A0F08, &OBJC_CLASS___INHomeFilter_ptr);
        swift_retain(v34);
        id v50 = v32;
        uint64_t v51 = v48;
        uint64_t v52 = v108;
        RREntity.init<A>(id:appBundleId:usoEntity:intentEntity:group:)( v45,  v47,  0xD00000000000001FLL,  v96,  v34,  v50,  v51,  v49);
        uint64_t v108 = v52;
        if (v52)
        {
          sub_1BFC8();
          uint64_t v30 = v37;
          if (qword_9F820 != -1) {
            swift_once(&qword_9F820, sub_17ADC);
          }
          uint64_t v53 = sub_1BDD8();
          sub_1BE18(v53, (uint64_t)qword_A3EB0);
          os_log_type_t v54 = sub_1C040();
          if (sub_17604(v54))
          {
            char v55 = (uint8_t *)sub_144F0(2LL);
            *(_WORD *)char v55 = 0;
            sub_1BE98( &dword_0,  v45,  (os_log_type_t)v47,  "#HomeCommunicationNLContextProvider Error creating RREntity",  v55);
            sub_48D4((uint64_t)v55);
            swift_errorRelease(v108);
            sub_1C028();
          }

          else
          {
            sub_1C028();

            swift_errorRelease(v108);
          }

          uint64_t v108 = 0LL;
        }

        else
        {
          id v93 = v50;
          if (qword_9F820 != -1) {
            swift_once(&qword_9F820, sub_17ADC);
          }
          uint64_t v56 = sub_1BDD8();
          sub_4870(v56, (uint64_t)qword_A3EB0);
          char v57 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 16);
          char v58 = v91;
          uint64_t v59 = v94;
          uint64_t v60 = v57((char *)v91, v107, v94);
          char v61 = (os_log_s *)Logger.logObject.getter(v60);
          os_log_type_t v62 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v61, v62))
          {
            uint64_t v63 = sub_144F0(12LL);
            uint64_t v89 = v57;
            uint64_t v64 = v63;
            uint64_t v65 = sub_144F0(32LL);
            uint64_t v109 = v65;
            *(_DWORD *)uint64_t v64 = v88;
            unint64_t v66 = sub_1BD10();
            uint64_t v67 = dispatch thunk of CustomStringConvertible.description.getter(v59, v66);
            *(void *)(v64 + 4) = sub_68DC4(v67, v68, &v109);
            sub_D304();
            sub_1BEA8();
            sub_14550(&dword_0, v61, v62, "#HomeCommunicationNLContextProvider rrEntity: %s", (uint8_t *)v64);
            swift_arrayDestroy(v65, 1LL, v87);
            sub_48D4(v65);
            uint64_t v69 = v64;
            char v57 = v89;
            sub_48D4(v69);
          }

          else
          {
            sub_1BEA8();
          }

          v57(v95, v107, v59);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v104);
          uint64_t v30 = v92;
          uint64_t v71 = v93;
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            uint64_t v6 = v90;
            uint64_t v72 = (uint64_t)v104;
          }

          else
          {
            char v77 = sub_1BDF8();
            uint64_t v72 = sub_5D614(v77, v78, v79, v80);
            uint64_t v6 = v90;
          }

          unint64_t v74 = *(void *)(v72 + 16);
          unint64_t v73 = *(void *)(v72 + 24);
          if (v74 >= v73 >> 1)
          {
            char v81 = sub_1BE70(v73);
            uint64_t v72 = sub_5D614(v81, v82, v83, v84);
          }

          *(void *)(v72 + 16) = v74 + 1;
          unint64_t v75 = (*(unsigned __int8 *)(v6 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
          unint64_t v104 = (void *)v72;
          uint64_t v76 = v94;
          (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))( v72 + v75 + *(void *)(v6 + 72) * v74,  v95,  v94);
          sub_1C028();

          v58(v107, v76);
          sub_5F64(v30, &qword_A0F10);
        }

        uint64_t v27 = v97;
      }

      else
      {
      }

      ++v29;
    }

    while (v27 != v29);
    goto LABEL_35;
  }

  __break(1u);
}

uint64_t sub_1BAB8(void *a1)
{
  uint64_t v3 = sub_1C050();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  sub_1BDE0();
  id v5 = [a1 home];
  if (v5)
  {
    uint64_t v6 = v5;
    id v7 = [v5 spokenPhrase];

    static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    unint64_t v9 = v8;
  }

  else
  {
    unint64_t v9 = 0xE000000000000000LL;
  }

  uint64_t v10 = type metadata accessor for UsoEntityBuilder_common_UserEntity(0LL);
  uint64_t v11 = sub_A8BC(v10);
  uint64_t v12 = UsoEntityBuilder_common_UserEntity.init()(v11);
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))( v1,  enum case for IdentifierValue.vHomeAutomationHome(_:),  v3);
  sub_1AC6C();
  swift_bridgeObjectRelease(v9);
  sub_1C038(v1, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  uint64_t v13 = static UsoBuilderConversionUtils.convertEntityBuilderToEntity(entityBuilder:)(v12);
  swift_release(v12);
  return v13;
}

uint64_t sub_1BBE4()
{
  return DefaultNLContextProvider.init()();
}

uint64_t sub_1BC14()
{
  uint64_t v0 = DefaultNLContextProvider.deinit();
  return swift_deallocClassInstance(v0, 16LL, 7LL);
}

uint64_t type metadata accessor for HomeCommunicationNLContextProvider( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_425C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for HomeCommunicationNLContextProvider);
}

unint64_t sub_1BC3C()
{
  unint64_t result = qword_A0F00;
  if (!qword_A0F00)
  {
    uint64_t v1 = sub_8564(&qword_A0690);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for TerminalOntologyNode<A>, v1);
    atomic_store(result, (unint64_t *)&qword_A0F00);
  }

  return result;
}

uint64_t sub_1BC80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_41BC(&qword_A0F10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BCC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_41BC(&qword_A0F10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

unint64_t sub_1BD10()
{
  unint64_t result = qword_A0F18;
  if (!qword_A0F18)
  {
    uint64_t v1 = type metadata accessor for RREntity(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for RREntity, v1);
    atomic_store(result, (unint64_t *)&qword_A0F18);
  }

  return result;
}

uint64_t sub_1BD50( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  *(void *)(v20 - 96) = a1;
  *(void *)(v20 - 8sub_423C(v0 + 8) = a2;
  *(void *)(v20 - 112) = 32LL;
  *(void *)(v20 - 104) = v18;
  *(void *)(v20 - 12sub_423C(v0 + 8) = 95LL;
  *(void *)(v20 - 120) = v18;
  return StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( v20 - 112,  v20 - 128,  0LL,  0LL,  0LL,  1LL,  v19,  v19,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18);
}

uint64_t sub_1BD9C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void))
{
  return a7();
}

  ;
}

uint64_t sub_1BDCC(uint64_t a1)
{
  return swift_allocObject(a1, 48LL, 7LL);
}

uint64_t sub_1BDD8()
{
  return type metadata accessor for Logger(0LL);
}

  ;
}

uint64_t sub_1BDF8()
{
  return 0LL;
}

uint64_t sub_1BE08()
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)(v1 - 160) + 8LL))(v0, *(void *)(v1 - 152));
}

uint64_t sub_1BE18(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_4870(a1, a2);
  return Logger.logObject.getter(v2);
}

void sub_1BE2C()
{
}

uint64_t sub_1BE3C()
{
  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_1BE4C(uint64_t a1, uint64_t a2)
{
  return swift_beginAccess(a1, a2, 0LL, 0LL);
}

uint64_t sub_1BE58( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  return StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( a1,  a2,  0LL,  0LL,  0LL,  1LL,  a7,  a7,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18);
}

BOOL sub_1BE70@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_1BE84()
{
  return swift_errorRetain(v0);
}

uint64_t sub_1BE8C()
{
  return swift_bridgeObjectRelease(*(void *)(v0 - 464));
}

void sub_1BE98(void *a1, os_log_s *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
}

uint64_t sub_1BEA0()
{
  return swift_release(*(void *)(v0 - 152));
}

uint64_t sub_1BEA8()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

  ;
}

uint64_t sub_1BED8()
{
  return String.uppercased()()._countAndFlagsBits;
}

uint64_t sub_1BEEC@<X0>(void *a1@<X8>)
{
  return type metadata accessor for DefaultNLContextProvider(0LL, *a1, a1[1]);
}

uint64_t sub_1BEF8()
{
  return 0LL;
}

uint64_t sub_1BF14()
{
  return 0LL;
}

BOOL sub_1BF30(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

  ;
}

uint64_t sub_1BF4C(uint64_t a1)
{
  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(a1, 0LL, 1LL, v1);
}

  ;
}

uint64_t sub_1BF6C()
{
  return swift_bridgeObjectRelease(v0);
}

  ;
}

  ;
}

uint64_t sub_1BF98( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 240) = (char *)&a9 - v9;
  return 0LL;
}

void sub_1BFB0()
{
}

uint64_t sub_1BFB8(uint64_t a1, uint64_t a2)
{
  return v2(a1, a2, v3);
}

void sub_1BFC0()
{
}

uint64_t sub_1BFC8()
{
  return sub_5F64(v1, v0);
}

uint64_t sub_1BFD4()
{
  return swift_bridgeObjectRetain(v0);
}

uint64_t sub_1BFDC()
{
  return swift_bridgeObjectRelease_n(v0, 2LL);
}

uint64_t sub_1BFE8()
{
  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_1BFF0()
{
  return Logger.logObject.getter();
}

uint64_t sub_1BFF8@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  return a3(a1, a2, v3);
}

uint64_t sub_1C000()
{
  return swift_release(*(void *)(v0 - 160));
}

uint64_t sub_1C008()
{
  return swift_release(v0);
}

uint64_t sub_1C010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(a1, 1LL, 1LL, a4);
}

uint64_t sub_1C01C()
{
  return String.uppercased()()._countAndFlagsBits;
}

uint64_t sub_1C028()
{
  return swift_release(v0);
}

uint64_t sub_1C030()
{
  return swift_bridgeObjectRetain(v0);
}

uint64_t sub_1C038@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  return a2(a1, v2);
}

uint64_t sub_1C040()
{
  return static os_log_type_t.error.getter();
}

uint64_t sub_1C048()
{
  return type metadata accessor for NLContextUpdate(0LL);
}

uint64_t sub_1C050()
{
  return type metadata accessor for IdentifierValue(0LL);
}

uint64_t sub_1C058()
{
  return type metadata accessor for Siri_Nlu_External_UsoGraph(0LL);
}

double sub_1C064@<D0>(uint64_t a1@<X8>)
{
  return sub_1C078(a1);
}

double sub_1C078@<D0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 32) = 0LL;
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_1C088()
{
  return 7LL;
}

BOOL sub_1C098()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 96) + 16LL);
  sub_1C904((char *)v0, (uint64_t)v7);
  if (v1)
  {
    sub_1C940((uint64_t)v7);
    sub_1C904((char *)v0, (uint64_t)v5);
  }

  else
  {
    uint64_t v2 = *(void *)(v8 + 16);
    sub_1C940((uint64_t)v7);
    sub_1C904((char *)v0, (uint64_t)v5);
    if (!v2)
    {
      BOOL v3 = *(void *)(v6 + 16) != 0LL;
      goto LABEL_5;
    }
  }

  BOOL v3 = 1LL;
LABEL_5:
  sub_1C940((uint64_t)v5);
  return v3;
}

BOOL sub_1C12C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a1 - 8);
  uint64_t v6 = __chkstk_darwin(a1);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v20 - v10;
  uint64_t v13 = (*(uint64_t (**)(uint64_t))(v12 + 112))(v9);
  sub_1CCA4(v13);
  sub_1CC98((uint64_t)v11);
  if (v2)
  {
    LOBYTE(v14) = 1;
  }

  else
  {
    uint64_t v15 = sub_1CC8C(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 104));
    sub_1CCA4(v15);
    BOOL v14 = v11 != 0LL;
  }

  uint64_t v16 = *(void (**)(char *, uint64_t))(v5 + 8);
  v16(v11, a1);
  sub_1CC98((uint64_t)v8);
  if (v14)
  {
    BOOL v17 = 1LL;
  }

  else
  {
    uint64_t v18 = sub_1CC8C(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 96));
    sub_1CCA4(v18);
    BOOL v17 = v8 != 0LL;
  }

  v16(v8, a1);
  return v17;
}

void *sub_1C23C()
{
  return &_swiftEmptyArrayStorage;
}

void sub_1C24C()
{
}

uint64_t sub_1C254()
{
  return 0LL;
}

uint64_t sub_1C25C(uint64_t a1, uint64_t a2)
{
  uint64_t v48 = 0LL;
  unint64_t v49 = 0xE000000000000000LL;
  _StringGuts.grow(_:)(478LL);
  uint64_t v52 = 0LL;
  unint64_t v53 = 0xE000000000000000LL;
  sub_1CBF8(0xD000000000000023LL, (uint64_t)"HomeCommunicationNLIntent:\n    app=");
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a2 + 24))(&v48, a1, a2);
  uint64_t v4 = v50;
  if (v50)
  {
    uint64_t v5 = v51;
    sub_8504(&v48, v50);
    uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
    uint64_t v8 = v7;
    sub_423C(&v48);
    if (v8) {
      goto LABEL_6;
    }
  }

  else
  {
    sub_1C794((uint64_t)&v48);
  }

  swift_bridgeObjectRelease(0LL);
  uint64_t v6 = 7104878LL;
LABEL_6:
  sub_1CC44(v6);
  sub_18FB8();
  sub_1CC70();
  uint64_t countAndFlagsBits = v9._countAndFlagsBits;
  String.append(_:)(v9);
  char v10 = sub_1CC10(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 32));
  uint64_t v11 = 7104878LL;
  if (v10 != 7) {
    uint64_t v11 = sub_5B144(v10);
  }
  sub_1CC38(v11);
  sub_18FB8();
  sub_1CBF8(0xD000000000000013LL, (uint64_t)"\n    hasSmsContact=");
  else {
    uint64_t v12 = 0x65736C6166LL;
  }
  sub_1CC38(v12);
  sub_18FB8();
  sub_1CBF8(0xD00000000000001DLL, (uint64_t)"\n    hasEverywhereOrEveryone=");
  else {
    uint64_t v13 = 0x65736C6166LL;
  }
  sub_1CC38(v13);
  sub_18FB8();
  sub_1CBF8(0xD000000000000027LL, (uint64_t)"\n    homeAutomationUnknownDestinations=");
  uint64_t v14 = sub_1CC10(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 72));
  v54._uint64_t countAndFlagsBits = Array.description.getter(v14, &type metadata for String);
  object = v54._object;
  sub_1CC08(v54);
  sub_18FB8();
  swift_bridgeObjectRelease(object);
  sub_1CC44(0xD00000000000001FLL);
  uint64_t v16 = sub_1CC10(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 144));
  v55._uint64_t countAndFlagsBits = Array.description.getter(v16, &unk_964D0);
  sub_1CC08(v55);
  sub_1BF6C();
  sub_1CC58();
  sub_1CBF8(0xD000000000000021LL, (uint64_t)"\n    homeAutomationServiceGroups=");
  uint64_t v17 = sub_1CC10(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 88));
  v56._uint64_t countAndFlagsBits = sub_1CC4C(v17);
  sub_1CC08(v56);
  sub_1BF6C();
  sub_1CC58();
  sub_1CC20((uint64_t)"\n    homeAutomationZones=");
  uint64_t v18 = sub_1CC10(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 104));
  v57._uint64_t countAndFlagsBits = sub_1CC4C(v18);
  sub_1CC08(v57);
  sub_1BF6C();
  sub_1CC58();
  sub_1CC20((uint64_t)"\n    homeAutomationHomes=");
  uint64_t v19 = sub_1CC60();
  v58._uint64_t countAndFlagsBits = sub_1CC4C(v19);
  sub_1CC08(v58);
  sub_1BF6C();
  sub_1CC58();
  sub_1CC20((uint64_t)"\n    homeAutomationRooms=");
  uint64_t v20 = sub_1CC10(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 96));
  v59._uint64_t countAndFlagsBits = sub_1CC4C(v20);
  sub_1CC08(v59);
  sub_1BF6C();
  sub_1CC58();
  sub_1CBF8(0xD000000000000011LL, (uint64_t)"\n    startTimeMs=");
  uint64_t v48 = sub_1CC10(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 120));
  LOBYTE(v49) = v21 & 1;
  uint64_t v22 = sub_41BC(&qword_A0F60);
  v60._uint64_t countAndFlagsBits = sub_1CC80(v22, v23, v24);
  sub_1CC08(v60);
  sub_1CC58();
  v25._uint64_t countAndFlagsBits = 0x646E65202020200ALL;
  v25._object = (void *)0xEF3D734D656D6954LL;
  String.append(_:)(v25);
  uint64_t v48 = sub_1CC10(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 128));
  LOBYTE(v49) = v26 & 1;
  v61._uint64_t countAndFlagsBits = sub_1CC80(v48, v26, v27);
  sub_1CC08(v61);
  sub_1BF6C();
  sub_1CC70();
  v28._uint64_t countAndFlagsBits = countAndFlagsBits;
  String.append(_:)(v28);
  uint64_t v29 = sub_1CC10(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 136));
  if (v30)
  {
    unint64_t v31 = v30;
  }

  else
  {
    uint64_t v29 = 0LL;
    unint64_t v31 = 0xE000000000000000LL;
  }

  unint64_t v32 = v31;
  String.append(_:)(*(Swift::String *)&v29);
  sub_1BF6C();
  sub_1CC44(0xD00000000000001FLL);
  uint64_t v33 = sub_1CC60();
  v62._uint64_t countAndFlagsBits = Array.description.getter(v33, &type metadata for String);
  sub_1CC08(v62);
  sub_18FB8();
  sub_1BF6C();
  sub_1CC70();
  v34._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
  String.append(_:)(v34);
  uint64_t v35 = sub_1CC10(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 152));
  uint64_t v36 = 7104878LL;
  if (!v37) {
    uint64_t v35 = 7104878LL;
  }
  uint64_t v38 = (void *)0xE300000000000000LL;
  sub_1CC38(v35);
  sub_18FB8();
  sub_1CBF8(0xD000000000000023LL, (uint64_t)"\n    homeCommunicationConfirmation=");
  char v39 = sub_1CC10(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 160));
  sub_1CC38(qword_711B8[v39]);
  sub_18FB8();
  sub_1CBF8(0xD000000000000010LL, (uint64_t)"\n    homeFilter=");
  uint64_t v40 = (void *)sub_1CC10(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 168));
  if (v40)
  {
    uint64_t v41 = v40;
    id v42 = [v40 entityName];

    if (v42)
    {
      id v43 = [v42 spokenPhrase];

      uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
      uint64_t v38 = v44;
    }
  }

  v45._uint64_t countAndFlagsBits = v36;
  v45._object = v38;
  String.append(_:)(v45);
  sub_1BF6C();
  return v52;
}

uint64_t sub_1C774(char a1)
{
  return qword_711F8[a1];
}

uint64_t sub_1C794(uint64_t a1)
{
  uint64_t v2 = sub_41BC(&qword_A0F58);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

unint64_t sub_1C7D4(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_936D8, v2);
  sub_18FB8();
  if (v3 >= 3) {
    return 3LL;
  }
  else {
    return v3;
  }
}

void sub_1C818()
{
}

void sub_1C824()
{
}

uint64_t sub_1C82C(uint64_t a1)
{
  return sub_1E5BC(a1, *v1);
}

void sub_1C834(uint64_t a1)
{
}

unint64_t sub_1C83C@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result = sub_1C7D4(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1C868@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C774(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_1C890(void *a1@<X8>)
{
  *a1 = &off_93740;
}

uint64_t sub_1C8A0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1CB44();
  unint64_t v5 = sub_1CB80();
  unint64_t v6 = sub_1CBBC();
  return static TerminalNodeBoundedSemanticValue<>.fromIntentNodeValue(_:)(a1, a2, v4, v5, v6);
}

uint64_t sub_1C904(char *a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C940(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C974(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFD) {
    return ((uint64_t (*)(void))((char *)&loc_1C9C0 + 4 * byte_71015[v4]))();
  }
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C9F4 + 4 * byte_71010[v4]))();
}

uint64_t sub_1C9F4(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C9FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x1CA04LL);
  }
  return result;
}

uint64_t sub_1CA10(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x1CA18LL);
  }
  *(_BYTE *)uint64_t result = a2 + 2;
  return result;
}

uint64_t sub_1CA1C(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA24(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for HomeCommunicationConfirmation()
{
}

unint64_t sub_1CA40()
{
  unint64_t result = qword_A0F68;
  if (!qword_A0F68)
  {
    unint64_t result = swift_getWitnessTable(&unk_71148, &unk_95858);
    atomic_store(result, (unint64_t *)&qword_A0F68);
  }

  return result;
}

unint64_t sub_1CA80()
{
  unint64_t result = qword_A0F70;
  if (!qword_A0F70)
  {
    uint64_t v1 = sub_8564(&qword_A0F78);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_A0F70);
  }

  return result;
}

unint64_t sub_1CAC8()
{
  unint64_t result = qword_A0F80;
  if (!qword_A0F80)
  {
    unint64_t result = swift_getWitnessTable(&unk_71080, &unk_95858);
    atomic_store(result, (unint64_t *)&qword_A0F80);
  }

  return result;
}

unint64_t sub_1CB08()
{
  unint64_t result = qword_A0F88;
  if (!qword_A0F88)
  {
    unint64_t result = swift_getWitnessTable(&unk_71188, &unk_95858);
    atomic_store(result, (unint64_t *)&qword_A0F88);
  }

  return result;
}

unint64_t sub_1CB44()
{
  unint64_t result = qword_A0F90;
  if (!qword_A0F90)
  {
    unint64_t result = swift_getWitnessTable(&unk_710E8, &unk_95858);
    atomic_store(result, (unint64_t *)&qword_A0F90);
  }

  return result;
}

unint64_t sub_1CB80()
{
  unint64_t result = qword_A0F98;
  if (!qword_A0F98)
  {
    unint64_t result = swift_getWitnessTable(&unk_710B0, &unk_95858);
    atomic_store(result, (unint64_t *)&qword_A0F98);
  }

  return result;
}

unint64_t sub_1CBBC()
{
  unint64_t result = qword_A0FA0;
  if (!qword_A0FA0)
  {
    unint64_t result = swift_getWitnessTable(&unk_71110, &unk_95858);
    atomic_store(result, (unint64_t *)&qword_A0FA0);
  }

  return result;
}

void sub_1CBF8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v2 = (a2 - 32) | 0x8000000000000000LL;
  String.append(_:)(*(Swift::String *)&a1);
}

void sub_1CC08(Swift::String a1)
{
}

uint64_t sub_1CC10@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v2, v1);
}

void sub_1CC20(uint64_t a1@<X8>)
{
  v1._object = (void *)((a1 - 32) | 0x8000000000000000LL);
  v1._uint64_t countAndFlagsBits = 0xD000000000000019LL;
  String.append(_:)(v1);
}

void sub_1CC38(uint64_t a1)
{
  uint64_t v2 = v1;
  String.append(_:)(*(Swift::String *)&a1);
}

void sub_1CC44(uint64_t a1)
{
  uint64_t v2 = v1;
  String.append(_:)(*(Swift::String *)&a1);
}

uint64_t sub_1CC4C(uint64_t a1)
{
  return Array.description.getter(a1, v1);
}

uint64_t sub_1CC58()
{
  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_1CC60()
{
  return v2(v1, v0);
}

  ;
}

uint64_t sub_1CC80(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  return String.init<A>(describing:)(va, v3);
}

uint64_t sub_1CC8C@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v1, v2);
}

uint64_t sub_1CC98(uint64_t a1)
{
  return v3(a1, v2, v1);
}

uint64_t sub_1CCA4(uint64_t a1)
{
  return swift_bridgeObjectRelease(a1);
}

uint64_t sub_1CCAC()
{
  v88._object = 0LL;
  unint64_t v89 = 0xE000000000000000LL;
  _StringGuts.grow(_:)(478LL);
  uint64_t v92 = 0LL;
  unint64_t v93 = 0xE000000000000000LL;
  v1._uint64_t countAndFlagsBits = 0xD000000000000023LL;
  v1._object = (void *)0x8000000000077030LL;
  String.append(_:)(v1);
  sub_1DC48(v0 + 8, (uint64_t)&v88._object);
  uint64_t v2 = v90;
  if (v90)
  {
    uint64_t v3 = v91;
    sub_8504(&v88._object, v90);
    uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
    unint64_t v6 = v5;
    sub_423C(&v88._object);
    if (v6) {
      goto LABEL_6;
    }
  }

  else
  {
    sub_1C794((uint64_t)&v88._object);
  }

  swift_bridgeObjectRelease(0LL);
  unint64_t v6 = (void *)0xE300000000000000LL;
  uint64_t v4 = 7104878LL;
LABEL_6:
  v7._uint64_t countAndFlagsBits = v4;
  v7._object = v6;
  String.append(_:)(v7);
  swift_bridgeObjectRelease(v6);
  v8._uint64_t countAndFlagsBits = 0xD000000000000014LL;
  v8._object = (void *)0x8000000000077060LL;
  String.append(_:)(v8);
  int v9 = *(unsigned __int8 *)(v0 + 48);
  if (v9 == 7)
  {
    unint64_t v10 = 0xE300000000000000LL;
    uint64_t v11 = 7104878LL;
  }

  else
  {
    uint64_t v11 = sub_5B144(v9);
    unint64_t v10 = v12;
  }

  unint64_t v13 = v10;
  String.append(_:)(*(Swift::String *)&v11);
  swift_bridgeObjectRelease(v10);
  v14._uint64_t countAndFlagsBits = 0xD000000000000013LL;
  v14._object = (void *)0x8000000000077080LL;
  String.append(_:)(v14);
  if (*(_BYTE *)(v0 + 49)) {
    uint64_t v15 = 1702195828LL;
  }
  else {
    uint64_t v15 = 0x65736C6166LL;
  }
  if (*(_BYTE *)(v0 + 49)) {
    unint64_t v16 = 0xE400000000000000LL;
  }
  else {
    unint64_t v16 = 0xE500000000000000LL;
  }
  unint64_t v17 = v16;
  String.append(_:)(*(Swift::String *)&v15);
  swift_bridgeObjectRelease(v16);
  v18._object = (void *)0x80000000000770A0LL;
  v18._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
  String.append(_:)(v18);
  if (*(_BYTE *)(v0 + 51)) {
    uint64_t v19 = 1702195828LL;
  }
  else {
    uint64_t v19 = 0x65736C6166LL;
  }
  if (*(_BYTE *)(v0 + 51)) {
    unint64_t v20 = 0xE400000000000000LL;
  }
  else {
    unint64_t v20 = 0xE500000000000000LL;
  }
  unint64_t v21 = v20;
  String.append(_:)(*(Swift::String *)&v19);
  swift_bridgeObjectRelease(v20);
  v22._uint64_t countAndFlagsBits = 0xD000000000000027LL;
  v22._object = (void *)0x80000000000770C0LL;
  String.append(_:)(v22);
  uint64_t v23 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain(v23);
  v24._uint64_t countAndFlagsBits = Array.description.getter(v23, &type metadata for String);
  object = v24._object;
  String.append(_:)(v24);
  swift_bridgeObjectRelease(v23);
  swift_bridgeObjectRelease(object);
  v26._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  v26._object = (void *)0x80000000000770F0LL;
  String.append(_:)(v26);
  uint64_t v27 = *(void *)(v0 + 160);
  uint64_t v28 = swift_bridgeObjectRetain(v27);
  v29._uint64_t countAndFlagsBits = Array.description.getter(v28, &unk_964D0);
  unint64_t v30 = v29._object;
  String.append(_:)(v29);
  swift_bridgeObjectRelease(v27);
  swift_bridgeObjectRelease(v30);
  v31._uint64_t countAndFlagsBits = 0xD000000000000021LL;
  v31._object = (void *)0x8000000000077110LL;
  String.append(_:)(v31);
  uint64_t v32 = *(void *)(v0 + 72);
  uint64_t v33 = swift_bridgeObjectRetain(v32);
  v34._uint64_t countAndFlagsBits = Array.description.getter(v33, &type metadata for String);
  uint64_t v35 = v34._object;
  String.append(_:)(v34);
  swift_bridgeObjectRelease(v32);
  swift_bridgeObjectRelease(v35);
  v36._object = (void *)0x8000000000077140LL;
  v36._uint64_t countAndFlagsBits = 0xD000000000000019LL;
  String.append(_:)(v36);
  uint64_t v37 = *(void *)(v0 + 88);
  uint64_t v38 = swift_bridgeObjectRetain(v37);
  v39._uint64_t countAndFlagsBits = Array.description.getter(v38, &type metadata for String);
  uint64_t v40 = v39._object;
  String.append(_:)(v39);
  swift_bridgeObjectRelease(v37);
  swift_bridgeObjectRelease(v40);
  v41._object = (void *)0x8000000000077160LL;
  v41._uint64_t countAndFlagsBits = 0xD000000000000019LL;
  String.append(_:)(v41);
  uint64_t v42 = *(void *)(v0 + 96);
  uint64_t v43 = swift_bridgeObjectRetain(v42);
  v44._uint64_t countAndFlagsBits = Array.description.getter(v43, &type metadata for String);
  Swift::String v45 = v44._object;
  String.append(_:)(v44);
  swift_bridgeObjectRelease(v42);
  swift_bridgeObjectRelease(v45);
  v46._object = (void *)0x8000000000077180LL;
  v46._uint64_t countAndFlagsBits = 0xD000000000000019LL;
  String.append(_:)(v46);
  uint64_t v47 = *(void *)(v0 + 80);
  uint64_t v48 = swift_bridgeObjectRetain(v47);
  v49._uint64_t countAndFlagsBits = Array.description.getter(v48, &type metadata for String);
  uint64_t v50 = v49._object;
  String.append(_:)(v49);
  swift_bridgeObjectRelease(v47);
  swift_bridgeObjectRelease(v50);
  v51._uint64_t countAndFlagsBits = 0xD000000000000011LL;
  v51._object = (void *)0x80000000000771A0LL;
  String.append(_:)(v51);
  char v52 = *(_BYTE *)(v0 + 120);
  v88._object = *(void **)(v0 + 112);
  LOBYTE(v89) = v52;
  uint64_t v53 = sub_41BC(&qword_A0F60);
  v54._uint64_t countAndFlagsBits = String.init<A>(describing:)(&v88._object, v53);
  Swift::String v55 = v54._object;
  String.append(_:)(v54);
  swift_bridgeObjectRelease(v55);
  v56._uint64_t countAndFlagsBits = 0x646E65202020200ALL;
  v56._object = (void *)0xEF3D734D656D6954LL;
  String.append(_:)(v56);
  char v57 = *(_BYTE *)(v0 + 136);
  v88._object = *(void **)(v0 + 128);
  LOBYTE(v89) = v57;
  v58._uint64_t countAndFlagsBits = String.init<A>(describing:)(&v88._object, v53);
  Swift::String v59 = v58._object;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60._object = (void *)0x80000000000771C0LL;
  v60._uint64_t countAndFlagsBits = 0xD000000000000014LL;
  String.append(_:)(v60);
  uint64_t v61 = *(void *)(v0 + 152);
  if (v61) {
    uint64_t v62 = *(void *)(v0 + 144);
  }
  else {
    uint64_t v62 = 0LL;
  }
  if (v61) {
    uint64_t v63 = *(void **)(v0 + 152);
  }
  else {
    uint64_t v63 = (void *)0xE000000000000000LL;
  }
  swift_bridgeObjectRetain(v61);
  v64._uint64_t countAndFlagsBits = v62;
  v64._object = v63;
  String.append(_:)(v64);
  swift_bridgeObjectRelease(v63);
  v65._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  v65._object = (void *)0x80000000000770F0LL;
  String.append(_:)(v65);
  uint64_t v66 = swift_bridgeObjectRetain(v42);
  v67._uint64_t countAndFlagsBits = Array.description.getter(v66, &type metadata for String);
  unint64_t v68 = v67._object;
  String.append(_:)(v67);
  swift_bridgeObjectRelease(v42);
  swift_bridgeObjectRelease(v68);
  v69._object = (void *)0x80000000000771E0LL;
  v69._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
  String.append(_:)(v69);
  uint64_t v70 = *(void *)(v0 + 176);
  if (v70)
  {
    uint64_t v71 = *(void *)(v0 + 168);
    uint64_t v72 = *(void **)(v0 + 176);
  }

  else
  {
    uint64_t v72 = (void *)0xE300000000000000LL;
    uint64_t v71 = 7104878LL;
  }

  swift_bridgeObjectRetain(v70);
  v73._uint64_t countAndFlagsBits = v71;
  v73._object = v72;
  String.append(_:)(v73);
  swift_bridgeObjectRelease(v72);
  v74._uint64_t countAndFlagsBits = 0xD000000000000023LL;
  v74._object = (void *)0x8000000000077200LL;
  String.append(_:)(v74);
  uint64_t v75 = *(char *)(v0 + 184);
  v76._uint64_t countAndFlagsBits = qword_71298[v75];
  char v77 = (void *)qword_712B8[v75];
  v76._object = v77;
  String.append(_:)(v76);
  swift_bridgeObjectRelease(v77);
  v78._uint64_t countAndFlagsBits = 0xD000000000000010LL;
  v78._object = (void *)0x8000000000077230LL;
  String.append(_:)(v78);
  char v79 = *(void **)(v0 + 192);
  if (v79 && (id v80 = [v79 entityName]) != 0)
  {
    char v81 = v80;
    id v82 = [v80 spokenPhrase];

    uint64_t v83 = static String._unconditionallyBridgeFromObjectiveC(_:)(v82);
    uint64_t v85 = v84;
  }

  else
  {
    uint64_t v85 = (void *)0xE300000000000000LL;
    uint64_t v83 = 7104878LL;
  }

  v86._uint64_t countAndFlagsBits = v83;
  v86._object = v85;
  String.append(_:)(v86);
  swift_bridgeObjectRelease(v85);
  return v92;
}

double sub_1D324@<D0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v6 = 0LL;
  memset(v5, 0, sizeof(v5));
  *(_BYTE *)a2 = 0;
  sub_1D4D0((uint64_t)v5, a2 + 8);
  *(void *)&double result = 2031623LL;
  *(_DWORD *)(a2 + 4sub_423C(v0 + 8) = 2031623;
  *(void *)(a2 + 56) = &_swiftEmptyArrayStorage;
  *(void *)(a2 + 64) = &_swiftEmptyArrayStorage;
  *(void *)(a2 + 72) = &_swiftEmptyArrayStorage;
  *(void *)(a2 + 80) = &_swiftEmptyArrayStorage;
  *(void *)(a2 + 8sub_423C(v0 + 8) = &_swiftEmptyArrayStorage;
  *(void *)(a2 + 96) = &_swiftEmptyArrayStorage;
  *(void *)(a2 + 104) = 0LL;
  *(void *)(a2 + 112) = 0LL;
  *(_BYTE *)(a2 + 120) = 1;
  *(void *)(a2 + 12sub_423C(v0 + 8) = 0LL;
  *(_BYTE *)(a2 + 136) = 1;
  *(void *)(a2 + 144) = 0LL;
  *(void *)(a2 + 152) = 0LL;
  *(void *)(a2 + 16sub_423C(v0 + 8) = 0LL;
  *(void *)(a2 + 176) = 0LL;
  *(void *)(a2 + 160) = &_swiftEmptyArrayStorage;
  *(_BYTE *)(a2 + 184) = a1;
  *(void *)(a2 + 192) = 0LL;
  return result;
}

__n128 sub_1D3B0@<Q0>( char a1@<W0>, uint64_t a2@<X1>, char a3@<W2>, char a4@<W3>, char a5@<W4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, __int128 a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, char a16, __int128 a17, __n128 a18, uint64_t a19, char a20, uint64_t a21)
{
  *(_BYTE *)a9 = a1;
  sub_1D4D0(a2, a9 + 8);
  *(_BYTE *)(a9 + 4sub_423C(v0 + 8) = a3;
  *(_BYTE *)(a9 + 49) = a4;
  *(_BYTE *)(a9 + 50) = a5;
  *(_BYTE *)(a9 + 51) = a6;
  *(void *)(a9 + 56) = a7;
  *(void *)(a9 + 64) = a8;
  *(_OWORD *)(a9 + 72) = a10;
  *(_OWORD *)(a9 + 8sub_423C(v0 + 8) = a11;
  *(void *)(a9 + 104) = a12;
  *(void *)(a9 + 112) = a13;
  *(_BYTE *)(a9 + 120) = a14 & 1;
  *(void *)(a9 + 12sub_423C(v0 + 8) = a15;
  *(_BYTE *)(a9 + 136) = a16 & 1;
  __n128 result = a18;
  *(_OWORD *)(a9 + 144) = a17;
  *(__n128 *)(a9 + 160) = a18;
  *(void *)(a9 + 176) = a19;
  *(_BYTE *)(a9 + 184) = a20;
  *(void *)(a9 + 192) = a21;
  return result;
}

uint64_t sub_1D4D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_41BC(&qword_A0F58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

void destroy for HomeCommunicationNLv4Intent(uint64_t a1)
{
  if (*(void *)(a1 + 32)) {
    sub_423C((void *)(a1 + 8));
  }
  swift_bridgeObjectRelease(*(void *)(a1 + 56));
  swift_bridgeObjectRelease(*(void *)(a1 + 64));
  swift_bridgeObjectRelease(*(void *)(a1 + 72));
  swift_bridgeObjectRelease(*(void *)(a1 + 80));
  swift_bridgeObjectRelease(*(void *)(a1 + 88));
  swift_bridgeObjectRelease(*(void *)(a1 + 96));
  swift_release(*(void *)(a1 + 104));
  swift_bridgeObjectRelease(*(void *)(a1 + 152));
  swift_bridgeObjectRelease(*(void *)(a1 + 160));
  swift_bridgeObjectRelease(*(void *)(a1 + 176));
}

uint64_t initializeWithCopy for HomeCommunicationNLv4Intent(uint64_t a1, char *a2)
{
  char v5 = *a2;
  uint64_t v4 = a2 + 8;
  *(_BYTE *)a1 = v5;
  uint64_t v6 = a1 + 8;
  uint64_t v7 = *((void *)a2 + 4);
  if (v7)
  {
    uint64_t v8 = *((void *)a2 + 5);
    *(void *)(a1 + 32) = v7;
    *(void *)(a1 + 40) = v8;
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(v6, (uint64_t)v4);
  }

  else
  {
    __int128 v9 = *((_OWORD *)v4 + 1);
    *(_OWORD *)uint64_t v6 = *(_OWORD *)v4;
    *(_OWORD *)(v6 + 16) = v9;
    *(void *)(v6 + 32) = *((void *)v4 + 4);
  }

  *(_DWORD *)(a1 + 4sub_423C(v0 + 8) = *((_DWORD *)a2 + 12);
  uint64_t v10 = *((void *)a2 + 7);
  uint64_t v11 = *((void *)a2 + 8);
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  uint64_t v12 = *((void *)a2 + 9);
  uint64_t v13 = *((void *)a2 + 10);
  *(void *)(a1 + 72) = v12;
  *(void *)(a1 + 80) = v13;
  uint64_t v14 = *((void *)a2 + 11);
  uint64_t v15 = *((void *)a2 + 12);
  *(void *)(a1 + 8sub_423C(v0 + 8) = v14;
  *(void *)(a1 + 96) = v15;
  uint64_t v16 = *((void *)a2 + 14);
  uint64_t v24 = *((void *)a2 + 13);
  *(_BYTE *)(a1 + 120) = a2[120];
  *(void *)(a1 + 104) = v24;
  *(void *)(a1 + 112) = v16;
  *(void *)(a1 + 12sub_423C(v0 + 8) = *((void *)a2 + 16);
  *(_BYTE *)(a1 + 136) = a2[136];
  uint64_t v17 = *((void *)a2 + 19);
  *(void *)(a1 + 144) = *((void *)a2 + 18);
  *(void *)(a1 + 152) = v17;
  uint64_t v19 = *((void *)a2 + 20);
  uint64_t v18 = *((void *)a2 + 21);
  *(void *)(a1 + 160) = v19;
  *(void *)(a1 + 16sub_423C(v0 + 8) = v18;
  uint64_t v20 = *((void *)a2 + 22);
  *(void *)(a1 + 176) = v20;
  *(_BYTE *)(a1 + 184) = a2[184];
  unint64_t v21 = (void *)*((void *)a2 + 24);
  *(void *)(a1 + 192) = v21;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRetain(v15);
  swift_retain(v24);
  swift_bridgeObjectRetain(v17);
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRetain(v20);
  id v22 = v21;
  return a1;
}

uint64_t assignWithCopy for HomeCommunicationNLv4Intent(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  uint64_t v4 = a1 + 8;
  char v5 = (__int128 *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 32);
  if (!*(void *)(a1 + 32))
  {
    if (v6)
    {
      *(void *)(a1 + 32) = v6;
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 8, a2 + 8);
      goto LABEL_8;
    }

void *initializeWithTake for HomeCommunicationNLv4Intent(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xC8uLL);
}

uint64_t assignWithTake for HomeCommunicationNLv4Intent(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  uint64_t v4 = a1 + 8;
  if (*(void *)(a1 + 32)) {
    sub_423C((void *)(a1 + 8));
  }
  __int128 v5 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)uint64_t v4 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(v4 + 16) = v5;
  *(void *)(v4 + 32) = *(void *)(a2 + 40);
  *(_BYTE *)(a1 + 4sub_423C(v0 + 8) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_BYTE *)(a1 + 50) = *(_BYTE *)(a2 + 50);
  *(_BYTE *)(a1 + 51) = *(_BYTE *)(a2 + 51);
  uint64_t v6 = *(void *)(a1 + 56);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease(v6);
  uint64_t v7 = *(void *)(a1 + 64);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease(v7);
  uint64_t v8 = *(void *)(a1 + 72);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease(v8);
  uint64_t v9 = *(void *)(a1 + 80);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease(v9);
  uint64_t v10 = *(void *)(a1 + 88);
  *(void *)(a1 + 8sub_423C(v0 + 8) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease(v10);
  uint64_t v11 = *(void *)(a1 + 96);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease(v11);
  uint64_t v12 = *(void *)(a1 + 104);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_release(v12);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(void *)(a1 + 12sub_423C(v0 + 8) = *(void *)(a2 + 128);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  uint64_t v13 = *(void *)(a2 + 152);
  uint64_t v14 = *(void *)(a1 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v13;
  swift_bridgeObjectRelease(v14);
  uint64_t v15 = *(void *)(a1 + 160);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRelease(v15);
  uint64_t v16 = *(void *)(a2 + 176);
  uint64_t v17 = *(void *)(a1 + 176);
  *(void *)(a1 + 16sub_423C(v0 + 8) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v16;
  swift_bridgeObjectRelease(v17);
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  uint64_t v18 = *(void **)(a1 + 192);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);

  return a1;
}

uint64_t getEnumTagSinglePayload for HomeCommunicationNLv4Intent(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 200))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }

    else
    {
      unint64_t v2 = *(void *)(a1 + 56);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }

  else
  {
    LODWORD(v2) = -1;
  }

  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HomeCommunicationNLv4Intent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 16sub_423C(v0 + 8) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 8sub_423C(v0 + 8) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + sub_423C(v0 + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 200) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 56) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 200) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for HomeCommunicationNLv4Intent()
{
  return &type metadata for HomeCommunicationNLv4Intent;
}

uint64_t sub_1DAEC()
{
  return *v0;
}

uint64_t sub_1DAF4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC48(v1 + 8, a1);
}

uint64_t sub_1DB00()
{
  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t sub_1DB08()
{
  return *(unsigned __int8 *)(v0 + 49);
}

uint64_t sub_1DB10()
{
  return *(unsigned __int8 *)(v0 + 51);
}

uint64_t sub_1DB18()
{
  return swift_bridgeObjectRetain(*(void *)(v0 + 56));
}

uint64_t sub_1DB20()
{
  return swift_bridgeObjectRetain(*(void *)(v0 + 72));
}

uint64_t sub_1DB28()
{
  return swift_bridgeObjectRetain(*(void *)(v0 + 80));
}

uint64_t sub_1DB30()
{
  return swift_bridgeObjectRetain(*(void *)(v0 + 88));
}

uint64_t sub_1DB38()
{
  return swift_bridgeObjectRetain(*(void *)(v0 + 96));
}

uint64_t sub_1DB40()
{
  return *(void *)(v0 + 112);
}

uint64_t sub_1DB4C()
{
  return *(void *)(v0 + 128);
}

uint64_t sub_1DB58()
{
  uint64_t v1 = *(void *)(v0 + 144);
  swift_bridgeObjectRetain(*(void *)(v0 + 152));
  return v1;
}

uint64_t sub_1DB84()
{
  return swift_bridgeObjectRetain(*(void *)(v0 + 160));
}

uint64_t sub_1DB8C()
{
  uint64_t v1 = *(void *)(v0 + 168);
  swift_bridgeObjectRetain(*(void *)(v0 + 176));
  return v1;
}

uint64_t sub_1DBB8()
{
  return *(unsigned __int8 *)(v0 + 184);
}

void *sub_1DBC0()
{
  uint64_t v1 = *(void **)(v0 + 192);
  id v2 = v1;
  return v1;
}

unint64_t sub_1DBE8(uint64_t a1)
{
  unint64_t result = sub_1DC0C();
  *(void *)(a1 + sub_423C(v0 + 8) = result;
  return result;
}

unint64_t sub_1DC0C()
{
  unint64_t result = qword_A0FA8;
  if (!qword_A0FA8)
  {
    unint64_t result = swift_getWitnessTable(&unk_7124C, &type metadata for HomeCommunicationNLv4Intent);
    atomic_store(result, (unint64_t *)&qword_A0FA8);
  }

  return result;
}

uint64_t sub_1DC48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_41BC(&qword_A0F58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t storeEnumTagSinglePayload for UnsupportedHomeCommunication( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xF9) {
    return ((uint64_t (*)(void))((char *)&loc_1DCDC + 4 * byte_712E5[v4]))();
  }
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1DD10 + 4 * byte_712E0[v4]))();
}

uint64_t sub_1DD10(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DD18(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x1DD20LL);
  }
  return result;
}

uint64_t sub_1DD2C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x1DD34LL);
  }
  *(_BYTE *)unint64_t result = a2 + 6;
  return result;
}

uint64_t sub_1DD38(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DD40(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UnsupportedHomeCommunication()
{
  return &type metadata for UnsupportedHomeCommunication;
}

void sub_1DD5C(uint64_t a1, uint64_t a2)
{
}

void sub_1DD68(uint64_t a1, uint64_t a2)
{
}

void sub_1DD74(uint64_t a1, uint64_t a2)
{
}

void sub_1DD84()
{
  BOOL v5 = v5 && v0 == v1;
  if (!v5) {
    sub_1ED38(v2, v3, v4);
  }
  sub_18FB8();
  sub_D304();
  sub_9304();
}

void sub_1DDDC(char a1, uint64_t a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0) {
    uint64_t v3 = 0x79726576696C6564LL;
  }
  else {
    uint64_t v3 = 0x65636E756F6E6E61LL;
  }
  if (v2) {
    unint64_t v4 = 0xEC000000746E656DLL;
  }
  else {
    unint64_t v4 = 0xEF6572756C696146LL;
  }
  if ((a2 & 1) != 0) {
    uint64_t v5 = 0x79726576696C6564LL;
  }
  else {
    uint64_t v5 = 0x65636E756F6E6E61LL;
  }
  if ((a2 & 1) != 0) {
    unint64_t v6 = 0xEF6572756C696146LL;
  }
  else {
    unint64_t v6 = 0xEC000000746E656DLL;
  }
  if (v3 != v5 || v4 != v6) {
    sub_1ED38(v3, a2, v5);
  }
  sub_18FB8();
  sub_D304();
  sub_9304();
}

void sub_1DE70(uint64_t a1, uint64_t a2)
{
}

void sub_1DE7C(uint64_t a1, uint64_t a2)
{
}

void sub_1DE88(char a1)
{
  __asm { BR              X12 }

uint64_t sub_1DEE4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(unint64_t))((char *)sub_1DF38 + 4 * byte_712EE[a2]))(0xD000000000000010LL);
}

void sub_1DF38(uint64_t a1, uint64_t a2)
{
  if (a1 != 0xD000000000000010LL || v3 != ((v2 - 32) | 0x8000000000000000LL)) {
    sub_1ED38(a1, a2, 0xD000000000000010LL);
  }
  sub_18FB8();
  sub_D304();
  sub_9304();
}

void sub_1DF98(char a1, uint64_t a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0) {
    uint64_t v3 = 0x746165706572LL;
  }
  else {
    uint64_t v3 = 1684104562LL;
  }
  if (v2) {
    unint64_t v4 = 0xE400000000000000LL;
  }
  else {
    unint64_t v4 = 0xE600000000000000LL;
  }
  if ((a2 & 1) != 0) {
    uint64_t v5 = 0x746165706572LL;
  }
  else {
    uint64_t v5 = 1684104562LL;
  }
  if ((a2 & 1) != 0) {
    unint64_t v6 = 0xE600000000000000LL;
  }
  else {
    unint64_t v6 = 0xE400000000000000LL;
  }
  if (v3 != v5 || v4 != v6) {
    sub_1ED38(v3, a2, v5);
  }
  sub_18FB8();
  sub_D304();
  sub_9304();
}

uint64_t sub_1E00C(char a1, char a2)
{
  if ((a1 & 1) != 0) {
    uint64_t v2 = 0x726F727265LL;
  }
  else {
    uint64_t v2 = 0x6775626564LL;
  }
  if ((a2 & 1) != 0) {
    uint64_t v3 = 0x726F727265LL;
  }
  else {
    uint64_t v3 = 0x6775626564LL;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = _stringCompareWithSmolCheck(_:_:expecting:)(v2, 0xE500000000000000LL, v3, 0xE500000000000000LL, 0LL);
  }
  swift_bridgeObjectRelease_n(0xE500000000000000LL, 2LL);
  return v4 & 1;
}

void sub_1E080(uint64_t a1, uint64_t a2)
{
}

void sub_1E08C()
{
  BOOL v5 = v5 && v0 == v1;
  if (!v5) {
    sub_1ED38(v2, v3, v4);
  }
  sub_18FB8();
  sub_D304();
  sub_9304();
}

void sub_1E0E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3();
  uint64_t v7 = v6;
  uint64_t v8 = ((uint64_t (*)(uint64_t))a3)(a2);
  if (v5 != v8 || v7 != v9) {
    sub_1ED38(v5, v9, v8);
  }
  sub_18FB8();
  sub_D304();
  sub_9304();
}

uint64_t sub_1E150()
{
  if (v6 == v4 && v7 == v5) {
    char v2 = 1;
  }
  else {
    char v2 = sub_1ED38(v6, v0, v4);
  }
  sub_18FB8();
  sub_D304();
  return v2 & 1;
}

void sub_1E1DC(char a1)
{
}

void sub_1E1E8(uint64_t a1)
{
}

void sub_1E1F4()
{
}

void sub_1E208()
{
}

void sub_1E214()
{
}

void sub_1E228()
{
}

void sub_1E234(uint64_t a1)
{
}

void sub_1E240(uint64_t a1)
{
  uint64_t v1 = sub_1236C(a1);
  sub_1EDBC((uint64_t)v1);
  sub_1ED58();
  sub_12378();
}

void sub_1E26C(char a1)
{
}

void sub_1E278(uint64_t a1)
{
}

void sub_1E284(char a1)
{
}

void sub_1E290(uint64_t a1)
{
}

void sub_1E29C()
{
}

void sub_1E2B4(uint64_t a1)
{
}

void sub_1E2E8(uint64_t a1)
{
}

void sub_1E2F4(uint64_t a1)
{
}

void sub_1E300(uint64_t a1)
{
}

void sub_1E30C(uint64_t a1)
{
}

void sub_1E318(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v4 = a2(a1);
  sub_1ED50((uint64_t)v5, v4);
  sub_18FB8();
  sub_1ED58();
  sub_12378();
}

void sub_1E360(char a1)
{
}

uint64_t sub_1E36C(uint64_t a1, uint64_t a2)
{
  return sub_1E5F4(a1, a2, (uint64_t (*)(uint64_t))sub_6201C);
}

uint64_t sub_1E378(uint64_t a1, uint64_t a2)
{
  return sub_1E5F4(a1, a2, (uint64_t (*)(uint64_t))sub_511A8);
}

uint64_t sub_1E384(uint64_t a1, uint64_t a2)
{
  return sub_1E5F4(a1, a2, (uint64_t (*)(uint64_t))sub_388F0);
}

uint64_t sub_1E390(uint64_t a1)
{
  return String.hash(into:)(a1, 0x7070416E65704FLL, 0xE700000000000000LL);
}

uint64_t sub_1E3A8(uint64_t a1, char a2)
{
  uint64_t v2 = qword_71420[a2];
  sub_1ED50(a1, qword_71400[a2]);
  return sub_1ED48(v2);
}

uint64_t sub_1E3E0(uint64_t a1, char a2)
{
  BOOL v2 = (a2 & 1) == 0;
  if ((a2 & 1) != 0) {
    uint64_t v3 = 0x79726576696C6564LL;
  }
  else {
    uint64_t v3 = 0x65636E756F6E6E61LL;
  }
  if (v2) {
    uint64_t v4 = 0xEC000000746E656DLL;
  }
  else {
    uint64_t v4 = 0xEF6572756C696146LL;
  }
  sub_1ED50(a1, v3);
  return sub_1ED48(v4);
}

uint64_t sub_1E444(uint64_t a1, uint64_t a2)
{
  return sub_1E5F4(a1, a2, (uint64_t (*)(uint64_t))sub_5B144);
}

uint64_t sub_1E450(uint64_t a1, uint64_t a2)
{
  return sub_1E5F4(a1, a2, (uint64_t (*)(uint64_t))sub_5BF38);
}

void sub_1E45C(uint64_t a1, char a2)
{
  __asm { BR              X10 }

uint64_t sub_1E4A4(uint64_t a1)
{
  return sub_1ED48(0x80000000000759C0LL);
}

uint64_t sub_1E4F0(uint64_t a1, char a2)
{
  BOOL v2 = (a2 & 1) == 0;
  if ((a2 & 1) != 0) {
    uint64_t v3 = 0x746165706572LL;
  }
  else {
    uint64_t v3 = 1684104562LL;
  }
  if (v2) {
    uint64_t v4 = 0xE400000000000000LL;
  }
  else {
    uint64_t v4 = 0xE600000000000000LL;
  }
  sub_1ED50(a1, v3);
  return sub_1ED48(v4);
}

uint64_t sub_1E534(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0) {
    uint64_t v2 = 0x726F727265LL;
  }
  else {
    uint64_t v2 = 0x6775626564LL;
  }
  String.hash(into:)(a1, v2, 0xE500000000000000LL);
  return swift_bridgeObjectRelease(0xE500000000000000LL);
}

uint64_t sub_1E570(uint64_t a1, uint64_t a2)
{
  return sub_1E5F4(a1, a2, (uint64_t (*)(uint64_t))sub_26754);
}

uint64_t sub_1E57C(uint64_t a1)
{
  return String.hash(into:)(a1, 0x74706D6F7270LL, 0xE600000000000000LL);
}

uint64_t sub_1E590(uint64_t a1)
{
  return String.hash(into:)(a1, 0x796C706572LL, 0xE500000000000000LL);
}

uint64_t sub_1E5A4(uint64_t a1)
{
  return sub_1ED9C(a1, 1886352499LL);
}

uint64_t sub_1E5B0(uint64_t a1)
{
  return sub_1ED9C(a1, 2036427888LL);
}

uint64_t sub_1E5BC(uint64_t a1, char a2)
{
  uint64_t v2 = qword_71458[a2];
  sub_1ED50(a1, qword_71440[a2]);
  return sub_1ED48(v2);
}

uint64_t sub_1E5F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = a3(a2);
  uint64_t v6 = v5;
  String.hash(into:)(a1, v4, v5);
  return sub_1ED48(v6);
}

void sub_1E630(uint64_t a1, char a2)
{
}

void sub_1E67C(uint64_t a1)
{
}

void sub_1E688(uint64_t a1)
{
}

void sub_1E694(uint64_t a1)
{
}

void sub_1E6A8(uint64_t a1)
{
}

void sub_1E6BC(uint64_t a1, uint64_t a2)
{
}

void sub_1E6C8(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0) {
    uint64_t v3 = 0x726F727265LL;
  }
  else {
    uint64_t v3 = 0x6775626564LL;
  }
  String.hash(into:)(v4, v3, 0xE500000000000000LL);
  swift_bridgeObjectRelease(0xE500000000000000LL);
  sub_1ED58();
  sub_12378();
}

void sub_1E720(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0) {
    uint64_t v3 = 0x746165706572LL;
  }
  else {
    uint64_t v3 = 1684104562LL;
  }
  sub_1ED50((uint64_t)v4, v3);
  sub_18FB8();
  sub_1ED58();
  sub_12378();
}

void sub_1E778(uint64_t a1)
{
}

void sub_1E784(uint64_t a1, uint64_t a2)
{
}

void sub_1E790(uint64_t a1, uint64_t a2)
{
}

void sub_1E79C(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0) {
    uint64_t v3 = 0x79726576696C6564LL;
  }
  else {
    uint64_t v3 = 0x65636E756F6E6E61LL;
  }
  sub_1ED50((uint64_t)v4, v3);
  sub_18FB8();
  sub_1ED58();
  sub_12378();
}

void sub_1E814(uint64_t a1)
{
}

void sub_1E820(uint64_t a1)
{
  uint64_t v1 = sub_1ED84(a1);
  sub_1EDBC((uint64_t)v1);
  sub_1ED58();
  sub_12378();
}

void sub_1E84C(uint64_t a1)
{
}

void sub_1E864(uint64_t a1, uint64_t a2)
{
}

void sub_1E898(uint64_t a1, uint64_t a2)
{
}

void sub_1E8A4(uint64_t a1, uint64_t a2)
{
}

void sub_1E8B0(uint64_t a1, uint64_t a2)
{
}

void sub_1E8BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5 = a3(a2);
  sub_1ED50((uint64_t)v6, v5);
  sub_18FB8();
  sub_1ED58();
  sub_12378();
}

void sub_1E904(void *a1)
{
  uint64_t v1 = a1[3];
  uint64_t v2 = a1[4];
  sub_8504(a1, v1);
  uint64_t v3 = (char *)sub_1E954 + 4 * byte_712F6[(*(unsigned __int8 (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2)];
  __asm { BR              X10 }

id sub_1E954()
{
  if (qword_9F7F8 != -1) {
    swift_once(&qword_9F7F8, sub_179EC);
  }
  return (id)qword_A0D60;
}

uint64_t sub_1EA70(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1EAA8 + 4 * byte_712FD[a1]))( 0xD000000000000012LL,  0x8000000000075C30LL);
}

uint64_t sub_1EAA8(uint64_t a1)
{
  return a1 + 7;
}

uint64_t sub_1EB00(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1EB38 + 4 * byte_71304[a1]))( 0xD000000000000012LL,  0x8000000000075C30LL);
}

uint64_t sub_1EB38(uint64_t a1)
{
  return a1 + 7;
}

unint64_t sub_1EB90(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_93768, v2);
  sub_18FB8();
  if (v3 >= 7) {
    return 7LL;
  }
  else {
    return v3;
  }
}

uint64_t sub_1EBD4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return v2 & 1;
}

void sub_1EBFC()
{
}

uint64_t sub_1EC1C(uint64_t a1)
{
  return sub_1E5F4(a1, *v1, (uint64_t (*)(uint64_t))sub_1EB00);
}

void sub_1EC3C(uint64_t a1)
{
}

unint64_t sub_1EC5C@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result = sub_1EB90(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1EC88@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1EB00(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1ECB0()
{
  return sub_1EA70(*v0);
}

unint64_t sub_1ECBC()
{
  unint64_t result = qword_A0FB0;
  if (!qword_A0FB0)
  {
    unint64_t result = swift_getWitnessTable(&unk_713D0, &type metadata for UnsupportedHomeCommunication);
    atomic_store(result, (unint64_t *)&qword_A0FB0);
  }

  return result;
}

unint64_t sub_1ECF8()
{
  unint64_t result = qword_A0FB8;
  if (!qword_A0FB8)
  {
    uint64_t v1 = type metadata accessor for InputOrigin(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for InputOrigin, v1);
    atomic_store(result, (unint64_t *)&qword_A0FB8);
  }

  return result;
}

uint64_t sub_1ED38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _stringCompareWithSmolCheck(_:_:expecting:)(a1, v3, a3, v4, 0LL);
}

uint64_t sub_1ED48(uint64_t a1)
{
  return swift_bridgeObjectRelease(a1);
}

uint64_t sub_1ED50(uint64_t a1, uint64_t a2)
{
  return String.hash(into:)(a1, a2, v2);
}

Swift::Int sub_1ED58()
{
  return Hasher._finalize()();
}

uint64_t sub_1ED60()
{
  return 0x726F707075736E75LL;
}

void *sub_1ED84(uint64_t a1, ...)
{
  return Hasher.init(_seed:)((uint64_t *)va);
}

void sub_1ED8C(uint64_t a1)
{
}

void sub_1ED94(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1ED9C(uint64_t a1, uint64_t a2)
{
  return String.hash(into:)(a1, a2, 0xE400000000000000LL);
}

  ;
}

uint64_t sub_1EDBC(uint64_t a1, ...)
{
  return v1(va, v2);
}

uint64_t sub_1EDC8()
{
  return dispatch thunk of RawRepresentable.rawValue.getter(v0, v1);
}

unint64_t sub_1EDD4(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_93670, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3) {
    return 3LL;
  }
  else {
    return v3;
  }
}

void *HomeCommunicationSnippetModel.bundleName.unsafeMutableAddressor()
{
  return &static HomeCommunicationSnippetModel.bundleName;
}

unint64_t static HomeCommunicationSnippetModel.bundleName.getter()
{
  return 0xD000000000000019LL;
}

uint64_t HomeCommunicationSnippetModel.snippetHidden(for:idiom:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2;
  uint64_t v7 = type metadata accessor for DeviceIdiom(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = sub_219B4();
  uint64_t v10 = type metadata accessor for HomeCommunicationSnippetModel(v9);
  sub_1736C();
  __chkstk_darwin(v11);
  sub_1BDE0();
  sub_1EFA0(v5, v3);
  if (swift_getEnumCaseMultiPayload(v3, v10) == 1)
  {
    (*(void (**)(uint64_t, void, uint64_t))(v8 + 104))(v4, enum case for DeviceIdiom.car(_:), v7);
    sub_A880( &qword_A0FC0,  (uint64_t (*)(uint64_t))&type metadata accessor for DeviceIdiom,  (uint64_t)&protocol conformance descriptor for DeviceIdiom);
    char v12 = dispatch thunk of static Equatable.== infix(_:_:)(a2, v4, v7);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v4, v7);
    char v13 = v12 ^ 1;
  }

  else
  {
    char v13 = 0;
  }

  sub_11E94(v3, type metadata accessor for HomeCommunicationSnippetModel);
  return v13 & 1;
}

uint64_t type metadata accessor for HomeCommunicationSnippetModel(uint64_t a1)
{
  uint64_t result = qword_A10F0;
  if (!qword_A10F0) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HomeCommunicationSnippetModel);
  }
  return result;
}

uint64_t sub_1EFA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HomeCommunicationSnippetModel(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

void HomeCommunicationSnippetModel.description.getter()
{
  uint64_t v3 = sub_219B4();
  type metadata accessor for HomeAppLaunchModel(v3);
  sub_1736C();
  __chkstk_darwin(v4);
  uint64_t v5 = sub_219D0();
  uint64_t v6 = type metadata accessor for HomeCommunicationSnippetModel(v5);
  sub_1736C();
  __chkstk_darwin(v7);
  sub_9298();
  uint64_t v10 = v9 - v8;
  sub_1EFA0(v0, v9 - v8);
  uint64_t v11 = (char *)sub_1F0C8 + 4 * byte_71470[swift_getEnumCaseMultiPayload(v10, v6)];
  __asm { BR              X10 }

uint64_t sub_1F0C8()
{
  v3._uint64_t countAndFlagsBits = 0x6E75614C7070612ELL;
  v3._object = (void *)0xEB00000000286863LL;
  String.append(_:)(v3);
  _print_unlocked<A, B>(_:_:)(v0, v2 - 96);
  uint64_t v4 = *(void *)(v2 - 96);
  sub_11E94(v0, type metadata accessor for HomeAppLaunchModel);
  return v4;
}

uint64_t sub_1F29C(uint64_t a1, unint64_t a2)
{
  BOOL v3 = a1 == 0x636E75614C707061LL && a2 == 0xE900000000000068LL;
  if (v3
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0x636E75614C707061LL, 0xE900000000000068LL, a1, a2, 0LL) & 1) != 0)
  {
    swift_bridgeObjectRelease(a2);
    return 0LL;
  }

  if (a1 == 0xD000000000000016LL)
  {
    unint64_t v6 = 0x8000000000077300LL;
    if (a2 == 0x8000000000077300LL) {
      goto LABEL_11;
    }
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000016LL, 0x8000000000077300LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v6 = a2;
LABEL_11:
    swift_bridgeObjectRelease(v6);
    return 1LL;
  }

  if (a1 == 0xD000000000000012LL)
  {
    unint64_t v7 = 0x8000000000077320LL;
    if (a2 == 0x8000000000077320LL) {
      goto LABEL_16;
    }
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000012LL, 0x8000000000077320LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v7 = a2;
LABEL_16:
    swift_bridgeObjectRelease(v7);
    return 2LL;
  }

  if (a1 == 0xD00000000000001ALL && a2 == 0x8000000000077340LL)
  {
    swift_bridgeObjectRelease(0x8000000000077340LL);
    return 3LL;
  }

  else
  {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001ALL, 0x8000000000077340LL, a1, a2, 0LL);
    swift_bridgeObjectRelease(a2);
    if ((v8 & 1) != 0) {
      return 3LL;
    }
    else {
      return 4LL;
    }
  }

uint64_t sub_1F438()
{
  return 4LL;
}

uint64_t sub_1F440(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1F47C + 4 * byte_71474[a1]))( 0xD000000000000016LL,  0x8000000000077300LL);
}

uint64_t sub_1F47C()
{
  return 0x636E75614C707061LL;
}

unint64_t sub_1F498()
{
  return 0xD000000000000012LL;
}

uint64_t sub_1F4B4()
{
  return v0 + 8;
}

uint64_t sub_1F4CC()
{
  return 12383LL;
}

uint64_t sub_1F4D8(uint64_t a1, uint64_t a2)
{
  if (a1 == 12383 && a2 == 0xE200000000000000LL)
  {
    sub_18FB8();
    char v4 = 0;
  }

  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)(12383LL, 0xE200000000000000LL, a1, a2, 0LL);
    sub_18FB8();
    char v4 = v3 ^ 1;
  }

  return v4 & 1;
}

void sub_1F53C()
{
}

void sub_1F56C()
{
}

uint64_t sub_1F588(uint64_t a1)
{
  unint64_t v2 = sub_1FD74();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1F5B0(uint64_t a1)
{
  unint64_t v2 = sub_1FD74();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1F5D8(uint64_t a1)
{
  unint64_t v2 = sub_1FD38();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1F600(uint64_t a1)
{
  unint64_t v2 = sub_1FD38();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1F628()
{
  return sub_1F440(*v0);
}

uint64_t sub_1F630@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = sub_1F29C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1F654@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result = sub_1F438();
  *a1 = result;
  return result;
}

uint64_t sub_1F678(uint64_t a1)
{
  unint64_t v2 = sub_1FC48();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1F6A0(uint64_t a1)
{
  unint64_t v2 = sub_1FC48();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1F6C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = sub_1F4D8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1F6F0()
{
  return sub_8248();
}

uint64_t sub_1F708@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result = sub_6414();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1F730(uint64_t a1)
{
  unint64_t v2 = sub_1FCFC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1F758(uint64_t a1)
{
  unint64_t v2 = sub_1FCFC();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1F780()
{
}

uint64_t sub_1F7AC(uint64_t a1)
{
  unint64_t v2 = sub_1FC84();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1F7D4(uint64_t a1)
{
  unint64_t v2 = sub_1FC84();
  return CodingKey.debugDescription.getter(a1, v2);
}

void HomeCommunicationSnippetModel.encode(to:)(void *a1)
{
  uint64_t v2 = sub_41BC(&qword_A0FC8);
  v28[14] = *(void *)(v2 - 8);
  v28[15] = v2;
  sub_1736C();
  __chkstk_darwin(v3);
  sub_172F4();
  v28[13] = v4;
  uint64_t v5 = sub_41BC(&qword_A0FD0);
  v28[11] = *(void *)(v5 - 8);
  v28[12] = v5;
  sub_1736C();
  __chkstk_darwin(v6);
  sub_2197C(v7, v28[0]);
  v28[8] = type metadata accessor for HomeDisambiguationModel(0LL);
  sub_1736C();
  __chkstk_darwin(v8);
  sub_21998(v9, v28[0]);
  uint64_t v10 = sub_41BC(&qword_A0FD8);
  v28[6] = *(void *)(v10 - 8);
  v28[7] = v10;
  sub_1736C();
  __chkstk_darwin(v11);
  sub_172F4();
  v28[5] = v12;
  void v28[3] = type metadata accessor for CarPlayIntercomControlModel(0LL);
  sub_1736C();
  __chkstk_darwin(v13);
  sub_172F4();
  _BYTE v28[4] = v14;
  uint64_t v15 = sub_41BC(&qword_A0FE0);
  v28[1] = *(void *)(v15 - 8);
  __int128 v28[2] = v15;
  sub_1736C();
  __chkstk_darwin(v16);
  sub_9298();
  type metadata accessor for HomeAppLaunchModel(0LL);
  sub_1736C();
  __chkstk_darwin(v17);
  sub_9298();
  uint64_t v18 = type metadata accessor for HomeCommunicationSnippetModel(0LL);
  sub_1736C();
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)v28 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = sub_41BC(&qword_A0FE8);
  v28[16] = *(void *)(v22 - 8);
  v28[17] = v22;
  sub_1736C();
  __chkstk_darwin(v23);
  sub_9298();
  uint64_t v25 = a1[3];
  uint64_t v24 = a1[4];
  sub_8504(a1, v25);
  unint64_t v26 = sub_1FC48();
  dispatch thunk of Encoder.container<A>(keyedBy:)( &type metadata for HomeCommunicationSnippetModel.CodingKeys,  &type metadata for HomeCommunicationSnippetModel.CodingKeys,  v26,  v25,  v24);
  sub_1EFA0(v28[23], (uint64_t)v21);
  uint64_t v27 = (char *)sub_1FA2C + 4 * byte_71478[swift_getEnumCaseMultiPayload(v21, v18)];
  __asm { BR              X10 }

void sub_1FA2C()
{
  *(_BYTE *)(v5 - 104) = 0;
  sub_1FD74();
  sub_218F0((uint64_t)&type metadata for HomeCommunicationSnippetModel.AppLaunchCodingKeys, v5 - 104);
  sub_21A38(&qword_A05E0, v6, (uint64_t)&protocol conformance descriptor for HomeAppLaunchModel);
  uint64_t v7 = *(void *)(v5 - 240);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v4, v9, v7, v3, v8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 248) + 8LL))(v2, v7);
  sub_11E94(v4, type metadata accessor for HomeAppLaunchModel);
  sub_63C4(v1, *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 128) + 8LL));
  sub_92C0();
}

unint64_t sub_1FC48()
{
  unint64_t result = qword_A0FF0;
  if (!qword_A0FF0)
  {
    unint64_t result = swift_getWitnessTable(&unk_71B20, &type metadata for HomeCommunicationSnippetModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_A0FF0);
  }

  return result;
}

unint64_t sub_1FC84()
{
  unint64_t result = qword_A0FF8;
  if (!qword_A0FF8)
  {
    unint64_t result = swift_getWitnessTable( &unk_71AD0,  &type metadata for HomeCommunicationSnippetModel.SendAnnouncementNeedsValueCodingKeys);
    atomic_store(result, (unint64_t *)&qword_A0FF8);
  }

  return result;
}

unint64_t sub_1FCC0()
{
  unint64_t result = qword_A1000;
  if (!qword_A1000)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for SendAnnouncementNeedsValueModel,  &type metadata for SendAnnouncementNeedsValueModel);
    atomic_store(result, (unint64_t *)&qword_A1000);
  }

  return result;
}

unint64_t sub_1FCFC()
{
  unint64_t result = qword_A1008;
  if (!qword_A1008)
  {
    unint64_t result = swift_getWitnessTable( &unk_71A80,  &type metadata for HomeCommunicationSnippetModel.HomeDisambiguationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_A1008);
  }

  return result;
}

unint64_t sub_1FD38()
{
  unint64_t result = qword_A1018;
  if (!qword_A1018)
  {
    unint64_t result = swift_getWitnessTable( &unk_71A30,  &type metadata for HomeCommunicationSnippetModel.CarPlayIntercomControlCodingKeys);
    atomic_store(result, (unint64_t *)&qword_A1018);
  }

  return result;
}

unint64_t sub_1FD74()
{
  unint64_t result = qword_A1020;
  if (!qword_A1020)
  {
    unint64_t result = swift_getWitnessTable(&unk_719E0, &type metadata for HomeCommunicationSnippetModel.AppLaunchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_A1020);
  }

  return result;
}

void HomeCommunicationSnippetModel.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v53 = a2;
  uint64_t v56 = sub_41BC(&qword_A1028);
  v51[12] = *(void *)(v56 - 8);
  sub_1736C();
  __chkstk_darwin(v4);
  sub_2197C(v5, v51[0]);
  uint64_t v52 = sub_41BC(&qword_A1030);
  v51[11] = *(void *)(v52 - 8);
  sub_1736C();
  __chkstk_darwin(v6);
  sub_21998(v7, v51[0]);
  uint64_t v8 = sub_41BC(&qword_A1038);
  v51[9] = *(void *)(v8 - 8);
  v51[10] = v8;
  sub_1736C();
  __chkstk_darwin(v9);
  sub_172F4();
  v51[14] = v10;
  uint64_t v11 = sub_41BC(&qword_A1040);
  v51[7] = *(void *)(v11 - 8);
  v51[8] = v11;
  sub_1736C();
  __chkstk_darwin(v12);
  sub_172F4();
  v51[13] = v13;
  uint64_t v57 = sub_41BC(&qword_A1048);
  uint64_t v54 = *(void *)(v57 - 8);
  sub_1736C();
  __chkstk_darwin(v14);
  uint64_t v15 = sub_219D0();
  uint64_t v55 = type metadata accessor for HomeCommunicationSnippetModel(v15);
  sub_1736C();
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v19 = (char *)v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = (char *)v51 - v21;
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v25 = (char *)v51 - v24;
  uint64_t v26 = __chkstk_darwin(v23);
  uint64_t v28 = (char *)v51 - v27;
  __chkstk_darwin(v26);
  uint64_t v30 = (char *)v51 - v29;
  uint64_t v31 = a1[3];
  uint64_t v32 = a1[4];
  Swift::String v58 = a1;
  sub_8504(a1, v31);
  unint64_t v33 = sub_1FC48();
  uint64_t v34 = v59;
  dispatch thunk of Decoder.container<A>(keyedBy:)( &type metadata for HomeCommunicationSnippetModel.CodingKeys,  &type metadata for HomeCommunicationSnippetModel.CodingKeys,  v33,  v31,  v32);
  if (!v34)
  {
    _BYTE v51[3] = (uint64_t)v28;
    v51[4] = (uint64_t)v25;
    v51[1] = (uint64_t)v19;
    v51[2] = (uint64_t)v22;
    v51[5] = (uint64_t)v30;
    uint64_t v35 = v55;
    uint64_t v59 = v2;
    uint64_t v36 = KeyedDecodingContainer.allKeys.getter(v57);
    uint64_t v37 = v36;
    uint64_t v38 = *(void *)(v36 + 16);
    if (v38)
    {
      v51[6] = 0LL;
      uint64_t v39 = *(unsigned __int8 *)(v36 + 32);
      sub_2186C(1LL, v38, v36, v36 + 32, 0LL, (2 * v38) | 1);
      uint64_t v41 = v40;
      unint64_t v43 = v42;
      swift_bridgeObjectRelease(v37);
      if (v41 == v43 >> 1) {
        __asm { BR              X9 }
      }
    }

    uint64_t v44 = type metadata accessor for DecodingError(0LL);
    swift_allocError(v44, &protocol witness table for DecodingError, 0LL, 0LL);
    Swift::String v46 = v45;
    sub_41BC(&qword_A1050);
    *Swift::String v46 = v35;
    uint64_t v47 = v57;
    uint64_t v48 = v59;
    uint64_t v49 = KeyedDecodingContainer.codingPath.getter(v57);
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)( v49,  0xD00000000000002BLL,  0x80000000000772D0LL,  0LL);
    uint64_t v50 = (*(uint64_t (**)(uint64_t *, void, uint64_t))(*(void *)(v44 - 8) + 104LL))( v46,  enum case for DecodingError.typeMismatch(_:),  v44);
    swift_willThrow(v50);
    sub_21904();
    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v48, v47);
  }

  sub_423C(v58);
  sub_92C0();
}

void sub_201C0()
{
  *(_BYTE *)(v4 - 112) = 1;
  sub_1FD38();
  sub_2191C((uint64_t)&type metadata for HomeCommunicationSnippetModel.CarPlayIntercomControlCodingKeys, v4 - 112);
  if (!v0)
  {
    uint64_t v5 = type metadata accessor for CarPlayIntercomControlModel(0LL);
    sub_A880( &qword_A0080,  type metadata accessor for CarPlayIntercomControlModel,  (uint64_t)&protocol conformance descriptor for CarPlayIntercomControlModel);
    sub_219FC(v5, v6);
    *(void *)(v4 - 256) = 0LL;
    sub_2190C(*(void *)(v4 - 232));
    sub_21904();
    sub_63C4(v2, *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 152) + 8LL));
    uint64_t v7 = *(void *)(v4 - 272);
    swift_storeEnumTagMultiPayload(v7, v3, 1LL);
    sub_21A0C(v7);
    sub_20550(v7, v1, type metadata accessor for HomeCommunicationSnippetModel);
    sub_423C(*(void **)(v4 - 120));
    JUMPOUT(0x201B0LL);
  }

  sub_21904();
  JUMPOUT(0x202A8LL);
}

void sub_20258()
{
  *(_BYTE *)(v3 - 112) = 2;
  sub_1FCFC();
  uint64_t v4 = *(void *)(v3 - 256);
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)( &type metadata for HomeCommunicationSnippetModel.HomeDisambiguationCodingKeys,  v3 - 112,  v0,  &type metadata for HomeCommunicationSnippetModel.HomeDisambiguationCodingKeys);
  if (v4)
  {
    sub_21904();
    JUMPOUT(0x202A8LL);
  }

  uint64_t v5 = type metadata accessor for HomeDisambiguationModel(0LL);
  sub_A880( &qword_A1060,  type metadata accessor for HomeDisambiguationModel,  (uint64_t)&protocol conformance descriptor for HomeDisambiguationModel);
  uint64_t v6 = *(void *)(v3 - 288);
  KeyedDecodingContainer.decode<A>(_:forKey:)(v5, v7, v1, v5);
  uint64_t v8 = *(void *)(v3 - 152);
  *(void *)(v3 - 256) = 0LL;
  sub_21954();
  sub_21904();
  sub_63C4(*(void *)(v3 - 72), *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
  swift_storeEnumTagMultiPayload(v6, v2, 2LL);
  sub_21A0C(v6, v9, type metadata accessor for HomeCommunicationSnippetModel);
  JUMPOUT(0x204C0LL);
}

void sub_202B0()
{
  *(_BYTE *)(v2 - 112) = 3;
  sub_1FC84();
  uint64_t v3 = *(void *)(v2 - 72);
  uint64_t v4 = *(void *)(v2 - 256);
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)( &type metadata for HomeCommunicationSnippetModel.SendAnnouncementNeedsValueCodingKeys,  v2 - 112,  v0,  &type metadata for HomeCommunicationSnippetModel.SendAnnouncementNeedsValueCodingKeys);
  if (v4)
  {
    sub_21904();
    sub_63C4(v3, *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 152) + 8LL));
    JUMPOUT(0x201ACLL);
  }

  sub_20514();
  KeyedDecodingContainer.decode<A>(_:forKey:)( &type metadata for SendAnnouncementNeedsValueModel,  v5,  v1,  &type metadata for SendAnnouncementNeedsValueModel);
  uint64_t v6 = *(void *)(v2 - 152);
  *(void *)(v2 - 256) = 0LL;
  sub_21968();
  sub_21904();
  sub_63C4(v3, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  *(_OWORD *)*(void *)(v2 - 296) = *(_OWORD *)(v2 - 112);
  JUMPOUT(0x204ACLL);
}

void sub_204EC(void *a1@<X0>, uint64_t a2@<X8>)
{
}

void sub_20500(void *a1)
{
}

unint64_t sub_20514()
{
  unint64_t result = qword_A1058;
  if (!qword_A1058)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for SendAnnouncementNeedsValueModel,  &type metadata for SendAnnouncementNeedsValueModel);
    atomic_store(result, (unint64_t *)&qword_A1058);
  }

  return result;
}

void sub_20550(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32LL))(a2, a1, v5);
  sub_AA5C();
}

void sub_20590()
{
}

void sub_205BC()
{
}

uint64_t initializeBufferWithCopyOfBuffer for HomeCommunicationSnippetModel( uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v4 & 0x20000) == 0)
  {
    uint64_t v5 = (char *)&loc_20640 + 4 * byte_71480[swift_getEnumCaseMultiPayload(a2, a3)];
    __asm { BR              X10 }
  }

  uint64_t v6 = *a2;
  *a1 = *a2;
  uint64_t v7 = v6 + ((v4 + 16LL) & ~(unint64_t)v4);
  swift_retain(v6);
  return v7;
}

uint64_t destroy for HomeCommunicationSnippetModel(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_getEnumCaseMultiPayload(a1, a2);
  switch((int)result)
  {
    case 0:
      uint64_t v4 = sub_41BC(&qword_A0038);
      uint64_t v18 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL);
      v18(a1, v4);
      uint64_t v5 = *(int *)(type metadata accessor for HomeAppLaunchModel(0LL) + 20);
      goto LABEL_5;
    case 1:
      uint64_t v6 = sub_41BC(&qword_A0038);
      uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8LL);
      v7(a1, v6);
      uint64_t v8 = type metadata accessor for CarPlayIntercomControlModel(0LL);
      v7(a1 + *(int *)(v8 + 20), v6);
      uint64_t v9 = a1 + *(int *)(v8 + 24);
      uint64_t v10 = sub_41BC(&qword_A0040);
      uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8LL);
      uint64_t v12 = v9;
      goto LABEL_6;
    case 2:
      uint64_t v4 = sub_41BC(&qword_A0038);
      uint64_t v18 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL);
      v18(a1, v4);
      uint64_t v13 = (int *)type metadata accessor for HomeDisambiguationModel(0LL);
      uint64_t v14 = a1 + v13[5];
      uint64_t v15 = sub_41BC(&qword_A1078);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8LL))(v14, v15);
      uint64_t v16 = a1 + v13[6];
      uint64_t v17 = sub_41BC(&qword_A0040);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8LL))(v16, v17);
      uint64_t v5 = v13[7];
LABEL_5:
      uint64_t v12 = a1 + v5;
      uint64_t v10 = v4;
      uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))v18;
LABEL_6:
      uint64_t result = v11(v12, v10);
      break;
    case 3:
      uint64_t result = swift_bridgeObjectRelease(*(void *)(a1 + 8));
      break;
    default:
      return result;
  }

  return result;
}

void initializeWithCopy for HomeCommunicationSnippetModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = (char *)sub_20A34 + 4 * byte_71488[swift_getEnumCaseMultiPayload(a2, a3)];
  __asm { BR              X10 }

uint64_t sub_20A34()
{
  uint64_t v3 = sub_41BC(&qword_A0038);
  uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16LL);
  v4(v0, v2, v3);
  uint64_t v5 = type metadata accessor for HomeAppLaunchModel(0LL);
  v4(v0 + *(int *)(v5 + 20), v2 + *(int *)(v5 + 20), v3);
  swift_storeEnumTagMultiPayload(v0, v1, 0LL);
  return v0;
}

uint64_t assignWithCopy for HomeCommunicationSnippetModel(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result != a2)
  {
    sub_11E94(result, type metadata accessor for HomeCommunicationSnippetModel);
    uint64_t v5 = (char *)&loc_20C64 + 4 * byte_7148C[swift_getEnumCaseMultiPayload(a2, a3)];
    __asm { BR              X10 }
  }

  return result;
}

char *initializeWithTake for HomeCommunicationSnippetModel(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v13 = sub_41BC(&qword_A0038);
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32LL);
    v14(a1, a2, v13);
    uint64_t v15 = (int *)type metadata accessor for HomeDisambiguationModel(0LL);
    uint64_t v16 = v15[5];
    uint64_t v17 = &a1[v16];
    uint64_t v18 = &a2[v16];
    uint64_t v19 = sub_41BC(&qword_A1078);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32LL))(v17, v18, v19);
    uint64_t v20 = v15[6];
    uint64_t v21 = &a1[v20];
    uint64_t v22 = &a2[v20];
    uint64_t v23 = sub_41BC(&qword_A0040);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32LL))(v21, v22, v23);
    v14(&a1[v15[7]], &a2[v15[7]], v13);
    uint64_t v10 = a1;
    uint64_t v11 = a3;
    uint64_t v12 = 2LL;
  }

  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v24 = sub_41BC(&qword_A0038);
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32LL);
    v25(a1, a2, v24);
    uint64_t v26 = type metadata accessor for CarPlayIntercomControlModel(0LL);
    v25(&a1[*(int *)(v26 + 20)], &a2[*(int *)(v26 + 20)], v24);
    uint64_t v27 = *(int *)(v26 + 24);
    uint64_t v28 = &a1[v27];
    uint64_t v29 = &a2[v27];
    uint64_t v30 = sub_41BC(&qword_A0040);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32LL))(v28, v29, v30);
    uint64_t v10 = a1;
    uint64_t v11 = a3;
    uint64_t v12 = 1LL;
  }

  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
      return a1;
    }

    uint64_t v7 = sub_41BC(&qword_A0038);
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32LL);
    v8(a1, a2, v7);
    uint64_t v9 = type metadata accessor for HomeAppLaunchModel(0LL);
    v8(&a1[*(int *)(v9 + 20)], &a2[*(int *)(v9 + 20)], v7);
    uint64_t v10 = a1;
    uint64_t v11 = a3;
    uint64_t v12 = 0LL;
  }

  swift_storeEnumTagMultiPayload(v10, v11, v12);
  return a1;
}

char *assignWithTake for HomeCommunicationSnippetModel(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_11E94((uint64_t)a1, type metadata accessor for HomeCommunicationSnippetModel);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v13 = sub_41BC(&qword_A0038);
      uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32LL);
      v14(a1, a2, v13);
      uint64_t v15 = (int *)type metadata accessor for HomeDisambiguationModel(0LL);
      uint64_t v16 = v15[5];
      uint64_t v17 = &a1[v16];
      uint64_t v18 = &a2[v16];
      uint64_t v19 = sub_41BC(&qword_A1078);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32LL))(v17, v18, v19);
      uint64_t v20 = v15[6];
      uint64_t v21 = &a1[v20];
      uint64_t v22 = &a2[v20];
      uint64_t v23 = sub_41BC(&qword_A0040);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32LL))(v21, v22, v23);
      v14(&a1[v15[7]], &a2[v15[7]], v13);
      uint64_t v10 = a1;
      uint64_t v11 = a3;
      uint64_t v12 = 2LL;
    }

    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v24 = sub_41BC(&qword_A0038);
      uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32LL);
      v25(a1, a2, v24);
      uint64_t v26 = type metadata accessor for CarPlayIntercomControlModel(0LL);
      v25(&a1[*(int *)(v26 + 20)], &a2[*(int *)(v26 + 20)], v24);
      uint64_t v27 = *(int *)(v26 + 24);
      uint64_t v28 = &a1[v27];
      uint64_t v29 = &a2[v27];
      uint64_t v30 = sub_41BC(&qword_A0040);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32LL))(v28, v29, v30);
      uint64_t v10 = a1;
      uint64_t v11 = a3;
      uint64_t v12 = 1LL;
    }

    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
        return a1;
      }

      uint64_t v7 = sub_41BC(&qword_A0038);
      uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32LL);
      v8(a1, a2, v7);
      uint64_t v9 = type metadata accessor for HomeAppLaunchModel(0LL);
      v8(&a1[*(int *)(v9 + 20)], &a2[*(int *)(v9 + 20)], v7);
      uint64_t v10 = a1;
      uint64_t v11 = a3;
      uint64_t v12 = 0LL;
    }

    swift_storeEnumTagMultiPayload(v10, v11, v12);
  }

  return a1;
}

uint64_t sub_21268(uint64_t a1)
{
  uint64_t result = type metadata accessor for HomeAppLaunchModel(319LL);
  if (v3 <= 0x3F)
  {
    v6[0] = *(void *)(result - 8) + 64LL;
    uint64_t result = type metadata accessor for CarPlayIntercomControlModel(319LL);
    if (v4 <= 0x3F)
    {
      v6[1] = *(void *)(result - 8) + 64LL;
      uint64_t result = type metadata accessor for HomeDisambiguationModel(319LL);
      if (v5 <= 0x3F)
      {
        v6[2] = *(void *)(result - 8) + 64LL;
        void v6[3] = &unk_71580;
        swift_initEnumMetadataMultiPayload(a1, 256LL, 4LL, v6);
        return 0LL;
      }
    }
  }

  return result;
}

uint64_t storeEnumTagSinglePayload for HomeCommunicationSnippetModel.CodingKeys( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    LODWORD(sub_21A1C(v0, v4) = 1;
  }
  else {
    LODWORD(sub_21A1C(v0, v4) = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFC) {
    return ((uint64_t (*)(void))((char *)&loc_21358 + 4 * byte_71495[v4]))();
  }
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2138C + 4 * byte_71490[v4]))();
}

uint64_t sub_2138C(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21394(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x2139CLL);
  }
  return result;
}

uint64_t sub_213A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x213B0LL);
  }
  *(_BYTE *)uint64_t result = a2 + 3;
  return result;
}

uint64_t sub_213B4(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213BC(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HomeCommunicationSnippetModel.CodingKeys()
{
  return &type metadata for HomeCommunicationSnippetModel.CodingKeys;
}

ValueMetadata *type metadata accessor for HomeCommunicationSnippetModel.AppLaunchCodingKeys()
{
  return &type metadata for HomeCommunicationSnippetModel.AppLaunchCodingKeys;
}

ValueMetadata *type metadata accessor for HomeCommunicationSnippetModel.CarPlayIntercomControlCodingKeys()
{
  return &type metadata for HomeCommunicationSnippetModel.CarPlayIntercomControlCodingKeys;
}

ValueMetadata *type metadata accessor for HomeCommunicationSnippetModel.HomeDisambiguationCodingKeys()
{
  return &type metadata for HomeCommunicationSnippetModel.HomeDisambiguationCodingKeys;
}

uint64_t _s35HomeCommunicationFlowDelegatePlugin29HomeCommunicationSnippetModelO19AppLaunchCodingKeysOwst_0( uint64_t a1, int a2, int a3)
{
  else {
    int v3 = 2;
  }
  else {
    LODWORD(sub_21A1C(v0, v4) = v3;
  }
  if (a3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2) {
    return ((uint64_t (*)(void))((char *)sub_2144C + 4 * byte_7149A[v4]))();
  }
  else {
    return ((uint64_t (*)(void))((char *)sub_2146C + 4 * byte_7149F[v4]))();
  }
}

_BYTE *sub_2144C(_BYTE *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

_BYTE *sub_2146C(_BYTE *result)
{
  *uint64_t result = 0;
  return result;
}

_DWORD *sub_21474(_DWORD *result, int a2)
{
  *uint64_t result = a2;
  return result;
}

_WORD *sub_2147C(_WORD *result, __int16 a2)
{
  *uint64_t result = a2;
  return result;
}

_WORD *sub_21484(_WORD *result)
{
  *uint64_t result = 0;
  return result;
}

_DWORD *sub_2148C(_DWORD *result)
{
  *uint64_t result = 0;
  return result;
}

ValueMetadata *type metadata accessor for HomeCommunicationSnippetModel.SendAnnouncementNeedsValueCodingKeys()
{
  return &type metadata for HomeCommunicationSnippetModel.SendAnnouncementNeedsValueCodingKeys;
}

unint64_t sub_214AC()
{
  unint64_t result = qword_A1128;
  if (!qword_A1128)
  {
    unint64_t result = swift_getWitnessTable( &unk_716D8,  &type metadata for HomeCommunicationSnippetModel.SendAnnouncementNeedsValueCodingKeys);
    atomic_store(result, (unint64_t *)&qword_A1128);
  }

  return result;
}

unint64_t sub_214EC()
{
  unint64_t result = qword_A1130;
  if (!qword_A1130)
  {
    unint64_t result = swift_getWitnessTable( &unk_71790,  &type metadata for HomeCommunicationSnippetModel.HomeDisambiguationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_A1130);
  }

  return result;
}

unint64_t sub_2152C()
{
  unint64_t result = qword_A1138;
  if (!qword_A1138)
  {
    unint64_t result = swift_getWitnessTable( &unk_71848,  &type metadata for HomeCommunicationSnippetModel.CarPlayIntercomControlCodingKeys);
    atomic_store(result, (unint64_t *)&qword_A1138);
  }

  return result;
}

unint64_t sub_2156C()
{
  unint64_t result = qword_A1140;
  if (!qword_A1140)
  {
    unint64_t result = swift_getWitnessTable(&unk_71900, &type metadata for HomeCommunicationSnippetModel.AppLaunchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_A1140);
  }

  return result;
}

unint64_t sub_215AC()
{
  unint64_t result = qword_A1148;
  if (!qword_A1148)
  {
    unint64_t result = swift_getWitnessTable(&unk_719B8, &type metadata for HomeCommunicationSnippetModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_A1148);
  }

  return result;
}

unint64_t sub_215EC()
{
  unint64_t result = qword_A1150;
  if (!qword_A1150)
  {
    unint64_t result = swift_getWitnessTable(&unk_71870, &type metadata for HomeCommunicationSnippetModel.AppLaunchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_A1150);
  }

  return result;
}

unint64_t sub_2162C()
{
  unint64_t result = qword_A1158;
  if (!qword_A1158)
  {
    unint64_t result = swift_getWitnessTable(&unk_71898, &type metadata for HomeCommunicationSnippetModel.AppLaunchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_A1158);
  }

  return result;
}

unint64_t sub_2166C()
{
  unint64_t result = qword_A1160;
  if (!qword_A1160)
  {
    unint64_t result = swift_getWitnessTable( &unk_717B8,  &type metadata for HomeCommunicationSnippetModel.CarPlayIntercomControlCodingKeys);
    atomic_store(result, (unint64_t *)&qword_A1160);
  }

  return result;
}

unint64_t sub_216AC()
{
  unint64_t result = qword_A1168;
  if (!qword_A1168)
  {
    unint64_t result = swift_getWitnessTable( &unk_717E0,  &type metadata for HomeCommunicationSnippetModel.CarPlayIntercomControlCodingKeys);
    atomic_store(result, (unint64_t *)&qword_A1168);
  }

  return result;
}

unint64_t sub_216EC()
{
  unint64_t result = qword_A1170;
  if (!qword_A1170)
  {
    unint64_t result = swift_getWitnessTable( &unk_71700,  &type metadata for HomeCommunicationSnippetModel.HomeDisambiguationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_A1170);
  }

  return result;
}

unint64_t sub_2172C()
{
  unint64_t result = qword_A1178;
  if (!qword_A1178)
  {
    unint64_t result = swift_getWitnessTable( &unk_71728,  &type metadata for HomeCommunicationSnippetModel.HomeDisambiguationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_A1178);
  }

  return result;
}

unint64_t sub_2176C()
{
  unint64_t result = qword_A1180;
  if (!qword_A1180)
  {
    unint64_t result = swift_getWitnessTable( &unk_71648,  &type metadata for HomeCommunicationSnippetModel.SendAnnouncementNeedsValueCodingKeys);
    atomic_store(result, (unint64_t *)&qword_A1180);
  }

  return result;
}

unint64_t sub_217AC()
{
  unint64_t result = qword_A1188;
  if (!qword_A1188)
  {
    unint64_t result = swift_getWitnessTable( &unk_71670,  &type metadata for HomeCommunicationSnippetModel.SendAnnouncementNeedsValueCodingKeys);
    atomic_store(result, (unint64_t *)&qword_A1188);
  }

  return result;
}

unint64_t sub_217EC()
{
  unint64_t result = qword_A1190;
  if (!qword_A1190)
  {
    unint64_t result = swift_getWitnessTable(&unk_71928, &type metadata for HomeCommunicationSnippetModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_A1190);
  }

  return result;
}

unint64_t sub_2182C()
{
  unint64_t result = qword_A1198;
  if (!qword_A1198)
  {
    unint64_t result = swift_getWitnessTable(&unk_71950, &type metadata for HomeCommunicationSnippetModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_A1198);
  }

  return result;
}

uint64_t sub_2186C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (result < a5)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }

  if (a2 < a5)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }

  if ((a2 & 0x8000000000000000LL) == 0) {
    return swift_unknownObjectRetain(a3);
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_218F0(uint64_t a1, uint64_t a2)
{
  return KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(a1, a2, *(void *)(v2 - 120), a1);
}

uint64_t sub_21904()
{
  return swift_unknownObjectRelease(v0);
}

uint64_t sub_2190C@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v1, v2);
}

uint64_t sub_2191C(uint64_t a1, uint64_t a2)
{
  return KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(a1, a2, v2, a1);
}

void sub_21938()
{
  *(void *)(v0 - 96) = 0LL;
  *(void *)(v0 - 8sub_423C(v0 + 8) = 0xE000000000000000LL;
}

uint64_t sub_21948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)(a1, a2, a3, a4, a5);
}

uint64_t sub_21954()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 216) + 8LL))(v1, v0);
}

uint64_t sub_21968()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 208) + 8LL))(v1, v0);
}

void sub_2197C(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 176) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
}

void sub_21998(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 184) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
}

uint64_t sub_219B4()
{
  return 0LL;
}

uint64_t sub_219D0()
{
  return 0LL;
}

uint64_t sub_219EC@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v2, v1);
}

uint64_t sub_219FC(uint64_t a1, uint64_t a2)
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)(a1, a2, v3, v2);
}

void sub_21A0C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
}

void sub_21A1C(uint64_t a1, uint64_t a2)
{
}

void sub_21A24()
{
  uint64_t v1 = *(void *)(v0 - 88);
  *(void *)(v0 - 96) = *(void *)(v0 - 96);
  *(void *)(v0 - 8sub_423C(v0 + 8) = v1;
}

void sub_21A38(unint64_t *a1, uint64_t a2, uint64_t a3)
{
}

void sub_21A40()
{
}

uint64_t sub_21A4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21C18(a1, 1886352499LL, a3, &qword_A3EE8, &qword_A3EF0);
}

uint64_t sub_21A64(uint64_t a1)
{
  return sub_21A9C(a1, 0x796C706572LL, 0xE500000000000000LL, &qword_A3EF8, &qword_A3F00);
}

uint64_t sub_21A84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21C18(a1, 1684104562LL, a3, &qword_A3F08, &qword_A3F10);
}

uint64_t sub_21A9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, void *a5)
{
  uint64_t v9 = type metadata accessor for MachineUtteranceBuilder(0LL);
  sub_A8BC(v9);
  MachineUtteranceBuilder.init()();
  uint64_t v10 = dispatch thunk of MachineUtteranceBuilder.addMapping(node:value:)( 0x62726556736D73LL,  0xE700000000000000LL,  a2,  a3);
  sub_BD1C();
  uint64_t v11 = sub_21BE4();
  dispatch thunk of MachineUtteranceBuilder.addMapping(node:value:)(v11, v12, v13, v14);
  uint64_t v15 = swift_release(v10);
  uint64_t v16 = dispatch thunk of MachineUtteranceBuilder.build()(v15);
  uint64_t v18 = v17;
  uint64_t result = sub_BD1C();
  *a4 = v16;
  *a5 = v18;
  return result;
}

uint64_t sub_21B44()
{
  uint64_t v0 = type metadata accessor for MachineUtteranceBuilder(0LL);
  sub_A8BC(v0);
  MachineUtteranceBuilder.init()();
  uint64_t v1 = dispatch thunk of MachineUtteranceBuilder.addMapping(node:value:)( 0x69666E6F43736D73LL,  0xEF6E6F6974616D72LL,  28526LL,  0xE200000000000000LL);
  sub_BD1C();
  uint64_t v2 = sub_21BE4();
  dispatch thunk of MachineUtteranceBuilder.addMapping(node:value:)(v2, v3, v4, v5);
  uint64_t v6 = swift_release(v1);
  uint64_t v7 = dispatch thunk of MachineUtteranceBuilder.build()(v6);
  uint64_t v9 = v8;
  uint64_t result = sub_BD1C();
  qword_A3F18 = v7;
  unk_A3F20 = v9;
  return result;
}

uint64_t sub_21BE4()
{
  return 0x6E756F4E736D73LL;
}

uint64_t sub_21C18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, void *a5)
{
  return sub_21A9C(a1, a2, 0xE400000000000000LL, a4, a5);
}

uint64_t HomeTarget.hash(into:)(uint64_t a1)
{
  uint64_t v2 = sub_24508();
  sub_22178((uint64_t)&unk_A11A0);
  return dispatch thunk of Hashable.hash(into:)(a1, v2, v3);
}

uint64_t HomeTarget.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_24508();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16LL))(a1, v1, v3);
}

uint64_t property wrapper backing initializer of HomeTarget.selectHomeAction(uint64_t a1)
{
  unint64_t v2 = sub_21CE0();
  return CodableAceObject.init(wrappedValue:)(a1, v2);
}

unint64_t sub_21CE0()
{
  unint64_t result = qword_A11A8;
  if (!qword_A11A8)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___SAIntentGroupRunSiriKitExecutor);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_A11A8);
  }

  return result;
}

void HomeTarget.init(id:name:selectHomeAction:)( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_24508();
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(a4, a1, v8);
  uint64_t v10 = type metadata accessor for HomeTarget(0LL);
  sub_245FC(v10, (uint64_t)&type metadata for String, v11, v12, v13, v14, v15, v16, a2);
  unint64_t v17 = sub_21CE0();
  CodableAceObject.init(wrappedValue:)(a3, v17);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
  sub_244F0();
}

uint64_t type metadata accessor for HomeTarget(uint64_t a1)
{
  return sub_111E8(a1, (uint64_t *)&unk_A12A0, (uint64_t)&nominal type descriptor for HomeTarget);
}

uint64_t sub_21DDC(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 25705 && a2 == 0xE200000000000000LL;
  if (v3 || (_stringCompareWithSmolCheck(_:_:expecting:)(25705LL, 0xE200000000000000LL, a1, a2, 0LL) & 1) != 0)
  {
    swift_bridgeObjectRelease(a2);
    return 0LL;
  }

  else
  {
    BOOL v6 = a1 == 1701667182 && a2 == 0xE400000000000000LL;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)(1701667182LL, 0xE400000000000000LL, a1, a2, 0LL) & 1) != 0)
    {
      swift_bridgeObjectRelease(a2);
      return 1LL;
    }

    else if (a1 == 0xD000000000000010LL && a2 == 0x8000000000077390LL)
    {
      swift_bridgeObjectRelease(0x8000000000077390LL);
      return 2LL;
    }

    else
    {
      char v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010LL, 0x8000000000077390LL, a1, a2, 0LL);
      swift_bridgeObjectRelease(a2);
      if ((v7 & 1) != 0) {
        return 2LL;
      }
      else {
        return 3LL;
      }
    }
  }

uint64_t sub_21EF0(char a1)
{
  if (a1 == 2) {
    return 0xD000000000000010LL;
  }
  if (a1 == 1) {
    return 1701667182LL;
  }
  return 25705LL;
}

uint64_t sub_21F40()
{
  return sub_21EF0(*v0);
}

uint64_t sub_21F48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = sub_21DDC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21F6C(uint64_t a1)
{
  unint64_t v2 = sub_2213C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_21F94(uint64_t a1)
{
  unint64_t v2 = sub_2213C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t HomeTarget.encode(to:)(void *a1)
{
  uint64_t v4 = v2;
  sub_41BC(&qword_A11B0);
  sub_245DC();
  __chkstk_darwin(v6);
  sub_8504(a1, a1[3]);
  unint64_t v7 = sub_2213C();
  sub_24510((uint64_t)&type metadata for HomeTarget.CodingKeys, v8, v7);
  char v22 = 0;
  uint64_t v9 = type metadata accessor for UUID(0LL);
  sub_22178((uint64_t)&unk_A11C0);
  sub_2448C(v4, (uint64_t)&v22, v1, v9, v10);
  if (!v3)
  {
    type metadata accessor for HomeTarget(0LL);
    sub_24604();
    uint64_t v11 = sub_41BC(&qword_A0038);
    sub_22614((uint64_t)&qword_A0058);
    uint64_t v12 = sub_245BC();
    sub_2448C(v12, v13, v14, v11, v15);
    sub_245D0();
    uint64_t v16 = sub_41BC(&qword_A11C8);
    sub_22660((uint64_t)&unk_A11D0);
    uint64_t v17 = sub_245A8();
    sub_2448C(v17, v18, v19, v16, v20);
  }

  return sub_2454C();
}

unint64_t sub_2213C()
{
  unint64_t result = qword_A11B8;
  if (!qword_A11B8)
  {
    unint64_t result = swift_getWitnessTable(&unk_71F24, &type metadata for HomeTarget.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_A11B8);
  }

  return result;
}

void sub_22178(uint64_t a1)
{
  if (!sub_24524(a1))
  {
    uint64_t v3 = v2(255LL);
    atomic_store(sub_24610(v3), v1);
  }

  sub_AA5C();
}

void HomeTarget.hashValue.getter(uint64_t a1)
{
  uint64_t v1 = sub_24508();
  sub_22178((uint64_t)&unk_A11A0);
  dispatch thunk of Hashable.hash(into:)(v3, v1, v2);
  sub_1ED58();
  sub_12378();
}

void HomeTarget.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v30 = sub_41BC(&qword_A11C8);
  uint64_t v28 = *(void *)(v30 - 8);
  sub_1736C();
  __chkstk_darwin(v4);
  sub_172F4();
  uint64_t v31 = v5;
  uint64_t v6 = sub_41BC(&qword_A0038);
  uint64_t v33 = *(void *)(v6 - 8);
  uint64_t v34 = v6;
  sub_1736C();
  __chkstk_darwin(v7);
  sub_24530(v8, v26);
  uint64_t v36 = type metadata accessor for UUID(0LL);
  uint64_t v9 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  sub_172F4();
  uint64_t v35 = v10;
  uint64_t v38 = sub_41BC(&qword_A11D8);
  uint64_t v11 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  sub_2455C();
  uint64_t v12 = type metadata accessor for HomeTarget(0LL);
  sub_1736C();
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = a1[3];
  uint64_t v16 = a1[4];
  sub_8504(a1, v17);
  unint64_t v18 = sub_2213C();
  uint64_t v37 = v2;
  uint64_t v19 = v39;
  dispatch thunk of Decoder.container<A>(keyedBy:)( &type metadata for HomeTarget.CodingKeys,  &type metadata for HomeTarget.CodingKeys,  v18,  v17,  v16);
  if (v19)
  {
    sub_423C(a1);
  }

  else
  {
    uint64_t v39 = v11;
    uint64_t v26 = v12;
    uint64_t v27 = v9;
    uint64_t v20 = (uint64_t)v15;
    uint64_t v21 = v32;
    uint64_t v22 = v33;
    uint64_t v23 = v34;
    char v42 = 0;
    sub_22178((uint64_t)&unk_A11E0);
    uint64_t v24 = v35;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v36, &v42, v38, v36);
    sub_2458C(v20, v24, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 32));
    sub_24604();
    sub_22614((uint64_t)&qword_A0070);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v23, &v41, v38, v23);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(v20 + *(int *)(v26 + 20), v21, v23);
    sub_245D0();
    sub_22660((uint64_t)&unk_A11E8);
    uint64_t v25 = v31;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v30, &v40, v38, v30);
    sub_24498();
    sub_2458C(v20 + *(int *)(v26 + 24), v25, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 32));
    sub_11ECC(v20, v29, type metadata accessor for HomeTarget);
    sub_423C(a1);
    sub_11E94(v20, type metadata accessor for HomeTarget);
  }

  sub_92C0();
}

uint64_t sub_22544@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for UUID(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16LL))(a1, v1, v3);
}

void sub_2257C(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_22590(void *a1)
{
  return HomeTarget.encode(to:)(a1);
}

Swift::Int sub_225AC()
{
  uint64_t v0 = type metadata accessor for UUID(0LL);
  sub_22178((uint64_t)&unk_A11A0);
  dispatch thunk of Hashable.hash(into:)(v3, v0, v1);
  return Hasher._finalize()();
}

void sub_22614(uint64_t a1)
{
  if (!sub_24524(a1))
  {
    uint64_t v2 = sub_8564(&qword_A0038);
    atomic_store(sub_9310(v2, v2), v1);
  }

  sub_935C();
}

void sub_22660(uint64_t a1)
{
  if (!sub_24524(a1))
  {
    uint64_t v2 = sub_8564(&qword_A11C8);
    atomic_store(sub_24610(v2), v1);
  }

  sub_AA5C();
}

uint64_t property wrapper backing initializer of HomeDisambiguationModel.homeTargets(uint64_t a1)
{
  uint64_t v3 = a1;
  uint64_t v1 = sub_41BC(&qword_A11F0);
  return Loggable.init(wrappedValue:)(&v3, v1);
}

uint64_t property wrapper backing initializer of HomeDisambiguationModel.shouldEnableSmartUI(char a1)
{
  char v2 = a1;
  return Loggable.init(wrappedValue:)(&v2, &type metadata for Bool);
}

uint64_t property wrapper backing initializer of HomeDisambiguationModel.prompt( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_245FC(a1, (uint64_t)&type metadata for String, a3, a4, a5, a6, a7, a8, a1);
}

void *HomeDisambiguationModel.responseViewId.unsafeMutableAddressor()
{
  return &static HomeDisambiguationModel.responseViewId;
}

unint64_t static HomeDisambiguationModel.responseViewId.getter()
{
  return 0xD000000000000028LL;
}

uint64_t sub_22758(uint64_t a1, unint64_t a2)
{
  BOOL v3 = a1 == 0x6449656C646E7562LL && a2 == 0xE800000000000000LL;
  if (v3
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0x6449656C646E7562LL, 0xE800000000000000LL, a1, a2, 0LL) & 1) != 0)
  {
    swift_bridgeObjectRelease(a2);
    return 0LL;
  }

  BOOL v6 = a1 == 0x67726154656D6F68LL && a2 == 0xEB00000000737465LL;
  if (v6
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0x67726154656D6F68LL, 0xEB00000000737465LL, a1, a2, 0LL) & 1) != 0)
  {
    swift_bridgeObjectRelease(a2);
    return 1LL;
  }

  if (a1 == 0xD000000000000013LL)
  {
    unint64_t v7 = 0x80000000000773B0LL;
    if (a2 == 0x80000000000773B0LL) {
      goto LABEL_17;
    }
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000013LL, 0x80000000000773B0LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v7 = a2;
LABEL_17:
    swift_bridgeObjectRelease(v7);
    return 2LL;
  }

  if (a1 == 0x74706D6F7270LL && a2 == 0xE600000000000000LL)
  {
    swift_bridgeObjectRelease(a2);
    return 3LL;
  }

  else
  {
    char v9 = _stringCompareWithSmolCheck(_:_:expecting:)(0x74706D6F7270LL, 0xE600000000000000LL, a1, a2, 0LL);
    swift_bridgeObjectRelease(a2);
    if ((v9 & 1) != 0) {
      return 3LL;
    }
    else {
      return 4LL;
    }
  }

void sub_228F8(uint64_t a1)
{
  unsigned __int8 v1 = a1;
  sub_1236C(a1);
  Hasher._combine(_:)(v1);
  sub_1ED58();
  sub_12378();
}

uint64_t sub_22928(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_22960 + 4 * byte_71B70[a1]))( 0xD000000000000013LL,  0x80000000000773B0LL);
}

uint64_t sub_22960()
{
  return 0x6449656C646E7562LL;
}

uint64_t sub_22978()
{
  return 0x74706D6F7270LL;
}

uint64_t sub_2298C()
{
  return 0x67726154656D6F68LL;
}

void sub_229AC()
{
}

void sub_229C4()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)(v2);
  Hasher._combine(_:)(v1);
  sub_1ED58();
  sub_12378();
}

uint64_t sub_229F8()
{
  return sub_22928(*v0);
}

uint64_t sub_22A00@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = sub_22758(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22A24(uint64_t a1)
{
  unint64_t v2 = sub_22C1C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_22A4C(uint64_t a1)
{
  unint64_t v2 = sub_22C1C();
  return CodingKey.debugDescription.getter(a1, v2);
}

void HomeDisambiguationModel.encode(to:)(void *a1)
{
  uint64_t v4 = v2;
  sub_41BC(&qword_A11F8);
  sub_245DC();
  __chkstk_darwin(v6);
  sub_8504(a1, a1[3]);
  unint64_t v7 = sub_22C1C();
  sub_24510((uint64_t)&type metadata for HomeDisambiguationModel.CodingKeys, v8, v7);
  char v25 = 0;
  uint64_t v9 = sub_41BC(&qword_A0038);
  sub_22614((uint64_t)&qword_A0058);
  uint64_t v11 = v10;
  sub_2448C(v4, (uint64_t)&v25, v1, v9, v10);
  if (!v3)
  {
    uint64_t v23 = type metadata accessor for HomeDisambiguationModel(0LL);
    sub_24604();
    uint64_t v12 = sub_41BC(&qword_A1078);
    sub_231C4((uint64_t)&unk_A1208);
    uint64_t v13 = sub_245BC();
    sub_2448C(v13, v14, v15, v12, v16);
    sub_245D0();
    uint64_t v17 = sub_41BC(&qword_A0040);
    sub_22CEC((uint64_t)&qword_A0060);
    uint64_t v18 = sub_245A8();
    sub_2448C(v18, v19, v20, v17, v21);
    uint64_t v22 = v4 + *(int *)(v23 + 28);
    v24[0] = 3;
    sub_2448C(v22, (uint64_t)v24, v1, v9, v11);
  }

  sub_2454C();
  sub_92C0();
}

unint64_t sub_22C1C()
{
  unint64_t result = qword_A1200;
  if (!qword_A1200)
  {
    unint64_t result = swift_getWitnessTable(&unk_71ED4, &type metadata for HomeDisambiguationModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_A1200);
  }

  return result;
}

uint64_t type metadata accessor for HomeDisambiguationModel(uint64_t a1)
{
  return sub_111E8(a1, (uint64_t *)&unk_A1340, (uint64_t)&nominal type descriptor for HomeDisambiguationModel);
}

unint64_t sub_22C6C(uint64_t a1)
{
  unint64_t result = sub_24524(a1);
  if (!result)
  {
    uint64_t v5 = v4;
    uint64_t v6 = v3;
    uint64_t v7 = sub_8564(&qword_A11F0);
    sub_22178(v6);
    unint64_t result = swift_getWitnessTable(v5, v7);
    atomic_store(result, v1);
  }

  return result;
}

void sub_22CEC(uint64_t a1)
{
  if (!sub_24524(a1))
  {
    uint64_t v2 = sub_8564(&qword_A0040);
    atomic_store(sub_9310(v2, v2), v1);
  }

  sub_935C();
}

void sub_22D38( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char v10 = a4;
  uint64_t v29 = a2;
  sub_245F0(a1, a2, a3, a4, a5, a6, a7, a8, a1);
  type metadata accessor for HomeDisambiguationModel(0LL);
  uint64_t v28 = a3;
  uint64_t v12 = sub_41BC(&qword_A11F0);
  uint64_t v13 = Loggable.init(wrappedValue:)(&v28, v12);
  LOBYTE(v2sub_423C(v0 + 8) = v10;
  uint64_t v20 = sub_245FC(v13, (uint64_t)&type metadata for Bool, v14, v15, v16, v17, v18, v19, v28);
  uint64_t v29 = a6;
  sub_245F0(v20, v21, v22, v23, v24, v25, v26, v27, a5);
  sub_244F0();
}

void HomeDisambiguationModel.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v4 = sub_41BC(&qword_A0040);
  uint64_t v44 = *(void *)(v4 - 8);
  uint64_t v45 = v4;
  sub_1736C();
  __chkstk_darwin(v5);
  sub_172F4();
  uint64_t v43 = v6;
  uint64_t v7 = sub_41BC(&qword_A1078);
  uint64_t v48 = *(void *)(v7 - 8);
  uint64_t v49 = v7;
  sub_1736C();
  __chkstk_darwin(v8);
  sub_24530(v9, v38[0]);
  uint64_t v52 = sub_41BC(&qword_A0038);
  uint64_t v46 = *(void *)(v52 - 8);
  sub_1736C();
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  Swift::String v51 = (void (*)(uint64_t, char *, uint64_t))((char *)v38 - v14);
  uint64_t v50 = sub_41BC(&qword_A1230);
  uint64_t v15 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  uint64_t v17 = (char *)v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = type metadata accessor for HomeDisambiguationModel(0LL);
  sub_1736C();
  __chkstk_darwin(v19);
  sub_2455C();
  uint64_t v21 = a1[3];
  uint64_t v20 = a1[4];
  sub_8504(a1, v21);
  unint64_t v22 = sub_22C1C();
  uint64_t v53 = v17;
  uint64_t v23 = v54;
  dispatch thunk of Decoder.container<A>(keyedBy:)( &type metadata for HomeDisambiguationModel.CodingKeys,  &type metadata for HomeDisambiguationModel.CodingKeys,  v22,  v21,  v20);
  if (v23)
  {
    sub_423C(a1);
  }

  else
  {
    uint64_t v54 = v15;
    uint64_t v39 = v13;
    char v40 = (int *)v18;
    uint64_t v24 = v2;
    uint64_t v26 = v47;
    uint64_t v25 = v48;
    char v41 = a1;
    uint64_t v27 = v49;
    char v58 = 0;
    sub_22614((uint64_t)&qword_A0070);
    uint64_t v29 = v28;
    uint64_t v30 = v52;
    uint64_t v31 = v50;
    sub_24584(v52, (uint64_t)&v58, v50, v52);
    uint64_t v32 = v30;
    v38[1] = v29;
    uint64_t v33 = *(void (**)(uint64_t, char *, uint64_t))(v46 + 32);
    v33(v24, (char *)v51, v32);
    sub_24604();
    sub_231C4((uint64_t)&unk_A1238);
    sub_24584(v27, (uint64_t)&v57, v31, v27);
    Swift::String v51 = v33;
    sub_2458C(v24 + v40[5], v26, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 32));
    sub_245D0();
    sub_22CEC((uint64_t)&qword_A0078);
    uint64_t v34 = v43;
    uint64_t v35 = v45;
    sub_24584(v45, (uint64_t)&v56, v31, v45);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 32))(v24 + v40[6], v34, v35);
    char v55 = 3;
    uint64_t v36 = v39;
    uint64_t v37 = v52;
    sub_24584(v52, (uint64_t)&v55, v50, v52);
    sub_244A8();
    v51(v24 + v40[7], v36, v37);
    sub_11ECC(v24, v42, type metadata accessor for HomeDisambiguationModel);
    sub_423C(v41);
    sub_11E94(v24, type metadata accessor for HomeDisambiguationModel);
  }

  sub_92C0();
}

unint64_t sub_231C4(uint64_t a1)
{
  unint64_t result = sub_24524(a1);
  if (!result)
  {
    uint64_t v4 = v3;
    uint64_t v5 = sub_8564(&qword_A1078);
    sub_22C6C((uint64_t)&unk_A1210);
    sub_22C6C((uint64_t)&unk_A1220);
    unint64_t result = swift_getWitnessTable(v4, v5);
    atomic_store(result, v1);
  }

  return result;
}

void sub_2326C()
{
}

void sub_23298()
{
}

void sub_232C4()
{
}

void sub_232F0()
{
}

void sub_2331C()
{
}

void sub_23348()
{
}

void sub_23374(void *a1@<X0>, uint64_t a2@<X8>)
{
}

void sub_23388(void *a1)
{
}

uint64_t *initializeBufferWithCopyOfBuffer for HomeTarget(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v16);
  }

  else
  {
    uint64_t v7 = type metadata accessor for UUID(0LL);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_41BC(&qword_A0038);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16LL))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_41BC(&qword_A11C8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16LL))(v13, v14, v15);
  }

  return a1;
}

uint64_t destroy for HomeTarget(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_41BC(&qword_A0038);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8LL))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_41BC(&qword_A11C8);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8LL))(v7, v8);
}

uint64_t initializeWithCopy for HomeTarget(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_41BC(&qword_A0038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16LL))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_41BC(&qword_A11C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16LL))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for HomeTarget(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_41BC(&qword_A0038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24LL))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_41BC(&qword_A11C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24LL))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for HomeTarget(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_41BC(&qword_A0038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32LL))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_41BC(&qword_A11C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32LL))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for HomeTarget(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_41BC(&qword_A0038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40LL))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_41BC(&qword_A11C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40LL))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for HomeTarget(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_237FC);
}

uint64_t sub_237FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (v9)
  {
    uint64_t v7 = v6;
    uint64_t v8 = a1;
  }

  else
  {
    sub_41BC(&qword_A0038);
    sub_244C8();
    if (v9)
    {
      uint64_t v7 = v10;
      uint64_t v11 = *(int *)(a3 + 20);
    }

    else
    {
      uint64_t v7 = sub_41BC(&qword_A11C8);
      uint64_t v11 = *(int *)(a3 + 24);
    }

    uint64_t v8 = a1 + v11;
  }

  return sub_244E4(v8, a2, v7);
}

uint64_t storeEnumTagSinglePayload for HomeTarget(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_23880);
}

uint64_t sub_23880()
{
  if (v6)
  {
    uint64_t v4 = v3;
    uint64_t v5 = v1;
  }

  else
  {
    sub_41BC(&qword_A0038);
    sub_244B8();
    if (v6)
    {
      uint64_t v4 = v7;
      uint64_t v8 = *(int *)(v2 + 20);
    }

    else
    {
      uint64_t v4 = sub_41BC(&qword_A11C8);
      uint64_t v8 = *(int *)(v2 + 24);
    }

    uint64_t v5 = v1 + v8;
  }

  return sub_244D8(v5, v0, v0, v4);
}

void sub_238F4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID(319LL);
  if (v3 <= 0x3F)
  {
    v8[0] = *(void *)(v2 - 8) + 64LL;
    sub_9034(319LL, (unint64_t *)&qword_A00F8, (uint64_t)&type metadata for String);
    if (v5 <= 0x3F)
    {
      v8[1] = *(void *)(v4 - 8) + 64LL;
      sub_239A4(319LL);
      if (v7 <= 0x3F)
      {
        v8[2] = *(void *)(v6 - 8) + 64LL;
        swift_initStructMetadata(a1, 256LL, 3LL, v8, a1 + 16);
      }
    }
  }

void sub_239A4(uint64_t a1)
{
  if (!qword_A12B0)
  {
    unint64_t v2 = sub_21CE0();
    unint64_t v3 = type metadata accessor for CodableAceObject(a1, v2);
    if (!v4) {
      atomic_store(v3, (unint64_t *)&qword_A12B0);
    }
  }

uint64_t *initializeBufferWithCopyOfBuffer for HomeDisambiguationModel(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v17);
  }

  else
  {
    uint64_t v7 = sub_41BC(&qword_A0038);
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16LL);
    v8(a1, a2, v7);
    uint64_t v9 = a3[5];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_41BC(&qword_A1078);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16LL))(v10, v11, v12);
    uint64_t v13 = a3[6];
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_41BC(&qword_A0040);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16LL))(v14, v15, v16);
    v8((uint64_t *)((char *)a1 + a3[7]), (uint64_t *)((char *)a2 + a3[7]), v7);
  }

  return a1;
}

uint64_t destroy for HomeDisambiguationModel(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_41BC(&qword_A0038);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL);
  v10(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_41BC(&qword_A1078);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8LL))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_41BC(&qword_A0040);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8LL))(v7, v8);
  return ((uint64_t (*)(uint64_t, uint64_t))v10)(a1 + a2[7], v4);
}

uint64_t initializeWithCopy for HomeDisambiguationModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_41BC(&qword_A0038);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_41BC(&qword_A1078);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16LL))(v9, v10, v11);
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_41BC(&qword_A0040);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16LL))(v13, v14, v15);
  v7(a1 + a3[7], a2 + a3[7], v6);
  return a1;
}

uint64_t assignWithCopy for HomeDisambiguationModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_41BC(&qword_A0038);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24LL);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_41BC(&qword_A1078);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24LL))(v9, v10, v11);
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_41BC(&qword_A0040);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 24LL))(v13, v14, v15);
  v7(a1 + a3[7], a2 + a3[7], v6);
  return a1;
}

uint64_t initializeWithTake for HomeDisambiguationModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_41BC(&qword_A0038);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_41BC(&qword_A1078);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32LL))(v9, v10, v11);
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_41BC(&qword_A0040);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32LL))(v13, v14, v15);
  v7(a1 + a3[7], a2 + a3[7], v6);
  return a1;
}

uint64_t assignWithTake for HomeDisambiguationModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_41BC(&qword_A0038);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40LL);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_41BC(&qword_A1078);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40LL))(v9, v10, v11);
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_41BC(&qword_A0040);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40LL))(v13, v14, v15);
  v7(a1 + a3[7], a2 + a3[7], v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for HomeDisambiguationModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_23F38);
}

uint64_t sub_23F38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (v9)
  {
    uint64_t v7 = v6;
    uint64_t v8 = a1;
  }

  else
  {
    sub_41BC(&qword_A1078);
    sub_244C8();
    if (v9)
    {
      uint64_t v7 = v10;
      uint64_t v11 = *(int *)(a3 + 20);
    }

    else
    {
      uint64_t v7 = sub_41BC(&qword_A0040);
      uint64_t v11 = *(int *)(a3 + 24);
    }

    uint64_t v8 = a1 + v11;
  }

  return sub_244E4(v8, a2, v7);
}

uint64_t storeEnumTagSinglePayload for HomeDisambiguationModel( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_23FC4);
}

uint64_t sub_23FC4()
{
  if (v6)
  {
    uint64_t v4 = v3;
    uint64_t v5 = v1;
  }

  else
  {
    sub_41BC(&qword_A1078);
    sub_244B8();
    if (v6)
    {
      uint64_t v4 = v7;
      uint64_t v8 = *(int *)(v2 + 20);
    }

    else
    {
      uint64_t v4 = sub_41BC(&qword_A0040);
      uint64_t v8 = *(int *)(v2 + 24);
    }

    uint64_t v5 = v1 + v8;
  }

  return sub_244D8(v5, v0, v0, v4);
}

void sub_24040(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    uint64_t v4 = *(void *)(v2 - 8) + 64LL;
    v9[0] = v4;
    sub_24100(319LL);
    if (v6 <= 0x3F)
    {
      v9[1] = *(void *)(v5 - 8) + 64LL;
      sub_9034(319LL, (unint64_t *)&unk_A0100, (uint64_t)&type metadata for Bool);
      if (v8 <= 0x3F)
      {
        v9[2] = *(void *)(v7 - 8) + 64LL;
        v9[3] = v4;
        swift_initStructMetadata(a1, 256LL, 4LL, v9, a1 + 16);
      }
    }
  }

void sub_24100(uint64_t a1)
{
  if (!qword_A1350)
  {
    uint64_t v2 = sub_8564(&qword_A11F0);
    unint64_t v3 = type metadata accessor for Loggable(a1, v2);
    if (!v4) {
      atomic_store(v3, (unint64_t *)&qword_A1350);
    }
  }

uint64_t storeEnumTagSinglePayload for HomeDisambiguationModel.CodingKeys( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    LODWORD(sub_21A1C(v0, v4) = 1;
  }
  else {
    LODWORD(sub_21A1C(v0, v4) = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFC) {
    return ((uint64_t (*)(void))((char *)&loc_241A4 + 4 * byte_71B79[v4]))();
  }
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_241D8 + 4 * byte_71B74[v4]))();
}

uint64_t sub_241D8(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_241E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x241E8LL);
  }
  return result;
}

uint64_t sub_241F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x241FCLL);
  }
  *(_BYTE *)unint64_t result = a2 + 3;
  return result;
}

uint64_t sub_24200(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24208(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HomeDisambiguationModel.CodingKeys()
{
  return &type metadata for HomeDisambiguationModel.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for HomeTarget.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    LODWORD(sub_21A1C(v0, v4) = 1;
  }
  else {
    LODWORD(sub_21A1C(v0, v4) = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFD) {
    return ((uint64_t (*)(void))((char *)&loc_24270 + 4 * byte_71B83[v4]))();
  }
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_242A4 + 4 * byte_71B7E[v4]))();
}

uint64_t sub_242A4(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x242B4LL);
  }
  return result;
}

uint64_t sub_242C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x242C8LL);
  }
  *(_BYTE *)unint64_t result = a2 + 2;
  return result;
}

uint64_t sub_242CC(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242D4(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HomeTarget.CodingKeys()
{
  return &type metadata for HomeTarget.CodingKeys;
}

unint64_t sub_242F4()
{
  unint64_t result = qword_A1388;
  if (!qword_A1388)
  {
    unint64_t result = swift_getWitnessTable(&unk_71DF4, &type metadata for HomeTarget.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_A1388);
  }

  return result;
}

unint64_t sub_24334()
{
  unint64_t result = qword_A1390;
  if (!qword_A1390)
  {
    unint64_t result = swift_getWitnessTable(&unk_71EAC, &type metadata for HomeDisambiguationModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_A1390);
  }

  return result;
}

unint64_t sub_24374()
{
  unint64_t result = qword_A1398;
  if (!qword_A1398)
  {
    unint64_t result = swift_getWitnessTable(&unk_71E1C, &type metadata for HomeDisambiguationModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_A1398);
  }

  return result;
}

unint64_t sub_243B4()
{
  unint64_t result = qword_A13A0;
  if (!qword_A13A0)
  {
    unint64_t result = swift_getWitnessTable(&unk_71E44, &type metadata for HomeDisambiguationModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_A13A0);
  }

  return result;
}

unint64_t sub_243F4()
{
  unint64_t result = qword_A13A8;
  if (!qword_A13A8)
  {
    unint64_t result = swift_getWitnessTable(&unk_71D64, &type metadata for HomeTarget.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_A13A8);
  }

  return result;
}

unint64_t sub_24434()
{
  unint64_t result = qword_A13B0;
  if (!qword_A13B0)
  {
    unint64_t result = swift_getWitnessTable(&unk_71D8C, &type metadata for HomeTarget.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_A13B0);
  }

  return result;
}

uint64_t sub_2448C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)(a1, a2, a3, a4, a5);
}

uint64_t sub_24498()
{
  return (*(uint64_t (**)(void, void))(*(void *)(v0 - 88) + 8LL))( *(void *)(v0 - 104),  *(void *)(v0 - 96));
}

uint64_t sub_244A8()
{
  return (*(uint64_t (**)(void, void))(*(void *)(v0 - 88) + 8LL))( *(void *)(v0 - 96),  *(void *)(v0 - 120));
}

  ;
}

  ;
}

uint64_t sub_244D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(a1, a2, a3, a4);
}

uint64_t sub_244E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(a1, a2, a3);
}

  ;
}

uint64_t sub_24508()
{
  return type metadata accessor for UUID(0LL);
}

uint64_t sub_24510(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return dispatch thunk of Encoder.container<A>(keyedBy:)(a1, a1, a3, v3, v4);
}

uint64_t sub_24524(uint64_t a1)
{
  return *(void *)a1;
}

void sub_24530(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 144) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
}

uint64_t sub_2454C()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

  ;
}

uint64_t sub_24574()
{
  return (*(uint64_t (**)(void, uint64_t))(*(void *)(v1 - 88) + 8LL))(*(void *)(v1 - 96), v0);
}

uint64_t sub_24584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)(a1, a2, a3, a4);
}

uint64_t sub_2458C@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  return a3(a1, a2, v3);
}

  ;
}

uint64_t sub_245A8()
{
  return v0;
}

uint64_t sub_245BC()
{
  return v0;
}

void sub_245D0()
{
  *(_BYTE *)(v0 - 67) = 2;
}

  ;
}

uint64_t sub_245F0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return Loggable.init(wrappedValue:)(&a9, v9);
}

uint64_t sub_245FC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return Loggable.init(wrappedValue:)(&a9, a2);
}

void sub_24604()
{
  *(_BYTE *)(v0 - 66) = 1;
}

uint64_t sub_24610(uint64_t a1)
{
  return swift_getWitnessTable(v1, a1);
}

char *sub_2461C(uint64_t a1, char a2, uint64_t a3, uint64_t (*a4)(void, void), uint64_t a5)
{
  uint64_t v9 = a2 & 1;
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v14 = sub_4870(v10, (uint64_t)qword_A3EB0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v14, v10);
  sub_24AB8();
  uint64_t v15 = sub_24AB8();
  uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
  int v17 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v16, (os_log_type_t)v17))
  {
    int v49 = v17;
    uint64_t v50 = v13;
    uint64_t v18 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v48 = swift_slowAlloc(32LL, -1LL);
    uint64_t v57 = v48;
    *(_DWORD *)uint64_t v18 = 136315138;
    uint64_t v52 = v10;
    uint64_t v53 = a3;
    uint64_t v51 = v11;
    if ((_DWORD)v9)
    {
      swift_errorRetain(a1);
      uint64_t v19 = (void *)a1;
    }

    else
    {
      unsigned int v47 = 0;
      if ((unint64_t)a1 >> 62)
      {
        if (a1 >= 0) {
          uint64_t v44 = a1 & 0xFFFFFFFFFFFFFF8LL;
        }
        else {
          uint64_t v44 = a1;
        }
        swift_bridgeObjectRetain(a1);
        uint64_t v21 = _CocoaArrayWrapper.endIndex.getter(v44);
        sub_7AF8(a1, 0);
      }

      else
      {
        uint64_t v21 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8LL));
      }

      uint64_t v19 = _swiftEmptyArrayStorage;
      if (v21)
      {
        v45[0] = v18;
        v45[1] = a5;
        uint64_t v46 = a4;
        char v55 = _swiftEmptyArrayStorage;
        unint64_t result = sub_45E34(0LL, v21 & ~(v21 >> 63), 0);
        if (v21 < 0)
        {
          __break(1u);
          return result;
        }

        uint64_t v23 = 0LL;
        uint64_t v19 = v55;
        unint64_t v54 = a1 & 0xC000000000000001LL;
        uint64_t v24 = v16;
        uint64_t v25 = a1;
        do
        {
          uint64_t v26 = v21;
          if (v54) {
            id v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v23, a1);
          }
          else {
            id v27 = *(id *)(a1 + 8 * v23 + 32);
          }
          uint64_t v28 = v27;
          uint64_t v29 = sub_24A38(v27);
          unint64_t v31 = v30;

          if (v31) {
            uint64_t v32 = v29;
          }
          else {
            uint64_t v32 = 0x416E776F6E6B6E55LL;
          }
          if (!v31) {
            unint64_t v31 = 0xEE00776569566563LL;
          }
          char v55 = v19;
          unint64_t v34 = v19[2];
          unint64_t v33 = v19[3];
          if (v34 >= v33 >> 1)
          {
            sub_45E34((char *)(v33 > 1), v34 + 1, 1);
            uint64_t v19 = v55;
          }

          ++v23;
          v19[2] = v34 + 1;
          uint64_t v35 = &v19[2 * v34];
          v35[4] = v32;
          void v35[5] = v31;
          uint64_t v21 = v26;
          a1 = v25;
        }

        while (v26 != v23);
        uint64_t v16 = v24;
        a4 = v46;
        uint64_t v18 = (uint8_t *)v45[0];
      }

      uint64_t v9 = v47;
    }

    char v55 = v19;
    v56[0] = (_DWORD)v9 != 0;
    uint64_t v36 = sub_41BC(&qword_A13B8);
    uint64_t v37 = String.init<A>(describing:)(&v55, v36);
    unint64_t v39 = v38;
    char v55 = (void *)sub_68DC4(v37, v38, &v57);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, v56, v18 + 4, v18 + 12);
    swift_bridgeObjectRelease(v39);
    sub_24A98();
    _os_log_impl(&dword_0, v16, (os_log_type_t)v49, "IdiomSensitiveViewBuilder: Built views: %s", v18, 0xCu);
    uint64_t v40 = v48;
    swift_arrayDestroy(v48, 1LL, (char *)&type metadata for Any + 8);
    sub_48D4(v40);
    sub_48D4((uint64_t)v18);

    uint64_t v20 = (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v50, v52);
    a3 = v53;
  }

  else
  {
    sub_24A98();

    uint64_t v20 = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }

  uint64_t v41 = static os_signpost_type_t.end.getter(v20);
  if (qword_9F828 != -1) {
    swift_once(&qword_9F828, sub_17B5C);
  }
  uint64_t v42 = qword_A0D90;
  uint64_t v43 = type metadata accessor for SignpostLog.Signpost(0LL);
  os_signpost(_:dso:log:name:signpostID:)( v41,  &dword_0,  v42,  *(void *)(a3 + *(int *)(v43 + 20)),  *(void *)(a3 + *(int *)(v43 + 20) + 8),  *(unsigned __int8 *)(a3 + *(int *)(v43 + 20) + 16),  a3);
  return (char *)a4(a1, v9);
}

uint64_t sub_24A2C(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0) {
    return swift_errorRetain(a1);
  }
  else {
    return swift_bridgeObjectRetain(a1);
  }
}

uint64_t sub_24A38(void *a1)
{
  id v1 = [a1 encodedClassName];
  if (!v1) {
    return 0LL;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_24A98()
{
  return sub_7AF8(v1, v0);
}

uint64_t sub_24AB8()
{
  return sub_24A2C(v1, v0);
}

void sub_24AC4()
{
  id v1 = [v0 home];
  if (v1)
  {
    id v13 = v1;
    INSpeakableString.toSpeakableString.getter();
  }

  else
  {
    if (qword_9F820 != -1) {
      swift_once(&qword_9F820, sub_17ADC);
    }
    uint64_t v2 = type metadata accessor for Logger(0LL);
    sub_4870(v2, (uint64_t)qword_A3EB0);
    id v3 = v0;
    uint64_t v4 = (os_log_s *)Logger.logObject.getter(v3);
    os_log_type_t v5 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v4, v5))
    {
      unint64_t v6 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v7 = swift_slowAlloc(32LL, -1LL);
      uint64_t v15 = v7;
      *(_DWORD *)unint64_t v6 = 136315138;
      id v8 = v3;
      id v9 = [v8 description];
      uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
      unint64_t v12 = v11;

      uint64_t v14 = sub_68DC4(v10, v12, &v15);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, &v15, v6 + 4, v6 + 12);

      swift_bridgeObjectRelease(v12);
      _os_log_impl(&dword_0, v4, v5, "#%s error in fetching homeName. Setting empty String", v6, 0xCu);
      swift_arrayDestroy(v7, 1LL, (char *)&type metadata for Any + 8);
      sub_48D4(v7);
      sub_48D4((uint64_t)v6);
    }

    else
    {
    }

    SpeakableString.init(serializedValue:)(0LL, 0xE000000000000000LL);
  }

void *sub_24CE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = _swiftEmptyArrayStorage;
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    sub_250F0();
    id v8 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v9 = *v8;
      id v10 = sub_25108();
      swift_bridgeObjectRetain(v9);
      NSString v11 = String._bridgeToObjectiveC()();
      id v12 = [v10 initWithSpokenPhrase:v11];

      sub_25110();
      uint64_t v13 = sub_250CC();
      id v19 = sub_24F9C(v13, v14, v15, v16, v17, v18, v12, 0LL, v45, v46, v47, SHIBYTE(v47));
      swift_bridgeObjectRelease(v9);
      sub_25118();
      uint64_t v20 = v48[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v20);
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v19);
      sub_25120();
      v8 += 2;
      --v7;
    }

    while (v7);
    unint64_t v6 = v48;
  }

  sub_25100((uint64_t)v6);
  uint64_t v21 = *(void *)(a2 + 16);
  unint64_t v22 = _swiftEmptyArrayStorage;
  if (v21)
  {
    sub_250F0();
    uint64_t v23 = (uint64_t *)(a2 + 40);
    do
    {
      uint64_t v24 = *v23;
      id v25 = sub_25108();
      swift_bridgeObjectRetain(v24);
      NSString v26 = String._bridgeToObjectiveC()();
      id v27 = [v25 initWithSpokenPhrase:v26];

      sub_25110();
      id v28 = sub_24F9C(0LL, 0LL, 1LL, 37LL, 0LL, 37LL, 0LL, 0LL, 0LL, v27, 0, 0);
      swift_bridgeObjectRelease(v24);
      sub_25118();
      uint64_t v29 = v48[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v29);
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v29, v28);
      sub_25120();
      v23 += 2;
      --v21;
    }

    while (v21);
    unint64_t v22 = v48;
  }

  sub_25100((uint64_t)v22);
  uint64_t v30 = *(void *)(a3 + 16);
  if (v30)
  {
    specialized ContiguousArray.reserveCapacity(_:)(v30);
    unint64_t v31 = (uint64_t *)(a3 + 40);
    do
    {
      uint64_t v32 = *v31;
      id v33 = sub_25108();
      swift_bridgeObjectRetain(v32);
      NSString v34 = String._bridgeToObjectiveC()();
      id v35 = [v33 initWithSpokenPhrase:v34];

      sub_25110();
      uint64_t v36 = sub_250CC();
      id v42 = sub_24F9C(v36, v37, v38, v39, v40, v41, 0LL, v35, v45, v46, v47, SHIBYTE(v47));
      swift_bridgeObjectRelease(v32);
      sub_25118();
      uint64_t v43 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v43);
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v43, v42);
      sub_25120();
      v31 += 2;
      --v30;
    }

    while (v30);
  }

  sub_25100((uint64_t)_swiftEmptyArrayStorage);
  return _swiftEmptyArrayStorage;
}

id sub_24F9C( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, void *a7, void *a8, void *a9, void *a10, char a11, char a12)
{
  uint64_t v13 = v12;
  uint64_t v15 = a7;
  uint64_t v16 = a6;
  uint64_t v19 = a3;
  char v21 = a12;
  char v22 = a11;
  uint64_t v24 = a9;
  uint64_t v23 = a10;
  if (a1)
  {
    id v35 = a5;
    NSString v26 = a8;
    id v28 = v13;
    v30.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(a1);
    char v21 = a12;
    char v22 = a11;
    uint64_t v19 = a3;
    uint64_t v13 = v28;
    uint64_t v16 = a6;
    a8 = v26;
    uint64_t v23 = a10;
    uint64_t v15 = a7;
    uint64_t v24 = a9;
    a5 = v35;
  }

  else
  {
    v30.super.Class isa = 0LL;
  }

  BYTE1(v33) = v21 & 1;
  LOBYTE(v33) = v22 & 1;
  id v31 = objc_msgSend( v13,  "initWithEntityIdentifiers:entityName:entityType:outerDeviceType:outerDeviceName:deviceType:home:zone:group:roo m:isExcludeFilter:hasAllQuantifier:",  v30.super.isa,  a2,  v19,  a4,  a5,  v16,  v15,  a8,  v24,  v23,  v33);

  return v31;
}

uint64_t sub_250CC()
{
  return 0LL;
}

uint64_t sub_250F0()
{
  return specialized ContiguousArray.reserveCapacity(_:)(v0);
}

uint64_t sub_25100(uint64_t a1)
{
  return sub_251F4(a1);
}

id sub_25108()
{
  return objc_allocWithZone(*(Class *)(v0 + 3304));
}

id sub_25110()
{
  return objc_allocWithZone(*(Class *)(v0 + 3240));
}

uint64_t sub_25118()
{
  return specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
}

uint64_t sub_25120()
{
  return specialized ContiguousArray._endMutation()();
}

unint64_t sub_2512C(uint64_t a1)
{
  if (a1 == 1) {
    return 0xD000000000000018LL;
  }
  _StringGuts.grow(_:)(22LL);
  swift_bridgeObjectRelease(0xE000000000000000LL);
  v3._uint64_t countAndFlagsBits = sub_2512C(a1);
  object = v3._object;
  String.append(_:)(v3);
  swift_bridgeObjectRelease(object);
  return 0xD000000000000014LL;
}

uint64_t sub_251D0()
{
  return INSendAnnouncementAnnouncementUnsupportedReason.description.getter(*v0);
}

uint64_t sub_251D8(uint64_t a1)
{
  return sub_253B8( a1,  (uint64_t (*)(void))sub_5D434,  sub_5DAD8,  (uint64_t (*)(void))&type metadata accessor for DisplayHint);
}

uint64_t sub_251F4(uint64_t a1)
{
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0) {
      uint64_t v17 = a1;
    }
    else {
      uint64_t v17 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a1);
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter(v17);
    swift_bridgeObjectRelease(a1);
  }

  else
  {
    uint64_t v3 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8LL));
  }

  uint64_t v4 = *v1;
  if ((unint64_t)*v1 >> 62)
  {
    if (v4 < 0) {
      uint64_t v18 = *v1;
    }
    else {
      uint64_t v18 = v4 & 0xFFFFFFFFFFFFFF8LL;
    }
    sub_25C3C();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(v4);
  }

  else
  {
    uint64_t v5 = *(void *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFF8LL));
  }

  uint64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3))
  {
    __break(1u);
    goto LABEL_30;
  }

  uint64_t v4 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v1);
  uint64_t *v1 = v4;
  uint64_t v5 = 0LL;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000LL) == 0 && (v4 & 0x4000000000000000LL) == 0)
  {
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8LL;
    uint64_t v5 = 1LL;
  }

  uint64_t v9 = *(void *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFF8LL));
  while (1)
  {
    if (v9 <= v6) {
      uint64_t v9 = v6;
    }
    sub_25C3C();
    uint64_t v4 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v5, v9, 1LL, v4);
    swift_bridgeObjectRelease(*v1);
    uint64_t *v1 = v4;
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8LL;
LABEL_16:
    uint64_t result = sub_258EC(v8 + 8LL * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_30:
    __break(1u);
LABEL_31:
    if (v4 < 0) {
      uint64_t v19 = v4;
    }
    else {
      uint64_t v19 = v4 & 0xFFFFFFFFFFFFFF8LL;
    }
    sub_25C3C();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter(v19);
    swift_bridgeObjectRelease(v4);
  }

  if (v11 < 1) {
    goto LABEL_20;
  }
  uint64_t v12 = *(void *)((char *)&dword_10 + (*v1 & 0xFFFFFFFFFFFFFF8LL));
  BOOL v13 = __OFADD__(v12, v11);
  uint64_t v14 = v12 + v11;
  if (!v13)
  {
    *(void *)((char *)&dword_10 + (*v1 & 0xFFFFFFFFFFFFFF8LL)) = v14;
LABEL_20:
    uint64_t v15 = swift_bridgeObjectRelease(result);
    return specialized Array._endMutation()(v15, v16);
  }

  __break(1u);
  return result;
}

uint64_t sub_2539C(uint64_t a1)
{
  return sub_253B8( a1,  (uint64_t (*)(void))sub_5D63C,  sub_5DACC,  (uint64_t (*)(void))&type metadata accessor for SpeakableString);
}

uint64_t sub_253B8( uint64_t result, uint64_t (*a2)(void), uint64_t (*a3)(unint64_t, uint64_t, unint64_t), uint64_t (*a4)(void))
{
  uint64_t v5 = *(void *)(result + 16);
  uint64_t v6 = *v4;
  uint64_t v7 = *(void *)(*v4 + 16);
  if (__OFADD__(v7, v5))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }

  uint64_t v11 = result;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native(*v4);
  if (!(_DWORD)result || v7 + v5 > *(void *)(v6 + 24) >> 1)
  {
    uint64_t result = a2();
    uint64_t v6 = result;
  }

  if (!*(void *)(v11 + 16))
  {
    if (!v5) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }

  uint64_t v12 = *(void *)(v6 + 16);
  uint64_t v13 = (*(void *)(v6 + 24) >> 1) - v12;
  uint64_t result = a4(0LL);
  if (v13 < v5)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }

  uint64_t v14 = *(void *)(result - 8);
  unint64_t v15 = (*(unsigned __int8 *)(v14 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t result = a3(v11 + v15, v5, v6 + v15 + *(void *)(v14 + 72) * v12);
  if (!v5)
  {
LABEL_11:
    uint64_t result = swift_bridgeObjectRelease(v11);
    *uint64_t v4 = v6;
    return result;
  }

  uint64_t v16 = *(void *)(v6 + 16);
  BOOL v17 = __OFADD__(v16, v5);
  uint64_t v18 = v16 + v5;
  if (!v17)
  {
    *(void *)(v6 + 16) = v18;
    goto LABEL_11;
  }

LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_254C8()
{
  return sub_254E0((SEL *)&selRef_home);
}

uint64_t sub_254D4()
{
  return sub_254E0((SEL *)&selRef_room);
}

uint64_t sub_254E0(SEL *a1)
{
  uint64_t v3 = sub_41BC(&qword_A13C0);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for SpeakableString(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v29 = (uint64_t)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  uint64_t v27 = (uint64_t)&v26 - v10;
  uint64_t v11 = sub_25890(v1);
  if (v11) {
    uint64_t v12 = v11;
  }
  else {
    uint64_t v12 = (uint64_t)_swiftEmptyArrayStorage;
  }
  if (!((unint64_t)v12 >> 62))
  {
    uint64_t v13 = *(void *)((char *)&dword_10 + (v12 & 0xFFFFFFFFFFFFF8LL));
    uint64_t result = swift_bridgeObjectRetain(v12);
    if (v13) {
      goto LABEL_6;
    }
LABEL_27:
    uint64_t v16 = _swiftEmptyArrayStorage;
LABEL_28:
    swift_bridgeObjectRelease_n(v12, 2LL);
    return (uint64_t)v16;
  }

  if (v12 < 0) {
    uint64_t v25 = v12;
  }
  else {
    uint64_t v25 = v12 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v12);
  uint64_t result = _CocoaArrayWrapper.endIndex.getter(v25);
  uint64_t v13 = result;
  if (!result) {
    goto LABEL_27;
  }
LABEL_6:
  if (v13 >= 1)
  {
    uint64_t v15 = 0LL;
    unint64_t v28 = v12 & 0xC000000000000001LL;
    uint64_t v16 = _swiftEmptyArrayStorage;
    NSString v26 = a1;
    do
    {
      if (v28) {
        id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v15, v12);
      }
      else {
        id v17 = *(id *)(v12 + 8 * v15 + 32);
      }
      uint64_t v18 = v17;
      id v19 = objc_msgSend(v17, *a1, v26);
      if (v19)
      {
        uint64_t v20 = v19;
        INSpeakableString.toSpeakableString.getter();

        uint64_t v21 = 0LL;
      }

      else
      {
        uint64_t v21 = 1LL;
      }

      _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0((uint64_t)v5, v21, 1LL, v6);

      if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0((uint64_t)v5, 1LL, v6) == 1)
      {
        sub_25B54((uint64_t)v5);
      }

      else
      {
        uint64_t v22 = v27;
        sub_25C58(v27, (uint64_t)v5);
        sub_25C58(v29, v22);
        if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0) {
          uint64_t v16 = (void *)sub_25C4C(0, v16[2] + 1LL);
        }
        unint64_t v24 = v16[2];
        unint64_t v23 = v16[3];
        if (v24 >= v23 >> 1) {
          uint64_t v16 = (void *)sub_25C4C(v23 > 1, v24 + 1);
        }
        v16[2] = v24 + 1;
        sub_25C58( (uint64_t)v16 + ((*(unsigned __int8 *)(v7 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
        + *(void *)(v7 + 72) * v24,
          v29);
        a1 = v26;
      }

      ++v15;
    }

    while (v13 != v15);
    goto LABEL_28;
  }

  __break(1u);
  return result;
}

void sub_25780()
{
  uint64_t v0 = sub_254E0((SEL *)&selRef_home);
  sub_25C14(v0);
  uint64_t v1 = sub_25C44((SEL *)&selRef_room);
  sub_25C14(v1);
  uint64_t v2 = sub_25C44((SEL *)&selRef_zone);
  sub_25C14(v2);
  sub_25C28();
}

void sub_257FC()
{
  uint64_t v0 = sub_254E0((SEL *)&selRef_room);
  sub_25C14(v0);
  uint64_t v1 = sub_25C44((SEL *)&selRef_zone);
  sub_25C14(v1);
  sub_25C28();
}

unint64_t sub_2586C(unint64_t result, char a2, uint64_t a3)
{
  if ((a2 & 1) != 0)
  {
    if ((result & 0x8000000000000000LL) != 0)
    {
      __break(1u);
    }

    else if (*(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8LL)) > result)
    {
      return result;
    }

    __break(1u);
  }

  return result;
}

uint64_t sub_25890(void *a1)
{
  id v1 = [a1 recipients];
  if (!v1) {
    return 0LL;
  }
  uint64_t v2 = v1;
  unint64_t v3 = sub_25B94();
  uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  return v4;
}

uint64_t sub_258EC(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = result;
  unint64_t v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0) {
      uint64_t v15 = a3;
    }
    else {
      uint64_t v15 = a3 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a3);
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter(v15);
    uint64_t result = swift_bridgeObjectRelease(a3);
    if (!v7) {
      return a3;
    }
  }

  else
  {
    uint64_t v7 = *(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8LL));
    if (!v7) {
      return a3;
    }
  }

  if (v5)
  {
    if (v6)
    {
      if (a3 < 0) {
        uint64_t v8 = a3;
      }
      else {
        uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(a3);
      uint64_t v9 = _CocoaArrayWrapper.endIndex.getter(v8);
      uint64_t result = swift_bridgeObjectRelease(a3);
      if (v9 <= a2)
      {
        if (v7 >= 1)
        {
          sub_25BD0();
          swift_bridgeObjectRetain(a3);
          for (unint64_t i = 0LL; i != v7; ++i)
          {
            sub_41BC(&qword_A13C8);
            sub_25A70(v16, i, a3);
            uint64_t v12 = v11;
            id v14 = *v13;
            v12(v16, 0LL);
            *(void *)(v5 + 8 * i) = v14;
          }

          swift_bridgeObjectRelease(a3);
          return a3;
        }

        goto LABEL_22;
      }
    }

    else
    {
      if (*(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8LL)) <= a2)
      {
        sub_5DAE4((a3 & 0xFFFFFFFFFFFFFF8LL) + 32, *(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8LL)));
        return a3;
      }

      __break(1u);
    }

    __break(1u);
LABEL_22:
    __break(1u);
  }

  __break(1u);
  return result;
}

void sub_25A70(void *a1, unint64_t a2, uint64_t a3)
{
  unint64_t v6 = malloc(0x28uLL);
  *a1 = v6;
  sub_25AE8(v6, a2, a3);
  void v6[4] = v7;
  sub_9304();
}

void sub_25ABC(void *a1)
{
  id v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32LL))(*a1);
  free(v1);
}

void sub_25AE8(void *a1, unint64_t a2, uint64_t a3)
{
  unint64_t v6 = a3 & 0xC000000000000001LL;
  sub_2586C(a2, (a3 & 0xC000000000000001LL) == 0, a3);
  if (v6) {
    id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
  }
  else {
    id v7 = *(id *)(a3 + 8 * a2 + 32);
  }
  *a1 = v7;
  sub_9304();
}

void sub_25B4C(id *a1)
{
}

uint64_t sub_25B54(uint64_t a1)
{
  uint64_t v2 = sub_41BC(&qword_A13C0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

unint64_t sub_25B94()
{
  unint64_t result = qword_A0F08;
  if (!qword_A0F08)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___INHomeFilter);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_A0F08);
  }

  return result;
}

unint64_t sub_25BD0()
{
  unint64_t result = qword_A13D0;
  if (!qword_A13D0)
  {
    uint64_t v1 = sub_8564(&qword_A13C8);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_A13D0);
  }

  return result;
}

uint64_t sub_25C14(uint64_t a1)
{
  return sub_253B8(a1, v1, v2, v3);
}

  ;
}

uint64_t sub_25C3C()
{
  return swift_bridgeObjectRetain(v0);
}

uint64_t sub_25C44(SEL *a1)
{
  return sub_254E0(a1);
}

uint64_t sub_25C4C(char a1, int64_t a2)
{
  return sub_5D63C(a1, a2, 1, v2);
}

uint64_t sub_25C58(uint64_t a1, uint64_t a2)
{
  return v2(a1, a2, v3);
}

uint64_t sub_25C60()
{
  return sub_25C84((SEL *)&selRef_home);
}

uint64_t sub_25C6C()
{
  return sub_25C84((SEL *)&selRef_room);
}

uint64_t sub_25C78()
{
  return sub_25C84((SEL *)&selRef_zone);
}

uint64_t sub_25C84(SEL *a1)
{
  uint64_t v27 = a1;
  uint64_t v2 = sub_41BC(&qword_A13C0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for SpeakableString(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v29 = (uint64_t)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  uint64_t v26 = (uint64_t)&v26 - v9;
  uint64_t v10 = sub_25F44(v1);
  if (v10) {
    uint64_t v11 = v10;
  }
  else {
    uint64_t v11 = (uint64_t)_swiftEmptyArrayStorage;
  }
  if (!((unint64_t)v11 >> 62))
  {
    uint64_t v12 = *(void *)((char *)&dword_10 + (v11 & 0xFFFFFFFFFFFFF8LL));
    uint64_t result = swift_bridgeObjectRetain(v11);
    if (v12) {
      goto LABEL_6;
    }
LABEL_28:
    uint64_t v15 = _swiftEmptyArrayStorage;
LABEL_29:
    swift_bridgeObjectRelease_n(v11, 2LL);
    return (uint64_t)v15;
  }

  if (v11 < 0) {
    uint64_t v25 = v11;
  }
  else {
    uint64_t v25 = v11 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v11);
  uint64_t result = _CocoaArrayWrapper.endIndex.getter(v25);
  uint64_t v12 = result;
  if (!result) {
    goto LABEL_28;
  }
LABEL_6:
  if (v12 >= 1)
  {
    uint64_t v14 = 0LL;
    unint64_t v28 = v11 & 0xC000000000000001LL;
    uint64_t v15 = _swiftEmptyArrayStorage;
    do
    {
      if (v28) {
        id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v11);
      }
      else {
        id v16 = *(id *)(v11 + 8 * v14 + 32);
      }
      id v17 = v16;
      id v18 = [v16 originator];
      if (v18 && (v19 = v18, id v20 = [v18 *v27], v19, v20))
      {
        INSpeakableString.toSpeakableString.getter();

        uint64_t v21 = 0LL;
      }

      else
      {
        uint64_t v21 = 1LL;
      }

      _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0((uint64_t)v4, v21, 1LL, v5);

      if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0((uint64_t)v4, 1LL, v5) == 1)
      {
        sub_25B54((uint64_t)v4);
      }

      else
      {
        uint64_t v22 = v26;
        sub_25C58(v26, (uint64_t)v4);
        sub_25C58(v29, v22);
        if ((swift_isUniquelyReferenced_nonNull_native(v15) & 1) == 0) {
          uint64_t v15 = (void *)sub_25C4C(0, v15[2] + 1LL);
        }
        unint64_t v24 = v15[2];
        unint64_t v23 = v15[3];
        if (v24 >= v23 >> 1) {
          uint64_t v15 = (void *)sub_25C4C(v23 > 1, v24 + 1);
        }
        void v15[2] = v24 + 1;
        sub_25C58( (uint64_t)v15 + ((*(unsigned __int8 *)(v6 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
        + *(void *)(v6 + 72) * v24,
          v29);
      }

      ++v14;
    }

    while (v12 != v14);
    goto LABEL_29;
  }

  __break(1u);
  return result;
}

uint64_t sub_25F44(void *a1)
{
  id v1 = [a1 sentAnnouncements];
  if (!v1) {
    return 0LL;
  }
  uint64_t v2 = v1;
  unint64_t v3 = sub_25FA0();
  uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  return v4;
}

unint64_t sub_25FA0()
{
  unint64_t result = qword_A13D8;
  if (!qword_A13D8)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___INAnnouncementRecord);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_A13D8);
  }

  return result;
}

unint64_t INSendAnnouncementRecipientUnsupportedReason.description.getter(uint64_t a1)
{
  uint64_t v3 = a1 - 1;
  unint64_t result = 0xD000000000000011LL;
  switch(v3)
  {
    case 0LL:
      unint64_t result = 0x4E7465677261742ELL;
      break;
    case 1LL:
      return result;
    case 2LL:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 3LL:
      unint64_t result = 0xD00000000000001DLL;
      break;
    default:
      v7[4] = v1;
      v7[5] = v2;
      _StringGuts.grow(_:)(16LL);
      swift_bridgeObjectRelease(0xE000000000000000LL);
      strcpy((char *)v7, "Unknown code: ");
      HIBYTE(v7[1]) = -18;
      v5._uint64_t countAndFlagsBits = INSendAnnouncementRecipientUnsupportedReason.description.getter(0xD000000000000011LL);
      object = v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease(object);
      unint64_t result = v7[0];
      break;
  }

  return result;
}

unint64_t sub_260E8()
{
  return INSendAnnouncementRecipientUnsupportedReason.description.getter(*v0);
}

uint64_t sub_260F0()
{
  id v1 = [v0 disambiguationItems];
  uint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v3 = *(void *)(v2 + 16);
  swift_bridgeObjectRelease(v2);
  uint64_t v4 = &selRef_alternatives;
  if (v3) {
    uint64_t v4 = &selRef_disambiguationItems;
  }
  id v5 = [v0 *v4];
  uint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v6;
}

uint64_t sub_2619C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = static SAAppInfoFactory.createAppInfo(app:)();
  if (!v3) {
    return 0LL;
  }
  uint64_t v4 = (void *)v3;
  uint64_t v5 = sub_261F8(a2);

  return v5;
}

uint64_t sub_261F8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = Locale.identifier.getter(a1);
  uint64_t v5 = v4;
  v30[2] = v3;
  void v30[3] = v4;
  v30[0] = 45LL;
  v30[1] = 0xE100000000000000LL;
  v29[0] = 95LL;
  v29[1] = 0xE100000000000000LL;
  unint64_t v6 = sub_CD6C();
  uint64_t v7 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( v30,  v29,  0LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String,  &type metadata for String,  v6,  v6,  v6);
  uint64_t v9 = v8;
  swift_bridgeObjectRelease(v5);
  uint64_t v10 = sub_26C64(v1);
  if (!v10) {
    goto LABEL_15;
  }
  uint64_t v11 = v10;
  swift_bridgeObjectRetain(v9);
  uint64_t v12 = sub_49360(v7, v9, v11);
  uint64_t v14 = v13;
  swift_bridgeObjectRelease(v9);
  if (!v14)
  {
    char v16 = sub_263F8(v7, v9);
    if (v16 == 95) {
      goto LABEL_16;
    }
    char v17 = v16;
    if (qword_9F860 != -1) {
      swift_once(&qword_9F860, sub_267EC);
    }
    sub_493B0(v17, qword_A13E0);
    if (!v18)
    {
LABEL_16:
      uint64_t v26 = v11;
      goto LABEL_17;
    }

    uint64_t v9 = v18;
    uint64_t v19 = *(void *)(v18 + 16);
    if (v19)
    {
      uint64_t v20 = 0LL;
      while (1)
      {
        uint64_t v21 = sub_26754(*(_BYTE *)(v9 + v20 + 32));
        uint64_t v23 = v22;
        if (*(void *)(v11 + 16))
        {
          unint64_t v24 = sub_4AD08(v21, v22);
          if ((v25 & 1) != 0) {
            break;
          }
        }

        ++v20;
        swift_bridgeObjectRelease(v23);
        if (v19 == v20) {
          goto LABEL_14;
        }
      }

      unint64_t v28 = (uint64_t *)(*(void *)(v11 + 56) + 16 * v24);
      uint64_t v12 = *v28;
      swift_bridgeObjectRetain(v28[1]);
      swift_bridgeObjectRelease(v9);
      sub_D304();
      uint64_t v15 = v23;
      goto LABEL_4;
    }

LABEL_14:
    sub_D304();
LABEL_15:
    uint64_t v26 = v9;
LABEL_17:
    swift_bridgeObjectRelease(v26);
    return sub_26CC4(v2);
  }

  sub_D304();
  uint64_t v15 = v9;
LABEL_4:
  swift_bridgeObjectRelease(v15);
  return v12;
}

  uint64_t v40 = v110;
  if (v8 < 2) {
    goto LABEL_59;
  }
  uint64_t v36 = v8;
  uint64_t v41 = ((uint64_t (*)(void))dispatch thunk of UsoEntity_common_Announcement.recipients.getter)();
  if (!v41) {
    goto LABEL_59;
  }
  id v42 = v41;
  uint64_t v112 = (uint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v41 >> 62)
  {
    if (v41 >= 0) {
      uint64_t v36 = v41 & 0xFFFFFFFFFFFFFF8LL;
    }
    else {
      uint64_t v36 = v41;
    }
    sub_2F768();
    uint64_t v43 = _CocoaArrayWrapper.endIndex.getter(v36);
  }

  else
  {
    uint64_t v43 = *(void *)((char *)&dword_10 + (v41 & 0xFFFFFFFFFFFFFF8LL));
    sub_2F768();
  }

  uint64_t v45 = v107;
  uint64_t v44 = v108;
  uint64_t v46 = v109;
  if (v43)
  {
    if (v43 < 1)
    {
      __break(1u);
      goto LABEL_90;
    }

    __int16 v47 = 0LL;
    uint64_t v0 = v42 & 0xC000000000000001LL;
    do
    {
      if (v0) {
        specialized _ArrayBuffer._getElementSlowPath(_:)(v47, v42);
      }
      else {
        sub_2F718(v42 + 8 * v47);
      }
      uint64_t v48 = ((void *(*)(uint64_t *__return_ptr))dispatch thunk of CodeGenListEntry.entry.getter)(&v111);
      if (v111)
      {
        int v49 = ((uint64_t (*)(void *))dispatch thunk of CodeGenGlobalArgs.usoQuantifier.getter)(v48);
        sub_1C008();
        uint64_t v50 = sub_BD1C();
        if (v49)
        {
          ((void (*)(uint64_t))specialized Array._makeUniqueAndReserveCapacityIfNotUnique())(v50);
          uint64_t v52 = *(void *)((char *)&dword_10 + (v112 & 0xFFFFFFFFFFFFFF8LL));
          uint64_t v51 = *(void *)((char *)&dword_18 + (v112 & 0xFFFFFFFFFFFFFF8LL));
          if (v52 >= v51 >> 1) {
            ((void (*)(BOOL, unint64_t, uint64_t))specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:))( v51 > 1,  v52 + 1,  1LL);
          }
          uint64_t v53 = ((uint64_t (*)(unint64_t, uint64_t))specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:))( v52,  v49);
          specialized Array._endMutation()(v53, v54);
        }
      }

      else
      {
        sub_1C008();
      }

      ++v47;
    }

    while (v43 != v47);
    sub_2F604();
    uint64_t v36 = v112;
    uint64_t v46 = v109;
  }

  else
  {
    sub_2F604();
    uint64_t v36 = (uint64_t)_swiftEmptyArrayStorage;
  }

  sub_2F604();
  if ((unint64_t)v36 >> 62)
  {
    if (v36 < 0) {
      uint64_t v100 = v36;
    }
    else {
      uint64_t v100 = v36 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v36);
    uint64_t v61 = _CocoaArrayWrapper.endIndex.getter(v100);
    sub_D304();
  }

  else
  {
    uint64_t v61 = *(void *)((char *)&dword_10 + (v36 & 0xFFFFFFFFFFFFF8LL));
  }

  id v42 = v104;
  uint64_t v43 = v105;
  if (v61)
  {
    uint64_t v0 = v36 & 0xC000000000000001LL;
    ((void (*)(void, BOOL, uint64_t))sub_25868)(0LL, (v36 & 0xC000000000000001LL) == 0, v36);
    if ((v36 & 0xC000000000000001LL) == 0)
    {
      uint64_t v62 = *(void *)(v36 + 32);
      swift_retain(v62);
LABEL_43:
      uint64_t v63 = sub_D304();
      ((void (*)(uint64_t))dispatch thunk of UsoEntity_common_Quantifier.definedValue.getter)(v63);
      swift_release(v62);
      goto LABEL_45;
    }

uint64_t type metadata accessor for AppInfoBuilder()
{
  return objc_opt_self(&OBJC_CLASS____TtC35HomeCommunicationFlowDelegatePlugin14AppInfoBuilder);
}

uint64_t sub_263F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = _findStringSwitchCaseWithCache(cases:string:cache:)(&off_923E8, a1, a2, &unk_9F910);
  swift_bridgeObjectRelease(a2);
  uint64_t v4 = 0LL;
  uint64_t result = 2LL;
  switch(v3)
  {
    case 0LL:
      goto LABEL_3;
    case 1LL:
      uint64_t v4 = 1LL;
LABEL_3:
      uint64_t result = v4;
      break;
    case 2LL:
      return result;
    case 3LL:
      uint64_t result = 3LL;
      break;
    case 4LL:
      uint64_t result = 4LL;
      break;
    case 5LL:
      uint64_t result = 5LL;
      break;
    case 6LL:
      uint64_t result = 6LL;
      break;
    case 7LL:
      uint64_t result = 7LL;
      break;
    case 8LL:
      uint64_t result = 8LL;
      break;
    case 9LL:
      uint64_t result = 9LL;
      break;
    case 10LL:
      uint64_t result = 10LL;
      break;
    case 11LL:
      uint64_t result = 11LL;
      break;
    case 12LL:
      uint64_t result = 12LL;
      break;
    case 13LL:
      uint64_t result = 13LL;
      break;
    case 14LL:
      uint64_t result = 14LL;
      break;
    case 15LL:
      uint64_t result = 15LL;
      break;
    case 16LL:
      uint64_t result = 16LL;
      break;
    case 17LL:
      uint64_t result = 17LL;
      break;
    case 18LL:
      uint64_t result = 18LL;
      break;
    case 19LL:
      uint64_t result = 19LL;
      break;
    case 20LL:
      uint64_t result = 20LL;
      break;
    case 21LL:
      uint64_t result = 21LL;
      break;
    case 22LL:
      uint64_t result = 22LL;
      break;
    case 23LL:
      uint64_t result = 23LL;
      break;
    case 24LL:
      uint64_t result = 24LL;
      break;
    case 25LL:
      uint64_t result = 25LL;
      break;
    case 26LL:
      uint64_t result = 26LL;
      break;
    case 27LL:
      uint64_t result = 27LL;
      break;
    case 28LL:
      uint64_t result = 28LL;
      break;
    case 29LL:
      uint64_t result = 29LL;
      break;
    case 30LL:
      uint64_t result = 30LL;
      break;
    case 31LL:
      uint64_t result = 31LL;
      break;
    case 32LL:
      uint64_t result = 32LL;
      break;
    case 33LL:
      uint64_t result = 33LL;
      break;
    case 34LL:
      uint64_t result = 34LL;
      break;
    case 35LL:
      uint64_t result = 35LL;
      break;
    case 36LL:
      uint64_t result = 36LL;
      break;
    case 37LL:
      uint64_t result = 37LL;
      break;
    case 38LL:
      uint64_t result = 38LL;
      break;
    case 39LL:
      uint64_t result = 39LL;
      break;
    case 40LL:
      uint64_t result = 40LL;
      break;
    case 41LL:
      uint64_t result = 41LL;
      break;
    case 42LL:
      uint64_t result = 42LL;
      break;
    case 43LL:
      uint64_t result = 43LL;
      break;
    case 44LL:
      uint64_t result = 44LL;
      break;
    case 45LL:
      uint64_t result = 45LL;
      break;
    case 46LL:
      uint64_t result = 46LL;
      break;
    case 47LL:
      uint64_t result = 47LL;
      break;
    case 48LL:
      uint64_t result = 48LL;
      break;
    case 49LL:
      uint64_t result = 49LL;
      break;
    case 50LL:
      uint64_t result = 50LL;
      break;
    case 51LL:
      uint64_t result = 51LL;
      break;
    case 52LL:
      uint64_t result = 52LL;
      break;
    case 53LL:
      uint64_t result = 53LL;
      break;
    case 54LL:
      uint64_t result = 54LL;
      break;
    case 55LL:
      uint64_t result = 55LL;
      break;
    case 56LL:
      uint64_t result = 56LL;
      break;
    case 57LL:
      uint64_t result = 57LL;
      break;
    case 58LL:
      uint64_t result = 58LL;
      break;
    case 59LL:
      uint64_t result = 59LL;
      break;
    case 60LL:
      uint64_t result = 60LL;
      break;
    case 61LL:
      uint64_t result = 61LL;
      break;
    case 62LL:
      uint64_t result = 62LL;
      break;
    case 63LL:
      uint64_t result = 63LL;
      break;
    case 64LL:
      uint64_t result = 64LL;
      break;
    case 65LL:
      uint64_t result = 65LL;
      break;
    case 66LL:
      uint64_t result = 66LL;
      break;
    case 67LL:
      uint64_t result = 67LL;
      break;
    case 68LL:
      uint64_t result = 68LL;
      break;
    case 69LL:
      uint64_t result = 69LL;
      break;
    case 70LL:
      uint64_t result = 70LL;
      break;
    case 71LL:
      uint64_t result = 71LL;
      break;
    case 72LL:
      uint64_t result = 72LL;
      break;
    case 73LL:
      uint64_t result = 73LL;
      break;
    case 74LL:
      uint64_t result = 74LL;
      break;
    case 75LL:
      uint64_t result = 75LL;
      break;
    case 76LL:
      uint64_t result = 76LL;
      break;
    case 77LL:
      uint64_t result = 77LL;
      break;
    case 78LL:
      uint64_t result = 78LL;
      break;
    case 79LL:
      uint64_t result = 79LL;
      break;
    case 80LL:
      uint64_t result = 80LL;
      break;
    case 81LL:
      uint64_t result = 81LL;
      break;
    case 82LL:
      uint64_t result = 82LL;
      break;
    case 83LL:
      uint64_t result = 83LL;
      break;
    case 84LL:
      uint64_t result = 84LL;
      break;
    case 85LL:
      uint64_t result = 85LL;
      break;
    case 86LL:
      uint64_t result = 86LL;
      break;
    case 87LL:
      uint64_t result = 87LL;
      break;
    case 88LL:
      uint64_t result = 88LL;
      break;
    case 89LL:
      uint64_t result = 89LL;
      break;
    case 90LL:
      uint64_t result = 90LL;
      break;
    case 91LL:
      uint64_t result = 91LL;
      break;
    case 92LL:
      uint64_t result = 92LL;
      break;
    case 93LL:
      uint64_t result = 93LL;
      break;
    case 94LL:
      uint64_t result = 94LL;
      break;
    default:
      uint64_t result = 95LL;
      break;
  }

  return result;
}

uint64_t sub_26754(char a1)
{
  return qword_72218[a1];
}

void sub_26774(unsigned __int8 *a1, unsigned __int8 *a2)
{
}

void sub_26780()
{
}

uint64_t sub_26788(uint64_t a1)
{
  return sub_1E570(a1, *v1);
}

void sub_26790(uint64_t a1)
{
}

uint64_t sub_26798@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result = sub_263F8(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t sub_267C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_26754(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_267EC()
{
  uint64_t v0 = sub_41BC(&qword_A1488);
  uint64_t inited = swift_initStackObject(v0, &v5);
  *(_BYTE *)(inited + 32) = 1;
  *(void *)(inited + 40) = &off_92CF0;
  *(_BYTE *)(inited + 4sub_423C(v0 + 8) = 8;
  *(void *)(inited + 56) = &off_92D18;
  *(_BYTE *)(inited + 64) = 10;
  *(void *)(inited + 72) = &off_92D40;
  *(_BYTE *)(inited + 80) = 11;
  *(void *)(inited + 8sub_423C(v0 + 8) = &off_92D68;
  *(_BYTE *)(inited + 96) = 12;
  *(void *)(inited + 104) = &off_92D90;
  *(_BYTE *)(inited + 112) = 16;
  *(void *)(inited + 120) = &off_92DB8;
  *(_BYTE *)(inited + 12sub_423C(v0 + 8) = 17;
  *(void *)(inited + 136) = &off_92DE0;
  *(_BYTE *)(inited + 144) = 18;
  *(void *)(inited + 152) = &off_92E08;
  *(_BYTE *)(inited + 160) = 20;
  *(void *)(inited + 16sub_423C(v0 + 8) = &off_92E30;
  *(_BYTE *)(inited + 176) = 22;
  *(void *)(inited + 184) = &off_92E58;
  *(_BYTE *)(inited + 192) = 21;
  *(void *)(inited + 200) = &off_92E80;
  *(_BYTE *)(inited + 20sub_423C(v0 + 8) = 19;
  *(void *)(inited + 216) = &off_92EA8;
  *(_BYTE *)(inited + 224) = 23;
  *(void *)(inited + 232) = &off_92ED0;
  *(_BYTE *)(inited + 240) = 27;
  *(void *)(inited + 24sub_423C(v0 + 8) = &off_92EF8;
  *(_BYTE *)(inited + 256) = 30;
  *(void *)(inited + 264) = &off_92F20;
  *(_BYTE *)(inited + 272) = 28;
  *(void *)(inited + 280) = &off_92F48;
  *(_BYTE *)(inited + 28sub_423C(v0 + 8) = 29;
  *(void *)(inited + 296) = &off_92F70;
  *(_BYTE *)(inited + 304) = 32;
  *(void *)(inited + 312) = &off_92F98;
  *(_BYTE *)(inited + 320) = 34;
  *(void *)(inited + 32sub_423C(v0 + 8) = &off_92FC0;
  *(_BYTE *)(inited + 336) = 35;
  *(void *)(inited + 344) = &off_92FE8;
  *(_BYTE *)(inited + 352) = 37;
  *(void *)(inited + 360) = &off_93010;
  *(_BYTE *)(inited + 36sub_423C(v0 + 8) = 36;
  *(void *)(inited + 376) = &off_93038;
  *(_BYTE *)(inited + 384) = 39;
  *(void *)(inited + 392) = &off_93060;
  *(_BYTE *)(inited + 400) = 45;
  *(void *)(inited + 40sub_423C(v0 + 8) = &off_93088;
  *(_BYTE *)(inited + 416) = 46;
  *(void *)(inited + 424) = &off_930B0;
  *(_BYTE *)(inited + 432) = 52;
  *(void *)(inited + 440) = &off_930D8;
  *(_BYTE *)(inited + 44sub_423C(v0 + 8) = 54;
  *(void *)(inited + 456) = &off_93100;
  *(_BYTE *)(inited + 464) = 56;
  *(void *)(inited + 472) = &off_93128;
  *(_BYTE *)(inited + 480) = 58;
  *(void *)(inited + 48sub_423C(v0 + 8) = &off_93150;
  *(_BYTE *)(inited + 496) = 62;
  *(void *)(inited + 504) = &off_93178;
  *(_BYTE *)(inited + 512) = 67;
  *(void *)(inited + 520) = &off_931A0;
  *(_BYTE *)(inited + 52sub_423C(v0 + 8) = 68;
  *(void *)(inited + 536) = &off_931C8;
  *(_BYTE *)(inited + 544) = 72;
  *(void *)(inited + 552) = &off_931F0;
  *(_BYTE *)(inited + 560) = 76;
  *(void *)(inited + 56sub_423C(v0 + 8) = &off_93218;
  *(_BYTE *)(inited + 576) = 78;
  *(void *)(inited + 584) = &off_93240;
  *(_BYTE *)(inited + 592) = 80;
  *(void *)(inited + 600) = &off_93268;
  *(_BYTE *)(inited + 60sub_423C(v0 + 8) = 84;
  *(void *)(inited + 616) = &off_93290;
  *(_BYTE *)(inited + 624) = 94;
  *(void *)(inited + 632) = &off_932B8;
  *(_BYTE *)(inited + 640) = 92;
  *(void *)(inited + 64sub_423C(v0 + 8) = &off_932E0;
  *(_BYTE *)(inited + 656) = 15;
  *(void *)(inited + 664) = &off_93308;
  *(void *)(inited + 680) = &off_93330;
  *(_BYTE *)(inited + 68sub_423C(v0 + 8) = 26;
  *(void *)(inited + 696) = &off_93358;
  *(_BYTE *)(inited + 704) = 66;
  *(void *)(inited + 712) = &off_93380;
  *(_BYTE *)(inited + 720) = 57;
  *(void *)(inited + 72sub_423C(v0 + 8) = &off_933A8;
  *(_BYTE *)(inited + 736) = 89;
  *(void *)(inited + 744) = &off_933D0;
  *(_BYTE *)(inited + 752) = 91;
  *(void *)(inited + 760) = &off_933F8;
  *(_BYTE *)(inited + 76sub_423C(v0 + 8) = 90;
  *(void *)(inited + 776) = &off_93420;
  *(_BYTE *)(inited + 784) = 93;
  *(_OWORD *)(inited + 16) = xmmword_72810;
  *(void *)(inited + 792) = &off_93448;
  *(_BYTE *)(inited + 800) = 88;
  *(_BYTE *)(inited + 672) = 0;
  *(void *)(inited + 80sub_423C(v0 + 8) = &off_93470;
  *(_BYTE *)(inited + 816) = 87;
  *(void *)(inited + 824) = &off_93498;
  *(_BYTE *)(inited + 832) = 86;
  *(void *)(inited + 840) = &off_934C0;
  uint64_t v2 = sub_41BC(&qword_A1490);
  unint64_t v3 = sub_26D24();
  uint64_t result = Dictionary.init(dictionaryLiteral:)(inited, &type metadata for SiriLocales, v2, v3);
  qword_A13E0 = result;
  return result;
}

uint64_t sub_26C64(void *a1)
{
  id v1 = [a1 appNameMap];
  if (!v1) {
    return 0LL;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)( v1,  &type metadata for String,  &type metadata for String,  &protocol witness table for String);

  return v3;
}

uint64_t sub_26CC4(void *a1)
{
  id v1 = [a1 displayAppName];
  if (!v1) {
    return 0LL;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

unint64_t sub_26D24()
{
  unint64_t result = qword_A1498;
  if (!qword_A1498)
  {
    unint64_t result = swift_getWitnessTable(&unk_721D0, &type metadata for SiriLocales);
    atomic_store(result, (unint64_t *)&qword_A1498);
  }

  return result;
}

uint64_t getEnumTagSinglePayload for SiriLocales(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }

  if (a2 >= 0xA2)
  {
    if (a2 + 94 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 94) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }

    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }

    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }

    int v5 = (*a1 | (v4 << 8)) - 95;
    return (v5 + 1);
  }

uint64_t storeEnumTagSinglePayload for SiriLocales(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 94 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 94) >> 8 < 0xFF) {
    LODWORD(sub_21A1C(v0, v4) = 1;
  }
  else {
    LODWORD(sub_21A1C(v0, v4) = v3;
  }
  if (a3 >= 0xA2) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xA1) {
    return ((uint64_t (*)(void))((char *)&loc_26E34 + 4 * byte_72124[v4]))();
  }
  *a1 = a2 + 94;
  return ((uint64_t (*)(void))((char *)sub_26E68 + 4 * byte_7211F[v4]))();
}

uint64_t sub_26E68(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_26E70(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x26E78LL);
  }
  return result;
}

uint64_t sub_26E84(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x26E8CLL);
  }
  *(_BYTE *)unint64_t result = a2 + 94;
  return result;
}

uint64_t sub_26E90(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_26E98(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SiriLocales()
{
  return &type metadata for SiriLocales;
}

unint64_t sub_26EB8()
{
  unint64_t result = qword_A14A0;
  if (!qword_A14A0)
  {
    unint64_t result = swift_getWitnessTable(&unk_721A8, &type metadata for SiriLocales);
    atomic_store(result, (unint64_t *)&qword_A14A0);
  }

  return result;
}

void sub_26EF4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v68 = a2;
  uint64_t v66 = type metadata accessor for Parse.DirectInvocation(0LL);
  uint64_t v64 = *(void *)(v66 - 8);
  sub_1736C();
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v67 = (uint64_t)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v4);
  Swift::String v65 = (char *)&v62 - v6;
  uint64_t v7 = type metadata accessor for USOParse(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  sub_9298();
  uint64_t v11 = v10 - v9;
  sub_41BC(&qword_A1890);
  sub_1736C();
  __chkstk_darwin(v12);
  sub_9298();
  uint64_t v15 = v14 - v13;
  uint64_t v16 = type metadata accessor for Siri_Nlu_External_UserParse(0LL);
  uint64_t v62 = *(void *)(v16 - 8);
  uint64_t v63 = v16;
  sub_1736C();
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v62 - v21;
  uint64_t v23 = type metadata accessor for Parse(0LL);
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  sub_9298();
  uint64_t v27 = (uint64_t *)(v26 - v25);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v26 - v25, a1, v23);
  int v28 = (*(uint64_t (**)(uint64_t *, uint64_t))(v24 + 88))(v27, v23);
  if (v28 == enum case for Parse.NLv3IntentOnly(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v24 + 8))(v27, v23);
LABEL_5:
    sub_27E5C();
    return;
  }

  if (v28 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    sub_27E24();
    uint64_t v29 = sub_41BC(&qword_A0CD8);
    swift_release(*(uint64_t *)((char *)v27 + *(int *)(v29 + 48)));
    uint64_t v30 = type metadata accessor for NLIntent(0LL);
    (*(void (**)(uint64_t *, uint64_t))(*(void *)(v30 - 8) + 8LL))(v27, v30);
    goto LABEL_5;
  }

  if (v28 == enum case for Parse.directInvocation(_:))
  {
    sub_27E24();
    uint64_t v31 = v64;
    uint64_t v32 = (uint64_t)v65;
    uint64_t v33 = v66;
    (*(void (**)(char *, uint64_t *, uint64_t))(v64 + 32))(v65, v27, v66);
    if (qword_9F820 != -1) {
      swift_once(&qword_9F820, sub_17ADC);
    }
    uint64_t v34 = sub_1BDD8();
    sub_4870(v34, (uint64_t)qword_A3EB0);
    uint64_t v35 = v67;
    uint64_t v36 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))(v67, v32, v33);
    uint64_t v37 = (os_log_s *)Logger.logObject.getter(v36);
    os_log_type_t v38 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = (uint8_t *)sub_144F0(12LL);
      uint64_t v40 = sub_144F0(32LL);
      uint64_t v70 = v40;
      *(_DWORD *)uint64_t v39 = 136315138;
      uint64_t v41 = Parse.DirectInvocation.identifier.getter(v40);
      uint64_t v69 = sub_68DC4(v41, v42, &v70);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, &v70, v39 + 4, v39 + 12);
      sub_D304();
      sub_27E54(v67);
      sub_14550(&dword_0, v37, v38, "#NLTransformer building HomeCommunicationNLIntent for direct invocation %s", v39);
      sub_27E34((uint64_t)&type metadata for Any);
      sub_48D4(v40);
      sub_48D4((uint64_t)v39);
    }

    else
    {
      sub_27E54(v35);
    }

    sub_27A00(v32, v68);
    sub_27E54(v32);
  }

  else if (v28 == enum case for Parse.NLv4IntentOnly(_:))
  {
    sub_27E24();
    uint64_t v43 = *v27;
    static ConversionUtils.toUserParse(from:)(*v27);
    uint64_t v44 = v63;
    if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v15, 1LL, v63) == 1)
    {
      sub_27DEC(v15, &qword_A1890);
      if (qword_9F820 != -1) {
        swift_once(&qword_9F820, sub_17ADC);
      }
      uint64_t v45 = sub_1BDD8();
      sub_4870(v45, (uint64_t)qword_A3EB0);
      uint64_t v46 = swift_unknownObjectRetain_n(v43, 2LL);
      __int16 v47 = (os_log_s *)Logger.logObject.getter(v46);
      os_log_type_t v48 = static os_log_type_t.error.getter();
      if (sub_17498(v48))
      {
        int v49 = (uint8_t *)sub_144F0(12LL);
        uint64_t v50 = sub_144F0(32LL);
        uint64_t v69 = v43;
        uint64_t v70 = v50;
        *(_DWORD *)int v49 = 136315138;
        swift_unknownObjectRetain(v43);
        uint64_t v51 = sub_41BC(&qword_A1680);
        uint64_t v52 = String.init<A>(describing:)(&v69, v51);
        unint64_t v54 = v53;
        uint64_t v69 = sub_68DC4(v52, v53, &v70);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, &v70, v49 + 4, v49 + 12);
        swift_unknownObjectRelease_n(v43, 2LL);
        swift_bridgeObjectRelease(v54);
        sub_14550( &dword_0,  v47,  (os_log_type_t)v44,  "#NLTransformer Couldn't transform UserDialogAct %s into UserParse to get the UDAs.",  v49);
        sub_27E34((uint64_t)&type metadata for Any);
        sub_48D4(v50);
        sub_48D4((uint64_t)v49);
        swift_unknownObjectRelease(v43);
      }

      else
      {

        swift_unknownObjectRelease_n(v43, 3LL);
      }

      goto LABEL_5;
    }

    uint64_t v56 = v62;
    (*(void (**)(char *, uint64_t, uint64_t))(v62 + 32))(v22, v15, v44);
    sub_27584(v68);
    swift_unknownObjectRelease(v43);
    (*(void (**)(char *, uint64_t))(v56 + 8))(v22, v44);
  }

  else if (v28 == enum case for Parse.uso(_:))
  {
    sub_27E24();
    uint64_t v55 = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(v8 + 32))(v11, v27, v7);
    USOParse.userParse.getter(v55);
    sub_27584(v68);
    (*(void (**)(char *, uint64_t))(v62 + 8))(v20, v63);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v11, v7);
  }

  else
  {
    if (qword_9F820 != -1) {
      swift_once(&qword_9F820, sub_17ADC);
    }
    uint64_t v57 = sub_1BDD8();
    uint64_t v58 = sub_4870(v57, (uint64_t)qword_A3EB0);
    uint64_t v59 = (os_log_s *)Logger.logObject.getter(v58);
    os_log_type_t v60 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v59, v60))
    {
      uint64_t v61 = (uint8_t *)sub_144F0(2LL);
      *(_WORD *)uint64_t v61 = 0;
      _os_log_impl(&dword_0, v59, v60, "NLTransformer got an unknown parse", v61, 2u);
      sub_48D4((uint64_t)v61);
    }

    sub_27E5C();
    (*(void (**)(uint64_t *, uint64_t))(v24 + 8))(v27, v23);
  }

void sub_27584(uint64_t a1@<X8>)
{
  os_log_type_t v2 = v1;
  sub_41BC((uint64_t *)&unk_A1610);
  sub_1736C();
  __chkstk_darwin(v4);
  sub_9298();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  sub_9298();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = Siri_Nlu_External_UserParse.userDialogActs.getter();
  sub_5D0B0(v13, v7);
  sub_D304();
  if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v7, 1LL, v8) == 1)
  {
    sub_27DEC(v7, (uint64_t *)&unk_A1610);
    if (qword_9F820 != -1) {
      swift_once(&qword_9F820, sub_17ADC);
    }
    uint64_t v14 = sub_1BDD8();
    uint64_t v15 = sub_4870(v14, (uint64_t)qword_A3EB0);
    uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
    os_log_type_t v17 = static os_log_type_t.error.getter();
    if (sub_17498(v17))
    {
      uint64_t v18 = (uint8_t *)sub_144F0(2LL);
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl(&dword_0, v16, v2, "#NLTransformer No user dialog act found in userParse.", v18, 2u);
      sub_48D4((uint64_t)v18);
    }

    *(void *)(a1 + 32) = 0LL;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }

  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v12, v7, v8);
    sub_2774C(&v19);
    sub_27D78((uint64_t)&v20, a1, &qword_A02E0);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v12, v8);
  }

uint64_t sub_2774C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = v1 + 32;
  swift_beginAccess(v1 + 32, v18, 0LL, 0LL);
  sub_27D18(v1 + 32, (uint64_t)&v19, (uint64_t *)&unk_A1600);
  if (v20[3] == 1LL)
  {
    sub_27DEC((uint64_t)&v19, (uint64_t *)&unk_A1600);
    memset(v21, 0, sizeof(v21));
    uint64_t v22 = 0LL;
  }

  else
  {
    sub_27D18((uint64_t)v20, (uint64_t)v21, &qword_A02E0);
    sub_27DEC((uint64_t)&v19, (uint64_t *)&unk_A1600);
  }

  sub_28200();
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v4 = sub_1BDD8();
  sub_4870(v4, (uint64_t)qword_A3EB0);
  sub_27D18((uint64_t)v17, (uint64_t)&v19, &qword_A02E0);
  uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)sub_144F0(12LL);
    uint64_t v9 = sub_144F0(32LL);
    v16[0] = v9;
    *(_DWORD *)uint64_t v8 = 136315138;
    uint64_t v10 = sub_41BC(&qword_A02E0);
    uint64_t v11 = Optional.debugDescription.getter(v10);
    uint64_t v14 = sub_68DC4(v11, v12, v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, &v15, v8 + 4, v8 + 12);
    sub_D304();
    sub_27DEC((uint64_t)&v19, &qword_A02E0);
    sub_14550( &dword_0,  v6,  v7,  "#NLv4Transformer found no cached result. Transformation generated HomeCommunicationNLIntent: %s",  v8);
    swift_arrayDestroy(v9, 1LL, (char *)&type metadata for Any + 8);
    sub_48D4(v9);
    sub_48D4((uint64_t)v8);
  }

  else
  {

    sub_27DEC((uint64_t)&v19, &qword_A02E0);
  }

  sub_27DEC((uint64_t)v21, &qword_A02E0);
  *a1 = 1LL;
  sub_27D78((uint64_t)v17, (uint64_t)(a1 + 1), &qword_A02E0);
  sub_27D44(a1, &v19);
  sub_27D78((uint64_t)&v19, (uint64_t)v16, (uint64_t *)&unk_A1600);
  swift_beginAccess(v3, &v14, 33LL, 0LL);
  sub_27DA4((uint64_t)v16, v3);
  return swift_endAccess(&v14);
}

uint64_t sub_27A00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 88);
  swift_retain(v5);
  sub_ACD0(a1, v2 + 96, a2);
  return swift_release(v5);
}

void *sub_27A50()
{
  return v0;
}

uint64_t sub_27A9C()
{
  return swift_deallocClassInstance(v0, 136LL, 7LL);
}

uint64_t type metadata accessor for NLTransformer()
{
  return objc_opt_self(&OBJC_CLASS____TtC35HomeCommunicationFlowDelegatePlugin13NLTransformer);
}

uint64_t destroy for TransformationResult(uint64_t result)
{
  if (*(void *)(result + 32)) {
    return sub_423C((void *)(result + 8));
  }
  return result;
}

void *initializeWithCopy for TransformationResult(void *a1, uint64_t *a2)
{
  uint64_t v5 = *a2;
  uint64_t v4 = a2 + 1;
  *a1 = v5;
  uint64_t v6 = a1 + 1;
  uint64_t v7 = a2[4];
  if (v7)
  {
    uint64_t v8 = a2[5];
    a1[4] = v7;
    a1[5] = v8;
    (**(void (***)(void *, void *))(v7 - 8))(v6, v4);
  }

  else
  {
    __int128 v9 = *((_OWORD *)v4 + 1);
    *(_OWORD *)uint64_t v6 = *(_OWORD *)v4;
    *((_OWORD *)v6 + 1) = v9;
    void v6[4] = v4[4];
  }

  return a1;
}

void *assignWithCopy for TransformationResult(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = a1 + 1;
  uint64_t v4 = a2 + 1;
  uint64_t v5 = a2[4];
  if (!a1[4])
  {
    if (v5)
    {
      a1[4] = v5;
      a1[5] = a2[5];
      (**(void (***)(uint64_t, uint64_t))(v5 - 8))((uint64_t)(a1 + 1), (uint64_t)(a2 + 1));
      return a1;
    }

__n128 initializeWithTake for TransformationResult(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  __int128 v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

void *assignWithTake for TransformationResult(void *a1, uint64_t a2)
{
  *a1 = *(void *)a2;
  uint64_t v4 = a1 + 1;
  if (a1[4]) {
    sub_423C(a1 + 1);
  }
  __int128 v5 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)uint64_t v4 = *(_OWORD *)(a2 + 8);
  *((_OWORD *)v4 + 1) = v5;
  void v4[4] = *(void *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for TransformationResult(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 48))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }

    else
    {
      unint64_t v3 = *(void *)(a1 + 32);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }

  else
  {
    int v2 = -1;
  }

  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TransformationResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0LL;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + sub_423C(v0 + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(_BYTE *)(result + 4sub_423C(v0 + 8) = 1;
    }
  }

  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(_BYTE *)(result + 4sub_423C(v0 + 8) = 0;
    }
    if (a2) {
      *(void *)(result + 32) = a2;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for TransformationResult()
{
  return &type metadata for TransformationResult;
}

void sub_27D18(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = sub_27E44(a1, a2, a3);
  sub_27E70(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 16LL));
  sub_AA5C();
}

void *sub_27D44(uint64_t *a1, void *a2)
{
  return a2;
}

void sub_27D78(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = sub_27E44(a1, a2, a3);
  sub_27E70(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 32LL));
  sub_AA5C();
}

uint64_t sub_27DA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_41BC((uint64_t *)&unk_A1600);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

void sub_27DEC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_41BC(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8LL))(a1, v3);
  sub_AA5C();
}

uint64_t sub_27E24()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 96))(v1, v2);
}

uint64_t sub_27E34@<X0>(uint64_t a1@<X8>)
{
  return swift_arrayDestroy(v1, 1LL, a1 + 8);
}

uint64_t sub_27E44(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_41BC(a3);
}

uint64_t sub_27E54(uint64_t a1)
{
  return v1(a1, v2);
}

double sub_27E5C()
{
  uint64_t v1 = *(void *)(v0 - 104);
  *(void *)(v1 + 32) = 0LL;
  double result = 0.0;
  *(_OWORD *)uint64_t v1 = 0u;
  *(_OWORD *)(v1 + 16) = 0u;
  return result;
}

uint64_t sub_27E70@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v1, v2);
}

uint64_t sub_27E7C(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000LL) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  BOOL v3 = v2 == 0;
  return !a2 || v3;
}

void sub_27EA4()
{
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  sub_41BC(&qword_A04A0);
  sub_11F5C();
  __chkstk_darwin(v4);
  sub_9298();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = type metadata accessor for RREntity(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  sub_2F418();
  uint64_t v12 = v10 - v11;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v46 - v14;
  uint64_t v16 = type metadata accessor for UsoEntityBuilder_common_Announcement(0LL);
  swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
  os_log_type_t v17 = (os_log_s *)UsoEntityBuilder_common_Announcement.init()();
  uint64_t v18 = static UsoBuilderConversionUtils.convertEntityBuilderToEntity(entityBuilder:)();
  sub_BD1C();
  if (v18)
  {
    uint64_t v19 = v1[3];
    uint64_t v20 = (char *)v1[4];
    uint64_t v21 = (os_log_s *)sub_8504(v1, v19);
    uint64_t v22 = v19;
    os_log_type_t v17 = v21;
    sub_3ACF8(v18, v22, v20, v7);
    sub_2F394(v7, 1LL, v8);
    if (!v23)
    {
      uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 32);
      v30(v15, v7, v8);
      if (qword_9F820 != -1) {
        swift_once(&qword_9F820, sub_17ADC);
      }
      uint64_t v31 = sub_1BDD8();
      sub_2F508(v31, (uint64_t)qword_A3EB0);
      uint64_t v32 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 16))(v12, v15, v8);
      uint64_t v33 = (os_log_s *)Logger.logObject.getter(v32);
      os_log_type_t v34 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v33, v34))
      {
        uint64_t v35 = sub_144F0(12LL);
        uint64_t v49 = v3;
        uint64_t v36 = (uint8_t *)v35;
        uint64_t v47 = sub_144F0(32LL);
        uint64_t v50 = v47;
        os_log_type_t v48 = v30;
        *(_DWORD *)uint64_t v36 = 136315138;
        uint64_t v46 = v36 + 4;
        sub_A880( (unint64_t *)&qword_A0F18,  (uint64_t (*)(uint64_t))&type metadata accessor for RREntity,  (uint64_t)&protocol conformance descriptor for RREntity);
        uint64_t v38 = dispatch thunk of CustomStringConvertible.description.getter(v8, v37);
        uint64_t v40 = sub_68DC4(v38, v39, &v50);
        uint64_t v41 = sub_BD40(v40);
        uint64_t v30 = v48;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v41, v42, v46, v36 + 12);
        sub_D304();
        sub_2F65C();
        sub_14550(&dword_0, v33, v34, "#NLv4Transformer announcement is present: %s", v36);
        uint64_t v43 = v47;
        sub_17528(v47, v44, (uint64_t)&type metadata for Any + 8);
        sub_48D4(v43);
        uint64_t v45 = (uint64_t)v36;
        uint64_t v3 = v49;
        sub_48D4(v45);

        sub_17634();
      }

      else
      {
        sub_17634();
        sub_2F65C();
      }

      v30((char *)v3, (uint64_t)v15, v8);
      uint64_t v29 = 0LL;
      goto LABEL_16;
    }

    sub_17634();
    sub_17288(v7, &qword_A04A0);
  }

  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v24 = sub_1BDD8();
  sub_1BE18(v24, (uint64_t)qword_A3EB0);
  os_log_type_t v25 = sub_A9E8();
  if (os_log_type_enabled(v17, v25))
  {
    uint64_t v26 = v3;
    uint64_t v27 = (uint8_t *)sub_144F0(2LL);
    *(_WORD *)uint64_t v27 = 0;
    sub_1BE98(&dword_0, v17, v25, "#NLv4Transformer announcement is not present", v27);
    uint64_t v28 = (uint64_t)v27;
    uint64_t v3 = v26;
    sub_48D4(v28);
  }

  uint64_t v29 = 1LL;
LABEL_16:
  _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v3, v29, 1LL, v8);
  sub_6360();
}

void sub_28200()
{
  void (*v38)(uint64_t *__return_ptr, uint64_t);
  uint64_t v39;
  uint64_t v40[3];
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  os_log_s *v43;
  char *v44;
  os_log_s *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49[5];
  sub_1BDB4();
  uint64_t v45 = v0;
  os_log_type_t v48 = v2;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v46 = type metadata accessor for TransformerInput(0LL);
  sub_11F5C();
  __chkstk_darwin(v7);
  sub_2F55C(v8, v40[0]);
  uint64_t v9 = sub_2F644();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  sub_2F418();
  uint64_t v13 = v11 - v12;
  __chkstk_darwin(v14);
  uint64_t v44 = (char *)v40 - v15;
  sub_62D0();
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)v40 - v17;
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v19 = sub_1BDD8();
  sub_2F508(v19, (uint64_t)qword_A3EB0);
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  uint64_t v21 = sub_2F528((uint64_t)v18);
  uint64_t v43 = v0;
  Logger.logObject.getter(v21);
  os_log_type_t v22 = sub_A9E8();
  if (sub_2F45C(v22))
  {
    uint64_t v23 = sub_144F0(12LL);
    uint64_t v42 = v6;
    uint64_t v24 = (uint8_t *)v23;
    uint64_t v25 = sub_144F0(32LL);
    v40[2] = v13;
    uint64_t v26 = v25;
    v49[0] = v25;
    v40[1] = v4;
    *(_DWORD *)uint64_t v24 = 136315138;
    uint64_t v41 = (void (*)(char *, uint64_t))(v24 + 4);
    uint64_t v27 = (uint64_t)v44;
    v20(v44, v18, v9);
    uint64_t v28 = sub_546C4(v27);
    uint64_t v29 = v9;
    unint64_t v31 = v30;
    uint64_t v32 = sub_68DC4(v28, v30, v49);
    uint64_t v33 = sub_2F724(v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v33, v34, v41, v24 + 12);
    swift_bridgeObjectRelease(v31);
    uint64_t v41 = *(void (**)(char *, uint64_t))(v10 + 8);
    v41(v18, v29);
    sub_14550(&dword_0, v0, v1, "#NLv4Transformer attempting to transform %s into HomeCommunicationNLIntent.", v24);
    sub_17528(v26, v35, (uint64_t)&type metadata for Any + 8);
    sub_48D4(v26);
    uint64_t v36 = (uint64_t)v24;
    uint64_t v6 = v42;
    sub_48D4(v36);
  }

  else
  {
    uint64_t v41 = *(void (**)(char *, uint64_t))(v10 + 8);
    v41(v18, v9);
  }

  uint64_t v37 = sub_41BC(&qword_A0D50);
  uint64_t v38 = (void (*)(uint64_t *__return_ptr, uint64_t))Transformer.transform.getter(v37);
  unint64_t v39 = v47;
  sub_2F528(v47);
  sub_27D18(v48, v39 + *(int *)(v46 + 20), &qword_A02E0);
  v38(v49, v39);
  sub_BD1C();
  sub_2E0DC(v39);
  sub_27D78((uint64_t)v49, v6, &qword_A02E0);
  sub_6360();
}

uint64_t sub_285CC()
{
  uint64_t v1 = sub_41BC(&qword_A0D50);
  sub_17588(v1);
  swift_release(*(void *)(v0 + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin15NLv4Transformer_featureManager));
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_28620()
{
  return type metadata accessor for NLv4Transformer(0LL);
}

uint64_t type metadata accessor for NLv4Transformer(uint64_t a1)
{
  return sub_111E8(a1, (uint64_t *)&unk_A16C0, (uint64_t)&nominal type descriptor for NLv4Transformer);
}

void sub_2863C(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(v2 - 8) + 64LL;
    v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
    swift_updateClassMetadata2(a1, 256LL, 2LL, v4, a1 + 80);
  }

void sub_286B4(uint64_t a1)
{
  if (!qword_A16D0)
  {
    uint64_t v2 = type metadata accessor for TransformerInput(255LL);
    uint64_t v3 = sub_8564(&qword_A02E0);
    unint64_t v4 = type metadata accessor for Transformer(a1, v2, v3);
    if (!v5) {
      atomic_store(v4, (unint64_t *)&qword_A16D0);
    }
  }

uint64_t type metadata accessor for TransformerInput(uint64_t a1)
{
  return sub_111E8(a1, qword_A17B8, (uint64_t)&nominal type descriptor for TransformerInput);
}

uint64_t *sub_28730(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v13);
  }

  else
  {
    uint64_t v7 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *(uint64_t *)((char *)a2 + v8 + 24);
    if (v11)
    {
      uint64_t v12 = *((void *)v10 + 4);
      *((void *)v9 + 3) = v11;
      *((void *)v9 + 4) = v12;
      (**(void (***)(void))(v11 - 8))();
    }

    else
    {
      __int128 v14 = *((_OWORD *)v10 + 1);
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v14;
      *((void *)v9 + 4) = *((void *)v10 + 4);
    }
  }

  return a1;
}

void *sub_287E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL))(a1, v4);
  double result = (void *)(a1 + *(int *)(a2 + 20));
  if (result[3]) {
    return (void *)sub_423C(result);
  }
  return result;
}

uint64_t sub_28838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 24);
  if (v10)
  {
    uint64_t v11 = *(void *)(v9 + 32);
    *(void *)(v8 + 24) = v10;
    *(void *)(v8 + 32) = v11;
    (**(void (***)(void))(v10 - 8))();
  }

  else
  {
    __int128 v12 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 16) = v12;
    *(void *)(v8 + 32) = *(void *)(v9 + 32);
  }

  return a1;
}

uint64_t sub_288C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (__int128 *)(a2 + v7);
  uint64_t v10 = *((void *)v9 + 3);
  if (!*(void *)(a1 + v7 + 24))
  {
    if (v10)
    {
      *(void *)(v8 + 24) = v10;
      *(void *)(v8 + 32) = *((void *)v9 + 4);
      (**(void (***)(uint64_t, __int128 *))(v10 - 8))(v8, v9);
      return a1;
    }

uint64_t sub_28980(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  __int128 v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  return a1;
}

uint64_t sub_289EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  if (*(void *)(a1 + v7 + 24)) {
    sub_423C((void *)(a1 + v7));
  }
  __int128 v9 = *(_OWORD *)(a2 + v7 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)(a2 + v7);
  *(_OWORD *)(v8 + 16) = v9;
  *(void *)(v8 + 32) = *(void *)(a2 + v7 + 32);
  return a1;
}

uint64_t sub_28A68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_28A74);
}

uint64_t sub_28A74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2F644();
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84LL) == (_DWORD)a2) {
    return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(a1, a2, v6);
  }
  unint64_t v8 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
  if (v8 >= 0xFFFFFFFF) {
    LODWORD(vsub_423C(v0 + 8) = -1;
  }
  int v9 = v8 - 1;
  if (v9 < 0) {
    int v9 = -1;
  }
  return (v9 + 1);
}

uint64_t sub_28AF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_28B04);
}

uint64_t sub_28B04(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_2F644();
  if (*(_DWORD *)(*(void *)(result - 8) + 84LL) == a3) {
    return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(a1, a2, a2, result);
  }
  *(void *)(a1 + *(int *)(a4 + 20) + 24) = a2;
  return result;
}

uint64_t sub_28B78(uint64_t a1)
{
  uint64_t result = type metadata accessor for Siri_Nlu_External_UserDialogAct(319LL);
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(result - 8) + 64LL;
    v4[1] = "(";
    swift_initStructMetadata(a1, 256LL, 2LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

uint64_t sub_28BE8@<X0>(uint64_t a1@<X0>, const char *a2@<X1>, uint8_t *a3@<X2>, uint64_t a4@<X8>)
{
  void (*v20)(_BYTE *__return_ptr, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  os_log_type_t v27;
  BOOL v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  os_log_s *v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  id v41;
  os_log_type_t v42;
  uint8_t *v43;
  void *v44;
  id v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(__int128 *__return_ptr, _BYTE *);
  unsigned int v62;
  uint64_t v63;
  void (*v64)(_BYTE *__return_ptr, __int128 *);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  os_log_s *v69;
  os_log_type_t v70;
  BOOL v71;
  uint8_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  os_log_type_t v78;
  os_log_s *v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  os_log_s *v84;
  uint64_t v85;
  char v86;
  char v87;
  os_log_s *v88;
  os_log_s *v89;
  char v90;
  char v91;
  char v92;
  char v93;
  os_log_type_t v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint8_t **v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint8_t *v128;
  char v129;
  unint64_t v130;
  unint64_t v131;
  unint64_t v132;
  char *v133;
  char *v134;
  char *v135;
  unint64_t v136;
  char *v137;
  unint64_t v138;
  BOOL v139;
  int64_t v140;
  char v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char v145;
  uint64_t v146;
  uint64_t v147;
  os_log_s *v148;
  os_log_s *v149;
  uint64_t *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  __int128 v155;
  __int128 v156;
  const char *v157;
  unint64_t v158;
  const char *v159;
  unint64_t v160;
  const char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  unint64_t v165;
  void *v166;
  unsigned int v167;
  os_log_s *v168;
  uint64_t v169;
  uint8_t *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  char *v176;
  unint64_t v177;
  uint64_t v178;
  uint64_t v179;
  const char *v180;
  uint8_t *v181;
  uint64_t v182;
  uint64_t v183;
  _BYTE v184[200];
  os_log_s *v185;
  unsigned __int8 v186;
  uint64_t v187;
  unsigned __int8 v188;
  __int128 v189;
  __int128 v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v181 = a3;
  sub_41BC(&qword_A04A0);
  sub_11F5C();
  __chkstk_darwin(v8);
  sub_2F418();
  unint64_t v11 = v9 - v10;
  __chkstk_darwin(v12);
  __int128 v14 = (char *)&v157 - v13;
  uint64_t v15 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  sub_2F428();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v4, a1, v15);
  sub_29C5C((uint64_t)&v189);
  if (*((void *)&v190 + 1))
  {
    sub_2F59C();
    sub_A780(&v189, (uint64_t)v184);
    return sub_A780((__int128 *)v184, a4);
  }

  unint64_t v178 = a1;
  uint64_t v179 = a4;
  uint64_t v180 = a2;
  uint64_t v176 = v14;
  unint64_t v177 = v11;
  sub_2F6C8(v17, &qword_A02E0);
  if (qword_9F868 != -1) {
    swift_once(&qword_9F868, sub_2CEC4);
  }
  uint64_t v19 = sub_41BC(&qword_A17F8);
  sub_4870(v19, (uint64_t)qword_A3F28);
  uint64_t v20 = (void (*)(_BYTE *__return_ptr, uint64_t))sub_2F48C();
  uint64_t v21 = v192;
  v20(v184, v4);
  if (v21)
  {
    sub_BD1C();
    return sub_2F59C();
  }

  uint64_t v192 = 0LL;
  v172 = v4;
  sub_BD1C();
  uint64_t v23 = *(void *)v184;
  os_log_type_t v22 = *(void *)&v184[8];
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v24 = type metadata accessor for Logger(0LL);
  uint64_t v25 = (char *)sub_4870(v24, (uint64_t)qword_A3EB0);
  swift_bridgeObjectRetain_n(v22, 2LL);
  uint64_t v26 = sub_2F780();
  uint64_t v175 = v25;
  Logger.logObject.getter(v26);
  uint64_t v27 = sub_A9E8();
  uint64_t v28 = sub_2F64C(v27);
  v173 = v22;
  v174 = v15;
  int64_t v171 = v16;
  if (v28)
  {
    uint64_t v29 = v23;
    unint64_t v30 = (uint8_t *)sub_144F0(12LL);
    unint64_t v31 = sub_144F0(32LL);
    *(void *)&uint64_t v189 = v31;
    *(_DWORD *)unint64_t v30 = 136315138;
    uint64_t v170 = v30 + 4;
    *(void *)uint64_t v184 = v29;
    *(void *)&v184[8] = v22;
    swift_retain(v29);
    sub_2F6EC();
    uint64_t v32 = String.init<A>(describing:)(v184, &unk_96450);
    uint64_t v34 = v33;
    *(void *)uint64_t v184 = sub_2F7C4(v32, v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v184, &v184[8], v170, v30 + 12);
    sub_2F6F4();
    sub_2F4DC(v29);
    swift_bridgeObjectRelease(v34);
    sub_14550( &dword_0,  (os_log_s *)v25,  OS_LOG_TYPE_DEFAULT,  "#NLv4Transformer userDialogActParse %s into homeCommunicationNLIntent.",  v30);
    sub_17528(v31, v35, (uint64_t)&type metadata for Any + 8);
    sub_48D4(v31);
    uint64_t v36 = (uint64_t)v30;
    uint64_t v23 = v29;
    sub_48D4(v36);
  }

  else
  {

    sub_2F6F4();
    sub_2F4DC(v23);
  }

  sub_27D18((uint64_t)v180, (uint64_t)&v189, &qword_A0D58);
  uint64_t v37 = (os_log_s *)_swiftEmptyArrayStorage;
  if (*((void *)&v190 + 1))
  {
    sub_A780(&v189, (uint64_t)v184);
    uint64_t v38 = sub_2F778();
    unint64_t v39 = sub_29D28(v38);
    if (v39)
    {
      uint64_t v40 = (uint64_t)v39;
      uint64_t v169 = v23;
      uint64_t v41 = v39;
      sub_2F5FC();
      uint64_t v42 = sub_A9E8();
      if (os_log_type_enabled((os_log_t)v25, v42))
      {
        uint64_t v43 = (uint8_t *)sub_144F0(12LL);
        uint64_t v44 = (void *)sub_144F0(8LL);
        uint64_t v181 = v43;
        *(_DWORD *)uint64_t v43 = 138412290;
        *(void *)&uint64_t v189 = v41;
        uint64_t v45 = v41;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v189, (char *)&v189 + 8, v43 + 4, v43 + 12);
        void *v44 = v40;

        uint64_t v46 = v181;
        sub_14550( &dword_0,  (os_log_s *)v25,  v42,  "#NLv4Transformer referenceResolution found a position reference %@",  v181);
        uint64_t v47 = sub_41BC(&qword_A0F50);
        sub_17528((uint64_t)v44, v48, v47);
        sub_48D4((uint64_t)v44);
        sub_48D4((uint64_t)v46);
      }

      else
      {

        uint64_t v25 = (char *)v41;
      }

      Swift::String v65 = v171;

      uint64_t v191 = 0LL;
      uint64_t v189 = 0u;
      uint64_t v190 = 0u;
      sub_2F6DC();
      sub_2F4DC(v169);
      *((void *)v25 + 4) = sub_2F7F4((uint64_t)&type metadata for HomeCommunicationNLv4Intent);
      uint64_t v66 = sub_AA48((uint64_t)&unk_96350, 216LL);
      *(void *)uint64_t v25 = v66;
      *(void *)&unint64_t v156 = _swiftEmptyArrayStorage;
      *((void *)&v156 + 1) = _swiftEmptyArrayStorage;
      *(void *)&uint64_t v155 = _swiftEmptyArrayStorage;
      *((void *)&v155 + 1) = _swiftEmptyArrayStorage;
      sub_1D3B0( 0,  (uint64_t)&v189,  7,  0,  31,  0,  (uint64_t)_swiftEmptyArrayStorage,  (uint64_t)_swiftEmptyArrayStorage,  v66 + 16,  v155,  v156,  0LL,  0LL,  1,  0LL,  1,  0,  (__n128)(unint64_t)_swiftEmptyArrayStorage,  0LL,  3,  v40);
      sub_2F4E4();
      return (*(uint64_t (**)(uint64_t, uint64_t))(v65 + 8))(v172, v174);
    }

    sub_2F4E4();
  }

  else
  {
    uint64_t v49 = sub_2F778();
    sub_2F6C8(v49, &qword_A0D58);
  }

  sub_2F780();
  sub_2F5FC();
  uint64_t v50 = sub_A9E8();
  if (sub_2F64C(v50))
  {
    uint64_t v51 = (uint8_t *)sub_144F0(12LL);
    uint64_t v52 = sub_144F0(32LL);
    *(void *)uint64_t v184 = v52;
    *(_DWORD *)uint64_t v51 = 136315138;
    uint64_t v170 = v51 + 4;
    *(void *)&uint64_t v189 = v23;
    unint64_t v53 = type metadata accessor for UsoTask(0LL);
    sub_2F778();
    unint64_t v54 = String.init<A>(describing:)(&v189, v53);
    uint64_t v56 = v55;
    *(void *)&uint64_t v189 = sub_68DC4(v54, v55, (uint64_t *)v184);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v189, (char *)&v189 + 8, v170, v51 + 12);
    sub_2F4DC(v23);
    swift_bridgeObjectRelease(v56);
    sub_14550( &dword_0,  (os_log_s *)v25,  OS_LOG_TYPE_DEFAULT,  "#NLv4Transformer homeCommUsoTask %s into homeCommunicationNLIntent.",  v51);
    sub_17528(v52, v57, (uint64_t)&type metadata for Any + 8);
    sub_48D4(v52);
    sub_48D4((uint64_t)v51);
  }

  else
  {

    sub_2F4DC(v23);
  }

  uint64_t v58 = v192;
  uint64_t v59 = v174;
  if (qword_9F870 != -1) {
    swift_once(&qword_9F870, sub_2D580);
  }
  os_log_type_t v60 = sub_41BC(&qword_A1800);
  sub_4870(v60, (uint64_t)qword_A3F40);
  uint64_t v61 = (void (*)(__int128 *__return_ptr, _BYTE *))sub_2F48C();
  *(void *)uint64_t v184 = v23;
  v61(&v189, v184);
  if (v58)
  {
    sub_BD1C();
    sub_2F6DC();
    swift_release(v23);
    (*(void (**)(uint64_t, uint64_t))(v171 + 8))(v172, v59);
    return swift_release(v23);
  }

  sub_BD1C();
  uint64_t v62 = v189;
  if (qword_9F878 != -1) {
    swift_once(&qword_9F878, sub_2DB60);
  }
  uint64_t v63 = sub_41BC(&qword_A1808);
  sub_4870(v63, (uint64_t)qword_A3F58);
  uint64_t v64 = (void (*)(_BYTE *__return_ptr, __int128 *))sub_2F48C();
  *(void *)&uint64_t v189 = v23;
  v64(v184, &v189);
  uint64_t v192 = 0LL;
  sub_BD1C();
  uint64_t v68 = *(void *)v184;
  uint64_t v67 = *(void *)&v184[8];
  sub_2F7E8();
  sub_2F7E8();
  uint64_t v69 = (os_log_s *)sub_2F5FC();
  uint64_t v70 = static os_log_type_t.debug.getter();
  uint64_t v71 = os_log_type_enabled(v69, v70);
  uint64_t v169 = v23;
  uint64_t v170 = (uint8_t *)v67;
  uint64_t v167 = v62;
  if (v71)
  {
    uint64_t v72 = (uint8_t *)sub_144F0(12LL);
    uint64_t v166 = (void *)sub_144F0(32LL);
    *(void *)uint64_t v184 = v166;
    *(_DWORD *)uint64_t v72 = 136315138;
    uint64_t v168 = v69;
    if (v68 == 1)
    {
      Swift::String v73 = 0LL;
    }

    else
    {
      sub_2F67C();
      Swift::String v73 = v68;
    }

    *(void *)&uint64_t v189 = v73;
    Swift::String v74 = sub_41BC(&qword_A1820);
    uint64_t v75 = String.init<A>(describing:)(&v189, v74);
    char v77 = v76;
    *(void *)&uint64_t v189 = sub_68DC4(v75, v76, (uint64_t *)v184);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v189, (char *)&v189 + 8, v72 + 4, v72 + 12);
    swift_bridgeObjectRelease(v77);
    uint64_t v67 = (uint64_t)v170;
    sub_2EDD8(v68, (uint64_t)v170);
    sub_2F578();
    Swift::String v78 = v70;
    char v79 = v168;
    sub_14550(&dword_0, v168, v78, "#NLv4Transformer sendTask %s", v72);
    id v80 = v166;
    sub_17528((uint64_t)v166, v81, (uint64_t)&type metadata for Any + 8);
    sub_48D4((uint64_t)v80);
    sub_48D4((uint64_t)v72);

    uint64_t v62 = v167;
  }

  else
  {
    sub_2F578();
    sub_2F578();
  }

  id v82 = 0LL;
  uint64_t v83 = 0LL;
  uint64_t v187 = 0LL;
  uint64_t v188 = 1;
  uint64_t v185 = 0LL;
  v186 = 1;
  if (v62 <= 1)
  {
    if (v68 == 1)
    {
      uint64_t v84 = 0LL;
    }

    else
    {
      sub_2F67C();
      uint64_t v84 = (os_log_s *)v68;
    }

    uint64_t v85 = sub_2A0A8((uint64_t)v84);
    unint64_t v87 = v86;
    unint64_t v89 = v88;
    uint64_t v91 = v90;
    sub_BD1C();
    uint64_t v187 = v85;
    uint64_t v92 = v87 & 1;
    uint64_t v188 = v87 & 1;
    uint64_t v168 = v89;
    uint64_t v185 = v89;
    unint64_t v93 = v91 & 1;
    v186 = v91 & 1;
    sub_2F5FC();
    uint64_t v94 = sub_A9E8();
    int64_t v95 = v94;
    if (os_log_type_enabled(v84, v94))
    {
      unint64_t v96 = sub_144F0(22LL);
      uint64_t v175 = (char *)sub_144F0(64LL);
      *(void *)&uint64_t v189 = v175;
      *(_DWORD *)unint64_t v96 = 136315394;
      LODWORD(v166) = v95;
      *(void *)uint64_t v184 = v85;
      v184[8] = v92;
      sub_41BC(&qword_A0F60);
      uint64_t v97 = sub_2F6A8();
      uint64_t v99 = v98;
      *(void *)uint64_t v184 = sub_2F7C4(v97, v98);
      uint64_t v37 = (os_log_s *)_swiftEmptyArrayStorage;
      sub_2F69C(*(uint64_t *)v184, (uint64_t)&v184[8], v100, v96 + 12);
      swift_bridgeObjectRelease(v99);
      *(_WORD *)(v96 + sub_423C(v0 + 12) = 2080;
      *(void *)uint64_t v184 = v168;
      v184[8] = v93;
      uint64_t v101 = sub_2F6A8();
      uint64_t v103 = v102;
      *(void *)uint64_t v184 = sub_2F7C4(v101, v102);
      sub_2F69C(*(uint64_t *)v184, (uint64_t)&v184[8], v104, v96 + 22);
      swift_bridgeObjectRelease(v103);
      _os_log_impl( &dword_0,  v84,  (os_log_type_t)v166,  "#NLv4Transformer startTimeMs=%s and endTimeMs=%s",  (uint8_t *)v96,  0x16u);
      unint64_t v105 = v175;
      swift_arrayDestroy(v175, 2LL, (char *)&type metadata for Any + 8);
      sub_48D4((uint64_t)v105);
      sub_48D4(v96);
    }

    uint64_t v67 = (uint64_t)v170;
    uint64_t v106 = (uint64_t)v176;
    sub_27D18((uint64_t)v180, (uint64_t)&v189, &qword_A0D58);
    uint64_t v108 = v177;
    if (*((void *)&v190 + 1))
    {
      sub_A780(&v189, (uint64_t)v184);
      sub_27EA4();
      sub_27D18(v106, v108, &qword_A04A0);
      uint64_t v109 = type metadata accessor for RREntity(0LL);
      if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v108, 1LL, v109) == 1)
      {
        sub_17288(v106, &qword_A04A0);
        sub_2F4E4();
        sub_17288(v108, &qword_A04A0);
        id v82 = 0LL;
        uint64_t v83 = 0LL;
      }

      else
      {
        id v82 = RREntity.id.getter();
        uint64_t v111 = v110;
        sub_17288(v106, &qword_A04A0);
        sub_2F4E4();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v109 - 8) + 8LL))(v108, v109);
        uint64_t v83 = v111;
      }

      uint64_t v67 = (uint64_t)v170;
    }

    else
    {
      sub_2F6C8(v107, &qword_A0D58);
      id v82 = 0LL;
      uint64_t v83 = 0LL;
    }
  }

  uint64_t v163 = v83;
  v164 = v82;
  if (v68 == 1)
  {
    uint64_t v112 = 0LL;
  }

  else
  {
    swift_retain(v67);
    uint64_t v112 = v67;
  }

  uint64_t v113 = sub_2A3C4();
  uint64_t v115 = v114;
  unint64_t v117 = v116;
  uint64_t v119 = v118;
  swift_release(v112);
  if (v115)
  {
    uint64_t v120 = sub_41BC(&qword_A1818);
    uint64_t v37 = (os_log_s *)sub_AA48(v120, 64LL);
    *((_OWORD *)v37 + 1) = xmmword_6FA70;
    *((void *)v37 + 4) = v113;
    *((void *)v37 + 5) = v115;
    *((void *)v37 + 6) = v117;
    *((void *)v37 + 7) = v119;
    uint64_t v121 = 1LL;
  }

  else
  {
    uint64_t v121 = _swiftEmptyArrayStorage[2];
    uint64_t v122 = (char *)_swiftEmptyArrayStorage;
    v123 = (char *)_swiftEmptyArrayStorage;
    uint64_t v166 = _swiftEmptyArrayStorage;
    if (!v121) {
      goto LABEL_93;
    }
  }

  v162 = v68;
  sub_2F6EC();
  uint64_t v168 = v37;
  __int128 v124 = (uint8_t **)((char *)v37 + 56);
  uint64_t v122 = (char *)_swiftEmptyArrayStorage;
  uint64_t v180 = "homeAutomationAccessoryName";
  uint64_t v181 = (uint8_t *)0x8000000000075980LL;
  uint64_t v175 = " No tasks found in input";
  uint64_t v176 = (char *)_swiftEmptyArrayStorage;
  unint64_t v177 = 0x80000000000776F0LL;
  uint64_t v161 = "homeAutomationServiceName";
  BOOL v165 = 0x8000000000077710LL;
  uint64_t v166 = _swiftEmptyArrayStorage;
  uint64_t v159 = "homeAutomationServiceGroup";
  uint64_t v160 = 0x8000000000077730LL;
  uint64_t v157 = "HomeCommunication#HomeAppLaunch";
  uint64_t v158 = 0x80000000000767F0LL;
  do
  {
    uint64_t v126 = (uint64_t)*(v124 - 3);
    uint64_t v125 = (uint64_t)*(v124 - 2);
    uint64_t v127 = (uint64_t)*(v124 - 1);
    uint64_t v128 = *v124;
    sub_2F61C();
    if (v129 && v128 == v181
      || (sub_2F3B8((uint64_t)v180) & 1) != 0
      || v127 == 0xD000000000000019LL && v128 == (uint8_t *)v177
      || (sub_2F548(0xD000000000000019LL, (uint64_t)v175) & 1) != 0
      || v127 == 0xD00000000000001ALL && v128 == (uint8_t *)v165
      || (sub_2F548(0xD00000000000001ALL, (uint64_t)v161) & 1) != 0)
    {
      sub_2F534();
      sub_2F4EC();
      if ((swift_isUniquelyReferenced_nonNull_native(v122) & 1) == 0) {
        uint64_t v122 = sub_5D33C(0LL, *((void *)v122 + 2) + 1LL, 1, (uint64_t)v122);
      }
      __int128 v131 = *((void *)v122 + 2);
      uint64_t v130 = *((void *)v122 + 3);
      uint64_t v132 = v131 + 1;
      if (v131 >= v130 >> 1)
      {
        uint64_t v139 = sub_2F744(v130);
        unsigned int v133 = sub_5D33C((char *)v139, v140, v141, (uint64_t)v122);
        uint64_t v122 = v133;
      }

      else
      {
        unsigned int v133 = v122;
      }

LABEL_69:
      *((void *)v133 + 2) = v132;
      uint64_t v134 = &v133[16 * v131];
      *((void *)v134 + 4) = v126;
      *((void *)v134 + 5) = v125;
      swift_bridgeObjectRelease(v128);
      swift_bridgeObjectRelease(v125);
      goto LABEL_70;
    }

    sub_2F61C();
    if (v129 && v128 == (uint8_t *)v160 || (sub_2F3B8((uint64_t)v159) & 1) != 0)
    {
      sub_2F534();
      sub_2F4EC();
      uint64_t v135 = v176;
      if ((swift_isUniquelyReferenced_nonNull_native(v176) & 1) != 0) {
        unsigned int v133 = v135;
      }
      else {
        unsigned int v133 = sub_2F49C();
      }
      __int128 v131 = *((void *)v133 + 2);
      uint64_t v136 = *((void *)v133 + 3);
      uint64_t v132 = v131 + 1;
      if (v131 >= v136 >> 1) {
        unsigned int v133 = sub_2F4F4((uint64_t)v133, v136);
      }
      uint64_t v176 = v133;
      goto LABEL_69;
    }

    sub_2F61C();
    if (v129 && v128 == (uint8_t *)v158 || (sub_2F3B8((uint64_t)v157) & 1) != 0)
    {
      sub_2F534();
      sub_2F4EC();
      uint64_t v137 = (char *)v166;
      if ((swift_isUniquelyReferenced_nonNull_native(v166) & 1) != 0) {
        unsigned int v133 = v137;
      }
      else {
        unsigned int v133 = sub_2F49C();
      }
      __int128 v131 = *((void *)v133 + 2);
      uint64_t v138 = *((void *)v133 + 3);
      uint64_t v132 = v131 + 1;
      if (v131 >= v138 >> 1) {
        unsigned int v133 = sub_2F4F4((uint64_t)v133, v138);
      }
      uint64_t v166 = v133;
      goto LABEL_69;
    }

LABEL_70:
    v124 += 4;
    --v121;
  }

  while (v121);
  uint64_t v37 = v168;
  swift_bridgeObjectRelease(v168);
  uint64_t v68 = v162;
  v123 = v176;
LABEL_93:
  uint64_t v142 = type metadata accessor for TransformerInput(0LL);
  sub_27D18(v178 + *(int *)(v142 + 20), (uint64_t)v184, &qword_A02E0);
  uint64_t v143 = *(void *)&v184[24];
  uint64_t v176 = v123;
  if (*(void *)&v184[24])
  {
    uint64_t v144 = *(void *)&v184[32];
    sub_8504(v184, *(uint64_t *)&v184[24]);
    v145 = (*(uint64_t (**)(uint64_t, uint64_t))(v144 + 64))(v143, v144);
    sub_2F4E4();
    if ((v145 & 1) != 0)
    {
      LODWORD(v17sub_423C(v0 + 8) = 1;
      goto LABEL_98;
    }
  }

  else
  {
    sub_17288((uint64_t)v184, &qword_A02E0);
  }

  LODWORD(v17sub_423C(v0 + 8) = sub_2BB5C();
LABEL_98:
  uint64_t v168 = v37;
  uint64_t v146 = 0LL;
  uint64_t v191 = 0LL;
  uint64_t v189 = 0u;
  uint64_t v190 = 0u;
  if (v68 != 1)
  {
    sub_2F67C();
    uint64_t v146 = v68;
  }

  LODWORD(v181) = sub_2C554(v146);
  swift_release(v146);
  sub_1BE4C((uint64_t)&v187, (uint64_t)&v183);
  uint64_t v147 = v187;
  LODWORD(v180) = v188;
  sub_1BE4C((uint64_t)&v185, (uint64_t)&v182);
  uint64_t v148 = 0LL;
  uint64_t v149 = v185;
  uint64_t v150 = (uint64_t *)v186;
  if (v68 != 1)
  {
    sub_2F67C();
    uint64_t v148 = (os_log_s *)v68;
  }

  uint64_t v151 = sub_2C878(v148);
  uint64_t v153 = v152;
  swift_release(v148);
  v184[0] = v167;
  sub_27D78((uint64_t)&v189, (uint64_t)&v184[8], &qword_A0F58);
  v184[48] = 7;
  v184[49] = v181 & 1;
  v184[50] = 31;
  v184[51] = v178 & 1;
  *(void *)&v184[56] = _swiftEmptyArrayStorage;
  *(void *)&v184[64] = _swiftEmptyArrayStorage;
  *(void *)&v184[72] = _swiftEmptyArrayStorage;
  *(void *)&v184[80] = v122;
  *(void *)&v184[88] = v176;
  *(void *)&v184[96] = v166;
  *(void *)&v184[104] = 0LL;
  *(void *)&v184[112] = v147;
  v184[120] = (_BYTE)v180;
  *(void *)&v184[128] = v149;
  v184[136] = (_BYTE)v150;
  *(void *)&v184[144] = v164;
  *(void *)&v184[152] = v163;
  *(void *)&v184[160] = v168;
  *(void *)&v184[168] = v151;
  *(void *)&v184[176] = v153;
  v184[184] = 3;
  *(void *)&v184[192] = 0LL;
  v150[4] = sub_2F7F4((uint64_t)&type metadata for HomeCommunicationNLv4Intent);
  uint64_t v154 = sub_AA48((uint64_t)&unk_96350, 216LL);
  void *v150 = v154;
  memcpy((void *)(v154 + 16), v184, 0xC8uLL);
  sub_2EDD8(v68, (uint64_t)v170);
  sub_2F6DC();
  sub_2F4DC(v169);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v171 + 8))(v172, v174);
}

    swift_once(&qword_9F820, sub_17ADC);
    goto LABEL_17;
  }

  if ((unint64_t)v30 >> 62)
  {
    if (v30 >= 0) {
      uint64_t v108 = v30 & 0xFFFFFFFFFFFFFF8LL;
    }
    else {
      uint64_t v108 = v30;
    }
    sub_2F684();
    unint64_t v31 = _CocoaArrayWrapper.endIndex.getter(v108);
    sub_11F94();
  }

  else
  {
    unint64_t v31 = *(void *)((char *)&dword_10 + (v30 & 0xFFFFFFFFFFFFFF8LL));
  }

  uint64_t v113 = v13;
  uint64_t v114 = v24;
  if (!v31)
  {
    sub_11F94();
    uint64_t v33 = _swiftEmptyArrayStorage;
    goto LABEL_21;
  }

  v128[0] = (uint64_t)_swiftEmptyArrayStorage;
  sub_45E50(0LL, v31 & ~(v31 >> 63), 0);
  if (v31 < 0)
  {
    __break(1u);
    goto LABEL_70;
  }

  uint64_t v32 = 0LL;
  uint64_t v33 = (void *)v128[0];
  do
  {
    if ((v30 & 0xC000000000000001LL) != 0)
    {
      uint64_t v34 = specialized _ArrayBuffer._getElementSlowPath(_:)(v32, v30);
    }

    else
    {
      uint64_t v34 = *(void *)(v30 + 8 * v32 + 32);
      swift_retain(v34);
    }

    uint64_t v35 = dispatch thunk of UsoValue.getEntitySpans()();
    swift_release(v34);
    v128[0] = (uint64_t)v33;
    uint64_t v37 = v33[2];
    uint64_t v36 = v33[3];
    if (v37 >= v36 >> 1)
    {
      sub_45E50((void *)(v36 > 1), v37 + 1, 1);
      uint64_t v33 = (void *)v128[0];
    }

    ++v32;
    v33[2] = v37 + 1;
    v33[v37 + 4] = v35;
  }

  while (v31 != v32);
  sub_11F94();
  uint64_t v13 = v113;
LABEL_21:
  uint64_t v46 = sub_69CA8((uint64_t)v33);
  sub_6CBC0();
  uint64_t v47 = (uint64_t)v114;
  sub_6A8A8((uint64_t)v46, (uint64_t)v114);
  swift_bridgeObjectRelease(v46);
  sub_6B638(v47, (uint64_t)v21);
  if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0((uint64_t)v21, 1LL, v13) == 1)
  {
    sub_5F64((uint64_t)v21, &qword_A3DB0);
  }

  else
  {
    sub_6CC14();
    uint64_t v49 = v48;
    uint64_t v50 = v48;
    uint64_t v51 = (*(uint64_t (**)(char *, uint64_t))(v120 + 8))(v21, v13);
    if (v50 != 2)
    {
      Swift::String v76 = 0x6E69685F6D6F6F72LL;
      if ((v49 & 1) == 0) {
        Swift::String v76 = 0x69685F6573756F68LL;
      }
      uint64_t v122 = v76;
      sub_6CC0C(v51, &qword_A3DB0);
      return v122;
    }
  }

  uint64_t v52 = v119;
  sub_6B638(v47, v119);
  if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v52, 1LL, v13) == 1)
  {
    sub_5F64(v47, &qword_A3DB0);
    unint64_t v53 = v52;
    unint64_t v54 = &qword_A3DB0;
LABEL_55:
    sub_5F64(v53, v54);
    return 0LL;
  }

  uint64_t v55 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v120 + 32))(v116, v52, v13);
  uint64_t v56 = UsoEntitySpan.properties.getter(v55);
  uint64_t v57 = *(void *)(v56 + 16);
  if (v57)
  {
    sub_6CBF8();
    uint64_t v59 = v56 + v58;
    LODWORD(v119) = enum case for IdentifierNamespace.nsSemanticValue(_:);
    uint64_t v118 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v60 + 72);
    uint64_t v61 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v60 + 16);
    uint64_t v110 = v56;
    sub_2F684();
    uint64_t v63 = v125;
    uint64_t v62 = v126;
    Swift::String v65 = v121;
    uint64_t v64 = v122;
    uint64_t v66 = v124;
    while (1)
    {
      uint64_t v67 = v61(v64, v59, v62);
      uint64_t v62 = SpanProperty.key.getter(v67);
      uint64_t v69 = v68;
      uint64_t v70 = (*(uint64_t (**)(char *, void, uint64_t))(v66 + 104))(v65, v119, v63);
      uint64_t v71 = IdentifierNamespace.rawValue.getter(v70);
      Swift::String v73 = v72;
      (*(void (**)(char *, uint64_t))(v66 + 8))(v65, v63);
      if (v62 == v71 && v69 == v73) {
        break;
      }
      sub_6CBEC(v62, v69, v71);
      sub_6CBD4();
      sub_6CBC0();
      if ((v62 & 1) != 0) {
        goto LABEL_41;
      }
      uint64_t v64 = v122;
      uint64_t v62 = v126;
      (*(void (**)(uint64_t, uint64_t))(v123 + 8))(v122, v126);
      v59 += (uint64_t)v118;
      if (!--v57)
      {
        sub_11F94();
        uint64_t v75 = 1LL;
        uint64_t v47 = (uint64_t)v114;
        goto LABEL_39;
      }
    }

    sub_11F94();
    sub_6CBC0();
LABEL_41:
    sub_6CBC0();
    char v77 = v112;
    sub_6CBE0(v112, v122, *(uint64_t (**)(uint64_t, uint64_t, void))(v123 + 32));
    uint64_t v75 = 0LL;
    uint64_t v47 = (uint64_t)v114;
  }

  else
  {
    uint64_t v75 = 1LL;
    uint64_t v62 = v126;
LABEL_39:
    char v77 = v112;
  }

  _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v77, v75, 1LL, v62);
  sub_11F94();
  Swift::String v78 = _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v77, 1LL, v62);
  if ((_DWORD)v78 == 1)
  {
    sub_5F64(v77, &qword_A3DA8);
LABEL_54:
    sub_6CBAC();
    unint64_t v54 = &qword_A3DB0;
    unint64_t v53 = v47;
    goto LABEL_55;
  }

  uint64_t v122 = SpanProperty.valueString.getter(v78);
  id v80 = v79;
  uint64_t v121 = *(char **)(v123 + 8);
  char v81 = ((uint64_t (*)(uint64_t, uint64_t))v121)(v77, v62);
  if (!v80) {
    goto LABEL_54;
  }
  id v82 = UsoEntitySpan.properties.getter(v81);
  uint64_t v83 = *(void *)(v82 + 16);
  if (v83)
  {
    sub_6CBF8();
    uint64_t v85 = v82 + v84;
    LODWORD(v119) = enum case for IdentifierNamespace.nsHomeKitEntityType(_:);
    uint64_t v112 = *(void *)(v86 + 72);
    uint64_t v118 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v86 + 16);
    uint64_t v110 = v82;
    sub_2F684();
    unint64_t v87 = v117;
    unint64_t v89 = v124;
    Swift::String v88 = v125;
    uint64_t v90 = v115;
    while (1)
    {
      uint64_t v91 = v118(v87, v85, v62);
      uint64_t v92 = SpanProperty.key.getter(v91);
      uint64_t v94 = v93;
      int64_t v95 = (*(uint64_t (**)(uint64_t, void, uint64_t))(v89 + 104))(v90, v119, v88);
      unint64_t v96 = IdentifierNamespace.rawValue.getter(v95);
      uint64_t v98 = v97;
      (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v90, v88);
      if (v92 == v96 && v94 == v98) {
        break;
      }
      sub_6CBEC(v92, v94, v96);
      sub_6CBD4();
      sub_1CC58();
      if ((v92 & 1) != 0) {
        goto LABEL_60;
      }
      unint64_t v87 = v117;
      uint64_t v62 = v126;
      sub_6CBC8(v117);
      v85 += v112;
      if (!--v83)
      {
        sub_11F94();
        uint64_t v100 = 1LL;
        uint64_t v101 = v111;
        goto LABEL_61;
      }
    }

    sub_11F94();
    sub_1CC58();
LABEL_60:
    uint64_t v62 = v117;
    sub_1CC58();
    uint64_t v101 = v111;
    sub_6CBE0(v111, v62, *(uint64_t (**)(uint64_t, uint64_t, void))(v123 + 32));
    uint64_t v100 = 0LL;
  }

  else
  {
    uint64_t v100 = 1LL;
    uint64_t v101 = v111;
  }

double sub_29C5C@<D0>(uint64_t a1@<X8>)
{
  if ((Siri_Nlu_External_UserDialogAct.hasAccepted.getter() & 1) != 0)
  {
    *(void *)(a1 + 32) = sub_2F7D8((uint64_t)&type metadata for HomeCommunicationNLv4Intent);
    uint64_t v2 = sub_2F590((uint64_t)&unk_96350);
    uint64_t v3 = v2 + 16;
    *(void *)a1 = v2;
    char v4 = 0;
    return sub_1D324(v4, v3);
  }

  if ((Siri_Nlu_External_UserDialogAct.hasRejected.getter() & 1) != 0)
  {
    *(void *)(a1 + 32) = sub_2F7D8((uint64_t)&type metadata for HomeCommunicationNLv4Intent);
    uint64_t v5 = sub_2F590((uint64_t)&unk_96350);
    uint64_t v3 = v5 + 16;
    *(void *)a1 = v5;
    char v4 = 1;
    return sub_1D324(v4, v3);
  }

  if ((Siri_Nlu_External_UserDialogAct.hasCancelled.getter() & 1) != 0)
  {
    *(void *)(a1 + 32) = sub_2F7D8((uint64_t)&type metadata for HomeCommunicationNLv4Intent);
    uint64_t v6 = sub_2F590((uint64_t)&unk_96350);
    uint64_t v3 = v6 + 16;
    *(void *)a1 = v6;
    char v4 = 2;
    return sub_1D324(v4, v3);
  }

  *(void *)(a1 + 32) = 0LL;
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

void *sub_29D28(uint64_t a1)
{
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v3 = sub_4870(v2, (uint64_t)qword_A3EB0);
  char v4 = (os_log_s *)Logger.logObject.getter(v3);
  os_log_type_t v5 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl(&dword_0, v4, v5, "#ReferenceResolution findPositionReference called", v6, 2u);
    swift_slowDealloc(v6, -1LL, -1LL);
  }

  static UsoTask_CodegenConverter.convert(task:)(&v28, a1);
  if (v29[2])
  {
    uint64_t v7 = type metadata accessor for UsoTask_noVerb_uso_NoEntity(0LL);
    uint64_t v8 = swift_dynamicCast(&v27, &v28, (char *)&type metadata for Any + 8, v7, 6LL);
    if ((v8 & 1) != 0)
    {
      uint64_t v9 = v27;
      uint64_t v10 = swift_retain(v27);
      dispatch thunk of Uso_VerbTemplate_NoVerb.entity.getter(&v28, v10);
      swift_release(v9);
      id v11 = v28;
      if (v28)
      {
        uint64_t v12 = swift_retain(v28);
        uint64_t v13 = CodeGenBase.entity.getter(v12);
        swift_release(v11);
        __int128 v14 = sub_2C9E0();
        swift_release(v13);
        if (v14)
        {
          id v15 = v14;
          uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
          os_log_type_t v17 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v16, v17))
          {
            uint64_t v18 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
            uint64_t v26 = (void *)swift_slowAlloc(8LL, -1LL);
            *(_DWORD *)uint64_t v18 = 138412290;
            id v28 = v15;
            id v19 = v15;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, v29, v18 + 4, v18 + 12);
            void *v26 = v14;

            _os_log_impl( &dword_0,  v16,  v17,  "#ReferenceResolution SRR selected homeName: %@ as the resolution result",  v18,  0xCu);
            uint64_t v20 = sub_41BC(&qword_A0F50);
            swift_arrayDestroy(v26, 1LL, v20);
            swift_slowDealloc(v26, -1LL, -1LL);
            swift_slowDealloc(v18, -1LL, -1LL);
            swift_release(v9);
            swift_release(v11);
          }

          else
          {

            swift_release(v11);
            swift_release(v9);
          }

          return v14;
        }

        swift_release(v9);
        id v21 = v11;
      }

      else
      {
        id v21 = v9;
      }

      uint64_t v8 = swift_release(v21);
    }
  }

  else
  {
    sub_17288((uint64_t)&v28, &qword_A04A8);
  }

  os_log_type_t v22 = (os_log_s *)Logger.logObject.getter(v8);
  os_log_type_t v23 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v24 = 0;
    _os_log_impl(&dword_0, v22, v23, "#ReferenceResolution returned nil", v24, 2u);
    swift_slowDealloc(v24, -1LL, -1LL);
  }

  return 0LL;
}

uint64_t sub_2A0A8(uint64_t a1)
{
  uint64_t v5 = v4 - v3;
  sub_41BC(&qword_A1830);
  sub_11F5C();
  __chkstk_darwin(v6);
  sub_9298();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = (void *)type metadata accessor for UtteranceSpan(0LL);
  uint64_t v11 = *(v10 - 1);
  __chkstk_darwin(v10);
  sub_9298();
  uint64_t v14 = v13 - v12;
  if (!a1
    || (uint64_t v15 = dispatch thunk of CodeGenBase.getUtteranceAlignmentsHelper(attributeName:)( 0x746E65746E6F63LL,  0xE700000000000000LL)) == 0)
  {
    if (qword_9F820 != -1) {
      swift_once(&qword_9F820, sub_17ADC);
    }
    uint64_t v18 = sub_1BDD8();
    sub_1BE18(v18, (uint64_t)qword_A3EB0);
    os_log_type_t v19 = sub_17654();
    if (!sub_17380(v19)) {
      goto LABEL_17;
    }
    uint64_t v20 = (_WORD *)sub_144F0(2LL);
    sub_176AC(v20);
    os_log_type_t v23 = "#NLv4Transformer Cannot get content timestamp since alignments were not found on usoCommonAnnouncement";
    goto LABEL_16;
  }

  sub_5D108(v15, v5);
  sub_D304();
  uint64_t v16 = type metadata accessor for UtteranceAlignment(0LL);
  uint64_t v17 = sub_2F394(v5, 1LL, v16);
  if (v25)
  {
    sub_2F770(v17, &qword_A1828);
    _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v9, 1LL, 1LL, (uint64_t)v10);
LABEL_12:
    sub_17288(v9, &qword_A1830);
    if (qword_9F820 != -1) {
      swift_once(&qword_9F820, sub_17ADC);
    }
    uint64_t v26 = sub_1BDD8();
    uint64_t v10 = (void *)sub_1BE18(v26, (uint64_t)qword_A3EB0);
    os_log_type_t v27 = static os_log_type_t.error.getter();
    if (!sub_17380(v27)) {
      goto LABEL_17;
    }
    id v28 = (_WORD *)sub_144F0(2LL);
    sub_176AC(v28);
    os_log_type_t v23 = "#NLv4Transformer Cannot get content timestamp since spans are  missing";
LABEL_16:
    sub_17358(&dword_0, v21, v22, v23);
    sub_48D4(v9);
LABEL_17:

    return 0LL;
  }

  uint64_t v24 = UtteranceAlignment.spans.getter(v17);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8LL))(v5, v16);
  sub_5D114(v24, v9);
  sub_D304();
  sub_2F394(v9, 1LL, (uint64_t)v10);
  if (v25) {
    goto LABEL_12;
  }
  uint64_t v31 = (*(uint64_t (**)(uint64_t, uint64_t, void *))(v11 + 32))(v14, v9, v10);
  unsigned int v32 = UtteranceSpan.startMilliSeconds.getter(v31);
  if ((v32 & 0x80000000) == 0)
  {
    unsigned int v33 = v32;
    if ((UtteranceSpan.endMilliSeconds.getter() & 0x80000000) == 0)
    {
      uint64_t v29 = v33;
      (*(void (**)(uint64_t, void *))(v11 + 8))(v14, v10);
      return v29;
    }
  }

  uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Negative value is not representable",  35LL,  2LL,  "Swift/Integers.swift",  20LL,  2,  3451LL,  0);
  __break(1u);
  return result;
}

uint64_t sub_2A3C4()
{
  uint64_t v270 = v1;
  uint64_t v271 = v2;
  uint64_t v4 = v3;
  sub_41BC(&qword_A1868);
  sub_11F5C();
  __chkstk_darwin(v5);
  sub_9298();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = type metadata accessor for UUID(0LL);
  uint64_t v227 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  sub_6314();
  uint64_t v226 = v10;
  sub_62D0();
  __chkstk_darwin(v11);
  sub_1BF8C();
  sub_1771C(v12);
  uint64_t v13 = type metadata accessor for IdentifierNamespace(0LL);
  sub_2F68C();
  __chkstk_darwin(v14);
  sub_172F4();
  sub_1771C(v15);
  uint64_t v16 = (os_log_s *)sub_41BC(&qword_9FE88);
  sub_11F5C();
  __chkstk_darwin(v17);
  sub_6314();
  uint64_t v241 = v18;
  sub_62D0();
  __chkstk_darwin(v19);
  sub_6308();
  uint64_t v250 = v20;
  sub_62D0();
  __chkstk_darwin(v21);
  sub_1BF8C();
  sub_1771C(v22);
  sub_41BC((uint64_t *)&off_9FE90);
  sub_11F5C();
  __chkstk_darwin(v23);
  sub_6314();
  uint64_t v236 = v24;
  sub_62D0();
  __chkstk_darwin(v25);
  sub_6308();
  uint64_t v245 = (char *)v26;
  sub_62D0();
  __chkstk_darwin(v27);
  sub_6308();
  uint64_t v244 = v28;
  sub_62D0();
  __chkstk_darwin(v29);
  sub_6308();
  uint64_t v247 = v30;
  sub_62D0();
  __chkstk_darwin(v31);
  sub_6308();
  uint64_t v253 = v32;
  sub_62D0();
  __chkstk_darwin(v33);
  sub_6308();
  v252 = (char *)v34;
  sub_62D0();
  uint64_t v36 = __chkstk_darwin(v35);
  uint64_t v38 = (char *)&v209 - v37;
  uint64_t v39 = __chkstk_darwin(v36);
  uint64_t v41 = (char *)&v209 - v40;
  __chkstk_darwin(v39);
  sub_1BF8C();
  uint64_t v264 = v42;
  uint64_t v249 = type metadata accessor for UsoIdentifier(0LL);
  uint64_t v237 = *(void *)(v249 - 8);
  __chkstk_darwin(v249);
  sub_6314();
  uint64_t v233 = v43;
  sub_62D0();
  __chkstk_darwin(v44);
  sub_6308();
  uint64_t v243 = v45;
  sub_62D0();
  __chkstk_darwin(v46);
  sub_6308();
  uint64_t v230 = v47;
  sub_62D0();
  __chkstk_darwin(v48);
  sub_6308();
  uint64_t v251 = v49;
  sub_62D0();
  __chkstk_darwin(v50);
  sub_6308();
  uint64_t v231 = v51;
  sub_62D0();
  __chkstk_darwin(v52);
  uint64_t v257 = (char *)&v209 - v53;
  sub_62D0();
  __chkstk_darwin(v54);
  sub_1BF8C();
  sub_1771C(v55);
  sub_41BC(&qword_A1870);
  sub_11F5C();
  __chkstk_darwin(v56);
  sub_6314();
  uint64_t v229 = v57;
  sub_62D0();
  __chkstk_darwin(v58);
  sub_1BF8C();
  uint64_t v261 = v59;
  char v60 = sub_3FDE8(0);
  uint64_t v61 = (void *)&unk_72000;
  uint64_t v262 = v16;
  v263 = v0;
  uint64_t v256 = v41;
  if ((v60 & 1) == 0) {
    goto LABEL_12;
  }
  v224 = (char *)v9;
  if (qword_9F820 != -1) {
    goto LABEL_121;
  }
  while (1)
  {
    uint64_t v62 = sub_1BDD8();
    sub_4870(v62, (uint64_t)qword_A3EB0);
    sub_2F738();
    os_log_type_t v63 = sub_A9E8();
    uint64_t v64 = v63;
    if (os_log_type_enabled(v16, v63))
    {
      Swift::String v65 = (uint8_t *)sub_144F0(2LL);
      *(_WORD *)Swift::String v65 = 0;
      sub_1BE98(&dword_0, v16, (os_log_type_t)v64, "#NLv4Transformer Checking UsoEntitySpans", v65);
      uint64_t v41 = v256;
      sub_48D4((uint64_t)v65);
    }

    if (v4)
    {
      uint64_t v66 = sub_69F18();
      uint64_t v219 = v69;
      if (v67)
      {
        uint64_t v70 = v66;
        uint64_t v71 = v67;
        uint64_t v72 = v68;
        swift_bridgeObjectRetain_n(v67, 4LL);
        swift_bridgeObjectRetain_n(v72, 4LL);
        unint64_t v73 = v72;
        sub_2F540();
        os_log_type_t v74 = sub_17654();
        unint64_t v75 = v71;
        if (os_log_type_enabled(v0, v74))
        {
          uint64_t v76 = sub_144F0(22LL);
          uint64_t v77 = sub_144F0(64LL);
          v267[0] = v77;
          *(_DWORD *)uint64_t v76 = 136315394;
          swift_bridgeObjectRetain(v75);
          uint64_t v78 = v70;
          uint64_t v265 = sub_68DC4(v70, v75, v267);
          sub_2F60C(v265, v79, v80, v76 + 12);
          sub_2F3A8(v73);
          sub_2F46C(v75);
          *(_WORD *)(v76 + sub_423C(v0 + 12) = 2080;
          sub_25C3C();
          uint64_t v265 = sub_68DC4(v219, v73, v267);
          sub_2F60C(v265, v81, v82, v76 + 22);
          sub_2F3A8(v75);
          sub_2F46C(v73);
          _os_log_impl( &dword_0,  v0,  v74,  "#NLv4Transformer selected home entity using UsoEntitySpan - name : %s, type : %s.",  (uint8_t *)v76,  0x16u);
          swift_arrayDestroy(v77, 2LL, (char *)&type metadata for Any + 8);
          sub_48D4(v77);
          sub_48D4(v76);
        }

        else
        {

          sub_2F7BC(v72);
          sub_2F7BC(v71);
          return v70;
        }

        return v78;
      }
    }

    sub_2F540();
    os_log_type_t v83 = sub_17654();
    if (sub_17380(v83))
    {
      uint64_t v84 = (_WORD *)sub_144F0(2LL);
      sub_176AC(v84);
      sub_17358( &dword_0,  v85,  v86,  "NLv4Transformer did not find HomeEntity using UsoEntitySpan. Checking UsoIdentifiers.");
      sub_48D4(v64);
    }

    uint64_t v9 = (uint64_t)v224;
    uint64_t v61 = &unk_72000;
LABEL_12:
    if ((sub_12384() & 1) == 0)
    {
      if (qword_9F820 != -1) {
        swift_once(&qword_9F820, sub_17ADC);
      }
      uint64_t v97 = sub_1BDD8();
      sub_1BE18(v97, (uint64_t)qword_A3EB0);
      os_log_type_t v98 = sub_17654();
      if (!sub_17380(v98)) {
        goto LABEL_32;
      }
      uint64_t v99 = (_WORD *)sub_144F0(2LL);
      sub_176AC(v99);
      unint64_t v96 = "#NLv4Transformer interpretation group is not populated. Not proceeding with UsoIdentifier.interpretationGroup checks.";
      goto LABEL_31;
    }

    if (!v4) {
      goto LABEL_27;
    }
    uint64_t v87 = sub_2F4C4();
    if (!v87) {
      goto LABEL_27;
    }
    uint64_t v0 = (os_log_s *)v87;
    if (!*(void *)(v87 + 16))
    {
      sub_18FB8();
LABEL_27:
      if (qword_9F820 != -1) {
        swift_once(&qword_9F820, sub_17ADC);
      }
      uint64_t v100 = sub_1BDD8();
      sub_1BE18(v100, (uint64_t)qword_A3EB0);
      os_log_type_t v101 = sub_17654();
      if (!sub_17380(v101)) {
        goto LABEL_32;
      }
      uint64_t v102 = (_WORD *)sub_144F0(2LL);
      sub_176AC(v102);
LABEL_31:
      sub_17358(&dword_0, v94, v95, v96);
      sub_48D4(v9);
      goto LABEL_32;
    }

    uint64_t v88 = v261;
    sub_5D120(v87, v261);
    uint64_t v89 = v249;
    uint64_t v90 = sub_2F394(v88, 1LL, v249);
    if (v122)
    {
      sub_18FB8();
      sub_17288(v88, &qword_A1870);
      if (qword_9F820 != -1) {
        goto LABEL_123;
      }
      goto LABEL_19;
    }

    uint64_t v210 = v8;
    v224 = (char *)v9;
    uint64_t v211 = UsoIdentifier.value.getter(v90);
    unint64_t v212 = v104;
    uint64_t v260 = *(void (**)(uint64_t, uint64_t))(v237 + 8);
    v260(v88, v89);
    sub_4CF8((uint64_t)v0);
    uint64_t v16 = v105;
    sub_18FB8();
    sub_4F80((uint64_t)v16);
    uint64_t v0 = v106;
    uint64_t v107 = swift_bridgeObjectRetain(v106);
    uint64_t v108 = sub_2DF94(v107);
    sub_18FB8();
    v267[0] = (uint64_t)v108;
    sub_2E074(v267);
    sub_D304();
    sub_18FB8();
    uint64_t v8 = (uint64_t)v257;
    uint64_t v222 = *(void *)(v267[0] + 16);
    if (!v222)
    {
      swift_release(v267[0]);
      uint64_t v9 = v249;
LABEL_96:
      uint64_t v176 = sub_2F4C4();
      unint64_t v177 = v212;
      uint64_t v178 = v211;
      if (v176)
      {
        uint64_t v0 = (os_log_s *)v176;
        uint64_t v179 = v229;
        sub_5D120(v176, v229);
        sub_18FB8();
        uint64_t v180 = sub_2F394(v179, 1LL, v9);
        if (v122)
        {
          sub_1BF6C();
          sub_17288(v179, &qword_A1870);
LABEL_106:
          if (qword_9F820 != -1) {
            swift_once(&qword_9F820, sub_17ADC);
          }
          uint64_t v189 = sub_1BDD8();
          sub_1BE18(v189, (uint64_t)qword_A3EB0);
          os_log_type_t v190 = sub_17654();
          if (!sub_17380(v190)) {
            goto LABEL_32;
          }
          uint64_t v191 = (_WORD *)sub_144F0(2LL);
          sub_176AC(v191);
          unint64_t v96 = "#NLv4Transformer no targetName name found";
          goto LABEL_31;
        }

        ((void (*)(uint64_t))UsoIdentifier.namespace.getter)(v180);
        uint64_t v182 = v181;
        sub_2F3DC(v179);
        if (v182)
        {
          if (qword_9F820 != -1) {
            swift_once(&qword_9F820, sub_17ADC);
          }
          uint64_t v183 = sub_1BDD8();
          sub_2F508(v183, (uint64_t)qword_A3EB0);
          uint64_t v184 = sub_2F484(v177);
          Logger.logObject.getter(v184);
          os_log_type_t v185 = sub_17654();
          if (sub_1BF30(v185))
          {
            v186 = (uint8_t *)sub_144F0(12LL);
            uint64_t v187 = sub_144F0(32LL);
            v267[0] = v187;
            *(_DWORD *)v186 = 136315138;
            sub_2F760();
            uint64_t v265 = sub_68DC4(v178, v177, v267);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v265, &v266, v186 + 4, v186 + 12);
            sub_2F46C(v177);
            sub_14550(&dword_0, v0, (os_log_type_t)v9, "#NLv4Transformer targetName name: %s", v186);
            sub_17528(v187, v188, (uint64_t)&type metadata for Any + 8);
            sub_48D4(v187);
            sub_48D4((uint64_t)v186);
          }

          else
          {

            sub_2F3A8(v177);
          }

          return v178;
        }
      }

      sub_1BF6C();
      goto LABEL_106;
    }

    unint64_t v110 = 0LL;
    uint64_t v221 = v267[0] + 32;
    unsigned int v254 = enum case for IdentifierNamespace.nsSemanticValue(_:);
    v242[1] = enum case for IdentifierNamespace.nsHomeKitEntityType(_:);
    int v235 = enum case for IdentifierNamespace.nsItemId(_:);
    *(void *)&__int128 v109 = v61[274];
    __int128 v217 = v109;
    v216 = (char *)&type metadata for Any + 8;
    uint64_t v0 = v240;
    uint64_t v223 = v267[0];
    uint64_t v9 = v249;
    uint64_t v225 = v4;
    v248 = v38;
    uint64_t v255 = v13;
LABEL_36:
    if (v110 < *(void *)(v223 + 16)) {
      break;
    }
    __break(1u);
LABEL_121:
    swift_once(&qword_9F820, sub_17ADC);
  }

  unint64_t v234 = v110;
  uint64_t v111 = *(void *)(v221 + 8 * v110);
  uint64_t v112 = *(os_log_s **)(v111 + 16);
  uint64_t v238 = v111;
  uint64_t v239 = v112;
  if (!v112)
  {
    swift_bridgeObjectRetain(v111);
    goto LABEL_67;
  }

  uint64_t v113 = v237;
  uint64_t v114 = v111 + ((*(unsigned __int8 *)(v237 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v237 + 80));
  sub_2F484(v111);
  os_log_t v259 = *(os_log_t *)(v113 + 72);
  uint64_t v261 = *(void *)(v113 + 16);
  v220 = (char *)v114;
  uint64_t v115 = v112;
  while (1)
  {
    uint64_t v116 = (uint64_t)v38;
    uint64_t v13 = v9;
    uint64_t v117 = sub_2F51C(v8, v114);
    uint64_t v118 = v264;
    UsoIdentifier.namespaceSemantic.getter(v117);
    uint64_t v119 = v255;
    uint64_t v258 = (void (*)(char *, void, uint64_t))*((void *)v263 + 13);
    v258(v41, v254, v255);
    sub_2F62C((uint64_t)v41, 0LL, 1LL, v119);
    uint64_t v121 = (uint64_t)v0 + v120;
    sub_2F3B0(v118, (uint64_t)v0);
    sub_2F3B0((uint64_t)v41, v121);
    sub_2F394((uint64_t)v0, 1LL, v119);
    if (v122) {
      break;
    }
    uint64_t v38 = (char *)v116;
    sub_2F3B0((uint64_t)v0, v116);
    sub_2F394(v121, 1LL, v119);
    if (v122)
    {
      uint64_t v123 = sub_2F700();
      v124(v123);
LABEL_47:
      sub_17288((uint64_t)v0, &qword_9FE88);
      sub_2F38C((uint64_t)v41);
      sub_2F38C(v264);
      goto LABEL_49;
    }

    uint64_t v125 = v263;
    uint64_t v126 = v246;
    (*((void (**)(uint64_t, uint64_t, uint64_t))v263 + 4))(v246, v121, v119);
    sub_A880( (unint64_t *)&off_9FE98,  (uint64_t (*)(uint64_t))&type metadata accessor for IdentifierNamespace,  (uint64_t)&protocol conformance descriptor for IdentifierNamespace);
    char v127 = dispatch thunk of static Equatable.== infix(_:_:)(v116, v126, v119);
    uint64_t v128 = (void (*)(uint64_t))*((void *)v125 + 1);
    uint64_t v129 = sub_2F700();
    v128(v129);
    uint64_t v130 = v126;
    uint64_t v41 = v256;
    ((void (*)(uint64_t, uint64_t))v128)(v130, v119);
    uint64_t v0 = v240;
    sub_2F38C((uint64_t)v240);
    sub_2F38C((uint64_t)v41);
    sub_2F38C(v264);
    if ((v127 & 1) != 0) {
      goto LABEL_53;
    }
LABEL_49:
    uint64_t v8 = (uint64_t)v257;
    sub_2F3F0();
    v114 += (uint64_t)v259;
    uint64_t v115 = (os_log_s *)((char *)v115 - 1);
    if (!v115)
    {
      sub_2F3D4((uint64_t)v268);
      goto LABEL_51;
    }
  }

  sub_2F394(v121, 1LL, v119);
  uint64_t v38 = (char *)v116;
  if (!v122) {
    goto LABEL_47;
  }
  sub_2F38C((uint64_t)v0);
  sub_2F38C((uint64_t)v41);
  sub_2F38C(v264);
LABEL_53:
  sub_18FB8();
  uint64_t v131 = v232;
  v215 = *(uint64_t (**)(uint64_t, char *, uint64_t))(v237 + 32);
  uint64_t v132 = v215(v232, v257, v9);
  uint64_t v214 = UsoIdentifier.value.getter(v132);
  uint64_t v218 = v133;
  sub_2F3F0();
  sub_1C030();
  uint64_t v4 = 0LL;
  uint64_t v134 = (uint64_t)v220;
  uint64_t v13 = v255;
  uint64_t v135 = v239;
  while (2)
  {
    uint64_t v0 = (os_log_s *)(v4 + 1);
    if (__OFADD__(v4, 1LL))
    {
      __break(1u);
LABEL_113:
      sub_2F3D4((uint64_t)v268);
      sub_2F3D4((uint64_t)v242);
      sub_2F6D0();
      uint64_t v9 = v227;
      uint64_t v135 = v228;
      uint64_t v38 = v224;
      (*(void (**)(os_log_s *, uint64_t, char *))(v227 + 32))(v228, v131, v224);
      if (qword_9F820 != -1) {
        swift_once(&qword_9F820, sub_17ADC);
      }
      uint64_t v192 = sub_1BDD8();
      sub_2F508(v192, (uint64_t)qword_A3EB0);
      uint64_t v138 = v226;
      (*(void (**)(uint64_t, os_log_s *, char *))(v9 + 16))(v226, v135, v38);
      uint64_t v13 = v218;
      sub_2F484(v218);
      uint64_t v41 = v213;
      sub_2F484((uint64_t)v213);
      uint64_t v193 = sub_2F760();
      Logger.logObject.getter(v193);
      os_log_type_t v194 = sub_17654();
      if (sub_17380(v194))
      {
        uint64_t v195 = sub_144F0(42LL);
        uint64_t v196 = sub_144F0(128LL);
        v267[0] = v196;
        *(_DWORD *)uint64_t v195 = 136315906;
        LODWORD(v264) = v131;
        swift_bridgeObjectRetain(v13);
        uint64_t v265 = sub_68DC4(v214, v13, v267);
        sub_2F474(v265, v197, v198, v195 + 12);
        sub_2F46C(v13);
        *(_WORD *)(v195 + sub_423C(v0 + 12) = 2080;
        sub_25C3C();
        uint64_t v265 = sub_68DC4(v219, (unint64_t)v41, v267);
        sub_2F474(v265, v199, v200, v195 + 22);
        sub_2F46C((uint64_t)v41);
        *(_WORD *)(v195 + 22) = 2080;
        sub_2F760();
        uint64_t v265 = sub_68DC4(v4, v134, v267);
        sub_2F474(v265, v201, v202, v195 + 32);
        sub_2F46C(v134);
        *(_WORD *)(v195 + 32) = 2080;
        sub_A880( &qword_A1878,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
        uint64_t v203 = v226;
        uint64_t v205 = dispatch thunk of CustomStringConvertible.description.getter(v38, v204);
        uint64_t v265 = sub_2F584(v205, v206);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v265, &v266, v195 + 34, v195 + 42);
        sub_D304();
        uint64_t v207 = *(void (**)(uint64_t, char *))(v227 + 8);
        v207(v203, v38);
        _os_log_impl( &dword_0,  v0,  (os_log_type_t)v264,  "#NLv4Transformer selected home entity from identifiers - name : %s, type : %s, identifierString : %s, identifier : %s",  (uint8_t *)v195,  0x2Au);
        swift_arrayDestroy(v196, 4LL, (char *)&type metadata for Any + 8);
        sub_48D4(v196);
        sub_48D4(v195);

        v207((uint64_t)v228, v38);
      }

      else
      {
LABEL_118:

        uint64_t v208 = *(void (**)(uint64_t, char *))(v9 + 8);
        v208(v138, v38);
        sub_2F3A8(v13);
        sub_2F3A8((uint64_t)v41);
        sub_2F3A8(v134);
        v208((uint64_t)v135, v38);
      }

      return v214;
    }

    uint64_t v136 = sub_2F51C(v251, v134);
    uint64_t v38 = v252;
    UsoIdentifier.namespaceSemantic.getter(v136);
    uint64_t v137 = v253;
    sub_2F5DC(v253, (uint64_t)&v269);
    sub_2F62C(v137, 0LL, 1LL, v13);
    uint64_t v138 = v250;
    uint64_t v140 = v250 + v139;
    sub_2F3B0((uint64_t)v38, v250);
    sub_2F3B0(v137, v140);
    sub_2F394(v138, 1LL, v13);
    if (!v122)
    {
      uint64_t v141 = v247;
      sub_2F3B0(v138, v247);
      sub_2F394(v140, 1LL, v13);
      if (!v142)
      {
        sub_2F3F8();
        sub_A880( (unint64_t *)&off_9FE98,  (uint64_t (*)(uint64_t))&type metadata accessor for IdentifierNamespace,  (uint64_t)&protocol conformance descriptor for IdentifierNamespace);
        uint64_t v131 = sub_2F66C(v247);
        sub_2F5C4(v247);
        sub_2F5C4((uint64_t)v38);
        sub_2F38C(v138);
        sub_2F38C(v253);
        sub_2F38C((uint64_t)v252);
        uint64_t v38 = v248;
        uint64_t v9 = v249;
        uint64_t v41 = v256;
        if ((v131 & 1) != 0) {
          goto LABEL_78;
        }
        goto LABEL_65;
      }

      (*((void (**)(uint64_t, uint64_t))v263 + 1))(v141, v13);
      uint64_t v38 = v248;
      uint64_t v41 = v256;
LABEL_63:
      sub_17288(v250, &qword_9FE88);
      uint64_t v131 = (uint64_t)&off_9FE90;
      sub_2F3E8(v253);
      sub_2F3E8((uint64_t)v252);
      uint64_t v9 = v249;
LABEL_65:
      sub_2F3DC(v251);
      ++v4;
      v134 += (uint64_t)v259;
      if (v0 == v135)
      {
        sub_2F3D4((uint64_t)&v250);
        sub_2F3D4((uint64_t)v268);
        sub_2F6B4();
        uint64_t v8 = (uint64_t)v257;
        goto LABEL_67;
      }

      continue;
    }

    break;
  }

  sub_2F78C();
  uint64_t v41 = v256;
  if (!v122) {
    goto LABEL_63;
  }
  sub_2F4B4(v250);
  sub_2F4B4(v253);
  sub_2F4B4((uint64_t)v252);
  uint64_t v9 = v249;
LABEL_78:
  sub_18FB8();
  uint64_t v159 = v231;
  uint64_t v160 = sub_2F5EC(v231, v251);
  uint64_t v219 = UsoIdentifier.value.getter(v160);
  uint64_t v213 = (char *)v161;
  sub_2F3DC(v159);
  sub_1C030();
  uint64_t v162 = 0LL;
  uint64_t v163 = v220;
  while (2)
  {
    uint64_t v0 = (os_log_s *)(v162 + 1);
    if (__OFADD__(v162, 1LL))
    {
      __break(1u);
      goto LABEL_118;
    }

    v164 = v163;
    uint64_t v138 = v9;
    uint64_t v165 = sub_2F51C(v243, (uint64_t)v163);
    uint64_t v166 = v244;
    UsoIdentifier.namespaceSemantic.getter(v165);
    uint64_t v38 = v245;
    sub_2F5DC((uint64_t)v245, (uint64_t)v267 + 4);
    sub_2F62C((uint64_t)v38, 0LL, 1LL, v13);
    uint64_t v134 = v241;
    uint64_t v168 = v241 + v167;
    sub_2F3B0(v166, v241);
    uint64_t v169 = sub_2F700();
    sub_2F3B0(v169, v170);
    sub_2F394(v134, 1LL, v13);
    if (!v122)
    {
      uint64_t v138 = v236;
      sub_2F3B0(v134, v236);
      sub_2F394(v168, 1LL, v13);
      if (!v171)
      {
        sub_2F3F8();
        sub_A880( (unint64_t *)&off_9FE98,  (uint64_t (*)(uint64_t))&type metadata accessor for IdentifierNamespace,  (uint64_t)&protocol conformance descriptor for IdentifierNamespace);
        char v172 = sub_2F66C(v138);
        sub_2F5C4(v138);
        sub_2F5C4((uint64_t)v38);
        sub_2F38C(v134);
        sub_2F38C((uint64_t)v245);
        sub_2F38C(v244);
        uint64_t v38 = v248;
        uint64_t v9 = v249;
        uint64_t v41 = v256;
        if ((v172 & 1) != 0) {
          goto LABEL_92;
        }
        goto LABEL_90;
      }

      (*((void (**)(uint64_t, uint64_t))v263 + 1))(v138, v13);
      uint64_t v38 = v248;
      uint64_t v9 = v249;
      uint64_t v41 = v256;
LABEL_88:
      sub_17288(v241, &qword_9FE88);
      sub_2F3E8((uint64_t)v245);
      sub_2F3E8(v244);
LABEL_90:
      sub_2F3DC(v243);
      ++v162;
      uint64_t v163 = (char *)v259 + (void)v164;
      uint64_t v135 = v239;
      if (v0 == v239)
      {
        sub_2F3D4((uint64_t)&v250);
        sub_2F3D4((uint64_t)&v243);
        sub_2F3D4((uint64_t)v268);
        uint64_t v0 = v240;
        uint64_t v8 = (uint64_t)v257;
        goto LABEL_51;
      }

      continue;
    }

    break;
  }

  sub_2F78C();
  uint64_t v41 = v256;
  if (!v122) {
    goto LABEL_88;
  }
  sub_2F4B4(v241);
  sub_2F4B4((uint64_t)v245);
  sub_2F4B4(v244);
LABEL_92:
  sub_2F3D4((uint64_t)v268);
  uint64_t v173 = v230;
  uint64_t v174 = sub_2F5EC(v230, v243);
  uint64_t v4 = UsoIdentifier.value.getter(v174);
  uint64_t v134 = v175;
  sub_2F3DC(v173);
  uint64_t v131 = v210;
  ((void (*)(uint64_t, uint64_t))UUID.init(uuidString:))(v4, v134);
  sub_2F394(v131, 1LL, (uint64_t)v224);
  uint64_t v0 = v240;
  uint64_t v8 = (uint64_t)v257;
  if (!v122) {
    goto LABEL_113;
  }
  sub_1BF6C();
  sub_2F3D4((uint64_t)&v243);
  sub_2F3D4((uint64_t)&v250);
  sub_17288(v131, &qword_A1868);
LABEL_51:
  uint64_t v4 = v225;
LABEL_67:
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v143 = sub_1BDD8();
  sub_2F508(v143, (uint64_t)qword_A3EB0);
  uint64_t v144 = v238;
  uint64_t v145 = swift_bridgeObjectRetain_n(v238, 3LL);
  uint64_t v16 = (os_log_s *)Logger.logObject.getter(v145);
  int v146 = static os_log_type_t.error.getter();
  if (!os_log_type_enabled(v16, (os_log_type_t)v146))
  {

    sub_2F7BC(v144);
LABEL_76:
    unint64_t v110 = v234 + 1;
    if (v234 + 1 == v222)
    {
      sub_2F6D0();
      goto LABEL_96;
    }

    goto LABEL_36;
  }

  LODWORD(v261) = v146;
  uint64_t v147 = sub_144F0(22LL);
  uint64_t v148 = sub_144F0(64LL);
  v267[0] = v148;
  *(_DWORD *)uint64_t v147 = v217;
  os_log_t v259 = v16;
  if (!v239)
  {
    int v151 = 0;
    LOBYTE(v152) = 1;
    uint64_t v4 = v238;
LABEL_75:
    LODWORD(v265) = v151;
    BYTE4(v265) = v152;
    uint64_t v153 = sub_41BC(&qword_9FEA8);
    uint64_t v154 = String.init<A>(describing:)(&v265, v153);
    *(void *)(v147 + 4) = sub_2F584(v154, v155);
    sub_2F3A8(v4);
    sub_D304();
    *(_WORD *)(v147 + sub_423C(v0 + 12) = 2080;
    uint64_t v156 = sub_2F6EC();
    uint64_t v16 = (os_log_s *)Array.description.getter(v156, v9);
    unint64_t v158 = v157;
    swift_bridgeObjectRelease(v4);
    *(void *)(v147 + 14) = sub_68DC4((uint64_t)v16, v158, v267);
    sub_2F3A8(v4);
    sub_18FB8();
    uint64_t v0 = v259;
    _os_log_impl( &dword_0,  v259,  (os_log_type_t)v261,  "#NLv4Transformer Dropped identifier group %s: %s due to missing value",  (uint8_t *)v147,  0x16u);
    swift_arrayDestroy(v148, 2LL, v216);
    sub_48D4(v148);
    sub_48D4(v147);

    sub_2F6B4();
    uint64_t v41 = v256;
    goto LABEL_76;
  }

  uint64_t v4 = v238;
  if (*(void *)(v238 + 16))
  {
    uint64_t v149 = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v237 + 16))( v233,  v238 + ((*(unsigned __int8 *)(v237 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v237 + 80)),  v9);
    unint64_t v150 = UsoIdentifier.interpretationGroup.getter(v149);
    int v151 = v150;
    uint64_t v152 = HIDWORD(v150) & 1;
    sub_2F3F0();
    goto LABEL_75;
  }

  __break(1u);
LABEL_123:
  swift_once(&qword_9F820, sub_17ADC);
LABEL_19:
  uint64_t v91 = sub_1BDD8();
  sub_1BE18(v91, (uint64_t)qword_A3EB0);
  os_log_type_t v92 = sub_17654();
  if (sub_17380(v92))
  {
    unint64_t v93 = (_WORD *)sub_144F0(2LL);
    sub_176AC(v93);
    unint64_t v96 = "#NLv4Transformer no targetName found";
    goto LABEL_31;
  }

LABEL_32:
  return 0LL;
}

uint64_t sub_2BB5C()
{
  uint64_t v113 = v2;
  uint64_t v114 = v3;
  uint64_t v110 = v4;
  uint64_t v6 = v5;
  unint64_t v8 = v7;
  uint64_t v105 = ((uint64_t (*)(void))type metadata accessor for UsoEntity_common_Quantifier.DefinedValues)(0LL);
  uint64_t v108 = *(void *)(v105 - 8);
  __chkstk_darwin(v105);
  sub_172F4();
  uint64_t v102 = v9;
  uint64_t v106 = sub_41BC(&qword_A1838);
  sub_11F5C();
  __chkstk_darwin(v10);
  sub_2F55C(v11, v101);
  sub_41BC(&qword_A1840);
  sub_11F5C();
  __chkstk_darwin(v12);
  sub_6314();
  uint64_t v103 = v13;
  sub_62D0();
  __chkstk_darwin(v14);
  sub_6308();
  uint64_t v109 = v15;
  sub_62D0();
  __chkstk_darwin(v16);
  sub_1BF8C();
  uint64_t v107 = v17;
  uint64_t v18 = ((uint64_t (*)(void))type metadata accessor for UsoEntity_common_UserEntity.DefinedValues)(0LL);
  sub_2F68C();
  __chkstk_darwin(v19);
  sub_9298();
  uint64_t v22 = v21 - v20;
  uint64_t v23 = sub_41BC(&qword_A1848);
  sub_11F5C();
  __chkstk_darwin(v24);
  sub_2F428();
  sub_41BC(&qword_A1850);
  sub_11F5C();
  __chkstk_darwin(v25);
  sub_2F418();
  uint64_t v28 = v26 - v27;
  uint64_t v30 = __chkstk_darwin(v29);
  uint64_t v32 = (char *)&v101 - v31;
  uint64_t v33 = __chkstk_darwin(v30);
  uint64_t v35 = (char *)&v101 - v34;
  if (v8 == 1 || !v6) {
    sub_2F7CC((uint64_t)&v101 - v34, 1LL);
  }
  else {
    ((void (*)(uint64_t))dispatch thunk of UsoEntity_common_UserEntity.definedValue.getter)(v33);
  }
  (*(void (**)(char *, void, uint64_t))(v0 + 104))( v32,  enum case for UsoEntity_common_UserEntity.DefinedValues.common_UserEntity_Everywhere(_:),  v18);
  sub_2F7CC((uint64_t)v32, 0LL);
  uint64_t v36 = v1 + *(int *)(v23 + 48);
  uint64_t v37 = (os_log_s *)&qword_A1850;
  sub_2F3B0((uint64_t)v35, v1);
  sub_2F3B0((uint64_t)v32, v36);
  sub_2F394(v1, 1LL, v18);
  if (v39)
  {
    sub_2F38C((uint64_t)v32);
    sub_2F38C((uint64_t)v35);
    uint64_t v38 = sub_2F394(v36, 1LL, v18);
    if (v39)
    {
      sub_2F6E4(v38, &qword_A1850);
      goto LABEL_33;
    }

    goto LABEL_13;
  }

  sub_27D18(v1, v28, &qword_A1850);
  sub_2F394(v36, 1LL, v18);
  if (v39)
  {
    uint64_t v36 = (uint64_t)&qword_A1850;
    sub_2F3E8((uint64_t)v32);
    sub_2F3E8((uint64_t)v35);
    uint64_t v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v28, v18);
LABEL_13:
    sub_2F6E4(v38, &qword_A1848);
    goto LABEL_14;
  }

  uint64_t v55 = sub_2F700();
  v56(v55);
  sub_A880( &qword_A1860,  (uint64_t (*)(uint64_t))&type metadata accessor for UsoEntity_common_UserEntity.DefinedValues,  (uint64_t)&protocol conformance descriptor for UsoEntity_common_UserEntity.DefinedValues);
  uint64_t v36 = dispatch thunk of static Equatable.== infix(_:_:)(v28, v22, v18);
  unint64_t v0 = *(void *)(v0 + 8);
  ((void (*)(uint64_t, uint64_t))v0)(v22, v18);
  sub_2F38C((uint64_t)v32);
  sub_2F38C((uint64_t)v35);
  ((void (*)(uint64_t, uint64_t))v0)(v28, v18);
  sub_2F38C(v1);
  if ((v36 & 1) != 0)
  {
LABEL_33:
    if (qword_9F820 != -1) {
      swift_once(&qword_9F820, sub_17ADC);
    }
    uint64_t v57 = sub_1BDD8();
    sub_1BE18(v57, (uint64_t)qword_A3EB0);
    os_log_type_t v58 = sub_17654();
    if (sub_1BF30(v58))
    {
      uint64_t v59 = (_WORD *)sub_144F0(2LL);
      sub_2F7B0(v59);
      char v60 = "#NLv4Transformer has everywhere in utterance";
LABEL_77:
      sub_1BE98(&dword_0, (os_log_s *)v0, (os_log_type_t)v37, v60, (uint8_t *)v36);
      uint64_t v95 = 1LL;
      goto LABEL_78;
    }

    goto LABEL_79;
  }

LABEL_90:
    uint64_t v62 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v36);
    goto LABEL_43;
  }

  sub_D304();
  _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v45, 1LL, 1LL, v43);
LABEL_45:
  (*(void (**)(uint64_t, void, uint64_t))(v44 + 104))( v46,  enum case for UsoEntity_common_Quantifier.DefinedValues.common_Quantifier_All(_:),  v43);
  sub_2F62C(v46, 0LL, 1LL, v43);
  uint64_t v36 = v42 + v64;
  uint64_t v37 = (os_log_s *)&qword_A1840;
  sub_2F3B0(v45, v42);
  sub_2F3B0(v46, v36);
  sub_2F394(v42, 1LL, v43);
  if (v39)
  {
    sub_2F38C(v46);
    sub_2F38C(v45);
    uint64_t v65 = sub_2F394(v36, 1LL, v43);
    if (v39)
    {
      sub_2F770(v65, &qword_A1840);
      goto LABEL_55;
    }

    goto LABEL_53;
  }

  uint64_t v66 = v103;
  sub_27D18(v42, v103, &qword_A1840);
  sub_2F394(v36, 1LL, v43);
  if (v67)
  {
    uint64_t v36 = (uint64_t)&qword_A1840;
    sub_2F3E8(v46);
    sub_2F3E8(v45);
    uint64_t v65 = (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 8))(v66, v43);
LABEL_53:
    sub_2F770(v65, &qword_A1838);
    goto LABEL_59;
  }

  uint64_t v68 = v102;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 32))(v102, v36, v43);
  sub_A880( &qword_A1858,  (uint64_t (*)(uint64_t))&type metadata accessor for UsoEntity_common_Quantifier.DefinedValues,  (uint64_t)&protocol conformance descriptor for UsoEntity_common_Quantifier.DefinedValues);
  uint64_t v36 = dispatch thunk of static Equatable.== infix(_:_:)(v66, v68, v43);
  unint64_t v0 = *(void *)(v44 + 8);
  ((void (*)(uint64_t, uint64_t))v0)(v68, v43);
  uint64_t v37 = (os_log_s *)&qword_A1840;
  sub_2F38C(v46);
  sub_2F38C(v45);
  ((void (*)(uint64_t, uint64_t))v0)(v66, v43);
  sub_2F38C(v42);
  if ((v36 & 1) != 0)
  {
LABEL_55:
    if (qword_9F820 != -1) {
      swift_once(&qword_9F820, sub_17ADC);
    }
    uint64_t v69 = sub_1BDD8();
    sub_1BE18(v69, (uint64_t)qword_A3EB0);
    os_log_type_t v70 = sub_17654();
    if (sub_1BF30(v70))
    {
      uint64_t v71 = (_WORD *)sub_144F0(2LL);
      sub_2F7B0(v71);
      char v60 = "#NLv4Transformer has everyone in utterance";
      goto LABEL_77;
    }

LABEL_79:
    uint64_t v95 = 1LL;
    goto LABEL_80;
  }

LABEL_59:
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v72 = sub_1BDD8();
  sub_2F508(v72, (uint64_t)qword_A3EB0);
  uint64_t v73 = sub_2F484(v40);
  uint64_t v37 = (os_log_s *)Logger.logObject.getter(v73);
  os_log_type_t v74 = static os_log_type_t.debug.getter();
  if (sub_2F4BC(v37))
  {
    unint64_t v75 = (uint8_t *)sub_144F0(12LL);
    uint64_t v76 = sub_144F0(32LL);
    uint64_t v112 = v76;
    *(_DWORD *)unint64_t v75 = 136315138;
    uint64_t v77 = sub_2F4EC();
    uint64_t v78 = Array.description.getter(v77, &unk_964D0);
    unint64_t v80 = v79;
    sub_2F7E0();
    uint64_t v81 = v78;
    uint64_t v40 = v110;
    uint64_t v82 = sub_68DC4(v81, v80, &v112);
    uint64_t v83 = sub_BD40(v82);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v83, v84, v75 + 4, v75 + 12);
    sub_2F3A8(v40);
    sub_1BFE8();
    sub_14550(&dword_0, v37, v74, "#NLv4Transformer checking if a node is room or house hint in %s", v75);
    sub_17528(v76, v85, (uint64_t)&type metadata for Any + 8);
    sub_48D4(v76);
    sub_48D4((uint64_t)v75);
  }

  else
  {

    uint64_t v86 = sub_2F3A8(v40);
  }

  unint64_t v0 = *(void *)(v40 + 16);
  if (v0)
  {
    sub_2F4EC();
    uint64_t v87 = (void *)(v40 + 56);
    uint64_t v37 = (os_log_s *)&off_93830;
    while (1)
    {
      if ((v89 = *(v87 - 3), uint64_t v88 = (void *)*(v87 - 2), v90 = *(v87 - 1), v90 == 0xD000000000000017LL)
        && *v87 == 0x80000000000777A0LL
        || (_stringCompareWithSmolCheck(_:_:expecting:)(v90, *v87, 0xD000000000000017LL, 0x80000000000777A0LL, 0LL) & 1) != 0)
      {
        sub_25C3C();
        sub_2F768();
        v91._uint64_t countAndFlagsBits = v89;
        v91._object = v88;
        unint64_t v92 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_93830, v91);
        sub_2F604();
        swift_bridgeObjectRelease(v88);
        if (v92 < 2) {
          break;
        }
      }

      v87 += 4;
      if (!--v0)
      {
        uint64_t v86 = sub_2F7E0();
        goto LABEL_72;
      }
    }

    uint64_t v96 = sub_2F7E0();
    Logger.logObject.getter(v96);
    os_log_type_t v97 = sub_17654();
    if (sub_1BF30(v97))
    {
      os_log_type_t v98 = (_WORD *)sub_144F0(2LL);
      sub_2F7B0(v98);
      goto LABEL_77;
    }

    goto LABEL_79;
  }

                    __break(1u);
LABEL_60:
                    __break(1u);
                    return;
                  }
                }

                else
                {
                  __break(1u);
                }

                __break(1u);
                goto LABEL_59;
              }

LABEL_72:
  Logger.logObject.getter(v86);
  os_log_type_t v93 = sub_17654();
  if (sub_1BF30(v93))
  {
    uint64_t v94 = (_WORD *)sub_144F0(2LL);
    sub_2F7B0(v94);
    sub_1BE98( &dword_0,  (os_log_s *)v0,  (os_log_type_t)v37,  "#NLv4Transformer doesn't have everywhere or everyone",  (uint8_t *)v36);
    uint64_t v95 = 0LL;
LABEL_78:
    sub_48D4(v36);
    goto LABEL_80;
  }

  uint64_t v95 = 0LL;
LABEL_80:

  return v95;
}

uint64_t sub_2C554(uint64_t result)
{
  if (!result) {
    return result;
  }
  uint64_t result = dispatch thunk of UsoEntity_common_Announcement.recipients.getter();
  if (!result) {
    return result;
  }
  uint64_t v1 = result;
  if ((unint64_t)result >> 62)
  {
    if (result >= 0) {
      uint64_t v16 = result & 0xFFFFFFFFFFFFFF8LL;
    }
    else {
      uint64_t v16 = result;
    }
    sub_2F684();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter(v16);
    uint64_t v2 = result;
    if (result) {
      goto LABEL_5;
    }
  }

  else
  {
    uint64_t v2 = *(void *)((char *)&dword_10 + (result & 0xFFFFFFFFFFFFFF8LL));
    uint64_t result = sub_2F684();
    if (v2)
    {
LABEL_5:
      if (v2 < 1)
      {
        __break(1u);
        return result;
      }

      uint64_t v3 = 0LL;
      uint64_t v4 = (char *)_swiftEmptyArrayStorage;
      do
      {
        if ((v1 & 0xC000000000000001LL) != 0) {
          specialized _ArrayBuffer._getElementSlowPath(_:)(v3, v1);
        }
        else {
          sub_2F718(v1 + 8 * v3);
        }
        uint64_t v5 = dispatch thunk of CodeGenListEntry.entry.getter(&v45);
        uint64_t v6 = v45;
        if (v45)
        {
          uint64_t v7 = dispatch thunk of UsoEntity_common_Agent.name.getter(v5);
          uint64_t v9 = v8;
          sub_1C008();
          swift_release(v6);
          if (v9)
          {
            if ((swift_isUniquelyReferenced_nonNull_native(v4) & 1) == 0) {
              uint64_t v4 = sub_5D33C(0LL, *((void *)v4 + 2) + 1LL, 1, (uint64_t)v4);
            }
            unint64_t v11 = *((void *)v4 + 2);
            unint64_t v10 = *((void *)v4 + 3);
            if (v11 >= v10 >> 1)
            {
              BOOL v13 = sub_2F744(v10);
              uint64_t v4 = sub_5D33C((char *)v13, v14, v15, (uint64_t)v4);
            }

            *((void *)v4 + 2) = v11 + 1;
            uint64_t v12 = &v4[16 * v11];
            *((void *)v12 + 4) = v7;
            *((void *)v12 + 5) = v9;
          }
        }

        else
        {
          sub_1C008();
        }

        ++v3;
      }

      while (v2 != v3);
      goto LABEL_25;
    }
  }

  uint64_t v4 = (char *)_swiftEmptyArrayStorage;
LABEL_25:
  sub_2F3A8(v1);
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v17 = sub_1BDD8();
  sub_2F508(v17, (uint64_t)qword_A3EB0);
  uint64_t v18 = sub_2F484((uint64_t)v4);
  uint64_t v19 = (os_log_s *)Logger.logObject.getter(v18);
  os_log_type_t v20 = static os_log_type_t.debug.getter();
  if (sub_2F4BC(v19))
  {
    uint64_t v21 = (uint8_t *)sub_144F0(12LL);
    uint64_t v22 = sub_144F0(32LL);
    uint64_t v45 = v22;
    *(_DWORD *)uint64_t v21 = 136315138;
    uint64_t v23 = sub_1C030();
    uint64_t v24 = Array.description.getter(v23, &type metadata for String);
    unint64_t v26 = v25;
    sub_18FB8();
    uint64_t v27 = sub_68DC4(v24, v26, &v45);
    sub_2F440(v27, v28, v29, v30, v31, v32, v33, v34, v44, v45);
    sub_2F3A8((uint64_t)v4);
    sub_1BFE8();
    sub_14550(&dword_0, v19, v20, "#NLv4Transformer targetName name: %s", v21);
    sub_17528(v22, v35, (uint64_t)&type metadata for Any + 8);
    sub_48D4(v22);
    sub_48D4((uint64_t)v21);
  }

  else
  {

    sub_2F3A8((uint64_t)v4);
  }

  if (*((void *)v4 + 2))
  {
    uint64_t v37 = *((void *)v4 + 4);
    unint64_t v36 = *((void *)v4 + 5);
    sub_2F684();
  }

  else
  {
    uint64_t v37 = 0LL;
    unint64_t v36 = 0LL;
  }

  sub_18FB8();
  uint64_t v38 = sub_27E7C(v37, v36);
  uint64_t v39 = swift_bridgeObjectRelease(v36);
  if ((v38 & 1) != 0) {
    return 0LL;
  }
  Logger.logObject.getter(v39);
  os_log_type_t v40 = sub_17654();
  if (sub_17380(v40))
  {
    uint64_t v41 = (_WORD *)sub_144F0(2LL);
    sub_176AC(v41);
    sub_17358(&dword_0, v42, v43, "#NLv4Transformer hasSmsContact");
    sub_48D4(v36);
  }

  return 1LL;
}

uint64_t sub_2C878(os_log_s *a1)
{
  if (!a1) {
    return 0LL;
  }
  uint64_t v3 = dispatch thunk of UsoEntity_common_Announcement.content.getter();
  unint64_t v5 = v4;
  if (!v4) {
    return 0LL;
  }
  uint64_t v6 = v3;
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v7 = sub_1BDD8();
  sub_2F508(v7, (uint64_t)qword_A3EB0);
  uint64_t v8 = sub_2F484(v5);
  Logger.logObject.getter(v8);
  os_log_type_t v9 = sub_A9E8();
  if (sub_2F45C(v9))
  {
    unint64_t v10 = (uint8_t *)sub_144F0(12LL);
    uint64_t v11 = sub_144F0(32LL);
    uint64_t v23 = v11;
    *(_DWORD *)unint64_t v10 = 136315138;
    sub_2F684();
    uint64_t v12 = sub_68DC4(v6, v5, &v23);
    sub_2F440(v12, v13, v14, v15, v16, v17, v18, v19, v22, v23);
    sub_2F46C(v5);
    sub_14550(&dword_0, a1, v1, "#NLv4Transformer speechData message : %s ", v10);
    sub_17528(v11, v20, (uint64_t)&type metadata for Any + 8);
    sub_48D4(v11);
    sub_48D4((uint64_t)v10);
  }

  else
  {

    sub_2F3A8(v5);
  }

  return v6;
}

void *sub_2C9E0()
{
  uint64_t v77 = v3;
  uint64_t v78 = v4;
  uint64_t v6 = v5;
  os_log_type_t v74 = (char *)v7;
  sub_41BC(&qword_A04A0);
  sub_11F5C();
  __chkstk_darwin(v8);
  sub_2F428();
  uint64_t v9 = type metadata accessor for RREntity(0LL);
  sub_2F68C();
  __chkstk_darwin(v10);
  sub_2F418();
  uint64_t v13 = v11 - v12;
  __chkstk_darwin(v14);
  uint64_t v16 = (os_log_s *)((char *)&v70 - v15);
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v73 = v0;
  uint64_t v17 = sub_1BDD8();
  sub_4870(v17, (uint64_t)qword_A3EB0);
  sub_2F738();
  os_log_type_t v18 = sub_A9E8();
  BOOL v19 = os_log_type_enabled(v1, v18);
  uint64_t v20 = &type metadata for Any;
  uint64_t v71 = v13;
  if (v19)
  {
    uint64_t v21 = sub_144F0(12LL);
    uint64_t v72 = v0;
    uint64_t v22 = v16;
    uint64_t v23 = v9;
    uint64_t v24 = (uint8_t *)v21;
    uint64_t v25 = sub_144F0(32LL);
    v76[0] = v25;
    *(_DWORD *)uint64_t v24 = 136315138;
    uint64_t v26 = sub_68DC4(0xD000000000000023LL, 0x80000000000775D0LL, v76);
    uint64_t v27 = sub_2F5AC(v26);
    uint64_t v20 = &type metadata for Any;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v27, v28, v29, v24 + 12);
    sub_14550(&dword_0, v1, v18, "#NLv4Transformer #ReferenceResolution %s", v24);
    sub_17528(v25, v30, (uint64_t)&type metadata for Any + 8);
    sub_48D4(v25);
    uint64_t v31 = (uint64_t)v24;
    uint64_t v9 = v23;
    uint64_t v16 = v22;
    unint64_t v0 = v72;
    sub_48D4(v31);
  }

  uint64_t v32 = v6[3];
  uint64_t v33 = (char *)v6[4];
  sub_8504(v6, v32);
  sub_3ACF8((uint64_t)v74, v32, v33, v2);
  uint64_t v34 = sub_2F394(v2, 1LL, v9);
  if (v35)
  {
    sub_2F6E4(v34, &qword_A04A0);
    sub_2F540();
    os_log_type_t v36 = sub_17654();
    if (sub_17380(v36))
    {
      uint64_t v37 = (_WORD *)sub_144F0(2LL);
      sub_176AC(v37);
      sub_17358(&dword_0, v38, v39, "#NLv4Transformer #ReferenceResolution no entity found");
      sub_48D4((uint64_t)v16);
    }

    return 0LL;
  }

  else
  {
    uint64_t v41 = v73;
    sub_2F758((uint64_t)v16, v2, v73[4]);
    uint64_t v42 = v71;
    sub_2F758(v71, (uint64_t)v16, v41[2]);
    uint64_t v43 = (os_log_s *)sub_2F540();
    os_log_type_t v44 = static os_log_type_t.debug.getter();
    BOOL v45 = os_log_type_enabled(v43, v44);
    uint64_t v70 = v9;
    if (v45)
    {
      uint64_t v46 = v9;
      uint64_t v47 = (uint8_t *)sub_144F0(12LL);
      os_log_type_t v74 = (char *)sub_144F0(32LL);
      v76[0] = (uint64_t)v74;
      *(_DWORD *)uint64_t v47 = 136315138;
      uint64_t v72 = v0;
      LOBYTE(v20) = (_BYTE)v47 + 4;
      sub_A880( (unint64_t *)&qword_A0F18,  (uint64_t (*)(uint64_t))&type metadata accessor for RREntity,  (uint64_t)&protocol conformance descriptor for RREntity);
      uint64_t v49 = dispatch thunk of CustomStringConvertible.description.getter(v46, v48);
      uint64_t v51 = sub_2F584(v49, v50);
      uint64_t v52 = sub_2F5AC(v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v52, v53, v54, v47 + 12);
      sub_D304();
      uint64_t v55 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))v73[1];
      ((void (*)(uint64_t, uint64_t))v55)(v42, v46);
      sub_14550(&dword_0, v43, v44, "#NLv4Transformer rrEntity : %s", v47);
      uint64_t v56 = (uint64_t)v74;
      sub_17528((uint64_t)v74, v57, (uint64_t)&type metadata for Any + 8);
      sub_48D4(v56);
      sub_48D4((uint64_t)v47);
    }

    else
    {
      uint64_t v55 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))v41[1];
      ((void (*)(uint64_t, uint64_t))v55)(v42, v9);
    }

    unint64_t v58 = sub_25B94();
    os_log_type_t v74 = (char *)v16;
    uint64_t v59 = v16;
    os_log_type_t v40 = (void *)((uint64_t (*)(unint64_t, unint64_t))RREntity.convertData<A>(to:))(v58, v58);
    id v60 = v40;
    sub_2F540();
    os_log_type_t v61 = sub_A9E8();
    if (sub_2F45C(v61))
    {
      uint64_t v62 = (uint8_t *)sub_144F0(12LL);
      uint64_t v63 = sub_144F0(32LL);
      uint64_t v75 = (uint64_t)v40;
      v76[0] = v63;
      uint64_t v73 = v55;
      *(_DWORD *)uint64_t v62 = 136315138;
      id v64 = v60;
      uint64_t v65 = sub_41BC(&qword_A17F0);
      uint64_t v66 = String.init<A>(describing:)(&v75, v65);
      uint64_t v75 = sub_68DC4(v66, v67, v76);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v75, v76, v62 + 4, v62 + 12);

      sub_1BFE8();
      sub_14550(&dword_0, v59, (os_log_type_t)v20, "#NLv4Transformer homeFilter : %s", v62);
      sub_17528(v63, v68, (uint64_t)&type metadata for Any + 8);
      sub_48D4(v63);
      sub_48D4((uint64_t)v62);

      ((void (*)(char *, uint64_t))v73)(v74, v70);
    }

    else
    {

      ((void (*)(char *, uint64_t))v55)(v74, v70);
    }
  }

  return v40;
}

uint64_t sub_2CEC4()
{
  uint64_t v0 = sub_41BC(&qword_A17F8);
  sub_BCCC(v0, qword_A3F28);
  sub_4870(v0, (uint64_t)qword_A3F28);
  uint64_t v1 = sub_2F644();
  return Transformer.init(transform:)(sub_2CF30, 0LL, v1, &unk_96450);
}

uint64_t sub_2CF30@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = type metadata accessor for Siri_Nlu_External_UsoGraph(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v60 = type metadata accessor for Siri_Nlu_External_UserStatedTask(0LL);
  uint64_t v9 = *(void *)(v60 - 8);
  uint64_t v10 = __chkstk_darwin(v60);
  uint64_t v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if ((Siri_Nlu_External_UserDialogAct.hasUserStatedTask.getter(v10) & 1) != 0)
  {
    uint64_t v13 = Siri_Nlu_External_UserDialogAct.userStatedTask.getter();
    if ((Siri_Nlu_External_UserStatedTask.hasTask.getter(v13) & 1) != 0)
    {
      uint64_t v59 = a2;
      uint64_t v14 = Siri_Nlu_External_UserStatedTask.task.getter();
      uint64_t v15 = Siri_Nlu_External_UsoGraph.identifiers.getter(v14);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v16 = static ConversionUtils.convertUserDialogActToTasks(userDialogAct:)(a1);
      if (v2)
      {
        swift_errorRelease(v2);
        swift_bridgeObjectRelease(v15);
        if (qword_9F820 != -1) {
          swift_once(&qword_9F820, sub_17ADC);
        }
        uint64_t v17 = type metadata accessor for Logger(0LL);
        uint64_t v18 = sub_4870(v17, (uint64_t)qword_A3EB0);
        BOOL v19 = (os_log_s *)Logger.logObject.getter(v18);
        os_log_type_t v20 = static os_log_type_t.debug.getter();
        BOOL v21 = os_log_type_enabled(v19, v20);
        uint64_t v22 = v60;
        if (v21)
        {
          uint64_t v23 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v23 = 0;
          _os_log_impl(&dword_0, v19, v20, "#NLv4Transformer Could not convert user dialog act to task", v23, 2u);
          swift_slowDealloc(v23, -1LL, -1LL);
        }

        uint64_t v24 = type metadata accessor for TransformationError(0LL);
        sub_A880( &qword_A0BC8,  (uint64_t (*)(uint64_t))&type metadata accessor for TransformationError,  (uint64_t)&protocol conformance descriptor for TransformationError);
        swift_allocError(v24, v25, 0LL, 0LL);
        void *v26 = 0xD00000000000003ALL;
        v26[1] = 0x8000000000077680LL;
        uint64_t v27 = (*(uint64_t (**)(void *, void, uint64_t))(*(void *)(v24 - 8) + 104LL))( v26,  enum case for TransformationError.cannotTransform(_:),  v24);
        swift_willThrow(v27);
        return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v22);
      }

      else
      {
        uint64_t v42 = v16;
        if ((unint64_t)v16 >> 62)
        {
          if (v16 < 0) {
            uint64_t v57 = v16;
          }
          else {
            uint64_t v57 = v16 & 0xFFFFFFFFFFFFFF8LL;
          }
          swift_bridgeObjectRetain(v16);
          uint64_t v43 = _CocoaArrayWrapper.endIndex.getter(v57);
          swift_bridgeObjectRelease(v42);
        }

        else
        {
          uint64_t v43 = *(void *)((char *)&dword_10 + (v16 & 0xFFFFFFFFFFFFF8LL));
        }

        uint64_t v44 = v60;
        uint64_t v45 = v15;
        uint64_t v46 = v59;
        if (v43)
        {
          sub_25868(0LL, (v42 & 0xC000000000000001LL) == 0, v42);
          if ((v42 & 0xC000000000000001LL) != 0)
          {
            uint64_t v47 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v42);
          }

          else
          {
            uint64_t v47 = *(void *)(v42 + 32);
            swift_retain(v47);
          }

          swift_bridgeObjectRelease(v42);
          uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v44);
          *uint64_t v46 = v47;
          v46[1] = v45;
        }

        else
        {
          swift_bridgeObjectRelease(v45);
          swift_bridgeObjectRelease(v42);
          if (qword_9F820 != -1) {
            swift_once(&qword_9F820, sub_17ADC);
          }
          uint64_t v48 = type metadata accessor for Logger(0LL);
          uint64_t v49 = sub_4870(v48, (uint64_t)qword_A3EB0);
          unint64_t v50 = (os_log_s *)Logger.logObject.getter(v49);
          os_log_type_t v51 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v50, v51))
          {
            uint64_t v52 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
            *(_WORD *)uint64_t v52 = 0;
            _os_log_impl(&dword_0, v50, v51, "#NLv4Transformer No tasks found in input", v52, 2u);
            swift_slowDealloc(v52, -1LL, -1LL);
          }

          uint64_t v53 = type metadata accessor for TransformationError(0LL);
          sub_A880( &qword_A0BC8,  (uint64_t (*)(uint64_t))&type metadata accessor for TransformationError,  (uint64_t)&protocol conformance descriptor for TransformationError);
          swift_allocError(v53, v54, 0LL, 0LL);
          *uint64_t v55 = 0xD000000000000028LL;
          v55[1] = 0x80000000000776C0LL;
          uint64_t v56 = (*(uint64_t (**)(void *, void, uint64_t))(*(void *)(v53 - 8) + 104LL))( v55,  enum case for TransformationError.cannotTransform(_:),  v53);
          swift_willThrow(v56);
          return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v44);
        }
      }
    }

    else
    {
      uint64_t v38 = type metadata accessor for TransformationError(0LL);
      sub_A880( &qword_A0BC8,  (uint64_t (*)(uint64_t))&type metadata accessor for TransformationError,  (uint64_t)&protocol conformance descriptor for TransformationError);
      swift_allocError(v38, v39, 0LL, 0LL);
      void *v40 = 0xD000000000000042LL;
      v40[1] = 0x8000000000077630LL;
      uint64_t v41 = (*(uint64_t (**)(void *, void, uint64_t))(*(void *)(v38 - 8) + 104LL))( v40,  enum case for TransformationError.cannotTransform(_:),  v38);
      swift_willThrow(v41);
      return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v60);
    }
  }

  else
  {
    if (qword_9F820 != -1) {
      swift_once(&qword_9F820, sub_17ADC);
    }
    uint64_t v29 = type metadata accessor for Logger(0LL);
    uint64_t v30 = sub_4870(v29, (uint64_t)qword_A3EB0);
    uint64_t v31 = (os_log_s *)Logger.logObject.getter(v30);
    os_log_type_t v32 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v33 = 0;
      _os_log_impl(&dword_0, v31, v32, "#NLv4Transformer does NOT have UserStatedTask", v33, 2u);
      swift_slowDealloc(v33, -1LL, -1LL);
    }

    uint64_t v34 = type metadata accessor for TransformationError(0LL);
    sub_A880( &qword_A0BC8,  (uint64_t (*)(uint64_t))&type metadata accessor for TransformationError,  (uint64_t)&protocol conformance descriptor for TransformationError);
    swift_allocError(v34, v35, 0LL, 0LL);
    *os_log_type_t v36 = 0xD00000000000002DLL;
    v36[1] = 0x8000000000077600LL;
    uint64_t v37 = (*(uint64_t (**)(void *, void, uint64_t))(*(void *)(v34 - 8) + 104LL))( v36,  enum case for TransformationError.cannotTransform(_:),  v34);
    return swift_willThrow(v37);
  }

  return result;
}

uint64_t sub_2D580()
{
  uint64_t v0 = sub_41BC(&qword_A1800);
  sub_BCCC(v0, qword_A3F40);
  sub_4870(v0, (uint64_t)qword_A3F40);
  uint64_t v1 = type metadata accessor for UsoTask(0LL);
  return Transformer.init(transform:)(sub_2D5F0, 0LL, v1, &type metadata for HomeCommunicationIntentClassNames);
}

void sub_2D5F0(void *a1@<X0>, char *a2@<X8>)
{
  if (!v38)
  {
    sub_17288((uint64_t)&v37, &qword_A04A8);
    if (qword_9F820 != -1) {
      swift_once(&qword_9F820, sub_17ADC);
    }
    uint64_t v13 = type metadata accessor for Logger(0LL);
    uint64_t v14 = sub_4870(v13, (uint64_t)qword_A3EB0);
    uint64_t v15 = (os_log_s *)Logger.logObject.getter(v14);
    os_log_type_t v16 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl(&dword_0, v15, v16, "#NLv4Transformer Invalid parse", v17, 2u);
      swift_slowDealloc(v17, -1LL, -1LL);
    }

    char v18 = 6;
    goto LABEL_11;
  }

  sub_2EED4(&v37, v39);
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v3 = type metadata accessor for Logger(0LL);
  sub_4870(v3, (uint64_t)qword_A3EB0);
  uint64_t v4 = sub_FC5C((uint64_t)v39, (uint64_t)&v37);
  uint64_t v5 = (os_log_s *)Logger.logObject.getter(v4);
  os_log_type_t v6 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v34 = a2;
    uint64_t v7 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v8 = swift_slowAlloc(32LL, -1LL);
    uint64_t v40 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    sub_FC5C((uint64_t)&v37, (uint64_t)&v35);
    uint64_t v9 = String.init<A>(describing:)(&v35, (char *)&type metadata for Any + 8);
    unint64_t v11 = v10;
    uint64_t v35 = sub_68DC4(v9, v10, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, &v36, v7 + 4, v7 + 12);
    swift_bridgeObjectRelease(v11);
    sub_423C(&v37);
    _os_log_impl(&dword_0, v5, v6, "#NLv4Transformer usoTask converted to type %s", v7, 0xCu);
    swift_arrayDestroy(v8, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1LL, -1LL);
    uint64_t v12 = v7;
    a2 = v34;
    swift_slowDealloc(v12, -1LL, -1LL);
  }

  else
  {
    sub_423C(&v37);
  }

  sub_FC5C((uint64_t)v39, (uint64_t)&v37);
  uint64_t v19 = type metadata accessor for UsoTask_send_common_Announcement(0LL);
  if (swift_dynamicCast(&v35, &v37, (char *)&type metadata for Any + 8, v19, 0LL)
    || (uint64_t v20 = type metadata accessor for UsoTask_noVerb_common_UserEntity(0LL),
        swift_dynamicCast(&v35, &v37, (char *)&type metadata for Any + 8, v20, 0LL)))
  {
    sub_423C(v39);
    swift_release(v35);
    sub_423C(&v37);
    *a2 = 0;
    return;
  }

  uint64_t v21 = type metadata accessor for UsoTask_reply_common_Announcement(0LL);
  if (!swift_dynamicCast(&v35, &v37, (char *)&type metadata for Any + 8, v21, 0LL))
  {
    uint64_t v23 = type metadata accessor for UsoTask_play_common_Announcement(0LL);
    if (swift_dynamicCast(&v35, &v37, (char *)&type metadata for Any + 8, v23, 0LL))
    {
      sub_423C(v39);
      swift_release(v35);
      char v22 = 2;
      goto LABEL_24;
    }

    uint64_t v24 = type metadata accessor for UsoTask_stop_common_Announcement(0LL);
    if (swift_dynamicCast(&v35, &v37, (char *)&type metadata for Any + 8, v24, 0LL))
    {
      sub_423C(v39);
      swift_release(v35);
      char v22 = 3;
      goto LABEL_24;
    }

    uint64_t v25 = type metadata accessor for UsoTask_repeat_common_Announcement(0LL);
    if (swift_dynamicCast(&v35, &v37, (char *)&type metadata for Any + 8, v25, 0LL))
    {
      sub_423C(v39);
      swift_release(v35);
      char v22 = 4;
      goto LABEL_24;
    }

    uint64_t v26 = type metadata accessor for UsoTask_skipForward_common_Announcement(0LL);
    if (!swift_dynamicCast(&v35, &v37, (char *)&type metadata for Any + 8, v26, 0LL))
    {
      uint64_t v27 = type metadata accessor for UsoTask_skipBackward_common_Announcement(0LL);
      if (!swift_dynamicCast(&v35, &v37, (char *)&type metadata for Any + 8, v27, 0LL))
      {
        uint64_t v28 = type metadata accessor for UsoTask_skipForward_uso_NoEntity(0LL);
        if (!swift_dynamicCast(&v35, &v37, (char *)&type metadata for Any + 8, v28, 0LL))
        {
          uint64_t v29 = type metadata accessor for UsoTask_skipBackward_uso_NoEntity(0LL);
          uint64_t v30 = swift_dynamicCast(&v35, &v37, (char *)&type metadata for Any + 8, v29, 0LL);
          if (!(_DWORD)v30)
          {
            uint64_t v31 = (os_log_s *)Logger.logObject.getter(v30);
            os_log_type_t v32 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v31, v32))
            {
              uint64_t v33 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
              *(_WORD *)uint64_t v33 = 0;
              _os_log_impl(&dword_0, v31, v32, "#NLv4Transformer Invalid Announcement parse", v33, 2u);
              swift_slowDealloc(v33, -1LL, -1LL);
            }

            sub_423C(v39);
            char v22 = 6;
            goto LABEL_24;
          }
        }
      }
    }

    sub_423C(v39);
    swift_release(v35);
    sub_423C(&v37);
    char v18 = 5;
LABEL_11:
    *a2 = v18;
    return;
  }

  sub_423C(v39);
  swift_release(v35);
  char v22 = 1;
LABEL_24:
  *a2 = v22;
  sub_423C(&v37);
}

uint64_t sub_2DB60()
{
  uint64_t v0 = sub_41BC(&qword_A1808);
  sub_BCCC(v0, qword_A3F58);
  sub_4870(v0, (uint64_t)qword_A3F58);
  uint64_t v1 = type metadata accessor for UsoTask(0LL);
  uint64_t v2 = sub_41BC(&qword_A1888);
  return Transformer.init(transform:)(sub_2DBDC, 0LL, v1, v2);
}

void sub_2DBDC(void *a1@<X0>, void *a2@<X8>)
{
  if (v30[3])
  {
    sub_27D18((uint64_t)v30, (uint64_t)v29, &qword_A04A8);
    uint64_t v3 = type metadata accessor for UsoTask_send_common_Announcement(0LL);
    if (swift_dynamicCast(&v28, v29, (char *)&type metadata for Any + 8, v3, 0LL))
    {
      uint64_t v4 = v28;
      uint64_t v5 = swift_retain(v28);
      dispatch thunk of Uso_VerbTemplate_Target.target.getter(&v27, v5);
      swift_release(v4);
      uint64_t v6 = v27;
      uint64_t v7 = swift_retain(v4);
      uint64_t v8 = dispatch thunk of Uso_VerbTemplate_Target.userEntities.getter(v7);
      goto LABEL_6;
    }

    uint64_t v9 = type metadata accessor for UsoTask_reply_common_Announcement(0LL);
    if (swift_dynamicCast(&v28, v29, (char *)&type metadata for Any + 8, v9, 0LL))
    {
      uint64_t v4 = v28;
      uint64_t v10 = swift_retain(v28);
      dispatch thunk of Uso_VerbTemplate_ReferenceTarget.target.getter(&v27, v10);
      swift_release(v4);
      uint64_t v6 = v27;
      uint64_t v11 = swift_retain(v4);
      uint64_t v8 = dispatch thunk of Uso_VerbTemplate_ReferenceTarget.userEntities.getter(v11);
LABEL_6:
      uint64_t v12 = v8;
      swift_release(v4);
      if (v12)
      {
        if ((unint64_t)v12 >> 62)
        {
          if (v12 >= 0) {
            uint64_t v22 = v12 & 0xFFFFFFFFFFFFFF8LL;
          }
          else {
            uint64_t v22 = v12;
          }
          swift_bridgeObjectRetain(v12);
          uint64_t v23 = _CocoaArrayWrapper.endIndex.getter(v22);
          swift_bridgeObjectRelease(v12);
          if (v23) {
            goto LABEL_9;
          }
        }

        else if (*(void *)((char *)&dword_10 + (v12 & 0xFFFFFFFFFFFFFF8LL)))
        {
LABEL_9:
          sub_25868(0LL, (v12 & 0xC000000000000001LL) == 0, v12);
          if ((v12 & 0xC000000000000001LL) != 0)
          {
            uint64_t v13 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v12);
          }

          else
          {
            uint64_t v13 = *(void *)(v12 + 32);
            swift_retain(v13);
          }

          swift_bridgeObjectRelease(v12);
          dispatch thunk of CodeGenListEntry.entry.getter(&v26);
          swift_release(v13);
          swift_release(v4);
          uint64_t v14 = v26;
          goto LABEL_32;
        }

        swift_release(v4);
        swift_bridgeObjectRelease(v12);
      }

      else
      {
        swift_release(v4);
      }

      uint64_t v14 = 0LL;
LABEL_32:
      *a2 = v6;
LABEL_33:
      a2[1] = v14;
      goto LABEL_34;
    }

    uint64_t v15 = type metadata accessor for UsoTask_noVerb_common_Announcement(0LL);
    if (swift_dynamicCast(&v28, v29, (char *)&type metadata for Any + 8, v15, 0LL))
    {
      uint64_t v16 = v28;
      uint64_t v17 = swift_retain(v28);
      uint64_t v18 = dispatch thunk of Uso_VerbTemplate_NoVerb.userEntities.getter(v17);
      swift_release(v16);
      if (v18)
      {
        if ((unint64_t)v18 >> 62)
        {
          if (v18 >= 0) {
            uint64_t v24 = v18 & 0xFFFFFFFFFFFFFF8LL;
          }
          else {
            uint64_t v24 = v18;
          }
          swift_bridgeObjectRetain(v18);
          uint64_t v25 = _CocoaArrayWrapper.endIndex.getter(v24);
          swift_bridgeObjectRelease(v18);
          if (v25) {
            goto LABEL_17;
          }
        }

        else if (*(void *)((char *)&dword_10 + (v18 & 0xFFFFFFFFFFFFFF8LL)))
        {
LABEL_17:
          sub_25868(0LL, (v18 & 0xC000000000000001LL) == 0, v18);
          if ((v18 & 0xC000000000000001LL) != 0)
          {
            uint64_t v19 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v18);
          }

          else
          {
            uint64_t v19 = *(void *)(v18 + 32);
            swift_retain(v19);
          }

          swift_bridgeObjectRelease(v18);
          dispatch thunk of CodeGenListEntry.entry.getter(&v27);
          swift_release(v19);
          swift_release(v16);
          uint64_t v14 = v27;
          goto LABEL_43;
        }

        swift_release(v16);
        swift_bridgeObjectRelease(v18);
      }

      else
      {
        swift_release(v16);
      }

      uint64_t v14 = 0LL;
LABEL_43:
      *a2 = 0LL;
      goto LABEL_33;
    }

    uint64_t v20 = type metadata accessor for UsoTask_play_common_Announcement(0LL);
    if (swift_dynamicCast(&v28, v29, (char *)&type metadata for Any + 8, v20, 0LL)
      || (uint64_t v21 = type metadata accessor for UsoTask_stop_common_Announcement(0LL),
          swift_dynamicCast(&v28, v29, (char *)&type metadata for Any + 8, v21, 0LL)))
    {
      swift_release(v28);
      *(_OWORD *)a2 = xmmword_70C10;
LABEL_34:
      sub_423C(v29);
      goto LABEL_35;
    }

    sub_423C(v29);
  }

  *(_OWORD *)a2 = xmmword_70C10;
LABEL_35:
  sub_17288((uint64_t)v30, &qword_A04A8);
}

void sub_2DF74()
{
  qword_A3F70 = 0x73656D616ELL;
  *(void *)algn_A3F78 = 0xE500000000000000LL;
}

void *sub_2DF94(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return &_swiftEmptyArrayStorage;
  }
  uint64_t v3 = sub_41BC(&qword_A1880);
  uint64_t v4 = (void *)swift_allocObject(v3, 8 * v1 + 32, 7LL);
  size_t v5 = j__malloc_size(v4);
  void v4[2] = v1;
  void v4[3] = 2 * ((uint64_t)(v5 - 32) / 8);
  uint64_t v6 = sub_2EBAC((uint64_t)&v9, v4 + 4, v1, a1);
  uint64_t v7 = v9;
  swift_bridgeObjectRetain(a1);
  sub_2EEC8(v7);
  if (v6 != v1)
  {
    __break(1u);
    return &_swiftEmptyArrayStorage;
  }

  return v4;
}

uint64_t sub_2E074(void *a1)
{
  uint64_t v2 = (void *)*a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0) {
    uint64_t v2 = sub_6CB84((uint64_t)v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  uint64_t result = sub_2E118(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_2E0DC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TransformerInput(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_2E118(uint64_t *a1)
{
  Swift::Int v4 = a1[1];
  uint64_t result = _minimumMergeRunLength(_:)(v4);
  if (result >= v4)
  {
    if (v4 < 0) {
      goto LABEL_134;
    }
    if (v4) {
      return sub_2E804(0LL, v4, 1LL, a1);
    }
    return result;
  }

  uint64_t v6 = result;
  uint64_t result = (uint64_t)sub_6B4DC(v4 / 2);
  uint64_t v95 = result;
  uint64_t v101 = v7;
  Swift::Int v97 = v4;
  os_log_type_t v93 = a1;
  if (v4 <= 0)
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
    unint64_t v27 = *((void *)&_swiftEmptyArrayStorage + 2);
LABEL_93:
    if (v27 >= 2)
    {
      uint64_t v84 = *v93;
      do
      {
        unint64_t v85 = v27 - 2;
        if (v27 < 2) {
          goto LABEL_128;
        }
        if (!v84) {
          goto LABEL_142;
        }
        uint64_t v86 = *(void *)&v10[16 * v85 + 32];
        uint64_t v87 = *(void *)&v10[16 * v27 + 24];
        uint64_t result = sub_2E8F8( (char *)(v84 + 8 * v86),  (char *)(v84 + 8LL * *(void *)&v10[16 * v27 + 16]),  v84 + 8 * v87,  v101);
        if (v1) {
          goto LABEL_105;
        }
        if (v87 < v86) {
          goto LABEL_129;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native(v10);
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_6CB70((uint64_t)v10);
          uint64_t v10 = (char *)result;
        }

        if (v85 >= *((void *)v10 + 2)) {
          goto LABEL_130;
        }
        uint64_t v88 = &v10[16 * v85 + 32];
        *(void *)uint64_t v88 = v86;
        *((void *)v88 + 1) = v87;
        unint64_t v89 = *((void *)v10 + 2);
        if (v27 > v89) {
          goto LABEL_131;
        }
        uint64_t result = (uint64_t)memmove(&v10[16 * v27 + 16], &v10[16 * v27 + 32], 16 * (v89 - v27));
        *((void *)v10 + 2) = v89 - 1;
        unint64_t v27 = v89 - 1;
        Swift::Int v4 = v97;
      }

      while (v89 > 2);
    }

    swift_bridgeObjectRelease(v10);
    if (v4 >= -1)
    {
LABEL_112:
      *(void *)(v95 + 16) = 0LL;
      return swift_bridgeObjectRelease(v95);
    }

    __break(1u);
LABEL_108:
    swift_bridgeObjectRelease(v91);
    swift_bridgeObjectRelease(v27);
    uint64_t v90 = v2;
LABEL_109:
    uint64_t result = swift_bridgeObjectRelease(v90);
    Swift::Int v4 = v97;
LABEL_111:
    if (v4 < -1) {
      goto LABEL_135;
    }
    goto LABEL_112;
  }

  uint64_t v94 = v6;
  Swift::Int v8 = 0LL;
  uint64_t v9 = *a1;
  uint64_t v92 = *a1 - 8;
  uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  uint64_t v98 = *a1;
  while (1)
  {
    Swift::Int v11 = v8++;
    Swift::Int v96 = v11;
    if (v8 >= v4) {
      goto LABEL_21;
    }
    unint64_t v12 = *(void *)(v9 + 8 * v8);
    unint64_t v103 = v12;
    uint64_t v102 = *(char **)(v9 + 8 * v11);
    uint64_t v2 = v102;
    swift_bridgeObjectRetain(v12);
    swift_bridgeObjectRetain(v2);
    int v13 = sub_523C(&v103, &v102);
    if (v1)
    {
      swift_bridgeObjectRelease(v10);
      swift_bridgeObjectRelease(v12);
      uint64_t result = swift_bridgeObjectRelease(v2);
      goto LABEL_111;
    }

    int v14 = v13;
    swift_bridgeObjectRelease(v12);
    uint64_t result = swift_bridgeObjectRelease(v2);
    Swift::Int v8 = v11 + 2;
    if (v11 + 2 >= v4) {
      goto LABEL_10;
    }
    do
    {
      uint64_t v15 = v9 + 8 * v11;
      uint64_t v2 = *(char **)(v15 + 8);
      unint64_t v16 = *(void *)(v15 + 16);
      unint64_t v103 = v16;
      uint64_t v102 = v2;
      swift_bridgeObjectRetain(v16);
      swift_bridgeObjectRetain(v2);
      int v17 = sub_523C(&v103, &v102);
      swift_bridgeObjectRelease(v16);
      uint64_t result = swift_bridgeObjectRelease(v2);
      if (((v14 ^ v17) & 1) != 0)
      {
        Swift::Int v8 = v11 + 2;
        if ((v14 & 1) != 0) {
          goto LABEL_11;
        }
LABEL_20:
        Swift::Int v11 = v96;
        goto LABEL_21;
      }

      Swift::Int v18 = v11 + 3;
      ++v11;
    }

    while (v18 < v4);
    Swift::Int v8 = v4;
LABEL_10:
    if ((v14 & 1) == 0) {
      goto LABEL_20;
    }
LABEL_11:
    Swift::Int v11 = v96;
    if (v8 < v96) {
      goto LABEL_139;
    }
    if (v96 < v8)
    {
      uint64_t v19 = (uint64_t *)(v92 + 8 * v8);
      Swift::Int v20 = v8;
      Swift::Int v21 = v96;
      uint64_t v22 = (uint64_t *)(v9 + 8 * v96);
      do
      {
        if (v21 != --v20)
        {
          if (!v9) {
            goto LABEL_143;
          }
          uint64_t v23 = *v22;
          uint64_t *v22 = *v19;
          uint64_t *v19 = v23;
        }

        ++v21;
        --v19;
        ++v22;
      }

      while (v21 < v20);
    }

LABEL_30:
    if (v8 < v11) {
      goto LABEL_133;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native(v10);
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_6CA7C(0LL, *((void *)v10 + 2) + 1LL, 1, v10);
      uint64_t v10 = (char *)result;
    }

    unint64_t v26 = *((void *)v10 + 2);
    unint64_t v25 = *((void *)v10 + 3);
    unint64_t v27 = v26 + 1;
    if (v26 >= v25 >> 1)
    {
      uint64_t result = (uint64_t)sub_6CA7C((char *)(v25 > 1), v26 + 1, 1, v10);
      uint64_t v10 = (char *)result;
    }

    *((void *)v10 + 2) = v27;
    uint64_t v28 = v10 + 32;
    uint64_t v29 = (Swift::Int *)&v10[16 * v26 + 32];
    *uint64_t v29 = v96;
    v29[1] = v8;
    if (v26)
    {
      Swift::Int v99 = v8;
      while (1)
      {
        unint64_t v30 = v27 - 1;
        if (v27 >= 4)
        {
          uint64_t v35 = &v28[16 * v27];
          uint64_t v36 = *((void *)v35 - 8);
          uint64_t v37 = *((void *)v35 - 7);
          BOOL v41 = __OFSUB__(v37, v36);
          uint64_t v38 = v37 - v36;
          if (v41) {
            goto LABEL_118;
          }
          uint64_t v40 = *((void *)v35 - 6);
          uint64_t v39 = *((void *)v35 - 5);
          BOOL v41 = __OFSUB__(v39, v40);
          uint64_t v33 = v39 - v40;
          char v34 = v41;
          if (v41) {
            goto LABEL_119;
          }
          unint64_t v42 = v27 - 2;
          uint64_t v43 = &v28[16 * v27 - 32];
          uint64_t v45 = *(void *)v43;
          uint64_t v44 = *((void *)v43 + 1);
          BOOL v41 = __OFSUB__(v44, v45);
          uint64_t v46 = v44 - v45;
          if (v41) {
            goto LABEL_120;
          }
          BOOL v41 = __OFADD__(v33, v46);
          uint64_t v47 = v33 + v46;
          if (v41) {
            goto LABEL_122;
          }
          if (v47 >= v38)
          {
            uint64_t v65 = &v28[16 * v30];
            uint64_t v67 = *(void *)v65;
            uint64_t v66 = *((void *)v65 + 1);
            BOOL v41 = __OFSUB__(v66, v67);
            uint64_t v68 = v66 - v67;
            if (v41) {
              goto LABEL_132;
            }
            BOOL v58 = v33 < v68;
            goto LABEL_68;
          }
        }

        else
        {
          if (v27 != 3)
          {
            uint64_t v59 = *((void *)v10 + 4);
            uint64_t v60 = *((void *)v10 + 5);
            BOOL v41 = __OFSUB__(v60, v59);
            uint64_t v52 = v60 - v59;
            char v53 = v41;
            goto LABEL_62;
          }

          uint64_t v32 = *((void *)v10 + 4);
          uint64_t v31 = *((void *)v10 + 5);
          BOOL v41 = __OFSUB__(v31, v32);
          uint64_t v33 = v31 - v32;
          char v34 = v41;
        }

        if ((v34 & 1) != 0) {
          goto LABEL_121;
        }
        unint64_t v42 = v27 - 2;
        uint64_t v48 = &v28[16 * v27 - 32];
        uint64_t v50 = *(void *)v48;
        uint64_t v49 = *((void *)v48 + 1);
        BOOL v51 = __OFSUB__(v49, v50);
        uint64_t v52 = v49 - v50;
        char v53 = v51;
        if (v51) {
          goto LABEL_123;
        }
        uint64_t v54 = &v28[16 * v30];
        uint64_t v56 = *(void *)v54;
        uint64_t v55 = *((void *)v54 + 1);
        BOOL v41 = __OFSUB__(v55, v56);
        uint64_t v57 = v55 - v56;
        if (v41) {
          goto LABEL_125;
        }
        if (__OFADD__(v52, v57)) {
          goto LABEL_127;
        }
        if (v52 + v57 >= v33)
        {
          BOOL v58 = v33 < v57;
LABEL_68:
          if (v58) {
            unint64_t v30 = v42;
          }
          goto LABEL_70;
        }

  __break(1u);
  return result;
}

LABEL_62:
        if ((v53 & 1) != 0) {
          goto LABEL_124;
        }
        os_log_type_t v61 = &v28[16 * v30];
        uint64_t v63 = *(void *)v61;
        uint64_t v62 = *((void *)v61 + 1);
        BOOL v41 = __OFSUB__(v62, v63);
        uint64_t v64 = v62 - v63;
        if (v41) {
          goto LABEL_126;
        }
        if (v64 < v52) {
          goto LABEL_79;
        }
LABEL_70:
        unint64_t v69 = v30 - 1;
        if (v30 - 1 >= v27)
        {
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
          goto LABEL_138;
        }

        if (!v9) {
          goto LABEL_140;
        }
        uint64_t v70 = v9;
        uint64_t v71 = &v28[16 * v69];
        uint64_t v72 = *(void *)v71;
        uint64_t v73 = v28;
        unint64_t v74 = v30;
        uint64_t v2 = &v28[16 * v30];
        uint64_t v75 = *((void *)v2 + 1);
        uint64_t result = sub_2E8F8( (char *)(v70 + 8LL * *(void *)v71),  (char *)(v70 + 8LL * *(void *)v2),  v70 + 8 * v75,  v101);
        if (v1)
        {
LABEL_105:
          uint64_t v90 = v10;
          goto LABEL_109;
        }

        if (v75 < v72) {
          goto LABEL_115;
        }
        if (v74 > *((void *)v10 + 2)) {
          goto LABEL_116;
        }
        *(void *)uint64_t v71 = v72;
        *(void *)&v73[16 * v69 + 8] = v75;
        unint64_t v76 = *((void *)v10 + 2);
        if (v74 >= v76) {
          goto LABEL_117;
        }
        unint64_t v27 = v76 - 1;
        uint64_t result = (uint64_t)memmove(v2, v2 + 16, 16 * (v76 - 1 - v74));
        uint64_t v28 = v73;
        *((void *)v10 + 2) = v76 - 1;
        uint64_t v9 = v98;
        Swift::Int v8 = v99;
        if (v76 <= 2) {
          goto LABEL_79;
        }
      }
    }

    unint64_t v27 = 1LL;
LABEL_79:
    Swift::Int v4 = v97;
    if (v8 >= v97) {
      goto LABEL_93;
    }
  }

  if (__OFADD__(v11, v94)) {
    goto LABEL_137;
  }
  if (v11 + v94 >= v4) {
    Swift::Int v24 = v4;
  }
  else {
    Swift::Int v24 = v11 + v94;
  }
  if (v24 >= v11)
  {
    if (v8 != v24)
    {
      Swift::String v91 = v10;
      uint64_t v77 = (unint64_t *)(v92 + 8 * v8);
      Swift::Int v100 = v24;
      do
      {
        unint64_t v27 = *(void *)(v9 + 8 * v8);
        Swift::Int v78 = v11;
        unint64_t v79 = v77;
        unint64_t v80 = v77;
        do
        {
          unint64_t v103 = v27;
          uint64_t v102 = (char *)*v80;
          uint64_t v2 = v102;
          swift_bridgeObjectRetain(v27);
          swift_bridgeObjectRetain(v2);
          char v81 = sub_523C(&v103, &v102);
          if (v1) {
            goto LABEL_108;
          }
          char v82 = v81;
          swift_bridgeObjectRelease(v27);
          uint64_t result = swift_bridgeObjectRelease(v2);
          if ((v82 & 1) == 0) {
            break;
          }
          if (!v9) {
            goto LABEL_141;
          }
          unint64_t v83 = *v80;
          unint64_t v27 = v80[1];
          *unint64_t v80 = v27;
          v80[1] = v83;
          --v80;
          ++v78;
        }

        while (v8 != v78);
        ++v8;
        uint64_t v77 = v79 + 1;
        Swift::Int v11 = v96;
      }

      while (v8 != v100);
      Swift::Int v8 = v100;
      uint64_t v10 = v91;
    }

    goto LABEL_30;
  }

              uint64_t v32 = v127;
              goto LABEL_63;
            }
          }

          sub_46AA0();
          uint64_t v119 = sub_1C040();
          if (sub_17498(v119))
          {
            uint64_t v120 = (_WORD *)sub_144F0(2LL);
            sub_46B10(v120);
            sub_17440(&dword_0, v121, v122, "#SendAnnouncementDisambiguationStrategy homesToDisambiguate is empty");
            sub_48D4(v58);
          }

          goto LABEL_62;
        }
      }

      else
      {
        sub_27DEC((uint64_t)&v137, &qword_A04A8);
      }
    }

LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
  return result;
}

uint64_t sub_2E804(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v5 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 8 * a3 - 8;
    uint64_t v14 = result;
LABEL_4:
    uint64_t v9 = *(void *)(v7 + 8 * v5);
    uint64_t v10 = (uint64_t *)v8;
    while (1)
    {
      uint64_t v17 = v9;
      uint64_t v16 = *v10;
      uint64_t v11 = v16;
      swift_bridgeObjectRetain(v9);
      swift_bridgeObjectRetain(v11);
      char v12 = sub_523C(&v17, &v16);
      swift_bridgeObjectRelease(v9);
      uint64_t result = swift_bridgeObjectRelease(v11);
      if (v4) {
        break;
      }
      if ((v12 & 1) != 0)
      {
        if (!v7)
        {
          __break(1u);
          return result;
        }

        uint64_t v13 = *v10;
        uint64_t v9 = v10[1];
        *uint64_t v10 = v9;
        v10[1] = v13;
        --v10;
        if (v5 != ++v6) {
          continue;
        }
      }

      ++v5;
      v8 += 8LL;
      uint64_t v6 = v14;
      if (v5 != a2) {
        goto LABEL_4;
      }
      return result;
    }
  }

  return result;
}

uint64_t sub_2E8F8(char *a1, char *a2, unint64_t a3, char *a4)
{
  uint64_t v5 = a4;
  uint64_t v8 = a1;
  uint64_t v9 = a2 - a1;
  uint64_t v10 = (a2 - a1) / 8;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = (uint64_t)(a3 - (void)a2) / 8;
  if (v10 < v12)
  {
    sub_5D8B8(a1, (a2 - a1) / 8, a4);
    if ((unint64_t)a2 >= a3 || v9 < 8)
    {
      uint64_t v14 = v8;
      Swift::Int v18 = &v5[8 * v10];
      goto LABEL_43;
    }

    uint64_t v17 = a2;
    Swift::Int v18 = &v5[8 * v10];
    while (1)
    {
      uint64_t v19 = *(void *)v17;
      uint64_t v44 = v19;
      uint64_t v43 = *(void *)v5;
      uint64_t v20 = v43;
      swift_bridgeObjectRetain(v19);
      swift_bridgeObjectRetain(v20);
      char v21 = sub_523C(&v44, &v43);
      if (v4)
      {
        swift_bridgeObjectRelease(v19);
        swift_bridgeObjectRelease(v20);
        uint64_t v37 = (v18 - v5) / 8;
        uint64_t v38 = v5;
        uint64_t v39 = v8;
        goto LABEL_44;
      }

      char v22 = v21;
      swift_bridgeObjectRelease(v19);
      swift_bridgeObjectRelease(v20);
      if ((v22 & 1) == 0) {
        break;
      }
      uint64_t v23 = v17;
      BOOL v24 = v8 == v17;
      v17 += 8;
      if (!v24) {
        goto LABEL_20;
      }
LABEL_21:
      v8 += 8;
      if (v5 >= v18 || (unint64_t)v17 >= a3)
      {
        uint64_t v14 = v8;
        goto LABEL_43;
      }
    }

    uint64_t v23 = v5;
    BOOL v24 = v8 == v5;
    v5 += 8;
    if (v24) {
      goto LABEL_21;
    }
LABEL_20:
    *(void *)uint64_t v8 = *(void *)v23;
    goto LABEL_21;
  }

  sub_5D8B8(a2, (uint64_t)(a3 - (void)a2) / 8, a4);
  Swift::Int v18 = &v5[8 * v12];
  uint64_t v15 = a2;
  if (v8 >= a2 || v11 < 8)
  {
    uint64_t v14 = a2;
    goto LABEL_43;
  }

  unint64_t v42 = v5;
  unint64_t v25 = (void *)(a3 - 8);
  uint64_t v14 = v15;
  BOOL v41 = v8;
  while (1)
  {
    unint64_t v26 = (unint64_t)v18;
    uint64_t v28 = *((void *)v18 - 1);
    v18 -= 8;
    uint64_t v27 = v28;
    uint64_t v44 = v28;
    unint64_t v30 = v14 - 8;
    uint64_t v43 = *((void *)v14 - 1);
    uint64_t v29 = v43;
    swift_bridgeObjectRetain(v28);
    swift_bridgeObjectRetain(v29);
    char v31 = sub_523C(&v44, &v43);
    if (v4)
    {
      swift_bridgeObjectRelease(v27);
      swift_bridgeObjectRelease(v29);
      sub_5D8B8(v42, (uint64_t)(v26 - (void)v42) / 8, v14);
      return 1LL;
    }

    char v32 = v31;
    unint64_t v33 = (unint64_t)v14;
    char v34 = v25 + 1;
    swift_bridgeObjectRelease(v27);
    swift_bridgeObjectRelease(v29);
    if ((v32 & 1) != 0)
    {
      BOOL v35 = v34 != (void *)v33 || (unint64_t)v25 >= v33;
      uint64_t v14 = v30;
      Swift::Int v18 = (char *)v26;
      if (v35) {
        goto LABEL_36;
      }
    }

    else
    {
      BOOL v36 = v34 != (void *)v26 || (unint64_t)v25 >= v26;
      unint64_t v30 = v18;
      uint64_t v14 = (char *)v33;
      if (v36) {
LABEL_36:
      }
        *unint64_t v25 = *(void *)v30;
    }

    if (v14 <= v41) {
      break;
    }
    --v25;
    uint64_t v5 = v42;
    if (v18 <= v42) {
      goto LABEL_43;
    }
  }

  uint64_t v5 = v42;
LABEL_43:
  uint64_t v37 = (v18 - v5) / 8;
  uint64_t v38 = v5;
  uint64_t v39 = v14;
LABEL_44:
  sub_5D8B8(v38, v37, v39);
  return 1LL;
}

uint64_t sub_2EBAC(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1LL << *(_BYTE *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1LL << -(char)v7);
  }
  else {
    uint64_t v8 = -1LL;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0LL;
    uint64_t v10 = 0LL;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }

  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0LL;
    goto LABEL_38;
  }

  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }

  uint64_t v11 = a2;
  int64_t v12 = 0LL;
  uint64_t v13 = 0LL;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = *(void *)(*(void *)(a4 + 56) + 8 * v16);
    *uint64_t v11 = v20;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain(v20);
      goto LABEL_38;
    }

    ++v11;
    uint64_t result = swift_bridgeObjectRetain(v20);
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1LL))
    {
      __break(1u);
      goto LABEL_40;
    }

    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }

  v12 += 2LL;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0LL;
    int64_t v12 = v17;
    goto LABEL_37;
  }

  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0LL;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }

  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }

  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0LL;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }

  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }

  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1LL)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0LL;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }

    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }

LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_2EDA4(uint64_t result, uint64_t a2)
{
  if (result != 1)
  {
    uint64_t v2 = result;
    swift_retain(a2);
    return swift_retain(v2);
  }

  return result;
}

uint64_t sub_2EDD8(uint64_t result, uint64_t a2)
{
  if (result != 1)
  {
    swift_release(result);
    return swift_release(a2);
  }

  return result;
}

unint64_t sub_2EE08()
{
  unint64_t result = qword_A1810;
  if (!qword_A1810)
  {
    unint64_t result = swift_getWitnessTable(&unk_71274, &type metadata for HomeCommunicationNLv4Intent);
    atomic_store(result, (unint64_t *)&qword_A1810);
  }

  return result;
}

uint64_t sub_2EE44()
{
  if (*(void *)(v0 + 48)) {
    sub_423C((void *)(v0 + 24));
  }
  swift_bridgeObjectRelease(*(void *)(v0 + 72));
  swift_bridgeObjectRelease(*(void *)(v0 + 80));
  swift_bridgeObjectRelease(*(void *)(v0 + 88));
  swift_bridgeObjectRelease(*(void *)(v0 + 96));
  swift_bridgeObjectRelease(*(void *)(v0 + 104));
  swift_bridgeObjectRelease(*(void *)(v0 + 112));
  swift_release(*(void *)(v0 + 120));
  swift_bridgeObjectRelease(*(void *)(v0 + 168));
  swift_bridgeObjectRelease(*(void *)(v0 + 176));
  swift_bridgeObjectRelease(*(void *)(v0 + 192));

  return swift_deallocObject(v0, 216LL, 7LL);
}

uint64_t sub_2EEC8(uint64_t a1)
{
  return swift_release(a1 & 0x7FFFFFFFFFFFFFFFLL);
}

_OWORD *sub_2EED4(_OWORD *a1, _OWORD *a2)
{
  __int128 v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_2EEE8(void *a1)
{
  return swift_release(a1[1]);
}

void sub_2EF10(uint64_t *a1, uint64_t *a2)
{
}

uint64_t *sub_2EF34(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *a2;
  *a1 = *a2;
  swift_retain(v5);
  swift_release(v4);
  uint64_t v6 = a1[1];
  uint64_t v7 = a2[1];
  a1[1] = v7;
  swift_retain(v7);
  swift_release(v6);
  return a1;
}

__n128 initializeWithTake for SendAnnouncementNeedsValueModel(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void *sub_2EF9C(void *a1, _OWORD *a2, uint64_t a3)
{
  return sub_2F110(a1, a2, a3, (void (*)(uint64_t))&_swift_release);
}

uint64_t sub_2EFA8(uint64_t *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 16))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }

    else
    {
      uint64_t v3 = *a1;
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }

  else
  {
    int v2 = -1;
  }

  return (v2 + 1);
}

uint64_t sub_2EFFC(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    *(void *)(result + sub_423C(v0 + 8) = 0LL;
    if (a3 >= 0x7FFFFFFF) {
      *(_BYTE *)(result + 16) = 1;
    }
  }

  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(_BYTE *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }

  return result;
}

void type metadata accessor for TaskAttributes()
{
}

uint64_t sub_2F05C(void *a1)
{
  return swift_bridgeObjectRelease(a1[1]);
}

void sub_2F084(uint64_t *a1, uint64_t *a2)
{
}

uint64_t *sub_2F0A8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  uint64_t v6 = a1[1];
  uint64_t v7 = a2[1];
  a1[1] = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v6);
  return a1;
}

void *sub_2F104(void *a1, _OWORD *a2, uint64_t a3)
{
  return sub_2F110(a1, a2, a3, (void (*)(uint64_t))&_swift_bridgeObjectRelease);
}

void *sub_2F110(void *a1, _OWORD *a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v7 = a1[1];
  *(_OWORD *)a1 = *a2;
  a4(v7);
  return a1;
}

uint64_t sub_2F158(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }

    else
    {
      uint64_t v2 = *a1;
    }
  }

  else
  {
    LODWORD(v2) = -1;
  }

  return (v2 + 1);
}

uint64_t sub_2F198(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + sub_423C(v0 + 8) = 0LL;
    if (a3 < 0) {
      *(_BYTE *)(result + 16) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

void type metadata accessor for UserDialogActParse()
{
}

uint64_t sub_2F1E0(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(void *)(a1 + 24));
}

void *sub_2F208(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

void *sub_2F244(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  return a1;
}

__n128 sub_2F2B0(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  __int128 v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void *sub_2F2BC(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  uint64_t v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  uint64_t v6 = a2[3];
  uint64_t v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease(v7);
  return a1;
}

uint64_t sub_2F300(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }

    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }

  else
  {
    LODWORD(v2) = -1;
  }

  return (v2 + 1);
}

uint64_t sub_2F340(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0LL;
    *(void *)(result + 24) = 0LL;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + sub_423C(v0 + 8) = 0LL;
    if (a3 < 0) {
      *(_BYTE *)(result + 32) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + sub_423C(v0 + 8) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

void type metadata accessor for HomeAutomationTargetNode()
{
}

void sub_2F38C(uint64_t a1)
{
}

uint64_t sub_2F394(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(a1, a2, a3);
}

uint64_t sub_2F3A8(uint64_t a1)
{
  return swift_bridgeObjectRelease_n(a1, 2LL);
}

void sub_2F3B0(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_2F3B8@<X0>(uint64_t a1@<X8>)
{
  return _stringCompareWithSmolCheck(_:_:expecting:)(v1, v2, 0xD000000000000012LL, a1 | 0x8000000000000000LL, 0LL);
}

uint64_t sub_2F3D4@<X0>(uint64_t a1@<X8>)
{
  return swift_bridgeObjectRelease(*(void *)(a1 - 256));
}

uint64_t sub_2F3DC(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 - 152))(a1, v1);
}

void sub_2F3E8(uint64_t a1)
{
}

uint64_t sub_2F3F0()
{
  return (*(uint64_t (**)(void))(v0 - 152))();
}

uint64_t sub_2F3F8()
{
  return (*(uint64_t (**)(void, uint64_t, uint64_t))(*(void *)(v2 - 128) + 32LL))( *(void *)(v2 - 264),  v0,  v1);
}

  ;
}

  ;
}

uint64_t sub_2F440( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  a9 = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(&a9, &a10, v11, v10);
}

BOOL sub_2F45C(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_2F46C(uint64_t a1)
{
  return swift_bridgeObjectRelease_n(a1, 3LL);
}

uint64_t sub_2F474(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(v6 - 112, v5, v4, a4);
}

uint64_t sub_2F484(uint64_t a1)
{
  return swift_bridgeObjectRetain_n(a1, 2LL);
}

uint64_t sub_2F48C()
{
  return Transformer.transform.getter(v0);
}

char *sub_2F49C()
{
  return sub_5D33C(0LL, *(void *)(v0 + 16) + 1LL, 1, v0);
}

void sub_2F4B4(uint64_t a1)
{
}

BOOL sub_2F4BC(os_log_s *a1)
{
  return os_log_type_enabled(a1, v1);
}

uint64_t sub_2F4C4()
{
  return dispatch thunk of CodeGenGlobalArgs.getUsoIdentifiersFor(attributeName:)(0x73656D616ELL, 0xE500000000000000LL);
}

uint64_t sub_2F4DC(uint64_t a1)
{
  return swift_release_n(a1, 2LL);
}

uint64_t sub_2F4E4()
{
  return sub_423C((void *)(v0 + 248));
}

uint64_t sub_2F4EC()
{
  return swift_bridgeObjectRetain(v0);
}

char *sub_2F4F4@<X0>(uint64_t a1@<X3>, unint64_t a2@<X8>)
{
  return sub_5D33C((char *)(a2 > 1), v2, 1, a1);
}

uint64_t sub_2F508(uint64_t a1, uint64_t a2)
{
  return sub_4870(a1, a2);
}

uint64_t sub_2F51C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 - 144))(a1, a2, v2);
}

uint64_t sub_2F528(uint64_t a1)
{
  return v2(a1, v3, v1);
}

uint64_t sub_2F534()
{
  return swift_bridgeObjectRetain_n(v0, 2LL);
}

uint64_t sub_2F540()
{
  return Logger.logObject.getter();
}

uint64_t sub_2F548@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  return _stringCompareWithSmolCheck(_:_:expecting:)(v2, v3, a1, a2 | 0x8000000000000000LL, 0LL);
}

void sub_2F55C(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 152) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
}

uint64_t sub_2F578()
{
  return sub_2EDD8(v1, v0);
}

uint64_t sub_2F584(uint64_t a1, unint64_t a2)
{
  return sub_68DC4(a1, a2, (uint64_t *)(v2 - 96));
}

uint64_t sub_2F590(uint64_t a1)
{
  return swift_allocObject(a1, 216LL, 7LL);
}

uint64_t sub_2F59C()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t sub_2F5AC(uint64_t a1)
{
  *(void *)(v1 - 104) = a1;
  return v1 - 104;
}

uint64_t sub_2F5C4(uint64_t a1)
{
  return v1(a1, v2);
}

uint64_t sub_2F5CC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  return swift_retain(v3);
}

uint64_t sub_2F5DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, void, uint64_t))(v3 - 168))(a1, *(unsigned int *)(a2 - 256), v2);
}

uint64_t sub_2F5EC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 - 528))(a1, a2, v2);
}

uint64_t sub_2F5FC()
{
  return Logger.logObject.getter();
}

uint64_t sub_2F604()
{
  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_2F60C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(v6 - 112, v5, v4, a4);
}

  ;
}

uint64_t sub_2F62C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(a1, a2, a3, a4);
}

uint64_t sub_2F644()
{
  return type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
}

BOOL sub_2F64C(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_2F65C()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_2F66C(uint64_t a1)
{
  return dispatch thunk of static Equatable.== infix(_:_:)(a1, v2, v1);
}

uint64_t sub_2F67C()
{
  return swift_retain(v0);
}

uint64_t sub_2F684()
{
  return swift_bridgeObjectRetain(v0);
}

  ;
}

uint64_t sub_2F69C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(v4 + 248, a2, v5, a4);
}

uint64_t sub_2F6A8()
{
  return String.init<A>(describing:)(v0 + 248, v1);
}

  ;
}

void sub_2F6C8(uint64_t a1, uint64_t *a2)
{
}

uint64_t sub_2F6D0()
{
  return swift_release(*(void *)(v0 - 448));
}

uint64_t sub_2F6DC()
{
  return swift_bridgeObjectRelease(*(void *)(v0 + 128));
}

void sub_2F6E4(uint64_t a1, uint64_t *a2)
{
}

uint64_t sub_2F6EC()
{
  return swift_bridgeObjectRetain(v0);
}

uint64_t sub_2F6F4()
{
  return swift_bridgeObjectRelease_n(v0, 2LL);
}

uint64_t sub_2F700()
{
  return v0;
}

uint64_t sub_2F70C(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 - 200))(a1, v1);
}

uint64_t sub_2F718@<X0>(uint64_t a1@<X8>)
{
  return swift_retain(*(void *)(a1 + 32));
}

uint64_t sub_2F724(uint64_t a1)
{
  *(void *)(v1 - 136) = a1;
  return v1 - 136;
}

uint64_t sub_2F738()
{
  return Logger.logObject.getter();
}

BOOL sub_2F744@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_2F758@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  return a3(a1, a2, v3);
}

uint64_t sub_2F760()
{
  return swift_bridgeObjectRetain(v0);
}

uint64_t sub_2F768()
{
  return swift_bridgeObjectRetain(v0);
}

void sub_2F770(uint64_t a1, uint64_t *a2)
{
}

uint64_t sub_2F778()
{
  return swift_retain(v0);
}

uint64_t sub_2F780()
{
  return swift_retain_n(v0, 2LL);
}

uint64_t sub_2F78C()
{
  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v0, 1LL, v1);
}

_WORD *sub_2F7B0(_WORD *result)
{
  *__n128 result = 0;
  return result;
}

uint64_t sub_2F7BC(uint64_t a1)
{
  return swift_bridgeObjectRelease_n(a1, 4LL);
}

uint64_t sub_2F7C4(uint64_t a1, unint64_t a2)
{
  return sub_68DC4(a1, a2, (uint64_t *)(v2 - 144));
}

uint64_t sub_2F7CC(uint64_t a1, uint64_t a2)
{
  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(a1, a2, 1LL, v2);
}

unint64_t sub_2F7D8@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + 24) = a1;
  return sub_2EE08();
}

uint64_t sub_2F7E0()
{
  return swift_bridgeObjectRelease(*(void *)(v0 - 104));
}

uint64_t sub_2F7E8()
{
  return sub_2EDA4(v1, v0);
}

unint64_t sub_2F7F4@<X0>(uint64_t a1@<X8>)
{
  *(void *)(*(void *)(v1 + 176) + 24LL) = a1;
  return sub_2EE08();
}

uint64_t sub_2F800()
{
  uint64_t v1 = type metadata accessor for USOParse(0LL);
  uint64_t v45 = *(void *)(v1 - 8);
  uint64_t v46 = v1;
  __chkstk_darwin(v1);
  sub_9298();
  uint64_t v4 = v3 - v2;
  uint64_t v5 = sub_41BC(&qword_A1890);
  __chkstk_darwin(v5);
  sub_9298();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = type metadata accessor for Siri_Nlu_External_UserParse(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  unint64_t v15 = (char *)&v44 - v14;
  uint64_t v16 = type metadata accessor for Parse(0LL);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  sub_9298();
  uint64_t v20 = (uint64_t *)(v19 - v18);
  char v21 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v17 + 16);
  uint64_t v47 = v0;
  v21(v20, v0, v16);
  int v22 = (*(uint64_t (**)(uint64_t *, uint64_t))(v17 + 88))(v20, v16);
  if (v22 == enum case for Parse.NLv4IntentOnly(_:))
  {
    sub_30228(*(uint64_t (**)(uint64_t, uint64_t))(v17 + 96));
    uint64_t v23 = *v20;
    static ConversionUtils.toUserParse(from:)(*v20);
    if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v8, 1LL, v9) == 1)
    {
      sub_5F64(v8, &qword_A1890);
      if (qword_9F820 != -1) {
        swift_once(&qword_9F820, sub_17ADC);
      }
      uint64_t v24 = type metadata accessor for Logger(0LL);
      sub_4870(v24, (uint64_t)qword_A3EB0);
      uint64_t v25 = swift_unknownObjectRetain_n(v23, 2LL);
      unint64_t v26 = (os_log_s *)Logger.logObject.getter(v25);
      os_log_type_t v27 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v26, v27))
      {
        uint64_t v28 = (uint8_t *)sub_144F0(12LL);
        uint64_t v29 = sub_144F0(32LL);
        uint64_t v48 = v23;
        uint64_t v49 = v29;
        *(_DWORD *)uint64_t v28 = 136315138;
        swift_unknownObjectRetain(v23);
        uint64_t v30 = sub_41BC(&qword_A1680);
        uint64_t v31 = String.init<A>(describing:)(&v48, v30);
        unint64_t v33 = v32;
        uint64_t v48 = sub_68DC4(v31, v32, &v49);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, &v49, v28 + 4, v28 + 12);
        swift_unknownObjectRelease_n(v23, 2LL);
        swift_bridgeObjectRelease(v33);
        _os_log_impl( &dword_0,  v26,  v27,  "Couldn't transform UserDialogAct %s into UserParse to get the UDAs.",  v28,  0xCu);
        swift_arrayDestroy(v29, 1LL, (char *)&type metadata for Any + 8);
        sub_48D4(v29);
        sub_48D4((uint64_t)v28);
        swift_unknownObjectRelease(v23);
      }

      else
      {

        swift_unknownObjectRelease_n(v23, 3LL);
      }

      return 0LL;
    }

    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v15, v8, v9);
    uint64_t v37 = sub_2FC6C();
    swift_unknownObjectRelease(v23);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  }

  else
  {
    if (v22 != enum case for Parse.uso(_:))
    {
      if (qword_9F820 != -1) {
        swift_once(&qword_9F820, sub_17ADC);
      }
      uint64_t v38 = type metadata accessor for Logger(0LL);
      uint64_t v39 = sub_4870(v38, (uint64_t)qword_A3EB0);
      uint64_t v40 = (os_log_s *)Logger.logObject.getter(v39);
      os_log_type_t v41 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v40, v41))
      {
        unint64_t v42 = (uint8_t *)sub_144F0(2LL);
        *(_WORD *)unint64_t v42 = 0;
        _os_log_impl(&dword_0, v40, v41, "Direct Invocation parse in Parse.usoTask", v42, 2u);
        sub_48D4((uint64_t)v42);
      }

      sub_30228(*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8));
      return 0LL;
    }

    sub_30228(*(uint64_t (**)(uint64_t, uint64_t))(v17 + 96));
    uint64_t v35 = v45;
    uint64_t v34 = v46;
    uint64_t v36 = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(v45 + 32))(v4, v20, v46);
    USOParse.userParse.getter(v36);
    uint64_t v37 = sub_2FC6C();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v4, v34);
  }

  return v37;
}

uint64_t sub_2FC6C()
{
  void (*v39)(uint64_t *__return_ptr, char *);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void v44[3];
  void (*v45)(char *, char *, uint64_t);
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50[2];
  uint64_t v0 = sub_41BC((uint64_t *)&unk_A1610);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)v44 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v3 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)v44 - v9;
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)v44 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)v44 - v15;
  uint64_t v17 = Siri_Nlu_External_UserParse.userDialogActs.getter(v14);
  sub_5D0B0(v17, (uint64_t)v2);
  swift_bridgeObjectRelease(v17);
  if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0((uint64_t)v2, 1LL, v3) == 1)
  {
    sub_5F64((uint64_t)v2, (uint64_t *)&unk_A1610);
    if (qword_9F820 != -1) {
      swift_once(&qword_9F820, sub_17ADC);
    }
    uint64_t v18 = type metadata accessor for Logger(0LL);
    uint64_t v19 = sub_4870(v18, (uint64_t)qword_A3EB0);
    uint64_t v20 = (os_log_s *)Logger.logObject.getter(v19);
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v21))
    {
      int v22 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)int v22 = 0;
      _os_log_impl(&dword_0, v20, v21, "No user dialog act found in userParse", v22, 2u);
      swift_slowDealloc(v22, -1LL, -1LL);
    }

    return 0LL;
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v16, v2, v3);
    if (qword_9F820 != -1) {
      swift_once(&qword_9F820, sub_17ADC);
    }
    uint64_t v23 = type metadata accessor for Logger(0LL);
    uint64_t v24 = sub_4870(v23, (uint64_t)qword_A3EB0);
    uint64_t v25 = *(uint64_t (**)(char *, char *, uint64_t))(v4 + 16);
    uint64_t v26 = v25(v13, v16, v3);
    uint64_t v47 = v24;
    os_log_type_t v27 = (os_log_s *)Logger.logObject.getter(v26);
    os_log_type_t v28 = static os_log_type_t.debug.getter();
    BOOL v29 = os_log_type_enabled(v27, v28);
    v44[2] = v10;
    if (v29)
    {
      uint64_t v46 = v16;
      uint64_t v30 = swift_slowAlloc(12LL, -1LL);
      uint64_t v45 = (void (*)(char *, char *, uint64_t))v25;
      uint64_t v31 = (uint8_t *)v30;
      uint64_t v32 = swift_slowAlloc(32LL, -1LL);
      v44[1] = v7;
      uint64_t v33 = v32;
      v50[0] = v32;
      *(_DWORD *)uint64_t v31 = 136315138;
      v45(v10, v13, v3);
      uint64_t v34 = sub_546C4((uint64_t)v10);
      unint64_t v36 = v35;
      uint64_t v48 = sub_68DC4(v34, v35, v50);
      uint64_t v16 = v46;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, &v49, v31 + 4, v31 + 12);
      swift_bridgeObjectRelease(v36);
      uint64_t v37 = *(void (**)(char *, uint64_t))(v4 + 8);
      v37(v13, v3);
      _os_log_impl(&dword_0, v27, v28, "Attempting to transform %s into UsoTask.", v31, 0xCu);
      swift_arrayDestroy(v33, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v33, -1LL, -1LL);
      swift_slowDealloc(v31, -1LL, -1LL);
    }

    else
    {
      uint64_t v37 = *(void (**)(char *, uint64_t))(v4 + 8);
      v37(v13, v3);
    }

    if (qword_9F868 != -1) {
      swift_once(&qword_9F868, sub_2CEC4);
    }
    uint64_t v38 = sub_41BC(&qword_A17F8);
    sub_4870(v38, (uint64_t)qword_A3F28);
    uint64_t v39 = (void (*)(uint64_t *__return_ptr, char *))Transformer.transform.getter(v38);
    os_log_type_t v41 = v40;
    v39(v50, v16);
    swift_release(v41);
    v37(v16, v3);
    unint64_t v42 = v50[0];
    swift_bridgeObjectRelease(v50[1]);
  }

  return v42;
}

uint64_t sub_30228@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v2, v1);
}

void sub_30234(uint64_t a1, char a2)
{
  __asm { BR              X10 }

uint64_t sub_30280(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if ((a1 & 1) != 0) {
    uint64_t v6 = 0x726F727265LL;
  }
  else {
    uint64_t v6 = 0x6775626564LL;
  }
  sub_303EC(v6, 0xE500000000000000LL, 0xD000000000000010LL, 0x80000000000759C0LL, a5, a6);
  swift_bridgeObjectRelease(0xE500000000000000LL);
  return swift_bridgeObjectRelease(0x80000000000759C0LL);
}

void sub_30300(char a1, uint64_t a2)
{
  if ((a1 & 1) != 0) {
    uint64_t v3 = 0x726F727265LL;
  }
  else {
    uint64_t v3 = 0x6775626564LL;
  }
  uint64_t v12 = 0LL;
  uint64_t v13 = 0xE000000000000000LL;
  type metadata accessor for HomeCommunicationError(0LL);
  _print_unlocked<A, B>(_:_:)(a2, &v12);
  uint64_t v4 = v12;
  unint64_t v5 = v13;
  sub_10A88();
  uint64_t v12 = v6;
  uint64_t v13 = v7;
  v8._uint64_t countAndFlagsBits = 10LL;
  v8._object = (void *)0xE100000000000000LL;
  String.append(_:)(v8);
  sub_10EF8();
  object = v9._object;
  String.append(_:)(v9);
  swift_bridgeObjectRelease(object);
  uint64_t v11 = v13;
  sub_303EC(v3, 0xE500000000000000LL, v4, v5, v12, v13);
  swift_bridgeObjectRelease(0xE500000000000000LL);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v11);
  sub_25C28();
}

void sub_303EC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  if (AFIsInternalInstall() && AFProcessIsAssistantService())
  {
    if (qword_9F820 != -1) {
      swift_once(&qword_9F820, sub_17ADC);
    }
    uint64_t v13 = sub_1BDD8();
    uint64_t v14 = (os_log_s *)sub_4870(v13, (uint64_t)qword_A3EB0);
    uint64_t v15 = swift_bridgeObjectRetain_n(a4, 2LL);
    Logger.logObject.getter(v15);
    os_log_type_t v16 = sub_A9E8();
    if (os_log_type_enabled(v14, v16))
    {
      uint64_t v17 = (_DWORD *)sub_144F0(12LL);
      uint64_t v30 = a6;
      uint64_t v18 = sub_144F0(32LL);
      uint64_t v31 = v18;
      _DWORD *v17 = 136315138;
      swift_bridgeObjectRetain(a4);
      sub_68DC4(a3, a4, &v31);
      sub_30CF4();
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v19, v20, v17 + 1, v17 + 3);
      swift_bridgeObjectRelease_n(a4, 3LL);
      sub_30CB4(&dword_0, v14, v16, "#RadarUtils logging ABC from error=%s");
      sub_30C94((uint64_t)&type metadata for Any);
      uint64_t v21 = v18;
      a6 = v30;
      sub_48D4(v21);
      sub_48D4((uint64_t)v17);
    }

    else
    {

      swift_bridgeObjectRelease_n(a4, 2LL);
    }

    dispatch thunk of AutoBugCaptureManager.generateSnapshot(errorType:errorSubType:subTypeContext:completion:)( a1,  a2,  a3,  a4,  a5,  a6,  sub_30690,  0LL);
  }

  else
  {
    if (qword_9F820 != -1) {
      swift_once(&qword_9F820, sub_17ADC);
    }
    uint64_t v22 = sub_1BDD8();
    sub_4870(v22, (uint64_t)qword_A3EB0);
    uint64_t v23 = sub_30CA4();
    Logger.logObject.getter(v23);
    os_log_type_t v24 = sub_A9E8();
    if (sub_2F45C(v24))
    {
      uint64_t v25 = sub_144F0(12LL);
      uint64_t v26 = sub_144F0(32LL);
      uint64_t v31 = v26;
      sub_30CC0(4.8149e-34);
      sub_30CEC(a1, v27, &v31);
      sub_30CF4();
      sub_30CE0(v28, v29);
      sub_30CD4();
      sub_30CB4( &dword_0,  v6,  (os_log_type_t)a5,  "#RadarUtils autoBugCapture: not an internal build. Skipping filing radar for %s");
      sub_30C94((uint64_t)&type metadata for Any);
      sub_48D4(v26);
      sub_48D4(v25);
    }

    else
    {

      sub_1768C();
    }
  }

void sub_30690(char a1)
{
}

void sub_306A4(os_log_s *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = sub_41BC(&qword_A1958);
  __chkstk_darwin(v10);
  sub_9298();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = type metadata accessor for RadarFilingExtras(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  sub_9298();
  uint64_t v18 = v17 - v16;
  uint64_t v50 = type metadata accessor for TTRComponentInfo(0LL);
  uint64_t v19 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  sub_9298();
  uint64_t v22 = v21 - v20;
  if (AFIsInternalInstall() && AFProcessIsAssistantService())
  {
    uint64_t v48 = (uint64_t)a1;
    uint64_t v23 = type metadata accessor for TapToRadarManager(0LL);
    os_log_type_t v24 = (os_log_s *)swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
    uint64_t v47 = TapToRadarManager.init()();
    TTRComponentInfo.init(componentName:componentVersion:componentID:)( 0xD000000000000011LL,  0x8000000000077810LL,  0xD000000000000012LL,  0x8000000000077830LL,  1101121LL);
    swift_bridgeObjectRetain(a6);
    RadarFilingExtras.init(attachmentURLs:extensionIDs:deviceIDs:displayReason:)( &_swiftEmptyArrayStorage,  &_swiftEmptyArrayStorage,  0LL,  a5,  a6);
    if (qword_9F820 != -1) {
      swift_once(&qword_9F820, sub_17ADC);
    }
    uint64_t v25 = sub_1BDD8();
    sub_4870(v25, (uint64_t)qword_A3EB0);
    uint64_t v26 = sub_30CA4();
    Logger.logObject.getter(v26);
    os_log_type_t v27 = sub_A9E8();
    uint64_t v49 = v24;
    if (os_log_type_enabled(v24, v27))
    {
      uint64_t v28 = (uint8_t *)sub_144F0(12LL);
      uint64_t v46 = sub_144F0(32LL);
      uint64_t v53 = v46;
      *(_DWORD *)uint64_t v28 = 136315138;
      uint64_t v29 = v28 + 12;
      uint64_t v44 = v28 + 4;
      uint64_t v45 = v28;
      swift_bridgeObjectRetain(a2);
      uint64_t v30 = v48;
      uint64_t v32 = sub_30CEC(v48, v31, &v53);
      uint64_t v33 = sub_BD40(v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v33, v34, v44, v29);
      sub_30CD4();
      _os_log_impl(&dword_0, v49, v27, "#RadarUtils Creating radar for %s", v45, 0xCu);
      swift_arrayDestroy(v46, 1LL, (char *)&type metadata for Any + 8);
      sub_48D4(v46);
      sub_48D4((uint64_t)v45);
    }

    else
    {

      sub_1768C();
      uint64_t v30 = v48;
    }

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v13, v18, v14);
    _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v13, 0LL, 1LL, v14);
    dispatch thunk of TapToRadarManager.createProblem(errStatus:userDefaultSuiteName:radarComponentInfo:title:description:radarFilingExtras:completion:)( v30,  a2,  0xD000000000000020LL,  0x8000000000077850LL,  v22,  v30,  a2,  a3,  a4,  v13,  sub_30AEC,  0LL);
    swift_release(v47);
    sub_30C54(v13);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v18, v14);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v22, v50);
  }

  else
  {
    if (qword_9F820 != -1) {
      swift_once(&qword_9F820, sub_17ADC);
    }
    uint64_t v35 = sub_1BDD8();
    sub_4870(v35, (uint64_t)qword_A3EB0);
    uint64_t v36 = sub_30CA4();
    Logger.logObject.getter(v36);
    os_log_type_t v37 = sub_A9E8();
    if (sub_2F45C(v37))
    {
      uint64_t v38 = sub_144F0(12LL);
      uint64_t v39 = sub_144F0(32LL);
      uint64_t v53 = v39;
      sub_30CC0(4.8149e-34);
      uint64_t v41 = sub_30CEC((uint64_t)a1, v40, &v53);
      uint64_t v42 = sub_BD40(v41);
      sub_30CE0(v42, v43);
      sub_30CD4();
      sub_30CB4( &dword_0,  a1,  (os_log_type_t)v13,  "#RadarUtils tapToRadar: not an internal build. Skipping filing radar for %s");
      sub_30C94((uint64_t)&type metadata for Any);
      sub_48D4(v39);
      sub_48D4(v38);
    }

    else
    {

      sub_1768C();
    }
  }

void sub_30AEC(char a1)
{
}

void sub_30B00(char a1, uint64_t (*a2)(void), const char *a3)
{
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v6 = sub_1BDD8();
  uint64_t v7 = sub_4870(v6, (uint64_t)qword_A3EB0);
  oslog = (os_log_s *)Logger.logObject.getter(v7);
  os_log_type_t v8 = a2();
  if (os_log_type_enabled(oslog, v8))
  {
    Swift::String v9 = (uint8_t *)sub_144F0(8LL);
    *(_DWORD *)Swift::String v9 = 67109120;
    int v11 = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v11, &v12, v9 + 4, v9 + 8);
    _os_log_impl(&dword_0, oslog, v8, a3, v9, 8u);
    sub_48D4((uint64_t)v9);

    sub_25C28();
  }

  else
  {
  }

uint64_t sub_30C10()
{
  return swift_deallocClassInstance(v0, 24LL, 7LL);
}

uint64_t type metadata accessor for RadarUtils()
{
  return objc_opt_self(&OBJC_CLASS____TtC35HomeCommunicationFlowDelegatePlugin10RadarUtils);
}

uint64_t sub_30C54(uint64_t a1)
{
  uint64_t v2 = sub_41BC(&qword_A1958);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_30C94@<X0>(uint64_t a1@<X8>)
{
  return swift_arrayDestroy(v1, 1LL, a1 + 8);
}

uint64_t sub_30CA4()
{
  return swift_bridgeObjectRetain_n(v0, 2LL);
}

void sub_30CB4(void *a1, os_log_s *a2, os_log_type_t a3, const char *a4)
{
}

uint64_t sub_30CC0(float a1)
{
  *uint64_t v2 = a1;
  return swift_bridgeObjectRetain(v1);
}

uint64_t sub_30CD4()
{
  return swift_bridgeObjectRelease_n(v0, 3LL);
}

uint64_t sub_30CE0(uint64_t a1, uint64_t a2)
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(a1, a2, v3, v2);
}

uint64_t sub_30CEC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_68DC4(a1, v3, a3);
}

  ;
}

uint64_t storeEnumTagSinglePayload for ReadActionType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(sub_21A1C(v0, v4) = 1;
  }
  else {
    LODWORD(sub_21A1C(v0, v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_30D54 + 4 * byte_72985[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_30D88 + 4 * byte_72980[v4]))();
}

uint64_t sub_30D88(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_30D90(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x30D98LL);
  }
  return result;
}

uint64_t sub_30DA4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x30DACLL);
  }
  *(_BYTE *)__n128 result = a2 + 1;
  return result;
}

uint64_t sub_30DB0(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_30DB8(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ReadActionType()
{
  return &type metadata for ReadActionType;
}

unint64_t sub_30DD8()
{
  unint64_t result = qword_A1960;
  if (!qword_A1960)
  {
    unint64_t result = swift_getWitnessTable(&unk_729D4, &type metadata for ReadActionType);
    atomic_store(result, (unint64_t *)&qword_A1960);
  }

  return result;
}

void sub_30E14()
{
  algn_A3F88[7] = -18;
}

uint64_t *sub_30E44()
{
  if (qword_9F888 != -1) {
    swift_once(&qword_9F888, sub_30E14);
  }
  return &qword_A3F80;
}

uint64_t sub_30E84(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_93880, v2);
  swift_bridgeObjectRelease(object);
  if (v3 == 1) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = 2;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0LL;
  }
}

uint64_t sub_30ED4(char a1)
{
  if ((a1 & 1) != 0) {
    return 0x746165706572LL;
  }
  else {
    return 1684104562LL;
  }
}

void sub_30F00(char *a1, unsigned __int8 *a2)
{
}

void sub_30F0C()
{
}

uint64_t sub_30F14(uint64_t a1)
{
  return sub_1E4F0(a1, *v1);
}

void sub_30F1C(uint64_t a1)
{
}

uint64_t sub_30F24@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result = sub_30E84(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_30F50@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_30ED4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_30F78(void *a1@<X8>)
{
  *a1 = &off_938D0;
}

uint64_t sub_30F88()
{
  uint64_t v0 = qword_A3F80;
  swift_bridgeObjectRetain(*(void *)algn_A3F88);
  return v0;
}

uint64_t sub_30FC0(uint64_t a1)
{
  unint64_t v2 = sub_312E4();
  return static AppEnumRepresentation.lnValueType.getter(a1, v2);
}

uint64_t sub_30FE8(uint64_t a1)
{
  unint64_t v2 = sub_312E4();
  return AppEnumRepresentation.lnValue.getter(a1, v2);
}

uint64_t sub_31010(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_31194();
  return static IntentValueTypeIdentifiable.canConvert(_:)(a1, a2, v4);
}

uint64_t sub_31048(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_312E4();
  return static AppEnumRepresentation.from(_:context:)(a1, a2, a3, v6);
}

uint64_t sub_31098(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_31194();
  return static IntentValueTypeIdentifiable.canConvertFrom(_:)(a1, a2, v4);
}

unint64_t sub_310D4()
{
  unint64_t result = qword_A1968;
  if (!qword_A1968)
  {
    unint64_t result = swift_getWitnessTable(&unk_72A14, &type metadata for ReadActionType);
    atomic_store(result, (unint64_t *)&qword_A1968);
  }

  return result;
}

unint64_t sub_31114()
{
  unint64_t result = qword_A1970;
  if (!qword_A1970)
  {
    unint64_t result = swift_getWitnessTable(&unk_729A4, &type metadata for ReadActionType);
    atomic_store(result, (unint64_t *)&qword_A1970);
  }

  return result;
}

unint64_t sub_31154()
{
  unint64_t result = qword_A1978;
  if (!qword_A1978)
  {
    unint64_t result = swift_getWitnessTable(&unk_72A60, &type metadata for ReadActionType);
    atomic_store(result, (unint64_t *)&qword_A1978);
  }

  return result;
}

unint64_t sub_31194()
{
  unint64_t result = qword_A1980;
  if (!qword_A1980)
  {
    unint64_t result = swift_getWitnessTable(&unk_72A30, &type metadata for ReadActionType);
    atomic_store(result, (unint64_t *)&qword_A1980);
  }

  return result;
}

unint64_t sub_311D4()
{
  unint64_t result = qword_A1988;
  if (!qword_A1988)
  {
    unint64_t result = swift_getWitnessTable(&unk_72AD8, &type metadata for ReadActionType);
    atomic_store(result, (unint64_t *)&qword_A1988);
  }

  return result;
}

unint64_t sub_31214()
{
  unint64_t result = qword_A1990;
  if (!qword_A1990)
  {
    unint64_t result = swift_getWitnessTable(&unk_72B10, &type metadata for ReadActionType);
    atomic_store(result, (unint64_t *)&qword_A1990);
  }

  return result;
}

void *sub_31250()
{
  return &protocol witness table for String;
}

unint64_t sub_31260()
{
  unint64_t result = qword_A1998;
  if (!qword_A1998)
  {
    uint64_t v1 = sub_8564(&qword_A19A0);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_A1998);
  }

  return result;
}

unint64_t sub_312A8()
{
  unint64_t result = qword_A19A8;
  if (!qword_A19A8)
  {
    unint64_t result = swift_getWitnessTable(&unk_72B88, &type metadata for ReadActionType);
    atomic_store(result, (unint64_t *)&qword_A19A8);
  }

  return result;
}

unint64_t sub_312E4()
{
  unint64_t result = qword_A19B0;
  if (!qword_A19B0)
  {
    unint64_t result = swift_getWitnessTable(&unk_72A88, &type metadata for ReadActionType);
    atomic_store(result, (unint64_t *)&qword_A19B0);
  }

  return result;
}

uint64_t type metadata accessor for ReadAnnouncementAceViewProvider(uint64_t a1)
{
  uint64_t result = qword_A19C0;
  if (!qword_A19C0) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ReadAnnouncementAceViewProvider);
  }
  return result;
}

uint64_t sub_31358(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL);
}

uint64_t sub_313A4(void *a1, uint64_t (*a2)(void *, void), uint64_t a3)
{
  id v6 = [a1 announcementRecords];
  if (!v6) {
    goto LABEL_6;
  }
  uint64_t v7 = v6;
  unint64_t v8 = sub_25FA0();
  uint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v8);

  if ((unint64_t)v9 >> 62)
  {
    uint64_t v19 = v9 < 0 ? v9 : v9 & 0xFFFFFFFFFFFFFF8LL;
    swift_bridgeObjectRetain(v9);
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter(v19);
    swift_bridgeObjectRelease(v9);
  }

  else
  {
    uint64_t v10 = *(void *)((char *)&dword_10 + (v9 & 0xFFFFFFFFFFFFF8LL));
  }

  swift_bridgeObjectRelease(v9);
  if (v10)
  {
    int v11 = (void *)swift_allocObject(&unk_96748, 40LL, 7LL);
    v11[2] = a2;
    v11[3] = a3;
    v11[4] = a1;
    swift_retain(a3);
    id v12 = a1;
    sub_C04C((uint64_t)sub_32408, (uint64_t)v11);
    return swift_release(v11);
  }

  else
  {
LABEL_6:
    if (qword_9F820 != -1) {
      swift_once(&qword_9F820, sub_17ADC);
    }
    uint64_t v14 = type metadata accessor for Logger(0LL);
    uint64_t v15 = sub_4870(v14, (uint64_t)qword_A3EB0);
    uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
    os_log_type_t v17 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl( &dword_0,  v16,  v17,  "announcementRecords are nil or empty while making a CarPlay snippet to play announcements.",  v18,  2u);
      swift_slowDealloc(v18, -1LL, -1LL);
    }

    return a2(_swiftEmptyArrayStorage, 0LL);
  }

uint64_t sub_31588(uint64_t a1, void *a2, void *a3, uint64_t (*a4)(void *, void), uint64_t a5)
{
  uint64_t v6 = (uint64_t)v5;
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v12 = sub_1BDD8();
  sub_4870(v12, (uint64_t)qword_A3EB0);
  sub_3243C();
  os_log_type_t v13 = sub_A9E8();
  if (os_log_type_enabled(v5, v13))
  {
    uint64_t v14 = (uint8_t *)sub_A968();
    *(_WORD *)uint64_t v14 = 0;
    sub_1BE98(&dword_0, v5, v13, "#ReadAnnouncementAceViewProvider makeAceViewsForInterstitials", v14);
    sub_48D4((uint64_t)v14);
  }

  swift_retain(v5);
  swift_retain(a1);
  id v15 = a2;
  id v16 = a3;
  swift_retain(a5);
  return sub_31788(v6, v6, a1, v15, v16, a4, a5);
}

uint64_t sub_316A8( uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t (*a5)(void *, void), uint64_t a6)
{
  uint64_t v11 = v18;
  uint64_t v12 = v19;
  sub_8504(v17, v18);
  char v13 = dispatch thunk of DeviceState.isCarPlay.getter(v11, v12);
  sub_423C(v17);
  if ((v13 & 1) != 0) {
    return sub_313A4(a4, a5, a6);
  }
  uint64_t v15 = sub_41BC(&qword_A1A38);
  id v16 = (uint64_t (*)(uint64_t, uint64_t, void *, uint64_t (*)(void *, void), uint64_t))method lookup function for DefaultAceViewProvider(v15, &method descriptor for DefaultAceViewProvider.makeAceViewsForHandleIntentWithUser(app:intent:intentResponse:_:));
  return v16(a2, a3, a4, a5, a6);
}

uint64_t sub_31788( uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t (*a6)(void *, void), uint64_t a7)
{
  uint64_t v40 = a1;
  uint64_t v13 = sub_41BC(&qword_A1A10);
  __chkstk_darwin(v13);
  uint64_t v39 = (uint64_t)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for InputOrigin(0LL);
  uint64_t v41 = *(void *)(v15 - 8);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v38 - v19;
  uint64_t v21 = (void *)swift_allocObject(&unk_966D0, 64LL, 7LL);
  v21[2] = a2;
  v21[3] = a3;
  v21[4] = a4;
  uint64_t v21[5] = a5;
  uint64_t v38 = a6;
  v21[6] = a6;
  v21[7] = a7;
  swift_retain(a2);
  swift_retain(a3);
  id v43 = a4;
  id v42 = a5;
  uint64_t v44 = a7;
  uint64_t v22 = swift_retain(a7);
  static Device.current.getter(v45, v22);
  uint64_t v24 = v46;
  uint64_t v23 = v47;
  sub_8504(v45, v46);
  dispatch thunk of DeviceState.inputOrigin.getter(v24, v23);
  uint64_t v25 = v41;
  (*(void (**)(char *, void, uint64_t))(v41 + 104))(v18, enum case for InputOrigin.clientGenerated(_:), v15);
  LOBYTE(a6) = sub_1E150();
  uint64_t v26 = *(void (**)(char *, uint64_t))(v25 + 8);
  v26(v18, v15);
  v26(v20, v15);
  sub_423C(v45);
  if ((a6 & 1) != 0)
  {
    uint64_t v27 = type metadata accessor for TaskPriority(0LL);
    uint64_t v28 = v39;
    _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v39, 1LL, 1LL, v27);
    uint64_t v29 = (void *)swift_allocObject(&unk_966F8, 56LL, 7LL);
    void v29[2] = 0LL;
    void v29[3] = 0LL;
    uint64_t v30 = v40;
    void v29[4] = v40;
    v29[5] = sub_3226C;
    v29[6] = v21;
    swift_retain(v30);
    swift_retain(v21);
    uint64_t v31 = sub_31C98(v28, (uint64_t)&unk_A1A20, (uint64_t)v29);
    swift_release(a2);
    swift_release(v21);
    swift_release(v31);
    id v33 = v43;
    uint64_t v32 = v44;
    uint64_t v34 = v42;
  }

  else
  {
    uint64_t v34 = v42;
    id v35 = v43;
    uint64_t v36 = v44;
    sub_316A8(a2, a3, (uint64_t)v43, v42, v38, v44);
    swift_release(a2);
    swift_release(v21);
    uint64_t v32 = v36;
    id v33 = v35;
  }

  swift_release(v32);

  return swift_release(a3);
}

uint64_t sub_31A38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 56) = a5;
  *(void *)(v6 + 64) = a6;
  return swift_task_switch(sub_31A50, 0LL, 0LL);
}

uint64_t sub_31A50()
{
  uint64_t v1 = (void *)swift_task_alloc(dword_A1F7C);
  *(void *)(v0 + 72) = v1;
  void *v1 = v0;
  v1[1] = sub_31AA4;
  return sub_385CC(v0 + 16);
}

uint64_t sub_31AA4()
{
  unint64_t v2 = (void *)(*(void *)v1 + 16LL);
  uint64_t v3 = *(void *)(*(void *)v1 + 72LL);
  *(void *)(*(void *)v1 + 8_swift_stdlib_reportUnimplementedInitializer( "HomeCommunicationFlowDelegatePlugin.DisplayTextTemplatingService",  64LL,  "init(ducFamily:locale:extensionValueTypeNamesByValueType:aceServiceInvoker:deviceState:localContext:)",  101LL, 0LL) = v0;
  swift_task_dealloc(v3);
  sub_423C(v2);
  if (v0) {
    unint64_t v4 = sub_31BD0;
  }
  else {
    unint64_t v4 = sub_31B14;
  }
  return swift_task_switch(v4, 0LL, 0LL);
}

uint64_t sub_31B14()
{
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v1 = sub_1BDD8();
  sub_4870(v1, (uint64_t)qword_A3EB0);
  unint64_t v2 = (os_log_s *)sub_3243C();
  os_log_type_t v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v2, v3))
  {
    unint64_t v4 = (uint8_t *)sub_A968();
    *(_WORD *)unint64_t v4 = 0;
    sub_1BE98(&dword_0, v2, v3, "#ReadAnnouncementAceViewProvider played notification sound", v4);
    sub_48D4((uint64_t)v4);
  }

  unint64_t v5 = *(void (**)(void))(v0 + 56);

  v5();
  return sub_32414(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_31BD0()
{
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v1 = sub_1BDD8();
  sub_4870(v1, (uint64_t)qword_A3EB0);
  unint64_t v2 = (os_log_s *)sub_3243C();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = *(void *)(v0 + 80);
  if (v4)
  {
    uint64_t v6 = (uint8_t *)sub_A968();
    *(_WORD *)uint64_t v6 = 0;
    sub_1BE98(&dword_0, v2, v3, "#ReadAnnouncementAceViewProvider failed to play notificaiton sound", v6);
    sub_48D4((uint64_t)v6);
  }

  swift_errorRelease(v5);
  uint64_t v7 = *(void (**)(void))(v0 + 56);

  v7();
  return sub_32414(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_31C98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority(0LL);
  if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(a1, 1LL, v6) == 1)
  {
    sub_32310(a1);
    uint64_t v7 = 7168LL;
  }

  else
  {
    unsigned __int8 v8 = TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8LL))(a1, v6);
    uint64_t v7 = v8 | 0x1C00LL;
  }

  uint64_t v9 = *(void *)(a3 + 16);
  if (v9)
  {
    uint64_t v10 = *(void *)(a3 + 24);
    uint64_t ObjectType = swift_getObjectType(*(void *)(a3 + 16));
    swift_unknownObjectRetain(v9);
    uint64_t v12 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v10);
    uint64_t v14 = v13;
    swift_unknownObjectRelease(v9);
  }

  else
  {
    uint64_t v12 = 0LL;
    uint64_t v14 = 0LL;
  }

  uint64_t v15 = swift_allocObject(&unk_96720, 32LL, 7LL);
  *(void *)(v15 + 16) = a2;
  *(void *)(v15 + 24) = a3;
  if (v14 | v12)
  {
    v18[0] = 0LL;
    v18[1] = 0LL;
    uint64_t v16 = v18;
    v18[2] = v12;
    v18[3] = v14;
  }

  else
  {
    uint64_t v16 = 0LL;
  }

  return swift_task_create(v7, v16, (char *)&type metadata for () + 8, &unk_A1A30, v15);
}

void sub_31DD4(uint64_t a1, uint64_t a2, void *a3, void (*a4)(void *, void), uint64_t a5)
{
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v10 = sub_1BDD8();
  sub_4870(v10, (uint64_t)qword_A3EB0);
  sub_3243C();
  os_log_type_t v11 = sub_A9E8();
  if (sub_32444(v11))
  {
    uint64_t v12 = (uint8_t *)sub_A968();
    *(_WORD *)uint64_t v12 = 0;
    sub_1BE98(&dword_0, v5, v6, "#ReadAnnouncementAceViewProvider makeAceViewsForHandleIntentWithUser", v12);
    sub_48D4((uint64_t)v12);
  }

  static Device.current.getter(v23, v13);
  unint64_t v14 = sub_32454(v23);
  if ((v14 & 1) == 0 || (sub_3AC88(a3), !v14))
  {
    sub_32474(v14);
LABEL_13:
    a4(_swiftEmptyArrayStorage, 0LL);
    goto LABEL_14;
  }

  unint64_t v15 = v14;
  if (v14 >> 62) {
    uint64_t v16 = sub_32488(v14 & 0xFFFFFFFFFFFFFF8LL);
  }
  else {
    uint64_t v16 = *(void *)((char *)&dword_10 + (v14 & 0xFFFFFFFFFFFFFF8LL));
  }
  uint64_t v17 = swift_bridgeObjectRelease(v15);
  sub_32474(v17);
  if (!v16) {
    goto LABEL_13;
  }
  id v18 = a3;
  uint64_t v19 = sub_5CAAC();

  uint64_t v20 = sub_5CFB4(v19);
  uint64_t v22 = v21;
  swift_bridgeObjectRelease(v19);
  if (!v22) {
    goto LABEL_13;
  }
  sub_5CF04(v20, v22, (uint64_t)a4, a5);
  swift_bridgeObjectRelease(v22);
LABEL_14:
  sub_32424();
}

void sub_31F48(uint64_t a1, uint64_t a2, void *a3)
{
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v6 = sub_1BDD8();
  uint64_t v7 = sub_4870(v6, (uint64_t)qword_A3EB0);
  sub_3243C();
  os_log_type_t v8 = sub_A9E8();
  if (sub_32444(v8))
  {
    uint64_t v9 = (uint8_t *)sub_A968();
    *(_WORD *)uint64_t v9 = 0;
    sub_1BE98(&dword_0, v3, v4, "#ReadAnnouncementAceViewProvider makeCommandsAfterAceViewsForHandleIntentWithUser", v9);
    sub_48D4((uint64_t)v9);
  }

  static Device.current.getter(v24, v10);
  unint64_t v11 = sub_32454(v24);
  if ((v11 & 1) == 0 || (sub_3AC88(a3), !v11))
  {
    sub_32474(v11);
LABEL_16:
    sub_3247C((uint64_t)_swiftEmptyArrayStorage);
    goto LABEL_17;
  }

  unint64_t v12 = v11;
  if (v11 >> 62) {
    uint64_t v13 = sub_32488(v11 & 0xFFFFFFFFFFFFFF8LL);
  }
  else {
    uint64_t v13 = *(void *)((char *)&dword_10 + (v11 & 0xFFFFFFFFFFFFFF8LL));
  }
  uint64_t v14 = swift_bridgeObjectRelease(v12);
  sub_32474(v14);
  if (!v13) {
    goto LABEL_16;
  }
  if (qword_9F840 != -1) {
    swift_once(&qword_9F840, sub_21A4C);
  }
  unint64_t v15 = (void *)static CasinoFactory.makeSendCommandsFromMachineUtterance(machineUtterance:)(qword_A3EE8, qword_A3EF0);
  uint64_t v16 = (os_log_s *)v7;
  Logger.logObject.getter(v15);
  os_log_type_t v17 = sub_A9E8();
  if (os_log_type_enabled(v16, v17))
  {
    id v18 = (uint8_t *)sub_A968();
    *(_WORD *)id v18 = 0;
    sub_1BE98( &dword_0,  v16,  v17,  "Sending stop announcement command in makeCommandsAfterAceViewsForHandleIntentWithUser().",  v18);
    sub_48D4((uint64_t)v18);
  }

  uint64_t v19 = sub_41BC(&qword_A2100);
  uint64_t v20 = swift_allocObject(v19, 40LL, 7LL);
  *(_OWORD *)(v20 + 16) = xmmword_6FCA0;
  *(void *)(v20 + 32) = v15;
  v24[0] = v20;
  specialized Array._endMutation()(v20, v21);
  uint64_t v22 = v24[0];
  id v23 = v15;
  sub_3247C(v22);

  swift_bridgeObjectRelease(v22);
LABEL_17:
  sub_32424();
}

uint64_t sub_3214C()
{
  return swift_release(*(void *)(v0 + qword_A19B8));
}

uint64_t sub_3215C()
{
  uint64_t v0 = sub_5CFEC();
  swift_release(*(void *)(v0 + qword_A19B8));
  return swift_deallocClassInstance(v0, 72LL, 7LL);
}

uint64_t sub_32198()
{
  return type metadata accessor for ReadAnnouncementAceViewProvider(0LL);
}

uint64_t sub_321A0(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  os_log_type_t v4 = (void *)swift_task_alloc(a2[1]);
  *(void *)(v2 + 16) = v4;
  *os_log_type_t v4 = v2;
  v4[1] = sub_32204;
  return v6(a1);
}

uint64_t sub_32204()
{
  return sub_6698(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_3222C()
{
  swift_release(*(void *)(v0 + 56));
  return swift_deallocObject(v0, 64LL, 7LL);
}

uint64_t sub_3226C()
{
  return sub_316A8( *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(void *)(v0 + 32),  *(void **)(v0 + 40),  *(uint64_t (**)(void *, void))(v0 + 48),  *(void *)(v0 + 56));
}

uint64_t sub_3227C()
{
  return swift_deallocObject(v0, 56LL, 7LL);
}

uint64_t sub_322B0()
{
  uint64_t v2 = swift_task_alloc(dword_A1A1C);
  __int128 v3 = *(_OWORD *)(v0 + 40);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + sub_423C(v0 + 8) = sub_A65C;
  *(_OWORD *)(v2 + 56) = v3;
  return swift_task_switch(sub_31A50, 0LL, 0LL);
}

uint64_t sub_32310(uint64_t a1)
{
  uint64_t v2 = sub_41BC(&qword_A1A10);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_32350()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_32370(uint64_t a1)
{
  os_log_type_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc(dword_A1A2C);
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_65F0;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_A1A28 + dword_A1A28))(a1, v4);
}

uint64_t sub_323E0()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

void sub_32408( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

uint64_t sub_32414(uint64_t (*a1)(void))
{
  return a1();
}

  ;
}

uint64_t sub_3243C()
{
  return Logger.logObject.getter();
}

BOOL sub_32444(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_32454(void *a1)
{
  return dispatch thunk of DeviceState.isCarPlay.getter(v1, v2);
}

uint64_t sub_32474(uint64_t a1, ...)
{
  return sub_423C((uint64_t *)va);
}

uint64_t sub_3247C(uint64_t a1)
{
  return v1(a1, 0LL);
}

uint64_t sub_32488@<X0>(uint64_t a1@<X8>)
{
  if (v1 >= 0) {
    return _CocoaArrayWrapper.endIndex.getter(a1);
  }
  else {
    return _CocoaArrayWrapper.endIndex.getter(v1);
  }
}

uint64_t type metadata accessor for ReadAnnouncementCATs(uint64_t a1)
{
  uint64_t result = qword_A1A40;
  if (!qword_A1A40) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ReadAnnouncementCATs);
  }
  return result;
}

uint64_t sub_324CC(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL);
}

uint64_t sub_32508()
{
  return sub_100CC(29LL);
}

uint64_t sub_32530()
{
  return sub_100CC(38LL);
}

uint64_t sub_32558(uint64_t a1)
{
  uint64_t v2 = sub_41BC(&qword_A13C0);
  __chkstk_darwin(v2);
  sub_9298();
  uint64_t v5 = v4 - v3;
  uint64_t v6 = sub_41BC(&qword_A1A90);
  uint64_t v7 = swift_allocObject(v6, 80LL, 7LL);
  *(_OWORD *)(v7 + 16) = xmmword_6FA70;
  os_log_type_t v8 = (void *)(v7 + 48);
  strcpy((char *)(v7 + 32), "announcerName");
  *(_WORD *)(v7 + 46) = -4864;
  sub_32840(a1, v5, &qword_A13C0);
  uint64_t v9 = type metadata accessor for SpeakableString(0LL);
  if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v5, 1LL, v9) == 1)
  {
    sub_5F64(v5, &qword_A13C0);
    *(_OWORD *)os_log_type_t v8 = 0u;
    *(_OWORD *)(v7 + 64) = 0u;
  }

  else
  {
    *(void *)(v7 + 72) = v9;
    uint64_t v10 = sub_A800(v8);
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32LL))(v10, v5, v9);
  }

  dispatch thunk of CATWrapper.execute(catId:parameters:completion:)(0xD000000000000025LL);
  return swift_bridgeObjectRelease(v7);
}

uint64_t sub_326BC()
{
  return sub_100CC(43LL);
}

uint64_t sub_326E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_32734(a1, a2, a3);
}

uint64_t sub_32734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CATOption(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  sub_9298();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = sub_41BC(&qword_A06E8);
  __chkstk_darwin(v11);
  sub_9298();
  uint64_t v14 = v13 - v12;
  sub_32840(a1, v13 - v12, &qword_A06E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v10, a2, v6);
  uint64_t v15 = CATWrapper.init(templateDir:options:globals:)(v14, v10, a3);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a2, v6);
  sub_5F64(a1, &qword_A06E8);
  return v15;
}

uint64_t sub_32838()
{
  return type metadata accessor for ReadAnnouncementCATs(0LL);
}

uint64_t sub_32840(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_41BC(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16LL))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for ReadAnnouncementCATsSimple(uint64_t a1)
{
  uint64_t result = qword_A1A98;
  if (!qword_A1A98) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ReadAnnouncementCATsSimple);
  }
  return result;
}

uint64_t sub_328BC(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL);
}

uint64_t sub_328F8()
{
  uint64_t v1 = (void *)sub_32E1C((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_10828;
  sub_10868();
  unint64_t v2 = sub_32E3C(48LL);
  return sub_32E30(v2, v3, v4, v5);
}

uint64_t sub_32950()
{
  uint64_t v1 = (void *)sub_32E1C((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_10828;
  sub_10868();
  unint64_t v2 = sub_32E3C(29LL);
  return sub_32E30(v2, v3, v4, v5);
}

uint64_t sub_329A8()
{
  uint64_t v1 = (void *)sub_32E1C((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_10828;
  sub_10868();
  unint64_t v2 = sub_32E3C(38LL);
  return sub_32E30(v2, v3, v4, v5);
}

uint64_t sub_32A00(uint64_t a1)
{
  void v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = sub_41BC(&qword_A13C0);
  v2[4] = swift_task_alloc((*(void *)(*(void *)(v3 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_32A5C, 0LL, 0LL);
}

uint64_t sub_32A5C()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[2];
  uint64_t v3 = sub_41BC(&qword_A1A90);
  uint64_t v4 = swift_allocObject(v3, 80LL, 7LL);
  v0[5] = v4;
  *(_OWORD *)(v4 + 16) = xmmword_6FA70;
  uint64_t v5 = (void *)(v4 + 48);
  strcpy((char *)(v4 + 32), "announcerName");
  *(_WORD *)(v4 + 46) = -4864;
  sub_32840(v2, v1, &qword_A13C0);
  uint64_t v6 = type metadata accessor for SpeakableString(0LL);
  int v7 = _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v1, 1LL, v6);
  uint64_t v8 = v0[4];
  if (v7 == 1)
  {
    sub_5F64(v0[4], &qword_A13C0);
    *(_OWORD *)uint64_t v5 = 0u;
    *(_OWORD *)(v4 + 64) = 0u;
  }

  else
  {
    *(void *)(v4 + 72) = v6;
    uint64_t v9 = sub_A800(v5);
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL))(v9, v8, v6);
  }

  uint64_t v10 = (void *)sub_32E1C((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  v0[6] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_32BA4;
  sub_10868();
  return v12(0xD000000000000025LL);
}

uint64_t sub_32BA4(uint64_t a1)
{
  uint64_t v4 = *(void *)(*v2 + 48);
  uint64_t v5 = *v2;
  *(void *)(v5 + 56) = v1;
  swift_task_dealloc(v4);
  if (v1) {
    return swift_task_switch(sub_32C38, 0LL, 0LL);
  }
  uint64_t v7 = *(void *)(v5 + 32);
  swift_bridgeObjectRelease(*(void *)(v5 + 40));
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(uint64_t))(v5 + 8))(a1);
}

uint64_t sub_32C38()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRelease(*(void *)(v0 + 40));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_32C74()
{
  uint64_t v1 = (void *)sub_32E1C((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_F5FC;
  sub_10868();
  unint64_t v2 = sub_32E3C(43LL);
  return sub_32E30(v2, v3, v4, v5);
}

uint64_t sub_32CCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_32D10(a1, a2, a3);
}

uint64_t sub_32D10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CATOption(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  sub_9298();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = sub_41BC(&qword_A06E8);
  __chkstk_darwin(v11);
  sub_9298();
  uint64_t v14 = v13 - v12;
  sub_32840(a1, v13 - v12, &qword_A06E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v10, a2, v6);
  uint64_t v15 = CATWrapperSimple.init(templateDir:options:globals:)(v14, v10, a3);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a2, v6);
  sub_5F64(a1, &qword_A06E8);
  return v15;
}

uint64_t sub_32E14()
{
  return type metadata accessor for ReadAnnouncementCATsSimple(0LL);
}

uint64_t sub_32E1C@<X0>(uint64_t a1@<X8>)
{
  return swift_task_alloc(*(unsigned int *)(a1 + 4));
}

uint64_t sub_32E30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

unint64_t sub_32E3C(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000LL;
}

BOOL sub_32E48()
{
  uint64_t v0 = type metadata accessor for Parse(0LL);
  uint64_t v1 = __chkstk_darwin(v0);
  Input.parse.getter(v1);
  uint64_t v2 = sub_9508();
  int v4 = v3(v2);
  int v5 = enum case for Parse.directInvocation(_:);
  if (v4 == enum case for Parse.directInvocation(_:))
  {
    if (qword_9F820 != -1) {
      swift_once(&qword_9F820, sub_17ADC);
    }
    uint64_t v6 = type metadata accessor for Logger(0LL);
    uint64_t v7 = sub_4870(v6, (uint64_t)qword_A3EB0);
    uint64_t v8 = (os_log_s *)Logger.logObject.getter(v7);
    os_log_type_t v9 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)sub_A968();
      *(_WORD *)uint64_t v10 = 0;
      sub_1BE98(&dword_0, v8, v9, "#ReadAnnouncementFlow handling direct invocation.", v10);
      sub_48D4((uint64_t)v10);
    }
  }

  uint64_t v11 = sub_9508();
  v12(v11);
  return v4 == v5;
}

uint64_t sub_32F94()
{
  uint64_t AnnouncementFlow = type metadata accessor for ReadAnnouncementFlow(0LL);
  sub_A880(&qword_A0310, type metadata accessor for ReadAnnouncementFlow, (uint64_t)&unk_72CB0);
  uint64_t v1 = sub_9508();
  return Flow.deferToExecuteAsync(_:)(v1, v2, AnnouncementFlow, v3);
}

uint64_t sub_33004(uint64_t a1)
{
  v2[29] = a1;
  v2[30] = v1;
  uint64_t v3 = type metadata accessor for CATOption(0LL);
  v2[31] = sub_A8C8(*(void *)(*(void *)(v3 - 8) + 64LL));
  uint64_t v4 = sub_41BC(&qword_A1C10);
  v2[32] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v2[33] = v5;
  unint64_t v6 = (*(void *)(v5 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[34] = swift_task_alloc(v6);
  v2[35] = swift_task_alloc(v6);
  uint64_t v7 = type metadata accessor for Parse(0LL);
  v2[36] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v2[37] = v8;
  v2[38] = sub_A8C8(*(void *)(v8 + 64));
  return swift_task_switch(sub_330B0, 0LL, 0LL);
}

uint64_t sub_330B0()
{
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v1 = type metadata accessor for Logger(0LL);
  uint64_t v2 = sub_4870(v1, (uint64_t)qword_A3EB0);
  *(void *)(v0 + 3sub_423C(v0 + 12) = v2;
  uint64_t v3 = (os_log_s *)Logger.logObject.getter(v2);
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)sub_A968();
    *(_WORD *)uint64_t v5 = 0;
    sub_1BE98(&dword_0, v3, v4, "#ReadAnnouncementFlow executeRCH with async producers", v5);
    sub_48D4((uint64_t)v5);
  }

  uint64_t v6 = *(void *)(v0 + 240);

  sub_A798(v6 + 64, v0 + 16);
  sub_A798(v6 + 16, v0 + 56);
  static SiriKitEventSender.current.getter((void *)(v0 + 96));
  uint64_t v7 = *(void *)(v0 + 40);
  uint64_t v8 = sub_A7D8(v0 + 16, v7);
  uint64_t v9 = *(void *)(v7 - 8);
  uint64_t v10 = sub_A8C8(*(void *)(v9 + 64));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v10, v8, v7);
  uint64_t v11 = type metadata accessor for SharedGlobals(0LL);
  *(void *)(v0 + 160) = v11;
  *(void *)(v0 + 16sub_423C(v0 + 8) = &off_977A0;
  uint64_t v12 = sub_A800((void *)(v0 + 136));
  sub_A83C(v10, (uint64_t)v12);
  uint64_t AnnouncementFlowStrategy = type metadata accessor for ReadAnnouncementFlowStrategy();
  uint64_t v14 = (void *)swift_allocObject(AnnouncementFlowStrategy, 136LL, 7LL);
  *(void *)(v0 + 320) = v14;
  uint64_t v15 = *(void *)(v0 + 160);
  uint64_t v16 = sub_A7D8(v0 + 136, v15);
  uint64_t v17 = *(void *)(v15 - 8);
  uint64_t v18 = sub_A8C8(*(void *)(v17 + 64));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v18, v16, v15);
  v14[5] = v11;
  v14[6] = &off_977A0;
  uint64_t v19 = sub_A800(v14 + 2);
  sub_A83C(v18, (uint64_t)v19);
  sub_A780((__int128 *)(v0 + 56), (uint64_t)(v14 + 7));
  sub_A780((__int128 *)(v0 + 96), (uint64_t)(v14 + 12));
  sub_423C((void *)(v0 + 136));
  swift_task_dealloc(v18);
  sub_423C((void *)(v0 + 16));
  uint64_t v20 = swift_task_dealloc(v10);
  Input.parse.getter(v20);
  uint64_t v21 = (void *)swift_task_alloc(dword_A1C74);
  *(void *)(v0 + 32sub_423C(v0 + 8) = v21;
  *uint64_t v21 = v0;
  v21[1] = sub_33324;
  return sub_33EF8(*(void *)(v0 + 304), 0LL);
}

uint64_t sub_33324(uint64_t a1)
{
  os_log_type_t v4 = *(void **)v2;
  uint64_t v5 = *(void *)(*(void *)v2 + 328LL);
  *(void *)(*(void *)v2 + 336LL) = v1;
  swift_task_dealloc(v5);
  uint64_t v7 = v4[37];
  uint64_t v6 = v4[38];
  uint64_t v8 = v4[36];
  if (v1)
  {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    uint64_t v9 = sub_3369C;
  }

  else
  {
    v4[43] = a1;
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    uint64_t v9 = sub_333B0;
  }

  return swift_task_switch(v9, 0LL, 0LL);
}

uint64_t sub_333B0()
{
  uint64_t v35 = *(void *)(v0 + 320);
  uint64_t v36 = *(void **)(v0 + 344);
  uint64_t v1 = *(void *)(v0 + 280);
  uint64_t v33 = *(void *)(v0 + 264);
  uint64_t v34 = *(void *)(v0 + 272);
  uint64_t v2 = *(void *)(v0 + 240) + 64LL;
  uint64_t v32 = (void *)v2;
  uint64_t v3 = *(void *)(v0 + 240);
  uint64_t v30 = *(void *)(v0 + 256);
  uint64_t v31 = v3;
  uint64_t v28 = sub_7B50(0LL, &qword_A1C18, &OBJC_CLASS___INReadAnnouncementIntent_ptr);
  uint64_t v27 = sub_7B50(0LL, &qword_A1C20, &OBJC_CLASS___INReadAnnouncementIntentResponse_ptr);
  RCHChildFlowProducersAsync.init()(v28, v27);
  uint64_t v4 = *(void *)(v3 + 56);
  sub_A798(v2, v0 + 176);
  type metadata accessor for ReadAnnouncementCATsSimple(0LL);
  uint64_t v5 = swift_retain(v4);
  static CATOption.defaultMode.getter(v5);
  uint64_t v6 = sub_172D4();
  uint64_t v7 = type metadata accessor for HomeCommunicationDisplayTextCATsSimple(0LL);
  static CATOption.defaultMode.getter(v7);
  uint64_t v8 = sub_172D4();
  uint64_t v9 = *(void *)(v0 + 200);
  uint64_t v10 = sub_A7D8(v0 + 176, v9);
  uint64_t v11 = *(void *)(v9 - 8);
  uint64_t v12 = sub_A8C8(*(void *)(v11 + 64));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v12, v10, v9);
  uint64_t v29 = sub_33A3C(v4, v12, v6, v8);
  sub_423C((void *)(v0 + 176));
  swift_task_dealloc(v12);
  *(void *)(v0 + 216) = v29;
  uint64_t AnnouncementIntentHandledStrategy = type metadata accessor for ReadAnnouncementIntentHandledStrategy(0LL);
  sub_A880(&qword_A1C28, type metadata accessor for ReadAnnouncementIntentHandledStrategy, (uint64_t)&unk_72F90);
  uint64_t v15 = static RCHChildFlowFactoryHelper.makeHandleIntentFlowProducer<A>(strategy:)( v0 + 216,  AnnouncementIntentHandledStrategy,  v14);
  RCHChildFlowProducersAsync.handleIntentFlowProducer.setter(v15);
  uint64_t v16 = static RCHChildFlowFactoryHelper.makeAppResolutionFlowProducer<A, B>(app:)(v4, v28, v27);
  RCHChildFlowProducersAsync.appResolutionFlowProducer.setter(v16);
  uint64_t v17 = sub_9508();
  v18(v17);
  uint64_t v19 = sub_41BC(&qword_A1C30);
  swift_allocObject(v19, *(unsigned int *)(v19 + 48), *(unsigned __int16 *)(v19 + 52));
  uint64_t v20 = RCHChildFlowFactory.init(producers:)(v34);
  uint64_t v21 = sub_8504(v32, *(void *)(v31 + 88));
  sub_8504(v21 + 2, v21[5]);
  uint64_t v22 = sub_5EDC0(v35, v20, v4, (uint64_t)v36);
  *(void *)(v0 + 224) = v22;
  uint64_t v23 = sub_41BC(&qword_A1C38);
  unint64_t v24 = sub_33B34();
  uint64_t v25 = Flow.eraseToAnyFlow()(v23, v24);
  swift_release(v22);
  static ExecuteResponse.complete(next:)(v25);
  swift_release(v25);
  swift_release(v20);
  swift_release(v29);

  swift_release(v35);
  (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v1, v30);
  sub_33B78();
  swift_task_dealloc(v25);
  swift_task_dealloc(v1);
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_3369C()
{
  uint64_t v1 = swift_release(*(void *)(v0 + 320));
  uint64_t v2 = (os_log_s *)Logger.logObject.getter(v1);
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)sub_A968();
    *(_WORD *)uint64_t v4 = 0;
    sub_1BE98(&dword_0, v2, v3, "#ReadAnnouncementFlow Error thrown while creating RCH flow", v4);
    sub_48D4((uint64_t)v4);
  }

  uint64_t v5 = *(void *)(v0 + 336);
  uint64_t v6 = *(void *)(v0 + 232);

  static ExecuteResponse.complete()();
  swift_errorRelease(v5);
  sub_33B78();
  swift_task_dealloc(v2);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_33760()
{
  uint64_t v1 = (char *)v0 + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin20ReadAnnouncementFlow_input;
  uint64_t v2 = type metadata accessor for Input(0LL);
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8LL))(v1, v2);
  sub_AA5C();
}

uint64_t sub_337B8()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_337DC()
{
  return type metadata accessor for ReadAnnouncementFlow(0LL);
}

uint64_t type metadata accessor for ReadAnnouncementFlow(uint64_t a1)
{
  uint64_t result = qword_A1B40;
  if (!qword_A1B40) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ReadAnnouncementFlow);
  }
  return result;
}

uint64_t sub_3381C(uint64_t a1)
{
  v4[0] = "(";
  v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  void v4[2] = "(";
  uint64_t result = type metadata accessor for Input(319LL);
  if (v3 <= 0x3F)
  {
    void v4[3] = *(void *)(result - 8) + 64LL;
    uint64_t result = swift_updateClassMetadata2(a1, 256LL, 4LL, v4, a1 + 80);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

BOOL sub_338A4()
{
  return sub_32E48();
}

uint64_t sub_338BC()
{
  return sub_32F94();
}

uint64_t sub_338DC(uint64_t a1)
{
  unint64_t v3 = (void *)swift_task_alloc(dword_A1B54);
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_A65C;
  return sub_33004(a1);
}

uint64_t sub_33930(uint64_t a1, uint64_t a2)
{
  uint64_t AnnouncementFlow = type metadata accessor for ReadAnnouncementFlow(0LL);
  return Flow<>.exitValue.getter(AnnouncementFlow, a2);
}

void *sub_33958(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10 = type metadata accessor for DialogPhase(0LL);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = type metadata accessor for SharedGlobals(0LL);
  uint64_t v19 = &off_977A0;
  uint64_t v13 = sub_A800(&v17);
  uint64_t v14 = sub_A83C(a2, (uint64_t)v13);
  static DialogPhase.completion.getter(v14);
  OutputGenerationManifest.init(dialogPhase:_:)(v12, sub_A45C, 0LL);
  a5[2] = a1;
  sub_A780(&v17, (uint64_t)(a5 + 3));
  a5[8] = a3;
  a5[9] = a4;
  return a5;
}

void *sub_33A3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v19 = type metadata accessor for SharedGlobals(0LL);
  uint64_t v20 = &off_977A0;
  uint64_t v8 = sub_A800(v18);
  sub_A83C(a2, (uint64_t)v8);
  uint64_t AnnouncementIntentHandledStrategy = type metadata accessor for ReadAnnouncementIntentHandledStrategy(0LL);
  uint64_t v10 = (void *)swift_allocObject( AnnouncementIntentHandledStrategy,  *(unsigned int *)(AnnouncementIntentHandledStrategy + 48),  *(unsigned __int16 *)(AnnouncementIntentHandledStrategy + 52));
  uint64_t v11 = sub_A7D8((uint64_t)v18, v19);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v18[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *))(v14 + 16))(v13);
  uint64_t v15 = sub_33958(a1, (uint64_t)v13, a3, a4, v10);
  sub_423C(v18);
  return v15;
}

unint64_t sub_33B34()
{
  unint64_t result = qword_A1C40;
  if (!qword_A1C40)
  {
    uint64_t v1 = sub_8564(&qword_A1C38);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for AnyValueFlow<A>, v1);
    atomic_store(result, (unint64_t *)&qword_A1C40);
  }

  return result;
}

uint64_t sub_33B78()
{
  return swift_task_dealloc(*(void *)(v0 + 304));
}

uint64_t sub_33B88(os_log_s *a1)
{
  uint64_t v2 = type metadata accessor for Parse.DirectInvocation(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v28 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for Parse(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v9 = type metadata accessor for Logger(0LL);
  uint64_t v10 = (os_log_s *)sub_4870(v9, (uint64_t)qword_A3EB0);
  Logger.logObject.getter(v10);
  os_log_type_t v11 = sub_A9E8();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)sub_A968();
    uint64_t v27 = v6;
    uint64_t v13 = (uint64_t)v12;
    *(_WORD *)uint64_t v12 = 0;
    sub_1BE98(&dword_0, v10, v11, "#ReadAnnouncementFlowStrategy.actionForInput() handling", v12);
    uint64_t v6 = v27;
    sub_48D4(v13);
  }

  Input.parse.getter(v14);
  if ((*(unsigned int (**)(char *, uint64_t))(v6 + 88))(v8, v5) == enum case for Parse.directInvocation(_:))
  {
    (*(void (**)(char *, uint64_t))(v6 + 96))(v8, v5);
    uint64_t v15 = v28;
    uint64_t v16 = (*(uint64_t (**)(char *, char *, uint64_t))(v3 + 32))(v28, v8, v2);
    uint64_t v17 = Parse.DirectInvocation.identifier.getter(v16);
    uint64_t v19 = v18;
    if (v17 == 0xD000000000000036LL && v18 == (os_log_s *)0x8000000000076510LL)
    {
      swift_bridgeObjectRelease(0x8000000000076510LL);
    }

    else
    {
      LOBYTE(v5) = _stringCompareWithSmolCheck(_:_:expecting:)( v17,  v18,  0xD000000000000036LL,  0x8000000000076510LL,  0LL);
      swift_bridgeObjectRelease(v19);
      if ((v5 & 1) == 0)
      {
        sub_346D4();
        os_log_type_t v25 = sub_A9E8();
        if (sub_2F45C(v25))
        {
          uint64_t v26 = (uint8_t *)sub_A968();
          *(_WORD *)uint64_t v26 = 0;
          sub_1BE98( &dword_0,  v19,  (os_log_type_t)v5,  "#ReadAnnouncementFlowStrategy the action is not a read direct invocation. Ignoring to let layer above handle this.",  v26);
          sub_48D4((uint64_t)v26);
        }

        static ActionForInput.ignore()();
        return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v15, v2);
      }
    }

    sub_346D4();
    os_log_type_t v23 = sub_A9E8();
    if (sub_2F45C(v23))
    {
      unint64_t v24 = (uint8_t *)sub_A968();
      *(_WORD *)unint64_t v24 = 0;
      sub_1BE98( &dword_0,  v19,  (os_log_type_t)v5,  "#ReadAnnouncementFlowStrategy user tapped the play button. Handling direct invocation.",  v24);
      sub_48D4((uint64_t)v24);
    }

    static ActionForInput.handle()();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v15, v2);
  }

  sub_346D4();
  os_log_type_t v20 = sub_A9E8();
  if (os_log_type_enabled(a1, v20))
  {
    uint64_t v21 = (uint8_t *)sub_A968();
    *(_WORD *)uint64_t v21 = 0;
    sub_1BE98( &dword_0,  a1,  v20,  "#ReadAnnouncementFlowStrategy the action is not a direct invocation. Ignoring to let layer above handle this.",  v21);
    sub_48D4((uint64_t)v21);
  }

  static ActionForInput.ignore()();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_33EF8(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 16) = a2;
  *(void *)(v3 + 24) = v2;
  return swift_task_switch(sub_33F10, 0LL, 0LL);
}

uint64_t sub_33F10()
{
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v1 = type metadata accessor for Logger(0LL);
  uint64_t v2 = (os_log_s *)sub_4870(v1, (uint64_t)qword_A3EB0);
  Logger.logObject.getter(v2);
  os_log_type_t v3 = sub_A9E8();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)sub_A968();
    *(_WORD *)uint64_t v4 = 0;
    sub_1BE98(&dword_0, v2, v3, "#ReadAnnouncementFlowStrategy makeIntentFromParse() called", v4);
    sub_48D4((uint64_t)v4);
  }

  uint64_t v5 = *(void *)(v0 + 16);

  uint64_t v6 = *(void **)(v0 + 16);
  if (v5)
  {
    uint64_t v25 = *(void *)(v0 + 16);
  }

  else
  {
    id v7 = objc_allocWithZone(&OBJC_CLASS___INReadAnnouncementIntent);
    sub_39904(1LL, 0LL, 0LL, 1LL);
    uint64_t v25 = v8;
  }

  uint64_t v9 = *(void **)(v0 + 24);
  uint64_t v10 = v9[15];
  uint64_t v24 = v9[16];
  sub_8504(v9 + 12, v10);
  type metadata accessor for SiriKitEvent(0LL);
  uint64_t v11 = v9[10];
  uint64_t v12 = v9[11];
  sub_8504(v9 + 7, v11);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 16);
  id v14 = v6;
  char v15 = v13(v11, v12);
  sub_178BC(v15);
  uint64_t v17 = v16;
  id v18 = [v16 _className];

  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  uint64_t v21 = v20;

  swift_retain(v9);
  uint64_t v22 = SiriKitEvent.__allocating_init(stateType:taskType:statusReason:_:)(131LL, v19, v21, 31LL, sub_346C8, v9);
  dispatch thunk of SiriKitEventSending.send(_:)(v22, v10, v24);
  swift_release(v22);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v25);
}

uint64_t sub_3410C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_17FA4((void *)(a2 + 56));
  return dispatch thunk of SiriKitEvent.SiriKitEventBuilder.domainContext.setter(v2);
}

void *sub_34134()
{
  return v0;
}

uint64_t sub_34160()
{
  return swift_deallocClassInstance(v0, 136LL, 7LL);
}

uint64_t type metadata accessor for ReadAnnouncementFlowStrategy()
{
  return objc_opt_self(&OBJC_CLASS____TtC35HomeCommunicationFlowDelegatePlugin28ReadAnnouncementFlowStrategy);
}

uint64_t sub_341A0(os_log_s *a1)
{
  return sub_33B88(a1);
}

uint64_t sub_341B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)swift_task_alloc(dword_A1C74);
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_34204;
  return sub_33EF8((uint64_t)v4, a2);
}

uint64_t sub_34204(uint64_t a1)
{
  uint64_t v4 = sub_6678();
  if (!v1) {
    uint64_t v4 = a1;
  }
  return (*(uint64_t (**)(uint64_t))(v2 + 8))(v4);
}

uint64_t sub_3423C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AnnouncementFlowStrategy = type metadata accessor for ReadAnnouncementFlowStrategy();
  return RCHFlowStrategyAsync.makeParameterMetadata(intent:)(a1, AnnouncementFlowStrategy, a3);
}

uint64_t sub_34274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc(async function pointer to RCHFlowStrategyAsync.makeErrorResponse(error:)[1]);
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_346D0;
  return RCHFlowStrategyAsync.makeErrorResponse(error:)(a1, a2, a3, a4);
}

uint64_t sub_342F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_task_alloc(async function pointer to ResolveConfirmFlowStrategyAsync.makeAppDoesNotSupportIntentResponse(app:intent:)[1]);
  *(void *)(v5 + 16) = v10;
  uint64_t AnnouncementFlowStrategy = type metadata accessor for ReadAnnouncementFlowStrategy();
  *uint64_t v10 = v5;
  v10[1] = sub_346D0;
  return ResolveConfirmFlowStrategyAsync.makeAppDoesNotSupportIntentResponse(app:intent:)( a1,  a2,  a3,  AnnouncementFlowStrategy,  a5);
}

uint64_t sub_34374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_task_alloc(async function pointer to ResolveConfirmFlowStrategyAsync.makeAppNotFoundOnDeviceResponse(app:intent:)[1]);
  *(void *)(v5 + 16) = v10;
  uint64_t AnnouncementFlowStrategy = type metadata accessor for ReadAnnouncementFlowStrategy();
  *uint64_t v10 = v5;
  v10[1] = sub_346D0;
  return ResolveConfirmFlowStrategyAsync.makeAppNotFoundOnDeviceResponse(app:intent:)( a1,  a2,  a3,  AnnouncementFlowStrategy,  a5);
}

uint64_t sub_343F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_task_alloc(async function pointer to ResolveConfirmFlowStrategyAsync.makeDeviceIncompatibleResponse(app:intent:)[1]);
  *(void *)(v5 + 16) = v10;
  uint64_t AnnouncementFlowStrategy = type metadata accessor for ReadAnnouncementFlowStrategy();
  *uint64_t v10 = v5;
  v10[1] = sub_346D0;
  return ResolveConfirmFlowStrategyAsync.makeDeviceIncompatibleResponse(app:intent:)( a1,  a2,  a3,  AnnouncementFlowStrategy,  a5);
}

uint64_t sub_3447C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = (void *)swift_task_alloc(async function pointer to ResolveConfirmFlowStrategyAsync.makeErrorResponse(error:app:intent:)[1]);
  *(void *)(v6 + 16) = v12;
  uint64_t AnnouncementFlowStrategy = type metadata accessor for ReadAnnouncementFlowStrategy();
  *uint64_t v12 = v6;
  v12[1] = sub_A65C;
  return ResolveConfirmFlowStrategyAsync.makeErrorResponse(error:app:intent:)( a1,  a2,  a3,  a4,  AnnouncementFlowStrategy,  a6);
}

uint64_t sub_34510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = (void *)swift_task_alloc(async function pointer to RouteConfirmIntentResponseFlowStrategyAsync.makeFailureConfirmingIntentResponse(app:intent:intentResponse:)[1]);
  *(void *)(v6 + 16) = v12;
  uint64_t AnnouncementFlowStrategy = type metadata accessor for ReadAnnouncementFlowStrategy();
  *uint64_t v12 = v6;
  v12[1] = sub_346D0;
  return RouteConfirmIntentResponseFlowStrategyAsync.makeFailureConfirmingIntentResponse(app:intent:intentResponse:)( a1,  a2,  a3,  a4,  AnnouncementFlowStrategy,  a6);
}

uint64_t sub_345A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc(async function pointer to IntentExtensionCommunicatingAsync.makeIntentExecutionBehavior(app:intent:)[1]);
  *(void *)(v4 + 16) = v8;
  uint64_t AnnouncementFlowStrategy = type metadata accessor for ReadAnnouncementFlowStrategy();
  *uint64_t v8 = v4;
  v8[1] = sub_654C;
  return IntentExtensionCommunicatingAsync.makeIntentExecutionBehavior(app:intent:)( a1,  a2,  AnnouncementFlowStrategy,  a4);
}

uint64_t sub_34620()
{
  return sub_3468C(&qword_A1D20, (uint64_t)&unk_72D50);
}

uint64_t sub_34644()
{
  return sub_3468C(qword_A1D28, (uint64_t)&unk_72D80);
}

uint64_t sub_34668()
{
  return sub_3468C(qword_A1D50, (uint64_t)&unk_72DB8);
}

uint64_t sub_3468C(unint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t AnnouncementFlowStrategy = type metadata accessor for ReadAnnouncementFlowStrategy();
    uint64_t result = swift_getWitnessTable(a2, AnnouncementFlowStrategy);
    atomic_store(result, a1);
  }

  return result;
}

uint64_t sub_346C8(uint64_t a1)
{
  return sub_3410C(a1, v1);
}

uint64_t sub_346D4()
{
  return Logger.logObject.getter();
}

unint64_t sub_346DC()
{
  return 0xD000000000000013LL;
}

unint64_t sub_346F8()
{
  return 0xD000000000000016LL;
}

uint64_t sub_34718()
{
  uint64_t v22 = 0LL;
  unint64_t v23 = 0xE000000000000000LL;
  _StringGuts.grow(_:)(104LL);
  sub_34AEC(0xD000000000000025LL, (uint64_t)"ReadAnnouncementIntent(\n    readType=");
  uint64_t v0 = IntentParameter.wrappedValue.getter(&v20);
  sub_34AD8((uint64_t)v0, v1, (uint64_t)&type metadata for ReadActionType, v2, v3, v4, v5, v6, v20, v21, v22);
  sub_34AEC(0xD000000000000021LL, (uint64_t)"\n    startAnnouncementIdentifier=");
  IntentParameter.wrappedValue.getter(&v20);
  uint64_t v7 = sub_41BC(&qword_A1D68);
  v8._uint64_t countAndFlagsBits = String.init<A>(describing:)(&v20, v7);
  object = v8._object;
  String.append(_:)(v8);
  swift_bridgeObjectRelease(object);
  v10._object = (void *)0x8000000000077B70LL;
  v10._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  String.append(_:)(v10);
  uint64_t v11 = IntentParameter.wrappedValue.getter(&v20);
  sub_34AD8((uint64_t)v11, v12, (uint64_t)&type metadata for UserNotificationType, v13, v14, v15, v16, v17, v20, v21, v22);
  v18._uint64_t countAndFlagsBits = 10506LL;
  v18._object = (void *)0xE200000000000000LL;
  String.append(_:)(v18);
  return v22;
}

uint64_t sub_3485C()
{
  return sub_34718();
}

uint64_t destroy for ReadAnnouncementIntent(void *a1)
{
  return swift_release(a1[2]);
}

uint64_t *_s35HomeCommunicationFlowDelegatePlugin22ReadAnnouncementIntentVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[2];
  a1[2] = v5;
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  return a1;
}

uint64_t *assignWithCopy for ReadAnnouncementIntent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  uint64_t v6 = a2[1];
  uint64_t v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  uint64_t v8 = a2[2];
  uint64_t v9 = a1[2];
  a1[2] = v8;
  swift_retain(v8);
  swift_release(v9);
  return a1;
}

void *assignWithTake for ReadAnnouncementIntent(void *a1, uint64_t a2)
{
  uint64_t v4 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  uint64_t v5 = a1[2];
  a1[2] = *(void *)(a2 + 16);
  swift_release(v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReadAnnouncementIntent(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 24))
    {
      LODWORD(vsub_423C(v0 + 2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }

    else
    {
      uint64_t v2 = *a1;
    }
  }

  else
  {
    LODWORD(vsub_423C(v0 + 2) = -1;
  }

  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ReadAnnouncementIntent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + sub_423C(v0 + 8) = 0LL;
    *(void *)(result + 16) = 0LL;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 24) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for ReadAnnouncementIntent()
{
  return &type metadata for ReadAnnouncementIntent;
}

unint64_t sub_34A3C()
{
  unint64_t result = qword_A1D70;
  if (!qword_A1D70)
  {
    unint64_t result = swift_getWitnessTable(&unk_730A4, &type metadata for ReadAnnouncementIntentResponseCode);
    atomic_store(result, (unint64_t *)&qword_A1D70);
  }

  return result;
}

unint64_t sub_34A78(uint64_t a1)
{
  unint64_t result = sub_34A9C();
  *(void *)(a1 + sub_423C(v0 + 8) = result;
  return result;
}

unint64_t sub_34A9C()
{
  unint64_t result = qword_A1D90;
  if (!qword_A1D90)
  {
    unint64_t result = swift_getWitnessTable(&unk_72E98, &type metadata for ReadAnnouncementIntent);
    atomic_store(result, (unint64_t *)&qword_A1D90);
  }

  return result;
}

uint64_t sub_34AD8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  return _print_unlocked<A, B>(_:_:)(&a9, &a11);
}

void sub_34AEC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v2 = (a2 - 32) | 0x8000000000000000LL;
  String.append(_:)(*(Swift::String *)&a1);
}

uint64_t sub_34AFC(uint64_t a1, uint64_t a2)
{
  v3[121] = v2;
  v3[115] = a2;
  v3[109] = a1;
  uint64_t v4 = sub_41BC(&qword_A13C0);
  v3[127] = sub_38350(*(void *)(v4 - 8));
  uint64_t v5 = sub_38584();
  v3[128] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[129] = v6;
  v3[130] = sub_38350(v6);
  sub_38360();
  return sub_382EC(v7, v8, v9);
}

uint64_t sub_34B60()
{
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v2 = sub_1BDD8();
  uint64_t v3 = sub_4870(v2, (uint64_t)qword_A3EB0);
  uint64_t v4 = (os_log_s *)Logger.logObject.getter(v3);
  os_log_type_t v5 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)sub_A968();
    *(_WORD *)uint64_t v6 = 0;
    sub_1BE98(&dword_0, v4, v5, "#ReadAnnouncementIntentHandledStrategy makeIntentHandledResponse", v6);
    sub_48D4((uint64_t)v6);
  }

  uint64_t v7 = v0 + 16;
  uint64_t v8 = v0 + 776;
  uint64_t v9 = *(os_log_s **)(v0 + 920);

  uint64_t v10 = sub_41BC(&qword_A1F18);
  uint64_t v11 = (void *)IntentResolutionRecord.intentResponse.getter(v10);
  uint64_t v61 = v10;
  if (sub_38208(v11))
  {
    sub_38530();
    if (v13) {
      uint64_t v14 = sub_32488(v12);
    }
    else {
      uint64_t v14 = *(void *)(v12 + 16);
    }
    sub_D304();
    BOOL v15 = v14 == 0;
  }

  else
  {
    BOOL v15 = 1;
  }

  uint64_t v16 = (void *)(v0 + 696);
  *(_BYTE *)(v0 + 1140) = v15;
  sub_38434();
  os_log_type_t v17 = sub_A9E8();
  if (sub_383B0(v17))
  {
    Swift::String v18 = (uint8_t *)sub_144F0(8LL);
    *(_DWORD *)Swift::String v18 = 67109120;
    *(_DWORD *)(v0 + 1136) = v15;
    uint64_t v16 = (void *)(v0 + 696);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1136, v0 + 1140, v18 + 4, v18 + 8);
    _os_log_impl( &dword_0,  v9,  v1,  "#ReadAnnouncementIntentHandledStrategy isAnnouncementRecordsNilOrEmpty: %{BOOL}d.",  v18,  8u);
    sub_48D4((uint64_t)v18);
  }

  uint64_t v19 = *(os_log_s **)(v0 + 968);
  uint64_t v20 = sub_385A4((uint64_t)&unk_969C0);
  *(void *)(v0 + 104sub_423C(v0 + 8) = v20;
  *(_BYTE *)(v20 + 16) = v15;
  *(void *)(v20 + 24) = v19;
  swift_retain(v19);
  swift_retain(v20);
  uint64_t v21 = sub_7B50(255LL, &qword_A1F60, &OBJC_CLASS___DialogExecutionResult_ptr);
  swift_asyncLet_begin(v7, 0LL, v21, &unk_A1F70, v20, v8);
  sub_38434();
  os_log_type_t v22 = sub_A9E8();
  if (sub_383B0(v22))
  {
    unint64_t v23 = (_WORD *)sub_A968();
    sub_384E4(v23);
    sub_1BE98( &dword_0,  v19,  v1,  "#ReadAnnouncementIntentHandledStrategy makeCommandsAfterAceViewsForHandleIntentWithUser",  (uint8_t *)v20);
    sub_48D4(v20);
  }

  uint64_t v24 = *(void *)(v0 + 1040);
  uint64_t v25 = *(void *)(v0 + 1032);
  uint64_t v26 = *(void *)(v0 + 1024);
  uint64_t v27 = *(void *)(v0 + 968);

  uint64_t v28 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))( v24,  v27 + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin37ReadAnnouncementIntentHandledStrategy_completionOutputManifest,  v26);
  static Device.current.getter(v16, v28);
  uint64_t v29 = *(uint8_t **)(v0 + 720);
  uint64_t v30 = *(void *)(v0 + 728);
  sub_8504(v16, (uint64_t)v29);
  uint64_t v31 = (os_log_s *)dispatch thunk of DeviceState.isCarPlay.getter(v29, v30);
  sub_423C(v16);
  if ((v31 & 1) != 0)
  {
    uint64_t v32 = *(os_log_s **)(v0 + 920);
    uint64_t v33 = (void *)IntentResolutionRecord.intentResponse.getter(v61);
    if (sub_38208(v33))
    {
      sub_38530();
      uint64_t v36 = v35 ? sub_32488(v34) : *(void *)(v34 + 16);
      sub_D304();
      if (v36)
      {
        if (qword_9F840 != -1) {
          swift_once(&qword_9F840, sub_21A4C);
        }
        uint64_t v37 = static CasinoFactory.makeSendCommandsFromMachineUtterance(machineUtterance:)(qword_A3EE8, qword_A3EF0);
        sub_38434();
        os_log_type_t v38 = sub_A9E8();
        if (sub_383B0(v38))
        {
          uint64_t v39 = (_WORD *)sub_A968();
          sub_384E4(v39);
          sub_1BE98( &dword_0,  v32,  (os_log_type_t)v30,  "#ReadAnnouncementIntentHandledStrategySending stop announcement command in makeCommandsAfterAceViewsForHandl eIntentWithUser().",  v29);
          sub_48D4((uint64_t)v29);
        }

        uint64_t v29 = *(uint8_t **)(v0 + 1040);

        uint64_t v40 = sub_41BC(&qword_A2100);
        uint64_t v41 = sub_D31C(v40);
        *(_OWORD *)(v41 + 16) = xmmword_6FCA0;
        *(void *)(v41 + 3sub_423C(v0 + 2) = v37;
        uint64_t v62 = v41;
        specialized Array._endMutation()(v41, v42);
        OutputGenerationManifest.additionalCommands.setter(v62);
      }
    }

    id v43 = (os_log_s *)sub_38434();
    os_log_type_t v44 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = (_WORD *)sub_A968();
      sub_384E4(v45);
      sub_1BE98( &dword_0,  v43,  v44,  "#ReadAnnouncementIntentHandledStrategy making intent handled output for Carplay",  v29);
      sub_48D4((uint64_t)v29);
    }

    uint64_t v46 = *(void **)(v0 + 920);

    IntentResolutionRecord.intentResponse.getter(v61);
    uint64_t v47 = sub_385B0();

    sub_5CFB4(v47);
    uint64_t v49 = v48;
    sub_18FB8();
    if (v49)
    {
      sub_38500();
      sub_D304();
    }

    uint64_t v52 = v0 + 928;
    uint64_t v57 = sub_3854C();
    sub_3848C(v57);
    uint64_t v58 = sub_41BC(&qword_A2100);
    uint64_t v59 = sub_D31C(v58);
    *(void *)(v0 + 1056) = v59;
    *(_OWORD *)(v59 + 16) = xmmword_6FCA0;
    uint64_t v56 = sub_350A0;
  }

  else
  {
    sub_38434();
    os_log_type_t v50 = sub_A9E8();
    if (sub_2F45C(v50))
    {
      BOOL v51 = (_WORD *)sub_A968();
      sub_384E4(v51);
      sub_1BE98( &dword_0,  v31,  (os_log_type_t)v3,  "#ReadAnnouncementIntentHandledStrategy making intent handled output",  v29);
      sub_48D4((uint64_t)v29);
    }

    uint64_t v52 = v0 + 784;
    uint64_t v53 = sub_384A8();
    *(void *)(v0 + 1096) = v53;
    sub_A8BC(v53);
    *(void *)(v0 + 824) = sub_384BC();
    uint64_t v54 = sub_41BC(&qword_A2100);
    uint64_t v55 = sub_D31C(v54);
    *(void *)(v0 + 1104) = v55;
    *(_OWORD *)(v55 + 16) = xmmword_6FCA0;
    uint64_t v56 = sub_351EC;
  }

  return swift_asyncLet_get_throwing(v7, v8, v56, v52);
}

uint64_t sub_350A0()
{
  *(void *)(v1 + 1064) = v0;
  if (v0) {
    return sub_382E0((uint64_t)sub_35370);
  }
  else {
    return sub_382E0((uint64_t)sub_350C0);
  }
}

uint64_t sub_350C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(v2 + 776);
  sub_383F0(a1, a2, *(void *)(v2 + 1056));
  *(void *)(v2 + 107sub_423C(v0 + 2) = v9;
  uint64_t v4 = dword_A1DFC;
  id v5 = v3;
  uint64_t v6 = (void *)swift_task_alloc(v4);
  *(void *)(v2 + 1080) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_35138;
  return sub_383DC(*(void *)(v2 + 872), *(_BYTE *)(v2 + 1140), v7, 0, v9);
}

uint64_t sub_35138()
{
  uint64_t v3 = *(void *)(v2 + 1080);
  *uint64_t v4 = *v1;
  *(void *)(v2 + 108sub_423C(v0 + 8) = v0;
  swift_task_dealloc(v3);
  sub_18FB8();
  sub_38360();
  return sub_383A4(v5, v6, v7);
}

uint64_t sub_35190()
{
  return sub_3836C();
}

uint64_t sub_351E0()
{
  return sub_382E0((uint64_t)sub_382D0);
}

uint64_t sub_351EC()
{
  *(void *)(v1 + 11sub_423C(v0 + 12) = v0;
  if (v0) {
    return sub_382E0((uint64_t)sub_354D4);
  }
  else {
    return sub_382E0((uint64_t)sub_3520C);
  }
}

uint64_t sub_3520C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)v2[97];
  sub_383F0(a1, a2, v2[138]);
  v2[140] = v8;
  uint64_t v4 = async function pointer to dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)[1];
  id v5 = v3;
  uint64_t v6 = (void *)swift_task_alloc(v4);
  v2[141] = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_35298;
  sub_385C0();
  return sub_3843C();
}

uint64_t sub_35298()
{
  return sub_382EC(v1, v2, v3);
}

uint64_t sub_352D4()
{
  return sub_382F8();
}

uint64_t sub_35328()
{
  return sub_382E0((uint64_t)sub_35334);
}

uint64_t sub_35334()
{
  uint64_t v1 = (uint64_t (*)(void))sub_38410();
  return sub_38328(v1);
}

uint64_t sub_35370()
{
  uint64_t v1 = v0[129];
  uint64_t v2 = v0[127];
  sub_384DC(v0[132]);
  sub_25B54(v2);
  sub_3841C(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  uint64_t v3 = sub_38330();
  return swift_asyncLet_finish(v3, v4, v5, v6);
}

uint64_t sub_353EC()
{
  return sub_382E0((uint64_t)sub_353F8);
}

uint64_t sub_353F8()
{
  return sub_38308(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_35438()
{
  return sub_3836C();
}

uint64_t sub_35488()
{
  return sub_382E0((uint64_t)sub_35494);
}

uint64_t sub_35494()
{
  return sub_38308(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_354D4()
{
  uint64_t v1 = v0[129];
  sub_384DC(v0[138]);
  sub_3841C(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  swift_release(v0[103]);
  sub_38330();
  return sub_3836C();
}

uint64_t sub_35540()
{
  return sub_382E0((uint64_t)sub_3554C);
}

uint64_t sub_3554C()
{
  return sub_38308(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_3558C(uint64_t a1, char a2, uint64_t a3)
{
  *(_BYTE *)(v3 + 96) = a2;
  *(void *)(v3 + 64) = a1;
  *(void *)(v3 + 7sub_423C(v0 + 2) = a3;
  return swift_task_switch(sub_355A8, 0LL, 0LL);
}

uint64_t sub_355A8()
{
  if (*(_BYTE *)(v0 + 96) == 1)
  {
    uint64_t v1 = (void *)swift_task_alloc(dword_A1ABC);
    *(void *)(v0 + 80) = v1;
    sub_38428(v1, (uint64_t)sub_35628);
    return sub_329A8();
  }

  else
  {
    uint64_t v3 = (void *)swift_task_alloc(dword_A1ACC);
    *(void *)(v0 + 8sub_423C(v0 + 8) = v3;
    sub_38428(v3, (uint64_t)sub_35688);
    return sub_32C74();
  }

uint64_t sub_35628(uint64_t a1)
{
  uint64_t v7 = *(void **)v2;
  v7[2] = v2;
  v7[3] = a1;
  v7[4] = v1;
  sub_38318(v7[10]);
  if (v1) {
    return sub_6698(*(uint64_t (**)(void))(v2 + 8));
  }
  sub_38360();
  return sub_382EC(v4, v5, v6);
}

uint64_t sub_3567C()
{
  return sub_38394(*(void *)(v0 + 24));
}

uint64_t sub_35688(uint64_t a1)
{
  uint64_t v7 = *(void **)v2;
  v7[5] = v2;
  void v7[6] = a1;
  v7[7] = v1;
  sub_38318(v7[11]);
  if (v1) {
    return sub_6698(*(uint64_t (**)(void))(v2 + 8));
  }
  sub_38360();
  return sub_382EC(v4, v5, v6);
}

uint64_t sub_356DC()
{
  return sub_38394(*(void *)(v0 + 48));
}

uint64_t sub_356E8(uint64_t a1, uint64_t a2)
{
  v3[121] = v2;
  v3[115] = a2;
  v3[109] = a1;
  uint64_t v4 = sub_41BC(&qword_A13C0);
  v3[127] = sub_38350(*(void *)(v4 - 8));
  uint64_t v5 = sub_41BC(&qword_A1F18);
  v3[128] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[129] = v6;
  uint64_t v7 = *(void *)(v6 + 64);
  v3[130] = v7;
  v3[131] = swift_task_alloc((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_38360();
  return sub_382EC(v8, v9, v10);
}

uint64_t sub_35764()
{
  uint64_t v1 = v0[131];
  uint64_t v2 = v0[130];
  uint64_t v3 = v0[129];
  uint64_t v4 = v0[128];
  uint64_t v5 = v0[121];
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 16))(v1, v0[115], v4);
  uint64_t v6 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = (v6 + 24) & ~v6;
  uint64_t v8 = swift_allocObject(&unk_96998, v7 + v2, v6 | 7);
  v0[132] = v8;
  *(void *)(v8 + 16) = v5;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v8 + v7, v1, v4);
  swift_retain(v5);
  swift_retain(v8);
  uint64_t v9 = sub_7B50(255LL, &qword_A1F60, &OBJC_CLASS___DialogExecutionResult_ptr);
  swift_asyncLet_begin(v0 + 2, 0LL, v9, &unk_A1F58, v8, v0 + 103);
  uint64_t v10 = (void *)swift_task_alloc(dword_A1DEC);
  v0[133] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_3587C;
  return sub_36058();
}

uint64_t sub_3587C()
{
  return sub_382EC(v1, v2, v3);
}

uint64_t sub_358B0(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 720);
  uint64_t v3 = *(void *)(v1 + 728);
  sub_8504((void *)(v1 + 696), v2);
  uint64_t v4 = dispatch thunk of DeviceState.isCarPlay.getter(v2, v3);
  sub_423C((void *)(v1 + 696));
  if ((v4 & 1) != 0)
  {
    uint64_t v5 = (void *)sub_3856C();
    if (sub_38208(v5))
    {
      sub_38530();
      if (v7) {
        uint64_t v8 = sub_32488(v6);
      }
      else {
        uint64_t v8 = *(void *)(v6 + 16);
      }
      sub_D304();
      BOOL v9 = v8 == 0;
    }

    else
    {
      BOOL v9 = 1;
    }

    *(_BYTE *)(v1 + 115sub_423C(v0 + 2) = v9;
    sub_3856C();
    uint64_t v16 = sub_385B0();

    os_log_type_t v17 = sub_5CFB4(v16);
    uint64_t v19 = v18;
    swift_bridgeObjectRelease(v16);
    if (v19)
    {
      sub_38500();
      sub_D304();
      uint64_t v20 = 0LL;
    }

    else
    {
      uint64_t v20 = (os_log_s *)(&dword_0 + 1);
    }

    uint64_t v21 = sub_3854C();
    sub_3848C(v21);
    if (qword_9F820 != -1) {
      swift_once(&qword_9F820, sub_17ADC);
    }
    uint64_t v22 = sub_1BDD8();
    sub_1BE18(v22, (uint64_t)qword_A3EB0);
    os_log_type_t v23 = sub_A9E8();
    if (sub_2F45C(v23))
    {
      uint64_t v24 = (uint8_t *)sub_A968();
      *(_WORD *)uint64_t v24 = 0;
      sub_1BE98( &dword_0,  v20,  v17,  "#ReadAnnouncementIntentHandledStrategy makePreHandleIntentOutput Interstitial for CarPlay",  v24);
      sub_48D4((uint64_t)v24);
    }

    uint64_t v25 = sub_41BC(&qword_A2100);
    uint64_t v26 = sub_D31C(v25);
    *(void *)(v1 + 107sub_423C(v0 + 2) = v26;
    *(_OWORD *)(v26 + 16) = xmmword_6FCA0;
  }

  else
  {
    if (qword_9F820 != -1) {
      swift_once(&qword_9F820, sub_17ADC);
    }
    uint64_t v10 = sub_1BDD8();
    sub_1BE18(v10, (uint64_t)qword_A3EB0);
    os_log_type_t v11 = sub_A9E8();
    if (sub_2F45C(v11))
    {
      uint64_t v12 = (uint8_t *)sub_A968();
      *(_WORD *)uint64_t v12 = 0;
      sub_1BE98( &dword_0,  (os_log_s *)v4,  (os_log_type_t)(v1 - 72),  "#ReadAnnouncementIntentHandledStrategy makePreHandleIntentOutput Interstitial",  v12);
      sub_48D4((uint64_t)v12);
    }

    uint64_t v13 = sub_384A8();
    *(void *)(v1 + 11sub_423C(v0 + 12) = v13;
    sub_A8BC(v13);
    *(void *)(v1 + 776) = sub_384BC();
    uint64_t v14 = sub_41BC(&qword_A2100);
    uint64_t v15 = sub_D31C(v14);
    *(void *)(v1 + 1120) = v15;
    *(_OWORD *)(v15 + 16) = xmmword_6FCA0;
  }

  return sub_384A0();
}

uint64_t sub_35B2C()
{
  *(void *)(v1 + 1080) = v0;
  if (v0) {
    return sub_382E0((uint64_t)sub_35DEC);
  }
  else {
    return sub_382E0((uint64_t)sub_35B4C);
  }
}

uint64_t sub_35B4C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(v2 + 824);
  sub_383F0(a1, a2, *(void *)(v2 + 1072));
  *(void *)(v2 + 108sub_423C(v0 + 8) = v9;
  uint64_t v4 = dword_A1DFC;
  id v5 = v3;
  uint64_t v6 = (void *)swift_task_alloc(v4);
  *(void *)(v2 + 1096) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_35BC4;
  return sub_383DC(*(void *)(v2 + 872), *(_BYTE *)(v2 + 1152), v7, 1, v9);
}

uint64_t sub_35BC4()
{
  uint64_t v3 = *(void *)(v2 + 1096);
  *uint64_t v4 = *v1;
  *(void *)(v2 + 1104) = v0;
  swift_task_dealloc(v3);
  sub_18FB8();
  sub_38360();
  return sub_383A4(v5, v6, v7);
}

uint64_t sub_35C1C()
{
  return sub_382F8();
}

uint64_t sub_35C54()
{
  return sub_382E0((uint64_t)sub_382D4);
}

uint64_t sub_35C60()
{
  *(void *)(v1 + 112sub_423C(v0 + 8) = v0;
  if (v0) {
    return sub_382E0((uint64_t)sub_35F10);
  }
  else {
    return sub_382E0((uint64_t)sub_35C80);
  }
}

uint64_t sub_35C80(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2[140];
  uint64_t v4 = (void *)v2[103];
  *(void *)(v3 + 3sub_423C(v0 + 2) = v4;
  uint64_t v9 = v3;
  specialized Array._endMutation()(a1, a2);
  v2[142] = v9;
  uint64_t v5 = async function pointer to dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)[1];
  id v6 = v4;
  uint64_t v7 = (void *)swift_task_alloc(v5);
  v2[143] = v7;
  void *v7 = v2;
  v7[1] = sub_35D28;
  sub_385C0();
  return sub_3843C();
}

uint64_t sub_35D28()
{
  return sub_382EC(v1, v2, v3);
}

uint64_t sub_35D64()
{
  return sub_382F8();
}

uint64_t sub_35DA4()
{
  return sub_382E0((uint64_t)sub_35DB0);
}

uint64_t sub_35DB0()
{
  uint64_t v1 = (uint64_t (*)(void))sub_38410();
  return sub_38328(v1);
}

uint64_t sub_35DEC()
{
  uint64_t v1 = *(void *)(v0 + 1016);
  sub_384DC(*(void *)(v0 + 1072));
  sub_25B54(v1);
  sub_38330();
  return sub_3836C();
}

uint64_t sub_35E40()
{
  return sub_382E0((uint64_t)sub_35E4C);
}

uint64_t sub_35E4C()
{
  return sub_38308(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_35E8C()
{
  return sub_382F8();
}

uint64_t sub_35EC4()
{
  return sub_382E0((uint64_t)sub_35ED0);
}

uint64_t sub_35ED0()
{
  return sub_38308(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_35F10()
{
  return sub_382F8();
}

uint64_t sub_35F58()
{
  return sub_382E0((uint64_t)sub_35F64);
}

uint64_t sub_35F64()
{
  return sub_38308(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_35FA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v5 = (void *)swift_task_alloc(dword_A1DF4);
  *(void *)(v3 + 24) = v5;
  *uint64_t v5 = v3;
  v5[1] = sub_35FFC;
  return sub_3654C(a3);
}

uint64_t sub_35FFC()
{
  uint64_t v4 = *v3;
  sub_38374(*(void *)(v2 + 24), v5);
  if (v1) {
    return sub_38308(*(uint64_t (**)(void))(v4 + 8));
  }
  *(void *)(v2 + 3sub_423C(v0 + 2) = v0;
  sub_38360();
  return sub_38340(v7, v8, v9);
}

uint64_t sub_3604C()
{
  return sub_38394(*(void *)(v0 + 32));
}

uint64_t sub_36058()
{
  v1[18] = v0;
  uint64_t v2 = type metadata accessor for InputOrigin(0LL);
  v1[19] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v1[20] = v3;
  unint64_t v4 = (*(void *)(v3 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v1[21] = swift_task_alloc(v4);
  v1[22] = swift_task_alloc(v4);
  sub_38360();
  return sub_382EC(v5, v6, v7);
}

uint64_t sub_360BC(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 168);
  uint64_t v2 = *(void *)(v1 + 176);
  uint64_t v4 = *(void *)(v1 + 152);
  uint64_t v5 = *(void *)(v1 + 160);
  static Device.current.getter((void *)(v1 + 16), a1);
  uint64_t v6 = sub_38460();
  dispatch thunk of DeviceState.inputOrigin.getter(v6, v7);
  (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v3, enum case for InputOrigin.clientGenerated(_:), v4);
  char v8 = sub_1E150();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v9(v3, v4);
  v9(v2, v4);
  uint64_t v10 = sub_385B8();
  if ((v8 & 1) != 0)
  {
    static AceService.currentAsync.getter(v10);
    os_log_type_t v11 = (void *)swift_task_alloc(dword_A1F7C);
    *(void *)(v1 + 184) = v11;
    sub_38428(v11, (uint64_t)sub_36370);
    return sub_385CC(v1 + 96);
  }

  else
  {
    if (qword_9F820 != -1) {
      swift_once(&qword_9F820, sub_17ADC);
    }
    uint64_t v13 = *(void *)(v1 + 144);
    uint64_t v14 = sub_1BDD8();
    sub_4870(v14, (uint64_t)qword_A3EB0);
    uint64_t v15 = swift_retain_n(v13, 2LL);
    uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
    os_log_type_t v17 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = *(void *)(v1 + 176);
      uint64_t v29 = *(void *)(v1 + 152);
      uint64_t v31 = *(void *)(v1 + 144);
      os_log_type_t v33 = v17;
      uint64_t v19 = (uint8_t *)sub_144F0(12LL);
      uint64_t v32 = sub_144F0(32LL);
      uint64_t v34 = v32;
      uint64_t v30 = v19;
      *(_DWORD *)uint64_t v19 = 136315138;
      uint64_t v20 = v19 + 12;
      uint64_t v28 = v19 + 4;
      static Device.current.getter((void *)(v1 + 56), v32);
      uint64_t v22 = *(void *)(v1 + 80);
      uint64_t v21 = *(void *)(v1 + 88);
      sub_38598();
      uint64_t v23 = dispatch thunk of DeviceState.inputOrigin.getter(v22, v21);
      uint64_t v24 = InputOrigin.rawValue.getter(v23);
      unint64_t v26 = v25;
      v9(v18, v29);
      sub_423C((void *)(v1 + 56));
      *(void *)(v1 + 136) = sub_68DC4(v24, v26, &v34);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 136, v1 + 144, v28, v20);
      swift_bridgeObjectRelease(v26);
      sub_2F4DC(v31);
      sub_14550( &dword_0,  v16,  v33,  "#ReadAnnouncementIntentHandledStrategy not playing notification sound because inputOrigin is %s",  v30);
      sub_17528(v32, v27, (uint64_t)&type metadata for Any + 8);
      sub_48D4(v32);
      sub_48D4((uint64_t)v30);
    }

    else
    {
      sub_2F4DC(*(void *)(v1 + 144));
    }

    sub_38558();
    sub_AA14();
    return (*(uint64_t (**)(void))(v1 + 8))();
  }

uint64_t sub_36370()
{
  uint64_t v3 = *(void *)(v2 + 184);
  *uint64_t v4 = *v1;
  *(void *)(v2 + 19sub_423C(v0 + 2) = v0;
  swift_task_dealloc(v3);
  sub_385B8();
  sub_38360();
  return sub_383A4(v5, v6, v7);
}

uint64_t sub_363C8()
{
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v3 = sub_1BDD8();
  sub_1BE18(v3, (uint64_t)qword_A3EB0);
  os_log_type_t v4 = sub_A9E8();
  if (sub_AA1C(v4))
  {
    uint64_t v5 = (uint8_t *)sub_A968();
    *(_WORD *)uint64_t v5 = 0;
    sub_1BE98(&dword_0, v1, v0, "#ReadAnnouncementIntentHandledStrategy played notification sound", v5);
    sub_48D4((uint64_t)v5);
  }

  sub_38558();
  sub_AA14();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_3647C()
{
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v1 = sub_1BDD8();
  uint64_t v2 = (os_log_s *)sub_1BE18(v1, (uint64_t)qword_A3EB0);
  os_log_type_t v3 = static os_log_type_t.error.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = *(void *)(v0 + 192);
  if (v4)
  {
    uint64_t v6 = (uint8_t *)sub_A968();
    *(_WORD *)uint64_t v6 = 0;
    sub_1BE98(&dword_0, v2, v3, "#ReadAnnouncementIntentHandledStrategy failed to play notificaiton sound", v6);
    sub_48D4((uint64_t)v6);
  }

  swift_errorRelease(v5);

  sub_38558();
  sub_AA14();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_3654C(uint64_t a1)
{
  v2[10] = a1;
  v2[11] = v1;
  uint64_t v3 = sub_41BC(&qword_A13C0);
  v2[12] = sub_38350(*(void *)(v3 - 8));
  uint64_t v4 = sub_41BC(&qword_A1F18);
  v2[13] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v2[14] = v5;
  v2[15] = sub_38350(v5);
  sub_38360();
  return sub_382EC(v6, v7, v8);
}

uint64_t sub_365B0()
{
  if (qword_9F830 != -1) {
    swift_once(&qword_9F830, sub_18AF0);
  }
  uint64_t v2 = qword_A3EC8;
  if (qword_9F838 != -1) {
    swift_once(&qword_9F838, sub_18C60);
  }
  uint64_t v3 = v0 + 2;
  uint64_t v46 = v0 + 9;
  uint64_t v4 = (void *)sub_39E5C(v2, qword_A3ED0);
  v0[16] = v4;
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v5 = sub_1BDD8();
  uint64_t v6 = (os_log_s *)sub_4870(v5, (uint64_t)qword_A3EB0);
  id v7 = v4;
  os_log_type_t v45 = v6;
  Logger.logObject.getter(v7);
  os_log_type_t v8 = sub_A9E8();
  if (sub_383B0(v8))
  {
    uint64_t v9 = (uint8_t *)sub_144F0(12LL);
    uint64_t v10 = (void *)sub_144F0(8LL);
    *(_DWORD *)uint64_t v9 = 138412290;
    void v0[9] = v7;
    id v11 = v7;
    uint64_t v3 = v0 + 2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v46, v0 + 10, v9 + 4, v9 + 12);
    *uint64_t v10 = v7;

    sub_14550( &dword_0,  v6,  v1,  "#ReadAnnouncementIntentHandledStrategy Submit an ace command to update background context for announcement playback: %@",  v9);
    uint64_t v12 = sub_41BC(&qword_A0F50);
    sub_17528((uint64_t)v10, v13, v12);
    sub_48D4((uint64_t)v10);
    sub_48D4((uint64_t)v9);
  }

  else
  {
  }

  uint64_t v15 = v0[14];
  uint64_t v14 = v0[15];
  uint64_t v16 = v0[13];
  uint64_t v17 = v0[10];
  static AceService.current.getter();
  uint64_t v18 = v0[5];
  uint64_t v19 = v0[6];
  sub_38598();
  dispatch thunk of AceServiceInvoker.submitAndForget(_:)(v7, v18, v19);
  sub_423C(v3);
  uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v14, v17, v16);
  uint64_t v21 = (os_log_s *)Logger.logObject.getter(v20);
  os_log_type_t v22 = static os_log_type_t.debug.getter();
  BOOL v23 = sub_38520(v22);
  uint64_t v24 = v0[13];
  if (v23)
  {
    uint64_t v43 = v0[14];
    unint64_t v25 = (uint8_t *)sub_144F0(12LL);
    uint64_t v44 = sub_144F0(32LL);
    uint64_t v47 = v44;
    *(_DWORD *)unint64_t v25 = 136315138;
    uint64_t v26 = IntentResolutionRecord.app.getter(v24);
    v0[7] = v26;
    uint64_t v27 = type metadata accessor for App(0LL);
    uint64_t v28 = sub_380D0( &qword_A1F48,  (uint64_t (*)(uint64_t))&type metadata accessor for App,  (uint64_t)&protocol conformance descriptor for App);
    uint64_t v29 = dispatch thunk of CustomStringConvertible.description.getter(v27, v28);
    unint64_t v31 = v30;
    swift_release(v26);
    v0[8] = sub_68DC4(v29, v31, &v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 8, v46, v25 + 4, v25 + 12);
    sub_18FB8();
    sub_38510(v43);
    sub_14550( &dword_0,  v21,  v45,  "#ReadAnnouncementIntentHandledStrategy Creating a dialog between Confirm and Handle for playing announcements using app: %s.",  v25);
    sub_17528(v44, v32, (uint64_t)&type metadata for Any + 8);
    sub_48D4(v44);
    sub_48D4((uint64_t)v25);
  }

  else
  {
    sub_38510(v0[14]);
  }

  os_log_type_t v33 = (void *)v0[10];
  IntentResolutionRecord.intentResponse.getter(v0[13]);
  uint64_t v34 = sub_385B0();

  uint64_t v35 = sub_5CFB4(v34);
  uint64_t v37 = v36;
  swift_bridgeObjectRelease(v34);
  if (v37)
  {
    String.toSpeakableString.getter(v35, v37);
    sub_D304();
    uint64_t v38 = 0LL;
  }

  else
  {
    uint64_t v38 = 1LL;
  }

  uint64_t v39 = v0[12];
  uint64_t v40 = type metadata accessor for SpeakableString(0LL);
  _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v39, v38, 1LL, v40);
  uint64_t v41 = (void *)swift_task_alloc(dword_A1AC4);
  v0[17] = v41;
  void *v41 = v0;
  v41[1] = sub_369C8;
  return sub_32A00(v0[12]);
}

uint64_t sub_369C8()
{
  uint64_t v4 = v2[17];
  *uint64_t v5 = *v3;
  v2[18] = v1;
  swift_task_dealloc(v4);
  if (!v1) {
    v2[19] = v0;
  }
  sub_38360();
  return sub_38340(v6, v7, v8);
}

uint64_t sub_36A20()
{
  return (*(uint64_t (**)(void))(v1 + 8))(*(void *)(v1 + 152));
}

uint64_t sub_36A64()
{
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_36AA4(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5)
{
  *(void *)(v6 + 1640) = v5;
  *(void *)(v6 + 159sub_423C(v0 + 2) = a5;
  *(_BYTE *)(v6 + 181sub_423C(v0 + 7) = a4;
  *(_BYTE *)(v6 + 1816) = a2;
  *(void *)(v6 + 1544) = a1;
  uint64_t v7 = sub_38584();
  *(void *)(v6 + 168sub_423C(v0 + 8) = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  *(void *)(v6 + 1736) = v8;
  *(void *)(v6 + 1744) = sub_38350(v8);
  uint64_t v9 = type metadata accessor for CarPlayIntercomControlModel(0LL);
  *(void *)(v6 + 175sub_423C(v0 + 2) = sub_38350(*(void *)(v9 - 8));
  sub_38360();
  return sub_382EC(v10, v11, v12);
}

uint64_t sub_36B0C()
{
  if ((*(_BYTE *)(v2 + 1816) & 1) != 0)
  {
    if (qword_9F820 != -1) {
      swift_once(&qword_9F820, sub_17ADC);
    }
    uint64_t v3 = sub_1BDD8();
    sub_1BE18(v3, (uint64_t)qword_A3EB0);
    os_log_type_t v4 = sub_A9E8();
    if (sub_AA1C(v4))
    {
      uint64_t v5 = (uint8_t *)sub_A968();
      *(_WORD *)uint64_t v5 = 0;
      sub_1BE98( &dword_0,  v1,  (os_log_type_t)v0,  "#ReadAnnouncementIntentHandledStrategy makeCarPlayIntercomSnippetOutput no announcements to play. Not displaying snippet, just dialog",  v5);
      sub_48D4((uint64_t)v5);
    }

    uint64_t v6 = *(void *)(v2 + 1640);

    uint64_t v7 = sub_384A8();
    sub_A8BC(v7);
    *(void *)(v2 + 1496) = sub_384BC();
    uint64_t v8 = v6
       + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin37ReadAnnouncementIntentHandledStrategy_completionOutputManifest;
    uint64_t v9 = (void *)swift_task_alloc(async function pointer to dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)[1]);
    *(void *)(v2 + 180sub_423C(v0 + 8) = v9;
    *uint64_t v9 = v2;
    v9[1] = sub_370D8;
    return dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)( *(void *)(v2 + 1544),  *(void *)(v2 + 1592),  v8,  v7,  &protocol witness table for ResponseFactory);
  }

  else
  {
    if (qword_9F820 != -1) {
      swift_once(&qword_9F820, sub_17ADC);
    }
    uint64_t v11 = sub_1BDD8();
    uint64_t v12 = (os_log_s *)sub_1BE18(v11, (uint64_t)qword_A3EB0);
    os_log_type_t v13 = static os_log_type_t.debug.getter();
    if (sub_38520(v13))
    {
      uint64_t v14 = (_WORD *)sub_A968();
      sub_384E4(v14);
      sub_1BE98( &dword_0,  v12,  (os_log_type_t)v1,  "#ReadAnnouncementIntentHandledStrategy makeCarPlayIntercomSnippetOutput",  v0);
      sub_48D4((uint64_t)v0);
    }

    uint64_t v15 = *(void *)(v2 + 1640);
    char v16 = *(_BYTE *)(v2 + 1817);

    uint64_t v17 = sub_385A4((uint64_t)&unk_96970);
    *(void *)(v2 + 1760) = v17;
    *(_BYTE *)(v17 + 16) = v16;
    *(void *)(v17 + 24) = v15;
    swift_retain(v15);
    swift_retain(v17);
    swift_asyncLet_begin(v2 + 656, 0LL, &type metadata for String, &unk_A1F28, v17, v2 + 1416);
    swift_retain_n(v15, 2LL);
    swift_asyncLet_begin(v2 + 16, 0LL, &type metadata for String, &unk_A1F38, v15, v2 + 1432);
    return sub_384A0();
  }

uint64_t sub_36D74()
{
  v1[221] = v0;
  if (v0)
  {
    sub_38360();
    return sub_38340(v2, v3, v4);
  }

  else
  {
    v1[222] = v1[177];
    uint64_t v6 = v1[178];
    v1[223] = v6;
    swift_bridgeObjectRetain(v6);
    return swift_asyncLet_get_throwing(v1 + 2, v1 + 179, sub_36DF0, v1 + 172);
  }

uint64_t sub_36DF0()
{
  *(void *)(v1 + 179sub_423C(v0 + 2) = v0;
  if (v0) {
    return sub_382E0((uint64_t)sub_371F8);
  }
  else {
    return sub_382E0((uint64_t)sub_36E10);
  }
}

uint64_t sub_36E10()
{
  uint64_t v1 = *(void *)(v0 + 1784);
  uint64_t v2 = *(void *)(v0 + 1776);
  uint64_t v3 = *(void *)(v0 + 1752);
  uint64_t v4 = *(void *)(v0 + 1744);
  uint64_t v5 = *(void *)(v0 + 1736);
  uint64_t v18 = *(void *)(v0 + 1688);
  uint64_t v6 = *(void *)(v0 + 1640);
  uint64_t v7 = *(unsigned __int8 *)(v0 + 1817);
  uint64_t v8 = *(void *)(v0 + 1432);
  uint64_t v9 = *(void *)(v0 + 1440);
  swift_bridgeObjectRetain(v9);
  CarPlayIntercomControlModel.init(playStopText:replyText:isPlaying:)(v2, v1, v8, v9, v7, v10, v11, v12);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))( v4,  v6 + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin37ReadAnnouncementIntentHandledStrategy_completionOutputManifest,  v18);
  OutputGenerationManifest.responseViewId.setter(0xD00000000000002BLL, 0x80000000000761E0LL);
  uint64_t v13 = sub_384A8();
  sub_A8BC(v13);
  *(void *)(v0 + 144sub_423C(v0 + 8) = sub_384BC();
  uint64_t v14 = type metadata accessor for HomeCommunicationSnippetModel(0LL);
  *(void *)(v0 + 1360) = v14;
  *(void *)(v0 + 136sub_423C(v0 + 8) = sub_380D0( &qword_A1F40,  type metadata accessor for HomeCommunicationSnippetModel,  (uint64_t)&protocol conformance descriptor for HomeCommunicationSnippetModel);
  uint64_t v15 = sub_A800((void *)(v0 + 1336));
  sub_8980(v3, (uint64_t)v15);
  swift_storeEnumTagMultiPayload(v15, v14, 1LL);
  char v16 = (void *)swift_task_alloc(async function pointer to dispatch thunk of ResponseGenerating.makeResponseOutput(conversationModel:dialog:outputGenerationManifest:)[1]);
  *(void *)(v0 + 1800) = v16;
  *char v16 = v0;
  v16[1] = sub_36FA4;
  return dispatch thunk of ResponseGenerating.makeResponseOutput(conversationModel:dialog:outputGenerationManifest:)( *(void *)(v0 + 1544),  v0 + 1336,  *(void *)(v0 + 1592),  *(void *)(v0 + 1744),  v13,  &protocol witness table for ResponseFactory);
}

uint64_t sub_36FA4()
{
  uint64_t v1 = (void *)(v0 + 1336);
  sub_38318(*(void *)(v0 + 1800));
  sub_423C(v1);
  sub_38360();
  return sub_382EC(v2, v3, v4);
}

uint64_t sub_36FE4()
{
  uint64_t v1 = v0[219];
  (*(void (**)(void, void))(v0[217] + 8LL))(v0[218], v0[211]);
  sub_89C4(v1);
  swift_release(v0[181]);
  sub_38330();
  return sub_3836C();
}

uint64_t sub_3704C()
{
  return sub_382E0((uint64_t)sub_37058);
}

uint64_t sub_37058()
{
  return sub_382F8();
}

uint64_t sub_37090()
{
  return sub_382E0((uint64_t)sub_3709C);
}

uint64_t sub_3709C()
{
  uint64_t v1 = *(void *)(v0 + 1640);
  sub_2F4DC(*(void *)(v0 + 1760));
  swift_release(v1);
  sub_38578();
  sub_AA14();
  uint64_t v2 = (uint64_t (*)(void))sub_38410();
  return sub_6698(v2);
}

uint64_t sub_370D8()
{
  return sub_382EC(v1, v2, v3);
}

uint64_t sub_3710C()
{
  uint64_t v1 = (uint64_t (*)(void))sub_38410();
  return sub_6698(v1);
}

uint64_t sub_3713C()
{
  return swift_asyncLet_finish(v0 + 16, v0 + 1432, sub_37154, v0 + 1504);
}

uint64_t sub_37154()
{
  return sub_382E0((uint64_t)sub_37160);
}

uint64_t sub_37160()
{
  return sub_382F8();
}

uint64_t sub_37198()
{
  return sub_382E0((uint64_t)sub_371A4);
}

uint64_t sub_371A4()
{
  uint64_t v1 = *(void *)(v0 + 1640);
  sub_2F4DC(*(void *)(v0 + 1760));
  swift_release(v1);
  sub_3838C();
  sub_383D4();
  return sub_38328(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_371F8()
{
  return sub_382F8();
}

uint64_t sub_37238()
{
  return sub_382E0((uint64_t)sub_37244);
}

uint64_t sub_37244()
{
  return sub_382F8();
}

uint64_t sub_3727C()
{
  return sub_382E0((uint64_t)sub_37288);
}

uint64_t sub_37288()
{
  uint64_t v1 = *(void *)(v0 + 1640);
  sub_2F4DC(*(void *)(v0 + 1760));
  swift_release(v1);
  sub_3838C();
  sub_383D4();
  return sub_38328(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_372DC(uint64_t a1, char a2, uint64_t a3)
{
  *(_BYTE *)(v3 + 96) = a2;
  *(void *)(v3 + 64) = a1;
  *(void *)(v3 + 7sub_423C(v0 + 2) = a3;
  return swift_task_switch(sub_372F8, 0LL, 0LL);
}

uint64_t sub_372F8()
{
  if (*(_BYTE *)(v0 + 96) == 1)
  {
    uint64_t v1 = (void *)swift_task_alloc(dword_A07C4);
    *(void *)(v0 + 80) = v1;
    sub_38428(v1, (uint64_t)sub_37378);
    return sub_104AC();
  }

  else
  {
    uint64_t v3 = (void *)swift_task_alloc(dword_A07B4);
    *(void *)(v0 + 8sub_423C(v0 + 8) = v3;
    sub_38428(v3, (uint64_t)sub_3740C);
    return sub_102A4();
  }

uint64_t sub_37378(uint64_t a1)
{
  uint64_t v7 = *(void **)v2;
  v7[2] = v2;
  v7[3] = a1;
  v7[4] = v1;
  sub_38318(v7[10]);
  if (v1) {
    return sub_6698(*(uint64_t (**)(void))(v2 + 8));
  }
  sub_38360();
  return sub_382EC(v4, v5, v6);
}

uint64_t sub_373CC()
{
  uint64_t v3 = *(void **)(v2 + 64);
  dispatch thunk of LabelExecutionResult.subscript.getter();
  sub_38400();
  void *v3 = v0;
  v3[1] = v1;
  uint64_t v4 = (uint64_t (*)(void))sub_38410();
  return sub_38328(v4);
}

uint64_t sub_3740C(uint64_t a1)
{
  uint64_t v7 = *(void **)v2;
  v7[5] = v2;
  void v7[6] = a1;
  v7[7] = v1;
  sub_38318(v7[11]);
  if (v1) {
    return sub_6698(*(uint64_t (**)(void))(v2 + 8));
  }
  sub_38360();
  return sub_382EC(v4, v5, v6);
}

uint64_t sub_37460()
{
  uint64_t v3 = *(void **)(v2 + 64);
  dispatch thunk of LabelExecutionResult.subscript.getter();
  sub_38400();
  void *v3 = v0;
  v3[1] = v1;
  uint64_t v4 = (uint64_t (*)(void))sub_38410();
  return sub_38328(v4);
}

uint64_t sub_374A0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_task_switch(sub_374B8, 0LL, 0LL);
}

uint64_t sub_374B8()
{
  uint64_t v1 = (void *)swift_task_alloc(dword_A07BC);
  *(void *)(v0 + 3sub_423C(v0 + 2) = v1;
  sub_38428(v1, (uint64_t)sub_37500);
  return sub_10384();
}

uint64_t sub_37500()
{
  uint64_t v4 = *v3;
  sub_38374(*(void *)(v2 + 32), v5);
  if (v1) {
    return sub_38308(*(uint64_t (**)(void))(v4 + 8));
  }
  *(void *)(v2 + 40) = v0;
  sub_38360();
  return sub_38340(v7, v8, v9);
}

uint64_t sub_37550()
{
  uint64_t v3 = *(void **)(v2 + 16);
  dispatch thunk of LabelExecutionResult.subscript.getter();
  sub_38400();
  void *v3 = v0;
  v3[1] = v1;
  uint64_t v4 = (uint64_t (*)(void))sub_38410();
  return sub_38328(v4);
}

uint64_t sub_37590(uint64_t a1, uint64_t a2)
{
  v3[19] = a2;
  v3[20] = v2;
  v3[18] = a1;
  uint64_t v4 = type metadata accessor for Locale(0LL);
  v3[21] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[22] = v5;
  v3[23] = sub_38350(v5);
  uint64_t v6 = sub_41BC(&qword_A1F18);
  v3[24] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v3[25] = v7;
  v3[26] = sub_38350(v7);
  sub_38360();
  return sub_382EC(v8, v9, v10);
}

uint64_t sub_375FC()
{
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v2 = v0[25];
  uint64_t v1 = v0[26];
  uint64_t v3 = v0[24];
  uint64_t v4 = v0[19];
  uint64_t v5 = sub_1BDD8();
  sub_4870(v5, (uint64_t)qword_A3EB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  uint64_t v6 = (os_log_s *)sub_38434();
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v9 = v0[24];
  if (v8)
  {
    uint64_t v10 = (uint8_t *)sub_144F0(12LL);
    *(_DWORD *)uint64_t v10 = 134217984;
    uint64_t v11 = (void *)IntentResolutionRecord.intentResponse.getter(v9);
    id v12 = [v11 code];

    sub_384F0();
    v0[17] = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 17, v0 + 18, v10 + 4, v10 + 12);
    sub_14550( &dword_0,  v6,  v7,  "#ReadAnnouncementIntentHandledStrategy makeFailureHandlingIntentResponseAsync reason=%ld",  v10);
    sub_48D4((uint64_t)v10);
  }

  else
  {
    sub_384F0();
  }

  uint64_t v14 = v0[22];
  uint64_t v13 = v0[23];
  uint64_t v15 = v0[21];
  uint64_t v16 = type metadata accessor for RadarUtils();
  uint64_t inited = swift_initStackObject(v16, v0 + 7);
  uint64_t v18 = type metadata accessor for AutoBugCaptureManager(0LL);
  sub_A8BC(v18);
  uint64_t v19 = AutoBugCaptureManager.init(domain:sessionDuration:)(0xD000000000000015LL, 0x80000000000762E0LL, 30.0);
  *(void *)(inited + 16) = v19;
  static Device.current.getter(v0 + 2, v19);
  uint64_t v20 = sub_38460();
  uint64_t v21 = dispatch thunk of DeviceState.siriLocale.getter(v20);
  uint64_t v22 = Locale.identifier.getter(v21);
  uint64_t v24 = v23;
  v0[10] = v22;
  v0[11] = v23;
  v0[12] = 45LL;
  v0[13] = 0xE100000000000000LL;
  v0[14] = 95LL;
  v0[15] = 0xE100000000000000LL;
  unint64_t v25 = sub_CD6C();
  StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( v0 + 12,  v0 + 14,  0LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String,  &type metadata for String,  v25,  v25,  v25);
  uint64_t v27 = v26;
  swift_bridgeObjectRelease(v24);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  sub_30234(1LL, 3);
  swift_release(inited);
  swift_bridgeObjectRelease(v27);
  sub_385B8();
  uint64_t v28 = (void *)swift_task_alloc(dword_A1AB4);
  v0[27] = v28;
  sub_38428(v28, (uint64_t)sub_378AC);
  return sub_32950();
}

uint64_t sub_378AC()
{
  uint64_t v4 = *v3;
  sub_38374(v2[27], v5);
  if (v1)
  {
    swift_task_dealloc(v2[26]);
    sub_3838C();
    return sub_38308(*(uint64_t (**)(void))(v4 + 8));
  }

  else
  {
    v2[28] = v0;
    sub_38360();
    return sub_38340(v7, v8, v9);
  }

uint64_t sub_3790C()
{
  uint64_t v1 = (void *)v0[28];
  uint64_t v2 = v0[20];
  uint64_t v3 = sub_384A8();
  sub_A8BC(v3);
  v0[16] = sub_384BC();
  uint64_t v4 = sub_41BC(&qword_A2100);
  uint64_t v5 = sub_D31C(v4);
  *(_OWORD *)(v5 + 16) = xmmword_6FCA0;
  *(void *)(v5 + 3sub_423C(v0 + 2) = v1;
  uint64_t v15 = v5;
  specialized Array._endMutation()(v5, v6);
  v0[29] = v15;
  uint64_t v7 = v2
     + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin37ReadAnnouncementIntentHandledStrategy_completionOutputManifest;
  uint64_t v8 = async function pointer to dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)[1];
  id v9 = v1;
  uint64_t v10 = (void *)swift_task_alloc(v8);
  v0[30] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_379F0;
  sub_385C0();
  return dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)( v11,  v12,  v7,  v3,  v13);
}

uint64_t sub_379F0()
{
  return sub_382EC(v1, v2, v3);
}

uint64_t sub_37A28()
{
  swift_release(*(void *)(v0 + 128));
  sub_AA14();
  sub_3838C();
  uint64_t v1 = (uint64_t (*)(void))sub_38410();
  return sub_38328(v1);
}

void *sub_37A6C()
{
  uint64_t v1 = (char *)v0
     + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin37ReadAnnouncementIntentHandledStrategy_completionOutputManifest;
  uint64_t v2 = sub_38584();
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8LL))(v1, v2);
  return v0;
}

uint64_t sub_37ACC()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_37AF0()
{
  return type metadata accessor for ReadAnnouncementIntentHandledStrategy(0LL);
}

uint64_t type metadata accessor for ReadAnnouncementIntentHandledStrategy(uint64_t a1)
{
  uint64_t result = qword_A1DC8;
  if (!qword_A1DC8) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ReadAnnouncementIntentHandledStrategy);
  }
  return result;
}

uint64_t sub_37B30(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = "(";
  void v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  void v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  uint64_t result = type metadata accessor for OutputGenerationManifest(319LL);
  if (v3 <= 0x3F)
  {
    void v4[4] = *(void *)(result - 8) + 64LL;
    uint64_t result = swift_updateClassMetadata2(a1, 256LL, 5LL, v4, a1 + 80);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_37BBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc(async function pointer to HandleIntentFlowStrategyAsync.makePromptForDeviceUnlock(rchRecord:)[1]);
  *(void *)(v4 + 16) = v8;
  uint64_t AnnouncementIntentHandledStrategy = type metadata accessor for ReadAnnouncementIntentHandledStrategy(0LL);
  *uint64_t v8 = v4;
  v8[1] = sub_382D8;
  return HandleIntentFlowStrategyAsync.makePromptForDeviceUnlock(rchRecord:)( a1,  a2,  AnnouncementIntentHandledStrategy,  a4);
}

uint64_t sub_37C3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc(async function pointer to HandleIntentFlowStrategyAsync.makeHandoffForAuthenticationResponse(rchRecord:)[1]);
  *(void *)(v4 + 16) = v8;
  uint64_t AnnouncementIntentHandledStrategy = type metadata accessor for ReadAnnouncementIntentHandledStrategy(0LL);
  *uint64_t v8 = v4;
  v8[1] = sub_382D8;
  return HandleIntentFlowStrategyAsync.makeHandoffForAuthenticationResponse(rchRecord:)( a1,  a2,  AnnouncementIntentHandledStrategy,  a4);
}

uint64_t sub_37CBC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc(dword_A1DE4);
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_382D8;
  return sub_356E8(a1, a2);
}

uint64_t sub_37D20(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc(dword_A1DDC);
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_382D8;
  return sub_34AFC(a1, a2);
}

uint64_t sub_37D84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc(async function pointer to HandleIntentFlowStrategyAsync.makeContinueInAppResponse(rchRecord:)[1]);
  *(void *)(v4 + 16) = v8;
  uint64_t AnnouncementIntentHandledStrategy = type metadata accessor for ReadAnnouncementIntentHandledStrategy(0LL);
  *uint64_t v8 = v4;
  v8[1] = sub_382D8;
  return HandleIntentFlowStrategyAsync.makeContinueInAppResponse(rchRecord:)( a1,  a2,  AnnouncementIntentHandledStrategy,  a4);
}

uint64_t sub_37E04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc(async function pointer to HandleIntentFlowStrategyAsync.makeInProgressResponse(rchRecord:)[1]);
  *(void *)(v4 + 16) = v8;
  uint64_t AnnouncementIntentHandledStrategy = type metadata accessor for ReadAnnouncementIntentHandledStrategy(0LL);
  *uint64_t v8 = v4;
  v8[1] = sub_382D8;
  return HandleIntentFlowStrategyAsync.makeInProgressResponse(rchRecord:)(a1, a2, AnnouncementIntentHandledStrategy, a4);
}

uint64_t sub_37E84(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc(dword_A1E04);
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_37EE8;
  return sub_37590(a1, a2);
}

uint64_t sub_37EE8()
{
  return sub_6698(v0[1]);
}

uint64_t sub_37F1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc(async function pointer to IntentExtensionCommunicatingAsync.makeIntentExecutionBehavior(app:intent:)[1]);
  *(void *)(v4 + 16) = v8;
  uint64_t AnnouncementIntentHandledStrategy = type metadata accessor for ReadAnnouncementIntentHandledStrategy(0LL);
  *uint64_t v8 = v4;
  v8[1] = sub_37F9C;
  return IntentExtensionCommunicatingAsync.makeIntentExecutionBehavior(app:intent:)( a1,  a2,  AnnouncementIntentHandledStrategy,  a4);
}

uint64_t sub_37F9C(uint64_t a1)
{
  return v1[1](a1);
}

uint64_t sub_37FE0()
{
  return sub_380D0(qword_A1ED8, type metadata accessor for ReadAnnouncementIntentHandledStrategy, (uint64_t)&unk_72F60);
}

uint64_t sub_3800C()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_38030()
{
  uint64_t v0 = swift_task_alloc(dword_A1F24);
  uint64_t v1 = (void *)sub_38540(v0);
  uint64_t v2 = sub_384C4(v1);
  return sub_372DC(v2, v3, v4);
}

uint64_t sub_38084()
{
  uint64_t v1 = swift_task_alloc(dword_A1F34);
  uint64_t v2 = (void *)sub_38540(v1);
  *uint64_t v2 = v0;
  v2[1] = sub_382D8;
  sub_385C0();
  return sub_374A0(v3, v4);
}

uint64_t sub_380D0(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v6 = a2(255LL);
    uint64_t result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }

  return result;
}

uint64_t sub_38110()
{
  uint64_t v1 = sub_41BC(&qword_A1F18);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release(*(void *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_38188(uint64_t a1)
{
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(sub_41BC(&qword_A1F18) - 8) + 80LL);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = v1 + ((v4 + 24) & ~v4);
  uint64_t v7 = swift_task_alloc(dword_A1F54);
  uint64_t v8 = (void *)sub_38540(v7);
  *uint64_t v8 = v2;
  v8[1] = sub_37EE8;
  return sub_35FA4(a1, v5, v6);
}

uint64_t sub_38208(void *a1)
{
  id v2 = [a1 announcementRecords];

  if (!v2) {
    return 0LL;
  }
  uint64_t v3 = sub_7B50(0LL, (unint64_t *)&qword_A13D8, &OBJC_CLASS___INAnnouncementRecord_ptr);
  uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  return v4;
}

uint64_t sub_3827C()
{
  uint64_t v0 = swift_task_alloc(dword_A1F6C);
  uint64_t v1 = (void *)sub_38540(v0);
  uint64_t v2 = sub_384C4(v1);
  return sub_3558C(v2, v3, v4);
}

uint64_t sub_382E0(uint64_t a1)
{
  return swift_task_switch(a1, 0LL, 0LL);
}

uint64_t sub_382EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_task_switch(a1, a2, a3);
}

uint64_t sub_382F8()
{
  return ((uint64_t (*)(void))swift_asyncLet_finish)();
}

uint64_t sub_38308(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_38318(uint64_t a1)
{
  *(void *)(v2 - sub_423C(v0 + 8) = *v1;
  return swift_task_dealloc(a1);
}

uint64_t sub_38328(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_38330()
{
  return v0;
}

uint64_t sub_38340(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_task_switch(a1, a2, a3);
}

uint64_t sub_38350@<X0>(uint64_t a1@<X8>)
{
  return swift_task_alloc((*(void *)(a1 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
}

  ;
}

uint64_t sub_3836C()
{
  return swift_asyncLet_finish();
}

uint64_t sub_38374@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = v2;
  return swift_task_dealloc(a1);
}

void sub_3837C()
{
  *(void *)(v1 - sub_423C(v0 + 8) = *v0;
}

uint64_t sub_3838C()
{
  return swift_task_dealloc(v0);
}

uint64_t sub_38394@<X0>(uint64_t a1@<X8>)
{
  void *v1 = a1;
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_383A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_task_switch(a1, a2, a3);
}

BOOL sub_383B0(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

void sub_383C0()
{
  *(void *)(v1 - sub_423C(v0 + 8) = *v0;
}

uint64_t sub_383D4()
{
  return swift_task_dealloc(v0);
}

uint64_t sub_383DC(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5)
{
  return sub_36AA4(a1, a2, a3, a4, a5);
}

uint64_t sub_383F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)(a3 + 3sub_423C(v0 + 2) = v3;
  return specialized Array._endMutation()(a1, a2);
}

uint64_t sub_38400()
{
  return swift_release(v0);
}

uint64_t sub_38410()
{
  return *(void *)(v0 + 8);
}

uint64_t sub_3841C@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v1, v2);
}

void *sub_38428@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *uint64_t result = v2;
  result[1] = a2;
  return result;
}

uint64_t sub_38434()
{
  return Logger.logObject.getter();
}

uint64_t sub_3843C()
{
  return ((uint64_t (*)(void))dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:))();
}

uint64_t sub_38448()
{
  return sub_25B54(*(void *)(v0 + 1016));
}

uint64_t sub_38460()
{
  uint64_t v2 = *(void *)(v1 + 40);
  sub_8504(v0, v2);
  return v2;
}

uint64_t sub_3848C(uint64_t a1)
{
  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v2, v1, 1LL, a1);
}

uint64_t sub_384A0()
{
  return swift_asyncLet_get_throwing();
}

uint64_t sub_384A8()
{
  return type metadata accessor for ResponseFactory(0LL);
}

uint64_t sub_384B0()
{
  return swift_release(*(void *)(v0 + 1640));
}

uint64_t sub_384BC()
{
  return ResponseFactory.init()();
}

uint64_t sub_384C4(void *a1)
{
  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t sub_384DC(uint64_t a1)
{
  *(void *)(a1 + 16) = 0LL;
  return swift_release(a1);
}

_WORD *sub_384E4(_WORD *result)
{
  *uint64_t result = 0;
  return result;
}

uint64_t sub_384F0()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_38500()
{
  return String.toSpeakableString.getter(v1, v0);
}

uint64_t sub_38510@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v1, v2);
}

BOOL sub_38520(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

  ;
}

uint64_t sub_38540(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t sub_3854C()
{
  return type metadata accessor for SpeakableString(0LL);
}

uint64_t sub_38558()
{
  return swift_task_dealloc(*(void *)(v0 + 176));
}

void sub_38560()
{
}

uint64_t sub_3856C()
{
  return IntentResolutionRecord.intentResponse.getter(*(void *)(v0 + 1024));
}

uint64_t sub_38578()
{
  return swift_task_dealloc(*(void *)(v0 + 1752));
}

uint64_t sub_38584()
{
  return type metadata accessor for OutputGenerationManifest(0LL);
}

uint64_t sub_3858C()
{
  return sub_25B54(*(void *)(v0 + 1016));
}

void *sub_38598()
{
  return sub_8504(v1, v0);
}

uint64_t sub_385A4(uint64_t a1)
{
  return swift_allocObject(a1, 32LL, 7LL);
}

uint64_t sub_385B0()
{
  return sub_5CAAC();
}

uint64_t sub_385B8()
{
  return sub_423C(v0);
}

  ;
}

uint64_t sub_385CC(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return swift_task_switch(sub_385E4, 0LL, 0LL);
}

uint64_t sub_385E4()
{
  id v1 = [objc_allocWithZone(SAUIPlayNotificationSound) init];
  v0[3] = v1;
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(SANotificationTypeIncomingHomeCommunicationValue);
  sub_3881C(v2, v3, v1);
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v5 = sub_4870(v4, (uint64_t)qword_A3EB0);
  uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_0, v6, v7, "#ReadAnnouncementIntentHelper submitting playNotificationSound command", v8, 2u);
    swift_slowDealloc(v8, -1LL, -1LL);
  }

  id v9 = (void *)v0[2];

  uint64_t v10 = v9[3];
  uint64_t v11 = v9[4];
  sub_8504(v9, v10);
  uint64_t v12 = (void *)swift_task_alloc(async function pointer to AceServiceInvokerAsync.submit<A>(_:)[1]);
  v0[4] = v12;
  unint64_t v13 = sub_3886C();
  *uint64_t v12 = v0;
  v12[1] = sub_38758;
  return AceServiceInvokerAsync.submit<A>(_:)(v1, v10, v13, v11);
}

uint64_t sub_38758(void *a1)
{
  uint64_t v4 = *(void *)(*(void *)v2 + 32LL);
  *(void *)(*(void *)v2 + 4_swift_stdlib_reportUnimplementedInitializer( "HomeCommunicationFlowDelegatePlugin.DisplayTextTemplatingService",  64LL,  "init(ducFamily:locale:extensionValueTypeNamesByValueType:aceServiceInvoker:deviceState:localContext:)",  101LL, 0LL) = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    uint64_t v5 = sub_387F0;
  }

  else
  {

    uint64_t v5 = sub_387C4;
  }

  return swift_task_switch(v5, 0LL, 0LL);
}

uint64_t sub_387C4()
{
  return sub_6698(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_387F0()
{
  return sub_6698(*(uint64_t (**)(void))(v0 + 8));
}

void sub_3881C(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  [a3 setNotificationType:v5];
}

unint64_t sub_3886C()
{
  unint64_t result = qword_A1F80;
  if (!qword_A1F80)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___SABaseCommand);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_A1F80);
  }

  return result;
}

unint64_t sub_388A8(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_938F8, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 6) {
    return 6LL;
  }
  else {
    return v3;
  }
}

uint64_t sub_388F0(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_38928 + 4 * byte_73000[a1]))( 0xD000000000000019LL,  0x8000000000075D50LL);
}

uint64_t sub_38938()
{
  return 0x6572756C696166LL;
}

void sub_38950(unsigned __int8 *a1, unsigned __int8 *a2)
{
}

void sub_3895C()
{
}

uint64_t sub_38964(uint64_t a1)
{
  return sub_1E384(a1, *v1);
}

void sub_3896C(uint64_t a1)
{
}

unint64_t sub_38974@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result = sub_388A8(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_389A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_388F0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_389C8(void *a1@<X8>)
{
  *a1 = &off_939A8;
}

uint64_t sub_389D8()
{
  uint64_t v0 = qword_A1F88;
  swift_bridgeObjectRetain(off_A1F90);
  return v0;
}

uint64_t sub_38A0C(uint64_t a1)
{
  unint64_t v2 = sub_38EE0();
  return static AppEnumRepresentation.lnValueType.getter(a1, v2);
}

uint64_t sub_38A34(uint64_t a1)
{
  unint64_t v2 = sub_38EE0();
  return AppEnumRepresentation.lnValue.getter(a1, v2);
}

uint64_t sub_38A5C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_38D9C();
  return static IntentValueTypeIdentifiable.canConvert(_:)(a1, a2, v4);
}

uint64_t sub_38A94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_38EE0();
  return static AppEnumRepresentation.from(_:context:)(a1, a2, a3, v6);
}

uint64_t sub_38AE4(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_38D9C();
  return static IntentValueTypeIdentifiable.canConvertFrom(_:)(a1, a2, v4);
}

uint64_t sub_38B1C(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_38B54 + 4 * byte_73006[a1]))( 0xD000000000000019LL,  0x8000000000075D50LL);
}

uint64_t sub_38B64()
{
  return 0x6572756C696166LL;
}

uint64_t sub_38B7C()
{
  return sub_38B1C(*v0);
}

uint64_t getEnumTagSinglePayload for ReadAnnouncementIntentResponseCode(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }

  if (a2 >= 0xFB)
  {
    if (a2 + 5 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 5) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }

    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }

    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }

    int v5 = (*a1 | (v4 << 8)) - 6;
    return (v5 + 1);
  }

uint64_t storeEnumTagSinglePayload for ReadAnnouncementIntentResponseCode( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    LODWORD(sub_21A1C(v0, v4) = 1;
  }
  else {
    LODWORD(sub_21A1C(v0, v4) = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFA) {
    return ((uint64_t (*)(void))((char *)&loc_38C58 + 4 * byte_73011[v4]))();
  }
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_38C8C + 4 * byte_7300C[v4]))();
}

uint64_t sub_38C8C(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_38C94(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x38C9CLL);
  }
  return result;
}

uint64_t sub_38CA8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x38CB0LL);
  }
  *(_BYTE *)uint64_t result = a2 + 5;
  return result;
}

uint64_t sub_38CB4(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_38CBC(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ReadAnnouncementIntentResponseCode()
{
  return &type metadata for ReadAnnouncementIntentResponseCode;
}

unint64_t sub_38CDC()
{
  unint64_t result = qword_A1F98;
  if (!qword_A1F98)
  {
    unint64_t result = swift_getWitnessTable(&unk_730E4, &type metadata for ReadAnnouncementIntentResponseCode);
    atomic_store(result, (unint64_t *)&qword_A1F98);
  }

  return result;
}

unint64_t sub_38D1C()
{
  unint64_t result = qword_A1FA0;
  if (!qword_A1FA0)
  {
    unint64_t result = swift_getWitnessTable(&unk_73074, &type metadata for ReadAnnouncementIntentResponseCode);
    atomic_store(result, (unint64_t *)&qword_A1FA0);
  }

  return result;
}

unint64_t sub_38D5C()
{
  unint64_t result = qword_A1FA8;
  if (!qword_A1FA8)
  {
    unint64_t result = swift_getWitnessTable(&unk_73130, &type metadata for ReadAnnouncementIntentResponseCode);
    atomic_store(result, (unint64_t *)&qword_A1FA8);
  }

  return result;
}

unint64_t sub_38D9C()
{
  unint64_t result = qword_A1FB0;
  if (!qword_A1FB0)
  {
    unint64_t result = swift_getWitnessTable(&unk_73100, &type metadata for ReadAnnouncementIntentResponseCode);
    atomic_store(result, (unint64_t *)&qword_A1FB0);
  }

  return result;
}

unint64_t sub_38DDC()
{
  unint64_t result = qword_A1FB8;
  if (!qword_A1FB8)
  {
    unint64_t result = swift_getWitnessTable(&unk_731A8, &type metadata for ReadAnnouncementIntentResponseCode);
    atomic_store(result, (unint64_t *)&qword_A1FB8);
  }

  return result;
}

unint64_t sub_38E1C()
{
  unint64_t result = qword_A1FC0;
  if (!qword_A1FC0)
  {
    unint64_t result = swift_getWitnessTable(&unk_731E0, &type metadata for ReadAnnouncementIntentResponseCode);
    atomic_store(result, (unint64_t *)&qword_A1FC0);
  }

  return result;
}

unint64_t sub_38E5C()
{
  unint64_t result = qword_A1FC8;
  if (!qword_A1FC8)
  {
    uint64_t v1 = sub_8564(&qword_A1FD0);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_A1FC8);
  }

  return result;
}

unint64_t sub_38EA4()
{
  unint64_t result = qword_A1FD8;
  if (!qword_A1FD8)
  {
    unint64_t result = swift_getWitnessTable(&unk_73258, &type metadata for ReadAnnouncementIntentResponseCode);
    atomic_store(result, (unint64_t *)&qword_A1FD8);
  }

  return result;
}

unint64_t sub_38EE0()
{
  unint64_t result = qword_A1FE0;
  if (!qword_A1FE0)
  {
    unint64_t result = swift_getWitnessTable(&unk_73158, &type metadata for ReadAnnouncementIntentResponseCode);
    atomic_store(result, (unint64_t *)&qword_A1FE0);
  }

  return result;
}

uint64_t sub_38F1C()
{
  return 0x6669636570736E75LL;
}

uint64_t sub_38F3C()
{
  return 0x6572676F72506E69LL;
}

uint64_t sub_38F58()
{
  return 0x73736563637573LL;
}

uint64_t sub_38F70()
{
  return 0x7964616572LL;
}

uint64_t type metadata accessor for ReadAnnouncementRCHFlowDelegate(uint64_t a1)
{
  uint64_t result = qword_A1FF8;
  if (!qword_A1FF8) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ReadAnnouncementRCHFlowDelegate);
  }
  return result;
}

uint64_t sub_38FBC(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL);
}

void sub_39004()
{
}

void sub_39020()
{
}

void sub_3903C( uint64_t (*a1)(void), uint64_t (*a2)(void), void (*a3)(uint64_t, void *, void *, uint64_t))
{
  uint64_t v7 = type metadata accessor for CATOption(0LL);
  __chkstk_darwin(v7);
  sub_9298();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = type metadata accessor for DucTemplatingLocalContext(0LL);
  __chkstk_darwin(v11);
  sub_39D90();
  uint64_t v12 = static AceService.current.getter(v18);
  unint64_t v13 = static Device.current.getter(v17, v12);
  DucTemplatingLocalContext.init()(v13);
  uint64_t v14 = a1(0LL);
  static CATOption.defaultMode.getter(v14);
  uint64_t v15 = CATWrapper.__allocating_init(options:globals:)(v10, 0LL);
  uint64_t v16 = a2(0LL);
  sub_A8BC(v16);
  a3(v3, v18, v17, v15);
  sub_11F6C();
}

void sub_39120()
{
  uint64_t v0 = sub_41BC(&qword_A2060);
  sub_A8BC(v0);
  DefaultNLContextProvider.init()();
  sub_AA5C();
}

uint64_t sub_3914C()
{
  uint64_t v2 = v1;
  sub_A798(v0 + qword_A1FF0, (uint64_t)v10);
  uint64_t v3 = sub_A7D8((uint64_t)v10, v10[3]);
  __chkstk_darwin(v3);
  sub_9298();
  uint64_t v6 = v5 - v4;
  (*(void (**)(uint64_t))(v7 + 16))(v5 - v4);
  uint64_t v8 = sub_39C6C(v2, v6);
  sub_423C(v10);
  return v8;
}

uint64_t *sub_391F4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for Parse.DirectInvocation(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_39D90();
  uint64_t v7 = type metadata accessor for Parse(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  sub_9298();
  uint64_t v11 = v10 - v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v10 - v9, a1, v7);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v8 + 88))(v11, v7) != enum case for Parse.directInvocation(_:))
  {
    sub_39DC0(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
    uint64_t v22 = sub_41BC(&qword_A2050);
    uint64_t v23 = (uint64_t (*)(uint64_t, uint64_t))method lookup function for BaseRCHFlowDelegate( v22,  &method descriptor for BaseRCHFlowDelegate.makeIntentFromParse(parse:previousIntent:));
    return (uint64_t *)v23(a1, a2);
  }

  sub_39DC0(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 96));
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v2, v11, v5);
  uint64_t v13 = Parse.DirectInvocation.userData.getter(v12);
  if (!v13) {
    goto LABEL_11;
  }
  sub_F93C(v13, v58);
  sub_39A2C((uint64_t)v58, (uint64_t)v59, &qword_A2058);
  if (!v59[1]) {
    goto LABEL_11;
  }
  memcpy(__dst, v59, sizeof(__dst));
  unint64_t v14 = __dst[3];
  if (!__dst[3])
  {
    sub_39DB8();
LABEL_11:
    id v25 = [objc_allocWithZone(INReadAnnouncementIntent) init];
LABEL_12:
    id v24 = v25;
    sub_39D80();
    return (uint64_t *)v24;
  }

  uint64_t v57 = __dst[2];
  uint64_t v15 = qword_9F820;
  swift_bridgeObjectRetain(__dst[3]);
  if (v15 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v16 = type metadata accessor for Logger(0LL);
  sub_4870(v16, (uint64_t)qword_A3EB0);
  uint64_t v17 = swift_bridgeObjectRetain_n(v14, 2LL);
  uint64_t v18 = (os_log_s *)Logger.logObject.getter(v17);
  os_log_type_t v19 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)sub_144F0(12LL);
    uint64_t v21 = sub_144F0(32LL);
    uint64_t v63 = v21;
    *(_DWORD *)uint64_t v20 = 136315138;
    swift_bridgeObjectRetain(v14);
    uint64_t v61 = sub_68DC4(v57, v14, &v63);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, &v62, v20 + 4, v20 + 12);
    swift_bridgeObjectRelease_n(v14, 3LL);
    _os_log_impl(&dword_0, v18, v19, "Received DirectInvocation parse type, with announceId: %s", v20, 0xCu);
    swift_arrayDestroy(v21, 1LL, (char *)&type metadata for Any + 8);
    sub_48D4(v21);
    sub_48D4((uint64_t)v20);
  }

  else
  {

    swift_bridgeObjectRelease_n(v14, 2LL);
  }

  sub_39A2C((uint64_t)&__dst[4], (uint64_t)&v61, &qword_A1D68);
  sub_39A2C((uint64_t)&v61, (uint64_t)&v63, &qword_A1D68);
  unint64_t v27 = v64;
  if (!v64)
  {
    sub_39DB8();
LABEL_75:
    id v55 = objc_allocWithZone(&OBJC_CLASS___INReadAnnouncementIntent);
    sub_39904(1LL, v57, v14, 1LL);
    goto LABEL_12;
  }

  uint64_t v28 = v63;
  sub_39A6C((uint64_t)&v61);
  uint64_t result = sub_39DB8();
  uint64_t v29 = HIBYTE(v27) & 0xF;
  uint64_t v30 = v28 & 0xFFFFFFFFFFFFLL;
  if ((v27 & 0x2000000000000000LL) != 0) {
    uint64_t v31 = HIBYTE(v27) & 0xF;
  }
  else {
    uint64_t v31 = v28 & 0xFFFFFFFFFFFFLL;
  }
  if (!v31)
  {
    sub_39A94((uint64_t)&v61);
    goto LABEL_75;
  }

  if ((v27 & 0x1000000000000000LL) != 0)
  {
    uint64_t v33 = sub_4B0C4(v28, v27, 10LL);
    LOBYTE(v2sub_423C(v0 + 8) = v56;
    goto LABEL_62;
  }

  if ((v27 & 0x2000000000000000LL) == 0)
  {
    if ((v28 & 0x1000000000000000LL) != 0) {
      uint64_t v32 = (unsigned __int8 *)((v27 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v32 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v28, v27);
    }
    uint64_t v33 = (uint64_t)sub_4B0B0(v32, v30);
    LOBYTE(v2sub_423C(v0 + 8) = v34 & 1;
LABEL_62:
    sub_39A94((uint64_t)&v61);
    if ((v28 & 1) == 0 && v33 == 2)
    {
      uint64_t v49 = swift_bridgeObjectRelease(v14);
      os_log_type_t v50 = (os_log_s *)Logger.logObject.getter(v49);
      os_log_type_t v51 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v50, v51))
      {
        uint64_t v52 = (uint8_t *)sub_144F0(2LL);
        *(_WORD *)uint64_t v52 = 0;
        _os_log_impl(&dword_0, v50, v51, "DirectInvocation is a deliveryFailure notification. Returning nil.", v52, 2u);
        sub_48D4((uint64_t)v52);
      }

      sub_39D80();
      return 0LL;
    }

    goto LABEL_75;
  }

  if (v28 == 43)
  {
    if (!v29) {
      goto LABEL_79;
    }
    if (v29 == 1) {
      goto LABEL_48;
    }
    sub_39D4C();
    if (!v38 & v37) {
      goto LABEL_48;
    }
    uint64_t v33 = v40;
    if (v39 != 2)
    {
      sub_39D4C();
      if (!v38 & v37) {
        goto LABEL_48;
      }
      uint64_t v33 = 10LL * v33 + v42;
      if (v41 != 3)
      {
        while (1)
        {
          sub_39DA8();
          if (!v38 & v37) {
            goto LABEL_48;
          }
          sub_39D5C();
          if (!v38) {
            goto LABEL_48;
          }
          uint64_t v33 = v44 + v43;
          if (__OFADD__(v44, v43)) {
            goto LABEL_48;
          }
          sub_39D70();
          if (v38) {
            goto LABEL_62;
          }
        }
      }
    }

LABEL_61:
    LOBYTE(v2sub_423C(v0 + 8) = 0;
    goto LABEL_62;
  }

  if (v28 != 45)
  {
    uint64_t v33 = (v28 - 48);
    if (v29 != 1)
    {
      sub_39D4C();
      if (!v38 & v37) {
        goto LABEL_48;
      }
      uint64_t v33 = 10LL * (v28 - 48) + v46;
      if (v45 != 2)
      {
        while (1)
        {
          sub_39DA8();
          if (!v38 & v37) {
            goto LABEL_48;
          }
          sub_39D5C();
          if (!v38) {
            goto LABEL_48;
          }
          uint64_t v33 = v48 + v47;
          if (__OFADD__(v48, v47)) {
            goto LABEL_48;
          }
          sub_39D70();
          if (v38) {
            goto LABEL_62;
          }
        }
      }
    }

    goto LABEL_61;
  }

  if (v29)
  {
    if (v29 != 1)
    {
      sub_39D4C();
      if (!(!v38 & v37))
      {
        if (v35 == 2)
        {
          LOBYTE(v2sub_423C(v0 + 8) = 0;
          uint64_t v33 = -(uint64_t)v36;
          goto LABEL_62;
        }

        if ((BYTE2(v28) - 48) <= 9u)
        {
          uint64_t v33 = -10LL * v36 - (BYTE2(v28) - 48);
          if (v35 == 3) {
            goto LABEL_61;
          }
          while (1)
          {
            sub_39DA8();
            if (!v38 & v37) {
              break;
            }
            sub_39D5C();
            if (!v38) {
              break;
            }
            uint64_t v33 = v54 - v53;
            if (__OFSUB__(v54, v53)) {
              break;
            }
            sub_39D70();
            if (v38) {
              goto LABEL_62;
            }
          }
        }
      }
    }

  _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v101, v100, 1LL, v62);
  sub_11F94();
  unint64_t v103 = _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v101, 1LL, v62);
  if ((_DWORD)v103 == 1)
  {
    swift_bridgeObjectRelease(v80);
    uint64_t v104 = sub_6CBAC();
    sub_6CC0C(v104, &qword_A3DB0);
    uint64_t v54 = &qword_A3DA8;
    unsigned __int8 v53 = v101;
    goto LABEL_55;
  }

  SpanProperty.valueString.getter(v103);
  uint64_t v106 = v105;
  uint64_t v107 = sub_6CBAC();
  sub_6CC0C(v107, &qword_A3DB0);
  sub_6CBC8(v101);
  if (!v106)
  {
    swift_bridgeObjectRelease(v80);
    return 0LL;
  }

  return v122;
}

LABEL_48:
    uint64_t v33 = 0LL;
    LOBYTE(v2sub_423C(v0 + 8) = 1;
    goto LABEL_62;
  }

  __break(1u);
LABEL_79:
  __break(1u);
  return result;
}

uint64_t sub_39808()
{
  uint64_t v1 = sub_41BC(&qword_A2048);
  sub_A8BC(v1);
  return sub_625F0(v3);
}

void sub_39858()
{
}

uint64_t sub_39884()
{
  return sub_423C((void *)(v0 + qword_A1FF0));
}

uint64_t sub_398B0()
{
  uint64_t v0 = BaseRCHFlowDelegate.deinit();
  sub_423C((void *)(v0 + qword_A1FE8));
  sub_423C((void *)(v0 + qword_A1FF0));
  return swift_deallocClassInstance(v0, 96LL, 7LL);
}

uint64_t sub_398FC()
{
  return type metadata accessor for ReadAnnouncementRCHFlowDelegate(0LL);
}

void sub_39904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3)
  {
    NSString v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3);
  }

  else
  {
    NSString v8 = 0LL;
  }

  [v4 initWithReadType:a1 startAnnouncementIdentifier:v8 userNotificationType:a4];

  sub_11F6C();
}

uint64_t *sub_39978(uint64_t *a1)
{
  return a1;
}

uint64_t sub_399BC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (a2)
  {
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(a4);
    swift_bridgeObjectRelease(a6);
    swift_bridgeObjectRelease(a7);
    swift_bridgeObjectRelease(a8);
    return swift_bridgeObjectRelease(a9);
  }

  return result;
}

void sub_39A2C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_41BC(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32LL))(a2, a1, v5);
  sub_AA5C();
}

uint64_t sub_39A6C(uint64_t a1)
{
  return a1;
}

uint64_t sub_39A94(uint64_t a1)
{
  return a1;
}

uint64_t sub_39ABC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = type metadata accessor for CATOption(0LL);
  __chkstk_darwin(v6);
  NSString v8 = (char *)&v20[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for SharedGlobals(0LL);
  void v22[3] = v9;
  v22[4] = &off_977A0;
  uint64_t v10 = sub_A800(v22);
  sub_A83C(a2, (uint64_t)v10);
  type metadata accessor for ReadAnnouncementCATs(0LL);
  uint64_t v11 = swift_retain(a3);
  static CATOption.defaultMode.getter(v11);
  *(void *)((char *)a3 + qword_A19Bsub_423C(v0 + 8) = CATWrapper.__allocating_init(options:globals:)(v8, 0LL);
  swift_release(a3);
  sub_A798((uint64_t)v22, (uint64_t)v21);
  uint64_t v12 = sub_A7D8((uint64_t)v21, v21[3]);
  __chkstk_darwin(v12);
  unint64_t v14 = (char *)&v20[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *))(v15 + 16))(v14);
  void v20[3] = v9;
  v20[4] = &off_977A0;
  uint64_t v16 = sub_A800(v20);
  sub_A83C((uint64_t)v14, (uint64_t)v16);
  *(void *)((char *)a3 + *(void *)(qword_A3DE8 + *a3 + swift_release(*(void *)(v0 + 16)) = a1;
  sub_A798((uint64_t)v20, (uint64_t)a3 + *(void *)(qword_A3DE8 + *a3 + 24));
  uint64_t v17 = DefaultAceViewProvider.init()();
  sub_423C(v20);
  sub_423C(v21);
  sub_423C(v22);
  return v17;
}

uint64_t sub_39C6C(uint64_t a1, uint64_t a2)
{
  uint64_t v15 = type metadata accessor for SharedGlobals(0LL);
  uint64_t v16 = &off_977A0;
  uint64_t v4 = sub_A800(v14);
  sub_A83C(a2, (uint64_t)v4);
  uint64_t AnnouncementAceViewProvider = type metadata accessor for ReadAnnouncementAceViewProvider(0LL);
  uint64_t v6 = (void *)swift_allocObject( AnnouncementAceViewProvider,  *(unsigned int *)(AnnouncementAceViewProvider + 48),  *(unsigned __int16 *)(AnnouncementAceViewProvider + 52));
  uint64_t v7 = sub_A7D8((uint64_t)v14, v15);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v14[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *))(v10 + 16))(v9);
  uint64_t v11 = sub_39ABC(a1, (uint64_t)v9, v6);
  sub_423C(v14);
  return v11;
}

  ;
}

  ;
}

  ;
}

uint64_t sub_39D80()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

  ;
}

  ;
}

uint64_t *sub_39DB8()
{
  return sub_39978((uint64_t *)(v0 + 64));
}

uint64_t sub_39DC0@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v2, v1);
}

uint64_t type metadata accessor for ReadAnnouncementTemplatingService(uint64_t a1)
{
  uint64_t result = qword_A2080;
  if (!qword_A2080) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ReadAnnouncementTemplatingService);
  }
  return result;
}

uint64_t sub_39E04(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL);
}

uint64_t sub_39E5C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_11FCC();
  NLContextUpdate.init()();
  NLContextUpdate.weightedPromptStrict.setter(0LL);
  sub_187F0(0);
  NLContextUpdate.weightedPromptTargetDomain.setter();
  uint64_t v7 = swift_bridgeObjectRetain(a1);
  NLContextUpdate.weightedPromptResponseOptions.setter(v7);
  uint64_t v8 = swift_bridgeObjectRetain(a2);
  uint64_t v9 = NLContextUpdate.weightedPromptResponseTargets.setter(v8);
  uint64_t v10 = NLContextUpdate.toAceContextUpdate()(v9);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v2, v5);
  return v10;
}

uint64_t sub_39F08(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v9 = sub_41BC(&qword_A0518);
  __chkstk_darwin(v9);
  sub_9298();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = type metadata accessor for Locale(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  sub_9298();
  uint64_t v17 = v16 - v15;
  sub_A798((uint64_t)a3, v5 + qword_A2068);
  *(void *)(v5 + qword_A207sub_423C(v0 + 8) = a4;
  sub_A798((uint64_t)a2, v5 + qword_A2070);
  uint64_t v18 = a3[3];
  sub_8504(a3, v18);
  swift_retain(a4);
  uint64_t v19 = dispatch thunk of DeviceState.siriLocale.getter(v18);
  uint64_t v20 = Locale.identifier.getter(v19);
  uint64_t v22 = v21;
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v17, v13);
  v39[0] = v20;
  v39[1] = v22;
  v38[0] = 45LL;
  v38[1] = 0xE100000000000000LL;
  v40[0] = 95LL;
  v40[1] = 0xE100000000000000LL;
  unint64_t v23 = sub_CD6C();
  uint64_t v24 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( v38,  v40,  0LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String,  &type metadata for String,  v23,  v23,  v23);
  uint64_t v26 = v25;
  swift_bridgeObjectRelease(v22);
  type metadata accessor for INIntentSlotValueType(0LL);
  uint64_t v28 = v27;
  sub_A880( (unint64_t *)&qword_A0528,  (uint64_t (*)(uint64_t))type metadata accessor for INIntentSlotValueType,  (uint64_t)&unk_6F888);
  uint64_t v30 = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage, v28, &type metadata for String, v29);
  sub_A798((uint64_t)a2, (uint64_t)v39);
  sub_A798((uint64_t)a3, (uint64_t)v38);
  uint64_t v31 = type metadata accessor for DucTemplatingLocalContext(0LL);
  uint64_t v32 = *(void *)(v31 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16))(v12, a1, v31);
  _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v12, 0LL, 1LL, v31);
  uint64_t v33 = DucTemplatingService.init(ducFamily:locale:extensionValueTypeNamesByValueType:aceServiceInvoker:deviceState:localContext:)( 0xD000000000000010LL,  0x8000000000077DC0LL,  v24,  v26,  v30,  v39,  v38,  v12);
  swift_release(a4);
  sub_423C(a2);
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(a1, v31);
  sub_423C(a3);
  return v33;
}

void sub_3A1B0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for Logger(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_11FCC();
  if (a3 && (sub_3AC88(a3), v7))
  {
    uint64_t v8 = v7;
    if ((unint64_t)v7 >> 62)
    {
      if (v7 >= 0) {
        v7 &= 0xFFFFFFFFFFFFFF8uLL;
      }
      uint64_t v9 = _CocoaArrayWrapper.endIndex.getter(v7);
    }

    else
    {
      uint64_t v9 = *(void *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFFF8LL));
    }

    swift_bridgeObjectRelease(v8);
    BOOL v10 = v9 == 0;
  }

  else
  {
    BOOL v10 = 1;
  }

  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v11 = sub_4870(v5, (uint64_t)qword_A3EB0);
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v3, v11, v5);
  uint64_t v13 = (os_log_s *)Logger.logObject.getter(v12);
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    BOOL v24 = v10;
    uint64_t v15 = (uint8_t *)sub_144F0(12LL);
    uint64_t v23 = v6;
    uint64_t v16 = sub_144F0(32LL);
    *(_DWORD *)uint64_t v15 = 136315138;
    uint64_t v25 = v16;
    if (v24) {
      uint64_t v17 = 1702195828LL;
    }
    else {
      uint64_t v17 = 0x65736C6166LL;
    }
    if (v24) {
      unint64_t v18 = 0xE400000000000000LL;
    }
    else {
      unint64_t v18 = 0xE500000000000000LL;
    }
    uint64_t v19 = sub_68DC4(v17, v18, &v25);
    uint64_t v20 = sub_BD40(v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v20, v21, v15 + 4, v15 + 12);
    swift_bridgeObjectRelease(v18);
    sub_14550(&dword_0, v13, v14, "makeIntentHandledDialog isAnnouncementRecordsNilOrEmpty: %s.", v15);
    swift_arrayDestroy(v16, 1LL, (char *)&type metadata for Any + 8);
    sub_48D4(v16);
    uint64_t v22 = (uint64_t)v15;
    BOOL v10 = v24;
    sub_48D4(v22);

    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v3, v5);
  }

  else
  {

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v3, v5);
  }

  if (v10) {
    sub_32530();
  }
  else {
    sub_326BC();
  }
  sub_6360();
}

void sub_3A410(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v11 = sub_41BC(&qword_A13C0);
  __chkstk_darwin(v11);
  sub_9298();
  uint64_t v14 = v13 - v12;
  if (qword_9F830 != -1) {
    swift_once(&qword_9F830, sub_18AF0);
  }
  uint64_t v15 = qword_A3EC8;
  if (qword_9F838 != -1) {
    swift_once(&qword_9F838, sub_18C60);
  }
  uint64_t v16 = (void *)sub_39E5C(v15, qword_A3ED0);
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v17 = type metadata accessor for Logger(0LL);
  sub_4870(v17, (uint64_t)qword_A3EB0);
  id v18 = v16;
  uint64_t v19 = (os_log_s *)Logger.logObject.getter(v18);
  os_log_type_t v20 = static os_log_type_t.debug.getter();
  uint64_t v61 = v14;
  uint64_t v63 = a3;
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v60 = a2;
    uint64_t v21 = (uint8_t *)sub_144F0(12LL);
    uint64_t v59 = (void *)sub_144F0(8LL);
    *(_DWORD *)uint64_t v21 = 138412290;
    uint64_t v64 = (uint64_t)v18;
    id v22 = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, &v65, v21 + 4, v21 + 12);
    *uint64_t v59 = v18;

    a2 = v60;
    sub_14550( &dword_0,  v19,  v20,  "Submit an ace command to update background context for announcement playback: %@",  v21);
    uint64_t v23 = sub_41BC(&qword_A0F50);
    sub_3ACE0(v23, v24, v23);
    sub_48D4((uint64_t)v59);
    sub_48D4((uint64_t)v21);
  }

  else
  {
  }

  uint64_t v25 = *(void *)(v6 + qword_A2070 + 24);
  uint64_t v26 = *(void *)(v6 + qword_A2070 + 32);
  sub_8504((void *)(v6 + qword_A2070), v25);
  dispatch thunk of AceServiceInvoker.submitAndForget(_:)(v18, v25, v26);
  if (!a3) {
    goto LABEL_16;
  }
  id v27 = a3;
  sub_3AC88(v27);
  if (v28)
  {
    uint64_t v29 = v28;
    if ((unint64_t)v28 >> 62)
    {
      if (v28 >= 0) {
        v28 &= 0xFFFFFFFFFFFFFF8uLL;
      }
      uint64_t v30 = _CocoaArrayWrapper.endIndex.getter(v28);
    }

    else
    {
      uint64_t v30 = *(void *)((char *)&dword_10 + (v28 & 0xFFFFFFFFFFFFFF8LL));
    }

    uint64_t v28 = swift_bridgeObjectRelease(v29);
    if (v30)
    {

LABEL_16:
      uint64_t v31 = swift_retain_n(a1, 2LL);
      uint64_t v32 = (os_log_s *)Logger.logObject.getter(v31);
      os_log_type_t v33 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v32, v33))
      {
        char v34 = (uint8_t *)sub_144F0(12LL);
        uint64_t v35 = sub_144F0(32LL);
        uint64_t v64 = v35;
        *(_DWORD *)char v34 = 136315138;
        uint64_t v36 = type metadata accessor for App(0LL);
        sub_A880( &qword_A1F48,  (uint64_t (*)(uint64_t))&type metadata accessor for App,  (uint64_t)&protocol conformance descriptor for App);
        uint64_t v38 = dispatch thunk of CustomStringConvertible.description.getter(v36, v37);
        unint64_t v40 = v39;
        uint64_t v41 = sub_68DC4(v38, v39, &v64);
        uint64_t v42 = sub_BD40(v41);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v42, v43, v34 + 4, v34 + 12);
        sub_3ACEC();
        swift_bridgeObjectRelease(v40);
        sub_14550( &dword_0,  v32,  v33,  "Creating a dialog between Confirm and Handle for playing announcements using app: %s.",  v34);
        sub_3ACE0(v44, v45, (uint64_t)&type metadata for Any + 8);
        sub_48D4(v35);
        sub_48D4((uint64_t)v34);
      }

      else
      {

        sub_3ACEC();
      }

      if (v63)
      {
        id v51 = v63;
        uint64_t v52 = sub_5CAAC();
      }

      else
      {
        uint64_t v52 = 0LL;
      }

      uint64_t v53 = sub_5CFB4(v52);
      uint64_t v55 = v54;
      swift_bridgeObjectRelease(v52);
      if (v55)
      {
        String.toSpeakableString.getter(v53, v55);
        swift_bridgeObjectRelease(v55);
        uint64_t v56 = 0LL;
      }

      else
      {
        uint64_t v56 = 1LL;
      }

      uint64_t v57 = type metadata accessor for SpeakableString(0LL);
      _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v61, v56, 1LL, v57);
      uint64_t v58 = swift_allocObject(&unk_96C50, 32LL, 7LL);
      *(void *)(v58 + 16) = a4;
      *(void *)(v58 + 24) = a5;
      swift_retain(a5);
      sub_32558(v61);

      swift_release(v58);
      sub_27DEC(v61, &qword_A13C0);
      goto LABEL_29;
    }
  }

  unsigned __int8 v46 = (os_log_s *)Logger.logObject.getter(v28);
  os_log_type_t v47 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v46, v47))
  {
    uint64_t v48 = (uint8_t *)sub_144F0(2LL);
    *(_WORD *)uint64_t v48 = 0;
    _os_log_impl(&dword_0, v46, v47, "Skipping interstitial since there are no announcements to play.", v48, 2u);
    sub_48D4((uint64_t)v48);
  }

  uint64_t v49 = sub_41BC(&qword_A20D0);
  os_log_type_t v50 = (void (*)(uint64_t, uint64_t, void *, uint64_t, uint64_t))method lookup function for DucTemplatingService( v49,  &method descriptor for DucTemplatingService.makeInterstitialDialog(app:intent:intentResponse:_:));
  v50(a1, a2, a3, a4, a5);

LABEL_29:
  sub_6360();
}

void sub_3A97C(uint64_t a1, void (*a2)(void *))
{
  uint64_t v4 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_41BC(&qword_A0530);
  __chkstk_darwin(v8);
  BOOL v10 = (uint64_t *)((char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v11 = sub_41BC(&qword_A20D8);
  __chkstk_darwin(v11);
  uint64_t v13 = (uint64_t *)((char *)&v14 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_CDF8(a1, (uint64_t)v10);
  if (swift_getEnumCaseMultiPayload(v10, v8) == 1)
  {
    *uint64_t v13 = *v10;
    swift_storeEnumTagMultiPayload(v13, v11, 1LL);
  }

  else
  {
    (*(void (**)(char *, void *, uint64_t))(v5 + 32))(v7, v10, v4);
    (*(void (**)(void *, char *, uint64_t))(v5 + 16))(v13, v7, v4);
    _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0((uint64_t)v13, 0LL, 1LL, v4);
    swift_storeEnumTagMultiPayload(v13, v11, 0LL);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }

  a2(v13);
  sub_27DEC((uint64_t)v13, &qword_A20D8);
}

uint64_t sub_3AB24()
{
  return sub_32508();
}

void sub_3AB54()
{
}

void sub_3AB80()
{
}

uint64_t sub_3ABAC()
{
  return swift_release(*(void *)(v0 + qword_A2078));
}

void sub_3ABE8()
{
  uint64_t v0 = DucTemplatingService.deinit();
  sub_423C((void *)(v0 + qword_A2068));
  sub_423C((void *)(v0 + qword_A2070));
  swift_release(*(void *)(v0 + qword_A2078));
  sub_AA5C();
}

uint64_t sub_3AC38()
{
  return swift_deallocClassInstance(v0, 104LL, 7LL);
}

uint64_t sub_3AC54()
{
  return type metadata accessor for ReadAnnouncementTemplatingService(0LL);
}

uint64_t sub_3AC5C()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

void sub_3AC80(uint64_t a1)
{
}

void sub_3AC88(void *a1)
{
  id v1 = [a1 announcementRecords];
  if (v1)
  {
    uint64_t v2 = v1;
    unint64_t v3 = sub_25FA0();
    static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);
  }

  sub_AA5C();
}

uint64_t sub_3ACE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_arrayDestroy(v3, 1LL, a3);
}

uint64_t sub_3ACEC()
{
  return swift_release_n(v0, 2LL);
}

uint64_t sub_3ACF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v152 = a3;
  uint64_t v149 = a1;
  uint64_t v150 = a2;
  uint64_t v135 = type metadata accessor for HomeCommunicationError(0LL);
  sub_11F5C();
  __chkstk_darwin(v5);
  sub_6314();
  uint64_t v136 = v6;
  sub_62D0();
  __chkstk_darwin(v7);
  sub_1BF8C();
  uint64_t v134 = v8;
  sub_41BC(&qword_A20E0);
  sub_11F5C();
  __chkstk_darwin(v9);
  sub_6314();
  uint64_t v139 = v10;
  sub_62D0();
  __chkstk_darwin(v11);
  sub_1BF8C();
  uint64_t v137 = (void *)v12;
  sub_41BC(&qword_A04A0);
  sub_11F5C();
  __chkstk_darwin(v13);
  sub_6314();
  uint64_t v140 = v14;
  sub_62D0();
  __chkstk_darwin(v15);
  uint64_t v138 = (char *)&v132 - v16;
  sub_62D0();
  __chkstk_darwin(v17);
  sub_1BF8C();
  uint64_t v142 = v18;
  uint64_t v148 = type metadata accessor for RRCandidate(0LL);
  uint64_t v146 = *(void *)(v148 - 8);
  __chkstk_darwin(v148);
  sub_6314();
  uint64_t v141 = v19;
  sub_62D0();
  __chkstk_darwin(v20);
  sub_1BF8C();
  uint64_t v143 = v21;
  uint64_t v22 = type metadata accessor for RRResult(0LL);
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  sub_6314();
  uint64_t v133 = v24;
  sub_62D0();
  __chkstk_darwin(v25);
  uint64_t v147 = (char *)&v132 - v26;
  sub_62D0();
  __chkstk_darwin(v27);
  uint64_t v29 = (os_log_s *)((char *)&v132 - v28);
  uint64_t v30 = type metadata accessor for RRQuery(0LL);
  uint64_t v31 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  sub_9298();
  char v34 = (void *)(v33 - v32);
  uint64_t v35 = sub_41BC(&qword_A20E8);
  sub_11F5C();
  uint64_t v37 = __chkstk_darwin(v36);
  unint64_t v39 = (uint64_t *)((char *)&v132 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin(v37);
  uint64_t v41 = (char *)&v132 - v40;
  uint64_t v144 = type metadata accessor for RREntity(0LL);
  uint64_t v145 = a4;
  _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(a4, 1LL, 1LL, v144);
  uint64_t v42 = v149;
  *char v34 = v149;
  (*(void (**)(void *, void, uint64_t))(v31 + 104))(v34, enum case for RRQuery.usoReference(_:), v30);
  swift_retain(v42);
  uint64_t v43 = v151;
  dispatch thunk of RRReferenceResolverProtocol.resolve(reference:)(v34, v150, v152);
  (*(void (**)(void *, uint64_t))(v31 + 8))(v34, v30);
  uint64_t v152 = v41;
  sub_3B8EC((uint64_t)v41, (uint64_t)v39);
  if (swift_getEnumCaseMultiPayload(v39, v35) == 1)
  {
    uint64_t v44 = *v39;
    if (qword_9F820 != -1) {
      swift_once(&qword_9F820, sub_17ADC);
    }
    uint64_t v45 = sub_1BDD8();
    sub_4870(v45, (uint64_t)qword_A3EB0);
    sub_3BDC8();
    uint64_t v46 = sub_3BDC8();
    os_log_type_t v47 = (os_log_s *)Logger.logObject.getter(v46);
    os_log_type_t v48 = static os_log_type_t.error.getter();
    if (sub_17604(v48))
    {
      uint64_t v49 = (uint8_t *)sub_144F0(12LL);
      uint64_t v50 = sub_144F0(32LL);
      uint64_t v153 = v44;
      uint64_t v154 = v50;
      *(_DWORD *)uint64_t v49 = 136315138;
      sub_3BDC8();
      uint64_t v51 = sub_41BC(&qword_A0F48);
      uint64_t v52 = String.init<A>(describing:)(&v153, v51);
      unint64_t v54 = v53;
      uint64_t v153 = sub_3BDEC(v52, v53);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v153, &v154, v49 + 4, v49 + 12);
      swift_bridgeObjectRelease(v54);
      sub_3BDB0();
      sub_3BDB0();
      sub_14550(&dword_0, v47, (os_log_type_t)v39, "#ReferenceResolution Received a failure: %s -> nil", v49);
      sub_27E34((uint64_t)&type metadata for Any);
      sub_48D4(v50);
      sub_48D4((uint64_t)v49);
    }

    else
    {

      sub_3BDB0();
      sub_3BDB0();
    }

    uint64_t v78 = sub_3BDB0();
    return sub_3BDA8(v78, &qword_A20E8);
  }

  (*(void (**)(os_log_s *, uint64_t *, uint64_t))(v23 + 32))(v29, v39, v22);
  uint64_t v55 = *(void (**)(char *, os_log_s *, uint64_t))(v23 + 16);
  uint64_t v56 = v147;
  v55(v147, v29, v22);
  int v57 = (*(uint64_t (**)(void *, uint64_t))(v23 + 88))(v56, v22);
  uint64_t v58 = v22;
  int v151 = v29;
  uint64_t v59 = v23;
  if (v57 == enum case for RRResult.foundMatch(_:))
  {
    sub_3BD8C();
    uint64_t v60 = v146;
    uint64_t v61 = v143;
    uint64_t v62 = v56;
    uint64_t v63 = v148;
    (*(void (**)(uint64_t, void *, uint64_t))(v146 + 32))(v143, v62, v148);
    if (qword_9F820 != -1) {
      swift_once(&qword_9F820, sub_17ADC);
    }
    uint64_t v64 = sub_1BDD8();
    sub_4870(v64, (uint64_t)qword_A3EB0);
    uint64_t v65 = v141;
    uint64_t v66 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v60 + 16))(v141, v61, v63);
    Logger.logObject.getter(v66);
    os_log_type_t v67 = sub_17654();
    if (os_log_type_enabled(v29, v67))
    {
      uint64_t v68 = (uint8_t *)sub_144F0(12LL);
      uint64_t v69 = sub_144F0(32LL);
      uint64_t v154 = v69;
      *(_DWORD *)uint64_t v68 = 136315138;
      uint64_t v70 = sub_380D0( &qword_A20F8,  (uint64_t (*)(uint64_t))&type metadata accessor for RRCandidate,  (uint64_t)&protocol conformance descriptor for RRCandidate);
      uint64_t v71 = dispatch thunk of CustomStringConvertible.description.getter(v148, v70);
      unint64_t v73 = v72;
      uint64_t v74 = sub_3BDEC(v71, v72);
      uint64_t v75 = sub_3BDD8(v74);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v75, v76, v68 + 4, v68 + 12);
      swift_bridgeObjectRelease(v73);
      sub_3BDC0(v65);
      sub_14550(&dword_0, v29, v67, "#ReferenceResolution Found a candidate %s", v68);
      sub_27E34((uint64_t)&type metadata for Any);
      uint64_t v77 = v69;
      uint64_t v61 = v143;
      sub_48D4(v77);
      sub_48D4((uint64_t)v68);
    }

    else
    {
      sub_3BDC0(v65);
    }

    uint64_t v89 = v142;
    RRCandidate.entity.getter();
    sub_3BDC0(v61);
    uint64_t v90 = sub_3BD7C();
    uint64_t v91 = sub_3BDA8(v90, &qword_A20E8);
    sub_3BD9C(v91, &qword_A04A0);
    uint64_t v92 = v89;
    uint64_t v88 = 0LL;
    goto LABEL_40;
  }

  uint64_t v80 = v148;
  if (v57 == enum case for RRResult.needsDisambiguation(_:))
  {
    sub_3BD8C();
    uint64_t v29 = (os_log_s *)*v56;
    if (qword_9F820 != -1) {
      swift_once(&qword_9F820, sub_17ADC);
    }
    uint64_t v81 = sub_1BDD8();
    sub_1BE18(v81, (uint64_t)qword_A3EB0);
    os_log_type_t v82 = sub_A9E8();
    if (sub_17498(v82))
    {
      unint64_t v83 = (uint8_t *)sub_144F0(2LL);
      *(_WORD *)unint64_t v83 = 0;
      _os_log_impl( &dword_0,  v43,  (os_log_type_t)v55,  "#ReferenceResolution Found ambiguous entities -> picking most recent entry",  v83,  2u);
      sub_48D4((uint64_t)v83);
    }

    uint64_t v84 = v139;
    sub_3B934((uint64_t)v29, v139);
    sub_18FB8();
    if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0((uint64_t)v84, 1LL, v80) == 1)
    {
      uint64_t v85 = sub_3BD7C();
      uint64_t v86 = sub_3BDA8(v85, &qword_A20E8);
      uint64_t v87 = sub_3BD9C(v86, &qword_A04A0);
      sub_3BDD0(v87, &qword_A20E0);
      uint64_t v88 = 1LL;
      uint64_t v89 = v140;
LABEL_39:
      uint64_t v92 = v89;
LABEL_40:
      _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v92, v88, 1LL, v144);
      return sub_3BBC8(v89, (uint64_t)v29);
    }

    uint64_t v89 = v140;
    goto LABEL_38;
  }

  if (v57 == enum case for RRResult.foundMatchPlural(_:))
  {
    sub_3BD8C();
    uint64_t v29 = (os_log_s *)*v56;
    if (qword_9F820 != -1) {
      swift_once(&qword_9F820, sub_17ADC);
    }
    uint64_t v93 = sub_1BDD8();
    uint64_t v94 = (os_log_s *)sub_4870(v93, (uint64_t)qword_A3EB0);
    uint64_t v95 = swift_bridgeObjectRetain(v29);
    Logger.logObject.getter(v95);
    os_log_type_t v96 = sub_A9E8();
    if (sub_17498(v96))
    {
      Swift::Int v97 = (uint8_t *)sub_144F0(12LL);
      *(_DWORD *)Swift::Int v97 = 134217984;
      uint64_t v154 = *((void *)v29 + 2);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v154, &v155, v97 + 4, v97 + 12);
      sub_18FB8();
      sub_14550( &dword_0,  v94,  (os_log_type_t)v55,  "#ReferenceResolution Found %ld candidates. Using the first one",  v97);
      sub_48D4((uint64_t)v97);
    }

    else
    {

      sub_18FB8();
    }

    uint64_t v84 = v137;
    uint64_t v89 = (uint64_t)v138;
    sub_5D0BC((uint64_t)v29, (uint64_t)v137);
    sub_18FB8();
    if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0((uint64_t)v84, 1LL, v80) == 1)
    {
      uint64_t v106 = sub_3BD7C();
      uint64_t v107 = sub_3BDA8(v106, &qword_A20E8);
      uint64_t v108 = sub_3BD9C(v107, &qword_A04A0);
      sub_3BDD0(v108, &qword_A20E0);
      uint64_t v88 = 1LL;
      goto LABEL_39;
    }

LABEL_38:
    RRCandidate.entity.getter();
    uint64_t v109 = sub_3BD7C();
    uint64_t v110 = sub_3BDA8(v109, &qword_A20E8);
    sub_3BD9C(v110, &qword_A04A0);
    (*(void (**)(void *, uint64_t))(v146 + 8))(v84, v80);
    uint64_t v88 = 0LL;
    goto LABEL_39;
  }

  if (v57 == enum case for RRResult.needsDisambiguationPlural(_:))
  {
    sub_3BD8C();
    swift_bridgeObjectRelease(*v56);
    if (qword_9F820 != -1) {
      swift_once(&qword_9F820, sub_17ADC);
    }
    uint64_t v98 = sub_1BDD8();
    sub_1BE18(v98, (uint64_t)qword_A3EB0);
    os_log_type_t v99 = sub_17654();
    if (sub_17380(v99))
    {
      Swift::Int v100 = (_WORD *)sub_144F0(2LL);
      *Swift::Int v100 = 0;
      sub_17358(&dword_0, v101, v102, "#ReferenceResolution Found disambiguationPlural -> return nil");
      sub_48D4((uint64_t)v100);
    }

    uint64_t v103 = v135;
    uint64_t v104 = (uint64_t)v136;
    *uint64_t v136 = 0xD00000000000002ELL;
    *(void *)(v104 + sub_423C(v0 + 8) = 0x8000000000077DE0LL;
    swift_storeEnumTagMultiPayload(v104, v103, 9LL);
    uint64_t v105 = v134;
    sub_108C0(v134);
    sub_3BB8C(v104);
    sub_3BB8C(v105);
LABEL_47:
    uint64_t v78 = sub_3BD7C();
    return sub_3BDA8(v78, &qword_A20E8);
  }

  if (v57 == enum case for RRResult.noMatch(_:))
  {
    if (qword_9F820 != -1) {
      swift_once(&qword_9F820, sub_17ADC);
    }
    uint64_t v111 = sub_1BDD8();
    sub_1BE18(v111, (uint64_t)qword_A3EB0);
    os_log_type_t v112 = sub_17654();
    if (sub_17380(v112))
    {
      uint64_t v113 = (_WORD *)sub_144F0(2LL);
      *uint64_t v113 = 0;
      sub_17358(&dword_0, v114, v115, "#ReferenceResolution No matches found");
      sub_48D4((uint64_t)v113);
    }

    goto LABEL_47;
  }

  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v116 = sub_1BDD8();
  sub_4870(v116, (uint64_t)qword_A3EB0);
  uint64_t v117 = v133;
  uint64_t v118 = ((uint64_t (*)(uint64_t, os_log_s *, uint64_t))v55)(v133, v151, v58);
  uint64_t v119 = (os_log_s *)Logger.logObject.getter(v118);
  os_log_type_t v120 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v119, v120))
  {
    uint64_t v121 = (uint8_t *)sub_144F0(12LL);
    uint64_t v122 = sub_144F0(32LL);
    uint64_t v150 = v59;
    uint64_t v123 = v122;
    uint64_t v154 = v122;
    *(_DWORD *)uint64_t v121 = 136315138;
    uint64_t v124 = sub_380D0( &qword_A20F0,  (uint64_t (*)(uint64_t))&type metadata accessor for RRResult,  (uint64_t)&protocol conformance descriptor for RRResult);
    uint64_t v125 = dispatch thunk of CustomStringConvertible.description.getter(v58, v124);
    unint64_t v127 = v126;
    uint64_t v128 = sub_3BDEC(v125, v126);
    uint64_t v129 = sub_3BDD8(v128);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v129, v130, v121 + 4, v121 + 12);
    swift_bridgeObjectRelease(v127);
    sub_3BDB8(v117);
    sub_14550(&dword_0, v119, v120, "#ReferenceResolution Received unknown result type %s", v121);
    swift_arrayDestroy(v123, 1LL, (char *)&type metadata for Any + 8);
    sub_48D4(v123);
    sub_48D4((uint64_t)v121);
  }

  else
  {

    sub_3BDB8(v117);
  }

  uint64_t v131 = sub_3BDB8((uint64_t)v151);
  sub_3BDA8(v131, &qword_A20E8);
  return sub_3BDB8((uint64_t)v56);
}

    BOOL v10 = 0;
    goto LABEL_39;
  }

  if (a1 != 45)
  {
    uint64_t v8 = (a1 - 48);
    uint64_t v18 = v4 - 1;
    if (v18)
    {
      uint64_t v20 = (unsigned __int8 *)v23 + 1;
      while (1)
      {
        uint64_t v21 = *v20 - 48;
        if (v21 > 9) {
          goto LABEL_36;
        }
        if (!is_mul_ok(v8, 0xAuLL)) {
          goto LABEL_36;
        }
        uint64_t v14 = __CFADD__(10 * v8, v21);
        uint64_t v8 = 10 * v8 + v21;
        if (v14) {
          goto LABEL_36;
        }
        BOOL v10 = 0;
        ++v20;
        if (!--v18) {
          goto LABEL_39;
        }
      }
    }

    goto LABEL_38;
  }

  if (v4)
  {
    if (v4 != 1 && (BYTE1(a1) - 48) <= 9u)
    {
      uint64_t v2 = 0LL;
      uint64_t v8 = -(uint64_t)(BYTE1(a1) - 48);
      if (BYTE1(a1) == 48)
      {
        uint64_t v11 = v4 - 2;
        if (v11)
        {
          uint64_t v12 = (unsigned __int8 *)v23 + 2;
          while (1)
          {
            uint64_t v13 = *v12 - 48;
            if (v13 > 9) {
              goto LABEL_36;
            }
            if (!is_mul_ok(v8, 0xAuLL)) {
              goto LABEL_36;
            }
            uint64_t v14 = 10 * v8 >= v13;
            uint64_t v8 = 10 * v8 - v13;
            if (!v14) {
              goto LABEL_36;
            }
            BOOL v10 = 0;
            ++v12;
            if (!--v11) {
              goto LABEL_39;
            }
          }
        }

        goto LABEL_38;
      }

      goto LABEL_53;
    }

uint64_t sub_3B8EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_41BC(&qword_A20E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

void *sub_3B934@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for RRCandidate(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  sub_9298();
  uint64_t v8 = (os_log_s *)(v7 - v6);
  sub_41BC(&qword_A20E0);
  sub_11F5C();
  __chkstk_darwin(v9);
  sub_9298();
  uint64_t v12 = (os_log_s *)(v11 - v10);
  sub_5D0BC(a1, v11 - v10);
  uint64_t v13 = _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0((uint64_t)v12, 1LL, v4);
  if ((_DWORD)v13 == 1)
  {
    sub_3BDD0(v13, &qword_A20E0);
    if (qword_9F820 != -1) {
      swift_once(&qword_9F820, sub_17ADC);
    }
    uint64_t v14 = sub_1BDD8();
    sub_1BE18(v14, (uint64_t)qword_A3EB0);
    os_log_type_t v15 = sub_A9E8();
    if (sub_17604(v15))
    {
      uint64_t v16 = (uint8_t *)sub_144F0(2LL);
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl( &dword_0,  v12,  (os_log_type_t)v8,  "#ReferenceResolution could not fetch score from the first candidate",  v16,  2u);
      sub_48D4((uint64_t)v16);
    }

    return (void *)_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0((uint64_t)a2, 1LL, 1LL, v4);
  }

  else
  {
    double v18 = ((double (*)(void))RRCandidate.score.getter)();
    uint64_t v19 = *(uint64_t (**)(os_log_s *, uint64_t))(v5 + 8);
    uint64_t v20 = v19(v12, v4);
    uint64_t v32 = a1;
    uint64_t v21 = *(void *)(a1 + 16);
    if (v21)
    {
      unint64_t v22 = (*(unsigned __int8 *)(v5 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      uint64_t v23 = *(void *)(v5 + 72);
      uint64_t v24 = *(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v5 + 16);
      uint64_t v25 = v21 - 1;
      unint64_t v26 = a1 + v22 + v23 * (v21 - 1);
      uint64_t v27 = -v23;
      while (1)
      {
        uint64_t v28 = v24((uint64_t)v8, v26, v4);
        double v29 = RRCandidate.score.getter(v28);
        uint64_t v20 = v19(v8, v4);
        if (v29 == v18) {
          break;
        }
        --v25;
        v26 += v27;
        if (v25 == -1)
        {
          uint64_t v25 = 0LL;
          break;
        }
      }
    }

    else
    {
      uint64_t v25 = 0LL;
    }

    __chkstk_darwin(v20);
    *(&v31 - sub_423C(v0 + 2) = (uint64_t)&v32;
    return sub_3BC90((void *(*)(void *__return_ptr, uint64_t *))sub_3BD60, v25, v30, a2);
  }

uint64_t sub_3BB8C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for HomeCommunicationError(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_3BBC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_41BC(&qword_A04A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

unint64_t sub_3BC10@<X0>(unint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if ((result & 0x8000000000000000LL) != 0)
  {
    __break(1u);
  }

  else
  {
    unint64_t v4 = result;
    if (*(void *)(a2 + 16) > result)
    {
      uint64_t v6 = type metadata accessor for RRCandidate(0LL);
      return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))( a3,  a2 + ((*(unsigned __int8 *)(*(void *)(v6 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80LL))
             + *(void *)(*(void *)(v6 - 8) + 72LL) * v4,
               v6);
    }
  }

  __break(1u);
  return result;
}

void *sub_3BC90@<X0>( void *(*a1)(void *__return_ptr, uint64_t *)@<X0>, uint64_t a2@<X2>, char a3@<W3>, void *a4@<X8>)
{
  if ((a3 & 1) != 0)
  {
    uint64_t v7 = type metadata accessor for RRCandidate(0LL);
    return (void *)_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0((uint64_t)a4, 1LL, 1LL, v7);
  }

  else
  {
    uint64_t v9 = a2;
    uint64_t result = a1(a4, &v9);
    if (!v4)
    {
      uint64_t v8 = type metadata accessor for RRCandidate(0LL);
      return (void *)_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0((uint64_t)a4, 0LL, 1LL, v8);
    }
  }

  return result;
}

unint64_t sub_3BD2C@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_3BC10(*a1, *a2, a3);
}

unint64_t sub_3BD60@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_3BD2C(a1, *(uint64_t **)(v2 + 16), a2);
}

uint64_t sub_3BD7C()
{
  return (*(uint64_t (**)(void, uint64_t))(v0 + 8))(*(void *)(v2 - 120), v1);
}

uint64_t sub_3BD8C()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 96))(v2, v1);
}

uint64_t sub_3BD9C(uint64_t a1, uint64_t *a2)
{
  return sub_5F64(*(void *)(v2 - 168), a2);
}

uint64_t sub_3BDA8(uint64_t a1, uint64_t *a2)
{
  return sub_5F64(*(void *)(v2 - 112), a2);
}

uint64_t sub_3BDB0()
{
  return swift_errorRelease(v0);
}

uint64_t sub_3BDB8(uint64_t a1)
{
  return v1(a1, v2);
}

uint64_t sub_3BDC0(uint64_t a1)
{
  return v1(a1, v2);
}

uint64_t sub_3BDC8()
{
  return swift_errorRetain(v0);
}

uint64_t sub_3BDD0(uint64_t a1, uint64_t *a2)
{
  return sub_5F64(v2, a2);
}

uint64_t sub_3BDD8(uint64_t a1)
{
  *(void *)(v1 - 104) = a1;
  return v1 - 104;
}

uint64_t sub_3BDEC(uint64_t a1, unint64_t a2)
{
  return sub_68DC4(a1, a2, (uint64_t *)(v2 - 96));
}

void *sub_3BDF4()
{
  uint64_t v1 = sub_2F800();
  if (!v1)
  {
    if (qword_9F820 != -1) {
      swift_once(&qword_9F820, sub_17ADC);
    }
    uint64_t v22 = sub_1BDD8();
    uint64_t v23 = (os_log_s *)sub_1BE18(v22, (uint64_t)qword_A3EB0);
    os_log_type_t v24 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)sub_144F0(2LL);
      *(_WORD *)uint64_t v25 = 0;
      sub_1BE98(&dword_0, v23, v24, "#ReferenceResolver couldn't extract UsoTask from Parse", v25);
      sub_48D4((uint64_t)v25);
    }

    return 0LL;
  }

  static UsoTask_CodegenConverter.convert(task:)(v52, v1);
  sub_3C324((uint64_t)v52, (uint64_t)&v50);
  if (!v51[2]) {
    goto LABEL_15;
  }
  sub_3C324((uint64_t)&v50, (uint64_t)&v48);
  uint64_t v2 = type metadata accessor for UsoTask_noVerb_common_UserEntity(0LL);
  if ((swift_dynamicCast(&v47, &v48, (char *)&type metadata for Any + 8, v2, 0LL) & 1) == 0)
  {
    sub_423C(&v48);
LABEL_15:
    if (qword_9F820 != -1) {
      swift_once(&qword_9F820, sub_17ADC);
    }
    uint64_t v26 = sub_1BDD8();
    uint64_t v27 = (os_log_s *)sub_1BE18(v26, (uint64_t)qword_A3EB0);
    os_log_type_t v28 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v27, v28))
    {
      double v29 = (uint8_t *)sub_144F0(2LL);
      *(_WORD *)double v29 = 0;
      sub_1BE98(&dword_0, v27, v28, "#ReferenceResolver Cannot transform UsoTask to task", v29);
      sub_48D4((uint64_t)v29);
    }

    sub_17678();
    sub_FC1C((uint64_t)v52);
    char v30 = &v50;
    goto LABEL_30;
  }

  uint64_t v3 = v47;
  uint64_t v4 = swift_retain(v47);
  dispatch thunk of Uso_VerbTemplate_NoVerb.entity.getter(&v46, v4);
  swift_release_n(v3, 2LL);
  uint64_t v5 = v46;
  sub_3C394();
  sub_423C(&v48);
  sub_FC1C((uint64_t)&v50);
  p_name = &HomeCommunicationFlow.name;
  if (!v5)
  {
LABEL_25:
    uint64_t v40 = sub_1BDD8();
    sub_1BE18(v40, (uint64_t)qword_A3EB0);
    os_log_type_t v41 = sub_A9E8();
    if (os_log_type_enabled(v3, v41))
    {
      uint64_t v42 = (uint8_t *)sub_144F0(2LL);
      *(_WORD *)uint64_t v42 = 0;
      sub_1BE98(&dword_0, v3, v41, "#ReferenceResolver SRR didn't return an INHomeFilter", v42);
      sub_48D4((uint64_t)v42);
    }

    sub_3C39C();
    sub_17678();
    char v30 = v52;
LABEL_30:
    sub_FC1C((uint64_t)v30);
    return 0LL;
  }

  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v7 = sub_1BDD8();
  uint64_t v8 = (os_log_s *)sub_4870(v7, (uint64_t)qword_A3EB0);
  uint64_t v9 = swift_retain_n(v5, 2LL);
  uint64_t v10 = v8;
  Logger.logObject.getter(v9);
  os_log_type_t v11 = sub_A9E8();
  if (sub_3C378(v11))
  {
    uint64_t v12 = (uint8_t *)sub_144F0(12LL);
    os_log_t log = v8;
    uint64_t v13 = sub_144F0(32LL);
    uint64_t v50 = v13;
    *(_DWORD *)uint64_t v12 = 136315138;
    uint64_t v48 = v5;
    uint64_t v14 = type metadata accessor for UsoEntity_common_UserEntity(0LL);
    sub_3C394();
    uint64_t v15 = String.init<A>(describing:)(&v48, v14);
    unint64_t v17 = v16;
    uint64_t v48 = sub_68DC4(v15, v16, &v50);
    sub_3C3A4((uint64_t)&v48, (uint64_t)&v49);
    sub_3C36C();
    unint64_t v18 = v17;
    p_name = (char **)(&HomeCommunicationFlow + 24);
    swift_bridgeObjectRelease(v18);
    _os_log_impl(&dword_0, v10, v0, "#ReferenceResolver entity: %s", v12, 0xCu);
    sub_3C388(v19, v20, (uint64_t)&type metadata for Any + 8);
    uint64_t v21 = v13;
    uint64_t v8 = log;
    sub_48D4(v21);
    sub_48D4((uint64_t)v12);
  }

  else
  {

    sub_3C36C();
  }

  uint64_t v31 = sub_3C394();
  uint64_t v3 = (os_log_s *)CodeGenBase.entity.getter(v31);
  sub_3C39C();
  uint64_t v32 = sub_2C9E0();
  swift_release(v3);
  if (!v32)
  {
    sub_3C39C();
    goto LABEL_25;
  }

  id v33 = v32;
  char v34 = v8;
  Logger.logObject.getter(v33);
  os_log_type_t v35 = sub_A9E8();
  if (sub_3C378(v35))
  {
    uint64_t v36 = (uint8_t *)sub_144F0(12LL);
    uint64_t v44 = (void *)sub_144F0(8LL);
    *(_DWORD *)uint64_t v36 = 138412290;
    uint64_t v50 = (uint64_t)v33;
    id v37 = v33;
    sub_3C3A4((uint64_t)&v50, (uint64_t)v51);
    void *v44 = v32;

    char v34 = v8;
    _os_log_impl(&dword_0, v8, v0, "#ReferenceResolver SRR selected homeName: %@ as the resolution result", v36, 0xCu);
    uint64_t v38 = sub_41BC(&qword_A0F50);
    sub_3C388(v38, v39, v38);
    sub_48D4((uint64_t)v44);
    sub_48D4((uint64_t)v36);
  }

  else
  {
  }

  sub_3C36C();
  sub_17678();
  sub_FC1C((uint64_t)v52);
  return v32;
}

uint64_t sub_3C324(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_41BC(&qword_A04A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_3C36C()
{
  return swift_release_n(v0, 2LL);
}

BOOL sub_3C378(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_3C388(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_arrayDestroy(v3, 1LL, a3);
}

uint64_t sub_3C394()
{
  return swift_retain(v0);
}

uint64_t sub_3C39C()
{
  return swift_release(v0);
}

uint64_t sub_3C3A4(uint64_t a1, uint64_t a2)
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(a1, a2, v3, v2);
}

id sub_3C3B0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8 = sub_41BC(&qword_A2100);
  uint64_t v9 = swift_allocObject(v8, 40LL, 7LL);
  *(_OWORD *)(v9 + 16) = xmmword_6FCA0;
  sub_3C494();
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(a3);
  id v10 = sub_3C548(a1, a2, a3, a4);
  *(void *)(v9 + 3sub_423C(v0 + 2) = v10;
  specialized Array._endMutation()(v10, v11);
  id v12 = [objc_allocWithZone(SASTItemGroup) init];
  sub_3C6F8((uint64_t)v12, v13, &qword_A2170, (SEL *)&selRef_setTemplateItems_);
  return v12;
}

unint64_t sub_3C494()
{
  unint64_t result = qword_A2108;
  if (!qword_A2108)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___SASTButtonItem);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_A2108);
  }

  return result;
}

id sub_3C4D0(uint64_t a1, uint64_t a2)
{
  id v5 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2)) init];
  sub_3C62C(a1, a2, v5);
  sub_3C6F8(v6, v7, &qword_A2178, (SEL *)&selRef_setCommands_);

  return v5;
}

id sub_3C548(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  id v10 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v5));
  id v11 = sub_3C6F0(v10);
  [v11 setCentered:a4 & 1];
  id v12 = sub_3C6F0(objc_allocWithZone(&OBJC_CLASS___SASTCommandTemplateAction));
  sub_3C67C(a3, v12, &qword_A2178, (SEL *)&selRef_setCommands_);
  sub_3C6E4(v13, "setAction:");

  id v14 = sub_3C6F0(objc_allocWithZone(&OBJC_CLASS___SAUIDecoratedText));
  sub_3C62C(a1, a2, v14);
  sub_3C6E4(v15, "setDecoratedLabel:");

  return v11;
}

void sub_3C62C(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  [a3 setText:v5];
}

void sub_3C67C(uint64_t a1, void *a2, uint64_t *a3, SEL *a4)
{
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  objc_msgSend(a2, *a4, isa);
}

id sub_3C6E4(uint64_t a1, const char *a2)
{
  return objc_msgSend(v2, a2, v3);
}

id sub_3C6F0(void *a1)
{
  return [a1 *(SEL *)(v1 + 2896)];
}

void sub_3C6F8(uint64_t a1, uint64_t a2, uint64_t *a3, SEL *a4)
{
}

id sub_3C704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v13 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v7)) init];
  sub_4BAC(a1, a2, v13, (SEL *)&selRef_setLabel_);
  sub_4BAC(a3, a4, v13, (SEL *)&selRef_setType_);
  sub_3CBCC(v14, v15, v16, (SEL *)&selRef_setIconType_);
  sub_3C9F8(a7, v13);

  return v13;
}

id sub_3C7C0(void *a1, void *a2, void *a3)
{
  uint64_t v5 = v3;
  id v9 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v5)) init];
  uint64_t v10 = sub_3CA5C(a3);
  if (v10)
  {
    sub_41BC(&qword_A2178);
    sub_3CBE4();
    uint64_t v10 = sub_3CBC0();
  }

  else
  {
    uint64_t v4 = 0LL;
  }

  sub_3CBB4(v10, "setConfirmCommands:");

  uint64_t v11 = sub_3CA5C(a2);
  if (v11)
  {
    sub_41BC(&qword_A2178);
    sub_3CBE4();
    uint64_t v11 = sub_3CBC0();
  }

  else
  {
    uint64_t v4 = 0LL;
  }

  sub_3CBB4(v11, "setDenyCommands:");

  uint64_t v12 = sub_3CABC(a1, (SEL *)&selRef_type);
  if (v13)
  {
    sub_3CBDC();
    uint64_t v12 = sub_3CBC0();
  }

  else
  {
    uint64_t v4 = 0LL;
  }

  sub_3CBB4(v12, "setCancelTrigger:");

  uint64_t v14 = sub_3CABC(a3, (SEL *)&selRef_label);
  if (v15)
  {
    sub_3CBDC();
    uint64_t v14 = sub_3CBC0();
  }

  else
  {
    uint64_t v4 = 0LL;
  }

  sub_3CBB4(v14, "setConfirmText:");

  uint64_t v16 = sub_3CABC(a2, (SEL *)&selRef_label);
  if (v17)
  {
    sub_3CBDC();
    uint64_t v16 = sub_3CBC0();
  }

  else
  {
    uint64_t v4 = 0LL;
  }

  sub_3CBB4(v16, "setDenyText:");

  uint64_t v18 = sub_41BC(&qword_A2100);
  uint64_t v19 = swift_allocObject(v18, 56LL, 7LL);
  *(_OWORD *)(v19 + 16) = xmmword_73330;
  *(void *)(v19 + 3sub_423C(v0 + 2) = a1;
  *(void *)(v19 + 40) = a2;
  *(void *)(v19 + 4sub_423C(v0 + 8) = a3;
  uint64_t v22 = v19;
  specialized Array._endMutation()(v19, v20);
  sub_3CB18(v22, v9);

  return v9;
}

id sub_3C980(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v3)) init];
  sub_3CBCC((uint64_t)v5, v6, v7, (SEL *)&selRef_setAnnouncerName_);
  [v5 setConfirmationOptions:a3];

  return v5;
}

void sub_3C9F8(uint64_t a1, void *a2)
{
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  [a2 setCommands:isa];
}

uint64_t sub_3CA5C(void *a1)
{
  id v1 = [a1 commands];
  if (!v1) {
    return 0LL;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_41BC(&qword_A2178);
  uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  return v4;
}

uint64_t sub_3CABC(void *a1, SEL *a2)
{
  id v2 = [a1 *a2];
  if (!v2) {
    return 0LL;
  }
  uint64_t v3 = v2;
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v4;
}

void sub_3CB18(uint64_t a1, void *a2)
{
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  [a2 setAllConfirmationOptions:isa];
}

unint64_t sub_3CB78()
{
  unint64_t result = qword_A2180;
  if (!qword_A2180)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___SAUIConfirmationOption);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_A2180);
  }

  return result;
}

id sub_3CBB4(uint64_t a1, const char *a2)
{
  return objc_msgSend(v2, a2, v3);
}

uint64_t sub_3CBC0()
{
  return swift_bridgeObjectRelease(v0);
}

void sub_3CBCC(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
}

NSString sub_3CBDC()
{
  return String._bridgeToObjectiveC()();
}

NSArray sub_3CBE4()
{
  return Array._bridgeToObjectiveC()();
}

uint64_t type metadata accessor for SendAnnouncementAceViewProvider(uint64_t a1)
{
  uint64_t result = qword_A21A0;
  if (!qword_A21A0) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SendAnnouncementAceViewProvider);
  }
  return result;
}

uint64_t sub_3CC28(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL);
}

uint64_t sub_3CC7C(uint64_t a1, uint64_t (*a2)(void, void), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v66 = a3;
  uint64_t v67 = a1;
  uint64_t v68 = a2;
  uint64_t v5 = type metadata accessor for SignpostLog.Signpost(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v69 = (uint64_t)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v66 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v66 - v12;
  if (qword_9F828 != -1) {
    swift_once(&qword_9F828, sub_17B5C);
  }
  id v14 = (id)qword_A0D90;
  uint64_t v15 = OSSignpostID.init(log:)();
  uint64_t v16 = static os_signpost_type_t.begin.getter(v15);
  os_signpost(_:dso:log:name:signpostID:)(v16, &dword_0, v14, "IdiomSensitiveViewBuilder", 25LL, 2LL, v13);
  uint64_t v17 = &v13[*(int *)(v5 + 20)];
  *(void *)uint64_t v17 = "IdiomSensitiveViewBuilder";
  *((void *)v17 + 1) = 25LL;
  v17[16] = 2;
  sub_3DA5C((uint64_t)v13, (uint64_t)v11);
  sub_3DA5C((uint64_t)v11, v69);
  uint64_t v18 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v19 = (v18 + 16) & ~v18;
  unint64_t v20 = (v7 + v19 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v21 = swift_allocObject(&unk_96CA8, v20 + 16, v18 | 7);
  sub_3DB30((uint64_t)v11, v21 + v19);
  uint64_t v22 = (void *)(v21 + v20);
  uint64_t v23 = v66;
  void *v22 = v68;
  v22[1] = v23;
  uint64_t v24 = v4[6];
  uint64_t v25 = v4[7];
  sub_8504(v4 + 3, v24);
  swift_retain_n(v23, 2LL);
  if ((dispatch thunk of DeviceState.isWatch.getter(v24, v25) & 1) != 0)
  {
    sub_D6EC(v67, (uint64_t)sub_3DB74, v21);
    swift_release(v21);
    uint64_t v26 = v69;
    goto LABEL_31;
  }

  uint64_t v27 = v69;
  uint64_t v28 = v4[6];
  uint64_t v29 = v4[7];
  sub_8504(v4 + 3, v28);
  if ((dispatch thunk of DeviceState.isCarPlay.getter(v28, v29) & 1) == 0)
  {
    uint64_t v38 = v4[6];
    uint64_t v39 = v4[7];
    sub_8504(v4 + 3, v38);
    if ((dispatch thunk of DeviceState.isHomePod.getter(v38, v39) & 1) != 0)
    {
      if (qword_9F820 != -1) {
        swift_once(&qword_9F820, sub_17ADC);
      }
      uint64_t v40 = type metadata accessor for Logger(0LL);
      uint64_t v41 = sub_4870(v40, (uint64_t)qword_A3EB0);
      uint64_t v32 = (os_log_s *)Logger.logObject.getter(v41);
      os_log_type_t v33 = static os_log_type_t.info.getter();
      BOOL v42 = os_log_type_enabled(v32, v33);
      uint64_t v35 = v67;
      if (!v42) {
        goto LABEL_16;
      }
      uint64_t v36 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v36 = 0;
      id v37 = "ButtonBuilder: Skipping button views for HomePod";
      goto LABEL_15;
    }

    uint64_t v45 = v4[6];
    uint64_t v46 = v4[7];
    sub_8504(v4 + 3, v45);
    char v47 = dispatch thunk of DeviceState.isPhone.getter(v45, v46);
    sub_DDD4((uint64_t)v4, (uint64_t)v70);
    if ((v47 & 1) != 0)
    {
      sub_3DBD8(v70);
      uint64_t v48 = v67;
    }

    else
    {
      uint64_t v49 = v72;
      uint64_t v50 = v73;
      sub_8504(v71, v72);
      char v51 = dispatch thunk of DeviceState.isPad.getter(v49, v50);
      sub_3DBD8(v70);
      uint64_t v48 = v67;
      if ((v51 & 1) == 0)
      {
        if (qword_9F820 != -1) {
          swift_once(&qword_9F820, sub_17ADC);
        }
        uint64_t v53 = type metadata accessor for Logger(0LL);
        uint64_t v54 = sub_4870(v53, (uint64_t)qword_A3EB0);
        uint64_t v55 = (os_log_s *)Logger.logObject.getter(v54);
        os_log_type_t v56 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v55, v56))
        {
          int v57 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)int v57 = 0;
          _os_log_impl( &dword_0,  v55,  v56,  "ButtonBuilder: Unsupported platform. Will not build an error button.",  v57,  2u);
          swift_slowDealloc(v57, -1LL, -1LL);
        }

        if ((unint64_t)v48 >> 62)
        {
          if (v48 < 0) {
            uint64_t v64 = v48;
          }
          else {
            uint64_t v64 = v48 & 0xFFFFFFFFFFFFFF8LL;
          }
          uint64_t v65 = sub_7B50(0LL, &qword_A0538, &OBJC_CLASS___SAAceView_ptr);
          swift_bridgeObjectRetain(v48);
          uint64_t v59 = _bridgeCocoaArray<A>(_:)(v64, v65);
          swift_bridgeObjectRelease(v48);
          uint64_t v48 = v59;
        }

        else
        {
          uint64_t v58 = swift_bridgeObjectRetain(v48);
          dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v58);
          sub_7B50(0LL, &qword_A0538, &OBJC_CLASS___SAAceView_ptr);
          uint64_t v59 = v48;
        }

        uint64_t v60 = v59;
        uint64_t v52 = v27;
        sub_2461C(v60, 0, v27, v68, v23);
        swift_release(v21);
        swift_bridgeObjectRelease(v48);
        goto LABEL_30;
      }
    }

    sub_D994(v48, (uint64_t)sub_3DB74, v21);
    swift_release(v21);
    uint64_t v52 = v27;
LABEL_30:
    uint64_t v26 = v52;
    goto LABEL_31;
  }

  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v30 = type metadata accessor for Logger(0LL);
  uint64_t v31 = sub_4870(v30, (uint64_t)qword_A3EB0);
  uint64_t v32 = (os_log_s *)Logger.logObject.getter(v31);
  os_log_type_t v33 = static os_log_type_t.info.getter();
  BOOL v34 = os_log_type_enabled(v32, v33);
  uint64_t v35 = v67;
  if (!v34) {
    goto LABEL_16;
  }
  uint64_t v36 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
  *(_WORD *)uint64_t v36 = 0;
  id v37 = "ButtonBuilder: Skipping button views for Car";
LABEL_15:
  _os_log_impl(&dword_0, v32, v33, v37, v36, 2u);
  swift_slowDealloc(v36, -1LL, -1LL);
LABEL_16:

  if ((unint64_t)v35 >> 62)
  {
    if (v35 < 0) {
      uint64_t v62 = v35;
    }
    else {
      uint64_t v62 = v35 & 0xFFFFFFFFFFFFFF8LL;
    }
    uint64_t v63 = sub_7B50(0LL, &qword_A0538, &OBJC_CLASS___SAAceView_ptr);
    swift_bridgeObjectRetain(v35);
    uint64_t v44 = _bridgeCocoaArray<A>(_:)(v62, v63);
    swift_bridgeObjectRelease(v35);
    uint64_t v35 = v44;
  }

  else
  {
    uint64_t v43 = swift_bridgeObjectRetain(v35);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v43);
    sub_7B50(0LL, &qword_A0538, &OBJC_CLASS___SAAceView_ptr);
    uint64_t v44 = v35;
  }

  sub_2461C(v44, 0, v27, v68, v23);
  swift_release(v21);
  swift_bridgeObjectRelease(v35);
  uint64_t v26 = v27;
LABEL_31:
  sub_3DC0C(v26);
  swift_release(v23);
  return sub_3DC0C((uint64_t)v13);
}

uint64_t sub_3D2D8(uint64_t a1, void *a2)
{
  *(void *)(v2 + qword_A2190) = a1;
  uint64_t v4 = sub_BB78((uint64_t)a2, v2 + qword_A2198);
  uint64_t v5 = DefaultAceViewProvider.init()(v4);
  sub_423C(a2);
  return v5;
}

uint64_t sub_3D328(uint64_t a1, void *a2, uint64_t a3, void (*a4)(uint64_t, void))
{
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v7 = sub_1BDD8();
  sub_4870(v7, (uint64_t)qword_A3EB0);
  sub_3243C();
  os_log_type_t v8 = sub_A9E8();
  if (os_log_type_enabled(v4, v8))
  {
    uint64_t v9 = (uint8_t *)sub_A968();
    *(_WORD *)uint64_t v9 = 0;
    sub_1BE98(&dword_0, v4, v8, "Making a SAIntentGroupHandleIntent that contains INPlayAnnouncementSoundIntent.", v9);
    sub_48D4((uint64_t)v9);
  }

  id v10 = [objc_allocWithZone(INPlayAnnouncementSoundIntent) initWithSoundType:1];
  id v11 = [a2 _metadata];
  [v10 _setMetadata:v11];

  sub_7B50(0LL, (unint64_t *)&qword_A21F0, &OBJC_CLASS___SAIntentGroupHandleIntent_ptr);
  id v12 = v10;
  uint64_t v13 = App.appIdentifier.getter();
  id v15 = sub_48E0(v12, v13, v14);
  uint64_t v16 = sub_41BC(&qword_A2100);
  uint64_t v17 = swift_allocObject(v16, 40LL, 7LL);
  *(_OWORD *)(v17 + 16) = xmmword_6FCA0;
  *(void *)(v17 + 3sub_423C(v0 + 2) = v15;
  uint64_t v21 = v17;
  specialized Array._endMutation()(v17, v18);
  id v19 = v15;
  a4(v21, 0LL);

  return swift_bridgeObjectRelease(v21);
}

uint64_t sub_3D4F8( uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t (*a6)(void, void), uint64_t a7)
{
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v14 = sub_1BDD8();
  sub_4870(v14, (uint64_t)qword_A3EB0);
  sub_3243C();
  os_log_type_t v15 = sub_A9E8();
  if (os_log_type_enabled(v7, v15))
  {
    uint64_t v16 = (uint8_t *)sub_A968();
    *(_WORD *)uint64_t v16 = 0;
    sub_1BE98(&dword_0, v7, v15, "Making a LaunchApp button.", v16);
    sub_48D4((uint64_t)v16);
  }

  sub_D46C(*(void *)((char *)v7 + qword_A2190), a1, a2, a4, (os_log_s *)((char *)v7 + qword_A2198), v18);
  sub_8504(v18, v18[3]);
  sub_3CC7C(a5, a6, a7);
  return sub_423C(v18);
}

uint64_t sub_3D634( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, void (*a8)(void), uint64_t a9)
{
  id v37 = a8;
  uint64_t v12 = type metadata accessor for ImageSize(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  os_log_type_t v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v36 = a9;
  uint64_t v16 = sub_1BDD8();
  sub_4870(v16, (uint64_t)qword_A3EB0);
  sub_3243C();
  os_log_type_t v17 = sub_A9E8();
  if (os_log_type_enabled(v9, v17))
  {
    uint64_t v18 = (uint8_t *)sub_A968();
    *(_WORD *)uint64_t v18 = 0;
    sub_1BE98(&dword_0, v9, v17, "Building disambiguation snippet", v18);
    sub_48D4((uint64_t)v18);
  }

  type metadata accessor for SiriKitAceViewBuilder(0LL);
  uint64_t v19 = dispatch thunk of static SiriKitAceViewBuilder.makeBuilder(deviceState:)((char *)v9 + qword_A2198);
  uint64_t v20 = dispatch thunk of SiriKitAceViewBuilder.withUtteranceViews(utteranceViews:)(a5);
  swift_release(v19);
  uint64_t v21 = sub_3DC48();
  if ((dispatch thunk of DeviceState.isCarPlay.getter(v21, v22) & 1) != 0)
  {
    SiriKitDisambiguationList.disambiguationItems.getter();
    uint64_t v23 = (void *)static SiriKitDisambiguationSnippetFactory.makeDisambiguationSnippetForCarPlay(disambiguationItems:deviceIsLocked:)();
    sub_18FB8();
    uint64_t v24 = dispatch thunk of SiriKitAceViewBuilder.withDisambiguationList(disambiguationList:)(v23);

LABEL_11:
    uint64_t v27 = swift_release(v24);
    goto LABEL_12;
  }

  uint64_t v25 = sub_3DC48();
  uint64_t v27 = dispatch thunk of DeviceState.isPhone.getter(v25, v26);
  if ((v27 & 1) != 0)
  {
    uint64_t v28 = SiriKitDisambiguationList.disambiguationItems.getter();
    (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, enum case for ImageSize.original(_:), v12);
    uint64_t v29 = (void *)static SiriKitDisambiguationSnippetFactory.makeDisambiguationSnippetPhone(disambiguationItems:deviceIsLocked:imageSize:)( v28,  a7 & 1,  v15);
    sub_18FB8();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(SAAceViewUIItemTypeItemTypeResultValue);
    sub_3D9C8(v30, v31, v29);
    id v32 = [objc_allocWithZone(SAUISash) init];
    if (qword_9F7E0 != -1) {
      swift_once(&qword_9F7E0, sub_F85C);
    }
    uint64_t v33 = qword_A3E60;
    uint64_t v34 = *(void *)algn_A3E68;
    swift_bridgeObjectRetain(*(void *)algn_A3E68);
    sub_3DA18(v33, v34, v32);
    swift_bridgeObjectRelease(v34);
    [v29 setSash:v32];
    uint64_t v24 = dispatch thunk of SiriKitAceViewBuilder.addSnippet(snippet:)(v29);

    goto LABEL_11;
  }

LABEL_12:
  dispatch thunk of SiriKitAceViewBuilder.build()(v27);
  v37();
  swift_release(v20);
  return sub_18FB8();
}

  _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v2, v17, 1LL, v0);
  sub_D304();
  uint64_t v19 = _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v2, 1LL, v0);
  if ((_DWORD)v19 == 1)
  {
    sub_6D53C(v19, &qword_A3DA8);
  }

  else
  {
    uint64_t v20 = sub_2458C(v1, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32));
    v21._uint64_t countAndFlagsBits = SpanProperty.valueString.getter(v20);
    if (v21._object) {
      sub_F8AC(v21);
    }
    sub_1C038(v1, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  }

  sub_6360();
}

  _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v1, v17, 1LL, v0);
  sub_D304();
  sub_6D2A8(v1, v9);
  uint64_t v19 = _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v9, 1LL, v0);
  if ((_DWORD)v19 == 1)
  {
    sub_6D53C(v19, &qword_A3DA8);
  }

  else
  {
    uint64_t v20 = SpanProperty.valueString.getter(v19);
    uint64_t v22 = v21;
    sub_1C038(v9, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
    if (v22)
    {
      v27._uint64_t countAndFlagsBits = v20;
      v27._object = v22;
      sub_F8B8(v27);
    }
  }

  sub_5F64(v1, &qword_A3DA8);
  sub_6360();
}

void sub_3D908()
{
}

uint64_t sub_3D934()
{
  return sub_423C((void *)(v0 + qword_A2198));
}

uint64_t sub_3D960()
{
  uint64_t v0 = DefaultAceViewProvider.deinit();
  swift_release(*(void *)(v0 + qword_A2190));
  sub_423C((void *)(v0 + qword_A2198));
  return v0;
}

uint64_t sub_3D9A4()
{
  uint64_t v0 = sub_3D960();
  return swift_deallocClassInstance(v0, 64LL, 7LL);
}

uint64_t sub_3D9C0()
{
  return type metadata accessor for SendAnnouncementAceViewProvider(0LL);
}

void sub_3D9C8(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  [a3 setItemType:v5];
}

void sub_3DA18(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = String._bridgeToObjectiveC()();
  [a3 setApplicationBundleIdentifier:v4];
}

uint64_t sub_3DA5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SignpostLog.Signpost(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_3DAA0()
{
  uint64_t v1 = *(void *)(type metadata accessor for SignpostLog.Signpost(0LL) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = (*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = type metadata accessor for OSSignpostID(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8LL))(v6, v7);
  swift_release(*(void *)(v0 + v5 + 8));
  return swift_deallocObject(v0, v5 + 16, v4);
}

uint64_t sub_3DB30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SignpostLog.Signpost(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

char *sub_3DB74(uint64_t a1, char a2)
{
  char v4 = a2 & 1;
  uint64_t v5 = *(void *)(type metadata accessor for SignpostLog.Signpost(0LL) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8LL);
  return sub_2461C(a1, v4, v2 + v6, *(uint64_t (**)(void, void))v7, *(void *)(v7 + 8));
}

void *sub_3DBD8(void *a1)
{
  return a1;
}

uint64_t sub_3DC0C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SignpostLog.Signpost(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_3DC48()
{
  uint64_t v1 = v0[3];
  sub_8504(v0, v1);
  return v1;
}

uint64_t sub_3DC70(uint64_t a1)
{
  v2[3] = a1;
  v2[4] = v1;
  uint64_t v3 = type metadata accessor for DialogPhase(0LL);
  v2[5] = sub_38350(*(void *)(v3 - 8));
  uint64_t v4 = type metadata accessor for OutputGenerationManifest(0LL);
  v2[6] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v2[7] = v5;
  v2[8] = sub_38350(v5);
  return swift_task_switch(sub_3DCD8, 0LL, 0LL);
}

uint64_t sub_3DCD8()
{
  uint64_t v1 = (void *)swift_task_alloc(dword_A23A4);
  *(void *)(v0 + 7sub_423C(v0 + 2) = v1;
  void *v1 = v0;
  v1[1] = sub_3DD24;
  return sub_3F774();
}

uint64_t sub_3DD24(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  uint64_t v5 = *(void *)(*v2 + 72);
  uint64_t v6 = *v2;
  swift_task_dealloc(v5);
  if (v1)
  {
    uint64_t v7 = v4[5];
    swift_task_dealloc(v4[8]);
    swift_task_dealloc(v7);
    return (*(uint64_t (**)(void))(v6 + 8))();
  }

  else
  {
    void v4[10] = a1;
    return swift_task_switch(sub_3DDB4, 0LL, 0LL);
  }

uint64_t sub_3DDB4()
{
  uint64_t v1 = (void *)v0[10];
  uint64_t v2 = v0[5];
  uint64_t v3 = type metadata accessor for ResponseFactory(0LL);
  swift_allocObject(v3, *(unsigned int *)(v3 + 48), *(unsigned __int16 *)(v3 + 52));
  v0[2] = ResponseFactory.init()();
  uint64_t v4 = sub_41BC(&qword_A2100);
  uint64_t v5 = swift_allocObject(v4, 40LL, 7LL);
  *(_OWORD *)(v5 + 16) = xmmword_6FCA0;
  *(void *)(v5 + 3sub_423C(v0 + 2) = v1;
  uint64_t v9 = v5;
  specialized Array._endMutation()(v5, v6);
  v0[11] = v9;
  static DialogPhase.error.getter(v1);
  OutputGenerationManifest.init(dialogPhase:_:)(v2, sub_A45C, 0LL);
  uint64_t v7 = (void *)swift_task_alloc(async function pointer to dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)[1]);
  v0[12] = v7;
  void *v7 = v0;
  v7[1] = sub_3DEC8;
  return dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)( v0[3],  v9,  v0[8],  v3,  &protocol witness table for ResponseFactory);
}

uint64_t sub_3DEC8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 88LL);
  uint64_t v3 = *(void *)(*(void *)v0 + 56LL);
  uint64_t v2 = *(void *)(*(void *)v0 + 64LL);
  uint64_t v4 = *(void *)(*(void *)v0 + 48LL);
  sub_38318(*(void *)(*(void *)v0 + 96LL));
  swift_bridgeObjectRelease(v1);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch(sub_3DF38, 0LL, 0LL);
}

uint64_t sub_3DF38()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 40);

  swift_release(*(void *)(v0 + 16));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_3DF8C()
{
  return swift_deallocClassInstance(v0, 64LL, 7LL);
}

uint64_t type metadata accessor for SendAnnouncementActiveCallCheckStrategy()
{
  return objc_opt_self(&OBJC_CLASS____TtC35HomeCommunicationFlowDelegatePlugin39SendAnnouncementActiveCallCheckStrategy);
}

uint64_t sub_3DFD8(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc(dword_A2224);
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_3E02C;
  return sub_3DC70(a1);
}

uint64_t sub_3E02C()
{
  return v0[1]();
}

uint64_t type metadata accessor for SendAnnouncementCATs(uint64_t a1)
{
  uint64_t result = qword_A22B8;
  if (!qword_A22B8) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SendAnnouncementCATs);
  }
  return result;
}

uint64_t sub_3E0A0(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL);
}

uint64_t sub_3E0DC(uint64_t a1, char a2)
{
  uint64_t v4 = sub_41BC(&qword_A1A90);
  uint64_t v5 = sub_AA48(v4, 128LL);
  *(_OWORD *)(v5 + 16) = xmmword_70FA0;
  sub_3EAE0(v5);
  uint64_t v6 = sub_41BC(&qword_A2308);
  *(void *)(v5 + 4sub_423C(v0 + 8) = a1;
  *(void *)(v5 + 7sub_423C(v0 + 2) = v6;
  strcpy((char *)(v5 + 80), "isHomeTarget");
  *(_BYTE *)(v5 + 9sub_423C(v0 + 3) = 0;
  *(_WORD *)(v5 + 94) = -5120;
  *(void *)(v5 + 120) = &type metadata for Bool;
  *(_BYTE *)(v5 + 96) = a2;
  swift_bridgeObjectRetain(a1);
  sub_3EAA4(0xD00000000000003DLL);
  return swift_bridgeObjectRelease(v5);
}

uint64_t sub_3E1AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_41BC(&qword_A1A90);
  uint64_t v7 = sub_AA48(v6, 176LL);
  *(_OWORD *)(v7 + 16) = xmmword_70F90;
  *(void *)(v7 + 3sub_423C(v0 + 2) = 0x746567726174LL;
  *(void *)(v7 + 40) = 0xE600000000000000LL;
  uint64_t v8 = sub_41BC(&qword_A2308);
  *(void *)(v7 + 4sub_423C(v0 + 8) = a1;
  *(void *)(v7 + 7sub_423C(v0 + 2) = v8;
  *(void *)(v7 + 80) = 0x656D614E656D6F68LL;
  *(void *)(v7 + 8sub_423C(v0 + 8) = 0xE900000000000073LL;
  *(void *)(v7 + 96) = a2;
  *(void *)(v7 + 120) = v8;
  *(void *)(v7 + 12sub_423C(v0 + 8) = 0x656369766564LL;
  *(void *)(v7 + 136) = 0xE600000000000000LL;
  if (a3)
  {
    uint64_t v9 = type metadata accessor for SirikitDeviceState(0LL);
    uint64_t v10 = a3;
  }

  else
  {
    uint64_t v10 = 0LL;
    uint64_t v9 = 0LL;
    *(void *)(v7 + 15sub_423C(v0 + 2) = 0LL;
    *(void *)(v7 + 160) = 0LL;
  }

  *(void *)(v7 + 144) = v10;
  *(void *)(v7 + 16sub_423C(v0 + 8) = v9;
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRetain(a2);
  swift_retain(a3);
  sub_3EAA4(0xD000000000000026LL);
  return sub_3EAC4(v7);
}

uint64_t sub_3E2C0()
{
  return sub_100CC(39LL);
}

uint64_t sub_3E2E8()
{
  return sub_100CC(66LL);
}

uint64_t sub_3E310()
{
  return sub_100CC(61LL);
}

uint64_t sub_3E338(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_3EAD8(a1, a2, a3, 0x73746567726174LL, 0xE700000000000000LL, 65LL);
}

uint64_t sub_3E364()
{
  return sub_100CC(61LL);
}

uint64_t sub_3E38C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_3EAB0(a1, a2, a3, a4, 0x8000000000078090LL, 0xD00000000000003DLL);
}

uint64_t sub_3E3B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_3EAB0(a1, a2, a3, a4, 0x8000000000078090LL, 0xD000000000000033LL);
}

uint64_t sub_3E3DC()
{
  return sub_100CC(52LL);
}

uint64_t sub_3E404()
{
  return sub_100CC(57LL);
}

uint64_t sub_3E42C()
{
  return sub_100CC(29LL);
}

uint64_t sub_3E454(uint64_t a1, char a2, char a3)
{
  uint64_t v6 = sub_41BC(&qword_A1A90);
  uint64_t v7 = sub_AA48(v6, 176LL);
  *(_OWORD *)(v7 + 16) = xmmword_70F90;
  *(void *)(v7 + 3sub_423C(v0 + 2) = 0xD000000000000016LL;
  *(void *)(v7 + 40) = 0x8000000000078090LL;
  uint64_t v8 = sub_41BC(&qword_A2308);
  *(void *)(v7 + 4sub_423C(v0 + 8) = a1;
  *(void *)(v7 + 7sub_423C(v0 + 2) = v8;
  *(void *)(v7 + 80) = 0x6970696365527369LL;
  *(void *)(v7 + 8sub_423C(v0 + 8) = 0xEF656D6F48746E65LL;
  *(_BYTE *)(v7 + 96) = a2;
  *(void *)(v7 + 120) = &type metadata for Bool;
  *(void *)(v7 + 12sub_423C(v0 + 8) = 0x796C7065527369LL;
  *(void *)(v7 + 136) = 0xE700000000000000LL;
  *(void *)(v7 + 16sub_423C(v0 + 8) = &type metadata for Bool;
  *(_BYTE *)(v7 + 144) = a3;
  swift_bridgeObjectRetain(a1);
  sub_3EAA4(0xD000000000000026LL);
  return sub_3EAC4(v7);
}

uint64_t sub_3E558(uint64_t a1)
{
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_41BC(&qword_A1A90);
  uint64_t v6 = sub_AA48(v5, 80LL);
  *(_OWORD *)(v6 + 16) = xmmword_6FA70;
  uint64_t v7 = (void *)(v6 + 48);
  *(void *)(v6 + 3sub_423C(v0 + 2) = 0x656D614E707061LL;
  *(void *)(v6 + 40) = 0xE700000000000000LL;
  sub_32840(a1, (uint64_t)v4, &qword_A13C0);
  uint64_t v8 = type metadata accessor for SpeakableString(0LL);
  if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0((uint64_t)v4, 1LL, v8) == 1)
  {
    sub_5F64((uint64_t)v4, &qword_A13C0);
    *(_OWORD *)uint64_t v7 = 0u;
    *(_OWORD *)(v6 + 64) = 0u;
  }

  else
  {
    *(void *)(v6 + 7sub_423C(v0 + 2) = v8;
    uint64_t v9 = sub_A800(v7);
    (*(void (**)(void *, char *, uint64_t))(*(void *)(v8 - 8) + 32LL))(v9, v4, v8);
  }

  sub_3EAA4(0xD00000000000001CLL);
  return swift_bridgeObjectRelease(v6);
}

uint64_t sub_3E6A4()
{
  return sub_100CC(38LL);
}

uint64_t sub_3E6CC()
{
  return sub_100CC(63LL);
}

uint64_t sub_3E6F4(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = sub_41BC(&qword_A1A90);
  uint64_t v7 = sub_AA48(v6, 128LL);
  *(_OWORD *)(v7 + 16) = xmmword_70FA0;
  uint64_t v8 = (void *)(v7 + 48);
  sub_3EAE0(v7);
  sub_32840(a1, v2, &qword_A13C0);
  uint64_t v9 = type metadata accessor for SpeakableString(0LL);
  if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v2, 1LL, v9) == 1)
  {
    sub_5F64(v2, &qword_A13C0);
    *(_OWORD *)uint64_t v8 = 0u;
    *(_OWORD *)(v7 + 64) = 0u;
  }

  else
  {
    *(void *)(v7 + 7sub_423C(v0 + 2) = v9;
    uint64_t v10 = sub_A800(v8);
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32LL))(v10, v2, v9);
  }

  *(void *)(v7 + 80) = 0x656369766564LL;
  *(void *)(v7 + 8sub_423C(v0 + 8) = 0xE600000000000000LL;
  if (a2)
  {
    uint64_t v11 = type metadata accessor for SirikitDeviceState(0LL);
    uint64_t v12 = a2;
  }

  else
  {
    uint64_t v12 = 0LL;
    uint64_t v11 = 0LL;
    *(void *)(v7 + 104) = 0LL;
    *(void *)(v7 + 1sub_423C(v0 + 12) = 0LL;
  }

  *(void *)(v7 + 96) = v12;
  *(void *)(v7 + 120) = v11;
  swift_retain(a2);
  sub_3EAA4(0xD000000000000036LL);
  return swift_bridgeObjectRelease(v7);
}

uint64_t sub_3E86C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_3EAD8(a1, a2, a3, 0x67726154656D6F68LL, 0xEA00000000007465LL, 51LL);
}

uint64_t sub_3E89C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = sub_41BC(&qword_A1A90);
  uint64_t v11 = sub_AA48(v10, 80LL);
  *(_OWORD *)(v11 + 16) = xmmword_6FA70;
  *(void *)(v11 + 3sub_423C(v0 + 2) = a4;
  *(void *)(v11 + 40) = a5;
  *(void *)(v11 + 7sub_423C(v0 + 2) = sub_41BC(&qword_A2308);
  *(void *)(v11 + 4sub_423C(v0 + 8) = a1;
  swift_bridgeObjectRetain(a1);
  dispatch thunk of CATWrapper.execute(catId:parameters:completion:)(a6);
  return swift_bridgeObjectRelease(v11);
}

uint64_t sub_3E950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_3E9A0(a1, a2, a3);
}

uint64_t sub_3E9A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for CATOption(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  sub_2F428();
  sub_41BC(&qword_A06E8);
  sub_11F5C();
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_32840(a1, (uint64_t)v11, &qword_A06E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v3, a2, v7);
  uint64_t v12 = CATWrapper.init(templateDir:options:globals:)(v11, v3, a3);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a2, v7);
  sub_5F64(a1, &qword_A06E8);
  return v12;
}

uint64_t sub_3EA9C()
{
  return type metadata accessor for SendAnnouncementCATs(0LL);
}

uint64_t sub_3EAA4(uint64_t a1)
{
  return dispatch thunk of CATWrapper.execute(catId:parameters:completion:)(a1);
}

uint64_t sub_3EAB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_3E89C(a1, a2, a3, 0xD000000000000016LL, a5, a6);
}

uint64_t sub_3EAC4(uint64_t a1)
{
  return swift_bridgeObjectRelease(a1);
}

uint64_t sub_3EAD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_3E89C(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFFFFFFLL | 0xD000000000000000LL);
}

uint64_t sub_3EAE0(uint64_t result)
{
  *(void *)(result + 3sub_423C(v0 + 2) = 0x746567726174LL;
  *(void *)(result + 40) = 0xE600000000000000LL;
  return result;
}

uint64_t type metadata accessor for SendAnnouncementCATsSimple(uint64_t a1)
{
  uint64_t result = qword_A2310;
  if (!qword_A2310) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SendAnnouncementCATsSimple);
  }
  return result;
}

uint64_t sub_3EB30(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL);
}

uint64_t sub_3EB6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void v4[4] = a3;
  void v4[5] = v3;
  void v4[2] = a1;
  void v4[3] = a2;
  return sub_382E0((uint64_t)sub_3EB80);
}

uint64_t sub_3EB80()
{
  uint64_t v2 = v0[3];
  uint64_t v1 = v0[4];
  uint64_t v3 = v0[2];
  uint64_t v4 = sub_41BC(&qword_A1A90);
  uint64_t v5 = sub_AA48(v4, 176LL);
  v0[6] = v5;
  *(_OWORD *)(v5 + 16) = xmmword_70F90;
  sub_3FDA8();
  *(void *)(v6 + 3sub_423C(v0 + 2) = v7;
  *(void *)(v6 + 40) = 0xE600000000000000LL;
  uint64_t v8 = sub_41BC(&qword_A2308);
  *(void *)(v5 + 4sub_423C(v0 + 8) = v3;
  *(void *)(v5 + 7sub_423C(v0 + 2) = v8;
  *(void *)(v5 + 80) = 0x656D614E656D6F68LL;
  *(void *)(v5 + 8sub_423C(v0 + 8) = 0xE900000000000073LL;
  *(void *)(v5 + 96) = v2;
  *(void *)(v5 + 120) = v8;
  *(void *)(v5 + 12sub_423C(v0 + 8) = 0x656369766564LL;
  *(void *)(v5 + 136) = 0xE600000000000000LL;
  uint64_t v9 = 0LL;
  if (v1)
  {
    uint64_t v9 = type metadata accessor for SirikitDeviceState(0LL);
  }

  else
  {
    *(void *)(v5 + 15sub_423C(v0 + 2) = 0LL;
    *(void *)(v5 + 160) = 0LL;
  }

  *(void *)(v5 + 144) = v1;
  *(void *)(v5 + 16sub_423C(v0 + 8) = v9;
  uint64_t v10 = *((unsigned int *)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:) + 1);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v2);
  swift_retain(v1);
  uint64_t v11 = (void *)swift_task_alloc(v10);
  v0[7] = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_3ECBC;
  sub_3FD00();
  return v13(0xD000000000000026LL);
}

uint64_t sub_3ECBC()
{
  if (v0)
  {
    sub_38360();
    return sub_38340(v2, v3, v4);
  }

  else
  {
    swift_bridgeObjectRelease(*(void *)(v1 + 48));
    uint64_t v6 = sub_3FD20();
    return sub_3FC50(v6, v7);
  }

uint64_t sub_3ED04()
{
  return sub_6698(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_3ED30()
{
  uint64_t v1 = (void *)sub_32E1C((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_10828;
  sub_10868();
  unint64_t v2 = sub_32E3C(49LL);
  return sub_32E30(v2, v3, v4, v5);
}

uint64_t sub_3ED88()
{
  uint64_t v1 = (void *)sub_32E1C((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_10828;
  sub_10868();
  unint64_t v2 = sub_32E3C(39LL);
  return sub_32E30(v2, v3, v4, v5);
}

uint64_t sub_3EDE0()
{
  uint64_t v1 = (void *)sub_32E1C((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_10828;
  sub_10868();
  unint64_t v2 = sub_32E3C(66LL);
  return sub_32E30(v2, v3, v4, v5);
}

uint64_t sub_3EE38()
{
  uint64_t v1 = (void *)sub_32E1C((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_10828;
  sub_10868();
  unint64_t v2 = sub_32E3C(61LL);
  return sub_32E30(v2, v3, v4, v5);
}

uint64_t sub_3EE90(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return sub_382E0((uint64_t)sub_3EEA0);
}

uint64_t sub_3EEA0()
{
  uint64_t v2 = sub_41BC(&qword_A1A90);
  uint64_t v3 = sub_3FC90(v2);
  *(_OWORD *)(sub_3FDDC(v3) + 16) = xmmword_6FA70;
  sub_3FDA8();
  *(void *)(v5 + 3sub_423C(v0 + 2) = v4 & 0xFFFFFFFFFFFFLL | 0x73000000000000LL;
  *(void *)(v5 + 40) = 0xE700000000000000LL;
  uint64_t v6 = sub_41BC(&qword_A2308);
  sub_3FDB8(v6);
  sub_3FCE8();
  uint64_t v7 = (void *)sub_3FD10();
  *(void *)(v1 + 40) = v7;
  sub_3FD9C(v7, (uint64_t)sub_3EF40);
  sub_3FD00();
  return sub_3FCC0(0xD000000000000041LL, v8, v0, v10);
}

uint64_t sub_3EF40()
{
  if (v0)
  {
    sub_38360();
    return sub_38340(v1, v2, v3);
  }

  else
  {
    sub_3FD18();
    uint64_t v5 = sub_3FD20();
    return sub_3FC50(v5, v6);
  }

uint64_t sub_3EF84()
{
  uint64_t v1 = (void *)sub_32E1C((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_10828;
  sub_10868();
  unint64_t v2 = sub_32E3C(61LL);
  return sub_32E30(v2, v3, v4, v5);
}

uint64_t sub_3EFDC(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return sub_382E0((uint64_t)sub_3EFEC);
}

uint64_t sub_3EFEC()
{
  uint64_t v1 = sub_41BC(&qword_A1A90);
  uint64_t v2 = sub_3FC90(v1);
  uint64_t v3 = sub_3FDDC(v2);
  *(_OWORD *)(v3 + 16) = xmmword_6FA70;
  *(void *)(v3 + 3sub_423C(v0 + 2) = 0xD000000000000016LL;
  *(void *)(v3 + 40) = 0x8000000000078090LL;
  uint64_t v4 = sub_41BC(&qword_A2308);
  sub_3FDB8(v4);
  sub_3FCD0();
  uint64_t v5 = (void *)sub_3FD10();
  *(void *)(v0 + 40) = v5;
  sub_3FD9C(v5, (uint64_t)sub_3EF40);
  uint64_t v6 = sub_3FD54(0xD00000000000003DLL);
  return sub_3FC84(v6, v7, v8, v9);
}

uint64_t sub_3F094(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return sub_382E0((uint64_t)sub_3F0A4);
}

uint64_t sub_3F0A4()
{
  uint64_t v1 = sub_41BC(&qword_A1A90);
  uint64_t v2 = sub_3FC90(v1);
  uint64_t v3 = sub_3FDDC(v2);
  *(_OWORD *)(v3 + 16) = xmmword_6FA70;
  *(void *)(v3 + 3sub_423C(v0 + 2) = 0xD000000000000016LL;
  *(void *)(v3 + 40) = 0x8000000000078090LL;
  uint64_t v4 = sub_41BC(&qword_A2308);
  sub_3FDB8(v4);
  sub_3FCD0();
  uint64_t v5 = (void *)sub_3FD10();
  *(void *)(v0 + 40) = v5;
  sub_3FD9C(v5, (uint64_t)sub_3F14C);
  uint64_t v6 = sub_3FD54(0xD000000000000033LL);
  return sub_3FC84(v6, v7, v8, v9);
}

uint64_t sub_3F14C()
{
  if (v0)
  {
    sub_38360();
    return sub_38340(v1, v2, v3);
  }

  else
  {
    sub_3FD18();
    uint64_t v5 = sub_3FD20();
    return sub_3FC50(v5, v6);
  }

uint64_t sub_3F190()
{
  return sub_6698(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_3F1BC()
{
  uint64_t v1 = (void *)sub_32E1C((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_10828;
  sub_10868();
  unint64_t v2 = sub_32E3C(52LL);
  return sub_32E30(v2, v3, v4, v5);
}

uint64_t sub_3F214()
{
  uint64_t v1 = (void *)sub_32E1C((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_10828;
  sub_10868();
  unint64_t v2 = sub_32E3C(57LL);
  return sub_32E30(v2, v3, v4, v5);
}

uint64_t sub_3F26C()
{
  uint64_t v1 = (void *)sub_32E1C((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_10828;
  sub_10868();
  unint64_t v2 = sub_32E3C(29LL);
  return sub_32E30(v2, v3, v4, v5);
}

uint64_t sub_3F2C4(uint64_t a1, char a2, char a3)
{
  *(_BYTE *)(v4 + 5sub_423C(v0 + 7) = a3;
  *(_BYTE *)(v4 + 56) = a2;
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = v3;
  return sub_382E0((uint64_t)sub_3F2DC);
}

uint64_t sub_3F2DC()
{
  char v1 = *(_BYTE *)(v0 + 57);
  char v2 = *(_BYTE *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = sub_41BC(&qword_A1A90);
  uint64_t v5 = sub_AA48(v4, 176LL);
  *(void *)(v0 + 3sub_423C(v0 + 2) = v5;
  *(_OWORD *)(v5 + 16) = xmmword_70F90;
  *(void *)(v5 + 3sub_423C(v0 + 2) = 0xD000000000000016LL;
  *(void *)(v5 + 40) = 0x8000000000078090LL;
  uint64_t v6 = sub_41BC(&qword_A2308);
  *(void *)(v5 + 4sub_423C(v0 + 8) = v3;
  *(void *)(v5 + 7sub_423C(v0 + 2) = v6;
  *(void *)(v5 + 80) = 0x6970696365527369LL;
  *(void *)(v5 + 8sub_423C(v0 + 8) = 0xEF656D6F48746E65LL;
  *(_BYTE *)(v5 + 96) = v2;
  *(void *)(v5 + 120) = &type metadata for Bool;
  *(void *)(v5 + 12sub_423C(v0 + 8) = 0x796C7065527369LL;
  *(void *)(v5 + 136) = 0xE700000000000000LL;
  *(void *)(v5 + 16sub_423C(v0 + 8) = &type metadata for Bool;
  *(_BYTE *)(v5 + 144) = v1;
  uint64_t v7 = sub_3FD84();
  swift_bridgeObjectRetain(v7);
  uint64_t v8 = (void *)sub_3FD10();
  *(void *)(v0 + 40) = v8;
  sub_3FD9C(v8, (uint64_t)sub_3F14C);
  return sub_3FC84(0xD000000000000026LL, 0x80000000000780B0LL, v5, v10);
}

BOOL sub_3F408(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_939D0, v2);
  swift_bridgeObjectRelease(object);
  return v3 != 0;
}

uint64_t sub_3F44C()
{
  return 0x7070416E65704FLL;
}

BOOL sub_3F470@<W0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  BOOL result = sub_3F408(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_3F4A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_3F44C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_3F4C8(uint64_t a1)
{
  void v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = sub_41BC(&qword_A13C0);
  v2[4] = sub_3FD2C(v3);
  sub_38360();
  return sub_382EC(v4, v5, v6);
}

uint64_t sub_3F508()
{
  uint64_t v1 = sub_41BC(&qword_A1A90);
  uint64_t v2 = sub_3FC90(v1);
  v0[5] = v2;
  *(_OWORD *)(v2 + 16) = xmmword_6FA70;
  *(void *)(v2 + 3sub_423C(v0 + 2) = 0x656D614E707061LL;
  *(void *)(v2 + 40) = 0xE700000000000000LL;
  sub_3FDD0(v2, v3, &qword_A13C0);
  uint64_t v4 = type metadata accessor for SpeakableString(0LL);
  if (sub_3FD70(v4) == 1)
  {
    sub_5F64(v0[4], &qword_A13C0);
    *(_OWORD *)(v2 + 4sub_423C(v0 + 8) = 0u;
    *(_OWORD *)(v2 + 64) = 0u;
  }

  else
  {
    uint64_t v5 = sub_3FDC4();
    sub_3FD40((uint64_t)v5);
  }

  uint64_t v6 = (void *)sub_32E1C((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  v0[6] = (uint64_t)v6;
  sub_3FB34();
  *uint64_t v6 = v0;
  v6[1] = sub_3F620;
  sub_10868();
  return v8(0xD00000000000001CLL);
}

uint64_t sub_3F620(uint64_t a1)
{
  uint64_t v4 = *(void *)(*v2 + 48);
  uint64_t v5 = *v2;
  *(void *)(v5 + 56) = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    sub_38360();
    return sub_38340(v6, v7, v8);
  }

  else
  {
    swift_bridgeObjectRelease(*(void *)(v5 + 40));
    sub_AA14();
    return sub_3FC50(a1, *(uint64_t (**)(void))(v5 + 8));
  }

uint64_t sub_3F694()
{
  return sub_6698(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_3F6C4()
{
  uint64_t v1 = (void *)sub_32E1C((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_10828;
  sub_10868();
  unint64_t v2 = sub_32E3C(38LL);
  return sub_32E30(v2, v3, v4, v5);
}

uint64_t sub_3F71C()
{
  uint64_t v1 = (void *)sub_32E1C((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_F5FC;
  sub_10868();
  unint64_t v2 = sub_32E3C(63LL);
  return sub_32E30(v2, v3, v4, v5);
}

uint64_t sub_3F774()
{
  uint64_t v1 = (void *)sub_32E1C((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_10828;
  sub_10868();
  unint64_t v2 = sub_32E3C(44LL);
  return sub_32E30(v2, v3, v4, v5);
}

uint64_t sub_3F7CC()
{
  uint64_t v1 = (void *)sub_32E1C((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_10828;
  sub_10868();
  unint64_t v2 = sub_32E3C(42LL);
  return sub_32E30(v2, v3, v4, v5);
}

uint64_t sub_3F824(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  void v3[2] = a1;
  uint64_t v4 = sub_41BC(&qword_A13C0);
  v3[5] = sub_3FD2C(v4);
  sub_38360();
  return sub_382EC(v5, v6, v7);
}

uint64_t sub_3F868()
{
  uint64_t v1 = sub_41BC(&qword_A1A90);
  uint64_t v2 = sub_AA48(v1, 128LL);
  v0[6] = v2;
  *(_OWORD *)(v2 + 16) = xmmword_70FA0;
  sub_3FDA8();
  *(void *)(v3 + 3sub_423C(v0 + 2) = v4;
  *(void *)(v3 + 40) = 0xE600000000000000LL;
  sub_3FDD0(v3, v5, &qword_A13C0);
  uint64_t v6 = type metadata accessor for SpeakableString(0LL);
  if (sub_3FD70(v6) == 1)
  {
    sub_5F64(v0[5], &qword_A13C0);
    *(_OWORD *)(v2 + 4sub_423C(v0 + 8) = 0u;
    *(_OWORD *)(v2 + 64) = 0u;
  }

  else
  {
    uint64_t v7 = sub_3FDC4();
    sub_3FD40((uint64_t)v7);
  }

  uint64_t v8 = v0[3];
  *(void *)(v2 + 80) = 0x656369766564LL;
  *(void *)(v2 + 8sub_423C(v0 + 8) = 0xE600000000000000LL;
  uint64_t v9 = 0LL;
  if (v8)
  {
    uint64_t v9 = type metadata accessor for SirikitDeviceState(0LL);
  }

  else
  {
    *(void *)(v2 + 104) = 0LL;
    *(void *)(v2 + 1sub_423C(v0 + 12) = 0LL;
  }

  *(void *)(v2 + 96) = v8;
  *(void *)(v2 + 120) = v9;
  uint64_t v10 = sub_3FD84();
  swift_retain(v10);
  uint64_t v11 = (void *)sub_3FD10();
  v0[7] = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_3F994;
  sub_3FD00();
  return sub_3FC84(0xD000000000000036LL, v12, v2, v14);
}

uint64_t sub_3F994()
{
  if (v1)
  {
    sub_38360();
    return sub_38340(v4, v5, v6);
  }

  else
  {
    swift_bridgeObjectRelease(*(void *)(v2 + 48));
    sub_AA14();
    return sub_3FC50(v0, *(uint64_t (**)(void))(v3 + 8));
  }

uint64_t sub_3F9E8()
{
  return sub_6698(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_3FA18(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return sub_382E0((uint64_t)sub_3FA28);
}

uint64_t sub_3FA28()
{
  uint64_t v2 = sub_41BC(&qword_A1A90);
  uint64_t v3 = sub_3FC90(v2);
  uint64_t v4 = sub_3FDDC(v3);
  *(_OWORD *)(v4 + 16) = xmmword_6FA70;
  *(void *)(v4 + 3sub_423C(v0 + 2) = 0x67726154656D6F68LL;
  *(void *)(v4 + 40) = 0xEA00000000007465LL;
  uint64_t v5 = sub_41BC(&qword_A2308);
  sub_3FDB8(v5);
  sub_3FCE8();
  uint64_t v6 = (void *)sub_3FD10();
  *(void *)(v1 + 40) = v6;
  sub_3FD9C(v6, (uint64_t)sub_3EF40);
  sub_3FD00();
  return sub_3FCC0(0xD000000000000033LL, v7, v0, v9);
}

uint64_t sub_3FAD4()
{
  uint64_t v1 = (void *)sub_32E1C((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_10828;
  sub_10868();
  unint64_t v2 = sub_32E3C(46LL);
  return sub_32E30(v2, v3, v4, v5);
}

uint64_t sub_3FB2C()
{
  return type metadata accessor for SendAnnouncementCATsSimple(0LL);
}

unint64_t sub_3FB34()
{
  unint64_t result = qword_A2408;
  if (!qword_A2408)
  {
    unint64_t result = swift_getWitnessTable(&unk_734F0, &type metadata for SendAnnouncementCATsSimple.OpenHomeAppDialogIds);
    atomic_store(result, (unint64_t *)&qword_A2408);
  }

  return result;
}

uint64_t storeEnumTagSinglePayload for SendAnnouncementCATsSimple.OpenHomeAppDialogIds( uint64_t a1, int a2, int a3)
{
  else {
    int v3 = 2;
  }
  else {
    LODWORD(sub_21A1C(v0, v4) = v3;
  }
  if (a3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2) {
    return ((uint64_t (*)(void))((char *)sub_3FBB0 + 4 * byte_73420[v4]))();
  }
  else {
    return ((uint64_t (*)(void))((char *)sub_3FBD0 + 4 * byte_73425[v4]))();
  }
}

_BYTE *sub_3FBB0(_BYTE *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

_BYTE *sub_3FBD0(_BYTE *result)
{
  *unint64_t result = 0;
  return result;
}

_DWORD *sub_3FBD8(_DWORD *result, int a2)
{
  *unint64_t result = a2;
  return result;
}

_WORD *sub_3FBE0(_WORD *result, __int16 a2)
{
  *unint64_t result = a2;
  return result;
}

_WORD *sub_3FBE8(_WORD *result)
{
  *unint64_t result = 0;
  return result;
}

_DWORD *sub_3FBF0(_DWORD *result)
{
  *unint64_t result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SendAnnouncementCATsSimple.OpenHomeAppDialogIds()
{
  return &type metadata for SendAnnouncementCATsSimple.OpenHomeAppDialogIds;
}

unint64_t sub_3FC10()
{
  unint64_t result = qword_A2410;
  if (!qword_A2410)
  {
    unint64_t result = swift_getWitnessTable(&unk_734C8, &type metadata for SendAnnouncementCATsSimple.OpenHomeAppDialogIds);
    atomic_store(result, (unint64_t *)&qword_A2410);
  }

  return result;
}

uint64_t sub_3FC50(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_3FC60()
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t *)(v2 - 8);
  *uint64_t v4 = *v1;
  uint64_t v5 = *(void *)(v3 + 40);
  *uint64_t v4 = *v1;
  *(void *)(v3 + 4sub_423C(v0 + 8) = v0;
  return swift_task_dealloc(v5);
}

uint64_t sub_3FC84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t sub_3FC90(uint64_t a1)
{
  return swift_allocObject(a1, 80LL, 7LL);
}

uint64_t sub_3FC9C()
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t *)(v2 - 8);
  *uint64_t v4 = *v1;
  uint64_t v5 = *(void *)(v3 + 56);
  *uint64_t v4 = *v1;
  *(void *)(v3 + 64) = v0;
  return swift_task_dealloc(v5);
}

uint64_t sub_3FCC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t sub_3FCD0()
{
  return swift_bridgeObjectRetain(v0);
}

uint64_t sub_3FCE8()
{
  return swift_bridgeObjectRetain(v0);
}

  ;
}

uint64_t sub_3FD10()
{
  return swift_task_alloc(v0);
}

uint64_t sub_3FD18()
{
  return swift_bridgeObjectRelease(*(void *)(v0 + 32));
}

uint64_t sub_3FD20()
{
  return v0;
}

uint64_t sub_3FD2C(uint64_t a1)
{
  return swift_task_alloc((*(void *)(*(void *)(a1 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
}

uint64_t sub_3FD40(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v1 - 8) + 32LL))(a1, v2, v1);
}

uint64_t sub_3FD54@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t sub_3FD70(uint64_t a1)
{
  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v1, 1LL, a1);
}

uint64_t sub_3FD84()
{
  return v0;
}

void *sub_3FD9C@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *unint64_t result = v2;
  result[1] = a2;
  return result;
}

  ;
}

uint64_t sub_3FDB8(uint64_t result)
{
  *(void *)(v1 + 7sub_423C(v0 + 2) = result;
  *(void *)(v1 + 4sub_423C(v0 + 8) = v2;
  return result;
}

void *sub_3FDC4()
{
  *(void *)(v2 + 7sub_423C(v0 + 2) = v1;
  return sub_A800(v0);
}

uint64_t sub_3FDD0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_32840(v3, v4, a3);
}

uint64_t sub_3FDDC(uint64_t result)
{
  *(void *)(v1 + 3sub_423C(v0 + 2) = result;
  return result;
}

uint64_t sub_3FDE8(char a1)
{
  int v4 = a1 & 1;
  v35[3] = &unk_952F0;
  v35[4] = sub_46A18();
  LOBYTE(v35[0]) = v4;
  char v5 = isFeatureEnabled(_:)(v35);
  sub_423C(v35);
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v6 = sub_1BDD8();
  sub_4870(v6, (uint64_t)qword_A3EB0);
  sub_3243C();
  os_log_type_t v7 = sub_A9E8();
  if (sub_17604(v7))
  {
    uint64_t v8 = sub_144F0(28LL);
    uint64_t v9 = sub_144F0(64LL);
    v35[0] = v9;
    *(_DWORD *)uint64_t v8 = 136315650;
    uint64_t v10 = StaticString.description.getter("SiriNL", 6LL, 2LL);
    uint64_t v13 = sub_46B94(v10, v11, v12);
    sub_46AE4(v13, v14, v15, v8 + 12, v16, v17, v18, v19, v13);
    swift_bridgeObjectRelease(v3);
    *(_WORD *)(v8 + sub_423C(v0 + 12) = 2080;
    if (v4) {
      uint64_t v20 = "SiriInterpretationGroupFiltering";
    }
    else {
      uint64_t v20 = "SiriMiniUsoEntitySpan";
    }
    if (v4) {
      uint64_t v21 = 32LL;
    }
    else {
      uint64_t v21 = 21LL;
    }
    uint64_t v22 = StaticString.description.getter(v20, v21, 2LL);
    uint64_t v25 = sub_46B94(v22, v23, v24);
    sub_46AE4(v25, v26, v27, v8 + 22, v28, v29, v30, v31, v25);
    swift_bridgeObjectRelease(v3);
    *(_WORD *)(v8 + 2sub_423C(v0 + 2) = 1024;
    int v33 = v5 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34, v8 + 24, v8 + 28);
    _os_log_impl(&dword_0, v1, v2, "%s/%s=%{BOOL}d", (uint8_t *)v8, 0x1Cu);
    swift_arrayDestroy(v9, 2LL, (char *)&type metadata for Any + 8);
    sub_48D4(v9);
    sub_48D4(v8);
  }

  return v5 & 1;
}

uint64_t sub_3FFC8()
{
  v15[3] = (uint64_t)&unk_953A0;
  v15[4] = sub_46434();
  char v0 = isFeatureEnabled(_:)(v15);
  sub_423C(v15);
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v1 = type metadata accessor for Logger(0LL);
  uint64_t v2 = sub_4870(v1, (uint64_t)qword_A3EB0);
  uint64_t v3 = (os_log_s *)Logger.logObject.getter(v2);
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc(28LL, -1LL);
    uint64_t v6 = swift_slowAlloc(64LL, -1LL);
    v15[0] = v6;
    *(_DWORD *)uint64_t v5 = 136315650;
    uint64_t v7 = StaticString.description.getter("ResponseFramework", 17LL, 2LL);
    unint64_t v9 = v8;
    uint64_t v14 = sub_68DC4(v7, v8, v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, v15, v5 + 4, v5 + 12);
    swift_bridgeObjectRelease(v9);
    *(_WORD *)(v5 + sub_423C(v0 + 12) = 2080;
    uint64_t v10 = StaticString.description.getter("SMART", 5LL, 2LL);
    unint64_t v12 = v11;
    uint64_t v14 = sub_68DC4(v10, v11, v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, v15, v5 + 14, v5 + 22);
    swift_bridgeObjectRelease(v12);
    *(_WORD *)(v5 + 2sub_423C(v0 + 2) = 1024;
    LODWORD(v14) = v0 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, (char *)&v14 + 4, v5 + 24, v5 + 28);
    _os_log_impl(&dword_0, v3, v4, "%s/%s=%{BOOL}d", (uint8_t *)v5, 0x1Cu);
    swift_arrayDestroy(v6, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v6, -1LL, -1LL);
    swift_slowDealloc(v5, -1LL, -1LL);
  }

  return v0 & 1;
}

uint64_t sub_401E0( uint64_t a1, uint64_t a2, void (**a3)(char *, void, uint64_t), uint64_t a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v106 = a5;
  uint64_t v13 = sub_41BC(&qword_A0EF8);
  __chkstk_darwin(v13);
  uint64_t v104 = (char *)v100 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v103 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v15 = *(void (***)(char *, void, uint64_t))(v103 - 8);
  uint64_t v16 = __chkstk_darwin(v103);
  uint64_t v102 = (char *)v100 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  uint64_t v105 = (char *)v100 - v18;
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v19 = type metadata accessor for Logger(0LL);
  uint64_t v20 = sub_4870(v19, (uint64_t)qword_A3EB0);
  uint64_t v21 = (os_log_s *)Logger.logObject.getter(v20);
  os_log_type_t v22 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v21, v22))
  {
    unint64_t v23 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    uint64_t v107 = a3;
    uint64_t v24 = v15;
    uint64_t v25 = a2;
    uint64_t v26 = v7;
    uint64_t v27 = a1;
    uint64_t v28 = a4;
    uint64_t v29 = v20;
    uint64_t v30 = a6;
    uint64_t v31 = v23;
    *(_WORD *)unint64_t v23 = 0;
    _os_log_impl( &dword_0,  v21,  v22,  "#HomeCommunicationNLContextProvider makeNeedsDisambiguationContextFor called",  v23,  2u);
    id v32 = v31;
    a6 = v30;
    uint64_t v20 = v29;
    a4 = v28;
    a1 = v27;
    uint64_t v7 = v26;
    a2 = v25;
    uint64_t v15 = v24;
    a3 = v107;
    swift_slowDealloc(v32, -1LL, -1LL);
  }

  swift_bridgeObjectRetain(a3);
  v113._uint64_t countAndFlagsBits = a2;
  v113._object = a3;
  unint64_t v33 = sub_1EDD4(v113);
  if (v33 == 1)
  {
    void v100[3] = v7;
    NLContextUpdate.init()();
    sub_187F0(0);
    NLContextUpdate.weightedPromptTargetDomain.setter();
    uint64_t v34 = sub_41BC(&qword_A0E30);
    uint64_t v35 = swift_allocObject(v34, 48LL, 7LL);
    __int128 v101 = xmmword_6FA70;
    *(_OWORD *)(v35 + 16) = xmmword_6FA70;
    Swift::String v36 = String.uppercased()();
    Swift::String v110 = v36;
    uint64_t v108 = 32LL;
    unint64_t v109 = 0xE100000000000000LL;
    uint64_t v111 = 95LL;
    unint64_t v112 = 0xE100000000000000LL;
    unint64_t v37 = sub_CD6C();
    uint64_t v38 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( &v108,  &v111,  0LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String,  &type metadata for String,  v37,  v37,  v37);
    uint64_t v40 = v39;
    swift_bridgeObjectRelease(v36._object);
    sub_18938(v38, v40, 3u);
    uint64_t v42 = v41;
    uint64_t v44 = v43;
    swift_bridgeObjectRelease(v40);
    *(void *)(v35 + 3sub_423C(v0 + 2) = v42;
    *(void *)(v35 + 40) = v44;
    NLContextUpdate.weightedPromptResponseOptions.setter(v35);
    uint64_t v45 = sub_260F0();
    int64_t v46 = (int64_t)sub_569D4(v45);
    uint64_t v47 = swift_bridgeObjectRelease(v45);
    uint64_t v107 = v15;
    uint64_t v48 = v106;
    if (!v46)
    {
LABEL_37:
      uint64_t v89 = (os_log_s *)Logger.logObject.getter(v47);
      os_log_type_t v90 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v89, v90))
      {
        uint64_t v91 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v92 = swift_slowAlloc(32LL, -1LL);
        v110._uint64_t countAndFlagsBits = v92;
        *(_DWORD *)uint64_t v91 = 136315138;
        uint64_t v93 = v105;
        swift_beginAccess(v105, &v108, 0LL, 0LL);
        uint64_t v94 = v102;
        uint64_t v95 = v103;
        ((void (**)(char *, char *, uint64_t))v107)[2](v102, v93, v103);
        uint64_t v96 = String.init<A>(describing:)(v94, v95);
        unint64_t v98 = v97;
        uint64_t v111 = sub_68DC4(v96, v97, &v110._countAndFlagsBits);
        uint64_t v48 = v106;
        uint64_t v15 = v107;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v111, &v112, v91 + 4, v91 + 12);
        swift_bridgeObjectRelease(v98);
        _os_log_impl(&dword_0, v89, v90, "#HomeCommunicationNLContextProvider nlContext: %s", v91, 0xCu);
        swift_arrayDestroy(v92, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v92, -1LL, -1LL);
        swift_slowDealloc(v91, -1LL, -1LL);
      }

      else
      {

        uint64_t v95 = v103;
        uint64_t v93 = v105;
      }

      swift_beginAccess(v93, &v110, 0LL, 0LL);
      uint64_t v99 = (uint64_t)v104;
      ((void (**)(char *, char *, uint64_t))v15)[2](v104, v93, v95);
      _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v99, 0LL, 1LL, v95);
      v48(v99);
      sub_27DEC(v99, &qword_A0EF8);
      return ((uint64_t (*)(char *, uint64_t))v15[1])(v93, v95);
    }

    uint64_t v49 = swift_allocObject(v34, 48LL, 7LL);
    *(_OWORD *)(v49 + 16) = v101;
    sub_187F0(5u);
    *(void *)(v49 + 3sub_423C(v0 + 2) = v50;
    *(void *)(v49 + 40) = v51;
    NLContextUpdate.weightedPromptResponseTargets.setter(v49);
    NLContextUpdate.weightedPromptStrict.setter(1LL);
    uint64_t v52 = swift_bridgeObjectRetain_n(v46, 2LL);
    uint64_t v53 = (os_log_s *)Logger.logObject.getter(v52);
    os_log_type_t v54 = static os_log_type_t.debug.getter();
    BOOL v55 = os_log_type_enabled(v53, v54);
    v100[1] = v20;
    if (v55)
    {
      os_log_type_t v56 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v57 = swift_slowAlloc(32LL, -1LL);
      v110._uint64_t countAndFlagsBits = v57;
      *(_DWORD *)os_log_type_t v56 = 136315138;
      uint64_t v58 = sub_7B50(0LL, (unint64_t *)&qword_A0F08, &OBJC_CLASS___INHomeFilter_ptr);
      uint64_t v59 = swift_bridgeObjectRetain(v46);
      uint64_t v60 = Array.description.getter(v59, v58);
      unint64_t v62 = v61;
      swift_bridgeObjectRelease(v46);
      uint64_t v63 = v60;
      uint64_t v15 = v107;
      uint64_t v108 = sub_68DC4(v63, v62, &v110._countAndFlagsBits);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v108, &v109, v56 + 4, v56 + 12);
      swift_bridgeObjectRelease_n(v46, 2LL);
      swift_bridgeObjectRelease(v62);
      _os_log_impl( &dword_0,  v53,  v54,  "#HomeCommunicationNLContextProvider makeDisambiguationSDAForFilters for homes: %s",  v56,  0xCu);
      swift_arrayDestroy(v57, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v57, -1LL, -1LL);
      swift_slowDealloc(v56, -1LL, -1LL);
    }

    else
    {

      swift_bridgeObjectRelease_n(v46, 2LL);
    }

    v100[2] = a6;
    if ((unint64_t)v46 >> 62)
    {
      if (v46 >= 0) {
        uint64_t v84 = v46 & 0xFFFFFFFFFFFFFF8LL;
      }
      else {
        uint64_t v84 = v46;
      }
      swift_bridgeObjectRetain(v46);
      uint64_t result = _CocoaArrayWrapper.endIndex.getter(v84);
      uint64_t v70 = result;
      if (result) {
        goto LABEL_15;
      }
    }

    else
    {
      uint64_t v70 = *(void *)((char *)&dword_10 + (v46 & 0xFFFFFFFFFFFFFF8LL));
      uint64_t result = swift_bridgeObjectRetain(v46);
      if (v70)
      {
LABEL_15:
        if (v70 < 1)
        {
          __break(1u);
          return result;
        }

        uint64_t v71 = 0LL;
        uint64_t v72 = (char *)_swiftEmptyArrayStorage;
        do
        {
          if ((v46 & 0xC000000000000001LL) != 0) {
            id v73 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v71, v46);
          }
          else {
            id v73 = *(id *)(v46 + 8 * v71 + 32);
          }
          uint64_t v74 = v73;
          id v75 = [v73 home];
          if (v75)
          {
            uint64_t v76 = v75;
            id v77 = [v75 spokenPhrase];

            uint64_t v78 = static String._unconditionallyBridgeFromObjectiveC(_:)(v77);
            uint64_t v80 = v79;

            if ((swift_isUniquelyReferenced_nonNull_native(v72) & 1) == 0) {
              uint64_t v72 = sub_5D33C(0LL, *((void *)v72 + 2) + 1LL, 1, (uint64_t)v72);
            }
            unint64_t v82 = *((void *)v72 + 2);
            unint64_t v81 = *((void *)v72 + 3);
            if (v82 >= v81 >> 1) {
              uint64_t v72 = sub_5D33C((char *)(v81 > 1), v82 + 1, 1, (uint64_t)v72);
            }
            *((void *)v72 + sub_423C(v0 + 2) = v82 + 1;
            unint64_t v83 = &v72[16 * v82];
            *((void *)v83 + 4) = v78;
            *((void *)v83 + 5) = v80;
            uint64_t v15 = v107;
          }

          else
          {
          }

          ++v71;
        }

        while (v70 != v71);
        goto LABEL_34;
      }
    }

    uint64_t v72 = (char *)_swiftEmptyArrayStorage;
LABEL_34:
    swift_bridgeObjectRelease(v46);
    if (qword_9F7D8 != -1) {
      swift_once(&qword_9F7D8, sub_F244);
    }
    uint64_t v85 = qword_A3E38;
    swift_retain(qword_A3E38);
    uint64_t v86 = sub_46558((uint64_t)v72, v85);
    swift_release(v85);
    NLContextUpdate.displayHints.setter(v86);
    uint64_t v87 = sub_41E08(v46);
    swift_bridgeObjectRelease(v46);
    NLContextUpdate.rrEntities.setter(v87);
    uint64_t v88 = sub_40B44((uint64_t)v72);
    swift_bridgeObjectRelease(v72);
    uint64_t v47 = NLContextUpdate.nluSystemDialogActs.setter(v88);
    uint64_t v48 = v106;
    goto LABEL_37;
  }

  uint64_t v64 = (os_log_s *)Logger.logObject.getter(v33);
  os_log_type_t v65 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v64, v65))
  {
    uint64_t v66 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v66 = 0;
    _os_log_impl(&dword_0, v64, v65, "Incorrect slot presented for disambiguation", v66, 2u);
    swift_slowDealloc(v66, -1LL, -1LL);
  }

  uint64_t v67 = sub_41BC(&qword_A2630);
  uint64_t v68 = (uint64_t (*)(uint64_t, uint64_t, void (**)(char *, void, uint64_t), uint64_t, void (*)(uint64_t), uint64_t))method lookup function for DefaultNLContextProvider(v67, &method descriptor for DefaultNLContextProvider.makeNeedsDisambiguationContextFor(intent:parameter:resolutionResult:_:));
  return v68(a1, a2, a3, a4, v106, a6);
}

uint64_t sub_40B44(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Siri_Nlu_External_UsoGraph(0LL);
  __chkstk_darwin(v2);
  os_log_type_t v4 = (char *)&v104 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v140 = type metadata accessor for Siri_Nlu_External_UserStatedTask(0LL);
  uint64_t v131 = *(void *)(v140 - 8);
  uint64_t v5 = __chkstk_darwin(v140);
  uint64_t v128 = (char *)&v104 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)&v104 - v7;
  uint64_t v129 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  uint64_t v141 = *(void *)(v129 - 8);
  uint64_t v9 = __chkstk_darwin(v129);
  uint64_t v139 = (char *)&v104 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v130 = (char *)&v104 - v11;
  uint64_t v122 = type metadata accessor for Siri_Nl_Core_Protocol_UsoGraph(0LL);
  uint64_t v121 = *(void *)(v122 - 8);
  __chkstk_darwin(v122);
  unint64_t v127 = (char *)&v104 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_41BC(&qword_A0F30);
  __chkstk_darwin(v13);
  uint64_t v126 = (uint64_t)&v104 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v125 = type metadata accessor for IdentifierValue(0LL);
  uint64_t v124 = *(void *)(v125 - 8);
  __chkstk_darwin(v125);
  uint64_t v123 = (char *)&v104 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = type metadata accessor for Siri_Nlu_External_SystemDialogAct(0LL);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v104 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = type metadata accessor for Siri_Nlu_External_SystemGaveOptions(0LL);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = __chkstk_darwin(v20);
  Swift::String v110 = (char *)&v104 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v22);
  uint64_t v111 = (char *)&v104 - v24;
  uint64_t v25 = _swiftEmptyArrayStorage;
  unint64_t v146 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v26 = *(void *)(a1 + 16);
  if (v26)
  {
    uint64_t v117 = v4;
    uint64_t v105 = v21;
    uint64_t v106 = v20;
    uint64_t v107 = v19;
    uint64_t v108 = v17;
    uint64_t v109 = v16;
    uint64_t v116 = sub_7B50(0LL, &qword_A0F38, &OBJC_CLASS___USOSerializedGraph_ptr);
    unsigned int v120 = enum case for IdentifierValue.vHomeAutomationHome(_:);
    Swift::String v113 = v145;
    uint64_t v119 = type metadata accessor for UsoEntityBuilder_common_UserEntity(0LL);
    swift_bridgeObjectRetain(a1);
    uint64_t v27 = 0LL;
    uint64_t v142 = _swiftEmptyArrayStorage;
    uint64_t v104 = a1;
    uint64_t v28 = (uint64_t *)(a1 + 40);
    *((void *)&v29 + 1) = 3LL;
    __int128 v118 = xmmword_6FCA0;
    *(void *)&__int128 v29 = 136315138LL;
    __int128 v114 = v29;
    unint64_t v112 = (char *)&type metadata for Any + 8;
    uint64_t v30 = v127;
    while (1)
    {
      uint64_t v31 = v8;
      uint64_t v137 = v28;
      uint64_t v138 = v26;
      uint64_t v33 = *(v28 - 1);
      uint64_t v32 = *v28;
      swift_allocObject(v119, *(unsigned int *)(v119 + 48), *(unsigned __int16 *)(v119 + 52));
      uint64_t v34 = swift_bridgeObjectRetain(v32);
      uint64_t v35 = UsoEntityBuilder_common_UserEntity.init()(v34);
      uint64_t v36 = v124;
      uint64_t v37 = (uint64_t)v123;
      uint64_t v38 = v125;
      (*(void (**)(char *, void, uint64_t))(v124 + 104))(v123, v120, v125);
      sub_417A0(v35, v33, v32, v37);
      swift_bridgeObjectRelease(v32);
      uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
      uint64_t v40 = v35;
      v39(v37, v38);
      uint64_t v41 = type metadata accessor for UsoTaskBuilder_noVerb_common_UserEntity(0LL);
      uint64_t v42 = swift_allocObject(v41, *(unsigned int *)(v41 + 48), *(unsigned __int16 *)(v41 + 52));
      uint64_t v43 = UsoTaskBuilder_noVerb_common_UserEntity.init()(v42);
      uint64_t v44 = swift_retain(v40);
      dispatch thunk of Uso_VerbTemplateBuilder_NoVerb.addUserEntities(value:)( v44,  &protocol witness table for UsoEntityBuilder_common_UserEntity);
      swift_release(v40);
      uint64_t v45 = sub_41BC(&qword_A2100);
      uint64_t v46 = swift_allocObject(v45, 40LL, 7LL);
      *(_OWORD *)(v46 + 16) = v118;
      *(void *)(v46 + 3sub_423C(v0 + 2) = v43;
      v143[0] = v46;
      specialized Array._endMutation()(v46, v47);
      uint64_t v48 = v143[0];
      uint64_t v49 = type metadata accessor for UsoBuilderOptions(0LL);
      uint64_t v50 = v126;
      _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v126, 1LL, 1LL, v49);
      swift_retain(v43);
      uint64_t v51 = static UsoGraphBuilder.buildGraphWithOptions(taskBuilders:options:)(v48, v50);
      swift_bridgeObjectRelease(v48);
      sub_27DEC(v50, &qword_A0F30);
      Graph.protobufGraphSiriNl(vocabManager:)(0LL);
      if (v27) {
        break;
      }
      uint64_t v52 = (void *)static USOSerializedGraph.fromProto(protoGraph:)(v30);
      (*(void (**)(char *, uint64_t))(v121 + 8))(v30, v122);
      id v53 = objc_allocWithZone(&OBJC_CLASS___SIRINLUUserStatedTask);
      id v135 = v52;
      id v54 = [v53 initWithTask:v52];
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      unint64_t v56 = *(void *)((char *)&dword_10 + (v146 & 0xFFFFFFFFFFFFFF8LL));
      unint64_t v55 = *(void *)((char *)&dword_18 + (v146 & 0xFFFFFFFFFFFFFF8LL));
      if (v56 >= v55 >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v55 > 1, v56 + 1, 1LL);
      }
      id v134 = v54;
      uint64_t v57 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v56, v54);
      uint64_t v59 = specialized Array._endMutation()(v57, v58);
      uint64_t v60 = v130;
      uint64_t v61 = Siri_Nlu_External_UserDialogAct.init()(v59);
      Siri_Nlu_External_UserStatedTask.init()(v61);
      unint64_t v62 = v117;
      uint64_t v136 = v51;
      static UsoGraphProtoWriter.toSwiftProtobuf(graph:vocabManager:)(v51, 0LL);
      uint64_t v63 = v131;
      uint64_t v133 = 0LL;
      swift_beginAccess(v31, v143, 33LL, 0LL);
      Siri_Nlu_External_UserStatedTask.task.setter(v62);
      swift_endAccess(v143);
      uint64_t v64 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
      os_log_type_t v65 = v128;
      v64(v128, v31, v140);
      Siri_Nlu_External_UserDialogAct.userStatedTask.setter(v65);
      uint64_t v66 = v129;
      (*(void (**)(char *, char *, uint64_t))(v141 + 16))(v139, v60, v129);
      if ((swift_isUniquelyReferenced_nonNull_native(v142) & 1) == 0) {
        uint64_t v142 = (void *)sub_5D628(0, v142[2] + 1LL, 1, (uint64_t)v142);
      }
      unint64_t v68 = v142[2];
      unint64_t v67 = v142[3];
      if (v68 >= v67 >> 1) {
        uint64_t v142 = (void *)sub_5D628(v67 > 1, v68 + 1, 1, (uint64_t)v142);
      }
      uint64_t v132 = v43;
      uint64_t v69 = v31;
      uint64_t v70 = v141;
      uint64_t v71 = v142;
      v142[2] = v68 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v70 + 32))( (unint64_t)v71 + ((*(unsigned __int8 *)(v70 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80))
      + *(void *)(v70 + 72) * v68,
        v139,
        v66);
      if (qword_9F820 != -1) {
        swift_once(&qword_9F820, sub_17ADC);
      }
      uint64_t v72 = type metadata accessor for Logger(0LL);
      uint64_t v73 = sub_4870(v72, (uint64_t)qword_A3EB0);
      uint64_t v74 = (os_log_s *)Logger.logObject.getter(v73);
      os_log_type_t v75 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v74, v75))
      {
        uint64_t v76 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v77 = swift_slowAlloc(32LL, -1LL);
        v143[0] = v77;
        *(_DWORD *)uint64_t v76 = v114;
        uint64_t v115 = v40;
        uint64_t v78 = v140;
        uint64_t v79 = (uint64_t)v128;
        v64(v128, v69, v140);
        uint64_t v80 = sub_547D0(v79);
        unint64_t v82 = v81;
        uint64_t v144 = sub_68DC4(v80, v81, v143);
        uint64_t v83 = v131;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v144, v113, v76 + 4, v76 + 12);
        swift_bridgeObjectRelease(v82);
        os_log_type_t v84 = v75;
        unint64_t v8 = v69;
        _os_log_impl( &dword_0,  v74,  v84,  "#HomeCommunicationNLContextProvider Building UserStatedTask for disambiguating between homes: %s",  v76,  0xCu);
        swift_arrayDestroy(v77, 1LL, v112);
        swift_slowDealloc(v77, -1LL, -1LL);
        swift_slowDealloc(v76, -1LL, -1LL);
        swift_release(v115);
        swift_release(v132);

        swift_release(v136);
        (*(void (**)(char *, uint64_t))(v141 + 8))(v130, v129);
        (*(void (**)(char *, uint64_t))(v83 + 8))(v69, v78);
      }

      else
      {
        swift_release(v40);
        swift_release(v132);

        swift_release(v136);
        (*(void (**)(char *, uint64_t))(v141 + 8))(v60, v66);
        unint64_t v8 = v31;
        (*(void (**)(char *, uint64_t))(v63 + 8))(v31, v140);
      }

      uint64_t v27 = v133;
      uint64_t v28 = v137 + 2;
      uint64_t v26 = v138 - 1;
      uint64_t v30 = v127;
      if (v138 == 1)
      {
        swift_bridgeObjectRelease(v104);
        uint64_t v25 = (void *)v146;
        uint64_t v16 = v109;
        uint64_t v17 = v108;
        uint64_t v19 = v107;
        uint64_t v20 = v106;
        uint64_t v21 = v105;
        goto LABEL_24;
      }
    }

    swift_bridgeObjectRelease(v104);
    swift_release(v40);
    swift_release(v43);
    swift_release(v51);
    swift_bridgeObjectRelease(v146);
    if (qword_9F820 != -1) {
      swift_once(&qword_9F820, sub_17ADC);
    }
    uint64_t v85 = type metadata accessor for Logger(0LL);
    sub_4870(v85, (uint64_t)qword_A3EB0);
    swift_errorRetain(v27);
    uint64_t v86 = swift_errorRetain(v27);
    uint64_t v87 = (os_log_s *)Logger.logObject.getter(v86);
    os_log_type_t v88 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v87, v88))
    {
      uint64_t v89 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v90 = swift_slowAlloc(32LL, -1LL);
      v143[0] = v90;
      *(_DWORD *)uint64_t v89 = v114;
      uint64_t v144 = v27;
      swift_errorRetain(v27);
      uint64_t v91 = sub_41BC(&qword_A0F48);
      uint64_t v92 = String.init<A>(describing:)(&v144, v91);
      unint64_t v94 = v93;
      uint64_t v144 = sub_68DC4(v92, v93, v143);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v144, v145, v89 + 4, v89 + 12);
      swift_bridgeObjectRelease(v94);
      swift_errorRelease(v27);
      swift_errorRelease(v27);
      _os_log_impl( &dword_0,  v87,  v88,  "#HomeCommunicationNLContextProvider Error building system dialog act for disambiguation: %s",  v89,  0xCu);
      swift_arrayDestroy(v90, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v90, -1LL, -1LL);
      swift_slowDealloc(v89, -1LL, -1LL);

      uint64_t v95 = swift_errorRelease(v27);
    }

    else
    {
      swift_errorRelease(v27);
      swift_errorRelease(v27);
      swift_errorRelease(v27);
    }

    uint64_t v16 = v109;
    uint64_t v17 = v108;
    uint64_t v19 = v107;
    uint64_t v20 = v106;
    uint64_t v21 = v105;
  }

  else
  {
    uint64_t v142 = _swiftEmptyArrayStorage;
LABEL_24:
    uint64_t v95 = swift_bridgeObjectRelease(v25);
  }

  uint64_t v96 = v111;
  Siri_Nlu_External_SystemGaveOptions.init()(v95);
  uint64_t v97 = Siri_Nlu_External_SystemGaveOptions.choices.setter(v142);
  Siri_Nlu_External_SystemDialogAct.init()(v97);
  unint64_t v98 = v110;
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v110, v96, v20);
  Siri_Nlu_External_SystemDialogAct.gaveOptions.setter(v98);
  uint64_t v99 = sub_41BC(&qword_A0F40);
  uint64_t v100 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v101 = (v100 + 32) & ~v100;
  uint64_t v102 = swift_allocObject(v99, v101 + *(void *)(v17 + 72), v100 | 7);
  *(_OWORD *)(v102 + 16) = xmmword_6FA70;
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v102 + v101, v19, v16);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v96, v20);
  return v102;
}

void sub_417A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v70 = a4;
  uint64_t v6 = sub_41BC(&qword_A0F28);
  __chkstk_darwin(v6);
  unint64_t v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_41BC((uint64_t *)&off_9FE90);
  __chkstk_darwin(v9);
  uint64_t v71 = (os_log_s *)((char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v11 = type metadata accessor for IdentifierValue(0LL);
  uint64_t v62 = *(void *)(v11 - 8);
  uint64_t v63 = v11;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for IdentifierNamespace(0LL);
  uint64_t v61 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = type metadata accessor for IdentifierAppBundle(0LL);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v69 = type metadata accessor for UsoIdentifier(0LL);
  uint64_t v66 = *(void *)(v69 - 8);
  uint64_t v21 = __chkstk_darwin(v69);
  os_log_type_t v65 = (char *)&v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v21);
  uint64_t v64 = (char *)&v54 - v23;
  uint64_t v67 = a2;
  uint64_t v68 = a3;
  dispatch thunk of UsoEntityBuilder_common_UserEntity.addNames(value:)(a2, a3);
  uint64_t v24 = type metadata accessor for UsoPrimitiveStringBuilder(0LL);
  uint64_t v25 = dispatch thunk of UsoEntityBuilder.getAsListHelper<A>(attributeName:)(0x73656D616ELL, 0xE500000000000000LL, v24);
  if (v25)
  {
    uint64_t v26 = v25;
    if ((unint64_t)v25 >> 62)
    {
      if (v25 >= 0) {
        v25 &= 0xFFFFFFFFFFFFFF8uLL;
      }
      uint64_t v27 = _CocoaArrayWrapper.endIndex.getter(v25);
      if (v27)
      {
LABEL_4:
        uint64_t v60 = v13;
        uint64_t v28 = v27 - 1;
        if (__OFSUB__(v27, 1LL))
        {
          __break(1u);
        }

        else
        {
          uint64_t v59 = v8;
          sub_25868(v27 - 1, (v26 & 0xC000000000000001LL) == 0, v26);
          if ((v26 & 0xC000000000000001LL) == 0)
          {
            uint64_t v29 = v14;
            uint64_t v58 = *(void *)(v26 + 8 * v28 + 32);
            swift_retain(v58);
LABEL_7:
            swift_bridgeObjectRelease(v26);
            unsigned int v56 = enum case for IdentifierAppBundle.abHomeKit(_:);
            uint64_t v57 = *(void (**)(char *))(v18 + 104);
            v57(v20);
            uint64_t v30 = v68;
            uint64_t v31 = swift_bridgeObjectRetain(v68);
            uint64_t v55 = IdentifierAppBundle.rawValue.getter(v31);
            uint64_t v33 = v32;
            (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
            uint64_t v34 = v61;
            uint64_t v35 = *(uint64_t (**)(char *, void, uint64_t))(v61 + 104);
            uint64_t v36 = v35(v16, enum case for IdentifierNamespace.nsSemanticValue(_:), v29);
            uint64_t v37 = IdentifierNamespace.rawValue.getter(v36);
            uint64_t v39 = v38;
            (*(void (**)(char *, uint64_t))(v34 + 8))(v16, v29);
            uint64_t v40 = v64;
            UsoIdentifier.init(value:appBundleId:namespace:)(v67, v30, v55, v33, v37, v39);
            uint64_t v41 = v58;
            dispatch thunk of UsoBuilder.addUsoIdentifier(usoIdentifier:)(v40);
            uint64_t v42 = v60;
            (*(void (**)(char *, uint64_t, uint64_t))(v62 + 16))(v60, v70, v63);
            ((void (*)(char *, void, uint64_t))v57)(v20, v56, v17);
            uint64_t v43 = v71;
            v35((char *)v71, enum case for IdentifierNamespace.nsHomeKitEntityType(_:), v29);
            _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0((uint64_t)v43, 0LL, 1LL, v29);
            uint64_t v44 = enum case for UsoIdentifier.NluComponent.unknown(_:);
            uint64_t v45 = type metadata accessor for UsoIdentifier.NluComponent(0LL);
            uint64_t v46 = (uint64_t)v59;
            (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v45 - 8) + 104LL))(v59, v44, v45);
            _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v46, 0LL, 1LL, v45);
            uint64_t v47 = v65;
            UsoIdentifier.init(value:appBundleId:namespace:probability:sourceComponent:)(v42, v20, v43, 0LL, 1LL, v46);
            dispatch thunk of UsoBuilder.addUsoIdentifier(usoIdentifier:)(v47);
            swift_release(v41);
            uint64_t v48 = *(void (**)(char *, uint64_t))(v66 + 8);
            uint64_t v49 = v69;
            v48(v47, v69);
            v48(v40, v49);
            return;
          }
        }

        uint64_t v29 = v14;
        uint64_t v58 = specialized _ArrayBuffer._getElementSlowPath(_:)(v28, v26);
        goto LABEL_7;
      }
    }

    else
    {
      uint64_t v27 = *(void *)((char *)&dword_10 + (v25 & 0xFFFFFFFFFFFFFF8LL));
      if (v27) {
        goto LABEL_4;
      }
    }

    swift_bridgeObjectRelease(v26);
  }

  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v50 = type metadata accessor for Logger(0LL);
  uint64_t v51 = sub_4870(v50, (uint64_t)qword_A3EB0);
  uint64_t v71 = (os_log_s *)Logger.logObject.getter(v51);
  os_log_type_t v52 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v71, v52))
  {
    id v53 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)id v53 = 0;
    _os_log_impl(&dword_0, v71, v52, "Unable to get name string builder", v53, 2u);
    swift_slowDealloc(v53, -1LL, -1LL);
  }
}

unint64_t sub_41CBC()
{
  uint64_t v0 = sub_41BC(&qword_A0690);
  unint64_t v1 = sub_1BC3C();
  uint64_t v2 = dispatch thunk of OntologyNode.name.getter(v0, v1);
  unint64_t v4 = v3;
  sub_5D0C8(v2, v3);
  uint64_t v6 = v5;
  swift_bridgeObjectRelease(v4);
  if (v6)
  {
    Swift::String v7 = Character.uppercased()();
    uint64_t countAndFlagsBits = v7._countAndFlagsBits;
    object = v7._object;
    swift_bridgeObjectRelease(v6);
  }

  else
  {
    uint64_t countAndFlagsBits = 0LL;
    object = (void *)0xE000000000000000LL;
  }

  v10._uint64_t countAndFlagsBits = countAndFlagsBits;
  v10._object = object;
  String.append(_:)(v10);
  swift_bridgeObjectRelease(object);
  uint64_t v11 = dispatch thunk of OntologyNode.name.getter(v0, v1);
  unint64_t v13 = sub_63F14(1uLL, v11, v12);
  uint64_t v15 = v14;
  unint64_t v21 = 0xD000000000000012LL;
  unint64_t v22 = 0x8000000000076FF0LL;
  v20[0] = v13;
  v20[1] = v16;
  void v20[2] = v17;
  void v20[3] = v14;
  unint64_t v18 = sub_469DC();
  swift_bridgeObjectRetain(0x8000000000076FF0LL);
  String.append<A>(contentsOf:)(v20, &type metadata for Substring, v18);
  swift_bridgeObjectRelease(0x8000000000076FF0LL);
  swift_bridgeObjectRelease(v15);
  return v21;
}

void *sub_41E08(unint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID(0LL);
  uint64_t v81 = *(void *)(v2 - 8);
  uint64_t v82 = v2;
  __chkstk_darwin(v2);
  uint64_t v80 = (char *)&v68 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for RREntity(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  os_log_type_t v75 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v71 = (char *)&v68 - v9;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v68 - v10;
  uint64_t v12 = sub_41BC(&qword_A0F10);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v79 = (uint64_t)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v78 = (char *)&v68 - v16;
  __chkstk_darwin(v15);
  uint64_t v72 = (char *)&v68 - v17;
  uint64_t v18 = type metadata accessor for GroupIdentifierGenerator(0LL);
  swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
  uint64_t v83 = GroupIdentifierGenerator.init()();
  uint64_t v86 = a1;
  if (!(a1 >> 62))
  {
    uint64_t v19 = *(void *)((char *)&dword_10 + (v86 & 0xFFFFFFFFFFFFF8LL));
    uint64_t result = (void *)swift_bridgeObjectRetain(v86);
    if (v19) {
      goto LABEL_3;
    }
LABEL_34:
    swift_release(v83);
    swift_bridgeObjectRelease(v86);
    return _swiftEmptyArrayStorage;
  }

  if (v86 < 0) {
    uint64_t v67 = v86;
  }
  else {
    uint64_t v67 = v86 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v86);
  uint64_t result = (void *)_CocoaArrayWrapper.endIndex.getter(v67);
  uint64_t v19 = (uint64_t)result;
  if (!result) {
    goto LABEL_34;
  }
LABEL_3:
  if (v19 < 1)
  {
    __break(1u);
  }

  else
  {
    os_log_type_t v88 = v11;
    uint64_t v89 = 0LL;
    uint64_t v74 = v5;
    uint64_t v22 = 0LL;
    unint64_t v85 = v86 & 0xC000000000000001LL;
    os_log_type_t v84 = _swiftEmptyArrayStorage;
    unint64_t v77 = 0x8000000000077010LL;
    *(void *)&__int128 v21 = 136315138LL;
    __int128 v70 = v21;
    uint64_t v69 = (char *)&type metadata for Any + 8;
    uint64_t v23 = (uint64_t)v72;
    uint64_t v76 = v19;
    do
    {
      if (v85) {
        id v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v22, v86);
      }
      else {
        id v24 = *(id *)(v86 + 8 * v22 + 32);
      }
      uint64_t v25 = v24;
      uint64_t v26 = sub_42548(v24);
      if (v26)
      {
        uint64_t v27 = v26;
        uint64_t v28 = v4;
        uint64_t v29 = type metadata accessor for GroupIdentifier(0LL);
        uint64_t v30 = _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v23, 1LL, 1LL, v29);
        uint64_t v31 = v23;
        uint64_t v32 = (uint64_t)v78;
        dispatch thunk of GroupIdentifierGenerator.addGroupIdentifier()(v30);
        sub_27DEC(v31, &qword_A0F10);
        _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v32, 0LL, 1LL, v29);
        sub_27D78(v32, v31, &qword_A0F10);
        uint64_t v33 = v80;
        uint64_t v35 = UUID.init()(v34);
        uint64_t v36 = UUID.uuidString.getter(v35);
        uint64_t v38 = v37;
        (*(void (**)(char *, uint64_t))(v81 + 8))(v33, v82);
        uint64_t v39 = v79;
        sub_27D18(v31, v79, &qword_A0F10);
        uint64_t v40 = sub_7B50(0LL, (unint64_t *)&qword_A0F08, &OBJC_CLASS___INHomeFilter_ptr);
        swift_retain(v27);
        id v87 = v25;
        uint64_t v41 = v39;
        uint64_t v42 = v89;
        RREntity.init<A>(id:appBundleId:usoEntity:intentEntity:group:)( v36,  v38,  0xD00000000000001FLL,  v77,  v27,  v87,  v41,  v40);
        uint64_t v89 = v42;
        if (v42)
        {
          sub_27DEC(v31, &qword_A0F10);
          uint64_t v4 = v28;
          uint64_t v23 = v31;
          if (qword_9F820 != -1) {
            swift_once(&qword_9F820, sub_17ADC);
          }
          uint64_t v43 = type metadata accessor for Logger(0LL);
          uint64_t v44 = sub_4870(v43, (uint64_t)qword_A3EB0);
          uint64_t v45 = (os_log_s *)Logger.logObject.getter(v44);
          os_log_type_t v46 = static os_log_type_t.error.getter();
          BOOL v47 = os_log_type_enabled(v45, v46);
          uint64_t v19 = v76;
          if (v47)
          {
            uint64_t v48 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
            *(_WORD *)uint64_t v48 = 0;
            _os_log_impl(&dword_0, v45, v46, "#HomeCommunicationNLContextProvider Error creating RREntity", v48, 2u);
            swift_slowDealloc(v48, -1LL, -1LL);
            swift_errorRelease(v89);
            swift_release(v27);
          }

          else
          {
            swift_release(v27);

            swift_errorRelease(v89);
          }

          uint64_t v89 = 0LL;
        }

        else
        {
          uint64_t v4 = v28;
          if (qword_9F820 != -1) {
            swift_once(&qword_9F820, sub_17ADC);
          }
          uint64_t v49 = type metadata accessor for Logger(0LL);
          sub_4870(v49, (uint64_t)qword_A3EB0);
          uint64_t v50 = v74;
          uint64_t v51 = v71;
          uint64_t v73 = *(uint64_t (**)(char *, char *, uint64_t))(v74 + 16);
          uint64_t v52 = v73(v71, v88, v28);
          id v53 = (os_log_s *)Logger.logObject.getter(v52);
          os_log_type_t v54 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v53, v54))
          {
            uint64_t v55 = swift_slowAlloc(12LL, -1LL);
            uint64_t v56 = swift_slowAlloc(32LL, -1LL);
            v90[0] = v56;
            *(_DWORD *)uint64_t v55 = v70;
            sub_17144( (unint64_t *)&qword_A0F18,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for RREntity,  (uint64_t)&protocol conformance descriptor for RREntity);
            uint64_t v58 = dispatch thunk of CustomStringConvertible.description.getter(v28, v57);
            unint64_t v60 = v59;
            *(void *)(v55 + 4) = sub_68DC4(v58, v59, v90);
            swift_bridgeObjectRelease(v60);
            uint64_t v61 = *(void (**)(char *, uint64_t))(v50 + 8);
            v61(v51, v28);
            _os_log_impl(&dword_0, v53, v54, "#HomeCommunicationNLContextProvider rrEntity: %s", (uint8_t *)v55, 0xCu);
            swift_arrayDestroy(v56, 1LL, v69);
            swift_slowDealloc(v56, -1LL, -1LL);
            uint64_t v62 = v55;
            uint64_t v4 = v28;
            swift_slowDealloc(v62, -1LL, -1LL);
          }

          else
          {
            uint64_t v61 = *(void (**)(char *, uint64_t))(v50 + 8);
            v61(v51, v28);
          }

          uint64_t v23 = (uint64_t)v72;
          uint64_t v19 = v76;
          v73(v75, v88, v4);
          if ((swift_isUniquelyReferenced_nonNull_native(v84) & 1) != 0) {
            uint64_t v63 = v84;
          }
          else {
            uint64_t v63 = (void *)sub_5D614(0, v84[2] + 1LL, 1, (uint64_t)v84);
          }
          unint64_t v65 = v63[2];
          unint64_t v64 = v63[3];
          if (v65 >= v64 >> 1) {
            uint64_t v63 = (void *)sub_5D614(v64 > 1, v65 + 1, 1, (uint64_t)v63);
          }
          v63[2] = v65 + 1;
          unint64_t v66 = (*(unsigned __int8 *)(v74 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80);
          os_log_type_t v84 = v63;
          (*(void (**)(char *, char *, uint64_t))(v74 + 32))( (char *)v63 + v66 + *(void *)(v74 + 72) * v65,  v75,  v4);
          swift_release(v27);

          v61(v88, v4);
          sub_27DEC(v23, &qword_A0F10);
        }
      }

      else
      {
      }

      ++v22;
    }

    while (v19 != v22);
    swift_release(v83);
    swift_bridgeObjectRelease(v86);
    return v84;
  }

  return result;
}

uint64_t sub_42548(void *a1)
{
  uint64_t v2 = type metadata accessor for IdentifierValue(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v6 = [a1 home];
  if (v6)
  {
    uint64_t v7 = v6;
    id v8 = [v6 spokenPhrase];

    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    uint64_t v11 = v10;
  }

  else
  {
    uint64_t v9 = 0LL;
    uint64_t v11 = 0xE000000000000000LL;
  }

  uint64_t v12 = type metadata accessor for UsoEntityBuilder_common_UserEntity(0LL);
  uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
  uint64_t v14 = UsoEntityBuilder_common_UserEntity.init()(v13);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))( v5,  enum case for IdentifierValue.vHomeAutomationHome(_:),  v2);
  sub_417A0(v14, v9, v11, (uint64_t)v5);
  swift_bridgeObjectRelease(v11);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v15 = static UsoBuilderConversionUtils.convertEntityBuilderToEntity(entityBuilder:)(v14);
  swift_release(v14);
  return v15;
}

uint64_t sub_4269C@<X0>(_DWORD *a1@<X0>, uint8_t *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Input(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v125 = v6;
  uint64_t v126 = v7;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v123 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v127 = type metadata accessor for Parse.DirectInvocation(0LL);
  uint64_t v129 = *(uint8_t **)(v127 - 8);
  __chkstk_darwin(v127);
  uint64_t v130 = (char *)&v123 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v131 = type metadata accessor for Parse(0LL);
  uint64_t v11 = *(void *)(v131 - 8);
  uint64_t v12 = __chkstk_darwin(v131);
  uint64_t v14 = (char *)&v123 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (uint64_t *)((char *)&v123 - v16);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v123 - v18;
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v20 = sub_1BDD8();
  uint64_t v128 = (uint8_t *)sub_4870(v20, (uint64_t)qword_A3EB0);
  sub_3243C();
  os_log_type_t v21 = sub_A9E8();
  if (os_log_type_enabled(v2, v21))
  {
    uint64_t v22 = (_WORD *)sub_144F0(2LL);
    uint64_t v124 = v17;
    sub_46B10(v22);
    sub_1BE98(&dword_0, v2, v21, "#SendAnnouncementDisambiguationStrategy actionForInput called", a2);
    uint64_t v3 = v2;
    uint64_t v17 = v124;
    sub_48D4((uint64_t)a2);
  }

  Input.parse.getter(v23);
  id v24 = (uint8_t *)v131;
  (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v17, v19, v131);
  int v25 = (*(uint64_t (**)(void *, uint8_t *))(v11 + 88))(v17, v24);
  if (v25 == enum case for Parse.NLv3IntentOnly(_:)) {
    goto LABEL_6;
  }
  if (v25 == enum case for Parse.directInvocation(_:))
  {
    uint64_t v31 = (uint64_t)v3;
    sub_46AC0(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 96));
    uint64_t v32 = v127;
    uint64_t v33 = (*((uint64_t (**)(char *, void *, uint64_t))v129 + 4))(v130, v17, v127);
    uint64_t v35 = Parse.DirectInvocation.identifier.getter(v33);
    uint64_t v36 = v34;
    if (v35 == 0xD00000000000003ALL && v34 == (void *)0x8000000000076480LL)
    {
      uint64_t v37 = swift_bridgeObjectRelease(0x8000000000076480LL);
    }

    else
    {
      char v52 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000003ALL, 0x8000000000076480LL, v35, v34, 0LL);
      uint64_t v37 = sub_D304();
      if ((v52 & 1) == 0)
      {
        sub_46AA0();
        os_log_type_t v99 = sub_1C040();
        if (sub_17498(v99))
        {
          uint64_t v100 = (_WORD *)sub_144F0(2LL);
          sub_46B10(v100);
          sub_17440( &dword_0,  v101,  v102,  "#SendAnnouncementDisambiguationStrategy unknown directionInvocation Identifier");
          sub_48D4((uint64_t)a2);
        }

        goto LABEL_63;
      }
    }

    uint64_t v53 = Parse.DirectInvocation.userData.getter(v37);
    if (v53)
    {
      uint64_t v54 = v53;
      uint64_t v55 = a2;
      if (qword_9F7E8 != -1) {
        swift_once(&qword_9F7E8, sub_F88C);
      }
      uint64_t v56 = qword_A3E70;
      uint64_t v57 = *(void *)algn_A3E78;
      swift_bridgeObjectRetain(*(void *)algn_A3E78);
      sub_49314(v56, v57, v54, &v137);
      swift_bridgeObjectRelease(v57);
      sub_D304();
      if (v138)
      {
        uint64_t v53 = swift_dynamicCast(&v134, &v137, (char *)&type metadata for Any + 8, &type metadata for Int, 6LL);
        uint64_t v58 = (uint64_t)v55;
        if ((v53 & 1) != 0)
        {
          unint64_t v59 = (void *)v134;
          uint64_t v60 = v3[17];
          if ((unint64_t)v60 >> 62)
          {
            if (v60 < 0) {
              uint64_t v117 = v3[17];
            }
            else {
              uint64_t v117 = v60 & 0xFFFFFFFFFFFFFF8LL;
            }
            sub_2F684();
            uint64_t v118 = v117;
            uint64_t v58 = (uint64_t)v55;
            uint64_t v61 = _CocoaArrayWrapper.endIndex.getter(v118);
            sub_11F94();
            if (v61) {
              goto LABEL_26;
            }
          }

          else
          {
            uint64_t v61 = *(void *)((char *)&dword_10 + (v60 & 0xFFFFFFFFFFFFF8LL));
            if (v61)
            {
LABEL_26:
              uint64_t v62 = v3[17];
              sub_25868(v59, (v62 & 0xC000000000000001LL) == 0, v62);
              if ((v62 & 0xC000000000000001LL) != 0)
              {
                sub_2F684();
                uint64_t v63 = (os_log_s *)specialized _ArrayBuffer._getElementSlowPath(_:)(v59, v62);
                sub_11F94();
              }

              else
              {
                uint64_t v63 = (os_log_s *)sub_46B60(v62 + 8LL * (void)v59);
              }

              unint64_t v64 = (void *)v3[16];
              v3[16] = v63;

              sub_46B7C((uint64_t)v3);
              sub_46AA0();
              os_log_type_t v65 = sub_A9E8();
              if (sub_2F45C(v65))
              {
                unint64_t v66 = (uint8_t *)sub_144F0(12LL);
                uint64_t v128 = (uint8_t *)sub_144F0(32LL);
                *(void *)&__int128 v137 = v128;
                *(_DWORD *)unint64_t v66 = 136315138;
                id v24 = v66 + 4;
                *(void *)&__int128 v134 = v3[16];
                id v67 = (id)v134;
                uint64_t v68 = sub_41BC(&qword_A17F0);
                uint64_t v69 = String.init<A>(describing:)(&v134, v68);
                __int128 v70 = v19;
                unint64_t v72 = v71;
                uint64_t v73 = sub_68DC4(v69, v71, (uint64_t *)&v137);
                uint64_t v74 = sub_17700(v73);
                sub_46AD4(v74, v75);
                sub_2F4DC(v31);
                unint64_t v76 = v72;
                uint64_t v19 = v70;
                uint64_t v3 = (void *)v31;
                swift_bridgeObjectRelease(v76);
                sub_14550( &dword_0,  v63,  (os_log_type_t)v61,  "#SendAnnouncementDisambiguationStrategy selectedHome from direct invocation: %s",  v66);
                uint64_t v77 = (uint64_t)v128;
                sub_17528((uint64_t)v128, v78, (uint64_t)&type metadata for Any + 8);
                sub_48D4(v77);
                sub_48D4((uint64_t)v66);
              }

              else
              {

                uint64_t v53 = sub_2F4DC((uint64_t)v3);
              }

LABEL_63:
    if (v3[16]) {
      ((void (*)(void))static ActionForInput.handle())();
    }
    else {
      static ActionForInput.ignore()(v53);
    }
    (*((void (**)(char *, uint64_t))v129 + 1))(v130, v32);
    return (*(uint64_t (**)(char *, uint8_t *))(v11 + 8))(v19, v24);
  }

  if (v25 == enum case for Parse.NLv4IntentOnly(_:))
  {
    sub_46AC0(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 96));
    swift_unknownObjectRelease(*v17);
    goto LABEL_7;
  }

  if (v25 != enum case for Parse.uso(_:))
  {
    sub_46AA0();
    os_log_type_t v79 = sub_A9E8();
    if (sub_17498(v79))
    {
      uint64_t v80 = (_WORD *)sub_144F0(2LL);
      sub_46B10(v80);
      sub_17440(&dword_0, v81, v82, "#SendAnnouncementDisambiguationStrategy falling through");
      sub_48D4((uint64_t)a2);
    }

    uint64_t v83 = *(uint64_t (**)(char *, uint8_t *))(v11 + 8);
    uint64_t v84 = v83((char *)v17, v24);
    static ActionForInput.ignore()(v84);
    return v83(v19, v24);
  }

LABEL_6:
  sub_46AC0(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
LABEL_7:
  uint64_t v26 = sub_3BDF4();
  if (v26)
  {
    uint64_t v27 = v3;
    uint64_t v28 = (void *)v3[16];
    v27[16] = v26;
    id v29 = v26;

    static ActionForInput.handle()(v30);
    return (*(uint64_t (**)(char *, uint8_t *))(v11 + 8))(v19, v24);
  }

  uint64_t v129 = a2;
  uint64_t v38 = (_DWORD *)sub_8504(v3 + 2, v3[5])[1];
  uint64_t v39 = swift_retain(v38);
  Input.parse.getter(v39);
  sub_26EF4((uint64_t)v14, (uint64_t)&v134);
  swift_release(v38);
  uint64_t v130 = *(char **)(v11 + 8);
  ((void (*)(char *, uint8_t *))v130)(v14, v24);
  if (v135)
  {
    sub_A780(&v134, (uint64_t)&v137);
    sub_BB78((uint64_t)&v137, (uint64_t)&v134);
    uint64_t v40 = (os_log_s *)sub_46AA0();
    os_log_type_t v41 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v42 = v3;
      a1 = (_DWORD *)sub_144F0(12LL);
      uint64_t v43 = (void *)sub_144F0(32LL);
      id v133 = v43;
      *a1 = 136315138;
      uint64_t v38 = a1 + 3;
      id v24 = (uint8_t *)(a1 + 1);
      uint64_t v44 = v19;
      uint64_t v46 = v135;
      uint64_t v45 = v136;
      sub_8504(&v134, v135);
      uint64_t v47 = *(void *)(v45 + 8);
      uint64_t v3 = v42;
      uint64_t v48 = v46;
      uint64_t v19 = v44;
      uint64_t v49 = dispatch thunk of CustomStringConvertible.description.getter(v48, v47);
      uint64_t v132 = sub_68DC4(v49, v50, (uint64_t *)&v133);
      sub_46AD4((uint64_t)&v132, (uint64_t)&v133);
      sub_D304();
      sub_423C(&v134);
      sub_14550(&dword_0, v40, v41, "#SendAnnouncementDisambiguationStrategy nlIntent: %s", (uint8_t *)a1);
      sub_17528((uint64_t)v43, v51, (uint64_t)&type metadata for Any + 8);
      sub_48D4((uint64_t)v43);
      sub_48D4((uint64_t)a1);
    }

    else
    {
      sub_423C(&v134);
    }

    sub_46B1C();
    uint64_t v98 = (*((uint64_t (**)(os_log_s *, _DWORD *))v38 + 20))(v40, v38);
    if (v98 - 1 >= 2)
    {
      if (!(_BYTE)v98) {
        goto LABEL_52;
      }
      uint64_t v104 = (os_log_s *)sub_46B1C();
      uint64_t v105 = (*((uint64_t (**)(os_log_s *, _DWORD *))v38 + 21))(v40, v38);
      uint64_t v106 = (void *)v3[16];
      v3[16] = v105;

      sub_46B7C((uint64_t)v3);
      sub_46AA0();
      os_log_type_t v107 = sub_A9E8();
      if (sub_2F45C(v107))
      {
        uint64_t v108 = (uint8_t *)sub_144F0(12LL);
        uint64_t v109 = sub_144F0(32LL);
        *(_DWORD *)uint64_t v108 = 136315138;
        id v133 = (id)v3[16];
        *(void *)&__int128 v134 = v109;
        id v110 = v133;
        uint64_t v111 = sub_41BC(&qword_A17F0);
        uint64_t v112 = String.init<A>(describing:)(&v133, v111);
        unint64_t v114 = v113;
        id v133 = (id)sub_68DC4(v112, v113, (uint64_t *)&v134);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v133, &v134, v108 + 4, v108 + 12);
        sub_2F4DC((uint64_t)v3);
        unint64_t v115 = v114;
        id v24 = (uint8_t *)v131;
        swift_bridgeObjectRelease(v115);
        sub_14550(&dword_0, v104, (os_log_type_t)a1, "#SendAnnouncementDisambiguationStrategy selectedHome: %s", v108);
        sub_17528(v109, v116, (uint64_t)&type metadata for Any + 8);
        sub_48D4(v109);
        sub_48D4((uint64_t)v108);
      }

      else
      {

        uint64_t v98 = sub_2F4DC((uint64_t)v3);
      }

      if (v3[16]) {
        static ActionForInput.handle()(v98);
      }
      else {
LABEL_52:
      }
        static ActionForInput.ignore()(v98);
    }

    else
    {
      static ActionForInput.cancel()();
    }

    ((void (*)(char *, uint8_t *))v130)(v19, v24);
    return sub_423C(&v137);
  }

  else
  {
    sub_27DEC((uint64_t)&v134, &qword_A02E0);
    uint64_t v86 = v126;
    (*(void (**)(char *, _DWORD *, uint64_t))(v126 + 16))(v9, a1, v125);
    id v87 = (os_log_s *)sub_46AA0();
    os_log_type_t v88 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v87, v88))
    {
      uint64_t v89 = (uint8_t *)sub_144F0(12LL);
      uint64_t v90 = sub_144F0(32LL);
      *(void *)&__int128 v137 = v90;
      *(_DWORD *)uint64_t v89 = 136315138;
      uint64_t v128 = v89 + 4;
      Input.parse.getter(v90);
      uint64_t v91 = sub_5A5B4(v14);
      uint64_t v93 = sub_68DC4(v91, v92, (uint64_t *)&v137);
      uint64_t v94 = sub_17700(v93);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v94, v95, v128, v89 + 12);
      sub_D304();
      sub_46B40(*(uint64_t (**)(uint64_t, uint64_t))(v126 + 8));
      sub_14550(&dword_0, v87, v88, "#SendAnnouncementDisambiguationStrategy couldn't transform input: %s", v89);
      sub_17528(v90, v96, (uint64_t)&type metadata for Any + 8);
      uint64_t v97 = v90;
      id v24 = (uint8_t *)v131;
      sub_48D4(v97);
      sub_48D4((uint64_t)v89);
    }

    else
    {
      sub_46B40(*(uint64_t (**)(uint64_t, uint64_t))(v86 + 8));
    }

    static ActionForInput.ignore()(v103);
    return ((uint64_t (*)(char *, uint8_t *))v130)(v19, v24);
  }

uint64_t sub_431E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[3] = a4;
  v5[4] = v4;
  uint64_t v5[2] = a1;
  uint64_t v6 = sub_41BC(&qword_A2640);
  v5[5] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[6] = v7;
  v5[7] = sub_38350(v7);
  sub_38360();
  return sub_382EC(v8, v9, v10);
}

uint64_t sub_43230()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = sub_41BC(&qword_A25D0);
  uint64_t v3 = (void *)ParameterResolutionRecord.intent.getter(v2);
  uint64_t v4 = sub_41BC(&qword_A2648);
  uint64_t v5 = sub_AA48(v4, 40LL);
  *(_OWORD *)(v5 + 16) = xmmword_6FA70;
  uint64_t v6 = *(void **)(v1 + 128);
  *(void *)(v5 + 3sub_423C(v0 + 2) = v6;
  *(void *)&__int128 v19 = v5;
  specialized Array._endMutation()(v5, v7);
  id v8 = v6;
  sub_41BC(&qword_A17F0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  sub_D304();
  NSString v10 = String._bridgeToObjectiveC()();
  objc_msgSend(v3, "setValue:forKey:", isa, v10, (void)v19);

  uint64_t v11 = *(void **)(v1 + 128);
  if (v11)
  {
    *((void *)&v20 + 1) = sub_7B50(0LL, (unint64_t *)&qword_A0F08, &OBJC_CLASS___INHomeFilter_ptr);
    *(void *)&__int128 v19 = v11;
  }

  else
  {
    __int128 v19 = 0u;
    __int128 v20 = 0u;
  }

  uint64_t v13 = *(void *)(v0 + 48);
  uint64_t v12 = *(void *)(v0 + 56);
  uint64_t v14 = *(void *)(v0 + 40);
  id v15 = v11;
  uint64_t v16 = ParameterResolutionRecord.intent.getter(v2);
  uint64_t v17 = sub_7B50(0LL, &qword_A2650, &OBJC_CLASS___INSendAnnouncementIntent_ptr);
  IntentPromptAnswer.init(answeredValue:updatedIntent:)(&v19, v16, v17);
  static DisambiguationResult.chosenItem(_:)(v12, v14);
  sub_46AB4(*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
  sub_383D4();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_433C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[231] = v3;
  v4[225] = a3;
  v4[219] = a2;
  v4[213] = a1;
  uint64_t v5 = type metadata accessor for HomeDisambiguationModel(0LL);
  v4[232] = sub_38350(*(void *)(v5 - 8));
  uint64_t v6 = type metadata accessor for DialogPhase(0LL);
  v4[233] = sub_38350(*(void *)(v6 - 8));
  uint64_t v7 = type metadata accessor for OutputGenerationManifest(0LL);
  v4[234] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v4[235] = v8;
  v4[236] = sub_38350(v8);
  uint64_t v9 = sub_41BC(&qword_A25D0);
  v4[237] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v4[238] = v10;
  uint64_t v11 = *(void *)(v10 + 64);
  v4[239] = v11;
  v4[240] = swift_task_alloc((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for SpeakableString(0LL);
  v4[241] = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  v4[242] = v13;
  v4[243] = sub_38350(v13);
  uint64_t v14 = type metadata accessor for SiriKitDisambiguationItemPair(0LL);
  v4[244] = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  v4[245] = v15;
  v4[246] = sub_38350(v15);
  uint64_t v16 = sub_41BC(&qword_A0EF8);
  v4[247] = v16;
  v4[248] = sub_38350(*(void *)(v16 - 8));
  sub_38360();
  return sub_382EC(v17, v18, v19);
}

uint64_t sub_434C8()
{
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v1 = sub_1BDD8();
  v0[249] = sub_4870(v1, (uint64_t)qword_A3EB0);
  uint64_t v2 = (os_log_s *)sub_3243C();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)sub_144F0(2LL);
    *(_WORD *)uint64_t v4 = 0;
    sub_1BE98(&dword_0, v2, v3, "#SendAnnouncementDisambiguationStrategy makePromptForDisambiguation called", v4);
    sub_48D4((uint64_t)v4);
  }

  uint64_t v5 = sub_41BC(&qword_A25E0);
  uint64_t v6 = PaginatedItemContainer.items.getter(v5);
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    uint64_t v8 = v0[245];
    unint64_t v9 = v6 + ((*(unsigned __int8 *)(v8 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v26 = *(void *)(v8 + 72);
    uint64_t v24 = v6;
    int v25 = *(uint64_t (**)(void, unint64_t, void))(v8 + 16);
    do
    {
      uint64_t v10 = v25(v0[246], v9, v0[244]);
      SiriKitDisambiguationItemPair.rawItem.getter(v10);
      uint64_t v11 = sub_7B50(0LL, (unint64_t *)&qword_A0F08, &OBJC_CLASS___INHomeFilter_ptr);
      uint64_t v12 = (*(uint64_t (**)(void, void))(v8 + 8))(v0[246], v0[244]);
      uint64_t v13 = v0[189];
      if (v13)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v12);
        unint64_t v15 = *(void *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL));
        unint64_t v14 = *(void *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL));
        if (v15 >= v14 >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v15 + 1, 1LL);
        }
        uint64_t v16 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v13);
        specialized Array._endMutation()(v16, v17);
      }

      v9 += v26;
      --v7;
    }

    while (v7);
    uint64_t v6 = v24;
  }

  uint64_t v18 = v0[231];
  uint64_t v19 = v0[225];
  swift_bridgeObjectRelease(v6);
  uint64_t v20 = *(void *)(v18 + 136);
  *(void *)(v18 + 136) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v20);
  uint64_t v21 = swift_task_alloc(32LL);
  v0[250] = v21;
  *(void *)(v21 + 16) = v18;
  *(void *)(v21 + 24) = v19;
  uint64_t v22 = (void *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v0[251] = v22;
  void *v22 = v0;
  v22[1] = sub_43764;
  sub_38360();
  return withCheckedContinuation<A>(isolation:function:_:)();
}

uint64_t sub_43764()
{
  return sub_382EC(v1, v2, v3);
}

size_t sub_437A8()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 1848) + 136LL);
  if ((unint64_t)v1 >> 62)
  {
    if (v1 < 0) {
      uint64_t v13 = *(void *)(*(void *)(v0 + 1848) + 136LL);
    }
    else {
      uint64_t v13 = v1 & 0xFFFFFFFFFFFFFF8LL;
    }
    sub_1C030();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter(v13);
    if (v2) {
      goto LABEL_3;
    }
LABEL_16:
    sub_18FB8();
    uint64_t v6 = _swiftEmptyArrayStorage;
    goto LABEL_17;
  }

  uint64_t v2 = *(void *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFF8LL));
  sub_1C030();
  if (!v2) {
    goto LABEL_16;
  }
LABEL_3:
  uint64_t v51 = _swiftEmptyArrayStorage;
  size_t result = sub_45DF8(0LL, v2 & ~(v2 >> 63), 0);
  if (v2 < 0)
  {
    __break(1u);
    return result;
  }

  uint64_t v4 = 0LL;
  uint64_t v5 = *(void *)(v0 + 1936);
  uint64_t v6 = v51;
  do
  {
    if ((v1 & 0xC000000000000001LL) != 0) {
      id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v1);
    }
    else {
      id v7 = sub_46B60(v1 + 8 * v4);
    }
    uint64_t v8 = v7;
    sub_24AC4();

    uint64_t v51 = v6;
    unint64_t v10 = v6[2];
    unint64_t v9 = v6[3];
    if (v10 >= v9 >> 1)
    {
      sub_45DF8(v9 > 1, v10 + 1, 1);
      uint64_t v6 = v51;
    }

    uint64_t v11 = *(void *)(v0 + 1944);
    uint64_t v12 = *(void *)(v0 + 1928);
    ++v4;
    v6[2] = v10 + 1;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32))( (unint64_t)v6 + ((*(unsigned __int8 *)(v5 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
    + *(void *)(v5 + 72) * v10,
      v11,
      v12);
  }

  while (v2 != v4);
  sub_18FB8();
LABEL_17:
  uint64_t v49 = v0 + 1448;
  uint64_t v50 = v0 + 16;
  unint64_t v14 = *(os_log_s **)(v0 + 1992);
  uint64_t v15 = swift_bridgeObjectRetain_n(v6, 2LL);
  Logger.logObject.getter(v15);
  os_log_type_t v16 = sub_A9E8();
  if (sub_17498(v16))
  {
    uint64_t v17 = *(void *)(v0 + 1928);
    uint64_t v18 = (uint8_t *)sub_144F0(12LL);
    uint64_t v19 = sub_144F0(32LL);
    uint64_t v51 = (void *)v19;
    *(_DWORD *)uint64_t v18 = 136315138;
    uint64_t v20 = swift_bridgeObjectRetain(v6);
    uint64_t v21 = Array.description.getter(v20, v17);
    unint64_t v23 = v22;
    swift_bridgeObjectRelease(v6);
    *(void *)(v0 + 1656) = sub_68DC4(v21, v23, (uint64_t *)&v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1656, v0 + 1664, v18 + 4, v18 + 12);
    sub_2F3A8((uint64_t)v6);
    swift_bridgeObjectRelease(v23);
    sub_14550(&dword_0, v14, (os_log_type_t)v2, "#SendAnnouncementDisambiguationStrategy homeNames: %s", v18);
    sub_17528(v19, v24, (uint64_t)&type metadata for Any + 8);
    sub_48D4(v19);
    sub_48D4((uint64_t)v18);
  }

  else
  {

    sub_2F3A8((uint64_t)v6);
  }

  uint64_t v25 = *(void *)(v0 + 1920);
  uint64_t v26 = *(void *)(v0 + 1912);
  uint64_t v27 = *(void *)(v0 + 1904);
  uint64_t v28 = *(void *)(v0 + 1896);
  uint64_t v47 = *(void *)(v0 + 1984);
  uint64_t v29 = *(void *)(v0 + 1864);
  uint64_t v30 = *(void *)(v0 + 1848);
  uint64_t v31 = *(void *)(v0 + 1800);
  uint64_t v32 = swift_bridgeObjectRetain(v6);
  uint64_t v48 = sub_447EC(v32, (void (*)(void, char *))sub_46220, v30);
  *(void *)(v0 + 2016) = v48;
  swift_bridgeObjectRelease(v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(v25, v31, v28);
  uint64_t v33 = *(unsigned __int8 *)(v27 + 80);
  uint64_t v34 = (v33 + 24) & ~v33;
  unint64_t v35 = (v26 + v34 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v36 = swift_allocObject(&unk_96E18, v35 + 8, v33 | 7);
  *(void *)(v0 + 2024) = v36;
  *(void *)(v36 + 16) = v30;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 32))(v36 + v34, v25, v28);
  *(void *)(v36 + v35) = v6;
  swift_retain(v30);
  swift_retain(v36);
  uint64_t v37 = sub_7B50(255LL, &qword_A1F60, &OBJC_CLASS___DialogExecutionResult_ptr);
  swift_asyncLet_begin(v0 + 656, 0LL, v37, &unk_A25F0, v36, v0 + 1560);
  sub_46B7C(v30);
  uint64_t v38 = swift_asyncLet_begin(v50, 0LL, &type metadata for String, &unk_A2600, v30, v49);
  static DialogPhase.completion.getter(v38);
  uint64_t v39 = swift_task_alloc(32LL);
  *(void *)(v39 + 16) = v47;
  OutputGenerationManifest.init(dialogPhase:_:)(v29, sub_463AC, v39);
  uint64_t v40 = sub_46ACC();
  *(void *)(v0 + 203sub_423C(v0 + 2) = App.appIdentifier.getter(v40);
  *(void *)(v0 + 2040) = v41;
  if (v41)
  {
    *(_BYTE *)(v0 + 2096) = sub_3FFC8() & 1;
    return swift_asyncLet_get_throwing(v50, v49, sub_43CAC, v0 + 1664);
  }

  else
  {
    uint64_t v42 = *(os_log_s **)(v0 + 1992);
    uint64_t v43 = swift_bridgeObjectRelease(v48);
    Logger.logObject.getter(v43);
    os_log_type_t v44 = sub_1C040();
    if (os_log_type_enabled(v42, v44))
    {
      uint64_t v45 = (uint8_t *)sub_144F0(2LL);
      *(_WORD *)uint64_t v45 = 0;
      sub_1BE98(&dword_0, v42, v44, "#SendAnnouncementDisambiguationStrategy missing app identifier", v45);
      sub_48D4((uint64_t)v45);
    }

    uint64_t v46 = *(void *)(v0 + 1880);

    type metadata accessor for EmptyOutput(0LL);
    static EmptyOutput.instance.getter();
    sub_46AB4(*(uint64_t (**)(uint64_t, uint64_t))(v46 + 8));
    return swift_asyncLet_finish(v50, v49, sub_440AC, v0 + 1568);
  }

uint64_t sub_43CAC()
{
  *(void *)(v1 + 204sub_423C(v0 + 8) = v0;
  if (v0)
  {
    swift_bridgeObjectRelease(*(void *)(v1 + 2016));
    sub_D304();
  }

  sub_38360();
  return sub_382EC(v2, v3, v4);
}

uint64_t sub_43CF8()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 2096);
  uint64_t v2 = *(void *)(v0 + 2040);
  uint64_t v3 = *(void *)(v0 + 2032);
  uint64_t v4 = *(void *)(v0 + 2016);
  uint64_t v5 = *(void *)(v0 + 1856);
  uint64_t v6 = *(void *)(v0 + 1448);
  uint64_t v7 = *(void *)(v0 + 1456);
  sub_2F684();
  sub_22D38(v3, v2, v4, v1, v6, v7, v8, v9);
  uint64_t v10 = type metadata accessor for ResponseFactory(0LL);
  *(void *)(v0 + 2056) = v10;
  sub_A8BC(v10);
  *(void *)(v0 + 1464) = ResponseFactory.init()();
  uint64_t v11 = type metadata accessor for HomeCommunicationSnippetModel(0LL);
  *(void *)(v0 + 1360) = v11;
  sub_17144( &qword_A1F40,  255LL,  type metadata accessor for HomeCommunicationSnippetModel,  (uint64_t)&protocol conformance descriptor for HomeCommunicationSnippetModel);
  *(void *)(v0 + 136sub_423C(v0 + 8) = v12;
  uint64_t v13 = sub_A800((void *)(v0 + 1336));
  sub_463B4(v5, (uint64_t)v13);
  swift_storeEnumTagMultiPayload(v13, v11, 2LL);
  uint64_t v14 = sub_41BC(&qword_A2100);
  uint64_t v15 = sub_AA48(v14, 40LL);
  *(void *)(v0 + 2064) = v15;
  *(_OWORD *)(v15 + 16) = xmmword_6FCA0;
  return swift_asyncLet_get_throwing(v0 + 656, v0 + 1560, sub_43E3C, v0 + 1472);
}

uint64_t sub_43E3C()
{
  *(void *)(v1 + 207sub_423C(v0 + 2) = v0;
  if (v0) {
    return sub_382E0((uint64_t)sub_44200);
  }
  else {
    return sub_382E0((uint64_t)sub_43E5C);
  }
}

uint64_t sub_43E5C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2[258];
  uint64_t v4 = (void *)v2[195];
  *(void *)(v3 + 3sub_423C(v0 + 2) = v4;
  uint64_t v9 = v3;
  specialized Array._endMutation()(a1, a2);
  v2[260] = v9;
  uint64_t v5 = async function pointer to dispatch thunk of ResponseGenerating.makeResponseOutput(resultModel:dialog:outputGenerationManifest:)[1];
  id v6 = v4;
  uint64_t v7 = (void *)swift_task_alloc(v5);
  v2[261] = v7;
  void *v7 = v2;
  v7[1] = sub_43F08;
  return dispatch thunk of ResponseGenerating.makeResponseOutput(resultModel:dialog:outputGenerationManifest:)( v2[213],  v2 + 167,  v9,  v2[236],  v2[257],  &protocol witness table for ResponseFactory);
}

uint64_t sub_43F08()
{
  uint64_t v1 = (void *)(*(void *)v0 + 1336LL);
  sub_38318(*(void *)(*(void *)v0 + 2088LL));
  sub_18FB8();
  sub_423C(v1);
  sub_38360();
  return swift_task_switch(v2, v3, v4);
}

uint64_t sub_43F60()
{
  uint64_t v1 = v0[236];
  uint64_t v2 = v0[235];
  uint64_t v3 = v0[234];
  sub_463F8(v0[232]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_release(v0[183]);
  sub_38330();
  return sub_3836C();
}

uint64_t sub_43FD4()
{
  return sub_382E0((uint64_t)sub_43FE0);
}

uint64_t sub_43FE0()
{
  return sub_382F8();
}

uint64_t sub_44018()
{
  return sub_382E0((uint64_t)sub_44024);
}

uint64_t sub_44024()
{
  uint64_t v1 = *(void *)(v0 + 2024);
  uint64_t v2 = *(void *)(v0 + 1984);
  sub_27DEC(v2, &qword_A0EF8);
  sub_2F4DC(v1);
  sub_46B38();
  swift_task_dealloc(v2);
  sub_383D4();
  sub_46ACC();
  sub_46B8C();
  sub_46B84();
  sub_46BA8();
  sub_46B74();
  return sub_46A58(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_440AC()
{
  return sub_382E0((uint64_t)sub_440B8);
}

uint64_t sub_440B8()
{
  return sub_382F8();
}

uint64_t sub_440F0()
{
  return sub_382E0((uint64_t)sub_46A54);
}

uint64_t sub_440FC()
{
  return sub_382F8();
}

uint64_t sub_44148()
{
  return sub_382E0((uint64_t)sub_44154);
}

uint64_t sub_44154()
{
  return sub_382F8();
}

uint64_t sub_4418C()
{
  return sub_382E0((uint64_t)sub_44198);
}

uint64_t sub_44198()
{
  return sub_46A58(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_44200()
{
  uint64_t v1 = v0[258];
  uint64_t v2 = v0[236];
  uint64_t v3 = v0[235];
  uint64_t v4 = v0[234];
  uint64_t v5 = v0[232];
  *(void *)(v1 + 16) = 0LL;
  swift_release(v1);
  sub_463F8(v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_423C(v0 + 167);
  swift_release(v0[183]);
  return sub_3836C();
}

uint64_t sub_442A0()
{
  return sub_382E0((uint64_t)sub_442AC);
}

uint64_t sub_442AC()
{
  return sub_382F8();
}

uint64_t sub_442E4()
{
  return sub_382E0((uint64_t)sub_442F0);
}

uint64_t sub_442F0()
{
  return sub_46A58(*(uint64_t (**)(void))(v2 + 8));
}

void sub_44358(uint64_t a1, uint64_t a2)
{
  uint64_t v24 = a1;
  uint64_t v22 = sub_41BC(&qword_A2628);
  uint64_t v3 = *(void *)(v22 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v22);
  uint64_t v5 = type metadata accessor for ParameterIdentifier(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = *(void *)(a2 + 120);
  uint64_t v9 = sub_41BC(&qword_A25D0);
  uint64_t v21 = (void *)ParameterResolutionRecord.intent.getter(v9);
  uint64_t v10 = ParameterResolutionRecord.parameter.getter(v9);
  uint64_t v20 = ParameterIdentifier.name.getter(v10);
  uint64_t v12 = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v13 = (void *)ParameterResolutionRecord.result.getter(v9);
  uint64_t v14 = v22;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))( (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL),  v24,  v22);
  uint64_t v15 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v16 = (v15 + 16) & ~v15;
  uint64_t v17 = swift_allocObject(&unk_96E40, v16 + v4, v15 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))( v17 + v16,  (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL),  v14);
  uint64_t v18 = v21;
  sub_401E0((uint64_t)v21, v20, v12, (uint64_t)v13, (void (*)(uint64_t))sub_46518, v17);
  swift_release(v17);

  swift_bridgeObjectRelease(v12);
}

uint64_t sub_44504(uint64_t a1)
{
  uint64_t v2 = sub_41BC(&qword_A0EF8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_27D18(a1, (uint64_t)v4, &qword_A0EF8);
  uint64_t v5 = sub_41BC(&qword_A2628);
  return CheckedContinuation.resume(returning:)(v4, v5);
}

void sub_44594(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v3 = type metadata accessor for HomeTarget(0LL);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for UUID(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_41BC(&qword_A25C0);
  uint64_t inited = swift_initStackObject(v10, v25);
  *(_OWORD *)(inited + 16) = xmmword_6FA70;
  if (qword_9F7E8 != -1) {
    swift_once(&qword_9F7E8, sub_F88C);
  }
  uint64_t v12 = *(void *)algn_A3E78;
  *(void *)(inited + 3sub_423C(v0 + 2) = qword_A3E70;
  *(void *)(inited + 40) = v12;
  *(void *)(inited + 4sub_423C(v0 + 8) = a1;
  swift_bridgeObjectRetain(v12);
  uint64_t v13 = Dictionary.init(dictionaryLiteral:)( inited,  &type metadata for String,  &type metadata for Int,  &protocol witness table for String);
  sub_7B50(0LL, (unint64_t *)&qword_A25C8, &OBJC_CLASS___SKIDirectInvocationPayload_ptr);
  sub_549E8(0xD00000000000003ALL, 0x8000000000076480LL);
  uint64_t v15 = v14;
  sub_54A50(v13);
  swift_bridgeObjectRelease(v13);
  sub_56440();
  uint64_t v16 = SpeakableString.print.getter();
  uint64_t v18 = v17;
  static Device.current.getter(v24, v16);
  id v19 = sub_AC40(v24);
  uint64_t v20 = sub_423C(v24);
  UUID.init()(v20);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v5, v9, v6);
  v24[0] = v16;
  v24[1] = v18;
  Loggable.init(wrappedValue:)(v24, &type metadata for String);
  uint64_t v21 = sub_7B50(0LL, (unint64_t *)&qword_A11A8, &OBJC_CLASS___SAIntentGroupRunSiriKitExecutor_ptr);
  CodableAceObject.init(wrappedValue:)(v19, v21);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_46470((uint64_t)v5, v23);
}

void *sub_447EC(uint64_t a1, void (*a2)(void, char *), uint64_t a3)
{
  unint64_t v35 = a2;
  uint64_t v36 = a3;
  uint64_t v4 = type metadata accessor for HomeTarget(0LL);
  uint64_t v34 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_41BC(&qword_A2610);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v33 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (uint64_t *)((char *)&v26 - v11);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v26 - v13;
  uint64_t v37 = _swiftEmptyArrayStorage;
  sub_45E84(0LL, 0LL, 0);
  uint64_t v15 = v37;
  uint64_t v16 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain(a1);
  uint64_t v32 = v16;
  uint64_t v27 = a1;
  if (v16)
  {
    uint64_t v17 = type metadata accessor for SpeakableString(0LL);
    uint64_t v18 = 0LL;
    uint64_t v19 = *(void *)(v17 - 8);
    uint64_t v20 = a1 + ((*(unsigned __int8 *)(v19 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
    uint64_t v29 = *(void *)(v19 + 72);
    uint64_t v30 = v19;
    uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
    uint64_t v31 = v6;
    do
    {
      uint64_t v21 = &v33[*(int *)(v7 + 48)];
      v28(v21, v20, v17);
      uint64_t v22 = (char *)v12 + *(int *)(v7 + 48);
      *uint64_t v12 = v18;
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v22, v21, v17);
      sub_27D78((uint64_t)v12, (uint64_t)v14, &qword_A2610);
      v35(*(void *)v14, &v14[*(int *)(v7 + 48)]);
      sub_27DEC((uint64_t)v14, &qword_A2610);
      uint64_t v15 = v37;
      if ((swift_isUniquelyReferenced_nonNull_native(v37) & 1) == 0)
      {
        sub_45E84(0LL, v15[2] + 1LL, 1);
        uint64_t v15 = v37;
      }

      unint64_t v24 = v15[2];
      unint64_t v23 = v15[3];
      if (v24 >= v23 >> 1)
      {
        sub_45E84(v23 > 1, v24 + 1, 1);
        uint64_t v15 = v37;
      }

      ++v18;
      void v15[2] = v24 + 1;
      sub_46470( (uint64_t)v31,  (uint64_t)v15 + ((*(unsigned __int8 *)(v34 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))
      + *(void *)(v34 + 72) * v24);
      v20 += v29;
    }

    while (v32 != v18);
  }

  swift_bridgeObjectRelease(v27);
  return v15;
}

uint64_t sub_44A8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v4[4] = a3;
  void v4[5] = a4;
  void v4[2] = a1;
  void v4[3] = a2;
  return swift_task_switch(sub_44AA8, 0LL, 0LL);
}

uint64_t sub_44AA8()
{
  uint64_t v1 = sub_41BC(&qword_A25D0);
  uint64_t v2 = (void *)ParameterResolutionRecord.intent.getter(v1);
  sub_257FC();
  uint64_t v4 = v3;
  v0[6] = v3;

  uint64_t v5 = type metadata accessor for SirikitDeviceState(0LL);
  static Device.current.getter(v9, v5);
  uint64_t v6 = SirikitDeviceState.__allocating_init(from:)(v9);
  v0[7] = v6;
  uint64_t v7 = (uint64_t **)swift_task_alloc(dword_A2324);
  v0[8] = (uint64_t)v7;
  void *v7 = v0;
  v7[1] = (uint64_t *)sub_44B54;
  return sub_3EB6C(v4, v0[5], v6);
}

uint64_t sub_44B54()
{
  uint64_t v4 = v2[8];
  *uint64_t v5 = *v3;
  void v2[9] = v1;
  swift_task_dealloc(v4);
  if (!v1)
  {
    swift_release(v2[7]);
    sub_D304();
    v2[10] = v0;
  }

  sub_38360();
  return sub_38340(v6, v7, v8);
}

uint64_t sub_44BB8()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 80);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_44BD0()
{
  return sub_6698(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_44C00(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_task_switch(sub_44C18, 0LL, 0LL);
}

uint64_t sub_44C18()
{
  uint64_t v1 = (void *)swift_task_alloc(dword_A07AC);
  *(void *)(v0 + 3sub_423C(v0 + 2) = v1;
  void *v1 = v0;
  v1[1] = sub_44C64;
  return sub_101C8();
}

uint64_t sub_44C64()
{
  if (v1) {
    return sub_38308(*(uint64_t (**)(void))(v3 + 8));
  }
  *(void *)(v2 + 40) = v0;
  sub_38360();
  return sub_38340(v6, v7, v8);
}

uint64_t sub_44CB0()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(uint64_t **)(v0 + 16);
  uint64_t v3 = dispatch thunk of LabelExecutionResult.subscript.getter();
  uint64_t v5 = v4;
  swift_release(v1);
  *uint64_t v2 = v3;
  v2[1] = v5;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_44D04(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for ResponseType(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_41BC(&qword_A0EF8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  OutputGenerationManifest.canUseServerTTS.setter(0LL);
  OutputGenerationManifest.listenAfterSpeaking.setter(1LL);
  sub_27D18(a2, (uint64_t)v9, &qword_A0EF8);
  OutputGenerationManifest.nlContextUpdate.setter(v9);
  OutputGenerationManifest.responseViewId.setter(0xD000000000000028LL, 0x8000000000077360LL);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for ResponseType.disambiguation(_:), v3);
  return OutputGenerationManifest.responseType.setter(v6);
}

uint64_t sub_44E1C(uint64_t a1)
{
  v2[3] = a1;
  v2[4] = v1;
  uint64_t v3 = type metadata accessor for UnlockDevicePolicy(0LL);
  v2[5] = sub_38350(*(void *)(v3 - 8));
  uint64_t v4 = type metadata accessor for ParameterIdentifier(0LL);
  v2[6] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v2[7] = v5;
  v2[8] = sub_38350(v5);
  sub_38360();
  return sub_382EC(v6, v7, v8);
}

uint64_t sub_44E78()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v20 = *(void *)(v0 + 32);
  uint64_t v21 = *(void *)(v0 + 40);
  uint64_t v2 = sub_41BC(&qword_A25D0);
  uint64_t v3 = ParameterResolutionRecord.app.getter();
  uint64_t v4 = (void *)ParameterResolutionRecord.intent.getter(v2);
  uint64_t v5 = ParameterResolutionRecord.parameter.getter(v2);
  ParameterIdentifier.name.getter(v5);
  uint64_t v7 = v6;
  sub_46AB4(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  uint64_t v8 = (char *)ParameterResolutionRecord.result.getter(v2);
  uint64_t v12 = sub_44FD0((uint64_t)v8, v9, v10, v11, v8);
  swift_bridgeObjectRelease(v7);

  swift_release(v3);
  static Device.current.getter(v22, v13);
  *(void *)(v0 + 16) = v20;
  uint64_t v14 = type metadata accessor for SendAnnouncementDisambiguationStrategy();
  sub_17144( &qword_A25D8,  v15,  (uint64_t (*)(uint64_t))type metadata accessor for SendAnnouncementDisambiguationStrategy,  (uint64_t)&unk_735D0);
  NeedsDisambiguationFlowStrategyAsync.authenticationPolicy.getter(v14, v16);
  uint64_t v17 = type metadata accessor for SiriKitDisambiguationListAdapter(0LL);
  sub_A8BC(v17);
  uint64_t v18 = SiriKitDisambiguationListAdapter.init(disambiguationList:deviceState:authenticationPolicy:)(v12, v22, v21);
  sub_383D4();
  swift_task_dealloc(v21);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v18);
}

uint64_t sub_44FD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5)
{
  uint64_t v7 = a5;
  uint64_t v8 = (uint64_t)a5;
  uint64_t v9 = sub_260F0();
  uint64_t v10 = (uint64_t)sub_569D4(v9);
  if (v10)
  {
    uint64_t v8 = v10;
    unint64_t v76 = (void *)v9;
    if ((unint64_t)v10 >> 62)
    {
      if (v10 >= 0) {
        uint64_t v75 = v10 & 0xFFFFFFFFFFFFFF8LL;
      }
      else {
        uint64_t v75 = v10;
      }
      swift_bridgeObjectRetain(v10);
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter(v75);
    }

    else
    {
      uint64_t v5 = *(void *)((char *)&dword_10 + (v10 & 0xFFFFFFFFFFFFFF8LL));
      swift_bridgeObjectRetain(v10);
    }

    uint64_t v7 = (char *)_swiftEmptyArrayStorage;
    if (!v5)
    {
LABEL_18:
      sub_2F3A8(v8);
      if (*((void *)v7 + 2) >= 2uLL)
      {
        if (qword_9F820 != -1) {
          swift_once(&qword_9F820, sub_17ADC);
        }
        uint64_t v45 = sub_1BDD8();
        uint64_t v46 = (os_log_s *)sub_4870(v45, (uint64_t)qword_A3EB0);
        uint64_t v47 = swift_bridgeObjectRetain_n(v7, 2LL);
        uint64_t v48 = (os_log_s *)Logger.logObject.getter(v47);
        os_log_type_t v49 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v48, v49))
        {
          uint64_t i = sub_144F0(12LL);
          uint64_t v50 = sub_144F0(32LL);
          uint64_t v77 = (void *)v50;
          *(_DWORD *)uint64_t i = 136315138;
          uint64_t v51 = sub_1C030();
          uint64_t v52 = Array.description.getter(v51, &type metadata for String);
          unint64_t v54 = v53;
          sub_18FB8();
          sub_68DC4(v52, v54, (uint64_t *)&v77);
          sub_46B4C();
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v55, v56, i + 4, i + 12);
          sub_1768C();
          sub_11F94();
          sub_14550( &dword_0,  v48,  v49,  "#SendAnnouncementDisambiguationStrategy Disambiguating between homes : %s",  (uint8_t *)i);
          sub_17528(v50, v57, (uint64_t)&type metadata for Any + 8);
          sub_48D4(v50);
          sub_48D4(i);
        }

        else
        {

          sub_1768C();
        }

        if (qword_9F7D8 != -1) {
          swift_once(&qword_9F7D8, sub_F244);
        }
        uint64_t v59 = qword_A3E38;
        uint64_t v60 = swift_retain(qword_A3E38);
        Logger.logObject.getter(v60);
        os_log_type_t v61 = sub_A9E8();
        if (sub_2F45C(v61))
        {
          uint64_t v62 = (uint8_t *)sub_144F0(2LL);
          *(_WORD *)uint64_t v62 = 0;
          sub_1BE98( &dword_0,  v46,  (os_log_type_t)i,  "#SendAnnouncementRCHFlowDelegate isDirectInvocation in SiriX path",  v62);
          sub_48D4((uint64_t)v62);
        }

        uint64_t v77 = _swiftEmptyArrayStorage;
        sub_1C030();
        specialized ContiguousArray.reserveCapacity(_:)(0LL);
        uint64_t v63 = *((void *)v7 + 2);
        sub_1C030();
        if (v63)
        {
          uint64_t v64 = 0LL;
          os_log_type_t v65 = (uint64_t *)(v7 + 40);
          do
          {
            uint64_t v67 = *(v65 - 1);
            uint64_t v66 = *v65;
            sub_2F684();
            uint64_t v68 = sub_45618(v64, v67, v66);
            uint64_t v69 = sub_11F94();
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v69);
            uint64_t v70 = v77[2];
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v70);
            uint64_t v71 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v70, v68);
            specialized ContiguousArray._endMutation()(v71);
            v65 += 2;
            ++v64;
          }

          while (v63 != v64);
        }

        sub_18FB8();
        unint64_t v72 = v77;
        swift_release(v59);
        sub_1768C();
        uint64_t v73 = sub_46BA0();
        sub_A8BC(v73);
        os_log_type_t v44 = v76;
        uint64_t v43 = v72;
      }

      else
      {
        swift_bridgeObjectRelease(v9);
        if (qword_9F820 != -1) {
          swift_once(&qword_9F820, sub_17ADC);
        }
        uint64_t v22 = sub_1BDD8();
        unint64_t v23 = (os_log_s *)sub_4870(v22, (uint64_t)qword_A3EB0);
        uint64_t v24 = sub_1C030();
        Logger.logObject.getter(v24);
        os_log_type_t v25 = sub_1C040();
        if (sub_17604(v25))
        {
          uint64_t v26 = (uint8_t *)sub_144F0(12LL);
          uint64_t v27 = sub_144F0(32LL);
          uint64_t v77 = (void *)v27;
          *(_DWORD *)uint64_t v26 = 136315138;
          uint64_t v28 = sub_1C030();
          uint64_t v29 = Array.description.getter(v28, &type metadata for String);
          unint64_t v31 = v30;
          sub_18FB8();
          sub_68DC4(v29, v31, (uint64_t *)&v77);
          sub_46B4C();
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v32, v33, v26 + 4, v26 + 12);
          sub_1768C();
          swift_bridgeObjectRelease(v31);
          sub_14550( &dword_0,  v23,  (os_log_type_t)v5,  "#SendAnnouncementDisambiguationStrategy Error disambiguating between no homes or single home : %s",  v26);
          sub_17528(v27, v34, (uint64_t)&type metadata for Any + 8);
          sub_48D4(v27);
          sub_48D4((uint64_t)v26);
        }

        else
        {

          sub_1768C();
        }

        uint64_t v58 = sub_46BA0();
        sub_A8BC(v58);
        os_log_type_t v44 = _swiftEmptyArrayStorage;
        uint64_t v43 = _swiftEmptyArrayStorage;
      }

      return SiriKitDisambiguationList.init(rawItems:disambiguationItems:shouldReadItemsInVox:requestUnlockForEmptyOrDuplicateItems:)( v44,  v43,  1LL,  0LL);
    }

    if (v5 >= 1)
    {
      for (uint64_t i = 0LL; i != v5; ++i)
      {
        if ((v8 & 0xC000000000000001LL) != 0) {
          id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v8);
        }
        else {
          id v11 = sub_46B60(v8 + 8 * i);
        }
        uint64_t v12 = v11;
        id v13 = [v11 home];
        if (v13)
        {
          uint64_t v14 = v13;
          id v15 = [v13 spokenPhrase];

          uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
          uint64_t v18 = v17;

          if ((swift_isUniquelyReferenced_nonNull_native(v7) & 1) == 0) {
            uint64_t v7 = sub_46B68(0LL, *((void *)v7 + 2) + 1LL);
          }
          unint64_t v20 = *((void *)v7 + 2);
          unint64_t v19 = *((void *)v7 + 3);
          if (v20 >= v19 >> 1) {
            uint64_t v7 = sub_46B68((char *)(v19 > 1), v20 + 1);
          }
          *((void *)v7 + sub_423C(v0 + 2) = v20 + 1;
          uint64_t v21 = &v7[16 * v20];
          *((void *)v21 + 4) = v16;
          *((void *)v21 + 5) = v18;
        }

        else
        {
        }
      }

      goto LABEL_18;
    }

    __break(1u);
    goto LABEL_48;
  }

  sub_11F94();
  if (qword_9F820 != -1) {
LABEL_48:
  }
    swift_once(&qword_9F820, sub_17ADC);
  uint64_t v35 = sub_1BDD8();
  sub_4870(v35, (uint64_t)qword_A3EB0);
  sub_3243C();
  os_log_type_t v36 = sub_1C040();
  if (sub_17498(v36))
  {
    uint64_t v37 = (_WORD *)sub_144F0(2LL);
    sub_46B10(v37);
    sub_17440( &dword_0,  v38,  v39,  "#SendAnnouncementDisambiguationStrategy Disambiguating items were not of type INHomeFilter");
    sub_48D4(v5);
  }

  id v40 = [v7 disambiguationItems];
  uint64_t v41 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v40, (char *)&type metadata for Any + 8);

  uint64_t v42 = sub_46BA0();
  sub_A8BC(v42);
  uint64_t v43 = _swiftEmptyArrayStorage;
  os_log_type_t v44 = (void *)v41;
  return SiriKitDisambiguationList.init(rawItems:disambiguationItems:shouldReadItemsInVox:requestUnlockForEmptyOrDuplicateItems:)( v44,  v43,  1LL,  0LL);
}

uint64_t sub_45618(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_41BC(&qword_A25C0);
  uint64_t inited = swift_initStackObject(v6, v20);
  *(_OWORD *)(inited + 16) = xmmword_6FA70;
  if (qword_9F7E8 != -1) {
    swift_once(&qword_9F7E8, sub_F88C);
  }
  uint64_t v8 = *(void *)algn_A3E78;
  *(void *)(inited + 3sub_423C(v0 + 2) = qword_A3E70;
  *(void *)(inited + 40) = v8;
  *(void *)(inited + 4sub_423C(v0 + 8) = a1;
  swift_bridgeObjectRetain(v8);
  uint64_t v9 = Dictionary.init(dictionaryLiteral:)( inited,  &type metadata for String,  &type metadata for Int,  &protocol witness table for String);
  sub_7B50(0LL, (unint64_t *)&qword_A25C8, &OBJC_CLASS___SKIDirectInvocationPayload_ptr);
  sub_549E8(0xD00000000000003ALL, 0x8000000000076480LL);
  uint64_t v11 = v10;
  sub_54A50(v9);
  swift_bridgeObjectRelease(v9);
  sub_56440();
  type metadata accessor for SiriKitDisambiguationItemComponent(0LL);
  uint64_t v12 = dispatch thunk of static SiriKitDisambiguationItemComponent.makeBuilder(_:)(a2, a3);
  uint64_t v13 = dispatch thunk of SiriKitDisambiguationItemComponent.Builder.build()();
  swift_release(v12);
  uint64_t v14 = sub_41BC(&qword_A2100);
  uint64_t v15 = swift_allocObject(v14, 40LL, 7LL);
  *(_OWORD *)(v15 + 16) = xmmword_6FCA0;
  *(void *)(v15 + 3sub_423C(v0 + 2) = v13;
  uint64_t v19 = v15;
  specialized Array._endMutation()(v15, v16);
  uint64_t v17 = type metadata accessor for SiriKitDisambiguationItem(0LL);
  swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
  return SiriKitDisambiguationItem.init(components:directInvocation:allowLineWrapForDisplayText:)(v19, v11, 0LL);
}

uint64_t sub_457C4()
{
  swift_bridgeObjectRelease(*(void *)(v0 + 136));
  return v0;
}

uint64_t sub_45818()
{
  return swift_deallocClassInstance(v0, 144LL, 7LL);
}

uint64_t type metadata accessor for SendAnnouncementDisambiguationStrategy()
{
  return objc_opt_self(&OBJC_CLASS____TtC35HomeCommunicationFlowDelegatePlugin38SendAnnouncementDisambiguationStrategy);
}

uint64_t sub_4585C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for SendAnnouncementDisambiguationStrategy();
  return NeedsDisambiguationFlowStrategyAsync.paginationStyle(resolveRecord:)(a1, v5, a3);
}

uint64_t sub_4589C@<X0>(_DWORD *a1@<X0>, uint8_t *a2@<X8>)
{
  return sub_4269C(a1, a2);
}

uint64_t sub_458BC(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc(dword_A2454);
  *(void *)(v2 + 24) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_45910;
  return sub_44E1C(a2);
}

uint64_t sub_45910()
{
  if (!v1) {
    **(void **)(v2 + 16) = v0;
  }
  return sub_38308(*(uint64_t (**)(void))(v3 + 8));
}

uint64_t sub_4594C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (void *)swift_task_alloc(dword_A2444);
  *(void *)(v4 + 16) = v7;
  void *v7 = v4;
  v7[1] = sub_382D8;
  return sub_431E0(a1, v8, v9, a4);
}

uint64_t sub_459B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc(dword_A244C);
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_37EE8;
  return sub_433C8(a1, a2, a3);
}

uint64_t sub_45A1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_task_alloc(async function pointer to NeedsDisambiguationFlowStrategyAsync.makeRepromptOnEmptyParse(paginatedItems:resolveRecord:)[1]);
  *(void *)(v5 + 16) = v10;
  uint64_t v11 = type metadata accessor for SendAnnouncementDisambiguationStrategy();
  *uint64_t v10 = v5;
  v10[1] = sub_382D8;
  return NeedsDisambiguationFlowStrategyAsync.makeRepromptOnEmptyParse(paginatedItems:resolveRecord:)( a1,  a2,  a3,  v11,  a5);
}

uint64_t sub_45AA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_task_alloc(async function pointer to NeedsDisambiguationFlowStrategyAsync.makeRepromptOnLowConfidence(paginatedItems:resolveRecord:)[1]);
  *(void *)(v5 + 16) = v10;
  uint64_t v11 = type metadata accessor for SendAnnouncementDisambiguationStrategy();
  *uint64_t v10 = v5;
  v10[1] = sub_382D8;
  return NeedsDisambiguationFlowStrategyAsync.makeRepromptOnLowConfidence(paginatedItems:resolveRecord:)( a1,  a2,  a3,  v11,  a5);
}

uint64_t sub_45B24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc(async function pointer to NeedsDisambiguationFlowStrategyAsync.makePromptForDeviceUnlock(resolveRecord:)[1]);
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for SendAnnouncementDisambiguationStrategy();
  *uint64_t v8 = v4;
  v8[1] = sub_382D8;
  return NeedsDisambiguationFlowStrategyAsync.makePromptForDeviceUnlock(resolveRecord:)(a1, a2, v9, a4);
}

uint64_t sub_45BA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc(async function pointer to NeedsDisambiguationFlowStrategyAsync.makeHandoffForAuthenticationResponse(resolveRecord:)[1]);
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for SendAnnouncementDisambiguationStrategy();
  *uint64_t v8 = v4;
  v8[1] = sub_382D8;
  return NeedsDisambiguationFlowStrategyAsync.makeHandoffForAuthenticationResponse(resolveRecord:)(a1, a2, v9, a4);
}

uint64_t sub_45C1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for SendAnnouncementDisambiguationStrategy();
  return NeedsDisambiguationFlowStrategyAsync.pervasiveUseCaseDescription(resolveRecord:)(a1, v5, a3);
}

uint64_t sub_45C54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = (void *)swift_task_alloc(async function pointer to ParameterResolutionHandlingAsync.makeFlowCancelledResponse(app:intent:parameter:)[1]);
  *(void *)(v6 + 16) = v12;
  uint64_t v13 = type metadata accessor for SendAnnouncementDisambiguationStrategy();
  *uint64_t v12 = v6;
  v12[1] = sub_382D8;
  return ParameterResolutionHandlingAsync.makeFlowCancelledResponse(app:intent:parameter:)(a1, a2, a3, a4, v13, a6);
}

uint64_t sub_45CE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = (void *)swift_task_alloc(async function pointer to ParameterResolutionHandlingAsync.makeErrorResponse(error:app:intent:parameter:)[1]);
  *(void *)(v7 + 16) = v14;
  uint64_t v15 = type metadata accessor for SendAnnouncementDisambiguationStrategy();
  *uint64_t v14 = v7;
  v14[1] = sub_382D8;
  return ParameterResolutionHandlingAsync.makeErrorResponse(error:app:intent:parameter:)(a1, a2, a3, a4, a5, v15, a7);
}

void sub_45D84(uint64_t a1, uint64_t a2)
{
}

void *sub_45DB0()
{
  return &protocol witness table for SiriKitDisambiguationListAdapter;
}

size_t sub_45DBC(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_460C8( a1,  a2,  a3,  *v3,  &qword_9FEA0,  (uint64_t (*)(void))&type metadata accessor for UsoIdentifier,  (void (*)(uint64_t, uint64_t, char *))sub_5D8AC,  (void (*)(uint64_t, uint64_t, char *))sub_5DAB4);
  uint64_t *v3 = result;
  return result;
}

size_t sub_45DF8(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_460C8( a1,  a2,  a3,  *v3,  &qword_A2620,  (uint64_t (*)(void))&type metadata accessor for SpeakableString,  (void (*)(uint64_t, uint64_t, char *))sub_5D8BC,  (void (*)(uint64_t, uint64_t, char *))sub_5DACC);
  uint64_t *v3 = result;
  return result;
}

char *sub_45E34(char *a1, int64_t a2, char a3)
{
  size_t result = sub_45EDC(a1, a2, a3, *v3);
  uint64_t *v3 = (uint64_t)result;
  return result;
}

void *sub_45E50(void *a1, int64_t a2, char a3)
{
  size_t result = sub_45FE0( a1,  a2,  a3,  *v3,  &qword_A2660,  (void (*)(uint64_t, uint64_t, void *))sub_5D8B8,  (void (*)(uint64_t, uint64_t, void *))sub_5DB8C);
  uint64_t *v3 = (uint64_t)result;
  return result;
}

size_t sub_45E84(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_460C8( a1,  a2,  a3,  *v3,  &qword_A2618,  type metadata accessor for HomeTarget,  (void (*)(uint64_t, uint64_t, char *))sub_5D938,  (void (*)(uint64_t, uint64_t, char *))sub_5DC24);
  uint64_t *v3 = result;
  return result;
}

void *sub_45EC0(void *a1, int64_t a2, char a3, uint64_t a4)
{
  return sub_45FE0( a1,  a2,  a3,  a4,  &qword_A1880,  (void (*)(uint64_t, uint64_t, void *))sub_5D8B8,  (void (*)(uint64_t, uint64_t, void *))sub_5DAC0);
}

char *sub_45EDC(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    uint64_t v7 = a2;
  }

  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    uint64_t v10 = sub_41BC(&qword_A0E30);
    uint64_t v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7LL);
    size_t v12 = j__malloc_size(v11);
    *((void *)v11 + sub_423C(v0 + 2) = v8;
    *((void *)v11 + sub_423C(v0 + 3) = 2 * ((uint64_t)(v12 - 32) / 16);
  }

  else
  {
    uint64_t v11 = (char *)_swiftEmptyArrayStorage;
  }

  uint64_t v13 = v11 + 32;
  uint64_t v14 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_5D848(v14, v8, v13);
    *(void *)(a4 + 16) = 0LL;
  }

  else
  {
    sub_5DA18((unint64_t)v14, v8, (unint64_t)v13);
  }

  swift_release(a4);
  return v11;
}

size_t sub_45FBC(size_t a1, int64_t a2, char a3, uint64_t a4)
{
  return sub_460C8( a1,  a2,  a3,  a4,  &qword_A2658,  (uint64_t (*)(void))&type metadata accessor for UsoEntitySpan,  (void (*)(uint64_t, uint64_t, char *))sub_5D8C8,  (void (*)(uint64_t, uint64_t, char *))sub_5DB80);
}

void *sub_45FE0( void *result, int64_t a2, char a3, uint64_t a4, uint64_t *a5, void (*a6)(uint64_t, uint64_t, void *), void (*a7)(uint64_t, uint64_t, void *))
{
  char v10 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    int64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v12 = a2;
  }

  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (v14)
  {
    uint64_t v15 = sub_41BC(a5);
    uint64_t v16 = (void *)sub_AA48(v15, 8 * v14 + 32);
    size_t v17 = j__malloc_size(v16);
    v16[2] = v13;
    void v16[3] = 2 * ((uint64_t)(v17 - 32) / 8);
  }

  else
  {
    uint64_t v16 = _swiftEmptyArrayStorage;
  }

  uint64_t v18 = v16 + 4;
  uint64_t v19 = a4 + 32;
  if ((v10 & 1) != 0)
  {
    a6(v19, v13, v18);
    *(void *)(a4 + 16) = 0LL;
  }

  else
  {
    a7(v19, v13, v18);
  }

  swift_release(a4);
  return v16;
}

size_t sub_460C8( size_t result, int64_t a2, char a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(void), void (*a7)(uint64_t, uint64_t, char *), void (*a8)(uint64_t, uint64_t, char *))
{
  char v12 = result;
  if ((a3 & 1) != 0)
  {
    unint64_t v13 = *(void *)(a4 + 24);
    int64_t v14 = v13 >> 1;
    if ((uint64_t)(v13 >> 1) < a2)
    {
      if (v14 + 0x4000000000000000LL < 0)
      {
LABEL_25:
        __break(1u);
        return result;
      }

      int64_t v14 = v13 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v14 = a2;
  }

  uint64_t v15 = *(void *)(a4 + 16);
  if (v14 <= v15) {
    uint64_t v16 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v16 = v14;
  }
  if (!v16)
  {
    uint64_t v22 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }

  uint64_t v17 = sub_41BC(a5);
  uint64_t v18 = *(void *)(a6(0LL) - 8);
  uint64_t v19 = *(void *)(v18 + 72);
  uint64_t v20 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v21 = (v20 + 32) & ~v20;
  uint64_t v22 = (void *)swift_allocObject(v17, v21 + v19 * v16, v20 | 7);
  size_t result = j__malloc_size(v22);
  if (!v19)
  {
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }

  if (result - v21 == 0x8000000000000000LL && v19 == -1) {
    goto LABEL_24;
  }
  v22[2] = v15;
  void v22[3] = 2 * ((uint64_t)(result - v21) / v19);
LABEL_19:
  uint64_t v24 = *(unsigned __int8 *)(*(void *)(a6(0LL) - 8) + 80LL);
  uint64_t v25 = (v24 + 32) & ~v24;
  uint64_t v26 = (char *)v22 + v25;
  uint64_t v27 = a4 + v25;
  if ((v12 & 1) != 0)
  {
    a7(v27, v15, v26);
    *(void *)(a4 + 16) = 0LL;
  }

  else
  {
    a8(v27, v15, v26);
  }

  swift_release(a4);
  return (size_t)v22;
}

void sub_46218(uint64_t a1)
{
}

void sub_46220(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_46228()
{
  uint64_t v1 = sub_41BC(&qword_A25D0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  swift_release(*(void *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease(*(void *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_462BC(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_41BC(&qword_A25D0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = v1 + v5;
  uint64_t v8 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8LL));
  uint64_t v9 = (void *)swift_task_alloc(dword_A25EC);
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_382D8;
  return sub_44A8C(a1, v6, v7, v8);
}

uint64_t sub_46358(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc(dword_A25FC);
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_37EE8;
  return sub_44C00(a1, v1);
}

uint64_t sub_463AC(uint64_t a1)
{
  return sub_44D04(a1, *(void *)(v1 + 16));
}

uint64_t sub_463B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HomeDisambiguationModel(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_463F8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for HomeDisambiguationModel(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

unint64_t sub_46434()
{
  unint64_t result = qword_A2608;
  if (!qword_A2608)
  {
    unint64_t result = swift_getWitnessTable(&unk_70B08, &unk_953A0);
    atomic_store(result, (unint64_t *)&qword_A2608);
  }

  return result;
}

uint64_t sub_46470(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HomeTarget(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_464B4()
{
  uint64_t v1 = sub_41BC(&qword_A2628);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_46518(uint64_t a1)
{
  return sub_44504(a1);
}

void *sub_46558(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_41BC(&qword_A0F20);
  __chkstk_darwin(v4);
  os_log_type_t v61 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for DisplayHint(0LL);
  uint64_t v59 = *(void *)(v6 - 8);
  uint64_t v60 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for SemanticValue(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v58 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v62 = (char *)&v52 - v14;
  __chkstk_darwin(v13);
  uint64_t v63 = (char *)&v52 - v15;
  uint64_t v16 = type metadata accessor for OrdinalDisplayHintsBuilder(0LL);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v65 = a2;
  uint64_t v64 = _swiftEmptyArrayStorage;
  uint64_t v20 = *(void *)(a1 + 16);
  if (v20)
  {
    unint64_t v53 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
    uint64_t v54 = v17;
    uint64_t v55 = v16;
    swift_retain(a2);
    swift_bridgeObjectRetain(a1);
    uint64_t v56 = a1;
    uint64_t v21 = (void *)(a1 + 40);
    uint64_t v22 = _swiftEmptyArrayStorage;
    uint64_t v57 = v8;
    do
    {
      uint64_t v23 = *(v21 - 1);
      uint64_t v24 = *v21;
      uint64_t v25 = HIBYTE(*v21) & 0xFLL;
      if ((*v21 & 0x2000000000000000LL) == 0) {
        uint64_t v25 = v23 & 0xFFFFFFFFFFFFLL;
      }
      if (v25)
      {
        swift_bridgeObjectRetain(*v21);
        uint64_t v26 = sub_41BC(&qword_A0690);
        unint64_t v27 = sub_1BC3C();
        uint64_t v28 = dispatch thunk of OntologyNode.name.getter(v26, v27);
        uint64_t v29 = v9;
        unint64_t v30 = v22;
        uint64_t v31 = v10;
        uint64_t v33 = v32;
        unint64_t v34 = sub_41CBC();
        uint64_t v35 = v63;
        uint64_t v36 = v33;
        uint64_t v10 = v31;
        uint64_t v22 = v30;
        uint64_t v9 = v29;
        SemanticValue.init(string:label:nodeClass:)(v23, v24, v28, v36, v34, v37);
        uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
        v38(v62, v35, v29);
        if ((swift_isUniquelyReferenced_nonNull_native(v22) & 1) == 0) {
          uint64_t v22 = (void *)sub_5D600(0, v22[2] + 1LL, 1, (uint64_t)v22);
        }
        unint64_t v40 = v22[2];
        unint64_t v39 = v22[3];
        uint64_t v41 = v57;
        if (v40 >= v39 >> 1) {
          uint64_t v22 = (void *)sub_5D600(v39 > 1, v40 + 1, 1, (uint64_t)v22);
        }
        v22[2] = v40 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))( (unint64_t)v22 + ((*(unsigned __int8 *)(v10 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))
        + *(void *)(v10 + 72) * v40,
          v62,
          v29);
        uint64_t v42 = (uint64_t)v61;
        uint64_t v43 = v63;
        v38(v61, v63, v29);
        _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v42, 0LL, 1LL, v29);
        os_log_type_t v44 = v58;
        v38(v58, v43, v9);
        DisplayHint.init(idValue:displayValue:)(v42, v44);
        uint64_t v45 = (uint64_t)v64;
        if ((swift_isUniquelyReferenced_nonNull_native(v64) & 1) == 0) {
          uint64_t v45 = sub_5D434(0, *(void *)(v45 + 16) + 1LL, 1, v45);
        }
        unint64_t v47 = *(void *)(v45 + 16);
        unint64_t v46 = *(void *)(v45 + 24);
        if (v47 >= v46 >> 1) {
          uint64_t v45 = sub_5D434(v46 > 1, v47 + 1, 1, v45);
        }
        *(void *)(v45 + 16) = v47 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v59 + 32))( v45 + ((*(unsigned __int8 *)(v59 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80))
        + *(void *)(v59 + 72) * v47,
          v41,
          v60);
        uint64_t v64 = (void *)v45;
        (*(void (**)(char *, uint64_t))(v10 + 8))(v63, v9);
      }

      v21 += 2;
      --v20;
    }

    while (v20);
    swift_bridgeObjectRelease(v56);
    uint64_t v17 = v54;
    uint64_t v16 = v55;
    uint64_t v19 = v53;
  }

  else
  {
    swift_retain(a2);
    uint64_t v22 = _swiftEmptyArrayStorage;
  }

  if (qword_9F8C0 != -1) {
    swift_once(&qword_9F8C0, sub_5B374);
  }
  uint64_t v48 = TerminalOntologyNode.name.getter();
  OrdinalDisplayHintsBuilder.init(referenceNode:)(v48);
  uint64_t v49 = OrdinalDisplayHintsBuilder.build(for:)(v22);
  swift_bridgeObjectRelease(v22);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  sub_251D8(v49);
  uint64_t v50 = v64;
  swift_release(v65);
  return v50;
}

unint64_t sub_469DC()
{
  unint64_t result = qword_A2638;
  if (!qword_A2638)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for Substring, &type metadata for Substring);
    atomic_store(result, (unint64_t *)&qword_A2638);
  }

  return result;
}

unint64_t sub_46A18()
{
  unint64_t result = qword_A2668;
  if (!qword_A2668)
  {
    unint64_t result = swift_getWitnessTable(&unk_70AC8, &unk_952F0);
    atomic_store(result, (unint64_t *)&qword_A2668);
  }

  return result;
}

uint64_t sub_46A58(uint64_t (*a1)(void))
{
  return a1();
}

  ;
}

uint64_t sub_46AA0()
{
  return Logger.logObject.getter();
}

uint64_t sub_46AA8()
{
  return swift_release(*(void *)(v0 + 1848));
}

uint64_t sub_46AB4@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v1, v2);
}

uint64_t sub_46AC0@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v1, v2);
}

uint64_t sub_46ACC()
{
  return swift_task_dealloc(v0);
}

uint64_t sub_46AD4(uint64_t a1, uint64_t a2)
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(a1, a2, v3, v2);
}

uint64_t sub_46AE4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(&a9, v10, v9, a4);
}

  ;
}

_WORD *sub_46B10(_WORD *result)
{
  *unint64_t result = 0;
  return result;
}

void *sub_46B1C()
{
  return sub_8504((void *)(v0 - 128), *(void *)(v0 - 104));
}

uint64_t sub_46B2C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *v2;
  return swift_task_dealloc(a1);
}

uint64_t sub_46B38()
{
  return swift_release(v0);
}

uint64_t sub_46B40@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v2, v1);
}

  ;
}

id sub_46B60@<X0>(uint64_t a1@<X8>)
{
  return *(id *)(a1 + 32);
}

char *sub_46B68(char *a1, int64_t a2)
{
  return sub_5D33C(a1, a2, 1, v2);
}

uint64_t sub_46B74()
{
  return swift_task_dealloc(v0);
}

uint64_t sub_46B7C(uint64_t a1)
{
  return swift_retain_n(a1, 2LL);
}

uint64_t sub_46B84()
{
  return swift_task_dealloc(v0);
}

uint64_t sub_46B8C()
{
  return swift_task_dealloc(v0);
}

uint64_t sub_46B94(uint64_t a1, unint64_t a2, uint64_t a3, ...)
{
  return sub_68DC4(a1, a2, (uint64_t *)va);
}

uint64_t sub_46BA0()
{
  return type metadata accessor for SiriKitDisambiguationList(0LL);
}

uint64_t sub_46BA8()
{
  return swift_task_dealloc(v0);
}

void sub_46BB0(uint64_t a1)
{
  uint64_t v2 = sub_7B50(0LL, &qword_A2650, &OBJC_CLASS___INSendAnnouncementIntent_ptr);
  uint64_t v3 = sub_7B50(0LL, &qword_A27E0, &OBJC_CLASS___INSendAnnouncementIntentResponse_ptr);
  RCHChildFlowProducersAsync.init()(v2, v3);
  uint64_t v4 = static RCHChildFlowFactoryHelper.makeAppResolutionFlowProducer<A, B>(app:)(a1, v2, v3);
  sub_41BC(&qword_A27C0);
  RCHChildFlowProducersAsync.appResolutionFlowProducer.setter(v4);
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v5 = type metadata accessor for Logger(0LL);
  uint64_t v6 = sub_4870(v5, (uint64_t)qword_A3EB0);
  osos_log_t log = (os_log_s *)Logger.logObject.getter(v6);
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(oslog, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_0, oslog, v7, "RCHChildFlowProducers.SendAnnouncementProducers", v8, 2u);
    swift_slowDealloc(v8, -1LL, -1LL);
  }
}

void sub_46D08(char a1)
{
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v3 = sub_4870(v2, (uint64_t)qword_A3EB0);
  osos_log_t log = (os_log_s *)Logger.logObject.getter(v3);
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(oslog, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v6 = swift_slowAlloc(32LL, -1LL);
    uint64_t v12 = v6;
    *(_DWORD *)uint64_t v5 = 136315138;
    LOBYTE(v11) = a1;
    uint64_t v7 = String.init<A>(describing:)(&v11, &type metadata for SendAnnouncementFlow.State);
    unint64_t v9 = v8;
    uint64_t v11 = sub_68DC4(v7, v8, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v11, &v12, v5 + 4, v5 + 12);
    swift_bridgeObjectRelease(v9);
    _os_log_impl(&dword_0, oslog, v4, "#SendAnnouncementFlow state => %s", v5, 0xCu);
    swift_arrayDestroy(v6, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v6, -1LL, -1LL);
    swift_slowDealloc(v5, -1LL, -1LL);
  }

  else
  {
  }

BOOL sub_46EA8(os_log_s *a1)
{
  uint64_t v3 = type metadata accessor for Parse(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  Input.parse.getter(v5);
  int v8 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v7, v3);
  int v9 = enum case for Parse.directInvocation(_:);
  if (v8 == enum case for Parse.directInvocation(_:))
  {
    if (qword_9F820 != -1) {
      swift_once(&qword_9F820, sub_17ADC);
    }
    uint64_t v10 = sub_1BDD8();
    sub_1BE18(v10, (uint64_t)qword_A3EB0);
    os_log_type_t v11 = sub_A9E8();
    if (sub_2F45C(v11))
    {
      uint64_t v12 = (uint8_t *)sub_144F0(2LL);
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_0, a1, v1, "#ReadAnnouncementFlow handling direct invocation.", v12, 2u);
      sub_48D4((uint64_t)v12);
    }
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  return v8 == v9;
}

uint64_t sub_46FE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SendAnnouncementFlow(0LL);
  sub_A880(&qword_A0300, type metadata accessor for SendAnnouncementFlow, (uint64_t)&unk_73758);
  return Flow.deferToExecuteAsync(_:)(a1, a2, v4, v5);
}

uint64_t sub_4705C(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  uint64_t v3 = sub_1BDD8();
  v2[6] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[7] = v4;
  v2[8] = sub_A8C8(*(void *)(v4 + 64));
  return sub_382EC((uint64_t)sub_470A8, 0LL, 0LL);
}

uint64_t sub_470A8()
{
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = sub_4870(*(void *)(v0 + 48), (uint64_t)qword_A3EB0);
  sub_2458C(v1, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
  uint64_t v5 = swift_retain_n(v3, 2LL);
  uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v10 = *(void *)(v0 + 56);
  uint64_t v9 = *(void *)(v0 + 64);
  uint64_t v12 = *(void *)(v0 + 40);
  uint64_t v11 = *(void *)(v0 + 48);
  if (v8)
  {
    uint64_t v26 = *(void *)(v0 + 64);
    uint64_t v25 = *(void *)(v0 + 48);
    uint64_t v13 = sub_144F0(22LL);
    uint64_t v14 = sub_144F0(64LL);
    uint64_t v27 = v14;
    *(_DWORD *)uint64_t v13 = 136315394;
    *(void *)(v0 + 16) = sub_68DC4(0x2865747563657865LL, 0xE900000000000029LL, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v13 + 4, v13 + 12);
    *(_WORD *)(v13 + sub_423C(v0 + 12) = 2080;
    *(_BYTE *)(v0 + 80) = *(_BYTE *)(v12
                                   + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin20SendAnnouncementFlow_state);
    uint64_t v15 = String.init<A>(describing:)(v0 + 80, &type metadata for SendAnnouncementFlow.State);
    unint64_t v17 = v16;
    *(void *)(v0 + 24) = sub_68DC4(v15, v16, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32, v13 + 14, v13 + 22);
    sub_492F4();
    swift_bridgeObjectRelease(v17);
    _os_log_impl(&dword_0, v6, v7, "#SendAnnouncementFlow %s state=%s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy(v14, 2LL, (char *)&type metadata for Any + 8);
    sub_48D4(v14);
    sub_48D4(v13);

    uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v26, v25);
  }

  else
  {

    sub_492F4();
    uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  }

  uint64_t v19 = *(void *)(v0 + 40);
  if (!*(_BYTE *)(v19 + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin20SendAnnouncementFlow_state))
  {
    sub_47380();
    goto LABEL_11;
  }

  if (*(_BYTE *)(v19 + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin20SendAnnouncementFlow_state) != 1)
  {
    static ExecuteResponse.complete()(v18);
LABEL_11:
    swift_task_dealloc(*(void *)(v0 + 64));
    sub_4927C();
    __asm { BR              X0 }
  }

  uint64_t v20 = (void *)swift_task_alloc(dword_A26BC);
  *(void *)(v0 + 7sub_423C(v0 + 2) = v20;
  *uint64_t v20 = v0;
  v20[1] = sub_4733C;
  sub_4927C();
  return sub_47854(v21, v22);
}

uint64_t sub_4733C()
{
  uint64_t v1 = *v0;
  uint64_t v3 = *v0;
  swift_task_dealloc(*(void *)(*v0 + 72));
  swift_task_dealloc(*(void *)(v1 + 64));
  return sub_6698(*(uint64_t (**)(void))(v3 + 8));
}

void sub_47380()
{
  uint64_t v4 = v0;
  sub_49308();
  sub_11F5C();
  __chkstk_darwin(v5);
  sub_2F428();
  static Device.current.getter(v40, v6);
  uint64_t v7 = v41;
  uint64_t v8 = v42;
  sub_8504(v40, v41);
  uint64_t v9 = (os_log_s *)dispatch thunk of DeviceState.isPhone.getter(v7, v8);
  sub_492EC();
  if ((v9 & 1) != 0)
  {
    uint64_t v10 = sub_41BC(&qword_A2808);
    uint64_t v11 = *(void *)(type metadata accessor for CommonFlowGuard(0LL) - 8);
    uint64_t v12 = *(void *)(v11 + 72);
    uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
    uint64_t v14 = (v13 + 32) & ~v13;
    uint64_t v15 = swift_allocObject(v10, v14 + v12, v13 | 7);
    *(_OWORD *)(v15 + 16) = xmmword_6FA70;
    v36[3] = v15 + v14;
    sub_A798(v4 + 64, (uint64_t)v40);
    uint64_t v16 = type metadata accessor for SendAnnouncementCATsSimple(0LL);
    static CATOption.defaultMode.getter(v16);
    uint64_t v17 = CATWrapperSimple.__allocating_init(options:globals:)(v2, 0LL);
    sub_A7D8((uint64_t)v40, v41);
    v36[1] = (uint64_t)v36;
    sub_1732C();
    __chkstk_darwin(v18);
    sub_9298();
    v36[2] = v3;
    sub_49248(v19, v20);
    uint64_t v21 = sub_17438();
    uint64_t v38 = v21;
    unint64_t v39 = &off_977A0;
    uint64_t v22 = sub_A800(v37);
    sub_A83C(v3, (uint64_t)v22);
    uint64_t v23 = type metadata accessor for SendAnnouncementActiveCallCheckStrategy();
    uint64_t v24 = (void *)sub_AA48(v23, 64LL);
    sub_A7D8((uint64_t)v37, v38);
    sub_1732C();
    __chkstk_darwin(v25);
    uint64_t v27 = sub_49228(v26, v36[0]);
    v28(v27);
    void v24[5] = v21;
    v24[6] = &off_977A0;
    uint64_t v29 = sub_A800(v24 + 2);
    sub_492C8((uint64_t)v29);
    v24[7] = v17;
    sub_423C(v37);
    sub_492EC();
    uint64_t v41 = v23;
    sub_A880( &qword_A2810,  (uint64_t (*)(uint64_t))type metadata accessor for SendAnnouncementActiveCallCheckStrategy,  (uint64_t)&unk_733C8);
    uint64_t v42 = v30;
    v40[0] = v24;
    static CommonFlowGuard.ensuringNoActiveCall(using:)(v40);
    sub_492EC();
    uint64_t v31 = static CommonGuardFlowUtils.makeGuardFlow(withGuards:)(v15);
    swift_bridgeObjectRelease(v15);
    v40[0] = v31;
    uint64_t v32 = type metadata accessor for GuardFlow(0LL);
    swift_retain(v4);
    static ExecuteResponse.ongoing<A>(next:childCompletion:)( v40,  sub_49220,  v4,  v32,  &protocol witness table for GuardFlow);
    swift_release(v4);
    swift_release(v40[0]);
  }

  else
  {
    if (qword_9F820 != -1) {
      swift_once(&qword_9F820, sub_17ADC);
    }
    uint64_t v33 = sub_1BDD8();
    sub_1BE18(v33, (uint64_t)qword_A3EB0);
    os_log_type_t v34 = sub_A9E8();
    if (os_log_type_enabled(v9, v34))
    {
      uint64_t v35 = (_WORD *)sub_144F0(2LL);
      sub_176AC(v35);
      sub_A9C8(&dword_0, v9, v34, "#SendAnnouncementFlow skipping preRCHCheck for non-iOS idiom");
      sub_48D4(v1);
    }

    sub_46D08(1);
    *(_BYTE *)(v4 + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin20SendAnnouncementFlow_state) = 1;
    static ExecuteResponse.ongoing(requireInput:)(0LL);
  }

  sub_6360();
}

void sub_476A8(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v5 = sub_4870(v4, (uint64_t)qword_A3EB0);
  uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v9 = swift_slowAlloc(32LL, -1LL);
    uint64_t v15 = v9;
    *(_DWORD *)uint64_t v8 = 136315138;
    uint64_t v10 = GuardFlowResult.description.getter(v3);
    unint64_t v12 = v11;
    uint64_t v14 = sub_68DC4(v10, v11, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, &v15, v8 + 4, v8 + 12);
    swift_bridgeObjectRelease(v12);
    _os_log_impl(&dword_0, v6, v7, "#SendAnnouncementFlow preRCHCheck outcome: %s", v8, 0xCu);
    swift_arrayDestroy(v9, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1LL, -1LL);
    swift_slowDealloc(v8, -1LL, -1LL);
  }

  if ((static GuardFlowResult.== infix(_:_:)(v3, 0LL) & 1) != 0) {
    char v13 = 1;
  }
  else {
    char v13 = 2;
  }
  sub_46D08(v13);
  *(_BYTE *)(a2 + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin20SendAnnouncementFlow_state) = v13;
}

uint64_t sub_47854(uint64_t a1, uint64_t a2)
{
  v3[32] = a2;
  v3[33] = v2;
  v3[31] = a1;
  uint64_t v4 = sub_41BC(&qword_A27C0);
  v3[34] = sub_A8C8(*(void *)(*(void *)(v4 - 8) + 64LL));
  sub_41BC(&qword_A27E8);
  v3[35] = sub_49300();
  v3[36] = sub_49300();
  v3[37] = sub_49300();
  uint64_t v5 = type metadata accessor for Parse(0LL);
  v3[38] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[39] = v6;
  _BYTE v3[40] = sub_A8C8(*(void *)(v6 + 64));
  return sub_382EC((uint64_t)sub_478F8, 0LL, 0LL);
}

uint64_t sub_478F8()
{
  uint64_t v1 = *(void *)(v0 + 264);
  sub_A798(v1 + 64, v0 + 16);
  sub_A798(v1 + 16, v0 + 56);
  static SiriKitEventSender.current.getter((void *)(v0 + 96));
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = sub_A7D8(v0 + 16, v2);
  uint64_t v4 = *(void *)(v2 - 8);
  uint64_t v5 = sub_A8C8(*(void *)(v4 + 64));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v5, v3, v2);
  uint64_t v6 = sub_17438();
  *(void *)(v0 + 32sub_423C(v0 + 8) = v6;
  *(void *)(v0 + 160) = v6;
  *(void *)(v0 + 16sub_423C(v0 + 8) = &off_977A0;
  os_log_type_t v7 = sub_A800((void *)(v0 + 136));
  sub_A83C(v5, (uint64_t)v7);
  uint64_t v8 = type metadata accessor for SendAnnouncementFlowStrategy();
  uint64_t v9 = (void *)sub_AA48(v8, 136LL);
  *(void *)(v0 + 336) = v9;
  uint64_t v10 = *(void *)(v0 + 160);
  uint64_t v11 = sub_A7D8(v0 + 136, v10);
  uint64_t v12 = *(void *)(v10 - 8);
  uint64_t v13 = sub_A8C8(*(void *)(v12 + 64));
  sub_2458C(v13, v11, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 16));
  void v9[5] = v6;
  v9[6] = &off_977A0;
  uint64_t v14 = sub_A800(v9 + 2);
  sub_A83C(v13, (uint64_t)v14);
  sub_A780((__int128 *)(v0 + 56), (uint64_t)(v9 + 7));
  sub_A780((__int128 *)(v0 + 96), (uint64_t)(v9 + 12));
  sub_423C((void *)(v0 + 136));
  sub_AA14();
  sub_423C((void *)(v0 + 16));
  uint64_t v15 = swift_task_dealloc(v5);
  Input.parse.getter(v15);
  uint64_t v16 = (void *)swift_task_alloc(dword_A2844);
  *(void *)(v0 + 344) = v16;
  *uint64_t v16 = v0;
  v16[1] = sub_47AA8;
  sub_4927C();
  return sub_49724(v17, v18);
}

uint64_t sub_47AA8(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *(void *)(*v2 + 344);
  uint64_t v6 = *(void *)(*v2 + 312);
  uint64_t v5 = *(void *)(*v2 + 320);
  uint64_t v7 = *(void *)(*v2 + 304);
  *(void *)(v3 + 35sub_423C(v0 + 2) = a1;
  *(void *)(v3 + 360) = v1;
  swift_task_dealloc(v4);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  if (v1) {
    uint64_t v8 = sub_48090;
  }
  else {
    uint64_t v8 = sub_47B34;
  }
  return swift_task_switch(v8, 0LL, 0LL);
}

uint64_t sub_47B34()
{
  uint64_t v51 = v0 + 232;
  id v1 = *(id *)(v0 + 352);
  static Device.current.getter((void *)(v0 + 176), v1);
  sub_8504((void *)(v0 + 176), *(void *)(v0 + 200));
  [v1 _setIdiom:sub_946C()];

  sub_423C((void *)(v0 + 176));
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v2 = *(void **)(v0 + 352);
  uint64_t v3 = sub_1BDD8();
  sub_4870(v3, (uint64_t)qword_A3EB0);
  id v4 = v2;
  sub_492C0();
  os_log_type_t v5 = sub_A9E8();
  BOOL v6 = sub_2F45C(v5);
  uint64_t v7 = *(void **)(v0 + 352);
  uint64_t v8 = &loc_6F000;
  if (v6)
  {
    uint64_t v9 = (uint8_t *)sub_144F0(12LL);
    uint64_t v10 = sub_144F0(32LL);
    uint64_t v52 = v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    *(void *)(v0 + 23sub_423C(v0 + 2) = [v7 _idiom];
    type metadata accessor for INDeviceIdiom(0LL);
    uint64_t v12 = String.init<A>(describing:)(v51, v11);
    uint64_t v8 = (void *)v13;
    *(void *)(v0 + 240) = sub_68DC4(v12, v13, &v52);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 240, v0 + 248, v9 + 4, v9 + 12);
    swift_bridgeObjectRelease(v8);

    _os_log_impl(&dword_0, (os_log_t)v2, (os_log_type_t)v1, "#SendAnnouncementFlow idiom set on intent : %s", v9, 0xCu);
    sub_3C388(v14, v15, (uint64_t)&type metadata for Any + 8);
    sub_48D4(v10);
    sub_48D4((uint64_t)v9);
  }

  else
  {
  }

  uint64_t v16 = *(void *)(v0 + 328);
  uint64_t v17 = *(void *)(v0 + 288);
  uint64_t v18 = *(void *)(v0 + 264);
  uint64_t v19 = sub_8504((void *)(v18 + 64), *(void *)(v18 + 88));
  sub_49154((uint64_t)v19 + *(int *)(v16 + 28), v17);
  uint64_t v20 = type metadata accessor for IdentifiedUser(0LL);
  if (sub_492B0() == 1)
  {
    type metadata accessor for SiriEnvironment(0LL);
    uint64_t v21 = static SiriEnvironment.forCurrentTask.getter();
    if (v21)
    {
      uint64_t v22 = v21;
      uint64_t v16 = *(void *)(v0 + 296);
      uint64_t v8 = (void *)SiriEnvironment.userIdentity.getter();
      uint64_t v23 = swift_release(v22);
      dispatch thunk of UserIdentityProvider.identifiedUser.getter(v23);
      swift_release(v8);
      uint64_t v24 = 0LL;
    }

    else
    {
      uint64_t v24 = 1LL;
    }

    uint64_t v26 = *(void *)(v0 + 288);
    sub_492D4(*(void *)(v0 + 296), v24);
    sub_4919C(v26);
  }

  else
  {
    uint64_t v25 = *(void *)(v0 + 296);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 32LL))(v25, *(void *)(v0 + 288), v20);
    sub_492D4(v25, 0LL);
  }

  sub_49154(*(void *)(v0 + 296), *(void *)(v0 + 280));
  int v27 = sub_492B0();
  uint64_t v28 = *(os_log_s **)(v0 + 280);
  if (v27 == 1)
  {
    sub_4919C(*(void *)(v0 + 280));
  }

  else
  {
    uint64_t v16 = IdentifiedUser.sharedUserId.getter();
    unint64_t v30 = v29;
    (*(void (**)(os_log_s *, uint64_t))(*(void *)(v20 - 8) + 8LL))(v28, v20);
    if (v30)
    {
      swift_bridgeObjectRetain_n(v30, 2LL);
      sub_492C0();
      os_log_type_t v31 = sub_A9E8();
      if (os_log_type_enabled(v28, v31))
      {
        uint64_t v32 = (uint8_t *)sub_144F0(12LL);
        uint64_t v33 = sub_144F0(32LL);
        uint64_t v52 = v33;
        *(_DWORD *)uint64_t v32 = 136315138;
        swift_bridgeObjectRetain(v30);
        *(void *)(v0 + 224) = sub_68DC4(v16, v30, &v52);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 224, v51, v32 + 4, v32 + 12);
        swift_bridgeObjectRelease_n(v30, 3LL);
        _os_log_impl(&dword_0, v28, v31, "#SendAnnouncementFlow sharedUserID: %s", v32, 0xCu);
        sub_3C388(v34, v35, (uint64_t)&type metadata for Any + 8);
        sub_48D4(v33);
        sub_48D4((uint64_t)v32);
      }

      else
      {
        swift_bridgeObjectRelease_n(v30, 2LL);
      }

      sub_56494();
      goto LABEL_22;
    }
  }

  sub_492C0();
  os_log_type_t v36 = sub_A9E8();
  if (sub_AA1C(v36))
  {
    uint64_t v37 = (_WORD *)sub_144F0(2LL);
    sub_176AC(v37);
    sub_A9C8(&dword_0, v28, (os_log_type_t)v16, "#SendAnnouncementFlow no sharedUserID was found");
    sub_48D4((uint64_t)v8);
  }

LABEL_22:
  uint64_t v38 = *(void **)(v0 + 352);
  uint64_t v39 = *(void *)(v0 + 336);
  uint64_t v40 = *(void *)(v0 + 296);
  uint64_t v42 = *(void *)(v0 + 264);
  uint64_t v41 = *(void *)(v0 + 272);
  sub_4817C();
  uint64_t v43 = sub_41BC(&qword_A27F0);
  sub_A8BC(v43);
  uint64_t v44 = RCHChildFlowFactory.init(producers:)(v41);
  uint64_t v45 = sub_8504((void *)(v42 + 64), *(void *)(v18 + 88));
  sub_8504(v45 + 2, v45[5]);
  uint64_t v46 = sub_5EDE4(v39, v44, *(void *)(v42 + 56), (uint64_t)v38);
  *(void *)(v0 + 216) = v46;
  uint64_t v47 = sub_41BC(&qword_A27F8);
  unint64_t v48 = sub_491DC();
  uint64_t v49 = Flow.eraseToAnyFlow()(v47, v48);
  swift_release(v46);
  static ExecuteResponse.complete(next:)(v49);
  swift_release(v49);
  swift_release(v44);
  swift_release(v39);

  sub_4919C(v40);
  sub_49298();
  sub_AA14();
  swift_task_dealloc(v40);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_48090()
{
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v4 = sub_1BDD8();
  os_log_type_t v5 = (os_log_s *)sub_1BE18(v4, (uint64_t)qword_A3EB0);
  os_log_type_t v6 = static os_log_type_t.error.getter();
  if (sub_AA1C(v6))
  {
    uint64_t v7 = (_WORD *)sub_144F0(2LL);
    sub_176AC(v7);
    sub_A9C8(&dword_0, v5, v0, "#SendAnnouncementFlow Error thrown while creating RCH flow");
    sub_48D4(v1);
  }

  uint64_t v8 = *(void *)(v2 + 360);
  uint64_t v9 = *(void *)(v2 + 248);

  static ExecuteResponse.complete()();
  swift_errorRelease(v8);
  sub_49298();
  sub_AA14();
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v2 + 8))();
}

void sub_4817C()
{
  uint64_t v3 = v0;
  sub_49308();
  sub_11F5C();
  __chkstk_darwin(v4);
  sub_9298();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = *(void *)(v0 + 56);
  sub_46BB0(v8);
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v9 = sub_1BDD8();
  uint64_t v10 = (os_log_s *)sub_1BE18(v9, (uint64_t)qword_A3EB0);
  os_log_type_t v11 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (_WORD *)sub_144F0(2LL);
    sub_176AC(v12);
    sub_A9C8(&dword_0, v10, v11, "#SendAnnouncementFlow async producers with app resolution");
    sub_48D4(v1);
  }

  uint64_t v57 = v3 + 64;
  sub_A798(v3 + 64, (uint64_t)v63);
  uint64_t v13 = type metadata accessor for SendAnnouncementCATsSimple(0LL);
  sub_492A8();
  sub_49274();
  uint64_t v56 = v13;
  uint64_t v14 = CATWrapperSimple.__allocating_init(options:globals:)(v7, 0LL);
  sub_A7D8((uint64_t)v63, v64);
  uint64_t v59 = v3;
  sub_1732C();
  __chkstk_darwin(v15);
  uint64_t v17 = sub_49228(v16, v53[0]);
  v18(v17);
  sub_49084( v8,  v1,  v14,  type metadata accessor for SendAnnouncementIntentHandledStrategy,  (uint64_t)&OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin37SendAnnouncementIntentHandledStrategy_completionOutputManifest,  (uint64_t)sub_A45C);
  uint64_t v20 = v19;
  uint64_t v58 = v19;
  sub_1765C();
  v63[0] = v20;
  uint64_t v21 = type metadata accessor for SendAnnouncementIntentHandledStrategy(0LL);
  sub_A880(&qword_A27B8, type metadata accessor for SendAnnouncementIntentHandledStrategy, (uint64_t)&unk_73A50);
  uint64_t v23 = static RCHChildFlowFactoryHelper.makeHandleIntentFlowProducer<A>(strategy:)(v63, v21, v22);
  uint64_t v55 = sub_41BC(&qword_A27C0);
  RCHChildFlowProducersAsync.handleIntentFlowProducer.setter(v23);
  sub_A798(v3 + 64, (uint64_t)v63);
  sub_492A8();
  sub_49274();
  uint64_t v54 = CATWrapperSimple.__allocating_init(options:globals:)(v7, 0LL);
  uint64_t v24 = sub_41BC(&qword_A27C8);
  sub_A8BC(v24);
  v53[0] = DefaultNLContextProvider.init()();
  sub_A7D8((uint64_t)v63, v64);
  v53[2] = (uint64_t)v53;
  sub_1732C();
  __chkstk_darwin(v25);
  sub_9298();
  uint64_t v28 = v27 - v26;
  sub_2458C(v27 - v26, v30, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 16));
  uint64_t v31 = sub_17438();
  v53[1] = v2;
  uint64_t v61 = v31;
  uint64_t v62 = &off_977A0;
  uint64_t v32 = sub_A800(v60);
  sub_A83C(v28, (uint64_t)v32);
  uint64_t v33 = type metadata accessor for SendAnnouncementNeedsValueStrategy();
  uint64_t v34 = (void *)sub_AA48(v33, 80LL);
  sub_A7D8((uint64_t)v60, v61);
  sub_1732C();
  __chkstk_darwin(v35);
  uint64_t v37 = sub_49228(v36, v53[0]);
  v38(v37);
  v34[5] = v31;
  v34[6] = &off_977A0;
  uint64_t v39 = sub_A800(v34 + 2);
  sub_492C8((uint64_t)v39);
  v34[7] = v54;
  v34[8] = v8;
  v34[9] = v53[0];
  sub_423C(v60);
  sub_1765C();
  v63[0] = v34;
  sub_A880( &qword_A27D0,  (uint64_t (*)(uint64_t))type metadata accessor for SendAnnouncementNeedsValueStrategy,  (uint64_t)&unk_73F9C);
  uint64_t v41 = static RCHChildFlowFactoryHelper.makeNeedsValueFlowProducer<A>(strategy:)(v63, v33, v40);
  uint64_t v42 = v55;
  RCHChildFlowProducersAsync.needsValueFlowProducer.setter(v41);
  sub_A798(v57, (uint64_t)v63);
  sub_492A8();
  sub_49274();
  uint64_t v43 = CATWrapperSimple.__allocating_init(options:globals:)(v7, 0LL);
  type metadata accessor for HomeCommunicationDisplayTextCATsSimple(0LL);
  sub_49274();
  uint64_t v44 = CATWrapperSimple.__allocating_init(options:globals:)(v7, 0LL);
  swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
  uint64_t v45 = DefaultNLContextProvider.init()();
  sub_A7D8((uint64_t)v63, v64);
  sub_1732C();
  __chkstk_darwin(v46);
  sub_2F428();
  (*(void (**)(uint64_t))(v47 + 16))(v24);
  unint64_t v48 = sub_48EB0(v8, v24, v43, v44, v45);
  sub_1765C();
  v63[0] = v48;
  uint64_t v49 = type metadata accessor for SendAnnouncementDisambiguationStrategy();
  sub_A880( &qword_A25D8,  (uint64_t (*)(uint64_t))type metadata accessor for SendAnnouncementDisambiguationStrategy,  (uint64_t)&unk_735D0);
  uint64_t v51 = static RCHChildFlowFactoryHelper.makeNeedsDisambiguationFlowProducer<A>(strategy:)(v63, v49, v50);
  RCHChildFlowProducersAsync.needsDisambiguationFlowProducer.setter(v51);
  uint64_t v52 = v59;
  sub_492A8();
  RCHChildFlowProducersAsync.unsupportedValueFlowProducer.setter(sub_48FB8, v52, v42);
  swift_release(v58);
  swift_release(v34);
  swift_release(v48);
  sub_6360();
}

uint64_t sub_4864C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v63 = a1;
  uint64_t v64 = a2;
  uint64_t v4 = type metadata accessor for ParameterIdentifier(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_41BC(&qword_A25D0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  os_log_type_t v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for CATOption(0LL);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = *(void *)(a3 + 56);
  sub_A798(a3 + 64, (uint64_t)v66);
  type metadata accessor for SendAnnouncementCATsSimple(0LL);
  uint64_t v16 = swift_retain(v15);
  static CATOption.defaultMode.getter(v16);
  uint64_t v17 = CATWrapperSimple.__allocating_init(options:globals:)(v14, 0LL);
  uint64_t v18 = sub_A7D8((uint64_t)v66, v67);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *))(v21 + 16))(v20);
  sub_49084( v15,  (uint64_t)v20,  v17,  type metadata accessor for SendAnnouncementUnsupportedValueStrategy,  (uint64_t)&OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin40SendAnnouncementUnsupportedValueStrategy_completionOutputManifest,  (uint64_t)sub_A45C);
  uint64_t v23 = v22;
  sub_423C(v66);
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v24 = type metadata accessor for Logger(0LL);
  sub_4870(v24, (uint64_t)qword_A3EB0);
  uint64_t v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v64, v8);
  uint64_t v26 = (os_log_s *)Logger.logObject.getter(v25);
  os_log_type_t v27 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = swift_slowAlloc(12LL, -1LL);
    uint64_t v60 = v9;
    uint64_t v29 = (uint8_t *)v28;
    uint64_t v61 = swift_slowAlloc(32LL, -1LL);
    uint64_t v62 = v23;
    v66[0] = v61;
    uint64_t v30 = v8;
    uint64_t v31 = v5;
    *(_DWORD *)uint64_t v29 = 136315138;
    uint64_t v32 = v29 + 12;
    uint64_t v58 = v29 + 4;
    uint64_t v59 = v29;
    uint64_t v33 = v11;
    uint64_t v34 = ParameterResolutionRecord.parameter.getter(v30);
    uint64_t v35 = ParameterIdentifier.name.getter(v34);
    unint64_t v37 = v36;
    (*(void (**)(char *, uint64_t))(v31 + 8))(v7, v4);
    uint64_t v65 = sub_68DC4(v35, v37, v66);
    uint64_t v38 = v32;
    uint64_t v5 = v31;
    uint64_t v8 = v30;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, v66, v58, v38);
    swift_bridgeObjectRelease(v37);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v33, v30);
    uint64_t v39 = v59;
    _os_log_impl(&dword_0, v26, v27, "#SendAnnouncementFlow generating unsupportedFlowProducer for %s", v59, 0xCu);
    uint64_t v40 = v61;
    swift_arrayDestroy(v61, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v23 = v62;
    swift_slowDealloc(v40, -1LL, -1LL);
    swift_slowDealloc(v39, -1LL, -1LL);
  }

  else
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }

  uint64_t v41 = ParameterResolutionRecord.parameter.getter(v8);
  uint64_t v42 = ParameterIdentifier.name.getter(v41);
  uint64_t v44 = v43;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v69._uint64_t countAndFlagsBits = v42;
  v69._object = v44;
  unint64_t v45 = sub_1EDD4(v69);
  if (v45 == 1
    && (static Device.current.getter(v66, v45),
        uint64_t v46 = v67,
        uint64_t v47 = v68,
        sub_8504(v66, v67),
        LOBYTE(v46) = dispatch thunk of DeviceState.isCarPlay.getter(v46, v47),
        sub_423C(v66),
        (v46 & 1) == 0))
  {
    v66[0] = v23;
    uint64_t v52 = type metadata accessor for SendAnnouncementUnsupportedValueStrategy(0LL);
    sub_A880(&qword_A27D8, type metadata accessor for SendAnnouncementUnsupportedValueStrategy, (uint64_t)&unk_74148);
    uint64_t v50 = (uint64_t (*)(uint64_t, uint64_t))static RCHChildFlowFactoryHelper.makeUnsupportedValuePunchOutFlowProducer<A>(strategy:)( v66,  v52,  v53);
  }

  else
  {
    v66[0] = v23;
    uint64_t v48 = type metadata accessor for SendAnnouncementUnsupportedValueStrategy(0LL);
    sub_A880(&qword_A27D8, type metadata accessor for SendAnnouncementUnsupportedValueStrategy, (uint64_t)&unk_74148);
    uint64_t v50 = (uint64_t (*)(uint64_t, uint64_t))static RCHChildFlowFactoryHelper.makeUnsupportedValueAndCancelFlowProducer<A>(strategy:)( v66,  v48,  v49);
  }

  uint64_t v54 = v51;
  uint64_t v55 = v50(v63, v64);
  swift_release(v23);
  swift_release(v54);
  return v55;
}

void sub_48AE8()
{
  uint64_t v1 = (char *)v0 + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin20SendAnnouncementFlow_input;
  uint64_t v2 = type metadata accessor for Input(0LL);
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8LL))(v1, v2);
  sub_AA5C();
}

uint64_t sub_48B40()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_48B64()
{
  return type metadata accessor for SendAnnouncementFlow(0LL);
}

uint64_t type metadata accessor for SendAnnouncementFlow(uint64_t a1)
{
  uint64_t result = qword_A26A0;
  if (!qword_A26A0) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SendAnnouncementFlow);
  }
  return result;
}

uint64_t sub_48BA4(uint64_t a1)
{
  v4[0] = "(";
  v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  void v4[2] = "(";
  uint64_t result = type metadata accessor for Input(319LL);
  if (v3 <= 0x3F)
  {
    void v4[3] = *(void *)(result - 8) + 64LL;
    void v4[4] = &unk_736D0;
    uint64_t result = swift_updateClassMetadata2(a1, 256LL, 5LL, v4, a1 + 80);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

uint64_t storeEnumTagSinglePayload for SendAnnouncementFlow.State( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    LODWORD(sub_46B2C(*(void *)(v2 + 24), v4) = 1;
  }
  else {
    LODWORD(sub_46B2C(*(void *)(v2 + 24), v4) = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFD) {
    return ((uint64_t (*)(void))((char *)&loc_48C80 + 4 * byte_73675[v4]))();
  }
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_48CB4 + 4 * byte_73670[v4]))();
}

uint64_t sub_48CB4(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_48CBC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x48CC4LL);
  }
  return result;
}

uint64_t sub_48CD0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x48CD8LL);
  }
  *(_BYTE *)uint64_t result = a2 + 2;
  return result;
}

uint64_t sub_48CDC(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_48CE4(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SendAnnouncementFlow.State()
{
  return &type metadata for SendAnnouncementFlow.State;
}

unint64_t sub_48D04()
{
  unint64_t result = qword_A27A0[0];
  if (!qword_A27A0[0])
  {
    unint64_t result = swift_getWitnessTable(&unk_73730, &type metadata for SendAnnouncementFlow.State);
    atomic_store(result, qword_A27A0);
  }

  return result;
}

BOOL sub_48D40(os_log_s *a1)
{
  return sub_46EA8(a1);
}

uint64_t sub_48D58(uint64_t a1, uint64_t a2)
{
  return sub_46FE8(a1, a2);
}

uint64_t sub_48D78(uint64_t a1)
{
  int v3 = (void *)swift_task_alloc(dword_A26B4);
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_65F0;
  return sub_4705C(a1);
}

uint64_t sub_48DCC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for SendAnnouncementFlow(0LL);
  return Flow<>.exitValue.getter(v3, a2);
}

void *sub_48DF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v16 = type metadata accessor for SharedGlobals(0LL);
  uint64_t v17 = &off_977A0;
  uint64_t v12 = sub_A800(v15);
  sub_A83C(a2, (uint64_t)v12);
  a6[16] = 0LL;
  a6[17] = _swiftEmptyArrayStorage;
  a6[7] = a1;
  sub_A798((uint64_t)v15, (uint64_t)(a6 + 2));
  a6[13] = a3;
  a6[14] = a4;
  uint64_t v13 = sub_8504(v15, v16);
  sub_A798(v13[1] + 96LL, (uint64_t)(a6 + 8));
  a6[15] = a5;
  sub_423C(v15);
  return a6;
}

void *sub_48EB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v21 = type metadata accessor for SharedGlobals(0LL);
  uint64_t v22 = &off_977A0;
  uint64_t v10 = sub_A800(v20);
  sub_A83C(a2, (uint64_t)v10);
  uint64_t v11 = type metadata accessor for SendAnnouncementDisambiguationStrategy();
  uint64_t v12 = (void *)swift_allocObject(v11, 144LL, 7LL);
  uint64_t v13 = sub_A7D8((uint64_t)v20, v21);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v20[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *))(v16 + 16))(v15);
  uint64_t v17 = sub_48DF4(a1, (uint64_t)v15, a3, a4, a5, v12);
  sub_423C(v20);
  return v17;
}

uint64_t sub_48FB8(uint64_t a1, uint64_t a2)
{
  return sub_4864C(a1, a2, v2);
}

void sub_48FC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_17438();
  uint64_t v15 = sub_492E0(v14, (uint64_t)&off_977A0);
  uint64_t v16 = sub_A83C(a2, (uint64_t)v15);
  static DialogPhase.completion.getter(v16);
  OutputGenerationManifest.init(dialogPhase:_:)(v13, a6, 0LL);
  *(void *)(a4 + 64) = a1;
  sub_A780(&v18, a4 + 16);
  *(void *)(a4 + 56) = a3;
  sub_49260();
}

void sub_49084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t a5, uint64_t a6)
{
  uint64_t v13 = sub_17438();
  uint64_t v14 = sub_492E0(v13, (uint64_t)&off_977A0);
  sub_A83C(a2, (uint64_t)v14);
  uint64_t v15 = a4(0LL);
  uint64_t v16 = sub_A8BC(v15);
  sub_A7D8((uint64_t)v20, v20[3]);
  sub_1732C();
  __chkstk_darwin(v17);
  sub_49248(v19, (v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_48FC0(a1, v6, a3, v16, a5, a6);
  sub_423C(v20);
  sub_49260();
}

uint64_t sub_49154(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_41BC(&qword_A27E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_4919C(uint64_t a1)
{
  uint64_t v2 = sub_41BC(&qword_A27E8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

unint64_t sub_491DC()
{
  unint64_t result = qword_A2800;
  if (!qword_A2800)
  {
    uint64_t v1 = sub_8564(&qword_A27F8);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for AnyValueFlow<A>, v1);
    atomic_store(result, (unint64_t *)&qword_A2800);
  }

  return result;
}

void sub_49220(unsigned __int8 *a1)
{
}

char *sub_49228@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
}

uint64_t sub_49248@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2 - a2, a1, v4);
}

  ;
}

uint64_t sub_49274()
{
  return static CATOption.defaultMode.getter();
}

  ;
}

uint64_t sub_49298()
{
  return swift_task_dealloc(*(void *)(v0 + 320));
}

uint64_t sub_492A8()
{
  return swift_retain(v0);
}

uint64_t sub_492B0()
{
  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v0, 1LL, v1);
}

uint64_t sub_492C0()
{
  return Logger.logObject.getter();
}

uint64_t sub_492C8(uint64_t a1)
{
  return sub_A83C(v1, a1);
}

uint64_t sub_492D4(uint64_t a1, uint64_t a2)
{
  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(a1, a2, 1LL, v2);
}

void *sub_492E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(v2 - 80) = a1;
  *(void *)(v2 - 7sub_423C(v0 + 2) = a2;
  return sub_A800((void *)(v2 - 104));
}

uint64_t sub_492EC()
{
  return sub_423C((void *)(v0 - 120));
}

uint64_t sub_492F4()
{
  return swift_release_n(v0, 2LL);
}

uint64_t sub_49300()
{
  return swift_task_alloc(v0);
}

uint64_t sub_49308()
{
  return type metadata accessor for CATOption(0LL);
}

double sub_49314@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  if (*(void *)(a3 + 16) && (unint64_t v6 = sub_4BC0C(a1, a2), (v7 & 1) != 0))
  {
    sub_FC5C(*(void *)(v4 + 56) + 32 * v6, (uint64_t)a4);
  }

  else
  {
    double result = 0.0;
    *a4 = 0u;
    a4[1] = 0u;
  }

  return result;
}

uint64_t sub_49360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16)) {
    return 0LL;
  }
  unint64_t v4 = sub_4BC0C(a1, a2);
  if ((v5 & 1) == 0) {
    return 0LL;
  }
  unint64_t v6 = (uint64_t *)(*(void *)(v3 + 56) + 16 * v4);
  uint64_t v7 = *v6;
  swift_bridgeObjectRetain(v6[1]);
  return v7;
}

void sub_493B0(char a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    unint64_t v2 = sub_4AD64(a1);
    if ((v3 & 1) != 0) {
      sub_4BC00(v2);
    }
  }

  sub_AA5C();
}

void sub_493E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    unint64_t v3 = sub_4BC0C(a1, a2);
    if ((v4 & 1) != 0) {
      sub_4BC00(v3);
    }
  }

  sub_AA5C();
}

unint64_t sub_49414(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = HIBYTE(a2) & 0xF;
  uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000LL) != 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v6)
  {
    swift_bridgeObjectRelease(a2);
    return 0LL;
  }

  if ((a2 & 0x1000000000000000LL) != 0)
  {
    unint64_t v8 = sub_4B0D0(a1, a2, 10LL, (uint64_t (*)(uint64_t *, uint64_t, uint64_t))sub_4B424);
    char v10 = v22;
    goto LABEL_39;
  }

  if ((a2 & 0x2000000000000000LL) == 0)
  {
    if ((a1 & 0x1000000000000000LL) != 0) {
      uint64_t v7 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v7 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(a1, a2);
    }
    unint64_t v8 = (unint64_t)sub_4B424(v7, v5);
    char v10 = v9 & 1;
    goto LABEL_39;
  }

  v23[0] = a1;
  v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (a1 == 43)
  {
    if (!v4) {
      goto LABEL_52;
    }
    unint64_t v8 = (BYTE1(a1) - 48);
    uint64_t v15 = v4 - 2;
    if (v15)
    {
      uint64_t v16 = (unsigned __int8 *)v23 + 2;
      while (1)
      {
        unsigned int v17 = *v16 - 48;
        if (v17 > 9) {
          goto LABEL_36;
        }
        if (!is_mul_ok(v8, 0xAuLL)) {
          goto LABEL_36;
        }
        BOOL v14 = __CFADD__(10 * v8, v17);
        unint64_t v8 = 10 * v8 + v17;
        if (v14) {
          goto LABEL_36;
        }
        char v10 = 0;
        ++v16;
        if (!--v15) {
          goto LABEL_39;
        }
      }
    }

LABEL_36:
    unint64_t v8 = 0LL;
    char v10 = 1;
    goto LABEL_39;
  }

  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  char v10 = 1;
  unint64_t v8 = v2;
LABEL_39:
  swift_bridgeObjectRelease(a2);
  if ((v10 & 1) != 0) {
    return 0LL;
  }
  else {
    return v8;
  }
}

uint64_t sub_49678()
{
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v2 = sub_1BDD8();
  sub_4870(v2, (uint64_t)qword_A3EB0);
  sub_3243C();
  os_log_type_t v3 = sub_A9E8();
  if (sub_17498(v3))
  {
    uint64_t v4 = (uint8_t *)sub_144F0(2LL);
    *(_WORD *)uint64_t v4 = 0;
    sub_1BE98(&dword_0, v0, v1, "#SendAnnouncementFlowStrategy.actionForInput() handling", v4);
    sub_48D4((uint64_t)v4);
  }

  return static ActionForInput.handle()(v5);
}

uint64_t sub_49724(uint64_t a1, uint64_t a2)
{
  v3[42] = a2;
  v3[43] = v2;
  uint64_t v4 = type metadata accessor for InputOrigin(0LL);
  v3[44] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[45] = v5;
  v3[46] = swift_task_alloc((*(void *)(v5 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_49784, 0LL, 0LL);
}

void sub_49784()
{
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v4 = sub_1BDD8();
  uint64_t v5 = sub_4870(v4, (uint64_t)qword_A3EB0);
  *(void *)(v1 + 376) = v5;
  sub_3243C();
  os_log_type_t v6 = sub_A9E8();
  if (os_log_type_enabled(v0, v6))
  {
    uint64_t v7 = (uint8_t *)sub_144F0(2LL);
    *(_WORD *)uint64_t v7 = 0;
    sub_1BE98(&dword_0, v0, v6, "#SendAnnouncementFlowStrategy makeIntentFromParse() called", v7);
    sub_48D4((uint64_t)v7);
  }

  uint64_t v8 = *(void *)(v1 + 336);

  char v9 = *(uint64_t (***)(void, void))(v1 + 336);
  if (v8) {
    id v10 = *(id *)(v1 + 336);
  }
  else {
    id v10 = [objc_allocWithZone(INSendAnnouncementIntent) init];
  }
  uint64_t v11 = *(void **)(v1 + 344);
  *(void *)(v1 + 256) = v10;
  sub_4BBC4();
  uint64_t v12 = *(unsigned __int8 (**)(uint64_t, uint64_t))(v3 + 16);
  unsigned int v13 = v9;
  if (v12(v2, v3) == 1)
  {
    id v14 = v10;
    sub_4A5E4(v14);

    *(void *)(v1 + 256) = v14;
  }

  sub_25B94();
  sub_4BBAC();
  uint64_t v15 = v9[14](v3, v9);
  uint64_t v16 = v11[10];
  uint64_t v17 = v11[11];
  sub_8504(v11 + 7, v16);
  uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 96))(v16, v17);
  uint64_t v19 = v11[10];
  uint64_t v20 = v11[11];
  sub_8504(v11 + 7, v19);
  uint64_t v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 104))(v19, v20);
  uint64_t v22 = (uint64_t)sub_24CE8(v15, v18, v21);
  swift_bridgeObjectRelease(v21);
  swift_bridgeObjectRelease(v18);
  swift_bridgeObjectRelease(v15);
  if ((unint64_t)v22 >> 62)
  {
    if (v22 < 0) {
      uint64_t v114 = v22;
    }
    else {
      uint64_t v114 = v22 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v22);
    uint64_t v23 = _CocoaArrayWrapper.endIndex.getter(v114);
    sub_D304();
  }

  else
  {
    uint64_t v23 = *(void *)((char *)&dword_10 + (v22 & 0xFFFFFFFFFFFFF8LL));
  }

  if (v23)
  {
    id v24 = v10;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    sub_D304();
    NSString v26 = String._bridgeToObjectiveC()();
    [v24 setValue:isa forKey:v26];
  }

  else
  {
    sub_D304();
  }

  uint64_t v117 = (uint64_t *)(v1 + 304);
  uint64_t v118 = (void *)(v1 + 312);
  uint64_t v27 = v11[10];
  uint64_t v28 = v11[11];
  sub_4BBBC(v11 + 7);
  uint64_t v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 120))(v27, v28);
  if ((v30 & 1) == 0)
  {
    uint64_t v31 = (void *)(v1 + 320);
    *(void *)(v1 + 320) = v29;
    uint64_t v32 = (os_log_s *)sub_4BBC4();
    uint64_t v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 128))(v28, v23);
    if ((v34 & 1) == 0)
    {
      uint64_t v35 = (void *)(v1 + 248);
      *(void *)(v1 + 24sub_423C(v0 + 8) = v33;
      sub_4BB60();
      os_log_type_t v36 = sub_A9E8();
      if (os_log_type_enabled(v32, v36))
      {
        uint64_t v37 = sub_144F0(22LL);
        *(_DWORD *)uint64_t v37 = 134218240;
        sub_1BE4C(v1 + 320, v1 + 224);
        void *v118 = *v31;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v118, v1 + 320, v37 + 4, v37 + 12);
        *(_WORD *)(v37 + sub_423C(v0 + 12) = 2048;
        sub_1BE4C(v1 + 248, v1 + 56);
        *(void *)(v1 + 32sub_423C(v0 + 8) = *v35;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 328, v1 + 336, v37 + 14, v37 + 22);
        _os_log_impl( &dword_0,  v32,  v36,  "#SendAnnouncementFlowStrategy startTimeMs: %llu and endTimeMs: %llu",  (uint8_t *)v37,  0x16u);
        sub_48D4(v37);
      }

      uint64_t v38 = (os_log_s *)type metadata accessor for SiriEnvironment(0LL);
      uint64_t v39 = static SiriEnvironment.forCurrentTask.getter();
      if (v39)
      {
        uint64_t v40 = v39;
        unint64_t v115 = (void *)(v1 + 320);
        uint64_t v116 = (void *)(v1 + 248);
        uint64_t v41 = *(void *)(v1 + 360);
        uint64_t v42 = *(void *)(v1 + 368);
        uint64_t v43 = *(void *)(v1 + 352);
        uint64_t v44 = SiriEnvironment.currentRequest.getter();
        uint64_t v45 = swift_release(v40);
        uint64_t v119 = v44;
        CurrentRequest.inputOrigin.getter(v45);
        uint64_t v46 = sub_41BC(&qword_A2940);
        uint64_t v47 = *(void *)(v41 + 72);
        uint64_t v48 = *(unsigned __int8 *)(v41 + 80);
        uint64_t v49 = (v48 + 32) & ~v48;
        uint64_t v50 = (os_log_s *)swift_allocObject(v46, v49 + 2 * v47, v48 | 7);
        *((_OWORD *)v50 + 1) = xmmword_70FA0;
        uint64_t v51 = (char *)v50 + v49;
        uint64_t v52 = *(void (**)(char *, void, uint64_t))(v41 + 104);
        v52(v51, enum case for InputOrigin.voiceTrigger(_:), v43);
        uint64_t v53 = &v51[v47];
        v52(&v51[v47], enum case for InputOrigin.bluetoothVoiceTrigger(_:), v43);
        sub_17144( &qword_A2948,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for InputOrigin,  (uint64_t)&protocol conformance descriptor for InputOrigin);
        if ((dispatch thunk of static Equatable.== infix(_:_:)(v51, v42, v43) & 1) != 0
          || (dispatch thunk of static Equatable.== infix(_:_:)(v53, *(void *)(v1 + 368), *(void *)(v1 + 352)) & 1) != 0)
        {
          sub_4BB9C();
          sub_4AC50();
          sub_4BB8C();
          sub_4BB60();
          os_log_type_t v54 = sub_A9E8();
          if (sub_3C378(v54))
          {
            uint64_t v55 = (uint8_t *)sub_144F0(2LL);
            *(_WORD *)uint64_t v55 = 0;
            sub_1BE98( &dword_0,  v50,  (os_log_type_t)v53,  "#SendAnnouncementFlowStrategy inputOrigin is voice trigger, checking voiceTriggerEventInfo for audio offset",  v55);
            sub_48D4((uint64_t)v55);
          }

          uint64_t v56 = v119;
          uint64_t v57 = CurrentRequest.voiceTriggerEventInfo.getter();
          if (!v57) {
            goto LABEL_49;
          }
          uint64_t v58 = (os_log_s *)v57;
          uint64_t v59 = sub_49360(0xD000000000000013LL, 0x80000000000786A0LL, v57);
          if (!v60)
          {
            sub_D304();
            goto LABEL_49;
          }

          uint64_t v61 = v59;
          unint64_t v62 = v60;
          uint64_t v63 = sub_49360(0xD000000000000012LL, 0x80000000000786C0LL, (uint64_t)v58);
          unint64_t v65 = v64;
          sub_D304();
          if (v65)
          {
            unint64_t v66 = sub_49414(v61, v62);
            if ((v67 & 1) == 0)
            {
              unint64_t v68 = v66;
              unint64_t v69 = sub_49414(v63, v65);
              if ((v70 & 1) == 0)
              {
                unint64_t v71 = v69;
                sub_4BB60();
                os_log_type_t v72 = sub_A9E8();
                if (sub_3C378(v72))
                {
                  uint64_t v73 = sub_144F0(22LL);
                  *(_DWORD *)uint64_t v73 = 134218240;
                  *(void *)(v1 + 28sub_423C(v0 + 8) = v68;
                  UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 288, v1 + 296, v73 + 4, v73 + 12);
                  *(_WORD *)(v73 + sub_423C(v0 + 12) = 2048;
                  *(void *)(v1 + 296) = v71;
                  uint64_t v56 = v119;
                  UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 296, v117, v73 + 14, v73 + 22);
                  _os_log_impl( &dword_0,  v58,  (os_log_type_t)v62,  "#SendAnnouncementFlowStrategy extraSamplesAtStart from CoreSpeech: %llu at hardwareSampleRate: %llu",  (uint8_t *)v73,  0x16u);
                  sub_48D4(v73);
                }

                if (is_mul_ok(v68, 0x3E8uLL))
                {
                  uint64_t v35 = (void *)(v1 + 248);
                  if (v71)
                  {
                    unint64_t v74 = 1000 * v68 / v71;
                    uint64_t v31 = (void *)(v1 + 320);
                    sub_4BBF4((uint64_t)v115, v1 + 152);
                    unint64_t v75 = *v115 + v74;
                    if (!__CFADD__(*v115, v74))
                    {
                      *unint64_t v115 = v75;
                      sub_4BBF4((uint64_t)v116, v1 + 128);
                      unint64_t v76 = *v116 + v74;
                      if (!__CFADD__(*v116, v74))
                      {
                        *uint64_t v116 = v76;
                        sub_4BB60();
                        os_log_type_t v77 = sub_A9E8();
                        if (sub_17498(v77))
                        {
                          uint64_t v78 = sub_144F0(32LL);
                          *(_DWORD *)uint64_t v78 = 134218496;
                          *(void *)(v1 + 264) = v74;
                          UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 264, v1 + 272, v78 + 4, v78 + 12);
                          *(_WORD *)(v78 + sub_423C(v0 + 12) = 2048;
                          *(void *)(v1 + 27sub_423C(v0 + 2) = v75;
                          UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 272, v1 + 280, v78 + 14, v78 + 22);
                          *(_WORD *)(v78 + 2sub_423C(v0 + 2) = 2048;
                          *(void *)(v1 + 280) = v76;
                          uint64_t v35 = (void *)(v1 + 248);
                          UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 280, v1 + 288, v78 + 24, v78 + 32);
                          _os_log_impl( &dword_0,  v58,  (os_log_type_t)v5,  "#SendAnnouncementFlowStrategy there are extraAudioSamplesAtStartInMs: %llu. New startTimeMs= %llu new endTimeMs=%llu",  (uint8_t *)v78,  0x20u);
                          uint64_t v79 = v78;
                          uint64_t v31 = (void *)(v1 + 320);
                          sub_48D4(v79);
                          uint64_t v80 = v119;
                        }

                        else
                        {
                          uint64_t v80 = v56;
                        }

                        swift_release(v80);

                        goto LABEL_50;
                      }

                      goto LABEL_60;
                    }

LABEL_49:
              swift_release(v119);
              uint64_t v31 = (void *)(v1 + 320);
              uint64_t v35 = (void *)(v1 + 248);
LABEL_50:
              uint64_t v105 = *(void **)(v1 + 256);
              *(void *)(v1 + 384) = v105;
              sub_1BE4C((uint64_t)v31, v1 + 176);
              uint64_t v106 = *(void *)(v1 + 320);
              sub_1BE4C((uint64_t)v35, v1 + 200);
              uint64_t v107 = *(void *)(v1 + 248);
              sub_4BBAC();
              uint64_t v108 = (uint64_t (*)(void *, void *))v31[19];
              id v109 = v105;
              uint64_t v110 = v108(v35, v31);
              uint64_t v112 = v111;
              *(void *)(v1 + 39sub_423C(v0 + 2) = v111;
              static AceService.currentAsync.getter(v110);
              unint64_t v113 = (void *)swift_task_alloc(dword_A2B14);
              *(void *)(v1 + 400) = v113;
              *unint64_t v113 = v1;
              v113[1] = sub_4A2B8;
              sub_4DEBC((uint64_t)v109, v106, v107, v110, v112, v1 + 16);
              return;
            }

            unint64_t v104 = v65;
          }

          else
          {
            unint64_t v104 = v62;
          }

          swift_bridgeObjectRelease(v104);
          goto LABEL_49;
        }

        sub_4BB9C();
        uint64_t v38 = v50;
        sub_4AC50();
        sub_4BB8C();
        swift_release(v119);
        uint64_t v31 = (void *)(v1 + 320);
        uint64_t v35 = (void *)(v1 + 248);
      }

      sub_4BB60();
      os_log_type_t v102 = sub_A9E8();
      if (sub_17498(v102))
      {
        uint64_t v103 = (uint8_t *)sub_144F0(2LL);
        *(_WORD *)uint64_t v103 = 0;
        sub_1BE98( &dword_0,  v38,  (os_log_type_t)v5,  "#SendAnnouncementFlowStrategy inputOrigin is not voice trigger, not checking for extraSamplesAtStart...",  v103);
        sub_48D4((uint64_t)v103);
      }

      goto LABEL_50;
    }
  }

  unsigned int v120 = (id *)(v1 + 256);
  uint64_t v81 = *(void **)(v1 + 344);
  uint64_t v82 = sub_4BBBC(v81 + 12);
  type metadata accessor for SiriKitEvent(0LL);
  uint64_t v84 = v81[10];
  uint64_t v83 = (uint64_t (**)(void, void))v81[11];
  sub_8504(v81 + 7, v84);
  char v85 = v83[2](v84, v83);
  sub_178BC(v85);
  id v87 = [v86 _className];
  sub_4BBE0();
  uint64_t v88 = static String._unconditionallyBridgeFromObjectiveC(_:)(v83);
  uint64_t v90 = v89;

  swift_retain(v81);
  id v91 = (id)SiriKitEvent.__allocating_init(stateType:taskType:statusReason:_:)(131LL, v88, v90, 31LL, sub_346C8, v81);
  unint64_t v92 = v82;
  sub_4BC14((uint64_t)v91);
  swift_release(v91);
  sub_4BB60();
  os_log_type_t v93 = sub_A9E8();
  if (sub_2F45C(v93))
  {
    uint64_t v94 = (_DWORD *)sub_144F0(12LL);
    uint64_t v95 = sub_144F0(32LL);
    uint64_t v121 = v95;
    _DWORD *v94 = 136315138;
    sub_1BE4C((uint64_t)v120, v1 + 104);
    id v91 = *v120;
    id v96 = [v91 description];
    uint64_t v97 = static String._unconditionallyBridgeFromObjectiveC(_:)(v96);
    unint64_t v99 = v98;

    uint64_t *v117 = sub_68DC4(v97, v99, &v121);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v117, v118, v94 + 1, v94 + 3);
    swift_bridgeObjectRelease(v99);
    sub_4BB68(&dword_0, v100, v101, "#SendAnnouncementFlowStrategy Finished creating intent from parse: %s");
    sub_4BB7C((uint64_t)&type metadata for Any);
    sub_48D4(v95);
    sub_48D4((uint64_t)v94);
  }

  sub_1BE4C((uint64_t)v120, v1 + 80);
  sub_4BBE8();
  (*(void (**)(id))(v1 + 8))(v91);
}

uint64_t sub_4A2B8(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void *)(*(void *)v2 + 400LL);
  *(void *)(*(void *)v2 + 408LL) = v1;
  swift_task_dealloc(v5);
  uint64_t v7 = (void *)v4[48];
  uint64_t v6 = v4[49];
  if (v1)
  {
    sub_423C(v4 + 2);

    swift_bridgeObjectRelease(v6);
    uint64_t v8 = sub_4A5A4;
  }

  else
  {
    v4[52] = a1;
    sub_423C(v4 + 2);

    swift_bridgeObjectRelease(v6);
    uint64_t v8 = sub_4A364;
  }

  return swift_task_switch(v8, 0LL, 0LL);
}

uint64_t sub_4A364()
{
  uint64_t v23 = v0 + 256;
  uint64_t v1 = *(void *)(v0 + 416);

  *(void *)(v0 + 256) = v1;
  uint64_t v2 = *(void **)(v0 + 344);
  uint64_t v3 = sub_4BBBC(v2 + 12);
  type metadata accessor for SiriKitEvent(0LL);
  uint64_t v5 = v2[10];
  uint64_t v4 = (uint64_t (**)(void, void))v2[11];
  sub_8504(v2 + 7, v5);
  char v6 = v4[2](v5, v4);
  sub_178BC(v6);
  id v8 = [v7 _className];
  sub_4BBE0();
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  uint64_t v11 = v10;

  swift_retain(v2);
  id v12 = (id)SiriKitEvent.__allocating_init(stateType:taskType:statusReason:_:)(131LL, v9, v11, 31LL, sub_346C8, v2);
  sub_4BC14((uint64_t)v12);
  swift_release(v12);
  sub_4BB60();
  os_log_type_t v13 = sub_A9E8();
  if (sub_2F45C(v13))
  {
    id v14 = (_DWORD *)sub_144F0(12LL);
    uint64_t v15 = sub_144F0(32LL);
    uint64_t v24 = v15;
    *id v14 = 136315138;
    sub_1BE4C(v23, v0 + 104);
    id v12 = *(id *)(v0 + 256);
    id v16 = [v12 description];
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
    unint64_t v19 = v18;

    *(void *)(v0 + 304) = sub_68DC4(v17, v19, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 304, v0 + 312, v14 + 1, v14 + 3);
    swift_bridgeObjectRelease(v19);
    sub_4BB68(&dword_0, v20, v21, "#SendAnnouncementFlowStrategy Finished creating intent from parse: %s");
    sub_4BB7C((uint64_t)&type metadata for Any);
    sub_48D4(v15);
    sub_48D4((uint64_t)v14);
  }

  sub_1BE4C(v23, v0 + 80);
  sub_4BBE8();
  return (*(uint64_t (**)(id))(v0 + 8))(v12);
}

uint64_t sub_4A5A4()
{
  uint64_t v1 = *(void *)(v0 + 368);

  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void *sub_4A5E4(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_41BC(&qword_A06E8);
  __chkstk_darwin(v5);
  id v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v8 = sub_1BDD8();
  sub_4870(v8, (uint64_t)qword_A3EB0);
  sub_3243C();
  os_log_type_t v9 = sub_A9E8();
  if (sub_2F45C(v9))
  {
    uint64_t v10 = (uint8_t *)sub_144F0(2LL);
    *(_WORD *)uint64_t v10 = 0;
    sub_1BE98(&dword_0, v1, v2, "#SendAnnouncementFlowStrategy setting reply and announcement ID", v10);
    sub_48D4((uint64_t)v10);
  }

  Class isa = Bool._bridgeToObjectiveC()().super.super.isa;
  NSString v12 = String._bridgeToObjectiveC()();
  [a1 setValue:isa forKey:v12];

  uint64_t v13 = type metadata accessor for URL(0LL);
  _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0((uint64_t)v7, 1LL, 1LL, v13);
  id v14 = (void *)((char *)v3 + 56);
  uint64_t v16 = *((void *)v3 + 10);
  uint64_t v15 = *((void *)v3 + 11);
  sub_4BBBC(v14);
  uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 136))(v16, v15);
  uint64_t v19 = v18;
  id v20 = objc_allocWithZone(&OBJC_CLASS___INAnnouncement);
  sub_50CB4((uint64_t)v7, v17, v19, 0LL, 0LL);
  id v22 = v21;
  NSString v23 = String._bridgeToObjectiveC()();
  [a1 setValue:v22 forKey:v23];

  id v24 = a1;
  sub_4BBE0();
  return a1;
}

uint64_t type metadata accessor for SendAnnouncementFlowStrategy()
{
  return objc_opt_self(&OBJC_CLASS____TtC35HomeCommunicationFlowDelegatePlugin28SendAnnouncementFlowStrategy);
}

uint64_t sub_4A800()
{
  return sub_49678();
}

uint64_t sub_4A814(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)swift_task_alloc(dword_A2844);
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_34204;
  return sub_49724((uint64_t)v4, a2);
}

uint64_t sub_4A864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for SendAnnouncementFlowStrategy();
  return RCHFlowStrategyAsync.makeParameterMetadata(intent:)(a1, v5, a3);
}

uint64_t sub_4A89C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_task_alloc(async function pointer to ResolveConfirmFlowStrategyAsync.makeAppDoesNotSupportIntentResponse(app:intent:)[1]);
  *(void *)(v5 + 16) = v10;
  uint64_t v11 = type metadata accessor for SendAnnouncementFlowStrategy();
  *uint64_t v10 = v5;
  v10[1] = sub_346D0;
  return ResolveConfirmFlowStrategyAsync.makeAppDoesNotSupportIntentResponse(app:intent:)(a1, a2, a3, v11, a5);
}

uint64_t sub_4A920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_task_alloc(async function pointer to ResolveConfirmFlowStrategyAsync.makeAppNotFoundOnDeviceResponse(app:intent:)[1]);
  *(void *)(v5 + 16) = v10;
  uint64_t v11 = type metadata accessor for SendAnnouncementFlowStrategy();
  *uint64_t v10 = v5;
  v10[1] = sub_346D0;
  return ResolveConfirmFlowStrategyAsync.makeAppNotFoundOnDeviceResponse(app:intent:)(a1, a2, a3, v11, a5);
}

uint64_t sub_4A9A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_task_alloc(async function pointer to ResolveConfirmFlowStrategyAsync.makeDeviceIncompatibleResponse(app:intent:)[1]);
  *(void *)(v5 + 16) = v10;
  uint64_t v11 = type metadata accessor for SendAnnouncementFlowStrategy();
  *uint64_t v10 = v5;
  v10[1] = sub_346D0;
  return ResolveConfirmFlowStrategyAsync.makeDeviceIncompatibleResponse(app:intent:)(a1, a2, a3, v11, a5);
}

uint64_t sub_4AA28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  NSString v12 = (void *)swift_task_alloc(async function pointer to ResolveConfirmFlowStrategyAsync.makeErrorResponse(error:app:intent:)[1]);
  *(void *)(v6 + 16) = v12;
  uint64_t v13 = type metadata accessor for SendAnnouncementFlowStrategy();
  *NSString v12 = v6;
  v12[1] = sub_A65C;
  return ResolveConfirmFlowStrategyAsync.makeErrorResponse(error:app:intent:)(a1, a2, a3, a4, v13, a6);
}

uint64_t sub_4AABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  NSString v12 = (void *)swift_task_alloc(async function pointer to RouteConfirmIntentResponseFlowStrategyAsync.makeFailureConfirmingIntentResponse(app:intent:intentResponse:)[1]);
  *(void *)(v6 + 16) = v12;
  uint64_t v13 = type metadata accessor for SendAnnouncementFlowStrategy();
  *NSString v12 = v6;
  v12[1] = sub_346D0;
  return RouteConfirmIntentResponseFlowStrategyAsync.makeFailureConfirmingIntentResponse(app:intent:intentResponse:)( a1,  a2,  a3,  a4,  v13,  a6);
}

uint64_t sub_4AB50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc(async function pointer to IntentExtensionCommunicatingAsync.makeIntentExecutionBehavior(app:intent:)[1]);
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for SendAnnouncementFlowStrategy();
  *uint64_t v8 = v4;
  v8[1] = sub_654C;
  return IntentExtensionCommunicatingAsync.makeIntentExecutionBehavior(app:intent:)(a1, a2, v9, a4);
}

void sub_4ABCC(uint64_t a1, uint64_t a2)
{
}

void sub_4ABF8(uint64_t a1, uint64_t a2)
{
}

void sub_4AC24(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_4AC50()
{
  uint64_t v1 = type metadata accessor for InputOrigin(0LL);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80LL);
  swift_arrayDestroy(v0 + ((v2 + 32) & ~v2), *(void *)(v0 + 16), v1);
  return swift_deallocClassInstance(v0, 32LL, 7LL);
}

unint64_t sub_4AC94(unint64_t a1)
{
  if ((a1 & 0x100000000LL) != 0)
  {
    Hasher._combine(_:)(0);
  }

  else
  {
    Hasher._combine(_:)(1u);
    Hasher._combine(_:)(a1);
  }

  Swift::Int v2 = Hasher._finalize()();
  return sub_4ADD8(a1 | ((HIDWORD(a1) & 1) << 32), v2);
}

unint64_t sub_4AD08(uint64_t a1, uint64_t a2)
{
  Swift::Int v4 = Hasher._finalize()();
  return sub_4AE5C(a1, a2, v4);
}

unint64_t sub_4AD64(char a1)
{
  uint64_t v2 = sub_26754(a1);
  uint64_t v4 = v3;
  String.hash(into:)(v7, v2, v3);
  swift_bridgeObjectRelease(v4);
  Swift::Int v5 = Hasher._finalize()();
  return sub_4AF3C(a1, v5);
}

unint64_t sub_4ADD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = -1LL << *(_BYTE *)(v2 + 32);
  unint64_t result = a2 & ~v4;
  if (((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8LL)) >> result) & 1) != 0)
  {
    uint64_t v6 = ~v4;
    do
    {
      uint64_t v7 = *(void *)(v2 + 48) + 8 * result;
      if ((*(_BYTE *)(v7 + 4) & 1) != 0)
      {
        if ((a1 & 0x100000000LL) != 0) {
          return result;
        }
      }

      else if ((a1 & 0x100000000LL) == 0 && *(_DWORD *)v7 == (_DWORD)a1)
      {
        return result;
      }

      unint64_t result = (result + 1) & v6;
    }

    while (((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8LL)) >> result) & 1) != 0);
  }

  return result;
}

unint64_t sub_4AE5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1LL << *(_BYTE *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if (((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v6) & 1) != 0)
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    uint64_t v11 = v10[1];
    BOOL v12 = *v10 == a1 && v11 == a2;
    if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v10, v11, a1, a2, 0LL) & 1) == 0)
    {
      uint64_t v13 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v13;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v6) & 1) == 0) {
          break;
        }
        id v14 = (void *)(v9 + 16 * v6);
        uint64_t v15 = v14[1];
        BOOL v16 = *v14 == a1 && v15 == a2;
      }

      while (!v16 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v14, v15, a1, a2, 0LL) & 1) == 0);
    }
  }

  return v6;
}

unint64_t sub_4AF3C(char a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1LL << *(_BYTE *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if (((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v5) & 1) != 0)
  {
    uint64_t v7 = sub_26754(*(_BYTE *)(*(void *)(v2 + 48) + v5));
    uint64_t v9 = v8;
    uint64_t v10 = sub_26754(a1);
    if (v7 == v10 && v9 == v11)
    {
LABEL_16:
      swift_bridgeObjectRelease_n(v9, 2LL);
      return v5;
    }

    uint64_t v13 = v11;
    char v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v10, v11, 0LL);
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v13);
    if ((v14 & 1) == 0)
    {
      uint64_t v15 = ~v4;
      unint64_t v5 = (v5 + 1) & v15;
      if (((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v5) & 1) != 0)
      {
        while (1)
        {
          uint64_t v16 = sub_26754(*(_BYTE *)(*(void *)(v2 + 48) + v5));
          uint64_t v9 = v17;
          uint64_t v18 = sub_26754(a1);
          if (v16 == v18 && v9 == v19) {
            break;
          }
          uint64_t v21 = v19;
          char v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v9, v18, v19, 0LL);
          swift_bridgeObjectRelease(v9);
          swift_bridgeObjectRelease(v21);
          if ((v22 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v15;
            if (((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v5) & 1) != 0) {
              continue;
            }
          }

          return v5;
        }

        goto LABEL_16;
      }
    }
  }

  return v5;
}

unsigned __int8 *sub_4B0B0(unsigned __int8 *a1, uint64_t a2)
{
  return sub_4B1C0(a1, a2);
}

uint64_t sub_4B0C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_4B0D0(a1, a2, a3, (uint64_t (*)(uint64_t *, uint64_t, uint64_t))sub_4B1C0);
}

uint64_t sub_4B0D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t *, uint64_t, uint64_t))
{
  uint64_t v16 = a1;
  uint64_t v17 = a2;
  swift_bridgeObjectRetain(a2);
  uint64_t v6 = String.init<A>(_:)( &v16,  &type metadata for String,  &protocol witness table for String,  &protocol witness table for String);
  uint64_t v8 = v6;
  unint64_t v9 = v7;
  if ((v7 & 0x1000000000000000LL) == 0)
  {
    if ((v7 & 0x2000000000000000LL) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v11 = HIBYTE(v9) & 0xF;
    uint64_t v16 = v8;
    uint64_t v17 = v9 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v10 = &v16;
    goto LABEL_7;
  }

  uint64_t v8 = sub_4B688(v6, v7);
  unint64_t v13 = v12;
  swift_bridgeObjectRelease(v9);
  unint64_t v9 = v13;
  if ((v13 & 0x2000000000000000LL) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v8 & 0x1000000000000000LL) != 0)
  {
    uint64_t v10 = (uint64_t *)((v9 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v11 = v8 & 0xFFFFFFFFFFFFLL;
  }

  else
  {
    uint64_t v10 = (uint64_t *)_StringObject.sharedUTF8.getter(v8, v9);
  }

unsigned __int8 *sub_4B1C0(unsigned __int8 *result, uint64_t a2)
{
  int v2 = *result;
  if (v2 == 43)
  {
    if (a2 >= 1)
    {
      if (a2 != 1)
      {
        sub_4BB48();
        if (v20 ^ v21 | v19) {
          unsigned __int8 v25 = v28;
        }
        if (v20 ^ v21 | v19) {
          unsigned __int8 v26 = 65;
        }
        if (!(v20 ^ v21 | v19)) {
          unsigned __int8 v27 = 58;
        }
        if (v22)
        {
          uint64_t v13 = 0LL;
          uint64_t v29 = (unsigned __int8 *)(v22 + 1);
          do
          {
            unsigned int v30 = *v29;
            if (v30 < 0x30 || v30 >= v27)
            {
              if (v30 < 0x41 || v30 >= v26)
              {
                uint64_t v17 = 0LL;
                if (v30 < 0x61 || v30 >= v25) {
                  return (unsigned __int8 *)v17;
                }
                char v31 = -87;
              }

              else
              {
                char v31 = -55;
              }
            }

            else
            {
              char v31 = -48;
            }

            uint64_t v32 = v13 * v23;
            uint64_t v13 = v32 + (v30 + v31);
            ++v29;
            --v24;
          }

          while (v24);
          return (unsigned __int8 *)v13;
        }

        return 0LL;
      }

      return 0LL;
    }
  }

  else
  {
    if (v2 != 45)
    {
      if (a2)
      {
        sub_4BB48();
        if (v34 ^ v35 | v33) {
          unsigned __int8 v39 = v42;
        }
        if (v34 ^ v35 | v33) {
          unsigned __int8 v40 = 65;
        }
        if (!(v34 ^ v35 | v33)) {
          unsigned __int8 v41 = 58;
        }
        if (v36)
        {
          uint64_t v43 = 0LL;
          do
          {
            unsigned int v44 = *v36;
            if (v44 < 0x30 || v44 >= v41)
            {
              if (v44 < 0x41 || v44 >= v40)
              {
                uint64_t v17 = 0LL;
                if (v44 < 0x61 || v44 >= v39) {
                  return (unsigned __int8 *)v17;
                }
                char v45 = -87;
              }

              else
              {
                char v45 = -55;
              }
            }

            else
            {
              char v45 = -48;
            }

            uint64_t v46 = v43 * v37;
            uint64_t v43 = v46 + (v44 + v45);
            ++v36;
            --v38;
          }

          while (v38);
          return (unsigned __int8 *)(v46 + (v44 + v45));
        }

        return 0LL;
      }

      return 0LL;
    }

    if (a2 >= 1)
    {
      if (a2 != 1)
      {
        sub_4BB48();
        if (v4 ^ v5 | v3) {
          unsigned __int8 v9 = v12;
        }
        if (v4 ^ v5 | v3) {
          unsigned __int8 v10 = 65;
        }
        if (!(v4 ^ v5 | v3)) {
          unsigned __int8 v11 = 58;
        }
        if (v6)
        {
          uint64_t v13 = 0LL;
          for (uint64_t i = (unsigned __int8 *)(v6 + 1); ; ++i)
          {
            unsigned int v15 = *i;
            if (v15 < 0x30 || v15 >= v11)
            {
              if (v15 < 0x41 || v15 >= v10)
              {
                uint64_t v17 = 0LL;
                if (v15 < 0x61 || v15 >= v9) {
                  return (unsigned __int8 *)v17;
                }
                char v16 = -87;
              }

              else
              {
                char v16 = -55;
              }
            }

            else
            {
              char v16 = -48;
            }

            uint64_t v18 = v13 * v7;
            uint64_t v13 = v18 - (v15 + v16);
            if (!--v8) {
              return (unsigned __int8 *)v13;
            }
          }
        }

        return 0LL;
      }

      return 0LL;
    }

    __break(1u);
  }

  __break(1u);
  return result;
}

unsigned __int8 *sub_4B424(unsigned __int8 *result, uint64_t a2)
{
  int v2 = *result;
  if (v2 == 43)
  {
    if (a2 >= 1)
    {
      if (a2 != 1)
      {
        sub_4BB48();
        if (v22 ^ v23 | v21) {
          unsigned __int8 v27 = v30;
        }
        if (v22 ^ v23 | v21) {
          unsigned __int8 v28 = 65;
        }
        if (!(v22 ^ v23 | v21)) {
          unsigned __int8 v29 = 58;
        }
        if (v24)
        {
          unint64_t v13 = 0LL;
          char v31 = (unsigned __int8 *)(v24 + 1);
          do
          {
            unsigned int v32 = *v31;
            if (v32 < 0x30 || v32 >= v29)
            {
              if (v32 < 0x41 || v32 >= v28)
              {
                uint64_t v17 = 0LL;
                if (v32 < 0x61 || v32 >= v27) {
                  return (unsigned __int8 *)v17;
                }
                char v33 = -87;
              }

              else
              {
                char v33 = -55;
              }
            }

            else
            {
              char v33 = -48;
            }

            if (!is_mul_ok(v13, v25)) {
              return 0LL;
            }
            unint64_t v34 = v13 * v25;
            unsigned __int8 v35 = v32 + v33;
            BOOL v20 = __CFADD__(v34, v35);
            unint64_t v13 = v34 + v35;
            if (v20) {
              return 0LL;
            }
            ++v31;
            --v26;
          }

          while (v26);
          return (unsigned __int8 *)v13;
        }

        return 0LL;
      }

      return 0LL;
    }
  }

  else
  {
    if (v2 != 45)
    {
      if (a2)
      {
        sub_4BB48();
        if (v37 ^ v38 | v36) {
          unsigned __int8 v42 = v45;
        }
        if (v37 ^ v38 | v36) {
          unsigned __int8 v43 = 65;
        }
        if (!(v37 ^ v38 | v36)) {
          unsigned __int8 v44 = 58;
        }
        if (v39)
        {
          unint64_t v46 = 0LL;
          do
          {
            unsigned int v47 = *v39;
            if (v47 < 0x30 || v47 >= v44)
            {
              if (v47 < 0x41 || v47 >= v43)
              {
                uint64_t v17 = 0LL;
                if (v47 < 0x61 || v47 >= v42) {
                  return (unsigned __int8 *)v17;
                }
                char v48 = -87;
              }

              else
              {
                char v48 = -55;
              }
            }

            else
            {
              char v48 = -48;
            }

            if (!is_mul_ok(v46, v40)) {
              return 0LL;
            }
            unint64_t v49 = v46 * v40;
            unsigned __int8 v50 = v47 + v48;
            BOOL v20 = __CFADD__(v49, v50);
            unint64_t v46 = v49 + v50;
            if (v20) {
              return 0LL;
            }
            ++v39;
            --v41;
          }

          while (v41);
          return (unsigned __int8 *)v46;
        }

        return 0LL;
      }

      return 0LL;
    }

    if (a2 >= 1)
    {
      if (a2 != 1)
      {
        sub_4BB48();
        if (v4 ^ v5 | v3) {
          unsigned __int8 v9 = v12;
        }
        if (v4 ^ v5 | v3) {
          unsigned __int8 v10 = 65;
        }
        if (!(v4 ^ v5 | v3)) {
          unsigned __int8 v11 = 58;
        }
        if (v6)
        {
          unint64_t v13 = 0LL;
          for (uint64_t i = (unsigned __int8 *)(v6 + 1); ; ++i)
          {
            unsigned int v15 = *i;
            if (v15 < 0x30 || v15 >= v11)
            {
              if (v15 < 0x41 || v15 >= v10)
              {
                uint64_t v17 = 0LL;
                if (v15 < 0x61 || v15 >= v9) {
                  return (unsigned __int8 *)v17;
                }
                char v16 = -87;
              }

              else
              {
                char v16 = -55;
              }
            }

            else
            {
              char v16 = -48;
            }

            if (!is_mul_ok(v13, v7)) {
              return 0LL;
            }
            unint64_t v18 = v13 * v7;
            unsigned __int8 v19 = v15 + v16;
            BOOL v20 = v18 >= v19;
            unint64_t v13 = v18 - v19;
            if (!v20) {
              return 0LL;
            }
            if (!--v8) {
              return (unsigned __int8 *)v13;
            }
          }
        }

        return 0LL;
      }

      return 0LL;
    }

    __break(1u);
  }

  __break(1u);
  return result;
}

uint64_t sub_4B688(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = sub_4B6E4((uint64_t)sub_4B6E0, 0LL, a1, a2);
  unint64_t v4 = v3;
  uint64_t v7 = sub_4B718(v2, v5, v6, v3);
  swift_bridgeObjectRelease(v4);
  return v7;
}

uint64_t sub_4B6E4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000LL) == 0) {
    uint64_t v4 = a3;
  }
  uint64_t v5 = 7LL;
  if (((a4 >> 60) & ((a3 & 0x800000000000000LL) == 0)) != 0) {
    uint64_t v5 = 11LL;
  }
  return String.subscript.getter(15LL, v5 | (v4 << 16));
}

uint64_t sub_4B718(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v5 = a3;
  if ((a4 & 0x1000000000000000LL) != 0)
  {
    sub_4B85C(a1, a2, a3, a4);
    if (v12)
    {
      uint64_t v9 = v12;
      sub_692AC(v12, 0LL);
      unint64_t v8 = (unint64_t)v13;
      sub_4B948(v17, (uint64_t)(v13 + 4), v9, a1, a2, v5, a4);
      unint64_t v5 = v14;
      unint64_t v15 = v17[3];
      swift_bridgeObjectRetain(a4);
      swift_bridgeObjectRelease(v15);
      if (v5 != v9)
      {
        __break(1u);
        goto LABEL_11;
      }
    }

    else
    {
      unint64_t v8 = (unint64_t)_swiftEmptyArrayStorage;
    }

    uint64_t v16 = static String._uncheckedFromUTF8(_:)(v8 + 32, *(void *)(v8 + 16));
    swift_release(v8);
    return v16;
  }

  else
  {
    unint64_t v8 = a1 >> 16;
    uint64_t v9 = a2 >> 16;
    if ((a4 & 0x2000000000000000LL) == 0)
    {
      if ((a3 & 0x1000000000000000LL) != 0)
      {
        uint64_t v10 = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
LABEL_5:
        v10 += v8;
        return static String._uncheckedFromUTF8(_:)(v10, v9 - v8);
      }

LABEL_11:
      uint64_t v10 = _StringObject.sharedUTF8.getter(v5, a4);
      if (!v10) {
        return static String._uncheckedFromUTF8(_:)(v10, v9 - v8);
      }
      goto LABEL_5;
    }

    v17[0] = a3;
    v17[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return static String._uncheckedFromUTF8(_:)((char *)v17 + v8, v9 - v8);
  }

void sub_4B85C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000LL) == 0) {
    LOBYTE(vsub_423C(v0 + 8) = 1;
  }
  uint64_t v9 = 4LL << v8;
  if ((a1 & 0xC) == 4LL << v8)
  {
    sub_6930C(a1, a3, a4);
    unint64_t v7 = v10;
  }

  if ((a2 & 0xC) == v9)
  {
    sub_6930C(a2, a3, a4);
    a2 = v11;
    if ((a4 & 0x1000000000000000LL) == 0) {
      return;
    }
  }

  else if ((a4 & 0x1000000000000000LL) == 0)
  {
    return;
  }

  unint64_t v12 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000LL) == 0) {
    unint64_t v12 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (v12 < v7 >> 16)
  {
    __break(1u);
  }

  else if (v12 >= a2 >> 16)
  {
    String.UTF8View._foreignDistance(from:to:)(v7, a2, a3, a4);
    return;
  }

  __break(1u);
}

void sub_4B948( unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v11 = a4;
    goto LABEL_33;
  }

  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v29 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    unint64_t v11 = a4;
LABEL_33:
    *a1 = a4;
    a1[1] = a5;
    a1[2] = a6;
    a1[3] = a7;
    a1[4] = v11;
    return;
  }

  uint64_t v13 = 0LL;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000LL) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4LL << v14;
  uint64_t v23 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v24 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000LL) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v25 = v16;
  uint64_t v28 = a3 - 1;
  unint64_t v11 = a4;
  while (1)
  {
    unint64_t v17 = v11;
    if ((v11 & 0xC) == v15) {
      sub_6930C(v11, a6, a7);
    }
    if (v17 >> 14 < v29 || v17 >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000LL) != 0)
    {
      char v21 = String.UTF8View._foreignSubscript(position:)();
    }

    else
    {
      unint64_t v19 = v17 >> 16;
      if ((a7 & 0x2000000000000000LL) != 0)
      {
        v30[0] = a6;
        v30[1] = v24;
        char v21 = *((_BYTE *)v30 + v19);
      }

      else
      {
        uint64_t v20 = v23;
        if ((a6 & 0x1000000000000000LL) == 0) {
          uint64_t v20 = _StringObject.sharedUTF8.getter(a6, a7);
        }
        char v21 = *(_BYTE *)(v20 + v19);
      }
    }

    if ((v11 & 0xC) == v15)
    {
      sub_6930C(v11, a6, a7);
      unint64_t v11 = v22;
      if ((a7 & 0x1000000000000000LL) == 0)
      {
LABEL_27:
        unint64_t v11 = (v11 & 0xFFFFFFFFFFFF0000LL) + 65540;
        goto LABEL_31;
      }
    }

    else if ((a7 & 0x1000000000000000LL) == 0)
    {
      goto LABEL_27;
    }

    if (v25 <= v11 >> 16) {
      goto LABEL_35;
    }
    unint64_t v11 = String.UTF8View._foreignIndex(after:)(v11, a6, a7);
LABEL_31:
    *(_BYTE *)(a2 + v1sub_423C(v0 + 3) = v21;
    if (v28 != v13)
    {
      ++v13;
      if (v10 != v11 >> 14) {
        continue;
      }
    }

    goto LABEL_33;
  }

  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
}

  ;
}

uint64_t sub_4BB60()
{
  return Logger.logObject.getter();
}

void sub_4BB68(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
}

uint64_t sub_4BB7C@<X0>(uint64_t a1@<X8>)
{
  return swift_arrayDestroy(v1, 1LL, a1 + 8);
}

uint64_t sub_4BB8C()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_4BB9C()
{
  return swift_setDeallocating(v0);
}

void *sub_4BBAC()
{
  return sub_8504(v1, *(void *)(v0 + 80));
}

void *sub_4BBBC(void *a1)
{
  return sub_8504(a1, v1);
}

void *sub_4BBC4()
{
  return sub_8504(v1, *(void *)(v0 + 80));
}

void *sub_4BBD4(uint64_t a1, ...)
{
  return Hasher.init(_seed:)((uint64_t *)va);
}

void sub_4BBE0()
{
}

uint64_t sub_4BBE8()
{
  return swift_task_dealloc(v0);
}

uint64_t sub_4BBF4(uint64_t a1, uint64_t a2)
{
  return swift_beginAccess(a1, a2, 1LL, 0LL);
}

uint64_t sub_4BC00(uint64_t a1)
{
  return swift_bridgeObjectRetain(*(void *)(*(void *)(v1 + 56) + 8 * a1));
}

unint64_t sub_4BC0C(uint64_t a1, uint64_t a2)
{
  return sub_4AD08(a1, a2);
}

uint64_t sub_4BC14(uint64_t a1)
{
  return dispatch thunk of SiriKitEventSending.send(_:)(a1, v1, v2);
}

unint64_t sub_4BC20()
{
  return 0xD000000000000016LL;
}

uint64_t sub_4BC3C()
{
  uint64_t v0 = type metadata accessor for URL(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  unint64_t v3 = (char *)v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = sub_41BC(&qword_A06E8);
  __chkstk_darwin(v4);
  os_log_type_t v6 = (void *)((char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v27 = 0LL;
  unint64_t v28 = 0xE000000000000000LL;
  _StringGuts.grow(_:)(151LL);
  sub_12000(0xD00000000000002CLL, (uint64_t)"SendAnnouncementIntent(\n    announcementURL=");
  IntentParameter.wrappedValue.getter(v6);
  if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0((uint64_t)v6, 1LL, v0))
  {
    sub_F4D0((uint64_t)v6);
    uint64_t v7 = 0LL;
    uint64_t v8 = 0LL;
  }

  else
  {
    (*(void (**)(char *, void *, uint64_t))(v1 + 16))(v3, v6, v0);
    uint64_t v9 = sub_F4D0((uint64_t)v6);
    uint64_t v7 = URL.absoluteString.getter(v9);
    uint64_t v8 = v10;
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }

  v26[0] = v7;
  v26[1] = v8;
  uint64_t v11 = sub_41BC(&qword_A1D68);
  v29._uint64_t countAndFlagsBits = String.init<A>(describing:)(v26, v11);
  sub_4C2D0(v29);
  sub_4C2E4();
  sub_12000(0xD00000000000001CLL, (uint64_t)"\n    announcementIdentifier=");
  sub_4C2DC();
  v30._uint64_t countAndFlagsBits = sub_4C2BC();
  sub_4C2D0(v30);
  sub_4C2E4();
  v12._uint64_t countAndFlagsBits = sub_4C2F8() | 0x5273692000000000LL;
  v12._object = (void *)0xED00003D796C7065LL;
  String.append(_:)(v12);
  sub_4C2DC();
  if (LOBYTE(v26[0])) {
    uint64_t v13 = 1702195828LL;
  }
  else {
    uint64_t v13 = 0x65736C6166LL;
  }
  if (LOBYTE(v26[0])) {
    unint64_t v14 = 0xE400000000000000LL;
  }
  else {
    unint64_t v14 = 0xE500000000000000LL;
  }
  unint64_t v15 = v14;
  String.append(_:)(*(Swift::String *)&v13);
  sub_4C2E4();
  v16._uint64_t countAndFlagsBits = sub_4C2F8() | 0x6D6F682000000000LL;
  v16._object = (void *)0xEA00000000003D65LL;
  String.append(_:)(v16);
  sub_4C2DC();
  v31._uint64_t countAndFlagsBits = sub_4C2BC();
  sub_4C2D0(v31);
  sub_4C2E4();
  v17._uint64_t countAndFlagsBits = sub_4C2F8() | 0x6F6F722000000000LL;
  String.append(_:)(v17);
  sub_4C2DC();
  sub_41BC(&qword_A2950);
  v18._uint64_t countAndFlagsBits = sub_4C2EC();
  object = v18._object;
  String.append(_:)(v18);
  swift_bridgeObjectRelease(object);
  v20._uint64_t countAndFlagsBits = sub_4C2F8() | 0x6E6F7A2000000000LL;
  v20._object = (void *)0xEB000000003D7365LL;
  String.append(_:)(v20);
  sub_4C2DC();
  v32._uint64_t countAndFlagsBits = sub_4C2EC();
  sub_4C2D0(v32);
  sub_4C2E4();
  v21._object = (void *)0x8000000000078730LL;
  v21._uint64_t countAndFlagsBits = 0xD000000000000012LL;
  String.append(_:)(v21);
  sub_4C2DC();
  v22._uint64_t countAndFlagsBits = sub_4C2BC();
  uint64_t v23 = v22._object;
  String.append(_:)(v22);
  swift_bridgeObjectRelease(v23);
  v24._uint64_t countAndFlagsBits = 10506LL;
  v24._object = (void *)0xE200000000000000LL;
  String.append(_:)(v24);
  return v27;
}

uint64_t destroy for SendAnnouncementIntent(void *a1)
{
  return swift_release(a1[6]);
}

uint64_t *initializeWithCopy for SendAnnouncementIntent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  a1[2] = v5;
  a1[3] = v6;
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  a1[4] = v7;
  a1[5] = v8;
  uint64_t v9 = a2[6];
  a1[6] = v9;
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  swift_retain(v8);
  swift_retain(v9);
  return a1;
}

uint64_t *assignWithCopy for SendAnnouncementIntent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  uint64_t v6 = a2[1];
  uint64_t v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  uint64_t v8 = a2[2];
  uint64_t v9 = a1[2];
  a1[2] = v8;
  swift_retain(v8);
  swift_release(v9);
  uint64_t v10 = a2[3];
  uint64_t v11 = a1[3];
  a1[3] = v10;
  swift_retain(v10);
  swift_release(v11);
  uint64_t v12 = a2[4];
  uint64_t v13 = a1[4];
  a1[4] = v12;
  swift_retain(v12);
  swift_release(v13);
  uint64_t v14 = a2[5];
  uint64_t v15 = a1[5];
  a1[5] = v14;
  swift_retain(v14);
  swift_release(v15);
  uint64_t v16 = a2[6];
  uint64_t v17 = a1[6];
  a1[6] = v16;
  swift_retain(v16);
  swift_release(v17);
  return a1;
}

__n128 initializeWithTake for SendAnnouncementIntent(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  __int128 v3 = *(_OWORD *)(a2 + 16);
  __int128 v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 4sub_423C(v0 + 8) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 3sub_423C(v0 + 2) = v4;
  *(__n128 *)a1 = result;
  return result;
}

void *assignWithTake for SendAnnouncementIntent(void *a1, uint64_t a2)
{
  uint64_t v4 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  swift_release(a1[2]);
  uint64_t v5 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  swift_release(v5);
  swift_release(a1[4]);
  uint64_t v6 = a1[5];
  *((_OWORD *)a1 + sub_423C(v0 + 2) = *(_OWORD *)(a2 + 32);
  swift_release(v6);
  uint64_t v7 = a1[6];
  a1[6] = *(void *)(a2 + 48);
  swift_release(v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for SendAnnouncementIntent(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 56))
    {
      LODWORD(vsub_423C(v0 + 2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }

    else
    {
      uint64_t v2 = *a1;
    }
  }

  else
  {
    LODWORD(vsub_423C(v0 + 2) = -1;
  }

  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SendAnnouncementIntent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + sub_423C(v0 + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 56) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for SendAnnouncementIntent()
{
  return &type metadata for SendAnnouncementIntent;
}

unint64_t sub_4C220()
{
  unint64_t result = qword_A2958;
  if (!qword_A2958)
  {
    unint64_t result = swift_getWitnessTable(&unk_73B64, &type metadata for SendAnnouncementIntentResponseCode);
    atomic_store(result, (unint64_t *)&qword_A2958);
  }

  return result;
}

unint64_t sub_4C25C(uint64_t a1)
{
  unint64_t result = sub_4C280();
  *(void *)(a1 + sub_423C(v0 + 8) = result;
  return result;
}

unint64_t sub_4C280()
{
  unint64_t result = qword_A2978;
  if (!qword_A2978)
  {
    unint64_t result = swift_getWitnessTable(&unk_73948, &type metadata for SendAnnouncementIntent);
    atomic_store(result, (unint64_t *)&qword_A2978);
  }

  return result;
}

uint64_t sub_4C2BC()
{
  *(_OWORD *)(v1 - 96) = *(_OWORD *)(v1 - 96);
  return String.init<A>(describing:)(v1 - 96, v0);
}

void sub_4C2D0(Swift::String a1)
{
}

uint64_t sub_4C2DC()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_4C2E4()
{
  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_4C2EC()
{
  return String.init<A>(describing:)(v1 - 96, v0);
}

uint64_t sub_4C2F8()
{
  return 538976266LL;
}

uint64_t sub_4C304(uint64_t a1, uint64_t a2)
{
  v3[7] = a2;
  v3[8] = v2;
  v3[6] = a1;
  uint64_t v4 = type metadata accessor for DialogPhase(0LL);
  void v3[9] = sub_38350(*(void *)(v4 - 8));
  uint64_t v5 = type metadata accessor for OutputGenerationManifest(0LL);
  v3[10] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[11] = v6;
  v3[12] = sub_38350(v6);
  sub_38360();
  return sub_382EC(v7, v8, v9);
}

uint64_t sub_4C364()
{
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v1 = type metadata accessor for Logger(0LL);
  uint64_t v2 = sub_4870(v1, (uint64_t)qword_A3EB0);
  v0[13] = v2;
  __int128 v3 = (os_log_s *)Logger.logObject.getter(v2);
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (sub_AA1C(v4))
  {
    uint64_t v5 = (_WORD *)sub_A968();
    *uint64_t v5 = 0;
    sub_4DE80( &dword_0,  v3,  v6,  "#SendAnnouncementIntentHandledStrategy makeIntentHandledResponseAsync with response framework adoption");
    sub_48D4((uint64_t)v5);
  }

  uint64_t v7 = sub_41BC(&qword_A2AD0);
  v0[14] = v7;
  uint64_t v8 = (void *)IntentResolutionRecord.intentResponse.getter(v7);
  uint64_t v9 = sub_25C60();

  uint64_t v10 = *(void *)(v9 + 16);
  swift_bridgeObjectRelease(v9);
  uint64_t v11 = (void *)IntentResolutionRecord.intent.getter(v7);
  id v12 = [v11 isReply];

  if (v12)
  {
    char v13 = [v12 BOOLValue];
  }

  else
  {
    char v13 = 0;
  }

  uint64_t v14 = (void *)IntentResolutionRecord.intent.getter(v7);
  sub_25780();
  uint64_t v16 = v15;
  v0[15] = v15;

  uint64_t v17 = (void *)swift_task_alloc(dword_A2384);
  v0[16] = v17;
  sub_38428(v17, (uint64_t)sub_4C504);
  return sub_3F2C4(v16, v10 != 0, v13);
}

uint64_t sub_4C504(uint64_t a1)
{
  uint64_t v4 = v1[16];
  *uint64_t v5 = *v3;
  v1[17] = v2;
  swift_task_dealloc(v4);
  if (!v2) {
    swift_bridgeObjectRelease(v1[15]);
  }
  sub_38360();
  return sub_383A4(v6, v7, v8);
}

uint64_t sub_4C55C(uint64_t a1)
{
  uint64_t v2 = (os_log_s *)Logger.logObject.getter(a1);
  os_log_type_t v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (_WORD *)sub_A968();
    *uint64_t v4 = 0;
    sub_4DE80(&dword_0, v2, v5, "Making a SAIntentGroupHandleIntent that contains INPlayAnnouncementSoundIntent.");
    sub_48D4((uint64_t)v4);
  }

  uint64_t v6 = (void *)v1[3];
  uint64_t v7 = v1[14];
  uint64_t v8 = v1[12];
  uint64_t v9 = v1[9];

  v1[18] = v6;
  id v10 = [objc_allocWithZone(INPlayAnnouncementSoundIntent) initWithSoundType:1];
  v1[19] = v10;
  id v11 = v10;
  id v12 = (void *)IntentResolutionRecord.intent.getter(v7);
  id v13 = [v12 _metadata];

  [v11 _setMetadata:v13];
  uint64_t v15 = App.appIdentifier.getter(v14);
  uint64_t v17 = sub_4D6E4(v11, v15, v16);
  uint64_t v18 = sub_D304();
  static DialogPhase.completion.getter(v18);
  uint64_t v19 = swift_task_alloc(32LL);
  *(void *)(v19 + 16) = v17;
  OutputGenerationManifest.init(dialogPhase:_:)(v9, sub_4DD7C, v19);
  swift_bridgeObjectRelease(v17);
  sub_AA14();
  uint64_t v20 = type metadata accessor for ResponseFactory(0LL);
  sub_4DDD8(v20);
  v1[5] = sub_384BC();
  uint64_t v21 = sub_41BC(&qword_A2100);
  uint64_t v22 = sub_D31C(v21);
  *(_OWORD *)(v22 + 16) = xmmword_6FCA0;
  *(void *)(v22 + 3sub_423C(v0 + 2) = v6;
  uint64_t v28 = v22;
  specialized Array._endMutation()(v22, v23);
  v1[20] = v28;
  uint64_t v24 = async function pointer to dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)[1];
  id v25 = v6;
  uint64_t v26 = (void *)swift_task_alloc(v24);
  v1[21] = v26;
  void *v26 = v1;
  v26[1] = sub_4C76C;
  return dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)( v1[6],  v28,  v1[12],  v8,  &protocol witness table for ResponseFactory);
}

uint64_t sub_4C76C()
{
  uint64_t v5 = *v0;
  sub_38374(*(void *)(v5 + 168), &v5);
  sub_D304();
  sub_38360();
  return sub_382EC(v1, v2, v3);
}

uint64_t sub_4C7B4()
{
  uint64_t v1 = *(void **)(v0 + 152);
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v5 = *(void *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 80);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release(*(void *)(v0 + 40));
  sub_AA14();
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_4C828()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_bridgeObjectRelease(*(void *)(v0 + 120));
  sub_AA14();
  swift_task_dealloc(v1);
  return sub_4DDA0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_4C868(uint64_t a1, uint64_t a2)
{
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v3 = type metadata accessor for Logger(0LL);
  uint64_t v4 = sub_4870(v3, (uint64_t)qword_A3EB0);
  uint64_t v5 = (os_log_s *)Logger.logObject.getter(v4);
  os_log_type_t v6 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl( &dword_0,  v5,  v6,  "#SendAnnouncementIntentHandledStrategy sending INPlayAnnouncementSoundIntent",  v7,  2u);
    swift_slowDealloc(v7, -1LL, -1LL);
  }

  uint64_t v8 = swift_bridgeObjectRetain(a2);
  return OutputGenerationManifest.additionalCommands.setter(v8);
}

uint64_t sub_4C968(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  void v3[2] = a1;
  sub_38360();
  return swift_task_switch(v4, v5, v6);
}

uint64_t sub_4C988()
{
  uint64_t v1 = sub_41BC(&qword_A2AD0);
  uint64_t v2 = (void *)IntentResolutionRecord.intentResponse.getter(v1);
  id v3 = [v2 code];

  uint64_t v4 = (void *)IntentResolutionRecord.intent.getter(v1);
  sub_25780();
  uint64_t v6 = v5;
  v0[5] = v5;

  uint64_t v7 = (uint64_t **)swift_task_alloc(dword_A29D4);
  v0[6] = (uint64_t)v7;
  uint8_t *v7 = v0;
  v7[1] = (uint64_t *)sub_4CA34;
  return sub_4CAB8(v0[2], (uint64_t)v3, v6);
}

uint64_t sub_4CA34()
{
  uint64_t v3 = v0[6];
  uint64_t v4 = *v2;
  *uint64_t v5 = v4;
  v0[7] = v1;
  swift_task_dealloc(v3);
  if (v1)
  {
    sub_38360();
    return sub_383A4(v6, v7, v8);
  }

  else
  {
    swift_bridgeObjectRelease(v0[5]);
    return sub_4DDA0(*(uint64_t (**)(void))(v4 + 8));
  }

uint64_t sub_4CA8C()
{
  return sub_6698(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_4CAB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[32] = a3;
  v4[33] = v3;
  v4[30] = a1;
  v4[31] = a2;
  uint64_t v5 = type metadata accessor for HomeCommunicationError(0LL);
  v4[34] = v5;
  v4[35] = sub_38350(*(void *)(v5 - 8));
  sub_38360();
  return sub_382EC(v6, v7, v8);
}

uint64_t sub_4CB00()
{
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v1 = type metadata accessor for Logger(0LL);
  uint64_t v2 = sub_4870(v1, (uint64_t)qword_A3EB0);
  uint64_t v3 = (os_log_s *)Logger.logObject.getter(v2);
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)sub_A968();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl( &dword_0,  v3,  v4,  "#SendAnnouncementIntentHandledStrategy makeFailureHandlingIntentResponseAsync with response framework adoption",  v5,  2u);
    sub_48D4((uint64_t)v5);
  }

  uint64_t v6 = v0[31];

  switch(v6)
  {
    case 6LL:
      sub_4DE3C();
      uint64_t v8 = (void *)swift_task_alloc(dword_A2364);
      v0[37] = v8;
      sub_4DE90(v8, (uint64_t)sub_4CF60);
      sub_4DE6C();
      uint64_t result = sub_3F094(v9);
      break;
    case 7LL:
      sub_4DE3C();
      uint64_t v22 = (void *)swift_task_alloc(dword_A235C);
      v0[38] = v22;
      sub_4DE90(v22, (uint64_t)sub_4D040);
      sub_4DE6C();
      uint64_t result = sub_3EFDC(v23);
      break;
    case 8LL:
      sub_4DE3C();
      uint64_t v24 = (void *)swift_task_alloc(dword_A2374);
      v0[36] = v24;
      sub_38428(v24, (uint64_t)sub_4CE88);
      sub_4DE6C();
      uint64_t result = sub_3F214();
      break;
    case 9LL:
      sub_4DE3C();
      id v25 = (void *)swift_task_alloc(dword_A234C);
      v0[40] = v25;
      sub_4DE90(v25, (uint64_t)sub_4D200);
      sub_4DE6C();
      uint64_t result = sub_3EE90(v26);
      break;
    case 10LL:
      sub_4DE3C();
      uint64_t v27 = (void *)swift_task_alloc(dword_A2334);
      v0[39] = v27;
      sub_38428(v27, (uint64_t)sub_4D120);
      sub_4DE6C();
      uint64_t result = sub_3ED88();
      break;
    case 11LL:
      sub_4DE3C();
      uint64_t v28 = (void *)swift_task_alloc(dword_A2354);
      v0[41] = v28;
      sub_38428(v28, (uint64_t)sub_4D2E0);
      sub_4DE6C();
      uint64_t result = sub_3EF84();
      break;
    case 12LL:
      sub_4DE3C();
      Swift::String v29 = (void *)swift_task_alloc(dword_A236C);
      v0[42] = v29;
      sub_38428(v29, (uint64_t)sub_4D3C0);
      sub_4DE6C();
      uint64_t result = sub_3F1BC();
      break;
    case 13LL:
      sub_4DE3C();
      Swift::String v30 = (void *)swift_task_alloc(dword_A233C);
      v0[43] = v30;
      sub_38428(v30, (uint64_t)sub_4D4A0);
      sub_4DE6C();
      uint64_t result = sub_3EDE0();
      break;
    case 14LL:
      sub_4DE3C();
      Swift::String v31 = (void *)swift_task_alloc(dword_A2344);
      v0[44] = v31;
      sub_38428(v31, (uint64_t)sub_4D580);
      sub_4DE6C();
      uint64_t result = sub_3EE38();
      break;
    default:
      id v11 = (os_log_s *)Logger.logObject.getter(v7);
      os_log_type_t v12 = static os_log_type_t.error.getter();
      if (sub_AA1C(v12))
      {
        id v13 = (_WORD *)sub_A968();
        *id v13 = 0;
        sub_4DE80( &dword_0,  v11,  v14,  "#SendAnnouncementIntentHandledStrategy makeFailureHandlingIntentResponse resulted in generic error");
        sub_48D4((uint64_t)v13);
      }

      uint64_t v16 = v0[34];
      uint64_t v15 = (void *)v0[35];
      uint64_t v17 = v0[31];

      *uint64_t v15 = v17;
      swift_storeEnumTagMultiPayload(v15, v16, 8LL);
      uint64_t v18 = sub_380D0( &qword_A0848,  type metadata accessor for HomeCommunicationError,  (uint64_t)&protocol conformance descriptor for HomeCommunicationError);
      swift_allocError(v16, v18, 0LL, 0LL);
      sub_108C0(v19);
      uint64_t v20 = sub_3BB8C((uint64_t)v15);
      swift_willThrow(v20);
      swift_task_dealloc(v0[35]);
      sub_4DE6C();
      __asm { BR              X0 }

      return result;
  }

  return result;
}

uint64_t sub_4CE88(uint64_t a1)
{
  if (v2)
  {
    sub_4DE28();
    return sub_4DDA0(*(uint64_t (**)(void))(v3 + 8));
  }

  else
  {
    sub_38360();
    return sub_383A4(v6, v7, v8);
  }

#error "4CF18: call analysis failed (funcsize=34)"
uint64_t sub_4CF60()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  sub_4DDF8();
  v0[5] = v2;
  v0[6] = v3;
  v0[7] = v1;
  sub_46B2C(v0[37], v4);
  if (v1)
  {
    sub_4DE28();
    return sub_4DDA0(*(uint64_t (**)(void))(v2 + 8));
  }

  else
  {
    sub_38360();
    return sub_383A4(v6, v7, v8);
  }

#error "4CFF8: call analysis failed (funcsize=34)"
uint64_t sub_4D040()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  sub_4DDF8();
  v0[8] = v2;
  void v0[9] = v3;
  v0[10] = v1;
  sub_46B2C(v0[38], v4);
  if (v1)
  {
    sub_4DE28();
    return sub_4DDA0(*(uint64_t (**)(void))(v2 + 8));
  }

  else
  {
    sub_38360();
    return sub_383A4(v6, v7, v8);
  }

#error "4D0D8: call analysis failed (funcsize=34)"
uint64_t sub_4D120()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  sub_4DDF8();
  v0[11] = v2;
  v0[12] = v3;
  v0[13] = v1;
  sub_46B2C(v0[39], v4);
  if (v1)
  {
    sub_4DE28();
    return sub_4DDA0(*(uint64_t (**)(void))(v2 + 8));
  }

  else
  {
    sub_38360();
    return sub_383A4(v6, v7, v8);
  }

#error "4D1B8: call analysis failed (funcsize=34)"
uint64_t sub_4D200()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  sub_4DDF8();
  v0[14] = v2;
  v0[15] = v3;
  v0[16] = v1;
  sub_46B2C(v0[40], v4);
  if (v1)
  {
    sub_4DE28();
    return sub_4DDA0(*(uint64_t (**)(void))(v2 + 8));
  }

  else
  {
    sub_38360();
    return sub_383A4(v6, v7, v8);
  }

#error "4D298: call analysis failed (funcsize=34)"
uint64_t sub_4D2E0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  sub_4DDF8();
  v0[17] = v2;
  v0[18] = v3;
  v0[19] = v1;
  sub_46B2C(v0[41], v4);
  if (v1)
  {
    sub_4DE28();
    return sub_4DDA0(*(uint64_t (**)(void))(v2 + 8));
  }

  else
  {
    sub_38360();
    return sub_383A4(v6, v7, v8);
  }

#error "4D378: call analysis failed (funcsize=34)"
uint64_t sub_4D3C0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  sub_4DDF8();
  v0[20] = v2;
  v0[21] = v3;
  v0[22] = v1;
  sub_46B2C(v0[42], v4);
  if (v1)
  {
    sub_4DE28();
    return sub_4DDA0(*(uint64_t (**)(void))(v2 + 8));
  }

  else
  {
    sub_38360();
    return sub_383A4(v6, v7, v8);
  }

#error "4D458: call analysis failed (funcsize=34)"
uint64_t sub_4D4A0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  sub_4DDF8();
  v0[23] = v2;
  v0[24] = v3;
  v0[25] = v1;
  sub_46B2C(v0[43], v4);
  if (v1)
  {
    sub_4DE28();
    return sub_4DDA0(*(uint64_t (**)(void))(v2 + 8));
  }

  else
  {
    sub_38360();
    return sub_383A4(v6, v7, v8);
  }

#error "4D538: call analysis failed (funcsize=34)"
uint64_t sub_4D580()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  sub_4DDF8();
  v0[26] = v2;
  v0[27] = v3;
  v0[28] = v1;
  sub_46B2C(v0[44], v4);
  if (v1)
  {
    sub_4DE28();
    return sub_4DDA0(*(uint64_t (**)(void))(v2 + 8));
  }

  else
  {
    sub_38360();
    return sub_383A4(v6, v7, v8);
  }

#error "4D618: call analysis failed (funcsize=34)"
uint64_t sub_4D660()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v5 = *v0;
  sub_38374(*(void *)(v5 + 376), &v5);
  sub_D304();
  sub_38360();
  return sub_382EC(v1, v2, v3);
}

uint64_t sub_4D6A8()
{
  swift_release(*(void *)(v0 + 232));
  sub_AA14();
  return sub_6698(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_4D6E4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_41BC(&qword_A2100);
  uint64_t v7 = sub_D31C(v6);
  *(_OWORD *)(v7 + 16) = xmmword_6FCA0;
  sub_4DD40();
  swift_bridgeObjectRetain(a3);
  id v8 = sub_48E0(a1, a2, a3);
  *(void *)(v7 + 3sub_423C(v0 + 2) = v8;
  specialized Array._endMutation()(v8, v9);
  return v7;
}

void *sub_4D77C()
{
  uint64_t v1 = (char *)v0
     + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin37SendAnnouncementIntentHandledStrategy_completionOutputManifest;
  uint64_t v2 = type metadata accessor for OutputGenerationManifest(0LL);
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8LL))(v1, v2);
  return v0;
}

uint64_t sub_4D7D8()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_4D7FC()
{
  return type metadata accessor for SendAnnouncementIntentHandledStrategy(0LL);
}

uint64_t type metadata accessor for SendAnnouncementIntentHandledStrategy(uint64_t a1)
{
  uint64_t result = qword_A29B0;
  if (!qword_A29B0) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SendAnnouncementIntentHandledStrategy);
  }
  return result;
}

uint64_t sub_4D83C(uint64_t a1)
{
  v4[0] = "(";
  v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  void v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  uint64_t result = type metadata accessor for OutputGenerationManifest(319LL);
  if (v3 <= 0x3F)
  {
    void v4[3] = *(void *)(result - 8) + 64LL;
    uint64_t result = swift_updateClassMetadata2(a1, 256LL, 4LL, v4, a1 + 80);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_4D8C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v8 = (void *)swift_task_alloc(async function pointer to HandleIntentFlowStrategyAsync.makePromptForDeviceUnlock(rchRecord:)[1]);
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for SendAnnouncementIntentHandledStrategy(0LL);
  *id v8 = v4;
  v8[1] = sub_4DD84;
  return HandleIntentFlowStrategyAsync.makePromptForDeviceUnlock(rchRecord:)(a1, a2, v9, a4);
}

uint64_t sub_4D944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v8 = (void *)swift_task_alloc(async function pointer to HandleIntentFlowStrategyAsync.makeHandoffForAuthenticationResponse(rchRecord:)[1]);
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for SendAnnouncementIntentHandledStrategy(0LL);
  *id v8 = v4;
  v8[1] = sub_4DD84;
  return HandleIntentFlowStrategyAsync.makeHandoffForAuthenticationResponse(rchRecord:)(a1, a2, v9, a4);
}

uint64_t sub_4D9C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v8 = (void *)swift_task_alloc(async function pointer to HandleIntentFlowStrategyAsync.makePreHandleIntentOutput(rchRecord:)[1]);
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for SendAnnouncementIntentHandledStrategy(0LL);
  *id v8 = v4;
  v8[1] = sub_4DD84;
  return HandleIntentFlowStrategyAsync.makePreHandleIntentOutput(rchRecord:)(a1, a2, v9, a4);
}

uint64_t sub_4DA44(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc(dword_A29C4);
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_4DD84;
  return sub_4C304(a1, a2);
}

uint64_t sub_4DAA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v8 = (void *)swift_task_alloc(async function pointer to HandleIntentFlowStrategyAsync.makeContinueInAppResponse(rchRecord:)[1]);
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for SendAnnouncementIntentHandledStrategy(0LL);
  *id v8 = v4;
  v8[1] = sub_4DD84;
  return HandleIntentFlowStrategyAsync.makeContinueInAppResponse(rchRecord:)(a1, a2, v9, a4);
}

uint64_t sub_4DB28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v8 = (void *)swift_task_alloc(async function pointer to HandleIntentFlowStrategyAsync.makeInProgressResponse(rchRecord:)[1]);
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for SendAnnouncementIntentHandledStrategy(0LL);
  *id v8 = v4;
  v8[1] = sub_4DD84;
  return HandleIntentFlowStrategyAsync.makeInProgressResponse(rchRecord:)(a1, a2, v9, a4);
}

uint64_t sub_4DBA8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc(dword_A29CC);
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_4DC0C;
  return sub_4C968(a1, a2);
}

uint64_t sub_4DC0C()
{
  uint64_t v3 = *v0;
  uint64_t v1 = *v0;
  sub_38374(*(void *)(v3 + 16), &v3);
  return sub_6698(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_4DC48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v8 = (void *)swift_task_alloc(async function pointer to IntentExtensionCommunicatingAsync.makeIntentExecutionBehavior(app:intent:)[1]);
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for SendAnnouncementIntentHandledStrategy(0LL);
  *id v8 = v4;
  v8[1] = sub_4DCC8;
  return IntentExtensionCommunicatingAsync.makeIntentExecutionBehavior(app:intent:)(a1, a2, v9, a4);
}

uint64_t sub_4DCC8(uint64_t a1)
{
  uint64_t v5 = *v1;
  uint64_t v3 = *v1;
  sub_38374(*(void *)(v5 + 16), &v5);
  return (*(uint64_t (**)(uint64_t))(v3 + 8))(a1);
}

uint64_t sub_4DD14()
{
  return sub_380D0(qword_A2A90, type metadata accessor for SendAnnouncementIntentHandledStrategy, (uint64_t)&unk_73A20);
}

unint64_t sub_4DD40()
{
  unint64_t result = qword_A21F0;
  if (!qword_A21F0)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___SAIntentGroupHandleIntent);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_A21F0);
  }

  return result;
}

uint64_t sub_4DD7C(uint64_t a1)
{
  return sub_4C868(a1, *(void *)(v1 + 16));
}

uint64_t sub_4DD88()
{
  return ((uint64_t (*)(void))dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:))();
}

uint64_t sub_4DDA0(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_4DDAC(__n128 *a1, uint64_t a2, __n128 a3)
{
  a1[1] = a3;
  a1[2].n128_u64[0] = v3;
  return specialized Array._endMutation()(a1, a2);
}

  ;
}

uint64_t sub_4DDD8(uint64_t a1)
{
  return swift_allocObject(a1, *(unsigned int *)(a1 + 48), *(unsigned __int16 *)(a1 + 52));
}

uint64_t sub_4DDE8()
{
  *(void *)(v0 + 360) = v1;
  return type metadata accessor for ResponseFactory(0LL);
}

void sub_4DDF8()
{
  *(void *)(v1 - sub_423C(v0 + 8) = *v0;
}

  ;
}

uint64_t sub_4DE20()
{
  return swift_task_alloc(v0);
}

uint64_t sub_4DE28()
{
  return swift_task_dealloc(*(void *)(v0 + 280));
}

uint64_t sub_4DE30(uint64_t result)
{
  *(void *)(v1 + 23sub_423C(v0 + 2) = result;
  return result;
}

  ;
}

void sub_4DE48( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  *(void *)(v10 + 36sub_423C(v0 + 8) = a10;
}

uint64_t sub_4DE54(void *a1)
{
  *a1 = v2;
  a1[1] = v1;
  return *(void *)(v2 + 240);
}

uint64_t sub_4DE60(uint64_t result)
{
  *(void *)(v1 + 376) = result;
  return result;
}

  ;
}

void sub_4DE80(void *a1, os_log_s *a2, uint64_t a3, const char *a4)
{
}

uint64_t sub_4DE90@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  *a1 = v2;
  a1[1] = a2;
  return *(void *)(v2 + 256);
}

uint64_t sub_4DEA4(uint64_t result)
{
  os_log_type_t v4 = (void *)*v2;
  *(void *)(v3 - sub_423C(v0 + 8) = *v2;
  void v4[2] = v2;
  void v4[3] = result;
  void v4[4] = v1;
  return result;
}

uint64_t sub_4DEBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a4;
  v6[7] = a5;
  v6[5] = a1;
  uint64_t v10 = sub_41BC(&qword_A06E8);
  v6[8] = sub_38350(*(void *)(v10 - 8));
  uint64_t v11 = sub_1BDD8();
  v6[9] = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  v6[10] = v12;
  v6[11] = sub_38350(v12);
  id v13 = (void *)swift_task_alloc(dword_A2B1C);
  v6[12] = v13;
  *id v13 = v6;
  v13[1] = sub_4DF58;
  return sub_4FC24((uint64_t)v13, a2, a3, a6);
}

uint64_t sub_4DF58(uint64_t a1, uint64_t a2)
{
  os_log_type_t v4 = *(void **)v3;
  uint64_t v5 = *(void *)(*(void *)v3 + 96LL);
  v4[13] = a1;
  v4[14] = a2;
  v4[15] = v2;
  swift_task_dealloc(v5);
  if (v2) {
    uint64_t v6 = sub_4E344;
  }
  else {
    uint64_t v6 = sub_4DFC0;
  }
  return sub_382EC((uint64_t)v6, 0LL, 0LL);
}

uint64_t sub_4DFC0()
{
  uint64_t v45 = v0 + 32;
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  sub_4870(*(void *)(v0 + 72), (uint64_t)qword_A3EB0);
  uint64_t v1 = sub_51008();
  uint64_t v2 = (os_log_s *)Logger.logObject.getter(v1);
  os_log_type_t v3 = static os_log_type_t.debug.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = *(void *)(v0 + 112);
  if (v4)
  {
    uint64_t v6 = *(void *)(v0 + 104);
    uint64_t v7 = (uint8_t *)sub_144F0(12LL);
    uint64_t v8 = sub_144F0(32LL);
    uint64_t v46 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_bridgeObjectRetain(v5);
    *(void *)(v0 + 3sub_423C(v0 + 2) = sub_68DC4(v6, v5, &v46);
    sub_51134(v45, v0 + 40);
    sub_2F46C(v5);
    sub_14550(&dword_0, v2, v3, "#SendAnnouncementIntentHelper extracted speech data URL is: %s", v7);
    sub_17528(v8, v9, (uint64_t)&type metadata for Any + 8);
    sub_48D4(v8);
    sub_48D4((uint64_t)v7);
  }

  else
  {
    sub_510F0();
  }

  uint64_t v10 = *(os_log_s **)(v0 + 88);
  unint64_t v11 = *(void *)(v0 + 56);
  uint64_t v12 = sub_51148();
  v13(v12);
  uint64_t v14 = sub_51008();
  uint64_t v15 = v10;
  Logger.logObject.getter(v14);
  os_log_type_t v16 = sub_A9E8();
  BOOL v17 = os_log_type_enabled(v10, v16);
  uint64_t v19 = *(void *)(v0 + 80);
  uint64_t v18 = *(void *)(v0 + 88);
  uint64_t v20 = *(void *)(v0 + 72);
  if (v17)
  {
    uint64_t v42 = *(void *)(v0 + 80);
    uint64_t v43 = *(void *)(v0 + 72);
    uint64_t v44 = *(void *)(v0 + 88);
    uint64_t v22 = *(void *)(v0 + 48);
    uint64_t v21 = *(void *)(v0 + 56);
    uint64_t v23 = (uint8_t *)sub_144F0(12LL);
    uint64_t v24 = sub_144F0(32LL);
    uint64_t v46 = v24;
    *(_DWORD *)uint64_t v23 = 136315138;
    if (v21)
    {
      unint64_t v25 = v11;
    }

    else
    {
      uint64_t v22 = 7104878LL;
      unint64_t v25 = 0xE300000000000000LL;
    }

    sub_2F684();
    *(void *)(v0 + 24) = sub_68DC4(v22, v25, &v46);
    sub_51134(v0 + 24, v45);
    swift_bridgeObjectRelease(v25);
    sub_50FC4();
    sub_14550(&dword_0, v15, v16, "#SendAnnouncementIntentHelper speech data transcription is: %s", v23);
    sub_17528(v24, v26, (uint64_t)&type metadata for Any + 8);
    sub_48D4(v24);
    sub_48D4((uint64_t)v23);

    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v44, v43);
  }

  else
  {
    sub_50FC4();

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  }

  uint64_t v28 = *(void *)(v0 + 104);
  uint64_t v27 = *(void *)(v0 + 112);
  id v29 = [*(id *)(v0 + 40) announcement];
  URL.init(string:)(v28, v27);
  sub_D304();
  if (v29)
  {
    sub_50EF0(v29);
    uint64_t v31 = v30;
    uint64_t v33 = v32;
  }

  else
  {
    uint64_t v31 = 0LL;
    uint64_t v33 = 0LL;
  }

  uint64_t v35 = *(void *)(v0 + 56);
  uint64_t v34 = *(void *)(v0 + 64);
  char v37 = *(void **)(v0 + 40);
  uint64_t v36 = *(void *)(v0 + 48);
  objc_allocWithZone(&OBJC_CLASS___INAnnouncement);
  sub_2F684();
  sub_50CB4(v34, v31, v33, v36, v35);
  id v39 = v38;
  NSString v40 = sub_50FA4();
  sub_51108(v37, "setValue:forKey:");

  sub_51044();
  sub_AA14();
  sub_3838C();
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 40));
}

uint64_t sub_4E344()
{
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v3 = sub_4870(*(void *)(v0 + 72), (uint64_t)qword_A3EB0);
  swift_errorRetain(v2);
  uint64_t v4 = swift_errorRetain(v2);
  unint64_t v5 = (os_log_s *)v3;
  Logger.logObject.getter(v4);
  os_log_type_t v6 = sub_1C040();
  BOOL v7 = sub_2F45C(v6);
  uint64_t v8 = *(void *)(v0 + 120);
  if (v7)
  {
    uint64_t v9 = (uint8_t *)sub_144F0(12LL);
    uint64_t v10 = (void *)sub_144F0(8LL);
    *(_DWORD *)uint64_t v9 = 138412290;
    swift_errorRetain(v8);
    uint64_t v11 = _swift_stdlib_bridgeErrorToNSError(v8);
    *(void *)(v0 + 16) = v11;
    sub_51154(v0 + 16, v0 + 24);
    *uint64_t v10 = v11;
    sub_3BDB0();
    sub_3BDB0();
    sub_14550(&dword_0, v5, v1, "#SendAnnouncementIntentHelper extractSpeechData error=%@. Returning base intent.", v9);
    uint64_t v12 = sub_41BC(&qword_A0F50);
    sub_17528((uint64_t)v10, v13, v12);
    sub_48D4((uint64_t)v10);
    sub_48D4((uint64_t)v9);

    sub_3BDB0();
  }

  else
  {
    sub_3BDB0();
    sub_3BDB0();
    sub_3BDB0();
  }

  sub_51044();
  sub_AA14();
  sub_3838C();
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 40));
}

void sub_4E4D0(uint64_t a1, void *a2, void *a3)
{
  uint64_t v9 = v8 - v7;
  uint64_t v10 = sub_51140();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  sub_9298();
  uint64_t v14 = v13 - v12;
  sub_4E684(a1, v9);
  if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v9, 1LL, v10) == 1)
  {
    sub_17288(v9, &qword_A2AD8);
  }

  else
  {
    uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v14, v9, v10);
    uint64_t v16 = TerminalElement.MatchingSpan.input.getter(v15);
    if (v17)
    {
      uint64_t v18 = v16;
      uint64_t v19 = v17;
      uint64_t started = TerminalElement.MatchingSpan.preITNPhrasesStartTime.getter();
      if ((v21 & 1) != 0) {
        uint64_t v22 = 0LL;
      }
      else {
        uint64_t v22 = started;
      }
      uint64_t v23 = TerminalElement.MatchingSpan.preITNPhrasesEndTime.getter();
      if ((v24 & 1) != 0) {
        uint64_t v25 = 60000LL;
      }
      else {
        uint64_t v25 = v23;
      }
      sub_4EBEC(a2, v22, v25, v18, v19, a3);
      sub_2F604();
      sub_510A0();
      goto LABEL_17;
    }

    sub_510A0();
  }

  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v26 = sub_1BDD8();
  uint64_t v27 = (os_log_s *)sub_4870(v26, (uint64_t)qword_A3EB0);
  Logger.logObject.getter(v27);
  os_log_type_t v28 = sub_A9E8();
  if (sub_17498(v28))
  {
    id v29 = (uint8_t *)sub_144F0(2LL);
    *(_WORD *)id v29 = 0;
    sub_1BE98( &dword_0,  v27,  (os_log_type_t)a3,  "smsMessage node was not present or no matchingSpan was set in SmsNLIntent. Skipping extractSpeechData.",  v29);
    sub_48D4((uint64_t)v29);
  }

  id v30 = a2;
LABEL_17:
  sub_49260();
}

uint64_t sub_4E684@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v75 = a2;
  sub_41BC(&qword_A2AF8);
  sub_11F5C();
  __chkstk_darwin(v5);
  sub_9298();
  uint64_t v8 = v7 - v6;
  sub_41BC(&qword_A2B00);
  sub_11F5C();
  __chkstk_darwin(v9);
  sub_9298();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = type metadata accessor for TerminalElement(0LL);
  uint64_t v78 = *(void *)(v13 - 8);
  sub_1736C();
  __chkstk_darwin(v14);
  sub_2F428();
  sub_41BC(&qword_A2B08);
  sub_11F5C();
  __chkstk_darwin(v15);
  sub_9298();
  uint64_t v18 = v17 - v16;
  type metadata accessor for SmsNLIntent(0LL);
  sub_11F5C();
  __chkstk_darwin(v19);
  sub_1BF74();
  uint64_t v20 = type metadata accessor for TerminalIntentNode(0LL);
  uint64_t v77 = *(void *)(v20 - 8);
  sub_1736C();
  __chkstk_darwin(v21);
  sub_6314();
  uint64_t v74 = v22;
  __chkstk_darwin(v23);
  uint64_t v76 = (uint64_t)&v69 - v24;
  uint64_t v25 = type metadata accessor for NLIntent(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16LL))(v3, a1, v25);
  if (qword_9F890 != -1) {
    swift_once(&qword_9F890, sub_5B164);
  }
  sub_A880(&qword_A0D20, type metadata accessor for SmsNLIntent, (uint64_t)&unk_74468);
  uint64_t v26 = sub_51148();
  IntentNodeTraversable.intentNode<A>(forOntologyNode:)(v26);
  sub_17180(v3, type metadata accessor for SmsNLIntent);
  if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v18, 1LL, v20) != 1)
  {
    uint64_t v27 = v20;
    uint64_t v29 = v76;
    uint64_t v28 = v77;
    sub_2458C(v76, v18, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v77 + 32));
    if (qword_9F820 != -1) {
      swift_once(&qword_9F820, sub_17ADC);
    }
    uint64_t v30 = sub_1BDD8();
    uint64_t v31 = (os_log_s *)sub_4870(v30, (uint64_t)qword_A3EB0);
    uint64_t v32 = v74;
    uint64_t v33 = sub_2458C(v74, v29, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 16));
    Logger.logObject.getter(v33);
    os_log_type_t v34 = sub_A9E8();
    if (os_log_type_enabled(v31, v34))
    {
      uint64_t v35 = v27;
      uint64_t v36 = (uint8_t *)sub_144F0(12LL);
      uint64_t v73 = (void (*)(void, void))sub_144F0(32LL);
      uint64_t v79 = v73;
      unint64_t v71 = v31;
      os_log_type_t v72 = v36;
      *(_DWORD *)uint64_t v36 = 136315138;
      char v37 = v36 + 12;
      char v70 = v36 + 4;
      uint64_t v38 = TerminalIntentNode.elements.getter();
      uint64_t v39 = Array.description.getter(v38, v13);
      unint64_t v41 = v40;
      sub_D304();
      uint64_t v42 = sub_68DC4(v39, v41, (uint64_t *)&v79);
      uint64_t v43 = sub_BD40(v42);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v43, v44, v70, v37);
      unint64_t v45 = v41;
      uint64_t v27 = v35;
      uint64_t v29 = v76;
      swift_bridgeObjectRelease(v45);
      uint64_t v46 = *(void (**)(void, void))(v77 + 8);
      sub_510E8(v74);
      uint64_t v31 = v71;
      unsigned int v47 = v72;
      sub_14550(&dword_0, v71, v34, "Successfully extracted smsMessage node: %s.", v72);
      char v48 = v73;
      sub_17528((uint64_t)v73, v49, (uint64_t)&type metadata for Any + 8);
      sub_48D4((uint64_t)v48);
      sub_48D4((uint64_t)v47);
    }

    else
    {
      uint64_t v50 = v32;
      uint64_t v46 = *(void (**)(void, void))(v28 + 8);
      sub_510E8(v50);
    }

    uint64_t v51 = TerminalIntentNode.elements.getter();
    uint64_t v52 = *(void *)(v51 + 16);
    if (!v52)
    {
      swift_bridgeObjectRelease(v51);
LABEL_21:
      sub_510E8(v29);
      goto LABEL_22;
    }

    uint64_t v73 = v46;
    uint64_t v74 = v27;
    uint64_t v53 = *(unsigned __int8 *)(v78 + 80);
    os_log_type_t v72 = (uint8_t *)v51;
    uint64_t v54 = v51 + ((v53 + 32) & ~v53);
    LODWORD(v7sub_423C(v0 + 7) = enum case for TerminalElement.OriginDetail.matchingSpan(_:);
    uint64_t v55 = *(void *)(v78 + 72);
    uint64_t v56 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v78 + 16);
    while (1)
    {
      uint64_t v57 = v56(v2, v54, v13);
      TerminalElement.origin.getter(v57);
      uint64_t v58 = type metadata accessor for TerminalElement.Origin(0LL);
      TerminalElement.Origin.originDetail.getter();
      sub_51030();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v58 - 8) + 8LL))(v8, v58);
      uint64_t v60 = type metadata accessor for TerminalElement.OriginDetail(0LL);
      uint64_t v61 = *(uint64_t (***)(uint64_t, uint64_t))(v60 - 8);
      int v62 = v61[11](v12, v60);
      if (v62 == (_DWORD)v77)
      {
        swift_bridgeObjectRelease(v72);
        v73(v76, v74);
        sub_51120(v61[12]);
        uint64_t v67 = sub_51140();
        uint64_t v68 = v75;
        sub_2458C(v75, v12, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 32LL));
        uint64_t v64 = v68;
        uint64_t v65 = 0LL;
        uint64_t v63 = v67;
        return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v64, v65, 1LL, v63);
      }

      sub_51120(v61[1]);
LABEL_18:
      v54 += v55;
      if (!--v52)
      {
        swift_bridgeObjectRelease(v72);
        uint64_t v29 = v76;
        goto LABEL_21;
      }
    }

    sub_51030();
    sub_17288(v8, &qword_A2AF8);
    uint64_t v59 = type metadata accessor for TerminalElement.OriginDetail(0LL);
    _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v12, 1LL, 1LL, v59);
LABEL_15:
    sub_17288(v12, &qword_A2B00);
    goto LABEL_18;
  }

  sub_17288(v18, &qword_A2B08);
LABEL_22:
  uint64_t v63 = sub_51140();
  uint64_t v64 = v75;
  uint64_t v65 = 1LL;
  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v64, v65, 1LL, v63);
}

void *sub_4EBEC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v15 = sub_1BDD8();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  sub_1BF74();
  uint64_t v18 = sub_4F064(v17, a2, a3, a6);
  if (v19)
  {
    unint64_t v20 = v19;
    uint64_t v59 = v7;
    uint64_t v60 = v18;
    uint64_t v56 = v6;
    if (qword_9F820 != -1) {
      swift_once(&qword_9F820, sub_17ADC);
    }
    uint64_t v58 = v15;
    uint64_t v21 = sub_4870(v15, (uint64_t)qword_A3EB0);
    uint64_t v22 = swift_bridgeObjectRetain_n(v20, 2LL);
    uint64_t v23 = (os_log_s *)Logger.logObject.getter(v22);
    os_log_type_t v24 = static os_log_type_t.debug.getter();
    uint64_t v57 = a1;
    uint64_t v61 = a4;
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)sub_144F0(12LL);
      uint64_t v26 = sub_144F0(32LL);
      uint64_t v62 = v26;
      *(_DWORD *)uint64_t v25 = 136315138;
      swift_bridgeObjectRetain(v20);
      uint64_t v27 = sub_68DC4(v60, v20, &v62);
      uint64_t v28 = sub_BD40(v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v28, v29, v25 + 4, v25 + 12);
      sub_2F46C(v20);
      sub_14550(&dword_0, v23, v24, "#SendAnnouncementIntentHelper extracted speech data URL is: %s", v25);
      sub_17528(v26, v30, (uint64_t)&type metadata for Any + 8);
      sub_48D4(v26);
      sub_48D4((uint64_t)v25);
    }

    else
    {

      sub_510F0();
    }

    sub_2458C((uint64_t)v59, v21, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 16));
    uint64_t v35 = sub_51008();
    Logger.logObject.getter(v35);
    os_log_type_t v36 = sub_A9E8();
    if (os_log_type_enabled(v59, v36))
    {
      char v37 = (uint8_t *)sub_144F0(12LL);
      uint64_t v38 = sub_144F0(32LL);
      uint64_t v62 = v38;
      *(_DWORD *)char v37 = 136315138;
      if (a5) {
        uint64_t v39 = v61;
      }
      else {
        uint64_t v39 = 7104878LL;
      }
      if (a5) {
        unint64_t v40 = a5;
      }
      else {
        unint64_t v40 = 0xE300000000000000LL;
      }
      sub_2F684();
      uint64_t v41 = sub_68DC4(v39, v40, &v62);
      uint64_t v42 = sub_BD40(v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v42, v43, v37 + 4, v37 + 12);
      sub_50FC4();
      sub_2F604();
      sub_14550(&dword_0, v59, v36, "#SendAnnouncementIntentHelper speech data transcription is: %s", v37);
      sub_17528(v38, v44, (uint64_t)&type metadata for Any + 8);
      sub_48D4(v38);
      sub_48D4((uint64_t)v37);

      (*(void (**)(os_log_s *, uint64_t))(v16 + 8))(v59, v58);
    }

    else
    {

      sub_50FC4();
      (*(void (**)(os_log_s *, uint64_t))(v16 + 8))(v59, v58);
    }

    a1 = v57;
    id v45 = [v57 announcement];
    URL.init(string:)(v60, v20);
    swift_bridgeObjectRelease(v20);
    if (v45)
    {
      sub_50EF0(v45);
      uint64_t v47 = v46;
      uint64_t v49 = v48;
    }

    else
    {
      uint64_t v47 = 0LL;
      uint64_t v49 = 0LL;
    }

    id v50 = objc_allocWithZone(&OBJC_CLASS___INAnnouncement);
    sub_2F684();
    sub_50CB4(v56, v47, v49, v61, a5);
    id v52 = v51;
    NSString v53 = sub_50FA4();
    [v57 setValue:v52 forKey:v53];

    id v54 = v57;
  }

  else
  {
    if (qword_9F820 != -1) {
      swift_once(&qword_9F820, sub_17ADC);
    }
    uint64_t v31 = (os_log_s *)sub_4870(v15, (uint64_t)qword_A3EB0);
    Logger.logObject.getter(v31);
    os_log_type_t v32 = sub_1C040();
    if (sub_17498(v32))
    {
      uint64_t v33 = (uint8_t *)sub_144F0(2LL);
      *(_WORD *)uint64_t v33 = 0;
      sub_1BE98( &dword_0,  v31,  (os_log_type_t)a5,  "#SendAnnouncementIntentHelper extracted speech data URL was nil.",  v33);
      sub_48D4((uint64_t)v33);
    }

    id v34 = a1;
  }

  return a1;
}

uint64_t sub_4F064(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7 = type metadata accessor for DispatchTimeInterval(0LL);
  uint64_t v99 = *(void *)(v7 - 8);
  uint64_t v100 = v7;
  sub_1736C();
  __chkstk_darwin(v8);
  sub_9298();
  unint64_t v98 = (void *)(v10 - v9);
  uint64_t v101 = type metadata accessor for DispatchTime(0LL);
  uint64_t v97 = *(void *)(v101 - 8);
  sub_1736C();
  __chkstk_darwin(v11);
  sub_6314();
  uint64_t v95 = v12;
  __chkstk_darwin(v13);
  id v96 = (char *)&v89 - v14;
  uint64_t v15 = (int *)sub_510B0();
  uint64_t v91 = *((void *)v15 - 1);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v93 = (uint64_t)&v89 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v92 = v17;
  __chkstk_darwin(v16);
  os_log_type_t v102 = (char *)&v89 - v18;
  dispatch_semaphore_t v94 = dispatch_semaphore_create(0LL);
  id v19 = [objc_allocWithZone(SASExtractSpeechData) init];
  id v20 = [sub_5107C() initWithUnsignedLongLong:a2];
  [v19 setStartTime:v20];

  id v21 = [sub_5107C() initWithUnsignedLongLong:a3];
  sub_51014(v19, "setEndTime:");

  uint64_t v22 = a4[3];
  uint64_t v23 = a4[4];
  sub_8504(a4, v22);
  dispatch thunk of AceServiceInvoker.currentStartRequestId()(v22, v23);
  if (v24)
  {
    NSString v25 = String._bridgeToObjectiveC()();
    sub_11F94();
  }

  else
  {
    NSString v25 = 0LL;
  }

  sub_51014(v19, "setSpeechRequestId:");

  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v26 = sub_1BDD8();
  uint64_t v27 = sub_4870(v26, (uint64_t)qword_A3EB0);
  sub_A798((uint64_t)a4, (uint64_t)v108);
  id v28 = v19;
  uint64_t v90 = (os_log_s *)v27;
  uint64_t v29 = (os_log_s *)Logger.logObject.getter(v28);
  os_log_type_t v30 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v103 = v15;
    uint64_t v31 = sub_144F0(32LL);
    os_log_type_t v32 = (void *)sub_144F0(16LL);
    uint64_t v89 = sub_144F0(32LL);
    uint64_t v107 = v89;
    *(_DWORD *)uint64_t v31 = 136315650;
    uint64_t v34 = v109;
    uint64_t v33 = v110;
    sub_8504(v108, v109);
    uint64_t started = dispatch thunk of AceServiceInvoker.currentStartRequestId()(v34, v33);
    uint64_t v106 = v35;
    uint64_t v36 = sub_41BC(&qword_A1D68);
    uint64_t v37 = String.init<A>(describing:)(&started, v36);
    unint64_t v39 = v38;
    uint64_t started = sub_68DC4(v37, v38, &v107);
    sub_5105C(started, v40, v41, v31 + 12);
    swift_bridgeObjectRelease(v39);
    sub_423C(v108);
    *(_WORD *)(v31 + sub_423C(v0 + 12) = 2112;
    id v42 = [v28 startTime];
    id v45 = v42;
    if (v42) {
      uint64_t started = (uint64_t)v42;
    }
    else {
      uint64_t started = 0LL;
    }
    sub_5105C((uint64_t)v42, v43, v44, v31 + 22);
    void *v32 = v45;

    *(_WORD *)(v31 + 2sub_423C(v0 + 2) = 2112;
    id v46 = [v28 endTime];
    id v48 = v46;
    if (v46) {
      uint64_t started = (uint64_t)v46;
    }
    else {
      uint64_t started = 0LL;
    }
    sub_51054((uint64_t)&started, (uint64_t)&v106, v47, v31 + 32);
    v32[1] = v48;

    _os_log_impl( &dword_0,  v29,  v30,  "#SendAnnouncementIntentHelper sending SASExtractSpeechData with speechRequestId:%s, startTime in ms: %@, endTime in ms: %@",  (uint8_t *)v31,  0x20u);
    uint64_t v49 = sub_41BC(&qword_A0F50);
    swift_arrayDestroy(v32, 2LL, v49);
    sub_48D4((uint64_t)v32);
    uint64_t v50 = v89;
    sub_17528(v89, v51, (uint64_t)&type metadata for Any + 8);
    sub_48D4(v50);
    sub_48D4(v31);

    uint64_t v15 = v103;
  }

  else
  {
    sub_423C(v108);
  }

  uint64_t v103 = (int *)v28;
  if (qword_9F828 != -1) {
    swift_once(&qword_9F828, sub_17B5C);
  }
  id v52 = (id)qword_A0D90;
  uint64_t v53 = (uint64_t)v102;
  uint64_t v54 = OSSignpostID.init(log:)();
  uint64_t v55 = static os_signpost_type_t.begin.getter(v54);
  os_signpost(_:dso:log:name:signpostID:)(v55, &dword_0, v52, "ExtractSpeechData", 17LL, 2LL, v53);
  uint64_t v56 = v53 + v15[5];
  *(void *)uint64_t v56 = "ExtractSpeechData";
  *(void *)(v56 + sub_423C(v0 + 8) = 17LL;
  *(_BYTE *)(v56 + 16) = 2;
  uint64_t v57 = swift_allocObject(&unk_97200, 32LL, 7LL);
  *(void *)(v57 + 16) = 0LL;
  *(void *)(v57 + 24) = 0LL;
  uint64_t v58 = a4[3];
  uint64_t v59 = a4[4];
  sub_8504(a4, v58);
  uint64_t v60 = v93;
  sub_3DA5C(v53, v93);
  uint64_t v61 = *(unsigned __int8 *)(v91 + 80);
  uint64_t v62 = (v61 + 24) & ~v61;
  unint64_t v63 = (v92 + v62 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v64 = swift_allocObject(&unk_97228, v63 + 8, v61 | 7);
  *(void *)(v64 + 16) = v57;
  uint64_t v65 = sub_3DB30(v60, v64 + v62);
  dispatch_semaphore_t v66 = v94;
  *(void *)(v64 + v6sub_423C(v0 + 3) = v94;
  uint64_t v67 = sub_510B8(v65, &qword_A2AE0, &OBJC_CLASS___SASExtractSpeechDataCompleted_ptr);
  swift_retain(v57);
  uint64_t v68 = v66;
  uint64_t v69 = v103;
  dispatch thunk of AceServiceInvoker.submit<A>(_:completion:)(v103, sub_50E58, v64, v67, v58, v59);
  uint64_t v70 = swift_release(v64);
  uint64_t v71 = v95;
  static DispatchTime.now()(v70);
  uint64_t v73 = v98;
  uint64_t v72 = v99;
  *unint64_t v98 = 10000LL;
  uint64_t v74 = v100;
  (*(void (**)(void *, void, uint64_t))(v72 + 104))( v73,  enum case for DispatchTimeInterval.milliseconds(_:),  v100);
  uint64_t v75 = v96;
  + infix(_:_:)(v71, v73);
  (*(void (**)(void *, uint64_t))(v72 + 8))(v73, v74);
  uint64_t v76 = *(void (**)(uint64_t, uint64_t))(v97 + 8);
  uint64_t v77 = v71;
  uint64_t v78 = v101;
  v76(v77, v101);
  uint64_t v79 = OS_dispatch_semaphore.wait(timeout:)(v75) & 1;
  v76((uint64_t)v75, v78);
  uint64_t v80 = static DispatchTimeoutResult.== infix(_:_:)(v79, 1LL);
  if ((v80 & 1) != 0)
  {
    uint64_t v81 = v90;
    Logger.logObject.getter(v80);
    os_log_type_t v82 = sub_1C040();
    if (sub_2F45C(v82))
    {
      uint64_t v83 = (uint8_t *)sub_144F0(2LL);
      *(_WORD *)uint64_t v83 = 0;
      sub_1BE98( &dword_0,  v81,  (os_log_type_t)v76,  "#SendAnnouncementIntentHelper ExtractSpeechData ace command timed out",  v83);
      sub_48D4((uint64_t)v83);
    }

    uint64_t v84 = type metadata accessor for RadarUtils();
    uint64_t inited = swift_initStackObject(v84, v104);
    uint64_t v86 = type metadata accessor for AutoBugCaptureManager(0LL);
    swift_allocObject(v86, *(unsigned int *)(v86 + 48), *(unsigned __int16 *)(v86 + 52));
    uint64_t v87 = AutoBugCaptureManager.init(domain:sessionDuration:)(0xD000000000000015LL, 0x80000000000762E0LL, 30.0);
    *(void *)(inited + 16) = v87;
    sub_30234(1LL, 2);
    swift_release(v87);

    sub_17180(v53, type metadata accessor for SignpostLog.Signpost);
  }

  else
  {
    sub_17180(v53, type metadata accessor for SignpostLog.Signpost);
  }

  swift_beginAccess(v57 + 16, v108, 0LL, 0LL);
  swift_bridgeObjectRetain(*(void *)(v57 + 24));
  swift_release(v57);
  return sub_51148();
}

Swift::Int sub_4F878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v45 = a3;
  uint64_t v7 = type metadata accessor for SubmitCommandError(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v42 - v12;
  uint64_t v14 = sub_41BC(&qword_A2AE8);
  __chkstk_darwin(v14);
  uint64_t v16 = (id *)((char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_50EA8(a1, (uint64_t)v16);
  if (swift_getEnumCaseMultiPayload(v16, v14) == 1)
  {
    (*(void (**)(char *, id *, uint64_t))(v8 + 32))(v13, v16, v7);
    if (qword_9F820 != -1) {
      swift_once(&qword_9F820, sub_17ADC);
    }
    uint64_t v17 = type metadata accessor for Logger(0LL);
    sub_4870(v17, (uint64_t)qword_A3EB0);
    uint64_t v18 = (*(uint64_t (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
    id v19 = (os_log_s *)Logger.logObject.getter(v18);
    os_log_type_t v20 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v19, v20))
    {
      id v21 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v22 = swift_slowAlloc(32LL, -1LL);
      uint64_t v44 = a4;
      uint64_t v23 = v22;
      v47[0] = v22;
      *(_DWORD *)id v21 = 136315138;
      uint64_t v43 = v21 + 4;
      sub_A880( &qword_A2AF0,  (uint64_t (*)(uint64_t))&type metadata accessor for SubmitCommandError,  (uint64_t)&protocol conformance descriptor for SubmitCommandError);
      uint64_t v25 = dispatch thunk of CustomStringConvertible.description.getter(v7, v24);
      unint64_t v27 = v26;
      uint64_t v46 = sub_68DC4(v25, v26, v47);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, v47, v43, v21 + 12);
      swift_bridgeObjectRelease(v27);
      id v28 = *(void (**)(char *, uint64_t))(v8 + 8);
      v28(v11, v7);
      _os_log_impl( &dword_0,  v19,  v20,  "#SendAnnouncementIntentHelper An error occurred while extracting speech data url: %s.",  v21,  0xCu);
      swift_arrayDestroy(v23, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v23, -1LL, -1LL);
      swift_slowDealloc(v21, -1LL, -1LL);

      uint64_t v29 = ((uint64_t (*)(char *, uint64_t))v28)(v13, v7);
    }

    else
    {

      uint64_t v36 = *(void (**)(char *, uint64_t))(v8 + 8);
      v36(v11, v7);
      uint64_t v29 = ((uint64_t (*)(char *, uint64_t))v36)(v13, v7);
    }
  }

  else
  {
    id v30 = *v16;
    id v31 = [*v16 speechDataUrl];
    if (v31)
    {
      os_log_type_t v32 = v31;
      uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
      uint64_t v35 = v34;
    }

    else
    {

      uint64_t v33 = 0LL;
      uint64_t v35 = 0LL;
    }

    swift_beginAccess(a2 + 16, v47, 1LL, 0LL);
    uint64_t v37 = *(void *)(a2 + 24);
    *(void *)(a2 + 16) = v33;
    *(void *)(a2 + 24) = v35;
    uint64_t v29 = swift_bridgeObjectRelease(v37);
  }

  uint64_t v38 = static os_signpost_type_t.end.getter(v29);
  if (qword_9F828 != -1) {
    swift_once(&qword_9F828, sub_17B5C);
  }
  uint64_t v39 = qword_A0D90;
  uint64_t v40 = type metadata accessor for SignpostLog.Signpost(0LL);
  os_signpost(_:dso:log:name:signpostID:)( v38,  &dword_0,  v39,  *(void *)(v45 + *(int *)(v40 + 20)),  *(void *)(v45 + *(int *)(v40 + 20) + 8),  *(unsigned __int8 *)(v45 + *(int *)(v40 + 20) + 16),  v45);
  return OS_dispatch_semaphore.signal()();
}

uint64_t sub_4FC24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[16] = a3;
  v4[17] = a4;
  v4[15] = a2;
  uint64_t v5 = type metadata accessor for HomeCommunicationError(0LL);
  v4[18] = v5;
  v4[19] = sub_38350(*(void *)(v5 - 8));
  uint64_t v6 = sub_510B0();
  v4[20] = v6;
  v4[21] = sub_38350(*(void *)(v6 - 8));
  return sub_382EC((uint64_t)sub_4FCB0, 0LL, 0LL);
}

uint64_t sub_4FCB0()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v3 = *(void **)(v0 + 136);
  id v4 = [objc_allocWithZone(SASExtractSpeechData) init];
  *(void *)(v0 + 176) = v4;
  id v5 = [sub_5107C() initWithUnsignedLongLong:v1];
  sub_51014(v4, "setStartTime:");

  id v6 = [sub_5107C() initWithUnsignedLongLong:v2];
  sub_51014(v4, "setEndTime:");

  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  sub_8504(v3, v7);
  dispatch thunk of AceServiceInvokerAsync.currentStartRequestId()(v7, v8);
  if (v9)
  {
    uint64_t v10 = v9;
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v10);
  }

  else
  {
    NSString v11 = 0LL;
  }

  sub_51014(v4, "setSpeechRequestId:");

  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v12 = *(void *)(v0 + 136);
  uint64_t v13 = sub_1BDD8();
  uint64_t v14 = (os_log_s *)sub_4870(v13, (uint64_t)qword_A3EB0);
  *(void *)(v0 + 184) = v14;
  sub_A798(v12, v0 + 16);
  id v15 = v4;
  uint64_t v16 = v14;
  Logger.logObject.getter(v15);
  os_log_type_t v17 = sub_A9E8();
  if (os_log_type_enabled(v14, v17))
  {
    os_log_t log = v14;
    uint64_t v51 = v3;
    id v52 = (void *)(v0 + 112);
    uint64_t v18 = sub_144F0(32LL);
    id v48 = (void *)sub_144F0(16LL);
    uint64_t v49 = sub_144F0(32LL);
    uint64_t v53 = v49;
    *(_DWORD *)uint64_t v18 = 136315650;
    uint64_t v20 = *(void *)(v0 + 40);
    uint64_t v19 = *(void *)(v0 + 48);
    sub_8504((void *)(v0 + 16), v20);
    *(void *)(v0 + 56) = dispatch thunk of AceServiceInvokerAsync.currentStartRequestId()(v20, v19);
    *(void *)(v0 + 64) = v21;
    uint64_t v22 = sub_41BC(&qword_A1D68);
    uint64_t v23 = String.init<A>(describing:)(v0 + 56, v22);
    *(void *)(v0 + 80) = sub_68DC4(v23, v24, &v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 80, v0 + 88, v18 + 4, v18 + 12);
    sub_D304();
    sub_423C((void *)(v0 + 16));
    *(_WORD *)(v18 + sub_423C(v0 + 12) = 2112;
    id v26 = [v15 startTime];
    uint64_t v27 = v18 + 22;
    if (v26)
    {
      *id v52 = v26;
      sub_51054((uint64_t)v52, v0 + 120, v25, v27);
      id v28 = (void *)(v0 + 96);
    }

    else
    {
      *(void *)(v0 + 8sub_423C(v0 + 8) = 0LL;
      id v28 = (void *)(v0 + 96);
      sub_51054(v0 + 88, v0 + 96, v25, v27);
    }

    void *v48 = v26;

    *(_WORD *)(v18 + 2sub_423C(v0 + 2) = 2112;
    id v30 = [v15 endTime];
    uint64_t v3 = v51;
    if (v30)
    {
      uint64_t v31 = v0 + 104;
      *(void *)(v0 + 104) = v30;
      uint64_t v32 = v0 + 112;
    }

    else
    {
      void *v28 = 0LL;
      uint64_t v31 = (uint64_t)v28;
      uint64_t v32 = v0 + 104;
    }

    sub_51054(v31, v32, v29, v18 + 32);
    v48[1] = v30;

    uint64_t v16 = log;
    _os_log_impl( &dword_0,  log,  v17,  "#SendAnnouncementIntentHelper sending SASExtractSpeechData async with speechRequestId: %s, startTime in ms: %@, endTime in ms: %@",  (uint8_t *)v18,  0x20u);
    uint64_t v33 = sub_41BC(&qword_A0F50);
    swift_arrayDestroy(v48, 2LL, v33);
    sub_48D4((uint64_t)v48);
    sub_17528(v49, v34, (uint64_t)&type metadata for Any + 8);
    sub_48D4(v49);
    sub_48D4(v18);
  }

  else
  {
    sub_423C((void *)(v0 + 16));
  }

  if (qword_9F828 != -1) {
    swift_once(&qword_9F828, sub_17B5C);
  }
  uint64_t v36 = *(void *)(v0 + 160);
  uint64_t v35 = *(void *)(v0 + 168);
  uint64_t v37 = *(void **)(v0 + 136);
  id v38 = (id)qword_A0D90;
  uint64_t v39 = OSSignpostID.init(log:)();
  uint64_t v40 = static os_signpost_type_t.begin.getter(v39);
  sub_5112C(v40, (uint64_t)&dword_0, (uint64_t)v38, (uint64_t)"ExtractSpeechData", 17LL, 2LL);
  uint64_t v41 = *(int *)(v36 + 20);
  *(_DWORD *)(v0 + 216) = v41;
  uint64_t v42 = v35 + v41;
  *(void *)uint64_t v42 = "ExtractSpeechData";
  *(void *)(v42 + sub_423C(v0 + 8) = 17LL;
  *(_BYTE *)(v42 + 16) = 2;
  uint64_t v44 = v3[3];
  uint64_t v43 = v3[4];
  sub_8504(v37, v44);
  uint64_t v45 = (void *)swift_task_alloc(async function pointer to AceServiceInvokerAsync.submit<A>(_:)[1]);
  *(void *)(v0 + 19sub_423C(v0 + 2) = v45;
  uint64_t v46 = sub_510B8((uint64_t)v45, (unint64_t *)&qword_A1F80, &OBJC_CLASS___SABaseCommand_ptr);
  *uint64_t v45 = v0;
  v45[1] = sub_501A8;
  return AceServiceInvokerAsync.submit<A>(_:)(v15, v44, v46, v43);
}

uint64_t sub_501A8(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *(void *)(*v2 + 192);
  *(void *)(v3 + 200) = a1;
  *(void *)(v3 + 20sub_423C(v0 + 8) = v1;
  swift_task_dealloc(v4);
  if (v1) {
    id v5 = sub_50634;
  }
  else {
    id v5 = sub_50250;
  }
  return sub_382EC((uint64_t)v5, 0LL, 0LL);
}

uint64_t sub_50250()
{
  uint64_t v3 = *(void *)(v1 + 200);
  uint64_t v4 = objc_opt_self(&OBJC_CLASS___SASExtractSpeechDataCompleted);
  id v5 = (void *)swift_dynamicCastObjCClass(v3, v4);
  if (!v5)
  {
    uint64_t v18 = *(os_log_s **)(v1 + 184);

    Logger.logObject.getter(v19);
    os_log_type_t v20 = sub_1C040();
    if (sub_AA1C(v20))
    {
      uint64_t v21 = (uint8_t *)sub_144F0(2LL);
      *(_WORD *)uint64_t v21 = 0;
      sub_1BE98( &dword_0,  v18,  v0,  "#SendAnnouncementIntentHelper extractSpeechData return type is not of type SASExtractSpeechDataCompleted",  v21);
      sub_48D4((uint64_t)v21);
    }

    uint64_t v22 = sub_510D0(0xD000000000000068LL);
    swift_storeEnumTagMultiPayload(v22, v23, 1LL);
    sub_A880( &qword_A0848,  type metadata accessor for HomeCommunicationError,  (uint64_t)&protocol conformance descriptor for HomeCommunicationError);
    uint64_t v25 = sub_5101C(v24);
    sub_5106C(v25, v26);
    sub_51114();
    uint64_t v28 = swift_willThrow(v27);
    goto LABEL_11;
  }

  sub_50F54(v5, (SEL *)&selRef_speechDataUrl);
  uint64_t v8 = *(os_log_s **)(v1 + 184);
  if (!v7)
  {
    Logger.logObject.getter(v6);
    os_log_type_t v29 = sub_1C040();
    if (sub_AA1C(v29))
    {
      id v30 = (uint8_t *)sub_144F0(2LL);
      *(_WORD *)id v30 = 0;
      sub_48D4((uint64_t)v30);
    }

    uint64_t v31 = *(void **)(v1 + 200);

    uint64_t v32 = sub_510D0(0xD000000000000020LL);
    swift_storeEnumTagMultiPayload(v32, v33, 4LL);
    sub_A880( &qword_A0848,  type metadata accessor for HomeCommunicationError,  (uint64_t)&protocol conformance descriptor for HomeCommunicationError);
    uint64_t v35 = sub_5101C(v34);
    sub_5106C(v35, v36);
    sub_51114();
    swift_willThrow(v37);

LABEL_11:
    uint64_t v38 = *(void *)(v1 + 168);
    uint64_t v39 = *(void **)(v1 + 176);
    uint64_t v40 = *(void *)(v1 + 152);
    uint64_t v41 = v38 + *(int *)(v1 + 216);
    uint64_t v42 = static os_signpost_type_t.end.getter(v28);
    sub_5112C(v42, (uint64_t)&dword_0, qword_A0D90, *(void *)v41, *(void *)(v41 + 8), *(unsigned __int8 *)(v41 + 16));

    sub_17180(v38, type metadata accessor for SignpostLog.Signpost);
    sub_AA14();
    swift_task_dealloc(v40);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }

  uint64_t v9 = v6;
  unint64_t v10 = v7;
  uint64_t v11 = swift_bridgeObjectRetain_n(v7, 2LL);
  Logger.logObject.getter(v11);
  os_log_type_t v12 = sub_A9E8();
  BOOL v13 = sub_32444(v12);
  uint64_t v14 = *(void **)(v1 + 200);
  if (v13)
  {
    id v15 = (uint8_t *)sub_144F0(12LL);
    uint64_t v16 = sub_144F0(32LL);
    uint64_t v50 = v16;
    *(_DWORD *)id v15 = 136315138;
    sub_2F684();
    *(void *)(v1 + 7sub_423C(v0 + 2) = sub_68DC4(v9, v10, &v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 72, v1 + 80, v15 + 4, v15 + 12);
    sub_2F46C(v10);
    sub_14550(&dword_0, v8, v2, "#SendAnnouncementIntentHelper speechDataUrl unwrapped to %s", v15);
    sub_17528(v16, v17, (uint64_t)&type metadata for Any + 8);
    sub_48D4(v16);
    sub_48D4((uint64_t)v15);
  }

  else
  {
    sub_50FC4();
  }

  uint64_t v45 = *(void *)(v1 + 168);
  uint64_t v44 = *(void **)(v1 + 176);
  uint64_t v46 = *(void *)(v1 + 152);
  uint64_t v47 = v45 + *(int *)(v1 + 216);
  uint64_t v49 = static os_signpost_type_t.end.getter(v48);
  sub_5112C(v49, (uint64_t)&dword_0, qword_A0D90, *(void *)v47, *(void *)(v47 + 8), *(unsigned __int8 *)(v47 + 16));

  sub_17180(v45, type metadata accessor for SignpostLog.Signpost);
  sub_AA14();
  swift_task_dealloc(v46);
  return (*(uint64_t (**)(uint64_t, unint64_t))(v1 + 8))(v9, v10);
}

uint64_t sub_50634(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 168);
  uint64_t v3 = *(void **)(v1 + 176);
  uint64_t v4 = *(void *)(v1 + 152);
  uint64_t v5 = v2 + *(int *)(v1 + 216);
  uint64_t v6 = static os_signpost_type_t.end.getter(a1);
  os_signpost(_:dso:log:name:signpostID:)( v6,  &dword_0,  qword_A0D90,  *(void *)v5,  *(void *)(v5 + 8),  *(unsigned __int8 *)(v5 + 16),  v2);

  sub_17180(v2, type metadata accessor for SignpostLog.Signpost);
  sub_3838C();
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

void sub_506F0( int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22)
{
  uint64_t v76 = v23;
  uint64_t v77 = v26;
  if (v24)
  {
    uint64_t v27 = v25;
    uint64_t v28 = v24;
    id v63 = v24;
    sub_50EF0(v63);
    uint64_t v30 = v29;
    uint64_t v32 = v31;
    sub_50F54(v27, (SEL *)&selRef_identifier);
    uint64_t v35 = v34;
    if (v32)
    {
      if (v34)
      {
        if (v30 == v33 && v32 == v34)
        {
          swift_bridgeObjectRelease(v32);
          sub_D304();
        }

        else
        {
          char v37 = _stringCompareWithSmolCheck(_:_:expecting:)(v30, v32, v33, v34, 0LL);
          swift_bridgeObjectRelease(v32);
          sub_D304();
          if ((v37 & 1) == 0)
          {

            return;
          }
        }

        goto LABEL_15;
      }

      uint64_t v38 = v32;
    }

    else
    {
      if (!v34)
      {
LABEL_15:
        if (qword_9F820 != -1) {
          swift_once(&qword_9F820, sub_17ADC);
        }
        uint64_t v39 = sub_1BDD8();
        uint64_t v40 = (os_log_s *)sub_4870(v39, (uint64_t)qword_A3EB0);
        id v41 = v63;
        Logger.logObject.getter(v41);
        os_log_type_t v42 = sub_A9E8();
        if (sub_32444(v42))
        {
          id v63 = v27;
          uint64_t v43 = (uint8_t *)sub_144F0(12LL);
          uint64_t v44 = (void *)sub_144F0(8LL);
          *(_DWORD *)uint64_t v43 = 138412290;
          id v65 = v41;
          id v45 = v41;
          sub_51154((uint64_t)&v65, (uint64_t)&v66);
          void *v44 = v28;

          uint64_t v27 = v63;
          sub_14550(&dword_0, v40, v22, "previousIntent : %@.", v43);
          uint64_t v46 = sub_41BC(&qword_A0F50);
          sub_17528((uint64_t)v44, v47, v46);
          sub_48D4((uint64_t)v44);
          sub_48D4((uint64_t)v43);
        }

        else
        {
        }

        uint64_t v48 = sub_25890(v41);
        if (v48)
        {
          sub_5095C( v48,  (uint64_t)v27,  v49,  v50,  v51,  v52,  v53,  v54,  (uint64_t)v63,  (uint64_t)v65,  v66,  v67,  v68,  v69,  v70,  v71,  v72,  v73,  v74,  v75,  v76,  v77);
          sub_D304();
        }

        id v55 = objc_msgSend(v41, "announcement", v63);
        if (v55)
        {
          uint64_t v62 = v55;
          sub_50B64( (uint64_t)v55,  (uint64_t)v27,  v56,  v57,  v58,  v59,  v60,  v61,  v64,  v65,  v66,  v67,  v68,  v69,  v70,  v71,  v72,  v73,  v74,  v75,  v76,  v77);
        }

        goto LABEL_25;
      }

      uint64_t v38 = v35;
    }

    swift_bridgeObjectRelease(v38);
    return;
  }

LABEL_25:
  sub_50FD0();
}

    BOOL v13 = (v18 - 1) & v18;
  }

  uint64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  uint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    uint64_t v9 = v19;
    goto LABEL_25;
  }

  while (1)
  {
    uint64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1LL)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_28;
    }
    uint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }

void sub_5095C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22)
{
  a21 = v23;
  a22 = v24;
  uint64_t v26 = v25;
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v27 = sub_1BDD8();
  uint64_t v28 = (os_log_s *)sub_4870(v27, (uint64_t)qword_A3EB0);
  uint64_t v29 = sub_51008();
  Logger.logObject.getter(v29);
  os_log_type_t v30 = sub_A9E8();
  if (sub_2F45C(v30))
  {
    uint64_t v31 = (uint8_t *)sub_144F0(12LL);
    uint64_t v32 = sub_144F0(32LL);
    a10 = v32;
    *(_DWORD *)uint64_t v31 = 136315138;
    uint64_t v33 = sub_510B8(v32, (unint64_t *)&qword_A0F08, &OBJC_CLASS___INHomeFilter_ptr);
    uint64_t v34 = sub_2F684();
    uint64_t v35 = Array.description.getter(v34, v33);
    unint64_t v37 = v36;
    sub_11F94();
    a9 = sub_68DC4(v35, v37, &a10);
    sub_510FC((uint64_t)&a9, (uint64_t)&a10);
    sub_50FC4();
    swift_bridgeObjectRelease(v37);
    sub_14550(&dword_0, v28, v22, "Restoring the recipient slot from the previous INSendAnnouncementIntent: %s.", v31);
    sub_17528(v32, v38, (uint64_t)&type metadata for Any + 8);
    sub_48D4(v32);
    sub_48D4((uint64_t)v31);
  }

  else
  {

    sub_50FC4();
  }

  uint64_t v39 = sub_25890(v26);
  if (v39)
  {
    a10 = v39;
    uint64_t v40 = sub_2F684();
    uint64_t v41 = sub_251F4(v40);
    sub_510B8(v41, (unint64_t *)&qword_A0F08, &OBJC_CLASS___INHomeFilter_ptr);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    sub_D304();
    NSString v43 = sub_50FEC();
    sub_510C0((uint64_t)v43, "setValue:forKey:");
  }

  else
  {
    sub_7B50(0LL, (unint64_t *)&qword_A0F08, &OBJC_CLASS___INHomeFilter_ptr);
    Class v44 = Array._bridgeToObjectiveC()().super.isa;
    NSString v45 = sub_50FEC();
    sub_51108(v26, "setValue:forKey:");
  }

  sub_50FD0();
}

void sub_50B64( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, id a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22)
{
  a21 = v23;
  a22 = v24;
  uint64_t v26 = v25;
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v27 = sub_1BDD8();
  uint64_t v28 = (os_log_s *)sub_4870(v27, (uint64_t)qword_A3EB0);
  id v29 = v26;
  os_log_type_t v30 = v28;
  Logger.logObject.getter(v29);
  os_log_type_t v31 = sub_A9E8();
  if (sub_2F45C(v31))
  {
    uint64_t v32 = (uint8_t *)sub_144F0(12LL);
    uint64_t v33 = (void *)sub_144F0(8LL);
    *(_DWORD *)uint64_t v32 = 138412290;
    a10 = v29;
    id v34 = v29;
    sub_510FC((uint64_t)&a10, (uint64_t)&a11);
    void *v33 = v29;

    sub_14550( &dword_0,  v30,  v22,  "Restoring the announcement slot from the previous INSendAnnouncementIntent: %@.",  v32);
    uint64_t v35 = sub_41BC(&qword_A0F50);
    sub_17528((uint64_t)v33, v36, v35);
    sub_48D4((uint64_t)v33);
    sub_48D4((uint64_t)v32);
  }

  else
  {
  }

  NSString v37 = sub_50FA4();
  sub_510C0((uint64_t)v37, "setValue:forKey:");

  sub_50FD0();
}

void sub_50CB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v10 = type metadata accessor for URL(0LL);
  os_log_type_t v12 = 0LL;
  if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(a1, 1LL, v10) != 1)
  {
    URL._bridgeToObjectiveC()(v11);
    os_log_type_t v12 = v13;
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8LL))(a1, v10);
  }

  if (!a3)
  {
    NSString v14 = 0LL;
    if (a5) {
      goto LABEL_5;
    }
LABEL_7:
    NSString v15 = 0LL;
    goto LABEL_8;
  }

  NSString v14 = String._bridgeToObjectiveC()();
  sub_2F604();
  if (!a5) {
    goto LABEL_7;
  }
LABEL_5:
  NSString v15 = String._bridgeToObjectiveC()();
  sub_11F94();
LABEL_8:
  [v6 initWithSpeechDataURL:v12 identifier:v14 speechDataTranscription:v15];

  sub_49260();
}

uint64_t sub_50DA4()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_50DC8()
{
  uint64_t v1 = *(void *)(sub_510B0() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = (*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  swift_release(*(void *)(v0 + 16));
  uint64_t v6 = type metadata accessor for OSSignpostID(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8LL))(v0 + v3, v6);

  return swift_deallocObject(v0, v5 + 8, v4);
}

Swift::Int sub_50E58(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_510B0() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_4F878( a1,  *(void *)(v1 + 16),  v1 + v4,  *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8LL)));
}

uint64_t sub_50EA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_41BC(&qword_A2AE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

void sub_50EF0(void *a1)
{
  id v2 = [a1 identifier];

  if (v2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  }

  sub_9304();
}

void sub_50F54(void *a1, SEL *a2)
{
  id v2 = [a1 *a2];
  if (v2)
  {
    uint64_t v3 = v2;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  }

  sub_51148();
  sub_9304();
}

NSString sub_50FA4()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_50FC4()
{
  return swift_bridgeObjectRelease_n(v0, 2LL);
}

  ;
}

NSString sub_50FEC()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_51008()
{
  return swift_bridgeObjectRetain_n(v0, 2LL);
}

id sub_51014(id a1, SEL a2)
{
  return objc_msgSend(a1, a2, v2);
}

uint64_t sub_5101C(uint64_t a1)
{
  return swift_allocError(v1, a1, 0LL, 0LL);
}

uint64_t sub_51030()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 104) + 8LL))(v1, v0);
}

id sub_51044()
{
  return *(id *)(v0 + 40);
}

uint64_t sub_51054(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(a1, a2, v4, a4);
}

uint64_t sub_5105C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(v6 - 160, v4, v5, a4);
}

void sub_5106C(uint64_t a1, uint64_t a2)
{
}

id sub_5107C()
{
  return objc_allocWithZone(*(Class *)(v0 + 3336));
}

  ;
}

uint64_t sub_510A0()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_510B0()
{
  return type metadata accessor for SignpostLog.Signpost(0LL);
}

uint64_t sub_510B8(uint64_t a1, unint64_t *a2, void *a3)
{
  return sub_7B50(0LL, a2, a3);
}

id sub_510C0(uint64_t a1, const char *a2)
{
  return objc_msgSend(v2, a2, v4, v3);
}

void *sub_510D0@<X0>(uint64_t a1@<X8>)
{
  *uint64_t v2 = a1;
  v2[1] = (v1 - 32) | 0x8000000000000000LL;
  return v2;
}

uint64_t sub_510E8(uint64_t a1)
{
  return v2(a1, v1);
}

uint64_t sub_510F0()
{
  return swift_bridgeObjectRelease_n(v0, 2LL);
}

uint64_t sub_510FC(uint64_t a1, uint64_t a2)
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(a1, a2, v3, v2);
}

id sub_51108(id a1, SEL a2)
{
  return objc_msgSend(a1, a2, v2, v3);
}

void sub_51114()
{
}

uint64_t sub_51120@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v2, v1);
}

uint64_t sub_5112C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return os_signpost(_:dso:log:name:signpostID:)(a1, a2, a3, a4, a5, a6, v6);
}

uint64_t sub_51134(uint64_t a1, uint64_t a2)
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(a1, a2, v2, v3);
}

uint64_t sub_51140()
{
  return type metadata accessor for TerminalElement.MatchingSpan(0LL);
}

uint64_t sub_51148()
{
  return v0;
}

uint64_t sub_51154(uint64_t a1, uint64_t a2)
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(a1, a2, v3, v2);
}

unint64_t sub_51160(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_93A08, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 0xF) {
    return 15LL;
  }
  else {
    return v3;
  }
}

uint64_t sub_511A8(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_511E4 + 4 * byte_73AC0[a1]))( 0xD000000000000019LL,  0x8000000000075D50LL);
}

uint64_t sub_511E4()
{
  return 0x6669636570736E75LL;
}

uint64_t sub_51204()
{
  return 0x7964616572LL;
}

uint64_t sub_51218()
{
  return 0x6572676F72506E69LL;
}

uint64_t sub_51234()
{
  return 0x73736563637573LL;
}

uint64_t sub_5124C()
{
  return 0x6572756C696166LL;
}

uint64_t sub_51264()
{
  return v0 - 10;
}

void sub_51300(unsigned __int8 *a1, unsigned __int8 *a2)
{
}

void sub_5130C()
{
}

uint64_t sub_51314(uint64_t a1)
{
  return sub_1E378(a1, *v1);
}

void sub_5131C(uint64_t a1)
{
}

unint64_t sub_51324@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result = sub_51160(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_51350@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_511A8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_51378(void *a1@<X8>)
{
  *a1 = &off_93B90;
}

uint64_t sub_51388()
{
  uint64_t v0 = qword_A2B20;
  swift_bridgeObjectRetain(off_A2B28);
  return v0;
}

uint64_t sub_513BC(uint64_t a1)
{
  unint64_t v2 = sub_51878();
  return static AppEnumRepresentation.lnValueType.getter(a1, v2);
}

uint64_t sub_513E4(uint64_t a1)
{
  unint64_t v2 = sub_51878();
  return AppEnumRepresentation.lnValue.getter(a1, v2);
}

uint64_t sub_5140C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_51734();
  return static IntentValueTypeIdentifiable.canConvert(_:)(a1, a2, v4);
}

uint64_t sub_51444(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_51878();
  return static AppEnumRepresentation.from(_:context:)(a1, a2, a3, v6);
}

uint64_t sub_51494(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_51734();
  return static IntentValueTypeIdentifiable.canConvertFrom(_:)(a1, a2, v4);
}

uint64_t sub_514CC(unsigned __int8 a1)
{
  v1._uint64_t countAndFlagsBits = sub_511A8(a1);
  object = v1._object;
  String.append(_:)(v1);
  swift_bridgeObjectRelease(object);
  return 46LL;
}

uint64_t sub_51514()
{
  return sub_514CC(*v0);
}

uint64_t getEnumTagSinglePayload for SendAnnouncementIntentResponseCode(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }

  if (a2 >= 0xF2)
  {
    if (a2 + 14 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 14) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }

    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }

    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }

    int v5 = (*a1 | (v4 << 8)) - 15;
    return (v5 + 1);
  }

uint64_t storeEnumTagSinglePayload for SendAnnouncementIntentResponseCode( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 14 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 14) >> 8 < 0xFF) {
    LODWORD(sub_46B2C(*(void *)(v1 + 288), v4) = 1;
  }
  else {
    LODWORD(sub_46B2C(*(void *)(v1 + 288), v4) = v3;
  }
  if (a3 >= 0xF2) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xF1) {
    return ((uint64_t (*)(void))((char *)&loc_515F0 + 4 * byte_73AD4[v4]))();
  }
  *a1 = a2 + 14;
  return ((uint64_t (*)(void))((char *)sub_51624 + 4 * byte_73ACF[v4]))();
}

uint64_t sub_51624(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_5162C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x51634LL);
  }
  return result;
}

uint64_t sub_51640(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x51648LL);
  }
  *(_BYTE *)uint64_t result = a2 + 14;
  return result;
}

uint64_t sub_5164C(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_51654(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SendAnnouncementIntentResponseCode()
{
  return &type metadata for SendAnnouncementIntentResponseCode;
}

unint64_t sub_51674()
{
  unint64_t result = qword_A2B30;
  if (!qword_A2B30)
  {
    unint64_t result = swift_getWitnessTable(&unk_73BA4, &type metadata for SendAnnouncementIntentResponseCode);
    atomic_store(result, (unint64_t *)&qword_A2B30);
  }

  return result;
}

unint64_t sub_516B4()
{
  unint64_t result = qword_A2B38;
  if (!qword_A2B38)
  {
    unint64_t result = swift_getWitnessTable(&unk_73B34, &type metadata for SendAnnouncementIntentResponseCode);
    atomic_store(result, (unint64_t *)&qword_A2B38);
  }

  return result;
}

unint64_t sub_516F4()
{
  unint64_t result = qword_A2B40;
  if (!qword_A2B40)
  {
    unint64_t result = swift_getWitnessTable(&unk_73BF0, &type metadata for SendAnnouncementIntentResponseCode);
    atomic_store(result, (unint64_t *)&qword_A2B40);
  }

  return result;
}

unint64_t sub_51734()
{
  unint64_t result = qword_A2B48;
  if (!qword_A2B48)
  {
    unint64_t result = swift_getWitnessTable(&unk_73BC0, &type metadata for SendAnnouncementIntentResponseCode);
    atomic_store(result, (unint64_t *)&qword_A2B48);
  }

  return result;
}

unint64_t sub_51774()
{
  unint64_t result = qword_A2B50;
  if (!qword_A2B50)
  {
    unint64_t result = swift_getWitnessTable(&unk_73C68, &type metadata for SendAnnouncementIntentResponseCode);
    atomic_store(result, (unint64_t *)&qword_A2B50);
  }

  return result;
}

unint64_t sub_517B4()
{
  unint64_t result = qword_A2B58;
  if (!qword_A2B58)
  {
    unint64_t result = swift_getWitnessTable(&unk_73CA0, &type metadata for SendAnnouncementIntentResponseCode);
    atomic_store(result, (unint64_t *)&qword_A2B58);
  }

  return result;
}

unint64_t sub_517F4()
{
  unint64_t result = qword_A2B60;
  if (!qword_A2B60)
  {
    uint64_t v1 = sub_8564(&qword_A2B68);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_A2B60);
  }

  return result;
}

unint64_t sub_5183C()
{
  unint64_t result = qword_A2B70;
  if (!qword_A2B70)
  {
    unint64_t result = swift_getWitnessTable(&unk_73D18, &type metadata for SendAnnouncementIntentResponseCode);
    atomic_store(result, (unint64_t *)&qword_A2B70);
  }

  return result;
}

unint64_t sub_51878()
{
  unint64_t result = qword_A2B78;
  if (!qword_A2B78)
  {
    unint64_t result = swift_getWitnessTable(&unk_73C18, &type metadata for SendAnnouncementIntentResponseCode);
    atomic_store(result, (unint64_t *)&qword_A2B78);
  }

  return result;
}

void *SendAnnouncementNeedsValueModel.responseViewId.unsafeMutableAddressor()
{
  return &static SendAnnouncementNeedsValueModel.responseViewId;
}

unint64_t static SendAnnouncementNeedsValueModel.responseViewId.getter()
{
  return 0xD000000000000026LL;
}

uint64_t sub_518DC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x614E746567726174LL && a2 == 0xEA0000000000656DLL)
  {
    swift_bridgeObjectRelease(a2);
    char v5 = 0;
  }

  else
  {
    char v4 = _stringCompareWithSmolCheck(_:_:expecting:)(0x614E746567726174LL, 0xEA0000000000656DLL, a1, a2, 0LL);
    swift_bridgeObjectRelease(a2);
    char v5 = v4 ^ 1;
  }

  return v5 & 1;
}

Swift::Int sub_51968()
{
  return Hasher._finalize()();
}

uint64_t sub_519A8()
{
  return 0x614E746567726174LL;
}

uint64_t sub_519CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = sub_518DC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_519F4(uint64_t a1)
{
  unint64_t v2 = sub_51B34();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_51A1C(uint64_t a1)
{
  unint64_t v2 = sub_51B34();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t SendAnnouncementNeedsValueModel.encode(to:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_41BC(&qword_A2B80);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  sub_8504(a1, v10);
  unint64_t v12 = sub_51B34();
  dispatch thunk of Encoder.container<A>(keyedBy:)( &type metadata for SendAnnouncementNeedsValueModel.CodingKeys,  &type metadata for SendAnnouncementNeedsValueModel.CodingKeys,  v12,  v10,  v11);
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)(a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_51B34()
{
  unint64_t result = qword_A2B88;
  if (!qword_A2B88)
  {
    unint64_t result = swift_getWitnessTable(&unk_73EB4, &type metadata for SendAnnouncementNeedsValueModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_A2B88);
  }

  return result;
}

void *SendAnnouncementNeedsValueModel.init(from:)(void *a1)
{
  uint64_t v3 = sub_41BC(&qword_A2B90);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = a1[3];
  uint64_t v8 = a1[4];
  uint64_t v9 = sub_8504(a1, v7);
  unint64_t v10 = sub_51B34();
  uint64_t v11 = dispatch thunk of Decoder.container<A>(keyedBy:)( &type metadata for SendAnnouncementNeedsValueModel.CodingKeys,  &type metadata for SendAnnouncementNeedsValueModel.CodingKeys,  v10,  v7,  v8);
  if (!v1)
  {
    uint64_t v9 = (void *)KeyedDecodingContainer.decodeIfPresent(_:forKey:)(v11, v3);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }

  sub_423C(a1);
  return v9;
}

void *sub_51C84@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  unint64_t result = SendAnnouncementNeedsValueModel.init(from:)(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }

  return result;
}

uint64_t sub_51CAC(void *a1)
{
  return SendAnnouncementNeedsValueModel.encode(to:)(a1, *v1, v1[1]);
}

void *initializeBufferWithCopyOfBuffer for SendAnnouncementNeedsValueModel(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t destroy for SendAnnouncementNeedsValueModel(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(void *)(a1 + 8));
}

void *assignWithCopy for SendAnnouncementNeedsValueModel(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = a2[1];
  uint64_t v4 = a1[1];
  a1[1] = v3;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

void *assignWithTake for SendAnnouncementNeedsValueModel(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  uint64_t v4 = a1[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for SendAnnouncementNeedsValueModel(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }

    else
    {
      unint64_t v3 = *(void *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(vsub_423C(v0 + 3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }

  else
  {
    int v2 = -1;
  }

  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SendAnnouncementNeedsValueModel( uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + sub_423C(v0 + 8) = 0LL;
    if (a3 >= 0x7FFFFFFF) {
      *(_BYTE *)(result + 16) = 1;
    }
  }

  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(_BYTE *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + sub_423C(v0 + 8) = a2;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for SendAnnouncementNeedsValueModel()
{
  return &type metadata for SendAnnouncementNeedsValueModel;
}

uint64_t storeEnumTagSinglePayload for SendAnnouncementNeedsValueModel.CodingKeys(uint64_t a1, int a2, int a3)
{
  else {
    int v3 = 2;
  }
  else {
    LODWORD(sub_46B2C(*(void *)(v1 + 288), v4) = v3;
  }
  if (a3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2) {
    return ((uint64_t (*)(void))((char *)sub_51E5C + 4 * byte_73D40[v4]))();
  }
  else {
    return ((uint64_t (*)(void))((char *)sub_51E7C + 4 * byte_73D45[v4]))();
  }
}

_BYTE *sub_51E5C(_BYTE *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

_BYTE *sub_51E7C(_BYTE *result)
{
  *unint64_t result = 0;
  return result;
}

_DWORD *sub_51E84(_DWORD *result, int a2)
{
  *unint64_t result = a2;
  return result;
}

_WORD *sub_51E8C(_WORD *result, __int16 a2)
{
  *unint64_t result = a2;
  return result;
}

_WORD *sub_51E94(_WORD *result)
{
  *unint64_t result = 0;
  return result;
}

_DWORD *sub_51E9C(_DWORD *result)
{
  *unint64_t result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SendAnnouncementNeedsValueModel.CodingKeys()
{
  return &type metadata for SendAnnouncementNeedsValueModel.CodingKeys;
}

unint64_t sub_51EBC()
{
  unint64_t result = qword_A2B98;
  if (!qword_A2B98)
  {
    unint64_t result = swift_getWitnessTable(&unk_73E8C, &type metadata for SendAnnouncementNeedsValueModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_A2B98);
  }

  return result;
}

unint64_t sub_51EFC()
{
  unint64_t result = qword_A2BA0;
  if (!qword_A2BA0)
  {
    unint64_t result = swift_getWitnessTable(&unk_73DFC, &type metadata for SendAnnouncementNeedsValueModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_A2BA0);
  }

  return result;
}

unint64_t sub_51F3C()
{
  unint64_t result = qword_A2BA8;
  if (!qword_A2BA8)
  {
    unint64_t result = swift_getWitnessTable(&unk_73E24, &type metadata for SendAnnouncementNeedsValueModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_A2BA8);
  }

  return result;
}

uint64_t sub_51F7C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(char *), uint64_t a6)
{
  uint64_t v22 = a6;
  uint64_t v11 = sub_41BC(&qword_A0EF8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  swift_bridgeObjectRetain(a3);
  v23._uint64_t countAndFlagsBits = a2;
  v23._object = a3;
  if (sub_1EDD4(v23))
  {
    uint64_t v18 = sub_41BC(&qword_A2630);
    uint64_t v19 = (uint64_t (*)(uint64_t, uint64_t, void *, uint64_t, void (*)(void), uint64_t))method lookup function for DefaultNLContextProvider(v18, &method descriptor for DefaultNLContextProvider.makeNeedsValueContextFor(intent:parameter:resolutionResult:_:));
    return v19(a1, a2, a3, a4, (void (*)(void))a5, v22);
  }

  else
  {
    sub_52110();
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v13, v17, v14);
    _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0((uint64_t)v13, 0LL, 1LL, v14);
    a5(v13);
    sub_27DEC((uint64_t)v13, &qword_A0EF8);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }

uint64_t sub_52110()
{
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v0 = type metadata accessor for Logger(0LL);
  uint64_t v1 = sub_4870(v0, (uint64_t)qword_A3EB0);
  int v2 = (os_log_s *)Logger.logObject.getter(v1);
  os_log_type_t v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "#HomeCommunicationNLContextProvider generateNLContextForAnnouncement", v4, 2u);
    swift_slowDealloc(v4, -1LL, -1LL);
  }

  NLContextUpdate.init()();
  sub_187F0(0);
  NLContextUpdate.dictationPromptTargetDomain.setter();
  uint64_t v5 = sub_41BC(&qword_A0E30);
  uint64_t v6 = swift_allocObject(v5, 48LL, 7LL);
  *(_OWORD *)(v6 + 16) = xmmword_6FA70;
  Swift::String v7 = String.uppercased()();
  Swift::String v23 = v7;
  v22[0] = 32LL;
  v22[1] = 0xE100000000000000LL;
  v21[0] = 95LL;
  v21[1] = 0xE100000000000000LL;
  unint64_t v8 = sub_CD6C();
  uint64_t v9 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( v22,  v21,  0LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String,  &type metadata for String,  v8,  v8,  v8);
  uint64_t v11 = v10;
  swift_bridgeObjectRelease(v7._object);
  sub_18938(v9, v11, 3u);
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  swift_bridgeObjectRelease(v11);
  *(void *)(v6 + 3sub_423C(v0 + 2) = v13;
  *(void *)(v6 + 40) = v15;
  NLContextUpdate.dictationPromptAbortValues.setter(v6);
  uint64_t v16 = swift_allocObject(v5, 48LL, 7LL);
  *(_OWORD *)(v16 + 16) = xmmword_6FA70;
  sub_187F0(4u);
  *(void *)(v16 + 3sub_423C(v0 + 2) = v17;
  *(void *)(v16 + 40) = v18;
  NLContextUpdate.dictationPromptTargetNodes.setter(v16);
  uint64_t v19 = sub_52330();
  return NLContextUpdate.nluSystemDialogActs.setter(v19);
}

uint64_t sub_52330()
{
  uint64_t v0 = type metadata accessor for Siri_Nlu_External_SystemDialogAct(0LL);
  uint64_t v57 = *(void *)(v0 - 8);
  uint64_t v58 = v0;
  __chkstk_darwin(v0);
  uint64_t v56 = (char *)&v51 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v2 = type metadata accessor for Siri_Nlu_External_UsoGraph(0LL);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for Siri_Nlu_External_SystemPrompted(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v51 - v10;
  uint64_t v12 = sub_41BC(&qword_A0F30);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for UsoTaskBuilder_send_common_Announcement(0LL);
  swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
  uint64_t v16 = UsoTaskBuilder_send_common_Announcement.init()();
  uint64_t v17 = type metadata accessor for UsoEntityBuilder_common_Announcement(0LL);
  swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
  uint64_t v18 = UsoEntityBuilder_common_Announcement.init()();
  dispatch thunk of UsoEntityBuilder_common_Announcement.setContent(value:)(0LL, 0xE000000000000000LL);
  dispatch thunk of Uso_VerbTemplateBuilder_Target.setTarget(value:)(v18);
  uint64_t v19 = sub_41BC(&qword_A2100);
  uint64_t v20 = swift_allocObject(v19, 40LL, 7LL);
  *(_OWORD *)(v20 + 16) = xmmword_6FCA0;
  *(void *)(v20 + 3sub_423C(v0 + 2) = v16;
  v63[0] = v20;
  specialized Array._endMutation()(v20, v21);
  uint64_t v22 = v63[0];
  uint64_t v23 = type metadata accessor for UsoBuilderOptions(0LL);
  _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0((uint64_t)v14, 1LL, 1LL, v23);
  uint64_t v59 = v16;
  swift_retain(v16);
  uint64_t v24 = static UsoGraphBuilder.buildGraphWithOptions(taskBuilders:options:)(v22, v14);
  swift_bridgeObjectRelease(v22);
  sub_27DEC((uint64_t)v14, &qword_A0F30);
  Siri_Nlu_External_SystemPrompted.init()(v25);
  uint64_t v60 = v24;
  static UsoGraphProtoWriter.toSwiftProtobuf(graph:vocabManager:)(v24, 0LL);
  uint64_t v54 = v9;
  uint64_t v55 = v6;
  Siri_Nlu_External_SystemPrompted.target.setter(v4);
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v26 = type metadata accessor for Logger(0LL);
  uint64_t v27 = sub_4870(v26, (uint64_t)qword_A3EB0);
  uint64_t v28 = (os_log_s *)Logger.logObject.getter(v27);
  os_log_type_t v29 = static os_log_type_t.debug.getter();
  uint64_t v30 = v5;
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v31 = v5;
    uint64_t v32 = swift_slowAlloc(12LL, -1LL);
    uint64_t v53 = v18;
    uint64_t v33 = (uint8_t *)v32;
    uint64_t v34 = swift_slowAlloc(32LL, -1LL);
    v63[0] = v34;
    *(_DWORD *)uint64_t v33 = 136315138;
    uint64_t v52 = v33 + 4;
    swift_beginAccess(v11, v62, 0LL, 0LL);
    uint64_t v35 = (uint64_t)v54;
    uint64_t v36 = v55;
    (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v54, v11, v31);
    uint64_t v37 = sub_546FC( v35,  (uint64_t (*)(uint64_t))&type metadata accessor for Siri_Nlu_External_SystemPrompted,  &qword_A2CF0,  (uint64_t)&protocol conformance descriptor for Siri_Nlu_External_SystemPrompted);
    unint64_t v39 = v38;
    uint64_t v61 = sub_68DC4(v37, v38, v63);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, v62, v52, v33 + 12);
    unint64_t v40 = v39;
    uint64_t v30 = v31;
    swift_bridgeObjectRelease(v40);
    _os_log_impl( &dword_0,  v28,  v29,  "#HomeCommunicationNLContextProvider Returning NLUSystemPrompted for prompt for send Announcement: %s",  v33,  0xCu);
    swift_arrayDestroy(v34, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v34, -1LL, -1LL);
    uint64_t v41 = v33;
    uint64_t v18 = v53;
    swift_slowDealloc(v41, -1LL, -1LL);

    uint64_t v44 = v57;
    uint64_t v43 = v58;
  }

  else
  {

    uint64_t v44 = v57;
    uint64_t v43 = v58;
    uint64_t v35 = (uint64_t)v54;
    uint64_t v36 = v55;
  }

  NSString v45 = v56;
  Siri_Nlu_External_SystemDialogAct.init()(v42);
  swift_beginAccess(v11, v63, 0LL, 0LL);
  (*(void (**)(uint64_t, char *, uint64_t))(v36 + 16))(v35, v11, v30);
  Siri_Nlu_External_SystemDialogAct.prompted.setter(v35);
  uint64_t v46 = sub_41BC(&qword_A0F40);
  uint64_t v47 = *(unsigned __int8 *)(v44 + 80);
  uint64_t v48 = (v47 + 32) & ~v47;
  uint64_t v49 = swift_allocObject(v46, v48 + *(void *)(v44 + 72), v47 | 7);
  *(_OWORD *)(v49 + 16) = xmmword_6FA70;
  (*(void (**)(uint64_t, char *, uint64_t))(v44 + 32))(v49 + v48, v45, v43);
  swift_release(v59);
  swift_release(v18);
  swift_release(v60);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v30);
  return v49;
}

uint64_t sub_529A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v42 = type metadata accessor for Input(0LL);
  uint64_t v5 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for Parse(0LL);
  uint64_t v9 = *(uint64_t (***)(uint64_t, uint64_t))(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (uint64_t *)((char *)&v39 - v14);
  Input.parse.getter(v13);
  uint64_t v16 = v9[11]((uint64_t)v15, v8);
  if ((_DWORD)v16 == enum case for Parse.directInvocation(_:))
  {
    static ActionForInput.handle()(v16);
    return sub_54810((uint64_t)v15, v9[1]);
  }

  uint64_t v41 = a2;
  if ((_DWORD)v16 == enum case for Parse.NLv4IntentOnly(_:))
  {
    sub_54810((uint64_t)v15, v9[12]);
    swift_unknownObjectRelease(*v15);
  }

  else
  {
    if ((_DWORD)v16 != enum case for Parse.uso(_:))
    {
      if (qword_9F820 != -1) {
        swift_once(&qword_9F820, sub_17ADC);
      }
      uint64_t v31 = sub_1BDD8();
      uint64_t v32 = (void *)sub_1BE18(v31, (uint64_t)qword_A3EB0);
      os_log_type_t v33 = static os_log_type_t.error.getter();
      if (sub_17498(v33))
      {
        uint64_t v34 = (_WORD *)sub_A968();
        *uint64_t v34 = 0;
        sub_17440(&dword_0, v35, v36, "#SendAnnouncementNeedsValueStrategy Received unsupported parse ");
        sub_48D4((uint64_t)v34);
      }

      static ActionForInput.ignore()(v37);
      return sub_54810((uint64_t)v15, v9[1]);
    }

    sub_54810((uint64_t)v15, v9[1]);
  }

  uint64_t v18 = sub_8504((void *)(v2 + 16), *(void *)(v2 + 40))[1];
  uint64_t v19 = swift_retain(v18);
  Input.parse.getter(v19);
  sub_26EF4((uint64_t)v12, (uint64_t)&v43);
  swift_release(v18);
  sub_54810((uint64_t)v12, v9[1]);
  if (v44)
  {
    sub_A780(&v43, (uint64_t)v45);
    uint64_t v20 = v46;
    uint64_t v21 = v47;
    sub_8504(v45, v46);
    uint64_t v22 = (char *)&loc_52B9C
        + 4 * byte_73F10[(*(unsigned __int8 (**)(uint64_t, uint64_t))(v21 + 160))(v20, v21)];
    __asm { BR              X10 }
  }

  sub_27DEC((uint64_t)&v43, &qword_A02E0);
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v23 = sub_1BDD8();
  sub_4870(v23, (uint64_t)qword_A3EB0);
  uint64_t v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v42);
  uint64_t v25 = (os_log_s *)Logger.logObject.getter(v24);
  os_log_type_t v26 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v28 = swift_slowAlloc(32LL, -1LL);
    v45[0] = v28;
    *(_DWORD *)uint64_t v27 = 136315138;
    unint64_t v40 = v27 + 4;
    Input.parse.getter(v28);
    uint64_t v29 = sub_5A5B4(v12);
    *(void *)&__int128 v43 = sub_68DC4(v29, v30, v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, (char *)&v43 + 8, v40, v27 + 12);
    sub_D304();
    sub_54844();
    _os_log_impl(&dword_0, v25, v26, "#SendAnnouncementNeedsValueStrategy couldn't transform input: %s", v27, 0xCu);
    swift_arrayDestroy(v28, 1LL, (char *)&type metadata for Any + 8);
    sub_48D4(v28);
    sub_48D4((uint64_t)v27);
  }

  else
  {
    sub_54844();
  }

  return static ActionForInput.ignore()(v38);
}

uint64_t sub_52E74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[19] = a3;
  v4[20] = v3;
  v4[17] = a1;
  v4[18] = a2;
  uint64_t v5 = type metadata accessor for HomeCommunicationError(0LL);
  v4[21] = v5;
  v4[22] = sub_38350(*(void *)(v5 - 8));
  uint64_t v6 = type metadata accessor for Parse(0LL);
  v4[23] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v4[24] = v7;
  v4[25] = sub_38350(v7);
  sub_38360();
  return sub_382EC(v8, v9, v10);
}

uint64_t sub_52ED8()
{
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v1 = sub_1BDD8();
  uint64_t v2 = (os_log_s *)sub_1BE18(v1, (uint64_t)qword_A3EB0);
  os_log_type_t v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)sub_A968();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "#SendAnnouncementNeedsValueStrategy parseResponseValue", v4, 2u);
    sub_48D4((uint64_t)v4);
  }

  uint64_t v6 = *(void *)(v0 + 192);
  uint64_t v5 = *(void *)(v0 + 200);
  uint64_t v7 = *(void *)(v0 + 160);

  uint64_t v8 = sub_8504((void *)(v7 + 16), *(void *)(v7 + 40))[1];
  uint64_t v9 = swift_retain(v8);
  Input.parse.getter(v9);
  sub_26EF4(v5, v0 + 56);
  swift_release(v8);
  sub_54810(v5, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  if (*(void *)(v0 + 80))
  {
    sub_A780((__int128 *)(v0 + 56), v0 + 16);
    uint64_t v10 = sub_41BC(&qword_A25D0);
    uint64_t v11 = ParameterResolutionRecord.intent.getter(v10);
    *(void *)(v0 + 20sub_423C(v0 + 8) = v11;
    uint64_t v12 = *(void *)(v0 + 40);
    uint64_t v13 = *(void *)(v0 + 48);
    sub_8504((void *)(v0 + 16), v12);
    uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 120))(v12, v13);
    if ((v15 & 1) == 0)
    {
      uint64_t v16 = v14;
      uint64_t v17 = *(void *)(v0 + 40);
      uint64_t v18 = *(void *)(v0 + 48);
      sub_8504((void *)(v0 + 16), v17);
      uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 128))(v17, v18);
      if ((v20 & 1) == 0)
      {
        uint64_t v21 = v19;
        uint64_t v22 = ParameterResolutionRecord.intent.getter(v10);
        *(void *)(v0 + 216) = v22;
        uint64_t v23 = *(void *)(v0 + 40);
        uint64_t v24 = *(void *)(v0 + 48);
        sub_8504((void *)(v0 + 16), v23);
        uint64_t v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 152))(v23, v24);
        uint64_t v27 = v26;
        *(void *)(v0 + 224) = v26;
        static AceService.currentAsync.getter(v25);
        uint64_t v28 = (void *)swift_task_alloc(dword_A2B14);
        *(void *)(v0 + 23sub_423C(v0 + 2) = v28;
        void *v28 = v0;
        v28[1] = sub_5325C;
        return sub_4DEBC(v22, v16, v21, v25, v27, v0 + 96);
      }
    }

    sub_7B50(0LL, &qword_A2650, &OBJC_CLASS___INSendAnnouncementIntent_ptr);
    sub_5482C();
    IntentPromptAnswer.init(answeredValue:updatedIntent:)(v30, v11, v31);
    uint64_t v32 = sub_41BC(&qword_A2640);
    sub_54818(v32);
    sub_423C((void *)(v0 + 16));
    sub_AA14();
    sub_3838C();
    os_log_type_t v33 = *(uint64_t (**)(void))(v0 + 8);
  }

  else
  {
    uint64_t v34 = *(char **)(v0 + 200);
    uint64_t v36 = *(void *)(v0 + 168);
    uint64_t v35 = *(uint64_t **)(v0 + 176);
    sub_27DEC(v0 + 56, &qword_A02E0);
    Input.parse.getter(v37);
    *uint64_t v35 = sub_5A5B4(v34);
    v35[1] = v38;
    v35[2] = 0x746E65746E494C4ELL;
    v35[3] = 0xE800000000000000LL;
    swift_storeEnumTagMultiPayload(v35, v36, 6LL);
    sub_17144( &qword_A0848,  255LL,  type metadata accessor for HomeCommunicationError,  (uint64_t)&protocol conformance descriptor for HomeCommunicationError);
    swift_allocError(v36, v39, 0LL, 0LL);
    sub_108C0(v40);
    uint64_t v41 = sub_3BB8C((uint64_t)v35);
    swift_willThrow(v41);
    swift_task_dealloc(*(void *)(v0 + 200));
    sub_AA14();
    os_log_type_t v33 = *(uint64_t (**)(void))(v0 + 8);
  }

  return v33();
}

uint64_t sub_5325C(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v6 = *(void *)(*(void *)v2 + 224LL);
  uint64_t v5 = *(void *)(*(void *)v2 + 232LL);
  *(void *)(*(void *)v2 + 24_swift_stdlib_reportUnimplementedInitializer( "HomeCommunicationFlowDelegatePlugin.SendAnnouncementAceViewProvider",  67LL,  "init()",  6LL, 0LL) = v1;
  swift_task_dealloc(v5);
  uint64_t v7 = (void *)v4[27];
  if (!v1) {
    v4[31] = a1;
  }
  sub_423C(v4 + 12);
  swift_bridgeObjectRelease(v6);

  sub_38360();
  return swift_task_switch(v8, v9, v10);
}

uint64_t sub_53304()
{
  uint64_t v2 = *(void *)(v1 + 248);
  sub_7B50(0LL, &qword_A2650, &OBJC_CLASS___INSendAnnouncementIntent_ptr);
  sub_5482C();
  IntentPromptAnswer.init(answeredValue:updatedIntent:)(v3, v2, v4);
  uint64_t v5 = sub_41BC(&qword_A2640);
  sub_54818(v5);
  sub_423C(v0);
  sub_383D4();
  sub_46ACC();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_53398()
{
  return sub_38328(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_533DC(uint64_t a1, uint64_t a2)
{
  v3[191] = v2;
  v3[185] = a2;
  v3[179] = a1;
  uint64_t v4 = type metadata accessor for DialogPhase(0LL);
  v3[197] = sub_38350(*(void *)(v4 - 8));
  uint64_t v5 = type metadata accessor for OutputGenerationManifest(0LL);
  v3[198] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[199] = v6;
  v3[200] = sub_38350(v6);
  uint64_t v7 = sub_41BC(&qword_A25D0);
  v3[201] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v3[202] = v8;
  uint64_t v9 = *(void *)(v8 + 64);
  v3[203] = v9;
  v3[204] = swift_task_alloc((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_41BC(&qword_A0EF8);
  v3[205] = v10;
  unint64_t v11 = (*(void *)(*(void *)(v10 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v3[206] = swift_task_alloc(v11);
  v3[207] = swift_task_alloc(v11);
  sub_38360();
  return sub_382EC(v12, v13, v14);
}

uint64_t sub_534A8()
{
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v1 = sub_1BDD8();
  uint64_t v2 = (os_log_s *)sub_1BE18(v1, (uint64_t)qword_A3EB0);
  os_log_type_t v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)sub_A968();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl( &dword_0,  v2,  v3,  "#SendAnnouncementNeedsValueStrategy makeParameterPromptDialogAsync with response framework adoption",  v4,  2u);
    sub_48D4((uint64_t)v4);
  }

  uint64_t v19 = v0[207];
  uint64_t v5 = v0[205];
  uint64_t v6 = v0[204];
  uint64_t v7 = v0[203];
  uint64_t v8 = v0[202];
  uint64_t v9 = v0[201];
  uint64_t v10 = v0[197];
  uint64_t v11 = v0[191];
  uint64_t v12 = v0[185];

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v6, v12, v9);
  uint64_t v13 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v14 = (v13 + 24) & ~v13;
  uint64_t v15 = swift_allocObject(&unk_975F8, v14 + v7, v13 | 7);
  v0[208] = v15;
  *(void *)(v15 + 16) = v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v15 + v14, v6, v9);
  swift_retain(v11);
  swift_retain(v15);
  swift_asyncLet_begin(v0 + 2, 0LL, v5, &unk_A2CD8, v15, v19);
  swift_retain_n(v11, 2LL);
  uint64_t v16 = sub_7B50(255LL, &qword_A1F60, &OBJC_CLASS___DialogExecutionResult_ptr);
  uint64_t v17 = swift_asyncLet_begin(v0 + 82, 0LL, v16, &unk_A2CE8, v11, v0 + 167);
  static DialogPhase.clarification.getter(v17);
  OutputGenerationManifest.init(dialogPhase:_:)(v10, sub_545C8, v11);
  return swift_asyncLet_get(v0 + 2, v0[207], sub_536B8, v0 + 168);
}

uint64_t sub_536B8()
{
  return sub_382E0((uint64_t)sub_536C4);
}

uint64_t sub_536C4()
{
  uint64_t v1 = v0[206];
  sub_545D0(v0[207], v1);
  OutputGenerationManifest.nlContextUpdate.setter(v1);
  uint64_t v2 = type metadata accessor for ResponseFactory(0LL);
  v0[209] = v2;
  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  v0[173] = ResponseFactory.init()();
  uint64_t v3 = sub_41BC(&qword_A2100);
  uint64_t v4 = swift_allocObject(v3, 40LL, 7LL);
  v0[210] = v4;
  *(_OWORD *)(v4 + 16) = xmmword_6FCA0;
  return swift_asyncLet_get_throwing(v0 + 82, v0 + 167, sub_53780, v0 + 162);
}

uint64_t sub_53780()
{
  *(void *)(v1 + 168sub_423C(v0 + 8) = v0;
  if (v0) {
    return sub_382E0((uint64_t)sub_539A8);
  }
  else {
    return sub_382E0((uint64_t)sub_537A0);
  }
}

uint64_t sub_537A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2[210];
  uint64_t v4 = (void *)v2[167];
  *(void *)(v3 + 3sub_423C(v0 + 2) = v4;
  uint64_t v9 = v3;
  specialized Array._endMutation()(a1, a2);
  v2[212] = v9;
  uint64_t v5 = async function pointer to dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)[1];
  id v6 = v4;
  uint64_t v7 = (void *)swift_task_alloc(v5);
  v2[213] = v7;
  void *v7 = v2;
  v7[1] = sub_53844;
  return dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)( v2[179],  v9,  v2[200],  v2[209],  &protocol witness table for ResponseFactory);
}

uint64_t sub_53844()
{
  return sub_382EC(v1, v2, v3);
}

uint64_t sub_53888()
{
  return swift_asyncLet_finish(v0 + 82, v0 + 167, sub_538F0, v0 + 180);
}

uint64_t sub_538F0()
{
  return sub_382E0((uint64_t)sub_538FC);
}

uint64_t sub_538FC()
{
  return sub_3836C();
}

uint64_t sub_53940()
{
  return sub_382E0((uint64_t)sub_5394C);
}

uint64_t sub_5394C()
{
  return sub_38328(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_539A8()
{
  uint64_t v1 = v0[210];
  uint64_t v2 = v0[200];
  uint64_t v3 = v0[199];
  uint64_t v4 = v0[198];
  *(void *)(v1 + 16) = 0LL;
  swift_release(v1);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release(v0[173]);
  return sub_3836C();
}

uint64_t sub_53A28()
{
  return sub_382E0((uint64_t)sub_53A34);
}

uint64_t sub_53A34()
{
  return sub_3836C();
}

uint64_t sub_53A78()
{
  return sub_382E0((uint64_t)sub_53A84);
}

uint64_t sub_53A84()
{
  return sub_38328(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_53AE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  void v3[2] = a1;
  return swift_task_switch(sub_53AFC, 0LL, 0LL);
}

uint64_t sub_53AFC()
{
  uint64_t v1 = swift_task_alloc(32LL);
  *(void *)(v0 + 40) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 24);
  uint64_t v2 = (void *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(void *)(v0 + 4sub_423C(v0 + 8) = v2;
  sub_41BC(&qword_A0EF8);
  *uint64_t v2 = v0;
  v2[1] = sub_53B9C;
  sub_38360();
  return withCheckedContinuation<A>(isolation:function:_:)();
}

uint64_t sub_53B9C()
{
  return sub_6698(v0[1]);
}

void sub_53BD8(uint64_t a1, uint64_t a2)
{
  uint64_t v24 = a1;
  uint64_t v22 = sub_41BC(&qword_A2628);
  uint64_t v3 = *(void *)(v22 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v22);
  uint64_t v5 = type metadata accessor for ParameterIdentifier(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = *(void *)(a2 + 72);
  uint64_t v9 = sub_41BC(&qword_A25D0);
  uint64_t v21 = (void *)ParameterResolutionRecord.intent.getter(v9);
  uint64_t v10 = ParameterResolutionRecord.parameter.getter(v9);
  uint64_t v20 = ParameterIdentifier.name.getter(v10);
  uint64_t v12 = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v13 = (void *)ParameterResolutionRecord.result.getter(v9);
  uint64_t v14 = v22;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))( (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL),  v24,  v22);
  uint64_t v15 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v16 = (v15 + 16) & ~v15;
  uint64_t v17 = swift_allocObject(&unk_97620, v16 + v4, v15 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))( v17 + v16,  (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL),  v14);
  uint64_t v18 = v21;
  sub_51F7C((uint64_t)v21, v20, v12, (uint64_t)v13, (void (*)(char *))sub_54684, v17);
  swift_release(v17);

  swift_bridgeObjectRelease(v12);
}

uint64_t sub_53D84(uint64_t a1)
{
  uint64_t v2 = sub_41BC(&qword_A0EF8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_545D0(a1, (uint64_t)v4);
  uint64_t v5 = sub_41BC(&qword_A2628);
  return CheckedContinuation.resume(returning:)(v4, v5);
}

uint64_t sub_53E0C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_task_switch(sub_53E24, 0LL, 0LL);
}

uint64_t sub_53E24()
{
  uint64_t v1 = (void *)swift_task_alloc(dword_A2394);
  *(void *)(v0 + 3sub_423C(v0 + 2) = v1;
  void *v1 = v0;
  v1[1] = sub_53E70;
  return sub_3F6C4();
}

uint64_t sub_53E70(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 32);
  uint64_t v6 = *v2;
  swift_task_dealloc(v5);
  if (v1) {
    return (*(uint64_t (**)(void))(v6 + 8))();
  }
  *(void *)(v4 + 40) = a1;
  sub_38360();
  return swift_task_switch(v8, v9, v10);
}

uint64_t sub_53EE8()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 40);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_53F00()
{
  uint64_t v0 = type metadata accessor for ResponseMode(0LL);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  OutputGenerationManifest.canUseServerTTS.setter(0LL);
  uint64_t v3 = OutputGenerationManifest.listenAfterSpeaking.setter(1LL);
  static Device.current.getter(v18, v3);
  uint64_t v4 = v19;
  uint64_t v5 = v20;
  sub_8504(v18, v19);
  char v6 = dispatch thunk of DeviceState.isPhone.getter(v4, v5);
  sub_BB78((uint64_t)v18, (uint64_t)v15);
  if ((v6 & 1) != 0)
  {
    uint64_t v7 = v16;
    uint64_t v8 = v17;
    sub_8504(v15, v16);
    LOBYTE(vsub_423C(v0 + 7) = DeviceState.isVox.getter(v7, v8);
    sub_423C(v15);
    if ((v7 & 1) != 0)
    {
      if (qword_9F820 != -1) {
        swift_once(&qword_9F820, sub_17ADC);
      }
      uint64_t v9 = type metadata accessor for Logger(0LL);
      uint64_t v10 = sub_4870(v9, (uint64_t)qword_A3EB0);
      uint64_t v11 = (os_log_s *)Logger.logObject.getter(v10);
      os_log_type_t v12 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v11, v12))
      {
        uint64_t v13 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v13 = 0;
        _os_log_impl( &dword_0,  v11,  v12,  "#SendAnnouncementNeedsValueStrategy overriding responseMode to .voiceForward",  v13,  2u);
        swift_slowDealloc(v13, -1LL, -1LL);
      }

      static ResponseMode.voiceForward.getter();
      OutputGenerationManifest.responseMode.setter(v2);
    }
  }

  else
  {
    sub_423C(v15);
  }

  return sub_423C(v18);
}

void *sub_540C0()
{
  return v0;
}

uint64_t sub_540F4()
{
  return swift_deallocClassInstance(v0, 80LL, 7LL);
}

uint64_t type metadata accessor for SendAnnouncementNeedsValueStrategy()
{
  return objc_opt_self(&OBJC_CLASS____TtC35HomeCommunicationFlowDelegatePlugin34SendAnnouncementNeedsValueStrategy);
}

uint64_t sub_54134@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_529A4(a1, a2);
}

uint64_t sub_54154(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc(dword_A2BDC);
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_382D8;
  return sub_52E74(a1, a2, a3);
}

uint64_t sub_541C0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc(dword_A2BE4);
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_37EE8;
  return sub_533DC(a1, a2);
}

uint64_t sub_54224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc(async function pointer to NeedsValueFlowStrategyAsync.makeRepromptOnEmptyParse(resolveRecord:)[1]);
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for SendAnnouncementNeedsValueStrategy();
  *uint64_t v8 = v4;
  v8[1] = sub_382D8;
  return NeedsValueFlowStrategyAsync.makeRepromptOnEmptyParse(resolveRecord:)(a1, a2, v9, a4);
}

uint64_t sub_542A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc(async function pointer to NeedsValueFlowStrategyAsync.makeRepromptOnLowConfidence(resolveRecord:)[1]);
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for SendAnnouncementNeedsValueStrategy();
  *uint64_t v8 = v4;
  v8[1] = sub_382D8;
  return NeedsValueFlowStrategyAsync.makeRepromptOnLowConfidence(resolveRecord:)(a1, a2, v9, a4);
}

uint64_t sub_5431C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  os_log_type_t v12 = (void *)swift_task_alloc(async function pointer to ParameterResolutionHandlingAsync.makeFlowCancelledResponse(app:intent:parameter:)[1]);
  *(void *)(v6 + 16) = v12;
  uint64_t v13 = type metadata accessor for SendAnnouncementNeedsValueStrategy();
  *os_log_type_t v12 = v6;
  v12[1] = sub_382D8;
  return ParameterResolutionHandlingAsync.makeFlowCancelledResponse(app:intent:parameter:)(a1, a2, a3, a4, v13, a6);
}

uint64_t sub_543B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = (void *)swift_task_alloc(async function pointer to ParameterResolutionHandlingAsync.makeErrorResponse(error:app:intent:parameter:)[1]);
  *(void *)(v7 + 16) = v14;
  uint64_t v15 = type metadata accessor for SendAnnouncementNeedsValueStrategy();
  *uint64_t v14 = v7;
  v14[1] = sub_382D8;
  return ParameterResolutionHandlingAsync.makeErrorResponse(error:app:intent:parameter:)(a1, a2, a3, a4, a5, v15, a7);
}

void sub_5444C(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_54478()
{
  uint64_t v1 = sub_41BC(&qword_A25D0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release(*(void *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_544F0(uint64_t a1)
{
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(sub_41BC(&qword_A25D0) - 8) + 80LL);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = v1 + ((v4 + 24) & ~v4);
  uint64_t v7 = (void *)swift_task_alloc(dword_A2CD4);
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_37EE8;
  return sub_53AE0(a1, v5, v6);
}

uint64_t sub_54574(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc(dword_A2CE4);
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_382D8;
  return sub_53E0C(a1, v1);
}

uint64_t sub_545C8()
{
  return sub_53F00();
}

uint64_t sub_545D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_41BC(&qword_A0EF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

void sub_54618(uint64_t a1)
{
}

uint64_t sub_54620()
{
  uint64_t v1 = sub_41BC(&qword_A2628);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_54684(uint64_t a1)
{
  return sub_53D84(a1);
}

uint64_t sub_546C4(uint64_t a1)
{
  return sub_546FC( a1,  (uint64_t (*)(uint64_t))&type metadata accessor for Siri_Nlu_External_UserDialogAct,  &qword_A2D00,  (uint64_t)&protocol conformance descriptor for Siri_Nlu_External_UserDialogAct);
}

uint64_t sub_546E0(uint64_t a1)
{
  return sub_546FC( a1,  (uint64_t (*)(uint64_t))&type metadata accessor for Siri_Nlu_External_SystemPrompted,  &qword_A2CF0,  (uint64_t)&protocol conformance descriptor for Siri_Nlu_External_SystemPrompted);
}

uint64_t sub_546FC(uint64_t a1, uint64_t (*a2)(uint64_t), unint64_t *a3, uint64_t a4)
{
  uint64_t v8 = a2(0LL);
  void v15[3] = v8;
  sub_17144(a3, 255LL, a2, a4);
  v15[4] = v9;
  uint64_t v10 = sub_A800(v15);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32LL))(v10, a1, v8);
  type metadata accessor for SiriNLUTypesPrintUtils(0LL);
  v14[0] = static SiriNLUTypesPrintUtils.printableProtoObject(object:)(v15);
  v14[1] = v11;
  uint64_t v12 = String.init<A>(_:)( v14,  &type metadata for String,  &protocol witness table for String,  &protocol witness table for String);
  sub_423C(v15);
  return v12;
}

uint64_t sub_547D0(uint64_t a1)
{
  return sub_546FC( a1,  (uint64_t (*)(uint64_t))&type metadata accessor for Siri_Nlu_External_UserStatedTask,  &qword_A2CF8,  (uint64_t)&protocol conformance descriptor for Siri_Nlu_External_UserStatedTask);
}

uint64_t sub_547EC()
{
  return swift_release_n(*(void *)(v0 + 1664), 2LL);
}

uint64_t sub_54810@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  return a2(a1, v2);
}

uint64_t sub_54818(uint64_t a1)
{
  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v1, 0LL, 1LL, a1);
}

double sub_5482C()
{
  return 0.0;
}

uint64_t sub_54844()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

void sub_54854()
{
}

uint64_t type metadata accessor for SendAnnouncementRCHFlowDelegate(uint64_t a1)
{
  uint64_t result = qword_A2D20;
  if (!qword_A2D20) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SendAnnouncementRCHFlowDelegate);
  }
  return result;
}

uint64_t sub_54898(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL);
}

void *sub_548EC(void (*a1)(uint64_t *__return_ptr, void *), uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t result = &_swiftEmptyArrayStorage;
  if (v5)
  {
    uint64_t v16 = &_swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v5);
    uint64_t v8 = (uint64_t *)(a3 + 40);
    while (1)
    {
      uint64_t v9 = *v8;
      v14[0] = *(v8 - 1);
      v14[1] = v9;
      swift_bridgeObjectRetain(v9);
      a1(&v15, v14);
      uint64_t v10 = swift_bridgeObjectRelease(v9);
      if (v3) {
        break;
      }
      v8 += 2;
      uint64_t v11 = v15;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v10);
      uint64_t v12 = v16[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v12);
      uint64_t v13 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v11);
      specialized ContiguousArray._endMutation()(v13);
      if (!--v5) {
        return v16;
      }
    }

    return (void *)swift_release(v16);
  }

  return result;
}

void sub_549E8(uint64_t a1, uint64_t a2)
{
  id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2));
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  [v4 initWithIdentifier:v5];

  sub_9304();
}

void sub_54A50(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    sub_41BC(&qword_A2D78);
    uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)(v2);
  }

  else
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
  }

  uint64_t v33 = a1 + 64;
  uint64_t v4 = -1LL << *(_BYTE *)(a1 + 32);
  if (-v4 < 64) {
    uint64_t v5 = ~(-1LL << -(char)v4);
  }
  else {
    uint64_t v5 = -1LL;
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v32 = (unint64_t)(63 - v4) >> 6;
  uint64_t v7 = (char *)(v3 + 8);
  swift_bridgeObjectRetain(a1);
  swift_retain(v3);
  int64_t v8 = 0LL;
  if (!v6) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  unint64_t v10 = v9 | (v8 << 6);
  while (1)
  {
    uint64_t v19 = (void *)(*(void *)(a1 + 48) + 16 * v10);
    uint64_t v20 = v19[1];
    uint64_t v21 = *(void *)(*(void *)(a1 + 56) + 8 * v10);
    *(void *)&v43[0] = *v19;
    *((void *)&v43[0] + 1) = v20;
    swift_bridgeObjectRetain(v20);
    swift_dynamicCast(&v35, v43, &type metadata for String, &type metadata for AnyHashable, 7LL);
    uint64_t v34 = v21;
    swift_dynamicCast(v38, &v34, &type metadata for Int, (char *)&type metadata for Any + 8, 7LL);
    __int128 v39 = v35;
    __int128 v40 = v36;
    uint64_t v41 = v37;
    sub_2EED4(v38, v42);
    __int128 v35 = v39;
    __int128 v36 = v40;
    uint64_t v37 = v41;
    sub_2EED4(v42, v43);
    sub_2EED4(v43, &v39);
    Swift::Int v22 = AnyHashable._rawHashValue(seed:)(v3[5]);
    uint64_t v23 = -1LL << *((_BYTE *)v3 + 32);
    unint64_t v24 = v22 & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1LL << v24) & ~*(void *)&v7[8 * (v24 >> 6)]) == 0)
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v23) >> 6;
      while (++v25 != v28 || (v27 & 1) == 0)
      {
        BOOL v29 = v25 == v28;
        if (v25 == v28) {
          unint64_t v25 = 0LL;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)&v7[8 * v25];
        if (v30 != -1)
        {
          unint64_t v26 = __clz(__rbit64(~v30)) + (v25 << 6);
          goto LABEL_38;
        }
      }

      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }

    unint64_t v26 = __clz(__rbit64((-1LL << v24) & ~*(void *)&v7[8 * (v24 >> 6)])) | v24 & 0x7FFFFFFFFFFFFFC0LL;
LABEL_38:
    *(void *)&v7[(v26 >> 3) & 0x1FFFFFFFFFFFFFF8LL] |= 1LL << v26;
    uint64_t v31 = v3[6] + 40 * v26;
    *(_OWORD *)uint64_t v31 = v35;
    *(_OWORD *)(v31 + 16) = v36;
    *(void *)(v31 + 3sub_423C(v0 + 2) = v37;
    sub_2EED4(&v39, (_OWORD *)(v3[7] + 32 * v26));
    ++v3[2];
    if (v6) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1LL)) {
      goto LABEL_42;
    }
    if (v11 >= v32) {
      goto LABEL_40;
    }
    unint64_t v12 = *(void *)(v33 + 8 * v11);
    int64_t v13 = v8 + 1;
    if (!v12)
    {
      sub_568E0();
      if (v14 == v15) {
        goto LABEL_40;
      }
      sub_568D4();
      if (!v12)
      {
        sub_568E0();
        if (v14 == v15) {
          goto LABEL_40;
        }
        sub_568D4();
        if (!v12)
        {
          sub_568E0();
          if (v14 == v15) {
            goto LABEL_40;
          }
          sub_568D4();
          if (!v12) {
            break;
          }
        }
      }
    }

LABEL_43:
  __break(1u);
}

uint64_t sub_54DD0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  v15._uint64_t countAndFlagsBits = a3;
  v15._object = a4;
  if (sub_1EDD4(v15) - 2 >= 2)
  {
    type metadata accessor for UnsupportedValueBehavior(0LL);
    uint64_t v13 = sub_5689C();
    return v14(v13);
  }

  else
  {
    uint64_t v10 = sub_41BC(&qword_A2D70);
    int64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void *, uint64_t))method lookup function for BaseRCHFlowDelegate( v10,  &method descriptor for BaseRCHFlowDelegate.makeUnsupportedValueBehavior(app:intent:parameterName:intentResolutionResult:));
    return v11(a1, a2, a3, a4, a5);
  }

uint64_t sub_54EB0(uint64_t a1, void *a2)
{
  v7._uint64_t countAndFlagsBits = a1;
  v7._object = a2;
  uint64_t v4 = sub_41BC(&qword_A2D70);
  uint64_t v5 = (uint64_t (*)(uint64_t, void *))method lookup function for BaseRCHFlowDelegate( v4,  &method descriptor for BaseRCHFlowDelegate.allowIntentCancellationOnParameterRejection(parameterName:));
  return v5(a1, a2);
}

void sub_54F2C()
{
  uint64_t v3 = v2 - v1;
  type metadata accessor for DucTemplatingLocalContext(0LL);
  sub_11F5C();
  __chkstk_darwin(v4);
  sub_9298();
  uint64_t v7 = v6 - v5;
  int64_t v8 = static AceService.current.getter(v15);
  unint64_t v9 = static Device.current.getter(v14, v8);
  DucTemplatingLocalContext.init()(v9);
  uint64_t v10 = type metadata accessor for SendAnnouncementCATs(0LL);
  static CATOption.defaultMode.getter(v10);
  uint64_t v11 = CATWrapper.__allocating_init(options:globals:)(v3, 0LL);
  uint64_t v12 = type metadata accessor for AppInfoBuilder();
  uint64_t v13 = swift_allocObject(v12, 16LL, 7LL);
  sub_56524(v7, (uint64_t)v15, v14, v11, v13);
  sub_9304();
}

void sub_54FFC()
{
  uint64_t v0 = sub_41BC(&qword_A27C8);
  sub_A8BC(v0);
  DefaultNLContextProvider.init()();
  sub_AA5C();
}

uint64_t sub_55028()
{
  uint64_t v1 = v0;
  static Device.current.getter(v4, v0);
  uint64_t v2 = type metadata accessor for SendAnnouncementAceViewProvider(0LL);
  sub_A8BC(v2);
  return sub_3D2D8(v1, v4);
}

void sub_55074(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v6 = type metadata accessor for Parse(0LL);
  uint64_t v30 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  sub_9298();
  uint64_t v9 = v8 - v7;
  sub_41BC(&qword_9FDD0);
  sub_11F5C();
  __chkstk_darwin(v10);
  sub_9298();
  uint64_t v13 = v12 - v11;
  type metadata accessor for SiriKitConfirmationState(0LL);
  sub_56904();
  __chkstk_darwin(v14);
  sub_9298();
  uint64_t v17 = v16 - v15;
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v18 = sub_1BDD8();
  uint64_t v19 = (os_log_s *)sub_4870(v18, (uint64_t)qword_A3EB0);
  Logger.logObject.getter(v19);
  os_log_type_t v20 = sub_A9E8();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v29 = v17;
    uint64_t v21 = v6;
    uint64_t v22 = a1;
    uint64_t v23 = v2;
    uint64_t v24 = v3;
    uint64_t v25 = a2;
    unint64_t v26 = (uint8_t *)sub_144F0(2LL);
    *(_WORD *)unint64_t v26 = 0;
    _os_log_impl(&dword_0, v19, v20, "#SendAnnouncementRCHFlowDelegate makeConfirmationStateFromParse", v26, 2u);
    uint64_t v27 = (uint64_t)v26;
    a2 = v25;
    uint64_t v3 = v24;
    uint64_t v2 = v23;
    a1 = v22;
    uint64_t v6 = v21;
    uint64_t v17 = v29;
    sub_48D4(v27);
  }

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v9, a1, v6);
  sub_5A9EC(v9, v13);
  uint64_t v28 = type metadata accessor for SmsNLIntent(0LL);
  if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v13, 1LL, v28) == 1)
  {
    sub_27DEC(v13, &qword_9FDD0);
    (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))( a2,  enum case for SiriKitConfirmationState.unset(_:),  v3);
  }

  else
  {
    sub_5AE58();
    sub_4888(v13);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(a2, v17, v3);
  }

  sub_6360();
}

uint64_t sub_5528C(uint64_t a1, void *a2)
{
  uint64_t v5 = v3;
  id v96 = a2;
  sub_41BC(&qword_A27E8);
  sub_11F5C();
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v90 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v90 - v14;
  type metadata accessor for Parse(0LL);
  sub_56904();
  __chkstk_darwin(v16);
  sub_9298();
  uint64_t v19 = v18 - v17;
  uint64_t v20 = type metadata accessor for NLIntent(0LL);
  uint64_t v97 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  sub_9298();
  uint64_t v23 = v22 - v21;
  uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  uint64_t v95 = a1;
  v24(v19, a1, v4);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v2 + 88))(v19, v4) == enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    dispatch_semaphore_t v94 = v13;
    (*(void (**)(uint64_t, uint64_t))(v2 + 96))(v19, v4);
    uint64_t v25 = *(void *)(v19 + *(int *)(sub_41BC(&qword_A0CD8) + 48));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v97 + 32))(v23, v19, v20);
    if (qword_9F820 != -1) {
      swift_once(&qword_9F820, sub_17ADC);
    }
    uint64_t v26 = sub_1BDD8();
    uint64_t v27 = sub_4870(v26, (uint64_t)qword_A3EB0);
    uint64_t v28 = swift_retain(v25);
    uint64_t v93 = (os_log_s *)v27;
    uint64_t v29 = (os_log_s *)Logger.logObject.getter(v28);
    os_log_type_t v30 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = sub_144F0(12LL);
      uint64_t v90 = v5;
      int64_t v32 = (uint8_t *)v31;
      uint64_t v33 = sub_144F0(8LL);
      uint64_t v91 = v15;
      uint64_t v34 = (void *)v33;
      uint64_t v92 = v23;
      *(_DWORD *)int64_t v32 = 138412290;
      uint64_t v35 = Parse.ServerConversion.siriKitIntent.getter(v33);
      uint64_t v99 = v35;
      uint64_t v23 = v92;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v99, v100, v32 + 4, v32 + 12);
      *uint64_t v34 = v35;
      sub_1C008();
      sub_14550(&dword_0, v29, v30, "#SendAnnouncementRCHFlowDelegate Making a siriKit intent from parse: %@.", v32);
      uint64_t v36 = sub_41BC(&qword_A0F50);
      sub_17528((uint64_t)v34, v37, v36);
      uint64_t v38 = (uint64_t)v34;
      uint64_t v15 = v91;
      sub_48D4(v38);
      uint64_t v39 = (uint64_t)v32;
      uint64_t v5 = v90;
      sub_48D4(v39);
    }

    else
    {

      uint64_t v40 = sub_1C008();
    }

    uint64_t v41 = (char *)Parse.ServerConversion.siriKitIntent.getter(v40);
    uint64_t v42 = objc_opt_self(&OBJC_CLASS___INSendAnnouncementIntent);
    uint64_t v43 = swift_dynamicCastObjCClass(v41, v42);
    if (v43)
    {
      sub_506F0( (int)v96,  v43,  v44,  v45,  v46,  v47,  v48,  v49,  v90,  (uint64_t)v91,  v92,  (uint64_t)v93,  (uint64_t)v94,  v95,  v43,  v97,  v98,  v99,  v100[0],  v100[1],  v100[2],  v100[3]);
      uint64_t v50 = sub_8504(&v5[qword_A2D10], *(void *)&v5[qword_A2D10 + 24]);
      uint64_t v51 = (uint64_t)v50 + *(int *)(type metadata accessor for SharedGlobals(0LL) + 28);
      uint64_t v52 = (uint64_t)v94;
      sub_49154(v51, (uint64_t)v94);
      uint64_t v53 = type metadata accessor for IdentifiedUser(0LL);
      if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v52, 1LL, v53) == 1)
      {
        type metadata accessor for SiriEnvironment(0LL);
        uint64_t v54 = static SiriEnvironment.forCurrentTask.getter();
        if (v54)
        {
          uint64_t v55 = v54;
          SiriEnvironment.userIdentity.getter();
          uint64_t v56 = swift_release(v55);
          dispatch thunk of UserIdentityProvider.identifiedUser.getter(v56);
          sub_17678();
          uint64_t v57 = 0LL;
        }

        else
        {
          uint64_t v57 = 1LL;
        }

        uint64_t v64 = v93;
        sub_56924((uint64_t)v15, v57);
        sub_27DEC((uint64_t)v94, &qword_A27E8);
      }

      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v53 - 8) + 32LL))(v15, v52, v53);
        sub_56924((uint64_t)v15, 0LL);
        uint64_t v64 = v93;
      }

      sub_49154((uint64_t)v15, (uint64_t)v10);
      if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0((uint64_t)v10, 1LL, v53) == 1)
      {
        sub_27DEC((uint64_t)v10, &qword_A27E8);
      }

      else
      {
        uint64_t v66 = IdentifiedUser.sharedUserId.getter();
        uint64_t v67 = v10;
        unint64_t v69 = v68;
        uint64_t v65 = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v53 - 8) + 8LL))(v67, v53);
        if (v69)
        {
          uint64_t v95 = v20;
          uint64_t v70 = swift_bridgeObjectRetain_n(v69, 2LL);
          uint64_t v71 = v64;
          Logger.logObject.getter(v70);
          os_log_type_t v72 = sub_A9E8();
          if (os_log_type_enabled(v64, v72))
          {
            uint64_t v73 = sub_144F0(12LL);
            dispatch_semaphore_t v94 = v41;
            uint64_t v74 = (uint8_t *)v73;
            uint64_t v75 = sub_144F0(32LL);
            uint64_t v99 = v75;
            uint64_t v92 = v23;
            *(_DWORD *)uint64_t v74 = 136315138;
            swift_bridgeObjectRetain(v69);
            uint64_t v98 = sub_68DC4(v66, v69, &v99);
            uint64_t v23 = v92;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v98, &v99, v74 + 4, v74 + 12);
            swift_bridgeObjectRelease_n(v69, 3LL);
            sub_14550(&dword_0, v71, v72, "#SendAnnouncementRCHFlowDelegate sharedUserID: %s", v74);
            sub_17528(v75, v76, (uint64_t)&type metadata for Any + 8);
            sub_48D4(v75);
            uint64_t v77 = (uint64_t)v74;
            uint64_t v41 = v94;
            sub_48D4(v77);
          }

          else
          {

            swift_bridgeObjectRelease_n(v69, 2LL);
          }

          char v85 = v96;
          sub_56494();
LABEL_27:
          static AceService.current.getter(&v99);
          sub_4E4D0(v23, v85, &v99);
          uint64_t v63 = v86;
          sub_1C008();

          sub_423C(&v99);
          sub_27DEC((uint64_t)v15, &qword_A27E8);
          uint64_t v87 = sub_568B4();
          v88(v87);
          return v63;
        }
      }

      uint64_t v78 = (void *)Logger.logObject.getter(v65);
      os_log_type_t v79 = static os_log_type_t.debug.getter();
      if (sub_17380(v79))
      {
        uint64_t v80 = v41;
        uint64_t v81 = (_WORD *)sub_144F0(2LL);
        *uint64_t v81 = 0;
        sub_17358(&dword_0, v82, v83, "#SendAnnouncementRCHFlowDelegate not sharedUserID was found");
        uint64_t v84 = (uint64_t)v81;
        uint64_t v41 = v80;
        sub_48D4(v84);
      }

      char v85 = v96;
      goto LABEL_27;
    }

    sub_1C008();
    uint64_t v58 = sub_568B4();
    v60(v58, v59);
  }

  else
  {
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v19, v4);
  }

  uint64_t v61 = sub_41BC(&qword_A2D70);
  uint64_t v62 = (uint64_t (*)(uint64_t, void *))method lookup function for BaseRCHFlowDelegate( v61,  &method descriptor for BaseRCHFlowDelegate.makeIntentFromParse(parse:previousIntent:));
  return v62(v95, v96);
}

uint64_t sub_558FC()
{
  uint64_t v0 = sub_5689C();
  return v1(v0);
}

void sub_55930(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v12 = a4;
  swift_bridgeObjectRetain(a4);
  v102._uint64_t countAndFlagsBits = a3;
  v102._object = v12;
  uint64_t v97 = a1;
  uint64_t v98 = a2;
  uint64_t v99 = (os_log_s *)a3;
  uint64_t v16 = sub_260F0();
  uint64_t v17 = (uint64_t)sub_569D4(v16);
  if (!v17)
  {
    swift_bridgeObjectRelease(v16);
    if (qword_9F820 == -1)
    {
LABEL_21:
      uint64_t v32 = sub_1BDD8();
      uint64_t v33 = sub_4870(v32, (uint64_t)qword_A3EB0);
      uint64_t v34 = (void *)Logger.logObject.getter(v33);
      os_log_type_t v35 = static os_log_type_t.error.getter();
      if (sub_17380(v35))
      {
        uint64_t v36 = (_WORD *)sub_144F0(2LL);
        *uint64_t v36 = 0;
        sub_17358(&dword_0, v37, v38, "Disambiguating items were not of type INHomeFilter");
        sub_48D4((uint64_t)v36);
      }

      goto LABEL_36;
    }

LABEL_56:
    swift_once(&qword_9F820, sub_17ADC);
    goto LABEL_21;
  }

  uint64_t v18 = v17;
  dispatch_semaphore_t v94 = (void (*)(void))a6;
  if ((unint64_t)v17 >> 62)
  {
    if (v17 >= 0) {
      uint64_t v89 = v17 & 0xFFFFFFFFFFFFFF8LL;
    }
    else {
      uint64_t v89 = v17;
    }
    swift_bridgeObjectRetain(v17);
    a6 = _CocoaArrayWrapper.endIndex.getter(v89);
  }

  else
  {
    a6 = *(void *)((char *)&dword_10 + (v17 & 0xFFFFFFFFFFFFFF8LL));
    swift_bridgeObjectRetain(v17);
  }

  uint64_t v95 = a7;
  uint64_t v96 = v16;
  uint64_t v92 = a5;
  uint64_t v93 = v8;
  uint64_t v91 = v12;
  if (!a6)
  {
    uint64_t v20 = (char *)_swiftEmptyArrayStorage;
    goto LABEL_25;
  }

  if (a6 < 1)
  {
    __break(1u);
    goto LABEL_56;
  }

  uint64_t v19 = 0LL;
  uint64_t v20 = (char *)_swiftEmptyArrayStorage;
  do
  {
    if ((v18 & 0xC000000000000001LL) != 0) {
      id v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v19, v18);
    }
    else {
      id v21 = *(id *)(v18 + 8 * v19 + 32);
    }
    uint64_t v22 = v21;
    id v23 = [v21 home];
    if (v23)
    {
      uint64_t v24 = v23;
      id v25 = [v23 spokenPhrase];

      uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
      uint64_t v28 = v27;

      if ((swift_isUniquelyReferenced_nonNull_native(v20) & 1) == 0) {
        uint64_t v20 = sub_56918(0LL, *((void *)v20 + 2) + 1LL);
      }
      unint64_t v30 = *((void *)v20 + 2);
      unint64_t v29 = *((void *)v20 + 3);
      if (v30 >= v29 >> 1) {
        uint64_t v20 = sub_56918((char *)(v29 > 1), v30 + 1);
      }
      *((void *)v20 + sub_423C(v0 + 2) = v30 + 1;
      uint64_t v31 = &v20[16 * v30];
      *((void *)v31 + 4) = v26;
      *((void *)v31 + 5) = v28;
    }

    else
    {
    }

    ++v19;
  }

  while (a6 != v19);
LABEL_25:
  swift_bridgeObjectRelease_n(v18, 2LL);
  if (*((void *)v20 + 2) < 2uLL)
  {
    swift_bridgeObjectRelease(v96);
    if (qword_9F820 != -1) {
      swift_once(&qword_9F820, sub_17ADC);
    }
    uint64_t v39 = sub_1BDD8();
    sub_4870(v39, (uint64_t)qword_A3EB0);
    uint64_t v40 = sub_2F768();
    uint64_t v41 = (os_log_s *)Logger.logObject.getter(v40);
    os_log_type_t v42 = static os_log_type_t.error.getter();
    uint64_t v12 = v91;
    a5 = v92;
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = (uint8_t *)sub_144F0(12LL);
      uint64_t v44 = sub_144F0(32LL);
      v101[0] = v44;
      *(_DWORD *)uint64_t v43 = 136315138;
      uint64_t v45 = sub_2F768();
      uint64_t v46 = Array.description.getter(v45, &type metadata for String);
      unint64_t v48 = v47;
      sub_2F604();
      uint64_t v49 = sub_68DC4(v46, v48, v101);
      uint64_t v50 = sub_56930(v49);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v50, v51, v43 + 4, v43 + 12);
      sub_56884();
      swift_bridgeObjectRelease(v48);
      sub_14550(&dword_0, v41, v42, "Error disambiguating between no homes or single home : %s", v43);
      sub_17528(v44, v52, (uint64_t)&type metadata for Any + 8);
      sub_48D4(v44);
      sub_48D4((uint64_t)v43);
    }

    else
    {

      sub_56884();
    }

    a6 = (uint64_t)v94;
    a7 = v95;
LABEL_36:
    a2 = v98;
    a3 = (uint64_t)v99;
    a1 = v97;
LABEL_37:
    uint64_t v71 = sub_41BC(&qword_A2D70);
    os_log_type_t v72 = (void (*)(uint64_t, uint64_t, uint64_t, void *, uint64_t, uint64_t, uint64_t))method lookup function for BaseRCHFlowDelegate( v71,  &method descriptor for BaseRCHFlowDelegate.makeDisambiguationList(app:intent:parameterName:intentResolutionResult:_:));
    v72(a1, a2, a3, v12, a5, a6, a7);
    goto LABEL_38;
  }

  uint64_t v53 = v96;
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v54 = sub_1BDD8();
  uint64_t v55 = (os_log_s *)sub_4870(v54, (uint64_t)qword_A3EB0);
  uint64_t v56 = swift_bridgeObjectRetain_n(v20, 2LL);
  uint64_t v57 = (os_log_s *)Logger.logObject.getter(v56);
  os_log_type_t v58 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v57, v58))
  {
    uint64_t v99 = v55;
    uint64_t v59 = (uint8_t *)sub_144F0(12LL);
    uint64_t v60 = sub_144F0(32LL);
    v101[0] = v60;
    *(_DWORD *)uint64_t v59 = 136315138;
    uint64_t v61 = sub_2F768();
    uint64_t v62 = v53;
    uint64_t v63 = Array.description.getter(v61, &type metadata for String);
    unint64_t v65 = v64;
    sub_2F604();
    uint64_t v66 = v63;
    uint64_t v53 = v62;
    uint64_t v67 = sub_68DC4(v66, v65, v101);
    uint64_t v68 = sub_56930(v67);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v68, v69, v59 + 4, v59 + 12);
    sub_56884();
    swift_bridgeObjectRelease(v65);
    sub_14550(&dword_0, v57, v58, "Disambiguating between homes : %s", v59);
    sub_17528(v60, v70, (uint64_t)&type metadata for Any + 8);
    sub_48D4(v60);
    uint64_t v55 = v99;
    sub_48D4((uint64_t)v59);
  }

  else
  {

    sub_56884();
  }

  if (qword_9F7D8 != -1) {
    swift_once(&qword_9F7D8, sub_F244);
  }
  uint64_t v73 = qword_A3E38;
  v101[3] = sub_41BC(&qword_A0690);
  unint64_t v74 = sub_1BC3C();
  v101[4] = v74;
  v101[0] = v73;
  if (*(_BYTE *)(v93 + qword_A2D18) == 1)
  {
    uint64_t v75 = sub_568F8();
    Logger.logObject.getter(v75);
    os_log_type_t v76 = sub_A9E8();
    if (os_log_type_enabled(v55, v76))
    {
      uint64_t v77 = (uint8_t *)sub_144F0(2LL);
      *(_WORD *)uint64_t v77 = 0;
      _os_log_impl(&dword_0, v55, v76, "#SendAnnouncementRCHFlowDelegate isDirectInvocation in SiriX path", v77, 2u);
      sub_48D4((uint64_t)v77);
    }

    uint64_t v100 = _swiftEmptyArrayStorage;
    sub_2F768();
    specialized ContiguousArray.reserveCapacity(_:)(0LL);
    uint64_t v78 = *((void *)v20 + 2);
    sub_2F768();
    if (v78)
    {
      uint64_t v79 = 0LL;
      uint64_t v80 = (uint64_t *)(v20 + 40);
      do
      {
        uint64_t v82 = *(v80 - 1);
        uint64_t v81 = *v80;
        swift_bridgeObjectRetain(*v80);
        uint64_t v83 = sub_56098(v79, v82, v81);
        uint64_t v84 = swift_bridgeObjectRelease(v81);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v84);
        uint64_t v85 = v100[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v85);
        uint64_t v86 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v85, v83);
        specialized ContiguousArray._endMutation()(v86);
        v80 += 2;
        ++v79;
      }

      while (v78 != v79);
    }

    sub_2F604();
    uint64_t v87 = v100;
    sub_2F604();
  }

  else
  {
    __chkstk_darwin(v74);
    v90[2] = v101;
    sub_568F8();
    uint64_t v87 = sub_548EC((void (*)(uint64_t *__return_ptr, void *))sub_564CC, (uint64_t)v90, (uint64_t)v20);
  }

  sub_423C(v101);
  sub_17678();
  sub_2F604();
  uint64_t v88 = type metadata accessor for SiriKitDisambiguationList(0LL);
  sub_A8BC(v88);
  SiriKitDisambiguationList.init(rawItems:disambiguationItems:shouldReadItemsInVox:requestUnlockForEmptyOrDuplicateItems:)( v53,  v87,  1LL,  0LL);
  v94();
  sub_17678();
LABEL_38:
  sub_6360();
}

uint64_t sub_56098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_41BC(&qword_A25C0);
  uint64_t inited = swift_initStackObject(v6, v20);
  *(_OWORD *)(inited + 16) = xmmword_6FA70;
  if (qword_9F7E8 != -1) {
    swift_once(&qword_9F7E8, sub_F88C);
  }
  uint64_t v8 = *(void *)algn_A3E78;
  *(void *)(inited + 3sub_423C(v0 + 2) = qword_A3E70;
  *(void *)(inited + 40) = v8;
  *(void *)(inited + 4sub_423C(v0 + 8) = a1;
  swift_bridgeObjectRetain(v8);
  uint64_t v9 = Dictionary.init(dictionaryLiteral:)( inited,  &type metadata for String,  &type metadata for Int,  &protocol witness table for String);
  sub_564E8();
  sub_549E8(0xD00000000000003ALL, 0x8000000000076480LL);
  uint64_t v11 = v10;
  sub_54A50(v9);
  swift_bridgeObjectRelease(v9);
  sub_56440();
  type metadata accessor for SiriKitDisambiguationItemComponent(0LL);
  uint64_t v12 = dispatch thunk of static SiriKitDisambiguationItemComponent.makeBuilder(_:)(a2, a3);
  uint64_t v13 = dispatch thunk of SiriKitDisambiguationItemComponent.Builder.build()();
  swift_release(v12);
  uint64_t v14 = sub_41BC(&qword_A2100);
  uint64_t v15 = swift_allocObject(v14, 40LL, 7LL);
  *(_OWORD *)(v15 + 16) = xmmword_6FCA0;
  *(void *)(v15 + 3sub_423C(v0 + 2) = v13;
  uint64_t v19 = v15;
  specialized Array._endMutation()(v15, v16);
  uint64_t v17 = type metadata accessor for SiriKitDisambiguationItem(0LL);
  swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
  return SiriKitDisambiguationItem.init(components:directInvocation:allowLineWrapForDisplayText:)(v19, v11, 0LL);
}

uint64_t sub_56234@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  type metadata accessor for SiriKitDisambiguationItemComponent(0LL);
  uint64_t v7 = dispatch thunk of static SiriKitDisambiguationItemComponent.makeBuilder(_:)(v5, v6);
  uint64_t v8 = dispatch thunk of SiriKitDisambiguationItemComponent.Builder.build()();
  swift_release(v7);
  uint64_t v9 = type metadata accessor for MachineUtteranceBuilder(0LL);
  swift_allocObject(v9, *(unsigned int *)(v9 + 48), *(unsigned __int16 *)(v9 + 52));
  uint64_t v10 = MachineUtteranceBuilder.init()();
  uint64_t v12 = a2[3];
  uint64_t v11 = a2[4];
  sub_8504(a2, v12);
  uint64_t v13 = dispatch thunk of OntologyNode.name.getter(v12, v11);
  uint64_t v15 = v14;
  uint64_t v16 = dispatch thunk of MachineUtteranceBuilder.addMapping(node:value:)(v13, v14, v5, v6);
  swift_release(v10);
  uint64_t v17 = swift_bridgeObjectRelease(v15);
  uint64_t v18 = dispatch thunk of MachineUtteranceBuilder.build()(v17);
  uint64_t v20 = v19;
  swift_release(v16);
  uint64_t v21 = sub_41BC(&qword_A2100);
  uint64_t v22 = swift_allocObject(v21, 40LL, 7LL);
  *(_OWORD *)(v22 + 16) = xmmword_6FCA0;
  *(void *)(v22 + 3sub_423C(v0 + 2) = v8;
  uint64_t v26 = v22;
  specialized Array._endMutation()(v22, v23);
  uint64_t v24 = type metadata accessor for SiriKitDisambiguationItem(0LL);
  swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
  uint64_t result = SiriKitDisambiguationItem.init(components:utterance:allowLineWrapForDisplayText:)(v26, v18, v20, 0LL);
  *a3 = result;
  return result;
}

void sub_56394()
{
}

uint64_t sub_563C0()
{
  return sub_423C((void *)(v0 + qword_A2D10));
}

uint64_t sub_563EC()
{
  uint64_t v0 = BaseRCHFlowDelegate.deinit();
  sub_423C((void *)(v0 + qword_A2D08));
  sub_423C((void *)(v0 + qword_A2D10));
  return swift_deallocClassInstance(v0, 97LL, 7LL);
}

uint64_t sub_56438()
{
  return type metadata accessor for SendAnnouncementRCHFlowDelegate(0LL);
}

void sub_56440()
{
  int v0 = sub_568C8();
  sub_568EC(v0, "setUserData:", v1, v2, v3, v4, v5, v6, v7, v8);
  sub_56890(v9);
}

void sub_56494()
{
  int v0 = sub_568C8();
  sub_568EC(v0, "setSharedUserID:", v1, v2, v3, v4, v5, v6, v7, v8);
  sub_56890(v9);
}

uint64_t sub_564CC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_56234(a1, *(void **)(v2 + 16), a2);
}

unint64_t sub_564E8()
{
  unint64_t result = qword_A25C8;
  if (!qword_A25C8)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___SKIDirectInvocationPayload);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_A25C8);
  }

  return result;
}

uint64_t sub_56524(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v43 = (void *)a2;
  uint64_t v44 = a1;
  uint64_t v8 = sub_41BC(&qword_A0518);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for Locale(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for AppInfoBuilder();
  v49[3] = v15;
  v49[4] = &off_961C8;
  v49[0] = a5;
  uint64_t v16 = type metadata accessor for SendAnnouncementTemplatingService(0LL);
  uint64_t v17 = swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
  uint64_t v18 = sub_A7D8((uint64_t)v49, v15);
  __chkstk_darwin(v18);
  uint64_t v20 = (uint64_t *)((char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(uint64_t *))(v21 + 16))(v20);
  uint64_t v22 = *v20;
  v48[3] = v15;
  v48[4] = &off_961C8;
  v48[0] = v22;
  sub_A798((uint64_t)a3, v17 + qword_A2D80);
  uint64_t v42 = a4;
  *(void *)(v17 + qword_A2D90) = a4;
  sub_A798((uint64_t)v48, v17 + qword_A2D88);
  uint64_t v23 = a3[3];
  sub_8504(a3, v23);
  swift_retain(a4);
  uint64_t v24 = dispatch thunk of DeviceState.siriLocale.getter(v23);
  uint64_t v25 = Locale.identifier.getter(v24);
  uint64_t v27 = v26;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v46[0] = v25;
  v46[1] = v27;
  v45[0] = 45LL;
  v45[1] = 0xE100000000000000LL;
  v47[0] = 95LL;
  v47[1] = 0xE100000000000000LL;
  unint64_t v28 = sub_CD6C();
  uint64_t v29 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( v45,  v47,  0LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String,  &type metadata for String,  v28,  v28,  v28);
  uint64_t v31 = v30;
  swift_bridgeObjectRelease(v27);
  type metadata accessor for INIntentSlotValueType(0LL);
  uint64_t v33 = v32;
  unint64_t v34 = sub_CDA8();
  uint64_t v35 = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage, v33, &type metadata for String, v34);
  uint64_t v36 = v43;
  sub_A798((uint64_t)v43, (uint64_t)v46);
  sub_A798((uint64_t)a3, (uint64_t)v45);
  uint64_t v37 = type metadata accessor for DucTemplatingLocalContext(0LL);
  uint64_t v38 = *(void *)(v37 - 8);
  uint64_t v39 = v44;
  (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v10, v44, v37);
  _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0((uint64_t)v10, 0LL, 1LL, v37);
  uint64_t v40 = DucTemplatingService.init(ducFamily:locale:extensionValueTypeNamesByValueType:aceServiceInvoker:deviceState:localContext:)( 0xD000000000000010LL,  0x8000000000078A00LL,  v29,  v31,  v35,  v46,  v45,  v10);
  swift_release(v42);
  sub_423C(v48);
  sub_423C(v36);
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v39, v37);
  sub_423C(a3);
  sub_423C(v49);
  return v40;
}

uint64_t sub_56884()
{
  return swift_bridgeObjectRelease_n(v0, 2LL);
}

void sub_56890(id a1)
{
}

uint64_t sub_5689C()
{
  return v0;
}

uint64_t sub_568B4()
{
  return v0;
}

uint64_t sub_568C8()
{
  return swift_bridgeObjectRelease(v0);
}

  ;
}

  ;
}

id sub_568EC( int a1, const char *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  return objc_msgSend(v10, a2, a10);
}

uint64_t sub_568F8()
{
  return swift_retain_n(v0, 2LL);
}

  ;
}

char *sub_56918(char *a1, int64_t a2)
{
  return sub_5D33C(a1, a2, 1, v2);
}

uint64_t sub_56924(uint64_t a1, uint64_t a2)
{
  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(a1, a2, 1LL, v2);
}

uint64_t sub_56930(uint64_t a1)
{
  *(void *)(v1 - 144) = a1;
  return v1 - 144;
}

uint64_t type metadata accessor for SendAnnouncementTemplatingService(uint64_t a1)
{
  uint64_t result = qword_A2D98;
  if (!qword_A2D98) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SendAnnouncementTemplatingService);
  }
  return result;
}

uint64_t sub_5697C(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL);
}

void *sub_569D4(uint64_t a1)
{
  uint64_t v12 = _swiftEmptyArrayStorage;
  uint64_t v2 = *(void *)(a1 + 16);
  specialized ContiguousArray.reserveCapacity(_:)(v2);
  if (!v2) {
    return v12;
  }
  for (uint64_t i = a1 + 32; ; i += 32LL)
  {
    sub_FC5C(i, (uint64_t)v11);
    unint64_t v4 = sub_25B94();
    uint64_t v5 = swift_dynamicCast(&v10, v11, (char *)&type metadata for Any + 8, v4, 6LL);
    if (!(_DWORD)v5) {
      break;
    }
    id v6 = v10;
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v5);
    uint64_t v7 = v12[2];
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v7);
    uint64_t v8 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v7, v6);
    specialized ContiguousArray._endMutation()(v8);
    if (!--v2) {
      return v12;
    }
  }

  id v10 = 0LL;
  swift_release(v12);

  return 0LL;
}

uint64_t sub_56ACC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v5 = sub_4870(v4, (uint64_t)qword_A3EB0);
  id v6 = (os_log_s *)Logger.logObject.getter(v5);
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)sub_A968();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl( &dword_0,  v6,  v7,  "Making an intent handled dialog that indicates an announcement has been sent.",  v8,  2u);
    sub_48D4((uint64_t)v8);
  }

  id v10 = sub_57AB4(v9, "isReply");
  if (!v10)
  {
    char v12 = 0;
    if (a3) {
      goto LABEL_7;
    }
LABEL_9:
    char v16 = 0;
    goto LABEL_10;
  }

  uint64_t v11 = v10;
  char v12 = [v10 BOOLValue];

  if (!a3) {
    goto LABEL_9;
  }
LABEL_7:
  uint64_t v13 = sub_25C60();
  uint64_t v14 = swift_bridgeObjectRetain(v13);
  sub_57AAC(v14);
  uint64_t v15 = *(void *)(v13 + 16);
  swift_bridgeObjectRelease(v13);
  char v16 = v15 != 0;
  uint64_t v17 = sub_25C6C();
  sub_57AAC(v17);
  uint64_t v18 = sub_25C78();
  sub_57AAC(v18);
LABEL_10:
  sub_3E454((uint64_t)_swiftEmptyArrayStorage, v16, v12);
  return swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
}

uint64_t sub_56C78(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v16._uint64_t countAndFlagsBits = a2;
  v16._object = a3;
  if (sub_1EDD4(v16))
  {
    uint64_t v12 = sub_41BC(&qword_A2DE8);
    uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, void *, uint64_t, uint64_t, uint64_t))method lookup function for DucTemplatingService( v12,  &method descriptor for DucTemplatingService.makeParameterPromptDialog(app:parameterName:intent:_:));
    return v13(a1, a2, a3, a4, a5, a6);
  }

  else
  {
    uint64_t v15 = swift_allocObject(&unk_97708, 32LL, 7LL);
    *(void *)(v15 + 16) = a5;
    *(void *)(v15 + 24) = a6;
    swift_retain(a6);
    sub_3E6A4();
    return swift_release(v15);
  }

uint64_t sub_56D6C(uint64_t a1, void (*a2)(char *))
{
  uint64_t v3 = type metadata accessor for BehaviorAfterSpeaking(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (uint64_t *)((char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v7 = sub_41BC(&qword_A0530);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *id v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(SAUISoundIDAnnouncementAudioRecordingStartValue);
  v6[1] = v10;
  (*(void (**)(void *, void, uint64_t))(v4 + 104))( v6,  enum case for BehaviorAfterSpeaking.dingAndListen(_:),  v3);
  Result<>.withBehaviorAfterSpeaking(_:)(v6, v7);
  (*(void (**)(void *, uint64_t))(v4 + 8))(v6, v3);
  a2(v9);
  return sub_5F64((uint64_t)v9, &qword_A0530);
}

void sub_56E94( uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v50 = a7;
  sub_41BC(&qword_A13C0);
  sub_11F5C();
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = sub_57ABC();
  uint64_t v52 = *(void *)(v16 - 8);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v53 = (uint64_t)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v17);
  uint64_t v51 = (uint64_t)&v47 - v19;
  swift_bridgeObjectRetain(a3);
  v55._uint64_t countAndFlagsBits = a2;
  v55._object = a3;
  if (sub_1EDD4(v55) != 1
    || (uint64_t v20 = sub_260F0(), v21 = (uint64_t)sub_569D4(v20), swift_bridgeObjectRelease(v20), !v21))
  {
    if (qword_9F820 != -1) {
      swift_once(&qword_9F820, sub_17ADC);
    }
    uint64_t v38 = type metadata accessor for Logger(0LL);
    uint64_t v39 = sub_4870(v38, (uint64_t)qword_A3EB0);
    uint64_t v40 = (os_log_s *)Logger.logObject.getter(v39);
    os_log_type_t v41 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v42 = (uint8_t *)sub_A968();
      *(_WORD *)uint64_t v42 = 0;
      _os_log_impl( &dword_0,  v40,  v41,  "Disambiguating items were not of type INHomeFilter or incorrect slot set",  v42,  2u);
      sub_48D4((uint64_t)v42);
    }

    sub_3E42C();
    goto LABEL_30;
  }

  uint64_t v47 = v9;
  if ((unint64_t)v21 >> 62)
  {
    if (v21 >= 0) {
      uint64_t v46 = v21 & 0xFFFFFFFFFFFFFF8LL;
    }
    else {
      uint64_t v46 = v21;
    }
    swift_bridgeObjectRetain(v21);
    uint64_t v22 = _CocoaArrayWrapper.endIndex.getter(v46);
  }

  else
  {
    uint64_t v22 = *(void *)((char *)&dword_10 + (v21 & 0xFFFFFFFFFFFFFF8LL));
    swift_bridgeObjectRetain(v21);
  }

  uint64_t v48 = a9;
  uint64_t v49 = a8;
  if (!v22)
  {
    uint64_t v25 = _swiftEmptyArrayStorage;
LABEL_29:
    swift_bridgeObjectRelease_n(v21, 2LL);
    sub_257FC();
    uint64_t v44 = v43;
    type metadata accessor for SirikitDeviceState(0LL);
    sub_57AA0(qword_A2D80);
    uint64_t v45 = SirikitDeviceState.__allocating_init(from:)(v54);
    sub_3E1AC(v44, (uint64_t)v25, v45);
    swift_bridgeObjectRelease(v25);
    swift_bridgeObjectRelease(v44);
    swift_release(v45);
LABEL_30:
    sub_6360();
    return;
  }

  if (v22 >= 1)
  {
    uint64_t v23 = 0LL;
    unint64_t v24 = v21 & 0xC000000000000001LL;
    uint64_t v25 = _swiftEmptyArrayStorage;
    uint64_t v26 = (SEL *)&unk_9E000;
    do
    {
      if (v24) {
        id v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v23, v21);
      }
      else {
        id v27 = *(id *)(v21 + 8 * v23 + 32);
      }
      unint64_t v28 = v27;
      id v29 = objc_msgSend(v27, v26[384], v47, v48, v49, v50);
      if (v29)
      {
        uint64_t v30 = v29;
        INSpeakableString.toSpeakableString.getter();

        uint64_t v31 = 0LL;
      }

      else
      {
        uint64_t v31 = 1LL;
      }

      _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0((uint64_t)v15, v31, 1LL, v16);

      if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0((uint64_t)v15, 1LL, v16) == 1)
      {
        sub_5F64((uint64_t)v15, &qword_A13C0);
      }

      else
      {
        uint64_t v32 = v21;
        unint64_t v33 = v24;
        uint64_t v34 = v22;
        uint64_t v35 = v51;
        sub_57AC4(v51, (uint64_t)v15);
        sub_57AC4(v53, v35);
        if ((swift_isUniquelyReferenced_nonNull_native(v25) & 1) == 0) {
          uint64_t v25 = (void *)sub_57A94(0, v25[2] + 1LL);
        }
        unint64_t v37 = v25[2];
        unint64_t v36 = v25[3];
        if (v37 >= v36 >> 1) {
          uint64_t v25 = (void *)sub_57A94(v36 > 1, v37 + 1);
        }
        v25[2] = v37 + 1;
        sub_57AC4( (uint64_t)v25 + ((*(unsigned __int8 *)(v52 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80))
        + *(void *)(v52 + 72) * v37,
          v53);
        uint64_t v22 = v34;
        unint64_t v24 = v33;
        uint64_t v21 = v32;
        uint64_t v26 = (SEL *)&unk_9E000;
      }

      ++v23;
    }

    while (v22 != v23);
    goto LABEL_29;
  }

  __break(1u);
}

void sub_57294( uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9)
{
  v29._uint64_t countAndFlagsBits = a2;
  v29._object = a3;
  unint64_t v18 = sub_1EDD4(v29);
  if (v18 - 2 < 2)
  {
    uint64_t v19 = sub_41BC(&qword_A2DE8);
    uint64_t v20 = (void (*)(uint64_t, uint64_t, void *, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t))method lookup function for DucTemplatingService(v19, &method descriptor for DucTemplatingService.makeParameterValueUnsupportedDialog(app:parameterName:intentResolutionResult:intent:multicardinalValueIndex:_:));
    v20(a1, a2, a3, a4, a5, a6, a7 & 1, a8, a9);
    return;
  }

  if ((_BYTE)v18)
  {
    uint64_t v21 = (int *)sub_57AB4(v18, "unsupportedReason");
    if (v21 == &dword_4)
    {
      sub_3E38C((uint64_t)_swiftEmptyArrayStorage, a8, a9, v22);
    }

    else if (v21 == (int *)((char *)&dword_0 + 2))
    {
      uint64_t v25 = sub_254D4();
      sub_5D12C(v25, v9);
      swift_bridgeObjectRelease(v25);
      type metadata accessor for SirikitDeviceState(0LL);
      sub_57AA0(qword_A2D80);
      uint64_t v26 = SirikitDeviceState.__allocating_init(from:)(v28);
      sub_3E6F4(v9, v26);
      swift_release(v26);
      sub_5F64(v9, &qword_A13C0);
    }

    else if (v21 == (int *)((char *)&dword_0 + 1))
    {
      sub_25780();
      uint64_t v24 = v23;
      sub_3E86C(v23, a8, a9);
      swift_bridgeObjectRelease(v24);
      return;
    }
  }

  else if (sub_57AB4(v18, "unsupportedReason") == (char *)&dword_0 + 1)
  {
    sub_57A64();
    sub_3E6CC();
  }

  sub_6360();
}

char *sub_574D0(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v21._uint64_t countAndFlagsBits = a2;
  v21._object = a3;
  if (sub_1EDD4(v21))
  {
    uint64_t v14 = sub_41BC(&qword_A2DE8);
    uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, void *, void *, uint64_t, uint64_t, uint64_t))method lookup function for DucTemplatingService( v14,  &method descriptor for DucTemplatingService.makeParameterValueConfirmationDialog(app:parameterName:intentResolutionResult:intent:_:));
    return (char *)v15(a1, a2, a3, a4, a5, a6, a7);
  }

  else
  {
    uint64_t result = (char *)[a4 confirmationReason];
    if (result == (_BYTE *)&dword_0 + 1)
    {
      sub_57A74();
      uint64_t v18 = v17;
      uint64_t v19 = sub_254C8();
      uint64_t v20 = *(void *)(v19 + 16);
      swift_bridgeObjectRelease(v19);
      sub_3E0DC(v18, v20 != 0);
      return (char *)swift_bridgeObjectRelease(v18);
    }
  }

  return result;
}

uint64_t sub_575F4(uint64_t a1, uint64_t a2, id a3, uint64_t a4, uint64_t a5)
{
  switch((unint64_t)[a3 code])
  {
    case 6uLL:
      sub_57A74();
      sub_57A80();
      sub_3E3B4(v10, v11, v12, v13);
      goto LABEL_7;
    case 7uLL:
      sub_57A74();
      sub_57A80();
      sub_3E38C(v17, v18, v19, v20);
      goto LABEL_7;
    case 8uLL:
      sub_57A64();
      return sub_3E404();
    case 9uLL:
      sub_57A74();
      sub_57A80();
      sub_3E338(v21, v22, v23);
LABEL_7:
      uint64_t result = swift_bridgeObjectRelease(a2);
      break;
    case 0xAuLL:
      sub_57A64();
      uint64_t result = sub_3E2C0();
      break;
    case 0xBuLL:
      sub_57A64();
      uint64_t result = sub_3E364();
      break;
    case 0xCuLL:
      sub_57A64();
      uint64_t result = sub_3E3DC();
      break;
    case 0xDuLL:
      sub_57A64();
      uint64_t result = sub_3E2E8();
      break;
    case 0xEuLL:
      sub_57A64();
      uint64_t result = sub_3E310();
      break;
    default:
      uint64_t v14 = sub_41BC(&qword_A2DE8);
      uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, id, uint64_t, uint64_t))method lookup function for DucTemplatingService( v14,  &method descriptor for DucTemplatingService.makeFailureHandlingIntentDialog(app:intent:intentResponse:_:));
      uint64_t result = v15(a1, a2, a3, a4, a5);
      break;
  }

  return result;
}

uint64_t sub_57778()
{
  return sub_3E42C();
}

void sub_577A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v17[0] = a2;
  v17[1] = a3;
  uint64_t v6 = type metadata accessor for Locale(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_41BC(&qword_A13C0);
  sub_11F5C();
  __chkstk_darwin(v10);
  sub_39D90();
  sub_8504((void *)(v3 + qword_A2D88), *(void *)(v3 + qword_A2D88 + 24));
  uint64_t v11 = *(void *)(v3 + qword_A2D80 + 24);
  sub_8504((void *)(v3 + qword_A2D80), v11);
  dispatch thunk of DeviceState.siriLocale.getter(v11);
  uint64_t v12 = sub_2619C(a1, (uint64_t)v9);
  uint64_t v14 = v13;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (v14)
  {
    swift_bridgeObjectRetain(v14);
    SpeakableString.init(print:speak:)(v12, v14, 0LL, 0LL);
    uint64_t v15 = sub_57ABC();
    _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v4, 0LL, 1LL, v15);
    swift_bridgeObjectRelease(v14);
  }

  else
  {
    uint64_t v16 = sub_57ABC();
    _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v4, 1LL, 1LL, v16);
  }

  sub_3E558(v4);
  sub_5F64(v4, &qword_A13C0);
  sub_6360();
}

void sub_5792C()
{
}

void sub_57958()
{
}

uint64_t sub_57984()
{
  return swift_release(*(void *)(v0 + qword_A2D90));
}

uint64_t sub_579C0()
{
  uint64_t v0 = DucTemplatingService.deinit();
  sub_423C((void *)(v0 + qword_A2D80));
  sub_423C((void *)(v0 + qword_A2D88));
  swift_release(*(void *)(v0 + qword_A2D90));
  return v0;
}

uint64_t sub_57A14()
{
  uint64_t v0 = sub_579C0();
  return swift_deallocClassInstance(v0, 104LL, 7LL);
}

uint64_t sub_57A30()
{
  return type metadata accessor for SendAnnouncementTemplatingService(0LL);
}

uint64_t sub_57A38()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_57A5C(uint64_t a1)
{
  return sub_56D6C(a1, *(void (**)(char *))(v1 + 16));
}

uint64_t sub_57A64()
{
  return v0;
}

void sub_57A74()
{
}

  ;
}

uint64_t sub_57A94(char a1, int64_t a2)
{
  return sub_5D63C(a1, a2, 1, v2);
}

uint64_t sub_57AA0@<X0>(uint64_t a1@<X8>)
{
  return sub_BB78(v1 + a1, v2 - 120);
}

uint64_t sub_57AAC(uint64_t a1)
{
  return sub_2539C(a1);
}

id sub_57AB4(uint64_t a1, const char *a2)
{
  return [v2 a2];
}

uint64_t sub_57ABC()
{
  return type metadata accessor for SpeakableString(0LL);
}

uint64_t sub_57AC4(uint64_t a1, uint64_t a2)
{
  return v2(a1, a2, v3);
}

uint64_t sub_57ACC(uint64_t a1, uint64_t a2)
{
  v3[12] = a2;
  v3[13] = v2;
  v3[11] = a1;
  uint64_t v4 = sub_59C90();
  v3[14] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[15] = v5;
  v3[16] = sub_38350(v5);
  uint64_t v6 = sub_41BC(&qword_A25D0);
  v3[17] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v3[18] = v7;
  v3[19] = sub_38350(v7);
  sub_38360();
  return sub_382EC(v8, v9, v10);
}

uint64_t sub_57B34()
{
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v2 = v0[18];
  uint64_t v1 = v0[19];
  uint64_t v3 = v0[17];
  uint64_t v4 = v0[12];
  uint64_t v5 = sub_1BDD8();
  v0[20] = sub_4870(v5, (uint64_t)qword_A3EB0);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  uint64_t v7 = (os_log_s *)Logger.logObject.getter(v6);
  os_log_type_t v8 = static os_log_type_t.debug.getter();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v10 = v0[17];
  if (v9)
  {
    uint64_t v43 = v0[18];
    uint64_t v41 = v0[15];
    uint64_t v42 = v0[14];
    uint64_t v11 = (uint8_t *)sub_144F0(12LL);
    uint64_t v44 = sub_144F0(32LL);
    uint64_t v45 = v44;
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v12 = ParameterResolutionRecord.parameter.getter(v10);
    uint64_t v13 = ParameterIdentifier.name.getter(v12);
    unint64_t v15 = v14;
    sub_59C70(v13, v14, v16, v17, v18, v19, v20, v21, (uint64_t)(v11 + 4), v41, v42);
    v0[10] = sub_68DC4(v13, v15, &v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 10, v0 + 11, v40, v11 + 12);
    swift_bridgeObjectRelease(v15);
    sub_59C50(v43);
    sub_14550(&dword_0, v7, v8, "#SendAnnouncementIntentHandledStrategy makeUnsupportedValueOutput for %s", v11);
    sub_17528(v44, v22, (uint64_t)&type metadata for Any + 8);
    sub_48D4(v44);
    sub_48D4((uint64_t)v11);
  }

  else
  {
    sub_59C50(v0[18]);
  }

  uint64_t v23 = v0[14];
  uint64_t v24 = v0[15];
  uint64_t v25 = ParameterResolutionRecord.parameter.getter(v0[17]);
  uint64_t v26 = ParameterIdentifier.name.getter(v25);
  unint64_t v28 = v27;
  sub_59C10(*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8));
  v46._uint64_t countAndFlagsBits = v26;
  v46._object = v28;
  int v29 = sub_1EDD4(v46);
  if ((v29 - 2) >= 2)
  {
    if (v29)
    {
      uint64_t v38 = (void *)swift_task_alloc(dword_A2E4C);
      v0[21] = v38;
      *uint64_t v38 = v0;
      v38[1] = sub_57E08;
      sub_59BD0(v0[12]);
      sub_59B98();
      return sub_590B0(v39);
    }

    else
    {
      unint64_t v36 = (void *)swift_task_alloc(dword_A2E54);
      v0[22] = v36;
      *unint64_t v36 = v0;
      v36[1] = sub_57FB0;
      sub_59BD0(v0[12]);
      sub_59B98();
      return sub_595D8(v37);
    }
  }

  else
  {
    sub_59CB4();
    os_log_type_t v30 = sub_A9E8();
    if (sub_AA1C(v30))
    {
      uint64_t v31 = (_WORD *)sub_144F0(2LL);
      sub_176AC(v31);
      sub_59B2C( &dword_0,  v32,  v33,  "#SendAnnouncementIntentHandledStrategy dialogExecutionResult is nil - returning generic error");
      sub_48D4(v23);
    }

    sub_59CA0();
    uint64_t v34 = (void *)swift_task_alloc(dword_A237C);
    v0[26] = v34;
    sub_38428(v34, (uint64_t)sub_581CC);
    sub_59B98();
    return sub_3F26C();
  }

uint64_t sub_57E08(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  BOOL v9 = v3;
  void v3[2] = v2;
  v3[3] = a1;
  v3[4] = v1;
  uint64_t v4 = (void *)*v2;
  sub_38374(v3[21], &v9);
  if (v1)
  {
    sub_59CBC();
    sub_3838C();
    return sub_38328((uint64_t (*)(void))v4[1]);
  }

  else
  {
    sub_38360();
    return sub_59B54(v6, v7, v8);
  }

uint64_t sub_57E70()
{
  uint64_t v1 = (void *)v0[3];
  v0[23] = v1;
  if (v1)
  {
    uint64_t v2 = sub_384A8();
    sub_A8BC(v2);
    id v3 = v1;
    void v0[9] = ResponseFactory.init()();
    uint64_t v4 = sub_41BC(&qword_A2100);
    uint64_t v5 = sub_D31C(v4);
    *(_OWORD *)(v5 + 16) = xmmword_6FCA0;
    *(void *)(v5 + 3sub_423C(v0 + 2) = v3;
    sub_59BF0(v5, v6);
    v0[24] = v16;
    uint64_t v7 = async function pointer to dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)[1];
    id v8 = v3;
    BOOL v9 = (void *)swift_task_alloc(v7);
    v0[25] = v9;
    *BOOL v9 = v0;
    v9[1] = sub_58158;
    sub_59C38();
    return sub_4DD88();
  }

  else
  {
    sub_59CB4();
    os_log_type_t v11 = sub_A9E8();
    if (sub_AA1C(v11))
    {
      uint64_t v12 = (_WORD *)sub_144F0(2LL);
      sub_176AC(v12);
      sub_59B2C( &dword_0,  v13,  v14,  "#SendAnnouncementIntentHandledStrategy dialogExecutionResult is nil - returning generic error");
      sub_48D4(0LL);
    }

    sub_59CA0();
    unint64_t v15 = (void *)swift_task_alloc(dword_A237C);
    v0[26] = v15;
    sub_38428(v15, (uint64_t)sub_581CC);
    return sub_59B5C();
  }

uint64_t sub_57FB0(uint64_t a1)
{
  id v3 = (void *)*v2;
  BOOL v9 = v3;
  v3[5] = v2;
  v3[6] = a1;
  v3[7] = v1;
  uint64_t v4 = (void *)*v2;
  sub_38374(v3[22], &v9);
  if (v1)
  {
    sub_59CBC();
    sub_3838C();
    return sub_38328((uint64_t (*)(void))v4[1]);
  }

  else
  {
    sub_38360();
    return sub_59B54(v6, v7, v8);
  }

uint64_t sub_58018()
{
  uint64_t v1 = (void *)v0[6];
  v0[23] = v1;
  if (v1)
  {
    uint64_t v2 = sub_384A8();
    sub_A8BC(v2);
    id v3 = v1;
    void v0[9] = ResponseFactory.init()();
    uint64_t v4 = sub_41BC(&qword_A2100);
    uint64_t v5 = sub_D31C(v4);
    *(_OWORD *)(v5 + 16) = xmmword_6FCA0;
    *(void *)(v5 + 3sub_423C(v0 + 2) = v3;
    sub_59BF0(v5, v6);
    v0[24] = v16;
    uint64_t v7 = async function pointer to dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)[1];
    id v8 = v3;
    BOOL v9 = (void *)swift_task_alloc(v7);
    v0[25] = v9;
    *BOOL v9 = v0;
    v9[1] = sub_58158;
    sub_59C38();
    return sub_4DD88();
  }

  else
  {
    sub_59CB4();
    os_log_type_t v11 = sub_A9E8();
    if (sub_AA1C(v11))
    {
      uint64_t v12 = (_WORD *)sub_144F0(2LL);
      sub_176AC(v12);
      sub_59B2C( &dword_0,  v13,  v14,  "#SendAnnouncementIntentHandledStrategy dialogExecutionResult is nil - returning generic error");
      sub_48D4(0LL);
    }

    sub_59CA0();
    unint64_t v15 = (void *)swift_task_alloc(dword_A237C);
    v0[26] = v15;
    sub_38428(v15, (uint64_t)sub_581CC);
    return sub_59B5C();
  }

uint64_t sub_58158()
{
  return sub_382EC(v1, v2, v3);
}

uint64_t sub_58190()
{
  uint64_t v1 = *(void **)(v0 + 184);

  swift_release(*(void *)(v0 + 72));
  sub_59CC8();
  sub_AA14();
  uint64_t v2 = (uint64_t (*)(void))sub_38410();
  return sub_6698(v2);
}

uint64_t sub_581CC()
{
  *(void *)(v2 + 216) = v1;
  swift_task_dealloc(v4);
  if (!v1) {
    *(void *)(v2 + 224) = v0;
  }
  sub_38360();
  return sub_38340(v5, v6, v7);
}

uint64_t sub_58220()
{
  uint64_t v1 = (void *)v0[28];
  uint64_t v2 = sub_384A8();
  sub_A8BC(v2);
  v0[8] = sub_384BC();
  uint64_t v3 = sub_41BC(&qword_A2100);
  uint64_t v4 = sub_D31C(v3);
  *(_OWORD *)(v4 + 16) = xmmword_6FCA0;
  *(void *)(v4 + 3sub_423C(v0 + 2) = v1;
  sub_59BF0(v4, v5);
  v0[29] = v10;
  uint64_t v6 = async function pointer to dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)[1];
  id v7 = v1;
  id v8 = (void *)swift_task_alloc(v6);
  v0[30] = v8;
  *id v8 = v0;
  v8[1] = sub_582EC;
  return sub_4DD88();
}

uint64_t sub_582EC()
{
  return sub_382EC(v1, v2, v3);
}

uint64_t sub_58324()
{
  swift_release(*(void *)(v0 + 64));
  sub_59CC8();
  sub_AA14();
  uint64_t v1 = (uint64_t (*)(void))sub_38410();
  return sub_6698(v1);
}

uint64_t sub_5835C()
{
  return sub_38328(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_58394(uint64_t a1)
{
  v1[4] = a1;
  uint64_t v2 = sub_59C90();
  v1[5] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v1[6] = v3;
  v1[7] = sub_38350(v3);
  uint64_t v4 = sub_41BC(&qword_A25D0);
  v1[8] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  void v1[9] = v5;
  v1[10] = sub_38350(v5);
  sub_38360();
  return sub_382EC(v6, v7, v8);
}

void sub_583F8()
{
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v1 = v0[4];
  uint64_t v3 = v0[9];
  uint64_t v2 = v0[10];
  uint64_t v4 = v0[8];
  uint64_t v5 = sub_1BDD8();
  sub_4870(v5, (uint64_t)qword_A3EB0);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  uint64_t v7 = (os_log_s *)Logger.logObject.getter(v6);
  os_log_type_t v8 = static os_log_type_t.debug.getter();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v10 = v0[8];
  if (v9)
  {
    uint64_t v24 = v0[6];
    uint64_t v25 = v0[5];
    uint64_t v27 = v0[9];
    uint64_t v11 = swift_slowAlloc(22LL, -1LL);
    uint64_t v28 = sub_144F0(64LL);
    uint64_t v29 = v28;
    *(_DWORD *)uint64_t v11 = 136315394;
    os_log_type_t type = v8;
    v0[2] = sub_68DC4(0xD000000000000034LL, 0x8000000000078B60LL, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 2, v0 + 3, v11 + 4, v11 + 12);
    *(_WORD *)(v11 + sub_423C(v0 + 12) = 2080;
    uint64_t v12 = ParameterResolutionRecord.parameter.getter(v10);
    uint64_t v13 = ParameterIdentifier.name.getter(v12);
    unint64_t v15 = v14;
    sub_59C70(v13, v14, v16, v17, v18, v19, v20, v21, (uint64_t)(v0 + 3), v24, v25);
    v0[3] = sub_68DC4(v13, v15, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v23, v0 + 4, v11 + 14, v11 + 22);
    swift_bridgeObjectRelease(v15);
    sub_38510(v27);
    _os_log_impl( &dword_0,  v7,  type,  "#SendAnnouncementUnsupportedValueFlowStrategy %s: unsupported for %s",  (uint8_t *)v11,  0x16u);
    swift_arrayDestroy(v28, 2LL, (char *)&type metadata for Any + 8);
    sub_48D4(v28);
    sub_48D4(v11);
  }

  else
  {
    sub_38510(v0[9]);
  }

  ParameterResolutionRecord.intent.getter(v0[8]);
  sub_3838C();
  sub_383D4();
  sub_59B98();
  __asm { BR              X1 }

uint64_t sub_5862C(uint64_t a1, uint64_t a2)
{
  v3[19] = a2;
  v3[20] = v2;
  v3[18] = a1;
  uint64_t v4 = type metadata accessor for HomeCommunicationError(0LL);
  v3[21] = v4;
  v3[22] = sub_38350(*(void *)(v4 - 8));
  uint64_t v5 = type metadata accessor for OutputGenerationManifest(0LL);
  v3[23] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[24] = v6;
  v3[25] = sub_38350(v6);
  uint64_t v7 = type metadata accessor for HomeAppLaunchModel(0LL);
  v3[26] = v7;
  v3[27] = sub_38350(*(void *)(v7 - 8));
  uint64_t v8 = sub_41BC(&qword_A13C0);
  v3[28] = sub_38350(*(void *)(v8 - 8));
  uint64_t v9 = type metadata accessor for Locale(0LL);
  v3[29] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v3[30] = v10;
  v3[31] = sub_38350(v10);
  sub_38360();
  return sub_382EC(v11, v12, v13);
}

uint64_t sub_586DC()
{
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v2 = sub_1BDD8();
  uint64_t v3 = sub_4870(v2, (uint64_t)qword_A3EB0);
  *(void *)(v1 + 256) = v3;
  sub_3243C();
  os_log_type_t v4 = sub_A9E8();
  if (os_log_type_enabled(v0, v4))
  {
    uint64_t v5 = (uint8_t *)sub_144F0(2LL);
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_0, v0, v4, "#SendAnnouncementIntentHandledStrategy makeLaunchAppWithIntentOutput", v5, 2u);
    sub_48D4((uint64_t)v5);
  }

  uint64_t v6 = *(void *)(v1 + 160);

  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v9 = App.appIdentifier.getter(v8);
  *(void *)(v1 + 264) = v9;
  *(void *)(v1 + 27sub_423C(v0 + 2) = v10;
  if (v10)
  {
    uint64_t v12 = *(void *)(v1 + 240);
    uint64_t v11 = *(void *)(v1 + 248);
    uint64_t v13 = *(void *)(v1 + 232);
    uint64_t v14 = *(void *)(v1 + 160);
    uint64_t v15 = type metadata accessor for AppInformationResolver(0LL);
    sub_A8BC(v15);
    uint64_t v16 = swift_retain(v7);
    uint64_t v17 = AppInformationResolver.init(app:)(v16);
    static Device.current.getter((void *)(v1 + 16), v17);
    uint64_t v18 = *(void *)(v1 + 40);
    sub_8504((void *)(v1 + 16), v18);
    dispatch thunk of DeviceState.siriLocale.getter(v18);
    uint64_t v19 = dispatch thunk of AppInformationResolver.getLocalizedAppDisplayName(inLocale:)(v11);
    uint64_t v21 = v20;
    swift_release(v17);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
    sub_423C((void *)(v1 + 16));
    *(void *)(v1 + 280) = *(void *)(v14 + 56);
    uint64_t v22 = *(void *)(v1 + 224);
    if (v21)
    {
      swift_bridgeObjectRetain(v21);
      SpeakableString.init(print:speak:)(v19, v21, 0LL, 0LL);
      uint64_t v23 = type metadata accessor for SpeakableString(0LL);
      _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v22, 0LL, 1LL, v23);
      swift_bridgeObjectRelease(v21);
    }

    else
    {
      uint64_t v35 = type metadata accessor for SpeakableString(0LL);
      _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v22, 1LL, 1LL, v35);
    }

    unint64_t v36 = (void *)swift_task_alloc(dword_A238C);
    *(void *)(v1 + 28sub_423C(v0 + 8) = v36;
    *unint64_t v36 = v1;
    v36[1] = sub_589E4;
    uint64_t v37 = sub_59BD0(*(void *)(v1 + 224));
    return sub_3F4C8(v37);
  }

  else
  {
    uint64_t v24 = (void *)v3;
    Logger.logObject.getter(v9);
    os_log_type_t v25 = sub_1C040();
    if (sub_AA1C(v25))
    {
      uint64_t v26 = (_WORD *)sub_144F0(2LL);
      sub_176AC(v26);
      sub_59B2C(&dword_0, v27, v28, "#SendAnnouncementIntentHandledStrategy missing app identifier");
      sub_48D4(v6);
    }

    uint64_t v30 = *(void *)(v1 + 168);
    uint64_t v29 = *(void *)(v1 + 176);

    swift_storeEnumTagMultiPayload(v29, v30, 10LL);
    sub_A880( &qword_A0848,  type metadata accessor for HomeCommunicationError,  (uint64_t)&protocol conformance descriptor for HomeCommunicationError);
    swift_allocError(v30, v31, 0LL, 0LL);
    sub_108C0(v32);
    sub_17180(v29, type metadata accessor for HomeCommunicationError);
    swift_willThrow(v33);
    sub_59B84();
    sub_AA14();
    sub_3838C();
    sub_383D4();
    sub_46ACC();
    return (*(uint64_t (**)(void))(v1 + 8))();
  }

uint64_t sub_589E4()
{
  v2[37] = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    sub_25B54(v2[28]);
    sub_D304();
  }

  else
  {
    uint64_t v5 = v2[28];
    v2[38] = v0;
    sub_25B54(v5);
  }

  sub_38360();
  return sub_38340(v6, v7, v8);
}

uint64_t sub_58A50()
{
  uint64_t v1 = v0[38];
  uint64_t v3 = v0[33];
  uint64_t v2 = v0[34];
  uint64_t v4 = v0[25];
  uint64_t v13 = v0[24];
  uint64_t v14 = v0[23];
  uint64_t v5 = v0[20];
  uint64_t v6 = dispatch thunk of LabelExecutionResult.subscript.getter();
  uint64_t v8 = v7;
  swift_release(v1);
  v0[12] = v3;
  v0[13] = v2;
  Loggable.init(wrappedValue:)(v0 + 12, &type metadata for String);
  v0[14] = v6;
  v0[15] = v8;
  Loggable.init(wrappedValue:)(v0 + 14, &type metadata for String);
  uint64_t v9 = OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin40SendAnnouncementUnsupportedValueStrategy_completionOutputManifest;
  v0[39] = OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin40SendAnnouncementUnsupportedValueStrategy_completionOutputManifest;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v4, v5 + v9, v14);
  OutputGenerationManifest.responseViewId.setter(0xD00000000000001FLL, 0x80000000000767D0LL);
  uint64_t v10 = (void *)swift_task_alloc(dword_A2E4C);
  v0[40] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_58B58;
  sub_59BD0(v0[19]);
  sub_59C1C();
  return sub_590B0(v11);
}

uint64_t sub_58B58(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *(void *)(*v2 + 320);
  *(void *)(v3 + 32sub_423C(v0 + 8) = a1;
  *(void *)(v3 + 336) = v1;
  swift_task_dealloc(v4);
  sub_38360();
  return sub_382EC(v5, v6, v7);
}

uint64_t sub_58BB8(uint64_t a1)
{
  uint64_t v3 = (void *)v2[41];
  if (v3)
  {
    uint64_t v4 = v2[27];
    uint64_t v5 = sub_384A8();
    sub_A8BC(v5);
    v2[17] = sub_384BC();
    uint64_t v6 = type metadata accessor for HomeCommunicationSnippetModel(0LL);
    v2[10] = v6;
    sub_A880( &qword_A1F40,  type metadata accessor for HomeCommunicationSnippetModel,  (uint64_t)&protocol conformance descriptor for HomeCommunicationSnippetModel);
    v2[11] = v7;
    uint64_t v8 = sub_A800(v2 + 7);
    sub_EB48(v4, (uint64_t)v8);
    swift_storeEnumTagMultiPayload(v8, v6, 0LL);
    uint64_t v9 = sub_41BC(&qword_A2100);
    uint64_t v10 = (__n128 *)sub_D31C(v9);
    sub_59BFC(v10, v11, (__n128)xmmword_6FCA0);
    v2[43] = v22;
    uint64_t v12 = async function pointer to dispatch thunk of ResponseGenerating.makeResponseOutput(conversationModel:dialog:outputGenerationManifest:)[1];
    id v13 = v3;
    uint64_t v14 = (void *)swift_task_alloc(v12);
    v2[44] = v14;
    *uint64_t v14 = v2;
    v14[1] = sub_58D60;
    return dispatch thunk of ResponseGenerating.makeResponseOutput(conversationModel:dialog:outputGenerationManifest:)( v2[18],  v2 + 7,  v22,  v2[25],  v5);
  }

  else
  {
    uint64_t v16 = (void *)v2[32];
    Logger.logObject.getter(a1);
    os_log_type_t v17 = sub_A9E8();
    if (sub_AA1C(v17))
    {
      uint64_t v18 = (_WORD *)sub_144F0(2LL);
      sub_176AC(v18);
      sub_59B2C( &dword_0,  v19,  v20,  "#SendAnnouncementIntentHandledStrategy dialogExecutionResult is nil - returning generic error");
      sub_48D4(v1);
    }

    uint64_t v21 = (void *)swift_task_alloc(dword_A237C);
    v2[45] = v21;
    *uint64_t v21 = v2;
    v21[1] = sub_58E10;
    return sub_59B5C();
  }

uint64_t sub_58D60()
{
  uint64_t v1 = v0 + 7;
  uint64_t v2 = v0[43];
  sub_38318(v0[44]);
  swift_bridgeObjectRelease(v2);
  sub_423C(v1);
  sub_38360();
  return sub_59B54(v3, v4, v5);
}

uint64_t sub_58DAC()
{
  uint64_t v2 = sub_59C10(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_59C98(v2, type metadata accessor for HomeAppLaunchModel);
  swift_release(*(void *)(v0 + 136));
  sub_59B84();
  sub_AA14();
  sub_3838C();
  sub_383D4();
  sub_46ACC();
  uint64_t v3 = (uint64_t (*)(void))sub_38410();
  return sub_38328(v3);
}

uint64_t sub_58E10()
{
  *(void *)(v2 + 36sub_423C(v0 + 8) = v1;
  swift_task_dealloc(v4);
  if (!v1) {
    *(void *)(v2 + 376) = v0;
  }
  sub_38360();
  return sub_38340(v5, v6, v7);
}

uint64_t sub_58E64()
{
  uint64_t v1 = (void *)v0[47];
  uint64_t v2 = v0[39];
  uint64_t v3 = v0[20];
  uint64_t v4 = sub_384A8();
  sub_A8BC(v4);
  v0[16] = sub_384BC();
  uint64_t v5 = sub_41BC(&qword_A2100);
  uint64_t v6 = (__n128 *)sub_D31C(v5);
  sub_59BFC(v6, v7, (__n128)xmmword_6FCA0);
  v0[48] = v12;
  uint64_t v8 = async function pointer to dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)[1];
  id v9 = v1;
  uint64_t v10 = (void *)swift_task_alloc(v8);
  v0[49] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_58F34;
  return dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)( v0[18],  v12,  v3 + v2,  v4);
}

uint64_t sub_58F34()
{
  return sub_382EC(v1, v2, v3);
}

uint64_t sub_58F6C()
{
  uint64_t v2 = sub_59C10(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_59C98(v2, type metadata accessor for HomeAppLaunchModel);
  swift_release(*(void *)(v0 + 128));
  sub_59B84();
  sub_AA14();
  sub_3838C();
  sub_383D4();
  sub_46ACC();
  uint64_t v3 = (uint64_t (*)(void))sub_38410();
  return sub_38328(v3);
}

uint64_t sub_58FD0()
{
  return sub_59B40(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_59010()
{
  uint64_t v1 = sub_59BDC();
  sub_59C98(v1, type metadata accessor for HomeAppLaunchModel);
  sub_59B70();
  sub_3838C();
  sub_383D4();
  sub_46ACC();
  sub_46B8C();
  return sub_59B40(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_59060()
{
  uint64_t v1 = sub_59BDC();
  sub_59C98(v1, type metadata accessor for HomeAppLaunchModel);
  sub_59B70();
  sub_3838C();
  sub_383D4();
  sub_46ACC();
  sub_46B8C();
  return sub_59B40(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_590B0(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  uint64_t v3 = sub_41BC(&qword_A13C0);
  v2[7] = sub_38350(*(void *)(v3 - 8));
  uint64_t v4 = sub_59C90();
  v2[8] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  void v2[9] = v5;
  v2[10] = sub_38350(v5);
  sub_38360();
  return sub_382EC(v6, v7, v8);
}

uint64_t sub_5910C()
{
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 64);
  uint64_t v4 = sub_41BC(&qword_A25D0);
  uint64_t v5 = ParameterResolutionRecord.parameter.getter(v4);
  ParameterIdentifier.name.getter(v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v6 = (void *)ParameterResolutionRecord.result.getter(v4);
  uint64_t v7 = (int *)[v6 unsupportedReason];

  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v8 = sub_1BDD8();
  sub_4870(v8, (uint64_t)qword_A3EB0);
  sub_3243C();
  os_log_type_t v9 = sub_1C040();
  if (os_log_type_enabled((os_log_t)v6, v9))
  {
    uint64_t v10 = (uint8_t *)sub_144F0(12LL);
    uint64_t v11 = sub_144F0(32LL);
    v32[0] = v11;
    *(_DWORD *)uint64_t v10 = 136315138;
    *(void *)(v0 + 16) = v7;
    *(_BYTE *)(v0 + 24) = 0;
    uint64_t v12 = sub_41BC(&qword_A2F30);
    uint64_t v13 = String.init<A>(describing:)(v0 + 16, v12);
    unint64_t v15 = v14;
    *(void *)(v0 + 3sub_423C(v0 + 2) = sub_68DC4(v13, v14, v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40, v10 + 4, v10 + 12);
    swift_bridgeObjectRelease(v15);
    sub_14550( &dword_0,  (os_log_s *)v6,  v9,  "#SendAnnouncementIntentHandledStrategy Unsupported recipient reason %s",  v10);
    sub_17528(v11, v16, (uint64_t)&type metadata for Any + 8);
    sub_48D4(v11);
    sub_48D4((uint64_t)v10);
  }

  if (v7 == &dword_4)
  {
    uint64_t v23 = (void *)swift_task_alloc(dword_A235C);
    *(void *)(v0 + 12sub_423C(v0 + 8) = v23;
    *uint64_t v23 = v0;
    v23[1] = sub_5953C;
    sub_59BD0((uint64_t)_swiftEmptyArrayStorage);
    sub_59BB4();
    return sub_3EFDC(v24);
  }

  else
  {
    if (v7 != (int *)((char *)&dword_0 + 2))
    {
      if (v7 == (int *)((char *)&dword_0 + 1))
      {
        os_log_type_t v17 = (void *)sub_59D00();
        sub_25780();
        *(void *)(v0 + 8sub_423C(v0 + 8) = v18;

        uint64_t v19 = (void *)swift_task_alloc(dword_A23BC);
        *(void *)(v0 + 96) = v19;
        sub_38428(v19, (uint64_t)sub_5944C);
        sub_59BB4();
        return sub_3FA18(v20);
      }

LABEL_10:
      swift_task_dealloc(*(void *)(v0 + 80));
      sub_AA14();
      sub_59BB4();
      __asm { BR              X1 }
    }

    uint64_t v25 = *(void *)(v0 + 56);
    uint64_t v26 = (void *)sub_59D00();
    uint64_t v27 = sub_254D4();

    sub_5D12C(v27, v25);
    swift_bridgeObjectRelease(v27);
    uint64_t v28 = type metadata accessor for SirikitDeviceState(0LL);
    static Device.current.getter(v32, v28);
    *(void *)(v0 + 104) = SirikitDeviceState.__allocating_init(from:)(v32);
    uint64_t v29 = (void *)swift_task_alloc(dword_A23B4);
    *(void *)(v0 + 1sub_423C(v0 + 12) = v29;
    *uint64_t v29 = v0;
    v29[1] = sub_594C0;
    sub_59BD0(*(void *)(v0 + 56));
    sub_59BB4();
    return sub_3F824(v30, v31);
  }

uint64_t sub_5944C()
{
  uint64_t v3 = v2[11];
  uint64_t v4 = *v1;
  sub_38374(v2[12], v5);
  swift_bridgeObjectRelease(v3);
  if (v0)
  {
    swift_task_dealloc(v2[10]);
    sub_3838C();
    return sub_38328(*(uint64_t (**)(void))(v4 + 8));
  }

  else
  {
    sub_59CA8();
    sub_AA14();
    uint64_t v7 = sub_59C80();
    return sub_59B68(v7, v8);
  }

uint64_t sub_594C0()
{
  v1[15] = v0;
  swift_task_dealloc(v3);
  uint64_t v4 = v1[13];
  sub_25B54(v1[7]);
  swift_release(v4);
  if (v0)
  {
    sub_38360();
    return sub_59B54(v5, v6, v7);
  }

  else
  {
    sub_59CA8();
    sub_AA14();
    uint64_t v9 = sub_59C80();
    return sub_59B68(v9, v10);
  }

uint64_t sub_5953C()
{
  uint64_t v3 = *v2;
  sub_38374(*(void *)(v1 + 128), v4);
  swift_task_dealloc(*(void *)(v1 + 80));
  if (v0)
  {
    sub_3838C();
    return sub_38308(*(uint64_t (**)(void))(v3 + 8));
  }

  else
  {
    sub_AA14();
    uint64_t v6 = sub_59C80();
    return sub_3FC50(v6, v7);
  }

uint64_t sub_595A0()
{
  return sub_38328(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_595D8(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  uint64_t v3 = sub_59C90();
  v2[7] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[8] = v4;
  void v2[9] = sub_38350(v4);
  sub_38360();
  return sub_382EC(v5, v6, v7);
}

uint64_t sub_5961C()
{
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v4 = sub_41BC(&qword_A25D0);
  uint64_t v5 = ParameterResolutionRecord.parameter.getter(v4);
  ParameterIdentifier.name.getter(v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v6 = (void *)ParameterResolutionRecord.result.getter(v4);
  uint64_t v7 = (char *)[v6 unsupportedReason];

  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v8 = sub_1BDD8();
  sub_4870(v8, (uint64_t)qword_A3EB0);
  sub_3243C();
  os_log_type_t v9 = sub_1C040();
  if (os_log_type_enabled((os_log_t)v6, v9))
  {
    uint64_t v10 = (uint8_t *)sub_144F0(12LL);
    uint64_t v11 = sub_144F0(32LL);
    uint64_t v20 = v11;
    *(_DWORD *)uint64_t v10 = 136315138;
    *(void *)(v0 + 16) = v7;
    *(_BYTE *)(v0 + 24) = 0;
    uint64_t v12 = sub_41BC(&qword_A2F28);
    uint64_t v13 = String.init<A>(describing:)(v0 + 16, v12);
    unint64_t v15 = v14;
    *(void *)(v0 + 3sub_423C(v0 + 2) = sub_68DC4(v13, v14, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40, v10 + 4, v10 + 12);
    swift_bridgeObjectRelease(v15);
    sub_14550( &dword_0,  (os_log_s *)v6,  v9,  "#SendAnnouncementIntentHandledStrategy Unsupported announcement reason %s",  v10);
    sub_17528(v11, v16, (uint64_t)&type metadata for Any + 8);
    sub_48D4(v11);
    sub_48D4((uint64_t)v10);
  }

  if (v7 != (_BYTE *)&dword_0 + 1)
  {
LABEL_8:
    swift_task_dealloc(*(void *)(v0 + 72));
    sub_59C1C();
    __asm { BR              X1 }
  }

  os_log_type_t v17 = (void *)swift_task_alloc(dword_A239C);
  *(void *)(v0 + 80) = v17;
  sub_38428(v17, (uint64_t)sub_59848);
  sub_59C1C();
  return sub_3F71C();
}

uint64_t sub_59848()
{
  uint64_t v4 = *v3;
  sub_38374(*(void *)(v2 + 80), v5);
  swift_task_dealloc(*(void *)(v2 + 72));
  if (v1) {
    return sub_38308(*(uint64_t (**)(void))(v4 + 8));
  }
  else {
    return sub_3FC50(v0, *(uint64_t (**)(void))(v4 + 8));
  }
}

void sub_598A0()
{
  uint64_t v1 = type metadata accessor for OutputGenerationManifest(0LL);
  sub_17588(v1);
  sub_AA5C();
}

uint64_t sub_598E8()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_5990C()
{
  return type metadata accessor for SendAnnouncementUnsupportedValueStrategy(0LL);
}

uint64_t type metadata accessor for SendAnnouncementUnsupportedValueStrategy(uint64_t a1)
{
  uint64_t result = qword_A2E20;
  if (!qword_A2E20) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SendAnnouncementUnsupportedValueStrategy);
  }
  return result;
}

uint64_t sub_5994C(uint64_t a1)
{
  v4[0] = "(";
  v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  void v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  uint64_t result = type metadata accessor for OutputGenerationManifest(319LL);
  if (v3 <= 0x3F)
  {
    void v4[3] = *(void *)(result - 8) + 64LL;
    uint64_t result = swift_updateClassMetadata2(a1, 256LL, 4LL, v4, a1 + 80);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_599D4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc(dword_A2E34);
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_37EE8;
  return sub_57ACC(a1, a2);
}

uint64_t sub_59A38(uint64_t a1)
{
  unint64_t v3 = (void *)swift_task_alloc(dword_A2E3C);
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_59A84;
  return sub_58394(a1);
}

uint64_t sub_59A84(uint64_t a1)
{
  uint64_t v4 = sub_38318(*((void *)*v2 + 2));
  if (!v1) {
    uint64_t v4 = a1;
  }
  return sub_59B68(v4, v2[1]);
}

uint64_t sub_59AC8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc(dword_A2E44);
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_382D8;
  return sub_5862C(a1, a2);
}

void sub_59B2C(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
}

uint64_t sub_59B40(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_59B54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_task_switch(a1, a2, a3);
}

uint64_t sub_59B5C()
{
  return sub_3F26C();
}

uint64_t sub_59B68(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_59B70()
{
  return swift_task_dealloc(*(void *)(v0 + 248));
}

uint64_t sub_59B84()
{
  return swift_task_dealloc(*(void *)(v0 + 248));
}

  ;
}

  ;
}

uint64_t sub_59BD0@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t sub_59BDC()
{
  return (*(uint64_t (**)(void, void))(v0[24] + 8LL))(v0[25], v0[23]);
}

uint64_t sub_59BF0(uint64_t a1, uint64_t a2)
{
  return specialized Array._endMutation()(a1, a2);
}

uint64_t sub_59BFC(__n128 *a1, uint64_t a2, __n128 a3)
{
  a1[1] = a3;
  a1[2].n128_u64[0] = v3;
  return specialized Array._endMutation()(a1, a2);
}

uint64_t sub_59C10@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v1, v2);
}

  ;
}

  ;
}

uint64_t sub_59C50@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v1, v2);
}

void sub_59C60(void *a1@<X8>)
{
}

uint64_t sub_59C70( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a10 + 8))(v11, a11);
}

uint64_t sub_59C80()
{
  return v0;
}

uint64_t sub_59C90()
{
  return type metadata accessor for ParameterIdentifier(0LL);
}

void sub_59C98(uint64_t a1, uint64_t (*a2)(void))
{
}

void sub_59CA0()
{
}

uint64_t sub_59CA8()
{
  return swift_task_dealloc(*(void *)(v0 + 80));
}

uint64_t sub_59CB4()
{
  return Logger.logObject.getter();
}

uint64_t sub_59CBC()
{
  return swift_task_dealloc(*(void *)(v0 + 152));
}

uint64_t sub_59CC8()
{
  return swift_task_dealloc(*(void *)(v0 + 152));
}

void sub_59CD4(void *a1@<X8>)
{
  *a1 = *v1;
}

void sub_59CE0()
{
  *(void *)(v1 - sub_423C(v0 + 8) = *v0;
}

unint64_t sub_59CF4()
{
  v3._uint64_t countAndFlagsBits = v0;
  v3._object = v1;
  return sub_1EDD4(v3);
}

uint64_t sub_59D00()
{
  return ParameterResolutionRecord.intent.getter(v0);
}

uint64_t sub_59D0C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16LL) & ~(unint64_t)v4);
    swift_retain(v5);
  }

  else
  {
    uint64_t v8 = a2[1];
    *(void *)(a1 + sub_423C(v0 + 8) = v8;
    os_log_type_t v9 = a2 + 2;
    __int128 v10 = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 40) = v10;
    uint64_t v11 = v10;
    uint64_t v12 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v10 - 8);
    swift_retain(v5);
    swift_retain(v8);
    v12(a1 + 16, v9, v11);
    uint64_t v13 = *(int *)(a3 + 28);
    unint64_t v14 = (void *)(a1 + v13);
    unint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = type metadata accessor for IdentifiedUser(0LL);
    if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0((uint64_t)v15, 1LL, v16))
    {
      uint64_t v17 = sub_41BC(&qword_A27E8);
      memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v16 - 8) + 16LL))(v14, v15, v16);
      _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0((uint64_t)v14, 0LL, 1LL, v16);
    }

    uint64_t v18 = *(int *)(a3 + 32);
    __int128 v19 = *(_OWORD *)((char *)a2 + v18 + 24);
    *(_OWORD *)(a1 + v18 + 24) = v19;
    (**(void (***)(void))(v19 - 8))();
  }

  return a1;
}

uint64_t sub_59E58(void *a1, uint64_t a2)
{
  uint64_t v4 = (uint64_t)a1 + *(int *)(a2 + 28);
  uint64_t v5 = type metadata accessor for IdentifiedUser(0LL);
  return sub_423C((void *)((char *)a1 + *(int *)(a2 + 32)));
}

uint64_t sub_59EDC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + sub_423C(v0 + 8) = v7;
  uint64_t v8 = a2 + 2;
  __int128 v9 = *(_OWORD *)(a2 + 5);
  *(_OWORD *)(a1 + 40) = v9;
  uint64_t v10 = v9;
  uint64_t v11 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v9 - 8);
  swift_retain(v6);
  swift_retain(v7);
  v11(a1 + 16, v8, v10);
  uint64_t v12 = *(int *)(a3 + 28);
  uint64_t v13 = (void *)(a1 + v12);
  unint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = type metadata accessor for IdentifiedUser(0LL);
  if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0((uint64_t)v14, 1LL, v15))
  {
    uint64_t v16 = sub_41BC(&qword_A27E8);
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void *, char *, uint64_t))(*(void *)(v15 - 8) + 16LL))(v13, v14, v15);
    _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0((uint64_t)v13, 0LL, 1LL, v15);
  }

  uint64_t v17 = *(int *)(a3 + 32);
  __int128 v18 = *(_OWORD *)((char *)a2 + v17 + 24);
  *(_OWORD *)(a1 + v17 + 24) = v18;
  (**(void (***)(void))(v18 - 8))();
  return a1;
}

uint64_t *sub_59FFC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  swift_retain(v6);
  swift_release(v7);
  uint64_t v8 = a2[1];
  uint64_t v9 = a1[1];
  a1[1] = v8;
  swift_retain(v8);
  swift_release(v9);
  sub_E074(a1 + 2, a2 + 2);
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for IdentifiedUser(0LL);
  int v14 = _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0((uint64_t)v11, 1LL, v13);
  int v15 = _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0((uint64_t)v12, 1LL, v13);
  if (!v14)
  {
    uint64_t v16 = *(void *)(v13 - 8);
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v11, v12, v13);
      goto LABEL_7;
    }

    (*(void (**)(char *, uint64_t))(v16 + 8))(v11, v13);
    goto LABEL_6;
  }

  if (v15)
  {
LABEL_6:
    uint64_t v17 = sub_41BC(&qword_A27E8);
    memcpy(v11, v12, *(void *)(*(void *)(v17 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16LL))(v11, v12, v13);
  _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0((uint64_t)v11, 0LL, 1LL, v13);
LABEL_7:
  sub_E074((uint64_t *)((char *)a1 + *(int *)(a3 + 32)), (uint64_t *)((char *)a2 + *(int *)(a3 + 32)));
  return a1;
}

uint64_t sub_5A14C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 3sub_423C(v0 + 2) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 4sub_423C(v0 + 8) = *(void *)(a2 + 48);
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for IdentifiedUser(0LL);
  if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0((uint64_t)v9, 1LL, v10))
  {
    uint64_t v11 = sub_41BC(&qword_A27E8);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32LL))(v8, v9, v10);
    _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0((uint64_t)v8, 0LL, 1LL, v10);
  }

  uint64_t v12 = *(int *)(a3 + 32);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  __int128 v15 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v15;
  *(void *)(v13 + 3sub_423C(v0 + 2) = *(void *)(v14 + 32);
  return a1;
}

uint64_t *sub_5A234(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;
  swift_release(v6);
  uint64_t v7 = a1[1];
  a1[1] = a2[1];
  swift_release(v7);
  sub_423C(a1 + 2);
  __int128 v8 = *((_OWORD *)a2 + 2);
  *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
  *((_OWORD *)a1 + sub_423C(v0 + 2) = v8;
  a1[6] = a2[6];
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for IdentifiedUser(0LL);
  int v13 = _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0((uint64_t)v10, 1LL, v12);
  int v14 = _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0((uint64_t)v11, 1LL, v12);
  if (!v13)
  {
    uint64_t v15 = *(void *)(v12 - 8);
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 40))(v10, v11, v12);
      goto LABEL_7;
    }

    (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v12);
    goto LABEL_6;
  }

  if (v14)
  {
LABEL_6:
    uint64_t v16 = sub_41BC(&qword_A27E8);
    memcpy(v10, v11, *(void *)(*(void *)(v16 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32LL))(v10, v11, v12);
  _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0((uint64_t)v10, 0LL, 1LL, v12);
LABEL_7:
  uint64_t v17 = *(int *)(a3 + 32);
  uint64_t v18 = (uint64_t)a1 + v17;
  uint64_t v19 = (uint64_t)a2 + v17;
  sub_423C((uint64_t *)((char *)a1 + v17));
  __int128 v20 = *(_OWORD *)(v19 + 16);
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  *(_OWORD *)(v18 + 16) = v20;
  *(void *)(v18 + 3sub_423C(v0 + 2) = *(void *)(v19 + 32);
  return a1;
}

uint64_t sub_5A394(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_5A3A0);
}

uint64_t sub_5A3A0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    return (v4 + 1);
  }

  else
  {
    uint64_t v8 = sub_41BC(&qword_A27E8);
    return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0( (uint64_t)a1 + *(int *)(a3 + 28),  a2,  v8);
  }

uint64_t sub_5A418(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_5A424);
}

void *sub_5A424(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }

  else
  {
    uint64_t v7 = sub_41BC(&qword_A27E8);
    return (void *)_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0( (uint64_t)v5 + *(int *)(a4 + 28),  a2,  a2,  v7);
  }

  return result;
}

uint64_t type metadata accessor for SharedGlobals(uint64_t a1)
{
  uint64_t result = qword_A2F90;
  if (!qword_A2F90) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SharedGlobals);
  }
  return result;
}

void sub_5A4CC(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  void v4[2] = "(";
  sub_5A560(319LL);
  if (v3 <= 0x3F)
  {
    void v4[3] = *(void *)(v2 - 8) + 64LL;
    void v4[4] = "(";
    void v4[5] = (char *)&value witness table for () + 64;
    swift_initStructMetadata(a1, 256LL, 6LL, v4, a1 + 16);
  }

void sub_5A560(uint64_t a1)
{
  if (!qword_A2FA0)
  {
    uint64_t v2 = type metadata accessor for IdentifiedUser(255LL);
    unint64_t v3 = type metadata accessor for Optional(a1, v2);
    if (!v4) {
      atomic_store(v3, (unint64_t *)&qword_A2FA0);
    }
  }

uint64_t sub_5A5B4(char *a1)
{
  uint64_t v2 = type metadata accessor for Parse(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for USOParse(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, a1, v2);
  if ((*(unsigned int (**)(char *, uint64_t))(v3 + 88))(v5, v2) == enum case for Parse.uso(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 96))(v5, v2);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
    strcpy((char *)v22, ".uso parse: ");
    BYTE5(v22[1]) = 0;
    HIWORD(v22[1]) = -5120;
    type metadata accessor for SiriNLUTypesPrintUtils(0LL);
    uint64_t v20 = type metadata accessor for Siri_Nlu_External_UserParse(0LL);
    unint64_t v21 = sub_5A81C();
    sub_A800(&v18);
    USOParse.userParse.getter();
    uint64_t v10 = static SiriNLUTypesPrintUtils.printableProtoObject(object:)(&v18);
    uint64_t v12 = v11;
    sub_423C(&v18);
    v13._uint64_t countAndFlagsBits = v10;
    v13._object = v12;
    String.append(_:)(v13);
    swift_bridgeObjectRelease(v12);
    uint64_t v18 = v22[0];
    unint64_t v19 = v22[1];
    uint64_t v14 = String.init<A>(_:)( &v18,  &type metadata for String,  &protocol witness table for String,  &protocol witness table for String);
    (*(void (**)(char *, uint64_t))(v3 + 8))(a1, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }

  else
  {
    uint64_t v15 = *(void (**)(char *, uint64_t))(v3 + 8);
    v15(v5, v2);
    uint64_t v18 = 0LL;
    unint64_t v19 = 0xE000000000000000LL;
    _print_unlocked<A, B>(_:_:)(a1, &v18);
    uint64_t v14 = String.init<A>(_:)( &v18,  &type metadata for String,  &protocol witness table for String,  &protocol witness table for String);
    v15(a1, v2);
  }

  return v14;
}

unint64_t sub_5A81C()
{
  unint64_t result = qword_A2FE0;
  if (!qword_A2FE0)
  {
    uint64_t v1 = type metadata accessor for Siri_Nlu_External_UserParse(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for Siri_Nlu_External_UserParse, v1);
    atomic_store(result, (unint64_t *)&qword_A2FE0);
  }

  return result;
}

uint64_t type metadata accessor for SKFlowFactory()
{
  return objc_opt_self(&OBJC_CLASS____TtC35HomeCommunicationFlowDelegatePlugin13SKFlowFactory);
}

uint64_t type metadata accessor for SkipAnnouncementCATs(uint64_t a1)
{
  uint64_t result = qword_A30C0;
  if (!qword_A30C0) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SkipAnnouncementCATs);
  }
  return result;
}

uint64_t sub_5A8B4(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL);
}

uint64_t sub_5A8F0()
{
  return type metadata accessor for SkipAnnouncementCATs(0LL);
}

uint64_t type metadata accessor for SkipAnnouncementCATsSimple(uint64_t a1)
{
  uint64_t result = qword_A3110;
  if (!qword_A3110) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SkipAnnouncementCATsSimple);
  }
  return result;
}

uint64_t sub_5A930(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL);
}

uint64_t sub_5A96C()
{
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_F5FC;
  return v3(0xD00000000000002ELL, 0x8000000000078C70LL, &_swiftEmptyArrayStorage);
}

uint64_t sub_5A9E4()
{
  return type metadata accessor for SkipAnnouncementCATsSimple(0LL);
}

uint64_t sub_5A9EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v61 = a2;
  uint64_t v4 = type metadata accessor for Parse(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v58 = (uint64_t)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v59 = (char *)&v54 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v54 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v54 - v13;
  uint64_t v15 = type metadata accessor for NLIntent(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (_DWORD *)((char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v60 = sub_5C994();
  sub_11F5C();
  __chkstk_darwin(v19);
  sub_5C9D8();
  sub_5C97C((uint64_t)v14, a1);
  int v20 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v14, v4);
  if (v20 != enum case for Parse.NLv3IntentOnly(_:))
  {
    if (v20 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
    {
      sub_5C9BC();
      sub_5C9AC();
      uint64_t v21 = sub_41BC(&qword_A0CD8);
      swift_release(*(void *)&v14[*(int *)(v21 + 48)]);
      goto LABEL_5;
    }

    if (v20 == enum case for Parse.directInvocation(_:))
    {
      uint64_t v26 = a1;
      if (qword_9F820 != -1) {
        swift_once(&qword_9F820, sub_17ADC);
      }
      uint64_t v27 = type metadata accessor for Logger(0LL);
      sub_4870(v27, (uint64_t)qword_A3EB0);
      uint64_t v28 = sub_5C97C((uint64_t)v12, a1);
      uint64_t v29 = (os_log_s *)Logger.logObject.getter(v28);
      os_log_type_t v30 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v29, v30))
      {
        sub_5C960();
        uint64_t v58 = sub_5C99C();
        uint64_t v62 = v58;
        *uint64_t v18 = 136315138;
        uint64_t v31 = (char *)v18 + v26;
        uint64_t v56 = (uint64_t)(v18 + 1);
        uint64_t v32 = v59;
        sub_5C97C((uint64_t)v59, (uint64_t)v12);
        uint64_t v33 = sub_5A5B4(v32);
        uint64_t v35 = sub_5CA1C(v33, v34);
        uint64_t v36 = sub_BD40(v35);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v36, v37, v56, v31);
        swift_bridgeObjectRelease(v32);
        sub_5C974((uint64_t)v12);
        sub_5C9F8(&dword_0, v29, v30, "Received a direct action: %s.");
        uint64_t v38 = (char *)&type metadata for Any + 8;
        uint64_t v39 = v58;
LABEL_15:
        swift_arrayDestroy(v39, 1LL, v38);
        sub_48D4(v39);
        sub_48D4((uint64_t)v18);

        uint64_t v51 = v57;
LABEL_19:
        sub_5C974(v51);
        sub_5C974((uint64_t)v14);
        uint64_t v25 = 1LL;
        uint64_t v24 = v61;
        return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v24, v25, 1LL, v60);
      }

      uint64_t v52 = (uint64_t)v12;
    }

    else
    {
      uint64_t v26 = a1;
      if (qword_9F820 != -1) {
        swift_once(&qword_9F820, sub_17ADC);
      }
      uint64_t v40 = type metadata accessor for Logger(0LL);
      sub_4870(v40, (uint64_t)qword_A3EB0);
      uint64_t v41 = v58;
      uint64_t v42 = sub_5C97C(v58, v26);
      uint64_t v29 = (os_log_s *)Logger.logObject.getter(v42);
      os_log_type_t v43 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v29, v43))
      {
        sub_5C960();
        uint64_t v56 = sub_5C99C();
        uint64_t v62 = v56;
        *uint64_t v18 = 136315138;
        uint64_t v44 = (char *)v18 + v26;
        Swift::String v55 = v18 + 1;
        uint64_t v45 = v59;
        sub_5C97C((uint64_t)v59, v41);
        uint64_t v46 = sub_5A5B4(v45);
        uint64_t v48 = sub_5CA1C(v46, v47);
        uint64_t v49 = sub_BD40(v48);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v49, v50, v55, v44);
        swift_bridgeObjectRelease(v45);
        sub_5C974(v41);
        sub_5C9F8(&dword_0, v29, v43, "Received an unknown parse: %s.");
        uint64_t v38 = (char *)&type metadata for Any + 8;
        uint64_t v39 = v56;
        goto LABEL_15;
      }

      uint64_t v52 = v41;
    }

    sub_5C974(v52);
    uint64_t v51 = v26;
    goto LABEL_19;
  }

  sub_5C9BC();
  sub_5C9AC();
LABEL_5:
  uint64_t v22 = *(void (**)(_DWORD *, char *, uint64_t))(v16 + 32);
  v22(v18, v14, v15);
  v22((_DWORD *)v2, (char *)v18, v15);
  uint64_t v23 = v2;
  uint64_t v24 = v61;
  sub_5C06C(v23, v61);
  uint64_t v25 = 0LL;
  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v24, v25, 1LL, v60);
}

void sub_5AE58()
{
  if (qword_9F8A8 != -1) {
    swift_once(&qword_9F8A8, sub_5B2A0);
  }
  uint64_t v0 = qword_A4070;
  uint64_t v1 = sub_5C994();
  uint64_t v2 = sub_5C5D0(&qword_A0D20);
  IntentNodeTraversable.value<A>(forNode:)(&v3, v0, v1, v2);
  __asm { BR              X10 }

BOOL sub_5AF50()
{
  uint64_t v2 = sub_5C994();
  sub_11F5C();
  __chkstk_darwin(v3);
  sub_5C9D8();
  if (qword_9F8C8 != -1) {
    swift_once(&qword_9F8C8, sub_5B3A4);
  }
  uint64_t v4 = qword_A4090;
  uint64_t v5 = sub_5C5D0(&qword_A0D20);
  uint64_t v6 = IntentNodeTraversable.values<A>(forNode:)(v4, v2, v5);
  uint64_t v7 = *(void *)(v6 + 16);
  swift_bridgeObjectRelease(v6);
  sub_5C9F0(v1);
  if (v7) {
    BOOL v8 = sub_5BA60();
  }
  else {
    BOOL v8 = 0;
  }
  sub_4888(v0);
  return v8;
}

unint64_t sub_5B018(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = ((uint64_t (*)(void))dispatch thunk of OntologyNode.name.getter)();
  unint64_t v6 = v5;
  sub_5D0C8(v4, v5);
  uint64_t v8 = v7;
  swift_bridgeObjectRelease(v6);
  if (v8)
  {
    Swift::String v9 = Character.uppercased()();
    uint64_t countAndFlagsBits = v9._countAndFlagsBits;
    object = v9._object;
    swift_bridgeObjectRelease(v8);
  }

  else
  {
    uint64_t countAndFlagsBits = 0LL;
    object = (void *)0xE000000000000000LL;
  }

  v12._uint64_t countAndFlagsBits = countAndFlagsBits;
  v12._object = object;
  String.append(_:)(v12);
  swift_bridgeObjectRelease(object);
  uint64_t v13 = dispatch thunk of OntologyNode.name.getter(a1, a2);
  unint64_t v21 = 0xD000000000000012LL;
  unint64_t v22 = 0x8000000000076FF0LL;
  v20[0] = sub_63F14(1uLL, v13, v14);
  v20[1] = v15;
  void v20[2] = v16;
  void v20[3] = v17;
  unint64_t v18 = sub_469DC();
  swift_bridgeObjectRetain(0x8000000000076FF0LL);
  String.append<A>(contentsOf:)(v20, &type metadata for Substring, v18);
  swift_bridgeObjectRelease(0x8000000000076FF0LL);
  sub_18FB8();
  return v21;
}

uint64_t sub_5B144(char a1)
{
  return qword_745E8[a1];
}

void sub_5B164(uint64_t a1)
{
}

void sub_5B190(uint64_t a1)
{
}

void sub_5B1BC()
{
  uint64_t v0 = sub_41BC(&qword_A3178);
  uint64_t v1 = swift_allocObject(v0, 72LL, 7LL);
  *(_OWORD *)(v1 + 16) = xmmword_6FA70;
  if (qword_9F898 != -1) {
    swift_once(&qword_9F898, sub_5B190);
  }
  uint64_t v2 = qword_A4060;
  *(void *)(v1 + 56) = sub_41BC(&qword_A0690);
  *(void *)(v1 + 64) = sub_5C7F4((unint64_t *)&qword_A0F00, &qword_A0690);
  *(void *)(v1 + 3sub_423C(v0 + 2) = v2;
  uint64_t v3 = type metadata accessor for NonTerminalOntologyNode(0LL);
  sub_A8BC(v3);
  swift_retain(v2);
  qword_A4068 = NonTerminalOntologyNode.init(name:multicardinal:childNodes:)( 0x6E6F73726570LL,  0xE600000000000000LL,  0LL,  v1);
  sub_9304();
}

void sub_5B2A0(uint64_t a1)
{
}

uint64_t type metadata accessor for SmsNLIntent(uint64_t a1)
{
  uint64_t result = qword_A31D8;
  if (!qword_A31D8) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SmsNLIntent);
  }
  return result;
}

void sub_5B30C(uint64_t a1)
{
}

void sub_5B340(uint64_t a1)
{
}

void sub_5B374(uint64_t a1)
{
}

void sub_5B3A4(uint64_t a1)
{
}

void sub_5B3D0(uint64_t a1)
{
}

void sub_5B3FC(uint64_t a1)
{
}

void sub_5B428(uint64_t a1)
{
}

void sub_5B454(uint64_t a1)
{
}

void sub_5B480(uint64_t a1)
{
}

void sub_5B4AC(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8 = sub_41BC(a2);
  sub_A8BC(v8);
  *a5 = TerminalOntologyNode.init(name:multicardinal:)(a3, a4, 0LL);
  sub_9304();
}

uint64_t sub_5B4F8()
{
  uint64_t v0 = sub_41BC(&qword_A3178);
  uint64_t v1 = swift_allocObject(v0, 152LL, 7LL);
  *(_OWORD *)(v1 + 16) = xmmword_70F90;
  if (qword_9F8A0 != -1) {
    swift_once(&qword_9F8A0, sub_5B1BC);
  }
  uint64_t v2 = qword_A4068;
  uint64_t v3 = type metadata accessor for NonTerminalOntologyNode(0LL);
  *(void *)(v1 + 56) = v3;
  *(void *)(v1 + 64) = &protocol witness table for NonTerminalOntologyNode;
  *(void *)(v1 + 3sub_423C(v0 + 2) = v2;
  uint64_t v4 = qword_9F8B8;
  swift_retain(v2);
  if (v4 != -1) {
    swift_once(&qword_9F8B8, sub_5B340);
  }
  uint64_t v5 = qword_A4080;
  *(void *)(v1 + 96) = sub_41BC(&qword_A0690);
  *(void *)(v1 + 104) = sub_5C7F4((unint64_t *)&qword_A0F00, &qword_A0690);
  *(void *)(v1 + 7sub_423C(v0 + 2) = v5;
  uint64_t v6 = qword_9F8B0;
  swift_retain(v5);
  if (v6 != -1) {
    swift_once(&qword_9F8B0, sub_5B30C);
  }
  uint64_t v7 = qword_A4078;
  *(void *)(v1 + 136) = sub_41BC(&qword_A3268);
  *(void *)(v1 + 144) = sub_5C7F4(&qword_A3270, &qword_A3268);
  *(void *)(v1 + 1sub_423C(v0 + 12) = v7;
  swift_allocObject(v3, *(unsigned int *)(v3 + 48), *(unsigned __int16 *)(v3 + 52));
  swift_retain(v7);
  uint64_t result = NonTerminalOntologyNode.init(name:multicardinal:childNodes:)( 0x61746E6F43736D73LL,  0xEA00000000007463LL,  0LL,  v1);
  qword_A40C0 = result;
  return result;
}

uint64_t sub_5B6AC()
{
  uint64_t v0 = sub_41BC(&qword_A3178);
  uint64_t v1 = swift_allocObject(v0, 392LL, 7LL);
  *(_OWORD *)(v1 + 16) = xmmword_74850;
  if (qword_9F8A8 != -1) {
    swift_once(&qword_9F8A8, sub_5B2A0);
  }
  uint64_t v2 = qword_A4070;
  *(void *)(v1 + 56) = sub_41BC(&qword_A3168);
  *(void *)(v1 + 64) = sub_5C7F4(&qword_A3260, &qword_A3168);
  *(void *)(v1 + 3sub_423C(v0 + 2) = v2;
  uint64_t v3 = qword_9F890;
  swift_retain(v2);
  if (v3 != -1) {
    swift_once(&qword_9F890, sub_5B164);
  }
  uint64_t v4 = qword_A4058;
  uint64_t v5 = sub_41BC(&qword_A0690);
  *(void *)(v1 + 96) = v5;
  uint64_t v6 = sub_5C7F4((unint64_t *)&qword_A0F00, &qword_A0690);
  *(void *)(v1 + 104) = v6;
  *(void *)(v1 + 7sub_423C(v0 + 2) = v4;
  uint64_t v7 = qword_9F8F8;
  swift_retain(v4);
  if (v7 != -1) {
    swift_once(&qword_9F8F8, sub_5B4F8);
  }
  uint64_t v8 = qword_A40C0;
  *(void *)(v1 + 136) = type metadata accessor for NonTerminalOntologyNode(0LL);
  *(void *)(v1 + 144) = &protocol witness table for NonTerminalOntologyNode;
  *(void *)(v1 + 1sub_423C(v0 + 12) = v8;
  uint64_t v9 = qword_9F8C8;
  swift_retain(v8);
  if (v9 != -1) {
    swift_once(&qword_9F8C8, sub_5B3A4);
  }
  uint64_t v10 = qword_A4090;
  *(void *)(v1 + 176) = v5;
  *(void *)(v1 + 184) = v6;
  *(void *)(v1 + 15sub_423C(v0 + 2) = v10;
  uint64_t v11 = qword_9F8D0;
  swift_retain(v10);
  if (v11 != -1) {
    swift_once(&qword_9F8D0, sub_5B3D0);
  }
  uint64_t v12 = qword_A4098;
  *(void *)(v1 + 216) = v5;
  *(void *)(v1 + 224) = v6;
  *(void *)(v1 + 19sub_423C(v0 + 2) = v12;
  uint64_t v13 = qword_9F8D8;
  swift_retain(v12);
  if (v13 != -1) {
    swift_once(&qword_9F8D8, sub_5B3FC);
  }
  uint64_t v14 = qword_A40A0;
  *(void *)(v1 + 256) = v5;
  *(void *)(v1 + 264) = v6;
  *(void *)(v1 + 23sub_423C(v0 + 2) = v14;
  uint64_t v15 = qword_9F8E0;
  swift_retain(v14);
  if (v15 != -1) {
    swift_once(&qword_9F8E0, sub_5B428);
  }
  uint64_t v16 = qword_A40A8;
  *(void *)(v1 + 296) = v5;
  *(void *)(v1 + 304) = v6;
  *(void *)(v1 + 27sub_423C(v0 + 2) = v16;
  uint64_t v17 = qword_9F8E8;
  swift_retain(v16);
  if (v17 != -1) {
    swift_once(&qword_9F8E8, sub_5B454);
  }
  uint64_t v18 = qword_A40B0;
  *(void *)(v1 + 336) = v5;
  *(void *)(v1 + 344) = v6;
  *(void *)(v1 + 3sub_423C(v0 + 12) = v18;
  uint64_t v19 = qword_9F8F0;
  swift_retain(v18);
  if (v19 != -1) {
    swift_once(&qword_9F8F0, sub_5B480);
  }
  uint64_t v20 = qword_A40B8;
  *(void *)(v1 + 376) = v5;
  *(void *)(v1 + 384) = v6;
  *(void *)(v1 + 35sub_423C(v0 + 2) = v20;
  qword_A40C8 = v1;
  return swift_retain(v20);
}

uint64_t sub_5B998()
{
  if (qword_9F900 != -1) {
    swift_once(&qword_9F900, sub_5B6AC);
  }
  uint64_t v0 = qword_A40C8;
  uint64_t v1 = type metadata accessor for DomainOntologyNode(0LL);
  swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
  swift_bridgeObjectRetain(v0);
  uint64_t result = DomainOntologyNode.init(name:childNodes:isInEventTree:)(7564659LL, 0xE300000000000000LL, v0, 1LL);
  qword_A40D0 = result;
  return result;
}

uint64_t sub_5BA20()
{
  if (qword_9F908 != -1) {
    swift_once(&qword_9F908, sub_5B998);
  }
  return swift_retain(qword_A40D0);
}

BOOL sub_5BA60()
{
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = __chkstk_darwin(v2);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v20 - v9;
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v20 - v11;
  if (qword_9F8D0 != -1) {
    swift_once(&qword_9F8D0, sub_5B3D0);
  }
  sub_5C5D0(&qword_A0D20);
  sub_5C9CC();
  uint64_t v13 = IntentNodeTraversable.values<A>(forNode:)();
  sub_1CCA4(v13);
  sub_5C0B0(v0, (uint64_t)v12);
  if (v0)
  {
    sub_4888((uint64_t)v12);
    sub_5CA04();
LABEL_8:
    sub_4888((uint64_t)v10);
    sub_5CA10();
LABEL_9:
    sub_4888((uint64_t)v7);
    sub_5C9F0(v0);
LABEL_10:
    BOOL v15 = 0LL;
    goto LABEL_11;
  }

  if (qword_9F8D8 != -1) {
    swift_once(&qword_9F8D8, sub_5B3FC);
  }
  sub_5C9CC();
  uint64_t v14 = IntentNodeTraversable.values<A>(forNode:)();
  sub_1CCA4(v14);
  sub_4888((uint64_t)v12);
  sub_5CA04();
  if (v12) {
    goto LABEL_8;
  }
  if (qword_9F8E0 != -1) {
    swift_once(&qword_9F8E0, sub_5B428);
  }
  sub_5C9CC();
  uint64_t v17 = IntentNodeTraversable.values<A>(forNode:)();
  sub_1CCA4(v17);
  sub_4888((uint64_t)v10);
  sub_5CA10();
  if (v10) {
    goto LABEL_9;
  }
  if (qword_9F8E8 != -1) {
    swift_once(&qword_9F8E8, sub_5B454);
  }
  sub_5C9CC();
  uint64_t v18 = IntentNodeTraversable.values<A>(forNode:)();
  sub_1CCA4(v18);
  sub_4888((uint64_t)v7);
  sub_5C9F0(0LL);
  if (v7) {
    goto LABEL_10;
  }
  if (qword_9F8F0 != -1) {
    swift_once(&qword_9F8F0, sub_5B480);
  }
  sub_5C9CC();
  uint64_t v19 = IntentNodeTraversable.values<A>(forNode:)();
  sub_1CCA4(v19);
  BOOL v15 = v4 == 0LL;
LABEL_11:
  sub_4888((uint64_t)v4);
  return v15;
}

unint64_t sub_5BD00(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_93BC0, v2);
  sub_18FB8();
  if (v3 >= 7) {
    return 7LL;
  }
  else {
    return v3;
  }
}

uint64_t sub_5BD44@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for NLIntent(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16LL))(a1, v1, v3);
}

uint64_t sub_5BD7C()
{
  return sub_5BA20();
}

uint64_t sub_5BD90(uint64_t a1)
{
  uint64_t v2 = sub_5C5D0(&qword_A3240);
  return NLIntentWrapper.traversableIntentNode.getter(a1, v2);
}

uint64_t sub_5BDD8(uint64_t a1)
{
  uint64_t v2 = sub_5C5D0(&qword_A3240);
  return NLIntentWrapper.traversableOntologyNode.getter(a1, v2);
}

uint64_t sub_5BE10(uint64_t a1)
{
  uint64_t v2 = sub_5C5D0(&qword_A3240);
  return NLIntentWrapper.description.getter(a1, v2);
}

void sub_5BE48(unsigned __int8 *a1, unsigned __int8 *a2)
{
}

void sub_5BE54()
{
}

uint64_t sub_5BE5C(uint64_t a1)
{
  return sub_1E444(a1, *v1);
}

void sub_5BE64(uint64_t a1)
{
}

unint64_t sub_5BE6C@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result = sub_5BD00(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_5BE98@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_5B144(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_5BEC0(void *a1@<X8>)
{
  *a1 = &off_93C88;
}

uint64_t sub_5BED0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_5BFFC(a1, a2, a3, (uint64_t (*)(void))sub_5C8AC, (uint64_t (*)(void))sub_5C8E8, (uint64_t (*)(void))sub_5C924);
}

uint64_t sub_5BEEC(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = _findStringSwitchCaseWithCache(cases:string:cache:)(&off_93CB0, a1, a2, &unk_9F920);
  sub_18FB8();
  if (v2 >= 0x1F) {
    return 31LL;
  }
  else {
    return v2;
  }
}

uint64_t sub_5BF38(char a1)
{
  return *(void *)&aFirst_1[8 * a1];
}

void sub_5BF58(unsigned __int8 *a1, unsigned __int8 *a2)
{
}

void sub_5BF64()
{
}

uint64_t sub_5BF6C(uint64_t a1)
{
  return sub_1E450(a1, *v1);
}

void sub_5BF74(uint64_t a1)
{
}

uint64_t sub_5BF7C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result = sub_5BEEC(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t sub_5BFA8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_5BF38(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_5BFD0(void *a1@<X8>)
{
  *a1 = &off_93FB8;
}

uint64_t sub_5BFE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_5BFFC(a1, a2, a3, (uint64_t (*)(void))sub_5C608, (uint64_t (*)(void))sub_5C644, (uint64_t (*)(void))sub_5C680);
}

uint64_t sub_5BFFC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  uint64_t v10 = a4();
  uint64_t v11 = a5();
  uint64_t v12 = a6();
  return static TerminalNodeBoundedSemanticValue<>.fromIntentNodeValue(_:)(a1, a2, v10, v11, v12);
}

uint64_t sub_5C06C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SmsNLIntent(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_5C0B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SmsNLIntent(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t getEnumTagSinglePayload for SmsReferenceValue(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }

  if (a2 >= 0xE2)
  {
    if (a2 + 30 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 30) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }

    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }

    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }

    int v5 = (*a1 | (v4 << 8)) - 31;
    return (v5 + 1);
  }

uint64_t storeEnumTagSinglePayload for SmsReferenceValue(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 30 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 30) >> 8 < 0xFF) {
    LODWORD(sub_46B2C(*(void *)(v1 + 288), v4) = 1;
  }
  else {
    LODWORD(sub_46B2C(*(void *)(v1 + 288), v4) = v3;
  }
  if (a3 >= 0xE2) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xE1) {
    return ((uint64_t (*)(void))((char *)&loc_5C1C8 + 4 * byte_7429A[v4]))();
  }
  *a1 = a2 + 30;
  return ((uint64_t (*)(void))((char *)sub_5C1FC + 4 * byte_74295[v4]))();
}

uint64_t sub_5C1FC(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_5C204(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x5C20CLL);
  }
  return result;
}

uint64_t sub_5C218(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x5C220LL);
  }
  *(_BYTE *)uint64_t result = a2 + 30;
  return result;
}

uint64_t sub_5C224(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_5C22C(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SmsReferenceValue()
{
  return &type metadata for SmsReferenceValue;
}

uint64_t sub_5C248(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NLIntent(0LL);
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_5C284(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NLIntent(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
}

uint64_t sub_5C2B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NLIntent(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a1, a2, v4);
  return a1;
}

uint64_t sub_5C2FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NLIntent(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24LL))(a1, a2, v4);
  return a1;
}

uint64_t sub_5C340(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NLIntent(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a1, a2, v4);
  return a1;
}

uint64_t sub_5C384(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NLIntent(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a1, a2, v4);
  return a1;
}

uint64_t sub_5C3C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_5C3D4);
}

uint64_t sub_5C3D4()
{
  uint64_t v2 = sub_5C984();
  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v1, v0, v2);
}

uint64_t sub_5C3FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_5C408);
}

uint64_t sub_5C408()
{
  uint64_t v2 = sub_5C984();
  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v1, v0, v0, v2);
}

uint64_t sub_5C434(uint64_t a1)
{
  uint64_t result = type metadata accessor for NLIntent(319LL);
  if (v3 <= 0x3F)
  {
    uint64_t v4 = *(void *)(result - 8) + 64LL;
    swift_initStructMetadata(a1, 256LL, 1LL, &v4, a1 + 16);
    return 0LL;
  }

  return result;
}

uint64_t sub_5C49C()
{
  return sub_5C5D0(&qword_A0D20);
}

uint64_t sub_5C4C0()
{
  return sub_5C5D0(&qword_A3210);
}

unint64_t sub_5C4E8()
{
  unint64_t result = qword_A3218;
  if (!qword_A3218)
  {
    unint64_t result = swift_getWitnessTable(&unk_74400, &type metadata for SmsReferenceValue);
    atomic_store(result, (unint64_t *)&qword_A3218);
  }

  return result;
}

uint64_t sub_5C524()
{
  return sub_5C7F4(&qword_A3220, &qword_A3228);
}

unint64_t sub_5C554()
{
  unint64_t result = qword_A3230;
  if (!qword_A3230)
  {
    unint64_t result = swift_getWitnessTable(&unk_74338, &type metadata for SmsReferenceValue);
    atomic_store(result, (unint64_t *)&qword_A3230);
  }

  return result;
}

unint64_t sub_5C594()
{
  unint64_t result = qword_A3238;
  if (!qword_A3238)
  {
    unint64_t result = swift_getWitnessTable(&unk_74440, &type metadata for SmsReferenceValue);
    atomic_store(result, (unint64_t *)&qword_A3238);
  }

  return result;
}

uint64_t sub_5C5D0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v3 = type metadata accessor for SmsNLIntent(255LL);
    uint64_t result = sub_24610(v3);
    atomic_store(result, a1);
  }

  return result;
}

unint64_t sub_5C608()
{
  unint64_t result = qword_A3248;
  if (!qword_A3248)
  {
    unint64_t result = swift_getWitnessTable(&unk_743A0, &type metadata for SmsReferenceValue);
    atomic_store(result, (unint64_t *)&qword_A3248);
  }

  return result;
}

unint64_t sub_5C644()
{
  unint64_t result = qword_A3250;
  if (!qword_A3250)
  {
    unint64_t result = swift_getWitnessTable(&unk_74368, &type metadata for SmsReferenceValue);
    atomic_store(result, (unint64_t *)&qword_A3250);
  }

  return result;
}

unint64_t sub_5C680()
{
  unint64_t result = qword_A3258;
  if (!qword_A3258)
  {
    unint64_t result = swift_getWitnessTable(&unk_743C8, &type metadata for SmsReferenceValue);
    atomic_store(result, (unint64_t *)&qword_A3258);
  }

  return result;
}

uint64_t storeEnumTagSinglePayload for SmsContactRoleValue(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    LODWORD(sub_46B2C(*(void *)(v1 + 288), v4) = 1;
  }
  else {
    LODWORD(sub_46B2C(*(void *)(v1 + 288), v4) = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xF9) {
    return ((uint64_t (*)(void))((char *)&loc_5C708 + 4 * byte_742A4[v4]))();
  }
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_5C73C + 4 * byte_7429F[v4]))();
}

uint64_t sub_5C73C(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_5C744(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x5C74CLL);
  }
  return result;
}

uint64_t sub_5C758(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x5C760LL);
  }
  *(_BYTE *)unint64_t result = a2 + 6;
  return result;
}

uint64_t sub_5C764(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_5C76C(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SmsContactRoleValue()
{
  return &type metadata for SmsContactRoleValue;
}

unint64_t sub_5C78C()
{
  unint64_t result = qword_A3278;
  if (!qword_A3278)
  {
    unint64_t result = swift_getWitnessTable(&unk_7457C, &type metadata for SmsContactRoleValue);
    atomic_store(result, (unint64_t *)&qword_A3278);
  }

  return result;
}

uint64_t sub_5C7C8()
{
  return sub_5C7F4(&qword_A3280, &qword_A3288);
}

uint64_t sub_5C7F4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v4 = sub_8564(a2);
    uint64_t result = sub_24610(v4);
    atomic_store(result, a1);
  }

  return result;
}

unint64_t sub_5C830()
{
  unint64_t result = qword_A3290;
  if (!qword_A3290)
  {
    unint64_t result = swift_getWitnessTable(&unk_744B4, &type metadata for SmsContactRoleValue);
    atomic_store(result, (unint64_t *)&qword_A3290);
  }

  return result;
}

unint64_t sub_5C870()
{
  unint64_t result = qword_A3298;
  if (!qword_A3298)
  {
    unint64_t result = swift_getWitnessTable(&unk_745BC, &type metadata for SmsContactRoleValue);
    atomic_store(result, (unint64_t *)&qword_A3298);
  }

  return result;
}

unint64_t sub_5C8AC()
{
  unint64_t result = qword_A32A0;
  if (!qword_A32A0)
  {
    unint64_t result = swift_getWitnessTable(&unk_7451C, &type metadata for SmsContactRoleValue);
    atomic_store(result, (unint64_t *)&qword_A32A0);
  }

  return result;
}

unint64_t sub_5C8E8()
{
  unint64_t result = qword_A32A8;
  if (!qword_A32A8)
  {
    unint64_t result = swift_getWitnessTable(&unk_744E4, &type metadata for SmsContactRoleValue);
    atomic_store(result, (unint64_t *)&qword_A32A8);
  }

  return result;
}

unint64_t sub_5C924()
{
  unint64_t result = qword_A32B0;
  if (!qword_A32B0)
  {
    unint64_t result = swift_getWitnessTable(&unk_74544, &type metadata for SmsContactRoleValue);
    atomic_store(result, (unint64_t *)&qword_A32B0);
  }

  return result;
}

uint64_t sub_5C960()
{
  *(void *)(v1 - 136) = v0;
  return swift_slowAlloc(12LL, -1LL);
}

uint64_t sub_5C974(uint64_t a1)
{
  return v1(a1, v2);
}

uint64_t sub_5C97C(uint64_t a1, uint64_t a2)
{
  return v3(a1, a2, v2);
}

uint64_t sub_5C984()
{
  return type metadata accessor for NLIntent(0LL);
}

uint64_t sub_5C994()
{
  return type metadata accessor for SmsNLIntent(0LL);
}

uint64_t sub_5C99C()
{
  return swift_slowAlloc(32LL, -1LL);
}

uint64_t sub_5C9AC()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 96))(v2, v1);
}

uint64_t sub_5C9BC()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

  ;
}

  ;
}

uint64_t sub_5C9F0(uint64_t a1)
{
  return sub_5C0B0(a1, v1);
}

void sub_5C9F8(void *a1, os_log_s *a2, os_log_type_t a3, const char *a4)
{
}

uint64_t sub_5CA04()
{
  return sub_5C0B0(v0, v1);
}

uint64_t sub_5CA10()
{
  return sub_5C0B0(v0, v1);
}

uint64_t sub_5CA1C(uint64_t a1, unint64_t a2)
{
  return sub_68DC4(a1, a2, (uint64_t *)(v2 - 88));
}

uint64_t type metadata accessor for StopAnnouncementAceViewProvider(uint64_t a1)
{
  uint64_t result = qword_A32C0;
  if (!qword_A32C0) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for StopAnnouncementAceViewProvider);
  }
  return result;
}

uint64_t sub_5CA60(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL);
}

uint64_t sub_5CAAC()
{
  if (v1) {
    uint64_t v2 = v1;
  }
  else {
    uint64_t v2 = (uint64_t)_swiftEmptyArrayStorage;
  }
  if (!((unint64_t)v2 >> 62))
  {
    uint64_t v3 = *(void *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFF8LL));
    uint64_t result = swift_bridgeObjectRetain(v2);
    if (v3) {
      goto LABEL_6;
    }
LABEL_25:
    unsigned int v6 = (char *)_swiftEmptyArrayStorage;
LABEL_26:
    swift_bridgeObjectRelease_n(v2, 2LL);
    return sub_5CE54((uint64_t)v6);
  }

  if (v2 < 0) {
    uint64_t v19 = v2;
  }
  else {
    uint64_t v19 = v2 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v2);
  uint64_t result = _CocoaArrayWrapper.endIndex.getter(v19);
  uint64_t v3 = result;
  if (!result) {
    goto LABEL_25;
  }
LABEL_6:
  if (v3 >= 1)
  {
    uint64_t v5 = 0LL;
    unsigned int v6 = (char *)_swiftEmptyArrayStorage;
    do
    {
      if ((v2 & 0xC000000000000001LL) != 0) {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v2);
      }
      else {
        id v7 = *(id *)(v2 + 8 * v5 + 32);
      }
      uint64_t v8 = v7;
      id v9 = [v7 originator];
      if (v9 && (uint64_t v10 = v9, v11 = [v9 home], v10, v11))
      {
        id v12 = [v11 spokenPhrase];

        uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
        uint64_t v15 = v14;

        if ((swift_isUniquelyReferenced_nonNull_native(v6) & 1) == 0) {
          unsigned int v6 = sub_5E9B8(0LL, *((void *)v6 + 2) + 1LL);
        }
        unint64_t v17 = *((void *)v6 + 2);
        unint64_t v16 = *((void *)v6 + 3);
        if (v17 >= v16 >> 1) {
          unsigned int v6 = sub_5E9B8((char *)(v16 > 1), v17 + 1);
        }
        *((void *)v6 + sub_423C(v0 + 2) = v17 + 1;
        uint64_t v18 = &v6[16 * v17];
        *((void *)v18 + 4) = v13;
        *((void *)v18 + 5) = v15;
      }

      else
      {
      }

      ++v5;
    }

    while (v3 != v5);
    goto LABEL_26;
  }

  __break(1u);
  return result;
}

uint64_t sub_5CC78()
{
  uint64_t v1 = sub_5E76C(v0);
  if (v1) {
    uint64_t v2 = v1;
  }
  else {
    uint64_t v2 = (uint64_t)_swiftEmptyArrayStorage;
  }
  if (!((unint64_t)v2 >> 62))
  {
    uint64_t v3 = *(void *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFF8LL));
    uint64_t result = swift_bridgeObjectRetain(v2);
    if (v3) {
      goto LABEL_6;
    }
LABEL_25:
    unsigned int v6 = (char *)_swiftEmptyArrayStorage;
LABEL_26:
    swift_bridgeObjectRelease_n(v2, 2LL);
    return sub_5CE54((uint64_t)v6);
  }

  if (v2 < 0) {
    uint64_t v19 = v2;
  }
  else {
    uint64_t v19 = v2 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v2);
  uint64_t result = _CocoaArrayWrapper.endIndex.getter(v19);
  uint64_t v3 = result;
  if (!result) {
    goto LABEL_25;
  }
LABEL_6:
  if (v3 >= 1)
  {
    uint64_t v5 = 0LL;
    unsigned int v6 = (char *)_swiftEmptyArrayStorage;
    do
    {
      if ((v2 & 0xC000000000000001LL) != 0) {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v2);
      }
      else {
        id v7 = *(id *)(v2 + 8 * v5 + 32);
      }
      uint64_t v8 = v7;
      id v9 = [v7 originator];
      if (v9 && (uint64_t v10 = v9, v11 = [v9 home], v10, v11))
      {
        id v12 = [v11 spokenPhrase];

        uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
        uint64_t v15 = v14;

        if ((swift_isUniquelyReferenced_nonNull_native(v6) & 1) == 0) {
          unsigned int v6 = sub_5D33C(0LL, *((void *)v6 + 2) + 1LL, 1, (uint64_t)v6);
        }
        unint64_t v17 = *((void *)v6 + 2);
        unint64_t v16 = *((void *)v6 + 3);
        if (v17 >= v16 >> 1) {
          unsigned int v6 = sub_5D33C((char *)(v16 > 1), v17 + 1, 1, (uint64_t)v6);
        }
        *((void *)v6 + sub_423C(v0 + 2) = v17 + 1;
        uint64_t v18 = &v6[16 * v17];
        *((void *)v18 + 4) = v13;
        *((void *)v18 + 5) = v15;
      }

      else
      {
      }

      ++v5;
    }

    while (v3 != v5);
    goto LABEL_26;
  }

  __break(1u);
  return result;
}

uint64_t sub_5CE54(uint64_t a1)
{
  uint64_t v2 = Set.init(minimumCapacity:)(*(void *)(a1 + 16), &type metadata for String, &protocol witness table for String);
  uint64_t v10 = v2;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain(*v4);
      sub_5DCDC(v9, v5, v6);
      swift_bridgeObjectRelease(v9[1]);
      v4 += 2;
      --v3;
    }

    while (v3);
    swift_bridgeObjectRelease(a1);
    return v10;
  }

  else
  {
    uint64_t v7 = v2;
    swift_bridgeObjectRelease(a1);
  }

  return v7;
}

uint64_t sub_5CF04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_5CF18(a1, a2, a3, a4, (uint64_t)&unk_97AE0, (uint64_t)sub_5E904);
}

uint64_t sub_5CF18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v11 = (void *)swift_allocObject(a5, 48LL, 7LL);
  v11[2] = a3;
  v11[3] = a4;
  v11[4] = a1;
  void v11[5] = a2;
  swift_bridgeObjectRetain(a2);
  swift_retain(a4);
  sub_C468(a6, (uint64_t)v11);
  return swift_release(v11);
}

uint64_t sub_5CFB4(uint64_t result)
{
  if (result)
  {
    if (*(void *)(result + 16) == 1LL) {
      return sub_5D04C(result);
    }
    else {
      return 0LL;
    }
  }

  return result;
}

void *sub_5CFF0()
{
  uint64_t v0 = (void *)DefaultAceViewProvider.deinit();
  swift_release(*(void *)((char *)v0 + *(void *)(qword_A3DE8 + *v0 + 16)));
  sub_423C((void *)((char *)v0 + *(void *)(qword_A3DE8 + *v0 + 24)));
  return v0;
}

uint64_t sub_5D04C(uint64_t a1)
{
  uint64_t result = sub_5E854(a1);
  if ((v4 & 1) != 0) {
    goto LABEL_7;
  }
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }

  if (result == 1LL << *(_BYTE *)(a1 + 32)) {
    return 0LL;
  }
  else {
    return sub_5E7D8(result, v3, 0LL, a1);
  }
}

uint64_t sub_5D0B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_5D138(a1, (uint64_t (*)(void))&type metadata accessor for Siri_Nlu_External_UserDialogAct, a2);
}

uint64_t sub_5D0BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_5D138(a1, (uint64_t (*)(void))&type metadata accessor for RRCandidate, a2);
}

uint64_t sub_5D0C8(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000LL) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2) {
    return String.subscript.getter(15LL, a1, a2);
  }
  else {
    return 0LL;
  }
}

uint64_t sub_5D108@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_5D138(a1, (uint64_t (*)(void))&type metadata accessor for UtteranceAlignment, a2);
}

uint64_t sub_5D114@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_5D138(a1, (uint64_t (*)(void))&type metadata accessor for UtteranceSpan, a2);
}

uint64_t sub_5D120@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_5D138(a1, (uint64_t (*)(void))&type metadata accessor for UsoIdentifier, a2);
}

uint64_t sub_5D12C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_5D138(a1, (uint64_t (*)(void))&type metadata accessor for SpeakableString, a2);
}

uint64_t sub_5D138@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = a2(0LL);
  uint64_t v7 = v6;
  if (v5)
  {
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))( a3,  a1 + ((*(unsigned __int8 *)(*(void *)(v6 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80LL)),  v6);
    uint64_t v8 = 0LL;
  }

  else
  {
    uint64_t v8 = 1LL;
  }

  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(a3, v8, 1LL, v7);
}

uint64_t sub_5D1B0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = v22;
  uint64_t v11 = v23;
  sub_8504(v21, v22);
  char v12 = dispatch thunk of DeviceState.isCarPlay.getter(v10, v11);
  sub_423C(v21);
  if ((v12 & 1) != 0)
  {
    id v13 = a3;
    uint64_t v14 = sub_5CC78();

    uint64_t v15 = sub_5CFB4(v14);
    uint64_t v17 = v16;
    swift_bridgeObjectRelease(v14);
    sub_5CF18(v15, v17, a4, a5, (uint64_t)&unk_97AB8, (uint64_t)sub_5D330);
    return swift_bridgeObjectRelease(v17);
  }

  else
  {
    uint64_t v19 = sub_41BC(&qword_A3310);
    uint64_t v20 = (uint64_t (*)(uint64_t, uint64_t, void *, uint64_t, uint64_t))method lookup function for DefaultAceViewProvider( v19,  &method descriptor for DefaultAceViewProvider.makeAceViewsForHandleIntentWithUser(app:intent:intentResponse:_:));
    return v20(a1, a2, a3, a4, a5);
  }

uint64_t sub_5D2D8()
{
  return swift_release(*(void *)(v0 + qword_A32B8));
}

uint64_t sub_5D2E8()
{
  uint64_t v0 = sub_5CFF0();
  swift_release(*(void *)((char *)v0 + qword_A32B8));
  return swift_deallocClassInstance(v0, 72LL, 7LL);
}

uint64_t sub_5D324()
{
  return type metadata accessor for StopAnnouncementAceViewProvider(0LL);
}

void sub_5D330( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

char *sub_5D33C(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    uint64_t v7 = a2;
  }

  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    uint64_t v10 = sub_41BC(&qword_A0E30);
    uint64_t v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7LL);
    size_t v12 = j__malloc_size(v11);
    *((void *)v11 + sub_423C(v0 + 2) = v8;
    *((void *)v11 + sub_423C(v0 + 3) = 2 * ((uint64_t)(v12 - 32) / 16);
  }

  else
  {
    uint64_t v11 = (char *)_swiftEmptyArrayStorage;
  }

  id v13 = v11 + 32;
  if ((v5 & 1) != 0)
  {
    sub_5D848((char *)(a4 + 32), v8, v13);
    sub_5E9AC();
  }

  else
  {
    sub_5D664(0LL, v8, (unint64_t)v13, a4);
  }

  return v11;
}

uint64_t sub_5D420(char a1, int64_t a2, char a3, uint64_t a4)
{
  return sub_5D448(a1, a2, a3, a4, &qword_9FEA0, (void (*)(void))&type metadata accessor for UsoIdentifier);
}

uint64_t sub_5D434(char a1, int64_t a2, char a3, uint64_t a4)
{
  return sub_5D448(a1, a2, a3, a4, &qword_A3330, (void (*)(void))&type metadata accessor for DisplayHint);
}

uint64_t sub_5D448( char a1, int64_t a2, char a3, uint64_t a4, uint64_t *a5, void (*a6)(void))
{
  if ((a3 & 1) != 0)
  {
    unint64_t v9 = *(void *)(a4 + 24);
    uint64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000LL < 0)
      {
        __break(1u);
LABEL_24:
        sub_5E908();
        uint64_t v25 = "Division by zero";
        uint64_t v26 = 16LL;
LABEL_26:
        uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  v25,  v26,  2LL,  "Swift/IntegerTypes.swift",  24LL);
        __break(1u);
        return result;
      }

      uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    uint64_t v10 = a2;
  }

  uint64_t v11 = *(void *)(a4 + 16);
  if (v10 <= v11) {
    uint64_t v12 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v18 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }

  uint64_t v13 = sub_41BC(a5);
  uint64_t v14 = *(void *)(((uint64_t (*)(void))a6)(0LL) - 8);
  uint64_t v15 = *(void *)(v14 + 72);
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = (v16 + 32) & ~v16;
  uint64_t v18 = (void *)swift_allocObject(v13, v17 + v15 * v12, v16 | 7);
  size_t v19 = j__malloc_size(v18);
  if (!v15) {
    goto LABEL_24;
  }
  if (v19 - v17 == 0x8000000000000000LL && v15 == -1)
  {
    sub_5E908();
    uint64_t v25 = "Division results in an overflow";
    uint64_t v26 = 31LL;
    goto LABEL_26;
  }

  v18[2] = v11;
  void v18[3] = 2 * ((uint64_t)(v19 - v17) / v15);
LABEL_19:
  uint64_t v21 = *(unsigned __int8 *)(*(void *)(((uint64_t (*)(void))a6)(0LL) - 8) + 80LL);
  uint64_t v22 = (v21 + 32) & ~v21;
  unint64_t v23 = (unint64_t)v18 + v22;
  if ((a1 & 1) != 0)
  {
    sub_5D944(a4 + v22, v11, v23, a6);
    sub_5E9AC();
  }

  else
  {
    sub_5D758(0LL, v11, v23, a4, (uint64_t (*)(void))a6);
  }

  return (uint64_t)v18;
}

uint64_t sub_5D600(char a1, int64_t a2, char a3, uint64_t a4)
{
  return sub_5D448(a1, a2, a3, a4, &qword_A3338, (void (*)(void))&type metadata accessor for SemanticValue);
}

uint64_t sub_5D614(char a1, int64_t a2, char a3, uint64_t a4)
{
  return sub_5D448(a1, a2, a3, a4, &qword_A3328, (void (*)(void))&type metadata accessor for RREntity);
}

uint64_t sub_5D628(char a1, int64_t a2, char a3, uint64_t a4)
{
  return sub_5D448( a1,  a2,  a3,  a4,  &qword_A3320,  (void (*)(void))&type metadata accessor for Siri_Nlu_External_UserDialogAct);
}

uint64_t sub_5D63C(char a1, int64_t a2, char a3, uint64_t a4)
{
  return sub_5D448( a1,  a2,  a3,  a4,  &qword_A2620,  (void (*)(void))&type metadata accessor for SpeakableString);
}

uint64_t sub_5D650(char a1, int64_t a2, char a3, uint64_t a4)
{
  return sub_5D448(a1, a2, a3, a4, &qword_A2658, (void (*)(void))&type metadata accessor for UsoEntitySpan);
}

uint64_t sub_5D664(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }

  if (v4 < 0)
  {
LABEL_9:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize with negative count",  51LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1090LL,  0);
    goto LABEL_11;
  }

  unint64_t v6 = a4 + 16 * a1 + 32;
  unint64_t v7 = a3 + 16 * v4;
  if (v6 >= v7 || v6 + 16 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    swift_bridgeObjectRelease(a4);
    return v7;
  }

  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_5D758(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }

  if (v5 < 0)
  {
LABEL_9:
    sub_5E908();
    sub_5E948();
    goto LABEL_11;
  }

  uint64_t v9 = *(void *)(a5(0LL) - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = *(void *)(v9 + 72);
  unint64_t v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
  uint64_t v13 = v11 * v5;
  unint64_t v14 = a3 + v13;
  unint64_t v15 = v12 + v13;
  if (v12 >= v14 || v15 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    swift_bridgeObjectRelease(a4);
    return v14;
  }

  sub_5E908();
  sub_5E938();
LABEL_11:
  uint64_t result = sub_5E91C(v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28);
  __break(1u);
  return result;
}

char *sub_5D848(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_5E908();
    uint64_t result = (char *)sub_5E91C( (uint64_t)"Fatal error",  11LL,  2LL,  (uint64_t)"UnsafeMutablePointer.moveInitialize with negative count",  55LL,  v4,  (uint64_t)"Swift/UnsafePointer.swift",  v5,  v6,  v7,  v8);
    __break(1u);
  }

  else if (a3 != result || &result[16 * a2] <= a3)
  {
    return (char *)sub_5E958(a3, result);
  }

  return result;
}

uint64_t sub_5D8AC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_5D944(a1, a2, a3, (void (*)(void))&type metadata accessor for UsoIdentifier);
}

uint64_t sub_5D8BC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_5D944(a1, a2, a3, (void (*)(void))&type metadata accessor for SpeakableString);
}

uint64_t sub_5D8C8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_5D944(a1, a2, a3, (void (*)(void))&type metadata accessor for UsoEntitySpan);
}

char *sub_5D8D4(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_5E908();
    uint64_t result = (char *)sub_5E91C( (uint64_t)"Fatal error",  11LL,  2LL,  (uint64_t)"UnsafeMutablePointer.moveInitialize with negative count",  55LL,  v4,  (uint64_t)"Swift/UnsafePointer.swift",  v5,  v6,  v7,  v8);
    __break(1u);
  }

  else if (a3 != result || &result[8 * a2] <= a3)
  {
    return (char *)sub_5E958(a3, result);
  }

  return result;
}

uint64_t sub_5D938(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_5D944(a1, a2, a3, (void (*)(void))type metadata accessor for HomeTarget);
}

uint64_t sub_5D944(unint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(void))
{
  if (a2 < 0)
  {
    sub_5E908();
    uint64_t result = sub_5E91C( (uint64_t)"Fatal error",  11LL,  2LL,  (uint64_t)"UnsafeMutablePointer.moveInitialize with negative count",  55LL,  v14,  (uint64_t)"Swift/UnsafePointer.swift",  v15,  v16,  v17,  v18);
    __break(1u);
  }

  else if (a3 < a1 {
         || (uint64_t result = ((uint64_t (*)(void))a4)(0LL),
  }
             a1 + *(void *)(*(void *)(result - 8) + 72LL) * a2 <= a3))
  {
    a4(0LL);
    uint64_t v10 = sub_5E998();
    return swift_arrayInitWithTakeFrontToBack(v10, v11, v12, v13);
  }

  else if (a3 != a1)
  {
    uint64_t v9 = sub_5E998();
    return swift_arrayInitWithTakeBackToFront(v9);
  }

  return result;
}

uint64_t sub_5DA18(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0)
  {
    sub_5E908();
    sub_5E948();
  }

  else
  {
    if (a3 + 16 * a2 <= a1 || a1 + 16 * a2 <= a3) {
      return swift_arrayInitWithCopy(a3);
    }
    sub_5E908();
    sub_5E938();
  }

  uint64_t result = sub_5E91C(v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15);
  __break(1u);
  return result;
}

uint64_t sub_5DAB4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_5DC30(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for UsoIdentifier);
}

uint64_t sub_5DAC0(uint64_t a1, uint64_t a2)
{
  return sub_5DB98(a1, a2);
}

uint64_t sub_5DACC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_5DC30(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for SpeakableString);
}

uint64_t sub_5DAD8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_5DC30(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for DisplayHint);
}

uint64_t sub_5DAE4(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_5E908();
    sub_5E948();
  }

  else
  {
    sub_5E97C();
    if (!v5 && v4)
    {
      BOOL v4 = v3 >= v2;
      BOOL v5 = v3 == v2;
    }

    else
    {
      BOOL v4 = 0;
      BOOL v5 = 0;
    }

    if (v5 || !v4)
    {
      sub_7B50(0LL, (unint64_t *)&qword_A0F08, &OBJC_CLASS___INHomeFilter_ptr);
      uint64_t v6 = sub_5E968();
      return sub_5E928(v6);
    }

    sub_5E908();
    sub_5E938();
  }

  uint64_t result = sub_5E91C(v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18);
  __break(1u);
  return result;
}

uint64_t sub_5DB80(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_5DC30(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for UsoEntitySpan);
}

uint64_t sub_5DB8C(uint64_t a1, uint64_t a2)
{
  return sub_5DB98(a1, a2);
}

uint64_t sub_5DB98(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_5E908();
    sub_5E948();
  }

  else
  {
    sub_5E97C();
    if (!v6 && v5)
    {
      BOOL v5 = v4 >= v2;
      BOOL v6 = v4 == v2;
    }

    else
    {
      BOOL v5 = 0;
      BOOL v6 = 0;
    }

    if (v6 || !v5)
    {
      sub_41BC(v3);
      uint64_t v7 = sub_5E968();
      return sub_5E928(v7);
    }

    sub_5E908();
    sub_5E938();
  }

  uint64_t result = sub_5E91C(v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19);
  __break(1u);
  return result;
}

uint64_t sub_5DC24(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_5DC30(a1, a2, a3, type metadata accessor for HomeTarget);
}

uint64_t sub_5DC30(unint64_t a1, uint64_t a2, unint64_t a3, uint64_t (*a4)(void))
{
  if (a2 < 0)
  {
    sub_5E908();
    sub_5E948();
  }

  else
  {
    uint64_t v6 = *(void *)(*(void *)(a4(0LL) - 8) + 72LL) * a2;
    unint64_t v7 = a3 + v6;
    unint64_t v8 = a1 + v6;
    if (v7 <= a1 || v8 <= a3)
    {
      uint64_t v10 = sub_5E968();
      return sub_5E928(v10);
    }

    sub_5E908();
    sub_5E938();
  }

  uint64_t result = sub_5E91C(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22);
  __break(1u);
  return result;
}

uint64_t sub_5DCDC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  Hasher.init(_seed:)(v24);
  swift_bridgeObjectRetain(v7);
  String.hash(into:)(v24, a2, a3);
  Swift::Int v8 = Hasher._finalize()();
  uint64_t v9 = -1LL << *(_BYTE *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v10) & 1) != 0)
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    uint64_t v13 = v12[1];
    BOOL v14 = *v12 == a2 && v13 == a3;
    if (v14 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v12, v13, a2, a3, 0LL) & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease(a3);
      swift_bridgeObjectRelease(v7);
      uint64_t v15 = (uint64_t *)(*(void *)(*v3 + 48LL) + 16 * v10);
      uint64_t v16 = v15[1];
      *a1 = *v15;
      a1[1] = v16;
      swift_bridgeObjectRetain(v16);
      return 0LL;
    }

    uint64_t v18 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v18;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v19 = (void *)(v11 + 16 * v10);
      uint64_t v20 = v19[1];
      BOOL v21 = *v19 == a2 && v20 == a3;
      if (v21 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v19, v20, a2, a3, 0LL) & 1) != 0) {
        goto LABEL_7;
      }
    }
  }

  swift_bridgeObjectRelease(v7);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  v24[0] = *v3;
  void *v3 = 0x8000000000000000LL;
  swift_bridgeObjectRetain(a3);
  sub_5E160(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  uint64_t v23 = *v3;
  void *v3 = v24[0];
  swift_bridgeObjectRelease(v23);
  *a1 = a2;
  a1[1] = a3;
  return 1LL;
}

Swift::Int sub_5DE88(uint64_t a1)
{
  unint64_t v2 = v1;
  uint64_t v3 = *v1;
  if (*(void *)(*v1 + 24) <= a1) {
    uint64_t v4 = a1;
  }
  else {
    uint64_t v4 = *(void *)(*v1 + 24);
  }
  sub_41BC(&qword_A3318);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1LL);
  uint64_t v6 = v5;
  if (*(void *)(v3 + 16))
  {
    uint64_t v7 = 1LL << *(_BYTE *)(v3 + 32);
    uint64_t v32 = v2;
    uint64_t v33 = (void *)(v3 + 56);
    if (v7 < 64) {
      uint64_t v8 = ~(-1LL << v7);
    }
    else {
      uint64_t v8 = -1LL;
    }
    unint64_t v9 = v8 & *(void *)(v3 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = v5 + 56;
    Swift::Int result = swift_retain(v3);
    int64_t v13 = 0LL;
    if (!v9) {
      goto LABEL_10;
    }
LABEL_9:
    unint64_t v14 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    for (unint64_t i = v14 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v13 << 6))
    {
      uint64_t v19 = (uint64_t *)(*(void *)(v3 + 48) + 16 * i);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      Hasher.init(_seed:)(v34);
      String.hash(into:)(v34, v20, v21);
      Swift::Int result = Hasher._finalize()();
      uint64_t v22 = -1LL << *(_BYTE *)(v6 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1LL << v23) & ~*(void *)(v11 + 8 * (v23 >> 6))) == 0)
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v22) >> 6;
        while (++v24 != v27 || (v26 & 1) == 0)
        {
          BOOL v28 = v24 == v27;
          if (v24 == v27) {
            unint64_t v24 = 0LL;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v11 + 8 * v24);
          if (v29 != -1)
          {
            unint64_t v25 = __clz(__rbit64(~v29)) + (v24 << 6);
            goto LABEL_33;
          }
        }

        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        return result;
      }

      unint64_t v25 = __clz(__rbit64((-1LL << v23) & ~*(void *)(v11 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0LL;
LABEL_33:
      *(void *)(v11 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v25;
      os_log_type_t v30 = (void *)(*(void *)(v6 + 48) + 16 * v25);
      *os_log_type_t v30 = v20;
      v30[1] = v21;
      ++*(void *)(v6 + 16);
      if (v9) {
        goto LABEL_9;
      }
LABEL_10:
      int64_t v16 = v13 + 1;
      if (__OFADD__(v13, 1LL)) {
        goto LABEL_41;
      }
      if (v16 >= v10) {
        goto LABEL_35;
      }
      unint64_t v17 = v33[v16];
      ++v13;
      if (!v17)
      {
        int64_t v13 = v16 + 1;
        if (v16 + 1 >= v10) {
          goto LABEL_35;
        }
        unint64_t v17 = v33[v13];
        if (!v17)
        {
          int64_t v13 = v16 + 2;
          if (v16 + 2 >= v10) {
            goto LABEL_35;
          }
          unint64_t v17 = v33[v13];
          if (!v17)
          {
            int64_t v18 = v16 + 3;
            if (v18 >= v10)
            {
LABEL_35:
              swift_release(v3);
              unint64_t v2 = v32;
              uint64_t v31 = 1LL << *(_BYTE *)(v3 + 32);
              if (v31 > 63) {
                sub_5E2F8(0LL, (unint64_t)(v31 + 63) >> 6, v33);
              }
              else {
                void *v33 = -1LL << v31;
              }
              *(void *)(v3 + 16) = 0LL;
              break;
            }

            unint64_t v17 = v33[v18];
            if (!v17)
            {
              while (1)
              {
                int64_t v13 = v18 + 1;
                if (__OFADD__(v18, 1LL)) {
                  goto LABEL_42;
                }
                if (v13 >= v10) {
                  goto LABEL_35;
                }
                unint64_t v17 = v33[v13];
                ++v18;
                if (v17) {
                  goto LABEL_23;
                }
              }
            }

            int64_t v13 = v18;
          }
        }
      }

LABEL_23:
      unint64_t v9 = (v17 - 1) & v17;
    }
  }

  Swift::Int result = swift_release(v3);
  *unint64_t v2 = v6;
  return result;
}

    int64_t v10 = (v17 - 1) & v17;
  }

  int64_t v18 = v16 + 3;
  if (v18 >= v32)
  {
LABEL_35:
    Swift::Int result = swift_release_n(v3, 2LL);
    unint64_t v2 = v31;
    goto LABEL_37;
  }

  unint64_t v17 = *(void *)(v8 + 8 * v18);
  if (v17)
  {
    int64_t v13 = v18;
    goto LABEL_23;
  }

  while (1)
  {
    int64_t v13 = v18 + 1;
    if (__OFADD__(v18, 1LL)) {
      break;
    }
    if (v13 >= v32) {
      goto LABEL_35;
    }
    unint64_t v17 = *(void *)(v8 + 8 * v13);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }

uint64_t sub_5E160(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  uint64_t v11 = v9 + 1;
  if ((a4 & 1) != 0)
  {
    sub_5DE88(v11);
  }

  else
  {
    if (v10 > v9)
    {
      Swift::Int result = (uint64_t)sub_5E314();
      goto LABEL_22;
    }

    sub_5E4C4(v11);
  }

  uint64_t v12 = *v4;
  Hasher.init(_seed:)(v28);
  String.hash(into:)(v28, v8, a2);
  Swift::Int result = Hasher._finalize()();
  uint64_t v13 = -1LL << *(_BYTE *)(v12 + 32);
  a3 = result & ~v13;
  uint64_t v14 = v12 + 56;
  if (((*(void *)(v12 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> a3) & 1) != 0)
  {
    uint64_t v15 = *(void *)(v12 + 48);
    int64_t v16 = (void *)(v15 + 16 * a3);
    uint64_t v17 = v16[1];
    BOOL v18 = *v16 == v8 && v17 == a2;
    if (v18 || (Swift::Int result = _stringCompareWithSmolCheck(_:_:expecting:)(*v16, v17, v8, a2, 0LL), (result & 1) != 0))
    {
LABEL_21:
      Swift::Int result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
      __break(1u);
    }

    else
    {
      uint64_t v19 = ~v13;
      while (1)
      {
        a3 = (a3 + 1) & v19;
        if (((*(void *)(v14 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v20 = (void *)(v15 + 16 * a3);
        uint64_t v21 = v20[1];
        if (*v20 != v8 || v21 != a2)
        {
          Swift::Int result = _stringCompareWithSmolCheck(_:_:expecting:)(*v20, v21, v8, a2, 0LL);
          if ((result & 1) == 0) {
            continue;
          }
        }

        goto LABEL_21;
      }
    }
  }

LABEL_22:
  uint64_t v23 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1LL << a3;
  unint64_t v24 = (uint64_t *)(*(void *)(v23 + 48) + 16 * a3);
  uint64_t *v24 = v8;
  v24[1] = a2;
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1LL);
  uint64_t v27 = v25 + 1;
  if (v26) {
    __break(1u);
  }
  else {
    *(void *)(v23 + 16) = v27;
  }
  return result;
}

uint64_t sub_5E2F8(uint64_t result, uint64_t a2, void *a3)
{
  if (a2 < 0)
  {
    __break(1u);
  }

  else
  {
    for (; a2; --a2)
      *a3++ = result;
  }

  return result;
}

void *sub_5E314()
{
  uint64_t v1 = v0;
  sub_41BC(&qword_A3318);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)(*v0);
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    Swift::Int result = (void *)swift_release(v2);
    uint64_t *v1 = v4;
    return result;
  }

  Swift::Int result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1LL << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  int64_t v9 = 0LL;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1LL << *(_BYTE *)(v2 + 32);
  uint64_t v11 = *(void *)(v2 + 56);
  uint64_t v12 = -1LL;
  if (v10 < 64) {
    uint64_t v12 = ~(-1LL << v10);
  }
  unint64_t v13 = v12 & v11;
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v15 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    uint64_t v20 = (void *)(*(void *)(v2 + 48) + 16 * i);
    uint64_t v21 = v20[1];
    uint64_t v22 = (void *)(*(void *)(v4 + 48) + 16 * i);
    void *v22 = *v20;
    v22[1] = v21;
    Swift::Int result = (void *)swift_bridgeObjectRetain(v21);
    if (v13) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1LL))
    {
      __break(1u);
      goto LABEL_30;
    }

    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18)
      {
        int64_t v9 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v9);
        if (!v18) {
          break;
        }
      }
    }

Swift::Int sub_5E4C4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *v1;
  if (*(void *)(*v1 + 24) <= a1) {
    uint64_t v4 = a1;
  }
  else {
    uint64_t v4 = *(void *)(*v1 + 24);
  }
  sub_41BC(&qword_A3318);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0LL);
  uint64_t v6 = v5;
  if (!*(void *)(v3 + 16))
  {
    Swift::Int result = swift_release(v3);
LABEL_37:
    *uint64_t v2 = v6;
    return result;
  }

  uint64_t v7 = 1LL << *(_BYTE *)(v3 + 32);
  uint64_t v8 = v3 + 56;
  if (v7 < 64) {
    uint64_t v9 = ~(-1LL << v7);
  }
  else {
    uint64_t v9 = -1LL;
  }
  unint64_t v10 = v9 & *(void *)(v3 + 56);
  uint64_t v31 = v2;
  int64_t v32 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = v5 + 56;
  Swift::Int result = swift_retain(v3);
  int64_t v13 = 0LL;
  if (!v10) {
    goto LABEL_10;
  }
LABEL_9:
  unint64_t v14 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v14 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v13 << 6))
  {
    int64_t v19 = (uint64_t *)(*(void *)(v3 + 48) + 16 * i);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    Hasher.init(_seed:)(v33);
    swift_bridgeObjectRetain(v21);
    String.hash(into:)(v33, v20, v21);
    Swift::Int result = Hasher._finalize()();
    uint64_t v22 = -1LL << *(_BYTE *)(v6 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1LL << v23) & ~*(void *)(v11 + 8 * (v23 >> 6))) == 0)
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v22) >> 6;
      while (++v24 != v27 || (v26 & 1) == 0)
      {
        BOOL v28 = v24 == v27;
        if (v24 == v27) {
          unint64_t v24 = 0LL;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v24);
        if (v29 != -1)
        {
          unint64_t v25 = __clz(__rbit64(~v29)) + (v24 << 6);
          goto LABEL_33;
        }
      }

      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }

    unint64_t v25 = __clz(__rbit64((-1LL << v23) & ~*(void *)(v11 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0LL;
LABEL_33:
    *(void *)(v11 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v25;
    os_log_type_t v30 = (void *)(*(void *)(v6 + 48) + 16 * v25);
    *os_log_type_t v30 = v20;
    v30[1] = v21;
    ++*(void *)(v6 + 16);
    if (v10) {
      goto LABEL_9;
    }
LABEL_10:
    int64_t v16 = v13 + 1;
    if (__OFADD__(v13, 1LL)) {
      goto LABEL_39;
    }
    if (v16 >= v32) {
      goto LABEL_35;
    }
    unint64_t v17 = *(void *)(v8 + 8 * v16);
    ++v13;
    if (!v17)
    {
      int64_t v13 = v16 + 1;
      if (v16 + 1 >= v32) {
        goto LABEL_35;
      }
      unint64_t v17 = *(void *)(v8 + 8 * v13);
      if (!v17)
      {
        int64_t v13 = v16 + 2;
        if (v16 + 2 >= v32) {
          goto LABEL_35;
        }
        unint64_t v17 = *(void *)(v8 + 8 * v13);
        if (!v17) {
          break;
        }
      }
    }

LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_5E76C(void *a1)
{
  id v1 = [a1 stoppedAnnouncementRecords];
  if (!v1) {
    return 0LL;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_7B50(0LL, (unint64_t *)&qword_A13D8, &OBJC_CLASS___INAnnouncementRecord_ptr);
  uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  return v4;
}

uint64_t sub_5E7D8(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1LL << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }

  if (((*(void *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8LL) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }

  if (*(_DWORD *)(a4 + 36) == a2)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a4 + 48) + 16 * result);
    uint64_t v5 = *v4;
    swift_bridgeObjectRetain(v4[1]);
    return v5;
  }

LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_5E854(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0LL;
    return __clz(__rbit64(v1)) + v2;
  }

  char v5 = *(_BYTE *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1LL << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64LL;
    return __clz(__rbit64(v1)) + v2;
  }

  uint64_t v2 = 64LL;
  for (uint64_t i = 9LL; i - 7 < (unint64_t)(v3 + 63) >> 6; ++i)
  {
    unint64_t v1 = *(void *)(a1 + 8 * i);
    v2 += 64LL;
    if (v1) {
      return __clz(__rbit64(v1)) + v2;
    }
  }

  return v3;
}

uint64_t sub_5E8D8()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

  ;
}

uint64_t sub_5E91C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, uint64_t a10, int a11)
{
  return _fatalErrorMessage(_:_:file:line:flags:)(a1, a2, a3, a4, a5, 2LL, a7, 25LL, a9, a10, a11);
}

uint64_t sub_5E928(uint64_t a1)
{
  return swift_arrayInitWithCopy(a1);
}

  ;
}

  ;
}

void *sub_5E958@<X0>(void *__dst@<X2>, const void *a2@<X8>)
{
  return memmove(__dst, a2, v2);
}

uint64_t sub_5E968()
{
  return v0;
}

  ;
}

uint64_t sub_5E998()
{
  return v0;
}

uint64_t sub_5E9AC()
{
  *(void *)(v0 + 16) = 0LL;
  return swift_bridgeObjectRelease(v0);
}

char *sub_5E9B8(char *a1, int64_t a2)
{
  return sub_5D33C(a1, a2, 1, v2);
}

uint64_t type metadata accessor for StopAnnouncementCATs(uint64_t a1)
{
  uint64_t result = qword_A3350;
  if (!qword_A3350) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for StopAnnouncementCATs);
  }
  return result;
}

uint64_t sub_5E9FC(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL);
}

uint64_t sub_5EA38()
{
  return dispatch thunk of CATWrapper.execute(catId:parameters:completion:)(0xD00000000000001DLL);
}

uint64_t sub_5EA64(char a1)
{
  uint64_t v2 = sub_41BC(&qword_A1A90);
  uint64_t v3 = swift_allocObject(v2, 80LL, 7LL);
  *(_OWORD *)(v3 + 16) = xmmword_6FA70;
  *(void *)(v3 + 3sub_423C(v0 + 2) = 0xD000000000000016LL;
  *(void *)(v3 + 40) = 0x8000000000078EF0LL;
  *(void *)(v3 + 7sub_423C(v0 + 2) = &type metadata for Bool;
  *(_BYTE *)(v3 + 4sub_423C(v0 + 8) = a1;
  dispatch thunk of CATWrapper.execute(catId:parameters:completion:)(0xD000000000000026LL);
  return swift_bridgeObjectRelease(v3);
}

uint64_t sub_5EB14()
{
  return type metadata accessor for StopAnnouncementCATs(0LL);
}

uint64_t type metadata accessor for StopAnnouncementCATsSimple(uint64_t a1)
{
  uint64_t result = qword_A33A0;
  if (!qword_A33A0) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for StopAnnouncementCATsSimple);
  }
  return result;
}

uint64_t sub_5EB54(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL);
}

uint64_t sub_5EB90()
{
  uint64_t v1 = sub_5EDAC((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  uint64_t v2 = (void *)swift_task_alloc(v1);
  *(void *)(v0 + 16) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_F5FC;
  return v4(0xD00000000000001DLL, 0x8000000000078F10LL, _swiftEmptyArrayStorage);
}

uint64_t sub_5EBFC(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(_BYTE *)(v2 + 4sub_423C(v0 + 8) = a1;
  return swift_task_switch(sub_5EC18, 0LL, 0LL);
}

uint64_t sub_5EC18()
{
  char v1 = *(_BYTE *)(v0 + 48);
  uint64_t v2 = sub_41BC(&qword_A1A90);
  uint64_t v3 = swift_allocObject(v2, 80LL, 7LL);
  *(void *)(v3 + 3sub_423C(v0 + 2) = 0xD000000000000016LL;
  *(void *)(v3 + 40) = 0x8000000000078EF0LL;
  *(void *)(v3 + 7sub_423C(v0 + 2) = &type metadata for Bool;
  *(_BYTE *)(v3 + 4sub_423C(v0 + 8) = v1;
  uint64_t v4 = sub_5EDAC((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 24) = v3;
  *(_OWORD *)(v3 + 16) = v5;
  unsigned int v6 = (void *)swift_task_alloc(v4);
  *(void *)(v0 + 3sub_423C(v0 + 2) = v6;
  *unsigned int v6 = v0;
  v6[1] = sub_5ECE8;
  return v8(0xD000000000000026LL, 0x8000000000078EC0LL, v3);
}

uint64_t sub_5ECE8(uint64_t a1)
{
  uint64_t v4 = *(void *)(*v2 + 32);
  uint64_t v5 = *v2;
  *(void *)(v5 + 40) = v1;
  swift_task_dealloc(v4);
  if (v1) {
    return swift_task_switch(sub_5ED70, 0LL, 0LL);
  }
  swift_bridgeObjectRelease(*(void *)(v5 + 24));
  return (*(uint64_t (**)(uint64_t))(v5 + 8))(a1);
}

uint64_t sub_5ED70()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_5EDA4()
{
  return type metadata accessor for StopAnnouncementCATsSimple(0LL);
}

uint64_t sub_5EDAC@<X0>(uint64_t a1@<X8>)
{
  return *(unsigned int *)(a1 + 4);
}

uint64_t sub_5EDC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_5EE08( a1,  a2,  a3,  a4,  &qword_A3558,  (uint64_t (*)(uint64_t))type metadata accessor for ReadAnnouncementFlowStrategy,  &qword_A3560,  (uint64_t)&unk_72E08);
}

uint64_t sub_5EDE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_5EE08( a1,  a2,  a3,  a4,  &qword_A3548,  (uint64_t (*)(uint64_t))type metadata accessor for SendAnnouncementFlowStrategy,  &qword_A3550,  (uint64_t)&unk_738B8);
}

uint64_t sub_5EE08( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(uint64_t), unint64_t *a7, uint64_t a8)
{
  uint64_t v23 = a4;
  uint64_t v14 = sub_41BC(a5);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  unint64_t v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = a1;
  uint64_t v18 = a6(0LL);
  sub_A880(a7, a6, a8);
  uint64_t v20 = v19;
  swift_retain(a1);
  swift_retain(a2);
  RCHFlowFactory.init(strategy:childFlowFactory:)(&v24, a2, v18, v20);
  uint64_t v21 = RCHFlowFactory.makeRCHFlowWithResolvedApp(_:intent:)(a3, v23, v14);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  return v21;
}

BOOL sub_5EF14()
{
  uint64_t v0 = type metadata accessor for Parse(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  Input.parse.getter(v2);
  int v5 = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v4, v0);
  int v6 = enum case for Parse.directInvocation(_:);
  if (v5 == enum case for Parse.directInvocation(_:))
  {
    if (qword_9F820 != -1) {
      swift_once(&qword_9F820, sub_17ADC);
    }
    uint64_t v7 = type metadata accessor for Logger(0LL);
    uint64_t v8 = sub_4870(v7, (uint64_t)qword_A3EB0);
    uint64_t v9 = (os_log_s *)Logger.logObject.getter(v8);
    os_log_type_t v10 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)sub_A968();
      *(_WORD *)uint64_t v11 = 0;
      sub_1BE98(&dword_0, v9, v10, "#StopAnnouncementFlow handling direct invocation.", v11);
      sub_48D4((uint64_t)v11);
    }
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  return v5 == v6;
}

uint64_t sub_5F068(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StopAnnouncementFlow(0LL);
  sub_A880(&qword_A0308, type metadata accessor for StopAnnouncementFlow, (uint64_t)&unk_74960);
  return Flow.deferToExecuteAsync(_:)(a1, a2, v4, v5);
}

uint64_t sub_5F0DC(uint64_t a1)
{
  v2[29] = a1;
  v2[30] = v1;
  uint64_t v3 = type metadata accessor for CATOption(0LL);
  v2[31] = sub_A8C8(*(void *)(*(void *)(v3 - 8) + 64LL));
  uint64_t v4 = sub_41BC(&qword_A3500);
  v2[32] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v2[33] = v5;
  unint64_t v6 = (*(void *)(v5 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[34] = swift_task_alloc(v6);
  v2[35] = swift_task_alloc(v6);
  uint64_t v7 = type metadata accessor for Parse(0LL);
  v2[36] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v2[37] = v8;
  v2[38] = sub_A8C8(*(void *)(v8 + 64));
  return swift_task_switch(sub_5F188, 0LL, 0LL);
}

uint64_t sub_5F188()
{
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v1 = type metadata accessor for Logger(0LL);
  uint64_t v2 = sub_4870(v1, (uint64_t)qword_A3EB0);
  *(void *)(v0 + 3sub_423C(v0 + 12) = v2;
  uint64_t v3 = (os_log_s *)Logger.logObject.getter(v2);
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)sub_A968();
    *(_WORD *)uint64_t v5 = 0;
    sub_1BE98(&dword_0, v3, v4, "#StopAnnouncementFlow execute", v5);
    sub_48D4((uint64_t)v5);
  }

  uint64_t v6 = *(void *)(v0 + 240);

  sub_A798(v6 + 64, v0 + 16);
  sub_A798(v6 + 16, v0 + 56);
  static SiriKitEventSender.current.getter((void *)(v0 + 96));
  uint64_t v7 = *(void *)(v0 + 40);
  uint64_t v8 = sub_A7D8(v0 + 16, v7);
  uint64_t v9 = *(void *)(v7 - 8);
  uint64_t v10 = sub_A8C8(*(void *)(v9 + 64));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v10, v8, v7);
  uint64_t v11 = type metadata accessor for SharedGlobals(0LL);
  *(void *)(v0 + 160) = v11;
  *(void *)(v0 + 16sub_423C(v0 + 8) = &off_977A0;
  uint64_t v12 = sub_A800((void *)(v0 + 136));
  sub_A83C(v10, (uint64_t)v12);
  uint64_t v13 = type metadata accessor for StopAnnouncementFlowStrategy();
  uint64_t v14 = (void *)swift_allocObject(v13, 136LL, 7LL);
  *(void *)(v0 + 320) = v14;
  uint64_t v15 = *(void *)(v0 + 160);
  uint64_t v16 = sub_A7D8(v0 + 136, v15);
  uint64_t v17 = *(void *)(v15 - 8);
  uint64_t v18 = sub_A8C8(*(void *)(v17 + 64));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v18, v16, v15);
  void v14[5] = v11;
  v14[6] = &off_977A0;
  uint64_t v19 = sub_A800(v14 + 2);
  sub_A83C(v18, (uint64_t)v19);
  sub_A780((__int128 *)(v0 + 56), (uint64_t)(v14 + 7));
  sub_A780((__int128 *)(v0 + 96), (uint64_t)(v14 + 12));
  sub_423C((void *)(v0 + 136));
  swift_task_dealloc(v18);
  sub_423C((void *)(v0 + 16));
  uint64_t v20 = swift_task_dealloc(v10);
  Input.parse.getter(v20);
  uint64_t v21 = (void *)swift_task_alloc(dword_A3594);
  *(void *)(v0 + 32sub_423C(v0 + 8) = v21;
  *uint64_t v21 = v0;
  v21[1] = sub_5F3FC;
  return sub_5FF9C(*(void *)(v0 + 304), 0LL);
}

uint64_t sub_5F3FC(uint64_t a1)
{
  os_log_type_t v4 = *(void **)v2;
  uint64_t v5 = *(void *)(*(void *)v2 + 328LL);
  *(void *)(*(void *)v2 + 336LL) = v1;
  swift_task_dealloc(v5);
  uint64_t v7 = v4[37];
  uint64_t v6 = v4[38];
  uint64_t v8 = v4[36];
  if (v1)
  {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    uint64_t v9 = sub_5F798;
  }

  else
  {
    v4[43] = a1;
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    uint64_t v9 = sub_5F488;
  }

  return swift_task_switch(v9, 0LL, 0LL);
}

uint64_t sub_5F488()
{
  uint64_t v32 = *(void *)(v0 + 320);
  uint64_t v33 = *(void **)(v0 + 344);
  uint64_t v30 = *(void *)(v0 + 264);
  uint64_t v31 = *(void *)(v0 + 272);
  uint64_t v34 = *(void *)(v0 + 280);
  uint64_t v1 = *(void *)(v0 + 240) + 64LL;
  uint64_t v29 = (void *)v1;
  uint64_t v2 = *(void *)(v0 + 240);
  uint64_t v27 = *(void *)(v0 + 256);
  uint64_t v28 = v2;
  uint64_t v26 = sub_7B50(0LL, &qword_A3508, &OBJC_CLASS___INStopAnnouncementIntent_ptr);
  uint64_t v3 = sub_7B50(0LL, &qword_A3510, &OBJC_CLASS___INStopAnnouncementIntentResponse_ptr);
  RCHChildFlowProducersAsync.init()(v26, v3);
  uint64_t v4 = *(void *)(v2 + 56);
  sub_A798(v1, v0 + 176);
  type metadata accessor for StopAnnouncementCATsSimple(0LL);
  uint64_t v5 = swift_retain(v4);
  static CATOption.defaultMode.getter(v5);
  uint64_t v6 = sub_172D4();
  uint64_t v7 = type metadata accessor for HomeCommunicationDisplayTextCATsSimple(0LL);
  static CATOption.defaultMode.getter(v7);
  uint64_t v8 = sub_172D4();
  uint64_t v9 = *(void *)(v0 + 200);
  uint64_t v10 = sub_A7D8(v0 + 176, v9);
  uint64_t v11 = *(void *)(v9 - 8);
  uint64_t v12 = sub_A8C8(*(void *)(v11 + 64));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v12, v10, v9);
  uint64_t v13 = sub_5FB3C(v4, v12, v6, v8);
  sub_423C((void *)(v0 + 176));
  swift_task_dealloc(v12);
  *(void *)(v0 + 216) = v13;
  uint64_t v14 = type metadata accessor for StopAnnouncementIntentHandledStrategy(0LL);
  sub_A880(&qword_A3518, type metadata accessor for StopAnnouncementIntentHandledStrategy, (uint64_t)&unk_74C40);
  uint64_t v16 = static RCHChildFlowFactoryHelper.makeHandleIntentFlowProducer<A>(strategy:)(v0 + 216, v14, v15);
  RCHChildFlowProducersAsync.handleIntentFlowProducer.setter(v16);
  uint64_t v17 = static RCHChildFlowFactoryHelper.makeAppResolutionFlowProducer<A, B>(app:)(v4, v26, v3);
  RCHChildFlowProducersAsync.appResolutionFlowProducer.setter(v17);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v31, v34, v27);
  uint64_t v18 = sub_41BC(&qword_A3520);
  swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
  uint64_t v19 = RCHChildFlowFactory.init(producers:)(v31);
  uint64_t v20 = sub_8504(v29, *(void *)(v28 + 88));
  sub_8504(v20 + 2, v20[5]);
  uint64_t v21 = sub_5EE08( v32,  v19,  v4,  (uint64_t)v33,  &qword_A3538,  (uint64_t (*)(uint64_t))type metadata accessor for StopAnnouncementFlowStrategy,  &qword_A3540,  (uint64_t)&unk_74AB8);
  *(void *)(v0 + 224) = v21;
  uint64_t v22 = sub_41BC(&qword_A3528);
  unint64_t v23 = sub_5FC34();
  uint64_t v24 = Flow.eraseToAnyFlow()(v22, v23);
  swift_release(v21);
  static ExecuteResponse.complete(next:)(v24);
  swift_release(v24);
  swift_release(v19);
  swift_release(v13);

  swift_release(v32);
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v34, v27);
  sub_33B78();
  swift_task_dealloc(v24);
  swift_task_dealloc(v30);
  swift_task_dealloc(v21);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_5F798()
{
  uint64_t v1 = swift_release(*(void *)(v0 + 320));
  uint64_t v2 = (os_log_s *)Logger.logObject.getter(v1);
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)sub_A968();
    *(_WORD *)uint64_t v4 = 0;
    sub_1BE98(&dword_0, v2, v3, "#StopAnnouncementFlow Error thrown while creating RCH flow", v4);
    sub_48D4((uint64_t)v4);
  }

  uint64_t v5 = *(void *)(v0 + 336);
  uint64_t v6 = *(void *)(v0 + 232);

  static ExecuteResponse.complete()(v7);
  swift_errorRelease(v5);
  sub_33B78();
  swift_task_dealloc(v2);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_5F85C()
{
  uint64_t v1 = (char *)v0 + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin20StopAnnouncementFlow_input;
  uint64_t v2 = type metadata accessor for Input(0LL);
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8LL))(v1, v2);
  sub_AA5C();
}

uint64_t sub_5F8B4()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_5F8D8()
{
  return type metadata accessor for StopAnnouncementFlow(0LL);
}

uint64_t type metadata accessor for StopAnnouncementFlow(uint64_t a1)
{
  uint64_t result = qword_A3430;
  if (!qword_A3430) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for StopAnnouncementFlow);
  }
  return result;
}

uint64_t sub_5F918(uint64_t a1)
{
  v4[0] = "(";
  v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  void v4[2] = "(";
  uint64_t result = type metadata accessor for Input(319LL);
  if (v3 <= 0x3F)
  {
    void v4[3] = *(void *)(result - 8) + 64LL;
    uint64_t result = swift_updateClassMetadata2(a1, 256LL, 4LL, v4, a1 + 80);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

BOOL sub_5F9A0()
{
  return sub_5EF14();
}

uint64_t sub_5F9B8(uint64_t a1, uint64_t a2)
{
  return sub_5F068(a1, a2);
}

uint64_t sub_5F9D8(uint64_t a1)
{
  unint64_t v3 = (void *)swift_task_alloc(dword_A3444);
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_A65C;
  return sub_5F0DC(a1);
}

uint64_t sub_5FA2C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for StopAnnouncementFlow(0LL);
  return Flow<>.exitValue.getter(v3, a2);
}

void *sub_5FA54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10 = type metadata accessor for DialogPhase(0LL);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = type metadata accessor for SharedGlobals(0LL);
  uint64_t v19 = &off_977A0;
  uint64_t v13 = sub_A800(&v17);
  uint64_t v14 = sub_A83C(a2, (uint64_t)v13);
  static DialogPhase.completion.getter(v14);
  OutputGenerationManifest.init(dialogPhase:_:)(v12, sub_A45C, 0LL);
  a5[8] = a1;
  sub_A780(&v17, (uint64_t)(a5 + 2));
  a5[7] = a3;
  a5[9] = a4;
  return a5;
}

void *sub_5FB3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v19 = type metadata accessor for SharedGlobals(0LL);
  uint64_t v20 = &off_977A0;
  uint64_t v8 = sub_A800(v18);
  sub_A83C(a2, (uint64_t)v8);
  uint64_t v9 = type metadata accessor for StopAnnouncementIntentHandledStrategy(0LL);
  uint64_t v10 = (void *)swift_allocObject(v9, *(unsigned int *)(v9 + 48), *(unsigned __int16 *)(v9 + 52));
  uint64_t v11 = sub_A7D8((uint64_t)v18, v19);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v18[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *))(v14 + 16))(v13);
  uint64_t v15 = sub_5FA54(a1, (uint64_t)v13, a3, a4, v10);
  sub_423C(v18);
  return v15;
}

unint64_t sub_5FC34()
{
  unint64_t result = qword_A3530;
  if (!qword_A3530)
  {
    uint64_t v1 = sub_8564(&qword_A3528);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for AnyValueFlow<A>, v1);
    atomic_store(result, (unint64_t *)&qword_A3530);
  }

  return result;
}

uint64_t sub_5FC78(os_log_s *a1)
{
  uint64_t v4 = type metadata accessor for Parse.DirectInvocation(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v30 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for Parse(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v11 = type metadata accessor for Logger(0LL);
  sub_4870(v11, (uint64_t)qword_A3EB0);
  sub_6088C();
  os_log_type_t v12 = sub_A9E8();
  if (os_log_type_enabled(v1, v12))
  {
    uint64_t v13 = (uint8_t *)sub_A968();
    uint64_t v29 = v2;
    uint64_t v14 = (uint64_t)v13;
    *(_WORD *)uint64_t v13 = 0;
    sub_1BE98(&dword_0, v1, v12, "#StopAnnouncementFlowStrategy.actionForInput() handling", v13);
    sub_48D4(v14);
  }

  uint64_t v15 = a1;
  Input.parse.getter(v16);
  if ((*(unsigned int (**)(char *, uint64_t))(v8 + 88))(v10, v7) == enum case for Parse.directInvocation(_:))
  {
    (*(void (**)(char *, uint64_t))(v8 + 96))(v10, v7);
    __int128 v17 = v30;
    uint64_t v18 = (*(uint64_t (**)(char *, char *, uint64_t))(v5 + 32))(v30, v10, v4);
    uint64_t v19 = Parse.DirectInvocation.identifier.getter(v18);
    uint64_t v15 = v20;
    if (v19 == 0xD000000000000036LL && v20 == (os_log_s *)0x8000000000076550LL)
    {
      swift_bridgeObjectRelease(0x8000000000076550LL);
LABEL_11:
      sub_38434();
      os_log_type_t v22 = sub_A9E8();
      if (os_log_type_enabled(v15, v22))
      {
        unint64_t v23 = (uint8_t *)sub_A968();
        *(_WORD *)unint64_t v23 = 0;
        sub_1BE98( &dword_0,  v15,  v22,  "#StopAnnouncementFlowStrategy user tapped stop button. Handling direct invocations.",  v23);
        sub_48D4((uint64_t)v23);
      }

      static ActionForInput.handle()(v24);
      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v17, v4);
    }

    char v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v20, 0xD000000000000036LL, 0x8000000000076550LL, 0LL);
    swift_bridgeObjectRelease(v15);
    if ((v21 & 1) != 0) {
      goto LABEL_11;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v17, v4);
  }

  else
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }

  sub_38434();
  os_log_type_t v26 = sub_A9E8();
  if (os_log_type_enabled(v15, v26))
  {
    uint64_t v27 = (uint8_t *)sub_A968();
    *(_WORD *)uint64_t v27 = 0;
    sub_1BE98( &dword_0,  v15,  v26,  "#StopAnnouncementFlowStrategy the action is not a direct invocation. Ignoring to let flow up the stack to handle this.",  v27);
    sub_48D4((uint64_t)v27);
  }

  return static ActionForInput.ignore()(v28);
}

uint64_t sub_5FF9C(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 96) = a2;
  *(void *)(v3 + 104) = v2;
  return swift_task_switch(sub_5FFB4, 0LL, 0LL);
}

uint64_t sub_5FFB4()
{
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v2 = type metadata accessor for Logger(0LL);
  sub_4870(v2, (uint64_t)qword_A3EB0);
  sub_6088C();
  os_log_type_t v3 = sub_A9E8();
  if (os_log_type_enabled(v0, v3))
  {
    uint64_t v4 = (uint8_t *)sub_A968();
    *(_WORD *)uint64_t v4 = 0;
    sub_1BE98(&dword_0, v0, v3, "#StopAnnouncementFlowStrategy makeIntentFromParse(parse:currentIntent:) called", v4);
    sub_48D4((uint64_t)v4);
  }

  uint64_t v5 = *(void *)(v1 + 96);

  NSString v6 = *(NSString *)(v1 + 96);
  if (v5) {
    id v7 = *(id *)(v1 + 96);
  }
  else {
    id v7 = [objc_allocWithZone(INStopAnnouncementIntent) init];
  }
  id v8 = v6;
  id v9 = sub_60880();
  if (v9)
  {
    uint64_t v10 = v9;
    static AceService.currentAsync.getter(v9);
    uint64_t v11 = *(void *)(v1 + 40);
    uint64_t v12 = *(void *)(v1 + 48);
    sub_8504((void *)(v1 + 16), v11);
    dispatch thunk of AceServiceInvokerAsync.endpointInfo()(v11, v12);
    uint64_t v13 = *(void *)(v1 + 80);
    uint64_t v14 = *(void *)(v1 + 88);
    sub_8504((void *)(v1 + 56), v13);
    dispatch thunk of EndpointInfoProviding.getIdentifier()(v13, v14);
    if (v15)
    {
      uint64_t v16 = v15;
      NSString v6 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v16);
    }

    else
    {
      NSString v6 = 0LL;
    }

    sub_423C((void *)(v1 + 56));
    sub_423C((void *)(v1 + 16));
    [v10 setEndpointId:v6];
  }

  id v17 = v7;
  sub_38434();
  os_log_type_t v18 = sub_A9E8();
  if (os_log_type_enabled((os_log_t)v6, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v20 = swift_slowAlloc(32LL, -1LL);
    uint64_t v41 = v20;
    *(_DWORD *)uint64_t v19 = 136315138;
    id v21 = sub_60880();
    if (v21) {
      id v21 = (id)sub_60814(v21);
    }
    else {
      uint64_t v22 = 0LL;
    }
    *(void *)(v1 + 24) = v22;
    *(void *)(v1 + 16) = v21;
    uint64_t v23 = sub_41BC(&qword_A1D68);
    uint64_t v24 = String.init<A>(describing:)(v1 + 16, v23);
    unint64_t v26 = v25;
    *(void *)(v1 + 16) = sub_68DC4(v24, v25, &v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 16, v1 + 24, v19 + 4, v19 + 12);
    swift_bridgeObjectRelease(v26);

    _os_log_impl(&dword_0, (os_log_t)v6, v18, "#StopAnnouncementFlowStrategy setting endpoint ID=%s", v19, 0xCu);
    swift_arrayDestroy(v20, 1LL, (char *)&type metadata for Any + 8);
    sub_48D4(v20);
    sub_48D4((uint64_t)v19);
  }

  else
  {
  }

  uint64_t v27 = *(void **)(v1 + 104);
  uint64_t v28 = v27[15];
  uint64_t v29 = v27[16];
  sub_8504(v27 + 12, v28);
  type metadata accessor for SiriKitEvent(0LL);
  uint64_t v30 = v27[10];
  uint64_t v31 = v27[11];
  sub_8504(v27 + 7, v30);
  char v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 16))(v30, v31);
  sub_178BC(v32);
  uint64_t v34 = v33;
  id v35 = [v33 _className];

  uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
  uint64_t v38 = v37;

  swift_retain(v27);
  uint64_t v39 = SiriKitEvent.__allocating_init(stateType:taskType:statusReason:_:)(131LL, v36, v38, 31LL, sub_346C8, v27);
  dispatch thunk of SiriKitEventSending.send(_:)(v39, v28, v29);
  swift_release(v39);
  return (*(uint64_t (**)(id))(v1 + 8))(v17);
}

uint64_t type metadata accessor for StopAnnouncementFlowStrategy()
{
  return objc_opt_self(&OBJC_CLASS____TtC35HomeCommunicationFlowDelegatePlugin28StopAnnouncementFlowStrategy);
}

uint64_t sub_603A0(os_log_s *a1)
{
  return sub_5FC78(a1);
}

uint64_t sub_603B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)swift_task_alloc(dword_A3594);
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_34204;
  return sub_5FF9C((uint64_t)v4, a2);
}

uint64_t sub_60404(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for StopAnnouncementFlowStrategy();
  return RCHFlowStrategyAsync.makeParameterMetadata(intent:)(a1, v5, a3);
}

uint64_t sub_6043C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_task_alloc(async function pointer to ResolveConfirmFlowStrategyAsync.makeAppDoesNotSupportIntentResponse(app:intent:)[1]);
  *(void *)(v5 + 16) = v10;
  uint64_t v11 = type metadata accessor for StopAnnouncementFlowStrategy();
  *uint64_t v10 = v5;
  v10[1] = sub_346D0;
  return ResolveConfirmFlowStrategyAsync.makeAppDoesNotSupportIntentResponse(app:intent:)(a1, a2, a3, v11, a5);
}

uint64_t sub_604C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_task_alloc(async function pointer to ResolveConfirmFlowStrategyAsync.makeAppNotFoundOnDeviceResponse(app:intent:)[1]);
  *(void *)(v5 + 16) = v10;
  uint64_t v11 = type metadata accessor for StopAnnouncementFlowStrategy();
  *uint64_t v10 = v5;
  v10[1] = sub_346D0;
  return ResolveConfirmFlowStrategyAsync.makeAppNotFoundOnDeviceResponse(app:intent:)(a1, a2, a3, v11, a5);
}

uint64_t sub_60544(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_task_alloc(async function pointer to ResolveConfirmFlowStrategyAsync.makeDeviceIncompatibleResponse(app:intent:)[1]);
  *(void *)(v5 + 16) = v10;
  uint64_t v11 = type metadata accessor for StopAnnouncementFlowStrategy();
  *uint64_t v10 = v5;
  v10[1] = sub_346D0;
  return ResolveConfirmFlowStrategyAsync.makeDeviceIncompatibleResponse(app:intent:)(a1, a2, a3, v11, a5);
}

uint64_t sub_605C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = (void *)swift_task_alloc(async function pointer to ResolveConfirmFlowStrategyAsync.makeErrorResponse(error:app:intent:)[1]);
  *(void *)(v6 + 16) = v12;
  uint64_t v13 = type metadata accessor for StopAnnouncementFlowStrategy();
  *uint64_t v12 = v6;
  v12[1] = sub_A65C;
  return ResolveConfirmFlowStrategyAsync.makeErrorResponse(error:app:intent:)(a1, a2, a3, a4, v13, a6);
}

uint64_t sub_6065C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = (void *)swift_task_alloc(async function pointer to RouteConfirmIntentResponseFlowStrategyAsync.makeFailureConfirmingIntentResponse(app:intent:intentResponse:)[1]);
  *(void *)(v6 + 16) = v12;
  uint64_t v13 = type metadata accessor for StopAnnouncementFlowStrategy();
  *uint64_t v12 = v6;
  v12[1] = sub_346D0;
  return RouteConfirmIntentResponseFlowStrategyAsync.makeFailureConfirmingIntentResponse(app:intent:intentResponse:)( a1,  a2,  a3,  a4,  v13,  a6);
}

uint64_t sub_606F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v8 = (void *)swift_task_alloc(async function pointer to IntentExtensionCommunicatingAsync.makeIntentExecutionBehavior(app:intent:)[1]);
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for StopAnnouncementFlowStrategy();
  *id v8 = v4;
  v8[1] = sub_654C;
  return IntentExtensionCommunicatingAsync.makeIntentExecutionBehavior(app:intent:)(a1, a2, v9, a4);
}

uint64_t sub_6076C()
{
  return sub_607D8(&qword_A3640, (uint64_t)&unk_74A00);
}

uint64_t sub_60790()
{
  return sub_607D8(qword_A3648, (uint64_t)&unk_74A30);
}

uint64_t sub_607B4()
{
  return sub_607D8(qword_A3670, (uint64_t)&unk_74A68);
}

uint64_t sub_607D8(unint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v5 = type metadata accessor for StopAnnouncementFlowStrategy();
    uint64_t result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }

  return result;
}

uint64_t sub_60814(void *a1)
{
  id v2 = [a1 endpointId];

  if (!v2) {
    return 0LL;
  }
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);

  return v3;
}

id sub_60880()
{
  return [v0 *(SEL *)(v1 + 3424)];
}

uint64_t sub_6088C()
{
  return Logger.logObject.getter();
}

unint64_t sub_60898()
{
  return 0xD000000000000016LL;
}

unint64_t sub_608B4()
{
  return 0xD000000000000018LL;
}

unint64_t sub_608D0()
{
  return 0xD000000000000018LL;
}

ValueMetadata *type metadata accessor for StopAnnouncementIntent()
{
  return &type metadata for StopAnnouncementIntent;
}

unint64_t sub_60900()
{
  unint64_t result = qword_A3688;
  if (!qword_A3688)
  {
    unint64_t result = swift_getWitnessTable(&unk_74CE4, &type metadata for StopAnnouncementIntentResponseCode);
    atomic_store(result, (unint64_t *)&qword_A3688);
  }

  return result;
}

unint64_t sub_6093C(uint64_t a1)
{
  unint64_t result = sub_60960();
  *(void *)(a1 + sub_423C(v0 + 8) = result;
  return result;
}

unint64_t sub_60960()
{
  unint64_t result = qword_A36A8;
  if (!qword_A36A8)
  {
    unint64_t result = swift_getWitnessTable(&unk_74B48, &type metadata for StopAnnouncementIntent);
    atomic_store(result, (unint64_t *)&qword_A36A8);
  }

  return result;
}

uint64_t sub_6099C(uint64_t a1)
{
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 7sub_423C(v0 + 2) = v1;
  return sub_382E0((uint64_t)sub_609AC);
}

uint64_t sub_609AC()
{
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v2 = sub_1BDD8();
  sub_1BE18(v2, (uint64_t)qword_A3EB0);
  os_log_type_t v3 = sub_A9E8();
  if (sub_AA1C(v3))
  {
    *(_WORD *)sub_A968() = 0;
    sub_59B2C(&dword_0, v4, v5, "#StopAnnouncementIntentHandledStrategy makeIntentHandledResponse");
    sub_61F4C();
  }

  uint64_t v6 = (void *)swift_task_alloc(dword_A33BC);
  *(void *)(v1 + 80) = v6;
  sub_38428(v6, (uint64_t)sub_60A6C);
  return sub_5EBFC(1);
}

uint64_t sub_60A6C(uint64_t a1)
{
  uint64_t v3 = *(void *)(*v2 + 80);
  uint64_t v4 = *v2;
  *(void *)(v4 + 8sub_423C(v0 + 8) = a1;
  swift_task_dealloc(v3);
  if (v1) {
    return sub_6698(*(uint64_t (**)(void))(v4 + 8));
  }
  sub_38360();
  return sub_382EC(v6, v7, v8);
}

uint64_t sub_60ACC(uint64_t a1)
{
  uint64_t v2 = v1[5];
  uint64_t v3 = v1[6];
  sub_8504(v1 + 2, v2);
  char v4 = dispatch thunk of DeviceState.isCarPlay.getter(v2, v3);
  sub_423C(v1 + 2);
  if ((v4 & 1) != 0)
  {
    uint64_t v5 = (void *)v1[11];
    uint64_t v6 = sub_41BC(&qword_A2100);
    uint64_t v7 = sub_D31C(v6);
    *(_OWORD *)(v7 + 16) = xmmword_6FCA0;
    *(void *)(v7 + 3sub_423C(v0 + 2) = v5;
    sub_59BF0(v7, v8);
    v1[12] = v21;
    uint64_t v9 = dword_A36FC;
    id v10 = v5;
    uint64_t v11 = (void *)swift_task_alloc(v9);
    v1[13] = v11;
    *uint64_t v11 = v1;
    v11[1] = sub_60C44;
    return sub_60D70(v1[8], v21);
  }

  else
  {
    uint64_t v13 = (void *)v1[11];
    uint64_t v14 = sub_384A8();
    sub_A8BC(v14);
    v1[7] = sub_384BC();
    uint64_t v15 = sub_41BC(&qword_A2100);
    uint64_t v16 = sub_D31C(v15);
    *(_OWORD *)(v16 + 16) = xmmword_6FCA0;
    *(void *)(v16 + 3sub_423C(v0 + 2) = v13;
    sub_59BF0(v16, v17);
    v1[15] = v21;
    uint64_t v18 = async function pointer to dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)[1];
    id v19 = v13;
    uint64_t v20 = (void *)swift_task_alloc(v18);
    v1[16] = v20;
    *uint64_t v20 = v1;
    v20[1] = sub_60CD4;
    sub_4DDC0();
    return sub_4DD88();
  }

uint64_t sub_60C44()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 104);
  *(void *)(*v1 + 1sub_423C(v0 + 12) = v0;
  swift_task_dealloc(v3);
  if (!v0) {
    swift_bridgeObjectRelease(*(void *)(v2 + 96));
  }
  sub_38360();
  return swift_task_switch(v4, v5, v6);
}

uint64_t sub_60CAC()
{
  uint64_t v1 = (uint64_t (*)(void))sub_38410();
  return sub_6698(v1);
}

uint64_t sub_60CD4()
{
  uint64_t v1 = *(void *)(v0 + 120);
  sub_38318(*(void *)(v0 + 128));
  swift_bridgeObjectRelease(v1);
  sub_38360();
  return sub_382EC(v2, v3, v4);
}

uint64_t sub_60D10()
{
  swift_release(*(void *)(v0 + 56));
  uint64_t v1 = (uint64_t (*)(void))sub_38410();
  return sub_6698(v1);
}

uint64_t sub_60D40()
{
  uint64_t v1 = *(void **)(v0 + 88);
  swift_bridgeObjectRelease(*(void *)(v0 + 96));

  return sub_6698(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_60D70(uint64_t a1, uint64_t a2)
{
  v3[199] = v2;
  v3[193] = a2;
  v3[187] = a1;
  uint64_t v4 = type metadata accessor for CarPlayIntercomControlModel(0LL);
  v3[205] = sub_38350(*(void *)(v4 - 8));
  uint64_t v5 = type metadata accessor for OutputGenerationManifest(0LL);
  v3[211] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[217] = v6;
  v3[218] = sub_38350(v6);
  sub_38360();
  return sub_382EC(v7, v8, v9);
}

uint64_t sub_60DD4()
{
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v2 = sub_1BDD8();
  sub_1BE18(v2, (uint64_t)qword_A3EB0);
  os_log_type_t v3 = sub_A9E8();
  if (sub_AA1C(v3))
  {
    *(_WORD *)sub_A968() = 0;
    sub_59B2C( &dword_0,  v4,  v5,  "#StopAnnouncementIntentHandledStrategy makeIntentHandledResponseCarPlay making play/reply snippet");
    sub_61F4C();
  }

  uint64_t v6 = v1[218];
  uint64_t v7 = v1[217];
  uint64_t v8 = v1[211];
  uint64_t v9 = v1[199];

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))( v6,  v9 + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin37StopAnnouncementIntentHandledStrategy_completionOutputManifest,  v8);
  OutputGenerationManifest.responseViewId.setter(0xD00000000000002BLL, 0x80000000000761E0LL);
  sub_61F88();
  swift_asyncLet_begin(v1 + 82, 0LL, &type metadata for String, &unk_A3808, v9, v1 + 179);
  sub_61F88();
  swift_asyncLet_begin(v1 + 2, 0LL, &type metadata for String, &unk_A3818, v9, v1 + 177);
  return swift_asyncLet_get_throwing(v1 + 82, v1 + 179, sub_60F4C, v1 + 182);
}

uint64_t sub_60F4C()
{
  v1[219] = v0;
  if (v0)
  {
    sub_38360();
    return sub_38340(v2, v3, v4);
  }

  else
  {
    v1[220] = v1[179];
    uint64_t v6 = v1[180];
    v1[221] = v6;
    swift_bridgeObjectRetain(v6);
    return swift_asyncLet_get_throwing(v1 + 2, v1 + 177, sub_60FC8, v1 + 172);
  }

uint64_t sub_60FC8()
{
  *(void *)(v1 + 1776) = v0;
  if (v0) {
    return sub_382E0((uint64_t)sub_612F0);
  }
  else {
    return sub_382E0((uint64_t)sub_60FE8);
  }
}

uint64_t sub_60FE8()
{
  uint64_t v1 = v0[221];
  uint64_t v2 = v0[220];
  uint64_t v3 = v0[205];
  uint64_t v4 = v0[177];
  uint64_t v5 = v0[178];
  swift_bridgeObjectRetain(v5);
  CarPlayIntercomControlModel.init(playStopText:replyText:isPlaying:)(v2, v1, v4, v5, 0LL, v6, v7, v8);
  uint64_t v9 = sub_384A8();
  sub_A8BC(v9);
  v0[181] = sub_384BC();
  uint64_t v10 = type metadata accessor for HomeCommunicationSnippetModel(0LL);
  v0[170] = v10;
  v0[171] = sub_380D0( &qword_A1F40,  type metadata accessor for HomeCommunicationSnippetModel,  (uint64_t)&protocol conformance descriptor for HomeCommunicationSnippetModel);
  uint64_t v11 = sub_A800(v0 + 167);
  sub_8980(v3, (uint64_t)v11);
  swift_storeEnumTagMultiPayload(v11, v10, 1LL);
  uint64_t v12 = (void *)swift_task_alloc(async function pointer to dispatch thunk of ResponseGenerating.makeResponseOutput(conversationModel:dialog:outputGenerationManifest:)[1]);
  v0[223] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_61118;
  return dispatch thunk of ResponseGenerating.makeResponseOutput(conversationModel:dialog:outputGenerationManifest:)( v0[187],  v0 + 167,  v0[193],  v0[218],  v9);
}

uint64_t sub_61118()
{
  uint64_t v1 = (void *)(v0 + 1336);
  sub_38318(*(void *)(v0 + 1784));
  sub_423C(v1);
  sub_38360();
  return sub_382EC(v2, v3, v4);
}

uint64_t sub_61158()
{
  return sub_382F8();
}

uint64_t sub_611A0()
{
  return sub_382E0((uint64_t)sub_611AC);
}

uint64_t sub_611AC()
{
  return sub_382F8();
}

uint64_t sub_611E4()
{
  return sub_382E0((uint64_t)sub_611F0);
}

uint64_t sub_611F0()
{
  uint64_t v1 = v0[218];
  uint64_t v2 = v0[199];
  (*(void (**)(uint64_t, void))(v0[217] + 8LL))(v1, v0[211]);
  swift_release_n(v2, 3LL);
  swift_task_dealloc(v1);
  sub_3838C();
  uint64_t v3 = (uint64_t (*)(void))sub_38410();
  return sub_38308(v3);
}

uint64_t sub_6124C()
{
  return swift_asyncLet_finish(v0 + 16, v0 + 1416, sub_61264, v0 + 1504);
}

uint64_t sub_61264()
{
  return sub_382E0((uint64_t)sub_61270);
}

uint64_t sub_61270()
{
  return sub_382F8();
}

uint64_t sub_612A8()
{
  return sub_382E0((uint64_t)sub_612B4);
}

uint64_t sub_612B4()
{
  return sub_32414(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_612F0()
{
  return sub_382F8();
}

uint64_t sub_61330()
{
  return sub_382E0((uint64_t)sub_6133C);
}

uint64_t sub_6133C()
{
  return sub_382F8();
}

uint64_t sub_61374()
{
  return sub_382E0((uint64_t)sub_61380);
}

uint64_t sub_61380()
{
  return sub_32414(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_613BC(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_task_switch(sub_613D4, 0LL, 0LL);
}

uint64_t sub_613D4()
{
  uint64_t v1 = (void *)swift_task_alloc(dword_A07B4);
  *(void *)(v0 + 3sub_423C(v0 + 2) = v1;
  sub_38428(v1, (uint64_t)sub_6141C);
  return sub_102A4();
}

uint64_t sub_6141C(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v10 = v4;
  uint64_t v5 = *v2;
  sub_38374(*(void *)(v4 + 32), &v10);
  if (v1) {
    return sub_38308(*(uint64_t (**)(void))(v5 + 8));
  }
  *(void *)(v4 + 40) = a1;
  sub_38360();
  return sub_38340(v7, v8, v9);
}

uint64_t sub_61478(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_task_switch(sub_61490, 0LL, 0LL);
}

uint64_t sub_61490()
{
  uint64_t v1 = (void *)swift_task_alloc(dword_A07BC);
  *(void *)(v0 + 3sub_423C(v0 + 2) = v1;
  sub_38428(v1, (uint64_t)sub_614D8);
  return sub_10384();
}

uint64_t sub_614D8(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v10 = v4;
  uint64_t v5 = *v2;
  sub_38374(*(void *)(v4 + 32), &v10);
  if (v1) {
    return sub_38308(*(uint64_t (**)(void))(v5 + 8));
  }
  *(void *)(v4 + 40) = a1;
  sub_38360();
  return sub_38340(v7, v8, v9);
}

uint64_t sub_61534()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(uint64_t **)(v0 + 16);
  uint64_t v3 = dispatch thunk of LabelExecutionResult.subscript.getter();
  uint64_t v5 = v4;
  swift_release(v1);
  *uint64_t v2 = v3;
  v2[1] = v5;
  uint64_t v6 = (uint64_t (*)(void))sub_38410();
  return sub_32414(v6);
}

uint64_t sub_61578(uint64_t a1)
{
  v2[17] = a1;
  v2[18] = v1;
  uint64_t v3 = type metadata accessor for Locale(0LL);
  v2[19] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[20] = v4;
  v2[21] = sub_38350(v4);
  sub_38360();
  return sub_382EC(v5, v6, v7);
}

uint64_t sub_615C0()
{
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v2 = sub_1BDD8();
  sub_1BE18(v2, (uint64_t)qword_A3EB0);
  os_log_type_t v3 = sub_A9E8();
  if (sub_AA1C(v3))
  {
    *(_WORD *)sub_A968() = 0;
    sub_59B2C(&dword_0, v4, v5, "#StopAnnouncementIntentHandledStrategy makeFailureHandlingIntentResponse");
    sub_61F4C();
  }

  uint64_t v7 = v1[20];
  uint64_t v6 = v1[21];
  uint64_t v8 = v1[19];

  uint64_t v9 = type metadata accessor for RadarUtils();
  uint64_t inited = swift_initStackObject(v9, v1 + 7);
  uint64_t v11 = type metadata accessor for AutoBugCaptureManager(0LL);
  sub_A8BC(v11);
  uint64_t v12 = AutoBugCaptureManager.init(domain:sessionDuration:)(0xD000000000000015LL, 0x80000000000762E0LL, 30.0);
  *(void *)(inited + 16) = v12;
  static Device.current.getter(v1 + 2, v12);
  uint64_t v13 = v1[5];
  sub_8504(v1 + 2, v13);
  uint64_t v14 = dispatch thunk of DeviceState.siriLocale.getter(v13);
  uint64_t v15 = Locale.identifier.getter(v14);
  uint64_t v17 = v16;
  v1[10] = v15;
  v1[11] = v16;
  v1[12] = 45LL;
  v1[13] = 0xE100000000000000LL;
  v1[14] = 95LL;
  v1[15] = 0xE100000000000000LL;
  unint64_t v18 = sub_CD6C();
  StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( v1 + 12,  v1 + 14,  0LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String,  &type metadata for String,  v18,  v18,  v18);
  uint64_t v20 = v19;
  swift_bridgeObjectRelease(v17);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  sub_30234(1LL, 3);
  swift_release(inited);
  swift_bridgeObjectRelease(v20);
  sub_423C(v1 + 2);
  uint64_t v21 = (void *)swift_task_alloc(dword_A33B4);
  v1[22] = v21;
  sub_38428(v21, (uint64_t)sub_617DC);
  return sub_5EB90();
}

uint64_t sub_617DC(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  uint64_t v10 = v4;
  uint64_t v5 = (void *)*v2;
  sub_38374(v4[22], &v10);
  if (v1)
  {
    swift_task_dealloc(v4[21]);
    return sub_38308((uint64_t (*)(void))v5[1]);
  }

  else
  {
    v4[23] = a1;
    sub_38360();
    return sub_38340(v7, v8, v9);
  }

uint64_t sub_61840()
{
  uint64_t v1 = (void *)v0[23];
  uint64_t v2 = sub_384A8();
  sub_A8BC(v2);
  v0[16] = sub_384BC();
  uint64_t v3 = sub_41BC(&qword_A2100);
  uint64_t v4 = sub_D31C(v3);
  *(_OWORD *)(v4 + 16) = xmmword_6FCA0;
  *(void *)(v4 + 3sub_423C(v0 + 2) = v1;
  sub_59BF0(v4, v5);
  v0[24] = v10;
  uint64_t v6 = async function pointer to dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)[1];
  id v7 = v1;
  uint64_t v8 = (void *)swift_task_alloc(v6);
  v0[25] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_618FC;
  sub_4DDC0();
  return sub_4DD88();
}

uint64_t sub_618FC()
{
  uint64_t v1 = *(void *)(v0 + 192);
  sub_38318(*(void *)(v0 + 200));
  swift_bridgeObjectRelease(v1);
  sub_38360();
  return sub_382EC(v2, v3, v4);
}

uint64_t sub_61938()
{
  uint64_t v1 = *(void *)(v0 + 168);

  swift_release(*(void *)(v0 + 128));
  swift_task_dealloc(v1);
  uint64_t v2 = (uint64_t (*)(void))sub_38410();
  return sub_6698(v2);
}

void *sub_61974()
{
  uint64_t v1 = (char *)v0
     + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin37StopAnnouncementIntentHandledStrategy_completionOutputManifest;
  uint64_t v2 = type metadata accessor for OutputGenerationManifest(0LL);
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8LL))(v1, v2);
  return v0;
}

uint64_t sub_619D8()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_619FC()
{
  return type metadata accessor for StopAnnouncementIntentHandledStrategy(0LL);
}

uint64_t type metadata accessor for StopAnnouncementIntentHandledStrategy(uint64_t a1)
{
  uint64_t result = qword_A36E0;
  if (!qword_A36E0) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for StopAnnouncementIntentHandledStrategy);
  }
  return result;
}

uint64_t sub_61A3C(uint64_t a1)
{
  v4[0] = "(";
  v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  void v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  void v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  uint64_t result = type metadata accessor for OutputGenerationManifest(319LL);
  if (v3 <= 0x3F)
  {
    void v4[4] = *(void *)(result - 8) + 64LL;
    uint64_t result = swift_updateClassMetadata2(a1, 256LL, 5LL, v4, a1 + 80);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_61AC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc(async function pointer to HandleIntentFlowStrategyAsync.makePromptForDeviceUnlock(rchRecord:)[1]);
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for StopAnnouncementIntentHandledStrategy(0LL);
  *uint64_t v8 = v4;
  v8[1] = sub_382D8;
  return HandleIntentFlowStrategyAsync.makePromptForDeviceUnlock(rchRecord:)(a1, a2, v9, a4);
}

uint64_t sub_61B44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc(async function pointer to HandleIntentFlowStrategyAsync.makeHandoffForAuthenticationResponse(rchRecord:)[1]);
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for StopAnnouncementIntentHandledStrategy(0LL);
  *uint64_t v8 = v4;
  v8[1] = sub_382D8;
  return HandleIntentFlowStrategyAsync.makeHandoffForAuthenticationResponse(rchRecord:)(a1, a2, v9, a4);
}

uint64_t sub_61BC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc(async function pointer to HandleIntentFlowStrategyAsync.makePreHandleIntentOutput(rchRecord:)[1]);
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for StopAnnouncementIntentHandledStrategy(0LL);
  *uint64_t v8 = v4;
  v8[1] = sub_382D8;
  return HandleIntentFlowStrategyAsync.makePreHandleIntentOutput(rchRecord:)(a1, a2, v9, a4);
}

uint64_t sub_61C44(uint64_t a1)
{
  unint64_t v3 = (void *)swift_task_alloc(dword_A36F4);
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_382D8;
  return sub_6099C(a1);
}

uint64_t sub_61C98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc(async function pointer to HandleIntentFlowStrategyAsync.makeContinueInAppResponse(rchRecord:)[1]);
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for StopAnnouncementIntentHandledStrategy(0LL);
  *uint64_t v8 = v4;
  v8[1] = sub_382D8;
  return HandleIntentFlowStrategyAsync.makeContinueInAppResponse(rchRecord:)(a1, a2, v9, a4);
}

uint64_t sub_61D18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc(async function pointer to HandleIntentFlowStrategyAsync.makeInProgressResponse(rchRecord:)[1]);
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for StopAnnouncementIntentHandledStrategy(0LL);
  *uint64_t v8 = v4;
  v8[1] = sub_382D8;
  return HandleIntentFlowStrategyAsync.makeInProgressResponse(rchRecord:)(a1, a2, v9, a4);
}

uint64_t sub_61D98(uint64_t a1)
{
  unint64_t v3 = (void *)swift_task_alloc(dword_A3704);
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_37EE8;
  return sub_61578(a1);
}

uint64_t sub_61DEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc(async function pointer to IntentExtensionCommunicatingAsync.makeIntentExecutionBehavior(app:intent:)[1]);
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for StopAnnouncementIntentHandledStrategy(0LL);
  *uint64_t v8 = v4;
  v8[1] = sub_37F9C;
  return IntentExtensionCommunicatingAsync.makeIntentExecutionBehavior(app:intent:)(a1, a2, v9, a4);
}

uint64_t sub_61E6C()
{
  return sub_380D0(qword_A37C0, type metadata accessor for StopAnnouncementIntentHandledStrategy, (uint64_t)&unk_74C10);
}

uint64_t sub_61E98()
{
  uint64_t v1 = (void *)swift_task_alloc(dword_A3804);
  *(void *)(v0 + 16) = v1;
  uint64_t v2 = sub_61F68(v1);
  return sub_613BC(v2, v3);
}

uint64_t sub_61EE0()
{
  uint64_t v1 = (void *)swift_task_alloc(dword_A3814);
  *(void *)(v0 + 16) = v1;
  uint64_t v2 = sub_61F68(v1);
  return sub_61478(v2, v3);
}

uint64_t sub_61F2C()
{
  return (*(uint64_t (**)(void, void))(v0[217] + 8LL))(v0[218], v0[211]);
}

uint64_t sub_61F4C()
{
  return swift_slowDealloc(v0, -1LL, -1LL);
}

uint64_t sub_61F5C()
{
  return swift_release(*(void *)(v0 + 1592));
}

uint64_t sub_61F68(void *a1)
{
  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t sub_61F7C()
{
  return swift_release_n(v0, 3LL);
}

uint64_t sub_61F88()
{
  return swift_retain_n(v0, 2LL);
}

unint64_t sub_61F98()
{
  unint64_t result = qword_A3830;
  if (!qword_A3830)
  {
    unint64_t result = swift_getWitnessTable(&unk_74D24, &type metadata for StopAnnouncementIntentResponseCode);
    atomic_store(result, (unint64_t *)&qword_A3830);
  }

  return result;
}

unint64_t sub_61FD4(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_93FF8, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 6) {
    return 6LL;
  }
  else {
    return v3;
  }
}

uint64_t sub_6201C(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_62054 + 4 * byte_74CB0[a1]))( 0xD000000000000019LL,  0x8000000000075D50LL);
}

uint64_t sub_62054()
{
  return 0x6669636570736E75LL;
}

uint64_t sub_62074()
{
  return 0x7964616572LL;
}

uint64_t sub_62088()
{
  return 0x6572676F72506E69LL;
}

uint64_t sub_620A4()
{
  return 0x73736563637573LL;
}

uint64_t sub_620BC()
{
  return 0x6572756C696166LL;
}

void sub_620D4(unsigned __int8 *a1, unsigned __int8 *a2)
{
}

void sub_620E0()
{
}

uint64_t sub_620E8(uint64_t a1)
{
  return sub_1E36C(a1, *v1);
}

void sub_620F0(uint64_t a1)
{
}

unint64_t sub_620F8@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result = sub_61FD4(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_62124@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_6201C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_6214C(void *a1@<X8>)
{
  *a1 = &off_940A8;
}

uint64_t sub_6215C()
{
  uint64_t v0 = qword_A3820;
  swift_bridgeObjectRetain(off_A3828);
  return v0;
}

uint64_t sub_62190(uint64_t a1)
{
  unint64_t v2 = sub_62268();
  return static AppEnumRepresentation.lnValueType.getter(a1, v2);
}

uint64_t sub_621B8(uint64_t a1)
{
  unint64_t v2 = sub_62268();
  return AppEnumRepresentation.lnValue.getter(a1, v2);
}

uint64_t sub_621E0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_622A4();
  return static IntentValueTypeIdentifiable.canConvert(_:)(a1, a2, v4);
}

uint64_t sub_62218(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_62268();
  return static AppEnumRepresentation.from(_:context:)(a1, a2, a3, v6);
}

unint64_t sub_62268()
{
  unint64_t result = qword_A3838;
  if (!qword_A3838)
  {
    unint64_t result = swift_getWitnessTable(&unk_74EA4, &type metadata for StopAnnouncementIntentResponseCode);
    atomic_store(result, (unint64_t *)&qword_A3838);
  }

  return result;
}

unint64_t sub_622A4()
{
  unint64_t result = qword_A3840;
  if (!qword_A3840)
  {
    unint64_t result = swift_getWitnessTable(&unk_74E74, &type metadata for StopAnnouncementIntentResponseCode);
    atomic_store(result, (unint64_t *)&qword_A3840);
  }

  return result;
}

uint64_t storeEnumTagSinglePayload for StopAnnouncementIntentResponseCode( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    LODWORD(sub_46B2C(*(void *)(v1 + 288), v4) = 1;
  }
  else {
    LODWORD(sub_46B2C(*(void *)(v1 + 288), v4) = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFA) {
    return ((uint64_t (*)(void))((char *)&loc_6232C + 4 * byte_74CBB[v4]))();
  }
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_62360 + 4 * byte_74CB6[v4]))();
}

uint64_t sub_62360(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_62368(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x62370LL);
  }
  return result;
}

uint64_t sub_6237C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x62384LL);
  }
  *(_BYTE *)unint64_t result = a2 + 5;
  return result;
}

uint64_t sub_62388(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_62390(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StopAnnouncementIntentResponseCode()
{
  return &type metadata for StopAnnouncementIntentResponseCode;
}

uint64_t sub_623AC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_622A4();
  return static IntentValueTypeIdentifiable.canConvertFrom(_:)(a1, a2, v4);
}

unint64_t sub_623E8()
{
  unint64_t result = qword_A3848;
  if (!qword_A3848)
  {
    uint64_t v1 = sub_8564(&qword_A3850);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_A3848);
  }

  return result;
}

unint64_t sub_62430()
{
  unint64_t result = qword_A3858;
  if (!qword_A3858)
  {
    unint64_t result = swift_getWitnessTable(&unk_74E4C, &type metadata for StopAnnouncementIntentResponseCode);
    atomic_store(result, (unint64_t *)&qword_A3858);
  }

  return result;
}

unint64_t sub_62470()
{
  unint64_t result = qword_A3860;
  if (!qword_A3860)
  {
    unint64_t result = swift_getWitnessTable(&unk_74D44, &type metadata for StopAnnouncementIntentResponseCode);
    atomic_store(result, (unint64_t *)&qword_A3860);
  }

  return result;
}

unint64_t sub_624B0()
{
  unint64_t result = qword_A3868;
  if (!qword_A3868)
  {
    unint64_t result = swift_getWitnessTable(&unk_74D74, &type metadata for StopAnnouncementIntentResponseCode);
    atomic_store(result, (unint64_t *)&qword_A3868);
  }

  return result;
}

unint64_t sub_624F4()
{
  unint64_t result = qword_A3870;
  if (!qword_A3870)
  {
    unint64_t result = swift_getWitnessTable(&unk_74D9C, &type metadata for StopAnnouncementIntentResponseCode);
    atomic_store(result, (unint64_t *)&qword_A3870);
  }

  return result;
}

unint64_t sub_62534()
{
  unint64_t result = qword_A3878;
  if (!qword_A3878)
  {
    unint64_t result = swift_getWitnessTable(&unk_74DD4, &type metadata for StopAnnouncementIntentResponseCode);
    atomic_store(result, (unint64_t *)&qword_A3878);
  }

  return result;
}

uint64_t type metadata accessor for StopAnnouncementRCHFlowDelegate(uint64_t a1)
{
  uint64_t result = qword_A3890;
  if (!qword_A3890) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for StopAnnouncementRCHFlowDelegate);
  }
  return result;
}

uint64_t sub_625A8(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL);
}

uint64_t sub_625F4(void *a1)
{
  unint64_t v2 = v1;
  unint64_t v4 = (void *)((char *)v1 + *(void *)(qword_A3DC8 + *v1 + 8));
  sub_BB78((uint64_t)a1, (uint64_t)v4);
  uint64_t v5 = v4[3];
  uint64_t v6 = v4[4];
  sub_8504(v4, v5);
  swift_retain(v2);
  if ((dispatch thunk of DeviceState.isWatch.getter(v5, v6) & 1) != 0)
  {
    unint64_t v7 = 0x80000000000767B0LL;
    unint64_t v8 = 0xD000000000000012LL;
  }

  else
  {
    if (qword_9F7E0 != -1) {
      swift_once(&qword_9F7E0, sub_F85C);
    }
    unint64_t v8 = qword_A3E60;
    unint64_t v7 = *(void *)algn_A3E68;
    swift_bridgeObjectRetain(*(void *)algn_A3E68);
  }

  uint64_t v9 = type metadata accessor for App(0LL);
  sub_A8BC(v9);
  uint64_t v10 = App.init(appIdentifier:systemExtensionBundleId:systemUIExtensionBundleId:pluginIdentifier:)( v8,  v7,  0xD00000000000003DLL,  0x8000000000079150LL,  0LL,  0LL,  0LL,  0LL);
  uint64_t v11 = *(void *)(qword_A3DC8 + *v2 + 16);
  *(void *)((char *)v2 + v11) = v10;
  swift_release(v2);
  uint64_t v12 = sub_41BC(&qword_A38E8);
  uint64_t v13 = swift_allocObject(v12, 72LL, 7LL);
  *(_OWORD *)(v13 + 16) = xmmword_6FA70;
  uint64_t v14 = sub_41BC(&qword_A2100);
  uint64_t v15 = swift_allocObject(v14, 40LL, 7LL);
  *(_OWORD *)(v15 + 16) = xmmword_6FCA0;
  uint64_t v16 = *(void *)((char *)v2 + v11);
  *(void *)(v15 + 3sub_423C(v0 + 2) = v16;
  uint64_t v22 = v15;
  specialized Array._endMutation()(v15, v17);
  uint64_t v18 = type metadata accessor for DefaultAppSelector(0LL);
  sub_A8BC(v18);
  swift_retain(v16);
  uint64_t v19 = DefaultAppSelector.init(defaultApps:)(v22);
  *(void *)(v13 + 56) = v18;
  *(void *)(v13 + 64) = &protocol witness table for DefaultAppSelector;
  *(void *)(v13 + 3sub_423C(v0 + 2) = v19;
  uint64_t v20 = AppSelectionService.init(resolvers:)(v13);
  sub_423C(a1);
  return v20;
}

void sub_627FC()
{
  uint64_t v2 = sub_633A8();
  uint64_t v35 = type metadata accessor for Locale(v2);
  uint64_t v34 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  sub_9298();
  uint64_t v5 = v4 - v3;
  type metadata accessor for CATOption(0LL);
  sub_11F5C();
  __chkstk_darwin(v6);
  sub_9298();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = type metadata accessor for DucTemplatingLocalContext(0LL);
  uint64_t v36 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  sub_9298();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = static AceService.current.getter(v43);
  uint64_t v15 = static Device.current.getter(v41, v14);
  DucTemplatingLocalContext.init()(v15);
  uint64_t v16 = type metadata accessor for StopAnnouncementCATs(0LL);
  static CATOption.defaultMode.getter(v16);
  uint64_t v17 = CATWrapper.__allocating_init(options:globals:)(v9, 0LL);
  type metadata accessor for DeviceResolutionService(0LL);
  uint64_t v18 = static DeviceResolutionService.sharedAnalytics.getter();
  uint64_t v19 = type metadata accessor for StopAnnouncementTemplatingService(0LL);
  uint64_t v20 = sub_A8BC(v19);
  void v40[3] = type metadata accessor for DeviceResolutionAnalyticsImpl(0LL);
  v40[4] = &protocol witness table for DeviceResolutionAnalyticsImpl;
  v40[0] = v18;
  sub_BB78((uint64_t)v41, v20 + qword_A38F8);
  *(void *)(v20 + qword_A3910) = v17;
  sub_BB78((uint64_t)v43, v20 + qword_A3900);
  sub_BB78((uint64_t)v40, v20 + qword_A3908);
  uint64_t v21 = v42;
  sub_8504(v41, v42);
  swift_retain(v18);
  swift_retain(v17);
  uint64_t v22 = dispatch thunk of DeviceState.siriLocale.getter(v21);
  uint64_t v23 = Locale.identifier.getter(v22);
  uint64_t v25 = v24;
  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v5, v35);
  v38[0] = v23;
  v38[1] = v25;
  v37[0] = 45LL;
  v37[1] = 0xE100000000000000LL;
  v39[0] = 95LL;
  v39[1] = 0xE100000000000000LL;
  unint64_t v26 = sub_CD6C();
  uint64_t v27 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( v37,  v39,  0LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String,  &type metadata for String,  v26,  v26,  v26);
  uint64_t v29 = v28;
  swift_bridgeObjectRelease(v25);
  type metadata accessor for INIntentSlotValueType(0LL);
  uint64_t v31 = v30;
  unint64_t v32 = sub_CDA8();
  uint64_t v33 = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage, v31, &type metadata for String, v32);
  sub_BB78((uint64_t)v43, (uint64_t)v38);
  sub_BB78((uint64_t)v41, (uint64_t)v37);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v0, v13, v10);
  _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v0, 0LL, 1LL, v10);
  DucTemplatingService.init(ducFamily:locale:extensionValueTypeNamesByValueType:aceServiceInvoker:deviceState:localContext:)( 0xD000000000000010LL,  0x8000000000079190LL,  v27,  v29,  v33,  v38,  v37,  v0);
  swift_release(v17);
  sub_423C(v40);
  sub_423C(v43);
  (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v13, v10);
  sub_423C(v41);
  swift_release(v18);
  sub_6360();
}

void sub_62B70()
{
  uint64_t v3 = sub_633A8();
  type metadata accessor for DucTemplatingLocalContext(v3);
  sub_11F5C();
  __chkstk_darwin(v4);
  sub_1BDE0();
  DucTemplatingLocalContext.init()(v5);
  uint64_t v6 = static AceService.current.getter(v11);
  static Device.current.getter(v10, v6);
  uint64_t v7 = type metadata accessor for HomeCommunicationDisplayTextCATs(0LL);
  static CATOption.defaultMode.getter(v7);
  uint64_t v8 = CATWrapper.__allocating_init(options:globals:)(v0, 0LL);
  uint64_t v9 = type metadata accessor for DisplayTextTemplatingService(0LL);
  sub_A8BC(v9);
  sub_BDE4(v1, v11, v10, v8);
  sub_9304();
}

void sub_62C24()
{
  uint64_t v3 = v2;
  sub_BB78(v0 + qword_A3888, (uint64_t)v6);
  uint64_t v4 = sub_A7D8((uint64_t)v6, v6[3]);
  __chkstk_darwin(v4);
  sub_1BDE0();
  (*(void (**)(uint64_t))(v5 + 16))(v1);
  sub_632C8(v3, v1);
  sub_423C(v6);
  sub_9304();
}

void sub_62CBC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for Parse.DirectInvocation(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_1BDE0();
  uint64_t v7 = type metadata accessor for Parse(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  sub_9298();
  uint64_t v11 = v10 - v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v10 - v9, a1, v7);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v8 + 88))(v11, v7) != enum case for Parse.directInvocation(_:))
  {
    sub_633F8(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
    uint64_t v16 = sub_41BC(&qword_A38F0);
    uint64_t v17 = (void (*)(uint64_t, uint64_t))method lookup function for BaseRCHFlowDelegate( v16,  &method descriptor for BaseRCHFlowDelegate.makeIntentFromParse(parse:previousIntent:));
    v17(a1, a2);
    goto LABEL_22;
  }

  sub_633F8(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 96));
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v2, v11, v5);
  uint64_t v13 = Parse.DirectInvocation.identifier.getter(v12);
  uint64_t v15 = v14;
  if (v13 == 0xD000000000000036LL && v14 == 0x8000000000076550LL)
  {
    swift_bridgeObjectRelease(0x8000000000076550LL);
LABEL_7:
    if (qword_9F820 != -1) {
      swift_once(&qword_9F820, sub_17ADC);
    }
    uint64_t v19 = type metadata accessor for Logger(0LL);
    uint64_t v20 = sub_4870(v19, (uint64_t)qword_A3EB0);
    uint64_t v21 = (void *)Logger.logObject.getter(v20);
    os_log_type_t v22 = static os_log_type_t.debug.getter();
    if (sub_17604(v22))
    {
      *(_WORD *)sub_A968() = 0;
      sub_633C4(&dword_0, v23, v24, "Returning empty INStopAnnouncementIntent for DirectInvocation");
      sub_633E8();
    }

    id v25 = objc_msgSend(objc_msgSend(objc_allocWithZone(INStopAnnouncementIntent), "init"), "_metadata");
    if (v25)
    {
      unint64_t v26 = v25;
      static AceService.current.getter(v43);
      uint64_t v27 = v44;
      uint64_t v28 = v45;
      sub_8504(v43, v44);
      dispatch thunk of AceServiceInvoker.endpointInfo()(v40, v27, v28);
      uint64_t v29 = v41;
      uint64_t v30 = v42;
      sub_8504(v40, v41);
      dispatch thunk of EndpointInfoProviding.getIdentifier()(v29, v30);
      if (v31)
      {
        uint64_t v32 = v31;
        NSString v33 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v32);
      }

      else
      {
        NSString v33 = 0LL;
      }

      sub_423C(v40);
      sub_423C(v43);
      [v26 setEndpointId:v33];
    }

    sub_633D8();
    goto LABEL_22;
  }

  char v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v14, 0xD000000000000036LL, 0x8000000000076550LL, 0LL);
  swift_bridgeObjectRelease(v15);
  if ((v18 & 1) != 0) {
    goto LABEL_7;
  }
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v34 = type metadata accessor for Logger(0LL);
  uint64_t v35 = sub_4870(v34, (uint64_t)qword_A3EB0);
  uint64_t v36 = (void *)Logger.logObject.getter(v35);
  os_log_type_t v37 = static os_log_type_t.error.getter();
  if (sub_17604(v37))
  {
    *(_WORD *)sub_A968() = 0;
    sub_633C4(&dword_0, v38, v39, "Received unknown direct invocation, returning nil");
    sub_633E8();
  }

  sub_633D8();
LABEL_22:
  sub_6360();
}

uint64_t sub_6301C()
{
  uint64_t v1 = sub_41BC(&qword_A38E0);
  sub_A8BC(v1);
  return sub_625F4(v3);
}

void sub_6306C()
{
}

uint64_t sub_63098()
{
  return sub_423C((void *)(v0 + qword_A3888));
}

uint64_t sub_630C4()
{
  uint64_t v0 = BaseRCHFlowDelegate.deinit();
  sub_423C((void *)(v0 + qword_A3880));
  sub_423C((void *)(v0 + qword_A3888));
  return swift_deallocClassInstance(v0, 96LL, 7LL);
}

uint64_t sub_63110()
{
  return type metadata accessor for StopAnnouncementRCHFlowDelegate(0LL);
}

uint64_t sub_63118(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = type metadata accessor for CATOption(0LL);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v21[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for SharedGlobals(0LL);
  void v23[3] = v9;
  v23[4] = &off_977A0;
  uint64_t v10 = sub_A800(v23);
  sub_A83C(a2, (uint64_t)v10);
  type metadata accessor for StopAnnouncementCATs(0LL);
  uint64_t v11 = swift_retain(a3);
  static CATOption.defaultMode.getter(v11);
  *(void *)((char *)a3 + qword_A32Bsub_423C(v0 + 8) = CATWrapper.__allocating_init(options:globals:)(v8, 0LL);
  swift_release(a3);
  sub_BB78((uint64_t)v23, (uint64_t)v22);
  uint64_t v12 = sub_A7D8((uint64_t)v22, v22[3]);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v21[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *))(v15 + 16))(v14);
  void v21[3] = v9;
  v21[4] = &off_977A0;
  uint64_t v16 = sub_A800(v21);
  sub_A83C((uint64_t)v14, (uint64_t)v16);
  *(void *)((char *)a3 + *(void *)(qword_A3DE8 + *a3 + sub_423C((void *)(v0 + 16)) = a1;
  uint64_t v17 = sub_BB78((uint64_t)v21, (uint64_t)a3 + *(void *)(qword_A3DE8 + *a3 + 24));
  uint64_t v18 = DefaultAceViewProvider.init()(v17);
  sub_423C(v21);
  sub_423C(v22);
  sub_423C(v23);
  return v18;
}

uint64_t sub_632C8(uint64_t a1, uint64_t a2)
{
  uint64_t v15 = type metadata accessor for SharedGlobals(0LL);
  uint64_t v16 = &off_977A0;
  uint64_t v4 = sub_A800(v14);
  sub_A83C(a2, (uint64_t)v4);
  uint64_t v5 = type metadata accessor for StopAnnouncementAceViewProvider(0LL);
  uint64_t v6 = (void *)swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  uint64_t v7 = sub_A7D8((uint64_t)v14, v15);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v14[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *))(v10 + 16))(v9);
  uint64_t v11 = sub_63118(a1, (uint64_t)v9, v6);
  sub_423C(v14);
  return v11;
}

uint64_t sub_633A8()
{
  return 0LL;
}

void sub_633C4(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
}

uint64_t sub_633D8()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_633E8()
{
  return swift_slowDealloc(v0, -1LL, -1LL);
}

uint64_t sub_633F8@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v2, v1);
}

uint64_t type metadata accessor for StopAnnouncementTemplatingService(uint64_t a1)
{
  uint64_t result = qword_A3918;
  if (!qword_A3918) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for StopAnnouncementTemplatingService);
  }
  return result;
}

uint64_t sub_6343C(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL);
}

void sub_63494()
{
}

void sub_634CC()
{
}

void sub_63500(int a1)
{
  LODWORD(v111) = a1;
  uint64_t v105 = type metadata accessor for CrossDeviceCommandExecution(0LL);
  uint64_t v103 = *(void *)(v105 - 8);
  sub_1736C();
  __chkstk_darwin(v2);
  sub_9298();
  uint64_t v104 = v4 - v3;
  uint64_t v113 = type metadata accessor for CrossDeviceCommandExecution.Result(0LL);
  uint64_t v101 = *(void *)(v113 - 8);
  sub_1736C();
  __chkstk_darwin(v5);
  sub_6314();
  uint64_t v98 = v6;
  sub_62D0();
  __chkstk_darwin(v7);
  uint64_t v100 = (char *)&v93 - v8;
  sub_62D0();
  __chkstk_darwin(v9);
  uint64_t v112 = (char *)&v93 - v10;
  sub_41BC(&qword_A3968);
  sub_1736C();
  __chkstk_darwin(v11);
  sub_9298();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = type metadata accessor for ExecutionInfo.Action(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  sub_9298();
  uint64_t v19 = v18 - v17;
  uint64_t v109 = type metadata accessor for ExecutionInfo(0LL);
  uint64_t v106 = *(void *)(v109 - 8);
  sub_1736C();
  __chkstk_darwin(v20);
  sub_6314();
  uint64_t v97 = v21;
  sub_62D0();
  __chkstk_darwin(v22);
  uint64_t v99 = (char *)&v93 - v23;
  sub_62D0();
  __chkstk_darwin(v24);
  uint64_t v110 = (char *)&v93 - v25;
  sub_41BC(&qword_A1868);
  sub_1736C();
  __chkstk_darwin(v26);
  sub_9298();
  uint64_t v29 = v28 - v27;
  uint64_t v30 = type metadata accessor for UUID(0LL);
  uint64_t v108 = *(void *)(v30 - 8);
  sub_1736C();
  uint64_t v32 = __chkstk_darwin(v31);
  uint64_t v34 = (char *)&v93 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v32);
  uint64_t v107 = (char *)&v93 - v35;
  uint64_t v102 = v1;
  uint64_t v37 = *(void *)(v1 + qword_A3900 + 24);
  uint64_t v36 = *(void *)(v1 + qword_A3900 + 32);
  sub_8504((void *)(v1 + qword_A3900), v37);
  uint64_t started = dispatch thunk of AceServiceInvoker.currentStartRequestId()(v37, v36);
  if (!v39) {
    goto LABEL_4;
  }
  uint64_t v40 = v39;
  UUID.init(uuidString:)(started);
  swift_bridgeObjectRelease(v40);
  if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v29, 1LL, v30) == 1)
  {
    sub_63DDC(v29);
LABEL_4:
    if (qword_9F820 != -1) {
      swift_once(&qword_9F820, sub_17ADC);
    }
    uint64_t v41 = type metadata accessor for Logger(0LL);
    uint64_t v42 = sub_4870(v41, (uint64_t)qword_A3EB0);
    os_log_type_t v43 = (os_log_s *)Logger.logObject.getter(v42);
    os_log_type_t v44 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = (uint8_t *)sub_144F0(2LL);
      *(_WORD *)uint64_t v45 = 0;
      _os_log_impl( &dword_0,  v43,  v44,  "StopAnnouncementTemplatingService.logQuickStopHandlingEndedEvent(): startRequestId is nil",  v45,  2u);
      sub_48D4((uint64_t)v45);
    }

    return;
  }

  unint64_t v47 = v107;
  uint64_t v46 = v108;
  (*(void (**)(char *, uint64_t, uint64_t))(v108 + 32))(v107, v29, v30);
  uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v46 + 16);
  uint64_t v94 = v30;
  v48(v34, v47, v30);
  (*(void (**)(uint64_t, void, uint64_t))(v16 + 104))( v19,  enum case for ExecutionInfo.Action.quickStopStop(_:),  v15);
  uint64_t v49 = enum case for ExecutionInfo.QuickStopActionResult.stoppedHomeAnnouncement(_:);
  uint64_t v50 = type metadata accessor for ExecutionInfo.QuickStopActionResult(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 104LL))(v14, v49, v50);
  _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v14, 0LL, 1LL, v50);
  uint64_t v51 = v110;
  ExecutionInfo.init(executionId:action:quickStopActionResult:)(v34, v19, v14);
  uint64_t v52 = (unsigned int *)&enum case for CrossDeviceCommandExecution.Result.success(_:);
  uint64_t v53 = v101;
  if ((v111 & 1) == 0) {
    uint64_t v52 = (unsigned int *)&enum case for CrossDeviceCommandExecution.Result.error(_:);
  }
  Swift::String v55 = v112;
  uint64_t v54 = v113;
  (*(void (**)(char *, void, uint64_t))(v101 + 104))(v112, *v52, v113);
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v56 = type metadata accessor for Logger(0LL);
  sub_4870(v56, (uint64_t)qword_A3EB0);
  uint64_t v57 = v106;
  uint64_t v58 = v99;
  uint64_t v59 = v109;
  uint64_t v96 = *(void (**)(char *, char *, uint64_t))(v106 + 16);
  v96(v99, v51, v109);
  uint64_t v60 = v100;
  uint64_t v95 = *(uint64_t (**)(char *, char *, uint64_t))(v53 + 16);
  uint64_t v61 = v95(v100, v55, v54);
  uint64_t v62 = (os_log_s *)Logger.logObject.getter(v61);
  os_log_type_t v63 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v62, v63))
  {
    uint64_t v64 = sub_144F0(22LL);
    uint64_t v93 = sub_144F0(64LL);
    v115[0] = v93;
    *(_DWORD *)uint64_t v64 = 136315394;
    unint64_t v65 = v97;
    v96(v97, v58, v59);
    uint64_t v66 = String.init<A>(describing:)(v65, v59);
    uint64_t v67 = v58;
    unint64_t v69 = v68;
    uint64_t v114 = sub_68DC4(v66, v68, v115);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v114, v115, v64 + 4, v64 + 12);
    Swift::String v55 = v112;
    swift_bridgeObjectRelease(v69);
    uint64_t v106 = *(void *)(v106 + 8);
    ((void (*)(char *, uint64_t))v106)(v67, v109);
    *(_WORD *)(v64 + sub_423C(v0 + 12) = 2080;
    uint64_t v70 = v98;
    v95(v98, v60, v113);
    uint64_t v71 = String.init<A>(describing:)(v70, v113);
    os_log_type_t v72 = v60;
    unint64_t v74 = v73;
    uint64_t v114 = sub_68DC4(v71, v73, v115);
    uint64_t v59 = v109;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v114, v115, v64 + 14, v64 + 22);
    swift_bridgeObjectRelease(v74);
    uint64_t v101 = *(void *)(v53 + 8);
    ((void (*)(char *, uint64_t))v101)(v72, v113);
    _os_log_impl( &dword_0,  v62,  v63,  "StopAnnouncementTemplatingService.logQuickStopHandlingEndedEvent() - info: %s, result: %s",  (uint8_t *)v64,  0x16u);
    uint64_t v75 = v93;
    swift_arrayDestroy(v93, 2LL, (char *)&type metadata for Any + 8);
    uint64_t v54 = v113;
    sub_48D4(v75);
    sub_48D4(v64);
  }

  else
  {
    uint64_t v106 = *(void *)(v57 + 8);
    ((void (*)(char *, uint64_t))v106)(v58, v59);
    uint64_t v101 = *(void *)(v53 + 8);
    ((void (*)(char *, uint64_t))v101)(v60, v54);
  }

  uint64_t v76 = v102 + qword_A3908;
  uint64_t v77 = *(void *)(v102 + qword_A3908 + 24);
  uint64_t v78 = *(void *)(v102 + qword_A3908 + 32);
  sub_63E3C();
  uint64_t v79 = sub_41BC(&qword_A3970);
  uint64_t v80 = v104;
  uint64_t v81 = (char *)(v104 + *(int *)(v79 + 48));
  uint64_t v82 = v110;
  sub_63E24(v104);
  v95(v81, v55, v54);
  uint64_t v83 = v103;
  uint64_t v84 = *(void (**)(uint64_t, void, uint64_t))(v103 + 104);
  uint64_t v85 = v105;
  v84(v80, enum case for CrossDeviceCommandExecution.ended(_:), v105);
  dispatch thunk of DeviceResolutionAnalytics.logCommandExecution(_:)(v80, v77, v78);
  uint64_t v86 = *(void (**)(uint64_t, uint64_t))(v83 + 8);
  v86(v80, v85);
  if ((v111 & 1) == 0)
  {
    uint64_t v87 = *(void *)(v76 + 24);
    uint64_t v111 = *(void *)(v76 + 32);
    sub_63E3C();
    uint64_t v88 = v80;
    uint64_t v89 = v80 + *(int *)(sub_41BC(&qword_A3978) + 48);
    sub_63E24(v80);
    uint64_t v90 = v85;
    uint64_t v91 = enum case for CrossDeviceCommandExecution.FailureReason.unknown(_:);
    uint64_t v92 = type metadata accessor for CrossDeviceCommandExecution.FailureReason(0LL);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v92 - 8) + 104LL))(v89, v91, v92);
    v84(v88, enum case for CrossDeviceCommandExecution.failed(_:), v90);
    dispatch thunk of DeviceResolutionAnalytics.logCommandExecution(_:)(v88, v87, v111);
    v86(v88, v90);
  }

  ((void (*)(char *, uint64_t))v101)(v112, v113);
  ((void (*)(char *, uint64_t))v106)(v82, v59);
  (*(void (**)(char *, uint64_t))(v108 + 8))(v107, v94);
}

void sub_63CBC()
{
}

void sub_63CE8()
{
}

uint64_t sub_63D14()
{
  return swift_release(*(void *)(v0 + qword_A3910));
}

uint64_t sub_63D54()
{
  uint64_t v0 = DucTemplatingService.deinit();
  sub_423C((void *)(v0 + qword_A38F8));
  sub_423C((void *)(v0 + qword_A3900));
  sub_423C((void *)(v0 + qword_A3908));
  swift_release(*(void *)(v0 + qword_A3910));
  return v0;
}

uint64_t sub_63DB8()
{
  uint64_t v0 = sub_63D54();
  return swift_deallocClassInstance(v0, 144LL, 7LL);
}

uint64_t sub_63DD4()
{
  return type metadata accessor for StopAnnouncementTemplatingService(0LL);
}

uint64_t sub_63DDC(uint64_t a1)
{
  uint64_t v2 = sub_41BC(&qword_A1868);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

void sub_63E1C(int a1)
{
}

uint64_t sub_63E24(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 - 248))(a1, v1, v2);
}

uint64_t sub_63E34@<X0>(uint64_t a1@<X8>)
{
  return sub_423C((void *)(v1 + a1));
}

void *sub_63E3C()
{
  return sub_8504(v0, v1);
}

uint64_t sub_63E48(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = v4;
  Swift::String v6 = Substring.uppercased()();
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRetain(a2);
  unint64_t v7 = sub_63F14(1uLL, a1, a2);
  uint64_t v9 = v8;
  Swift::String v15 = v6;
  v14[0] = v7;
  v14[1] = v10;
  void v14[2] = v11;
  void v14[3] = v8;
  unint64_t v12 = sub_469DC();
  swift_bridgeObjectRetain(v6._object);
  String.append<A>(contentsOf:)(v14, &type metadata for Substring, v12);
  swift_bridgeObjectRelease(v6._object);
  swift_bridgeObjectRelease(v9);
  return v15._countAndFlagsBits;
}

unint64_t sub_63F14(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000LL) != 0)
  {
    __break(1u);
  }

  else
  {
    if ((a3 & 0x2000000000000000LL) != 0) {
      uint64_t v4 = HIBYTE(a3) & 0xF;
    }
    else {
      uint64_t v4 = a2 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v5 = 7LL;
    if (((a3 >> 60) & ((a2 & 0x800000000000000LL) == 0)) != 0) {
      uint64_t v5 = 11LL;
    }
    unint64_t v6 = v5 | (v4 << 16);
    uint64_t result = String.index(_:offsetBy:limitedBy:)(15LL, result, v6, a2, a3);
    if ((v7 & 1) != 0) {
      uint64_t result = v6;
    }
    if (4 * v4 >= result >> 14)
    {
      uint64_t v8 = String.subscript.getter(result, v6);
      swift_bridgeObjectRelease(a3);
      return v8;
    }
  }

  __break(1u);
  return result;
}

uint64_t sub_63FE4(uint64_t result, uint64_t a2, unint64_t a3)
{
  if (result < 0)
  {
    __break(1u);
  }

  else
  {
    uint64_t v4 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000LL) == 0) {
      uint64_t v4 = a2;
    }
    uint64_t v5 = 7LL;
    if (((a3 >> 60) & ((a2 & 0x800000000000000LL) == 0)) != 0) {
      uint64_t v5 = 11LL;
    }
    uint64_t v6 = v5 | (v4 << 16);
    uint64_t v7 = String.index(_:offsetBy:limitedBy:)(15LL, result, v6, a2, a3);
    if ((v8 & 1) != 0) {
      uint64_t v9 = v6;
    }
    else {
      uint64_t v9 = v7;
    }
    uint64_t v10 = String.subscript.getter(15LL, v9);
    swift_bridgeObjectRelease(a3);
    return v10;
  }

  return result;
}

uint64_t type metadata accessor for SystemAppFinder()
{
  return objc_opt_self(&OBJC_CLASS____TtC35HomeCommunicationFlowDelegatePlugin15SystemAppFinder);
}

unint64_t sub_640C0(uint64_t a1)
{
  unint64_t v2 = 0xD000000000000010LL;
  switch(a1)
  {
    case 0LL:
      return v2;
    case 1LL:
      unint64_t v2 = 0xD000000000000014LL;
      break;
    case 2LL:
      unint64_t v2 = 0xD000000000000013LL;
      break;
    case 3LL:
      unint64_t v2 = 0xD000000000000011LL;
      break;
    default:
      _StringGuts.grow(_:)(39LL);
      swift_bridgeObjectRelease(0xE000000000000000LL);
      uint64_t v3 = type metadata accessor for SpeakableString(0LL);
      v4._uint64_t countAndFlagsBits = Array.description.getter(a1, v3);
      String.append(_:)(v4);
      sub_18FB8();
      v5._uint64_t countAndFlagsBits = 41LL;
      v5._object = (void *)0xE100000000000000LL;
      String.append(_:)(v5);
      unint64_t v2 = 0xD000000000000024LL;
      break;
  }

  return v2;
}

uint64_t sub_641CC(uint64_t a1, unint64_t a2)
{
  BOOL v3 = a1 == 0x4465727574616566LL && a2 == 0xEF64656C62617369LL;
  if (v3
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0x4465727574616566LL, 0xEF64656C62617369LL, a1, a2, 0LL) & 1) != 0)
  {
    swift_bridgeObjectRelease(a2);
    return 0LL;
  }

  if (a1 == 0xD000000000000022LL && a2 == 0x8000000000075C70LL)
  {
    unint64_t v6 = 0x8000000000075C70LL;
LABEL_12:
    swift_bridgeObjectRelease(v6);
    return 1LL;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000022LL, 0x8000000000075C70LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v6 = a2;
    goto LABEL_12;
  }

  if (a1 == 0xD000000000000013LL && a2 == 0x80000000000793F0LL)
  {
    unint64_t v7 = 0x80000000000793F0LL;
LABEL_18:
    swift_bridgeObjectRelease(v7);
    return 2LL;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000013LL, 0x80000000000793F0LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v7 = a2;
    goto LABEL_18;
  }

  if (a1 == 0xD000000000000012LL && a2 == 0x8000000000079410LL)
  {
    unint64_t v8 = 0x8000000000079410LL;
LABEL_24:
    swift_bridgeObjectRelease(v8);
    return 3LL;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000012LL, 0x8000000000079410LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v8 = a2;
    goto LABEL_24;
  }

  if (a1 == 0xD000000000000010LL && a2 == 0x8000000000079430LL)
  {
    swift_bridgeObjectRelease(0x8000000000079430LL);
    return 4LL;
  }

  else
  {
    char v9 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010LL, 0x8000000000079430LL, a1, a2, 0LL);
    swift_bridgeObjectRelease(a2);
    if ((v9 & 1) != 0) {
      return 4LL;
    }
    else {
      return 5LL;
    }
  }

uint64_t sub_643D8()
{
  return 5LL;
}

uint64_t sub_643E0(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_6441C + 4 * byte_74FF4[a1]))( 0xD000000000000022LL,  0x8000000000075C70LL);
}

uint64_t sub_6441C()
{
  return 0x4465727574616566LL;
}

uint64_t sub_64440()
{
  return v0 + 3;
}

unint64_t sub_64468()
{
  return 0xD000000000000010LL;
}

uint64_t sub_64484(uint64_t a1, uint64_t a2)
{
  return 1LL;
}

uint64_t sub_644A0()
{
  return 0LL;
}

uint64_t sub_644AC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x614E746567726174LL && a2 == 0xEB0000000073656DLL)
  {
    swift_bridgeObjectRelease(a2);
    char v5 = 0;
  }

  else
  {
    char v4 = _stringCompareWithSmolCheck(_:_:expecting:)(0x614E746567726174LL, 0xEB0000000073656DLL, a1, a2, 0LL);
    swift_bridgeObjectRelease(a2);
    char v5 = v4 ^ 1;
  }

  return v5 & 1;
}

uint64_t sub_64540()
{
  return 0x614E746567726174LL;
}

uint64_t sub_64560(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_41BC(&qword_A3B80);
  uint64_t v44 = *(void *)(v4 - 8);
  uint64_t v45 = v4;
  sub_1736C();
  __chkstk_darwin(v5);
  sub_172F4();
  uint64_t v43 = v6;
  uint64_t v7 = sub_41BC(&qword_A3B88);
  uint64_t v41 = *(void *)(v7 - 8);
  uint64_t v42 = v7;
  sub_1736C();
  __chkstk_darwin(v8);
  sub_172F4();
  uint64_t v39 = v9;
  uint64_t v10 = sub_41BC(&qword_A3B90);
  uint64_t v36 = *(void *)(v10 - 8);
  uint64_t v37 = v10;
  sub_1736C();
  __chkstk_darwin(v11);
  sub_144D8();
  uint64_t v40 = sub_41BC(&qword_A3B98);
  uint64_t v38 = *(void *)(v40 - 8);
  sub_1736C();
  __chkstk_darwin(v12);
  sub_9298();
  uint64_t v15 = v14 - v13;
  uint64_t v16 = sub_41BC(&qword_A3BA0);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  sub_9298();
  uint64_t v20 = v19 - v18;
  uint64_t v21 = sub_41BC(&qword_A3BA8);
  uint64_t v47 = *(void *)(v21 - 8);
  uint64_t v48 = v21;
  sub_1736C();
  __chkstk_darwin(v22);
  sub_9298();
  uint64_t v25 = v24 - v23;
  uint64_t v27 = a1[3];
  uint64_t v26 = a1[4];
  sub_8504(a1, v27);
  unint64_t v28 = sub_671EC();
  dispatch thunk of Encoder.container<A>(keyedBy:)( &type metadata for UnsupportedDialogFlow.Reason.CodingKeys,  &type metadata for UnsupportedDialogFlow.Reason.CodingKeys,  v28,  v27,  v26);
  switch(a2)
  {
    case 0LL:
      char v50 = 0;
      sub_67318();
      sub_67C9C((uint64_t)&type metadata for UnsupportedDialogFlow.Reason.FeatureDisabledCodingKeys, (uint64_t)&v50);
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v20, v16);
      goto LABEL_8;
    case 1LL:
      sub_67E54();
      sub_67C9C((uint64_t)&type metadata for UnsupportedDialogFlow.Reason.ContactNotSupportedCodingKeys, (uint64_t)&v52);
      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v2, v37);
      goto LABEL_8;
    case 2LL:
      sub_67E48();
      uint64_t v33 = v39;
      sub_67C9C((uint64_t)&type metadata for UnsupportedDialogFlow.Reason.RepeatNotSupportedCodingKeys, (uint64_t)&v53);
      uint64_t v35 = v41;
      uint64_t v34 = v42;
      goto LABEL_7;
    case 3LL:
      sub_67E3C();
      uint64_t v33 = v43;
      sub_67C9C((uint64_t)&type metadata for UnsupportedDialogFlow.Reason.SkipNotSupportedCodingKeys, (uint64_t)&v54);
      uint64_t v35 = v44;
      uint64_t v34 = v45;
LABEL_7:
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v33, v34);
LABEL_8:
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v47 + 8))(v25, a2);
      break;
    default:
      sub_67E6C();
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)( &type metadata for UnsupportedDialogFlow.Reason.UnsupportedRecipientsNoTargetFoundCodingKeys,  &v51,  v48,  &type metadata for UnsupportedDialogFlow.Reason.UnsupportedRecipientsNoTargetFoundCodingKeys);
      uint64_t v49 = a2;
      uint64_t v29 = sub_41BC(&qword_A2308);
      uint64_t v30 = sub_67354( &qword_A3BB0,  &qword_A3BB8,  (uint64_t)&protocol conformance descriptor for SpeakableString,  (uint64_t)&protocol conformance descriptor for <A> [A]);
      KeyedEncodingContainer.encode<A>(_:forKey:)(&v49, v31, v40, v29, v30);
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v15, v40);
      uint64_t result = sub_67DE4(*(uint64_t (**)(uint64_t, uint64_t))(v47 + 8));
      break;
  }

  return result;
}

uint64_t sub_648A4(void *a1)
{
  uint64_t v7 = sub_41BC(&qword_A3B30);
  __chkstk_darwin(v7);
  sub_9298();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = sub_41BC(&qword_A3B38);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  sub_144D8();
  uint64_t v14 = a1[3];
  uint64_t v13 = a1[4];
  sub_8504(a1, v14);
  unint64_t v15 = sub_671EC();
  dispatch thunk of Decoder.container<A>(keyedBy:)( &type metadata for UnsupportedDialogFlow.Reason.CodingKeys,  &type metadata for UnsupportedDialogFlow.Reason.CodingKeys,  v15,  v14,  v13);
  if (!v31)
  {
    uint64_t v30 = v12;
    uint64_t v32 = v1;
    uint64_t v16 = KeyedDecodingContainer.allKeys.getter(v11);
    uint64_t v17 = v16;
    uint64_t v18 = *(void *)(v16 + 16);
    if (v18)
    {
      uint64_t v19 = v11;
      uint64_t v20 = *(unsigned __int8 *)(v16 + 32);
      sub_21868(1LL, v18, v16, v16 + 32, 0LL, (2 * v18) | 1);
      uint64_t v22 = v21;
      unint64_t v24 = v23;
      swift_bridgeObjectRelease(v17);
      if (v22 == v24 >> 1) {
        __asm { BR              X9 }
      }

      uint64_t v11 = v19;
    }

    uint64_t v10 = type metadata accessor for DecodingError(0LL);
    swift_allocError(v10, &protocol witness table for DecodingError, 0LL, 0LL);
    uint64_t v26 = v25;
    sub_41BC(&qword_A1050);
    void *v26 = &type metadata for UnsupportedDialogFlow.Reason;
    uint64_t v27 = KeyedDecodingContainer.codingPath.getter(v11);
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)( v27,  0xD00000000000002BLL,  0x80000000000772D0LL,  0LL);
    uint64_t v28 = (*(uint64_t (**)(void *, void, uint64_t))(*(void *)(v10 - 8) + 104LL))( v26,  enum case for DecodingError.typeMismatch(_:),  v10);
    swift_willThrow(v28);
    sub_67D54();
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v32, v11);
  }

  sub_423C(a1);
  return v10;
}

void sub_64C00()
{
  uint64_t v2 = *(void *)(v1 - 248);
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)( &type metadata for UnsupportedDialogFlow.Reason.UnsupportedRecipientsNoTargetFoundCodingKeys,  v1 - 68,  v0,  &type metadata for UnsupportedDialogFlow.Reason.UnsupportedRecipientsNoTargetFoundCodingKeys);
  if (v2)
  {
    sub_67D54();
    JUMPOUT(0x64BCCLL);
  }

  uint64_t v3 = sub_41BC(&qword_A2308);
  sub_67354( &qword_A3B68,  &qword_A3B70,  (uint64_t)&protocol conformance descriptor for SpeakableString,  (uint64_t)&protocol conformance descriptor for <A> [A]);
  KeyedDecodingContainer.decode<A>(_:forKey:)(v3, v4, *(void *)(v1 - 176), v3);
  uint64_t v5 = *(void *)(v1 - 216);
  sub_67DD0();
  sub_67D54();
  sub_67DE4(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  JUMPOUT(0x64DC4LL);
}

void sub_64C50()
{
  if (!v0)
  {
    sub_67E60(*(void *)(v1 - 200));
    sub_67D54();
    sub_67CCC();
    sub_423C(*(void **)(v1 - 112));
    JUMPOUT(0x64BD8LL);
  }

  sub_67D54();
  JUMPOUT(0x64BCCLL);
}

void sub_64C90()
{
  uint64_t v3 = *(void *)(v2 - 160);
  sub_67C60((uint64_t)&type metadata for UnsupportedDialogFlow.Reason.RepeatNotSupportedCodingKeys, v2 - 66);
  if (!v0)
  {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 184) + 8LL))(v3, v1);
    sub_67D54();
    sub_67CCC();
    sub_423C(*(void **)(v2 - 112));
    JUMPOUT(0x64BD8LL);
  }

  sub_67D54();
  JUMPOUT(0x64BCCLL);
}

void sub_64CDC()
{
  if (v0) {
    JUMPOUT(0x64D04LL);
  }
  sub_67DE4(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_67D54();
  sub_67CCC();
  sub_423C(*(void **)(v2 - 112));
  JUMPOUT(0x64BD8LL);
}

uint64_t sub_64DD0()
{
  return sub_643E0(*v0);
}

uint64_t sub_64DD8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = sub_641CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_64DFC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result = sub_643D8();
  *a1 = result;
  return result;
}

uint64_t sub_64E20(uint64_t a1)
{
  unint64_t v2 = sub_671EC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_64E48(uint64_t a1)
{
  unint64_t v2 = sub_671EC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_64E74(uint64_t a1)
{
  unint64_t v2 = sub_672A0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_64E9C(uint64_t a1)
{
  unint64_t v2 = sub_672A0();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_64EC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = sub_64484(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_64EEC(uint64_t a1)
{
  unint64_t v2 = sub_67318();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_64F14(uint64_t a1)
{
  unint64_t v2 = sub_67318();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_64F3C(uint64_t a1)
{
  unint64_t v2 = sub_67264();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_64F64(uint64_t a1)
{
  unint64_t v2 = sub_67264();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_64F8C(uint64_t a1)
{
  unint64_t v2 = sub_67228();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_64FB4(uint64_t a1)
{
  unint64_t v2 = sub_67228();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_64FE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = sub_644AC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_65008(uint64_t a1)
{
  unint64_t v2 = sub_672DC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_65030(uint64_t a1)
{
  unint64_t v2 = sub_672DC();
  return CodingKey.debugDescription.getter(a1, v2);
}

unint64_t sub_65058()
{
  return sub_640C0(*v0);
}

uint64_t sub_65060@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_648A4(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_65088(void *a1)
{
  return sub_64560(a1, *v1);
}

uint64_t sub_650A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnsupportedDialogFlow();
  sub_17144( &qword_A0CD0,  v5,  (uint64_t (*)(uint64_t))type metadata accessor for UnsupportedDialogFlow,  (uint64_t)&unk_750E8);
  return Flow.deferToExecuteAsync(_:)(a1, a2, v4, v6);
}

uint64_t sub_65110(uint64_t a1)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 3sub_423C(v0 + 2) = v1;
  sub_38360();
  return swift_task_switch(v3, v4, v5);
}

uint64_t sub_6512C()
{
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v2 = type metadata accessor for Logger(0LL);
  sub_67B9C(v2, (uint64_t)qword_A3EB0);
  uint64_t v3 = (void *)sub_4BB60();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  BOOL v5 = sub_2F45C(v4);
  uint64_t v6 = *(void *)(v1 + 32);
  if (v5)
  {
    swift_slowAlloc(12LL, -1LL);
    uint64_t v17 = sub_67C30();
    v18[0] = v17;
    _DWORD *v0 = 136315138;
    unint64_t v7 = *(void *)(v6 + 16);
    sub_67430(v7);
    unint64_t v8 = sub_640C0(v7);
    unint64_t v10 = v9;
    sub_67440(v7);
    *(void *)(v1 + 16) = sub_68DC4(v8, v10, v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 16, v1 + 24, v0 + 1, v0 + 3);
    swift_bridgeObjectRelease(v10);
    sub_2F4DC(v6);
    sub_4BB68(&dword_0, v11, v12, "#UnsupportedDialogFlow executing for reason=%s");
    swift_arrayDestroy(v17, 1LL, (char *)&type metadata for Any + 8);
    sub_48D4(v17);
    sub_48D4((uint64_t)v0);
  }

  else
  {
    sub_2F4DC(*(void *)(v1 + 32));
  }

  uint64_t v13 = *(void *)(v1 + 32);
  static OutputPublisherFactory.makeOutputPublisherAsync()(v18);
  uint64_t v14 = type metadata accessor for SimpleOutputFlowAsync(0LL);
  sub_A8BC(v14);
  swift_retain(v13);
  uint64_t v15 = SimpleOutputFlowAsync.init(outputPublisher:outputGenerator:)(v18, &unk_A3BC8, v13);
  *(void *)(v1 + 16) = v15;
  static ExecuteResponse.complete<A>(next:)(v1 + 16, v14);
  swift_release(v15);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_65314(uint64_t a1, uint64_t a2)
{
  v2[28] = a1;
  v2[29] = a2;
  uint64_t v3 = type metadata accessor for HomeCommunicationError(0LL);
  v2[30] = v3;
  unint64_t v4 = (*(void *)(*(void *)(v3 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[31] = swift_task_alloc(v4);
  v2[32] = swift_task_alloc(v4);
  uint64_t v5 = type metadata accessor for HomeCommunicationSnippetModel(0LL);
  v2[33] = v5;
  v2[34] = swift_task_alloc((*(void *)(*(void *)(v5 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for Locale(0LL);
  v2[35] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v2[36] = v7;
  v2[37] = swift_task_alloc((*(void *)(v7 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_41BC(&qword_A13C0);
  v2[38] = swift_task_alloc((*(void *)(*(void *)(v8 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for DialogPhase(0LL);
  v2[39] = swift_task_alloc((*(void *)(*(void *)(v9 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for OutputGenerationManifest(0LL);
  v2[40] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v2[41] = v11;
  v2[42] = swift_task_alloc((*(void *)(v11 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v12 = (*(void *)(*(void *)(sub_41BC(&qword_A3BD0) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[43] = swift_task_alloc(v12);
  v2[44] = swift_task_alloc(v12);
  v2[45] = swift_task_alloc(v12);
  return swift_task_switch(sub_65478, 0LL, 0LL);
}

uint64_t sub_65478()
{
  uint64_t v1 = v0[39];
  uint64_t v2 = v0[29];
  uint64_t v3 = _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v0[45], 1LL, 1LL, v0[33]);
  static DialogPhase.error.getter(v3);
  OutputGenerationManifest.init(dialogPhase:_:)(v1, sub_A45C, 0LL);
  uint64_t v4 = *(void *)(v2 + 16);
  v0[46] = v4;
  switch(v4)
  {
    case 0LL:
      uint64_t v5 = (void *)swift_task_alloc(dword_A0704);
      v0[51] = v5;
      sub_38428(v5, (uint64_t)sub_65678);
      uint64_t result = sub_F584();
      break;
    case 1LL:
      uint64_t v8 = (void *)swift_task_alloc(dword_A232C);
      v0[60] = v8;
      sub_38428(v8, (uint64_t)sub_65CE4);
      uint64_t result = sub_3ED30();
      break;
    case 2LL:
      uint64_t v9 = (void *)swift_task_alloc(dword_A1AAC);
      v0[63] = v9;
      sub_38428(v9, (uint64_t)sub_65E70);
      uint64_t result = sub_328F8();
      break;
    case 3LL:
      uint64_t v10 = (void *)swift_task_alloc(dword_A3124);
      v0[66] = v10;
      sub_38428(v10, (uint64_t)sub_65FFC);
      uint64_t result = sub_5A96C();
      break;
    default:
      v0[47] = *(void *)(v0[29] + 72LL);
      uint64_t v7 = (void *)swift_task_alloc(dword_A23BC);
      v0[48] = v7;
      sub_38428(v7, (uint64_t)sub_65618);
      uint64_t result = sub_3FA18(v4);
      break;
  }

  return result;
}

uint64_t sub_65618(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *(void *)(*v2 + 384);
  *(void *)(v3 + 39sub_423C(v0 + 2) = a1;
  *(void *)(v3 + 400) = v1;
  swift_task_dealloc(v4);
  sub_38360();
  return sub_382EC(v5, v6, v7);
}

uint64_t sub_65678()
{
  *(void *)(v2 + 416) = v1;
  swift_task_dealloc(v4);
  if (!v1) {
    *(void *)(v2 + 424) = v0;
  }
  sub_38360();
  return sub_38340(v5, v6, v7);
}

#error "65734: call analysis failed (funcsize=70)"
uint64_t sub_65804(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  static Device.current.getter(v1 + 12, a1);
  uint64_t v2 = v1[15];
  uint64_t v3 = v1[16];
  sub_8504(v1 + 12, v2);
  uint64_t v4 = dispatch thunk of DeviceState.isWatch.getter(v2, v3);
  sub_423C(v1 + 12);
  if ((v4 & 1) != 0)
  {
    uint64_t v5 = 0x80000000000767B0LL;
    uint64_t v6 = 0xD000000000000012LL;
  }

  else
  {
    if (qword_9F7E0 != -1) {
      swift_once(&qword_9F7E0, sub_F85C);
    }
    uint64_t v6 = qword_A3E60;
    uint64_t v5 = *(void *)algn_A3E68;
    swift_bridgeObjectRetain(*(void *)algn_A3E68);
  }

  v1[54] = v6;
  v1[55] = v5;
  uint64_t v8 = v1[36];
  uint64_t v7 = v1[37];
  uint64_t v9 = v1[35];
  type metadata accessor for App(0LL);
  swift_bridgeObjectRetain(v5);
  uint64_t v10 = App.__allocating_init(appIdentifier:)(v6, v5);
  v1[56] = v10;
  uint64_t v11 = type metadata accessor for AppInformationResolver(0LL);
  sub_A8BC(v11);
  unint64_t v12 = swift_retain(v10);
  uint64_t v13 = AppInformationResolver.init(app:)(v12);
  static Device.current.getter(v1 + 2, v13);
  uint64_t v14 = v1[5];
  sub_8504(v1 + 2, v14);
  dispatch thunk of DeviceState.siriLocale.getter(v14);
  uint64_t v15 = dispatch thunk of AppInformationResolver.getLocalizedAppDisplayName(inLocale:)(v7);
  uint64_t v17 = v16;
  swift_release(v13);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  sub_423C(v1 + 2);
  if (v17)
  {
    String.toSpeakableString.getter(v15, v17);
    swift_bridgeObjectRelease(v17);
    uint64_t v18 = 0LL;
  }

  else
  {
    uint64_t v18 = 1LL;
  }

  uint64_t v19 = v1[38];
  uint64_t v20 = type metadata accessor for SpeakableString(0LL);
  _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v19, v18, 1LL, v20);
  uint64_t v21 = (void *)swift_task_alloc(dword_A238C);
  v1[57] = v21;
  *uint64_t v21 = v1;
  v21[1] = sub_65A08;
  return sub_3F4C8(v1[38]);
}

uint64_t sub_65A08()
{
  v2[58] = v1;
  swift_task_dealloc(v4);
  if (v1) {
    swift_bridgeObjectRelease(v2[55]);
  }
  else {
    v2[59] = v0;
  }
  sub_38360();
  return sub_38340(v5, v6, v7);
}

uint64_t sub_65A64()
{
  uint64_t v1 = v0[59];
  uint64_t v2 = v0[55];
  uint64_t v3 = v0[54];
  uint64_t v5 = v0[44];
  uint64_t v4 = v0[45];
  uint64_t v41 = v0[38];
  uint64_t v42 = v0[56];
  uint64_t v6 = v0[33];
  uint64_t v7 = dispatch thunk of LabelExecutionResult.subscript.getter();
  uint64_t v9 = v8;
  swift_release(v1);
  v0[22] = v3;
  v0[23] = v2;
  Loggable.init(wrappedValue:)(v0 + 22, &type metadata for String);
  type metadata accessor for HomeAppLaunchModel(0LL);
  v0[20] = v7;
  v0[21] = v9;
  Loggable.init(wrappedValue:)(v0 + 20, &type metadata for String);
  sub_17288(v4, &qword_A3BD0);
  swift_storeEnumTagMultiPayload(v5, v6, 0LL);
  _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v5, 0LL, 1LL, v6);
  sub_674DC(v5, v4);
  OutputGenerationManifest.responseViewId.setter(0xD00000000000001FLL, 0x80000000000767D0LL);
  swift_release(v42);
  sub_17288(v41, &qword_A13C0);
  uint64_t v10 = (void *)v0[49];
  v0[69] = v10;
  sub_67450(v0[45], v0[43]);
  sub_67C40();
  if (v11)
  {
    sub_17288(v0[43], &qword_A3BD0);
    uint64_t v12 = sub_384A8();
    sub_A8BC(v12);
    uint64_t v13 = sub_384BC();
    sub_67DB8(v13);
    uint64_t v14 = sub_41BC(&qword_A2100);
    uint64_t v15 = (__n128 *)sub_D31C(v14);
    sub_67E08(v15, v16, (__n128)xmmword_6FCA0);
    v0[70] = v43;
    id v17 = v10;
    uint64_t v18 = sub_67D98();
    uint64_t v19 = (void *)sub_67DAC(v18);
    sub_67CE8(v19);
    sub_67C88();
    return dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)(v20, v21, v22, v23);
  }

  else
  {
    sub_67BF0();
    uint64_t v24 = sub_384A8();
    sub_A8BC(v24);
    uint64_t v25 = sub_384BC();
    sub_67D44(v25);
    sub_176E0( &qword_A1F40,  v26,  type metadata accessor for HomeCommunicationSnippetModel,  (uint64_t)&protocol conformance descriptor for HomeCommunicationSnippetModel);
    uint64_t v28 = sub_67D2C(v27);
    sub_67D20((uint64_t)v28);
    uint64_t v29 = sub_41BC(&qword_A2100);
    uint64_t v30 = (__n128 *)sub_D31C(v29);
    sub_67E08(v30, v31, (__n128)xmmword_6FCA0);
    v0[72] = v43;
    id v32 = v10;
    uint64_t v33 = sub_4DE20();
    uint64_t v34 = (void *)sub_67DA0(v33);
    sub_67CF8(v34);
    sub_67C18();
    return dispatch thunk of ResponseGenerating.makeResponseOutput(conversationModel:dialog:outputGenerationManifest:)( v35,  v36,  v37,  v38,  v39);
  }

uint64_t sub_65CE4()
{
  *(void *)(v2 + 48sub_423C(v0 + 8) = v1;
  swift_task_dealloc(v4);
  if (!v1) {
    *(void *)(v2 + 496) = v0;
  }
  sub_38360();
  return sub_38340(v5, v6, v7);
}

#error "65DA0: call analysis failed (funcsize=70)"
uint64_t sub_65E70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  sub_383C0();
  sub_59CD4(v3);
  *(void *)(v2 + 5sub_423C(v0 + 12) = v1;
  swift_task_dealloc(v4);
  if (!v1) {
    *(void *)(v2 + 520) = v0;
  }
  sub_38360();
  return sub_38340(v5, v6, v7);
}

#error "65F2C: call analysis failed (funcsize=70)"
uint64_t sub_65FFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  sub_383C0();
  sub_59CD4(v3);
  *(void *)(v2 + 536) = v1;
  swift_task_dealloc(v4);
  if (!v1) {
    *(void *)(v2 + 544) = v0;
  }
  sub_38360();
  return sub_38340(v5, v6, v7);
}

#error "660B8: call analysis failed (funcsize=70)"
uint64_t sub_66188()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v1 = *(void *)(*(void *)v0 + 560LL);
  sub_38318(*(void *)(*(void *)v0 + 568LL));
  swift_bridgeObjectRelease(v1);
  sub_38360();
  return sub_382EC(v2, v3, v4);
}

uint64_t sub_661D0()
{
  uint64_t v8 = *(void **)(v1 + 552);
  uint64_t v9 = *(void *)(v1 + 360);
  uint64_t v10 = (*(uint64_t (**)(void, void))(*(void *)(v1 + 328) + 8LL))( *(void *)(v1 + 336),  *(void *)(v1 + 320));
  sub_67E28(v10, &qword_A3BD0);

  swift_release(*(void *)(v1 + 208));
  sub_67D74();
  swift_task_dealloc(v9);
  swift_task_dealloc(v8);
  swift_task_dealloc(v0);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return sub_46A58(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_66280()
{
  uint64_t v1 = (void *)(*(void *)v0 + 56LL);
  sub_38318(*(void *)(*(void *)v0 + 584LL));
  sub_18FB8();
  sub_423C(v1);
  sub_38360();
  return swift_task_switch(v2, v3, v4);
}

uint64_t sub_662D8()
{
  uint64_t v5 = *(void **)(v0 + 552);
  uint64_t v6 = *(void *)(v0 + 360);
  uint64_t v8 = *(void *)(v0 + 328);
  uint64_t v7 = *(void *)(v0 + 336);
  uint64_t v9 = *(void *)(v0 + 320);
  sub_17180(*(void *)(v0 + 272), type metadata accessor for HomeCommunicationSnippetModel);
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  sub_67E28(v10, &qword_A3BD0);

  swift_release(*(void *)(v0 + 200));
  sub_67D74();
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v9);
  swift_task_dealloc(v5);
  swift_task_dealloc(v8);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return sub_46A58(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_663A0()
{
  if (v1) {
    swift_errorRelease(v1);
  }
  else {
    *(void *)(v2 + 616) = v0;
  }
  sub_38360();
  return sub_38340(v5, v6, v7);
}

#error "66470: call analysis failed (funcsize=74)"
#error "666D0: call analysis failed (funcsize=112)"
#error "6679C: call analysis failed (funcsize=71)"
#error "668D4: call analysis failed (funcsize=71)"
#error "66A34: call analysis failed (funcsize=80)"
#error "66B6C: call analysis failed (funcsize=71)"
#error "66CA4: call analysis failed (funcsize=71)"
#error "66DDC: call analysis failed (funcsize=71)"
unint64_t *sub_66E98()
{
  unint64_t *v0;
  sub_67440(v0[2]);
  sub_423C(v0 + 3);
  swift_release(v0[8]);
  swift_release(v0[9]);
  swift_release(v0[10]);
  swift_release(v0[11]);
  return v0;
}

uint64_t sub_66EDC()
{
  return swift_deallocClassInstance(v0, 96LL, 7LL);
}

uint64_t type metadata accessor for UnsupportedDialogFlow()
{
  return objc_opt_self(&OBJC_CLASS____TtC35HomeCommunicationFlowDelegatePlugin21UnsupportedDialogFlow);
}

uint64_t *initializeBufferWithCopyOfBuffer for UnsupportedDialogFlow.Reason(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *a1 = v3;
  return a1;
}

unint64_t destroy for UnsupportedDialogFlow.Reason(unint64_t *a1)
{
  unint64_t result = *a1;
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease(result);
  }
  return result;
}

unint64_t *assignWithCopy for UnsupportedDialogFlow.Reason( unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  if (v3 < 0xFFFFFFFF)
  {
    *a1 = v4;
    if (v4 >= 0xFFFFFFFF) {
      swift_bridgeObjectRetain(v4);
    }
  }

  else if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease(v3);
    *a1 = *a2;
  }

  else
  {
    *a1 = v4;
    swift_bridgeObjectRetain(v4);
    swift_bridgeObjectRelease(v3);
  }

  return a1;
}

void *initializeWithTake for UnsupportedDialogFlow.Reason(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

unint64_t *assignWithTake for UnsupportedDialogFlow.Reason( unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  if (v3 < 0xFFFFFFFF) {
    goto LABEL_5;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease(v3);
LABEL_5:
    *a1 = v4;
    return a1;
  }

  *a1 = v4;
  swift_bridgeObjectRelease(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for UnsupportedDialogFlow.Reason(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 >= 0x7FFFFFFC && *((_BYTE *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483644);
  }
  uint64_t v3 = *a1;
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 3;
  if (v4 >= 5) {
    return v5;
  }
  else {
    return 0LL;
  }
}

uint64_t storeEnumTagSinglePayload for UnsupportedDialogFlow.Reason( uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFB)
  {
    *(void *)unint64_t result = 0LL;
    *(_DWORD *)unint64_t result = a2 - 2147483644;
    if (a3 >= 0x7FFFFFFC) {
      *(_BYTE *)(result + sub_423C(v0 + 8) = 1;
    }
  }

  else
  {
    if (a3 >= 0x7FFFFFFC) {
      *(_BYTE *)(result + sub_423C(v0 + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 3;
    }
  }

  return result;
}

uint64_t sub_6710C(uint64_t *a1)
{
  uint64_t v1 = *a1;
  return (v1 + 1);
}

void *sub_67124(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }

  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }

  *unint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for UnsupportedDialogFlow.Reason()
{
  return &type metadata for UnsupportedDialogFlow.Reason;
}

uint64_t sub_67154(uint64_t a1, uint64_t a2)
{
  return sub_650A0(a1, a2);
}

uint64_t sub_67174(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc(dword_A3A44);
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_A65C;
  return sub_65110(a1);
}

uint64_t sub_671C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for UnsupportedDialogFlow();
  return Flow<>.exitValue.getter(v3, a2);
}

unint64_t sub_671EC()
{
  unint64_t result = qword_A3B40;
  if (!qword_A3B40)
  {
    unint64_t result = swift_getWitnessTable(&unk_7563C, &type metadata for UnsupportedDialogFlow.Reason.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_A3B40);
  }

  return result;
}

unint64_t sub_67228()
{
  unint64_t result = qword_A3B48;
  if (!qword_A3B48)
  {
    unint64_t result = swift_getWitnessTable( &unk_755EC,  &type metadata for UnsupportedDialogFlow.Reason.SkipNotSupportedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_A3B48);
  }

  return result;
}

unint64_t sub_67264()
{
  unint64_t result = qword_A3B50;
  if (!qword_A3B50)
  {
    unint64_t result = swift_getWitnessTable( &unk_7559C,  &type metadata for UnsupportedDialogFlow.Reason.RepeatNotSupportedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_A3B50);
  }

  return result;
}

unint64_t sub_672A0()
{
  unint64_t result = qword_A3B58;
  if (!qword_A3B58)
  {
    unint64_t result = swift_getWitnessTable( &unk_7554C,  &type metadata for UnsupportedDialogFlow.Reason.ContactNotSupportedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_A3B58);
  }

  return result;
}

unint64_t sub_672DC()
{
  unint64_t result = qword_A3B60;
  if (!qword_A3B60)
  {
    unint64_t result = swift_getWitnessTable( &unk_754FC,  &type metadata for UnsupportedDialogFlow.Reason.UnsupportedRecipientsNoTargetFoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_A3B60);
  }

  return result;
}

unint64_t sub_67318()
{
  unint64_t result = qword_A3B78;
  if (!qword_A3B78)
  {
    unint64_t result = swift_getWitnessTable( &unk_754AC,  &type metadata for UnsupportedDialogFlow.Reason.FeatureDisabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_A3B78);
  }

  return result;
}

uint64_t sub_67354(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v9 = sub_8564(&qword_A2308);
    sub_17144(a2, 255LL, (uint64_t (*)(uint64_t))&type metadata accessor for SpeakableString, a3);
    uint64_t result = swift_getWitnessTable(a4, v9);
    atomic_store(result, a1);
  }

  return result;
}

uint64_t sub_673DC(uint64_t a1)
{
  unsigned int v4 = (void *)swift_task_alloc(dword_A3BC4);
  *(void *)(v2 + 16) = v4;
  *unsigned int v4 = v2;
  v4[1] = sub_A65C;
  return sub_65314(a1, v1);
}

unint64_t sub_67430(unint64_t result)
{
  if (result >= 4) {
    return swift_bridgeObjectRetain(result);
  }
  return result;
}

unint64_t sub_67440(unint64_t result)
{
  if (result >= 4) {
    return swift_bridgeObjectRelease(result);
  }
  return result;
}

uint64_t sub_67450(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_41BC(&qword_A3BD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_67498(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HomeCommunicationSnippetModel(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_674DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_41BC(&qword_A3BD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t getEnumTagSinglePayload for UnsupportedDialogFlow.Reason.CodingKeys( unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }

  if (a2 >= 0xFC)
  {
    if (a2 + 4 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 4) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }

    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }

    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }

    int v5 = (*a1 | (v4 << 8)) - 5;
    return (v5 + 1);
  }

uint64_t storeEnumTagSinglePayload for UnsupportedDialogFlow.Reason.CodingKeys( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    LODWORD(sub_46B2C(*(void *)(v1 + 288), v4) = 1;
  }
  else {
    LODWORD(sub_46B2C(*(void *)(v1 + 288), v4) = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFB) {
    return ((uint64_t (*)(void))((char *)&loc_675F8 + 4 * byte_7500B[v4]))();
  }
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_6762C + 4 * byte_75006[v4]))();
}

uint64_t sub_6762C(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_67634(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x6763CLL);
  }
  return result;
}

uint64_t sub_67648(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x67650LL);
  }
  *(_BYTE *)uint64_t result = a2 + 4;
  return result;
}

uint64_t sub_67654(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_6765C(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UnsupportedDialogFlow.Reason.CodingKeys()
{
  return &type metadata for UnsupportedDialogFlow.Reason.CodingKeys;
}

ValueMetadata *type metadata accessor for UnsupportedDialogFlow.Reason.FeatureDisabledCodingKeys()
{
  return &type metadata for UnsupportedDialogFlow.Reason.FeatureDisabledCodingKeys;
}

uint64_t storeEnumTagSinglePayload for UnsupportedDialogFlow.Reason.UnsupportedRecipientsNoTargetFoundCodingKeys( uint64_t a1, int a2, int a3)
{
  else {
    int v3 = 2;
  }
  else {
    LODWORD(sub_46B2C(*(void *)(v1 + 288), v4) = v3;
  }
  if (a3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2) {
    return ((uint64_t (*)(void))((char *)sub_676C8 + 4 * byte_75010[v4]))();
  }
  else {
    return ((uint64_t (*)(void))((char *)sub_676E8 + 4 * byte_75015[v4]))();
  }
}

_BYTE *sub_676C8(_BYTE *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

_BYTE *sub_676E8(_BYTE *result)
{
  *uint64_t result = 0;
  return result;
}

_DWORD *sub_676F0(_DWORD *result, int a2)
{
  *uint64_t result = a2;
  return result;
}

_WORD *sub_676F8(_WORD *result, __int16 a2)
{
  *uint64_t result = a2;
  return result;
}

_WORD *sub_67700(_WORD *result)
{
  *uint64_t result = 0;
  return result;
}

_DWORD *sub_67708(_DWORD *result)
{
  *uint64_t result = 0;
  return result;
}

ValueMetadata *type metadata accessor for UnsupportedDialogFlow.Reason.UnsupportedRecipientsNoTargetFoundCodingKeys()
{
  return &type metadata for UnsupportedDialogFlow.Reason.UnsupportedRecipientsNoTargetFoundCodingKeys;
}

ValueMetadata *type metadata accessor for UnsupportedDialogFlow.Reason.ContactNotSupportedCodingKeys()
{
  return &type metadata for UnsupportedDialogFlow.Reason.ContactNotSupportedCodingKeys;
}

ValueMetadata *type metadata accessor for UnsupportedDialogFlow.Reason.RepeatNotSupportedCodingKeys()
{
  return &type metadata for UnsupportedDialogFlow.Reason.RepeatNotSupportedCodingKeys;
}

ValueMetadata *type metadata accessor for UnsupportedDialogFlow.Reason.SkipNotSupportedCodingKeys()
{
  return &type metadata for UnsupportedDialogFlow.Reason.SkipNotSupportedCodingKeys;
}

unint64_t sub_67758()
{
  unint64_t result = qword_A3BD8;
  if (!qword_A3BD8)
  {
    unint64_t result = swift_getWitnessTable( &unk_7537C,  &type metadata for UnsupportedDialogFlow.Reason.UnsupportedRecipientsNoTargetFoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_A3BD8);
  }

  return result;
}

unint64_t sub_67798()
{
  unint64_t result = qword_A3BE0;
  if (!qword_A3BE0)
  {
    unint64_t result = swift_getWitnessTable(&unk_75484, &type metadata for UnsupportedDialogFlow.Reason.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_A3BE0);
  }

  return result;
}

unint64_t sub_677D8()
{
  unint64_t result = qword_A3BE8;
  if (!qword_A3BE8)
  {
    unint64_t result = swift_getWitnessTable( &unk_753A4,  &type metadata for UnsupportedDialogFlow.Reason.FeatureDisabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_A3BE8);
  }

  return result;
}

unint64_t sub_67818()
{
  unint64_t result = qword_A3BF0;
  if (!qword_A3BF0)
  {
    unint64_t result = swift_getWitnessTable( &unk_753CC,  &type metadata for UnsupportedDialogFlow.Reason.FeatureDisabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_A3BF0);
  }

  return result;
}

unint64_t sub_67858()
{
  unint64_t result = qword_A3BF8;
  if (!qword_A3BF8)
  {
    unint64_t result = swift_getWitnessTable( &unk_752EC,  &type metadata for UnsupportedDialogFlow.Reason.UnsupportedRecipientsNoTargetFoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_A3BF8);
  }

  return result;
}

unint64_t sub_67898()
{
  unint64_t result = qword_A3C00;
  if (!qword_A3C00)
  {
    unint64_t result = swift_getWitnessTable( &unk_75314,  &type metadata for UnsupportedDialogFlow.Reason.UnsupportedRecipientsNoTargetFoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_A3C00);
  }

  return result;
}

unint64_t sub_678D8()
{
  unint64_t result = qword_A3C08;
  if (!qword_A3C08)
  {
    unint64_t result = swift_getWitnessTable( &unk_7529C,  &type metadata for UnsupportedDialogFlow.Reason.ContactNotSupportedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_A3C08);
  }

  return result;
}

unint64_t sub_67918()
{
  unint64_t result = qword_A3C10;
  if (!qword_A3C10)
  {
    unint64_t result = swift_getWitnessTable( &unk_752C4,  &type metadata for UnsupportedDialogFlow.Reason.ContactNotSupportedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_A3C10);
  }

  return result;
}

unint64_t sub_67958()
{
  unint64_t result = qword_A3C18;
  if (!qword_A3C18)
  {
    unint64_t result = swift_getWitnessTable( &unk_7524C,  &type metadata for UnsupportedDialogFlow.Reason.RepeatNotSupportedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_A3C18);
  }

  return result;
}

unint64_t sub_67998()
{
  unint64_t result = qword_A3C20;
  if (!qword_A3C20)
  {
    unint64_t result = swift_getWitnessTable( &unk_75274,  &type metadata for UnsupportedDialogFlow.Reason.RepeatNotSupportedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_A3C20);
  }

  return result;
}

unint64_t sub_679D8()
{
  unint64_t result = qword_A3C28;
  if (!qword_A3C28)
  {
    unint64_t result = swift_getWitnessTable( &unk_751FC,  &type metadata for UnsupportedDialogFlow.Reason.SkipNotSupportedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_A3C28);
  }

  return result;
}

unint64_t sub_67A18()
{
  unint64_t result = qword_A3C30;
  if (!qword_A3C30)
  {
    unint64_t result = swift_getWitnessTable( &unk_75224,  &type metadata for UnsupportedDialogFlow.Reason.SkipNotSupportedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_A3C30);
  }

  return result;
}

unint64_t sub_67A58()
{
  unint64_t result = qword_A3C38;
  if (!qword_A3C38)
  {
    unint64_t result = swift_getWitnessTable(&unk_753F4, &type metadata for UnsupportedDialogFlow.Reason.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_A3C38);
  }

  return result;
}

unint64_t sub_67A98()
{
  unint64_t result = qword_A3C40;
  if (!qword_A3C40)
  {
    unint64_t result = swift_getWitnessTable(&unk_7541C, &type metadata for UnsupportedDialogFlow.Reason.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_A3C40);
  }

  return result;
}

uint64_t sub_67ADC()
{
  return sub_3F26C();
}

uint64_t sub_67AF8()
{
  return ((uint64_t (*)(void))dispatch thunk of ResponseGenerating.makeResponseOutput(conversationModel:dialog:outputGenerationManifest:))();
}

uint64_t sub_67B10()
{
  return ((uint64_t (*)(void))dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:))();
}

uint64_t sub_67B28(__n128 *a1, uint64_t a2, __n128 a3)
{
  a1[1] = a3;
  a1[2].n128_u64[0] = v3;
  return specialized Array._endMutation()(a1, a2);
}

uint64_t sub_67B3C()
{
  return swift_slowAlloc(12LL, -1LL);
}

unint64_t sub_67B5C(float a1)
{
  float *v1 = a1;
  sub_67430(v2);
  return sub_640C0(v2);
}

uint64_t sub_67B84()
{
  return swift_getErrorValue(v1, v0 + 192, v0 + 136);
}

uint64_t sub_67B9C(uint64_t a1, uint64_t a2)
{
  return swift_retain_n(v2, 2LL);
}

uint64_t sub_67BB8(uint64_t a1, uint64_t a2)
{
  return specialized Array._endMutation()(a1, a2);
}

uint64_t sub_67BC4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *(void *)(v11 + 216) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(a11, v11 + 224, a10, v12);
}

uint64_t sub_67BD8()
{
  v0[69] = v1;
  return sub_67450(v0[45], v0[43]);
}

uint64_t sub_67BF0()
{
  return sub_67498(*(void *)(v0 + 344), *(void *)(v0 + 272));
}

uint64_t sub_67C04(uint64_t a1, uint64_t a2)
{
  *uint64_t v2 = a1;
  v2[1] = a2;
  return swift_storeEnumTagMultiPayload(v2, v3, 5LL);
}

  ;
}

uint64_t sub_67C30()
{
  return swift_slowAlloc(32LL, -1LL);
}

uint64_t sub_67C40()
{
  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v1, 1LL, v0);
}

uint64_t sub_67C60(uint64_t a1, uint64_t a2)
{
  return KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(a1, a2, v2, a1);
}

uint64_t sub_67C78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  return sub_68DC4(v5, v4, (uint64_t *)va);
}

  ;
}

uint64_t sub_67C9C(uint64_t a1, uint64_t a2)
{
  return KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(a1, a2, *(void *)(v2 - 104), a1);
}

  ;
}

uint64_t sub_67CCC()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 216) + 8LL))(v1, v0);
}

void sub_67CE0(uint64_t a1)
{
}

uint64_t sub_67CE8(void *a1)
{
  *a1 = v2;
  a1[1] = v1;
  return *(void *)(v2 + 224);
}

uint64_t sub_67CF8(void *a1)
{
  *a1 = v2;
  a1[1] = v1;
  return *(void *)(v2 + 224);
}

uint64_t sub_67D08()
{
  return type metadata accessor for Logger(0LL);
}

void sub_67D14()
{
}

uint64_t sub_67D20(uint64_t a1)
{
  return sub_1EFA0(v1, a1);
}

void *sub_67D2C(uint64_t a1)
{
  *(void *)(v2 + 8sub_423C(v0 + 8) = a1;
  return sub_A800(v1);
}

uint64_t sub_67D38()
{
  return Error.localizedDescription.getter(*(void *)(v0 + 144), *(void *)(v0 + 152));
}

uint64_t sub_67D44(uint64_t result)
{
  *(void *)(v1 + 200) = result;
  *(void *)(v1 + 80) = v2;
  return result;
}

uint64_t sub_67D54()
{
  return swift_unknownObjectRelease(v0);
}

  ;
}

uint64_t sub_67D74()
{
  return swift_task_dealloc(*(void *)(v0 + 360));
}

void sub_67D90()
{
}

uint64_t sub_67D98()
{
  return swift_task_alloc(v0);
}

uint64_t sub_67DA0(uint64_t result)
{
  *(void *)(v1 + 584) = result;
  return result;
}

uint64_t sub_67DAC(uint64_t result)
{
  *(void *)(v1 + 56sub_423C(v0 + 8) = result;
  return result;
}

uint64_t sub_67DB8(uint64_t result)
{
  *(void *)(v1 + 20sub_423C(v0 + 8) = result;
  return result;
}

  ;
}

uint64_t sub_67DD0()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 208) + 8LL))(v1, v0);
}

uint64_t sub_67DE4@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v2, v1);
}

void sub_67DF0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v9 + 576) = a9;
}

void sub_67DFC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v9 + 560) = a9;
}

uint64_t sub_67E08(__n128 *a1, uint64_t a2, __n128 a3)
{
  a1[1] = a3;
  a1[2].n128_u64[0] = v3;
  return specialized Array._endMutation()(a1, a2);
}

void sub_67E1C()
{
  *(_BYTE *)(v0 + 624) = 0;
  *(void *)(v0 + 59sub_423C(v0 + 2) = v1;
}

void sub_67E28(uint64_t a1, uint64_t *a2)
{
}

uint64_t sub_67E30()
{
  return swift_errorRelease(*(void *)(v0 + 592));
}

unint64_t sub_67E3C()
{
  *(_BYTE *)(v0 - sub_67C60((uint64_t)&type metadata for UnsupportedDialogFlow.Reason.SkipNotSupportedCodingKeys, v2 - 65) = 4;
  return sub_67228();
}

unint64_t sub_67E48()
{
  *(_BYTE *)(v0 - 66) = 3;
  return sub_67264();
}

unint64_t sub_67E54()
{
  *(_BYTE *)(v0 - 6sub_423C(v0 + 7) = 2;
  return sub_672A0();
}

uint64_t sub_67E60@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

unint64_t sub_67E6C()
{
  *(_BYTE *)(v0 - 6sub_423C(v0 + 8) = 1;
  return sub_672DC();
}

uint64_t sub_67E78(uint64_t a1)
{
  *(void *)(v2 + 20sub_423C(v0 + 8) = a1;
  *(void *)(v2 + 216) = v1;
  sub_38360();
  return swift_task_switch(v3, v4, v5);
}

void sub_67E94()
{
  if (qword_9F820 != -1) {
    swift_once(&qword_9F820, sub_17ADC);
  }
  uint64_t v1 = v0[27];
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v3 = (os_log_s *)sub_4870(v2, (uint64_t)qword_A3EB0);
  v0[28] = v3;
  uint64_t v4 = swift_retain_n(v1, 2LL);
  uint64_t v5 = v3;
  Logger.logObject.getter(v4);
  os_log_type_t v6 = sub_A9E8();
  BOOL v7 = os_log_type_enabled(v3, v6);
  uint64_t v8 = v0[27];
  if (v7)
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v10 = swift_slowAlloc(32LL, -1LL);
    uint64_t v14 = v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    uint64_t v11 = sub_1EA70(*(_BYTE *)(v8 + 16));
    unint64_t v13 = v12;
    v0[25] = sub_68DC4(v11, v12, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 25, v0 + 26, v9 + 4, v9 + 12);
    swift_bridgeObjectRelease(v13);
    sub_696E4();
    _os_log_impl(&dword_0, v5, v6, "#UnsupportedFlowOutputFactory makeUnsupportedOutput for reason=%s", v9, 0xCu);
    sub_4BB7C((uint64_t)&type metadata for Any);
    sub_48D4(v10);
    sub_48D4((uint64_t)v9);
  }

  else
  {
    sub_696E4();
  }

  __asm { BR              X11 }

uint64_t sub_68190()
{
  void v3[2] = v1;
  v3[3] = v2;
  v3[4] = v0;
  sub_38318(v3[29]);
  if (v0) {
    return sub_6698(*(uint64_t (**)(void))(v1 + 8));
  }
  sub_38360();
  return sub_382EC(v5, v6, v7);
}

#error "68248: call analysis failed (funcsize=72)"
uint64_t sub_6830C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  sub_3837C();
  void v3[5] = v1;
  v3[6] = v2;
  v3[7] = v0;
  sub_38318(v3[30]);
  if (v0) {
    return sub_6698(*(uint64_t (**)(void))(v1 + 8));
  }
  sub_38360();
  return sub_382EC(v5, v6, v7);
}

#error "683C4: call analysis failed (funcsize=72)"
uint64_t sub_68488()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  sub_3837C();
  v3[8] = v1;
  void v3[9] = v2;
  v3[10] = v0;
  sub_38318(v3[31]);
  if (v0) {
    return sub_6698(*(uint64_t (**)(void))(v1 + 8));
  }
  sub_38360();
  return sub_382EC(v5, v6, v7);
}

#error "68540: call analysis failed (funcsize=72)"
uint64_t sub_68604()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  sub_3837C();
  v3[11] = v1;
  v3[12] = v2;
  v3[13] = v0;
  sub_38318(v3[32]);
  if (v0) {
    return sub_6698(*(uint64_t (**)(void))(v1 + 8));
  }
  sub_38360();
  return sub_382EC(v5, v6, v7);
}

#error "686BC: call analysis failed (funcsize=72)"
uint64_t sub_68780()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  sub_3837C();
  v3[14] = v1;
  v3[15] = v2;
  v3[16] = v0;
  sub_38318(v3[33]);
  if (v0) {
    return sub_6698(*(uint64_t (**)(void))(v1 + 8));
  }
  sub_38360();
  return sub_382EC(v5, v6, v7);
}

#error "68838: call analysis failed (funcsize=72)"
uint64_t sub_688FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  sub_3837C();
  v3[17] = v1;
  v3[18] = v2;
  v3[19] = v0;
  sub_38318(v3[34]);
  if (v0) {
    return sub_6698(*(uint64_t (**)(void))(v1 + 8));
  }
  sub_38360();
  return sub_382EC(v5, v6, v7);
}

#error "689B4: call analysis failed (funcsize=72)"
uint64_t sub_68A78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  sub_3837C();
  v3[20] = v1;
  v3[21] = v2;
  v3[22] = v0;
  sub_38318(v3[35]);
  if (v0) {
    return sub_6698(*(uint64_t (**)(void))(v1 + 8));
  }
  sub_38360();
  return sub_382EC(v5, v6, v7);
}

#error "68B30: call analysis failed (funcsize=72)"
uint64_t sub_68BF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  sub_3837C();
  uint64_t v1 = *(void *)(v0 + 296);
  sub_38318(*(void *)(v0 + 304));
  swift_bridgeObjectRelease(v1);
  sub_38360();
  return sub_382EC(v2, v3, v4);
}

uint64_t sub_68C30()
{
  swift_release(*(void *)(v0 + 184));
  return sub_6698(*(uint64_t (**)(void))(v0 + 8));
}

void sub_68C64()
{
  uint64_t v1 = (char *)v0
     + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin28UnsupportedFlowOutputFactory_completionOutputManifest;
  uint64_t v2 = type metadata accessor for OutputGenerationManifest(0LL);
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8LL))(v1, v2);
  sub_AA5C();
}

uint64_t sub_68CCC()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_68CF0()
{
  return type metadata accessor for UnsupportedFlowOutputFactory(0LL);
}

uint64_t type metadata accessor for UnsupportedFlowOutputFactory(uint64_t a1)
{
  uint64_t result = qword_A3C70;
  if (!qword_A3C70) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for UnsupportedFlowOutputFactory);
  }
  return result;
}

uint64_t sub_68D30(uint64_t a1)
{
  v4[0] = &unk_756F0;
  v4[1] = &unk_75708;
  void v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  void v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  void v4[4] = (char *)&value witness table for Builtin.NativeObject + 64;
  void v4[5] = (char *)&value witness table for Builtin.NativeObject + 64;
  uint64_t result = type metadata accessor for OutputGenerationManifest(319LL);
  if (v3 <= 0x3F)
  {
    void v4[6] = *(void *)(result - 8) + 64LL;
    uint64_t result = swift_updateClassMetadata2(a1, 256LL, 7LL, v4, a1 + 80);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_68DC4(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v9 = sub_68E90(v6, v7, v8, 1, a1, a2);
  uint64_t v10 = v15[0];
  if (v9)
  {
    uint64_t v11 = v9;
    uint64_t ObjectType = (void *)swift_getObjectType();
    v15[0] = v11;
    uint64_t v12 = *a3;
    if (*a3)
    {
      sub_FC5C((uint64_t)v15, *a3);
      *a3 = v12 + 32;
    }
  }

  else
  {
    uint64_t ObjectType = &type metadata for _StringGuts;
    v15[0] = a1;
    v15[1] = a2;
    uint64_t v13 = *a3;
    if (*a3)
    {
      sub_FC5C((uint64_t)v15, *a3);
      *a3 = v13 + 32;
    }

    swift_bridgeObjectRetain(a2);
  }

  sub_423C(v15);
  return v10;
}

void *sub_68E90(void *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000LL) != 0)
  {
    if ((a4 & 1) == 0 && __dst && a3 - (uint64_t)__dst > (uint64_t)(HIBYTE(a6) & 0xF))
    {
      __src[0] = a5;
      __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
      sub_68FE4((char *)__src, HIBYTE(a6) & 0xF, __dst);
      UnsafeMutableRawBufferPointer.subscript.setter(0LL, HIBYTE(a6) & 0xF, __dst, a3);
      uint64_t result = 0LL;
      *a1 = __dst;
      return result;
    }

    goto LABEL_11;
  }

  if ((a6 & 0x1000000000000000LL) != 0)
  {
LABEL_11:
    uint64_t result = sub_690A8(a5, a6);
    *a1 = v12;
    return result;
  }

  if ((a5 & 0x1000000000000000LL) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }

  else
  {
    uint64_t v8 = _StringObject.sharedUTF8.getter(a5, a6);
    if (!v8)
    {
      uint64_t result = (void *)_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Unexpectedly found nil while unwrapping an Optional value",  57LL,  2LL,  "Swift/StringTesting.swift",  25LL,  2,  151LL,  0);
      __break(1u);
      return result;
    }
  }

  *a1 = v8;
  if ((a6 & 0x8000000000000000LL) != 0) {
    return 0LL;
  }
  else {
    return (void *)swift_unknownObjectRetain(a6 & 0xFFFFFFFFFFFFFFFLL);
  }
}

void *sub_68FE4(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000LL) != 0)
  {
    uint64_t result = (void *)_fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutableRawPointer.initializeMemory with negative count",  60LL,  2LL,  "Swift/UnsafeRawPointer.swift",  28LL,  2,  1170LL,  0);
  }

  else
  {
    if (&__dst[__n] <= __src || &__src[__n] <= __dst) {
      return memcpy(__dst, __src, __n);
    }
    uint64_t result = (void *)_fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutableRawPointer.initializeMemory overlapping range",  58LL,  2LL,  "Swift/UnsafeRawPointer.swift",  28LL,  2,  1173LL,  0);
  }

  __break(1u);
  return result;
}

void *sub_690A8(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_6913C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0) {
    uint64_t v2 = sub_69360(0LL, v2[2] + 1LL, 1, (uint64_t)v2);
  }
  unint64_t v4 = v2[2];
  unint64_t v3 = v2[3];
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_69360((char *)(v3 > 1), v4 + 1, 1, (uint64_t)v2);
  }
  void v2[2] = v4 + 1;
  *((_BYTE *)v2 + v4 + 3sub_423C(v0 + 2) = 0;
  return v2;
}

void *sub_6913C(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000LL) != 0)
  {
    Swift::Int v4 = String.UTF8View._foreignCount()();
    if (v4) {
      goto LABEL_6;
    }
    return &_swiftEmptyArrayStorage;
  }

  if ((a2 & 0x2000000000000000LL) != 0) {
    Swift::Int v4 = HIBYTE(a2) & 0xF;
  }
  else {
    Swift::Int v4 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v4) {
    return &_swiftEmptyArrayStorage;
  }
LABEL_6:
  sub_692AC(v4, 0LL);
  if (v4 < 0)
  {
    _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutableBufferPointer with negative count",  46LL,  2LL,  "Swift/UnsafeBufferPointer.swift",  31LL,  2,  71LL,  0);
    __break(1u);
    goto LABEL_14;
  }

  uint64_t v6 = v5;
  uint64_t v7 = _StringGuts.copyUTF8(into:)(v5 + 32, v4, a1, a2);
  if ((v8 & 1) != 0)
  {
LABEL_14:
    LOBYTE(v10) = 2;
    uint64_t result = (void *)_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Insufficient space allocated to copy string contents",  52LL,  2LL,  "Swift/StringUTF8View.swift",  26LL,  v10,  430LL,  0);
    goto LABEL_15;
  }

  if (v7 == v4) {
    return (void *)v6;
  }
  uint64_t result = (void *)_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "invalid Collection: less than 'count' elements in collection",  60LL,  2LL,  "Swift/ContiguousArrayBuffer.swift",  33LL,  2,  1122LL,  0);
LABEL_15:
  __break(1u);
  return result;
}

void sub_692AC(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (v2)
  {
    uint64_t v4 = sub_41BC(&qword_A3D38);
    uint64_t v5 = (void *)swift_allocObject(v4, v2 + 32, 7LL);
    size_t v6 = j__malloc_size(v5);
    uint64_t v5[2] = a1;
    v5[3] = 2 * v6 - 64;
  }

  sub_AA5C();
}

void sub_6930C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5 = a1 >> 16;
  if ((a3 & 0x1000000000000000LL) == 0 || (a2 & 0x800000000000000LL) != 0)
  {
    uint64_t v7 = String.UTF16View.index(_:offsetBy:)(15LL, v5, a2);
    sub_696CC(v7);
  }

  else
  {
    uint64_t v6 = String.UTF8View._foreignIndex(_:offsetBy:)(15LL, v5);
    sub_696CC(v6);
  }

  sub_AA5C();
}

char *sub_69360(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  int64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    int64_t v9 = *(void *)(a4 + 16);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    uint64_t v10 = sub_41BC(&qword_A3D38);
    uint64_t v11 = (char *)swift_allocObject(v10, v9 + 32, 7LL);
    size_t v12 = j__malloc_size(v11);
    *((void *)v11 + sub_423C(v0 + 2) = v8;
    *((void *)v11 + sub_423C(v0 + 3) = 2 * v12 - 64;
  }

  else
  {
    uint64_t v11 = (char *)&_swiftEmptyArrayStorage;
  }

  uint64_t v13 = v11 + 32;
  uint64_t v14 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_694F8(v14, v8, v13);
    *(void *)(a4 + 16) = 0LL;
  }

  else
  {
    sub_69434(v14, v8, v13);
  }

  swift_bridgeObjectRelease(a4);
  return v11;
}

void *sub_69434(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000LL) != 0)
  {
    uint64_t result = (void *)_fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize with negative count",  51LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1090LL,  0);
  }

  else
  {
    if (&__dst[__n] <= __src || &__src[__n] <= __dst) {
      return memcpy(__dst, __src, __n);
    }
    uint64_t result = (void *)_fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
  }

  __break(1u);
  return result;
}

char *sub_694F8(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000LL) != 0)
  {
    char v4 = 2;
    __src = (char *)_fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.moveInitialize with negative count",  55LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  v4,  1046LL,  0);
    __break(1u);
  }

  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }

  return __src;
}

uint64_t sub_69578()
{
  return ((uint64_t (*)(void))dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:))();
}

uint64_t sub_69594( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  *(void *)(v10 + 19sub_423C(v0 + 2) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(v10 + 192, v10 + 200, a10, v11);
}

uint64_t sub_695B0(__n128 *a1, uint64_t a2, __n128 a3)
{
  a1[1] = a3;
  a1[2].n128_u64[0] = v3;
  return specialized Array._endMutation()(a1, a2);
}

  ;
}

uint64_t sub_695DC(uint64_t a1, uint64_t a2, ...)
{
  return sub_68DC4(v3, v2, (uint64_t *)va);
}

uint64_t sub_695EC(uint64_t a1)
{
  return swift_allocObject(a1, *(unsigned int *)(a1 + 48), *(unsigned __int16 *)(a1 + 52));
}

uint64_t sub_695FC()
{
  return swift_slowAlloc(12LL, -1LL);
}

void sub_6960C(float a1)
{
  float *v1 = a1;
}

  ;
}

  ;
}

void sub_69658()
{
}

id sub_69664@<X0>(void *a1@<X8>)
{
  *(void *)(v1 + 28sub_423C(v0 + 8) = a1;
  return a1;
}

uint64_t sub_69670()
{
  return type metadata accessor for ResponseFactory(0LL);
}

uint64_t sub_6967C(uint64_t a1)
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
}

uint64_t sub_69684()
{
  return Logger.logObject.getter();
}

id sub_6968C(uint64_t a1, const char *a2)
{
  return [v2 a2];
}

uint64_t sub_69694()
{
  return swift_task_alloc(v0);
}

uint64_t sub_6969C(void *a1)
{
  *a1 = v2;
  a1[1] = v1;
  return *(void *)(v2 + 208);
}

uint64_t sub_696A8(uint64_t result)
{
  *(void *)(v1 + 304) = result;
  return result;
}

void sub_696B4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *(void *)(v11 + 296) = a11;
}

uint64_t sub_696C0(uint64_t result)
{
  *(void *)(v1 + 184) = result;
  return result;
}

unint64_t sub_696CC(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFFFFCLL | v1 & 3;
}

uint64_t sub_696E4()
{
  return swift_release_n(v0, 2LL);
}

uint64_t storeEnumTagSinglePayload for UserNotificationType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(sub_46B2C(*(void *)(v1 + 288), v4) = 1;
  }
  else {
    LODWORD(sub_46B2C(*(void *)(v1 + 288), v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_6973C + 4 * byte_75725[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_69770 + 4 * byte_75720[v4]))();
}

uint64_t sub_69770(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_69778(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x69780LL);
  }
  return result;
}

uint64_t sub_6978C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x69794LL);
  }
  *(_BYTE *)uint64_t result = a2 + 1;
  return result;
}

uint64_t sub_69798(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_697A0(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UserNotificationType()
{
  return &type metadata for UserNotificationType;
}

unint64_t sub_697C0()
{
  unint64_t result = qword_A3D50;
  if (!qword_A3D50)
  {
    unint64_t result = swift_getWitnessTable(&unk_75784, &type metadata for UserNotificationType);
    atomic_store(result, (unint64_t *)&qword_A3D50);
  }

  return result;
}

uint64_t sub_697FC(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_940D0, v2);
  swift_bridgeObjectRelease(object);
  if (v3 == 1) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = 2;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0LL;
  }
}

uint64_t sub_6984C(char a1)
{
  if ((a1 & 1) != 0) {
    return 0x79726576696C6564LL;
  }
  else {
    return 0x65636E756F6E6E61LL;
  }
}

void sub_69898(char *a1, unsigned __int8 *a2)
{
}

void sub_698A4()
{
}

uint64_t sub_698AC(uint64_t a1)
{
  return sub_1E3E0(a1, *v1);
}

void sub_698B4(uint64_t a1)
{
}

uint64_t sub_698BC@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result = sub_697FC(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_698E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_6984C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_69910(void *a1@<X8>)
{
  *a1 = &off_94120;
}

uint64_t sub_69920()
{
  uint64_t v0 = qword_A3D40;
  swift_bridgeObjectRetain(off_A3D48);
  return v0;
}

uint64_t sub_69954(uint64_t a1)
{
  unint64_t v2 = sub_69C6C();
  return static AppEnumRepresentation.lnValueType.getter(a1, v2);
}

uint64_t sub_6997C(uint64_t a1)
{
  unint64_t v2 = sub_69C6C();
  return AppEnumRepresentation.lnValue.getter(a1, v2);
}

uint64_t sub_699A4(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_69B28();
  return static IntentValueTypeIdentifiable.canConvert(_:)(a1, a2, v4);
}

uint64_t sub_699DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_69C6C();
  return static AppEnumRepresentation.from(_:context:)(a1, a2, a3, v6);
}

uint64_t sub_69A2C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_69B28();
  return static IntentValueTypeIdentifiable.canConvertFrom(_:)(a1, a2, v4);
}

unint64_t sub_69A68()
{
  unint64_t result = qword_A3D58;
  if (!qword_A3D58)
  {
    unint64_t result = swift_getWitnessTable(&unk_757C4, &type metadata for UserNotificationType);
    atomic_store(result, (unint64_t *)&qword_A3D58);
  }

  return result;
}

unint64_t sub_69AA8()
{
  unint64_t result = qword_A3D60;
  if (!qword_A3D60)
  {
    unint64_t result = swift_getWitnessTable(&unk_75754, &type metadata for UserNotificationType);
    atomic_store(result, (unint64_t *)&qword_A3D60);
  }

  return result;
}

unint64_t sub_69AE8()
{
  unint64_t result = qword_A3D68;
  if (!qword_A3D68)
  {
    unint64_t result = swift_getWitnessTable(&unk_75810, &type metadata for UserNotificationType);
    atomic_store(result, (unint64_t *)&qword_A3D68);
  }

  return result;
}

unint64_t sub_69B28()
{
  unint64_t result = qword_A3D70;
  if (!qword_A3D70)
  {
    unint64_t result = swift_getWitnessTable(&unk_757E0, &type metadata for UserNotificationType);
    atomic_store(result, (unint64_t *)&qword_A3D70);
  }

  return result;
}

unint64_t sub_69B68()
{
  unint64_t result = qword_A3D78;
  if (!qword_A3D78)
  {
    unint64_t result = swift_getWitnessTable(&unk_75888, &type metadata for UserNotificationType);
    atomic_store(result, (unint64_t *)&qword_A3D78);
  }

  return result;
}

unint64_t sub_69BA8()
{
  unint64_t result = qword_A3D80;
  if (!qword_A3D80)
  {
    unint64_t result = swift_getWitnessTable(&unk_758C0, &type metadata for UserNotificationType);
    atomic_store(result, (unint64_t *)&qword_A3D80);
  }

  return result;
}

unint64_t sub_69BE8()
{
  unint64_t result = qword_A3D88;
  if (!qword_A3D88)
  {
    uint64_t v1 = sub_8564(&qword_A3D90);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_A3D88);
  }

  return result;
}

unint64_t sub_69C30()
{
  unint64_t result = qword_A3D98;
  if (!qword_A3D98)
  {
    unint64_t result = swift_getWitnessTable(&unk_75938, &type metadata for UserNotificationType);
    atomic_store(result, (unint64_t *)&qword_A3D98);
  }

  return result;
}

unint64_t sub_69C6C()
{
  unint64_t result = qword_A3DA0;
  if (!qword_A3DA0)
  {
    unint64_t result = swift_getWitnessTable(&unk_75838, &type metadata for UserNotificationType);
    atomic_store(result, (unint64_t *)&qword_A3DA0);
  }

  return result;
}

char *sub_69CA8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_41BC(&qword_A3DB0);
  __chkstk_darwin(v4);
  unint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for UsoEntitySpan(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v24 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v22 = (char *)&v21 - v11;
  uint64_t v23 = *(void *)(a1 + 16);
  if (v23)
  {
    swift_bridgeObjectRetain(a1);
    uint64_t v12 = 0LL;
    uint64_t v13 = (char *)_swiftEmptyArrayStorage;
    uint64_t v21 = a1;
    while (1)
    {
      uint64_t v14 = *(void *)(a1 + 8 * v12 + 32);
      uint64_t v25 = v14;
      swift_bridgeObjectRetain_n(v14, 2LL);
      sub_6B680((uint64_t (*)(char *, unint64_t))sub_6AE04, 0LL);
      if (v2) {
        break;
      }
      uint64_t v2 = 0LL;
      uint64_t v15 = v25;
      sub_6A918(v25, (uint64_t)v6);
      swift_bridgeObjectRelease(v14);
      swift_release(v15);
      if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0((uint64_t)v6, 1LL, v7) == 1)
      {
        sub_5F64((uint64_t)v6, &qword_A3DB0);
      }

      else
      {
        uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
        id v17 = v22;
        v16(v22, v6, v7);
        v16(v24, v17, v7);
        if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) == 0) {
          uint64_t v13 = (char *)sub_5D650(0, *((void *)v13 + 2) + 1LL, 1, (uint64_t)v13);
        }
        unint64_t v19 = *((void *)v13 + 2);
        unint64_t v18 = *((void *)v13 + 3);
        if (v19 >= v18 >> 1) {
          uint64_t v13 = (char *)sub_5D650(v18 > 1, v19 + 1, 1, (uint64_t)v13);
        }
        *((void *)v13 + sub_423C(v0 + 2) = v19 + 1;
        v16( &v13[((*(unsigned __int8 *)(v8 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))
             + *(void *)(v8 + 72) * v19],
          v24,
          v7);
        a1 = v21;
      }

      if (v23 == ++v12)
      {
        swift_bridgeObjectRelease(a1);
        return v13;
      }
    }

    unint64_t result = (char *)swift_release(v25);
    __break(1u);
  }

  else
  {
    return (char *)_swiftEmptyArrayStorage;
  }

  return result;
}

uint64_t sub_69F18()
{
  uint64_t v0 = type metadata accessor for IdentifierNamespace(0LL);
  uint64_t v124 = *(void *)(v0 - 8);
  uint64_t v125 = v0;
  sub_1736C();
  __chkstk_darwin(v1);
  sub_6314();
  uint64_t v115 = v2;
  sub_62D0();
  __chkstk_darwin(v3);
  uint64_t v121 = (char *)&v109 - v4;
  uint64_t v126 = type metadata accessor for SpanProperty(0LL);
  uint64_t v123 = *(void *)(v126 - 8);
  sub_1736C();
  __chkstk_darwin(v5);
  sub_6314();
  uint64_t v117 = v6;
  sub_62D0();
  __chkstk_darwin(v7);
  uint64_t v122 = (uint64_t)&v109 - v8;
  sub_41BC(&qword_A3DA8);
  sub_1736C();
  __chkstk_darwin(v9);
  sub_6314();
  uint64_t v111 = v10;
  sub_62D0();
  __chkstk_darwin(v11);
  uint64_t v112 = (uint64_t)&v109 - v12;
  uint64_t v13 = type metadata accessor for UsoEntitySpan(0LL);
  uint64_t v120 = *(void *)(v13 - 8);
  sub_1736C();
  __chkstk_darwin(v14);
  uint64_t v116 = (char *)&v109 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_41BC(&qword_A3DB0);
  sub_1736C();
  __chkstk_darwin(v16);
  sub_6314();
  uint64_t v119 = v17;
  sub_62D0();
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v109 - v20;
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v24 = (char *)&v109 - v23;
  uint64_t v25 = CodeGenBase.entity.getter(v22);
  uint64_t v26 = UsoEntity.attributes.getter();
  swift_release(v25);
  if (qword_9F880 != -1) {
    swift_once(&qword_9F880, sub_2DF74);
  }
  uint64_t v27 = qword_A3F70;
  uint64_t v28 = *(void *)algn_A3F78;
  swift_bridgeObjectRetain(*(void *)algn_A3F78);
  sub_493E4(v27, v28, v26);
  uint64_t v30 = v29;
  swift_bridgeObjectRelease(v28);
  swift_bridgeObjectRelease(v26);
  if (!v30)
  {
    if (qword_9F820 == -1)
    {
LABEL_17:
      uint64_t v38 = type metadata accessor for Logger(0LL);
      uint64_t v39 = sub_4870(v38, (uint64_t)qword_A3EB0);
      uint64_t v40 = (os_log_s *)Logger.logObject.getter(v39);
      os_log_type_t v41 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v40, v41))
      {
        uint64_t v42 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v43 = swift_slowAlloc(32LL, -1LL);
        v128[0] = v43;
        *(_DWORD *)uint64_t v42 = 136315138;
        uint64_t v44 = qword_A3F70;
        unint64_t v45 = *(void *)algn_A3F78;
        swift_bridgeObjectRetain(*(void *)algn_A3F78);
        uint64_t v127 = sub_68DC4(v44, v45, v128);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v127, v128, v42 + 4, v42 + 12);
        sub_1CC58();
        _os_log_impl( &dword_0,  v40,  v41,  "#UsoEntity_common_UserEntity+SiriHomeCommunication no entity spans for attribute %s.",  v42,  0xCu);
        swift_arrayDestroy(v43, 1LL, (char *)&type metadata for Any + 8);
        sub_48D4(v43);
        sub_48D4((uint64_t)v42);
      }

      return 0LL;
    }

uint64_t sub_6A8A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return swift_release(a1);
}

uint64_t sub_6A918@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for UsoEntitySpan(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    uint64_t v46 = a1;
    uint64_t v47 = a2;
    unint64_t v9 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v10 = *(void *)(v5 + 72);
    uint64_t v11 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain(a1);
    while (1)
    {
      v11(v7, v9, v4);
      sub_6CC14();
      if (v12 != 2) {
        break;
      }
      uint64_t v13 = v5;
      uint64_t v14 = sub_6CE08();
      if (v15)
      {
        uint64_t v16 = v14;
        unint64_t v17 = v15;
        sub_6D09C();
        if (v18 != 2)
        {
          char v31 = v18;
          swift_bridgeObjectRelease(v46);
          if ((v31 & 1) != 0) {
            unint64_t v32 = 0xD000000000000012LL;
          }
          else {
            unint64_t v32 = 0xD00000000000001BLL;
          }
          if ((v31 & 1) != 0) {
            unint64_t v33 = 0x8000000000075980LL;
          }
          else {
            unint64_t v33 = 0x8000000000075960LL;
          }
          if (qword_9F820 != -1) {
            swift_once(&qword_9F820, sub_17ADC);
          }
          uint64_t v34 = type metadata accessor for Logger(0LL);
          sub_4870(v34, (uint64_t)qword_A3EB0);
          swift_bridgeObjectRetain(v17);
          uint64_t v35 = swift_bridgeObjectRetain(v33);
          unint64_t v36 = (os_log_s *)Logger.logObject.getter(v35);
          os_log_type_t v37 = static os_log_type_t.debug.getter();
          int v38 = v37;
          BOOL v39 = os_log_type_enabled(v36, v37);
          a2 = v47;
          if (v39)
          {
            uint64_t v40 = swift_slowAlloc(22LL, -1LL);
            int v45 = v38;
            uint64_t v41 = v40;
            uint64_t v46 = swift_slowAlloc(64LL, -1LL);
            uint64_t v49 = v46;
            *(_DWORD *)uint64_t v41 = 136315394;
            unint64_t v44 = v32;
            swift_bridgeObjectRetain(v17);
            uint64_t v48 = sub_68DC4(v16, v17, &v49);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, &v49, v41 + 4, v41 + 12);
            swift_bridgeObjectRelease_n(v17, 3LL);
            *(_WORD *)(v41 + sub_423C(v0 + 12) = 2080;
            swift_bridgeObjectRetain(v33);
            uint64_t v48 = sub_68DC4(v44, v33, &v49);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, &v49, v41 + 14, v41 + 22);
            swift_bridgeObjectRelease_n(v33, 3LL);
            _os_log_impl( &dword_0,  v36,  (os_log_type_t)v45,  "#UsoEntity_common_UserEntity+SiriHomeCommunication Selected node name=%s, type=%s.",  (uint8_t *)v41,  0x16u);
            uint64_t v42 = v46;
            swift_arrayDestroy(v46, 2LL, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v42, -1LL, -1LL);
            swift_slowDealloc(v41, -1LL, -1LL);
          }

          else
          {

            swift_bridgeObjectRelease_n(v33, 2LL);
            swift_bridgeObjectRelease_n(v17, 2LL);
          }

          (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(a2, v7, v4);
          goto LABEL_32;
        }

        uint64_t v5 = v13;
        (*(void (**)(char *, uint64_t))(v13 + 8))(v7, v4);
        swift_bridgeObjectRelease(v17);
      }

      else
      {
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      }

      v9 += v10;
      if (!--v8)
      {
        swift_bridgeObjectRelease(v46);
        a2 = v47;
        goto LABEL_10;
      }
    }

    swift_bridgeObjectRelease(v46);
    if (qword_9F820 != -1) {
      swift_once(&qword_9F820, sub_17ADC);
    }
    uint64_t v25 = type metadata accessor for Logger(0LL);
    uint64_t v26 = sub_4870(v25, (uint64_t)qword_A3EB0);
    uint64_t v27 = (os_log_s *)Logger.logObject.getter(v26);
    os_log_type_t v28 = static os_log_type_t.debug.getter();
    BOOL v29 = os_log_type_enabled(v27, v28);
    a2 = v47;
    if (v29)
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v30 = 0;
      _os_log_impl( &dword_0,  v27,  v28,  "#UsoEntity_common_UserEntity+SiriHomeCommunication selecting span for house or room hint.",  v30,  2u);
      swift_slowDealloc(v30, -1LL, -1LL);
    }

    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v7, v4);
LABEL_32:
    uint64_t v24 = 0LL;
  }

  else
  {
LABEL_10:
    if (qword_9F820 != -1) {
      swift_once(&qword_9F820, sub_17ADC);
    }
    uint64_t v19 = type metadata accessor for Logger(0LL);
    uint64_t v20 = sub_4870(v19, (uint64_t)qword_A3EB0);
    uint64_t v21 = (os_log_s *)Logger.logObject.getter(v20);
    os_log_type_t v22 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl( &dword_0,  v21,  v22,  "#UsoEntity_common_UserEntity+SiriHomeCommunication no UsoEntitySpan correspond to a HomeAutomationTargetNode.",  v23,  2u);
      swift_slowDealloc(v23, -1LL, -1LL);
    }

    uint64_t v24 = 1LL;
  }

  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(a2, v24, 1LL, v4);
}

BOOL sub_6AE04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_41BC(&qword_A3DC0);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v83 = (char *)&v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  uint64_t v84 = (char *)&v82 - v7;
  uint64_t v8 = type metadata accessor for UsoEntitySpan(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v85 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v86 = (char *)&v82 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v87 = (char *)&v82 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v88 = (char *)&v82 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v92 = (char *)&v82 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v91 = (char *)&v82 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v90 = (char *)&v82 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v89 = (char *)&v82 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  os_log_type_t v28 = (char *)&v82 - v27;
  uint64_t v29 = __chkstk_darwin(v26);
  char v31 = (char *)&v82 - v30;
  uint64_t v32 = __chkstk_darwin(v29);
  uint64_t v34 = (char *)&v82 - v33;
  __chkstk_darwin(v32);
  unint64_t v36 = (char *)&v82 - v35;
  uint64_t v37 = a1;
  LOBYTE(a1) = sub_6D2F0();
  int v38 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  uint64_t v93 = a2;
  v38(v36, a2, v8);
  if ((a1 & 1) != 0) {
    char v39 = sub_6D2F0();
  }
  else {
    char v39 = 0;
  }
  uint64_t v40 = *(void (**)(char *, uint64_t))(v9 + 8);
  v40(v36, v8);
  v38(v34, v37, v8);
  if ((v39 & 1) == 0)
  {
    v40(v34, v8);
    uint64_t v42 = v93;
    v38(v31, v93, v8);
    goto LABEL_9;
  }

  char v41 = sub_6D3E0();
  v40(v34, v8);
  uint64_t v42 = v93;
  v38(v31, v93, v8);
  if ((v41 & 1) == 0)
  {
LABEL_9:
    v40(v31, v8);
    goto LABEL_10;
  }

  char v43 = sub_6D3E0();
  v40(v31, v8);
  if ((v43 & 1) == 0) {
    return 0LL;
  }
LABEL_10:
  char v44 = sub_6D2F0();
  v38(v28, v42, v8);
  if ((v44 & 1) == 0)
  {
    v40(v28, v8);
    uint64_t v46 = v89;
    v38(v89, v37, v8);
    goto LABEL_16;
  }

  char v45 = sub_6D2F0();
  v40(v28, v8);
  uint64_t v46 = v89;
  v38(v89, v37, v8);
  if ((v45 & 1) == 0)
  {
LABEL_16:
    v40(v46, v8);
    uint64_t v48 = v90;
    v38(v90, v42, v8);
    int v50 = v91;
    uint64_t v49 = v92;
    goto LABEL_17;
  }

  char v47 = sub_6D3E0();
  v40(v46, v8);
  uint64_t v48 = v90;
  v38(v90, v42, v8);
  int v50 = v91;
  uint64_t v49 = v92;
  if ((v47 & 1) != 0)
  {
LABEL_17:
    v40(v48, v8);
    goto LABEL_18;
  }

  char v51 = sub_6D3E0();
  v40(v48, v8);
  if ((v51 & 1) != 0) {
    return 1LL;
  }
LABEL_18:
  char v52 = sub_6D2F0();
  v38(v50, v42, v8);
  if ((v52 & 1) != 0)
  {
    char v53 = sub_6D2F0();
    v40(v50, v8);
    if ((v53 & 1) == 0) {
      return 1LL;
    }
  }

  else
  {
    v40(v50, v8);
  }

  char v54 = sub_6D2F0();
  v38(v49, v42, v8);
  if ((v54 & 1) != 0)
  {
    v40(v49, v8);
  }

  else
  {
    char v55 = sub_6D2F0();
    v40(v49, v8);
    if ((v55 & 1) != 0) {
      return 0LL;
    }
  }

  sub_6CC14();
  int v57 = v56;
  uint64_t v58 = v88;
  v38(v88, v42, v8);
  if (v57 == 2)
  {
    v40(v58, v8);
  }

  else
  {
    sub_6CC14();
    int v60 = v59;
    v40(v58, v8);
    if (v60 == 2) {
      return 1LL;
    }
  }

  sub_6CC14();
  int v62 = v61;
  uint64_t v63 = v87;
  v38(v87, v42, v8);
  if (v62 == 2)
  {
    sub_6CC14();
    int v65 = v64;
    v40(v63, v8);
    if (v65 != 2) {
      return 0LL;
    }
  }

  else
  {
    v40(v63, v8);
  }

  char v66 = sub_6D470();
  uint64_t v67 = v86;
  v38(v86, v42, v8);
  if ((v66 & 1) != 0)
  {
    char v68 = sub_6D470();
    v40(v67, v8);
    if ((v68 & 1) == 0) {
      return 1LL;
    }
  }

  else
  {
    v40(v67, v8);
  }

  char v70 = sub_6D470();
  uint64_t v71 = v85;
  v38(v85, v42, v8);
  if ((v70 & 1) == 0)
  {
    char v73 = sub_6D470();
    uint64_t v72 = ((uint64_t (*)(char *, uint64_t))v40)(v71, v8);
    if ((v73 & 1) == 0) {
      goto LABEL_40;
    }
    return 0LL;
  }

  uint64_t v72 = ((uint64_t (*)(char *, uint64_t))v40)(v71, v8);
LABEL_40:
  uint64_t v74 = (uint64_t)v84;
  UsoEntitySpan.matchInfo.getter(v72);
  uint64_t matched = type metadata accessor for MatchInfo(0LL);
  if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v74, 1LL, matched) == 1)
  {
    uint64_t v76 = sub_5F64(v74, &qword_A3DC0);
    float v77 = -1.0;
  }

  else
  {
    uint64_t v78 = MatchInfo.matchScore.getter();
    uint64_t v76 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(matched - 8) + 8LL))(v74, matched);
    if ((v78 & 0x100000000LL) != 0) {
      float v77 = -1.0;
    }
    else {
      float v77 = *(float *)&v78;
    }
  }

  uint64_t v79 = (uint64_t)v83;
  UsoEntitySpan.matchInfo.getter(v76);
  if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v79, 1LL, matched) == 1)
  {
    sub_5F64(v79, &qword_A3DC0);
    float v80 = -1.0;
  }

  else
  {
    uint64_t v81 = MatchInfo.matchScore.getter();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(matched - 8) + 8LL))(v79, matched);
    float v80 = *(float *)&v81;
    if ((v81 & 0x100000000LL) != 0) {
      float v80 = -1.0;
    }
  }

  return v80 <= v77;
}

void *sub_6B4DC(uint64_t a1)
{
  if (a1 < 0)
  {
    unint64_t result = (void *)_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Can't construct Array with count < 0",  36LL,  2LL,  "Swift/Array.swift",  17LL);
    __break(1u);
  }

  else if (a1)
  {
    uint64_t v2 = sub_41BC(&qword_A3348);
    unint64_t result = (void *)static Array._allocateBufferUninitialized(minimumCapacity:)(a1, v2);
    result[2] = a1;
  }

  else
  {
    return &_swiftEmptyArrayStorage;
  }

  return result;
}

uint64_t sub_6B57C(uint64_t a1)
{
  if (a1 < 0)
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Can't construct Array with count < 0",  36LL,  2LL,  "Swift/Array.swift",  17LL,  2,  936LL,  0);
    __break(1u);
  }

  else
  {
    if (a1)
    {
      uint64_t v2 = type metadata accessor for UsoEntitySpan(0LL);
      uint64_t v3 = (void *)static Array._allocateBufferUninitialized(minimumCapacity:)(a1, v2);
      void v3[2] = a1;
    }

    else
    {
      uint64_t v3 = &_swiftEmptyArrayStorage;
    }

    type metadata accessor for UsoEntitySpan(0LL);
    return (uint64_t)v3;
  }

  return result;
}

uint64_t sub_6B638(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_41BC(&qword_A3DB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_6B680(uint64_t (*a1)(char *, unint64_t), uint64_t a2)
{
  size_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native(*v2) & 1) == 0) {
    size_t v5 = sub_6CB98(v5);
  }
  uint64_t result = sub_6B718(a1, a2);
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_6B718(uint64_t (*a1)(char *, unint64_t), uint64_t a2)
{
  uint64_t v167 = a2;
  uint64_t v166 = (uint64_t (*)(char *, char *))a1;
  uint64_t v5 = type metadata accessor for UsoEntitySpan(0LL);
  uint64_t v6 = *(void **)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v155 = (char *)&v142 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v160 = (char *)&v142 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v142 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v142 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v145 = (char *)&v142 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v142 - v20;
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v147 = (char *)&v142 - v23;
  __chkstk_darwin(v22);
  unint64_t v146 = (char *)&v142 - v24;
  v164 = v2;
  Swift::Int v25 = (Swift::Int)v2[1];
  uint64_t result = _minimumMergeRunLength(_:)(v25);
  if (result >= v25)
  {
    if (v25 < 0) {
      goto LABEL_146;
    }
    if (v25) {
      return sub_6C264(0LL, v25, 1LL, v166, v167);
    }
    return result;
  }

  uint64_t v142 = result;
  uint64_t result = sub_6B57C(v25 / 2);
  uint64_t v144 = result;
  unint64_t v162 = v27;
  if (v25 > 0)
  {
    uint64_t v149 = v21;
    uint64_t v153 = v16;
    uint64_t v163 = v5;
    uint64_t v28 = 0LL;
    uint64_t v29 = (char *)_swiftEmptyArrayStorage;
    Swift::Int v30 = v25;
    char v31 = v6;
    uint64_t v165 = v6;
    uint64_t v156 = v13;
    uint64_t v32 = v3;
    Swift::Int v152 = v25;
    while (1)
    {
      uint64_t v33 = (char *)(v28 + 1);
      uint64_t v154 = v29;
      if (v28 + 1 >= v30) {
        goto LABEL_30;
      }
      unint64_t v158 = (char *)v30;
      uint64_t v34 = *v164;
      uint64_t v35 = v31[9];
      int v151 = (char *)(v28 + 1);
      unint64_t v36 = &v34[v35 * (void)v33];
      uint64_t v37 = (char *)v31[2];
      int v38 = v146;
      uint64_t v39 = v163;
      uint64_t v40 = v31;
      ((void (*)(char *, char *, uint64_t))v37)(v146, v36, v163);
      uint64_t v148 = v34;
      uint64_t v159 = v35;
      char v41 = &v34[v35 * v28];
      unint64_t v42 = (unint64_t)v147;
      uint64_t v161 = v37;
      ((void (*)(char *, char *, uint64_t))v37)(v147, v41, v39);
      LODWORD(v15sub_423C(v0 + 7) = v166(v38, (char *)v42);
      if (v32)
      {
        uint64_t v141 = (void (*)(unint64_t, uint64_t))v40[1];
        v141(v42, v39);
        v141((unint64_t)v38, v39);
        __int128 v137 = v154;
LABEL_122:
        uint64_t result = swift_bridgeObjectRelease(v137);
        uint64_t v139 = v152;
        goto LABEL_123;
      }

      uint64_t v4 = v40[1];
      ((void (*)(unint64_t, uint64_t))v4)(v42, v39);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v4)(v38, v39);
      uint64_t v143 = v28;
      uint64_t v33 = (char *)(v28 + 2);
      Swift::Int v30 = (Swift::Int)v158;
      if (v28 + 2 >= (uint64_t)v158)
      {
        char v31 = v165;
      }

      else
      {
        char v43 = v148;
        char v44 = (char *)(v28 + 2);
        uint64_t v150 = v159 * (void)v33;
        int v151 = (char *)(v159 * (void)v151);
        unint64_t v45 = (unint64_t)v145;
        while (1)
        {
          uint64_t v46 = v149;
          uint64_t v47 = v163;
          uint64_t v48 = v161;
          ((void (*)(char *, char *, uint64_t))v161)(v149, &v43[v150], v163);
          ((void (*)(unint64_t, char *, uint64_t))v48)(v45, &v151[(void)v43], v47);
          LODWORD(v4sub_423C(v0 + 8) = v166(v46, (char *)v45);
          ((void (*)(unint64_t, uint64_t))v4)(v45, v47);
          uint64_t result = ((uint64_t (*)(char *, uint64_t))v4)(v46, v47);
          v43 += v159;
          if ((uint64_t)++v44 >= (uint64_t)v158)
          {
            Swift::Int v30 = (Swift::Int)v158;
            uint64_t v33 = v158;
            char v31 = v165;
            uint64_t v13 = v156;
            goto LABEL_13;
          }
        }

        char v31 = v165;
        uint64_t v13 = v156;
        uint64_t v33 = v44;
        Swift::Int v30 = (Swift::Int)v158;
      }

LABEL_13:
      uint64_t v29 = v154;
      uint64_t v28 = v143;
      if ((v157 & 1) != 0)
      {
        uint64_t v49 = v163;
        if (v143 < (uint64_t)v33)
        {
          uint64_t v50 = 0LL;
          uint64_t v4 = v159 * (void)(v33 - 1);
          uint64_t v51 = (void)v33 * v159;
          char v52 = v33;
          char v53 = (char *)v143;
          uint64_t v54 = v143 * v159;
          uint64_t v161 = v52;
          do
          {
            if (v53 != &v52[v50 - 1])
            {
              char v55 = v148;
              if (!v148) {
                goto LABEL_155;
              }
              unint64_t v56 = (unint64_t)&v148[v54];
              int v151 = &v148[v4];
              uint64_t v57 = v163;
              unint64_t v157 = (void (*)(char *, char *, uint64_t, char *))v165[4];
              v157(v155, &v148[v54], v163, v29);
              if (v54 < v4 || v56 >= (unint64_t)&v55[v51])
              {
                unsigned __int8 v59 = &v55[v54];
                int v60 = v151;
                swift_arrayInitWithTakeFrontToBack(v59, v151, 1LL, v57);
              }

              else
              {
                int v60 = v151;
                if (v54 != v4) {
                  swift_arrayInitWithTakeBackToFront(v56);
                }
              }

              uint64_t result = ((uint64_t (*)(char *, char *, uint64_t))v157)(v60, v155, v57);
              uint64_t v29 = v154;
              uint64_t v49 = v57;
              uint64_t v13 = v156;
            }

            ++v53;
            --v50;
            char v52 = v161;
            v4 -= v159;
            v51 -= v159;
            v54 += v159;
          }

          while ((uint64_t)v53 < (uint64_t)&v161[v50]);
          char v31 = v165;
          uint64_t v33 = v161;
          uint64_t v28 = v143;
          Swift::Int v30 = (Swift::Int)v158;
        }
      }

      else
      {
LABEL_30:
        uint64_t v49 = v163;
      }

      if ((uint64_t)v33 < v30)
      {
        if (__OFSUB__(v33, v28)) {
          goto LABEL_148;
        }
        if ((uint64_t)&v33[-v28] < v142)
        {
          if (__OFADD__(v28, v142)) {
            goto LABEL_149;
          }
          if (v28 + v142 >= v30) {
            unsigned __int8 v61 = (char *)v30;
          }
          else {
            unsigned __int8 v61 = (char *)(v28 + v142);
          }
          if ((uint64_t)v61 < v28)
          {
LABEL_150:
            __break(1u);
LABEL_151:
            __break(1u);
LABEL_152:
            __break(1u);
LABEL_153:
            __break(1u);
LABEL_154:
            __break(1u);
LABEL_155:
            __break(1u);
            return result;
          }

          if (v33 != v61)
          {
            uint64_t v112 = (char *)v31[2];
            uint64_t v150 = v31[9];
            int v151 = v112;
            unint64_t v158 = v32;
            uint64_t v159 = v150 * (void)(v33 - 1);
            uint64_t v113 = (void)v33 * v150;
            uint64_t v143 = v28;
            uint64_t v148 = v61;
            do
            {
              uint64_t v114 = 0LL;
              uint64_t v161 = v33;
              while (1)
              {
                unint64_t v157 = (void (*)(char *, char *, uint64_t, char *))v28;
                uint64_t v115 = *v164;
                unint64_t v64 = (unint64_t)v13;
                uint64_t v116 = v113;
                uint64_t v117 = (uint64_t)&(*v164)[v113 + v114];
                uint64_t v32 = v153;
                uint64_t v4 = v49;
                uint64_t v118 = v151;
                ((void (*)(char *, uint64_t))v151)(v153, v117);
                ((void (*)(unint64_t, char *, uint64_t))v118)(v64, &v115[v159 + v114], v4);
                uint64_t v119 = v158;
                char v120 = v166(v32, (char *)v64);
                unint64_t v158 = v119;
                if (v119) {
                  goto LABEL_121;
                }
                char v121 = v120;
                uint64_t v122 = (void (*)(unint64_t, uint64_t))v165[1];
                v122(v64, v4);
                uint64_t result = ((uint64_t (*)(char *, uint64_t))v122)(v32, v4);
                if ((v121 & 1) == 0) {
                  break;
                }
                uint64_t v123 = *v164;
                if (!*v164) {
                  goto LABEL_153;
                }
                uint64_t v113 = v116;
                uint64_t v124 = &v123[v116 + v114];
                uint64_t v125 = &v123[v159 + v114];
                uint64_t v126 = (void (*)(char *, char *, uint64_t))v165[4];
                uint64_t v127 = v163;
                v126(v160, v124, v163);
                swift_arrayInitWithTakeFrontToBack(v124, v125, 1LL, v127);
                uint64_t result = ((uint64_t (*)(char *, char *, uint64_t))v126)(v125, v160, v127);
                v114 -= v150;
                uint64_t v28 = (uint64_t)v157 + 1;
                uint64_t v128 = v161;
                uint64_t v49 = v127;
                uint64_t v13 = v156;
              }

              uint64_t v128 = v161;
              uint64_t v113 = v116;
              uint64_t v13 = (char *)v64;
              uint64_t v49 = v4;
LABEL_98:
              uint64_t v33 = v128 + 1;
              v159 += v150;
              v113 += v150;
              uint64_t v28 = v143;
            }

            while (v33 != v148);
            uint64_t v33 = v148;
            uint64_t v29 = v154;
            uint64_t v32 = v158;
          }
        }
      }

      uint64_t result = swift_isUniquelyReferenced_nonNull_native(v29);
      if ((result & 1) != 0)
      {
        uint64_t v29 = v154;
      }

      else
      {
        uint64_t result = (uint64_t)sub_6CA7C(0LL, *((void *)v154 + 2) + 1LL, 1, v154);
        uint64_t v29 = (char *)result;
      }

      unint64_t v63 = *((void *)v29 + 2);
      unint64_t v62 = *((void *)v29 + 3);
      unint64_t v64 = v63 + 1;
      if (v63 >= v62 >> 1)
      {
        uint64_t result = (uint64_t)sub_6CA7C((char *)(v62 > 1), v63 + 1, 1, v29);
        uint64_t v29 = (char *)result;
      }

      *((void *)v29 + sub_423C(v0 + 2) = v64;
      int v65 = v29 + 32;
      char v66 = &v29[16 * v63 + 32];
      *(void *)char v66 = v28;
      *((void *)v66 + 1) = v33;
      uint64_t v161 = v33;
      if (v63)
      {
        while (1)
        {
          unint64_t v67 = v64 - 1;
          if (v64 >= 4)
          {
            uint64_t v72 = &v65[16 * v64];
            uint64_t v73 = *((void *)v72 - 8);
            uint64_t v74 = *((void *)v72 - 7);
            BOOL v78 = __OFSUB__(v74, v73);
            uint64_t v75 = v74 - v73;
            if (v78) {
              goto LABEL_130;
            }
            uint64_t v77 = *((void *)v72 - 6);
            uint64_t v76 = *((void *)v72 - 5);
            BOOL v78 = __OFSUB__(v76, v77);
            uint64_t v70 = v76 - v77;
            char v71 = v78;
            if (v78) {
              goto LABEL_131;
            }
            unint64_t v79 = v64 - 2;
            float v80 = &v65[16 * v64 - 32];
            uint64_t v82 = *(void *)v80;
            uint64_t v81 = *((void *)v80 + 1);
            BOOL v78 = __OFSUB__(v81, v82);
            uint64_t v83 = v81 - v82;
            if (v78) {
              goto LABEL_132;
            }
            BOOL v78 = __OFADD__(v70, v83);
            uint64_t v84 = v70 + v83;
            if (v78) {
              goto LABEL_134;
            }
            if (v84 >= v75)
            {
              uint64_t v102 = &v65[16 * v67];
              uint64_t v104 = *(void *)v102;
              uint64_t v103 = *((void *)v102 + 1);
              BOOL v78 = __OFSUB__(v103, v104);
              uint64_t v105 = v103 - v104;
              if (v78) {
                goto LABEL_144;
              }
              BOOL v95 = v70 < v105;
              goto LABEL_77;
            }
          }

          else
          {
            if (v64 != 3)
            {
              uint64_t v96 = *((void *)v29 + 4);
              uint64_t v97 = *((void *)v29 + 5);
              BOOL v78 = __OFSUB__(v97, v96);
              uint64_t v89 = v97 - v96;
              char v90 = v78;
              goto LABEL_71;
            }

            uint64_t v69 = *((void *)v29 + 4);
            uint64_t v68 = *((void *)v29 + 5);
            BOOL v78 = __OFSUB__(v68, v69);
            uint64_t v70 = v68 - v69;
            char v71 = v78;
          }

          if ((v71 & 1) != 0) {
            goto LABEL_133;
          }
          unint64_t v79 = v64 - 2;
          uint64_t v85 = &v65[16 * v64 - 32];
          uint64_t v87 = *(void *)v85;
          uint64_t v86 = *((void *)v85 + 1);
          BOOL v88 = __OFSUB__(v86, v87);
          uint64_t v89 = v86 - v87;
          char v90 = v88;
          if (v88) {
            goto LABEL_135;
          }
          uint64_t v91 = &v65[16 * v67];
          uint64_t v93 = *(void *)v91;
          uint64_t v92 = *((void *)v91 + 1);
          BOOL v78 = __OFSUB__(v92, v93);
          uint64_t v94 = v92 - v93;
          if (v78) {
            goto LABEL_137;
          }
          if (__OFADD__(v89, v94)) {
            goto LABEL_139;
          }
          if (v89 + v94 >= v70)
          {
            BOOL v95 = v70 < v94;
LABEL_77:
            if (v95) {
              unint64_t v67 = v79;
            }
            goto LABEL_79;
          }

  _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v1, v24, 1LL, v4);
  sub_D304();
  Swift::Int v25 = _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v1, 1LL, v4);
  if ((_DWORD)v25 == 1)
  {
    sub_5F64(v1, &qword_A3DA8);
    return 0LL;
  }

  else
  {
    uint64_t v26 = SpanProperty.valueString.getter(v25);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v4);
  }

  return v26;
}

LABEL_71:
          if ((v90 & 1) != 0) {
            goto LABEL_136;
          }
          uint64_t v98 = &v65[16 * v67];
          uint64_t v100 = *(void *)v98;
          uint64_t v99 = *((void *)v98 + 1);
          BOOL v78 = __OFSUB__(v99, v100);
          uint64_t v101 = v99 - v100;
          if (v78) {
            goto LABEL_138;
          }
          if (v101 < v89) {
            goto LABEL_88;
          }
LABEL_79:
          unint64_t v106 = v67 - 1;
          if (v67 - 1 >= v64)
          {
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
LABEL_146:
            __break(1u);
LABEL_147:
            __break(1u);
LABEL_148:
            __break(1u);
LABEL_149:
            __break(1u);
            goto LABEL_150;
          }

          if (!*v164) {
            goto LABEL_152;
          }
          uint64_t v4 = (uint64_t)v29;
          uint64_t v107 = &v65[16 * v106];
          uint64_t v108 = *(void *)v107;
          uint64_t v109 = &v65[16 * v67];
          uint64_t v110 = *((void *)v109 + 1);
          uint64_t result = sub_6C508( (unint64_t)&(*v164)[v165[9] * *(void *)v107],  (unint64_t)&(*v164)[v165[9] * *(void *)v109],  (unint64_t)&(*v164)[v165[9] * v110],  v162,  (uint64_t (*)(char *, unint64_t))v166,  v167);
          if (v32)
          {
LABEL_118:
            __int128 v137 = (char *)v4;
            goto LABEL_122;
          }

          if (v110 < v108) {
            goto LABEL_127;
          }
          if (v67 > *(void *)(v4 + 16)) {
            goto LABEL_128;
          }
          *(void *)uint64_t v107 = v108;
          *(void *)&v65[16 * v106 + 8] = v110;
          unint64_t v111 = *(void *)(v4 + 16);
          if (v67 >= v111) {
            goto LABEL_129;
          }
          unint64_t v64 = v111 - 1;
          uint64_t result = (uint64_t)memmove(&v65[16 * v67], v109 + 16, 16 * (v111 - 1 - v67));
          uint64_t v29 = (char *)v4;
          *(void *)(v4 + 16) = v111 - 1;
          if (v111 <= 2) {
            goto LABEL_88;
          }
        }
      }

      unint64_t v64 = 1LL;
LABEL_88:
      char v31 = v165;
      Swift::Int v30 = (Swift::Int)v164[1];
      uint64_t v28 = (uint64_t)v161;
      uint64_t v13 = v156;
      Swift::Int v25 = v152;
    }
  }

  uint64_t v29 = (char *)_swiftEmptyArrayStorage;
  unint64_t v64 = _swiftEmptyArrayStorage[2];
  uint64_t v32 = v3;
  char v31 = v6;
LABEL_105:
  if (v64 >= 2)
  {
    uint64_t v129 = *v164;
    Swift::Int v152 = v25;
    do
    {
      unint64_t v130 = v64 - 2;
      if (v64 < 2) {
        goto LABEL_140;
      }
      if (!v129) {
        goto LABEL_154;
      }
      uint64_t v4 = (uint64_t)v29;
      uint64_t v131 = *(void *)&v29[16 * v130 + 32];
      uint64_t v132 = *(void *)&v29[16 * v64 + 24];
      id v133 = v31;
      __int128 v134 = v129;
      uint64_t result = sub_6C508( (unint64_t)&v129[v31[9] * v131],  (unint64_t)&v129[v31[9] * *(void *)&v29[16 * v64 + 16]],  (unint64_t)&v129[v31[9] * v132],  v162,  (uint64_t (*)(char *, unint64_t))v166,  v167);
      if (v32) {
        goto LABEL_118;
      }
      if (v132 < v131) {
        goto LABEL_141;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native(v4);
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_6CB70(v4);
        uint64_t v4 = result;
      }

      if (v130 >= *(void *)(v4 + 16)) {
        goto LABEL_142;
      }
      uint64_t v135 = (void *)(v4 + 32 + 16 * v130);
      void *v135 = v131;
      v135[1] = v132;
      unint64_t v136 = *(void *)(v4 + 16);
      if (v64 > v136) {
        goto LABEL_143;
      }
      uint64_t result = (uint64_t)memmove( (void *)(v4 + 32 + 16 * (v64 - 1)),  (const void *)(v4 + 32 + 16 * v64),  16 * (v136 - v64));
      uint64_t v29 = (char *)v4;
      *(void *)(v4 + 16) = v136 - 1;
      unint64_t v64 = v136 - 1;
      char v31 = v133;
      Swift::Int v25 = v152;
      uint64_t v129 = v134;
    }

    while (v136 > 2);
  }

  swift_bridgeObjectRelease(v29);
  if (v25 < -1)
  {
    __break(1u);
LABEL_121:
    uint64_t v138 = (void (*)(unint64_t, uint64_t))v165[1];
    v138(v64, v4);
    v138((unint64_t)v32, v4);
    uint64_t result = swift_bridgeObjectRelease(v154);
    uint64_t v139 = v152;
LABEL_123:
    if (v139 < -1) {
      goto LABEL_147;
    }
  }

  uint64_t v140 = v144;
  *(void *)(v144 + 16) = 0LL;
  return swift_bridgeObjectRelease(v140);
}

uint64_t sub_6C264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *, char *), uint64_t a5)
{
  char v44 = a4;
  uint64_t v45 = a5;
  uint64_t v8 = type metadata accessor for UsoEntitySpan(0LL);
  uint64_t v9 = ((uint64_t (*)(void))__chkstk_darwin)();
  uint64_t v47 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = __chkstk_darwin(v9);
  unint64_t v42 = (char *)&v36 - v12;
  uint64_t result = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v36 - v14;
  uint64_t v38 = a2;
  if (a3 != a2)
  {
    uint64_t v17 = *(void *)(v15 + 72);
    uint64_t v48 = v15;
    uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    uint64_t v40 = v17;
    char v41 = v18;
    uint64_t v50 = v17 * a3;
    uint64_t v51 = v17 * (a3 - 1);
    uint64_t v19 = v42;
    uint64_t v37 = a1;
    uint64_t v39 = (char *)&v36 - v14;
    while (2)
    {
      uint64_t v20 = 0LL;
      uint64_t v21 = a1;
      uint64_t v22 = v52;
      uint64_t v43 = a3;
      while (1)
      {
        uint64_t v46 = v21;
        uint64_t v23 = *v49;
        uint64_t v24 = v8;
        uint64_t v25 = v8;
        uint64_t v26 = v41;
        v41(v16, v50 + v20 + *v49, v24);
        v26(v19, v51 + v20 + v23, v25);
        char v27 = v44(v16, v19);
        uint64_t v52 = v22;
        if (v22)
        {
          uint64_t v35 = *(void (**)(char *, uint64_t))(v48 + 8);
          v35(v19, v25);
          return ((uint64_t (*)(char *, uint64_t))v35)(v16, v25);
        }

        char v28 = v27;
        uint64_t v29 = *(void (**)(char *, uint64_t))(v48 + 8);
        v29(v19, v25);
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v29)(v16, v25);
        uint64_t v8 = v25;
        if ((v28 & 1) == 0) {
          break;
        }
        uint64_t v22 = v52;
        uint64_t v30 = *v49;
        if (!*v49)
        {
          __break(1u);
          return result;
        }

        uint64_t v31 = v30 + v50 + v20;
        uint64_t v32 = v30 + v51 + v20;
        uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v48 + 32);
        v33(v47, v31, v25);
        swift_arrayInitWithTakeFrontToBack(v31, v32, 1LL, v25);
        uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v33)(v32, v47, v25);
        uint64_t v16 = v39;
        v20 -= v40;
        uint64_t v21 = v46 + 1;
        uint64_t v19 = v42;
        uint64_t v34 = v43;
        if (v43 == v46 + 1) {
          goto LABEL_10;
        }
      }

      uint64_t v34 = v43;
      uint64_t v22 = v52;
      uint64_t v16 = v39;
LABEL_10:
      uint64_t v52 = v22;
      a3 = v34 + 1;
      v51 += v40;
      v50 += v40;
      a1 = v37;
      if (a3 != v38) {
        continue;
      }
      break;
    }
  }

  return result;
}

uint64_t sub_6C508( unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t (*a5)(char *, unint64_t), uint64_t a6)
{
  uint64_t v7 = v6;
  BOOL v88 = a5;
  uint64_t v89 = a6;
  unint64_t v93 = a3;
  uint64_t v11 = type metadata accessor for UsoEntitySpan(0LL);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v83 = (char *)&v77 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t result = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v77 - v20;
  uint64_t v91 = v22;
  uint64_t v23 = *(void *)(v22 + 72);
  if (!v23)
  {
    __break(1u);
LABEL_87:
    __break(1u);
LABEL_88:
    __break(1u);
LABEL_89:
    __break(1u);
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
    return result;
  }

  int64_t v24 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000LL && v23 == -1) {
    goto LABEL_87;
  }
  int64_t v26 = v93 - a2;
  if (v93 - a2 == 0x8000000000000000LL && v23 == -1) {
    goto LABEL_88;
  }
  uint64_t v90 = result;
  unint64_t v28 = a2;
  uint64_t v29 = v24 / v23;
  uint64_t v30 = v26 / v23;
  uint64_t v87 = v23;
  if (v24 / v23 < v26 / v23)
  {
    unint64_t v86 = v19;
    uint64_t result = sub_5D8C8(a1, v24 / v23, a4);
    unint64_t v31 = a4 + v29 * v23;
    if (v29 * v23 >= 1 && v28 < v93)
    {
      unint64_t v41 = v28;
      uint64_t v42 = v90;
      uint64_t v85 = *(void (**)(unint64_t, unint64_t, uint64_t))(v91 + 16);
      unint64_t v92 = a4 + v29 * v23;
      while (1)
      {
        uint64_t v43 = v85;
        v85((unint64_t)v21, v41, v42);
        char v44 = v21;
        unint64_t v45 = v86;
        v43(v86, a4, v42);
        char v46 = v88(v44, v45);
        if (v6) {
          break;
        }
        char v47 = v46;
        uint64_t v48 = v42;
        unint64_t v49 = v41;
        uint64_t v50 = *(void (**)(unint64_t, uint64_t))(v91 + 8);
        v50(v45, v48);
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v50)(v44, v48);
        uint64_t v23 = v87;
        uint64_t v21 = v44;
        if ((v47 & 1) != 0)
        {
          unint64_t v51 = v49;
          unint64_t v41 = v49 + v87;
          if (a1 < v49 || a1 >= v41)
          {
            uint64_t v42 = v90;
            uint64_t result = swift_arrayInitWithTakeFrontToBack(a1, v51, 1LL, v90);
          }

          else
          {
            uint64_t v42 = v90;
            if (a1 != v51) {
              uint64_t result = swift_arrayInitWithTakeBackToFront(a1);
            }
          }
        }

        else
        {
          BOOL v53 = a1 < a4 || a1 >= a4 + v87;
          unint64_t v41 = v49;
          if (v53)
          {
            uint64_t v42 = v90;
            uint64_t result = swift_arrayInitWithTakeFrontToBack(a1, a4, 1LL, v90);
          }

          else
          {
            uint64_t v42 = v90;
            if (a1 != a4) {
              uint64_t result = swift_arrayInitWithTakeBackToFront(a1);
            }
          }

          a4 += v23;
        }

        a1 += v23;
        unint64_t v31 = v92;
        if (a4 >= v92 || v41 >= v93) {
          goto LABEL_16;
        }
      }

      char v71 = *(void (**)(unint64_t, uint64_t))(v91 + 8);
      v71(v45, v42);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v71)(v44, v42);
      int64_t v72 = v92 - a4;
      if (v87 != -1 || v72 != 0x8000000000000000LL)
      {
        uint64_t v38 = v72 / v87;
        unint64_t v39 = a4;
        unint64_t v40 = a1;
        goto LABEL_27;
      }

      goto LABEL_90;
    }

LABEL_16:
    unint64_t v33 = a1;
    goto LABEL_22;
  }

  uint64_t result = sub_5D8C8(v28, v26 / v23, a4);
  uint64_t v34 = v30 * v23;
  unint64_t v33 = v28;
  unint64_t v31 = a4 + v34;
  if (v34 < 1 || a1 >= v28)
  {
LABEL_22:
    int64_t v36 = v31 - a4;
    if (v23 != -1 || v36 != 0x8000000000000000LL)
    {
      uint64_t v38 = v36 / v23;
      unint64_t v39 = a4;
      unint64_t v40 = v33;
      goto LABEL_27;
    }

    goto LABEL_89;
  }

  uint64_t v54 = -v23;
  uint64_t v55 = v90;
  uint64_t v81 = *(void (**)(char *, unint64_t, uint64_t))(v91 + 16);
  uint64_t v82 = v14;
  unint64_t v79 = a1;
  unint64_t v80 = a4;
  uint64_t v78 = -v23;
  while (1)
  {
    unint64_t v56 = a4;
    unint64_t v92 = v31;
    unint64_t v57 = v31 + v54;
    uint64_t v58 = v83;
    unsigned __int8 v59 = v81;
    v81(v83, v31 + v54, v55);
    unint64_t v86 = v33;
    v33 += v54;
    int v60 = v82;
    v59(v82, v33, v55);
    char v61 = v88(v58, (unint64_t)v60);
    if (v7) {
      break;
    }
    char v62 = v61;
    unint64_t v84 = v57;
    uint64_t v85 = 0LL;
    unint64_t v63 = v58;
    unint64_t v64 = v93;
    unint64_t v65 = v93 + v54;
    char v66 = *(void (**)(char *, uint64_t))(v91 + 8);
    v66(v60, v55);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v66)(v63, v55);
    if ((v62 & 1) != 0)
    {
      if (v64 >= v86 && v65 < v86)
      {
        uint64_t v7 = v85;
        if (v64 == v86)
        {
          a4 = v80;
          uint64_t v55 = v90;
        }

        else
        {
          uint64_t v55 = v90;
          uint64_t result = swift_arrayInitWithTakeBackToFront(v65);
LABEL_66:
          a4 = v80;
        }

        unint64_t v31 = v92;
        goto LABEL_71;
      }

      uint64_t v55 = v90;
      uint64_t result = swift_arrayInitWithTakeFrontToBack(v65, v33, 1LL, v90);
      uint64_t v7 = v85;
      goto LABEL_66;
    }

    if (v64 < v92 || v65 >= v92)
    {
      unint64_t v69 = v84;
      uint64_t v55 = v90;
      uint64_t result = swift_arrayInitWithTakeFrontToBack(v64 + v54, v84, 1LL, v90);
      unint64_t v31 = v69;
      uint64_t v7 = v85;
      unint64_t v33 = v86;
LABEL_70:
      a4 = v80;
      goto LABEL_71;
    }

    uint64_t v7 = v85;
    unint64_t v33 = v86;
    unint64_t v70 = v84;
    if (v64 != v92)
    {
      uint64_t v55 = v90;
      uint64_t result = swift_arrayInitWithTakeBackToFront(v64 + v54);
      unint64_t v31 = v70;
      goto LABEL_70;
    }

    unint64_t v31 = v84;
    a4 = v80;
    uint64_t v55 = v90;
LABEL_71:
    uint64_t v54 = v78;
    uint64_t v23 = v87;
    if (v31 > a4)
    {
      unint64_t v93 = v65;
      if (v33 > v79) {
        continue;
      }
    }

    goto LABEL_22;
  }

  uint64_t v74 = *(void (**)(char *, uint64_t))(v91 + 8);
  v74(v60, v55);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v74)(v58, v55);
  int64_t v75 = v92 - v56;
  if (v87 == -1 && v75 == 0x8000000000000000LL) {
    goto LABEL_91;
  }
  unint64_t v39 = v56;
  uint64_t v38 = v75 / v87;
  unint64_t v40 = v86;
LABEL_27:
  sub_5D8C8(v39, v38, v40);
  return 1LL;
}

char *sub_6CA7C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    uint64_t v10 = sub_41BC(&qword_A3DB8);
    uint64_t v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7LL);
    size_t v12 = j__malloc_size(v11);
    *((void *)v11 + sub_423C(v0 + 2) = v8;
    *((void *)v11 + sub_423C(v0 + 3) = 2 * ((uint64_t)(v12 - 32) / 16);
  }

  else
  {
    uint64_t v11 = (char *)&_swiftEmptyArrayStorage;
  }

  uint64_t v13 = v11 + 32;
  uint64_t v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || &v14[16 * v8] <= v13) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + sub_423C(v0 + 2) = 0LL;
  }

  else
  {
    memcpy(v13, v14, 16 * v8);
  }

  swift_bridgeObjectRelease(a4);
  return v11;
}

char *sub_6CB70(uint64_t a1)
{
  return sub_6CA7C(0LL, *(void *)(a1 + 16), 0, (char *)a1);
}

void *sub_6CB84(uint64_t a1)
{
  return sub_45EC0(0LL, *(void *)(a1 + 16), 0, a1);
}

size_t sub_6CB98(uint64_t a1)
{
  return sub_45FBC(0LL, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_6CBAC()
{
  return (*(uint64_t (**)(void, void))(*(void *)(v0 - 168) + 8LL))( *(void *)(v0 - 200),  *(void *)(v0 - 224));
}

uint64_t sub_6CBC0()
{
  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_6CBC8(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 - 160))(a1, v1);
}

uint64_t sub_6CBD4()
{
  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_6CBE0@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, void)@<X8>)
{
  return a3(a1, a2, *(void *)(v3 - 120));
}

uint64_t sub_6CBEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a3, v3, 0LL);
}

  ;
}

uint64_t sub_6CC0C(uint64_t a1, uint64_t *a2)
{
  return sub_5F64(v2, a2);
}

void sub_6CC14()
{
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  uint64_t v10 = sub_6D524();
  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    sub_6D508();
    size_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16);
    unint64_t v22 = v10;
    sub_6D534();
    unint64_t v25 = 0x80000000000777A0LL;
    while (1)
    {
      uint64_t v13 = v12(v9, v3, v0);
      uint64_t v14 = SpanProperty.key.getter(v13);
      if (v14 == 0xD000000000000017LL && v15 == v25)
      {
        sub_D304();
        unint64_t v18 = 0x80000000000777A0LL;
        goto LABEL_11;
      }

      char v16 = sub_6D500(v14, v15, 0xD000000000000017LL, 0x80000000000777A0LL);
      sub_D304();
      if ((v16 & 1) != 0) {
        break;
      }
      sub_1C038((uint64_t)v9, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
      v3 += v2;
      if (!--v11)
      {
        sub_D304();
        uint64_t v17 = 1LL;
        uint64_t v2 = v23;
        uint64_t v1 = v24;
        goto LABEL_12;
      }
    }

    unint64_t v18 = v22;
LABEL_11:
    swift_bridgeObjectRelease(v18);
    uint64_t v2 = v23;
    uint64_t v1 = v24;
    sub_2458C(v23, (uint64_t)v9, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32));
    uint64_t v17 = 0LL;
  }

  else
  {
    uint64_t v17 = 1LL;
  }

uint64_t sub_6CE08()
{
  uint64_t v2 = type metadata accessor for IdentifierNamespace(0LL);
  uint64_t v36 = *(void *)(v2 - 8);
  uint64_t v37 = v2;
  __chkstk_darwin(v2);
  uint64_t v35 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = sub_6D544();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  sub_1BDE0();
  sub_41BC(&qword_A3DA8);
  sub_11F5C();
  __chkstk_darwin(v6);
  sub_39D90();
  uint64_t v7 = UsoEntitySpan.properties.getter();
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    uint64_t v29 = v1;
    unint64_t v9 = v7 + ((*(unsigned __int8 *)(v5 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    unsigned int v34 = enum case for IdentifierNamespace.nsSemanticValue(_:);
    uint64_t v30 = *(void *)(v5 + 72);
    unint64_t v33 = *(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v5 + 16);
    uint64_t v28 = v7;
    sub_6D534();
    uint64_t v31 = v5;
    uint64_t v32 = v4;
    uint64_t v10 = v35;
    uint64_t v11 = v36;
    while (1)
    {
      uint64_t v12 = v33(v0, v9, v4);
      uint64_t v13 = v0;
      uint64_t v14 = SpanProperty.key.getter(v12);
      uint64_t v16 = v15;
      uint64_t v17 = v37;
      uint64_t v18 = (*(uint64_t (**)(char *, void, uint64_t))(v11 + 104))(v10, v34, v37);
      uint64_t v19 = IdentifierNamespace.rawValue.getter(v18);
      uint64_t v21 = v20;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v10, v17);
      if (v14 == v19 && v16 == v21) {
        break;
      }
      char v23 = sub_6D500(v14, v16, v19, v21);
      sub_D304();
      sub_1BFE8();
      if ((v23 & 1) != 0) {
        goto LABEL_12;
      }
      uint64_t v5 = v31;
      uint64_t v4 = v32;
      uint64_t v0 = v13;
      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v13, v32);
      v9 += v30;
      if (!--v8)
      {
        sub_D304();
        uint64_t v24 = 1LL;
        uint64_t v1 = v29;
        goto LABEL_13;
      }
    }

    sub_D304();
    sub_1BFE8();
LABEL_12:
    sub_1BFE8();
    uint64_t v5 = v31;
    uint64_t v4 = v32;
    uint64_t v1 = v29;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 32))(v29, v13, v32);
    uint64_t v24 = 0LL;
  }

  else
  {
    uint64_t v24 = 1LL;
  }

void sub_6D09C()
{
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (uint64_t)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  uint64_t v10 = sub_6D524();
  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    sub_6D508();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
    unint64_t v23 = v10;
    sub_6D534();
    unint64_t v26 = 0x8000000000079740LL;
    while (1)
    {
      uint64_t v13 = v12(v2, v3, v0);
      uint64_t v14 = SpanProperty.key.getter(v13);
      if (v14 == 0xD000000000000011LL && v15 == v26)
      {
        sub_D304();
        unint64_t v18 = 0x8000000000079740LL;
        goto LABEL_11;
      }

      char v16 = sub_6D500(v14, v15, 0xD000000000000011LL, 0x8000000000079740LL);
      sub_D304();
      if ((v16 & 1) != 0) {
        break;
      }
      sub_1C038(v2, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
      v3 += v9;
      if (!--v11)
      {
        sub_D304();
        uint64_t v17 = 1LL;
        uint64_t v9 = v24;
        uint64_t v1 = v25;
        goto LABEL_12;
      }
    }

    unint64_t v18 = v23;
LABEL_11:
    swift_bridgeObjectRelease(v18);
    uint64_t v9 = v24;
    uint64_t v1 = v25;
    sub_2458C(v25, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32));
    uint64_t v17 = 0LL;
  }

  else
  {
    uint64_t v17 = 1LL;
  }

uint64_t sub_6D2A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_41BC(&qword_A3DA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_6D2F0()
{
  uint64_t matched = type metadata accessor for MatchInfo.MatchSignals(0LL);
  uint64_t v3 = *(void *)(matched - 8);
  __chkstk_darwin(matched);
  sub_1BDE0();
  sub_41BC(&qword_A3DC0);
  sub_11F5C();
  __chkstk_darwin(v4);
  sub_2455C();
  UsoEntitySpan.matchInfo.getter();
  uint64_t v5 = type metadata accessor for MatchInfo(0LL);
  uint64_t v6 = _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v1, 1LL, v5);
  if ((_DWORD)v6 == 1)
  {
    sub_6D53C(v6, &qword_A3DC0);
    char v7 = 0;
  }

  else
  {
    static MatchInfo.MatchSignals.exactMatch.getter();
    char v7 = MatchInfo.hasMatchSignals(_:)(v0);
    sub_1C038(v0, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8LL))(v1, v5);
  }

  return v7 & 1;
}

uint64_t sub_6D3E0()
{
  if (v0 == 2)
  {
    char v1 = 0;
  }

  else
  {
    unint64_t v2 = 0x8000000000075960LL;
    if ((v0 & 1) != 0)
    {
      char v1 = sub_6D500(0xD000000000000012LL, 0x8000000000075980LL, 0xD00000000000001BLL, 0x8000000000075960LL);
      unint64_t v2 = 0x8000000000075980LL;
    }

    else
    {
      char v1 = 1;
    }

    swift_bridgeObjectRelease(v2);
  }

  return v1 & 1;
}

uint64_t sub_6D470()
{
  if (v0 == 2)
  {
    char v1 = 0;
  }

  else
  {
    unint64_t v2 = 0x8000000000075980LL;
    if ((v0 & 1) != 0)
    {
      char v1 = 1;
    }

    else
    {
      char v1 = sub_6D500(0xD00000000000001BLL, 0x8000000000075960LL, 0xD000000000000012LL, 0x8000000000075980LL);
      unint64_t v2 = 0x8000000000075960LL;
    }

    swift_bridgeObjectRelease(v2);
  }

  return v1 & 1;
}

uint64_t sub_6D500(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a3, a4, 0LL);
}

void sub_6D508()
{
  *(void *)(v2 - 104) = v1;
  *(void *)(v2 - 96) = v0;
}

uint64_t sub_6D524()
{
  return UsoEntitySpan.properties.getter();
}

uint64_t sub_6D534()
{
  return swift_bridgeObjectRetain(v0);
}

uint64_t sub_6D53C(uint64_t a1, uint64_t *a2)
{
  return sub_5F64(v2, a2);
}

uint64_t sub_6D544()
{
  return type metadata accessor for SpanProperty(0LL);
}

uint64_t _s35HomeCommunicationFlowDelegatePlugin0A6TargetV2eeoiySbAC_ACtFZ_0()
{
  return static UUID.== infix(_:_:)();
}