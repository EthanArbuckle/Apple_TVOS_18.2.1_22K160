void static CallRecordViewUtils.generatedSelectedAction(callRecord:forCallHistoryDisplay:deviceState:)( void *a1@<X0>, char a2@<W1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  ValueMetadata *v22;
  ValueMetadata *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  Swift::String_optional v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void v33[5];
  char v34[56];
  void __dst[22];
  void v36[2];
  void v37[4];
  uint64_t v38;
  _BYTE v39[16];
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  ValueMetadata *v43;
  _UNKNOWN **v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  if ((a2 & 1) != 0 && (outlined bridged method (pb) of @objc INCallRecord.participants.getter(a1), v7))
  {
    v8 = v7;
    if (one-time initialization token for instance != -1) {
      swift_once(&one-time initialization token for instance, one-time initialization function for instance);
    }
    memcpy(__dst, &static PhoneCallFeatureFlags.instance, sizeof(__dst));
    v9 = type metadata accessor for PhoneCallFeatureManager();
    inited = swift_initStackObject(v9, v34);
    v43 = &type metadata for PhoneCallFeatureFlags;
    v44 = &protocol witness table for PhoneCallFeatureFlags;
    *(void *)&v41 = swift_allocObject(&unk_415B00, 192LL, 7LL);
    memcpy((void *)(v41 + 16), __dst, 0xB0uLL);
    outlined init with take of AppSelectionSignalComponent(&v41, inited + 16);
    outlined retain of PhoneCallFeatureFlags(__dst);
    FirstPartyAnnotatedAppStore.getDefaultApp(for:)(a3, (uint64_t)v36);
    swift_setDeallocating(inited);
    __swift_destroy_boxed_opaque_existential_1((void *)(inited + 16));
    v11 = v36[0];
    v40 = v36[1];
    outlined release of Set<String>(&v40);
    outlined init with take of PhoneCallNLIntent?( (uint64_t)v37,  (uint64_t)v39,  &demangling cache variable for type metadata for String?);
    outlined release of String?((uint64_t)v39);
    v38 = v37[3];
    outlined release of Set<String>(&v38);
    v12 = App.appIdentifier.getter();
    v14 = v13;
    swift_release(v11);
    if (v14) {
      v15 = v12;
    }
    else {
      v15 = 0xD000000000000017LL;
    }
    if (v14) {
      v16 = v14;
    }
    else {
      v16 = 0x8000000000348B90LL;
    }
    v17 = [a1 callCapability];
    v18 = objc_allocWithZone(&OBJC_CLASS___INStartCallIntent);
    v19 = @nonobjc INStartCallIntent.init(destinationType:contacts:callCapability:)(1LL, v8, (uint64_t)v17);
    if (one-time initialization token for emptyStartCallIntent != -1) {
      swift_once( &one-time initialization token for emptyStartCallIntent,  one-time initialization function for emptyStartCallIntent);
    }
    v20 = [(id)static PhoneCallIntentClassNames.emptyStartCallIntent typeName];
    v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    v23 = v22;

    v24 = outlined bridged method (ob) of @objc PBCodable.data.getter([v19 backingStore]);
    *(void *)&v41 = v15;
    *((void *)&v41 + 1) = v16;
    v42 = v21;
    v43 = v23;
    v44 = (_UNKNOWN **)v24;
    v45 = v25;
    v46 = xmmword_33E050;
    v47 = 0LL;
    static Device.current.getter(v33);
    StartAudioCallDirectAction.toStartLocalRequest(deviceState:)(v33);
    v27 = v26;
    __swift_destroy_boxed_opaque_existential_1(v33);
    v28 = AceObject.serializeToBase64()();

    if (v28.value._object)
    {
      String.toSpeakableString.getter(v28.value._countAndFlagsBits, v28.value._object);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      OUTLINED_FUNCTION_16_60();
      OUTLINED_FUNCTION_62();
      v29 = OUTLINED_FUNCTION_26_0();
      v30 = a4;
      v31 = 0LL;
    }

    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      OUTLINED_FUNCTION_16_60();
      v29 = OUTLINED_FUNCTION_26_0();
      v30 = a4;
      v31 = 1LL;
    }

    __swift_storeEnumTagSinglePayload(v30, v31, 1LL, v29);
    OUTLINED_FUNCTION_7_5();
  }

  else
  {
    v32 = OUTLINED_FUNCTION_26_0();
    __swift_storeEnumTagSinglePayload(a4, 1LL, 1LL, v32);
  }

uint64_t static CallRecordViewUtils.generatedSelectedActionForVoicemail(callRecord:forCallHistoryDisplay:)@<X0>( char a1@<W1>, uint64_t a2@<X8>)
{
  return static CallRecordViewUtils.generatedSelectedActionForVoicemail(callRecord:forCallHistoryDisplay:)( a1,  (uint64_t (*)(void))static CallRecordViewUtils.buildPunchOutForVoicemail(callRecord:),  a2);
}

uint64_t static CallRecordViewUtils.generatedActionForOpeningCallRecord(callRecord:forCallHistoryDisplay:)@<X0>( char a1@<W1>, uint64_t a2@<X8>)
{
  return static CallRecordViewUtils.generatedSelectedActionForVoicemail(callRecord:forCallHistoryDisplay:)( a1,  (uint64_t (*)(void))static CallRecordViewUtils.buildPunchOutForOpenCallRecord(callRecord:),  a2);
}

uint64_t static CallRecordViewUtils.generatedSelectedActionForVoicemail(callRecord:forCallHistoryDisplay:)@<X0>( char a1@<W1>, uint64_t (*a2)(void)@<X2>, uint64_t a3@<X8>)
{
  if ((a1 & 1) != 0 && (uint64_t v4 = a2()) != 0)
  {
    v5 = (void *)v4;
    Swift::String_optional v6 = AceObject.serializeToBase64()();
    if (v6.value._object)
    {
      String.toSpeakableString.getter(v6.value._countAndFlagsBits, v6.value._object);
      swift_bridgeObjectRelease();
      uint64_t v7 = 0LL;
    }

    else
    {
      uint64_t v7 = 1LL;
    }
  }

  else
  {
    uint64_t v7 = 1LL;
  }

  uint64_t v8 = OUTLINED_FUNCTION_26_0();
  return OUTLINED_FUNCTION_32_6(a3, v7, 1LL, v8);
}

void static CallRecordViewUtils.generatedDisplayName(searchCallHistoryCATs:callRecord:)(uint64_t a1@<X8>)
{
  if (OUTLINED_FUNCTION_25_56() == 1)
  {
    OUTLINED_FUNCTION_13_5(v3);
    void *v2 = 0xD00000000000002CLL;
    v2[1] = 0x8000000000344150LL;
    v2[2] = 0xD000000000000035LL;
    v2[3] = 0x80000000003516F0LL;
    v2[4] = 0xD000000000000037LL;
    v2[5] = 0x8000000000351730LL;
    OUTLINED_FUNCTION_8_84(22LL);
    unint64_t v4 = lazy protocol witness table accessor for type PhoneError and conformance PhoneError();
    uint64_t v5 = OUTLINED_FUNCTION_11_85(v4);
    OUTLINED_FUNCTION_17_65(v5, v6);
    uint64_t v7 = outlined destroy of PhoneError((uint64_t)v2);
    swift_willThrow(v7, v8, v9, v10, v11, v12, v13, v14);
    uint64_t v15 = v1;
  }

  else
  {
    uint64_t v16 = OUTLINED_FUNCTION_23_60();
    if (v17)
    {
      OUTLINED_FUNCTION_18_64(v16, v17);
      swift_bridgeObjectRelease();
    }

    OUTLINED_FUNCTION_13_5(v1);
    uint64_t v18 = type metadata accessor for SpeakableString(0LL);
    uint64_t v15 = OUTLINED_FUNCTION_29_46(v18);
  }

  OUTLINED_FUNCTION_13_5(v15);
  OUTLINED_FUNCTION_7_1();
}

void static CallRecordViewUtils.generatedDisplayCallDetail(searchCallHistoryCATs:callRecord:)( uint64_t a1@<X8>)
{
  if (OUTLINED_FUNCTION_25_56() == 1)
  {
    OUTLINED_FUNCTION_13_5(v3);
    void *v2 = 0xD000000000000027LL;
    v2[1] = 0x8000000000344120LL;
    v2[2] = 0xD000000000000035LL;
    v2[3] = 0x80000000003516F0LL;
    v2[4] = 0xD00000000000003DLL;
    v2[5] = 0x8000000000351770LL;
    OUTLINED_FUNCTION_8_84(37LL);
    unint64_t v4 = lazy protocol witness table accessor for type PhoneError and conformance PhoneError();
    uint64_t v5 = OUTLINED_FUNCTION_11_85(v4);
    OUTLINED_FUNCTION_17_65(v5, v6);
    uint64_t v7 = outlined destroy of PhoneError((uint64_t)v2);
    swift_willThrow(v7, v8, v9, v10, v11, v12, v13, v14);
    uint64_t v15 = v1;
  }

  else
  {
    uint64_t v16 = OUTLINED_FUNCTION_23_60();
    if (v17)
    {
      OUTLINED_FUNCTION_18_64(v16, v17);
      swift_bridgeObjectRelease();
    }

    OUTLINED_FUNCTION_13_5(v1);
    uint64_t v18 = type metadata accessor for SpeakableString(0LL);
    uint64_t v15 = OUTLINED_FUNCTION_29_46(v18);
  }

  OUTLINED_FUNCTION_13_5(v15);
  OUTLINED_FUNCTION_7_1();
}

uint64_t static CallRecordViewUtils.generatedDisplayName(searchCallHistoryCATsSimple:callRecord:)( void *a1, uint64_t a2)
{
  unint64_t v4 = *(int **)(class metadata base offset for SearchCallHistoryCATsSimple + *a1 + 16);
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  uint64_t v5 = (void *)swift_task_alloc(v4[1]);
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = static CallRecordViewUtils.generatedDisplayName(searchCallHistoryCATsSimple:callRecord:);
  return v7(a2);
}

uint64_t static CallRecordViewUtils.generatedDisplayName(searchCallHistoryCATsSimple:callRecord:)(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 24) = a1;
  swift_task_dealloc();
  if (v1) {
    return (*(uint64_t (**)(void))(v3 + 8))();
  }
  else {
    return swift_task_switch( static CallRecordViewUtils.generatedDisplayName(searchCallHistoryCATsSimple:callRecord:),  0LL,  0LL);
  }
}

uint64_t static CallRecordViewUtils.generatedDisplayName(searchCallHistoryCATsSimple:callRecord:)()
{
  id v1 = [*(id *)(v0 + 24) dialog];
  uint64_t v2 = type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for DialogElement,  &OBJC_CLASS___DialogElement_ptr);
  uint64_t v3 = OUTLINED_FUNCTION_153_2(v2);

  if ((unint64_t)v3 >> 62)
  {
    if (v3 < 0) {
      uint64_t v11 = v3;
    }
    else {
      uint64_t v11 = v3 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    uint64_t v12 = _CocoaArrayWrapper.endIndex.getter(v11);
    OUTLINED_FUNCTION_62();
    if (v12) {
      goto LABEL_3;
    }
LABEL_10:
    uint64_t v13 = *(void **)(v0 + 24);
    OUTLINED_FUNCTION_62();

    uint64_t v8 = 0LL;
    uint64_t v10 = 0LL;
    return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v8, v10);
  }

void static CallRecordViewUtils.buildPunchOutForVoicemail(callRecord:)(void *a1)
{
  uint64_t v105 = type metadata accessor for URL(0LL);
  uint64_t v100 = *(void *)(v105 - 8);
  __chkstk_darwin();
  v102 = (char *)&v97 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  v104 = (char *)&v97 - v3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v97 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for URL?);
  __chkstk_darwin();
  v101 = (char *)&v97 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  v99 = (char *)&v97 - v7;
  __chkstk_darwin();
  v98 = (char *)&v97 - v8;
  __chkstk_darwin();
  uint64_t v10 = (char *)&v97 - v9;
  __chkstk_darwin();
  v103 = (char *)&v97 - v11;
  uint64_t v12 = type metadata accessor for UUID(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin();
  uint64_t v15 = (char *)&v97 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v17 = (char *)&v97 - v16;
  id v106 = [objc_allocWithZone(SAUIAppPunchOut) init];
  outlined bridged method (ob) of @objc SABaseClientBoundCommand.aceId.getter(v106);
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  if (!v19)
  {
    id v20 = v106;
    uint64_t v21 = UUID.init()(v20);
    uint64_t v22 = UUID.uuidString.getter(v21);
    uint64_t v24 = v23;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v17, v12);
    outlined bridged method (mbnn) of @objc SABaseClientBoundCommand.aceId.setter(v22, v24, v20);
  }

  id v25 = [a1 identifier];
  uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
  uint64_t v28 = v27;

  UUID.init(uuidString:)(v26, v28);
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload((uint64_t)v5, 1LL, v12) == 1)
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v5,  (uint64_t *)&demangling cache variable for type metadata for UUID?);
    id v29 = [a1 identifier];
    unint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
    unint64_t v32 = v31;

    uint64_t v33 = HIBYTE(v32) & 0xF;
    uint64_t v34 = v30 & 0xFFFFFFFFFFFFLL;
    if ((v32 & 0x2000000000000000LL) != 0) {
      uint64_t v35 = HIBYTE(v32) & 0xF;
    }
    else {
      uint64_t v35 = v30 & 0xFFFFFFFFFFFFLL;
    }
    if (!v35)
    {
      swift_bridgeObjectRelease();
      uint64_t v36 = (uint64_t)v103;
      v37 = v104;
      uint64_t v38 = v105;
      v39 = v102;
      goto LABEL_62;
    }

    uint64_t v36 = (uint64_t)v103;
    v37 = v104;
    uint64_t v38 = v105;
    v39 = v102;
    if ((v32 & 0x1000000000000000LL) != 0)
    {
      uint64_t v41 = (uint64_t)specialized _parseInteger<A, B>(ascii:radix:)(v30, v32, 10LL);
      char v43 = v96;
      goto LABEL_51;
    }

    if ((v32 & 0x2000000000000000LL) == 0)
    {
      if ((v30 & 0x1000000000000000LL) != 0) {
        v40 = (unsigned __int8 *)((v32 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        v40 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v30, v32);
      }
      uint64_t v41 = (uint64_t)specialized closure #1 in FixedWidthInteger.init<A>(_:radix:)(v40, v34, 10LL);
      char v43 = v42 & 1;
LABEL_51:
      swift_bridgeObjectRelease();
      if ((v43 & 1) == 0)
      {
        id v61 = [(id)objc_opt_self(NSURL) phoneAppVoicemailURLForRecordID:v41];
        if (!v61)
        {
          uint64_t v63 = 1LL;
          uint64_t v50 = (uint64_t)v101;
          uint64_t v10 = v98;
LABEL_70:
          __swift_storeEnumTagSinglePayload((uint64_t)v10, v63, 1LL, v38);
          goto LABEL_71;
        }

        v62 = v61;
        uint64_t v10 = v98;
LABEL_68:
        static URL._unconditionallyBridgeFromObjectiveC(_:)(v62);

        uint64_t v63 = 0LL;
        uint64_t v50 = (uint64_t)v101;
        goto LABEL_70;
      }

LABEL_62:
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v67 = type metadata accessor for Logger(0LL);
      uint64_t v68 = __swift_project_value_buffer(v67, (uint64_t)static Logger.siriPhone);
      v69 = (os_log_s *)Logger.logObject.getter(v68);
      os_log_type_t v70 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v69, v70))
      {
        v71 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)v71 = 0;
        _os_log_impl( &dword_0,  v69,  v70,  "#CallRecordViewUtils Unrecognized voicemail identifier, just opening voicemail tab",  v71,  2u);
        swift_slowDealloc(v71, -1LL, -1LL);
      }

      id v72 = [(id)objc_opt_self(NSURL) phoneAppVoicemailURLForRecordID:-1];
      if (!v72)
      {
        uint64_t v63 = 1LL;
        uint64_t v50 = (uint64_t)v101;
        uint64_t v10 = v99;
        goto LABEL_70;
      }

      v62 = v72;
      uint64_t v10 = v99;
      goto LABEL_68;
    }

    v107[0] = v30;
    v107[1] = v32 & 0xFFFFFFFFFFFFFFLL;
    unint64_t v48 = v30 >> 8;
    unint64_t v49 = v30 >> 16;
    if (v30 == 43)
    {
      if (!v33) {
        goto LABEL_86;
      }
      uint64_t v41 = (BYTE1(v30) - 48);
      if (v33 != 2)
      {
        unsigned __int8 v51 = v49 - 48;
        if (v51 > 9u) {
          goto LABEL_38;
        }
        uint64_t v41 = 10LL * v41 + v51;
        uint64_t v52 = v33 - 3;
        if (v52)
        {
          v53 = (unsigned __int8 *)v107 + 3;
          while (1)
          {
            unsigned int v54 = *v53 - 48;
            if (v54 > 9) {
              goto LABEL_38;
            }
            uint64_t v55 = 10 * v41;
            uint64_t v41 = v55 + v54;
            char v43 = 0;
            ++v53;
            if (!--v52) {
              goto LABEL_51;
            }
          }
        }
      }
    }

    else
    {
      if (v30 == 45)
      {
        if (v33)
        {
          if (v33 != 1 && (BYTE1(v30) - 48) <= 9u)
          {
            if (v33 == 2)
            {
              char v43 = 0;
              uint64_t v41 = -(uint64_t)(BYTE1(v30) - 48);
              goto LABEL_51;
            }

            if ((BYTE2(v30) - 48) <= 9u)
            {
              uint64_t v41 = -10LL * (BYTE1(v30) - 48) - (BYTE2(v30) - 48);
              uint64_t v60 = v33 - 3;
              if (!v60) {
                goto LABEL_50;
              }
              v64 = (unsigned __int8 *)v107 + 3;
              while (1)
              {
                unsigned int v65 = *v64 - 48;
                if (v65 > 9) {
                  break;
                }
                uint64_t v66 = 10 * v41;
                uint64_t v41 = v66 - v65;
                char v43 = 0;
                ++v64;
                if (!--v60) {
                  goto LABEL_51;
                }
              }
            }
          }

id static CallRecordViewUtils.buildPunchOutForOpenCallRecord(callRecord:)(void *a1)
{
  uint64_t v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for UUID(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v8 = [objc_allocWithZone(SAUIAppPunchOut) init];
  outlined bridged method (ob) of @objc SABaseClientBoundCommand.aceId.getter(v8);
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  if (!v10)
  {
    id v11 = v8;
    uint64_t v12 = UUID.init()(v11);
    uint64_t v13 = UUID.uuidString.getter(v12);
    uint64_t v15 = v14;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    outlined bridged method (mbnn) of @objc SABaseClientBoundCommand.aceId.setter(v13, v15, v11);
  }

  id v16 = [a1 identifier];
  uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  uint64_t v19 = v18;

  unint64_t v26 = 0xD000000000000020LL;
  unint64_t v27 = 0x800000000034F540LL;
  v20._countAndFlagsBits = v17;
  v20._object = v19;
  String.append(_:)(v20);
  swift_bridgeObjectRelease();
  URL.init(string:)(v26, v27);
  swift_bridgeObjectRelease();
  uint64_t v21 = type metadata accessor for URL(0LL);
  uint64_t v23 = 0LL;
  if (__swift_getEnumTagSinglePayload((uint64_t)v3, 1LL, v21) != 1)
  {
    URL._bridgeToObjectiveC()(v22);
    uint64_t v23 = v24;
    (*(void (**)(char *, uint64_t))(*(void *)(v21 - 8) + 8LL))(v3, v21);
  }

  [v8 setPunchOutUri:v23];

  return v8;
}

void static CallRecordViewUtils.generateDisplayTime(dateTime:formattedDate:)( uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v39 = a3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  v37 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v36 - v6;
  __chkstk_darwin();
  uint64_t v9 = (char *)&v36 - v8;
  uint64_t v10 = OUTLINED_FUNCTION_26_0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v38 = (uint64_t)&v36 - v14;
  __chkstk_darwin();
  id v16 = (char *)&v36 - v15;
  __chkstk_darwin();
  uint64_t v18 = (char *)&v36 - v17;
  swift_bridgeObjectRetain();
  uint64_t v19 = OUTLINED_FUNCTION_1_34(a1, a2);
  if ((dispatch thunk of DialogCalendar.isToday.getter(v19) & 1) == 0)
  {
    if ((dispatch thunk of DialogCalendar.isYesterday.getter() & 1) != 0)
    {
      dispatch thunk of DialogCalendar.dateDescriptive.getter();
      OUTLINED_FUNCTION_83_7((uint64_t)v7);
      if (v20)
      {
        outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v7,  &demangling cache variable for type metadata for SpeakableString?);
      }

      else
      {
        uint64_t v23 = v11;
        uint64_t v24 = v38;
        OUTLINED_FUNCTION_121_8(v38, (uint64_t)v7);
        static CallRecordViewUtils.getCatLocaleString()();
        if (v25)
        {
          unint64_t v26 = (void *)objc_opt_self(&OBJC_CLASS___CATTransform);
          SpeakableString.print.getter(v26);
          NSString v27 = String._bridgeToObjectiveC()();
          OUTLINED_FUNCTION_62();
          NSString v28 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v29 = [v26 capitalize:v27 forLocale:v28];

          uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
          uint64_t v32 = v31;

          OUTLINED_FUNCTION_1_34(v30, v32);
          uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
          v33(v24, v10);
          v33((uint64_t)v18, v10);
          goto LABEL_20;
        }

        OUTLINED_FUNCTION_81_3(v24, *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
      }

      uint64_t v34 = v39;
      uint64_t v35 = (uint64_t)v18;
    }

    else
    {
      if ((dispatch thunk of DialogCalendar.isThisWeek.getter() & 1) == 0)
      {
        swift_bridgeObjectRetain();
        OUTLINED_FUNCTION_1_34(a1, a2);
        OUTLINED_FUNCTION_81_3((uint64_t)v18, *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
        goto LABEL_20;
      }

      uint64_t v22 = (uint64_t)v37;
      dispatch thunk of DialogCalendar.dayName.getter();
      OUTLINED_FUNCTION_121_8((uint64_t)v13, (uint64_t)v18);
      OUTLINED_FUNCTION_83_7(v22);
      if (v20)
      {
        OUTLINED_FUNCTION_121_8(v39, (uint64_t)v13);
        uint64_t v21 = v22;
        goto LABEL_5;
      }

      OUTLINED_FUNCTION_81_3((uint64_t)v13, *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
      uint64_t v34 = v39;
      uint64_t v35 = v22;
    }

    OUTLINED_FUNCTION_121_8(v34, v35);
    goto LABEL_20;
  }

  dispatch thunk of DialogCalendar.timeDescriptive.getter();
  OUTLINED_FUNCTION_24_52((uint64_t)v16, (uint64_t)v18);
  OUTLINED_FUNCTION_83_7((uint64_t)v9);
  if (v20)
  {
    OUTLINED_FUNCTION_24_52(v39, (uint64_t)v16);
    uint64_t v21 = (uint64_t)v9;
LABEL_5:
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v21,  &demangling cache variable for type metadata for SpeakableString?);
    goto LABEL_20;
  }

  OUTLINED_FUNCTION_81_3((uint64_t)v16, *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
  OUTLINED_FUNCTION_24_52(v39, (uint64_t)v9);
LABEL_20:
  OUTLINED_FUNCTION_7_5();
}

uint64_t static CallRecordViewUtils.getCatLocaleString()()
{
  uint64_t v0 = (void *)CATGlobals.__allocating_init(device:)(&v4);
  uint64_t v1 = dispatch thunk of CATGlobals.toDictionary.getter();
  specialized Dictionary.subscript.getter(0x656C61636F6CLL, 0xE600000000000000LL, v1, &v4);

  swift_bridgeObjectRelease();
  if (v5)
  {
    else {
      return 0LL;
    }
  }

  else
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)&v4,  &demangling cache variable for type metadata for Any?);
    return 0LL;
  }

id @nonobjc INStartCallIntent.init(destinationType:contacts:callCapability:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2)
  {
    type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for INPerson,  &OBJC_CLASS___INPerson_ptr);
    v6.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }

  else
  {
    v6.super.Class isa = 0LL;
  }

  id v7 = [v3 initWithDestinationType:a1 contacts:v6.super.isa callCapability:a3];

  return v7;
}

void outlined bridged method (pb) of @objc INCallRecord.participants.getter(void *a1)
{
  id v1 = [a1 participants];
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for INPerson,  &OBJC_CLASS___INPerson_ptr);
    OUTLINED_FUNCTION_153_2(v3);
  }

  OUTLINED_FUNCTION_2();
}

uint64_t sub_2AD23C()
{
  return swift_deallocObject(v0, 192LL, 7LL);
}

ValueMetadata *type metadata accessor for CallRecordViewUtils()
{
  return &type metadata for CallRecordViewUtils;
}

uint64_t outlined bridged method (ob) of @objc SABaseClientBoundCommand.aceId.getter(void *a1)
{
  id v2 = [a1 aceId];

  if (!v2) {
    return 0LL;
  }
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);

  return v3;
}

uint64_t OUTLINED_FUNCTION_6_100@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 72) = a1;
  return type metadata accessor for PhoneError(0LL);
}

uint64_t OUTLINED_FUNCTION_8_84@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + 48) = a1;
  *(_BYTE *)(v1 + 56) = 0;
  return swift_storeEnumTagMultiPayload(v1, v2, 2LL);
}

uint64_t OUTLINED_FUNCTION_11_85(uint64_t a1)
{
  return swift_allocError(v1, a1, 0LL, 0LL);
}

uint64_t OUTLINED_FUNCTION_16_60()
{
  return outlined consume of Data?(0LL, 0xF000000000000000LL);
}

uint64_t OUTLINED_FUNCTION_17_65(uint64_t a1, uint64_t a2)
{
  return PhoneError.logged()(a2);
}

uint64_t OUTLINED_FUNCTION_18_64(uint64_t a1, uint64_t a2)
{
  return String.toSpeakableString.getter(a1, a2);
}

void OUTLINED_FUNCTION_20_65()
{
}

uint64_t OUTLINED_FUNCTION_23_60()
{
  return Result<>.firstPrint.getter(v0);
}

uint64_t OUTLINED_FUNCTION_24_52(uint64_t a1, uint64_t a2)
{
  return v2(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_29_46(uint64_t a1)
{
  return v3;
}

  ;
}

uint64_t *IdentifyIncomingCallerDirectAction.identifier.unsafeMutableAddressor()
{
  if (one-time initialization token for identifier != -1) {
    swift_once(&one-time initialization token for identifier, one-time initialization function for identifier);
  }
  return &static IdentifyIncomingCallerDirectAction.identifier;
}

void IdentifyIncomingCallerDirectAction.__allocating_init(invocation:contactStore:)(uint64_t a1, uint64_t a2)
{
}

void *TUCallProviderIdentifier.Telephony.unsafeMutableAddressor()
{
  return &static TUCallProviderIdentifier.Telephony;
}

unint64_t static TUCallProviderIdentifier.Telephony.getter()
{
  return 0xD000000000000017LL;
}

void *TUCallProviderIdentifier.FaceTime.unsafeMutableAddressor()
{
  return &static TUCallProviderIdentifier.FaceTime;
}

unint64_t static TUCallProviderIdentifier.FaceTime.getter()
{
  return 0xD00000000000003BLL;
}

uint64_t static IdentifyIncomingCallerDirectAction.identifier.getter()
{
  if (one-time initialization token for identifier != -1) {
    swift_once(&one-time initialization token for identifier, one-time initialization function for identifier);
  }
  OUTLINED_FUNCTION_6_3();
  return OUTLINED_FUNCTION_9_0();
}

uint64_t one-time initialization function for handleTypeKey()
{
  uint64_t result = static String._unconditionallyBridgeFromObjectiveC(_:)(SKIPhoneAnnounceIncomingCallerDirectInvocationPayloadKeyHandleType);
  static IdentifyIncomingCallerDirectAction.handleTypeKey = result;
  unk_43EF10 = v1;
  return result;
}

uint64_t one-time initialization function for handleValueKey()
{
  uint64_t result = static String._unconditionallyBridgeFromObjectiveC(_:)(SKIPhoneAnnounceIncomingCallerDirectInvocationPayloadKeyHandleValue);
  static IdentifyIncomingCallerDirectAction.handleValueKey = result;
  unk_43EF20 = v1;
  return result;
}

void IdentifyIncomingCallerDirectAction.callUUID.getter(uint64_t a1, uint64_t a2)
{
}

void IdentifyIncomingCallerDirectAction.callProviderBundleId.getter(uint64_t a1, uint64_t a2)
{
}

uint64_t key path setter for IdentifyIncomingCallerDirectAction.callProviderIdentifier : IdentifyIncomingCallerDirectAction( uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = *a2;
  swift_beginAccess(*a2 + 88, v7, 1LL, 0LL);
  uint64_t v5 = *(void *)(v4 + 96);
  *(void *)(v4 + 88) = v3;
  *(void *)(v4 + 96) = v2;
  swift_bridgeObjectRetain(v2);
  return swift_bridgeObjectRelease(v5);
}

void IdentifyIncomingCallerDirectAction.callProviderIdentifier.getter(uint64_t a1, uint64_t a2)
{
}

uint64_t key path setter for IdentifyIncomingCallerDirectAction.callerContactIdentifiers : IdentifyIncomingCallerDirectAction( uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess(*a2 + 104, v6, 1LL, 0LL);
  uint64_t v4 = *(void *)(v3 + 104);
  *(void *)(v3 + 104) = v2;
  swift_bridgeObjectRetain(v2);
  return swift_bridgeObjectRelease(v4);
}

uint64_t IdentifyIncomingCallerDirectAction.callerContactIdentifiers.getter(uint64_t a1, uint64_t a2)
{
  return swift_bridgeObjectRetain();
}

uint64_t key path setter for IdentifyIncomingCallerDirectAction.handleValue : IdentifyIncomingCallerDirectAction( uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = *a2;
  swift_beginAccess(*a2 + 112, v7, 1LL, 0LL);
  uint64_t v5 = *(void *)(v4 + 120);
  *(void *)(v4 + 112) = v3;
  *(void *)(v4 + 120) = v2;
  swift_bridgeObjectRetain(v2);
  return swift_bridgeObjectRelease(v5);
}

void IdentifyIncomingCallerDirectAction.handleValue.getter(uint64_t a1, uint64_t a2)
{
}

uint64_t key path setter for IdentifyIncomingCallerDirectAction.handleType : IdentifyIncomingCallerDirectAction( uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  char v3 = *((_BYTE *)a1 + 8);
  uint64_t v4 = *a2;
  uint64_t result = swift_beginAccess(*a2 + 128, v6, 1LL, 0LL);
  *(void *)(v4 + 128) = v2;
  *(_BYTE *)(v4 + 136) = v3;
  return result;
}

uint64_t IdentifyIncomingCallerDirectAction.handleType.getter(uint64_t a1, uint64_t a2)
{
  return *(void *)(v2 + 128);
}

uint64_t key path setter for IdentifyIncomingCallerDirectAction.isVideo : IdentifyIncomingCallerDirectAction( char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess(*a2 + 137, v5, 1LL, 0LL);
  *(_BYTE *)(v3 + 137) = v2;
  return result;
}

uint64_t IdentifyIncomingCallerDirectAction.isVideo.getter(uint64_t a1, uint64_t a2)
{
  return *(unsigned __int8 *)(v2 + 137);
}

uint64_t key path setter for IdentifyIncomingCallerDirectAction.isCallerIdBlocked : IdentifyIncomingCallerDirectAction( char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess(*a2 + 138, v5, 1LL, 0LL);
  *(_BYTE *)(v3 + 138) = v2;
  return result;
}

uint64_t IdentifyIncomingCallerDirectAction.isCallerIdBlocked.getter(uint64_t a1, uint64_t a2)
{
  return *(unsigned __int8 *)(v2 + 138);
}

void IdentifyIncomingCallerDirectAction.__allocating_init(from:contactStore:)(uint64_t a1, void *a2)
{
}

void IdentifyIncomingCallerDirectAction.init(from:contactStore:)(uint64_t a1, uint64_t a2)
{
}

void IdentifyIncomingCallerDirectAction.callRecord.getter()
{
  uint64_t v1 = __chkstk_darwin();
  uint64_t v3 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)v0 + 152LL))(v1);
  if (v5) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = 0LL;
  }
  unint64_t v7 = 0xE000000000000000LL;
  if (v5) {
    unint64_t v7 = v5;
  }
  unint64_t v33 = v7;
  uint64_t v34 = v6;
  uint64_t v8 = type metadata accessor for Date(0LL);
  OUTLINED_FUNCTION_29_1((uint64_t)v3, v9, v10, v8);
  IdentifyIncomingCallerDirectAction.callersAsPerson.getter();
  uint64_t v32 = v11;
  else {
    uint64_t v12 = 1LL;
  }
  IdentifyIncomingCallerDirectAction.preferredCallProvider.getter();
  uint64_t v14 = v13;
  id v15 = [objc_allocWithZone(NSNumber) initWithInteger:1];
  uint64_t v16 = (*(uint64_t (**)(void))(*(void *)v0 + 200LL))();
  uint64_t v18 = v17;
  uint64_t v19 = (*(uint64_t (**)(void))(*(void *)v0 + 176LL))();
  uint64_t v21 = v20;
  id v22 = [objc_allocWithZone(NSNumber) initWithBool:(*(uint64_t (**)(void))(*(void *)v0 + 320))() & 1];
  id v23 = objc_allocWithZone(&OBJC_CLASS___INCallRecord);
  id v24 = @nonobjc INCallRecord.init(__identifier:dateCreated:caller:callRecordType:callCapability:callDuration:unseen:preferredCallProvider:numberOfCalls:providerId:providerBundleId:isCallerIdBlocked:)( v34,  v33,  (uint64_t)v3,  v32,  6LL,  v12,  0LL,  0LL,  v14,  v15,  v16,  v18,  v19,  v21,  v22);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v25 = OUTLINED_FUNCTION_15_1();
  unint64_t v26 = (os_log_s *)__swift_project_value_buffer(v25, (uint64_t)static Logger.siriPhone);
  id v27 = v24;
  Logger.logObject.getter(v27);
  os_log_type_t v28 = OUTLINED_FUNCTION_6_0();
  if (os_log_type_enabled(v26, v28))
  {
    id v29 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v30 = (void *)OUTLINED_FUNCTION_7_0(8LL);
    *(_DWORD *)id v29 = 138412290;
    id v35 = v27;
    id v31 = v27;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, &v36, v29 + 4);
    *uint64_t v30 = v27;

    _os_log_impl(&dword_0, v26, v28, "#IdentifyIncomingCallerDirectAction: INCallRecord to announce = %@.", v29, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    OUTLINED_FUNCTION_17_0((uint64_t)v30);
    OUTLINED_FUNCTION_0_2((uint64_t)v30);
    OUTLINED_FUNCTION_0_2((uint64_t)v29);
  }

  else
  {

    unint64_t v26 = (os_log_s *)v27;
  }

  OUTLINED_FUNCTION_7_5();
}

void IdentifyIncomingCallerDirectAction.handle.getter()
{
  uint64_t v1 = (*(uint64_t (**)(void))(*(void *)v0 + 248LL))();
  if (v2)
  {
    uint64_t v3 = v1;
    uint64_t v4 = v2;
    uint64_t v5 = (*(uint64_t (**)(void))(*(void *)v0 + 272LL))();
    if ((v6 & 1) != 0) {
      uint64_t v7 = 1LL;
    }
    else {
      uint64_t v7 = v5;
    }
    OUTLINED_FUNCTION_49(v5, &lazy cache variable for type metadata for TUHandle, &OBJC_CLASS___TUHandle_ptr);
    TUHandle.__allocating_init(type:value:)(v7, v3, v4);
  }

  OUTLINED_FUNCTION_6();
}

id TUHandle.__allocating_init(type:value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a3);
  id v7 = [v5 initWithType:a1 value:v6];

  return v7;
}

void IdentifyIncomingCallerDirectAction.callersAsPerson.getter()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PersonNameComponents?);
  uint64_t v2 = __chkstk_darwin();
  uint64_t v4 = (char *)&v88 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(*(void *)v0 + 224LL))(v2);
  NSString v6 = &unk_31F000;
  if (!v5)
  {
LABEL_46:
    IdentifyIncomingCallerDirectAction.handle.getter();
    if (v48
      && (unint64_t v49 = v48, v50 = [v48 personHandle], v49, v50))
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v51 = OUTLINED_FUNCTION_15_1();
      uint64_t v52 = (os_log_s *)__swift_project_value_buffer(v51, (uint64_t)static Logger.siriPhone);
      Logger.logObject.getter(v52);
      os_log_type_t v53 = OUTLINED_FUNCTION_6_0();
      if (OUTLINED_FUNCTION_63(v53))
      {
        unsigned int v54 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
        *(_WORD *)unsigned int v54 = 0;
        _os_log_impl( &dword_0,  v52,  (os_log_type_t)&unk_42A000,  "#IdentifyIncomingCallerDirectAction: Incoming call from number not associated with contact, using handle",  v54,  2u);
        OUTLINED_FUNCTION_0_2((uint64_t)v54);
      }

      id v55 = [v50 type];
      if (v55
        || (type metadata accessor for App(0LL),
            uint64_t v56 = (*(uint64_t (**)(void))(*(void *)v1 + 176LL))(),
            uint64_t v58 = App.__allocating_init(appIdentifier:)(v56, v57),
            Swift::Bool v59 = App.isFirstParty()(),
            id v55 = (id)swift_release(v58),
            v59))
      {
        OUTLINED_FUNCTION_49( (uint64_t)v55,  (unint64_t *)&lazy cache variable for type metadata for INPerson,  &OBJC_CLASS___INPerson_ptr);
        INPerson.init(personHandle:)((INPersonHandle)v50);
      }

      else
      {
        uint64_t v74 = (os_log_s *)Logger.logObject.getter(v55);
        os_log_type_t v75 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v74, v75))
        {
          os_log_type_t v76 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
          *(_WORD *)os_log_type_t v76 = 0;
          _os_log_impl( &dword_0,  v74,  v75,  "#IdentifyIncomingCallerDirectAction: Received a generic TUHandle. Using handle value as fullName.",  v76,  2u);
          OUTLINED_FUNCTION_0_2((uint64_t)v76);
        }

        id v77 = objc_allocWithZone(&OBJC_CLASS___INPersonHandle);
        id v78 = @nonobjc INPersonHandle.init(value:type:)(0LL, 0LL, 0LL);
        uint64_t v79 = type metadata accessor for PersonNameComponents(0LL);
        OUTLINED_FUNCTION_29_1((uint64_t)v4, v80, v81, v79);
        outlined bridged method (pb) of @objc INPersonHandle.value.getter(v50);
        uint64_t v83 = v82;
        uint64_t v85 = v84;
        id v86 = objc_allocWithZone(&OBJC_CLASS___INPerson);
        @nonobjc INPerson.init(personHandle:nameComponents:displayName:image:contactIdentifier:customIdentifier:)( v78,  (uint64_t)v4,  v83,  v85,  0LL,  0LL,  0LL,  0LL,  0LL);
      }
    }

    else
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v60 = OUTLINED_FUNCTION_15_1();
      __swift_project_value_buffer(v60, (uint64_t)static Logger.siriPhone);
      uint64_t v61 = swift_retain_n(v1, 2LL);
      v62 = (os_log_s *)Logger.logObject.getter(v61);
      os_log_type_t v64 = static os_log_type_t.debug.getter(v62, v63);
      if (os_log_type_enabled(v62, v64))
      {
        unsigned int v65 = (_DWORD *)OUTLINED_FUNCTION_7_0(12LL);
        uint64_t v66 = OUTLINED_FUNCTION_7_0(32LL);
        uint64_t v90 = v66;
        *unsigned int v65 = v6[237];
        char v67 = (*(uint64_t (**)(void))(*(void *)v1 + 320LL))();
        BOOL v68 = (v67 & 1) == 0;
        if ((v67 & 1) != 0) {
          uint64_t v69 = 0x64656B636F6C42LL;
        }
        else {
          uint64_t v69 = 0x656C6C6143206F4ELL;
        }
        if (v68) {
          unint64_t v70 = 0xEC00000044492072LL;
        }
        else {
          unint64_t v70 = 0xE700000000000000LL;
        }
        uint64_t v71 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v69, v70, &v90);
        uint64_t v72 = OUTLINED_FUNCTION_10_4(v71);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v72, v73, v65 + 1);
        OUTLINED_FUNCTION_0_3();
        OUTLINED_FUNCTION_62();
        OUTLINED_FUNCTION_15_34( &dword_0,  v62,  v64,  "#IdentifyIncomingCallerDirectAction: Incoming call with no callers and no handle - %s");
        OUTLINED_FUNCTION_17_0(v66);
        OUTLINED_FUNCTION_0_2(v66);
        OUTLINED_FUNCTION_0_2((uint64_t)v65);
      }

      else
      {

        OUTLINED_FUNCTION_0_3();
      }
    }

    goto LABEL_66;
  }

  uint64_t v7 = v5;
  if (!*(void *)(v5 + 16))
  {
    OUTLINED_FUNCTION_4_1();
    goto LABEL_46;
  }

  uint64_t v8 = (uint64_t)IdentifyIncomingCallerDirectAction.fetchPersons(identifiers:)();
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v9 = OUTLINED_FUNCTION_15_1();
  uint64_t v10 = (os_log_s *)__swift_project_value_buffer(v9, (uint64_t)static Logger.siriPhone);
  swift_bridgeObjectRetain_n(v7, 2LL);
  uint64_t v11 = swift_bridgeObjectRetain_n(v8, 2LL);
  uint64_t v12 = Logger.logObject.getter(v11);
  LOBYTE(v14) = static os_log_type_t.debug.getter(v12, v13);
  unint64_t v15 = (unint64_t)v8 >> 62;
  if (!os_log_type_enabled((os_log_t)v12, (os_log_type_t)v14))
  {

    OUTLINED_FUNCTION_28_16();
    OUTLINED_FUNCTION_14_19();
    goto LABEL_11;
  }

  unint64_t v89 = v4;
  NSString v6 = (void *)OUTLINED_FUNCTION_7_0(22LL);
  *(_DWORD *)NSString v6 = 134218240;
  uint64_t v16 = *(void *)(v7 + 16);
  OUTLINED_FUNCTION_4_1();
  uint64_t v90 = v16;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, &v91, (char *)v6 + 4);
  OUTLINED_FUNCTION_4_1();
  *((_WORD *)v6 + 6) = 2048;
  if (v15) {
    goto LABEL_73;
  }
  uint64_t v17 = *(void *)((char *)&dword_10 + (v8 & 0xFFFFFFFFFFFFF8LL));
  while (1)
  {
    OUTLINED_FUNCTION_50();
    uint64_t v90 = v17;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, &v91, (char *)v6 + 14);
    OUTLINED_FUNCTION_50();
    _os_log_impl( &dword_0,  (os_log_t)v12,  (os_log_type_t)v14,  "#IdentifyIncomingCallerDirectAction: Incoming call from number associated with %ld contact(s), %ld unique contact(s)",  (uint8_t *)v6,  0x16u);
    OUTLINED_FUNCTION_0_2((uint64_t)v6);

    uint64_t v4 = v89;
    NSString v6 = (void *)&unk_31F000;
LABEL_11:
    if (v15)
    {
      if (v8 < 0) {
        uint64_t v36 = v8;
      }
      else {
        uint64_t v36 = v8 & 0xFFFFFFFFFFFFFF8LL;
      }
      OUTLINED_FUNCTION_6_1();
      uint64_t v12 = _CocoaArrayWrapper.endIndex.getter(v36);
      OUTLINED_FUNCTION_50();
      if (!v12)
      {
LABEL_43:
        OUTLINED_FUNCTION_50();
        uint64_t v37 = swift_bridgeObjectRetain();
        Logger.logObject.getter(v37);
        os_log_type_t v38 = OUTLINED_FUNCTION_6_0();
        if (OUTLINED_FUNCTION_63(v38))
        {
          uint64_t v39 = (_DWORD *)OUTLINED_FUNCTION_7_0(12LL);
          uint64_t v40 = OUTLINED_FUNCTION_7_0(32LL);
          uint64_t v90 = v40;
          _DWORD *v39 = v6[237];
          unint64_t v89 = (char *)(v39 + 1);
          uint64_t v41 = swift_bridgeObjectRetain();
          uint64_t v42 = Array.description.getter(v41, &type metadata for String);
          unint64_t v44 = v43;
          OUTLINED_FUNCTION_4_1();
          uint64_t v45 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v42, v44, &v90);
          uint64_t v46 = OUTLINED_FUNCTION_10_4(v45);
          NSString v6 = (void *)&unk_31F000;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v46, v47, v89);
          OUTLINED_FUNCTION_28_16();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_15_34( &dword_0,  v10,  (os_log_type_t)v12,  "#IdentifyIncomingCallerDirectAction: Couldn't find contact for identifiers: %s");
          OUTLINED_FUNCTION_17_0(v40);
          OUTLINED_FUNCTION_0_2(v40);
          OUTLINED_FUNCTION_0_2((uint64_t)v39);
        }

        else
        {

          OUTLINED_FUNCTION_28_16();
        }

        goto LABEL_46;
      }
    }

    else
    {
      uint64_t v12 = *(void *)((char *)&dword_10 + (v8 & 0xFFFFFFFFFFFFF8LL));
      if (!v12) {
        goto LABEL_43;
      }
    }

    OUTLINED_FUNCTION_4_1();
    unint64_t v14 = v8 & 0xC000000000000001LL;
    specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v8 & 0xC000000000000001LL) == 0, v8);
    if ((v8 & 0xC000000000000001LL) != 0) {
      id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v8);
    }
    else {
      id v18 = *(id *)(v8 + 32);
    }
    uint64_t v19 = v18;
    if (v12 < 1)
    {
      __break(1u);
      goto LABEL_72;
    }

    if (!v15)
    {
      uint64_t v10 = *(os_log_s **)((char *)&dword_10 + (v8 & 0xFFFFFFFFFFFFF8LL));
      if (v10) {
        goto LABEL_24;
      }
      __break(1u);
    }

    if (v8 < 0) {
      uint64_t v20 = v8;
    }
    else {
      uint64_t v20 = v8 & 0xFFFFFFFFFFFFFF8LL;
    }
    OUTLINED_FUNCTION_6_1();
    uint64_t v21 = _CocoaArrayWrapper.endIndex.getter(v20);
    OUTLINED_FUNCTION_50();
    if (v21 < 1)
    {
      __break(1u);
      return;
    }

    OUTLINED_FUNCTION_6_1();
    uint64_t v10 = (os_log_s *)_CocoaArrayWrapper.endIndex.getter(v20);
    id v18 = (id)OUTLINED_FUNCTION_50();
LABEL_24:
LABEL_72:
    __break(1u);
LABEL_73:
    if (v8 < 0) {
      uint64_t v87 = v8;
    }
    else {
      uint64_t v87 = v8 & 0xFFFFFFFFFFFFFF8LL;
    }
    OUTLINED_FUNCTION_6_1();
    uint64_t v17 = _CocoaArrayWrapper.endIndex.getter(v87);
    OUTLINED_FUNCTION_50();
  }

  if (v14 && v12 != 1)
  {
    OUTLINED_FUNCTION_49( (uint64_t)v18,  (unint64_t *)&lazy cache variable for type metadata for INPerson,  &OBJC_CLASS___INPerson_ptr);
    Swift::Int v22 = 1LL;
    do
    {
      Swift::Int v23 = v22 + 1;
      _ArrayBuffer._typeCheckSlowPath(_:)(v22);
      Swift::Int v22 = v23;
    }

    while (v12 != v23);
  }

  if (v15)
  {
    if (v8 < 0) {
      uint64_t v28 = v8;
    }
    else {
      uint64_t v28 = v8 & 0xFFFFFFFFFFFFFF8LL;
    }
    OUTLINED_FUNCTION_6_1();
    uint64_t v24 = _CocoaArrayWrapper.subscript.getter(1LL, v12, v28);
    uint64_t v25 = v29;
    uint64_t v26 = v30;
    unint64_t v27 = v31;
    OUTLINED_FUNCTION_14_19();
  }

  else
  {
    uint64_t v24 = v8 & 0xFFFFFFFFFFFFFF8LL;
    uint64_t v25 = (v8 & 0xFFFFFFFFFFFFFF8LL) + 32;
    uint64_t v26 = 1LL;
    unint64_t v27 = (2 * v12) | 1;
  }

  specialized Array.init<A>(_:)(v24, v25, v26, v27);
  outlined bridged method (mbgnn) of @objc INPerson.alternatives.setter(v32, v19);
  OUTLINED_FUNCTION_62();
  IdentifyIncomingCallerDirectAction.handle.getter();
  if (v33)
  {
    uint64_t v34 = v33;
    id v35 = [v33 personHandle];
  }

  else
  {
    id v35 = 0LL;
  }

  [v19 setPersonHandle:v35];

LABEL_66:
  OUTLINED_FUNCTION_7_5();
}

void IdentifyIncomingCallerDirectAction.preferredCallProvider.getter()
{
  uint64_t v1 = *(uint64_t (**)(void))(*(void *)v0 + 176LL);
  uint64_t v2 = v1();
  App.__allocating_init(appIdentifier:)(v2, v3);
  if ((App.isFirstParty()()
     || (uint64_t v4 = v1(), v6 = specialized Optional<A>.isNilOrEmpty.getter(v4, v5), OUTLINED_FUNCTION_62(), (v6 & 1) != 0))
    && (uint64_t v7 = (*(uint64_t (**)(void))(*(void *)v0 + 200LL))(), v8))
  {
    uint64_t v9 = v7;
    uint64_t v10 = v8;
    if (v7 == 0xD000000000000017LL && v8 == 0x80000000003517B0LL
      || (OUTLINED_FUNCTION_22_59(0xD000000000000017LL, 0x80000000003517B0LL) & 1) != 0)
    {
      OUTLINED_FUNCTION_22();
      OUTLINED_FUNCTION_62();
    }

    else if (v9 == 0xD00000000000003BLL && v10 == 0x80000000003517D0LL)
    {
      OUTLINED_FUNCTION_62();
      OUTLINED_FUNCTION_22();
    }

    else
    {
      OUTLINED_FUNCTION_22_59(0xD00000000000003BLL, 0x80000000003517D0LL);
      OUTLINED_FUNCTION_62();
      OUTLINED_FUNCTION_22();
    }
  }

  else
  {
    OUTLINED_FUNCTION_22();
  }

  OUTLINED_FUNCTION_6();
}

void *IdentifyIncomingCallerDirectAction.fetchPersons(identifiers:)()
{
  uint64_t v0 = OUTLINED_FUNCTION_9_0();
  specialized Sequence.compactMap<A>(_:)(v0, v1);
  uint64_t KeyPath = swift_getKeyPath(&unk_33E130);
  char v6 = &_swiftEmptySetSingleton;
  swift_retain();
  unint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = specialized Sequence.filter(_:)(v3, (uint64_t)&v6, KeyPath);
  swift_bridgeObjectRelease();
  swift_release(KeyPath);
  OUTLINED_FUNCTION_50();
  return v4;
}

void key path getter for INPerson.displayName : INPerson(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = [*a1 displayName];
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  uint64_t v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

void key path setter for INPerson.displayName : INPerson(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  id v3 = String._bridgeToObjectiveC()();
  [v2 setDisplayName:v3];
}

uint64_t IdentifyIncomingCallerDirectAction.deinit()
{
  return v0;
}

uint64_t IdentifyIncomingCallerDirectAction.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 139LL, 7LL);
}

uint64_t specialized IdentifyIncomingCallerDirectAction.__allocating_init(invocation:contactStore:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v39[3] = a4;
  v39[4] = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v39);
  uint64_t v10 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32LL))( boxed_opaque_existential_1,  a2,  a4);
  uint64_t v11 = Parse.DirectInvocation.userData.getter(v10);
  if (v11)
  {
    uint64_t v12 = v11;
    if (one-time initialization token for announceTelephony != -1) {
      swift_once( &one-time initialization token for announceTelephony,  one-time initialization function for announceTelephony);
    }
    uint64_t v13 = type metadata accessor for Logger(0LL);
    __swift_project_value_buffer(v13, (uint64_t)static Logger.announceTelephony);
    uint64_t v14 = swift_bridgeObjectRetain_n(v12, 2LL);
    unint64_t v15 = (os_log_s *)Logger.logObject.getter(v14);
    os_log_type_t v17 = static os_log_type_t.debug.getter(v15, v16);
    if (os_log_type_enabled(v15, v17))
    {
      uint64_t v35 = a3;
      uint64_t v36 = a1;
      id v18 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v19 = swift_slowAlloc(32LL, -1LL);
      v38[0] = v19;
      *(_DWORD *)id v18 = 136315138;
      uint64_t v20 = swift_bridgeObjectRetain();
      uint64_t v21 = Dictionary.description.getter( v20,  &type metadata for String,  &type metadata for Any[1],  &protocol witness table for String);
      unint64_t v23 = v22;
      swift_bridgeObjectRelease();
      uint64_t v24 = v21;
      a3 = v35;
      uint64_t v37 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v24, v23, v38);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, v38, v18 + 4);
      swift_bridgeObjectRelease_n(v12, 2LL);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v15, v17, "#IdentifyIncomingCallerDirectAction: Direct Invocation payload: %s.", v18, 0xCu);
      swift_arrayDestroy(v19, 1LL);
      swift_slowDealloc(v19, -1LL, -1LL);
      uint64_t v25 = v18;
      a1 = v36;
      swift_slowDealloc(v25, -1LL, -1LL);
    }

    else
    {

      swift_bridgeObjectRelease_n(v12, 2LL);
    }

    outlined init with copy of SignalProviding((uint64_t)v39, (uint64_t)v38);
    uint64_t v32 = (*(uint64_t (**)(uint64_t, uint64_t *))(a3 + 344))(v12, v38);
    __swift_destroy_boxed_opaque_existential_1(v39);
    uint64_t v33 = type metadata accessor for Parse.DirectInvocation(0LL);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 8LL))(a1, v33);
  }

  else
  {
    if (one-time initialization token for announceTelephony != -1) {
      swift_once( &one-time initialization token for announceTelephony,  one-time initialization function for announceTelephony);
    }
    uint64_t v26 = type metadata accessor for Logger(0LL);
    uint64_t v27 = __swift_project_value_buffer(v26, (uint64_t)static Logger.announceTelephony);
    uint64_t v28 = (os_log_s *)Logger.logObject.getter(v27);
    os_log_type_t v29 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v30 = 0;
      _os_log_impl(&dword_0, v28, v29, "#IdentifyIncomingCallerDirectAction: No userData in DirectInvocation.", v30, 2u);
      swift_slowDealloc(v30, -1LL, -1LL);
    }

    __swift_destroy_boxed_opaque_existential_1(v39);
    uint64_t v31 = type metadata accessor for Parse.DirectInvocation(0LL);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v31 - 8) + 8LL))(a1, v31);
    return 0LL;
  }

  return v32;
}

uint64_t specialized IdentifyIncomingCallerDirectAction.init(from:contactStore:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v54 = a4;
  uint64_t v55 = a5;
  uint64_t v9 = __swift_allocate_boxed_opaque_existential_1(&v53);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32LL))(v9, a2, a4);
  *(_OWORD *)(a3 + 104) = 0u;
  *(_OWORD *)(a3 + 56) = 0u;
  *(_OWORD *)(a3 + 72) = 0u;
  *(_OWORD *)(a3 + 88) = 0u;
  *(_OWORD *)(a3 + 120) = 0u;
  *(_BYTE *)(a3 + 136) = 1;
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(SKIPhoneAnnounceIncomingCallerDirectInvocationPayloadKeyCallUUID);
  specialized Dictionary.subscript.getter(v10, v11, a1, &v51);
  swift_bridgeObjectRelease();
  if (v52)
  {
    int v12 = swift_dynamicCast(v50, &v51, &type metadata for Any[1]);
    if (v12) {
      uint64_t v13 = v50[0];
    }
    else {
      uint64_t v13 = 0LL;
    }
    if (v12) {
      uint64_t v14 = v50[1];
    }
    else {
      uint64_t v14 = 0LL;
    }
  }

  else
  {
    outlined destroy of Any?((uint64_t)&v51);
    uint64_t v13 = 0LL;
    uint64_t v14 = 0LL;
  }

  swift_beginAccess(a3 + 56, v50, 1LL, 0LL);
  *(void *)(a3 + 56) = v13;
  *(void *)(a3 + 64) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(SKIPhoneAnnounceIncomingCallerDirectInvocationPayloadKeyCallProviderBundleId);
  specialized Dictionary.subscript.getter(v15, v16, a1, &v51);
  swift_bridgeObjectRelease();
  if (v52)
  {
    int v17 = swift_dynamicCast(v49, &v51, &type metadata for Any[1]);
    if (v17) {
      uint64_t v18 = v49[0];
    }
    else {
      uint64_t v18 = 0LL;
    }
    if (v17) {
      uint64_t v19 = v49[1];
    }
    else {
      uint64_t v19 = 0LL;
    }
  }

  else
  {
    outlined destroy of Any?((uint64_t)&v51);
    uint64_t v18 = 0LL;
    uint64_t v19 = 0LL;
  }

  swift_beginAccess(a3 + 72, v49, 1LL, 0LL);
  *(void *)(a3 + 72) = v18;
  *(void *)(a3 + 80) = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(SKIPhoneAnnounceIncomingCallerDirectInvocationPayloadKeyCallProviderIdentifier);
  specialized Dictionary.subscript.getter(v20, v21, a1, &v51);
  swift_bridgeObjectRelease();
  if (v52)
  {
    int v22 = swift_dynamicCast(v48, &v51, &type metadata for Any[1]);
    if (v22) {
      uint64_t v23 = v48[0];
    }
    else {
      uint64_t v23 = 0LL;
    }
    if (v22) {
      uint64_t v24 = v48[1];
    }
    else {
      uint64_t v24 = 0LL;
    }
  }

  else
  {
    outlined destroy of Any?((uint64_t)&v51);
    uint64_t v23 = 0LL;
    uint64_t v24 = 0LL;
  }

  swift_beginAccess(a3 + 88, v48, 1LL, 0LL);
  *(void *)(a3 + 88) = v23;
  *(void *)(a3 + 96) = v24;
  swift_bridgeObjectRelease();
  uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(SKIPhoneAnnounceIncomingCallerDirectInvocationPayloadKeyCallerContactIdentifiers);
  specialized Dictionary.subscript.getter(v25, v26, a1, &v51);
  swift_bridgeObjectRelease();
  if (v52)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    else {
      uint64_t v27 = 0LL;
    }
  }

  else
  {
    outlined destroy of Any?((uint64_t)&v51);
    uint64_t v27 = 0LL;
  }

  swift_beginAccess(a3 + 104, v47, 1LL, 0LL);
  *(void *)(a3 + 104) = v27;
  swift_bridgeObjectRelease();
  if (one-time initialization token for handleTypeKey != -1) {
    swift_once(&one-time initialization token for handleTypeKey, one-time initialization function for handleTypeKey);
  }
  uint64_t v28 = static IdentifyIncomingCallerDirectAction.handleTypeKey;
  uint64_t v29 = unk_43EF10;
  swift_bridgeObjectRetain();
  specialized Dictionary.subscript.getter(v28, v29, a1, &v51);
  swift_bridgeObjectRelease();
  if (v52)
  {
    if ((swift_dynamicCast(v46, &v51, &type metadata for Any[1]) & 1) != 0)
    {
      char v30 = 0;
      uint64_t v31 = v46[0];
      goto LABEL_37;
    }
  }

  else
  {
    outlined destroy of Any?((uint64_t)&v51);
  }

  uint64_t v31 = 0LL;
  char v30 = 1;
LABEL_37:
  swift_beginAccess(a3 + 128, v46, 1LL, 0LL);
  *(void *)(a3 + 128) = v31;
  *(_BYTE *)(a3 + 136) = v30;
  if (one-time initialization token for handleValueKey != -1) {
    swift_once(&one-time initialization token for handleValueKey, one-time initialization function for handleValueKey);
  }
  uint64_t v32 = static IdentifyIncomingCallerDirectAction.handleValueKey;
  uint64_t v33 = unk_43EF20;
  swift_bridgeObjectRetain();
  specialized Dictionary.subscript.getter(v32, v33, a1, &v51);
  swift_bridgeObjectRelease();
  if (v52)
  {
    int v34 = swift_dynamicCast(v45, &v51, &type metadata for Any[1]);
    if (v34) {
      uint64_t v35 = v45[0];
    }
    else {
      uint64_t v35 = 0LL;
    }
    if (v34) {
      uint64_t v36 = v45[1];
    }
    else {
      uint64_t v36 = 0LL;
    }
  }

  else
  {
    outlined destroy of Any?((uint64_t)&v51);
    uint64_t v35 = 0LL;
    uint64_t v36 = 0LL;
  }

  swift_beginAccess(a3 + 112, v45, 1LL, 0LL);
  *(void *)(a3 + 112) = v35;
  *(void *)(a3 + 120) = v36;
  swift_bridgeObjectRelease();
  uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(SKIPhoneAnnounceIncomingCallerDirectInvocationPayloadKeyIsVideo);
  specialized Dictionary.subscript.getter(v37, v38, a1, &v51);
  swift_bridgeObjectRelease();
  if (v52)
  {
    if ((swift_dynamicCast(&v44, &v51, &type metadata for Any[1]) & 1) != 0)
    {
      char v39 = v44;
      goto LABEL_52;
    }
  }

  else
  {
    outlined destroy of Any?((uint64_t)&v51);
  }

  char v39 = 0;
LABEL_52:
  *(_BYTE *)(a3 + 137) = v39;
  uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(SKIPhoneAnnounceIncomingCallerDirectInvocationPayloadKeyIsCallerIdBlocked);
  specialized Dictionary.subscript.getter(v40, v41, a1, &v51);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v52)
  {
    outlined destroy of Any?((uint64_t)&v51);
    goto LABEL_56;
  }

  if ((swift_dynamicCast(&v44, &v51, &type metadata for Any[1]) & 1) == 0)
  {
LABEL_56:
    char v42 = 0;
    goto LABEL_57;
  }

  char v42 = v44;
LABEL_57:
  *(_BYTE *)(a3 + 138) = v42;
  outlined init with take of AppSelectionSignalComponent(&v53, a3 + 16);
  return a3;
}

void sub_2AF2CC()
{
  *uint64_t v0 = (*(uint64_t (**)(void))(v1 + 152))();
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

void sub_2AF2F4()
{
  *uint64_t v0 = (*(uint64_t (**)(void))(v1 + 176))();
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

void sub_2AF31C()
{
  *uint64_t v0 = (*(uint64_t (**)(void))(v1 + 200))();
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

void sub_2AF344()
{
  *uint64_t v0 = (*(uint64_t (**)(void))(v1 + 224))();
  OUTLINED_FUNCTION_2();
}

void sub_2AF36C()
{
  *uint64_t v0 = (*(uint64_t (**)(void))(v1 + 248))();
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

void sub_2AF394()
{
  *(void *)uint64_t v0 = (*(uint64_t (**)(void))(v1 + 272))();
  *(_BYTE *)(v0 + 8) = v2 & 1;
  OUTLINED_FUNCTION_2();
}

void sub_2AF3C4()
{
  *uint64_t v0 = (*(uint64_t (**)(void))(v1 + 296))() & 1;
  OUTLINED_FUNCTION_2();
}

void sub_2AF3F0()
{
  *uint64_t v0 = (*(uint64_t (**)(void))(v1 + 320))() & 1;
  OUTLINED_FUNCTION_2();
}

ValueMetadata *type metadata accessor for TUCallProviderIdentifier()
{
  return &type metadata for TUCallProviderIdentifier;
}

uint64_t type metadata accessor for IdentifyIncomingCallerDirectAction()
{
  return objc_opt_self(&OBJC_CLASS____TtC27PhoneCallFlowDelegatePlugin34IdentifyIncomingCallerDirectAction);
}

const char *keypath_get_selector_displayName()
{
  return "displayName";
}

uint64_t OUTLINED_FUNCTION_11_86()
{
  return specialized IdentifyIncomingCallerDirectAction.init(from:contactStore:)(v1, v4, v0, v2, v3);
}

uint64_t OUTLINED_FUNCTION_13_86(uint64_t a1, uint64_t a2)
{
  return __swift_mutable_project_boxed_opaque_existential_1(a2, *(void *)(a2 + 24));
}

uint64_t OUTLINED_FUNCTION_22_59(uint64_t a1, uint64_t a2)
{
  return _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, v3, v2, 0LL);
}

void static PhonePerson.make(phonePerson:isRelated:locale:)(void *a1, char a2, uint64_t a3)
{
}

void *PhonePerson.Options.friendlyPhoneNumberNameShort.unsafeMutableAddressor()
{
  return &static PhonePerson.Options.friendlyPhoneNumberNameShort;
}

void *PhonePerson.Options.relative.unsafeMutableAddressor()
{
  return &static PhonePerson.Options.relative;
}

uint64_t protocol witness for SetAlgebra.formIntersection(_:) in conformance PhonePerson.Options(uint64_t *a1)
{
  return specialized OptionSet<>.formIntersection(_:)(*a1);
}

BOOL protocol witness for SetAlgebra.isSubset(of:) in conformance PhonePerson.Options(uint64_t *a1)
{
  return specialized SetAlgebra.isSubset(of:)(*a1, *v1);
}

uint64_t DialogPerson.init(person:locale:isRelative:)(void *a1, uint64_t a2, int a3)
{
  LODWORD(v3) = a3;
  uint64_t v6 = type metadata accessor for Locale(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (a1)
  {
    int v18 = (int)v3;
    id v3 = a1;
    id v10 = [v3 displayName];
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    uint64_t v13 = v12;

    LOBYTE(OUTLINED_FUNCTION_45_9(v8, v9, v10) = String.isPhoneNumber.getter(v11, v13);
    swift_bridgeObjectRelease();
    if ((v10 & 1) != 0)
    {
      uint64_t v14 = DialogPerson.__allocating_init(unnamedPerson:)(v3);

      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a2, v6);
      return v14;
    }

    LOBYTE(v3) = v18;
  }

  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  uint64_t v14 = DialogPerson.__allocating_init(person:locale:useConversationalName:)(a1, v9, v3 & 1);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  swift_retain();
  v15(a2, v6);
  if (v14) {
    swift_release(v14);
  }
  return v14;
}

void PhonePerson.toPersonAndVisualData(contactId:command:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  v29[0] = a3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin();
  uint64_t v8 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  id v10 = (char *)v29 - v9;
  uint64_t v11 = type metadata accessor for ContactImage(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  uint64_t v14 = (void *)((char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
  uint64_t v16 = swift_allocObject(v15, 48LL, 7LL);
  *(_OWORD *)(v16 + 16) = xmmword_31D870;
  *(void *)(v16 + 32) = a1;
  *(void *)(v16 + 40) = a2;
  *uint64_t v14 = v16;
  (*(void (**)(uint64_t *, void, uint64_t))(v12 + 104))(v14, enum case for ContactImage.contacts(_:), v11);
  uint64_t v17 = type metadata accessor for PhonePersonAndVisualData.Builder(0LL);
  OUTLINED_FUNCTION_15_2(v17);
  PhonePersonAndVisualData.Builder.init()();
  uint64_t v19 = *(uint64_t (**)(uint64_t))(*(void *)v18 + 184LL);
  swift_bridgeObjectRetain();
  uint64_t v20 = v19(v4);
  uint64_t v21 = OUTLINED_FUNCTION_38_1();
  uint64_t v22 = ContactImage.serializedData.getter(v21);
  unint64_t v24 = v23;
  Data.base64EncodedString(options:)(0LL);
  outlined consume of Data._Representation(v22, v24);
  String.toSpeakableString.getter();
  swift_bridgeObjectRelease();
  type metadata accessor for SpeakableString(0LL);
  uint64_t v25 = 1LL;
  OUTLINED_FUNCTION_44_2((uint64_t)v10, 0LL);
  uint64_t v26 = (*(uint64_t (**)(char *))(*(void *)v20 + 200LL))(v10);
  swift_release(v20);
  outlined destroy of SpeakableString?((uint64_t)v10);
  if (v29[0] && AceObject.serializeToBase64()().value._object)
  {
    String.toSpeakableString.getter();
    swift_bridgeObjectRelease();
    uint64_t v25 = 0LL;
  }

  OUTLINED_FUNCTION_44_2((uint64_t)v8, v25);
  uint64_t v27 = (*(uint64_t (**)(char *))(*(void *)v26 + 216LL))(v8);
  swift_release(v26);
  uint64_t v28 = outlined destroy of SpeakableString?((uint64_t)v8);
  (*(void (**)(uint64_t))(*(void *)v27 + 232LL))(v28);
  OUTLINED_FUNCTION_38_1();
  (*(void (**)(uint64_t *, uint64_t))(v12 + 8))(v14, v11);
  OUTLINED_FUNCTION_7_5();
}

unint64_t lazy protocol witness table accessor for type PhonePerson and conformance DialogPerson()
{
  unint64_t result = lazy protocol witness table cache variable for type PhonePerson and conformance DialogPerson;
  if (!lazy protocol witness table cache variable for type PhonePerson and conformance DialogPerson)
  {
    uint64_t v1 = type metadata accessor for PhonePerson(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for DialogPerson, v1);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhonePerson and conformance DialogPerson);
  }

  return result;
}

unint64_t lazy protocol witness table accessor for type PhonePerson.Options and conformance PhonePerson.Options()
{
  unint64_t result = lazy protocol witness table cache variable for type PhonePerson.Options and conformance PhonePerson.Options;
  if (!lazy protocol witness table cache variable for type PhonePerson.Options and conformance PhonePerson.Options)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhonePerson.Options,  &type metadata for PhonePerson.Options);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhonePerson.Options and conformance PhonePerson.Options);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhonePerson.Options and conformance PhonePerson.Options;
  if (!lazy protocol witness table cache variable for type PhonePerson.Options and conformance PhonePerson.Options)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhonePerson.Options,  &type metadata for PhonePerson.Options);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhonePerson.Options and conformance PhonePerson.Options);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhonePerson.Options and conformance PhonePerson.Options;
  if (!lazy protocol witness table cache variable for type PhonePerson.Options and conformance PhonePerson.Options)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhonePerson.Options,  &type metadata for PhonePerson.Options);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhonePerson.Options and conformance PhonePerson.Options);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhonePerson.Options and conformance PhonePerson.Options;
  if (!lazy protocol witness table cache variable for type PhonePerson.Options and conformance PhonePerson.Options)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhonePerson.Options,  &type metadata for PhonePerson.Options);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhonePerson.Options and conformance PhonePerson.Options);
  }

  return result;
}

ValueMetadata *type metadata accessor for PhonePerson.Options()
{
  return &type metadata for PhonePerson.Options;
}

void *AppIntentConstants.underlyingErrorKey.unsafeMutableAddressor()
{
  return &static AppIntentConstants.underlyingErrorKey;
}

unint64_t static AppIntentConstants.underlyingErrorKey.getter()
{
  return 0xD000000000000024LL;
}

ValueMetadata *type metadata accessor for AppIntentConstants()
{
  return &type metadata for AppIntentConstants;
}

void PhoneCallFlow.__allocating_init(input:sharedGlobals:appFinder:eligibleAppsFinder:)()
{
}

{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  OUTLINED_FUNCTION_29_2();
  uint64_t v2 = v1;
  uint64_t v4 = (void *)v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  id v10 = v9;
  uint64_t v11 = *(void *)(v3 + 24);
  uint64_t v12 = *(void *)(v3 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v3, v11);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v15 = v14 - v13;
  (*(void (**)(uint64_t))(v16 + 16))(v14 - v13);
  v2(v10, v8, v6, v15, v0, v11, v12);
  __swift_destroy_boxed_opaque_existential_1(v4);
  OUTLINED_FUNCTION_7_5();
}

void specialized _ArrayProtocol.filter(_:)(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    unint64_t v5 = 0LL;
    uint64_t v6 = a1 + 40;
    uint64_t v7 = _swiftEmptyArrayStorage;
    uint64_t v17 = a1 + 40;
    do
    {
      uint64_t v8 = (uint64_t *)(v6 + 16 * v5);
      unint64_t v9 = v5;
      while (1)
      {
        if (v9 >= *(void *)(a1 + 16))
        {
          __break(1u);
          return;
        }

        uint64_t v11 = *(v8 - 1);
        uint64_t v10 = *v8;
        unint64_t v5 = v9 + 1;
        uint64_t v12 = a2[1];
        swift_bridgeObjectRetain();
        specialized Set.contains(_:)(v11, v10, v12);
        if ((v13 & 1) != 0) {
          break;
        }
        swift_bridgeObjectRelease();
        v8 += 2;
        ++v9;
        if (v4 == v5) {
          goto LABEL_13;
        }
      }

      v19[0] = v7;
      if ((swift_isUniquelyReferenced_nonNull_native(v7) & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v7 = (void *)v19[0];
      }

      unint64_t v14 = v7[2];
      unint64_t v15 = v14 + 1;
      if (v14 >= v7[3] >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        unint64_t v15 = v14 + 1;
        uint64_t v7 = (void *)v19[0];
      }

      v7[2] = v15;
      uint64_t v16 = &v7[2 * v14];
      v16[4] = v11;
      v16[5] = v10;
      uint64_t v6 = v17;
    }

    while (v4 - 1 != v9);
  }

uint64_t key path setter for PhoneCallFlow.state : PhoneCallFlow(uint64_t a1, void *a2)
{
  unint64_t v5 = &v9[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  outlined init with copy of PhoneCallFlow.State(a1, (uint64_t)v5);
  uint64_t v6 = *a2 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin13PhoneCallFlow_state;
  swift_beginAccess(v6, v9, 33LL, 0LL);
  outlined assign with take of PhoneCallFlow.State((uint64_t)v5, v6);
  return swift_endAccess(v9);
}

uint64_t PhoneCallFlow.state.getter()
{
  uint64_t v1 = OUTLINED_FUNCTION_34_1();
  return outlined init with copy of PhoneCallFlow.State(v1, v2);
}

uint64_t PhoneCallFlow.__allocating_init(state:sharedGlobals:appFinder:eligibleAppsFinder:)()
{
  uint64_t v5 = swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
  uint64_t v6 = *(void *)(v0 + 24);
  uint64_t v7 = *(void *)(v0 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v0, v6);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v10 = v9 - v8;
  OUTLINED_FUNCTION_97_1(v9 - v8, v12, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16));
  specialized PhoneCallFlow.init(state:sharedGlobals:appFinder:eligibleAppsFinder:)(v4, v3, v2, v10, v5, v6, v7);
  char v13 = (void *)OUTLINED_FUNCTION_67();
  __swift_destroy_boxed_opaque_existential_1(v13);
  return v5;
}

void PhoneCallFlow.init(state:sharedGlobals:appFinder:eligibleAppsFinder:)()
{
}

uint64_t PhoneCallFlow.execute(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PhoneCallFlow(0LL);
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type PhoneCallFlow and conformance PhoneCallFlow,  type metadata accessor for PhoneCallFlow,  (uint64_t)&protocol conformance descriptor for PhoneCallFlow);
  return Flow.deferToExecuteAsync(_:)(a1, a2, v4, v5);
}

uint64_t PhoneCallFlow.execute()(uint64_t a1)
{
  v2[163] = v1;
  v2[162] = a1;
  v2[164] = *v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Parse?);
  v2[165] = OUTLINED_FUNCTION_12_0(v3);
  uint64_t v4 = type metadata accessor for DialogPhase(0LL);
  v2[166] = OUTLINED_FUNCTION_12_0(v4);
  uint64_t v5 = OUTLINED_FUNCTION_40_1();
  v2[167] = OUTLINED_FUNCTION_12_0(v5);
  uint64_t v6 = type metadata accessor for Parse(0LL);
  v2[168] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v2[169] = v7;
  v2[170] = swift_task_alloc((*(void *)(v7 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = OUTLINED_FUNCTION_3_4();
  v2[171] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v2[172] = v9;
  v2[173] = *(void *)(v9 + 64);
  v2[174] = OUTLINED_FUNCTION_28();
  v2[175] = OUTLINED_FUNCTION_28();
  v2[176] = OUTLINED_FUNCTION_28();
  v2[177] = OUTLINED_FUNCTION_28();
  v2[178] = OUTLINED_FUNCTION_28();
  v2[179] = type metadata accessor for PhoneCallFlow.State(0LL);
  v2[180] = OUTLINED_FUNCTION_28();
  v2[181] = OUTLINED_FUNCTION_28();
  v2[182] = OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void (*v6)(uint64_t);
  if (*(void *)(v1 + 1528))
  {
    uint64_t v2 = v1 + 1096;
    uint64_t v3 = (void *)(v1 + 1264);
    uint64_t v4 = (void *)(v1 + 1272);
    static ExecuteResponse.complete(next:)(*(void *)(v1 + 1528));
    OUTLINED_FUNCTION_122();
  }

  else
  {
    uint64_t v2 = v1 + 1112;
    uint64_t v4 = (void *)(v1 + 1136);
    uint64_t v3 = (void *)(v1 + 1280);
    static ExecuteResponse.complete()(a1);
  }

  swift_release(*(void *)(v1 + 64));
  *uint64_t v3 = *(void *)(v1 + 72);
  outlined release of Set<String>(v3);
  outlined init with take of ContactNeedsValueGuardFlow<INStartCallIntent>.FlowState( v1 + 80,  v2,  &demangling cache variable for type metadata for String?);
  outlined release of String?(v2);
  *uint64_t v4 = *(void *)(v1 + 104);
  outlined release of Set<String>(v4);
  OUTLINED_FUNCTION_91_16();
  uint64_t v5 = OUTLINED_FUNCTION_34_1();
  v6(v5);
  OUTLINED_FUNCTION_9_81();
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_14_3();
  OUTLINED_FUNCTION_29_17();
  OUTLINED_FUNCTION_25();
  swift_task_dealloc();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_5_8(*(uint64_t (**)(void))(v1 + 8));
}

void PhoneCallFlow.execute()()
{
  uint64_t v1 = *(void *)(v0 + 1456);
  uint64_t v2 = *(void *)(v0 + 1432);
  (*(void (**)(void))(**(void **)(v0 + 1304) + 152LL))();
  uint64_t v3 = (char *)&loc_2B0170 + *((int *)qword_2B1BF8 + swift_getEnumCaseMultiPayload(v1, v2));
  __asm { BR              X10 }

uint64_t sub_2B0180( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t *a14, uint64_t a15, void *a16, void *a17, void *a18, void *a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35)
{
  *(void *)(v37 - 144) = v36;
  uint64_t v38 = *(uint64_t **)(v37 - 136);
  uint64_t v39 = v38[170];
  uint64_t v40 = v38[169];
  uint64_t v41 = (void *)v38[163];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v38[172] + 32))(v38[178], v38[182], v38[171]);
  uint64_t v42 = v41[10];
  uint64_t v43 = v41[11];
  *(void *)(v37 - 152) = v41 + 7;
  OUTLINED_FUNCTION_42(v41 + 7);
  uint64_t v44 = (*(uint64_t (**)(uint64_t, uint64_t))(v43 + 72))(v42, v43);
  Input.parse.getter(v44);
  (*(void (**)(uint64_t))(*(void *)v44 + 192LL))(v39);
  OUTLINED_FUNCTION_122();
  OUTLINED_FUNCTION_125_9(*(uint64_t (**)(uint64_t, uint64_t))(v40 + 8));
  if (v38[107])
  {
    uint64_t v45 = *(void *)(v37 - 144);
    outlined init with take of AppSelectionSignalComponent(v35, v45);
    OUTLINED_FUNCTION_54_25();
    if (PhoneCallNLIntent.hasCancellation()())
    {
      uint64_t v46 = v41[11];
      uint64_t v47 = *(void **)(v37 - 152);
      OUTLINED_FUNCTION_82(v47);
      uint64_t v48 = OUTLINED_FUNCTION_104(*(uint64_t (**)(uint64_t, uint64_t))(v46 + 56));
      char v49 = (*(uint64_t (**)(uint64_t))(*(void *)v48 + 208LL))(v48);
      OUTLINED_FUNCTION_38_1();
      if ((v49 & 1) != 0)
      {
        __swift_project_boxed_opaque_existential_1(v47, v41[10]);
        uint64_t v44 = (uint64_t)a18;
        OUTLINED_FUNCTION_7_76();
        __swift_project_boxed_opaque_existential_1(a18, v38[47]);
        OUTLINED_FUNCTION_7_76();
        uint64_t v50 = v38[38];
        OUTLINED_FUNCTION_82(a19);
        char v51 = OUTLINED_FUNCTION_104(*(uint64_t (**)(uint64_t, uint64_t))(v50 + 8));
        OUTLINED_FUNCTION_115_10();
        OUTLINED_FUNCTION_91_16();
        if ((v51 & 1) != 0)
        {
          __swift_project_boxed_opaque_existential_1(v47, v41[10]);
          OUTLINED_FUNCTION_7_76();
          __swift_project_boxed_opaque_existential_1(a16, v38[32]);
          OUTLINED_FUNCTION_7_76();
          OUTLINED_FUNCTION_82(a17);
          uint64_t v52 = OUTLINED_FUNCTION_98();
          uint64_t v54 = v53(v52);
          __swift_destroy_boxed_opaque_existential_1(a17);
          OUTLINED_FUNCTION_115_10();
          if ((v54 & 1) != 0)
          {
            if (one-time initialization token for siriPhone != -1) {
              swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
            }
            uint64_t v55 = OUTLINED_FUNCTION_15_1();
            OUTLINED_FUNCTION_12_1(v55, (uint64_t)static Logger.siriPhone);
            os_log_type_t v56 = OUTLINED_FUNCTION_6_0();
            if (OUTLINED_FUNCTION_7(v56))
            {
              uint64_t v57 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
              _WORD *v57 = 0;
              OUTLINED_FUNCTION_16_14( &dword_0,  v58,  v59,  "#PhoneCallFlow received cancel from user during a drop in call, sending hang up flow.");
              OUTLINED_FUNCTION_0_2((uint64_t)v57);
            }

            uint64_t v60 = static HangUpDirectInvocationFlowFactory.makeHangUpFlow(sharedGlobals:)(v47);
            static ExecuteResponse.complete(next:)(v60);
            uint64_t v61 = v60;
            goto LABEL_24;
          }
        }
      }

      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v85 = OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_12_1(v85, (uint64_t)static Logger.siriPhone);
      os_log_type_t v86 = OUTLINED_FUNCTION_6_0();
      if (OUTLINED_FUNCTION_7(v86))
      {
        uint64_t v87 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
        *uint64_t v87 = 0;
        OUTLINED_FUNCTION_16_14(&dword_0, v88, v89, "#PhoneCallFlow received cancel from user, prompt cancel dialog");
        OUTLINED_FUNCTION_0_2((uint64_t)v87);
      }

      OUTLINED_FUNCTION_42_26();
      type metadata accessor for PhoneCallCommonCATsSimple(0LL);
      OUTLINED_FUNCTION_100_5();
      OUTLINED_FUNCTION_9_36(v44);
      uint64_t v90 = swift_retain();
      static DialogPhase.canceled.getter(v90);
      OUTLINED_FUNCTION_95_9((uint64_t)v47);
      uint64_t v91 = type metadata accessor for DialogOutputFactory(0LL);
      OUTLINED_FUNCTION_15_2(v91);
      OUTLINED_FUNCTION_84_18();
      OUTLINED_FUNCTION_122();
      uint64_t v83 = OUTLINED_FUNCTION_8_8();
      OUTLINED_FUNCTION_38_1();
      v38[157] = v83;
      OUTLINED_FUNCTION_25_29();
      a34 = a35;
    }

    else
    {
      OUTLINED_FUNCTION_54_25();
      Swift::Bool v74 = PhoneCallNLIntent.hasRejection()();
      uint64_t v75 = *(void *)(v37 - 152);
      if (!v74)
      {
        v112 = (void *)static PhoneCallRequestSupportPolicy.getIntentFromInputParse(phoneCallNLIntent:sharedGlobals:)( v45,  *(void *)(v37 - 152));
        uint64_t v113 = v38[181];
        uint64_t v114 = v38[180];
        *(void *)(v37 - 168) = v38[179];
        *(void *)(v37 - 160) = v114;
        *(void *)(v37 - 152) = v38[164];
        *(void *)(v37 - 176) = v38[163];
        id v115 = [v112 _className];

        uint64_t v116 = static String._unconditionallyBridgeFromObjectiveC(_:)(v115);
        unint64_t v118 = v117;

        uint64_t v119 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (input: Input, phoneCallNLIntent: PhoneCallNLIntent, intentType: String));
        uint64_t v120 = v113 + *(int *)(v119 + 48);
        v121 = (uint64_t *)(v113 + *(int *)(v119 + 64));
        uint64_t v122 = OUTLINED_FUNCTION_95_3();
        v123(v122);
        outlined init with copy of SharedGlobalsProviding(v45, v120);
        uint64_t *v121 = v116;
        v121[1] = v118;
        uint64_t v124 = *(void *)(v37 - 176);
        swift_storeEnumTagMultiPayload(v113, *(void *)(v37 - 168), 1LL);
        uint64_t v125 = *(void *)(v37 - 160);
        outlined init with take of PhoneCallFlow.State(v113, v125);
        uint64_t v126 = v124 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin13PhoneCallFlow_state;
        OUTLINED_FUNCTION_5_9(v124 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin13PhoneCallFlow_state, a15);
        OUTLINED_FUNCTION_8_1();
        outlined assign with take of PhoneCallFlow.State(v125, v126);
        uint64_t v127 = v116;
        swift_endAccess(a15);
        uint64_t v128 = OUTLINED_FUNCTION_34_1();
        *(void *)(v124 + 176) = static PhoneCallFlow.buildIntentTypeSequence(intentTypeName:)(v128, v129);
        swift_bridgeObjectRelease();
        if (one-time initialization token for siriPhone != -1) {
          swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
        }
        uint64_t v130 = v38[163];
        uint64_t v131 = OUTLINED_FUNCTION_15_1();
        v132 = (os_log_s *)__swift_project_value_buffer(v131, (uint64_t)static Logger.siriPhone);
        OUTLINED_FUNCTION_11_18(v130);
        uint64_t v133 = OUTLINED_FUNCTION_8_1();
        v134 = v132;
        Logger.logObject.getter(v133);
        os_log_type_t v135 = OUTLINED_FUNCTION_6_0();
        BOOL v136 = OUTLINED_FUNCTION_63(v135);
        uint64_t v137 = v38[163];
        if (v136)
        {
          uint64_t v138 = OUTLINED_FUNCTION_7_0(22LL);
          uint64_t v139 = OUTLINED_FUNCTION_7_0(64LL);
          *(void *)(v37 - 128) = v139;
          *(_DWORD *)uint64_t v138 = 136315394;
          OUTLINED_FUNCTION_8_1();
          uint64_t v140 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v127, v118, (uint64_t *)(v37 - 128));
          v141 = OUTLINED_FUNCTION_148_7(v140, a13);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v141, a14, v138 + 4);
          swift_bridgeObjectRelease_n(v118, 3LL);
          *(_WORD *)(v138 + 12) = 2080;
          uint64_t v142 = swift_bridgeObjectRetain();
          uint64_t v143 = Array.description.getter(v142, &type metadata for String);
          unint64_t v145 = v144;
          OUTLINED_FUNCTION_70_2();
          uint64_t v146 = v143;
          uint64_t v38 = *(uint64_t **)(v37 - 136);
          *a14 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v146, v145, (uint64_t *)(v37 - 128));
          UnsafeMutableRawBufferPointer.copyMemory(from:)(a14, a32, v138 + 14);
          OUTLINED_FUNCTION_31_1(v137);
          swift_bridgeObjectRelease();
          _os_log_impl( &dword_0,  v134,  (os_log_type_t)v113,  "#PhoneCallFlow Chose SKIntent name: %s. Will try %s. Proceeding to app resolution.",  (uint8_t *)v138,  0x16u);
          swift_arrayDestroy(v139, 2LL);
          OUTLINED_FUNCTION_0_2(v139);
          OUTLINED_FUNCTION_0_2(v138);
        }

        else
        {

          OUTLINED_FUNCTION_31_1(v137);
          swift_bridgeObjectRelease_n(v118, 2LL);
        }

        static ExecuteResponse.replan(requireInput:)(0LL);
        uint64_t v92 = OUTLINED_FUNCTION_34_1();
        goto LABEL_25;
      }

      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v76 = OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_12_1(v76, (uint64_t)static Logger.siriPhone);
      os_log_type_t v77 = OUTLINED_FUNCTION_6_0();
      if (OUTLINED_FUNCTION_7(v77))
      {
        id v78 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
        *id v78 = 0;
        OUTLINED_FUNCTION_16_14(&dword_0, v79, v80, "#PhoneCallFlow parse has rejection. Prompt cancel dialog.");
        OUTLINED_FUNCTION_0_2((uint64_t)v78);
      }

      OUTLINED_FUNCTION_42_26();
      type metadata accessor for PhoneCallCommonCATsSimple(0LL);
      OUTLINED_FUNCTION_100_5();
      OUTLINED_FUNCTION_9_36(v44);
      uint64_t v81 = swift_retain();
      static DialogPhase.canceled.getter(v81);
      OUTLINED_FUNCTION_95_9(v75);
      uint64_t v82 = type metadata accessor for DialogOutputFactory(0LL);
      OUTLINED_FUNCTION_15_2(v82);
      OUTLINED_FUNCTION_84_18();
      OUTLINED_FUNCTION_122();
      uint64_t v83 = OUTLINED_FUNCTION_8_8();
      OUTLINED_FUNCTION_38_1();
      v38[155] = v83;
      OUTLINED_FUNCTION_25_29();
    }

    static ExecuteResponse.complete<A>(next:)(a34);
    uint64_t v61 = v83;
LABEL_24:
    swift_release(v61);
    uint64_t v92 = OUTLINED_FUNCTION_98();
LABEL_25:
    v93(v92);
    __swift_destroy_boxed_opaque_existential_1(*(void **)(v37 - 144));
    goto LABEL_33;
  }

  outlined destroy of PhoneCallNLIntent?( (uint64_t)v35,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
  uint64_t v62 = type metadata accessor for TransformationError(0LL);
  lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type TransformationError and conformance TransformationError,  (uint64_t (*)(uint64_t))&type metadata accessor for TransformationError,  (uint64_t)&protocol conformance descriptor for TransformationError);
  uint64_t v64 = swift_allocError(v62, v63, 0LL, 0LL);
  *unsigned int v65 = 0xD00000000000001FLL;
  v65[1] = 0x8000000000351900LL;
  uint64_t v66 = (*(uint64_t (**)(void *, void, uint64_t))(*(void *)(v62 - 8) + 104LL))( v65,  enum case for TransformationError.cannotTransform(_:),  v62);
  swift_willThrow(v66, v67, v68, v69, v70, v71, v72, v73);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v94 = OUTLINED_FUNCTION_15_1();
  __swift_project_value_buffer(v94, (uint64_t)static Logger.siriPhone);
  swift_errorRetain(v64);
  uint64_t v95 = swift_errorRetain(v64);
  char v96 = (os_log_s *)Logger.logObject.getter(v95);
  os_log_type_t v97 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v96, v97))
  {
    v98 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v35 = (__int128 *)OUTLINED_FUNCTION_7_0(32LL);
    *(void *)(v37 - 128) = v35;
    *(_DWORD *)v98 = 136315138;
    swift_getErrorValue(v64, a23, a25);
    uint64_t v99 = Error.localizedDescription.getter( *(void *)(*(void *)(v37 - 136) + 1040LL),  *(void *)(*(void *)(v37 - 136) + 1048LL));
    *(void *)(*(void *)(v37 - 136) + 120swift_beginAccess(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin13PhoneCallFlow_state, v4, 0LL, 0LL) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)( v99,  v100,  (uint64_t *)(v37 - 128));
    uint64_t v38 = *(uint64_t **)(v37 - 136);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(a24, a33, v98 + 4);
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_62_24();
    OUTLINED_FUNCTION_62_24();
    OUTLINED_FUNCTION_57_0(&dword_0, v96, v97, "#PhoneCallFlow Encountered error when converting Input: %s", v98);
    OUTLINED_FUNCTION_17_0((uint64_t)v35);
    OUTLINED_FUNCTION_0_2((uint64_t)v35);
    OUTLINED_FUNCTION_0_2((uint64_t)v98);
  }

  else
  {
    OUTLINED_FUNCTION_62_24();
    OUTLINED_FUNCTION_62_24();
  }

  uint64_t v101 = v38[168];
  OUTLINED_FUNCTION_127_9();
  Input.parse.getter(v102);
  __swift_storeEnumTagSinglePayload((uint64_t)v38, 0LL, 1LL, v101);
  OUTLINED_FUNCTION_68_0();
  OUTLINED_FUNCTION_45_7();
  OUTLINED_FUNCTION_9_36((uint64_t)v35);
  uint64_t v103 = OUTLINED_FUNCTION_67();
  OUTLINED_FUNCTION_140_10(v103);
  uint64_t v105 = v104;
  uint64_t v106 = OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_117_10(v106, &demangling cache variable for type metadata for Parse?);
  uint64_t v107 = (*(uint64_t (**)(void))(*(void *)v105 + 112LL))();
  swift_release(v105);
  v38[147] = v107;
  OUTLINED_FUNCTION_25_29();
  static ExecuteResponse.complete<A>(next:)(a31);
  OUTLINED_FUNCTION_62_24();
  OUTLINED_FUNCTION_38_1();
  uint64_t v108 = OUTLINED_FUNCTION_98();
  v109(v108);
LABEL_33:
  OUTLINED_FUNCTION_59_21(v38[182]);
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_14_3();
  OUTLINED_FUNCTION_29_17();
  OUTLINED_FUNCTION_25();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_27_58();
  return v110();
}

uint64_t PhoneCallFlow.execute()()
{
  uint64_t v1 = (void *)(*(void *)v0 + 712LL);
  OUTLINED_FUNCTION_14_1(*(void *)(*(void *)v0 + 1496LL));
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_39();
  __swift_destroy_boxed_opaque_existential_1(v1);
  OUTLINED_FUNCTION_19_1();
  return swift_task_switch(v2, v3, v4);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t);
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 632));
  uint64_t v1 = *(void *)(v0 + 1336);
  uint64_t v2 = *(void *)(v0 + 1304);
  uint64_t v3 = (void *)OUTLINED_FUNCTION_98();
  __swift_project_boxed_opaque_existential_1(v3, v4);
  OUTLINED_FUNCTION_7_3();
  uint64_t v39 = *(void *)(v0 + 984);
  uint64_t v40 = *(void *)(v0 + 976);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 952), v40);
  uint64_t v5 = *(void *)(v2 + 176);
  outlined init with copy of SharedGlobalsProviding(v2 + 16, v0 + 992);
  outlined init with copy of SharedGlobalsProviding(v2 + 56, v0 + 432);
  OUTLINED_FUNCTION_68_0();
  OUTLINED_FUNCTION_136_8();
  uint64_t v29 = v5;
  uint64_t v6 = OUTLINED_FUNCTION_124();
  static CATOption.defaultMode.getter(v6);
  uint64_t v25 = OUTLINED_FUNCTION_9_36(v1);
  OUTLINED_FUNCTION_78_24();
  OUTLINED_FUNCTION_4_64();
  unint64_t v24 = OUTLINED_FUNCTION_9_36(v1);
  uint64_t v7 = OUTLINED_FUNCTION_101_2();
  OUTLINED_FUNCTION_15_2(v7);
  unint64_t v23 = OUTLINED_FUNCTION_105();
  if (one-time initialization token for instance != -1) {
    swift_once(&one-time initialization token for instance, one-time initialization function for instance);
  }
  char v30 = *(void *)(v0 + 1464);
  uint64_t v32 = *(void *)(v0 + 1472);
  uint64_t v26 = *(void *)(v0 + 1416);
  uint64_t v36 = *(void *)(v0 + 1376);
  uint64_t v38 = *(void *)(v0 + 1368);
  uint64_t v8 = *(void *)(v0 + 1304);
  int v34 = *(void *)(v0 + 1296);
  uint64_t v9 = static EligibleAppFinder.instance;
  uint64_t v10 = OUTLINED_FUNCTION_69_1();
  uint64_t v11 = OUTLINED_FUNCTION_8_2(v10, 16LL);
  uint64_t v12 = OUTLINED_FUNCTION_101();
  char v13 = OUTLINED_FUNCTION_8_2(v12, 448LL);
  OUTLINED_FUNCTION_95_1();
  specialized PhoneAppResolutionOnDeviceFlowStrategy.init(supportedIntents:appFinder:sharedGlobals:startCallCATsSimple:phoneCallDisplayTextCATsSimple:responseGenerator:eligibleAppsFinder:appInfoBuilder:smartAppSelection:phoneAppResolutionHelper:phoneAppResolutionLogger:)( v29,  v0 + 992,  v0 + 432,  v25,  v24,  v23,  v9,  v11,  0LL,  0LL,  (uint64_t)&v41,  v13,  v23,  v24,  v25,  v26,  v0 + 1144,  v29,  v30,  v32,  v34,  v0 + 1128,  v0 + 992,  v36);
  *(void *)(v0 + 1144) = v14;
  OUTLINED_FUNCTION_129_11(v0 + 912);
  OUTLINED_FUNCTION_95_9(v8 + 56);
  unint64_t v15 = type metadata accessor for PhoneProtectedAppCheckStrategy();
  uint64_t v16 = OUTLINED_FUNCTION_8_2(v15, 96LL);
  OUTLINED_FUNCTION_106_10(v16);
  outlined init with take of AppSelectionSignalComponent((__int128 *)(v0 + 192), v16 + 56);
  *(void *)(v0 + 176) = v15;
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type PhoneProtectedAppCheckStrategy and conformance PhoneProtectedAppCheckStrategy,  (uint64_t (*)(uint64_t))type metadata accessor for PhoneProtectedAppCheckStrategy,  (uint64_t)&protocol conformance descriptor for PhoneProtectedAppCheckStrategy);
  *(void *)(v0 + 184) = v17;
  *(void *)(v0 + 152) = v16;
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v39 + 72);
  uint64_t v19 = type metadata accessor for INIntent();
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type PhoneAppResolutionOnDeviceFlowStrategy and conformance PhoneAppResolutionOnDeviceFlowStrategy,  (uint64_t (*)(uint64_t))type metadata accessor for PhoneAppResolutionOnDeviceFlowStrategy,  (uint64_t)&protocol conformance descriptor for PhoneAppResolutionOnDeviceFlowStrategy);
  uint64_t v21 = v18(v27, v28, v0 + 152, v12, v19, v20, v40, v39);
  OUTLINED_FUNCTION_76();
  OUTLINED_FUNCTION_115_10();
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 952));
  *(void *)(v0 + 1128) = v21;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)v8 + 216LL))(v27, v0 + 912, v31, v33);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyAppResolutionFlow<INIntent>);
  lazy protocol witness table accessor for type AnyAppResolutionFlow<INIntent> and conformance AnyAppResolutionFlow<A>();
  OUTLINED_FUNCTION_86_16(v35);
  OUTLINED_FUNCTION_16_3();
  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v27, v38);
  OUTLINED_FUNCTION_22();
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 912));
  OUTLINED_FUNCTION_59_21(*(void *)(v0 + 1456));
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_14_3();
  OUTLINED_FUNCTION_29_17();
  OUTLINED_FUNCTION_25();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_14_1(*(void *)(*(void *)v0 + 1512LL));
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  swift_release(*(void *)(v0 + 1504));
  outlined release of Set<String>((void *)(v0 + 1152));
  outlined release of String?(v0 + 1080);
  outlined release of Set<String>((void *)(v0 + 1288));
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 592));
  uint64_t v1 = OUTLINED_FUNCTION_95_3();
  v2(v1);
  OUTLINED_FUNCTION_9_81();
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_14_3();
  OUTLINED_FUNCTION_29_17();
  OUTLINED_FUNCTION_25();
  swift_task_dealloc();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_5_8(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  OUTLINED_FUNCTION_20_18();
  OUTLINED_FUNCTION_18_23();
  *(void *)(v1 + 1528) = v0;
  OUTLINED_FUNCTION_28_17(v2);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t static PhoneCallFlow.buildIntentTypeSequence(intentTypeName:)(uint64_t a1, void *a2)
{
  v4._countAndFlagsBits = a1;
  v4._object = a2;
  int value = PhoneCallIntentClassNames.init(intentClassName:)(v4).value;
  if ((value - 4) < 2)
  {
    if (one-time initialization token for emptyStartCallIntent != -1) {
      swift_once( &one-time initialization token for emptyStartCallIntent,  one-time initialization function for emptyStartCallIntent);
    }
    id v6 = [(id)static PhoneCallIntentClassNames.emptyStartCallIntent _className];
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
    uint64_t v9 = v8;

    if (one-time initialization token for emptyStartAudioCallIntent != -1) {
      swift_once( &one-time initialization token for emptyStartAudioCallIntent,  one-time initialization function for emptyStartAudioCallIntent);
    }
    id v10 = [(id)static PhoneCallIntentClassNames.emptyStartAudioCallIntent _className];
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    uint64_t v13 = v12;

    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)( 0LL,  2LL,  1LL,  (uint64_t)_swiftEmptyArrayStorage);
    uint64_t v15 = v14;
    unint64_t v16 = *(void *)(v14 + 16);
    unint64_t v17 = *(void *)(v14 + 24);
    unint64_t v18 = v16 + 1;
    swift_bridgeObjectRetain();
    if (v16 >= v17 >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)( v17 > 1,  v16 + 1,  1LL,  v15);
      uint64_t v15 = v51;
    }

    *(void *)(v15 + 16) = v18;
    uint64_t v19 = v15 + 16 * v16;
    *(void *)(v19 + 32) = v7;
    *(void *)(v19 + 40) = v9;
    unint64_t v20 = *(void *)(v15 + 24);
    swift_bridgeObjectRetain();
    if (v18 >= v20 >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)( v20 > 1,  v16 + 2,  1LL,  v15);
      uint64_t v15 = v52;
    }

    *(void *)(v15 + 16) = v16 + 2;
    uint64_t v21 = v15 + 16 * v18;
    *(void *)(v21 + 32) = v11;
    *(void *)(v21 + 40) = v13;
    swift_bridgeObjectRelease();
LABEL_23:
    swift_bridgeObjectRelease();
    return v15;
  }

  if (value == 6)
  {
    if (one-time initialization token for emptyStartCallIntent != -1) {
      swift_once( &one-time initialization token for emptyStartCallIntent,  one-time initialization function for emptyStartCallIntent);
    }
    id v22 = [(id)static PhoneCallIntentClassNames.emptyStartCallIntent _className];
    uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
    uint64_t v25 = v24;

    PhoneCallIntentClassNames.intentInstance.getter(6);
    uint64_t v27 = v26;
    id v28 = [v26 _className];

    uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
    uint64_t v31 = v30;

    if (one-time initialization token for emptyStartAudioCallIntent != -1) {
      swift_once( &one-time initialization token for emptyStartAudioCallIntent,  one-time initialization function for emptyStartAudioCallIntent);
    }
    id v32 = [(id)static PhoneCallIntentClassNames.emptyStartAudioCallIntent _className];
    uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
    uint64_t v35 = v34;

    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)( 0LL,  3LL,  1LL,  (uint64_t)_swiftEmptyArrayStorage);
    uint64_t v15 = v36;
    unint64_t v37 = *(void *)(v36 + 16);
    unint64_t v38 = *(void *)(v36 + 24);
    unint64_t v39 = v37 + 1;
    swift_bridgeObjectRetain();
    if (v37 >= v38 >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)( v38 > 1,  v37 + 1,  1LL,  v15);
      uint64_t v15 = v53;
    }

    *(void *)(v15 + 16) = v39;
    uint64_t v40 = v15 + 16 * v37;
    *(void *)(v40 + 32) = v23;
    *(void *)(v40 + 40) = v25;
    unint64_t v41 = *(void *)(v15 + 24);
    swift_bridgeObjectRetain();
    if (v39 >= v41 >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)( v41 > 1,  v37 + 2,  1LL,  v15);
      uint64_t v15 = v54;
    }

    *(void *)(v15 + 16) = v37 + 2;
    uint64_t v42 = v15 + 16 * v39;
    *(void *)(v42 + 32) = v29;
    *(void *)(v42 + 40) = v31;
    unint64_t v43 = *(void *)(v15 + 16);
    unint64_t v44 = *(void *)(v15 + 24);
    swift_bridgeObjectRetain();
    if (v43 >= v44 >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)( v44 > 1,  v43 + 1,  1LL,  v15);
      uint64_t v15 = v55;
    }

    *(void *)(v15 + 16) = v43 + 1;
    uint64_t v45 = v15 + 16 * v43;
    *(void *)(v45 + 32) = v33;
    *(void *)(v45 + 40) = v35;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }

  swift_bridgeObjectRetain();
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)( 0LL,  1LL,  1LL,  (uint64_t)_swiftEmptyArrayStorage);
  uint64_t v15 = v46;
  unint64_t v48 = *(void *)(v46 + 16);
  unint64_t v47 = *(void *)(v46 + 24);
  if (v48 >= v47 >> 1)
  {
    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)( v47 > 1,  v48 + 1,  1LL,  v46);
    uint64_t v15 = v56;
  }

  *(void *)(v15 + 16) = v48 + 1;
  uint64_t v49 = v15 + 16 * v48;
  *(void *)(v49 + 32) = a1;
  *(void *)(v49 + 40) = a2;
  return v15;
}

uint64_t closure #3 in PhoneCallFlow.execute()( _BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v12 = type metadata accessor for PhoneCallFlow.State(0LL);
  __chkstk_darwin();
  uint64_t v14 = &v41[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin();
  unint64_t v16 = &v41[-v15 - 8];
  if ((*a1 & 1) != 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v17 = type metadata accessor for Logger(0LL);
    uint64_t v18 = __swift_project_value_buffer(v17, (uint64_t)static Logger.siriPhone);
    uint64_t v19 = (os_log_s *)Logger.logObject.getter(v18);
    os_log_type_t v21 = static os_log_type_t.debug.getter(v19, v20);
    if (os_log_type_enabled(v19, v21))
    {
      id v22 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)id v22 = 0;
      _os_log_impl(&dword_0, v19, v21, "#PhoneCallFlow Failed AppResolution postconditions", v22, 2u);
      swift_slowDealloc(v22, -1LL, -1LL);
    }

    swift_storeEnumTagMultiPayload(v16, v12, 4LL);
    uint64_t v23 = a2 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin13PhoneCallFlow_state;
    swift_beginAccess(a2 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin13PhoneCallFlow_state, v41, 33LL, 0LL);
    uint64_t v24 = (uint64_t)v16;
    uint64_t v25 = v23;
  }

  else
  {
    uint64_t v40 = a2;
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v26 = type metadata accessor for Logger(0LL);
    uint64_t v27 = __swift_project_value_buffer(v26, (uint64_t)static Logger.siriPhone);
    id v28 = (os_log_s *)Logger.logObject.getter(v27);
    os_log_type_t v30 = static os_log_type_t.debug.getter(v28, v29);
    if (os_log_type_enabled(v28, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v31 = 0;
      _os_log_impl(&dword_0, v28, v30, "#PhoneCallFlow Passed AppResolution postconditions, proceed to RCH", v31, 2u);
      swift_slowDealloc(v31, -1LL, -1LL);
    }

    id v32 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (input: Input, phoneCallNLIntent: PhoneCallNLIntent, selectedIntentName: PhoneCallIntentClassNames, resolvedApp: AnnotatedApp));
    uint64_t v33 = (uint64_t)&v16[v32[12]];
    uint64_t v34 = v32[16];
    uint64_t v35 = &v16[v32[20]];
    uint64_t v36 = type metadata accessor for Input(0LL);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 16LL))(v16, a3, v36);
    outlined init with copy of SharedGlobalsProviding(a4, v33);
    v16[v34] = a5;
    uint64_t v44 = *(void *)(a6 + 8);
    outlined init with take of ContactNeedsValueGuardFlow<INStartCallIntent>.FlowState( a6 + 16,  (uint64_t)v43,  &demangling cache variable for type metadata for String?);
    uint64_t v42 = *(void *)(a6 + 40);
    __int128 v37 = *(_OWORD *)(a6 + 16);
    *uint64_t v35 = *(_OWORD *)a6;
    v35[1] = v37;
    v35[2] = *(_OWORD *)(a6 + 32);
    swift_storeEnumTagMultiPayload(v16, v12, 3LL);
    outlined init with take of PhoneCallFlow.State((uint64_t)v16, (uint64_t)v14);
    uint64_t v38 = v40 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin13PhoneCallFlow_state;
    swift_beginAccess(v40 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin13PhoneCallFlow_state, v41, 33LL, 0LL);
    swift_retain();
    outlined retain of Set<String>(&v44);
    outlined retain of String?((uint64_t)v43);
    outlined retain of Set<String>(&v42);
    uint64_t v24 = (uint64_t)v14;
    uint64_t v25 = v38;
  }

  outlined assign with take of PhoneCallFlow.State(v24, v25);
  return swift_endAccess(v41);
}

uint64_t (*PhoneCallFlow.onAppResolutionComplete(originalInput:phoneCallNLIntent:intentType:)())(uint64_t a1)
{
  uint64_t v19 = v5;
  uint64_t v20 = v6;
  OUTLINED_FUNCTION_18_1();
  uint64_t v7 = *(void *)(OUTLINED_FUNCTION_3_4() - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  OUTLINED_FUNCTION_97_1((uint64_t)v9, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16));
  outlined init with copy of SharedGlobalsProviding(v3, (uint64_t)v18);
  uint64_t v10 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = (v10 + 24) & ~v10;
  unint64_t v12 = (v8 + v11 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v13 = (v12 + 47) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v14 = swift_allocObject(&unk_415DA8, v13 + 16, v10 | 7);
  *(void *)(v14 + 16) = v1;
  OUTLINED_FUNCTION_97_1(v14 + v11, (uint64_t)v9, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 32));
  outlined init with take of AppSelectionSignalComponent(v18, v14 + v12);
  uint64_t v15 = (void *)(v14 + v13);
  *uint64_t v15 = v2;
  v15[1] = v0;
  swift_retain();
  OUTLINED_FUNCTION_8_1();
  return partial apply for closure #1 in PhoneCallFlow.onAppResolutionComplete(originalInput:phoneCallNLIntent:intentType:);
}

uint64_t PhoneCallFlow.onAppResolutionComplete(input:phoneCallNLIntent:intentType:appResolutionFlowResult:)()
{
  uint64_t v92 = v1;
  uint64_t v93 = v2;
  uint64_t v3 = v0;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v82 = v10;
  uint64_t v81 = v11;
  uint64_t v12 = type metadata accessor for PhoneCallFlow.State(0LL);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  uint64_t v14 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  unint64_t v16 = (char *)&v73 - v15;
  uint64_t v17 = type metadata accessor for AppResolutionFlowResult(0LL);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  os_log_type_t v21 = (uint64_t *)(v20 - v19);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v20 - v19, v5, v17);
  if ((*(unsigned int (**)(uint64_t *, uint64_t))(v18 + 88))(v21, v17) == enum case for AppResolutionFlowResult.resolved(_:))
  {
    uint64_t v80 = v16;
    uint64_t v75 = v9;
    OUTLINED_FUNCTION_20_33(*(uint64_t (**)(uint64_t, uint64_t))(v18 + 96));
    uint64_t v22 = *v21;
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v23 = OUTLINED_FUNCTION_15_1();
    uint64_t v24 = __swift_project_value_buffer(v23, (uint64_t)static Logger.siriPhone);
    uint64_t v25 = OUTLINED_FUNCTION_11_18(v22);
    uint64_t v79 = v24;
    uint64_t v26 = (os_log_s *)Logger.logObject.getter(v25);
    os_log_type_t v28 = static os_log_type_t.debug.getter(v26, v27);
    BOOL v29 = os_log_type_enabled(v26, v28);
    uint64_t v77 = v7;
    uint64_t v76 = v14;
    if (v29)
    {
      os_log_type_t v30 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v31 = OUTLINED_FUNCTION_7_0(32LL);
      uint64_t v74 = v3;
      uint64_t v32 = v31;
      *(void *)&__int128 v87 = v31;
      *(_DWORD *)os_log_type_t v30 = 136315138;
      *(void *)&v86[0] = v22;
      uint64_t v33 = type metadata accessor for App(0LL);
      lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type App and conformance App,  (uint64_t (*)(uint64_t))&type metadata accessor for App,  (uint64_t)&protocol conformance descriptor for App);
      uint64_t v35 = dispatch thunk of CustomStringConvertible.description.getter(v33, v34);
      *(void *)&v86[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v35, v36, (uint64_t *)&v87);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v86, (char *)v86 + 8, v30 + 4);
      OUTLINED_FUNCTION_62();
      OUTLINED_FUNCTION_31_1(v22);
      OUTLINED_FUNCTION_57_0(&dword_0, v26, v28, "#PhoneCallFlow: resolved app: %s", v30);
      OUTLINED_FUNCTION_17_0(v32);
      uint64_t v37 = v32;
      uint64_t v3 = v74;
      OUTLINED_FUNCTION_0_2(v37);
      OUTLINED_FUNCTION_0_2((uint64_t)v30);
    }

    else
    {
      OUTLINED_FUNCTION_31_1(v22);
    }

    uint64_t v39 = *(void *)(v3 + 88);
    OUTLINED_FUNCTION_49_0((void *)(v3 + 56));
    uint64_t v40 = OUTLINED_FUNCTION_67();
    v41(v40, v39);
    uint64_t v42 = v84[4];
    OUTLINED_FUNCTION_49_0(v84);
    uint64_t v78 = v22;
    uint64_t v43 = App.appIdentifier.getter();
    (*(void (**)(void *__return_ptr, uint64_t))(v42 + 16))(v85, v43);
    swift_bridgeObjectRelease();
    outlined init with take of ContactNeedsValueGuardFlow<INStartCallIntent>.FlowState( (uint64_t)v85,  (uint64_t)v86,  &demangling cache variable for type metadata for AnnotatedApp?);
    if (*(void *)&v86[0])
    {
      __int128 v87 = v86[0];
      __int128 v88 = v86[1];
      __int128 v89 = v86[2];
      __swift_destroy_boxed_opaque_existential_1(v84);
      uint64_t v90 = *((void *)&v87 + 1);
      uint64_t v44 = v87;
      outlined init with take of ContactNeedsValueGuardFlow<INStartCallIntent>.FlowState( (uint64_t)&v88,  (uint64_t)v91,  &demangling cache variable for type metadata for String?);
      v91[2] = *((void *)&v89 + 1);
      OUTLINED_FUNCTION_44_1();
      outlined retain of Set<String>(&v90);
      outlined retain of String?((uint64_t)v91);
      OUTLINED_FUNCTION_128_8();
      OUTLINED_FUNCTION_44_1();
      outlined retain of Set<String>(&v90);
      outlined retain of String?((uint64_t)v91);
      OUTLINED_FUNCTION_128_8();
      uint64_t v45 = (os_log_s *)OUTLINED_FUNCTION_101_11();
      os_log_type_t v47 = static os_log_type_t.debug.getter(v45, v46);
      BOOL v48 = os_log_type_enabled(v45, v47);
      uint64_t v49 = (uint64_t)v80;
      if (v48)
      {
        uint64_t v50 = OUTLINED_FUNCTION_7_0(12LL);
        uint64_t v74 = v3;
        uint64_t v51 = (uint8_t *)v50;
        uint64_t v79 = OUTLINED_FUNCTION_7_0(32LL);
        v84[0] = v79;
        *(_DWORD *)uint64_t v51 = 136315138;
        uint64_t v83 = v44;
        uint64_t v52 = type metadata accessor for App(0LL);
        lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type App and conformance App,  (uint64_t (*)(uint64_t))&type metadata accessor for App,  (uint64_t)&protocol conformance descriptor for App);
        uint64_t v54 = dispatch thunk of CustomStringConvertible.description.getter(v52, v53);
        uint64_t v83 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v54, v55, v84);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v83, v84, v51 + 4);
        OUTLINED_FUNCTION_62();
        OUTLINED_FUNCTION_50_2();
        OUTLINED_FUNCTION_106_8();
        OUTLINED_FUNCTION_13_11();
        OUTLINED_FUNCTION_44_28();
        OUTLINED_FUNCTION_50_2();
        OUTLINED_FUNCTION_106_8();
        OUTLINED_FUNCTION_13_11();
        OUTLINED_FUNCTION_44_28();
        OUTLINED_FUNCTION_57_0(&dword_0, v45, v47, "#PhoneCallFlow: Using cached annotated app: %s", v51);
        uint64_t v56 = v79;
        OUTLINED_FUNCTION_17_0(v79);
        OUTLINED_FUNCTION_0_2(v56);
        uint64_t v57 = (uint64_t)v51;
        uint64_t v3 = v74;
        OUTLINED_FUNCTION_0_2(v57);

        OUTLINED_FUNCTION_44_32();
      }

      else
      {
        OUTLINED_FUNCTION_44_32();
        OUTLINED_FUNCTION_50_2();
        OUTLINED_FUNCTION_106_8();
        OUTLINED_FUNCTION_13_11();
        OUTLINED_FUNCTION_44_28();
        OUTLINED_FUNCTION_50_2();
        OUTLINED_FUNCTION_106_8();
        OUTLINED_FUNCTION_13_11();
        OUTLINED_FUNCTION_44_28();
      }

      uint64_t v61 = v82;
      uint64_t v62 = v81;
      uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (input: Input, phoneCallNLIntent: PhoneCallNLIntent, intentType: String, resolvedApp: AnnotatedApp));
      uint64_t v64 = (void *)(v49 + *(int *)(v63 + 64));
      unsigned int v65 = (_OWORD *)(v49 + *(int *)(v63 + 80));
      uint64_t v66 = OUTLINED_FUNCTION_3_4();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 16LL))(v49, v62, v66);
      OUTLINED_FUNCTION_95_9(v61);
      uint64_t v67 = v77;
      void *v64 = v75;
      v64[1] = v67;
      __int128 v68 = v89;
      __int128 v69 = v87;
      v65[1] = v88;
      v65[2] = v68;
      *unsigned int v65 = v69;
      swift_storeEnumTagMultiPayload(v49, v12, 2LL);
      outlined init with take of PhoneCallFlow.State(v49, (uint64_t)v76);
      OUTLINED_FUNCTION_5_9(v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin13PhoneCallFlow_state, (uint64_t)v84);
      OUTLINED_FUNCTION_124();
      uint64_t v70 = OUTLINED_FUNCTION_34_1();
      outlined assign with take of PhoneCallFlow.State(v70, v71);
      uint64_t v72 = v84;
    }

    else
    {
      __swift_destroy_boxed_opaque_existential_1(v84);
      uint64_t v58 = (os_log_s *)OUTLINED_FUNCTION_101_11();
      os_log_type_t v59 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v58, v59))
      {
        uint64_t v60 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
        *(_WORD *)uint64_t v60 = 0;
        OUTLINED_FUNCTION_5( &dword_0,  v58,  v59,  "#PhoneCallFlow onAppResolutionComplete: can't find appId in the cache, return complete",  v60);
        OUTLINED_FUNCTION_0_2((uint64_t)v60);

        OUTLINED_FUNCTION_44_32();
      }

      else
      {
        OUTLINED_FUNCTION_44_32();
      }

      OUTLINED_FUNCTION_79_18();
      OUTLINED_FUNCTION_5_9(v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin13PhoneCallFlow_state, (uint64_t)&v87);
      OUTLINED_FUNCTION_114_9();
      uint64_t v72 = (uint64_t *)&v87;
    }

    return swift_endAccess(v72);
  }

  else
  {
    OUTLINED_FUNCTION_79_18();
    OUTLINED_FUNCTION_5_9(v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin13PhoneCallFlow_state, (uint64_t)&v87);
    OUTLINED_FUNCTION_114_9();
    swift_endAccess(&v87);
    return OUTLINED_FUNCTION_20_33(*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
  }

uint64_t PhoneCallFlow.publishUnsupportedOutput(unsupportedReason:input:intentName:app:)( uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5)
{
  *(void *)(v6 + 160) = a5;
  *(void *)(v6 + 168) = v5;
  *(_BYTE *)(v6 + 200) = a2;
  *(void *)(v6 + 152) = a1;
  uint64_t v10 = OUTLINED_FUNCTION_40_1();
  *(void *)(v6 + 176) = OUTLINED_FUNCTION_12_0(v10);
  uint64_t v11 = (void *)swift_task_alloc(dword_43F794);
  *(void *)(v6 + 184) = v11;
  *uint64_t v11 = v6;
  v11[1] = PhoneCallFlow.publishUnsupportedOutput(unsupportedReason:input:intentName:app:);
  return OUTLINED_FUNCTION_58_25(a4, a3, a5, v5 + 56);
}

uint64_t PhoneCallFlow.publishUnsupportedOutput(unsupportedReason:input:intentName:app:)()
{
  *(void *)(v1 + 192) = v0;
  OUTLINED_FUNCTION_28_17(v2);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *boxed_opaque_existential_1;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  void *v24;
  id v25;
  uint64_t v1 = *(void **)(v0 + 192);
  uint64_t v2 = *(void *)(v0 + 176);
  uint64_t v3 = *(void *)(v0 + 160);
  uint64_t v24 = (void *)(*(void *)(v0 + 168) + 56LL);
  uint64_t v23 = *(unsigned __int8 *)(v0 + 200);
  outlined init with copy of SharedGlobalsProviding((uint64_t)v24, v0 + 64);
  type metadata accessor for UnsupportedFlowCATs(0LL);
  uint64_t v25 = v1;
  uint64_t v4 = OUTLINED_FUNCTION_95_1();
  static CATOption.defaultMode.getter(v4);
  uint64_t v22 = OUTLINED_FUNCTION_18_26(v2);
  type metadata accessor for SearchCallHistoryCATs(0LL);
  OUTLINED_FUNCTION_4_64();
  os_log_type_t v21 = OUTLINED_FUNCTION_18_26(v2);
  type metadata accessor for UnsupportedFlowCATsSimple(0LL);
  OUTLINED_FUNCTION_4_64();
  uint64_t v5 = OUTLINED_FUNCTION_9_36(v2);
  uint64_t v6 = OUTLINED_FUNCTION_101_2();
  OUTLINED_FUNCTION_15_2(v6);
  uint64_t v7 = OUTLINED_FUNCTION_105();
  uint64_t v8 = OUTLINED_FUNCTION_69_1();
  uint64_t v9 = OUTLINED_FUNCTION_8_2(v8, 16LL);
  OUTLINED_FUNCTION_78_24();
  OUTLINED_FUNCTION_4_64();
  uint64_t v10 = OUTLINED_FUNCTION_9_36(v2);
  uint64_t v11 = type metadata accessor for UnsupportedCallFlowOutputFactory(0LL);
  uint64_t v12 = OUTLINED_FUNCTION_15_2(v11);
  uint64_t v13 = specialized UnsupportedCallFlowOutputFactory.init(unsupportedPhoneCall:app:sharedGlobals:intent:unsupportedFlowCats:searchCallHistoryCats:unsupportedFlowCatsSimple:responseGenerator:labelTemplating:appInfoBuilder:phoneCallDisplayTextCATsSimple:)( v23,  v3,  v0 + 64,  (uint64_t)v1,  v22,  v21,  v5,  v7,  0LL,  0LL,  0LL,  0LL,  v9,  v10,  v12);
  OUTLINED_FUNCTION_82(v24);
  OUTLINED_FUNCTION_41_38();
  uint64_t v14 = *(void *)(v0 + 40);
  uint64_t v15 = *(void *)(v0 + 56);
  unint64_t v16 = __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v14);
  *(void *)(v0 + 128) = v14;
  *(void *)(v0 + 136) = v15;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((void *)(v0 + 104));
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16LL))( boxed_opaque_existential_1,  v16,  v14);
  uint64_t v18 = OUTLINED_FUNCTION_25_29();
  OUTLINED_FUNCTION_15_2(v18);
  OUTLINED_FUNCTION_95_1();
  uint64_t v19 = SimpleOutputFlowAsync.init(outputPublisher:outputGenerator:)( v0 + 104,  &async function pointer to partial apply for closure #1 in PhoneCallFlow.publishUnsupportedOutput(unsupportedReason:input:intentName:app:),  v13);
  OUTLINED_FUNCTION_91_16();
  *(void *)(v0 + 144) = v19;
  static ExecuteResponse.complete<A>(next:)(v0 + 144);

  OUTLINED_FUNCTION_76();
  OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_7_8();
  return OUTLINED_FUNCTION_14_75(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t closure #1 in PhoneCallFlow.publishUnsupportedOutput(unsupportedReason:input:intentName:app:)( uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(int **)(*(void *)a2 + 224LL);
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  uint64_t v5 = (void *)swift_task_alloc(v4[1]);
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return v7(a1);
}

uint64_t PhoneCallFlow.chooseRCHFlow(input:phoneCallNLIntent:intentName:resolvedApp:)( uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  *(void *)(v5 + 152) = a4;
  *(void *)(v5 + 160) = v4;
  *(_BYTE *)(v5 + 232) = a3;
  *(void *)(v5 + 136) = a1;
  *(void *)(v5 + 144) = a2;
  uint64_t v6 = OUTLINED_FUNCTION_40_1();
  *(void *)(v5 + 168) = OUTLINED_FUNCTION_12_0(v6);
  uint64_t v7 = type metadata accessor for Parse(0LL);
  *(void *)(v5 + 176) = v7;
  *(void *)(v5 + 184) = *(void *)(v7 - 8);
  *(void *)(v5 + 192) = OUTLINED_FUNCTION_28();
  *(void *)(v5 + 200) = OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t PhoneCallFlow.chooseRCHFlow(input:phoneCallNLIntent:intentName:resolvedApp:)()
{
  int v1 = OUTLINED_FUNCTION_71_20();
  if (v1 == enum case for Parse.NLv3IntentOnly(_:))
  {
    uint64_t v3 = *(uint64_t **)(v0 + 152);
    uint64_t v2 = *(void *)(v0 + 160);
    uint64_t v4 = *v3;
    *(void *)(v0 + 208) = *v3;
    uint64_t v5 = v2 + 56;
    uint64_t v6 = (void *)swift_task_alloc(dword_43F794);
    *(void *)(v0 + 216) = v6;
    *uint64_t v6 = v0;
    v6[1] = PhoneCallFlow.chooseRCHFlow(input:phoneCallNLIntent:intentName:resolvedApp:);
    return OUTLINED_FUNCTION_58_25(*(_BYTE *)(v0 + 232), *(void *)(v0 + 136), v4, v5);
  }

  int v8 = v1;
  uint64_t v9 = *(void **)(v0 + 200);
  uint64_t v10 = *(void *)(v0 + 184);
  if (v1 == enum case for Parse.NLv4IntentOnly(_:))
  {
    (*(void (**)(void, void))(v10 + 96))(*(void *)(v0 + 200), *(void *)(v0 + 176));
    swift_unknownObjectRelease(*v9);
  }

  else
  {
    int v11 = enum case for Parse.uso(_:);
    OUTLINED_FUNCTION_15_0(v10);
    if (v8 != v11)
    {
      uint64_t v14 = 0LL;
      goto LABEL_8;
    }
  }

  uint64_t v12 = *(void *)(v0 + 184);
  OUTLINED_FUNCTION_128_9();
  static PhoneCallRequestSupportPolicy.getFlowFromParse(parse:intentTypeName:resolvedApp:phoneCallNLIntent:sharedGlobals:)();
  uint64_t v14 = v13;
  OUTLINED_FUNCTION_72_0(*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
LABEL_8:
  swift_task_dealloc();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v14);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  OUTLINED_FUNCTION_20_18();
  OUTLINED_FUNCTION_18_23();
  *(void *)(v1 + 224) = v0;
  OUTLINED_FUNCTION_28_17(v2);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  os_log_s *v26;
  uint64_t v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  id v37;
  os_log_type_t v38;
  uint8_t *v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v1 = *(void **)(v0 + 224);
  if (!v1) {
    goto LABEL_6;
  }
  uint64_t v2 = v1;
  static PhoneCallFlowFactory.makeRCHFlow(app:intent:sharedGlobals:)();
  if (!v3)
  {

LABEL_6:
    uint64_t v13 = *(void *)(v0 + 168);
    uint64_t v14 = OUTLINED_FUNCTION_68_0();
    static CATOption.defaultMode.getter(v14);
    CATWrapperSimple.__allocating_init(options:globals:)(v13, 0LL);
    OUTLINED_FUNCTION_67();
    static CommonOutputs.genericError(sharedGlobals:startCallCATsSimple:)();
    unint64_t v16 = v15;
    uint64_t v17 = OUTLINED_FUNCTION_38_1();
    uint64_t v18 = (*(uint64_t (**)(uint64_t))(*(void *)v16 + 112LL))(v17);
    OUTLINED_FUNCTION_22();
    *(void *)(v0 + 120) = v18;
    uint64_t v19 = OUTLINED_FUNCTION_25_29();
    uint64_t v4 = Flow.eraseToAnyFlow()(v19);

    OUTLINED_FUNCTION_122();
    uint64_t v20 = OUTLINED_FUNCTION_98();
LABEL_16:
    v22(v20, v21);
    goto LABEL_17;
  }

  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v0 + 136);
  uint64_t v6 = *(void *)(v0 + 144);
  uint64_t v7 = (void *)(*(void *)(v0 + 160) + 56LL);
  swift_retain();
  dispatch thunk of AnyFlow.on(input:)(v5);
  OUTLINED_FUNCTION_22();
  outlined init with copy of SharedGlobalsProviding(v6, v0 + 56);
  int v8 = static PhoneCallRequestSupportPolicy.isHomePodPersonalRequest(intent:sharedGlobals:nlIntent:)( (os_log_s *)v2,  v7,  (uint8_t *)(v0 + 56));
  outlined destroy of PhoneCallNLIntent?(v0 + 56, &demangling cache variable for type metadata for PhoneCallNLIntent?);
  if ((v8 & 1) == 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v23 = OUTLINED_FUNCTION_15_1();
    __swift_project_value_buffer(v23, (uint64_t)static Logger.siriPhone);
    uint64_t v24 = OUTLINED_FUNCTION_67();
    uint64_t v25 = OUTLINED_FUNCTION_11_18(v24);
    uint64_t v26 = (os_log_s *)Logger.logObject.getter(v25);
    os_log_type_t v28 = static os_log_type_t.debug.getter(v26, v27);
    if (os_log_type_enabled(v26, v28))
    {
      BOOL v29 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      BOOL v48 = OUTLINED_FUNCTION_7_0(32LL);
      uint64_t v50 = v48;
      *(_DWORD *)BOOL v29 = 136315138;
      *(void *)(v0 + 104) = v4;
      os_log_type_t v30 = type metadata accessor for AnyFlow(0LL);
      lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type AnyFlow and conformance AnyFlow,  (uint64_t (*)(uint64_t))&type metadata accessor for AnyFlow,  (uint64_t)&protocol conformance descriptor for AnyFlow);
      uint64_t v32 = dispatch thunk of CustomStringConvertible.description.getter(v30, v31);
      uint64_t v34 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v32, v33, &v50);
      uint64_t v35 = OUTLINED_FUNCTION_148_7(v34, (void *)(v0 + 112));
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v35, v0 + 120, v36);
      OUTLINED_FUNCTION_62();
      OUTLINED_FUNCTION_31_1(v4);
      OUTLINED_FUNCTION_57_0(&dword_0, v26, v28, "#PhoneCallFlow .appResolutionComplete, returning flow: %s", v29);
      OUTLINED_FUNCTION_17_0(v48);
      OUTLINED_FUNCTION_0_2(v48);
      OUTLINED_FUNCTION_0_2((uint64_t)v29);
    }

    else
    {
      OUTLINED_FUNCTION_31_1(v4);
    }

    uint64_t v37 = v2;
    Logger.logObject.getter(v37);
    uint64_t v38 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_63(v38))
    {
      uint64_t v39 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v49 = OUTLINED_FUNCTION_7_0(32LL);
      uint64_t v50 = v49;
      *(_DWORD *)uint64_t v39 = 136315138;
      uint64_t v40 = v37;
      unint64_t v41 = [v40 description];
      uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(v41);

      uint64_t v44 = OUTLINED_FUNCTION_148_8(v42, v43, &v50);
      uint64_t v45 = OUTLINED_FUNCTION_148_7(v44, (void *)(v0 + 96));
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v45, v0 + 104, v46);
      OUTLINED_FUNCTION_70_2();

      OUTLINED_FUNCTION_57_0( &dword_0,  (os_log_s *)v8,  (os_log_type_t)(v0 + 120),  "#PhoneCallFlow .appResolutionComplete, for intent: %s",  v39);
      OUTLINED_FUNCTION_17_0(v49);
      OUTLINED_FUNCTION_0_2(v49);
      OUTLINED_FUNCTION_0_2((uint64_t)v39);
    }

    else
    {
    }

    uint64_t v20 = *(void *)(v0 + 200);
    os_log_type_t v21 = *(void *)(v0 + 176);
    uint64_t v22 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 184) + 8LL);
    goto LABEL_16;
  }

  uint64_t v9 = *(void *)(v0 + 184);
  outlined init with copy of SharedGlobalsProviding(*(void *)(v0 + 160) + 56LL, v0 + 16);
  uint64_t v10 = type metadata accessor for PhoneCallActivityNotificationFlow();
  OUTLINED_FUNCTION_8_2(v10, 112LL);
  int v11 = swift_retain();
  *(void *)(v0 + 128) = PhoneCallActivityNotificationFlow.init(_:sharedGlobals:)(v11, (__int128 *)(v0 + 16));
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type PhoneCallActivityNotificationFlow and conformance PhoneCallActivityNotificationFlow,  (uint64_t (*)(uint64_t))type metadata accessor for PhoneCallActivityNotificationFlow,  (uint64_t)&protocol conformance descriptor for PhoneCallActivityNotificationFlow);
  uint64_t v12 = Flow.eraseToAnyFlow()(v10);

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_118();
  OUTLINED_FUNCTION_125_9(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
  uint64_t v4 = v12;
LABEL_17:
  swift_task_dealloc();
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_10_0();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v4);
}

void PhoneCallFlow.selfLogging(input:phoneCallNLIntent:intentTypeName:resolvedApp:)()
{
  uint64_t v25 = v0;
  uint64_t v26 = v1;
  uint64_t v3 = v2;
  uint64_t v27 = v4;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(OUTLINED_FUNCTION_3_4() - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin();
  int v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v14 = v13 - v12;
  static TaskPriority.utility.getter(v15);
  uint64_t v16 = type metadata accessor for TaskPriority(0LL);
  __swift_storeEnumTagSinglePayload(v14, 0LL, 1LL, v16);
  OUTLINED_FUNCTION_97_1((uint64_t)v11, v8, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16));
  outlined init with copy of SharedGlobalsProviding(v6, (uint64_t)v28);
  uint64_t v17 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v18 = (v17 + 56) & ~v17;
  unint64_t v19 = (v10 + v18 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v20 = (v19 + 55) & 0xFFFFFFFFFFFFFFF8LL;
  os_log_type_t v21 = (void *)swift_allocObject(&unk_415E08, v20 + 40, v17 | 7);
  v21[2] = 0LL;
  v21[3] = 0LL;
  uint64_t v22 = v26;
  v21[4] = v0;
  v21[5] = v22;
  v21[6] = v27;
  OUTLINED_FUNCTION_97_1( (uint64_t)v21 + v18,  (uint64_t)v11,  *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 32));
  uint64_t v23 = (_OWORD *)((char *)v21 + v19);
  __int128 v24 = *(_OWORD *)(v3 + 16);
  *uint64_t v23 = *(_OWORD *)v3;
  v23[1] = v24;
  v23[2] = *(_OWORD *)(v3 + 32);
  outlined init with take of AppSelectionSignalComponent(v28, (uint64_t)v21 + v20);
  uint64_t v30 = *(void *)(v3 + 8);
  outlined init with take of ContactNeedsValueGuardFlow<INStartCallIntent>.FlowState( v3 + 16,  (uint64_t)v28,  &demangling cache variable for type metadata for String?);
  uint64_t v29 = *(void *)(v3 + 40);
  swift_retain();
  OUTLINED_FUNCTION_6_3();
  swift_retain();
  outlined retain of Set<String>(&v30);
  outlined retain of String?((uint64_t)v28);
  OUTLINED_FUNCTION_128_8();
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5( v14,  (uint64_t)&async function pointer to partial apply for closure #1 in PhoneCallFlow.selfLogging(input:phoneCallNLIntent:intentTypeName:resolvedApp:),  (uint64_t)v21);
  OUTLINED_FUNCTION_7_5();
}

uint64_t closure #1 in PhoneCallFlow.selfLogging(input:phoneCallNLIntent:intentTypeName:resolvedApp:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[40] = a8;
  v8[41] = v18;
  v8[38] = a6;
  v8[39] = a7;
  v8[36] = a4;
  v8[37] = a5;
  uint64_t v9 = type metadata accessor for Parse(0LL);
  v8[42] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v8[43] = v10;
  v8[44] = swift_task_alloc((*(void *)(v10 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = ((uint64_t (*)(void))type metadata accessor for TaskFlowType)(0LL);
  v8[45] = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  v8[46] = v12;
  v8[47] = swift_task_alloc((*(void *)(v12 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskFlowConfiguration?);
  v8[48] = swift_task_alloc((*(void *)(*(void *)(v13 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = ((uint64_t (*)(void))type metadata accessor for TaskFlowConfiguration)(0LL);
  v8[49] = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  v8[50] = v15;
  unint64_t v16 = (*(void *)(v15 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v8[51] = swift_task_alloc(v16);
  v8[52] = swift_task_alloc(v16);
  return swift_task_switch( closure #1 in PhoneCallFlow.selfLogging(input:phoneCallNLIntent:intentTypeName:resolvedApp:),  0LL,  0LL);
}

uint64_t closure #1 in PhoneCallFlow.selfLogging(input:phoneCallNLIntent:intentTypeName:resolvedApp:)()
{
  uint64_t v2 = (void *)v0[36];
  uint64_t v3 = v2[15];
  uint64_t v4 = v2[16];
  OUTLINED_FUNCTION_49_0(v2 + 12);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
  uint64_t v6 = OUTLINED_FUNCTION_8_2(v5, 64LL);
  v0[53] = v6;
  *(_OWORD *)(v6 + 16) = xmmword_31D880;
  id v7 = [objc_allocWithZone(INStartCallIntent) init];
  id v8 = [v7 _className];

  static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  OUTLINED_FUNCTION_119_8();
  *(void *)(v6 + 32) = v7;
  *(void *)(v6 + 40) = v1;
  id v9 = [objc_allocWithZone(INStartAudioCallIntent) init];
  id v10 = [v9 _className];

  static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  OUTLINED_FUNCTION_119_8();
  *(void *)(v6 + 48) = v9;
  *(void *)(v6 + 56) = v1;
  uint64_t v11 = *(int **)(v4 + 16);
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v11 + *v11);
  uint64_t v12 = (void *)swift_task_alloc(v11[1]);
  v0[54] = v12;
  *uint64_t v12 = v0;
  v12[1] = closure #1 in PhoneCallFlow.selfLogging(input:phoneCallNLIntent:intentTypeName:resolvedApp:);
  return v14(v6, v3, v4);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  OUTLINED_FUNCTION_20_18();
  OUTLINED_FUNCTION_18_23();
  *(void *)(v1 + 440) = v0;
  OUTLINED_FUNCTION_28_17(v2);
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  Swift::String v8;
  PhoneCallFlowDelegatePlugin::PhoneCallIntentClassNames_optional v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  os_log_s *v22;
  uint64_t v23;
  os_log_type_t v24;
  BOOL v25;
  unint64_t v26;
  uint64_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  id v73;
  uint64_t v74;
  uint64_t v1 = *(void *)(v0 + 440);
  uint64_t v3 = *(void *)(v0 + 296);
  uint64_t v2 = *(void **)(v0 + 304);
  uint64_t v4 = *(void **)(v0 + 288);
  uint64_t v5 = v4[20];
  uint64_t v6 = v4[21];
  __swift_project_boxed_opaque_existential_1(v4 + 17, v5);
  id v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 8))(v1, v5, v6);
  OUTLINED_FUNCTION_39();
  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = v3;
  v8._object = v2;
  v9.int value = PhoneCallIntentClassNames.init(intentClassName:)(v8).value;
  if (v9.value != PhoneCallFlowDelegatePlugin_PhoneCallIntentClassNames_unknownDefault)
  {
    uint64_t v72 = v7;
    PhoneCallIntentClassNames.intentInstance.getter(v9.value);
    uint64_t v73 = v10;
    specialized INIntent.typed<A>(as:)();
    uint64_t v12 = v11;

    if (v12)
    {
      uint64_t v13 = *(void *)(v0 + 384);
      uint64_t v14 = *(void *)(v0 + 392);
      uint64_t v15 = *(void *)(v0 + 368);
      unint64_t v16 = *(void **)(v0 + 376);
      uint64_t v17 = *(void *)(v0 + 360);
      unint64_t v19 = *(void *)(v0 + 296);
      uint64_t v18 = *(void *)(v0 + 304);
      *unint64_t v16 = 5LL;
      (*(void (**)(void *, void, uint64_t))(v15 + 104))( v16,  enum case for TaskFlowType.longDurationTask(_:),  v17);
      OUTLINED_FUNCTION_124();
      TaskFlowConfiguration.init(taskName:taskType:)(v19, v18, v16);
      if (__swift_getEnumTagSinglePayload(v13, 1LL, v14) == 1)
      {
        outlined destroy of PhoneCallNLIntent?( *(void *)(v0 + 384),  &demangling cache variable for type metadata for TaskFlowConfiguration?);
      }

      else
      {
        (*(void (**)(void, void, void))(*(void *)(v0 + 400) + 32LL))( *(void *)(v0 + 416),  *(void *)(v0 + 384),  *(void *)(v0 + 392));
        if (one-time initialization token for siriPhone != -1) {
          swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
        }
        unint64_t v20 = *(void *)(v0 + 304);
        os_log_type_t v21 = OUTLINED_FUNCTION_15_1();
        uint64_t v22 = (os_log_s *)__swift_project_value_buffer(v21, (uint64_t)static Logger.siriPhone);
        uint64_t v23 = swift_bridgeObjectRetain_n(v20, 2LL);
        Logger.logObject.getter(v23);
        __int128 v24 = OUTLINED_FUNCTION_6_0();
        uint64_t v25 = OUTLINED_FUNCTION_27_1(v24);
        uint64_t v26 = *(void *)(v0 + 304);
        if (v25)
        {
          uint64_t v27 = *(void *)(v0 + 296);
          os_log_type_t v28 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
          uint64_t v29 = OUTLINED_FUNCTION_7_0(32LL);
          uint64_t v74 = v29;
          *(_DWORD *)os_log_type_t v28 = 136315138;
          swift_bridgeObjectRetain();
          *(void *)(v0 + 280) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v27, v26, &v74);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 280, v0 + 288, v28 + 4);
          swift_bridgeObjectRelease_n(v26, 3LL);
          OUTLINED_FUNCTION_57_0( &dword_0,  v22,  (os_log_type_t)v22,  "#PhoneCallFlow task flow configuration instrumentation with intentTypeName: %s",  v28);
          OUTLINED_FUNCTION_17_0(v29);
          OUTLINED_FUNCTION_0_2(v29);
          OUTLINED_FUNCTION_0_2((uint64_t)v28);
        }

        else
        {

          swift_bridgeObjectRelease_n(v26, 2LL);
        }

        uint64_t v31 = *(void *)(v0 + 408);
        uint64_t v30 = *(void *)(v0 + 416);
        uint64_t v32 = *(void *)(v0 + 392);
        uint64_t v33 = *(void *)(v0 + 400);
        OUTLINED_FUNCTION_42((void *)(*(void *)(v0 + 288) + 56LL));
        OUTLINED_FUNCTION_8_37();
        uint64_t v34 = *(void *)(v0 + 120);
        uint64_t v35 = *(void *)(v0 + 128);
        OUTLINED_FUNCTION_42((void *)(v0 + 96));
        OUTLINED_FUNCTION_112_10();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16))(v31, v30, v32);
        unint64_t v36 = SiriKitEvent.__allocating_init(taskFlowConfiguration:_:)( v31,  INStartAudioCallIntent.overwriteCallGroups(newCallGroups:),  0LL);
        dispatch thunk of SiriKitEventSending.send(_:)(v36, v34, v35);
        swift_release(v36);
        OUTLINED_FUNCTION_72_0(*(uint64_t (**)(uint64_t, uint64_t))(v33 + 8));
        OUTLINED_FUNCTION_62_1();
      }
    }

    OUTLINED_FUNCTION_128_9();
    uint64_t v37 = OUTLINED_FUNCTION_71_20();
    if (v37 == enum case for Parse.NLv4IntentOnly(_:))
    {
      uint64_t v38 = *(void **)(v0 + 352);
      (*(void (**)(void *, void))(*(void *)(v0 + 344) + 96LL))(v38, *(void *)(v0 + 336));
      swift_unknownObjectRelease(*v38);
    }

    else
    {
      if (v37 != enum case for Parse.uso(_:))
      {
        __int128 v68 = *(void *)(v0 + 344);
        uint64_t v50 = *(void *)(v0 + 320);
        uint64_t v51 = *(void *)(v0 + 328);
        uint64_t v52 = *(void **)(v0 + 288);
        uint64_t v54 = v52[10];
        uint64_t v53 = v52[11];
        __int128 v69 = *(void *)(v0 + 352);
        uint64_t v71 = *(void *)(v0 + 336);
        __swift_project_boxed_opaque_existential_1(v52 + 7, v54);
        (*(void (**)(uint64_t, uint64_t))(v53 + 40))(v54, v53);
        uint64_t v66 = *(void *)(v0 + 40);
        uint64_t v67 = *(void *)(v0 + 48);
        __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v66);
        OUTLINED_FUNCTION_112_10();
        unint64_t v55 = [v73 typeName];
        uint64_t v63 = static String._unconditionallyBridgeFromObjectiveC(_:)(v55);
        uint64_t v57 = v56;

        *(void *)(v0 + 248) = *(void *)(v50 + 8);
        outlined init with take of ContactNeedsValueGuardFlow<INStartCallIntent>.FlowState( v50 + 16,  v0 + 232,  &demangling cache variable for type metadata for String?);
        *(void *)(v0 + 272) = *(void *)(v50 + 40);
        OUTLINED_FUNCTION_95_9(v51);
        uint64_t v58 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_415E30, 120LL);
        uint64_t v60 = *(_OWORD *)(v50 + 16);
        os_log_type_t v59 = *(_OWORD *)(v50 + 32);
        *(_OWORD *)(v58 + 16) = *(_OWORD *)v50;
        *(_OWORD *)(v58 + 32) = v60;
        *(_OWORD *)(v58 + 48) = v59;
        outlined init with take of AppSelectionSignalComponent((__int128 *)(v0 + 56), v58 + 64);
        *(_DWORD *)(v58 + 104) = v72;
        *(void *)(v58 + 112) = v52;
        swift_retain();
        OUTLINED_FUNCTION_95_1();
        outlined retain of Set<String>((void *)(v0 + 248));
        outlined retain of String?(v0 + 232);
        outlined retain of Set<String>((void *)(v0 + 272));
        uint64_t v61 = SiriKitEvent.__allocating_init(stateType:taskType:statusReason:_:)( 131LL,  v63,  v57,  31LL,  partial apply for closure #2 in closure #1 in PhoneCallFlow.selfLogging(input:phoneCallNLIntent:intentTypeName:resolvedApp:),  v58);
        dispatch thunk of SiriKitEventSending.send(_:)(v61, v66, v67);
        OUTLINED_FUNCTION_22();

        OUTLINED_FUNCTION_91_16();
        (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v69, v71);
        goto LABEL_17;
      }

      (*(void (**)(void, void))(*(void *)(v0 + 344) + 8LL))( *(void *)(v0 + 352),  *(void *)(v0 + 336));
    }

    uint64_t v40 = *(void *)(v0 + 320);
    uint64_t v39 = *(void *)(v0 + 328);
    unint64_t v41 = *(void *)(v0 + 288);
    OUTLINED_FUNCTION_82((void *)(v41 + 56));
    OUTLINED_FUNCTION_41_38();
    uint64_t v42 = *(void *)(v0 + 200);
    uint64_t v70 = *(void *)(v0 + 208);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 176), v42);
    OUTLINED_FUNCTION_112_10();
    uint64_t v43 = [v73 typeName];
    uint64_t v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
    uint64_t v64 = v45;
    unsigned int v65 = v44;

    *(void *)(v0 + 264) = *(void *)(v40 + 8);
    outlined init with take of ContactNeedsValueGuardFlow<INStartCallIntent>.FlowState( v40 + 16,  v0 + 216,  &demangling cache variable for type metadata for String?);
    *(void *)(v0 + 256) = *(void *)(v40 + 40);
    OUTLINED_FUNCTION_118_8(v39);
    uint64_t v46 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_415E58, 120LL);
    BOOL v48 = *(_OWORD *)(v40 + 16);
    os_log_type_t v47 = *(_OWORD *)(v40 + 32);
    *(_OWORD *)(v46 + 16) = *(_OWORD *)v40;
    *(_OWORD *)(v46 + 32) = v48;
    *(_OWORD *)(v46 + 48) = v47;
    outlined init with take of AppSelectionSignalComponent((__int128 *)(v0 + 136), v46 + 64);
    *(_DWORD *)(v46 + 104) = v72;
    *(void *)(v46 + 112) = v41;
    swift_retain();
    outlined retain of Set<String>((void *)(v0 + 264));
    outlined retain of String?(v0 + 216);
    outlined retain of Set<String>((void *)(v0 + 256));
    OUTLINED_FUNCTION_22_4();
    uint64_t v49 = SiriKitEvent.__allocating_init(stateType:taskType:statusReason:_:)( 131LL,  v65,  v64,  31LL,  partial apply for closure #1 in closure #1 in PhoneCallFlow.selfLogging(input:phoneCallNLIntent:intentTypeName:resolvedApp:),  v46);
    dispatch thunk of SiriKitEventSending.send(_:)(v49, v42, v70);
    OUTLINED_FUNCTION_22();

    OUTLINED_FUNCTION_62_1();
  }

uint64_t closure #2 in closure #1 in PhoneCallFlow.selfLogging(input:phoneCallNLIntent:intentTypeName:resolvedApp:)( uint64_t a1, uint64_t *a2, void *a3, uint64_t a4, void *a5, char a6)
{
  uint64_t v10 = *a2;
  uint64_t v11 = swift_retain();
  dispatch thunk of SiriKitEvent.SiriKitEventBuilder.app.setter(v11);
  uint64_t v12 = a5 + 7;
  uint64_t v14 = a5[10];
  uint64_t v13 = a5[11];
  __swift_project_boxed_opaque_existential_1(v12, v14);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v13 + 120))(v17, v14, v13);
  uint64_t v15 = static PhoneDomainContextMetricsUtils.populatePhoneDomainContextWithAppSelectionUserPersona(phoneCallNLIntent:contextNLType:userPersona:app:resolvedSiriKitContacts:callStateProvider:)( a3,  a6,  a4,  v10,  (uint64_t)_swiftEmptyArrayStorage,  v17);
  __swift_destroy_boxed_opaque_existential_1(v17);
  return dispatch thunk of SiriKitEvent.SiriKitEventBuilder.domainContext.setter(v15);
}

void *PhoneCallFlow.deinit()
{
  return v0;
}

uint64_t PhoneCallFlow.__deallocating_deinit()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t protocol witness for Flow.exitValue.getter in conformance PhoneCallFlow(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for PhoneCallFlow(0LL);
  return Flow<>.exitValue.getter(v3, a2);
}

uint64_t specialized PhoneCallFlow.__allocating_init(input:sharedGlobals:appFinder:eligibleAppsFinder:)( uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = type metadata accessor for PhoneCallFlow.State(0LL);
  __chkstk_darwin();
  unint64_t v16 = &v29[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  v32[3] = a6;
  v32[4] = a7;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v32);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32LL))(boxed_opaque_existential_1, a4, a6);
  uint64_t v18 = type metadata accessor for Input(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v19 + 16))(v16, a1, v18);
  swift_storeEnumTagMultiPayload(v16, v14, 0LL);
  outlined init with copy of SharedGlobalsProviding((uint64_t)a2, (uint64_t)v31);
  outlined init with copy of SharedGlobalsProviding((uint64_t)a3, (uint64_t)v30);
  outlined init with copy of SharedGlobalsProviding((uint64_t)v32, (uint64_t)v29);
  uint64_t v20 = (*(uint64_t (**)(_BYTE *, _BYTE *, _BYTE *, _BYTE *))(a5 + 184))(v16, v31, v30, v29);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v21 = type metadata accessor for Logger(0LL);
  uint64_t v22 = __swift_project_value_buffer(v21, (uint64_t)static Logger.siriPhone);
  uint64_t v23 = (os_log_s *)Logger.logObject.getter(v22);
  os_log_type_t v25 = static os_log_type_t.debug.getter(v23, v24);
  if (os_log_type_enabled(v23, v25))
  {
    uint64_t v26 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v26 = 0;
    _os_log_impl(&dword_0, v23, v25, "#PhoneCallFlow state is initialized.", v26, 2u);
    swift_slowDealloc(v26, -1LL, -1LL);
  }

  __swift_destroy_boxed_opaque_existential_1(v32);
  __swift_destroy_boxed_opaque_existential_1(a3);
  __swift_destroy_boxed_opaque_existential_1(a2);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(a1, v18);
  return v20;
}

uint64_t outlined init with copy of PhoneCallFlow.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PhoneCallFlow.State(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for PhoneCallFlow.State(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State( a1,  (uint64_t *)&type metadata singleton initialization cache for PhoneCallFlow.State,  (uint64_t)&nominal type descriptor for PhoneCallFlow.State);
}

uint64_t specialized PhoneCallFlow.init(state:sharedGlobals:appFinder:eligibleAppsFinder:)( uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v18[3] = a6;
  v18[4] = a7;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v18);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32LL))(boxed_opaque_existential_1, a4, a6);
  *(void *)(a5 + 176) = _swiftEmptyArrayStorage;
  outlined init with copy of SharedGlobalsProviding((uint64_t)a3, a5 + 16);
  outlined init with copy of PhoneCallFlow.State( a1,  a5 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin13PhoneCallFlow_state);
  outlined init with copy of SharedGlobalsProviding((uint64_t)a2, a5 + 56);
  outlined init with copy of SharedGlobalsProviding((uint64_t)v18, a5 + 96);
  uint64_t v14 = a2[3];
  uint64_t v15 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v14);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v15 + 216))(v17, v14, v15);
  __swift_destroy_boxed_opaque_existential_1(v18);
  __swift_destroy_boxed_opaque_existential_1(a3);
  outlined destroy of PhoneCallFlow.State(a1);
  outlined init with take of AppSelectionSignalComponent(v17, a5 + 136);
  __swift_destroy_boxed_opaque_existential_1(a2);
  return a5;
}

uint64_t type metadata accessor for PhoneCallFlow(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State( a1,  (uint64_t *)&type metadata singleton initialization cache for PhoneCallFlow,  (uint64_t)&nominal type descriptor for PhoneCallFlow);
}

uint64_t sub_2B4ACC()
{
  uint64_t v3 = v1 + v2;
  unint64_t v4 = (v3 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v5 = (v3 + 55) & 0xFFFFFFFFFFFFFFF8LL;
  OUTLINED_FUNCTION_26_13();
  OUTLINED_FUNCTION_20_37();
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + v4));
  swift_release(*(void *)(v0 + v5));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = OUTLINED_FUNCTION_100_9();
  return OUTLINED_FUNCTION_0_70(v6, v7, v8);
}

uint64_t partial apply for closure #3 in PhoneCallFlow.execute()(_BYTE *a1)
{
  return closure #3 in PhoneCallFlow.execute()( a1,  *(void *)(v1 + 16),  v1 + v4,  v1 + ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8LL),  *(_BYTE *)(v1 + ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8LL) + 40),  v1 + ((v4 + v3 + 55) & 0xFFFFFFFFFFFFFFF8LL));
}

void specialized PhoneAppResolutionOnDeviceFlowStrategy.init(supportedIntents:appFinder:sharedGlobals:startCallCATsSimple:phoneCallDisplayTextCATsSimple:responseGenerator:eligibleAppsFinder:appInfoBuilder:smartAppSelection:phoneAppResolutionHelper:phoneAppResolutionLogger:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24)
{
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  type metadata accessor for AppResolver(0LL);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v63 = v41 - v40;
  v77[3] = OUTLINED_FUNCTION_101_2();
  v77[4] = &protocol witness table for ResponseFactory;
  v77[0] = v29;
  uint64_t v75 = type metadata accessor for EligibleAppFinder();
  uint64_t v76 = &protocol witness table for EligibleAppFinder;
  uint64_t v64 = v75;
  v74[0] = v27;
  v73[3] = OUTLINED_FUNCTION_69_1();
  v73[4] = &protocol witness table for AppInfoBuilder;
  v73[0] = v25;
  *(void *)(a24 + 16) = _swiftEmptyArrayStorage;
  *(void *)(a24 + 24) = 0LL;
  *(_BYTE *)(a24 + 344) = 1;
  uint64_t v42 = OUTLINED_FUNCTION_101();
  *(void *)(a24 + 35__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v42;
  *(void *)(a24 + 360) = &outlined read-only object #0 of specialized PhoneAppResolutionOnDeviceFlowStrategy.init(supportedIntents:appFinder:sharedGlobals:startCallCATsSimple:phoneCallDisplayTextCATsSimple:responseGenerator:eligibleAppsFinder:appInfoBuilder:smartAppSelection:phoneAppResolutionHelper:phoneAppResolutionLogger:);
  *(void *)(a24 + 368) = 0LL;
  *(void *)(a24 + 376) = 0LL;
  *(void *)(a24 + 384) = v42;
  *(void *)(a24 + 39__swift_destroy_boxed_opaque_existential_1(v0 + 2) = &outlined read-only object #1 of specialized PhoneAppResolutionOnDeviceFlowStrategy.init(supportedIntents:appFinder:sharedGlobals:startCallCATsSimple:phoneCallDisplayTextCATsSimple:responseGenerator:eligibleAppsFinder:appInfoBuilder:smartAppSelection:phoneAppResolutionHelper:phoneAppResolutionLogger:);
  *(void *)(a24 + 400) = 0LL;
  *(void *)(a24 + 408) = 0LL;
  *(void *)(a24 + 416) = v42;
  *(void *)(a24 + 424) = &outlined read-only object #2 of specialized PhoneAppResolutionOnDeviceFlowStrategy.init(supportedIntents:appFinder:sharedGlobals:startCallCATsSimple:phoneCallDisplayTextCATsSimple:responseGenerator:eligibleAppsFinder:appInfoBuilder:smartAppSelection:phoneAppResolutionHelper:phoneAppResolutionLogger:);
  *(void *)(a24 + 43__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  *(void *)(a24 + 440) = 0LL;
  *(void *)(a24 + 19__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v39;
  outlined init with copy of SharedGlobalsProviding(v37, a24 + 32);
  __swift_project_boxed_opaque_existential_1(v35, v35[3]);
  OUTLINED_FUNCTION_7_3();
  uint64_t v43 = outlined init with take of AppSelectionSignalComponent(&v70, a24 + 152);
  OUTLINED_FUNCTION_79_14(v43, a24 + 200);
  outlined init with copy of SharedGlobalsProviding((uint64_t)v74, a24 + 112);
  outlined init with copy of SharedGlobalsProviding((uint64_t)v73, a24 + 72);
  *(void *)(a24 + 240) = v33;
  *(void *)(a24 + 248) = v31;
  outlined init with copy of SharedGlobalsProviding((uint64_t)v77, a24 + 256);
  if (a22)
  {
    OUTLINED_FUNCTION_22_4();
    OUTLINED_FUNCTION_29_3();
    uint64_t v45 = a22;
  }

  else
  {
    OUTLINED_FUNCTION_79_14(v44, (uint64_t)&v70);
    outlined init with copy of SharedGlobalsProviding((uint64_t)v74, (uint64_t)&v68);
    uint64_t v46 = type metadata accessor for AppUsageProvider();
    __int128 v65 = 0u;
    __int128 v66 = 0u;
    uint64_t v67 = 0LL;
    uint64_t v62 = OUTLINED_FUNCTION_8_2(v46, 16LL);
    OUTLINED_FUNCTION_44_1();
    OUTLINED_FUNCTION_22_4();
    OUTLINED_FUNCTION_29_3();
    AppResolver.init(appResolutionRules:)(_swiftEmptyArrayStorage);
    uint64_t v47 = type metadata accessor for PhoneAppResolutionHelper(0LL);
    uint64_t v48 = OUTLINED_FUNCTION_15_2(v47);
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v68, v69);
    __chkstk_darwin();
    OUTLINED_FUNCTION_8();
    uint64_t v51 = (uint64_t *)(v50 - v49);
    OUTLINED_FUNCTION_97_1(v50 - v49, v53, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v52 + 16));
    uint64_t v45 = specialized PhoneAppResolutionHelper.init(sharedGlobals:eligibleAppsFinder:smartAppSelection:phoneAppResolutionLogger:appUsageProvider:appResolver:)( (uint64_t)&v70,  *v51,  a21,  (uint64_t)&v65,  v62,  v63,  v48);
    __swift_destroy_boxed_opaque_existential_1(&v68);
  }

  *(void *)(a24 + 296) = v45;
  outlined init with copy of PhoneAppResolutionLogging?(a23, (uint64_t)&v68);
  if (v69)
  {
    OUTLINED_FUNCTION_118();
    swift_release(v31);
    uint64_t v54 = OUTLINED_FUNCTION_12_83();
    OUTLINED_FUNCTION_103_11(v54, &demangling cache variable for type metadata for PhoneAppResolutionLogging?);
    OUTLINED_FUNCTION_47_26();
    outlined init with take of AppSelectionSignalComponent(&v68, (uint64_t)&v70);
  }

  else
  {
    uint64_t v55 = v31;
    OUTLINED_FUNCTION_44_1();
    outlined destroy of PhoneCallNLIntent?( (uint64_t)&v68,  &demangling cache variable for type metadata for PhoneAppResolutionLogging?);
    OUTLINED_FUNCTION_79_14(v56, (uint64_t)&v68);
    id v57 = [(id)objc_opt_self(AssistantSiriAnalytics) sharedAnalytics];
    id v58 = [v57 defaultMessageStream];

    if (one-time initialization token for instance != -1) {
      swift_once(&one-time initialization token for instance, one-time initialization function for instance);
    }
    uint64_t v67 = &protocol witness table for EligibleAppFinder;
    *((void *)&v66 + 1) = v64;
    *(void *)&__int128 v65 = static EligibleAppFinder.instance;
    uint64_t v71 = &type metadata for PhoneAppResolutionLogger;
    uint64_t v72 = &protocol witness table for PhoneAppResolutionLogger;
    uint64_t v59 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_415DE0, 160LL);
    uint64_t v60 = (void *)(v59 + 16);
    *(void *)&__int128 v70 = v59;
    OUTLINED_FUNCTION_29_3();
    PhoneAppResolutionLogger.init(sharedGlobals:messageStream:eligibleAppsFinder:)(&v68, (uint64_t)v58, &v65, v60);
    OUTLINED_FUNCTION_118();
    swift_release(v55);
    OUTLINED_FUNCTION_50_2();
    uint64_t v61 = OUTLINED_FUNCTION_12_83();
    OUTLINED_FUNCTION_103_11(v61, &demangling cache variable for type metadata for PhoneAppResolutionLogging?);
    OUTLINED_FUNCTION_47_26();
  }

  outlined init with take of AppSelectionSignalComponent(&v70, a24 + 304);
  __swift_destroy_boxed_opaque_existential_1(v35);
  OUTLINED_FUNCTION_7_5();
}

uint64_t outlined init with take of PhoneCallFlow.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PhoneCallFlow.State(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t outlined assign with take of PhoneCallFlow.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PhoneCallFlow.State(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

uint64_t closure #1 in static CommonOutputs.promptCancelled(sharedGlobals:phoneCallCommonCATsSimple:)partial apply()
{
  uint64_t v2 = (void *)swift_task_alloc(dword_432CEC);
  *(void *)(v1 + 16) = v2;
  void *v2 = v1;
  v2[1] = closure #1 in static CommonOutputs.promptCancelled(sharedGlobals:phoneCallCommonCATsSimple:)partial apply;
  return OUTLINED_FUNCTION_45_30(v0);
}

uint64_t closure #1 in static CommonOutputs.promptCancelled(sharedGlobals:phoneCallCommonCATsSimple:)partial apply( uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(v1 + 8))(a1);
}

uint64_t sub_2B50EC()
{
  uint64_t v2 = OUTLINED_FUNCTION_100_9();
  return OUTLINED_FUNCTION_0_70(v2, v3, v4);
}

uint64_t partial apply for closure #1 in PhoneCallFlow.onAppResolutionComplete(originalInput:phoneCallNLIntent:intentType:)( uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, unint64_t, void, void, uint64_t))(**(void **)(v1 + 16) + 224LL))( v1 + v4,  v1 + ((v3 + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL),  *(void *)(v1 + ((((v3 + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL) + 47) & 0xFFFFFFFFFFFFFFF8LL)),  *(void *)(v1 + ((((v3 + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL) + 47) & 0xFFFFFFFFFFFFFFF8LL) + 8),  a1);
}

uint64_t outlined destroy of PhoneCallFlow.State(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PhoneCallFlow.State(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_2B51E0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)a1 + 152LL))();
}

uint64_t ObjC metadata update function for PhoneCallFlow()
{
  return type metadata accessor for PhoneCallFlow(0LL);
}

uint64_t type metadata completion function for PhoneCallFlow(uint64_t a1)
{
  v4[0] = "(";
  v4[1] = "(";
  v4[2] = "(";
  v4[3] = "(";
  v4[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
  uint64_t result = type metadata accessor for PhoneCallFlow.State(319LL);
  if (v3 <= 0x3F)
  {
    v4[5] = *(void *)(result - 8) + 64LL;
    uint64_t result = swift_updateClassMetadata2(a1, 256LL, 6LL, v4, a1 + 80);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

void *initializeBufferWithCopyOfBuffer for PhoneCallFlow.State(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 - 8);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (void *)(v12 + ((v6 + 16LL) & ~(unint64_t)v6));
    swift_retain();
  }

  else
  {
    switch(swift_getEnumCaseMultiPayload(a2, a3))
    {
      case 0u:
        uint64_t v8 = type metadata accessor for Input(0LL);
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16LL))(a1, a2, v8);
        id v9 = a1;
        uint64_t v10 = a3;
        uint64_t v11 = 0LL;
        goto LABEL_9;
      case 1u:
        uint64_t v13 = type metadata accessor for Input(0LL);
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16LL))(a1, a2, v13);
        uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (input: Input, phoneCallNLIntent: PhoneCallNLIntent, intentType: String));
        uint64_t v15 = *(int *)(v14 + 48);
        __int128 v16 = *(_OWORD *)((char *)a2 + v15 + 24);
        *(_OWORD *)((char *)a1 + v15 + 24) = v16;
        (**(void (***)(void))(v16 - 8))();
        uint64_t v17 = *(int *)(v14 + 64);
        uint64_t v18 = (void *)((char *)a1 + v17);
        uint64_t v19 = (void *)((char *)a2 + v17);
        uint64_t v20 = v19[1];
        *uint64_t v18 = *v19;
        v18[1] = v20;
        swift_bridgeObjectRetain();
        id v9 = a1;
        uint64_t v10 = a3;
        uint64_t v11 = 1LL;
        goto LABEL_9;
      case 2u:
        uint64_t v21 = type metadata accessor for Input(0LL);
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16LL))(a1, a2, v21);
        uint64_t v22 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (input: Input, phoneCallNLIntent: PhoneCallNLIntent, intentType: String, resolvedApp: AnnotatedApp));
        uint64_t v23 = v22[12];
        __int128 v24 = *(_OWORD *)((char *)a2 + v23 + 24);
        *(_OWORD *)((char *)a1 + v23 + 24) = v24;
        (**(void (***)(void))(v24 - 8))();
        uint64_t v25 = v22[16];
        uint64_t v26 = (void *)((char *)a1 + v25);
        uint64_t v27 = (void *)((char *)a2 + v25);
        uint64_t v28 = v27[1];
        *uint64_t v26 = *v27;
        v26[1] = v28;
        uint64_t v29 = v22[20];
        uint64_t v30 = (char *)a1 + v29;
        uint64_t v31 = (char *)a2 + v29;
        uint64_t v32 = *((void *)v31 + 1);
        *(void *)uint64_t v30 = *(void *)v31;
        *((void *)v30 + 1) = v32;
        uint64_t v33 = *((void *)v31 + 3);
        *((void *)v30 + __swift_destroy_boxed_opaque_existential_1(v0 + 2) = *((void *)v31 + 2);
        *((void *)v30 + 3) = v33;
        v30[32] = v31[32];
        *((void *)v30 + 5) = *((void *)v31 + 5);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v9 = a1;
        uint64_t v10 = a3;
        uint64_t v11 = 2LL;
        goto LABEL_9;
      case 3u:
        uint64_t v34 = type metadata accessor for Input(0LL);
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v34 - 8) + 16LL))(a1, a2, v34);
        uint64_t v35 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (input: Input, phoneCallNLIntent: PhoneCallNLIntent, selectedIntentName: PhoneCallIntentClassNames, resolvedApp: AnnotatedApp));
        uint64_t v36 = v35[12];
        __int128 v37 = *(_OWORD *)((char *)a2 + v36 + 24);
        *(_OWORD *)((char *)a1 + v36 + 24) = v37;
        (**(void (***)(void))(v37 - 8))();
        *((_BYTE *)a1 + v35[16]) = *((_BYTE *)a2 + v35[16]);
        uint64_t v38 = v35[20];
        uint64_t v39 = (char *)a1 + v38;
        uint64_t v40 = (char *)a2 + v38;
        uint64_t v41 = *((void *)v40 + 1);
        *(void *)uint64_t v39 = *(void *)v40;
        *((void *)v39 + 1) = v41;
        uint64_t v42 = *((void *)v40 + 3);
        *((void *)v39 + __swift_destroy_boxed_opaque_existential_1(v0 + 2) = *((void *)v40 + 2);
        *((void *)v39 + 3) = v42;
        v39[32] = v40[32];
        *((void *)v39 + 5) = *((void *)v40 + 5);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v9 = a1;
        uint64_t v10 = a3;
        uint64_t v11 = 3LL;
LABEL_9:
        swift_storeEnumTagMultiPayload(v9, v10, v11);
        break;
      default:
        memcpy(a1, a2, *(void *)(v5 + 64));
        break;
    }
  }

  return a1;
}

uint64_t destroy for PhoneCallFlow.State(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_getEnumCaseMultiPayload(a1, a2);
  switch((int)result)
  {
    case 0:
      uint64_t v4 = type metadata accessor for Input(0LL);
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL))(a1, v4);
    case 1:
      uint64_t v5 = type metadata accessor for Input(0LL);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8LL))(a1, v5);
      uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (input: Input, phoneCallNLIntent: PhoneCallNLIntent, intentType: String));
      __swift_destroy_boxed_opaque_existential_1((void *)(a1 + *(int *)(v6 + 48)));
      goto LABEL_7;
    case 2:
      uint64_t v7 = type metadata accessor for Input(0LL);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8LL))(a1, v7);
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (input: Input, phoneCallNLIntent: PhoneCallNLIntent, intentType: String, resolvedApp: AnnotatedApp));
      __swift_destroy_boxed_opaque_existential_1((void *)(a1 + *(int *)(v8 + 48)));
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 3:
      uint64_t v9 = type metadata accessor for Input(0LL);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8LL))(a1, v9);
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (input: Input, phoneCallNLIntent: PhoneCallNLIntent, selectedIntentName: PhoneCallIntentClassNames, resolvedApp: AnnotatedApp));
      __swift_destroy_boxed_opaque_existential_1((void *)(a1 + *(int *)(v8 + 48)));
LABEL_6:
      swift_release(*(void *)(a1 + *(int *)(v8 + 80)));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_7:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }

  return result;
}

_BYTE *initializeWithCopy for PhoneCallFlow.State(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload(a2, a3))
  {
    case 0u:
      uint64_t v6 = type metadata accessor for Input(0LL);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
      uint64_t v7 = a1;
      uint64_t v8 = a3;
      uint64_t v9 = 0LL;
      goto LABEL_7;
    case 1u:
      uint64_t v10 = type metadata accessor for Input(0LL);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(void *)(v10 - 8) + 16LL))(a1, a2, v10);
      uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (input: Input, phoneCallNLIntent: PhoneCallNLIntent, intentType: String));
      uint64_t v12 = *(int *)(v11 + 48);
      __int128 v13 = *(_OWORD *)&a2[v12 + 24];
      *(_OWORD *)&a1[v12 + 24] = v13;
      (**(void (***)(void))(v13 - 8))();
      uint64_t v14 = *(int *)(v11 + 64);
      uint64_t v15 = &a1[v14];
      __int128 v16 = &a2[v14];
      uint64_t v17 = v16[1];
      *uint64_t v15 = *v16;
      v15[1] = v17;
      swift_bridgeObjectRetain();
      uint64_t v7 = a1;
      uint64_t v8 = a3;
      uint64_t v9 = 1LL;
      goto LABEL_7;
    case 2u:
      uint64_t v18 = type metadata accessor for Input(0LL);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(void *)(v18 - 8) + 16LL))(a1, a2, v18);
      uint64_t v19 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (input: Input, phoneCallNLIntent: PhoneCallNLIntent, intentType: String, resolvedApp: AnnotatedApp));
      uint64_t v20 = v19[12];
      __int128 v21 = *(_OWORD *)&a2[v20 + 24];
      *(_OWORD *)&a1[v20 + 24] = v21;
      (**(void (***)(void))(v21 - 8))();
      uint64_t v22 = v19[16];
      uint64_t v23 = &a1[v22];
      __int128 v24 = &a2[v22];
      uint64_t v25 = v24[1];
      *uint64_t v23 = *v24;
      v23[1] = v25;
      uint64_t v26 = v19[20];
      uint64_t v27 = &a1[v26];
      uint64_t v28 = &a2[v26];
      uint64_t v29 = *((void *)v28 + 1);
      *(void *)uint64_t v27 = *(void *)v28;
      *((void *)v27 + 1) = v29;
      uint64_t v30 = *((void *)v28 + 3);
      *((void *)v27 + __swift_destroy_boxed_opaque_existential_1(v0 + 2) = *((void *)v28 + 2);
      *((void *)v27 + 3) = v30;
      v27[32] = v28[32];
      *((void *)v27 + 5) = *((void *)v28 + 5);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v7 = a1;
      uint64_t v8 = a3;
      uint64_t v9 = 2LL;
      goto LABEL_7;
    case 3u:
      uint64_t v31 = type metadata accessor for Input(0LL);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(void *)(v31 - 8) + 16LL))(a1, a2, v31);
      uint64_t v32 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (input: Input, phoneCallNLIntent: PhoneCallNLIntent, selectedIntentName: PhoneCallIntentClassNames, resolvedApp: AnnotatedApp));
      uint64_t v33 = v32[12];
      __int128 v34 = *(_OWORD *)&a2[v33 + 24];
      *(_OWORD *)&a1[v33 + 24] = v34;
      (**(void (***)(void))(v34 - 8))();
      a1[v32[16]] = a2[v32[16]];
      uint64_t v35 = v32[20];
      uint64_t v36 = &a1[v35];
      __int128 v37 = &a2[v35];
      uint64_t v38 = *((void *)v37 + 1);
      *(void *)uint64_t v36 = *(void *)v37;
      *((void *)v36 + 1) = v38;
      uint64_t v39 = *((void *)v37 + 3);
      *((void *)v36 + __swift_destroy_boxed_opaque_existential_1(v0 + 2) = *((void *)v37 + 2);
      *((void *)v36 + 3) = v39;
      v36[32] = v37[32];
      *((void *)v36 + 5) = *((void *)v37 + 5);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v7 = a1;
      uint64_t v8 = a3;
      uint64_t v9 = 3LL;
LABEL_7:
      swift_storeEnumTagMultiPayload(v7, v8, v9);
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
      break;
  }

  return a1;
}

_BYTE *assignWithCopy for PhoneCallFlow.State(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    outlined destroy of PhoneCallFlow.State((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload(a2, a3))
    {
      case 0u:
        uint64_t v6 = type metadata accessor for Input(0LL);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
        uint64_t v7 = a1;
        uint64_t v8 = a3;
        uint64_t v9 = 0LL;
        goto LABEL_8;
      case 1u:
        uint64_t v10 = type metadata accessor for Input(0LL);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(void *)(v10 - 8) + 16LL))(a1, a2, v10);
        uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (input: Input, phoneCallNLIntent: PhoneCallNLIntent, intentType: String));
        uint64_t v12 = *(int *)(v11 + 48);
        __int128 v13 = &a1[v12];
        uint64_t v14 = *(void *)&a2[v12 + 24];
        *((void *)v13 + 3) = v14;
        *((void *)v13 + 4) = *(void *)&a2[v12 + 32];
        (**(void (***)(void))(v14 - 8))();
        uint64_t v15 = *(int *)(v11 + 64);
        __int128 v16 = &a1[v15];
        uint64_t v17 = &a2[v15];
        *__int128 v16 = *v17;
        v16[1] = v17[1];
        swift_bridgeObjectRetain();
        uint64_t v7 = a1;
        uint64_t v8 = a3;
        uint64_t v9 = 1LL;
        goto LABEL_8;
      case 2u:
        uint64_t v18 = type metadata accessor for Input(0LL);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(void *)(v18 - 8) + 16LL))(a1, a2, v18);
        uint64_t v19 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (input: Input, phoneCallNLIntent: PhoneCallNLIntent, intentType: String, resolvedApp: AnnotatedApp));
        uint64_t v20 = v19[12];
        __int128 v21 = &a1[v20];
        uint64_t v22 = *(void *)&a2[v20 + 24];
        *((void *)v21 + 3) = v22;
        *((void *)v21 + 4) = *(void *)&a2[v20 + 32];
        (**(void (***)(void))(v22 - 8))();
        uint64_t v23 = v19[16];
        __int128 v24 = &a1[v23];
        uint64_t v25 = &a2[v23];
        *__int128 v24 = *v25;
        v24[1] = v25[1];
        uint64_t v26 = v19[20];
        uint64_t v27 = &a1[v26];
        uint64_t v28 = &a2[v26];
        *(void *)uint64_t v27 = *(void *)v28;
        *((void *)v27 + 1) = *((void *)v28 + 1);
        *((void *)v27 + __swift_destroy_boxed_opaque_existential_1(v0 + 2) = *((void *)v28 + 2);
        *((void *)v27 + 3) = *((void *)v28 + 3);
        v27[32] = v28[32];
        *((void *)v27 + 5) = *((void *)v28 + 5);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v7 = a1;
        uint64_t v8 = a3;
        uint64_t v9 = 2LL;
        goto LABEL_8;
      case 3u:
        uint64_t v29 = type metadata accessor for Input(0LL);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(void *)(v29 - 8) + 16LL))(a1, a2, v29);
        uint64_t v30 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (input: Input, phoneCallNLIntent: PhoneCallNLIntent, selectedIntentName: PhoneCallIntentClassNames, resolvedApp: AnnotatedApp));
        uint64_t v31 = v30[12];
        uint64_t v32 = &a1[v31];
        uint64_t v33 = *(void *)&a2[v31 + 24];
        *((void *)v32 + 3) = v33;
        *((void *)v32 + 4) = *(void *)&a2[v31 + 32];
        (**(void (***)(void))(v33 - 8))();
        a1[v30[16]] = a2[v30[16]];
        uint64_t v34 = v30[20];
        uint64_t v35 = &a1[v34];
        uint64_t v36 = &a2[v34];
        *(void *)uint64_t v35 = *(void *)v36;
        *((void *)v35 + 1) = *((void *)v36 + 1);
        *((void *)v35 + __swift_destroy_boxed_opaque_existential_1(v0 + 2) = *((void *)v36 + 2);
        *((void *)v35 + 3) = *((void *)v36 + 3);
        v35[32] = v36[32];
        *((void *)v35 + 5) = *((void *)v36 + 5);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v7 = a1;
        uint64_t v8 = a3;
        uint64_t v9 = 3LL;
LABEL_8:
        swift_storeEnumTagMultiPayload(v7, v8, v9);
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
        break;
    }
  }

  return a1;
}

_BYTE *initializeWithTake for PhoneCallFlow.State(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload(a2, a3))
  {
    case 0u:
      uint64_t v6 = type metadata accessor for Input(0LL);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
      uint64_t v7 = a1;
      uint64_t v8 = a3;
      uint64_t v9 = 0LL;
      goto LABEL_7;
    case 1u:
      uint64_t v10 = type metadata accessor for Input(0LL);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(void *)(v10 - 8) + 32LL))(a1, a2, v10);
      uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (input: Input, phoneCallNLIntent: PhoneCallNLIntent, intentType: String));
      uint64_t v12 = *(int *)(v11 + 48);
      __int128 v13 = &a1[v12];
      uint64_t v14 = &a2[v12];
      __int128 v15 = *((_OWORD *)v14 + 1);
      *(_OWORD *)__int128 v13 = *(_OWORD *)v14;
      *((_OWORD *)v13 + 1) = v15;
      *((void *)v13 + 4) = *((void *)v14 + 4);
      *(_OWORD *)&a1[*(int *)(v11 + 64)] = *(_OWORD *)&a2[*(int *)(v11 + 64)];
      uint64_t v7 = a1;
      uint64_t v8 = a3;
      uint64_t v9 = 1LL;
      goto LABEL_7;
    case 2u:
      uint64_t v16 = type metadata accessor for Input(0LL);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(void *)(v16 - 8) + 32LL))(a1, a2, v16);
      uint64_t v17 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (input: Input, phoneCallNLIntent: PhoneCallNLIntent, intentType: String, resolvedApp: AnnotatedApp));
      uint64_t v18 = v17[12];
      uint64_t v19 = &a1[v18];
      uint64_t v20 = &a2[v18];
      __int128 v21 = *((_OWORD *)v20 + 1);
      *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
      *((_OWORD *)v19 + 1) = v21;
      *((void *)v19 + 4) = *((void *)v20 + 4);
      *(_OWORD *)&a1[v17[16]] = *(_OWORD *)&a2[v17[16]];
      uint64_t v22 = v17[20];
      uint64_t v23 = &a1[v22];
      __int128 v24 = &a2[v22];
      __int128 v25 = v24[1];
      *uint64_t v23 = *v24;
      v23[1] = v25;
      v23[2] = v24[2];
      uint64_t v7 = a1;
      uint64_t v8 = a3;
      uint64_t v9 = 2LL;
      goto LABEL_7;
    case 3u:
      uint64_t v26 = type metadata accessor for Input(0LL);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(void *)(v26 - 8) + 32LL))(a1, a2, v26);
      uint64_t v27 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (input: Input, phoneCallNLIntent: PhoneCallNLIntent, selectedIntentName: PhoneCallIntentClassNames, resolvedApp: AnnotatedApp));
      uint64_t v28 = v27[12];
      uint64_t v29 = &a1[v28];
      uint64_t v30 = &a2[v28];
      __int128 v31 = *((_OWORD *)v30 + 1);
      *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
      *((_OWORD *)v29 + 1) = v31;
      *((void *)v29 + 4) = *((void *)v30 + 4);
      a1[v27[16]] = a2[v27[16]];
      uint64_t v32 = v27[20];
      uint64_t v33 = &a1[v32];
      uint64_t v34 = (__int128 *)&a2[v32];
      __int128 v35 = v34[2];
      __int128 v36 = *v34;
      v33[1] = v34[1];
      v33[2] = v35;
      *uint64_t v33 = v36;
      uint64_t v7 = a1;
      uint64_t v8 = a3;
      uint64_t v9 = 3LL;
LABEL_7:
      swift_storeEnumTagMultiPayload(v7, v8, v9);
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
      break;
  }

  return a1;
}

_BYTE *assignWithTake for PhoneCallFlow.State(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    outlined destroy of PhoneCallFlow.State((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload(a2, a3))
    {
      case 0u:
        uint64_t v6 = type metadata accessor for Input(0LL);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
        uint64_t v7 = a1;
        uint64_t v8 = a3;
        uint64_t v9 = 0LL;
        goto LABEL_8;
      case 1u:
        uint64_t v10 = type metadata accessor for Input(0LL);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(void *)(v10 - 8) + 32LL))(a1, a2, v10);
        uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (input: Input, phoneCallNLIntent: PhoneCallNLIntent, intentType: String));
        uint64_t v12 = *(int *)(v11 + 48);
        __int128 v13 = &a1[v12];
        uint64_t v14 = &a2[v12];
        __int128 v15 = *((_OWORD *)v14 + 1);
        *(_OWORD *)__int128 v13 = *(_OWORD *)v14;
        *((_OWORD *)v13 + 1) = v15;
        *((void *)v13 + 4) = *((void *)v14 + 4);
        *(_OWORD *)&a1[*(int *)(v11 + 64)] = *(_OWORD *)&a2[*(int *)(v11 + 64)];
        uint64_t v7 = a1;
        uint64_t v8 = a3;
        uint64_t v9 = 1LL;
        goto LABEL_8;
      case 2u:
        uint64_t v16 = type metadata accessor for Input(0LL);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(void *)(v16 - 8) + 32LL))(a1, a2, v16);
        uint64_t v17 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (input: Input, phoneCallNLIntent: PhoneCallNLIntent, intentType: String, resolvedApp: AnnotatedApp));
        uint64_t v18 = v17[12];
        uint64_t v19 = &a1[v18];
        uint64_t v20 = &a2[v18];
        __int128 v21 = *((_OWORD *)v20 + 1);
        *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
        *((_OWORD *)v19 + 1) = v21;
        *((void *)v19 + 4) = *((void *)v20 + 4);
        *(_OWORD *)&a1[v17[16]] = *(_OWORD *)&a2[v17[16]];
        uint64_t v22 = v17[20];
        uint64_t v23 = &a1[v22];
        __int128 v24 = &a2[v22];
        __int128 v25 = v24[1];
        *uint64_t v23 = *v24;
        v23[1] = v25;
        v23[2] = v24[2];
        uint64_t v7 = a1;
        uint64_t v8 = a3;
        uint64_t v9 = 2LL;
        goto LABEL_8;
      case 3u:
        uint64_t v26 = type metadata accessor for Input(0LL);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(void *)(v26 - 8) + 32LL))(a1, a2, v26);
        uint64_t v27 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (input: Input, phoneCallNLIntent: PhoneCallNLIntent, selectedIntentName: PhoneCallIntentClassNames, resolvedApp: AnnotatedApp));
        uint64_t v28 = v27[12];
        uint64_t v29 = &a1[v28];
        uint64_t v30 = &a2[v28];
        __int128 v31 = *((_OWORD *)v30 + 1);
        *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
        *((_OWORD *)v29 + 1) = v31;
        *((void *)v29 + 4) = *((void *)v30 + 4);
        a1[v27[16]] = a2[v27[16]];
        uint64_t v32 = v27[20];
        uint64_t v33 = &a1[v32];
        uint64_t v34 = (__int128 *)&a2[v32];
        __int128 v35 = v34[2];
        __int128 v36 = *v34;
        v33[1] = v34[1];
        v33[2] = v35;
        *uint64_t v33 = v36;
        uint64_t v7 = a1;
        uint64_t v8 = a3;
        uint64_t v9 = 3LL;
LABEL_8:
        swift_storeEnumTagMultiPayload(v7, v8, v9);
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
        break;
    }
  }

  return a1;
}

uint64_t type metadata completion function for PhoneCallFlow.State(uint64_t a1)
{
  uint64_t result = type metadata accessor for Input(319LL);
  if (v3 <= 0x3F)
  {
    v12[0] = *(void *)(result - 8) + 64LL;
    uint64_t v4 = v12[0];
    swift_getTupleTypeLayout3(v11);
    v12[1] = v11;
    uint64_t v6 = v4;
    uint64_t v7 = "(";
    uint64_t v8 = &unk_33E410;
    uint64_t v9 = &unk_33E428;
    swift_getTupleTypeLayout(v10, 0LL, 4LL, &v6);
    v12[2] = v10;
    uint64_t v6 = v4;
    uint64_t v7 = "(";
    uint64_t v8 = &unk_33E440;
    uint64_t v9 = &unk_33E428;
    swift_getTupleTypeLayout(v5, 0LL, 4LL, &v6);
    v12[3] = v5;
    swift_initEnumMetadataMultiPayload(a1, 256LL, 4LL, v12);
    return 0LL;
  }

  return result;
}

uint64_t sub_2B619C()
{
  return swift_deallocObject(v0, 160LL, 7LL);
}

uint64_t partial apply for closure #1 in PhoneCallFlow.publishUnsupportedOutput(unsupportedReason:input:intentName:app:)( uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc(dword_43F35C);
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return closure #1 in PhoneCallFlow.publishUnsupportedOutput(unsupportedReason:input:intentName:app:)(a1, v1);
}

uint64_t sub_2B6234()
{
  uint64_t v2 = OUTLINED_FUNCTION_100_9();
  return OUTLINED_FUNCTION_0_70(v2, v3, v4);
}

uint64_t partial apply for closure #1 in PhoneCallFlow.selfLogging(input:phoneCallNLIntent:intentTypeName:resolvedApp:)( uint64_t a1)
{
  uint64_t v4 = *(void *)(OUTLINED_FUNCTION_3_4() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 56LL) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = v1[5];
  uint64_t v10 = v1[6];
  uint64_t v11 = (uint64_t)v1 + v5;
  uint64_t v12 = (uint64_t)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8LL);
  __int128 v13 = (void *)swift_task_alloc(dword_43F36C);
  *(void *)(v2 + 16) = v13;
  *__int128 v13 = v2;
  v13[1] = protocol witness for UnsupportedValueFlowStrategyAsync.makeLaunchAppWithIntentOutput(resolveRecord:) in conformance ContactUnsupportedFlowStrategy<A>;
  return closure #1 in PhoneCallFlow.selfLogging(input:phoneCallNLIntent:intentTypeName:resolvedApp:)( a1,  v6,  v7,  v8,  v9,  v10,  v11,  v12);
}

uint64_t partial apply for closure #2 in closure #1 in PhoneCallFlow.selfLogging(input:phoneCallNLIntent:intentTypeName:resolvedApp:)()
{
  return closure #2 in closure #1 in PhoneCallFlow.selfLogging(input:phoneCallNLIntent:intentTypeName:resolvedApp:)( v0,  v1,  v2,  v3,  v4,  0);
}

uint64_t objectdestroy_25Tm()
{
  return swift_deallocObject(v0, 120LL, 7LL);
}

uint64_t partial apply for closure #1 in closure #1 in PhoneCallFlow.selfLogging(input:phoneCallNLIntent:intentTypeName:resolvedApp:)()
{
  return closure #2 in closure #1 in PhoneCallFlow.selfLogging(input:phoneCallNLIntent:intentTypeName:resolvedApp:)( v0,  v1,  v2,  v3,  v4,  1);
}

uint64_t OUTLINED_FUNCTION_9_81()
{
  return swift_task_dealloc(*(void *)(v0 + 1456));
}

uint64_t OUTLINED_FUNCTION_14_75(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_39_32()
{
  return static CATOption.defaultMode.getter();
}

uint64_t OUTLINED_FUNCTION_41_38()
{
  return v0(v1, v2);
}

void OUTLINED_FUNCTION_42_26()
{
}

uint64_t OUTLINED_FUNCTION_44_32()
{
  return swift_release(*(void *)(v0 - 360));
}

uint64_t OUTLINED_FUNCTION_45_30(void *a1)
{
  return closure #1 in static CommonOutputs.promptCancelled(sharedGlobals:phoneCallCommonCATsSimple:)(a1);
}

uint64_t OUTLINED_FUNCTION_47_26()
{
  return __swift_destroy_boxed_opaque_existential_1(v0);
}

uint64_t OUTLINED_FUNCTION_54_25()
{
  uint64_t v2 = *(void *)(v1 + 896);
  __swift_project_boxed_opaque_existential_1(v0, v2);
  return v2;
}

uint64_t OUTLINED_FUNCTION_58_25(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static PhoneCallRequestSupportPolicy.getSiriKitIntent(forIntent:input:app:sharedGlobals:)(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_59_21(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 1320);
  *(void *)(v2 - 144) = *(void *)(v1 + 1328);
  *(void *)(v2 - 136) = v3;
  return swift_task_dealloc(a1);
}

  ;
}

uint64_t OUTLINED_FUNCTION_62_24()
{
  return swift_errorRelease(v0);
}

uint64_t OUTLINED_FUNCTION_71_20()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v0, v1);
}

void *OUTLINED_FUNCTION_73_27()
{
  return __swift_project_boxed_opaque_existential_1(v0, *(void *)(v1 + 80));
}

  ;
}

uint64_t OUTLINED_FUNCTION_78_24()
{
  return type metadata accessor for PhoneCallDisplayTextCATsSimple(0LL);
}

void OUTLINED_FUNCTION_84_18()
{
}

uint64_t OUTLINED_FUNCTION_86_16(uint64_t a1)
{
  return static ExecuteResponse.ongoing<A>(next:childCompletion:)(a1, v1, v2, v3);
}

uint64_t OUTLINED_FUNCTION_91_16()
{
  return __swift_destroy_boxed_opaque_existential_1(v0);
}

uint64_t OUTLINED_FUNCTION_100_9()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_101_11()
{
  return Logger.logObject.getter();
}

void OUTLINED_FUNCTION_103_11(uint64_t a1, uint64_t *a2)
{
}

uint64_t OUTLINED_FUNCTION_106_10(uint64_t a1)
{
  return outlined init with take of AppSelectionSignalComponent(v1, a1 + 16);
}

uint64_t OUTLINED_FUNCTION_112_10()
{
  return type metadata accessor for SiriKitEvent(0LL);
}

uint64_t OUTLINED_FUNCTION_114_9()
{
  return outlined assign with take of PhoneCallFlow.State(v1, v0);
}

uint64_t OUTLINED_FUNCTION_115_10()
{
  return __swift_destroy_boxed_opaque_existential_1(v0);
}

void OUTLINED_FUNCTION_117_10(uint64_t a1, uint64_t *a2)
{
}

void OUTLINED_FUNCTION_118_8(uint64_t a1)
{
}

  ;
}

uint64_t OUTLINED_FUNCTION_125_9@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v1, v2);
}

  ;
}

void OUTLINED_FUNCTION_129_11(uint64_t a1)
{
}

double OUTLINED_FUNCTION_136_8()
{
  double result = 0.0;
  *(_OWORD *)(v0 - 128) = 0u;
  *(_OWORD *)(v0 - 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0u;
  *(void *)(v0 - 96) = 0LL;
  return result;
}

void OUTLINED_FUNCTION_138_7()
{
}

  ;
}

void OUTLINED_FUNCTION_140_10(uint64_t a1)
{
}

void PhonePersonAndVisualData.Builder.__allocating_init()()
{
}

uint64_t key path setter for PhonePersonAndVisualData.Builder.person : PhonePersonAndVisualData.Builder( void *a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 112LL);
  uint64_t v3 = swift_retain(*a1);
  return v2(v3);
}

uint64_t PhonePersonAndVisualData.Builder.person.getter()
{
  return swift_retain();
}

void PhonePersonAndVisualData.Builder.person.setter(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  *(void *)(v1 + 16) = a1;
  swift_release(v3);
  OUTLINED_FUNCTION_60_2();
}

void PhonePersonAndVisualData.Builder.imageData.getter(uint64_t a1@<X8>)
{
}

void PhonePersonAndVisualData.Builder.imageData.setter(uint64_t a1)
{
}

void PhonePersonAndVisualData.Builder.imageData.modify(uint64_t a1)
{
}

void PhonePersonAndVisualData.Builder.selectAction.getter(uint64_t a1@<X8>)
{
}

void PhonePersonAndVisualData.Builder.selectAction.setter(uint64_t a1)
{
}

void PhonePersonAndVisualData.Builder.imageData.setter(uint64_t a1, void *a2)
{
  uint64_t v4 = v2 + *a2;
  OUTLINED_FUNCTION_25_0(v4, (uint64_t)v5, 33LL);
  outlined assign with take of SpeakableString?(a1, v4);
  swift_endAccess(v5);
  OUTLINED_FUNCTION_60_2();
}

void PhonePersonAndVisualData.Builder.selectAction.modify(uint64_t a1)
{
}

void PhonePersonAndVisualData.Builder.init()()
{
  *(void *)(v0 + 16) = 0LL;
  uint64_t v1 = v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin24PhonePersonAndVisualData7Builder_imageData;
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_15_12(v1);
  OUTLINED_FUNCTION_15_12(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin24PhonePersonAndVisualData7Builder_selectAction);
  OUTLINED_FUNCTION_6();
}

uint64_t PhonePersonAndVisualData.Builder.withPerson(_:)()
{
  uint64_t v1 = *(void (**)(uint64_t))(*(void *)v0 + 112LL);
  uint64_t v2 = swift_retain();
  v1(v2);
  return OUTLINED_FUNCTION_27_0(v0);
}

uint64_t PhonePersonAndVisualData.Builder.withPerson(_:)(uint64_t a1)
{
  if (a1) {
    a1 = dispatch thunk of DialogPerson.Builder.build()(a1);
  }
  (*(void (**)(uint64_t))(*(void *)v1 + 112LL))(a1);
  return OUTLINED_FUNCTION_27_0(v1);
}

void PhonePersonAndVisualData.Builder.withImageData(_:)()
{
}

void PhonePersonAndVisualData.Builder.withImageData(print:speak:)()
{
  uint64_t v1 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_13_4(v1);
  (*(void (**)(uint64_t))(v2 + 136))(v0);
  UsoEntity_common_Person.usoPerson.getter();
  OUTLINED_FUNCTION_16();
}

void PhonePersonAndVisualData.Builder.withSelectAction(_:)()
{
}

void PhonePersonAndVisualData.Builder.withSelectAction(print:speak:)()
{
  uint64_t v1 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_13_4(v1);
  (*(void (**)(uint64_t))(v2 + 160))(v0);
  UsoEntity_common_Person.usoPerson.getter();
  OUTLINED_FUNCTION_16();
}

void PhonePersonAndVisualData.Builder.build()()
{
  uint64_t v0 = type metadata accessor for PhonePersonAndVisualData(0LL);
  OUTLINED_FUNCTION_15_2(v0);
  uint64_t v1 = UsoEntity_common_Person.usoPerson.getter();
  PhonePersonAndVisualData.init(builder:)(v1);
  OUTLINED_FUNCTION_2();
}

void PhonePersonAndVisualData.__allocating_init(builder:)(uint64_t a1)
{
}

uint64_t type metadata accessor for PhonePersonAndVisualData(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State( a1,  (uint64_t *)&type metadata singleton initialization cache for PhonePersonAndVisualData,  (uint64_t)&nominal type descriptor for PhonePersonAndVisualData);
}

uint64_t PhonePersonAndVisualData.Builder.deinit()
{
  return v0;
}

uint64_t PhonePersonAndVisualData.Builder.__deallocating_deinit()
{
  return PhoneCallProvider.Builder.__deallocating_deinit((void (*)(void))PhonePersonAndVisualData.Builder.deinit);
}

unint64_t static PhonePersonAndVisualData.catTypeName.getter()
{
  return 0xD000000000000019LL;
}

uint64_t PhonePersonAndVisualData.imageData.getter@<X0>(uint64_t a1@<X8>)
{
  return OUTLINED_FUNCTION_10_17(a1, OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin24PhonePersonAndVisualData_imageData);
}

uint64_t PhonePersonAndVisualData.selectAction.getter@<X0>(uint64_t a1@<X8>)
{
  return OUTLINED_FUNCTION_10_17( a1,  OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin24PhonePersonAndVisualData_selectAction);
}

void PhonePersonAndVisualData.init(builder:)(uint64_t a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  *(void *)(v2 + 16) = 0LL;
  *(void *)(v2 + 24) = OUTLINED_FUNCTION_26_57();
  (*(void (**)(void))(*(void *)a1 + 128LL))();
  uint64_t v4 = OUTLINED_FUNCTION_28_52(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin24PhonePersonAndVisualData_imageData);
  (*(void (**)(uint64_t))(*(void *)a1 + 152LL))(v4);
  swift_release(a1);
  OUTLINED_FUNCTION_28_52(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin24PhonePersonAndVisualData_selectAction);
  OUTLINED_FUNCTION_6();
}

void PhonePersonAndVisualData.__allocating_init(person:imageData:selectAction:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t v9 = type metadata accessor for PhonePersonAndVisualData.Builder(0LL);
  uint64_t v10 = OUTLINED_FUNCTION_15_2(v9);
  PhonePersonAndVisualData.Builder.init()();
  (*(void (**)(uint64_t))(*(void *)v10 + 184LL))(a1);
  OUTLINED_FUNCTION_25_57();
  uint64_t v11 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 200LL))(a2);
  swift_release(v4);
  (*(void (**)(uint64_t))(*(void *)v11 + 216LL))(a3);
  OUTLINED_FUNCTION_25_57();
  (*(void (**)(uint64_t))(v5 + 152))(v4);
  swift_release(a1);
  outlined destroy of SpeakableString?(a3);
  outlined destroy of SpeakableString?(a2);
  OUTLINED_FUNCTION_16();
}

uint64_t type metadata accessor for PhonePersonAndVisualData.Builder(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State( a1,  (uint64_t *)&type metadata singleton initialization cache for PhonePersonAndVisualData.Builder,  (uint64_t)&nominal type descriptor for PhonePersonAndVisualData.Builder);
}

uint64_t PhonePersonAndVisualData.getProperty(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t result = __chkstk_darwin();
  uint64_t v11 = (char *)&v21 - v10;
  BOOL v12 = a1 == 0x6E6F73726570LL && a2 == 0xE600000000000000LL;
  if (v12 || (uint64_t result = OUTLINED_FUNCTION_1_5(0x6E6F73726570LL, 0xE600000000000000LL), (result & 1) != 0))
  {
    uint64_t v13 = *(void *)(v3 + 24);
    if (v13)
    {
      *(void *)(a3 + 24) = type metadata accessor for PhonePerson(0LL);
      *(void *)a3 = v13;
      return swift_retain();
    }

    goto LABEL_24;
  }

  BOOL v14 = a1 == 0x7461446567616D69LL && a2 == 0xE900000000000061LL;
  if (v14 || (OUTLINED_FUNCTION_1_5(0x7461446567616D69LL, 0xE900000000000061LL) & 1) != 0)
  {
    outlined init with copy of SpeakableString?( v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin24PhonePersonAndVisualData_imageData,  (uint64_t)v11);
    uint64_t v15 = OUTLINED_FUNCTION_26_0();
    if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1LL, v15) != 1)
    {
      uint64_t v17 = OUTLINED_FUNCTION_23_10();
      return (*(uint64_t (**)(void *, char *, uint64_t))(*(void *)(v15 - 8) + 32LL))(v17, v11, v15);
    }

    uint64_t v16 = (uint64_t)v11;
    goto LABEL_23;
  }

  if (a1 != 0x63417463656C6573LL || a2 != 0xEC0000006E6F6974LL)
  {
    uint64_t result = OUTLINED_FUNCTION_1_5(0x63417463656C6573LL, 0xEC0000006E6F6974LL);
    if ((result & 1) == 0) {
      goto LABEL_24;
    }
  }

  outlined init with copy of SpeakableString?( v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin24PhonePersonAndVisualData_selectAction,  (uint64_t)v8);
  uint64_t v19 = OUTLINED_FUNCTION_26_0();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1LL, v19) == 1)
  {
    uint64_t v16 = (uint64_t)v8;
LABEL_23:
    uint64_t result = outlined destroy of SpeakableString?(v16);
LABEL_24:
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    return result;
  }

  uint64_t v20 = OUTLINED_FUNCTION_23_10();
  return (*(uint64_t (**)(void *, char *, uint64_t))(*(void *)(v19 - 8) + 32LL))(v20, v8, v19);
}

PhoneCallFlowDelegatePlugin::PhonePersonAndVisualData::CodingKeys_optional __swiftcall PhonePersonAndVisualData.CodingKeys.init(rawValue:)( Swift::String rawValue)
{
  object = rawValue._object;
  v2._countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)( (Swift::OpaquePointer)&outlined read-only object #0 of PhonePersonAndVisualData.CodingKeys.init(rawValue:),  v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3) {
    return (PhoneCallFlowDelegatePlugin::PhonePersonAndVisualData::CodingKeys_optional)3;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::PhonePersonAndVisualData::CodingKeys_optional)v3;
  }
}

uint64_t PhonePersonAndVisualData.CodingKeys.rawValue.getter(char a1)
{
  if (!a1) {
    return OUTLINED_FUNCTION_11_87();
  }
  if (a1 == 1) {
    return 0x7461446567616D69LL;
  }
  return 0x63417463656C6573LL;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance PhonePersonAndVisualData.CodingKeys()
{
  specialized == infix<A>(_:_:)();
}

void protocol witness for Hashable.hashValue.getter in conformance PhonePersonAndVisualData.CodingKeys()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance PhonePersonAndVisualData.CodingKeys( uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance PhonePersonAndVisualData.CodingKeys( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::PhonePersonAndVisualData::CodingKeys_optional protocol witness for RawRepresentable.init(rawValue:) in conformance PhonePersonAndVisualData.CodingKeys@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::PhonePersonAndVisualData::CodingKeys_optional *a2@<X8>)
{
  result.int value = PhonePersonAndVisualData.CodingKeys.init(rawValue:)(*a1).value;
  a2->int value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhonePersonAndVisualData.CodingKeys( uint64_t *a1@<X8>)
{
  *a1 = PhonePersonAndVisualData.CodingKeys.rawValue.getter(*v1);
  a1[1] = v3;
  OUTLINED_FUNCTION_2();
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance PhonePersonAndVisualData.CodingKeys()
{
  return PhonePersonAndVisualData.CodingKeys.rawValue.getter(*v0);
}

PhoneCallFlowDelegatePlugin::PhonePersonAndVisualData::CodingKeys_optional protocol witness for CodingKey.init(stringValue:) in conformance PhonePersonAndVisualData.CodingKeys@<W0>( uint64_t a1@<X0>, PhoneCallFlowDelegatePlugin::PhonePersonAndVisualData::CodingKeys_optional *a2@<X8>)
{
  result.int value = PhonePersonAndVisualData.CodingKeys.init(stringValue:)(*(Swift::String *)&a1).value;
  a2->int value = result.value;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhonePersonAndVisualData.CodingKeys( uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhonePersonAndVisualData.CodingKeys and conformance PhonePersonAndVisualData.CodingKeys();
  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance PhonePersonAndVisualData.CodingKeys( uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhonePersonAndVisualData.CodingKeys and conformance PhonePersonAndVisualData.CodingKeys();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t PhonePersonAndVisualData.deinit()
{
  swift_release(*(void *)(v0 + 24));
  OUTLINED_FUNCTION_17_7(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin24PhonePersonAndVisualData_imageData);
  OUTLINED_FUNCTION_17_7(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin24PhonePersonAndVisualData_selectAction);
  return v0;
}

uint64_t PhonePersonAndVisualData.__deallocating_deinit()
{
  return PhoneCallProvider.Builder.__deallocating_deinit((void (*)(void))PhonePersonAndVisualData.deinit);
}

uint64_t PhonePersonAndVisualData.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<PhonePersonAndVisualData.CodingKeys>);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  unint64_t v11 = lazy protocol witness table accessor for type PhonePersonAndVisualData.CodingKeys and conformance PhonePersonAndVisualData.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)( &type metadata for PhonePersonAndVisualData.CodingKeys,  &type metadata for PhonePersonAndVisualData.CodingKeys,  v11,  v9,  v10);
  uint64_t v17 = *(void *)(v3 + 24);
  HIBYTE(v16) = 0;
  uint64_t v12 = type metadata accessor for PhonePerson(0LL);
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type PhonePerson and conformance DialogPerson,  type metadata accessor for PhonePerson,  (uint64_t)&protocol conformance descriptor for DialogPerson);
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(&v17, (char *)&v16 + 7, v5, v12, v13);
  if (!v2)
  {
    uint64_t v14 = v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin24PhonePersonAndVisualData_imageData;
    BYTE6(v16) = 1;
    type metadata accessor for SpeakableString(0LL);
    lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type SpeakableString and conformance SpeakableString,  (uint64_t (*)(uint64_t))&type metadata accessor for SpeakableString,  (uint64_t)&protocol conformance descriptor for SpeakableString);
    OUTLINED_FUNCTION_7_20(v14, (uint64_t)&v16 + 6);
    BYTE5(v16) = 2;
    OUTLINED_FUNCTION_7_20( v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin24PhonePersonAndVisualData_selectAction,  (uint64_t)&v16 + 5);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t lazy protocol witness table accessor for type PhonePersonAndVisualData.CodingKeys and conformance PhonePersonAndVisualData.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type PhonePersonAndVisualData.CodingKeys and conformance PhonePersonAndVisualData.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhonePersonAndVisualData.CodingKeys and conformance PhonePersonAndVisualData.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhonePersonAndVisualData.CodingKeys,  &type metadata for PhonePersonAndVisualData.CodingKeys);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhonePersonAndVisualData.CodingKeys and conformance PhonePersonAndVisualData.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhonePersonAndVisualData.CodingKeys and conformance PhonePersonAndVisualData.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhonePersonAndVisualData.CodingKeys and conformance PhonePersonAndVisualData.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhonePersonAndVisualData.CodingKeys,  &type metadata for PhonePersonAndVisualData.CodingKeys);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhonePersonAndVisualData.CodingKeys and conformance PhonePersonAndVisualData.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhonePersonAndVisualData.CodingKeys and conformance PhonePersonAndVisualData.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhonePersonAndVisualData.CodingKeys and conformance PhonePersonAndVisualData.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhonePersonAndVisualData.CodingKeys,  &type metadata for PhonePersonAndVisualData.CodingKeys);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhonePersonAndVisualData.CodingKeys and conformance PhonePersonAndVisualData.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhonePersonAndVisualData.CodingKeys and conformance PhonePersonAndVisualData.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhonePersonAndVisualData.CodingKeys and conformance PhonePersonAndVisualData.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhonePersonAndVisualData.CodingKeys,  &type metadata for PhonePersonAndVisualData.CodingKeys);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhonePersonAndVisualData.CodingKeys and conformance PhonePersonAndVisualData.CodingKeys);
  }

  return result;
}

uint64_t PhonePersonAndVisualData.__allocating_init(from:)(void *a1)
{
  uint64_t v3 = swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
  PhonePersonAndVisualData.init(from:)(a1);
  return v3;
}

void *PhonePersonAndVisualData.init(from:)(void *a1)
{
  uint64_t v3 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v22 - v7;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<PhonePersonAndVisualData.CodingKeys>);
  uint64_t v9 = *(void *)(v25 - 8);
  __chkstk_darwin();
  v3[2] = 0LL;
  uint64_t v11 = a1[3];
  uint64_t v10 = a1[4];
  uint64_t v26 = a1;
  uint64_t v12 = __swift_project_boxed_opaque_existential_1(a1, v11);
  unint64_t v13 = lazy protocol witness table accessor for type PhonePersonAndVisualData.CodingKeys and conformance PhonePersonAndVisualData.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)( &type metadata for PhonePersonAndVisualData.CodingKeys,  &type metadata for PhonePersonAndVisualData.CodingKeys,  v13,  v11,  v10);
  if (v2)
  {
    OUTLINED_FUNCTION_23_61();
    uint64_t v17 = type metadata accessor for PhonePersonAndVisualData(0LL);
    swift_deallocPartialClassInstance(v3, v17, *(unsigned int *)(*v3 + 48LL), *(unsigned __int16 *)(*v3 + 52LL));
    uint64_t v21 = v12;
  }

  else
  {
    uint64_t v24 = v9;
    uint64_t v14 = type metadata accessor for PhonePerson(0LL);
    char v29 = 0;
    lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type PhonePerson and conformance DialogPerson,  type metadata accessor for PhonePerson,  (uint64_t)&protocol conformance descriptor for DialogPerson);
    uint64_t v15 = v25;
    OUTLINED_FUNCTION_24_53(v14, (uint64_t)&v29, v25, v14, v16);
    v3[3] = v30;
    uint64_t v19 = type metadata accessor for SpeakableString(0LL);
    char v28 = 1;
    lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type SpeakableString and conformance SpeakableString,  (uint64_t (*)(uint64_t))&type metadata accessor for SpeakableString,  (uint64_t)&protocol conformance descriptor for SpeakableString);
    uint64_t v23 = v20;
    OUTLINED_FUNCTION_24_53(v19, (uint64_t)&v28, v15, v19, v20);
    outlined init with take of SpeakableString?( (uint64_t)v8,  (uint64_t)v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin24PhonePersonAndVisualData_imageData);
    char v27 = 2;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v19, &v27, v15, v19, v23);
    OUTLINED_FUNCTION_0_105();
    outlined init with take of SpeakableString?( (uint64_t)v6,  (uint64_t)v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin24PhonePersonAndVisualData_selectAction);
    uint64_t v21 = v26;
  }

  __swift_destroy_boxed_opaque_existential_1(v21);
  return v3;
}

void base witness table accessor for Decodable in PhonePersonAndVisualData()
{
}

void base witness table accessor for Encodable in PhonePersonAndVisualData()
{
}

void sub_2B76EC(uint64_t *a1@<X8>)
{
  *a1 = OUTLINED_FUNCTION_26_57();
  OUTLINED_FUNCTION_2();
}

void sub_2B7714(uint64_t a1)
{
}

void sub_2B773C(uint64_t a1)
{
}

void sub_2B7764(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = (*(uint64_t (**)(void))(**(void **)a1 + 128LL))();
  OUTLINED_FUNCTION_2();
}

uint64_t ObjC metadata update function for PhonePersonAndVisualData()
{
  return type metadata accessor for PhonePersonAndVisualData(0LL);
}

void type metadata completion function for PhonePersonAndVisualData(uint64_t a1)
{
  v4[0] = "\b";
  v4[1] = "\b";
  type metadata accessor for SpeakableString?(319LL);
  if (v3 <= 0x3F)
  {
    uint64_t v5 = *(void *)(v2 - 8) + 64LL;
    uint64_t v6 = v5;
    swift_updateClassMetadata2(a1, 256LL, 4LL, v4, a1 + 80);
  }

uint64_t ObjC metadata update function for PhonePersonAndVisualData.Builder()
{
  return type metadata accessor for PhonePersonAndVisualData.Builder(0LL);
}

void type metadata completion function for PhonePersonAndVisualData.Builder(uint64_t a1)
{
  uint64_t v4 = "\b";
  type metadata accessor for SpeakableString?(319LL);
  if (v3 <= 0x3F)
  {
    uint64_t v5 = *(void *)(v2 - 8) + 64LL;
    uint64_t v6 = v5;
    swift_updateClassMetadata2(a1, 256LL, 3LL, &v4, a1 + 80);
  }

uint64_t storeEnumTagSinglePayload for PhonePersonAndVisualData.CodingKeys( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFD) {
    return ((uint64_t (*)(void))((char *)&loc_2B78E0 + 4 * byte_33E465[v4]))();
  }
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2B7914 + 4 * byte_33E460[v4]))();
}

uint64_t sub_2B7914(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2B791C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x2B7924LL);
  }
  return result;
}

uint64_t sub_2B7930(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x2B7938LL);
  }
  *(_BYTE *)unint64_t result = a2 + 2;
  return result;
}

uint64_t sub_2B793C(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2B7944(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PhonePersonAndVisualData.CodingKeys()
{
  return &type metadata for PhonePersonAndVisualData.CodingKeys;
}

uint64_t OUTLINED_FUNCTION_0_105()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 112) + 8LL))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_11_87()
{
  return 0x6E6F73726570LL;
}

void OUTLINED_FUNCTION_23_61()
{
}

uint64_t OUTLINED_FUNCTION_24_53(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(a1, a2, a3, a4, a5);
}

uint64_t OUTLINED_FUNCTION_26_57()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104LL))();
}

#error "2B79F8: call analysis failed (funcsize=28)"
#error "2B7A54: call analysis failed (funcsize=23)"
void StartVideoCallTemplatingService.makeIntentHandledDialog(app:intent:intentResponse:_:)()
{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t i;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  void *v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  Swift::Bool v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  void *v57;
  void *v58;
  uint64_t v59;
  void *v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void v66[3];
  uint64_t v67;
  uint64_t v68;
  unint64_t v69[3];
  OUTLINED_FUNCTION_29_2();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  unint64_t v13 = v12 - v11;
  OUTLINED_FUNCTION_94_4();
  __chkstk_darwin();
  OUTLINED_FUNCTION_61_3();
  outlined bridged method (pb) of @objc INStartVideoCallIntent.contacts.getter(v8);
  uint64_t v64 = v4;
  __int128 v65 = v6;
  uint64_t v61 = v8;
  uint64_t v63 = v10;
  if (v14)
  {
    uint64_t v15 = v14;
    v69[0] = (unint64_t)_swiftEmptyArrayStorage;
    if ((unint64_t)v14 >> 62)
    {
      if (v14 >= 0) {
        uint64_t v32 = v14 & 0xFFFFFFFFFFFFFF8LL;
      }
      else {
        uint64_t v32 = v14;
      }
      swift_bridgeObjectRetain();
      uint64_t v16 = _CocoaArrayWrapper.endIndex.getter(v32);
      if (v16) {
        goto LABEL_4;
      }
    }

    else
    {
      uint64_t v16 = *(void *)((char *)&dword_10 + (v14 & 0xFFFFFFFFFFFFFF8LL));
      swift_bridgeObjectRetain();
      if (v16)
      {
LABEL_4:
        type metadata accessor for PhonePerson(0LL);
        if (v16 < 1)
        {
          __break(1u);
          return;
        }

        id v58 = v2;
        for (i = 0LL; i != v16; ++i)
        {
          if ((v15 & 0xC000000000000001LL) != 0) {
            uint64_t v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v15);
          }
          else {
            uint64_t v18 = *(id *)(v15 + 8 * i + 32);
          }
          uint64_t v19 = v18;
          static Device.current.getter(v66);
          uint64_t v20 = v67;
          uint64_t v21 = v68;
          __swift_project_boxed_opaque_existential_1(v66, v67);
          dispatch thunk of DeviceState.siriLocale.getter(v20, v21);
          __swift_destroy_boxed_opaque_existential_1(v66);
          static PhonePerson.make(phonePerson:options:locale:)(v19, 0, v1);
          uint64_t v23 = v22;
          OUTLINED_FUNCTION_18_65();

          if (v23)
          {
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v24);
            uint64_t v26 = *(void *)((char *)&dword_10 + (v69[0] & 0xFFFFFFFFFFFFFF8LL));
            uint64_t v25 = *(void *)((char *)&dword_18 + (v69[0] & 0xFFFFFFFFFFFFFF8LL));
            if (v26 >= v25 >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v25 > 1, v26 + 1, 1LL);
            }
            char v27 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v26, v23);
            specialized Array._endMutation()(v27, v28, v29, v30);
          }
        }

        OUTLINED_FUNCTION_34_0();
        __int128 v31 = (void *)v69[0];
        uint64_t v2 = v58;
        goto LABEL_21;
      }
    }

    OUTLINED_FUNCTION_34_0();
    __int128 v31 = _swiftEmptyArrayStorage;
LABEL_21:
    OUTLINED_FUNCTION_34_0();
    goto LABEL_22;
  }

  __int128 v31 = _swiftEmptyArrayStorage;
LABEL_22:
  uint64_t v33 = type metadata accessor for PhonePersonList.Builder();
  uint64_t v34 = OUTLINED_FUNCTION_8_2(v33, 24LL);
  *(void *)(v34 + 16) = _swiftEmptyArrayStorage;
  swift_beginAccess(v34 + 16, v69, 1LL, 0LL);
  *(void *)(v34 + 16) = v31;
  swift_bridgeObjectRelease();
  __int128 v35 = type metadata accessor for PhonePersonList();
  OUTLINED_FUNCTION_8_2(v35, 32LL);
  __int128 v36 = PhonePersonList.init(builder:)(v34);
  uint64_t v60 = *(void **)((char *)v2 + direct field offset for StartVideoCallTemplatingService.catFamily);
  __int128 v37 = v61;
  specialized PhoneStartCallIntent.__allocating_init(intent:isRelationshipRequest:)();
  uint64_t v59 = v38;
  OUTLINED_FUNCTION_50_6();
  uint64_t v39 = (void *)((char *)v2 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *v2 + 40));
  outlined init with copy of SharedGlobalsProviding((uint64_t)v39, (uint64_t)v66);
  swift_retain();
  uint64_t v62 = SirikitDeviceState.__allocating_init(from:)(v66);
  uint64_t v40 = (void *)((char *)v2 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *v2 + 48));
  uint64_t v41 = v40[3];
  uint64_t v42 = v40[4];
  __swift_project_boxed_opaque_existential_1(v40, v41);
  uint64_t v44 = v39[3];
  uint64_t v43 = v39[4];
  __swift_project_boxed_opaque_existential_1(v39, v44);
  dispatch thunk of DeviceState.siriLocale.getter(v44, v43);
  uint64_t v45 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 16))(v63, v1, v41, v42);
  uint64_t v47 = v46;
  OUTLINED_FUNCTION_18_65();
  if (v47)
  {
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_1_34(v45, v47);
    uint64_t v48 = OUTLINED_FUNCTION_26_0();
    __swift_storeEnumTagSinglePayload(v13, 0LL, 1LL, v48);
    swift_bridgeObjectRelease();
  }

  else
  {
    uint64_t v49 = OUTLINED_FUNCTION_26_0();
    OUTLINED_FUNCTION_29_1(v13, v50, v51, v49);
  }

  uint64_t v52 = App.isFirstParty()();
  uint64_t v53 = App.appIdentifier.getter();
  if (v54)
  {
    uint64_t v55 = v59;
    if (v53 == 0xD000000000000010LL && v54 == 0x800000000034B0D0LL) {
      uint64_t v56 = 1;
    }
    else {
      uint64_t v56 = _stringCompareWithSmolCheck(_:_:expecting:)(v53, v54, 0xD000000000000010LL, 0x800000000034B0D0LL, 0LL);
    }
    swift_bridgeObjectRelease();
    id v57 = v60;
  }

  else
  {
    uint64_t v56 = 0;
    uint64_t v55 = v59;
    id v57 = v60;
  }

  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, Swift::Bool, void, void, uint64_t, uint64_t))(class metadata base offset for StartCallCATs + *v57 + 1120))( v55,  v36,  v62,  v13,  v52,  v56 & 1,  0LL,  v65,  v64);
  swift_release(v55);
  swift_release_n(v36, 2LL);
  OUTLINED_FUNCTION_22();
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v13,  &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_7_5();
}

void StartVideoCallTemplatingService.makeFailureHandlingIntentDialog(app:intent:intentResponse:_:)()
{
  uint64_t v32 = v2;
  uint64_t v33 = v3;
  uint64_t v30 = v4;
  uint64_t v28 = v5;
  uint64_t v29 = OUTLINED_FUNCTION_94_4();
  uint64_t v6 = *(void *)(v29 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v9 = v8 - v7;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_32();
  uint64_t v10 = (void *)((char *)v0 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *v0 + 48));
  uint64_t v11 = v10[3];
  uint64_t v12 = v10[4];
  __swift_project_boxed_opaque_existential_1(v10, v11);
  __int128 v31 = v0;
  unint64_t v13 = (void *)((char *)v0 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *v0 + 40));
  uint64_t v14 = v13[3];
  uint64_t v15 = v13[4];
  __swift_project_boxed_opaque_existential_1(v13, v14);
  dispatch thunk of DeviceState.siriLocale.getter(v14, v15);
  uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 16))(v28, v9, v11, v12);
  uint64_t v18 = v17;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v29);
  if (v18)
  {
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_1_34(v16, v18);
    uint64_t v19 = OUTLINED_FUNCTION_26_0();
    OUTLINED_FUNCTION_7_109(v19);
  }

  else
  {
    uint64_t v20 = OUTLINED_FUNCTION_26_0();
    OUTLINED_FUNCTION_29_1(v1, v21, v22, v20);
  }

  switch((unint64_t)[v30 code])
  {
    case 5uLL:
      OUTLINED_FUNCTION_10_79();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(class metadata base offset for StartCallCATs + v23 + 608))( v1,  v32,  v33);
      break;
    case 6uLL:
      (*(void (**)(uint64_t, uint64_t))(class metadata base offset for StartCallCATs
                                               + **(void **)((char *)v31
                                                             + direct field offset for StartVideoCallTemplatingService.catFamily)
                                               + 704))( v32,  v33);
      break;
    case 7uLL:
      OUTLINED_FUNCTION_10_79();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(class metadata base offset for StartCallCATs + v26 + 736))( v1,  v32,  v33);
      break;
    case 8uLL:
      OUTLINED_FUNCTION_10_79();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(class metadata base offset for StartCallCATs + v27 + 800))( v1,  v32,  v33);
      break;
    default:
      uint64_t v24 = *(void **)((char *)v31 + direct field offset for StartVideoCallTemplatingService.catFamily);
      OUTLINED_FUNCTION_50_6();
      outlined init with copy of SharedGlobalsProviding((uint64_t)v13, (uint64_t)v34);
      uint64_t v25 = SirikitDeviceState.__allocating_init(from:)(v34);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(class metadata base offset for StartCallCATs + *v24 + 544))( v25,  v32,  v33);
      swift_release(v25);
      break;
  }

  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v1,  &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_7_5();
}

uint64_t StartVideoCallTemplatingService.makeGenericErrorDialog(app:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)((char *)v3 + direct field offset for StartVideoCallTemplatingService.catFamily);
  OUTLINED_FUNCTION_50_6();
  outlined init with copy of SharedGlobalsProviding( (uint64_t)v3 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *v3 + 40),  (uint64_t)v9);
  uint64_t v7 = SirikitDeviceState.__allocating_init(from:)(v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(class metadata base offset for StartCallCATs + *v6 + 928))( v7,  a2,  a3);
  return swift_release(v7);
}

void StartVideoCallTemplatingService.makeParameterValueUnsupportedDialog(app:parameterName:intentResolutionResult:intent:multicardinalValueIndex:_:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21)
{
  uint64_t v56 = v21;
  uint64_t v57 = v24;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_32();
  OUTLINED_FUNCTION_94_4();
  __chkstk_darwin();
  OUTLINED_FUNCTION_61_3();
  outlined bridged method (pb) of @objc INStartVideoCallIntent.contacts.getter(v28);
  uint64_t v55 = v26;
  uint64_t v54 = v22;
  if (!v29) {
    goto LABEL_9;
  }
  uint64_t v30 = v29;
  if ((unint64_t)v29 >> 62)
  {
    if (v29 >= 0) {
      v29 &= 0xFFFFFFFFFFFFFF8uLL;
    }
    uint64_t v31 = _CocoaArrayWrapper.endIndex.getter(v29);
  }

  else
  {
    uint64_t v31 = *(void *)((char *)&dword_10 + (v29 & 0xFFFFFFFFFFFFFF8LL));
  }

  if (v31 <= 0)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    uint64_t v33 = 0LL;
    goto LABEL_10;
  }

  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v30 & 0xC000000000000001LL) == 0, v30);
  if ((v30 & 0xC000000000000001LL) != 0) {
    id v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v30);
  }
  else {
    id v32 = *(id *)(v30 + 32);
  }
  uint64_t v33 = v32;
  swift_bridgeObjectRelease();
LABEL_10:
  type metadata accessor for PhonePerson(0LL);
  static Device.current.getter(v58);
  uint64_t v34 = v59;
  uint64_t v35 = v60;
  __swift_project_boxed_opaque_existential_1(v58, v59);
  dispatch thunk of DeviceState.siriLocale.getter(v34, v35);
  __swift_destroy_boxed_opaque_existential_1(v58);
  static PhonePerson.make(phonePerson:options:locale:)(v33, 0, v23);
  uint64_t v37 = v36;

  OUTLINED_FUNCTION_25_58();
  uint64_t v38 = (void *)((char *)v56
                 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *v56 + 48));
  uint64_t v39 = v38[3];
  uint64_t v40 = v38[4];
  __swift_project_boxed_opaque_existential_1(v38, v39);
  uint64_t v41 = (void *)((char *)v56
                 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *v56 + 40));
  uint64_t v43 = v41[3];
  uint64_t v42 = v41[4];
  __swift_project_boxed_opaque_existential_1(v41, v43);
  dispatch thunk of DeviceState.siriLocale.getter(v43, v42);
  uint64_t v44 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 16))(v57, v23, v39, v40);
  uint64_t v46 = v45;
  OUTLINED_FUNCTION_25_58();
  if (v46)
  {
    swift_bridgeObjectRetain();
    uint64_t v47 = v54;
    OUTLINED_FUNCTION_1_34(v44, v46);
    uint64_t v48 = OUTLINED_FUNCTION_26_0();
    OUTLINED_FUNCTION_7_109(v48);
  }

  else
  {
    uint64_t v49 = OUTLINED_FUNCTION_26_0();
    uint64_t v47 = v54;
    OUTLINED_FUNCTION_29_1(v54, v50, v51, v49);
  }

  uint64_t v52 = *(void **)((char *)v56 + direct field offset for StartVideoCallTemplatingService.catFamily);
  swift_retain();
  Swift::Bool v53 = App.isFirstParty()();
  (*(void (**)(uint64_t, uint64_t, Swift::Bool, uint64_t, uint64_t))(class metadata base offset for StartCallCATs
                                                                          + *v52
                                                                          + 1728))( v37,  v47,  v53,  v55,  a21);
  swift_release_n(v37, 2LL);
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v47,  &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_7_5();
}

uint64_t StartVideoCallTemplatingService.makeParameterValueDisambiguationDialog(app:parameterName:intentResolutionResult:disambiguationList:deviceIsLocked:intent:_:)( uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  v18._countAndFlagsBits = a2;
  v18._object = a3;
  v19.int value = PhoneCallSlotNames.init(rawValue:)(v18).value;
  StartVideoCallTemplatingService.slotTemplating(for:)(v19.value, &v24);
  uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(class metadata base offset for PhoneCallBaseCatTemplatingService
                                                             + *v9
                                                             + 216))( a5,  a8,  a9);
  uint64_t v21 = v26;
  v25(a1, a2, a3, a4, a5, a6, a7, v20, v22);
  OUTLINED_FUNCTION_22();
  swift_release(*((void *)&v24 + 1));
  swift_release(v21);
  OUTLINED_FUNCTION_22();
  return swift_release(v27);
}

uint64_t StartVideoCallTemplatingService.makeParameterValueConfirmationDialog(app:parameterName:intentResolutionResult:intent:_:)( uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v14._countAndFlagsBits = a2;
  v14._object = a3;
  v15.int value = PhoneCallSlotNames.init(rawValue:)(v14).value;
  StartVideoCallTemplatingService.slotTemplating(for:)(v15.value, &v18);
  uint64_t v16 = v20;
  v19(a1, a2, a3, a4, a5, 1LL, a6, a7);
  swift_release(v16);
  OUTLINED_FUNCTION_22();
  swift_release(v21);
  return swift_release(v22);
}

void StartVideoCallTemplatingService.slotTemplating(for:)(unsigned __int8 a1@<W0>, _OWORD *a2@<X8>)
{
  int v4 = a1;
  uint64_t v5 = type metadata accessor for Logger(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v9 = v8 - v7;
  if (v4 == 4)
  {
    outlined init with copy of SharedGlobalsProviding( (uint64_t)v2 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *v2 + 40),  (uint64_t)v26);
    uint64_t v10 = *(void *)((char *)v2 + direct field offset for StartVideoCallTemplatingService.catFamily);
    uint64_t v11 = swift_retain();
    uint64_t v12 = DucTemplatingService.locale.getter(v11);
    uint64_t v14 = v13;
    uint64_t v15 = type metadata accessor for AppInfoBuilder();
    uint64_t v16 = OUTLINED_FUNCTION_8_2(v15, 16LL);
    v26[11] = v15;
    v26[12] = (uint64_t)&protocol witness table for AppInfoBuilder;
    v26[5] = v10;
    v26[6] = v12;
    v26[7] = v14;
    v26[8] = v16;
    specialized SlotTemplating.toAnySlotTemplating()();
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v26,  &demangling cache variable for type metadata for ContactsSlotTemplating<INStartVideoCallIntent, INIntentResponse>);
    __int128 v17 = v27[1];
    *a2 = v27[0];
    a2[1] = v17;
    __int128 v18 = v27[3];
    a2[2] = v27[2];
    a2[3] = v18;
  }

  else
  {
    uint64_t v19 = v9;
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v20 = __swift_project_value_buffer(v5, (uint64_t)static Logger.siriPhone);
    uint64_t v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v19, v20, v5);
    uint64_t v22 = (os_log_s *)Logger.logObject.getter(v21);
    os_log_type_t v23 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v22, v23))
    {
      __int128 v24 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v25 = swift_slowAlloc(32LL, -1LL);
      v26[0] = v25;
      *(_DWORD *)__int128 v24 = 136315138;
      *(void *)&v27[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)( 0xD00000000000004FLL,  0x8000000000351AF0LL,  v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v27, (char *)v27 + 8, v24 + 4);
      _os_log_impl(&dword_0, v22, v23, "%s", v24, 0xCu);
      swift_arrayDestroy(v25, 1LL);
      OUTLINED_FUNCTION_0_2(v25);
      OUTLINED_FUNCTION_0_2((uint64_t)v24);
    }

    static SiriKitLifecycle._logCrashToEventBus(_:)(0xD00000000000004FLL, 0x8000000000351AF0LL);
    _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000004FLL,  0x8000000000351AF0LL,  "PhoneCallFlowDelegatePlugin/PhoneLog.swift",  42LL,  2LL);
    __break(1u);
  }

void StartVideoCallTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)( uint64_t a1, uint64_t a2)
{
}

uint64_t StartVideoCallTemplatingService.__ivar_destroyer()
{
  return swift_release(*(void *)(v0 + direct field offset for StartVideoCallTemplatingService.catFamily));
}

void StartVideoCallTemplatingService.deinit()
{
  uint64_t v0 = specialized PhoneCallBaseCatTemplatingService.deinit();
  swift_release(*(void *)(v0 + direct field offset for StartVideoCallTemplatingService.catFamily));
  OUTLINED_FUNCTION_2();
}

uint64_t StartVideoCallTemplatingService.__deallocating_deinit()
{
  uint64_t v0 = specialized PhoneCallBaseCatTemplatingService.deinit();
  swift_release(*(void *)(v0 + direct field offset for StartVideoCallTemplatingService.catFamily));
  return swift_deallocClassInstance(v0, 264LL, 7LL);
}

void outlined bridged method (pb) of @objc INStartVideoCallIntent.contacts.getter(void *a1)
{
  id v1 = [a1 contacts];
  if (v1)
  {
    uint64_t v2 = v1;
    unint64_t v3 = type metadata accessor for INPerson();
    static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);
  }

  OUTLINED_FUNCTION_2();
}

uint64_t specialized StartVideoCallTemplatingService.init(sharedGlobals:catFamily:displayTextCats:phoneCallCommonCats:appInfoBuilder:)( void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v24 = a3;
  uint64_t v25 = a4;
  uint64_t v14 = *(void *)(a7 - 8);
  __chkstk_darwin();
  uint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for CATOption(0LL);
  __chkstk_darwin();
  __int128 v18 = (char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)(a6 + direct field offset for StartVideoCallTemplatingService.catFamily) = a2;
  outlined init with copy of SharedGlobalsProviding((uint64_t)a1, (uint64_t)v26);
  type metadata accessor for StartCallCATs(0LL);
  uint64_t v19 = swift_retain();
  static CATOption.defaultMode.getter(v19);
  uint64_t v20 = CATWrapper.__allocating_init(options:globals:)(v18, 0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a5, a7);
  uint64_t v21 = specialized PhoneCallBaseCatTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)( 0xD000000000000014LL,  0x8000000000342260LL,  v26,  v24,  v25,  v16,  0LL,  0LL,  0LL,  0LL,  v20,  a6,  a7,  a8);
  swift_release(a2);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a5, a7);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v21;
}

uint64_t type metadata accessor for StartVideoCallTemplatingService(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for StartVideoCallTemplatingService;
  if (!type metadata singleton initialization cache for StartVideoCallTemplatingService) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for StartVideoCallTemplatingService);
  }
  return result;
}

uint64_t type metadata completion function for StartVideoCallTemplatingService(uint64_t a1)
{
  uint64_t v2 = (char *)&value witness table for Builtin.NativeObject + 64;
  return swift_initClassMetadata2( a1,  0LL,  1LL,  &v2,  a1 + class metadata base offset for StartVideoCallTemplatingService);
}

uint64_t ObjC metadata update function for StartVideoCallTemplatingService()
{
  return type metadata accessor for StartVideoCallTemplatingService(0LL);
}

uint64_t OUTLINED_FUNCTION_1_99()
{
  return specialized StartVideoCallTemplatingService.init(sharedGlobals:catFamily:displayTextCats:phoneCallCommonCats:appInfoBuilder:)( v4,  v3,  v2,  v1,  v7,  v0,  v5,  v6);
}

uint64_t OUTLINED_FUNCTION_7_109(uint64_t a1)
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_9_82(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_stdlib_reportUnimplementedInitializer(a1, 59LL, a3, 111LL, 0LL);
}

  ;
}

uint64_t OUTLINED_FUNCTION_18_65()
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)(v1 - 160) + 8LL))(v0, *(void *)(v1 - 152));
}

void *AppSelectionDependentKeys.timeSpentInAppAffinityScoreKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.timeSpentInAppAffinityScoreKey;
}

void *AppSelectionDependentKeys.foregroundAppSignalKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.foregroundAppSignalKey;
}

void *AppSelectionDependentKeys.timeSinceAppLastLaunchedKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.timeSinceAppLastLaunchedKey;
}

void *AppSelectionDependentKeys.timeTotalSpentByUserInAppKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.timeTotalSpentByUserInAppKey;
}

void *AppSelectionDependentKeys.appContactTimeSinceLastUsedKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.appContactTimeSinceLastUsedKey;
}

uint64_t *AppSelectionDependentKeys.messageSendKey.unsafeMutableAddressor()
{
  if (one-time initialization token for messageSendKey != -1) {
    swift_once(&one-time initialization token for messageSendKey, one-time initialization function for messageSendKey);
  }
  return &static AppSelectionDependentKeys.messageSendKey;
}

uint64_t *AppSelectionDependentKeys.messageUsingSiriKey.unsafeMutableAddressor()
{
  if (one-time initialization token for messageUsingSiriKey != -1) {
    swift_once( &one-time initialization token for messageUsingSiriKey,  one-time initialization function for messageUsingSiriKey);
  }
  return &static AppSelectionDependentKeys.messageUsingSiriKey;
}

uint64_t *AppSelectionDependentKeys.messageReceivedKey.unsafeMutableAddressor()
{
  if (one-time initialization token for messageReceivedKey != -1) {
    swift_once( &one-time initialization token for messageReceivedKey,  one-time initialization function for messageReceivedKey);
  }
  return &static AppSelectionDependentKeys.messageReceivedKey;
}

void *AppSelectionDependentKeys.appFreqForMessageKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.appFreqForMessageKey;
}

void *AppSelectionDependentKeys.appFreqForMessageUsingSiriKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.appFreqForMessageUsingSiriKey;
}

void *AppSelectionDependentKeys.appFreqForMessageForCountryCodeKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.appFreqForMessageForCountryCodeKey;
}

uint64_t *AppSelectionDependentKeys.phoneCallKey.unsafeMutableAddressor()
{
  if (one-time initialization token for phoneCallKey != -1) {
    swift_once(&one-time initialization token for phoneCallKey, one-time initialization function for phoneCallKey);
  }
  return &static AppSelectionDependentKeys.phoneCallKey;
}

uint64_t *AppSelectionDependentKeys.phoneCallSiriKey.unsafeMutableAddressor()
{
  if (one-time initialization token for phoneCallSiriKey != -1) {
    swift_once( &one-time initialization token for phoneCallSiriKey,  one-time initialization function for phoneCallSiriKey);
  }
  return &static AppSelectionDependentKeys.phoneCallSiriKey;
}

uint64_t *AppSelectionDependentKeys.phoneCallReceivedKey.unsafeMutableAddressor()
{
  if (one-time initialization token for phoneCallReceivedKey != -1) {
    swift_once( &one-time initialization token for phoneCallReceivedKey,  one-time initialization function for phoneCallReceivedKey);
  }
  return &static AppSelectionDependentKeys.phoneCallReceivedKey;
}

void *AppSelectionDependentKeys.phoneAppFreqForPhoneCallKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.phoneAppFreqForPhoneCallKey;
}

void *AppSelectionDependentKeys.phoneAppFreqForPhoneCallUsingSiriKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.phoneAppFreqForPhoneCallUsingSiriKey;
}

void *AppSelectionDependentKeys.phoneAppFreqForPhoneCallForCountryCodeKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.phoneAppFreqForPhoneCallForCountryCodeKey;
}

void *AppSelectionDependentKeys.messageSendToContactKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.messageSendToContactKey;
}

void *AppSelectionDependentKeys.messageSendToContactSiriKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.messageSendToContactSiriKey;
}

void *AppSelectionDependentKeys.messageReceivedFromContactKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.messageReceivedFromContactKey;
}

void *AppSelectionDependentKeys.appContactFreqForMessages2minKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.appContactFreqForMessages2minKey;
}

void *AppSelectionDependentKeys.appContactFreqForMessages10mKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.appContactFreqForMessages10mKey;
}

void *AppSelectionDependentKeys.appContactFreqForMessages1hKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.appContactFreqForMessages1hKey;
}

void *AppSelectionDependentKeys.appContactFreqForMessages6hKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.appContactFreqForMessages6hKey;
}

void *AppSelectionDependentKeys.appContactFreqForMessages1dKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.appContactFreqForMessages1dKey;
}

void *AppSelectionDependentKeys.appContactFreqForMessages7dKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.appContactFreqForMessages7dKey;
}

void *AppSelectionDependentKeys.appContactFreqForMessages28dKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.appContactFreqForMessages28dKey;
}

void *AppSelectionDependentKeys.appContactFreqForMessagesInfKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.appContactFreqForMessagesInfKey;
}

void *AppSelectionDependentKeys.appContactFreqForMessagesKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.appContactFreqForMessagesKey;
}

void *AppSelectionDependentKeys.appContactFreqForMessagesUsingSiriKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.appContactFreqForMessagesUsingSiriKey;
}

void *AppSelectionDependentKeys.appContactFreqForMessagesHapticKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.appContactFreqForMessagesHapticKey;
}

void *AppSelectionDependentKeys.phoneCallToContactKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.phoneCallToContactKey;
}

void *AppSelectionDependentKeys.phoneCallToContactSiriKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.phoneCallToContactSiriKey;
}

void *AppSelectionDependentKeys.phoneCallReceivedFromContactKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.phoneCallReceivedFromContactKey;
}

void *AppSelectionDependentKeys.phoneAppContactFrequency2mKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.phoneAppContactFrequency2mKey;
}

void *AppSelectionDependentKeys.phoneAppContactFrequency10mKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.phoneAppContactFrequency10mKey;
}

void *AppSelectionDependentKeys.phoneAppContactFrequency1hKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.phoneAppContactFrequency1hKey;
}

void *AppSelectionDependentKeys.phoneAppContactFrequency6hKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.phoneAppContactFrequency6hKey;
}

void *AppSelectionDependentKeys.phoneAppContactFrequency1dKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.phoneAppContactFrequency1dKey;
}

void *AppSelectionDependentKeys.phoneAppContactFrequency7dKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.phoneAppContactFrequency7dKey;
}

void *AppSelectionDependentKeys.phoneAppContactFrequency28dKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.phoneAppContactFrequency28dKey;
}

void *AppSelectionDependentKeys.phoneAppContactFrequencyInfKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.phoneAppContactFrequencyInfKey;
}

void *AppSelectionDependentKeys.phoneAppContactTotalFrequencyKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.phoneAppContactTotalFrequencyKey;
}

void *AppSelectionDependentKeys.phoneAppContactFrequencyUsingSiriKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.phoneAppContactFrequencyUsingSiriKey;
}

void *AppSelectionDependentKeys.phoneAppContactFrequencyHapticKey.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.phoneAppContactFrequencyHapticKey;
}

unint64_t static AppSelectionDependentKeys.foregroundAppSignalKey.getter()
{
  return OUTLINED_FUNCTION_13_9(20LL);
}

unint64_t static AppSelectionDependentKeys.timeSinceAppLastLaunchedKey.getter()
{
  return OUTLINED_FUNCTION_13_9(36LL);
}

unint64_t static AppSelectionDependentKeys.timeSpentInAppAffinityScoreKey.getter()
{
  return OUTLINED_FUNCTION_13_9(34LL);
}

void *AppSelectionDependentKeys.appContactAffinityScore.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.appContactAffinityScore;
}

unint64_t static AppSelectionDependentKeys.appContactAffinityScore.getter()
{
  return OUTLINED_FUNCTION_13_9(30LL);
}

void *AppSelectionDependentKeys.appAffinityScore.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.appAffinityScore;
}

unint64_t static AppSelectionDependentKeys.appAffinityScore.getter()
{
  return OUTLINED_FUNCTION_13_9(17LL);
}

unint64_t static AppSelectionDependentKeys.timeTotalSpentByUserInAppKey.getter()
{
  return OUTLINED_FUNCTION_13_9(32LL);
}

unint64_t static AppSelectionDependentKeys.appContactTimeSinceLastUsedKey.getter()
{
  return OUTLINED_FUNCTION_13_9(58LL);
}

uint64_t one-time initialization function for messageSendKey(uint64_t a1)
{
  return one-time initialization function for messageSendKey( a1,  (unsigned int *)&enum case for DomainUseCase.messageSend(_:),  &static AppSelectionDependentKeys.messageSendKey,  &qword_4782D0);
}

uint64_t static AppSelectionDependentKeys.messageSendKey.getter()
{
  return static PhoneStartRequestUtterances.cancelUtterance.getter( &one-time initialization token for messageSendKey,  &static AppSelectionDependentKeys.messageSendKey,  &qword_4782D0);
}

uint64_t one-time initialization function for messageUsingSiriKey(uint64_t a1)
{
  return one-time initialization function for messageSendKey( a1,  (unsigned int *)&enum case for DomainUseCase.messageSendSiri(_:),  &static AppSelectionDependentKeys.messageUsingSiriKey,  &qword_4782E0);
}

uint64_t static AppSelectionDependentKeys.messageUsingSiriKey.getter()
{
  return static PhoneStartRequestUtterances.cancelUtterance.getter( &one-time initialization token for messageUsingSiriKey,  &static AppSelectionDependentKeys.messageUsingSiriKey,  &qword_4782E0);
}

uint64_t one-time initialization function for messageReceivedKey(uint64_t a1)
{
  return one-time initialization function for messageSendKey( a1,  (unsigned int *)&enum case for DomainUseCase.messageReceived(_:),  &static AppSelectionDependentKeys.messageReceivedKey,  &qword_4782F0);
}

uint64_t static AppSelectionDependentKeys.messageReceivedKey.getter()
{
  return static PhoneStartRequestUtterances.cancelUtterance.getter( &one-time initialization token for messageReceivedKey,  &static AppSelectionDependentKeys.messageReceivedKey,  &qword_4782F0);
}

unint64_t static AppSelectionDependentKeys.appFreqForMessageKey.getter()
{
  return OUTLINED_FUNCTION_13_9(41LL);
}

unint64_t static AppSelectionDependentKeys.appFreqForMessageUsingSiriKey.getter()
{
  return OUTLINED_FUNCTION_13_9(50LL);
}

unint64_t static AppSelectionDependentKeys.appFreqForMessageForCountryCodeKey.getter()
{
  return OUTLINED_FUNCTION_13_9(54LL);
}

uint64_t one-time initialization function for phoneCallKey(uint64_t a1)
{
  return one-time initialization function for messageSendKey( a1,  (unsigned int *)&enum case for DomainUseCase.phoneCall(_:),  &static AppSelectionDependentKeys.phoneCallKey,  &qword_478300);
}

uint64_t static AppSelectionDependentKeys.phoneCallKey.getter()
{
  return static PhoneStartRequestUtterances.cancelUtterance.getter( &one-time initialization token for phoneCallKey,  &static AppSelectionDependentKeys.phoneCallKey,  &qword_478300);
}

uint64_t one-time initialization function for phoneCallSiriKey(uint64_t a1)
{
  return one-time initialization function for messageSendKey( a1,  (unsigned int *)&enum case for DomainUseCase.phoneCallSiri(_:),  &static AppSelectionDependentKeys.phoneCallSiriKey,  &qword_478310);
}

uint64_t static AppSelectionDependentKeys.phoneCallSiriKey.getter()
{
  return static PhoneStartRequestUtterances.cancelUtterance.getter( &one-time initialization token for phoneCallSiriKey,  &static AppSelectionDependentKeys.phoneCallSiriKey,  &qword_478310);
}

uint64_t one-time initialization function for phoneCallReceivedKey(uint64_t a1)
{
  return one-time initialization function for messageSendKey( a1,  (unsigned int *)&enum case for DomainUseCase.phoneCallReceived(_:),  &static AppSelectionDependentKeys.phoneCallReceivedKey,  &qword_478320);
}

uint64_t one-time initialization function for messageSendKey( uint64_t a1, unsigned int *a2, uint64_t *a3, void *a4)
{
  uint64_t v7 = type metadata accessor for DomainUseCase(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = (*(uint64_t (**)(char *, void, uint64_t))(v8 + 104))(v10, *a2, v7);
  uint64_t v12 = DomainUseCase.rawValue.getter(v11);
  uint64_t v14 = v13;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v18 = v12;
  uint64_t v19 = v14;
  swift_bridgeObjectRetain(v14);
  v15._object = (void *)0x8000000000351B60LL;
  v15._countAndFlagsBits = 0xD000000000000011LL;
  String.append(_:)(v15);
  uint64_t result = swift_bridgeObjectRelease(v14);
  uint64_t v17 = v19;
  *a3 = v18;
  *a4 = v17;
  return result;
}

uint64_t static AppSelectionDependentKeys.phoneCallReceivedKey.getter()
{
  return static PhoneStartRequestUtterances.cancelUtterance.getter( &one-time initialization token for phoneCallReceivedKey,  &static AppSelectionDependentKeys.phoneCallReceivedKey,  &qword_478320);
}

unint64_t static AppSelectionDependentKeys.phoneAppFreqForPhoneCallKey.getter()
{
  return OUTLINED_FUNCTION_13_9(39LL);
}

unint64_t static AppSelectionDependentKeys.phoneAppFreqForPhoneCallUsingSiriKey.getter()
{
  return OUTLINED_FUNCTION_13_9(48LL);
}

unint64_t static AppSelectionDependentKeys.phoneAppFreqForPhoneCallForCountryCodeKey.getter()
{
  return OUTLINED_FUNCTION_13_9(52LL);
}

unint64_t static AppSelectionDependentKeys.messageSendToContactKey.getter()
{
  return OUTLINED_FUNCTION_13_9(64LL);
}

unint64_t static AppSelectionDependentKeys.messageSendToContactSiriKey.getter()
{
  return OUTLINED_FUNCTION_13_9(73LL);
}

unint64_t static AppSelectionDependentKeys.messageReceivedFromContactKey.getter()
{
  return OUTLINED_FUNCTION_13_9(67LL);
}

void *AppSelectionDependentKeys.appContactFreqForMessagesPrefix.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.appContactFreqForMessagesPrefix;
}

unint64_t static AppSelectionDependentKeys.appContactFreqForMessages2minKey.getter()
{
  return OUTLINED_FUNCTION_13_9(56LL);
}

unint64_t static AppSelectionDependentKeys.appContactFreqForMessages10mKey.getter()
{
  return OUTLINED_FUNCTION_13_9(57LL);
}

unint64_t static AppSelectionDependentKeys.appContactFreqForMessages1hKey.getter()
{
  return OUTLINED_FUNCTION_13_9(56LL);
}

unint64_t static AppSelectionDependentKeys.appContactFreqForMessages6hKey.getter()
{
  return OUTLINED_FUNCTION_13_9(56LL);
}

unint64_t static AppSelectionDependentKeys.appContactFreqForMessages1dKey.getter()
{
  return OUTLINED_FUNCTION_13_9(56LL);
}

unint64_t static AppSelectionDependentKeys.appContactFreqForMessages7dKey.getter()
{
  return OUTLINED_FUNCTION_13_9(56LL);
}

unint64_t static AppSelectionDependentKeys.appContactFreqForMessages28dKey.getter()
{
  return OUTLINED_FUNCTION_13_9(57LL);
}

unint64_t static AppSelectionDependentKeys.appContactFreqForMessagesInfKey.getter()
{
  return OUTLINED_FUNCTION_13_9(57LL);
}

unint64_t static AppSelectionDependentKeys.appContactFreqForMessagesKey.getter()
{
  return OUTLINED_FUNCTION_13_9(57LL);
}

unint64_t static AppSelectionDependentKeys.appContactFreqForMessagesUsingSiriKey.getter()
{
  return OUTLINED_FUNCTION_13_9(66LL);
}

unint64_t static AppSelectionDependentKeys.appContactFreqForMessagesHapticKey.getter()
{
  return OUTLINED_FUNCTION_13_9(68LL);
}

unint64_t static AppSelectionDependentKeys.phoneCallToContactKey.getter()
{
  return OUTLINED_FUNCTION_13_9(62LL);
}

unint64_t static AppSelectionDependentKeys.phoneCallToContactSiriKey.getter()
{
  return OUTLINED_FUNCTION_13_9(71LL);
}

unint64_t static AppSelectionDependentKeys.phoneCallReceivedFromContactKey.getter()
{
  return OUTLINED_FUNCTION_13_9(66LL);
}

void *AppSelectionDependentKeys.phoneAppContactFrequencyPrefix.unsafeMutableAddressor()
{
  return &static AppSelectionDependentKeys.phoneAppContactFrequencyPrefix;
}

unint64_t static AppSelectionDependentKeys.phoneAppContactFrequencyPrefix.getter()
{
  return OUTLINED_FUNCTION_13_9(52LL);
}

unint64_t static AppSelectionDependentKeys.appContactFreqForMessagesPrefix.getter()
{
  return OUTLINED_FUNCTION_13_9(54LL);
}

unint64_t static AppSelectionDependentKeys.phoneAppContactFrequency2mKey.getter()
{
  return OUTLINED_FUNCTION_13_9(54LL);
}

unint64_t static AppSelectionDependentKeys.phoneAppContactFrequency10mKey.getter()
{
  return OUTLINED_FUNCTION_13_9(55LL);
}

unint64_t static AppSelectionDependentKeys.phoneAppContactFrequency1hKey.getter()
{
  return OUTLINED_FUNCTION_13_9(54LL);
}

unint64_t static AppSelectionDependentKeys.phoneAppContactFrequency6hKey.getter()
{
  return OUTLINED_FUNCTION_13_9(54LL);
}

unint64_t static AppSelectionDependentKeys.phoneAppContactFrequency1dKey.getter()
{
  return OUTLINED_FUNCTION_13_9(54LL);
}

unint64_t static AppSelectionDependentKeys.phoneAppContactFrequency7dKey.getter()
{
  return OUTLINED_FUNCTION_13_9(54LL);
}

unint64_t static AppSelectionDependentKeys.phoneAppContactFrequency28dKey.getter()
{
  return OUTLINED_FUNCTION_13_9(55LL);
}

unint64_t static AppSelectionDependentKeys.phoneAppContactFrequencyInfKey.getter()
{
  return OUTLINED_FUNCTION_13_9(55LL);
}

unint64_t static AppSelectionDependentKeys.phoneAppContactTotalFrequencyKey.getter()
{
  return OUTLINED_FUNCTION_13_9(55LL);
}

unint64_t static AppSelectionDependentKeys.phoneAppContactFrequencyUsingSiriKey.getter()
{
  return OUTLINED_FUNCTION_13_9(64LL);
}

unint64_t static AppSelectionDependentKeys.phoneAppContactFrequencyHapticKey.getter()
{
  return OUTLINED_FUNCTION_13_9(66LL);
}

ValueMetadata *type metadata accessor for AppSelectionDependentKeys()
{
  return &type metadata for AppSelectionDependentKeys;
}

void MachineUtteranceBuilder.addFollowUpOfferMapping(for:)(char a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_1_100();
  dispatch thunk of MachineUtteranceBuilder.addMapping(node:value:)(v2, v3, v4, v5);
  __asm { BR              X10 }

uint64_t sub_2B96E0()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_106();
  uint64_t v3 = dispatch thunk of MachineUtteranceBuilder.addMapping(node:value:)(v1, v2, 1819042147LL, 0xE400000000000000LL);
  swift_release(v0);
  return v3;
}

uint64_t MachineUtteranceBuilder.addPhoneDomain()()
{
  uint64_t v0 = OUTLINED_FUNCTION_1_100();
  return dispatch thunk of MachineUtteranceBuilder.addMapping(node:value:)(v0, v1, v2, 0xE90000000000006CLL);
}

uint64_t MachineUtteranceBuilder.addPhoneNumber(value:)()
{
  uint64_t v0 = OUTLINED_FUNCTION_4_104();
  return dispatch thunk of MachineUtteranceBuilder.addMapping(node:value:)(v0, v1, v2, v3);
}

uint64_t MachineUtteranceBuilder.addEmailAddress(value:)()
{
  uint64_t v0 = OUTLINED_FUNCTION_3_120();
  return dispatch thunk of MachineUtteranceBuilder.addMapping(node:value:)(v0, v1, v2, v3);
}

uint64_t MachineUtteranceBuilder.addPersonFullName(value:)()
{
  uint64_t v0 = EntitySpanLabel.rawValue.getter();
  return dispatch thunk of MachineUtteranceBuilder.addMapping(node:value:)(v0, v1, v2, v3);
}

uint64_t MachineUtteranceBuilder.addCallBackUtterance(caller:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = swift_bridgeObjectRelease();
  if (v2)
  {
    id v4 = OUTLINED_FUNCTION_17_5(v3, "displayName");
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    uint64_t v7 = v6;

    uint64_t v8 = EntitySpanLabel.rawValue.getter();
    uint64_t v10 = dispatch thunk of MachineUtteranceBuilder.addMapping(node:value:)(v8, v9, v5, v7);
    swift_release(v10);
    uint64_t v3 = swift_bridgeObjectRelease();
  }

  id v11 = OUTLINED_FUNCTION_17_5(v3, "personHandle");
  if (v11)
  {
    outlined bridged method (ob) of @objc INPersonHandle.value.getter(v11);
    if (v13)
    {
      uint64_t v14 = v12;
      uint64_t v15 = v13;
      id v16 = OUTLINED_FUNCTION_17_5(v12, "personHandle");
      if (v16)
      {
        uint64_t v17 = v16;
        uint64_t v18 = (char *)[v16 type];

        if (v18 == (_BYTE *)&dword_0 + 2) {
          goto LABEL_9;
        }
        if (v18 == (_BYTE *)&dword_0 + 1)
        {
          uint64_t v19 = OUTLINED_FUNCTION_3_120();
          goto LABEL_11;
        }

        if (!v18)
        {
LABEL_9:
          uint64_t v19 = OUTLINED_FUNCTION_4_104();
LABEL_11:
          uint64_t v21 = dispatch thunk of MachineUtteranceBuilder.addMapping(node:value:)(v19, v20, v14, v15);
          swift_release(v21);
        }
      }

      swift_bridgeObjectRelease();
    }
  }

  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_0_106()
{
  return 0x6C6143656E6F6870LL;
}

uint64_t OUTLINED_FUNCTION_1_100()
{
  return 0x6E69616D6F64LL;
}

uint64_t OUTLINED_FUNCTION_3_120()
{
  return 0x6464416C69616D65LL;
}

uint64_t OUTLINED_FUNCTION_4_104()
{
  return 0x6D754E656E6F6870LL;
}

void SearchCallHistoryModel.appId.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  OUTLINED_FUNCTION_18_44(v0, v1, v2, v3, v4, v5, v6, v7, v8);
  OUTLINED_FUNCTION_4();
}

uint64_t type metadata accessor for SearchCallHistoryModel(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for SearchCallHistoryModel;
  if (!type metadata singleton initialization cache for SearchCallHistoryModel) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SearchCallHistoryModel);
  }
  return result;
}

void key path setter for SearchCallHistoryModel.appId : SearchCallHistoryModel(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_bridgeObjectRetain();
  SearchCallHistoryModel.appId.setter(v1);
}

void SearchCallHistoryModel.appId.setter(uint64_t a1)
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  OUTLINED_FUNCTION_15_5(v1, v2, v3, v4, v5, v6, v7, v8, a1);
  OUTLINED_FUNCTION_4();
}

void SearchCallHistoryModel.appId.modify()
{
  uint64_t v1 = OUTLINED_FUNCTION_3_1();
  *uint64_t v0 = v1;
  OUTLINED_FUNCTION_0_107();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v1[4] = OUTLINED_FUNCTION_13_12(v2);
  OUTLINED_FUNCTION_6();
}

void property wrapper backing initializer of SearchCallHistoryModel.callRecords(uint64_t a1)
{
  uint64_t v2 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SingleCallRecordModel]);
  Loggable.init(wrappedValue:)(&v2, v1);
  OUTLINED_FUNCTION_4();
}

void SearchCallHistoryModel.callRecords.getter()
{
}

void key path setter for SearchCallHistoryModel.callRecords : SearchCallHistoryModel()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  SearchCallHistoryModel.callRecords.setter(v0);
}

void SearchCallHistoryModel.callRecords.setter(uint64_t a1)
{
  uint64_t v2 = a1;
  OUTLINED_FUNCTION_0_107();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
  Loggable.wrappedValue.setter(&v2, v1);
  OUTLINED_FUNCTION_4();
}

void SearchCallHistoryModel.callRecords.modify()
{
  uint64_t v1 = OUTLINED_FUNCTION_3_1();
  *uint64_t v0 = v1;
  OUTLINED_FUNCTION_0_107();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
  v1[4] = OUTLINED_FUNCTION_13_12(v2);
  OUTLINED_FUNCTION_6();
}

void SearchCallHistoryModel.recentsText.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  OUTLINED_FUNCTION_18_44(v0, v1, v2, v3, v4, v5, v6, v7, v8);
  OUTLINED_FUNCTION_4();
}

void key path setter for SearchCallHistoryModel.recentsText : SearchCallHistoryModel(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_bridgeObjectRetain();
  SearchCallHistoryModel.recentsText.setter(v1);
}

void SearchCallHistoryModel.recentsText.setter(uint64_t a1)
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  OUTLINED_FUNCTION_15_5(v1, v2, v3, v4, v5, v6, v7, v8, a1);
  OUTLINED_FUNCTION_4();
}

void SearchCallHistoryModel.recentsText.modify()
{
  uint64_t v1 = OUTLINED_FUNCTION_3_1();
  *uint64_t v0 = v1;
  OUTLINED_FUNCTION_0_107();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v1[4] = OUTLINED_FUNCTION_13_12(v2);
  OUTLINED_FUNCTION_6();
}

void SearchCallHistoryModel.openPhoneText.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  OUTLINED_FUNCTION_18_44(v0, v1, v2, v3, v4, v5, v6, v7, v8);
  OUTLINED_FUNCTION_4();
}

void key path setter for SearchCallHistoryModel.openPhoneText : SearchCallHistoryModel(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_bridgeObjectRetain();
  SearchCallHistoryModel.openPhoneText.setter(v1);
}

void SearchCallHistoryModel.openPhoneText.setter(uint64_t a1)
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  OUTLINED_FUNCTION_15_5(v1, v2, v3, v4, v5, v6, v7, v8, a1);
  OUTLINED_FUNCTION_4();
}

void SearchCallHistoryModel.openPhoneText.modify()
{
  uint64_t v1 = OUTLINED_FUNCTION_3_1();
  *uint64_t v0 = v1;
  OUTLINED_FUNCTION_0_107();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v1[4] = OUTLINED_FUNCTION_13_12(v2);
  OUTLINED_FUNCTION_6();
}

uint64_t property wrapper backing initializer of SearchCallHistoryModel.shouldShowBottomView(char a1)
{
  char v2 = a1;
  return Loggable.init(wrappedValue:)(&v2, &type metadata for Bool);
}

void SearchCallHistoryModel.shouldShowBottomView.getter()
{
}

void SearchCallHistoryModel.shouldShowBottomView.setter(char a1)
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  OUTLINED_FUNCTION_46_18(v1, v2, v3, v4, v5, v6, v7, v8, v9, *(int *)v10, *(__int16 *)&v10[4], v10[6], a1);
  OUTLINED_FUNCTION_4();
}

void SearchCallHistoryModel.shouldShowBottomView.modify()
{
  uint64_t v1 = OUTLINED_FUNCTION_3_1();
  *uint64_t v0 = v1;
  OUTLINED_FUNCTION_0_107();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  v1[4] = OUTLINED_FUNCTION_13_12(v2);
  OUTLINED_FUNCTION_6();
}

void SearchCallHistoryModel.shouldReactOpenContact.getter()
{
}

void SearchCallHistoryModel.shouldReactOpenContact.setter(char a1)
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  OUTLINED_FUNCTION_46_18(v1, v2, v3, v4, v5, v6, v7, v8, v9, *(int *)v10, *(__int16 *)&v10[4], v10[6], a1);
  OUTLINED_FUNCTION_4();
}

void SearchCallHistoryModel.shouldReactOpenContact.modify()
{
  uint64_t v1 = OUTLINED_FUNCTION_3_1();
  *uint64_t v0 = v1;
  OUTLINED_FUNCTION_0_107();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  v1[4] = OUTLINED_FUNCTION_13_12(v2);
  OUTLINED_FUNCTION_6();
}

void SearchCallHistoryModel.openPhoneAction.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  CodableAceObject.wrappedValue.getter(v0);
  OUTLINED_FUNCTION_2();
}

void key path setter for SearchCallHistoryModel.openPhoneAction : SearchCallHistoryModel(id *a1)
{
}

void SearchCallHistoryModel.openPhoneAction.setter(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  CodableAceObject.wrappedValue.setter(a1, v2);
  OUTLINED_FUNCTION_2();
}

void SearchCallHistoryModel.openPhoneAction.modify()
{
  uint64_t v1 = OUTLINED_FUNCTION_3_1();
  *uint64_t v0 = v1;
  OUTLINED_FUNCTION_0_107();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  v1[4] = CodableAceObject.wrappedValue.modify(v1, v2);
  OUTLINED_FUNCTION_6();
}

uint64_t SearchCallHistoryModel.CodingKeys.init(stringValue:)(uint64_t a1, unint64_t a2)
{
  if (a1 == 0x65736E6F70736572LL && a2 == 0xEE00644977656956LL)
  {
    unint64_t v5 = 0xEE00644977656956LL;
    goto LABEL_8;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x65736E6F70736572LL, 0xEE00644977656956LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0LL;
  }

  if (a1 == 0x6449707061LL && a2 == 0xE500000000000000LL)
  {
    unint64_t v8 = 0xE500000000000000LL;
    goto LABEL_16;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6449707061LL, 0xE500000000000000LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v8 = a2;
LABEL_16:
    swift_bridgeObjectRelease(v8);
    return 1LL;
  }

  if (a1 == 0x6F6365526C6C6163LL && a2 == 0xEB00000000736472LL)
  {
    unint64_t v10 = 0xEB00000000736472LL;
    goto LABEL_24;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6F6365526C6C6163LL, 0xEB00000000736472LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v10 = a2;
LABEL_24:
    swift_bridgeObjectRelease(v10);
    return 2LL;
  }

  if (a1 == 0x5473746E65636572LL && a2 == 0xEB00000000747865LL)
  {
    unint64_t v12 = 0xEB00000000747865LL;
    goto LABEL_32;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x5473746E65636572LL, 0xEB00000000747865LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v12 = a2;
LABEL_32:
    swift_bridgeObjectRelease(v12);
    return 3LL;
  }

  if (a1 == 0x6E6F68506E65706FLL && a2 == 0xED00007478655465LL)
  {
    unint64_t v14 = 0xED00007478655465LL;
    goto LABEL_40;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F68506E65706FLL, 0xED00007478655465LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v14 = a2;
LABEL_40:
    swift_bridgeObjectRelease(v14);
    return 4LL;
  }

  if (a1 == 0xD000000000000014LL)
  {
    unint64_t v15 = 0x8000000000351C00LL;
    if (a2 == 0x8000000000351C00LL) {
      goto LABEL_45;
    }
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000014LL, 0x8000000000351C00LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v15 = a2;
LABEL_45:
    swift_bridgeObjectRelease(v15);
    return 5LL;
  }

  if (a1 == 0xD000000000000016LL && a2 == 0x8000000000351C20LL)
  {
    unint64_t v16 = 0x8000000000351C20LL;
LABEL_51:
    swift_bridgeObjectRelease(v16);
    return 6LL;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000016LL, 0x8000000000351C20LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v16 = a2;
    goto LABEL_51;
  }

  if (a1 == 0x6E6F68506E65706FLL && a2 == 0xEF6E6F6974634165LL)
  {
    swift_bridgeObjectRelease(0xEF6E6F6974634165LL);
    return 7LL;
  }

  else
  {
    char v18 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F68506E65706FLL, 0xEF6E6F6974634165LL, a1, a2, 0LL);
    swift_bridgeObjectRelease(a2);
    if ((v18 & 1) != 0) {
      return 7LL;
    }
    else {
      return 8LL;
    }
  }

uint64_t SearchCallHistoryModel.CodingKeys.stringValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2BA414 + 4 * byte_33E730[a1]))( 0x65736E6F70736572LL,  0xEE00644977656956LL);
}

uint64_t sub_2BA414()
{
  return 0x6449707061LL;
}

uint64_t sub_2BA428()
{
  return 0x6F6365526C6C6163LL;
}

uint64_t sub_2BA448()
{
  return 0x5473746E65636572LL;
}

uint64_t sub_2BA468()
{
  return 0x6E6F68506E65706FLL;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance SearchCallHistoryModel.CodingKeys()
{
  return SearchCallHistoryModel.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance SearchCallHistoryModel.CodingKeys@<X0>( uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = SearchCallHistoryModel.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance SearchCallHistoryModel.CodingKeys( uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys();
  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance SearchCallHistoryModel.CodingKeys( uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys();
  return CodingKey.debugDescription.getter(a1, v2);
}

void SearchCallHistoryModel.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<SearchCallHistoryModel.CodingKeys>);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  unint64_t v12 = lazy protocol witness table accessor for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&unk_4164D8, &unk_4164D8, v12, v10, v11);
  uint64_t v13 = *v3;
  uint64_t v14 = v3[1];
  char v26 = 0;
  KeyedEncodingContainer.encode(_:forKey:)(v13, v14, &v26, v5);
  if (!v2)
  {
    unint64_t v15 = (int *)type metadata accessor for SearchCallHistoryModel(0LL);
    uint64_t v16 = (uint64_t)v3 + v15[5];
    char v25 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    _s10SnippetKit8LoggableVySSGACyxGSEAASeRzSERzlWlTm_1((uint64_t)&lazy protocol witness table cache variable for type Loggable<String> and conformance <A> Loggable<A>);
    OUTLINED_FUNCTION_7_11(v16, (uint64_t)&v25);
    v24[1] = 2;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
    lazy protocol witness table accessor for type Loggable<[SingleCallRecordModel]> and conformance <A> Loggable<A>((uint64_t)&lazy protocol witness table cache variable for type Loggable<[SingleCallRecordModel]> and conformance <A> Loggable<A>);
    OUTLINED_FUNCTION_6_12();
    uint64_t v17 = (uint64_t)v3 + v15[7];
    v24[0] = 3;
    OUTLINED_FUNCTION_7_11(v17, (uint64_t)v24);
    uint64_t v18 = (uint64_t)v3 + v15[8];
    char v23 = 4;
    OUTLINED_FUNCTION_7_11(v18, (uint64_t)&v23);
    uint64_t v19 = (uint64_t)v3 + v15[9];
    char v22 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    lazy protocol witness table accessor for type Loggable<Bool> and conformance <A> Loggable<A>((uint64_t)&lazy protocol witness table cache variable for type Loggable<Bool> and conformance <A> Loggable<A>);
    OUTLINED_FUNCTION_7_11(v19, (uint64_t)&v22);
    uint64_t v20 = (uint64_t)v3 + v15[10];
    char v21 = 6;
    OUTLINED_FUNCTION_7_11(v20, (uint64_t)&v21);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
    _s10SnippetKit16CodableAceObjectVySo13SABaseCommandCGACyxGSEAAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type CodableAceObject<SABaseCommand> and conformance CodableAceObject<A>);
    OUTLINED_FUNCTION_6_12();
  }

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  OUTLINED_FUNCTION_7_1();
}

unint64_t lazy protocol witness table accessor for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for SearchCallHistoryModel.CodingKeys, &unk_4164D8);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for SearchCallHistoryModel.CodingKeys, &unk_4164D8);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for SearchCallHistoryModel.CodingKeys, &unk_4164D8);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for SearchCallHistoryModel.CodingKeys, &unk_4164D8);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys);
  }

  return result;
}

unint64_t lazy protocol witness table accessor for type [SingleCallRecordModel] and conformance <A> [A]( uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_12_6(a1);
  if (!result)
  {
    uint64_t v5 = v4;
    uint64_t v6 = v3;
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [SingleCallRecordModel]);
    lazy protocol witness table accessor for type SingleCallRecordModel and conformance SingleCallRecordModel(v6);
    unint64_t result = swift_getWitnessTable(v5, v7);
    atomic_store(result, v1);
  }

  return result;
}

void SearchCallHistoryModel.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v51 = a2;
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  uint64_t v50 = *(void *)(v52 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v53 = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  uint64_t v63 = *(void *)(v4 - 8);
  uint64_t v64 = v4;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  uint64_t v54 = (char *)v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v55 = (char *)v49 - v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
  uint64_t v58 = *(void *)(v7 - 8);
  uint64_t v59 = v7;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v56 = v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v66 = *(void *)(v9 - 8);
  uint64_t v67 = v9;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  uint64_t v11 = (char *)v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v13 = (char *)v49 - v12;
  __chkstk_darwin();
  unint64_t v15 = (char *)v49 - v14;
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<SearchCallHistoryModel.CodingKeys>);
  uint64_t v16 = *(void *)(v57 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v19 = (int *)(v18 - v17);
  __int128 v65 = (int *)type metadata accessor for SearchCallHistoryModel(0LL);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  char v22 = (void *)(v21 - v20);
  *char v22 = 0xD000000000000011LL;
  v22[1] = 0x8000000000346CD0LL;
  char v23 = (char *)(v21 - v20);
  uint64_t v24 = a1[3];
  uint64_t v25 = a1[4];
  uint64_t v62 = a1;
  unsigned int v26 = __swift_project_boxed_opaque_existential_1(a1, v24);
  unint64_t v27 = lazy protocol witness table accessor for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys();
  uint64_t v60 = v19;
  uint64_t v28 = v61;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&unk_4164D8, &unk_4164D8, v27, v24, v25);
  if (v28)
  {
    OUTLINED_FUNCTION_12_88();
    uint64_t v61 = v28;
    __swift_destroy_boxed_opaque_existential_1(v62);
    swift_bridgeObjectRelease();
    if ((_DWORD)v15) {
      (*(void (**)(char *, uint64_t))(v66 + 8))(&v23[v19[5]], v67);
    }
    if ((_DWORD)v11) {
      (*(void (**)(char *, uint64_t))(v58 + 8))(&v23[v19[6]], v59);
    }
    if ((_DWORD)v25) {
      OUTLINED_FUNCTION_11_20((uint64_t)&v23[v19[7]], *(uint64_t (**)(uint64_t, uint64_t))(v66 + 8));
    }
    if ((_DWORD)v24) {
      OUTLINED_FUNCTION_11_20((uint64_t)&v23[v19[8]], *(uint64_t (**)(uint64_t, uint64_t))(v66 + 8));
    }
    if (v26) {
      OUTLINED_FUNCTION_19_66(v19[9]);
    }
    if ((_DWORD)v16) {
      OUTLINED_FUNCTION_19_66(v19[10]);
    }
  }

  else
  {
    uint64_t v29 = v15;
    uint64_t v31 = v56;
    uint64_t v30 = v57;
    uint64_t v61 = v13;
    v49[1] = (uint64_t)v11;
    v49[2] = v16;
    char v75 = 0;
    *(void *)char v23 = KeyedDecodingContainer.decode(_:forKey:)(&v75, v57);
    *((void *)v23 + 1) = v32;
    char v74 = 1;
    _s10SnippetKit8LoggableVySSGACyxGSEAASeRzSERzlWlTm_1((uint64_t)&lazy protocol witness table cache variable for type Loggable<String> and conformance <A> Loggable<A>);
    uint64_t v34 = v33;
    uint64_t v35 = (uint64_t)v29;
    uint64_t v36 = v67;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v67, &v74, v30, v67, v33);
    v49[0] = v34;
    OUTLINED_FUNCTION_34_37((uint64_t)&v23[v65[5]], v35);
    char v73 = 2;
    unint64_t v37 = lazy protocol witness table accessor for type Loggable<[SingleCallRecordModel]> and conformance <A> Loggable<A>((uint64_t)&lazy protocol witness table cache variable for type Loggable<[SingleCallRecordModel]> and conformance <A> Loggable<A>);
    uint64_t v38 = v59;
    OUTLINED_FUNCTION_29_47(v59, (uint64_t)&v73, v30, v59, v37);
    (*(void (**)(char *, uint64_t, uint64_t))(v58 + 32))(&v23[v65[6]], v31, v38);
    char v72 = 3;
    OUTLINED_FUNCTION_29_47(v36, (uint64_t)&v72, v30, v36, v49[0]);
    uint64_t v39 = OUTLINED_FUNCTION_30_46(v65[7]);
    char v71 = 4;
    OUTLINED_FUNCTION_10_80(v39, (uint64_t)&v71);
    OUTLINED_FUNCTION_30_46(v65[8]);
    char v70 = 5;
    lazy protocol witness table accessor for type Loggable<Bool> and conformance <A> Loggable<A>((uint64_t)&lazy protocol witness table cache variable for type Loggable<Bool> and conformance <A> Loggable<A>);
    uint64_t v41 = v40;
    uint64_t v42 = (uint64_t)v55;
    uint64_t v43 = v64;
    OUTLINED_FUNCTION_10_80(v40, (uint64_t)&v70);
    uint64_t v44 = v30;
    OUTLINED_FUNCTION_34_37(v65[9], v42);
    char v69 = 6;
    uint64_t v45 = (uint64_t)v54;
    OUTLINED_FUNCTION_29_47(v43, (uint64_t)&v69, v44, v43, v41);
    OUTLINED_FUNCTION_34_37(v65[10], v45);
    char v68 = 7;
    _s10SnippetKit16CodableAceObjectVySo13SABaseCommandCGACyxGSEAAWlTm_0((uint64_t)&lazy protocol witness table cache variable for type CodableAceObject<SABaseCommand> and conformance CodableAceObject<A>);
    uint64_t v47 = v52;
    uint64_t v46 = v53;
    OUTLINED_FUNCTION_29_47(v52, (uint64_t)&v68, v57, v52, v48);
    OUTLINED_FUNCTION_28_55();
    (*(void (**)(char *, uint64_t, uint64_t))(v50 + 32))(&v23[v65[11]], v46, v47);
    outlined init with copy of SearchCallHistoryModel((uint64_t)v23, v51);
    __swift_destroy_boxed_opaque_existential_1(v62);
    outlined destroy of SearchCallHistoryModel((uint64_t)v23);
  }

  OUTLINED_FUNCTION_7_1();
}

unint64_t lazy protocol witness table accessor for type Loggable<[SingleCallRecordModel]> and conformance <A> Loggable<A>( uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_12_6(a1);
  if (!result)
  {
    uint64_t v4 = v3;
    uint64_t v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
    lazy protocol witness table accessor for type [SingleCallRecordModel] and conformance <A> [A]((uint64_t)&lazy protocol witness table cache variable for type [SingleCallRecordModel] and conformance <A> [A]);
    lazy protocol witness table accessor for type [SingleCallRecordModel] and conformance <A> [A]((uint64_t)&lazy protocol witness table cache variable for type [SingleCallRecordModel] and conformance <A> [A]);
    unint64_t result = swift_getWitnessTable(v4, v5);
    atomic_store(result, v1);
  }

  return result;
}

void _s10SnippetKit16CodableAceObjectVySo13SABaseCommandCGACyxGSEAAWlTm_0(uint64_t a1)
{
  if (!OUTLINED_FUNCTION_12_6(a1))
  {
    uint64_t v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
    atomic_store(OUTLINED_FUNCTION_110(v2), v1);
  }

  OUTLINED_FUNCTION_2();
}

uint64_t outlined init with copy of SearchCallHistoryModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SearchCallHistoryModel(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of SearchCallHistoryModel(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SearchCallHistoryModel(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

unint64_t default argument 0 of SearchCallHistoryModel.init(responseViewId:appId:callRecords:recentsText:openPhoneText:shouldShowBottomView:shouldReactOpenContact:openPhoneAction:)()
{
  return 0xD000000000000011LL;
}

uint64_t SearchCallHistoryModel.init(responseViewId:appId:callRecords:recentsText:openPhoneText:shouldShowBottomView:shouldReactOpenContact:openPhoneAction:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, void *a8@<X8>, uint64_t a9, char a10, char a11, uint64_t a12)
{
  *a8 = a1;
  a8[1] = a2;
  uint64_t v17 = OUTLINED_FUNCTION_0_107();
  uint64_t v31 = a3;
  OUTLINED_FUNCTION_18_66(v17, v18);
  uint64_t v30 = a4;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SingleCallRecordModel]);
  uint64_t v20 = Loggable.init(wrappedValue:)(&v30, v19);
  uint64_t v30 = a5;
  uint64_t v31 = a6;
  uint64_t v22 = OUTLINED_FUNCTION_18_66(v20, v21);
  uint64_t v30 = a7;
  uint64_t v31 = a9;
  uint64_t v24 = OUTLINED_FUNCTION_18_66(v22, v23);
  LOBYTE(v30) = a10;
  uint64_t v26 = OUTLINED_FUNCTION_38_38(v24, v25);
  LOBYTE(v30) = a11;
  OUTLINED_FUNCTION_38_38(v26, v27);
  unint64_t v28 = type metadata accessor for SABaseCommand();
  return CodableAceObject.init(wrappedValue:)(a12, v28);
}

void instantiation function for generic protocol witness table for SearchCallHistoryModel(uint64_t a1)
{
  *(void *)(a1 + 8) = v2;
}

void base witness table accessor for Decodable in SearchCallHistoryModel()
{
}

void base witness table accessor for Encodable in SearchCallHistoryModel()
{
}

void lazy protocol witness table accessor for type SingleCallRecordModel and conformance SingleCallRecordModel( uint64_t a1)
{
  if (!OUTLINED_FUNCTION_12_6(a1))
  {
    uint64_t v3 = v2(255LL);
    atomic_store(OUTLINED_FUNCTION_110(v3), v1);
  }

  OUTLINED_FUNCTION_2();
}

void protocol witness for Decodable.init(from:) in conformance SearchCallHistoryModel( void *a1@<X0>, uint64_t a2@<X8>)
{
}

void protocol witness for Encodable.encode(to:) in conformance SearchCallHistoryModel(void *a1)
{
}

void sub_2BB28C()
{
  *uint64_t v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

void sub_2BB2B0()
{
  *uint64_t v0 = v1;
  OUTLINED_FUNCTION_2();
}

void sub_2BB2D4()
{
  *uint64_t v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

void sub_2BB2F8()
{
  *uint64_t v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

void sub_2BB31C()
{
  *uint64_t v0 = v1 & 1;
  OUTLINED_FUNCTION_2();
}

void sub_2BB340(char *a1)
{
}

void sub_2BB360()
{
  *uint64_t v0 = v1 & 1;
  OUTLINED_FUNCTION_2();
}

void sub_2BB384(char *a1)
{
}

void sub_2BB3A4()
{
  *uint64_t v0 = v1;
  OUTLINED_FUNCTION_2();
}

char *initializeBufferWithCopyOfBuffer for SearchCallHistoryModel(char *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v26 = *a2;
    *(void *)a1 = *a2;
    a1 = (char *)(v26 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain();
  }

  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *((void *)a1 + 1) = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = (char *)a2 + v8;
    swift_bridgeObjectRetain();
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16LL);
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = &a1[v13];
    unint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16LL))(v14, v15, v16);
    v12(&a1[a3[7]], (char *)a2 + a3[7], v11);
    v12(&a1[a3[8]], (char *)a2 + a3[8], v11);
    uint64_t v17 = a3[9];
    uint64_t v18 = &a1[v17];
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16LL);
    v21(v18, v19, v20);
    v21(&a1[a3[10]], (char *)a2 + a3[10], v20);
    uint64_t v22 = a3[11];
    uint64_t v23 = &a1[v22];
    uint64_t v24 = (char *)a2 + v22;
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16LL))(v23, v24, v25);
  }

  return a1;
}

uint64_t destroy for SearchCallHistoryModel(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8LL);
  v6(v4, v5);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8LL))(v7, v8);
  v6(a1 + a2[7], v5);
  v6(a1 + a2[8], v5);
  uint64_t v9 = a1 + a2[9];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8LL);
  v11(v9, v10);
  v11(a1 + a2[10], v10);
  uint64_t v12 = a1 + a2[11];
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8LL))(v12, v13);
}

char *initializeWithCopy for SearchCallHistoryModel(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  swift_bridgeObjectRetain();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16LL);
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16LL))(v13, v14, v15);
  v11(&a1[a3[7]], &a2[a3[7]], v10);
  v11(&a1[a3[8]], &a2[a3[8]], v10);
  uint64_t v16 = a3[9];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16LL);
  v20(v17, v18, v19);
  v20(&a1[a3[10]], &a2[a3[10]], v19);
  uint64_t v21 = a3[11];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16LL))(v22, v23, v24);
  return a1;
}

char *assignWithCopy for SearchCallHistoryModel(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24LL);
  v10(v7, v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 24LL))(v12, v13, v14);
  v10(&a1[a3[7]], &a2[a3[7]], v9);
  v10(&a1[a3[8]], &a2[a3[8]], v9);
  uint64_t v15 = a3[9];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 24LL);
  v19(v16, v17, v18);
  v19(&a1[a3[10]], &a2[a3[10]], v18);
  uint64_t v20 = a3[11];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 24LL))(v21, v22, v23);
  return a1;
}

char *initializeWithTake for SearchCallHistoryModel(char *a1, char *a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32LL);
  v10(v7, v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32LL))(v12, v13, v14);
  v10(&a1[a3[7]], &a2[a3[7]], v9);
  v10(&a1[a3[8]], &a2[a3[8]], v9);
  uint64_t v15 = a3[9];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32LL);
  v19(v16, v17, v18);
  v19(&a1[a3[10]], &a2[a3[10]], v18);
  uint64_t v20 = a3[11];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32LL))(v21, v22, v23);
  return a1;
}

char *assignWithTake for SearchCallHistoryModel(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40LL);
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40LL))(v13, v14, v15);
  v11(&a1[a3[7]], &a2[a3[7]], v10);
  v11(&a1[a3[8]], &a2[a3[8]], v10);
  uint64_t v16 = a3[9];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 40LL);
  v20(v17, v18, v19);
  v20(&a1[a3[10]], &a2[a3[10]], v19);
  uint64_t v21 = a3[11];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 40LL))(v22, v23, v24);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchCallHistoryModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_2BBBB0);
}

uint64_t sub_2BBBB0(uint64_t a1, uint64_t a2, int *a3)
{
  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }

  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    OUTLINED_FUNCTION_20_36();
    if (v11)
    {
      uint64_t v9 = v8;
      uint64_t v10 = a3[5];
    }

    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
      OUTLINED_FUNCTION_20_36();
      if (v11)
      {
        uint64_t v9 = v12;
        uint64_t v10 = a3[6];
      }

      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
        OUTLINED_FUNCTION_20_36();
        if (v13)
        {
          uint64_t v9 = v14;
          uint64_t v10 = a3[9];
        }

        else
        {
          uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
          uint64_t v10 = a3[11];
        }
      }
    }

    return __swift_getEnumTagSinglePayload(a1 + v10, a2, v9);
  }

uint64_t storeEnumTagSinglePayload for SearchCallHistoryModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_2BBC94);
}

void sub_2BBC94(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + 8) = (a2 - 1);
    OUTLINED_FUNCTION_6();
  }

  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    OUTLINED_FUNCTION_168();
    if (v10)
    {
      uint64_t v8 = v7;
      uint64_t v9 = a4[5];
    }

    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
      OUTLINED_FUNCTION_168();
      if (v10)
      {
        uint64_t v8 = v11;
        uint64_t v9 = a4[6];
      }

      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
        OUTLINED_FUNCTION_168();
        if (v12)
        {
          uint64_t v8 = v13;
          uint64_t v9 = a4[9];
        }

        else
        {
          uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
          uint64_t v9 = a4[11];
        }
      }
    }

    __swift_storeEnumTagSinglePayload(a1 + v9, a2, a2, v8);
  }

void type metadata completion function for SearchCallHistoryModel(uint64_t a1)
{
  v11[0] = &unk_33E808;
  _s10SnippetKit8LoggableVySSGMaTm_0( 319LL,  (unint64_t *)&lazy cache variable for type metadata for Loggable<String>,  (uint64_t)&type metadata for String);
  if (v3 <= 0x3F)
  {
    uint64_t v4 = *(void *)(v2 - 8) + 64LL;
    v11[1] = v4;
    type metadata accessor for Loggable<[SingleCallRecordModel]>(319LL);
    if (v6 <= 0x3F)
    {
      v11[2] = *(void *)(v5 - 8) + 64LL;
      v11[3] = v4;
      v11[4] = v4;
      _s10SnippetKit8LoggableVySSGMaTm_0( 319LL,  &lazy cache variable for type metadata for Loggable<Bool>,  (uint64_t)&type metadata for Bool);
      if (v8 <= 0x3F)
      {
        uint64_t v12 = *(void *)(v7 - 8) + 64LL;
        uint64_t v13 = v12;
        type metadata accessor for CodableAceObject<SABaseCommand>(319LL);
        if (v10 <= 0x3F)
        {
          uint64_t v14 = *(void *)(v9 - 8) + 64LL;
          swift_initStructMetadata(a1, 256LL, 8LL, v11, a1 + 16);
        }
      }
    }
  }

void type metadata accessor for Loggable<[SingleCallRecordModel]>(uint64_t a1)
{
  if (!lazy cache variable for type metadata for Loggable<[SingleCallRecordModel]>)
  {
    uint64_t v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [SingleCallRecordModel]);
    unint64_t v3 = type metadata accessor for Loggable(a1, v2);
    if (!v4) {
      atomic_store(v3, (unint64_t *)&lazy cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
    }
  }

void _s10SnippetKit8LoggableVySSGMaTm_0(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  if (!*a2)
  {
    unint64_t v4 = type metadata accessor for Loggable(0LL, a3);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }

uint64_t storeEnumTagSinglePayload for SearchCallHistoryModel.CodingKeys( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xF8) {
    return ((uint64_t (*)(void))((char *)&loc_2BBF34 + 4 * byte_33E73D[v4]))();
  }
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_2BBF68 + 4 * byte_33E738[v4]))();
}

uint64_t sub_2BBF68(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2BBF70(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x2BBF78LL);
  }
  return result;
}

uint64_t sub_2BBF84(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x2BBF8CLL);
  }
  *(_BYTE *)unint64_t result = a2 + 7;
  return result;
}

uint64_t sub_2BBF90(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2BBF98(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void *type metadata accessor for SearchCallHistoryModel.CodingKeys()
{
  return &unk_4164D8;
}

uint64_t OUTLINED_FUNCTION_0_107()
{
  return type metadata accessor for SearchCallHistoryModel(0LL);
}

uint64_t OUTLINED_FUNCTION_2_91()
{
  return (*(uint64_t (**)(void, uint64_t))(*(void *)(v1 - 240) + 8LL))(*(void *)(v1 - 152), v0);
}

uint64_t OUTLINED_FUNCTION_10_80(uint64_t a1, uint64_t a2)
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)(v3, a2, v4, v3, v2);
}

  ;
}

uint64_t OUTLINED_FUNCTION_18_66(uint64_t a1, uint64_t a2, ...)
{
  return Loggable.init(wrappedValue:)(va, v2);
}

uint64_t OUTLINED_FUNCTION_19_66@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 128) + 8LL))(v2 + a1, v1);
}

  ;
}

uint64_t OUTLINED_FUNCTION_28_55()
{
  return (*(uint64_t (**)(void, uint64_t))(v1 + 8))(*(void *)(v2 - 152), v0);
}

uint64_t OUTLINED_FUNCTION_29_47(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)(a1, a2, a3, a4, a5);
}

uint64_t OUTLINED_FUNCTION_30_46@<X0>(uint64_t a1@<X8>)
{
  return v3(v2 + a1, v4, v1);
}

uint64_t OUTLINED_FUNCTION_34_37(uint64_t a1, uint64_t a2)
{
  return v2(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_38_38(uint64_t a1, uint64_t a2, ...)
{
  return Loggable.init(wrappedValue:)(va, v2);
}

uint64_t specialized SKTransformer.convertToSKIntent<A>(phoneCallNLIntent:rchFlowContext:)( uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v60 = a3;
  uint64_t v59 = a2;
  uint64_t v70 = a1;
  uint64_t v69 = type metadata accessor for PhoneCallNLv3Intent(0LL);
  __chkstk_darwin();
  uint64_t v4 = (char *)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static Signpost.begin(_:)();
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v68 = v9;
  int v67 = v10;
  uint64_t v11 = type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for INAddCallParticipantIntent,  &OBJC_CLASS___INAddCallParticipantIntent_ptr);
  id v12 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  id v13 = [v12 _className];

  static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  static Signpost.begin(_:string1:)();
  uint64_t v66 = v14;
  uint64_t v65 = v15;
  uint64_t v64 = v16;
  int v71 = v17;
  swift_bridgeObjectRelease();
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v18 = type metadata accessor for Logger(0LL);
  uint64_t v63 = __swift_project_value_buffer(v18, (uint64_t)static Logger.siriPhone);
  uint64_t v19 = (os_log_s *)Logger.logObject.getter(v63);
  os_log_type_t v21 = static os_log_type_t.debug.getter(v19, v20);
  BOOL v22 = os_log_type_enabled(v19, v21);
  uint64_t v61 = v11;
  if (v22)
  {
    uint64_t v23 = swift_slowAlloc(22LL, -1LL);
    uint64_t v62 = v8;
    uint64_t v24 = v23;
    uint64_t v25 = swift_slowAlloc(64LL, -1LL);
    v76[0] = v25;
    *(_DWORD *)uint64_t v24 = 136315394;
    uint64_t v77 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000034LL, 0x8000000000348ED0LL, v76);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v77, v78, v24 + 4);
    *(_WORD *)(v24 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
    uint64_t v77 = v11;
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INAddCallParticipantIntent.Type);
    uint64_t v27 = String.init<A>(describing:)(&v77, v26);
    uint64_t v77 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v27, v28, v76);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v77, v78, v24 + 14);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v19, v21, "#SKTransformer %s to %s", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy(v25, 2LL);
    swift_slowDealloc(v25, -1LL, -1LL);
    uint64_t v29 = v24;
    uint64_t v8 = v62;
    swift_slowDealloc(v29, -1LL, -1LL);
  }

  uint64_t v30 = v70;
  outlined init with copy of SharedGlobalsProviding(v70, (uint64_t)&v77);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  if (swift_dynamicCast(v4, &v77, v31, v69, 0LL))
  {
    uint64_t v32 = type metadata accessor for TransformationError(0LL);
    lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type TransformationError and conformance TransformationError,  (uint64_t (*)(uint64_t))&type metadata accessor for TransformationError,  (uint64_t)&protocol conformance descriptor for TransformationError);
    uint64_t v34 = swift_allocError(v32, v33, 0LL, 0LL);
    uint64_t v36 = (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v32 - 8) + 104LL))( v35,  enum case for TransformationError.notImplemented(_:),  v32);
    swift_willThrow(v36, v37, v38, v39, v40, v41, v42, v43, v58, v59, v60, v61, v62, v63);
    outlined destroy of MainFlow((uint64_t)v4, type metadata accessor for PhoneCallNLv3Intent);
    __swift_destroy_boxed_opaque_existential_1(&v77);
    swift_errorRetain(v34);
    uint64_t v46 = swift_errorRetain(v34);
    uint64_t v47 = (os_log_s *)Logger.logObject.getter(v46);
    os_log_type_t v48 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v47, v48))
    {
      uint64_t v49 = swift_slowAlloc(22LL, -1LL);
      uint64_t v50 = swift_slowAlloc(64LL, -1LL);
      uint64_t v62 = v8;
      uint64_t v51 = v50;
      v76[0] = v50;
      *(_DWORD *)uint64_t v49 = 136315394;
      uint64_t v52 = _typeName(_:qualified:)(v61, 0LL);
      uint64_t v77 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v52, v53, v76);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v77, v78, v49 + 4);
      swift_bridgeObjectRelease();
      *(_WORD *)(v49 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
      swift_getErrorValue(v34, v75, v72);
      uint64_t v54 = Error.localizedDescription.getter(v73, v74);
      uint64_t v77 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v54, v55, v76);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v77, v78, v49 + 14);
      swift_bridgeObjectRelease();
      swift_errorRelease(v34);
      swift_errorRelease(v34);
      _os_log_impl( &dword_0,  v47,  v48,  "#SKTransformer Error converting PhoneCallNLIntent to %s: %s",  (uint8_t *)v49,  0x16u);
      swift_arrayDestroy(v51, 2LL);
      swift_slowDealloc(v51, -1LL, -1LL);
      swift_slowDealloc(v49, -1LL, -1LL);

      swift_errorRelease(v34);
    }

    else
    {
      swift_errorRelease(v34);
      swift_errorRelease(v34);
      swift_errorRelease(v34);
    }

    uint64_t v45 = 0LL;
  }

  else
  {
    char v44 = swift_dynamicCast(v76, &v77, v31, &type metadata for PhoneCallNLv4Intent, 0LL);
    uint64_t v45 = 0LL;
    if ((v44 & 1) != 0)
    {
      uint64_t v45 = specialized SKTransformer.nlv4Conversion<A>(phoneCallNLIntent:rchFlowContext:)(v30, v59, v60);
      outlined destroy of PhoneCallNLv4Intent(v76);
    }

    __swift_destroy_boxed_opaque_existential_1(&v77);
  }

  uint64_t v56 = v66;
  Signpost.OpenSignpost.end()();
  Signpost.OpenSignpost.end()();
  swift_release(v6);
  swift_release(v56);
  return v45;
}

#error "2BC828: call analysis failed (funcsize=13)"
void specialized SKTransformer.convertToSKIntent<A>(phoneCallNLIntent:rchFlowContext:)( uint64_t a1,  uint64_t a2,  uint64_t a3,  uint64_t a4,  uint64_t a5,  uint64_t a6,  uint64_t a7,  uint64_t a8,  uint64_t a9,  uint64_t a10,  uint64_t a11,  uint64_t a12,  uint64_t a13,  uint64_t a14,  uint64_t a15,  uint64_t a16,  uint64_t a17,  uint64_t a18,  uint64_t a19,  uint64_t a20,  void (*a21)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  void *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *v25;
  void *v26;
  void *v27;
  unint64_t *v28;
  unint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  os_log_type_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  void (*v60)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66[13];
  void v67[6];
  OUTLINED_FUNCTION_29_2();
  a19 = v22;
  a20 = v23;
  uint64_t v60 = v24;
  uint64_t v59 = v25;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v63 = v30;
  uint64_t v62 = v31;
  uint64_t v61 = v32;
  uint64_t v65 = v33;
  uint64_t v34 = type metadata accessor for PhoneCallNLv3Intent(0LL);
  OUTLINED_FUNCTION_16_2(v34, (uint64_t)&a13);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_151_6(v35, v57);
  static Signpost.begin(_:)();
  uint64_t v37 = v36;
  uint64_t v38 = type metadata accessor for CNContactStore(0LL, v29, v27);
  uint64_t v39 = objc_msgSend(objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init"), "_className");
  OUTLINED_FUNCTION_79();
  static String._unconditionallyBridgeFromObjectiveC(_:)(v21);

  static Signpost.begin(_:string1:)();
  OUTLINED_FUNCTION_4_1();
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v40 = OUTLINED_FUNCTION_15_1();
  __swift_project_value_buffer(v40, (uint64_t)static Logger.siriPhone);
  OUTLINED_FUNCTION_9();
  uint64_t v41 = OUTLINED_FUNCTION_6_0();
  if (os_log_type_enabled((os_log_t)v21, v41))
  {
    uint64_t v42 = OUTLINED_FUNCTION_7_0(22LL);
    uint64_t v58 = v37;
    uint64_t v43 = OUTLINED_FUNCTION_7_0(64LL);
    v66[0] = v43;
    *(_DWORD *)uint64_t v42 = 136315394;
    char v44 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000034LL, 0x8000000000348ED0LL, v66);
    uint64_t v45 = OUTLINED_FUNCTION_190_2(v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v45, v46, v47);
    *(_WORD *)(v42 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
    v67[0] = v38;
    os_log_type_t v48 = __swift_instantiateConcreteTypeFromMangledName(v59);
    uint64_t v49 = String.init<A>(describing:)(v67, v48);
    uint64_t v51 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v49, v50, v66);
    uint64_t v52 = OUTLINED_FUNCTION_190_2(v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v52, v53, v54);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, (os_log_t)v21, v41, "#SKTransformer %s to %s", (uint8_t *)v42, 0x16u);
    swift_arrayDestroy(v43, 2LL);
    unint64_t v55 = v43;
    uint64_t v37 = v58;
    OUTLINED_FUNCTION_0_2(v55);
    OUTLINED_FUNCTION_0_2(v42);
  }

  outlined init with copy of SharedGlobalsProviding(v65, (uint64_t)v67);
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  if (swift_dynamicCast(v64, v67, v56))
  {
    v60(v65, v61, v62, v63);
    outlined destroy of MainFlow(v64, type metadata accessor for PhoneCallNLv3Intent);
  }

  else if ((swift_dynamicCast(v66, v67, v56) & 1) != 0)
  {
    a21(v65, v61, v62, v63);
    outlined destroy of PhoneCallNLv4Intent(v66);
  }

  OUTLINED_FUNCTION_18();
  Signpost.OpenSignpost.end()();
  Signpost.OpenSignpost.end()();
  swift_release(v37);
  OUTLINED_FUNCTION_31_2();
  OUTLINED_FUNCTION_7_5();
}

#error "2BCF90: call analysis failed (funcsize=94)"
#error "2BD120: call analysis failed (funcsize=94)"
#error "2BD2B0: call analysis failed (funcsize=94)"
#error "2BD440: call analysis failed (funcsize=94)"
#error "2BD5D0: call analysis failed (funcsize=94)"
void specialized SKTransformer.nlv3Conversion<A>(phoneCallNLIntent:rchFlowContext:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  OUTLINED_FUNCTION_106_11();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INStartCallIntent>);
  OUTLINED_FUNCTION_70_20();
  __chkstk_darwin();
  OUTLINED_FUNCTION_44_33();
  uint64_t v1 = OUTLINED_FUNCTION_1_62((uint64_t)&unk_416750);
  OUTLINED_FUNCTION_80_17(v1);
  OUTLINED_FUNCTION_44_1();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  OUTLINED_FUNCTION_49( v2,  (unint64_t *)&lazy cache variable for type metadata for INStartCallIntent,  &OBJC_CLASS___INStartCallIntent_ptr);
  OUTLINED_FUNCTION_123_8((uint64_t)partial apply for closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:));
  OUTLINED_FUNCTION_194_3();
  OUTLINED_FUNCTION_66_22();
  OUTLINED_FUNCTION_69_24();
  uint64_t v3 = OUTLINED_FUNCTION_262_1();
  if (v0)
  {
    swift_release(v3);
  }

  else
  {
    swift_release(v3);
    uint64_t v4 = objc_opt_self(&OBJC_CLASS___INStartCallIntent);
    if (!OUTLINED_FUNCTION_33_4(v4)) {
  }
    }

  OUTLINED_FUNCTION_254_3();
  OUTLINED_FUNCTION_50_27();
}

void specialized SKTransformer.nlv3Conversion<A>(phoneCallNLIntent:rchFlowContext:)()
{
  uint64_t v1 = OUTLINED_FUNCTION_1_62((uint64_t)&unk_416700);
  OUTLINED_FUNCTION_80_17(v1);
  OUTLINED_FUNCTION_44_1();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  OUTLINED_FUNCTION_49( v2,  (unint64_t *)&lazy cache variable for type metadata for INStartVideoCallIntent,  &OBJC_CLASS___INStartVideoCallIntent_ptr);
  OUTLINED_FUNCTION_123_8((uint64_t)partial apply for closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:));
  OUTLINED_FUNCTION_194_3();
  OUTLINED_FUNCTION_66_22();
  OUTLINED_FUNCTION_69_24();
  uint64_t v3 = OUTLINED_FUNCTION_262_1();
  if (v0)
  {
    swift_release(v3);
  }

  else
  {
    swift_release(v3);
    uint64_t v4 = objc_opt_self(&OBJC_CLASS___INStartVideoCallIntent);
    if (!OUTLINED_FUNCTION_33_4(v4)) {
  }
    }

  OUTLINED_FUNCTION_254_3();
  OUTLINED_FUNCTION_50_27();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  OUTLINED_FUNCTION_106_11();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INStartAudioCallIntent>);
  OUTLINED_FUNCTION_70_20();
  __chkstk_darwin();
  OUTLINED_FUNCTION_44_33();
  uint64_t v1 = OUTLINED_FUNCTION_1_62((uint64_t)&unk_4166B0);
  OUTLINED_FUNCTION_80_17(v1);
  OUTLINED_FUNCTION_44_1();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  OUTLINED_FUNCTION_49( v2,  &lazy cache variable for type metadata for INStartAudioCallIntent,  &OBJC_CLASS___INStartAudioCallIntent_ptr);
  OUTLINED_FUNCTION_123_8((uint64_t)partial apply for closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:));
  OUTLINED_FUNCTION_194_3();
  OUTLINED_FUNCTION_66_22();
  OUTLINED_FUNCTION_69_24();
  uint64_t v3 = OUTLINED_FUNCTION_262_1();
  if (v0)
  {
    swift_release(v3);
  }

  else
  {
    swift_release(v3);
    uint64_t v4 = objc_opt_self(&OBJC_CLASS___INStartAudioCallIntent);
    if (!OUTLINED_FUNCTION_33_4(v4)) {
  }
    }

  OUTLINED_FUNCTION_254_3();
  OUTLINED_FUNCTION_50_27();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  __int128 v17[2];
  OUTLINED_FUNCTION_17_1();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INHangUpCallIntent>);
  OUTLINED_FUNCTION_5_93();
  __chkstk_darwin();
  OUTLINED_FUNCTION_134();
  outlined init with copy of SharedGlobalsProviding(v0, (uint64_t)v17);
  int v10 = (void *)swift_allocObject(&unk_4168B8, 80LL, 7LL);
  v10[2] = v8;
  v10[3] = v6;
  outlined init with take of AppSelectionSignalComponent(v17, (uint64_t)(v10 + 4));
  v10[9] = v4;
  uint64_t v11 = v4;
  OUTLINED_FUNCTION_23_1();
  id v12 = v6;
  id v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  OUTLINED_FUNCTION_49( v13,  (unint64_t *)&lazy cache variable for type metadata for INHangUpCallIntent,  &OBJC_CLASS___INHangUpCallIntent_ptr);
  Transformer.init(transform:)( partial apply for closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:previousIntentResponse:),  v10,  v13);
  OUTLINED_FUNCTION_194_3();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v9);
  OUTLINED_FUNCTION_69_24();
  uint64_t v14 = OUTLINED_FUNCTION_262_1();
  if (v1)
  {
    swift_release(v14);
  }

  else
  {
    swift_release(v14);
    uint64_t v15 = *(void **)&v17[0];
    uint64_t v16 = objc_opt_self(&OBJC_CLASS___INHangUpCallIntent);
    if (!OUTLINED_FUNCTION_33_4(v16)) {
  }
    }

  OUTLINED_FUNCTION_7_1();
}

uint64_t specialized SKTransformer.nlv3Conversion<A>(phoneCallNLIntent:rchFlowContext:)( uint64_t a1, uint64_t a2, void *a3)
{
  void (*v16)(__int128 *__return_ptr, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23[2];
  uint64_t v5 = v3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INIdentifyIncomingCallerIntent>);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin();
  id v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  outlined init with copy of SharedGlobalsProviding(v5, (uint64_t)v23);
  uint64_t v13 = swift_allocObject(&unk_416688, 72LL, 7LL);
  *(void *)(v13 + 16) = a2;
  *(void *)(v13 + 24) = a3;
  outlined init with take of AppSelectionSignalComponent(v23, v13 + 32);
  id v14 = a3;
  swift_retain();
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  type metadata accessor for CNContactStore( 0LL,  &lazy cache variable for type metadata for INIdentifyIncomingCallerIntent,  &OBJC_CLASS___INIdentifyIncomingCallerIntent_ptr);
  Transformer.init(transform:)( partial apply for closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:),  v13,  v15);
  uint64_t v16 = (void (*)(__int128 *__return_ptr, uint64_t))Transformer.transform.getter(v9);
  uint64_t v18 = v17;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v16(v23, a1);
  if (v4) {
    return swift_release(v18);
  }
  swift_release(v18);
  uint64_t v20 = *(void **)&v23[0];
  os_log_type_t v21 = objc_opt_self(&OBJC_CLASS___INIdentifyIncomingCallerIntent);
  unint64_t result = swift_dynamicCastObjCClass(v20, v21);
  if (!result)
  {

    return 0LL;
  }

  return result;
}

uint64_t specialized SKTransformer.nlv3Conversion<A>(phoneCallNLIntent:rchFlowContext:)( uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  void (*v19)(__int128 *__return_ptr, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26[2];
  uint64_t v6 = v4;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INAnswerCallIntent>);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  id v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  outlined init with copy of SharedGlobalsProviding(v6, (uint64_t)v26);
  uint64_t v15 = (void *)swift_allocObject(&unk_4165E8, 80LL, 7LL);
  v15[2] = a2;
  v15[3] = a3;
  outlined init with take of AppSelectionSignalComponent(v26, (uint64_t)(v15 + 4));
  v15[9] = a4;
  id v16 = a4;
  swift_retain();
  id v17 = a3;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  type metadata accessor for CNContactStore( 0LL,  &lazy cache variable for type metadata for INAnswerCallIntent,  &OBJC_CLASS___INAnswerCallIntent_ptr);
  Transformer.init(transform:)( partial apply for closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:previousIntentResponse:),  v15,  v18);
  uint64_t v19 = (void (*)(__int128 *__return_ptr, uint64_t))Transformer.transform.getter(v11);
  os_log_type_t v21 = v20;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v19(v26, a1);
  if (v5) {
    return swift_release(v21);
  }
  swift_release(v21);
  uint64_t v23 = *(void **)&v26[0];
  uint64_t v24 = objc_opt_self(&OBJC_CLASS___INAnswerCallIntent);
  unint64_t result = swift_dynamicCastObjCClass(v23, v24);
  if (!result)
  {

    return 0LL;
  }

  return result;
}

void specialized SKTransformer.nlv4Conversion<A>(phoneCallNLIntent:rchFlowContext:)( void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = v3;
  uint64_t v10 = OUTLINED_FUNCTION_112_11();
  OUTLINED_FUNCTION_70_20();
  __chkstk_darwin();
  uint64_t v11 = OUTLINED_FUNCTION_75_26();
  type metadata accessor for Logger(v11);
  __chkstk_darwin();
  OUTLINED_FUNCTION_206_3();
  if (!a2)
  {
    id v16 = v12;
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    __swift_project_value_buffer((uint64_t)v16, (uint64_t)static Logger.siriPhone);
    uint64_t v17 = OUTLINED_FUNCTION_264_2();
    uint64_t v19 = v18(v17);
    Logger.logObject.getter(v19);
    os_log_type_t v20 = OUTLINED_FUNCTION_59_8();
    if (OUTLINED_FUNCTION_7_7(v20))
    {
      os_log_type_t v21 = (_DWORD *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v22 = OUTLINED_FUNCTION_7_0(32LL);
      v30[0] = v22;
      *os_log_type_t v21 = 136315138;
      uint64_t v23 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000032LL, 0x8000000000348F40LL, v30);
      OUTLINED_FUNCTION_47_27(v23);
      OUTLINED_FUNCTION_3_46(&dword_0, v24, v25, "%s");
      OUTLINED_FUNCTION_9_68();
      OUTLINED_FUNCTION_0_2(v22);
      OUTLINED_FUNCTION_0_2((uint64_t)v21);
    }

    OUTLINED_FUNCTION_63_26();
    OUTLINED_FUNCTION_116();
    OUTLINED_FUNCTION_41_39( (uint64_t)"Fatal error",  v26,  v27,  v28,  v29,  (uint64_t)"PhoneCallFlowDelegatePlugin/PhoneLog.swift");
    OUTLINED_FUNCTION_222_3();
  }

  outlined init with copy of SharedGlobalsProviding(v6, (uint64_t)v30);
  if (a3)
  {
    uint64_t v13 = objc_opt_self(&OBJC_CLASS___INStartCallIntent);
    swift_dynamicCastObjCClass(a3, v13);
  }

  uint64_t v14 = UsoEntity_common_Person.usoPerson.getter();
  ContactGroupResolver.init()(v14);
  specialized static StartCallIntentConversion.convertToIntent(phoneCallNLIntent:app:sharedGlobals:previousIntent:previousIntentResponse:groupResolver:)();
  OUTLINED_FUNCTION_18_31();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v10);
  __swift_destroy_boxed_opaque_existential_1(v30);
  if (a1)
  {
    uint64_t v15 = objc_opt_self(&OBJC_CLASS___INStartCallIntent);
    if (!OUTLINED_FUNCTION_1_37(v15)) {
  }
    }

  OUTLINED_FUNCTION_254_3();
  OUTLINED_FUNCTION_50_27();
}

void specialized SKTransformer.nlv4Conversion<A>(phoneCallNLIntent:rchFlowContext:)()
{
}

{
  specialized SKTransformer.nlv4Conversion<A>(phoneCallNLIntent:rchFlowContext:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t (*v4)(uint64_t, uint64_t, void *, uint64_t, void, char *);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t, void *, uint64_t, void, char *);
  void *v37;
  void v38[5];
  OUTLINED_FUNCTION_17_1();
  uint64_t v36 = v4;
  uint64_t v37 = v3;
  uint64_t v5 = v0;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v35 = v10;
  uint64_t v11 = OUTLINED_FUNCTION_112_11();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = (void *)OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_153_9();
  __chkstk_darwin();
  OUTLINED_FUNCTION_7_6();
  if (!v9)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v22 = __swift_project_value_buffer((uint64_t)v15, (uint64_t)static Logger.siriPhone);
    uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t, void *))(v2 + 16))(v1, v22, v15);
    Logger.logObject.getter(v23);
    uint64_t v24 = OUTLINED_FUNCTION_59_8();
    if (OUTLINED_FUNCTION_7_7(v24))
    {
      uint64_t v25 = OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v26 = OUTLINED_FUNCTION_7_0(32LL);
      v38[0] = v26;
      uint64_t v27 = OUTLINED_FUNCTION_89_19(4.8149e-34);
      OUTLINED_FUNCTION_47_27(v27);
      OUTLINED_FUNCTION_3_46(&dword_0, v28, v29, "%s");
      OUTLINED_FUNCTION_9_68();
      OUTLINED_FUNCTION_0_2(v26);
      OUTLINED_FUNCTION_0_2(v25);
    }

    OUTLINED_FUNCTION_63_26();
    OUTLINED_FUNCTION_116();
    OUTLINED_FUNCTION_41_39( (uint64_t)"Fatal error",  v30,  v31,  v32,  v33,  (uint64_t)"PhoneCallFlowDelegatePlugin/PhoneLog.swift");
    OUTLINED_FUNCTION_222_3();
  }

  outlined init with copy of SharedGlobalsProviding(v5, (uint64_t)v38);
  if (v7)
  {
    id v16 = v37;
    uint64_t v17 = objc_opt_self(*v37);
    uint64_t v18 = swift_dynamicCastObjCClass(v7, v17);
  }

  else
  {
    uint64_t v18 = 0LL;
    id v16 = v37;
  }

  uint64_t v19 = UsoEntity_common_Person.usoPerson.getter();
  ContactGroupResolver.init()(v19);
  os_log_type_t v20 = (void *)v36(v35, v9, v38, v18, 0LL, v14);
  swift_release(v9);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  __swift_destroy_boxed_opaque_existential_1(v38);
  if (v20)
  {
    os_log_type_t v21 = objc_opt_self(*v16);
    if (!swift_dynamicCastObjCClass(v20, v21)) {
  }
    }

  OUTLINED_FUNCTION_7_1();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (**v13)(void, void, void);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32[5];
  OUTLINED_FUNCTION_17_1();
  uint64_t v3 = v0;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v12 = OUTLINED_FUNCTION_112_11();
  OUTLINED_FUNCTION_5_93();
  __chkstk_darwin();
  OUTLINED_FUNCTION_135();
  uint64_t v13 = *(uint64_t (***)(void, void, void))(OUTLINED_FUNCTION_15_1() - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_206_3();
  if (!v9)
  {
    uint64_t v19 = v15;
    os_log_type_t v20 = v14;
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    os_log_type_t v21 = __swift_project_value_buffer(v20, (uint64_t)static Logger.siriPhone);
    uint64_t v22 = v13[2](v19, v21, v20);
    Logger.logObject.getter(v22);
    uint64_t v23 = OUTLINED_FUNCTION_59_8();
    if (OUTLINED_FUNCTION_7_7(v23))
    {
      uint64_t v24 = OUTLINED_FUNCTION_7_0(12LL);
      v32[0] = OUTLINED_FUNCTION_7_0(32LL);
      uint64_t v25 = OUTLINED_FUNCTION_89_19(4.8149e-34);
      OUTLINED_FUNCTION_47_27(v25);
      OUTLINED_FUNCTION_3_46(&dword_0, v26, v27, "%s");
      OUTLINED_FUNCTION_9_68();
      OUTLINED_FUNCTION_0_2(v32[0]);
      OUTLINED_FUNCTION_0_2(v24);
    }

    OUTLINED_FUNCTION_63_26();
    OUTLINED_FUNCTION_116();
    OUTLINED_FUNCTION_41_39( (uint64_t)"Fatal error",  v28,  v29,  v30,  v31,  (uint64_t)"PhoneCallFlowDelegatePlugin/PhoneLog.swift");
    OUTLINED_FUNCTION_222_3();
  }

  outlined init with copy of SharedGlobalsProviding(v3, (uint64_t)v32);
  if (v7)
  {
    id v16 = objc_opt_self(&OBJC_CLASS___INHangUpCallIntent);
    uint64_t v7 = (void *)swift_dynamicCastObjCClass(v7, v16);
  }

  uint64_t v17 = UsoEntity_common_Person.usoPerson.getter();
  ContactGroupResolver.init()(v17);
  specialized static HangUpCallIntentConversion.convertToIntent(phoneCallNLIntent:app:sharedGlobals:previousIntent:previousIntentResponse:groupResolver:)( v11,  v9,  (uint64_t)v32,  v7,  v5);
  OUTLINED_FUNCTION_18_31();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v12);
  __swift_destroy_boxed_opaque_existential_1(v32);
  if (v5)
  {
    uint64_t v18 = objc_opt_self(&OBJC_CLASS___INHangUpCallIntent);
    if (!OUTLINED_FUNCTION_1_37(v18)) {
  }
    }

  OUTLINED_FUNCTION_7_1();
}

uint64_t specialized SKTransformer.nlv4Conversion<A>(phoneCallNLIntent:rchFlowContext:)( void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for ContactGroupResolver(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  uint64_t v11 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for Logger(0LL);
  uint64_t v12 = __chkstk_darwin();
  uint64_t v15 = (char *)v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (a2)
  {
    outlined init with copy of SharedGlobalsProviding(v4, (uint64_t)v30);
    if (a3)
    {
      uint64_t v16 = objc_opt_self(&OBJC_CLASS___INIdentifyIncomingCallerIntent);
      a3 = swift_dynamicCastObjCClass(a3, v16);
    }

    uint64_t v17 = swift_retain();
    ContactGroupResolver.init()(v17);
    uint64_t v18 = (void *)specialized static IdentifyCallerIntentConversion.convertToIntent(phoneCallNLIntent:app:sharedGlobals:previousIntent:previousIntentResponse:groupResolver:)( a1,  a2,  (uint64_t)v30,  a3);
    swift_release(a2);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    __swift_destroy_boxed_opaque_existential_1(v30);
    if (v18)
    {
      uint64_t v19 = objc_opt_self(&OBJC_CLASS___INIdentifyIncomingCallerIntent);
      uint64_t result = swift_dynamicCastObjCClass(v18, v19);
      if (result) {
        return result;
      }
    }

    return 0LL;
  }

  else
  {
    uint64_t v21 = v13;
    uint64_t v22 = v15;
    uint64_t v23 = v12;
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v24 = __swift_project_value_buffer(v23, (uint64_t)static Logger.siriPhone);
    uint64_t v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 16))(v22, v24, v23);
    uint64_t v26 = (os_log_s *)Logger.logObject.getter(v25);
    os_log_type_t v27 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v29 = swift_slowAlloc(32LL, -1LL);
      v30[0] = v29;
      *(_DWORD *)uint64_t v28 = 136315138;
      uint64_t v31 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000032LL, 0x8000000000348F40LL, v30);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32, v28 + 4);
      _os_log_impl(&dword_0, v26, v27, "%s", v28, 0xCu);
      swift_arrayDestroy(v29, 1LL);
      swift_slowDealloc(v29, -1LL, -1LL);
      swift_slowDealloc(v28, -1LL, -1LL);
    }

    static SiriKitLifecycle._logCrashToEventBus(_:)(0xD000000000000032LL, 0x8000000000348F40LL);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000032LL,  0x8000000000348F40LL,  "PhoneCallFlowDelegatePlugin/PhoneLog.swift",  42LL,  2LL);
    __break(1u);
  }

  return result;
}

uint64_t specialized SKTransformer.nlv4Conversion<A>(phoneCallNLIntent:rchFlowContext:)( uint64_t a1, uint64_t a2, void *a3)
{
  void (*v20)(__int128 *__return_ptr, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  os_log_s *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  __int128 v35[2];
  uint64_t v36;
  uint64_t v37;
  uint64_t v5 = v3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INAddCallParticipantIntent>);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin();
  uint64_t v12 = (char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for Logger(0LL);
  uint64_t v13 = __chkstk_darwin();
  uint64_t v16 = (char *)v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (a2)
  {
    outlined init with copy of SharedGlobalsProviding(v5, (uint64_t)v35);
    uint64_t v17 = swift_allocObject(&unk_416660, 72LL, 7LL);
    *(void *)(v17 + 16) = a2;
    *(void *)(v17 + 24) = a3;
    outlined init with take of AppSelectionSignalComponent(v35, v17 + 32);
    id v18 = a3;
    swift_retain_n(a2, 2LL);
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
    type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for INAddCallParticipantIntent,  &OBJC_CLASS___INAddCallParticipantIntent_ptr);
    Transformer.init(transform:)( partial apply for closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:previousIntentResponse:),  v17,  v19);
    os_log_type_t v20 = (void (*)(__int128 *__return_ptr, uint64_t))Transformer.transform.getter(v9);
    uint64_t v22 = v21;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v20(v35, a1);
    if (v4)
    {
      swift_release(v22);
      return swift_release(a2);
    }

    else
    {
      swift_release(v22);
      swift_release(a2);
      uint64_t v24 = *(void **)&v35[0];
      uint64_t v25 = objc_opt_self(&OBJC_CLASS___INAddCallParticipantIntent);
      uint64_t result = swift_dynamicCastObjCClass(v24, v25);
      if (!result)
      {

        return 0LL;
      }
    }
  }

  else
  {
    uint64_t v26 = v14;
    os_log_type_t v27 = v16;
    uint64_t v28 = v13;
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v29 = __swift_project_value_buffer(v28, (uint64_t)static Logger.siriPhone);
    uint64_t v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 16))(v27, v29, v28);
    uint64_t v31 = (os_log_s *)Logger.logObject.getter(v30);
    uint64_t v32 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v34 = swift_slowAlloc(32LL, -1LL);
      *(void *)&v35[0] = v34;
      *(_DWORD *)uint64_t v33 = 136315138;
      uint64_t v36 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)( 0xD000000000000032LL,  0x8000000000348F40LL,  (uint64_t *)v35);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37, v33 + 4);
      _os_log_impl(&dword_0, v31, v32, "%s", v33, 0xCu);
      swift_arrayDestroy(v34, 1LL);
      swift_slowDealloc(v34, -1LL, -1LL);
      swift_slowDealloc(v33, -1LL, -1LL);
    }

    static SiriKitLifecycle._logCrashToEventBus(_:)(0xD000000000000032LL, 0x8000000000348F40LL);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000032LL,  0x8000000000348F40LL,  "PhoneCallFlowDelegatePlugin/PhoneLog.swift",  42LL,  2LL);
    __break(1u);
  }

  return result;
}

uint64_t specialized SKTransformer.nlv4Conversion<A>(phoneCallNLIntent:rchFlowContext:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = type metadata accessor for ContactGroupResolver(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v30[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = *(void *)(type metadata accessor for Logger(0LL) - 8);
  uint64_t v12 = __chkstk_darwin();
  uint64_t v14 = (char *)&v30[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (a2)
  {
    outlined init with copy of SharedGlobalsProviding(v4, (uint64_t)v30);
    if (a3)
    {
      uint64_t v15 = objc_opt_self(&OBJC_CLASS___INAnswerCallIntent);
      swift_dynamicCastObjCClass(a3, v15);
    }

    uint64_t v16 = swift_retain();
    ContactGroupResolver.init()(v16);
    specialized static AnswerCallIntentConversion.convertToIntent(phoneCallNLIntent:app:sharedGlobals:previousIntent:previousIntentResponse:groupResolver:)();
    id v18 = v17;
    swift_release(a2);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    __swift_destroy_boxed_opaque_existential_1(v30);
    if (v18)
    {
      uint64_t v19 = objc_opt_self(&OBJC_CLASS___INAnswerCallIntent);
      uint64_t result = swift_dynamicCastObjCClass(v18, v19);
      if (result) {
        return result;
      }
    }

    return 0LL;
  }

  else
  {
    uint64_t v21 = v14;
    uint64_t v22 = v12;
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v23 = __swift_project_value_buffer(v22, (uint64_t)static Logger.siriPhone);
    uint64_t v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 16))(v21, v23, v22);
    uint64_t v25 = (os_log_s *)Logger.logObject.getter(v24);
    os_log_type_t v26 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v25, v26))
    {
      os_log_type_t v27 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v28 = swift_slowAlloc(32LL, -1LL);
      v30[0] = v28;
      *(_DWORD *)os_log_type_t v27 = 136315138;
      uint64_t v31 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000032LL, 0x8000000000348F40LL, v30);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32, v27 + 4);
      _os_log_impl(&dword_0, v25, v26, "%s", v27, 0xCu);
      swift_arrayDestroy(v28, 1LL);
      swift_slowDealloc(v28, -1LL, -1LL);
      swift_slowDealloc(v27, -1LL, -1LL);
    }

    static SiriKitLifecycle._logCrashToEventBus(_:)(0xD000000000000032LL, 0x8000000000348F40LL);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000032LL,  0x8000000000348F40LL,  "PhoneCallFlowDelegatePlugin/PhoneLog.swift",  42LL,  2LL);
    __break(1u);
  }

  return result;
}

void static PhoneCallRequestSupportPolicy.getSiriKitIntent(input:sharedGlobals:app:intentTypeName:)()
{
  PhoneCallFlowDelegatePlugin::PhoneCallIntentClassNames v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  type metadata accessor for Parse(0LL);
  OUTLINED_FUNCTION_5_93();
  __chkstk_darwin();
  OUTLINED_FUNCTION_61_3();
  uint64_t v8 = v7[3];
  uint64_t v9 = v7[4];
  OUTLINED_FUNCTION_49_0(v7);
  uint64_t v10 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 72))(v8, v9);
  Input.parse.getter(v10);
  (*(void (**)(__int128 *__return_ptr, uint64_t))(*(void *)v10 + 192LL))(&v18, v0);
  OUTLINED_FUNCTION_37_25(v0, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  if (v19)
  {
    outlined init with take of AppSelectionSignalComponent(&v18, (uint64_t)v20);
    static PhoneCallRequestSupportPolicy.getSiriKitIntent(phoneCallNLIntent:sharedGlobals:app:intentTypeName:)( (uint64_t)v20,  v7,  v5,  v3);
    OUTLINED_FUNCTION_22();
    OUTLINED_FUNCTION_57_4();
  }

  else
  {
    outlined destroy of UUID?((uint64_t)&v18, &demangling cache variable for type metadata for PhoneCallNLIntent?);
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v11 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v11, (uint64_t)static Logger.siriPhone);
    os_log_type_t v12 = OUTLINED_FUNCTION_24();
    if (OUTLINED_FUNCTION_7(v12))
    {
      uint64_t v13 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
      OUTLINED_FUNCTION_31_0(v13);
      OUTLINED_FUNCTION_243_2();
      OUTLINED_FUNCTION_5(v14, v15, v16, v17, (uint8_t *)v5);
      OUTLINED_FUNCTION_0_2((uint64_t)v5);
    }

    OUTLINED_FUNCTION_22();
  }

  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_7_5();
}

uint64_t static PhoneCallRequestSupportPolicy.getSiriKitIntent(forIntent:input:app:sharedGlobals:)( char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 24) = a3;
  *(void *)(v4 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a4;
  *(void *)(v4 + 16) = a2;
  *(_BYTE *)(v4 + 40) = a1;
  return swift_task_switch( static PhoneCallRequestSupportPolicy.getSiriKitIntent(forIntent:input:app:sharedGlobals:),  0LL,  0LL);
}

uint64_t static PhoneCallRequestSupportPolicy.getSiriKitIntent(forIntent:input:app:sharedGlobals:)()
{
  uint64_t v4 = v3;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v5 = OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_12_1(v5, (uint64_t)static Logger.siriPhone);
  os_log_type_t v6 = OUTLINED_FUNCTION_6_0();
  if (OUTLINED_FUNCTION_7(v6))
  {
    uint64_t v7 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
    OUTLINED_FUNCTION_60_0(v7);
    OUTLINED_FUNCTION_243_2();
    OUTLINED_FUNCTION_5(v8, v9, v10, v11, v2);
    OUTLINED_FUNCTION_0_2((uint64_t)v2);
  }

  return (*(uint64_t (**)(uint64_t))(v1 + 8))(v4);
}

uint64_t static PhoneCallRequestSupportPolicy.isHomePodPersonalRequest(intent:sharedGlobals:nlIntent:)( os_log_s *a1, void *a2, uint8_t *a3)
{
  uint64_t v5 = v53;
  uint64_t v6 = v54;
  os_log_type_t v7 = __swift_project_boxed_opaque_existential_1(v52, v53);
  if ((dispatch thunk of DeviceState.isHomePod.getter(v5, v6) & 1) == 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v13 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v13, (uint64_t)static Logger.siriPhone);
    os_log_type_t v14 = OUTLINED_FUNCTION_41();
    if (!OUTLINED_FUNCTION_10(v14)) {
      goto LABEL_13;
    }
    uint64_t v15 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
    OUTLINED_FUNCTION_47(v15);
    os_log_type_t v12 = "Current request is not considered as a personal request since it's not a HomePod";
    goto LABEL_12;
  }

  outlined init with copy of SiriPhoneContact?( (uint64_t)a3,  (uint64_t)v49,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
  if (!v50)
  {
    outlined destroy of UUID?((uint64_t)v49, &demangling cache variable for type metadata for PhoneCallNLIntent?);
LABEL_16:
    id v17 = OUTLINED_FUNCTION_17_5(v8, "typeName");
    static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
    uint64_t v19 = v18;

    OUTLINED_FUNCTION_49( v20,  (unint64_t *)&lazy cache variable for type metadata for INStartCallIntent,  &OBJC_CLASS___INStartCallIntent_ptr);
    swift_getObjCClassFromMetadata();
    OUTLINED_FUNCTION_8_1();
    OUTLINED_FUNCTION_233_2();
    if (v21)
    {
      OUTLINED_FUNCTION_137_8();
      BOOL v25 = v25 && v23 == v19;
      if (v25) {
        goto LABEL_39;
      }
      char v26 = OUTLINED_FUNCTION_51_24(v22, v23, v24);
      OUTLINED_FUNCTION_39();
      uint64_t v27 = OUTLINED_FUNCTION_34_0();
      if ((v26 & 1) != 0) {
        goto LABEL_40;
      }
    }

    else
    {
      uint64_t v27 = OUTLINED_FUNCTION_39();
    }

    OUTLINED_FUNCTION_49( v27,  &lazy cache variable for type metadata for INIdentifyIncomingCallerIntent,  &OBJC_CLASS___INIdentifyIncomingCallerIntent_ptr);
    swift_getObjCClassFromMetadata();
    OUTLINED_FUNCTION_8_1();
    OUTLINED_FUNCTION_233_2();
    if (v28)
    {
      OUTLINED_FUNCTION_137_8();
      if (v25 && v30 == v19) {
        goto LABEL_39;
      }
      char v33 = OUTLINED_FUNCTION_51_24(v29, v30, v31);
      OUTLINED_FUNCTION_39();
      uint64_t v34 = OUTLINED_FUNCTION_34_0();
      if ((v33 & 1) != 0) {
        goto LABEL_40;
      }
    }

    else
    {
      uint64_t v34 = OUTLINED_FUNCTION_39();
    }

    OUTLINED_FUNCTION_49( v34,  &lazy cache variable for type metadata for INAnswerCallIntent,  &OBJC_CLASS___INAnswerCallIntent_ptr);
    swift_getObjCClassFromMetadata();
    OUTLINED_FUNCTION_8_1();
    OUTLINED_FUNCTION_233_2();
    if (!v35)
    {
      uint64_t v41 = OUTLINED_FUNCTION_39();
LABEL_43:
      OUTLINED_FUNCTION_49( v41,  &lazy cache variable for type metadata for INSearchCallHistoryIntent,  &OBJC_CLASS___INSearchCallHistoryIntent_ptr);
      ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
      outlined bridged method (pb) of @objc static INIntent.typeName()(ObjCClassFromMetadata);
      if (!v44)
      {
        OUTLINED_FUNCTION_39();
        goto LABEL_14;
      }

      OUTLINED_FUNCTION_137_8();
      if (!v25 || v46 != v19)
      {
        char v16 = OUTLINED_FUNCTION_51_24(v45, v46, v47);
        OUTLINED_FUNCTION_39();
        OUTLINED_FUNCTION_34_0();
        goto LABEL_41;
      }

      OUTLINED_FUNCTION_39();
LABEL_40:
      swift_bridgeObjectRelease();
      char v16 = 1;
      goto LABEL_41;
    }

    OUTLINED_FUNCTION_137_8();
    if (!v25 || v37 != v19)
    {
      char v40 = OUTLINED_FUNCTION_51_24(v36, v37, v38);
      OUTLINED_FUNCTION_39();
      uint64_t v41 = OUTLINED_FUNCTION_34_0();
      if ((v40 & 1) != 0) {
        goto LABEL_40;
      }
      goto LABEL_43;
    }

void static PhoneCallRequestSupportPolicy.getFlowFromParse(parse:intentTypeName:resolvedApp:phoneCallNLIntent:sharedGlobals:)()
{
  char v1 = v0;
  OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_153_9();
  __chkstk_darwin();
  type metadata accessor for Parse(0LL);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  uint64_t v2 = OUTLINED_FUNCTION_75_26();
  type metadata accessor for Input(v2);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_5_1();
  type metadata accessor for CATOption(0LL);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_61_3();
  __asm { BR              X10 }

void sub_2BF374()
{
  uint64_t v3 = type metadata accessor for AnswerCallCATsSimple(0LL);
  static CATOption.defaultMode.getter(v3);
  uint64_t v4 = OUTLINED_FUNCTION_35_18();
  *(void *)(v0 + 344) = &type metadata for AudioSessionManager;
  *(void *)(v0 + 35__swift_destroy_boxed_opaque_existential_1(v0 + 2) = &protocol witness table for AudioSessionManager;
  *(void *)(v0 + 384) = &type metadata for EntitlementChecker;
  *(void *)(v0 + 39__swift_destroy_boxed_opaque_existential_1(v0 + 2) = &protocol witness table for EntitlementChecker;
  *(void *)(v0 + 248) = v3;
  *(void *)(v0 + 256) = &protocol witness table for AnswerCallCATsSimple;
  *(void *)(v0 + 224) = v4;
  *(void *)(v0 + 264) = 0LL;
  *(_BYTE *)(v0 + 27__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0;
  OUTLINED_FUNCTION_78_25(v4, v2 - 128);
  outlined init with copy of AnswerCallOutputStrategy(v0 + 224, v0 + 48);
  uint64_t v5 = OUTLINED_FUNCTION_228_2();
  uint64_t v6 = specialized IncomingCallFlow.__allocating_init(app:strategy:sharedGlobals:)( v5,  (const void *)(v0 + 48),  (void *)(v2 - 128));
  OUTLINED_FUNCTION_18_67();
  OUTLINED_FUNCTION_61_26();
  OUTLINED_FUNCTION_155_5();
  OUTLINED_FUNCTION_46_33();
  *(void *)(v0 + 48) = v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IncomingCallFlow<INAnswerCallIntent, INAnswerCallIntentResponse>);
  lazy protocol witness table accessor for type IncomingCallFlow<INIdentifyIncomingCallerIntent, INIdentifyIncomingCallerIntentResponse> and conformance PhoneFlow<A, B>( &lazy protocol witness table cache variable for type IncomingCallFlow<INAnswerCallIntent, INAnswerCallIntentResponse> and conformance PhoneFlow<A, B>,  &demangling cache variable for type metadata for IncomingCallFlow<INAnswerCallIntent, INAnswerCallIntentResponse>);
  Flow.eraseToAnyFlow()(v7);
  outlined destroy of AnswerCallOutputStrategy(v0 + 224);
  swift_release(v6);
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_7_5();
}

void sub_2BF844()
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v6 = __swift_project_value_buffer(v1, (uint64_t)static Logger.siriPhone);
  (*(void (**)(os_log_s *, uint64_t, uint64_t))(v4 + 16))(v5, v6, v1);
  *(void *)(v0 + 224) = 0LL;
  *(void *)(v0 + 23__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xE000000000000000LL;
  _StringGuts.grow(_:)(60LL);
  uint64_t v7 = *(void *)(v0 + 232);
  *(void *)(v0 + 224) = *(void *)(v0 + 224);
  *(void *)(v0 + 23__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v7;
  v8._countAndFlagsBits = 0xD00000000000001ELL;
  v8._object = (void *)0x8000000000351C40LL;
  String.append(_:)(v8);
  *(_BYTE *)(v0 + 48) = v2;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallIntentClassNames?);
  v10._countAndFlagsBits = String.init<A>(describing:)(v0 + 48, v9);
  String.append(_:)(v10);
  OUTLINED_FUNCTION_34_0();
  v11._object = (void *)0x8000000000351C60LL;
  v11._countAndFlagsBits = 0xD00000000000001CLL;
  String.append(_:)(v11);
  uint64_t v12 = *(void *)(v0 + 224);
  unint64_t v13 = *(void *)(v0 + 232);
  uint64_t v14 = OUTLINED_FUNCTION_11(v13);
  Logger.logObject.getter(v14);
  os_log_type_t v15 = OUTLINED_FUNCTION_24();
  if (OUTLINED_FUNCTION_63(v15))
  {
    char v16 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v17 = OUTLINED_FUNCTION_7_0(32LL);
    *(void *)(v0 + 224) = v17;
    *(_DWORD *)char v16 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 48) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v12, v13, (uint64_t *)(v0 + 224));
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56, v16 + 4);
    swift_bridgeObjectRelease_n(v13, 3LL);
    OUTLINED_FUNCTION_57_0(&dword_0, v5, v3, "%s", v16);
    OUTLINED_FUNCTION_17_0(v17);
    OUTLINED_FUNCTION_0_2(v17);
    OUTLINED_FUNCTION_0_2((uint64_t)v16);
  }

  else
  {
    OUTLINED_FUNCTION_7_4(v13);
  }

  static SiriKitLifecycle._logCrashToEventBus(_:)(v12, v13);
  OUTLINED_FUNCTION_116();
  _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  v12,  v13,  "PhoneCallFlowDelegatePlugin/PhoneLog.swift",  42LL,  2LL);
  OUTLINED_FUNCTION_222_3();
}

void @nonobjc INAnswerCallIntent.init(audioRoute:callIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    NSString v3 = String._bridgeToObjectiveC()();
    OUTLINED_FUNCTION_50();
  }

  else
  {
    NSString v3 = 0LL;
  }

  uint64_t v4 = (void *)OUTLINED_FUNCTION_264_2();
  [v4 v5];

  OUTLINED_FUNCTION_6();
}

void @nonobjc INStartVideoCallIntent.init(contacts:)(uint64_t a1)
{
  if (a1)
  {
    OUTLINED_FUNCTION_49( a1,  (unint64_t *)&lazy cache variable for type metadata for INPerson,  &OBJC_CLASS___INPerson_ptr);
    Array._bridgeToObjectiveC()();
    OUTLINED_FUNCTION_34_0();
  }

  uint64_t v1 = (void *)OUTLINED_FUNCTION_264_2();
  [v1 v2];
  OUTLINED_FUNCTION_79();
  OUTLINED_FUNCTION_6();
}

uint64_t outlined bridged method (pb) of @objc INPerson.sourceAppBundleIdentifier.getter(void *a1)
{
  id v1 = [a1 sourceAppBundleIdentifier];
  if (v1)
  {
    SEL v2 = v1;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
  }

  return OUTLINED_FUNCTION_9_0();
}

void specialized static ContactResolution.resolveContactQueries(contactQueries:siriKitIntent:app:nlIntent:sharedGlobals:)()
{
  if (v0)
  {
    App.appIdentifier.getter();
    if (v6)
    {
      OUTLINED_FUNCTION_76_12();
      OUTLINED_FUNCTION_37_33(v7, v8, v9, (uint64_t)_swiftEmptyArrayStorage);
      OUTLINED_FUNCTION_141_8();
      if (v15)
      {
        OUTLINED_FUNCTION_83_23(v13, v14);
        uint64_t v13 = v10;
      }

      OUTLINED_FUNCTION_192_4(v10, v11, v12, v13);
    }
  }

  if (one-time initialization token for emptyStartCallIntent != -1) {
    swift_once( &one-time initialization token for emptyStartCallIntent,  one-time initialization function for emptyStartCallIntent);
  }
  OUTLINED_FUNCTION_112_3((uint64_t) [(id)static PhoneCallIntentClassNames.emptyStartCallIntent _className]);
  OUTLINED_FUNCTION_167_1();
  OUTLINED_FUNCTION_30_47();
  uint64_t v16 = OUTLINED_FUNCTION_29_48();
  OUTLINED_FUNCTION_33_20(v16, (uint64_t)v32);
  OUTLINED_FUNCTION_121_12();
  OUTLINED_FUNCTION_256_3();
  OUTLINED_FUNCTION_42_27();
  OUTLINED_FUNCTION_20_66();
  OUTLINED_FUNCTION_21_56();
  if (v1)
  {
    OUTLINED_FUNCTION_87_0();
    OUTLINED_FUNCTION_57_4();
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v17 = OUTLINED_FUNCTION_15_1();
    uint64_t v18 = (void *)__swift_project_value_buffer(v17, (uint64_t)static Logger.siriPhone);
    OUTLINED_FUNCTION_26_7();
    uint64_t v19 = OUTLINED_FUNCTION_26_7();
    Logger.logObject.getter(v19);
    os_log_type_t v20 = OUTLINED_FUNCTION_24();
    if (OUTLINED_FUNCTION_93(v20))
    {
      uint64_t v21 = (_DWORD *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v22 = OUTLINED_FUNCTION_7_0(32LL);
      OUTLINED_FUNCTION_230_3(v22);
      *uint64_t v21 = 136315138;
      v32[0] = v1;
      OUTLINED_FUNCTION_26_7();
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
      uint64_t v24 = OUTLINED_FUNCTION_120_12(v23);
      uint64_t v26 = OUTLINED_FUNCTION_127_10(v24, v25);
      OUTLINED_FUNCTION_65_18(v26);
      OUTLINED_FUNCTION_70_2();
      OUTLINED_FUNCTION_3_24();
      OUTLINED_FUNCTION_3_24();
      OUTLINED_FUNCTION_7_62(&dword_0, v27, v28, "#ContactResolution error=%s");
      OUTLINED_FUNCTION_17_0(v2);
      OUTLINED_FUNCTION_0_2(v2);
      OUTLINED_FUNCTION_0_2((uint64_t)v21);
    }

    else
    {
      OUTLINED_FUNCTION_3_24();
      OUTLINED_FUNCTION_3_24();
    }

    uint64_t v30 = OUTLINED_FUNCTION_3_24();
    OUTLINED_FUNCTION_133_12(v30, type metadata accessor for ContactResolverConfigHashable);
  }

  else
  {
    uint64_t v29 = OUTLINED_FUNCTION_199_3();
    OUTLINED_FUNCTION_133_12(v29, type metadata accessor for ContactResolverConfigHashable);
    OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_238_2();
  }

  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_7_5();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  os_log_type_t v20;
  _DWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void v32[4];
  OUTLINED_FUNCTION_29_2();
  OUTLINED_FUNCTION_90_18(v3, v4);
  OUTLINED_FUNCTION_107_13();
  __chkstk_darwin();
  OUTLINED_FUNCTION_56_25();
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_55_29();
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_74_21(v5, v31);
  if (v0)
  {
    App.appIdentifier.getter();
    if (v6)
    {
      OUTLINED_FUNCTION_76_12();
      OUTLINED_FUNCTION_37_33(v7, v8, v9, (uint64_t)_swiftEmptyArrayStorage);
      OUTLINED_FUNCTION_141_8();
      if (v15)
      {
        OUTLINED_FUNCTION_83_23(v13, v14);
        uint64_t v13 = v10;
      }

      OUTLINED_FUNCTION_192_4(v10, v11, v12, v13);
    }
  }

  if (one-time initialization token for emptyStartCallIntent != -1) {
    swift_once( &one-time initialization token for emptyStartCallIntent,  one-time initialization function for emptyStartCallIntent);
  }
  OUTLINED_FUNCTION_112_3((uint64_t) [(id)static PhoneCallIntentClassNames.emptyStartCallIntent _className]);
  OUTLINED_FUNCTION_167_1();
  OUTLINED_FUNCTION_30_47();
  uint64_t v16 = OUTLINED_FUNCTION_29_48();
  OUTLINED_FUNCTION_33_20(v16, (uint64_t)v32);
  OUTLINED_FUNCTION_121_12();
  OUTLINED_FUNCTION_256_3();
  OUTLINED_FUNCTION_42_27();
  OUTLINED_FUNCTION_20_66();
  OUTLINED_FUNCTION_21_56();
  if (v1)
  {
    OUTLINED_FUNCTION_87_0();
    OUTLINED_FUNCTION_57_4();
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v17 = OUTLINED_FUNCTION_15_1();
    uint64_t v18 = (void *)__swift_project_value_buffer(v17, (uint64_t)static Logger.siriPhone);
    OUTLINED_FUNCTION_26_7();
    uint64_t v19 = OUTLINED_FUNCTION_26_7();
    Logger.logObject.getter(v19);
    os_log_type_t v20 = OUTLINED_FUNCTION_24();
    if (OUTLINED_FUNCTION_93(v20))
    {
      uint64_t v21 = (_DWORD *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v22 = OUTLINED_FUNCTION_7_0(32LL);
      OUTLINED_FUNCTION_230_3(v22);
      *uint64_t v21 = 136315138;
      v32[0] = v1;
      OUTLINED_FUNCTION_26_7();
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
      uint64_t v24 = OUTLINED_FUNCTION_120_12(v23);
      uint64_t v26 = OUTLINED_FUNCTION_127_10(v24, v25);
      OUTLINED_FUNCTION_65_18(v26);
      OUTLINED_FUNCTION_70_2();
      OUTLINED_FUNCTION_3_24();
      OUTLINED_FUNCTION_3_24();
      OUTLINED_FUNCTION_7_62(&dword_0, v27, v28, "#ContactResolution error=%s");
      OUTLINED_FUNCTION_17_0(v2);
      OUTLINED_FUNCTION_0_2(v2);
      OUTLINED_FUNCTION_0_2((uint64_t)v21);
    }

    else
    {
      OUTLINED_FUNCTION_3_24();
      OUTLINED_FUNCTION_3_24();
    }

    uint64_t v30 = OUTLINED_FUNCTION_3_24();
    OUTLINED_FUNCTION_133_12(v30, type metadata accessor for ContactResolverConfigHashable);
  }

  else
  {
    uint64_t v29 = OUTLINED_FUNCTION_199_3();
    OUTLINED_FUNCTION_133_12(v29, type metadata accessor for ContactResolverConfigHashable);
    OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_238_2();
  }

  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_7_5();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  os_log_type_t v20;
  _DWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void v32[4];
  OUTLINED_FUNCTION_29_2();
  OUTLINED_FUNCTION_90_18(v3, v4);
  OUTLINED_FUNCTION_107_13();
  __chkstk_darwin();
  OUTLINED_FUNCTION_56_25();
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_55_29();
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_74_21(v5, v31);
  if (v0)
  {
    App.appIdentifier.getter();
    if (v6)
    {
      OUTLINED_FUNCTION_76_12();
      OUTLINED_FUNCTION_37_33(v7, v8, v9, (uint64_t)_swiftEmptyArrayStorage);
      OUTLINED_FUNCTION_141_8();
      if (v15)
      {
        OUTLINED_FUNCTION_83_23(v13, v14);
        uint64_t v13 = v10;
      }

      OUTLINED_FUNCTION_192_4(v10, v11, v12, v13);
    }
  }

  if (one-time initialization token for emptyStartCallIntent != -1) {
    swift_once( &one-time initialization token for emptyStartCallIntent,  one-time initialization function for emptyStartCallIntent);
  }
  OUTLINED_FUNCTION_112_3((uint64_t) [(id)static PhoneCallIntentClassNames.emptyStartCallIntent _className]);
  OUTLINED_FUNCTION_167_1();
  OUTLINED_FUNCTION_30_47();
  uint64_t v16 = OUTLINED_FUNCTION_29_48();
  OUTLINED_FUNCTION_33_20(v16, (uint64_t)v32);
  OUTLINED_FUNCTION_121_12();
  OUTLINED_FUNCTION_256_3();
  OUTLINED_FUNCTION_42_27();
  OUTLINED_FUNCTION_20_66();
  OUTLINED_FUNCTION_21_56();
  if (v1)
  {
    OUTLINED_FUNCTION_87_0();
    OUTLINED_FUNCTION_57_4();
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v17 = OUTLINED_FUNCTION_15_1();
    uint64_t v18 = (void *)__swift_project_value_buffer(v17, (uint64_t)static Logger.siriPhone);
    OUTLINED_FUNCTION_26_7();
    uint64_t v19 = OUTLINED_FUNCTION_26_7();
    Logger.logObject.getter(v19);
    os_log_type_t v20 = OUTLINED_FUNCTION_24();
    if (OUTLINED_FUNCTION_93(v20))
    {
      uint64_t v21 = (_DWORD *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v22 = OUTLINED_FUNCTION_7_0(32LL);
      OUTLINED_FUNCTION_230_3(v22);
      *uint64_t v21 = 136315138;
      v32[0] = v1;
      OUTLINED_FUNCTION_26_7();
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
      uint64_t v24 = OUTLINED_FUNCTION_120_12(v23);
      uint64_t v26 = OUTLINED_FUNCTION_127_10(v24, v25);
      OUTLINED_FUNCTION_65_18(v26);
      OUTLINED_FUNCTION_70_2();
      OUTLINED_FUNCTION_3_24();
      OUTLINED_FUNCTION_3_24();
      OUTLINED_FUNCTION_7_62(&dword_0, v27, v28, "#ContactResolution error=%s");
      OUTLINED_FUNCTION_17_0(v2);
      OUTLINED_FUNCTION_0_2(v2);
      OUTLINED_FUNCTION_0_2((uint64_t)v21);
    }

    else
    {
      OUTLINED_FUNCTION_3_24();
      OUTLINED_FUNCTION_3_24();
    }

    uint64_t v30 = OUTLINED_FUNCTION_3_24();
    OUTLINED_FUNCTION_133_12(v30, type metadata accessor for ContactResolverConfigHashable);
  }

  else
  {
    uint64_t v29 = OUTLINED_FUNCTION_199_3();
    OUTLINED_FUNCTION_133_12(v29, type metadata accessor for ContactResolverConfigHashable);
    OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_238_2();
  }

  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_7_5();
}

void specialized static StartCallIntentConversion.convertToIntent(phoneCallNLIntent:app:sharedGlobals:previousIntent:previousIntentResponse:groupResolver:)()
{
  void (*v74)(uint64_t *__return_ptr, uint64_t);
  void (*v75)(char *, uint64_t);
  uint64_t v76;
  void *v77;
  Swift::Bool v78;
  void *v79;
  uint64_t v80;
  os_log_s *v81;
  uint64_t v82;
  os_log_type_t v83;
  os_log_s *v84;
  BOOL v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  id v90;
  id v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  id v112;
  id v113;
  os_log_s *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  os_log_s *v118;
  uint64_t v119;
  os_log_s *v120;
  uint64_t v121;
  void *v122;
  uint64_t v123;
  void *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  os_log_s *v129;
  unint64_t v130;
  uint64_t v131;
  void *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char v136;
  char v137;
  char v138;
  os_log_type_t v139;
  uint8_t *v140;
  unint64_t v141;
  uint64_t v142;
  unint64_t v143;
  uint64_t v144;
  void *v145;
  unint64_t v146;
  uint64_t v147;
  os_log_s *v148;
  os_log_s *v149;
  Swift::Bool v150;
  os_log_type_t v151;
  uint8_t *v152;
  void *v153;
  id v154;
  id v155;
  uint64_t v156;
  uint64_t (*v157)(uint64_t, void);
  uint64_t v158[2];
  uint64_t v159;
  uint64_t v160;
  int v161;
  uint64_t v162;
  void *v163;
  uint64_t v164;
  os_log_s *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  void *v169;
  uint64_t v170;
  uint64_t v171;
  uint8_t *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  id v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  id v188;
  __int128 v189[2];
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194[3];
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  OUTLINED_FUNCTION_29_2();
  uint64_t v3 = v2;
  v180 = v4;
  uint64_t v6 = v5;
  v176 = v7;
  uint64_t v9 = v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallRecordFilter?>);
  v171 = *(void *)(v10 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  uint64_t v12 = (char *)v158 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Transformer<[SmsGroup], [INCallGroup]?>);
  v175 = *(void *)(v13 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_26(v14);
  char v15 = (uint8_t *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallDestinationType>);
  v174 = *((void *)v15 - 1);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_26(v16);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INPreferredCallProvider>);
  OUTLINED_FUNCTION_16_2(v17, (uint64_t)&v197);
  v173 = v18;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_26(v19);
  v182 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallCapability>);
  OUTLINED_FUNCTION_70_20();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_26(v20);
  v177 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallAudioRoute>);
  OUTLINED_FUNCTION_107_13();
  __chkstk_darwin();
  OUTLINED_FUNCTION_151_6(v21, v158[0]);
  uint64_t v22 = OUTLINED_FUNCTION_112_11();
  uint64_t v23 = OUTLINED_FUNCTION_234_2(v22, (uint64_t)&protocol witness table for ContactGroupResolver);
  uint64_t v24 = *(void (**)(void *, os_log_s *, uint64_t))(*(void *)(v22 - 8) + 16LL);
  v169 = v23;
  v24(v23, v3, v22);
  if (OUTLINED_FUNCTION_113_11())
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v25 = OUTLINED_FUNCTION_15_1();
    uint64_t v26 = (os_log_s *)__swift_project_value_buffer(v25, (uint64_t)static Logger.siriPhone);
    uint64_t v27 = (uint64_t)v180;
    id v28 = v180;
    Logger.logObject.getter(v28);
    os_log_type_t v29 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_29_4(v29))
    {
      uint64_t v30 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v31 = OUTLINED_FUNCTION_7_0(32LL);
      v194[0] = v31;
      *(_DWORD *)uint64_t v30 = 136315138;
      v190 = v27;
      id v32 = v28;
      uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INStartCallIntent?);
      uint64_t v34 = String.init<A>(describing:)(&v190, v33);
      v190 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v34, v35, v194);
      OUTLINED_FUNCTION_117_6((uint64_t)&v190, (uint64_t)&v191);

      OUTLINED_FUNCTION_129();
      OUTLINED_FUNCTION_57_0( &dword_0,  v26,  (os_log_type_t)v9,  "#INStartCallIntentConversion is confirmation, returning previousIntent: %s.",  v30);
      OUTLINED_FUNCTION_17_0(v31);
      OUTLINED_FUNCTION_0_2(v31);
      OUTLINED_FUNCTION_0_2((uint64_t)v30);
    }

    else
    {
    }

    id v52 = v28;
    goto LABEL_18;
  }

  v172 = v15;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  v168 = v0;
  v167 = v1;
  uint64_t v36 = OUTLINED_FUNCTION_15_1();
  v170 = __swift_project_value_buffer(v36, (uint64_t)static Logger.siriPhone);
  OUTLINED_FUNCTION_9();
  os_log_type_t v37 = OUTLINED_FUNCTION_41();
  if (OUTLINED_FUNCTION_10(v37))
  {
    uint64_t v38 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
    OUTLINED_FUNCTION_47(v38);
    OUTLINED_FUNCTION_5( &dword_0,  v3,  (os_log_type_t)v22,  "#INStartCallIntentConversion makeIntentFromParse called with NLv4IntentOnly",  v15);
    OUTLINED_FUNCTION_0_2((uint64_t)v15);
  }

  __swift_project_boxed_opaque_existential_1(v6, v6[3]);
  uint64_t v39 = OUTLINED_FUNCTION_11_26();
  OUTLINED_FUNCTION_33_20(v39, (uint64_t)&v190);
  uint64_t v40 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_416778, 64LL);
  OUTLINED_FUNCTION_4_56(v40);
  *(void *)(v22 + 56) = 0LL;
  uint64_t v41 = (os_log_s *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  type metadata accessor for INCallAudioRoute(0LL);
  uint64_t v42 = OUTLINED_FUNCTION_202_4( (uint64_t)_s13SiriUtilities11TransformerV27PhoneCallFlowDelegatePluginAD0dE8NLIntent_pRszSo16INCallAudioRouteVRs_rlE11transformer10intentType13sharedGlobals14previousIntentACyAdE_pAGGqd__m_AD06SharedQ9Providing_pSo8INIntentCSgtAORbd__lFZAgdE_pcfU_So07INStarteS0C_TGm5TA_0,  v22);
  OUTLINED_FUNCTION_33_20(v42, (uint64_t)&v190);
  uint64_t v43 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_4167A0, 64LL);
  OUTLINED_FUNCTION_4_56(v43);
  uint64_t v44 = v176;
  *(void *)(v22 + 56) = v176;
  type metadata accessor for INCallCapability(0LL);
  OUTLINED_FUNCTION_23_1();
  uint64_t v45 = OUTLINED_FUNCTION_186_4((uint64_t)_s13SiriUtilities11TransformerV27PhoneCallFlowDelegatePluginAD0dE8NLIntent_pRszSo16INCallCapabilityVRs_rlE11transformer13sharedGlobals14previousIntent3appACyAdE_pAGGAD06SharedN9Providing_p_So8INIntentCSg0A13AppResolution0U0CSgtFZAgdE_pcfU_TA_0);
  OUTLINED_FUNCTION_33_20(v45, (uint64_t)&v190);
  uint64_t v46 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_4167C8, 64LL);
  OUTLINED_FUNCTION_4_56(v46);
  *(void *)(v22 + 56) = v44;
  type metadata accessor for INPreferredCallProvider(0LL);
  OUTLINED_FUNCTION_23_1();
  uint64_t v47 = v179;
  OUTLINED_FUNCTION_186_4((uint64_t)_s13SiriUtilities11TransformerV27PhoneCallFlowDelegatePluginAD0dE8NLIntent_pRszSo011INPreferredE8ProviderVRs_rlE11transformer13sharedGlobals3app14previousIntentACyAdE_pAGGAD06SharedN9Providing_p_0A13AppResolution0T0CSgSo8INIntentCSgtFZAgdE_pcfU_TA_0);
  type metadata accessor for INCallDestinationType(0LL);
  OUTLINED_FUNCTION_202_4( (uint64_t)partial apply for closure #1 in static Transformer<>.transformer(sharedGlobals:previousIntent:),  0LL);
  OUTLINED_FUNCTION_219_3();
  OUTLINED_FUNCTION_252_1();
  uint64_t v48 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_4167F0, 96LL);
  OUTLINED_FUNCTION_4_56(v48);
  outlined init with take of AppSelectionSignalComponent(v189, v22 + 56);
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [SmsGroup]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INCallGroup]?);
  Transformer.init(transform:)( closure #1 in static Transformer<>.transformer(device:groupResolver:)partial apply,  v22,  v49);
  OUTLINED_FUNCTION_257_2(v182);
  os_log_type_t v51 = v50;
  OUTLINED_FUNCTION_236_3();
  if (v49)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_68_27();
    os_log_type_t v57 = OUTLINED_FUNCTION_59_8();
    if (OUTLINED_FUNCTION_10(v57))
    {
      uint64_t v58 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
      OUTLINED_FUNCTION_31_0(v58);
      OUTLINED_FUNCTION_5( &dword_0,  v41,  v51,  "#INStartCallIntentConversion makeIntentFromParse cannot transform to startCallIntent",  (uint8_t *)v9);
      OUTLINED_FUNCTION_0_2(v9);
    }

    OUTLINED_FUNCTION_3_24();

    uint64_t v59 = OUTLINED_FUNCTION_213_2();
    OUTLINED_FUNCTION_11_20(v59, v60);
    OUTLINED_FUNCTION_11_48(v184, *(uint64_t (**)(uint64_t, void))(v174 + 8));
    OUTLINED_FUNCTION_11_48(v47, *(uint64_t (**)(uint64_t, void))(v173 + 8));
    OUTLINED_FUNCTION_11_48(v181, *(uint64_t (**)(uint64_t, void))(v167 + 8));
    OUTLINED_FUNCTION_27_53();
    OUTLINED_FUNCTION_11_48(v183, v61);
    OUTLINED_FUNCTION_78_18();
    goto LABEL_18;
  }

  OUTLINED_FUNCTION_38_1();
  uint64_t v53 = v190;
  uint64_t v54 = (uint64_t (*)(uint64_t))Transformer.transform.getter(v178);
  OUTLINED_FUNCTION_5_55(v54);
  OUTLINED_FUNCTION_38_1();
  uint64_t v55 = v190;
  uint64_t v56 = (uint64_t (*)(uint64_t))OUTLINED_FUNCTION_34_21();
  OUTLINED_FUNCTION_5_55(v56);
  v163 = (void *)v55;
  v164 = v53;
  OUTLINED_FUNCTION_38_1();
  v162 = v190;
  uint64_t v62 = *(void *)(v9 + 24);
  uint64_t v63 = *(void *)(v9 + 32);
  OUTLINED_FUNCTION_17_25((void *)v9);
  uint64_t v64 = (*(uint64_t (**)(uint64_t, uint64_t))(v63 + 128))(v62, v63);
  v165 = (os_log_s *)OUTLINED_FUNCTION_214_3();
  swift_bridgeObjectRetain();
  LODWORD(v6__swift_destroy_boxed_opaque_existential_1(v0 + 2) = PhoneCallNLIntent.isEmergencyContactCall()();
  uint64_t v65 = (uint64_t (*)(uint64_t))OUTLINED_FUNCTION_34_21();
  OUTLINED_FUNCTION_5_55(v65);
  v166 = v64;
  v161 = v62;
  OUTLINED_FUNCTION_38_1();
  v160 = v190;
  v165 = (os_log_s *)OUTLINED_FUNCTION_34_21();
  uint64_t v67 = v66;
  uint64_t v69 = *(void *)(v9 + 24);
  uint64_t v68 = *(void *)(v9 + 32);
  __swift_project_boxed_opaque_existential_1((void *)v9, v69);
  v190 = (*(uint64_t (**)(uint64_t, uint64_t))(v68 + 136))(v69, v68);
  ((void (*)(__int128 *__return_ptr, uint64_t *))v165)(v189, &v190);
  OUTLINED_FUNCTION_87_0();
  swift_release(v67);
  v165 = *(os_log_s **)&v189[0];
  OUTLINED_FUNCTION_214_3();
  PhoneCallNLIntent.getPersons()(v67, v67);
  uint64_t v71 = v70;
  uint64_t v72 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_416818, 32LL);
  uint64_t v73 = v164;
  *(void *)(v72 + 16) = v164;
  *(void *)(v72 + 24) = v71;
  v159 = v71;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INCallRecordFilter?);
  OUTLINED_FUNCTION_202_4( (uint64_t)partial apply for closure #1 in static Transformer<>.transformer(device:callCapability:participants:),  v72);
  uint64_t v74 = (void (*)(uint64_t *__return_ptr, uint64_t))Transformer.transform.getter(v10);
  OUTLINED_FUNCTION_27_53();
  v75(v12, v10);
  v74(&v190, v9);
  uint64_t v76 = OUTLINED_FUNCTION_38_1();
  uint64_t v77 = (void *)v190;
  OUTLINED_FUNCTION_49( v76,  (unint64_t *)&lazy cache variable for type metadata for INStartCallIntent,  &OBJC_CLASS___INStartCallIntent_ptr);
  __swift_project_boxed_opaque_existential_1((void *)v9, *(void *)(v9 + 24));
  uint64_t v78 = PhoneCallNLIntent.isGroupFaceTimeCall()();
  INStartCallIntent.init(callRecordFilter:callRecordToCallBack:audioRoute:destinationType:preferredCallProvider:contacts:ttyType:callCapability:isGroupCall:callGroups:)( v77,  0LL,  v160,  v162,  (uint64_t)v163,  v159,  0LL,  v73,  v78,  (uint64_t)v165);
  v188 = v79;
  OUTLINED_FUNCTION_132((uint64_t)v79, (uint64_t)&v190);
  OUTLINED_FUNCTION_180_4();
  uint64_t v80 = v166;
  OUTLINED_FUNCTION_11(v166);
  uint64_t v81 = (os_log_s *)OUTLINED_FUNCTION_68_27();
  uint64_t v83 = static os_log_type_t.debug.getter(v81, v82);
  uint64_t v84 = (os_log_s *)v83;
  uint64_t v85 = os_log_type_enabled(v81, v83);
  v158[1] = v13;
  if (v85)
  {
    os_log_type_t v86 = OUTLINED_FUNCTION_7_0(42LL);
    v165 = v81;
    __int128 v87 = v86;
    __int128 v88 = (void *)OUTLINED_FUNCTION_7_0(8LL);
    v163 = v88;
    v171 = OUTLINED_FUNCTION_7_0(96LL);
    v186 = v171;
    *(_DWORD *)__int128 v87 = 138413058;
    LODWORD(v164) = (_DWORD)v84;
    OUTLINED_FUNCTION_22_0((uint64_t)&v188, (uint64_t)v189);
    __int128 v89 = v80;
    uint64_t v90 = v188;
    v185 = (uint64_t)v188;
    uint64_t v91 = v188;
    OUTLINED_FUNCTION_85_1((uint64_t)&v185, (uint64_t)&v186, v87 + 4);
    *__int128 v88 = v90;
    *(_WORD *)(v87 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
    uint64_t v73 = 2080LL;
    uint64_t v92 = OUTLINED_FUNCTION_278_2();
    uint64_t v94 = OUTLINED_FUNCTION_27_31(v92, v93);
    OUTLINED_FUNCTION_146_6(v94, v95, v96, v87 + 22);
    OUTLINED_FUNCTION_14_18();
    OUTLINED_FUNCTION_62();
    *(_WORD *)(v87 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
    uint64_t v71 = v87 + 24;
    v98 = v192;
    os_log_type_t v97 = v193;
    __swift_project_boxed_opaque_existential_1(&v190, v192);
    (*(void (**)(uint64_t, uint64_t))(v97 + 24))(v98, v97);
    uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SiriPhoneContact);
    unint64_t v100 = OUTLINED_FUNCTION_249_2(v99);
    uint64_t v102 = v101;
    OUTLINED_FUNCTION_39();
    uint64_t v103 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v100, v102, &v186);
    OUTLINED_FUNCTION_146_6(v103, v104, v105, v87 + 32);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(&v190);
    *(_WORD *)(v87 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
    uint64_t v106 = OUTLINED_FUNCTION_17_34();
    uint64_t v107 = Array.debugDescription.getter(v89, v106);
    v185 = OUTLINED_FUNCTION_27_31(v107, v108);
    OUTLINED_FUNCTION_87_1((uint64_t)&v185, (uint64_t)&v186, v109, v87 + 42);
    swift_bridgeObjectRelease_n(v89, 3LL);
    OUTLINED_FUNCTION_62();
    uint64_t v84 = v165;
    OUTLINED_FUNCTION_261_1( &dword_0,  v165,  (os_log_type_t)v164,  "#INStartCallIntentConversion Starts with intent:%@ resolvedApp:%s phoneCallNLIntent=%s contactQueries=%s",  (uint8_t *)v87);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    v110 = (uint64_t)v163;
    OUTLINED_FUNCTION_17_0((uint64_t)v163);
    OUTLINED_FUNCTION_0_2(v110);
    v111 = v171;
    OUTLINED_FUNCTION_240_2();
    OUTLINED_FUNCTION_0_2(v111);
    OUTLINED_FUNCTION_0_2(v87);

    OUTLINED_FUNCTION_60_27();
  }

  else
  {
    OUTLINED_FUNCTION_7_4(v80);

    __swift_destroy_boxed_opaque_existential_1(&v190);
    OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_14_18();
    OUTLINED_FUNCTION_60_27();
    __int128 v89 = v80;
  }

  swift_beginAccess(&v188, &v190, 1LL, 0LL);
  v112 = v188;
  specialized static NLv4IntentConversion.setIntentMetadata(for:sharedGlobals:app:previousIntent:)();
  OUTLINED_FUNCTION_79();
  uint64_t v113 = v188;
  v188 = v84;

  type metadata accessor for App(0LL);
  uint64_t v114 = v84;
  id v115 = App.appIdentifier.getter();
  unint64_t v117 = App.__allocating_init(appIdentifier:)(v115, v116);
  specialized static NLv4IntentConversion.updateSiriKitIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:nlIntent:sharedGlobals:contactGroupResolver:)( (uint64_t)v114,  v89,  v161 & 1,  v117,  v9,  (uint64_t)v6,  (uint64_t)v169,  (uint64_t)specialized static ReferenceContactResolutionWrapper.resolveUpdateSKIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:nlIntent:sharedGlobals:multicardinalIndex:siriKitEventSender:emergencyContactResolution:contactGroupResolver:),  (void (*)(uint64_t, uint64_t, void, uint64_t, char *, void *, void *, void, char, uint64_t *, uint64_t, uint64_t, uint64_t))specialized static ContactResolution.updateSiriKitIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:locale:nlIntent:sharedGlobals:multicardinalIndex:siriKitEventSender:emergencyContactResolution:));

  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_22();
  unint64_t v118 = v114;
  outlined bridged method (ob) of @objc INStartCallIntent.contacts.getter(v118);
  uint64_t v119 = one-time initialization token for instance;
  uint64_t v120 = v118;
  if (v119 != -1) {
    swift_once(&one-time initialization token for instance, one-time initialization function for instance);
  }
  v121 = static EligibleAppFinder.instance;
  OUTLINED_FUNCTION_25_1();
  uint64_t v122 = (void *)OUTLINED_FUNCTION_185_3();
  specialized static AppSelectionSignalsGatheringHelper.triggerSignalCollection(sharedGlobals:contacts:phoneCallNLIntent:smartAppSelection:eligibleAppsFinder:skIntent:)( v122,  v123,  v124,  v125,  v126);
  swift_release(v121);

  OUTLINED_FUNCTION_39();
  uint64_t v127 = v195;
  uint64_t v128 = v196;
  __swift_project_boxed_opaque_existential_1(v194, v195);
  if ((dispatch thunk of DeviceState.isXRDevice.getter(v127, v128) & 1) == 0) {
    goto LABEL_64;
  }
  v129 = v120;
  outlined bridged method (ob) of @objc INStartCallIntent.contacts.getter(v129);
  if (v130)
  {
    if (v130 >> 62)
    {
      if (OUTLINED_FUNCTION_70(v130 & 0xFFFFFFFFFFFFFF8LL)) {
        goto LABEL_28;
      }
    }

    else if (*(void *)((char *)&dword_10 + (v130 & 0xFFFFFFFFFFFFFF8LL)))
    {
LABEL_28:
      OUTLINED_FUNCTION_6_54();
      if (v128) {
        uint64_t v131 = OUTLINED_FUNCTION_38_3();
      }
      else {
        uint64_t v131 = (uint64_t)OUTLINED_FUNCTION_31_24();
      }
      v132 = (void *)v131;
      goto LABEL_31;
    }

    OUTLINED_FUNCTION_62();
  }

  uint64_t v120 = v129;
  outlined bridged method (ob) of @objc INStartCallIntent.contacts.getter(v120);
  if (!v143) {
    goto LABEL_64;
  }
  if (!(v143 >> 62))
  {
LABEL_60:
    OUTLINED_FUNCTION_62();
    goto LABEL_64;
  }

  if (!OUTLINED_FUNCTION_70(v143 & 0xFFFFFFFFFFFFFF8LL)) {
    goto LABEL_60;
  }
LABEL_50:
  OUTLINED_FUNCTION_6_54();
  if (v128) {
    unint64_t v144 = OUTLINED_FUNCTION_38_3();
  }
  else {
    unint64_t v144 = (uint64_t)OUTLINED_FUNCTION_31_24();
  }
  unint64_t v145 = (void *)v144;
  OUTLINED_FUNCTION_62();
  outlined bridged method (ob) of @objc INPerson.siriMatches.getter(v145);
  if (v146)
  {
    if (v146 >> 62)
    {
      if (OUTLINED_FUNCTION_70(v146 & 0xFFFFFFFFFFFFFF8LL)) {
        goto LABEL_55;
      }
    }

    else if (*(void *)((char *)&dword_10 + (v146 & 0xFFFFFFFFFFFFFF8LL)))
    {
LABEL_55:
      OUTLINED_FUNCTION_6_54();
      if (v145) {
        v147 = OUTLINED_FUNCTION_38_3();
      }
      else {
        v147 = (uint64_t)OUTLINED_FUNCTION_31_24();
      }
      v132 = (void *)v147;
      OUTLINED_FUNCTION_60_27();
LABEL_31:
      OUTLINED_FUNCTION_62();
      uint64_t v133 = outlined bridged method (pb) of @objc INPerson.sourceAppBundleIdentifier.getter(v132);
      if (v134)
      {
        os_log_type_t v135 = v134;
      }

      else
      {
        uint64_t v133 = 0LL;
        os_log_type_t v135 = 0xE000000000000000LL;
      }

      static PhoneReferenceResolution.getContactSourceType(contactSource:)(v133, v135);
      uint64_t v137 = v136;
      OUTLINED_FUNCTION_62();
      static PhoneReferenceResolution.isTelephonyTargetFromSrr(contactSourceType:)(v137);
      if ((v138 & 1) != 0)
      {
        OUTLINED_FUNCTION_68_27();
        uint64_t v139 = OUTLINED_FUNCTION_41();
        if (os_log_type_enabled(v129, v139))
        {
          uint64_t v140 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
          uint64_t v73 = OUTLINED_FUNCTION_7_0(32LL);
          v186 = v73;
          *(_DWORD *)uint64_t v140 = 136315138;
          if (v137)
          {
            if (v137 == 1)
            {
              v141 = 0x80000000003440E0LL;
              uint64_t v142 = 0xD000000000000012LL;
            }

            else
            {
              v141 = 0xED00007465677261LL;
              uint64_t v142 = 0x54746C7561666564LL;
            }
          }

          else
          {
            v141 = 0xEB00000000737365LL;
            uint64_t v142 = 0x6E69737542727273LL;
          }

          v185 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v142, v141, &v186);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v185, &v186, v140 + 4, v140 + 12);
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_57_0( &dword_0,  v129,  v139,  "#INStartCallIntentConversion detected Telephony target(%s from srr, update PreferredCallProvider to telephonyProvider",  v140);
          OUTLINED_FUNCTION_17_0(v73);
          OUTLINED_FUNCTION_0_2(v73);
          OUTLINED_FUNCTION_0_2((uint64_t)v140);

          OUTLINED_FUNCTION_60_27();
        }

        else
        {
        }

        uint64_t v120 = (os_log_s *)v188;
        INStartCallIntent.updatePreferredCallProvider(preferredCallProvider:)(1LL);
      }

      else
      {

        uint64_t v120 = v129;
      }

      goto LABEL_64;
    }

    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_60_27();
  }

LABEL_64:
  v148 = *(os_log_s **)(v9 + 24);
  OUTLINED_FUNCTION_49_0((void *)v9);
  v149 = v120;
  OUTLINED_FUNCTION_9_0();
  v150 = PhoneCallNLIntent.isGroupFaceTimeCall()();
  INStartCallIntent.updateIsGroupCall(isGroupCall:)(v150);

  OUTLINED_FUNCTION_68_27();
  v151 = OUTLINED_FUNCTION_41();
  if (os_log_type_enabled(v148, v151))
  {
    v152 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    v153 = (void *)OUTLINED_FUNCTION_7_0(8LL);
    *(_DWORD *)v152 = 138412290;
    v154 = v188;
    v186 = (uint64_t)v188;
    v155 = v188;
    uint64_t v73 = v168;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v186, &v187, v152 + 4, v152 + 12);
    *v153 = v154;
    OUTLINED_FUNCTION_57_0(&dword_0, v148, v151, "#INStartCallIntentConversion ends with %@", v152);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    OUTLINED_FUNCTION_17_0((uint64_t)v153);
    OUTLINED_FUNCTION_0_2((uint64_t)v153);
    OUTLINED_FUNCTION_0_2((uint64_t)v152);
  }

  v156 = OUTLINED_FUNCTION_213_2();
  OUTLINED_FUNCTION_11_48(v156, v157);
  OUTLINED_FUNCTION_11_48(v184, *(uint64_t (**)(uint64_t, void))(v174 + 8));
  OUTLINED_FUNCTION_11_48(v71, *(uint64_t (**)(uint64_t, void))(v173 + 8));
  OUTLINED_FUNCTION_11_48(v181, *(uint64_t (**)(uint64_t, void))(v167 + 8));
  OUTLINED_FUNCTION_11_48(v183, *(uint64_t (**)(uint64_t, void))(v73 + 8));
  OUTLINED_FUNCTION_78_18();
LABEL_18:
  OUTLINED_FUNCTION_18();
  OUTLINED_FUNCTION_7_5();
}

      OUTLINED_FUNCTION_39();
      OUTLINED_FUNCTION_39();
LABEL_65:
      OUTLINED_FUNCTION_125_1();
      OUTLINED_FUNCTION_37_45();
      OUTLINED_FUNCTION_21_61();
      OUTLINED_FUNCTION_125_11(v112, v113, v114);
      OUTLINED_FUNCTION_22();
      goto LABEL_90;
    case 5uLL:
      OUTLINED_FUNCTION_8_26();
      uint64_t v54 = *(uint64_t (**)(void, uint64_t))(class metadata base offset for StartCallCATs + v81 + 1856);
      goto LABEL_21;
    case 6uLL:
      OUTLINED_FUNCTION_8_26();
      uint64_t v54 = *(uint64_t (**)(void, uint64_t))(class metadata base offset for StartCallCATs + v82 + 1696);
      goto LABEL_21;
    case 7uLL:
      OUTLINED_FUNCTION_8_26();
      uint64_t v54 = *(uint64_t (**)(void, uint64_t))(class metadata base offset for StartCallCATs + v83 + 1824);
      goto LABEL_21;
    default:
      if ((specialized static ContactsSlotTemplating.isMissingMeCardCase(intent:)(v29) & 1) != 0)
      {
        OUTLINED_FUNCTION_8_26();
        uint64_t v54 = *(uint64_t (**)(void, uint64_t))(class metadata base offset for StartCallCATs + v56 + 1760);
        goto LABEL_21;
      }

      uint64_t v137 = a21;
      if (v145)
      {
        uint64_t v93 = v145;
        uint64_t v94 = INPerson.nameLowercasedWithFirstUppercased.getter();
      }

      else
      {
        uint64_t v94 = 0LL;
      }

      OUTLINED_FUNCTION_18_22();
      OUTLINED_FUNCTION_60_6();
      uint64_t v95 = v148;
      char v96 = v149;
      __swift_project_boxed_opaque_existential_1(v147, v148);
      dispatch thunk of DeviceState.siriLocale.getter(v95, v96);
      __swift_destroy_boxed_opaque_existential_1(v147);
      static PhonePerson.make(phonePerson:options:locale:)(v94, 0, (uint64_t)v44);
      uint64_t v140 = v97;

      OUTLINED_FUNCTION_16_51((uint64_t)v44);
      v98 = v144;
      uint64_t v99 = v144[11];
      unint64_t v100 = v144[12];
      __swift_project_boxed_opaque_existential_1(v144 + 8, v99);
      OUTLINED_FUNCTION_34_40(v98);
      uint64_t v101 = (*(uint64_t (**)(uint64_t, char *, uint64_t, uint64_t))(v100 + 16))(v139, v44, v99, v100);
      uint64_t v103 = v102;
      OUTLINED_FUNCTION_16_51((uint64_t)v44);
      if (v103)
      {
        OUTLINED_FUNCTION_6_3();
        OUTLINED_FUNCTION_1_34(v101, v103);
        uint64_t v104 = OUTLINED_FUNCTION_26_0();
        __swift_storeEnumTagSinglePayload(v35, 0LL, 1LL, v104);
        OUTLINED_FUNCTION_62();
      }

      else
      {
        uint64_t v105 = OUTLINED_FUNCTION_26_0();
        OUTLINED_FUNCTION_29_1(v35, v106, v107, v105);
      }

      OUTLINED_FUNCTION_198_1();
      App.isFirstParty()();
      uint64_t v108 = OUTLINED_FUNCTION_163_8();
      v109(v108, v35);
      OUTLINED_FUNCTION_31_1(v100);
      v110 = &demangling cache variable for type metadata for SpeakableString?;
      v111 = v35;
      goto LABEL_89;
  }

void specialized static StartAudioCallIntentConversion.convertToIntent(phoneCallNLIntent:app:sharedGlobals:previousIntent:previousIntentResponse:groupResolver:)()
{
  uint64_t v4 = v3;
  uint64_t v88 = v5;
  __int128 v89 = v6;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallDestinationType>);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  uint64_t v13 = OUTLINED_FUNCTION_75_26();
  uint64_t v14 = type metadata accessor for ContactGroupResolver(v13);
  OUTLINED_FUNCTION_5_93();
  __chkstk_darwin();
  OUTLINED_FUNCTION_135();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v14);
  char v15 = (void *)v10[3];
  uint64_t v16 = (void *)v10[4];
  __swift_project_boxed_opaque_existential_1(v10, (uint64_t)v15);
  if (OUTLINED_FUNCTION_162_8())
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v17 = OUTLINED_FUNCTION_15_1();
    uint64_t v18 = (os_log_s *)__swift_project_value_buffer(v17, (uint64_t)static Logger.siriPhone);
    OUTLINED_FUNCTION_270_2((uint64_t)v89);
    os_log_type_t v19 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_63(v19))
    {
      uint64_t v20 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v21 = OUTLINED_FUNCTION_7_0(32LL);
      v100[0] = v21;
      *(_DWORD *)uint64_t v20 = 136315138;
      uint64_t v94 = (uint64_t)v89;
      id v22 = v16;
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INStartAudioCallIntent?);
      uint64_t v24 = String.init<A>(describing:)(&v94, v23);
      uint64_t v94 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v24, v25, v100);
      OUTLINED_FUNCTION_85_1((uint64_t)&v94, (uint64_t)&v95, (uint64_t)(v20 + 4));

      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_57_0( &dword_0,  v18,  v0,  "#StartAudioCallIntentConversion is confirmation, returning previousIntent: %s.",  v20);
      OUTLINED_FUNCTION_17_0(v21);
      OUTLINED_FUNCTION_0_2(v21);
      OUTLINED_FUNCTION_0_2((uint64_t)v20);
    }

    else
    {
    }

    id v39 = v16;
  }

  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v87 = v12;
    uint64_t v26 = OUTLINED_FUNCTION_15_1();
    __swift_project_value_buffer(v26, (uint64_t)static Logger.siriPhone);
    OUTLINED_FUNCTION_9();
    os_log_type_t v27 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_7(v27))
    {
      id v28 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
      *(_WORD *)id v28 = 0;
      OUTLINED_FUNCTION_243_2();
      OUTLINED_FUNCTION_5(v29, v30, v31, v32, v28);
      OUTLINED_FUNCTION_0_2((uint64_t)v28);
    }

    __swift_project_boxed_opaque_existential_1(v8, v8[3]);
    OUTLINED_FUNCTION_11_26();
    uint64_t v33 = v8[4];
    OUTLINED_FUNCTION_49_0(v8);
    OUTLINED_FUNCTION_6_2(*(uint64_t (**)(uint64_t, uint64_t))(v33 + 72));
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
    type metadata accessor for INCallDestinationType(0LL);
    OUTLINED_FUNCTION_202_4( (uint64_t)partial apply for closure #1 in static Transformer<>.transformer(sharedGlobals:previousIntent:),  0LL);
    v98 = _swiftEmptyArrayStorage;
    OUTLINED_FUNCTION_257_2(v11);
    unint64_t v35 = v34;
    OUTLINED_FUNCTION_236_3();
    if (v33)
    {
      uint64_t v36 = OUTLINED_FUNCTION_38_1();
      OUTLINED_FUNCTION_229_2(v36);
      os_log_type_t v37 = OUTLINED_FUNCTION_24();
      if (OUTLINED_FUNCTION_29_5(v37))
      {
        uint64_t v38 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
        *(_WORD *)uint64_t v38 = 0;
        OUTLINED_FUNCTION_5( &dword_0,  v35,  (os_log_type_t)v1,  "#StartAudioCallIntentConversion makeIntentFromParse cannot transform to startAudioCallIntent",  v38);
        OUTLINED_FUNCTION_0_2((uint64_t)v38);
      }

      OUTLINED_FUNCTION_223_1();
      OUTLINED_FUNCTION_3_24();

      OUTLINED_FUNCTION_19_9(*(uint64_t (**)(uint64_t, uint64_t))(v87 + 8));
      OUTLINED_FUNCTION_18();
    }

    else
    {
      uint64_t v85 = v2;
      uint64_t v84 = v14;
      OUTLINED_FUNCTION_38_1();
      uint64_t v40 = v10[4];
      __swift_project_boxed_opaque_existential_1(v10, v10[3]);
      uint64_t v41 = OUTLINED_FUNCTION_6_2(*(uint64_t (**)(uint64_t, uint64_t))(v40 + 128));
      v98 = (void *)v41;
      OUTLINED_FUNCTION_49_0(v10);
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_9_0();
      Swift::Bool v42 = PhoneCallNLIntent.isEmergencyContactCall()();
      uint64_t v43 = OUTLINED_FUNCTION_203_4();
      PhoneCallNLIntent.getPersons()(v43, v44);
      uint64_t v46 = v45;
      id v47 = objc_allocWithZone(&OBJC_CLASS___INStartAudioCallIntent);
      @nonobjc INStartAudioCallIntent.init(destinationType:contacts:)(v94, v46);
      uint64_t v48 = v88;
      specialized static NLv4IntentConversion.setIntentMetadata(for:sharedGlobals:app:previousIntent:)();
      OUTLINED_FUNCTION_79();
      id v99 = v47;
      outlined init with copy of SharedGlobalsProviding((uint64_t)v10, (uint64_t)&v94);
      id v49 = v47;
      OUTLINED_FUNCTION_180_4();
      swift_bridgeObjectRetain();
      id v90 = v49;
      OUTLINED_FUNCTION_229_2((uint64_t)v90);
      os_log_type_t v50 = OUTLINED_FUNCTION_6_0();
      uint64_t v86 = v1;
      if (os_log_type_enabled((os_log_t)v47, v50))
      {
        uint64_t v51 = OUTLINED_FUNCTION_7_0(42LL);
        uint64_t v83 = (void *)OUTLINED_FUNCTION_7_0(8LL);
        uint64_t v81 = OUTLINED_FUNCTION_7_0(96LL);
        *(_DWORD *)uint64_t v51 = 138413058;
        os_log_type_t v80 = v50;
        uint64_t v79 = (os_log_s *)v47;
        uint64_t v91 = (uint64_t)v90;
        uint64_t v92 = v81;
        Swift::Bool v82 = v42;
        id v52 = v90;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v91, &v92, v51 + 4, v51 + 12);
        *uint64_t v83 = v90;
        uint64_t v48 = v88;

        *(_WORD *)(v51 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
        uint64_t v53 = OUTLINED_FUNCTION_278_2();
        uint64_t v91 = OUTLINED_FUNCTION_18_19(v53, v54);
        OUTLINED_FUNCTION_87_1((uint64_t)&v91, (uint64_t)&v92, v55, v51 + 22);
        OUTLINED_FUNCTION_14_18();
        OUTLINED_FUNCTION_62();
        *(_WORD *)(v51 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
        uint64_t v57 = v96;
        uint64_t v56 = v97;
        __swift_project_boxed_opaque_existential_1(&v94, v96);
        (*(void (**)(uint64_t, uint64_t))(v56 + 24))(v57, v56);
        uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SiriPhoneContact);
        uint64_t v59 = OUTLINED_FUNCTION_249_2(v58);
        unint64_t v61 = v60;
        OUTLINED_FUNCTION_39();
        uint64_t v91 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v59, v61, &v92);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v91, &v92, v51 + 24, v51 + 32);
        Swift::Bool v42 = v82;
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1(&v94);
        *(_WORD *)(v51 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
        uint64_t v62 = OUTLINED_FUNCTION_17_34();
        uint64_t v63 = Array.debugDescription.getter(v41, v62);
        uint64_t v91 = OUTLINED_FUNCTION_18_19(v63, v64);
        OUTLINED_FUNCTION_87_1((uint64_t)&v91, (uint64_t)&v92, v65, v51 + 42);
        OUTLINED_FUNCTION_7_4(v41);
        OUTLINED_FUNCTION_62();
        OUTLINED_FUNCTION_261_1( &dword_0,  v79,  v80,  "#StartAudioCallIntentConversion starts with intent:%@ resolvedApp:%s phoneCallNLIntent=%s contactQueries=%s",  (uint8_t *)v51);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
        OUTLINED_FUNCTION_17_0((uint64_t)v83);
        OUTLINED_FUNCTION_0_2((uint64_t)v83);
        swift_arrayDestroy(v81, 3LL);
        OUTLINED_FUNCTION_0_2(v81);
        uint64_t v66 = v51;
        uint64_t v1 = v86;
        OUTLINED_FUNCTION_0_2(v66);
      }

      else
      {
        OUTLINED_FUNCTION_14_18();

        __swift_destroy_boxed_opaque_existential_1(&v94);
        OUTLINED_FUNCTION_7_4(v41);
      }

      OUTLINED_FUNCTION_22_0((uint64_t)&v98, (uint64_t)&v94);
      uint64_t v67 = (uint64_t)v98;
      id v68 = v90;
      specialized static NLv4IntentConversion.updateSiriKitIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:nlIntent:sharedGlobals:contactGroupResolver:)( (uint64_t)v68,  v67,  v42,  v48,  (uint64_t)v10,  (uint64_t)v8,  v1,  (uint64_t)specialized static ReferenceContactResolutionWrapper.resolveUpdateSKIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:nlIntent:sharedGlobals:multicardinalIndex:siriKitEventSender:emergencyContactResolution:contactGroupResolver:),  (void (*)(uint64_t, uint64_t, void, uint64_t, char *, void *, void *, void, char, uint64_t *, uint64_t, uint64_t, uint64_t))specialized static ContactResolution.updateSiriKitIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:locale:nlIntent:sharedGlobals:multicardinalIndex:siriKitEventSender:emergencyContactResolution:));

      OUTLINED_FUNCTION_39();
      outlined bridged method (pb) of @objc INStartAudioCallIntent.contacts.getter(v68);
      uint64_t v70 = v69;
      uint64_t v71 = one-time initialization token for instance;
      id v72 = v68;
      if (v71 != -1) {
        swift_once(&one-time initialization token for instance, one-time initialization function for instance);
      }
      uint64_t v73 = static EligibleAppFinder.instance;
      OUTLINED_FUNCTION_3_8();
      specialized static AppSelectionSignalsGatheringHelper.triggerSignalCollection(sharedGlobals:contacts:phoneCallNLIntent:smartAppSelection:eligibleAppsFinder:skIntent:)( v8,  (uint64_t)v70,  v10,  0LL,  v73);
      OUTLINED_FUNCTION_22();

      OUTLINED_FUNCTION_62();
      id v74 = v72;
      OUTLINED_FUNCTION_229_2((uint64_t)v74);
      os_log_type_t v75 = OUTLINED_FUNCTION_6_0();
      if (OUTLINED_FUNCTION_29_5(v75))
      {
        uint64_t v76 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
        uint64_t v77 = (void *)OUTLINED_FUNCTION_7_0(8LL);
        *(_DWORD *)uint64_t v76 = 138412290;
        uint64_t v92 = (uint64_t)v74;
        id v78 = v74;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v92, &v93, v76 + 4, v76 + 12);
        void *v77 = v90;

        OUTLINED_FUNCTION_57_0(&dword_0, v70, (os_log_type_t)v1, "#StartAudioCallIntentConversion ends with %@", v76);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
        OUTLINED_FUNCTION_17_0((uint64_t)v77);
        OUTLINED_FUNCTION_0_2((uint64_t)v77);
        OUTLINED_FUNCTION_0_2((uint64_t)v76);
      }

      else
      {
      }

      uint64_t v14 = v84;
      uint64_t v2 = v85;

      OUTLINED_FUNCTION_223_1();
      OUTLINED_FUNCTION_19_9(*(uint64_t (**)(uint64_t, uint64_t))(v87 + 8));
      OUTLINED_FUNCTION_18();
      OUTLINED_FUNCTION_22_0((uint64_t)&v99, (uint64_t)&v92);
      uint64_t v1 = v86;
    }
  }

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v14);
  OUTLINED_FUNCTION_7_5();
}

void specialized static StartVideoCallIntentConversion.convertToIntent(phoneCallNLIntent:app:sharedGlobals:previousIntent:previousIntentResponse:groupResolver:)()
{
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(OUTLINED_FUNCTION_112_11() - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_20_0();
  uint64_t v88 = v13;
  (*(void (**)(uint64_t, os_log_s *))(v12 + 16))(v1, v3);
  if (OUTLINED_FUNCTION_113_11())
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v14 = OUTLINED_FUNCTION_15_1();
    char v15 = (void *)__swift_project_value_buffer(v14, (uint64_t)static Logger.siriPhone);
    id v16 = v5;
    Logger.logObject.getter(v16);
    os_log_type_t v17 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_93(v17))
    {
      uint64_t v18 = (_DWORD *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v85 = v1;
      uint64_t v19 = OUTLINED_FUNCTION_7_0(32LL);
      uint64_t v91 = (os_log_s *)v19;
      *uint64_t v18 = 136315138;
      uint64_t v95 = (uint64_t)v5;
      id v20 = v16;
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INStartVideoCallIntent?);
      uint64_t v22 = String.init<A>(describing:)(&v95, v21);
      uint64_t v95 = OUTLINED_FUNCTION_80(v22, v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, &v96, v18 + 1, v18 + 3);

      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_7_62( &dword_0,  v24,  v25,  "#StartVideoCallIntentConversion is confirmation, returning previousIntent: %s.");
      OUTLINED_FUNCTION_17_0(v19);
      uint64_t v26 = v19;
      uint64_t v1 = v85;
      OUTLINED_FUNCTION_0_2(v26);
      OUTLINED_FUNCTION_0_2((uint64_t)v18);
    }

    else
    {
    }

    id v62 = v16;
  }

  else
  {
    uint64_t v87 = v12;
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v27 = OUTLINED_FUNCTION_15_1();
    __swift_project_value_buffer(v27, (uint64_t)static Logger.siriPhone);
    OUTLINED_FUNCTION_9();
    os_log_type_t v28 = OUTLINED_FUNCTION_41();
    if (OUTLINED_FUNCTION_10(v28))
    {
      os_log_type_t v29 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
      OUTLINED_FUNCTION_47(v29);
      OUTLINED_FUNCTION_5( &dword_0,  v3,  v0,  "#StartVideoCallIntentConversion called with NLv4IntentOnly",  (uint8_t *)v12);
      OUTLINED_FUNCTION_0_2(v12);
    }

    uint64_t v30 = v11[4];
    __swift_project_boxed_opaque_existential_1(v11, v11[3]);
    uint64_t v31 = OUTLINED_FUNCTION_6_2(*(uint64_t (**)(uint64_t, uint64_t))(v30 + 128));
    OUTLINED_FUNCTION_2_1();
    Swift::Bool v84 = PhoneCallNLIntent.isEmergencyContactCall()();
    uint64_t v32 = OUTLINED_FUNCTION_2_1();
    PhoneCallNLIntent.getPersons()(v32, v33);
    uint64_t v35 = v34;
    id v36 = objc_allocWithZone(&OBJC_CLASS___INStartVideoCallIntent);
    @nonobjc INStartVideoCallIntent.init(contacts:)(v35);
    specialized static NLv4IntentConversion.setIntentMetadata(for:sharedGlobals:app:previousIntent:)();
    OUTLINED_FUNCTION_79();
    uint64_t v95 = (uint64_t)v36;
    OUTLINED_FUNCTION_132(v37, (uint64_t)&v91);
    id v38 = v36;
    OUTLINED_FUNCTION_180_4();
    OUTLINED_FUNCTION_11(v31);
    id v39 = v38;
    OUTLINED_FUNCTION_17_43();
    os_log_type_t v40 = OUTLINED_FUNCTION_41();
    if (OUTLINED_FUNCTION_10(v40))
    {
      uint64_t v86 = v1;
      uint64_t v41 = OUTLINED_FUNCTION_7_0(42LL);
      os_log_type_t v80 = (void *)OUTLINED_FUNCTION_7_0(8LL);
      uint64_t v82 = OUTLINED_FUNCTION_7_0(96LL);
      uint64_t v89 = (uint64_t)v39;
      uint64_t v90 = v82;
      *(_DWORD *)uint64_t v41 = 138413058;
      os_log_type_t v81 = v36;
      uint64_t v83 = v31;
      uint64_t v79 = (os_log_s *)v38;
      id v42 = v39;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v89, &v90, v41 + 4, v41 + 12);
      *os_log_type_t v80 = v39;

      *(_WORD *)(v41 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
      uint64_t v43 = OUTLINED_FUNCTION_278_2();
      uint64_t v89 = OUTLINED_FUNCTION_227_3(v43, v44);
      OUTLINED_FUNCTION_87_1((uint64_t)&v89, (uint64_t)&v90, v45, v41 + 22);
      OUTLINED_FUNCTION_14_18();
      OUTLINED_FUNCTION_62();
      *(_WORD *)(v41 + 2__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
      uint64_t v46 = v7;
      uint64_t v47 = v9;
      uint64_t v48 = v93;
      uint64_t v49 = v94;
      __swift_project_boxed_opaque_existential_1(&v91, v93);
      uint64_t v50 = (*(uint64_t (**)(uint64_t, uint64_t))(v49 + 24))(v48, v49);
      uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SiriPhoneContact);
      uint64_t v52 = Array.description.getter(v50, v51);
      unint64_t v54 = v53;
      OUTLINED_FUNCTION_62();
      uint64_t v55 = v52;
      uint64_t v31 = v83;
      uint64_t v89 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v55, v54, &v90);
      OUTLINED_FUNCTION_87_1((uint64_t)&v89, (uint64_t)&v90, v56, v41 + 32);
      uint64_t v9 = v47;
      uint64_t v7 = v46;
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_50_15();
      *(_WORD *)(v41 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
      uint64_t v57 = OUTLINED_FUNCTION_17_34();
      uint64_t v58 = Array.debugDescription.getter(v83, v57);
      uint64_t v89 = OUTLINED_FUNCTION_227_3(v58, v59);
      OUTLINED_FUNCTION_87_1((uint64_t)&v89, (uint64_t)&v90, v60, v41 + 42);
      OUTLINED_FUNCTION_7_4(v83);
      OUTLINED_FUNCTION_62();
      OUTLINED_FUNCTION_261_1( &dword_0,  v79,  v81,  "#StartVideoCallIntentConversion with intent:%@ resolvedApp:%s phoneCallNLIntent=%s contactQueries=%s",  (uint8_t *)v41);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      OUTLINED_FUNCTION_17_0((uint64_t)v80);
      OUTLINED_FUNCTION_0_2((uint64_t)v80);
      OUTLINED_FUNCTION_240_2();
      OUTLINED_FUNCTION_0_2(v82);
      uint64_t v61 = v41;
      uint64_t v1 = v86;
      OUTLINED_FUNCTION_0_2(v61);
    }

    else
    {
      OUTLINED_FUNCTION_14_18();

      OUTLINED_FUNCTION_50_15();
      OUTLINED_FUNCTION_7_4(v31);
    }

    id v63 = v39;
    specialized static NLv4IntentConversion.updateSiriKitIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:nlIntent:sharedGlobals:contactGroupResolver:)( (uint64_t)v63,  v31,  v84,  v9,  (uint64_t)v11,  v7,  v1,  (uint64_t)specialized static ReferenceContactResolutionWrapper.resolveUpdateSKIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:nlIntent:sharedGlobals:multicardinalIndex:siriKitEventSender:emergencyContactResolution:contactGroupResolver:),  (void (*)(uint64_t, uint64_t, void, uint64_t, char *, void *, void *, void, char, uint64_t *, uint64_t, uint64_t, uint64_t))specialized static ContactResolution.updateSiriKitIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:locale:nlIntent:sharedGlobals:multicardinalIndex:siriKitEventSender:emergencyContactResolution:));

    OUTLINED_FUNCTION_34_0();
    outlined bridged method (pb) of @objc INStartVideoCallIntent.contacts.getter(v63);
    uint64_t v65 = v64;
    uint64_t v66 = one-time initialization token for instance;
    id v67 = v63;
    if (v66 != -1) {
      swift_once(&one-time initialization token for instance, one-time initialization function for instance);
    }
    uint64_t v68 = static EligibleAppFinder.instance;
    OUTLINED_FUNCTION_25_1();
    uint64_t v69 = (void *)OUTLINED_FUNCTION_185_3();
    specialized static AppSelectionSignalsGatheringHelper.triggerSignalCollection(sharedGlobals:contacts:phoneCallNLIntent:smartAppSelection:eligibleAppsFinder:skIntent:)( v69,  v70,  v71,  v72,  v73);
    swift_release(v68);

    OUTLINED_FUNCTION_39();
    id v74 = (os_log_s *)v67;
    OUTLINED_FUNCTION_17_43();
    os_log_type_t v75 = OUTLINED_FUNCTION_41();
    if (os_log_type_enabled(v65, v75))
    {
      uint64_t v76 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v77 = (void *)OUTLINED_FUNCTION_7_0(8LL);
      *(_DWORD *)uint64_t v76 = 138412290;
      uint64_t v91 = v74;
      id v78 = v74;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v91, &v92, v76 + 4, v76 + 12);
      void *v77 = v39;

      OUTLINED_FUNCTION_57_0(&dword_0, v65, v75, "#StartVideoCallIntentConversion ends with %@", v76);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      OUTLINED_FUNCTION_17_0((uint64_t)v77);
      OUTLINED_FUNCTION_0_2((uint64_t)v77);
      OUTLINED_FUNCTION_0_2((uint64_t)v76);
      id v74 = v65;
    }

    else
    {
    }

    uint64_t v12 = v87;

    OUTLINED_FUNCTION_22_0((uint64_t)&v95, (uint64_t)&v91);
  }

  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v1, v88);
  OUTLINED_FUNCTION_7_5();
}

void specialized static AnswerCallIntentConversion.convertToIntent(phoneCallNLIntent:app:sharedGlobals:previousIntent:previousIntentResponse:groupResolver:)()
{
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, String?>);
  uint64_t v58 = *(void *)(v60 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_61_3();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INCallAudioRoute>);
  uint64_t v59 = *(void *)(v8 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_20_0();
  uint64_t v9 = (void *)v7[3];
  __swift_project_boxed_opaque_existential_1(v7, (uint64_t)v9);
  BOOL v10 = OUTLINED_FUNCTION_162_8();
  uint64_t v11 = v5;
  if (v10)
  {
    if (v5)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v12 = OUTLINED_FUNCTION_15_1();
      id v13 = OUTLINED_FUNCTION_60_16(v12, (uint64_t)static Logger.siriPhone);
      OUTLINED_FUNCTION_270_2((uint64_t)v13);
      os_log_type_t v14 = OUTLINED_FUNCTION_6_0();
      if (OUTLINED_FUNCTION_93(v14))
      {
        char v15 = (_DWORD *)OUTLINED_FUNCTION_7_0(12LL);
        uint64_t v16 = OUTLINED_FUNCTION_7_0(32LL);
        OUTLINED_FUNCTION_230_3(v16);
        *char v15 = 136315138;
        id v17 = v3;
        uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INAnswerCallIntent?);
        uint64_t v19 = OUTLINED_FUNCTION_11_40(v18);
        uint64_t v21 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v19, v20, (uint64_t *)v61);
        uint64_t v22 = OUTLINED_FUNCTION_8_40(v21);
        OUTLINED_FUNCTION_117_6(v22, v23);

        OUTLINED_FUNCTION_129();
        OUTLINED_FUNCTION_7_62( &dword_0,  v24,  v25,  "#AnswerCallIntentConversion is confirmation, returning previousIntent: %s.");
        OUTLINED_FUNCTION_17_0(v0);
        OUTLINED_FUNCTION_0_2(v0);
        OUTLINED_FUNCTION_0_2((uint64_t)v15);
      }

      else
      {
      }

      id v50 = v3;
      goto LABEL_27;
    }

    uint64_t v11 = 0LL;
  }

  OUTLINED_FUNCTION_78_25(v10, (uint64_t)v61);
  uint64_t v26 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_416610, 64LL);
  outlined init with take of AppSelectionSignalComponent(v61, v26 + 16);
  *(void *)(v26 + 56) = v11;
  id v27 = v11;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  type metadata accessor for INCallAudioRoute(0LL);
  OUTLINED_FUNCTION_13_42((uint64_t)_s13SiriUtilities11TransformerV27PhoneCallFlowDelegatePluginAD0dE8NLIntent_pRszSo16INCallAudioRouteVRs_rlE11transformer10intentType13sharedGlobals14previousIntentACyAdE_pAGGqd__m_AD06SharedQ9Providing_pSo8INIntentCSgtAORbd__lFZAgdE_pcfU_So08INAnswereS0C_TGm5TA_0);
  os_log_type_t v28 = (os_log_s *)OUTLINED_FUNCTION_8_2((uint64_t)&unk_416638, 24LL);
  *((void *)v28 + __swift_destroy_boxed_opaque_existential_1(v0 + 2) = v3;
  id v29 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
  OUTLINED_FUNCTION_13_42((uint64_t)partial apply for closure #1 in static Transformer<>.callIdentifierTransformer(previousIntentResponse:));
  OUTLINED_FUNCTION_257_2(v8);
  OUTLINED_FUNCTION_14_30();
  OUTLINED_FUNCTION_236_3();
  uint64_t v30 = v1;
  if (v3)
  {
    OUTLINED_FUNCTION_38_1();
    if (v5)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v34 = OUTLINED_FUNCTION_15_1();
      id v35 = OUTLINED_FUNCTION_60_16(v34, (uint64_t)static Logger.siriPhone);
      Logger.logObject.getter(v35);
      os_log_type_t v36 = OUTLINED_FUNCTION_24();
      if (os_log_type_enabled(v28, v36))
      {
        uint64_t v57 = v8;
        uint64_t v56 = v30;
        uint64_t v37 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
        uint64_t v38 = OUTLINED_FUNCTION_7_0(32LL);
        *(void *)&v61[0] = v38;
        *(_DWORD *)uint64_t v37 = 136315138;
        id v39 = v35;
        uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INAnswerCallIntent?);
        uint64_t v41 = OUTLINED_FUNCTION_11_40(v40);
        uint64_t v43 = OUTLINED_FUNCTION_127_10(v41, v42);
        uint64_t v44 = OUTLINED_FUNCTION_8_40(v43);
        OUTLINED_FUNCTION_85_1(v44, v45, (uint64_t)(v37 + 4));

        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_57_0( &dword_0,  v28,  v36,  "#AnswerCallIntentConversion error converting to InAnswerCall, returning previousIntent: %s.",  v37);
        OUTLINED_FUNCTION_17_0(v38);
        OUTLINED_FUNCTION_0_2(v38);
        OUTLINED_FUNCTION_0_2((uint64_t)v37);
        OUTLINED_FUNCTION_3_24();

        (*(void (**)(uint8_t *, uint64_t))(v58 + 8))(v56, v60);
        (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v0, v57);
      }

      else
      {
        OUTLINED_FUNCTION_3_24();

        OUTLINED_FUNCTION_1_51();
        (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v0, v8);
      }

      id v49 = v35;
    }

    else
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v46 = OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_12_1(v46, (uint64_t)static Logger.siriPhone);
      os_log_type_t v47 = OUTLINED_FUNCTION_59_8();
      if (OUTLINED_FUNCTION_10(v47))
      {
        uint64_t v48 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
        OUTLINED_FUNCTION_31_0(v48);
        OUTLINED_FUNCTION_5( &dword_0,  0LL,  (os_log_type_t)v28,  "#AnswerCallIntentConversion error converting to InAnswerCall, returning nil.",  v1);
        OUTLINED_FUNCTION_0_2((uint64_t)v1);
      }

      OUTLINED_FUNCTION_3_24();

      OUTLINED_FUNCTION_1_51();
      OUTLINED_FUNCTION_6_5();
    }
  }

  else
  {
    OUTLINED_FUNCTION_38_1();
    uint64_t v31 = *(void *)&v61[0];
    Transformer.transform.getter(v60);
    uint64_t v32 = OUTLINED_FUNCTION_14_30();
    v33(v32);
    uint64_t v51 = OUTLINED_FUNCTION_38_1();
    __int128 v52 = v61[0];
    OUTLINED_FUNCTION_78_25(v51, (uint64_t)v61);
    if (!*((void *)&v52 + 1))
    {
      static AnswerCallIntentConversion.getCallIdentifierFromCallNotifications(sharedGlobals:app:)(v61);
      OUTLINED_FUNCTION_76_12();
    }

    OUTLINED_FUNCTION_57_4();
    id v53 = objc_allocWithZone(&OBJC_CLASS___INAnswerCallIntent);
    @nonobjc INAnswerCallIntent.init(audioRoute:callIdentifier:)(v31, v52, *((uint64_t *)&v52 + 1));
    uint64_t v55 = v54;
    specialized static NLv4IntentConversion.setIntentMetadata(for:sharedGlobals:app:previousIntent:)();

    OUTLINED_FUNCTION_1_51();
    OUTLINED_FUNCTION_6_5();
  }

uint64_t specialized static IdentifyCallerIntentConversion.convertToIntent(phoneCallNLIntent:app:sharedGlobals:previousIntent:previousIntentResponse:groupResolver:)( void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (void *)a1[3];
  __swift_project_boxed_opaque_existential_1(a1, (uint64_t)v7);
  if (OUTLINED_FUNCTION_162_8())
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v8 = OUTLINED_FUNCTION_15_1();
    id v9 = OUTLINED_FUNCTION_60_16(v8, (uint64_t)static Logger.siriPhone);
    OUTLINED_FUNCTION_270_2((uint64_t)v9);
    os_log_type_t v10 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_93(v10))
    {
      uint64_t v11 = (_DWORD *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v12 = OUTLINED_FUNCTION_7_0(32LL);
      uint64_t v22 = a4;
      uint64_t v23 = v12;
      *uint64_t v11 = 136315138;
      id v13 = a2;
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INIdentifyIncomingCallerIntent?);
      uint64_t v15 = String.init<A>(describing:)(&v22, v14);
      uint64_t v22 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v15, v16, &v23);
      OUTLINED_FUNCTION_117_6((uint64_t)&v22, (uint64_t)&v23);

      OUTLINED_FUNCTION_129();
      OUTLINED_FUNCTION_7_62( &dword_0,  v17,  v18,  "#IdentifyCallerIntentConversion is confirmation, returning previousIntent: %s.");
      OUTLINED_FUNCTION_17_0(v12);
      OUTLINED_FUNCTION_0_2(v12);
      OUTLINED_FUNCTION_0_2((uint64_t)v11);
    }

    else
    {
    }

    id v20 = a2;
  }

  else
  {
    id v19 = [objc_allocWithZone(INIdentifyIncomingCallerIntent) init];
    a4 = specialized static NLv4IntentConversion.setIntentMetadata(for:sharedGlobals:app:previousIntent:)( v19,  a3,  a2,  a4);
  }

  return a4;
}

void specialized static HangUpCallIntentConversion.convertToIntent(phoneCallNLIntent:app:sharedGlobals:previousIntent:previousIntentResponse:groupResolver:)( uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  void (*v18)(__int128 *__return_ptr, uint64_t);
  uint64_t v19;
  __int128 v20[2];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<PhoneCallNLIntent, INHangUpCallIntent>);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin();
  id v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  outlined init with copy of SharedGlobalsProviding(a3, (uint64_t)v20);
  uint64_t v14 = (void *)OUTLINED_FUNCTION_8_2((uint64_t)&unk_4168E0, 80LL);
  v14[2] = a2;
  v14[3] = a4;
  outlined init with take of AppSelectionSignalComponent(v20, (uint64_t)(v14 + 4));
  v14[9] = a5;
  id v15 = a5;
  swift_retain();
  id v16 = a4;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  OUTLINED_FUNCTION_49( v17,  (unint64_t *)&lazy cache variable for type metadata for INHangUpCallIntent,  &OBJC_CLASS___INHangUpCallIntent_ptr);
  Transformer.init(transform:)( closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:previousIntentResponse:)partial apply,  v14,  v17);
  uint64_t v18 = (void (*)(__int128 *__return_ptr, uint64_t))Transformer.transform.getter(v10);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v18(v20, a1);
  OUTLINED_FUNCTION_31_2();
  OUTLINED_FUNCTION_58();
}

void specialized static ReferenceContactResolutionWrapper.resolveUpdateSKIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:nlIntent:sharedGlobals:multicardinalIndex:siriKitEventSender:emergencyContactResolution:contactGroupResolver:)( void *a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, void *a6, void *a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  HIDWORD(v6__swift_destroy_boxed_opaque_existential_1(v0 + 5) = a8;
  HIDWORD(v71) = a3;
  uint64_t v68 = a9;
  uint64_t v69 = a10;
  uint64_t v17 = type metadata accessor for Locale(0LL);
  uint64_t v70 = *(void *)(v17 - 8);
  __chkstk_darwin();
  specialized static ReferenceContactResolutionWrapper.runCombinedSRRandCRR(siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)( (uint64_t)a1,  a4,  a5,  (uint64_t)a6,  a11,  (uint64_t)closure #1 in static ReferenceContactResolutionWrapper.runCombinedSRRandCRR(siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)partial apply,  (uint64_t)closure #1 in static ReferenceContactResolutionWrapper.resolveRREntity(rrEntity:siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)partial apply,  (uint64_t)specialized static ContactResolution.resolveContactQueries(contactQueries:siriKitIntent:app:nlIntent:sharedGlobals:),  (uint64_t)&unk_416728,  (uint64_t)closure #1 in static Transformer<>.transformer(device:groupResolver:)partial apply,  v64,  v65,  a5,  (uint64_t)&v64 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL),  a9,  a10,  v70,  v71,  (uint64_t)v72,  v73,  v74[0],  v74[1]);
  v20._rawValue = (void *)v19;
  uint64_t v22 = v21;
  if ((unint64_t)v19 >> 62)
  {
    if (v19 < 0) {
      uint64_t v43 = v19;
    }
    else {
      uint64_t v43 = v19 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    uint64_t v23 = (void *)_CocoaArrayWrapper.endIndex.getter(v43);
    swift_bridgeObjectRelease();
  }

  else
  {
    uint64_t v23 = *(void **)((char *)&dword_10 + (v19 & 0xFFFFFFFFFFFFF8LL));
  }

  id v72 = v23;
  if (v23)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v24 = type metadata accessor for Logger(0LL);
    uint64_t v25 = __swift_project_value_buffer(v24, (uint64_t)static Logger.siriPhone);
    uint64_t v26 = (os_log_s *)Logger.logObject.getter(v25);
    os_log_type_t v28 = static os_log_type_t.debug.getter(v26, v27);
    if (os_log_type_enabled(v26, v28))
    {
      id v29 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      uint64_t v64 = a2;
      uint64_t v30 = a1;
      uint64_t v31 = v17;
      uint64_t v32 = a4;
      uint64_t v33 = a6;
      uint64_t v34 = a7;
      id v35 = v29;
      *(_WORD *)id v29 = 0;
      _os_log_impl(&dword_0, v26, v28, "#ReferenceContactResolutionWrapper updated SKIntent with contacts", v29, 2u);
      os_log_type_t v36 = v35;
      a7 = v34;
      a6 = v33;
      a4 = v32;
      uint64_t v17 = v31;
      a1 = v30;
      a2 = v64;
      swift_slowDealloc(v36, -1LL, -1LL);
    }

    INStartVideoCallIntent.overwriteContacts(newContacts:)(v20);
  }

  if ((unint64_t)v22 >> 62)
  {
    if (v22 < 0) {
      uint64_t v44 = v22;
    }
    else {
      uint64_t v44 = v22 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    uint64_t v45 = _CocoaArrayWrapper.endIndex.getter(v44);
    swift_bridgeObjectRelease();
    if (v45) {
      goto LABEL_11;
    }
  }

  else if (*(void *)((char *)&dword_10 + (v22 & 0xFFFFFFFFFFFFF8LL)))
  {
LABEL_11:
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v37 = type metadata accessor for Logger(0LL);
    uint64_t v38 = __swift_project_value_buffer(v37, (uint64_t)static Logger.siriPhone);
    id v39 = (os_log_s *)Logger.logObject.getter(v38);
    os_log_type_t v41 = static os_log_type_t.debug.getter(v39, v40);
    if (os_log_type_enabled(v39, v41))
    {
      unint64_t v42 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)unint64_t v42 = 0;
      _os_log_impl(&dword_0, v39, v41, "#ReferenceContactResolutionWrapper updated SKIntent with groups", v42, 2u);
      swift_slowDealloc(v42, -1LL, -1LL);
    }

    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    goto LABEL_25;
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v72)
  {
    id v72 = a7;
    char v53 = BYTE4(v65) & 1;
    uint64_t v54 = a6[3];
    uint64_t v55 = a6[4];
    __swift_project_boxed_opaque_existential_1(a6, v54);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v55 + 8))(&v73, v54, v55);
    uint64_t v56 = v75;
    uint64_t v57 = v76;
    __swift_project_boxed_opaque_existential_1(&v73, v75);
    uint64_t v58 = v67;
    dispatch thunk of DeviceState.siriLocale.getter(v56, v57);
    uint64_t v59 = v66[3];
    uint64_t v60 = v66[4];
    uint64_t v61 = __swift_project_boxed_opaque_existential_1(v66, v59);
    LOBYTE(v6__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v53;
    specialized static ContactResolution.updateSiriKitIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:locale:nlIntent:sharedGlobals:multicardinalIndex:siriKitEventSender:emergencyContactResolution:)( (uint64_t)a1,  a2,  BYTE4(v71) & 1,  a4,  v58,  (uint64_t)v61,  (uint64_t)a6,  (uint64_t)v72,  v62,  v68,  v69,  v59,  v60,  v63,  v64,  v65,  (uint64_t)v66,  v67,  v68,  v69,  v70);
    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v58, v17);
    __swift_destroy_boxed_opaque_existential_1(&v73);
    return;
  }

{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  Swift::OpaquePointer v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  os_log_s *v26;
  uint64_t v27;
  os_log_type_t v28;
  uint8_t *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  uint8_t *v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  os_log_s *v39;
  uint64_t v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  os_log_s *v47;
  uint64_t v48;
  os_log_type_t v49;
  uint8_t *v50;
  void *v51;
  id v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  uint64_t v73;
  uint64_t v74[2];
  uint64_t v75;
  uint64_t v76;
  HIDWORD(v6__swift_destroy_boxed_opaque_existential_1(v0 + 5) = a8;
  HIDWORD(v71) = a3;
  uint64_t v68 = a9;
  uint64_t v69 = a10;
  uint64_t v17 = type metadata accessor for Locale(0LL);
  uint64_t v70 = *(void *)(v17 - 8);
  __chkstk_darwin();
  specialized static ReferenceContactResolutionWrapper.runCombinedSRRandCRR(siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)( (uint64_t)a1,  a4,  a5,  (uint64_t)a6,  a11,  (uint64_t)partial apply for closure #1 in static ReferenceContactResolutionWrapper.runCombinedSRRandCRR(siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:),  (uint64_t)partial apply for closure #1 in static ReferenceContactResolutionWrapper.resolveRREntity(rrEntity:siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:),  (uint64_t)specialized static ContactResolution.resolveContactQueries(contactQueries:siriKitIntent:app:nlIntent:sharedGlobals:),  (uint64_t)&unk_4166D8,  (uint64_t)partial apply for closure #1 in static Transformer<>.transformer(device:groupResolver:),  v64,  v65,  a5,  (uint64_t)&v64 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL),  a9,  a10,  v70,  v71,  (uint64_t)v72,  v73,  v74[0],  v74[1]);
  v20._rawValue = (void *)v19;
  uint64_t v22 = v21;
  if ((unint64_t)v19 >> 62)
  {
    if (v19 < 0) {
      uint64_t v43 = v19;
    }
    else {
      uint64_t v43 = v19 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    uint64_t v23 = (void *)_CocoaArrayWrapper.endIndex.getter(v43);
    swift_bridgeObjectRelease();
  }

  else
  {
    uint64_t v23 = *(void **)((char *)&dword_10 + (v19 & 0xFFFFFFFFFFFFF8LL));
  }

  id v72 = v23;
  if (v23)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v24 = type metadata accessor for Logger(0LL);
    uint64_t v25 = __swift_project_value_buffer(v24, (uint64_t)static Logger.siriPhone);
    uint64_t v26 = (os_log_s *)Logger.logObject.getter(v25);
    os_log_type_t v28 = static os_log_type_t.debug.getter(v26, v27);
    if (os_log_type_enabled(v26, v28))
    {
      id v29 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      uint64_t v64 = a2;
      uint64_t v30 = a1;
      uint64_t v31 = v17;
      uint64_t v32 = a4;
      uint64_t v33 = a6;
      uint64_t v34 = a7;
      id v35 = v29;
      *(_WORD *)id v29 = 0;
      _os_log_impl(&dword_0, v26, v28, "#ReferenceContactResolutionWrapper updated SKIntent with contacts", v29, 2u);
      os_log_type_t v36 = v35;
      a7 = v34;
      a6 = v33;
      a4 = v32;
      uint64_t v17 = v31;
      a1 = v30;
      a2 = v64;
      swift_slowDealloc(v36, -1LL, -1LL);
    }

    INStartVideoCallIntent.overwriteContacts(newContacts:)(v20);
  }

  if ((unint64_t)v22 >> 62)
  {
    if (v22 < 0) {
      uint64_t v44 = v22;
    }
    else {
      uint64_t v44 = v22 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    uint64_t v45 = _CocoaArrayWrapper.endIndex.getter(v44);
    swift_bridgeObjectRelease();
    if (v45) {
      goto LABEL_11;
    }
  }

  else if (*(void *)((char *)&dword_10 + (v22 & 0xFFFFFFFFFFFFF8LL)))
  {
LABEL_11:
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v37 = type metadata accessor for Logger(0LL);
    uint64_t v38 = __swift_project_value_buffer(v37, (uint64_t)static Logger.siriPhone);
    id v39 = (os_log_s *)Logger.logObject.getter(v38);
    os_log_type_t v41 = static os_log_type_t.debug.getter(v39, v40);
    if (os_log_type_enabled(v39, v41))
    {
      unint64_t v42 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)unint64_t v42 = 0;
      _os_log_impl(&dword_0, v39, v41, "#ReferenceContactResolutionWrapper updated SKIntent with groups", v42, 2u);
      swift_slowDealloc(v42, -1LL, -1LL);
    }

    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    goto LABEL_25;
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v72)
  {
    id v72 = a7;
    char v53 = BYTE4(v65) & 1;
    uint64_t v54 = a6[3];
    uint64_t v55 = a6[4];
    __swift_project_boxed_opaque_existential_1(a6, v54);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v55 + 8))(&v73, v54, v55);
    uint64_t v56 = v75;
    uint64_t v57 = v76;
    __swift_project_boxed_opaque_existential_1(&v73, v75);
    uint64_t v58 = v67;
    dispatch thunk of DeviceState.siriLocale.getter(v56, v57);
    uint64_t v59 = v66[3];
    uint64_t v60 = v66[4];
    uint64_t v61 = __swift_project_boxed_opaque_existential_1(v66, v59);
    LOBYTE(v6__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v53;
    specialized static ContactResolution.updateSiriKitIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:locale:nlIntent:sharedGlobals:multicardinalIndex:siriKitEventSender:emergencyContactResolution:)( (uint64_t)a1,  a2,  BYTE4(v71) & 1,  a4,  v58,  (uint64_t)v61,  (uint64_t)a6,  (uint64_t)v72,  v62,  v68,  v69,  v59,  v60,  v63,  v64,  v65,  (uint64_t)v66,  v67,  v68,  v69,  v70);
    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v58, v17);
    __swift_destroy_boxed_opaque_existential_1(&v73);
    return;
  }

{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  Swift::OpaquePointer v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  os_log_s *v26;
  uint64_t v27;
  os_log_type_t v28;
  uint8_t *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  uint8_t *v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  os_log_s *v39;
  uint64_t v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  os_log_s *v47;
  uint64_t v48;
  os_log_type_t v49;
  uint8_t *v50;
  void *v51;
  id v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  uint64_t v73;
  uint64_t v74[2];
  uint64_t v75;
  uint64_t v76;
  HIDWORD(v6__swift_destroy_boxed_opaque_existential_1(v0 + 5) = a8;
  HIDWORD(v71) = a3;
  uint64_t v68 = a9;
  uint64_t v69 = a10;
  uint64_t v17 = type metadata accessor for Locale(0LL);
  uint64_t v70 = *(void *)(v17 - 8);
  __chkstk_darwin();
  specialized static ReferenceContactResolutionWrapper.runCombinedSRRandCRR(siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)( (uint64_t)a1,  a4,  a5,  (uint64_t)a6,  a11,  (uint64_t)closure #1 in static ReferenceContactResolutionWrapper.runCombinedSRRandCRR(siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)partial apply,  (uint64_t)closure #1 in static ReferenceContactResolutionWrapper.resolveRREntity(rrEntity:siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)partial apply,  (uint64_t)specialized static ContactResolution.resolveContactQueries(contactQueries:siriKitIntent:app:nlIntent:sharedGlobals:),  (uint64_t)&unk_416840,  (uint64_t)closure #1 in static Transformer<>.transformer(device:groupResolver:)partial apply,  v64,  v65,  a5,  (uint64_t)&v64 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL),  a9,  a10,  v70,  v71,  (uint64_t)v72,  v73,  v74[0],  v74[1]);
  v20._rawValue = (void *)v19;
  uint64_t v22 = v21;
  if ((unint64_t)v19 >> 62)
  {
    if (v19 < 0) {
      uint64_t v43 = v19;
    }
    else {
      uint64_t v43 = v19 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    uint64_t v23 = (void *)_CocoaArrayWrapper.endIndex.getter(v43);
    swift_bridgeObjectRelease();
  }

  else
  {
    uint64_t v23 = *(void **)((char *)&dword_10 + (v19 & 0xFFFFFFFFFFFFF8LL));
  }

  id v72 = v23;
  if (v23)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v24 = type metadata accessor for Logger(0LL);
    uint64_t v25 = __swift_project_value_buffer(v24, (uint64_t)static Logger.siriPhone);
    uint64_t v26 = (os_log_s *)Logger.logObject.getter(v25);
    os_log_type_t v28 = static os_log_type_t.debug.getter(v26, v27);
    if (os_log_type_enabled(v26, v28))
    {
      id v29 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      uint64_t v64 = a2;
      uint64_t v30 = a1;
      uint64_t v31 = v17;
      uint64_t v32 = a4;
      uint64_t v33 = a6;
      uint64_t v34 = a7;
      id v35 = v29;
      *(_WORD *)id v29 = 0;
      _os_log_impl(&dword_0, v26, v28, "#ReferenceContactResolutionWrapper updated SKIntent with contacts", v29, 2u);
      os_log_type_t v36 = v35;
      a7 = v34;
      a6 = v33;
      a4 = v32;
      uint64_t v17 = v31;
      a1 = v30;
      a2 = v64;
      swift_slowDealloc(v36, -1LL, -1LL);
    }

    INStartCallIntent.overwriteContacts(newContacts:)(v20);
  }

  if ((unint64_t)v22 >> 62)
  {
    if (v22 < 0) {
      uint64_t v44 = v22;
    }
    else {
      uint64_t v44 = v22 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    uint64_t v45 = _CocoaArrayWrapper.endIndex.getter(v44);
    swift_bridgeObjectRelease();
    if (v45) {
      goto LABEL_11;
    }
  }

  else if (*(void *)((char *)&dword_10 + (v22 & 0xFFFFFFFFFFFFF8LL)))
  {
LABEL_11:
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v37 = type metadata accessor for Logger(0LL);
    uint64_t v38 = __swift_project_value_buffer(v37, (uint64_t)static Logger.siriPhone);
    id v39 = (os_log_s *)Logger.logObject.getter(v38);
    os_log_type_t v41 = static os_log_type_t.debug.getter(v39, v40);
    if (os_log_type_enabled(v39, v41))
    {
      unint64_t v42 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)unint64_t v42 = 0;
      _os_log_impl(&dword_0, v39, v41, "#ReferenceContactResolutionWrapper updated SKIntent with groups", v42, 2u);
      swift_slowDealloc(v42, -1LL, -1LL);
    }

    INStartCallIntent.overwriteCallGroups(newCallGroups:)((Swift::OpaquePointer)v22);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_25;
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v72)
  {
    id v72 = a7;
    char v53 = BYTE4(v65) & 1;
    uint64_t v54 = a6[3];
    uint64_t v55 = a6[4];
    __swift_project_boxed_opaque_existential_1(a6, v54);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v55 + 8))(&v73, v54, v55);
    uint64_t v56 = v75;
    uint64_t v57 = v76;
    __swift_project_boxed_opaque_existential_1(&v73, v75);
    uint64_t v58 = v67;
    dispatch thunk of DeviceState.siriLocale.getter(v56, v57);
    uint64_t v59 = v66[3];
    uint64_t v60 = v66[4];
    uint64_t v61 = __swift_project_boxed_opaque_existential_1(v66, v59);
    LOBYTE(v6__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v53;
    specialized static ContactResolution.updateSiriKitIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:locale:nlIntent:sharedGlobals:multicardinalIndex:siriKitEventSender:emergencyContactResolution:)( (uint64_t)a1,  a2,  BYTE4(v71) & 1,  a4,  v58,  (uint64_t)v61,  (uint64_t)a6,  (uint64_t)v72,  v62,  v68,  v69,  v59,  v60,  v63,  v64,  v65,  (uint64_t)v66,  v67,  v68,  v69,  v70);
    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v58, v17);
    __swift_destroy_boxed_opaque_existential_1(&v73);
    return;
  }

void specialized static ReferenceContactResolutionWrapper.resolveConcreteMatches(rrCandidates:siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)()
{
  uint64_t v31 = v3;
  uint64_t v32 = v4;
  uint64_t v6 = v5;
  uint64_t v29 = v7;
  uint64_t v30 = v8;
  uint64_t v27 = v9;
  uint64_t v28 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RRCandidate?);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_134();
  uint64_t v11 = type metadata accessor for RREntity(0LL);
  OUTLINED_FUNCTION_70_20();
  __chkstk_darwin();
  id v13 = (uint8_t *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  id v15 = (char *)&v25 - v14;
  uint64_t v16 = OUTLINED_FUNCTION_112_11();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_5_1();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v1, v6, v16);
  specialized Collection.first.getter();
  uint64_t v18 = type metadata accessor for RRCandidate(0LL);
  uint64_t EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v0, 1LL, v18);
  if ((_DWORD)EnumTagSinglePayload == 1)
  {
    outlined destroy of UUID?((uint64_t)v0, &demangling cache variable for type metadata for RRCandidate?);
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v20 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v20, (uint64_t)static Logger.siriPhone);
    os_log_type_t v21 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_29_4(v21))
    {
      uint64_t v22 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
      OUTLINED_FUNCTION_60_0(v22);
      OUTLINED_FUNCTION_5( &dword_0,  v0,  (os_log_type_t)v15,  "#ReferenceContactResolutionWrapper no entity resolved for rrCandidate",  v13);
      OUTLINED_FUNCTION_0_2((uint64_t)v13);
    }
  }

  else
  {
    uint64_t v26 = v17;
    RRCandidate.entity.getter(EnumTagSinglePayload);
    uint64_t v23 = OUTLINED_FUNCTION_221_1();
    OUTLINED_FUNCTION_11_20(v23, v24);
    (*(void (**)(char *, uint8_t *, uint64_t))(v2 + 32))(v15, v13, v11);
    uint64_t v17 = v26;
    specialized static ReferenceContactResolutionWrapper.resolveRREntity(rrEntity:siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)();
    OUTLINED_FUNCTION_247_2(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  }

  OUTLINED_FUNCTION_41_2(v1, *(uint64_t (**)(uint64_t, uint64_t))(v17 + 8));
  OUTLINED_FUNCTION_7_5();
}

void specialized static ReferenceContactResolutionWrapper.resolveCommonGroup(group:siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21)
{
  void (*v66)(__int128 *__return_ptr, void *);
  uint64_t v67;
  uint64_t v68;
  uint64_t (*v69)(uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  unint64_t v74;
  uint64_t v75;
  os_log_type_t v76;
  _WORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(void *, uint64_t, uint64_t, uint64_t, void *);
  void *v82;
  uint64_t v83;
  __int128 v84;
  __int128 v85[2];
  void v86[11];
  OUTLINED_FUNCTION_29_2();
  uint64_t v23 = v22;
  os_log_type_t v81 = v24;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  os_log_type_t v80 = v29;
  uint64_t v79 = v30;
  id v78 = v31;
  uint64_t v33 = v32;
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Transformer<[SmsGroup], [INCallGroup]?>);
  uint64_t v82 = *(void **)(v34 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  os_log_type_t v36 = (char *)&v78 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v83 = OUTLINED_FUNCTION_17_34();
  OUTLINED_FUNCTION_107_13();
  __chkstk_darwin();
  uint64_t v38 = (uint8_t *)&v78 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v39 = OUTLINED_FUNCTION_112_11();
  uint64_t v40 = OUTLINED_FUNCTION_234_2(v39, (uint64_t)&protocol witness table for ContactGroupResolver);
  uint64_t v41 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v39 - 8) + 16LL))(v40, v26, v39);
  uint64_t v42 = dispatch thunk of UsoEntity_common_Group.name.getter(v41);
  uint64_t v44 = (os_log_s *)v43;
  LOBYTE(v39) = specialized Optional<A>.isNilOrEmpty.getter(v42, v43);
  uint64_t v45 = OUTLINED_FUNCTION_62();
  if ((v39 & 1) == 0 || (v44 = v33, (uint64_t v46 = dispatch thunk of UsoEntity_common_Group.members.getter(v45)) == 0))
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v59 = OUTLINED_FUNCTION_15_1();
    __swift_project_value_buffer(v59, (uint64_t)static Logger.siriPhone);
    OUTLINED_FUNCTION_9();
    os_log_type_t v60 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_11_5(v60))
    {
      uint64_t v61 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
      OUTLINED_FUNCTION_16_32(v61);
      OUTLINED_FUNCTION_5( &dword_0,  v44,  (os_log_type_t)_swiftEmptyArrayStorage,  "#ReferenceContactResolutionWrapper resolved to a named common_Group",  v38);
      OUTLINED_FUNCTION_0_2((uint64_t)v38);
    }

    uint64_t v62 = v28[3];
    uint64_t v63 = v28[4];
    __swift_project_boxed_opaque_existential_1(v28, v62);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v63 + 8))(v86, v62, v63);
    OUTLINED_FUNCTION_219_3();
    OUTLINED_FUNCTION_252_1();
    uint64_t v64 = OUTLINED_FUNCTION_8_2(v23, 96LL);
    outlined init with take of AppSelectionSignalComponent(v85, v64 + 16);
    outlined init with take of AppSelectionSignalComponent(&v84, v64 + 56);
    uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [SmsGroup]);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INCallGroup]?);
    Transformer.init(transform:)(a21, v64, v65);
    OUTLINED_FUNCTION_78_18();
    uint64_t v66 = (void (*)(__int128 *__return_ptr, void *))Transformer.transform.getter(v34);
    uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<SmsGroup>);
    uint64_t v68 = OUTLINED_FUNCTION_8_2(v67, 72LL);
    *(_OWORD *)(v68 + 16) = xmmword_31D870;
    *(void *)(v68 + 56) = type metadata accessor for UsoEntity_common_Group(0LL);
    *(void *)(v68 + 64) = &protocol witness table for UsoEntity_common_Group;
    *(void *)(v68 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v33;
    v86[0] = v68;
    OUTLINED_FUNCTION_25_1();
    v66(v85, v86);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_27_53();
    OUTLINED_FUNCTION_37_25((uint64_t)v36, v69);
    goto LABEL_47;
  }

  uint64_t v47 = v46;
  v86[0] = _swiftEmptyArrayStorage;
  if ((unint64_t)v46 >> 62)
  {
    if (v46 >= 0) {
      uint64_t v44 = (os_log_s *)(v46 & 0xFFFFFFFFFFFFFF8LL);
    }
    else {
      uint64_t v44 = (os_log_s *)v46;
    }
    swift_bridgeObjectRetain();
    uint64_t v48 = OUTLINED_FUNCTION_61_1();
    if (v48) {
      goto LABEL_5;
    }
LABEL_25:
    OUTLINED_FUNCTION_4_1();
    uint64_t v70 = (uint64_t)_swiftEmptyArrayStorage;
    goto LABEL_26;
  }

  uint64_t v48 = *(void *)((char *)&dword_10 + (v46 & 0xFFFFFFFFFFFFFF8LL));
  swift_bridgeObjectRetain();
  if (!v48) {
    goto LABEL_25;
  }
LABEL_5:
  if (v48 < 1)
  {
    __break(1u);
    goto LABEL_49;
  }

  for (uint64_t i = 0LL; i != v48; ++i)
  {
    if ((v47 & 0xC000000000000001LL) != 0)
    {
      uint64_t v50 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v47);
      uint64_t v44 = (os_log_s *)v50;
    }

    else
    {
      uint64_t v44 = *(os_log_s **)(v47 + 8 * i + 32);
      uint64_t v50 = UsoEntity_common_Person.usoPerson.getter();
    }

    dispatch thunk of CodeGenListEntry.entry.getter(v85, v50);
    uint64_t v51 = OUTLINED_FUNCTION_38_1();
    uint64_t v52 = *(void *)&v85[0];
    if (*(void *)&v85[0])
    {
      uint64_t v44 = (os_log_s *)v86;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v51);
      unint64_t v54 = *(void *)((char *)&dword_10 + (v86[0] & 0xFFFFFFFFFFFFFF8LL));
      unint64_t v53 = *(void *)((char *)&dword_18 + (v86[0] & 0xFFFFFFFFFFFFFF8LL));
      if (v54 >= v53 >> 1) {
        OUTLINED_FUNCTION_3_25(v54 + 1, v53);
      }
      uint64_t v55 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v54, v52);
      specialized Array._endMutation()(v55, v56, v57, v58);
    }
  }

  OUTLINED_FUNCTION_4_1();
  uint64_t v70 = v86[0];
LABEL_26:
  OUTLINED_FUNCTION_4_1();
  if (!((unint64_t)v70 >> 62))
  {
    uint64_t v71 = *(void *)((char *)&dword_10 + (v70 & 0xFFFFFFFFFFFFF8LL));
    if (v71) {
      goto LABEL_28;
    }
LABEL_41:
    OUTLINED_FUNCTION_50();
    uint64_t v73 = _swiftEmptyArrayStorage;
LABEL_42:
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v75 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v75, (uint64_t)static Logger.siriPhone);
    uint64_t v76 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_29_4(v76))
    {
      uint64_t v77 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
      OUTLINED_FUNCTION_60_0(v77);
      OUTLINED_FUNCTION_5( &dword_0,  v44,  (os_log_type_t)v70,  "#ReferenceContactResolutionWrapper resolved to an unnamed common_Group",  (uint8_t *)v71);
      OUTLINED_FUNCTION_0_2(v71);
    }

    v81(v73, v78, v79, v80, v28);
    OUTLINED_FUNCTION_34_0();
LABEL_47:
    OUTLINED_FUNCTION_18();
    OUTLINED_FUNCTION_7_5();
    return;
  }

  if (v70 < 0) {
    uint64_t v44 = (os_log_s *)v70;
  }
  else {
    uint64_t v44 = (os_log_s *)(v70 & 0xFFFFFFFFFFFFFF8LL);
  }
  swift_bridgeObjectRetain();
  uint64_t v71 = OUTLINED_FUNCTION_61_1();
  OUTLINED_FUNCTION_50();
  if (!v71) {
    goto LABEL_41;
  }
LABEL_28:
  uint64_t v82 = v28;
  v86[0] = _swiftEmptyArrayStorage;
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  if ((v71 & 0x8000000000000000LL) == 0)
  {
    id v72 = 0LL;
    uint64_t v73 = (void *)v86[0];
    do
    {
      if ((v70 & 0xC000000000000001LL) != 0)
      {
        uint64_t v44 = (os_log_s *)specialized _ArrayBuffer._getElementSlowPath(_:)(v72, v70);
      }

      else
      {
        uint64_t v44 = *(os_log_s **)(v70 + 8 * v72 + 32);
        UsoEntity_common_Person.usoPerson.getter();
      }

      UsoEntity_common_Agent.toContactQuery()();
      OUTLINED_FUNCTION_38_1();
      v86[0] = v73;
      id v74 = v73[2];
      if (v74 >= v73[3] >> 1)
      {
        uint64_t v44 = (os_log_s *)v86;
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v73 = (void *)v86[0];
      }

      ++v72;
      v73[2] = v74 + 1;
      (*(void (**)(unint64_t, uint8_t *, uint64_t))(v21 + 32))( (unint64_t)v73 + ((*(unsigned __int8 *)(v21 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80))
      + *(void *)(v21 + 72) * v74,
        v38,
        v83);
    }

    while (v71 != v72);
    OUTLINED_FUNCTION_50();
    uint64_t v28 = v82;
    goto LABEL_42;
  }

uint64_t specialized static NLv4IntentConversion.updateSiriKitIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:nlIntent:sharedGlobals:contactGroupResolver:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(uint64_t, uint64_t, void, uint64_t, char *, void *, void *, void, char, uint64_t *, uint64_t, uint64_t, uint64_t))
{
  uint64_t v51 = v11;
  uint64_t v52 = v12;
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v47 = v19;
  uint64_t v48 = v20;
  int v45 = v21;
  uint64_t v46 = v22;
  uint64_t v23 = type metadata accessor for Locale(0LL);
  uint64_t v43 = *(void *)(v23 - 8);
  uint64_t v44 = v23;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  uint64_t v25 = (char *)&v43 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  OUTLINED_FUNCTION_112_11();
  OUTLINED_FUNCTION_5_93();
  __chkstk_darwin();
  OUTLINED_FUNCTION_5_1();
  OUTLINED_FUNCTION_245_1(v9, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 16));
  uint64_t v26 = v16[3];
  uint64_t v27 = v16[4];
  __swift_project_boxed_opaque_existential_1(v16, v26);
  uint64_t v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 56))(v26, v27);
  LOBYTE(v26) = (*(uint64_t (**)(uint64_t))(*(void *)v28 + 224LL))(v28);
  uint64_t v29 = OUTLINED_FUNCTION_38_1();
  if ((v26 & 1) != 0)
  {
    static SiriKitEventSender.current.getter(v50, v29);
    uint64_t v30 = type metadata accessor for EmergencyContactResolution();
    uint64_t v31 = OUTLINED_FUNCTION_8_2(v30, 16LL);
    v14(v46, v47, v45 & 1, v48, v18, v16, 0LL, 1LL, v50, v31, v9);
    OUTLINED_FUNCTION_38_1();
  }

  else
  {
    uint64_t v32 = v16[3];
    uint64_t v33 = v16[4];
    OUTLINED_FUNCTION_17_25(v16);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v33 + 8))(v50, v32, v33);
    uint64_t v34 = v50[3];
    uint64_t v35 = v50[4];
    OUTLINED_FUNCTION_17_25(v50);
    uint64_t v36 = dispatch thunk of DeviceState.siriLocale.getter(v34, v35);
    static SiriKitEventSender.current.getter(&v49, v36);
    uint64_t v37 = type metadata accessor for EmergencyContactResolution();
    uint64_t v38 = OUTLINED_FUNCTION_8_2(v37, 16LL);
    uint64_t v39 = v18[3];
    uint64_t v40 = v18[4];
    uint64_t v41 = OUTLINED_FUNCTION_17_25(v18);
    a9(v46, v47, v45 & 1, v48, v25, v41, v16, 0LL, 1, &v49, v38, v39, v40);
    OUTLINED_FUNCTION_38_1();
    __swift_destroy_boxed_opaque_existential_1(&v49);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v25, v44);
  }

  OUTLINED_FUNCTION_57_4();
  return OUTLINED_FUNCTION_41_2(v9, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
}

void specialized static ReferenceContactResolutionWrapper.runCombinedSRRandCRR(siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22)
{
  a19 = v23;
  a20 = v24;
  uint64_t v221 = v25;
  uint64_t v207 = v26;
  uint64_t v215 = v27;
  uint64_t v223 = v28;
  v224 = v29;
  uint64_t v31 = v30;
  uint64_t v205 = v32;
  uint64_t v33 = type metadata accessor for RREntity(0LL);
  OUTLINED_FUNCTION_16_2(v33, (uint64_t)&v229);
  uint64_t v220 = v34;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v36 = OUTLINED_FUNCTION_42_7(v35);
  uint64_t v37 = type metadata accessor for RRCandidate(v36);
  OUTLINED_FUNCTION_16_2(v37, (uint64_t)&a13);
  uint64_t v222 = v38;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  v226 = v39;
  __chkstk_darwin();
  OUTLINED_FUNCTION_19_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_26((uint64_t)&v200 - v40);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RRResult?);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v42 = OUTLINED_FUNCTION_42_7(v41);
  uint64_t v216 = type metadata accessor for RRResult(v42);
  uint64_t v43 = *(void *)(v216 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  OUTLINED_FUNCTION_19_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_19_2();
  __chkstk_darwin();
  uint64_t v45 = OUTLINED_FUNCTION_42_7((uint64_t)&v200 - v44);
  uint64_t v46 = type metadata accessor for MatchedResultsSetting(v45);
  uint64_t v47 = *(void *)(v46 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  OUTLINED_FUNCTION_19_2();
  __chkstk_darwin();
  uint64_t v49 = (char *)&v200 - v48;
  OUTLINED_FUNCTION_112_11();
  OUTLINED_FUNCTION_153_9();
  __chkstk_darwin();
  uint64_t v51 = (char *)&v200 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v52 = *(void (**)(void))(v22 + 16);
  v225 = v51;
  uint64_t v54 = v53;
  v52();
  unint64_t v55 = v31[4];
  OUTLINED_FUNCTION_49_0(v31);
  unint64_t v230 = OUTLINED_FUNCTION_6_2(*(uint64_t (**)(uint64_t, uint64_t))(v55 + 144));
  v217 = v49;
  uint64_t v218 = v47;
  uint64_t v56 = *(void (**)(void))(v47 + 104);
  uint64_t v219 = v46;
  ((void (*)(char *, void, uint64_t))v56)(v49, enum case for MatchedResultsSetting.defaultMatching(_:), v46);
  v206 = v31;
  OUTLINED_FUNCTION_203_4();
  if (PhoneCallNLIntent.hasOnlyCallVerb()() && App.isFirstParty()())
  {
    uint64_t v57 = static UsoUtils.buildDummyReferenceEntity()();
    if (v57)
    {
      uint64_t v58 = v57;
      uint64_t v59 = swift_retain();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v59);
      unint64_t v55 = *(void *)((char *)&dword_10 + (v230 & 0xFFFFFFFFFFFFFF8LL));
      unint64_t v60 = *(void *)((char *)&dword_18 + (v230 & 0xFFFFFFFFFFFFFF8LL));
      if (v55 >= v60 >> 1) {
        OUTLINED_FUNCTION_3_25(v55 + 1, v60);
      }
      uint64_t v61 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v55, v58);
      specialized Array._endMutation()(v61, v62, v63, v64);
      OUTLINED_FUNCTION_22();
      uint64_t v65 = OUTLINED_FUNCTION_221_1();
      OUTLINED_FUNCTION_41_2(v65, v66);
      uint64_t v67 = OUTLINED_FUNCTION_264_2();
      v56(v67);
    }
  }

  uint64_t v68 = (os_log_s *)v230;
  if (v230 >> 62)
  {
    OUTLINED_FUNCTION_8_1();
    uint64_t v69 = OUTLINED_FUNCTION_61_1();
    OUTLINED_FUNCTION_39();
  }

  else
  {
    uint64_t v69 = *(void *)((char *)&dword_10 + (v230 & 0xFFFFFFFFFFFFF8LL));
  }

  uint64_t v70 = v54;
  uint64_t v71 = (uint64_t)v225;
  uint64_t v72 = v216;
  if (v69)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v202 = v43;
    uint64_t v73 = OUTLINED_FUNCTION_15_1();
    uint64_t v200 = __swift_project_value_buffer(v73, (uint64_t)static Logger.siriPhone);
    id v74 = (os_log_s *)OUTLINED_FUNCTION_9();
    os_log_type_t v76 = static os_log_type_t.debug.getter(v74, v75);
    BOOL v77 = os_log_type_enabled(v74, v76);
    uint64_t v204 = v70;
    uint64_t v208 = v22;
    if (v77)
    {
      id v78 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v79 = OUTLINED_FUNCTION_7_0(32LL);
      v228[0] = v79;
      *(_DWORD *)id v78 = 136315138;
      uint64_t v80 = (uint64_t)v217;
      OUTLINED_FUNCTION_22_0((uint64_t)v217, (uint64_t)v227);
      os_log_type_t v81 = v211;
      uint64_t v82 = v72;
      uint64_t v83 = v219;
      (*(void (**)(uint8_t *, uint64_t, uint64_t))(v218 + 16))(v211, v80, v219);
      uint64_t v84 = v83;
      uint64_t v72 = v82;
      uint64_t v85 = String.init<A>(describing:)(v81, v84);
      uint64_t v87 = OUTLINED_FUNCTION_80(v85, v86);
      OUTLINED_FUNCTION_92(v87);
      OUTLINED_FUNCTION_280_1();
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v88, v89, v90, v78 + 12);
      OUTLINED_FUNCTION_4_1();
      OUTLINED_FUNCTION_57_0( &dword_0,  v74,  v76,  "#ReferenceContactResolutionWrapper Querying SRR with match setting: %s",  v78);
      OUTLINED_FUNCTION_17_0(v79);
      OUTLINED_FUNCTION_0_2(v79);
      uint64_t v91 = (uint64_t)v78;
      uint64_t v22 = v208;
      OUTLINED_FUNCTION_0_2(v91);
    }

    else
    {

      uint64_t v80 = (uint64_t)v217;
    }

    uint64_t v96 = v224;
    OUTLINED_FUNCTION_49( v92,  (unint64_t *)&lazy cache variable for type metadata for INStartCallIntent,  &OBJC_CLASS___INStartCallIntent_ptr);
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    outlined bridged method (pb) of @objc static INIntent.typeName()(ObjCClassFromMetadata);
    uint64_t v98 = __chkstk_darwin();
    *(&v200 - 4) = (uint64_t)&v230;
    *(&v200 - 3) = v80;
    uint64_t v198 = (uint64_t)v96;
    static SiriKitEventSender.current.getter(v228, v98);
    specialized static PhoneSelfPerformanceLogger.signpost<A>(domainExecutionType:taskType:siriKitEventSender:_:)();
    OUTLINED_FUNCTION_34_0();
    OUTLINED_FUNCTION_50_15();
    uint64_t v99 = v214;
    specialized Collection.first.getter();
    OUTLINED_FUNCTION_39();
    if (__swift_getEnumTagSinglePayload(v99, 1LL, v72) == 1)
    {
      outlined destroy of UUID?(v99, &demangling cache variable for type metadata for RRResult?);
      uint64_t v71 = (uint64_t)v225;
LABEL_22:
      uint64_t v100 = OUTLINED_FUNCTION_221_1();
      v101(v100, v219);
      goto LABEL_48;
    }

    uint64_t v215 = a22;
    uint64_t v102 = a21;
    uint64_t v103 = v202;
    uint64_t v104 = v213;
    (*(void (**)(os_log_s *, uint64_t, uint64_t))(v202 + 32))(v213, v99, v72);
    uint64_t v105 = *(os_log_s **)(v103 + 16);
    uint64_t v106 = v212;
    ((void (*)(uint8_t *, os_log_s *, uint64_t))v105)(v212, v104, v72);
    int v107 = (*(uint64_t (**)(uint8_t *, uint64_t))(v103 + 88))(v106, v72);
    if (v107 == enum case for RRResult.foundMatch(_:))
    {
      uint64_t v214 = v102;
      OUTLINED_FUNCTION_114_10();
      uint64_t v108 = v222;
      uint64_t v109 = v209;
      uint64_t v110 = v210;
      (*(void (**)(os_log_s *, uint8_t *, uint64_t))(v222 + 32))(v209, v106, v210);
      uint64_t v111 = v203;
      v226 = *(void (**)(uint64_t, os_log_s *, uint64_t))(v108 + 16);
      v226(v203, v109, v110);
      OUTLINED_FUNCTION_68_27();
      os_log_type_t v112 = OUTLINED_FUNCTION_41();
      if (OUTLINED_FUNCTION_7_7(v112))
      {
        uint64_t v113 = v111;
        uint64_t v114 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
        uint64_t v115 = OUTLINED_FUNCTION_7_0(32LL);
        v228[0] = v115;
        *(_DWORD *)uint64_t v114 = 136315138;
        lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type RRCandidate and conformance RRCandidate,  (uint64_t (*)(uint64_t))&type metadata accessor for RRCandidate,  (uint64_t)&protocol conformance descriptor for RRCandidate);
        uint64_t v117 = dispatch thunk of CustomStringConvertible.description.getter(v110, v116);
        uint64_t v119 = OUTLINED_FUNCTION_80(v117, v118);
        uint64_t v120 = OUTLINED_FUNCTION_181_4(v119);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v120, v121, v122, v114 + 12);
        OUTLINED_FUNCTION_62();
        OUTLINED_FUNCTION_274_3(v113);
        OUTLINED_FUNCTION_57_0( &dword_0,  v109,  (os_log_type_t)v102,  "#ReferenceContactResolutionWrapper .foundMatch %s",  v114);
        OUTLINED_FUNCTION_17_0(v115);
        uint64_t v123 = v115;
        uint64_t v103 = v202;
        OUTLINED_FUNCTION_0_2(v123);
        OUTLINED_FUNCTION_0_2((uint64_t)v114);
      }

      else
      {
        OUTLINED_FUNCTION_274_3(v111);
      }

      uint64_t v142 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<RRCandidate>);
      uint64_t v143 = *(unsigned __int8 *)(v108 + 80);
      uint64_t v144 = (v143 + 32) & ~v143;
      uint64_t v145 = swift_allocObject(v142, v144 + *(void *)(v108 + 72), v143 | 7);
      *(_OWORD *)(v145 + 16) = xmmword_31D870;
      uint64_t v146 = v145 + v144;
      uint64_t v147 = (uint64_t)v209;
      v226(v146, v209, v110);
      OUTLINED_FUNCTION_131_9();
      uint64_t v71 = (uint64_t)v225;
      specialized static ReferenceContactResolutionWrapper.resolveConcreteMatches(rrCandidates:siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)();
      swift_setDeallocating(v145);
      specialized _ContiguousArrayStorage.__deallocating_deinit();
      OUTLINED_FUNCTION_274_3(v147);
      (*(void (**)(os_log_s *, uint64_t))(v103 + 8))(v213, v216);
      OUTLINED_FUNCTION_117_11();
      OUTLINED_FUNCTION_280_1();
      goto LABEL_47;
    }

    uint64_t v124 = v210;
    if (v107 != enum case for RRResult.needsDisambiguation(_:))
    {
      if (v107 != enum case for RRResult.foundMatchPlural(_:))
      {
        if (v107 == enum case for RRResult.noMatch(_:))
        {
          OUTLINED_FUNCTION_68_27();
          os_log_type_t v173 = OUTLINED_FUNCTION_41();
          BOOL v174 = OUTLINED_FUNCTION_10(v173);
          uint64_t v22 = v208;
          uint64_t v71 = (uint64_t)v225;
          if (v174)
          {
            v175 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
            OUTLINED_FUNCTION_47(v175);
            OUTLINED_FUNCTION_5( &dword_0,  v105,  (os_log_type_t)v104,  "#ReferenceContactResolutionWrapper found a .nomatch",  v106);
            OUTLINED_FUNCTION_0_2((uint64_t)v106);
          }

          OUTLINED_FUNCTION_122_11(*(uint64_t (**)(void, uint64_t))(v103 + 8));
        }

        else
        {
          uint64_t v185 = v201;
          ((void (*)(uint64_t, os_log_s *, uint64_t))v105)(v201, v213, v72);
          OUTLINED_FUNCTION_68_27();
          os_log_type_t v186 = OUTLINED_FUNCTION_59_8();
          BOOL v187 = OUTLINED_FUNCTION_7_7(v186);
          uint64_t v71 = (uint64_t)v225;
          if (v187)
          {
            v188 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
            uint64_t v189 = OUTLINED_FUNCTION_7_0(32LL);
            v228[0] = v189;
            *(_DWORD *)v188 = 136315138;
            lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type RRResult and conformance RRResult,  (uint64_t (*)(uint64_t))&type metadata accessor for RRResult,  (uint64_t)&protocol conformance descriptor for RRResult);
            uint64_t v191 = dispatch thunk of CustomStringConvertible.description.getter(v72, v190);
            uint64_t v193 = OUTLINED_FUNCTION_80(v191, v192);
            uint64_t v194 = OUTLINED_FUNCTION_181_4(v193);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(v194, v195, v196, v188 + 12);
            OUTLINED_FUNCTION_62();
            uint64_t v71 = (uint64_t)v225;
            OUTLINED_FUNCTION_201_4(v185);
            OUTLINED_FUNCTION_57_0( &dword_0,  v105,  (os_log_type_t)v102,  "#ReferenceContactResolutionWrapper dropping result of type %s!",  v188);
            OUTLINED_FUNCTION_17_0(v189);
            OUTLINED_FUNCTION_0_2(v189);
            uint64_t v197 = (uint64_t)v188;
            uint64_t v106 = v212;
            OUTLINED_FUNCTION_0_2(v197);
          }

          else
          {

            OUTLINED_FUNCTION_201_4(v185);
          }

          OUTLINED_FUNCTION_201_4((uint64_t)v213);
          uint64_t v22 = v208;
          OUTLINED_FUNCTION_201_4((uint64_t)v106);
        }

        goto LABEL_22;
      }

      uint64_t v214 = v102;
      OUTLINED_FUNCTION_114_10();
      uint64_t v148 = *(void *)v106;
      OUTLINED_FUNCTION_11(*(void *)v106);
      OUTLINED_FUNCTION_68_27();
      os_log_type_t v149 = OUTLINED_FUNCTION_6_0();
      if (OUTLINED_FUNCTION_29_4(v149))
      {
        v150 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
        uint64_t v151 = OUTLINED_FUNCTION_7_0(32LL);
        v228[0] = v151;
        *(_DWORD *)v150 = 136315138;
        v226 = (void (*)(uint64_t, os_log_s *, uint64_t))(v150 + 4);
        uint64_t v152 = OUTLINED_FUNCTION_8_1();
        uint64_t v153 = Array.description.getter(v152, v124);
        unint64_t v155 = v154;
        OUTLINED_FUNCTION_39();
        uint64_t v156 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v153, v155, v228);
        OUTLINED_FUNCTION_92(v156);
        OUTLINED_FUNCTION_280_1();
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v157, v158, v159, v160);
        OUTLINED_FUNCTION_7_4(v148);
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_57_0( &dword_0,  v104,  (os_log_type_t)v102,  "#ReferenceContactResolutionWrapper .foundMatchPlural %s",  v150);
        OUTLINED_FUNCTION_17_0(v151);
        uint64_t v161 = v151;
        uint64_t v103 = v202;
        OUTLINED_FUNCTION_0_2(v161);
        OUTLINED_FUNCTION_0_2((uint64_t)v150);
      }

      else
      {

        OUTLINED_FUNCTION_7_4(v148);
      }

      uint64_t v199 = v215;
      uint64_t v198 = v214;
      uint64_t v71 = (uint64_t)v225;
      specialized static ReferenceContactResolutionWrapper.resolveConcreteMatches(rrCandidates:siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)();
      OUTLINED_FUNCTION_39();
      OUTLINED_FUNCTION_122_11(*(uint64_t (**)(void, uint64_t))(v103 + 8));
      OUTLINED_FUNCTION_117_11();
LABEL_47:
      uint64_t v22 = v208;
      goto LABEL_48;
    }

    OUTLINED_FUNCTION_114_10();
    uint64_t v125 = *(void *)v106;
    OUTLINED_FUNCTION_11(*(void *)v106);
    OUTLINED_FUNCTION_68_27();
    os_log_type_t v126 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_7(v126))
    {
      uint64_t v127 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v214 = OUTLINED_FUNCTION_7_0(32LL);
      v228[0] = v214;
      v212 = v127;
      *(_DWORD *)uint64_t v127 = 136315138;
      uint64_t v128 = v127 + 12;
      v211 = v127 + 4;
      uint64_t v129 = swift_bridgeObjectRetain();
      uint64_t v130 = Array.description.getter(v129, v210);
      unint64_t v132 = v131;
      swift_bridgeObjectRelease();
      uint64_t v133 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v130, v132, v228);
      uint64_t v134 = OUTLINED_FUNCTION_92(v133);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v134, v135, v211, v128);
      OUTLINED_FUNCTION_7_4(v125);
      OUTLINED_FUNCTION_39();
      OUTLINED_FUNCTION_243_2();
      BOOL v136 = v212;
      OUTLINED_FUNCTION_57_0(v137, v138, v139, v140, v212);
      uint64_t v141 = v214;
      OUTLINED_FUNCTION_17_0(v214);
      OUTLINED_FUNCTION_0_2(v141);
      OUTLINED_FUNCTION_0_2((uint64_t)v136);
    }

    else
    {

      OUTLINED_FUNCTION_7_4(v125);
    }

    v228[0] = (uint64_t)_swiftEmptyArrayStorage;
    uint64_t v162 = *(void *)(v125 + 16);
    v163 = v226;
    if (v162)
    {
      unint64_t v164 = (*(unsigned __int8 *)(v222 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v222 + 80);
      v209 = (os_log_s *)v125;
      unint64_t v165 = v125 + v164;
      v211 = *(uint8_t **)(v222 + 72);
      v212 = *(uint8_t **)(v222 + 16);
      uint64_t v166 = v210;
      uint64_t v214 = v102;
      do
      {
        uint64_t v167 = ((uint64_t (*)(void, unint64_t, uint64_t))v212)(v163, v165, v166);
        RRCandidate.entity.getter(v167);
        OUTLINED_FUNCTION_131_9();
        specialized static ReferenceContactResolutionWrapper.resolveRREntity(rrEntity:siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)();
        uint64_t v169 = v168;
        OUTLINED_FUNCTION_247_2(*(uint64_t (**)(uint64_t, uint64_t))(v220 + 8));
        OUTLINED_FUNCTION_62();
        specialized Array.append<A>(contentsOf:)(v169);
        v163 = v226;
        uint64_t v170 = OUTLINED_FUNCTION_221_1();
        OUTLINED_FUNCTION_37_25(v170, v171);
        v165 += (unint64_t)v211;
        --v162;
      }

      while (v162);
      OUTLINED_FUNCTION_18_36((uint64_t)&a12);
      v172 = (void *)v228[0];
      uint64_t v96 = v224;
    }

    else
    {
      swift_bridgeObjectRelease();
      v172 = _swiftEmptyArrayStorage;
    }

    static ReferenceContactResolutionWrapper.dedupePersons(persons:sharedGlobals:)((unint64_t)v172, v96);
    uint64_t v177 = v176;
    OUTLINED_FUNCTION_39();
    v228[0] = v177;
    Class v178 = static ReferenceContactResolutionWrapper.skeletonINPerson(persons:)();
    OUTLINED_FUNCTION_62();
    uint64_t v179 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v180 = OUTLINED_FUNCTION_8_2(v179, 40LL);
    *(_OWORD *)(v180 + 16) = xmmword_31FE60;
    *(void *)(v180 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v178;
    v227[3] = v180;
    specialized Array._endMutation()(v180, v181, v182, v183);
    OUTLINED_FUNCTION_27_53();
    OUTLINED_FUNCTION_122_11(v184);
    OUTLINED_FUNCTION_117_11();
    OUTLINED_FUNCTION_280_1();
    uint64_t v22 = v208;
    uint64_t v71 = (uint64_t)v225;
  }

  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v93 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v93, (uint64_t)static Logger.siriPhone);
    os_log_type_t v94 = OUTLINED_FUNCTION_41();
    if (OUTLINED_FUNCTION_10(v94))
    {
      uint64_t v95 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
      OUTLINED_FUNCTION_47(v95);
      OUTLINED_FUNCTION_5( &dword_0,  v68,  OS_LOG_TYPE_DEFAULT,  "#ReferenceContactResolutionWrapper - No references found",  (uint8_t *)v55);
      OUTLINED_FUNCTION_0_2(v55);
    }

    (*(void (**)(char *, uint64_t))(v218 + 8))(v217, v219);
  }

void specialized static ReferenceContactResolutionWrapper.resolveRREntity(rrEntity:siriKitIntent:app:nlIntent:sharedGlobals:contactGroupResolver:)()
{
  void *(*v2)(uint64_t *__return_ptr, uint64_t *);
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  os_log_s *v8;
  os_log_s *v9;
  uint64_t v10;
  os_log_type_t v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint8_t *v14;
  uint64_t v15;
  void *v16;
  os_log_s *v17;
  id v18;
  uint64_t v19;
  os_log_type_t v20;
  _WORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  os_log_type_t v31;
  _WORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  os_log_type_t v42;
  uint8_t *v43;
  void v44[7];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  void *(*v50)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v51;
  void *v52;
  OUTLINED_FUNCTION_29_2();
  uint64_t v49 = v3;
  uint64_t v50 = v2;
  uint64_t v47 = v4;
  uint64_t v48 = v5;
  uint64_t v45 = v6;
  uint64_t v46 = v7;
  uint64_t v9 = v8;
  OUTLINED_FUNCTION_112_11();
  OUTLINED_FUNCTION_153_9();
  __chkstk_darwin();
  OUTLINED_FUNCTION_7_6();
  OUTLINED_FUNCTION_245_1(v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
  static Signpost.begin(_:)();
  uint64_t v51 = v10;
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  id v15 = OUTLINED_FUNCTION_49( v10,  (unint64_t *)&lazy cache variable for type metadata for INPerson,  &OBJC_CLASS___INPerson_ptr);
  uint64_t v16 = (void *)RREntity.convertData<A>(to:)(v15, v15);
  Signpost.OpenSignpost.end()();
  if (v16)
  {
    uint64_t v17 = (os_log_s *)one-time initialization token for siriPhone;
    uint64_t v18 = v16;
    if (v17 != (os_log_s *)-1LL) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v19 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v19, (uint64_t)static Logger.siriPhone);
    uint64_t v20 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_11_5(v20))
    {
      int v21 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
      OUTLINED_FUNCTION_16_32(v21);
      OUTLINED_FUNCTION_5(&dword_0, v17, v12, "#ReferenceContactResolutionWrapper resolved to an INPerson", v14);
      OUTLINED_FUNCTION_0_2((uint64_t)v14);
    }

    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v23 = OUTLINED_FUNCTION_8_2(v22, 40LL);
    *(_OWORD *)(v23 + 16) = xmmword_31FE60;
    *(void *)(v23 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v18;
    uint64_t v52 = (void *)v23;
    specialized Array._endMutation()(v23, v24, v25, v26);
    uint64_t v27 = v52;
  }

  else
  {
    OUTLINED_FUNCTION_191_3();
    uint64_t v28 = OUTLINED_FUNCTION_20_35();
    uint64_t v29 = type metadata accessor for UsoEntity_common_Person(v28);
    OUTLINED_FUNCTION_2_60(v29);
    OUTLINED_FUNCTION_38_1();
    if (v52)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v30 = OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_12_1(v30, (uint64_t)static Logger.siriPhone);
      uint64_t v31 = OUTLINED_FUNCTION_6_0();
      if (OUTLINED_FUNCTION_11_5(v31))
      {
        uint64_t v32 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
        OUTLINED_FUNCTION_16_32(v32);
        OUTLINED_FUNCTION_5(&dword_0, v9, v12, "#ReferenceContactResolutionWrapper resolved to a common_Person", v14);
        OUTLINED_FUNCTION_0_2((uint64_t)v14);
      }

      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ContactQuery>);
      uint64_t v33 = OUTLINED_FUNCTION_17_34();
      uint64_t v34 = OUTLINED_FUNCTION_40_19(v33);
      *(_OWORD *)(v34 + 16) = xmmword_31D870;
      UsoEntity_common_Person.toContactQuery()(v34);
      uint64_t v27 = (void *)v49(v34, v45, v46, v47, v48);
      OUTLINED_FUNCTION_129();
      OUTLINED_FUNCTION_76();
    }

    else
    {
      OUTLINED_FUNCTION_191_3();
      uint64_t v35 = OUTLINED_FUNCTION_20_35();
      uint64_t v36 = type metadata accessor for UsoEntity_common_Group(v35);
      OUTLINED_FUNCTION_2_60(v36);
      OUTLINED_FUNCTION_38_1();
      OUTLINED_FUNCTION_191_3();
      uint64_t v37 = OUTLINED_FUNCTION_20_35();
      uint64_t v38 = type metadata accessor for UsoEntity_common_Agent(v37);
      OUTLINED_FUNCTION_2_60(v38);
      OUTLINED_FUNCTION_38_1();
      OUTLINED_FUNCTION_191_3();
      uint64_t v39 = OUTLINED_FUNCTION_20_35();
      uint64_t v40 = type metadata accessor for UsoEntity_common_App(v39);
      OUTLINED_FUNCTION_2_60(v40);
      OUTLINED_FUNCTION_38_1();
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v41 = OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_12_1(v41, (uint64_t)static Logger.siriPhone);
      uint64_t v42 = OUTLINED_FUNCTION_24();
      if (OUTLINED_FUNCTION_93(v42))
      {
        uint64_t v43 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
        *(_WORD *)uint64_t v43 = 0;
        OUTLINED_FUNCTION_5( &dword_0,  v9,  OS_LOG_TYPE_DEFAULT,  "#ReferenceContactResolutionWrapper resolved entity was not recognized as a person or group",  v43);
        OUTLINED_FUNCTION_0_2((uint64_t)v43);
      }

      uint64_t v27 = _swiftEmptyArrayStorage;
    }
  }

  __chkstk_darwin();
  v44[2] = v9;
  specialized Sequence.compactMap<A>(_:)(v50, (uint64_t)v44, (unint64_t)v27);
  OUTLINED_FUNCTION_87_0();
  swift_release(v51);

  OUTLINED_FUNCTION_41_2(v0, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_7_5();
}

uint64_t specialized IncomingCallFlow.__allocating_init(app:strategy:sharedGlobals:)( uint64_t a1, const void *a2, void *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallFlowState<INAnswerCallIntent, INAnswerCallIntentResponse>);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  memcpy(v15, a2, sizeof(v15));
  swift_storeEnumTagMultiPayload(v7, v5, 5LL);
  outlined init with copy of SharedGlobalsProviding((uint64_t)a3, (uint64_t)&v14);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IncomingCallFlow<INAnswerCallIntent, INAnswerCallIntentResponse>);
  swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  outlined init with copy of AnswerCallOutputStrategy((uint64_t)v15, (uint64_t)&v13);
  specialized IncomingCallFlow.init(state:app:strategy:sharedGlobals:)();
  uint64_t v10 = v9;
  __swift_destroy_boxed_opaque_existential_1(a3);
  outlined destroy of AnswerCallOutputStrategy((uint64_t)v15);
  return v10;
}

uint64_t specialized IncomingCallFlow.__allocating_init(app:strategy:sharedGlobals:)( uint64_t a1, uint64_t a2, void *a3)
{
  __int128 v6 = *(_OWORD *)(a2 + 16);
  v14[0] = *(_OWORD *)a2;
  v14[1] = v6;
  v14[2] = *(_OWORD *)(a2 + 32);
  char v15 = *(_BYTE *)(a2 + 48);
  swift_storeEnumTagMultiPayload(&v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL)], v7, 5LL);
  outlined init with copy of SharedGlobalsProviding((uint64_t)a3, (uint64_t)v13);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IncomingCallFlow<INIdentifyIncomingCallerIntent, INIdentifyIncomingCallerIntentResponse>);
  swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  outlined init with copy of IdentifyIncomingCallerOutputStrategy((uint64_t)v14, (uint64_t)v12);
  specialized IncomingCallFlow.init(state:app:strategy:sharedGlobals:)();
  uint64_t v10 = v9;
  __swift_destroy_boxed_opaque_existential_1(a3);
  outlined destroy of IdentifyIncomingCallerOutputStrategy((uint64_t)v14);
  return v10;
}

void lazy protocol witness table accessor for type IncomingCallFlow<INIdentifyIncomingCallerIntent, INIdentifyIncomingCallerIntentResponse> and conformance PhoneFlow<A, B>( unint64_t *a1, uint64_t *a2)
{
  if (!*a1)
  {
    uint64_t v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    atomic_store(swift_getWitnessTable(&protocol conformance descriptor for PhoneFlow<A, B>, v3), a1);
  }

  OUTLINED_FUNCTION_2();
}

void specialized IncomingCallFlow.init(state:app:strategy:sharedGlobals:)()
{
  uint64_t v7 = &type metadata for IdentifyIncomingCallerOutputStrategy;
  uint64_t v8 = &protocol witness table for IdentifyIncomingCallerOutputStrategy;
  uint64_t v2 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_416890, 65LL);
  uint64_t v6 = v2;
  __int128 v3 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)v0;
  *(_OWORD *)(v2 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v3;
  *(_OWORD *)(v2 + 48) = *(_OWORD *)(v0 + 32);
  *(_BYTE *)(v2 + 64) = *(_BYTE *)(v0 + 48);
  OUTLINED_FUNCTION_170_5();
  OUTLINED_FUNCTION_128_10();
  OUTLINED_FUNCTION_132(v4, (uint64_t)v5);
  specialized PhoneFlow.init(state:sharedGlobals:)(v1, v5);
  OUTLINED_FUNCTION_144_8();
  OUTLINED_FUNCTION_58();
}

{
  const void *v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3[2];
  uint64_t v4;
  ValueMetadata *v5;
  _UNKNOWN **v6;
  OUTLINED_FUNCTION_193_3();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallFlowState<INAnswerCallIntent, INAnswerCallIntentResponse>);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_135();
  uint64_t v5 = &type metadata for AnswerCallOutputStrategy;
  uint64_t v6 = &protocol witness table for AnswerCallOutputStrategy;
  uint64_t v4 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_416868, 192LL);
  memcpy((void *)(v4 + 16), v0, 0xB0uLL);
  OUTLINED_FUNCTION_170_5();
  OUTLINED_FUNCTION_128_10();
  OUTLINED_FUNCTION_132(v2, (uint64_t)v3);
  specialized PhoneFlow.init(state:sharedGlobals:)(v1, v3);
  OUTLINED_FUNCTION_144_8();
  OUTLINED_FUNCTION_58();
}

ValueMetadata *type metadata accessor for PhoneCallRequestSupportPolicy()
{
  return &type metadata for PhoneCallRequestSupportPolicy;
}

uint64_t sub_2C610C()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_2C615C()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_2C6184()
{
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 72));
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 112));
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 152));
  return swift_deallocObject(v0, 192LL, 7LL);
}

uint64_t sub_2C61C8()
{
  return objectdestroy_21Tm_0(65LL);
}

void closure #1 in static Transformer<>.transformer(sharedGlobals:app:previousIntent:previousIntentResponse:)partial apply()
{
}

id OUTLINED_FUNCTION_3_121(id a1)
{
  return a1;
}

uint64_t OUTLINED_FUNCTION_11_88( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  a10 = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(&a10, v12 + 8, v11, v10 + 12);
}

uint64_t OUTLINED_FUNCTION_18_67()
{
  return (*(uint64_t (**)(uint64_t, void, void))(v0[2] + 16LL))(v1, v0[4], v0[3]);
}

uint64_t OUTLINED_FUNCTION_20_66()
{
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  __swift_project_boxed_opaque_existential_1(v0, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 96))(v2, v3);
}

uint64_t OUTLINED_FUNCTION_22_60( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  a10 = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(&a10, v12, v10, v11 + 22);
}

void OUTLINED_FUNCTION_23_62(int a1, int a2, uint64_t a3, id a4)
{
}

uint64_t OUTLINED_FUNCTION_28_56()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_29_48()
{
  uint64_t v1 = *(void *)(v0 - 96);
  uint64_t v2 = *(void *)(v0 - 88);
  __swift_project_boxed_opaque_existential_1((void *)(v0 - 120), v1);
  return DeviceState.siriInputLocale.getter(v1, v2);
}

uint64_t OUTLINED_FUNCTION_30_47()
{
  uint64_t v2 = v0[3];
  uint64_t v1 = v0[4];
  __swift_project_boxed_opaque_existential_1(v0, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v1);
}

void OUTLINED_FUNCTION_31_45(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
}

uint64_t OUTLINED_FUNCTION_32_49()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_33_54(uint64_t a1, uint64_t a2)
{
}

void OUTLINED_FUNCTION_36_39(float a1)
{
  *uint64_t v1 = a1;
}

uint64_t OUTLINED_FUNCTION_41_39(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return _assertionFailure(_:_:file:line:flags:)(a1, 11LL, 2LL, 0xD000000000000032LL, v6, a6, 42LL, 2LL);
}

void OUTLINED_FUNCTION_42_27()
{
}

void OUTLINED_FUNCTION_44_33()
{
}

uint64_t OUTLINED_FUNCTION_46_33()
{
  return (*(uint64_t (**)(uint64_t, void))(*v0 + 8LL))(v1, v0[1]);
}

uint64_t OUTLINED_FUNCTION_47_27(uint64_t a1)
{
  *(void *)(v3 - 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(v3 - 72, v3 - 64, v2, v1);
}

uint64_t OUTLINED_FUNCTION_48_34()
{
  return swift_arrayDestroy(v0, 2LL);
}

  ;
}

uint64_t OUTLINED_FUNCTION_51_24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _stringCompareWithSmolCheck(_:_:expecting:)(v4, v3, a3, v5, 0LL);
}

uint64_t OUTLINED_FUNCTION_53_31(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v3, v4, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_55_29()
{
  return type metadata accessor for ContactResolverConfigHashable(0LL);
}

uint64_t OUTLINED_FUNCTION_56_25()
{
  return type metadata accessor for Locale(0LL);
}

void OUTLINED_FUNCTION_58_26()
{
  *(void *)(v1 - 19__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v0;
}

  ;
}

uint64_t OUTLINED_FUNCTION_61_26()
{
  return Input.init(parse:)(v0);
}

uint64_t OUTLINED_FUNCTION_63_26()
{
  return static SiriKitLifecycle._logCrashToEventBus(_:)(0xD000000000000032LL, (v0 - 32) | 0x8000000000000000LL);
}

uint64_t OUTLINED_FUNCTION_68_27()
{
  return Logger.logObject.getter();
}

uint64_t OUTLINED_FUNCTION_69_24()
{
  return v1(v0);
}

  ;
}

void OUTLINED_FUNCTION_74_21(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 176) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
}

uint64_t OUTLINED_FUNCTION_75_26()
{
  return 0LL;
}

  ;
}

void OUTLINED_FUNCTION_78_25(uint64_t a1, uint64_t a2)
{
}

id OUTLINED_FUNCTION_80_17(uint64_t a1)
{
  *(void *)(a1 + 16) = v2;
  *(void *)(a1 + 24) = v1;
  outlined init with take of AppSelectionSignalComponent((__int128 *)(v3 - 104), a1 + 32);
  return v1;
}

void OUTLINED_FUNCTION_83_23(uint64_t a1@<X3>, unint64_t a2@<X8>)
{
}

NSString OUTLINED_FUNCTION_84_19()
{
  return String._bridgeToObjectiveC()();
}

uint64_t OUTLINED_FUNCTION_89_19(float a1)
{
  *uint64_t v1 = a1;
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)( 0xD000000000000032LL,  (v2 - 32) | 0x8000000000000000LL,  (uint64_t *)(v3 - 120));
}

uint64_t OUTLINED_FUNCTION_90_18(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 - 200) = a2;
  *(void *)(v2 - 19__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a1;
  return type metadata accessor for ResolvedSiriKitContact(0LL);
}

id OUTLINED_FUNCTION_91_17(uint64_t a1, const char *a2)
{
  return objc_msgSend(v3, a2, v2);
}

void OUTLINED_FUNCTION_92_15()
{
}

uint64_t OUTLINED_FUNCTION_93_16()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_99_12(uint64_t a1)
{
  return Logger.logObject.getter(a1);
}

uint64_t OUTLINED_FUNCTION_100_10()
{
  return (*(uint64_t (**)(uint64_t))(*(void *)v1 + 192LL))(v0);
}

void OUTLINED_FUNCTION_104_9()
{
  *(_WORD *)(v0 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
}

  ;
}

uint64_t OUTLINED_FUNCTION_112_11()
{
  return type metadata accessor for ContactGroupResolver(0LL);
}

BOOL OUTLINED_FUNCTION_113_11()
{
  return PhoneCallNLIntent.hasAnyConfirmation()();
}

uint64_t OUTLINED_FUNCTION_114_10()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 96))(v0, v2);
}

uint64_t OUTLINED_FUNCTION_115_11()
{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(*(void *)(*(void *)(v0 - 120)
                                                                                               + 16LL));
}

uint64_t OUTLINED_FUNCTION_117_11()
{
  return (*(uint64_t (**)(void, void))(*(void *)(v0 - 240) + 8LL))( *(void *)(v0 - 248),  *(void *)(v0 - 232));
}

uint64_t OUTLINED_FUNCTION_118_9()
{
  *(void *)(v2 - 120) = v0;
  return specialized ContiguousArray.reserveCapacity(_:)(v1);
}

uint64_t OUTLINED_FUNCTION_120_12(uint64_t a1)
{
  return String.init<A>(describing:)(v1 - 160, a1);
}

uint64_t OUTLINED_FUNCTION_121_12()
{
  return swift_bridgeObjectRetain(*(void *)(v0 - 184));
}

uint64_t OUTLINED_FUNCTION_122_11@<X0>(uint64_t (*a1)(void, uint64_t)@<X8>)
{
  return a1(*(void *)(v2 - 280), v1);
}

uint64_t OUTLINED_FUNCTION_123_8(uint64_t a1)
{
  return Transformer.init(transform:)(a1, v1, v2);
}

id OUTLINED_FUNCTION_124_9(uint64_t a1, uint64_t a2)
{
  return v2;
}

uint64_t OUTLINED_FUNCTION_126_8()
{
  return v2(v1, v3, v0);
}

uint64_t OUTLINED_FUNCTION_127_10(uint64_t a1, unint64_t a2)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)(v2 - 120));
}

  ;
}

uint64_t OUTLINED_FUNCTION_132_12()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(v0);
}

void OUTLINED_FUNCTION_133_12(uint64_t a1, uint64_t (*a2)(void))
{
}

  ;
}

  ;
}

void OUTLINED_FUNCTION_144_8()
{
}

  ;
}

uint64_t OUTLINED_FUNCTION_154_8()
{
  return specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v1, v0);
}

uint64_t OUTLINED_FUNCTION_155_5()
{
  return (*(uint64_t (**)(uint64_t))(*(void *)v1 + 192LL))(v0);
}

uint64_t OUTLINED_FUNCTION_166_3()
{
  return objectdestroy_21Tm_0(64LL);
}

void OUTLINED_FUNCTION_170_5()
{
}

id OUTLINED_FUNCTION_176_4(int a1, const char *a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9)
{
  return [a9 a2];
}

uint64_t OUTLINED_FUNCTION_181_4(uint64_t a1)
{
  *(void *)(v1 - 144) = a1;
  return v1 - 144;
}

uint64_t OUTLINED_FUNCTION_185_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_186_4(uint64_t a1)
{
  return Transformer.init(transform:)(a1, v2, v1);
}

uint64_t OUTLINED_FUNCTION_187_3()
{
  return Flow.eraseToAnyFlow()(v0);
}

uint64_t OUTLINED_FUNCTION_188_0()
{
  return Flow.eraseToAnyFlow()(v0);
}

uint64_t OUTLINED_FUNCTION_191_3()
{
  return RREntity.usoEntity.getter();
}

void OUTLINED_FUNCTION_192_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(a4 + 16) = v7;
  uint64_t v8 = a4 + 16 * v4;
  *(void *)(v8 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v5;
  *(void *)(v8 + 40) = v6;
}

uint64_t OUTLINED_FUNCTION_194_3()
{
  return Transformer.transform.getter(v0);
}

uint64_t OUTLINED_FUNCTION_199_3()
{
  return __swift_destroy_boxed_opaque_existential_1((void *)(v0 - 120));
}

uint64_t OUTLINED_FUNCTION_202_4(uint64_t a1, uint64_t a2)
{
  return Transformer.init(transform:)(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_203_4()
{
  return v0;
}

  ;
}

uint64_t OUTLINED_FUNCTION_209_2()
{
  return v0;
}

void *OUTLINED_FUNCTION_214_3()
{
  return __swift_project_boxed_opaque_existential_1(v0, v0[3]);
}

void OUTLINED_FUNCTION_219_3()
{
}

uint64_t OUTLINED_FUNCTION_221_1()
{
  return v0;
}

void OUTLINED_FUNCTION_222_3()
{
}

uint64_t OUTLINED_FUNCTION_223_1()
{
  return swift_release(*(void *)(v0 - 264));
}

uint64_t OUTLINED_FUNCTION_224_3(uint64_t a1, unint64_t a2)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)(v2 - 232));
}

uint64_t OUTLINED_FUNCTION_227_3(uint64_t a1, unint64_t a2)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)(v2 - 144));
}

uint64_t OUTLINED_FUNCTION_228_2()
{
  return swift_retain(*(void *)(v0 + 40));
}

uint64_t OUTLINED_FUNCTION_229_2(uint64_t a1)
{
  return Logger.logObject.getter(a1);
}

uint64_t OUTLINED_FUNCTION_230_3(uint64_t result)
{
  *(void *)(v1 - 120) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_233_2()
{
  return outlined bridged method (pb) of @objc static INIntent.typeName()(v0);
}

void *OUTLINED_FUNCTION_234_2@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(v2 - outlined init with copy of SharedGlobalsProviding(v0, v1 - 104) = a1;
  *(void *)(v2 - 96) = a2;
  return __swift_allocate_boxed_opaque_existential_1((void *)(v2 - 128));
}

uint64_t OUTLINED_FUNCTION_236_3()
{
  return v0();
}

uint64_t OUTLINED_FUNCTION_238_2()
{
  return swift_bridgeObjectRelease(*(void *)(v0 - 184));
}

uint64_t OUTLINED_FUNCTION_240_2()
{
  return swift_arrayDestroy(v0, 3LL);
}

uint64_t OUTLINED_FUNCTION_242_0()
{
  return ResolvedSiriKitContact.person.getter();
}

  ;
}

uint64_t OUTLINED_FUNCTION_245_1@<X0>( uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  return a2(a1, v3, v2);
}

uint64_t OUTLINED_FUNCTION_247_2@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_248_2(uint64_t a1)
{
  return specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(a1);
}

uint64_t OUTLINED_FUNCTION_249_2(uint64_t a1)
{
  return Array.description.getter(v1, a1);
}

void OUTLINED_FUNCTION_252_1()
{
}

  ;
}

id OUTLINED_FUNCTION_256_3()
{
  return *(id *)(v0 - 200);
}

uint64_t OUTLINED_FUNCTION_257_2(uint64_t a1)
{
  return Transformer.transform.getter(a1);
}

void OUTLINED_FUNCTION_261_1(void *a1, os_log_s *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
}

uint64_t OUTLINED_FUNCTION_262_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_264_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_270_2(uint64_t a1)
{
  return Logger.logObject.getter(a1);
}

uint64_t OUTLINED_FUNCTION_274_3(uint64_t a1)
{
  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_278_2()
{
  return dispatch thunk of App.debugDescription.getter();
}

  ;
}

uint64_t outlined copy of SlotResolverError(uint64_t result, uint64_t a2, char a3)
{
  if (a3 == 1) {
    return swift_bridgeObjectRetain(a2);
  }
  if (!a3) {
    return swift_errorRetain(result);
  }
  return result;
}

uint64_t destroy for SlotResolverError(uint64_t a1)
{
  return outlined consume of SlotResolverError(*(void *)a1, *(void *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t outlined consume of SlotResolverError(uint64_t result, uint64_t a2, char a3)
{
  if (a3 == 1) {
    return swift_bridgeObjectRelease(a2);
  }
  if (!a3) {
    return swift_errorRelease(result);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for SlotResolverError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(_BYTE *)(a2 + 16);
  outlined copy of SlotResolverError(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for SlotResolverError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(_BYTE *)(a2 + 16);
  outlined copy of SlotResolverError(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  outlined consume of SlotResolverError(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for SlotResolverError(uint64_t a1, uint64_t a2)
{
  char v3 = *(_BYTE *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  outlined consume of SlotResolverError(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for SlotResolverError()
{
  return &type metadata for SlotResolverError;
}

void PhoneCallGroup.__allocating_init(groupName:groupId:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for PhoneCallGroup.Builder(0LL);
  uint64_t v7 = OUTLINED_FUNCTION_15_2(v6);
  uint64_t v8 = v7 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin14PhoneCallGroup7Builder_groupName;
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_19_67(v8);
  OUTLINED_FUNCTION_19_67(v7 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin14PhoneCallGroup7Builder_groupId);
  PhoneCallGroup.Builder.withGroupName(_:)();
  swift_release(v7);
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 176LL))(a2);
  swift_release(v7);
  (*(void (**)(uint64_t))(v3 + 144))(v9);
  outlined destroy of SpeakableString?(a2);
  outlined destroy of SpeakableString?(a1);
  OUTLINED_FUNCTION_16();
}

void PhoneCallGroup.Builder.groupName.getter(uint64_t a1@<X8>)
{
}

void PhoneCallGroup.Builder.groupName.setter(uint64_t a1)
{
}

void PhoneCallGroup.Builder.groupName.modify(uint64_t a1)
{
}

uint64_t key path setter for PhoneCallGroup.Builder.groupId : PhoneCallGroup.Builder(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  outlined init with copy of SpeakableString?(a1, (uint64_t)v5);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 128LL))(v5);
}

void PhoneCallGroup.Builder.groupId.getter(uint64_t a1@<X8>)
{
}

void PhoneCallGroup.Builder.groupId.setter(uint64_t a1)
{
}

void PhoneCallGroup.Builder.groupId.modify(uint64_t a1)
{
}

void PhoneCallGroup.Builder.__allocating_init()()
{
  uint64_t v1 = swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  uint64_t v2 = v1 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin14PhoneCallGroup7Builder_groupName;
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_15_12(v2);
  OUTLINED_FUNCTION_15_12(v1 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin14PhoneCallGroup7Builder_groupId);
  OUTLINED_FUNCTION_6();
}

uint64_t type metadata accessor for PhoneCallGroup.Builder(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State( a1,  (uint64_t *)&type metadata singleton initialization cache for PhoneCallGroup.Builder,  (uint64_t)&nominal type descriptor for PhoneCallGroup.Builder);
}

void PhoneCallGroup.Builder.init()()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin14PhoneCallGroup7Builder_groupName;
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_15_12(v1);
  OUTLINED_FUNCTION_15_12(v0 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin14PhoneCallGroup7Builder_groupId);
  OUTLINED_FUNCTION_6();
}

void PhoneCallGroup.Builder.__allocating_init(groupName:groupId:)(uint64_t a1, uint64_t a2)
{
}

void PhoneCallGroup.Builder.init(groupName:groupId:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v7 = v2 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin14PhoneCallGroup7Builder_groupName;
  uint64_t v8 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_164(v7);
  uint64_t v9 = v2 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin14PhoneCallGroup7Builder_groupId;
  OUTLINED_FUNCTION_164(v2 + OBJC_IVAR____TtCC27PhoneCallFlowDelegatePlugin14PhoneCallGroup7Builder_groupId);
  uint64_t v10 = *(void (**)(_BYTE *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32LL);
  v10(v6, a1, v8);
  OUTLINED_FUNCTION_32_50();
  OUTLINED_FUNCTION_5_9(v7, v11);
  outlined assign with take of SpeakableString?((uint64_t)v6, v7);
  swift_endAccess(v14);
  v10(v6, a2, v8);
  OUTLINED_FUNCTION_32_50();
  OUTLINED_FUNCTION_5_9(v9, v12);
  outlined assign with take of SpeakableString?((uint64_t)v6, v9);
  swift_endAccess(v14);
  OUTLINED_FUNCTION_58();
}

void PhoneCallGroup.Builder.withGroupName(_:)()
{
}

void PhoneCallGroup.Builder.withGroupName(print:speak:)()
{
  uint64_t v1 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_13_4(v1);
  (*(void (**)(uint64_t))(v2 + 104))(v0);
  UsoEntity_common_Person.usoPerson.getter();
  OUTLINED_FUNCTION_16();
}

void PhoneCallGroup.Builder.withGroupId(_:)()
{
}

void PhoneCallGroup.Builder.withGroupId(print:speak:)()
{
  uint64_t v1 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_13_4(v1);
  (*(void (**)(uint64_t))(v2 + 128))(v0);
  UsoEntity_common_Person.usoPerson.getter();
  OUTLINED_FUNCTION_16();
}

void PhoneCallGroup.Builder.build()()
{
  uint64_t v0 = type metadata accessor for PhoneCallGroup(0LL);
  OUTLINED_FUNCTION_15_2(v0);
  uint64_t v1 = UsoEntity_common_Person.usoPerson.getter();
  PhoneCallGroup.init(builder:)(v1);
  OUTLINED_FUNCTION_2();
}

void PhoneCallGroup.__allocating_init(builder:)(uint64_t a1)
{
}

uint64_t type metadata accessor for PhoneCallGroup(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State( a1,  (uint64_t *)&type metadata singleton initialization cache for PhoneCallGroup,  (uint64_t)&nominal type descriptor for PhoneCallGroup);
}

uint64_t PhoneCallGroup.Builder.deinit()
{
  return v0;
}

uint64_t PhoneCallGroup.Builder.__deallocating_deinit()
{
  uint64_t v0 = OUTLINED_FUNCTION_23_37();
  return swift_deallocClassInstance(v0, v1, v2);
}

uint64_t static PhoneCallGroup.catTypeName.getter()
{
  return 0x61432E656E6F6870LL;
}

uint64_t PhoneCallGroup.groupName.getter@<X0>(uint64_t a1@<X8>)
{
  return OUTLINED_FUNCTION_10_17(a1, OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin14PhoneCallGroup_groupName);
}

uint64_t PhoneCallGroup.groupId.getter@<X0>(uint64_t a1@<X8>)
{
  return OUTLINED_FUNCTION_10_17(a1, OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin14PhoneCallGroup_groupId);
}

void PhoneCallGroup.init(builder:)(uint64_t a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_7_6();
  v1[2] = 0LL;
  (*(void (**)(void))(*(void *)a1 + 96LL))();
  uint64_t v4 = OUTLINED_FUNCTION_19_11(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin14PhoneCallGroup_groupName);
  (*(void (**)(uint64_t))(*(void *)a1 + 120LL))(v4);
  uint64_t v5 = OUTLINED_FUNCTION_19_11(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin14PhoneCallGroup_groupId);
  if (((*(uint64_t (**)(uint64_t))(*v1 + 152))(v5) & 1) == 0)
  {
    uint64_t v6 = (void *)static Log.siriDialogEngine.getter();
    static os_log_type_t.error.getter();
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    uint64_t v8 = swift_allocObject(v7, 72LL, 7LL);
    *(_OWORD *)(v8 + 16) = xmmword_31D870;
    uint64_t v14 = *v2;
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallGroup.Type);
    uint64_t v10 = String.init<A>(describing:)(&v14, v9);
    uint64_t v12 = v11;
    *(void *)(v8 + 56) = &type metadata for String;
    *(void *)(v8 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(void *)(v8 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v10;
    *(void *)(v8 + 40) = v12;
    os_log(_:dso:log:type:_:)("Building an instance of %s without all required inputs", v13);

    swift_bridgeObjectRelease();
  }

  swift_release(a1);
  OUTLINED_FUNCTION_58();
}

Swift::Bool __swiftcall PhoneCallGroup.allRequiredInputsHaveValues()()
{
  uint64_t v3 = v1 - v2;
  __chkstk_darwin();
  uint64_t v5 = (char *)&v9 - v4;
  OUTLINED_FUNCTION_34_38(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin14PhoneCallGroup_groupName);
  OUTLINED_FUNCTION_26_0();
  int v6 = OUTLINED_FUNCTION_25_60((uint64_t)v5);
  outlined destroy of SpeakableString?((uint64_t)v5);
  if (v6 == 1) {
    return 0;
  }
  outlined init with copy of SpeakableString?( v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin14PhoneCallGroup_groupId,  v3);
  Swift::Bool v7 = OUTLINED_FUNCTION_25_60(v3) != 1;
  outlined destroy of SpeakableString?(v3);
  return v7;
}

uint64_t PhoneCallGroup.getProperty(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v9 = v7 - v8;
  __chkstk_darwin();
  uint64_t v11 = (char *)&v20 - v10;
  BOOL v12 = a1 == 0x6D614E70756F7267LL && a2 == 0xE900000000000065LL;
  if (v12 || (OUTLINED_FUNCTION_1_5(0x6D614E70756F7267LL, 0xE900000000000065LL) & 1) != 0)
  {
    OUTLINED_FUNCTION_34_38(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin14PhoneCallGroup_groupName);
    uint64_t v13 = OUTLINED_FUNCTION_26_0();
    if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1LL, v13) != 1)
    {
      char v15 = OUTLINED_FUNCTION_23_10();
      return (*(uint64_t (**)(void *, char *, uint64_t))(*(void *)(v13 - 8) + 32LL))(v15, v11, v13);
    }

    uint64_t v14 = (uint64_t)v11;
    goto LABEL_16;
  }

  if (a1 != 0x644970756F7267LL || a2 != 0xE700000000000000LL)
  {
    uint64_t result = OUTLINED_FUNCTION_1_5(0x644970756F7267LL, 0xE700000000000000LL);
    if ((result & 1) == 0) {
      goto LABEL_17;
    }
  }

  outlined init with copy of SpeakableString?( v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin14PhoneCallGroup_groupId,  v9);
  uint64_t v18 = OUTLINED_FUNCTION_26_0();
  if (__swift_getEnumTagSinglePayload(v9, 1LL, v18) == 1)
  {
    uint64_t v14 = v9;
LABEL_16:
    uint64_t result = outlined destroy of SpeakableString?(v14);
LABEL_17:
    *a3 = 0u;
    a3[1] = 0u;
    return result;
  }

  uint64_t v19 = OUTLINED_FUNCTION_23_10();
  return (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32LL))(v19, v9, v18);
}

PhoneCallFlowDelegatePlugin::PhoneCallGroup::CodingKeys_optional __swiftcall PhoneCallGroup.CodingKeys.init(rawValue:)( Swift::String rawValue)
{
  object = rawValue._object;
  v2._countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)( (Swift::OpaquePointer)&outlined read-only object #0 of PhoneCallGroup.CodingKeys.init(rawValue:),  v2);
  swift_bridgeObjectRelease(object);
  if (v3 == 1) {
    v4.int value = PhoneCallFlowDelegatePlugin_PhoneCallGroup_CodingKeys_groupId;
  }
  else {
    v4.int value = PhoneCallFlowDelegatePlugin_PhoneCallGroup_CodingKeys_unknownDefault;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t PhoneCallGroup.CodingKeys.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0) {
    return 0x644970756F7267LL;
  }
  else {
    return 0x6D614E70756F7267LL;
  }
}

void protocol witness for static Equatable.== infix(_:_:) in conformance PhoneCallGroup.CodingKeys( char *a1, char *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance PhoneCallGroup.CodingKeys()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance PhoneCallGroup.CodingKeys(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallGroup.CodingKeys(uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::PhoneCallGroup::CodingKeys_optional protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallGroup.CodingKeys@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::PhoneCallGroup::CodingKeys_optional *a2@<X8>)
{
  result.int value = PhoneCallGroup.CodingKeys.init(rawValue:)(*a1).value;
  a2->int value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallGroup.CodingKeys( uint64_t *a1@<X8>)
{
  *a1 = PhoneCallGroup.CodingKeys.rawValue.getter(*v1);
  a1[1] = v3;
  OUTLINED_FUNCTION_2();
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance PhoneCallGroup.CodingKeys()
{
  return PhoneCallGroup.CodingKeys.rawValue.getter(*v0);
}

PhoneCallFlowDelegatePlugin::PhoneCallGroup::CodingKeys_optional protocol witness for CodingKey.init(stringValue:) in conformance PhoneCallGroup.CodingKeys@<W0>( uint64_t a1@<X0>, PhoneCallFlowDelegatePlugin::PhoneCallGroup::CodingKeys_optional *a2@<X8>)
{
  result.int value = PhoneCallGroup.CodingKeys.init(stringValue:)(*(Swift::String *)&a1).value;
  a2->int value = result.value;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneCallGroup.CodingKeys( uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneCallGroup.CodingKeys and conformance PhoneCallGroup.CodingKeys();
  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance PhoneCallGroup.CodingKeys( uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneCallGroup.CodingKeys and conformance PhoneCallGroup.CodingKeys();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t PhoneCallGroup.deinit()
{
  OUTLINED_FUNCTION_17_7(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin14PhoneCallGroup_groupName);
  OUTLINED_FUNCTION_17_7(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin14PhoneCallGroup_groupId);
  return v0;
}

uint64_t PhoneCallGroup.__deallocating_deinit()
{
  uint64_t v0 = OUTLINED_FUNCTION_23_37();
  return swift_deallocClassInstance(v0, v1, v2);
}

uint64_t PhoneCallGroup.encode(to:)(void *a1)
{
  uint64_t v4 = v1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<PhoneCallGroup.CodingKeys>);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_7_6();
  uint64_t v8 = a1[3];
  uint64_t v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  unint64_t v10 = lazy protocol witness table accessor for type PhoneCallGroup.CodingKeys and conformance PhoneCallGroup.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)( &type metadata for PhoneCallGroup.CodingKeys,  &type metadata for PhoneCallGroup.CodingKeys,  v10,  v8,  v9);
  uint64_t v11 = v4 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin14PhoneCallGroup_groupName;
  char v14 = 0;
  type metadata accessor for SpeakableString(0LL);
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type SpeakableString and conformance SpeakableString,  (uint64_t (*)(uint64_t))&type metadata accessor for SpeakableString,  (uint64_t)&protocol conformance descriptor for SpeakableString);
  OUTLINED_FUNCTION_7_20(v11, (uint64_t)&v14);
  if (!v2)
  {
    char v13 = 1;
    OUTLINED_FUNCTION_7_20(v4 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin14PhoneCallGroup_groupId, (uint64_t)&v13);
  }

  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v3, v6);
}

unint64_t lazy protocol witness table accessor for type PhoneCallGroup.CodingKeys and conformance PhoneCallGroup.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallGroup.CodingKeys and conformance PhoneCallGroup.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneCallGroup.CodingKeys and conformance PhoneCallGroup.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallGroup.CodingKeys,  &type metadata for PhoneCallGroup.CodingKeys);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallGroup.CodingKeys and conformance PhoneCallGroup.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallGroup.CodingKeys and conformance PhoneCallGroup.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneCallGroup.CodingKeys and conformance PhoneCallGroup.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallGroup.CodingKeys,  &type metadata for PhoneCallGroup.CodingKeys);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallGroup.CodingKeys and conformance PhoneCallGroup.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallGroup.CodingKeys and conformance PhoneCallGroup.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneCallGroup.CodingKeys and conformance PhoneCallGroup.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallGroup.CodingKeys,  &type metadata for PhoneCallGroup.CodingKeys);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallGroup.CodingKeys and conformance PhoneCallGroup.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallGroup.CodingKeys and conformance PhoneCallGroup.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneCallGroup.CodingKeys and conformance PhoneCallGroup.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallGroup.CodingKeys,  &type metadata for PhoneCallGroup.CodingKeys);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallGroup.CodingKeys and conformance PhoneCallGroup.CodingKeys);
  }

  return result;
}

uint64_t PhoneCallGroup.__allocating_init(from:)(void *a1)
{
  uint64_t v3 = swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
  PhoneCallGroup.init(from:)(a1);
  return v3;
}

id *PhoneCallGroup.init(from:)(void *a1)
{
  uint64_t v3 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_25_6();
  __chkstk_darwin();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<PhoneCallGroup.CodingKeys>);
  __chkstk_darwin();
  v3[2] = 0LL;
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  unint64_t v7 = lazy protocol witness table accessor for type PhoneCallGroup.CodingKeys and conformance PhoneCallGroup.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)( &type metadata for PhoneCallGroup.CodingKeys,  &type metadata for PhoneCallGroup.CodingKeys,  v7,  v5,  v6);
  if (v2)
  {

    uint64_t v9 = type metadata accessor for PhoneCallGroup(0LL);
    swift_deallocPartialClassInstance(v3, v9, *((unsigned int *)*v3 + 12), *((unsigned __int16 *)*v3 + 26));
  }

  else
  {
    uint64_t v8 = type metadata accessor for SpeakableString(0LL);
    char v12 = 0;
    lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type SpeakableString and conformance SpeakableString,  (uint64_t (*)(uint64_t))&type metadata accessor for SpeakableString,  (uint64_t)&protocol conformance descriptor for SpeakableString);
    OUTLINED_FUNCTION_11_89(v8, (uint64_t)&v12);
    OUTLINED_FUNCTION_27_60(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin14PhoneCallGroup_groupName);
    char v11 = 1;
    OUTLINED_FUNCTION_11_89(v8, (uint64_t)&v11);
    OUTLINED_FUNCTION_5_103();
    OUTLINED_FUNCTION_27_60(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin14PhoneCallGroup_groupId);
  }

  __swift_destroy_boxed_opaque_existential_1(a1);
  return v3;
}

void base witness table accessor for Decodable in PhoneCallGroup()
{
}

void base witness table accessor for Encodable in PhoneCallGroup()
{
}

void sub_2C7C74(uint64_t a1)
{
}

void sub_2C7C9C(uint64_t a1)
{
}

void sub_2C7CC4(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = (*(uint64_t (**)(void))(**(void **)a1 + 120LL))();
  OUTLINED_FUNCTION_2();
}

uint64_t ObjC metadata update function for PhoneCallGroup()
{
  return type metadata accessor for PhoneCallGroup(0LL);
}

void type metadata completion function for PhoneCallGroup(uint64_t a1)
{
  uint64_t v4 = "\b";
  type metadata accessor for SpeakableString?(319LL);
  if (v3 <= 0x3F)
  {
    uint64_t v5 = *(void *)(v2 - 8) + 64LL;
    uint64_t v6 = v5;
    swift_updateClassMetadata2(a1, 256LL, 3LL, &v4, a1 + 80);
  }

uint64_t ObjC metadata update function for PhoneCallGroup.Builder()
{
  return type metadata accessor for PhoneCallGroup.Builder(0LL);
}

void type metadata completion function for PhoneCallGroup.Builder(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(v2 - 8) + 64LL;
    v4[1] = v4[0];
    swift_updateClassMetadata2(a1, 256LL, 2LL, v4, a1 + 80);
  }

uint64_t storeEnumTagSinglePayload for PhoneCallGroup.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(OUTLINED_FUNCTION_90_18(v3, v4) = 1;
  }
  else {
    LODWORD(OUTLINED_FUNCTION_90_18(v3, v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_2C7E34 + 4 * byte_33E9E5[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2C7E68 + 4 * asc_33E9E0[v4]))();
}

uint64_t sub_2C7E68(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2C7E70(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x2C7E78LL);
  }
  return result;
}

uint64_t sub_2C7E84(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x2C7E8CLL);
  }
  *(_BYTE *)unint64_t result = a2 + 1;
  return result;
}

uint64_t sub_2C7E90(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2C7E98(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PhoneCallGroup.CodingKeys()
{
  return &type metadata for PhoneCallGroup.CodingKeys;
}

uint64_t OUTLINED_FUNCTION_11_89(uint64_t a1, uint64_t a2)
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(a1, a2, v3, v4, v2);
}

uint64_t OUTLINED_FUNCTION_19_67(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(a1, 1LL, 1LL, v1);
}

uint64_t OUTLINED_FUNCTION_32_50()
{
  return __swift_storeEnumTagSinglePayload(v0, 0LL, 1LL, v1);
}

uint64_t OUTLINED_FUNCTION_34_38@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SpeakableString?(v1 + a1, v2);
}

void PluginPrewarmProvider.__allocating_init(eligibleAppsFinder:)(void *a1)
{
}

void PluginPrewarmProvider.init(eligibleAppsFinder:)(void *a1)
{
}

Swift::Void __swiftcall PluginPrewarmProvider.prewarm(refId:)(Swift::String refId)
{
  object = refId._object;
  uint64_t countAndFlagsBits = refId._countAndFlagsBits;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  unint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  char v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = *(void *)(v1 + 56);
  char v12 = (void *)OUTLINED_FUNCTION_8_2((uint64_t)&unk_416BA0, 40LL);
  v12[2] = countAndFlagsBits;
  v12[3] = object;
  void v12[4] = v1;
  aBlock[4] = partial apply for closure #1 in PluginPrewarmProvider.prewarm(refId:);
  int v21 = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = thunk for @escaping @callee_guaranteed @Sendable () -> ();
  aBlock[3] = &block_descriptor_7;
  char v13 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  uint64_t v14 = swift_retain();
  static DispatchQoS.unspecified.getter(v14);
  uint64_t v19 = _swiftEmptyArrayStorage;
  uint64_t v15 = lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel( &lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  uint64_t v17 = lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]( (unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A],  &demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v19, v16, v17, v4, v15);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v11);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  swift_release(v21);
}

void closure #1 in PluginPrewarmProvider.prewarm(refId:)(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 72);
  if (v6
    && ((uint64_t v7 = *(void *)(a3 + 64), v7 == a1) ? (v8 = v6 == a2) : (v8 = 0),
        v8 || (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, v7, v6, 0LL) & 1) != 0))
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v9 = type metadata accessor for Logger(0LL);
    __swift_project_value_buffer(v9, (uint64_t)static Logger.siriPhone);
    uint64_t v10 = swift_bridgeObjectRetain_n(a2, 2LL);
    char v11 = (os_log_s *)Logger.logObject.getter(v10);
    os_log_type_t v13 = static os_log_type_t.debug.getter(v11, v12);
    if (os_log_type_enabled(v11, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v15 = swift_slowAlloc(32LL, -1LL);
      uint64_t v24 = v15;
      *(_DWORD *)uint64_t v14 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v23 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, &v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v14 + 4);
      swift_bridgeObjectRelease_n(a2, 3LL);
      _os_log_impl(&dword_0, v11, v13, "PluginPrewarmProvider#prewarm refId: %s already prewarmed", v14, 0xCu);
      swift_arrayDestroy(v15, 1LL);
      swift_slowDealloc(v15, -1LL, -1LL);
      swift_slowDealloc(v14, -1LL, -1LL);
    }

    else
    {

      swift_bridgeObjectRelease_n(a2, 2LL);
    }
  }

  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v16 = type metadata accessor for Logger(0LL);
    __swift_project_value_buffer(v16, (uint64_t)static Logger.siriPhone);
    uint64_t v17 = swift_bridgeObjectRetain_n(a2, 2LL);
    uint64_t v18 = (os_log_s *)Logger.logObject.getter(v17);
    os_log_type_t v20 = static os_log_type_t.debug.getter(v18, v19);
    if (os_log_type_enabled(v18, v20))
    {
      int v21 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v22 = swift_slowAlloc(32LL, -1LL);
      uint64_t v24 = v22;
      *(_DWORD *)int v21 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v23 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, &v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v21 + 4);
      swift_bridgeObjectRelease_n(a2, 3LL);
      _os_log_impl(&dword_0, v18, v20, "PluginPrewarmProvider#prewarm for refId: %s", v21, 0xCu);
      swift_arrayDestroy(v22, 1LL);
      swift_slowDealloc(v22, -1LL, -1LL);
      swift_slowDealloc(v21, -1LL, -1LL);
    }

    else
    {

      swift_bridgeObjectRelease_n(a2, 2LL);
    }

    PluginPrewarmProvider.prewarm()();
    *(void *)(a3 + 64) = a1;
    *(void *)(a3 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }

uint64_t PluginPrewarmProvider.prewarm()()
{
  uint64_t v2 = v0;
  static Signpost.begin(_:)();
  uint64_t v4 = v3;
  type metadata accessor for ContactResolver(0LL);
  static ContactResolver.refreshSharedCache()();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
  uint64_t v6 = OUTLINED_FUNCTION_8_2(v5, 64LL);
  *(_OWORD *)(v6 + 16) = xmmword_31D880;
  id v7 = OUTLINED_FUNCTION_8_85(objc_allocWithZone(&OBJC_CLASS___INStartCallIntent));
  id v8 = OUTLINED_FUNCTION_7_110(v7);
  OUTLINED_FUNCTION_6_101();
  OUTLINED_FUNCTION_4_105();
  OUTLINED_FUNCTION_1_101();
  *(void *)(v6 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v7;
  *(void *)(v6 + 40) = v1;
  id v9 = OUTLINED_FUNCTION_8_85(objc_allocWithZone(&OBJC_CLASS___INStartAudioCallIntent));
  id v10 = OUTLINED_FUNCTION_7_110(v9);
  OUTLINED_FUNCTION_6_101();
  OUTLINED_FUNCTION_4_105();
  OUTLINED_FUNCTION_1_101();
  *(void *)(v6 + 48) = v9;
  *(void *)(v6 + 56) = v1;
  id v11 = OUTLINED_FUNCTION_8_85(objc_allocWithZone(&OBJC_CLASS___INStartVideoCallIntent));
  id v12 = OUTLINED_FUNCTION_7_110(v11);
  OUTLINED_FUNCTION_6_101();
  OUTLINED_FUNCTION_4_105();
  OUTLINED_FUNCTION_1_101();
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(1LL, 3LL, 1LL, v6);
  uint64_t v14 = v13;
  v13[2] = 3LL;
  v13[8] = v11;
  v13[9] = v1;
  uint64_t v15 = v2 + 2;
  uint64_t v17 = v2[5];
  uint64_t v16 = v2[6];
  __swift_project_boxed_opaque_existential_1(v15, v17);
  (*(void (**)(void *, uint64_t, uint64_t))(v16 + 8))(v14, v17, v16);
  swift_bridgeObjectRelease();
  Signpost.OpenSignpost.end()();
  return swift_release(v4);
}

uint64_t PluginPrewarmProvider.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PluginPrewarmProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 80LL, 7LL);
}

void *specialized PluginPrewarmProvider.init(eligibleAppsFinder:)( uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v24 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0LL);
  uint64_t v8 = *(void *)(v24 - 8);
  __chkstk_darwin();
  id v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for OS_dispatch_queue.Attributes(0LL);
  __chkstk_darwin();
  os_log_type_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for DispatchQoS(0LL);
  __chkstk_darwin();
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v27 = a3;
  uint64_t v28 = a4;
  uint64_t v16 = __swift_allocate_boxed_opaque_existential_1(&v26);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32LL))(v16, a1, a3);
  unint64_t v17 = type metadata accessor for OS_dispatch_queue();
  static DispatchQoS.userInteractive.getter(v17);
  uint64_t v25 = _swiftEmptyArrayStorage;
  uint64_t v18 = lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel( (unint64_t *)&lazy protocol witness table cache variable for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes,  (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes,  (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  uint64_t v20 = lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]( (unint64_t *)&lazy protocol witness table cache variable for type [OS_dispatch_queue.Attributes] and conformance [A],  &demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v25, v19, v20, v11, v18);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))( v10,  enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:),  v24);
  uint64_t v21 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)( 0xD00000000000001CLL,  0x8000000000346CF0LL,  v15,  v13,  v10,  0LL);
  a2[8] = 0LL;
  a2[9] = 0LL;
  a2[7] = v21;
  outlined init with take of AppSelectionSignalComponent(&v26, (uint64_t)(a2 + 2));
  return a2;
}

uint64_t sub_2C88FC()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

void partial apply for closure #1 in PluginPrewarmProvider.prewarm(refId:)()
{
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_6(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t type metadata accessor for PluginPrewarmProvider()
{
  return objc_opt_self(&OBJC_CLASS____TtC27PhoneCallFlowDelegatePlugin21PluginPrewarmProvider);
}

void OUTLINED_FUNCTION_1_101()
{
}

void *OUTLINED_FUNCTION_2_92()
{
  return specialized PluginPrewarmProvider.init(eligibleAppsFinder:)(v3, v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_4_105()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(v0);
}

void OUTLINED_FUNCTION_6_101()
{
}

id OUTLINED_FUNCTION_7_110(void *a1)
{
  return [a1 *(SEL *)(v1 + 1320)];
}

id OUTLINED_FUNCTION_8_85(void *a1)
{
  return [a1 *(SEL *)(v1 + 1088)];
}

void TemplatingOperationManager.__allocating_init()()
{
}

BOOL TemplatingOperationType.init(rawValue:)(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)( (Swift::OpaquePointer)&outlined read-only object #0 of TemplatingOperationType.init(rawValue:),  v2);
  swift_bridgeObjectRelease(object);
  return v3 != 0;
}

unint64_t TemplatingOperationType.rawValue.getter()
{
  return 0xD000000000000015LL;
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance TemplatingOperationType@<W0>( Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  BOOL result = TemplatingOperationType.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

unint64_t protocol witness for RawRepresentable.rawValue.getter in conformance TemplatingOperationType@<X0>( void *a1@<X8>)
{
  unint64_t result = TemplatingOperationType.rawValue.getter();
  *a1 = 0xD000000000000015LL;
  a1[1] = v3;
  return result;
}

uint64_t one-time initialization function for timeout()
{
  uint64_t v0 = type metadata accessor for DispatchTimeInterval(0LL);
  __swift_allocate_value_buffer(v0, static TemplatingOperationManager.timeout);
  *(void *)__swift_project_value_buffer(v0, (uint64_t)static TemplatingOperationManager.timeout) = 500LL;
  return (*(uint64_t (**)(void))(*(void *)(v0 - 8) + 104LL))();
}

uint64_t TemplatingOperationManager.timeout.unsafeMutableAddressor()
{
  if (one-time initialization token for timeout != -1) {
    swift_once(&one-time initialization token for timeout, one-time initialization function for timeout);
  }
  uint64_t v0 = type metadata accessor for DispatchTimeInterval(0LL);
  return __swift_project_value_buffer(v0, (uint64_t)static TemplatingOperationManager.timeout);
}

uint64_t static TemplatingOperationManager.timeout.getter@<X0>(uint64_t a1@<X8>)
{
  if (one-time initialization token for timeout != -1) {
    swift_once(&one-time initialization token for timeout, one-time initialization function for timeout);
  }
  uint64_t v2 = type metadata accessor for DispatchTimeInterval(0LL);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)static TemplatingOperationManager.timeout);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16LL))(a1, v3, v2);
}

void TemplatingOperationManager.addOperation(intentId:key:catCall:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = OUTLINED_FUNCTION_15_78((uint64_t)&unk_416C00);
  uint64_t v8 = OUTLINED_FUNCTION_2_93(v5);
  OUTLINED_FUNCTION_22_11((uint64_t)thunk for @escaping @callee_guaranteed @Sendable () -> ());
  OUTLINED_FUNCTION_16_61();
  swift_retain();
  swift_retain();
  uint64_t v6 = swift_retain();
  static DispatchQoS.unspecified.getter(v6);
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  _sSay8Dispatch0A13WorkItemFlagsVGSayxGSTsWlTm_0( (unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A],  &demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  OUTLINED_FUNCTION_0_108(v7);
  OUTLINED_FUNCTION_6_102();
  _Block_release(v4);
  swift_release(v3);
  OUTLINED_FUNCTION_9_83();
  OUTLINED_FUNCTION_11_90();
  swift_release(v8);
  OUTLINED_FUNCTION_7_5();
}

uint64_t closure #1 in TemplatingOperationManager.addOperation(intentId:key:catCall:)( uint64_t a1, unint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v8 = type metadata accessor for Logger(0LL);
  __swift_project_value_buffer(v8, (uint64_t)static Logger.siriPhone);
  uint64_t v9 = swift_bridgeObjectRetain_n(a2, 2LL);
  id v10 = (os_log_s *)Logger.logObject.getter(v9);
  os_log_type_t v12 = static os_log_type_t.debug.getter(v10, v11);
  os_log_type_t v13 = &unk_31F000;
  if (os_log_type_enabled(v10, v12))
  {
    uint64_t v14 = swift_slowAlloc(22LL, -1LL);
    uint64_t v15 = swift_slowAlloc(64LL, -1LL);
    v35[0] = v15;
    *(_DWORD *)uint64_t v14 = 136315394;
    uint64_t v34 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000015LL, 0x8000000000346790LL, v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, v35, v14 + 4);
    *(_WORD *)(v14 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v16 = a1;
    uint64_t v34 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, v35);
    os_log_type_t v13 = (void *)&unk_31F000;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, v35, v14 + 14);
    swift_bridgeObjectRelease_n(a2, 3LL);
    _os_log_impl( &dword_0,  v10,  v12,  "OperationManager: Adding operation for key: %s, intent: %s",  (uint8_t *)v14,  0x16u);
    swift_arrayDestroy(v15, 2LL);
    swift_slowDealloc(v15, -1LL, -1LL);
    swift_slowDealloc(v14, -1LL, -1LL);
  }

  else
  {
    uint64_t v16 = a1;

    swift_bridgeObjectRelease_n(a2, 2LL);
  }

  uint64_t v17 = a3[5];
  if (!v17)
  {
    uint64_t v19 = v16;
LABEL_14:
    swift_beginAccess(a3 + 6, v35, 33LL, 0LL);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [TemplatingOperationType : TemplatingOperation]._Variant);
    Dictionary._Variant.removeAll(keepingCapacity:)(1);
    swift_endAccess(v35);
    goto LABEL_15;
  }

  uint64_t v18 = a3[4];
  uint64_t v19 = v16;
  BOOL v20 = v18 == v16 && v17 == a2;
  if (!v20 && (_stringCompareWithSmolCheck(_:_:expecting:)(v18, v17, v16, a2, 0LL) & 1) == 0) {
    goto LABEL_14;
  }
LABEL_15:
  a3[4] = v19;
  a3[5] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = type metadata accessor for TemplatingOperation(0LL);
  swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
  swift_retain();
  uint64_t v22 = TemplatingOperation.init(key:catCall:)(a4, a5);
  swift_beginAccess(a3 + 6, v35, 33LL, 0LL);
  uint64_t v23 = swift_retain();
  specialized Dictionary._Variant.setValue(_:forKey:)(v23);
  swift_endAccess(v35);
  TemplatingOperation.start(on:)(a3[3]);
  uint64_t v24 = swift_bridgeObjectRetain_n(a2, 2LL);
  uint64_t v25 = (os_log_s *)Logger.logObject.getter(v24);
  os_log_type_t v27 = static os_log_type_t.debug.getter(v25, v26);
  if (os_log_type_enabled(v25, v27))
  {
    uint64_t v28 = swift_slowAlloc(22LL, -1LL);
    uint64_t v29 = v19;
    uint64_t v30 = swift_slowAlloc(64LL, -1LL);
    v35[0] = v30;
    *(_DWORD *)uint64_t v28 = v13[238];
    uint64_t v34 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000015LL, 0x8000000000346790LL, v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, v35, v28 + 4);
    *(_WORD *)(v28 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v34 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v29, a2, v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, v35, v28 + 14);
    swift_bridgeObjectRelease_n(a2, 3LL);
    _os_log_impl( &dword_0,  v25,  v27,  "OperationManager: Finished adding operation for key: %s, intent: %s",  (uint8_t *)v28,  0x16u);
    swift_arrayDestroy(v30, 2LL);
    swift_slowDealloc(v30, -1LL, -1LL);
    swift_slowDealloc(v28, -1LL, -1LL);
  }

  else
  {

    swift_bridgeObjectRelease_n(a2, 2LL);
  }

  Signpost.OpenSignpost.end()();
  return swift_release(v22);
}

void TemplatingOperationManager.getResult(intentId:key:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = OUTLINED_FUNCTION_15_78((uint64_t)&unk_416C50);
  uint64_t v8 = OUTLINED_FUNCTION_2_93(v5);
  OUTLINED_FUNCTION_22_11((uint64_t)thunk for @escaping @callee_guaranteed @Sendable () -> ());
  OUTLINED_FUNCTION_16_61();
  swift_retain();
  swift_retain();
  uint64_t v6 = swift_retain();
  static DispatchQoS.unspecified.getter(v6);
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  _sSay8Dispatch0A13WorkItemFlagsVGSayxGSTsWlTm_0( (unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A],  &demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  OUTLINED_FUNCTION_0_108(v7);
  OUTLINED_FUNCTION_6_102();
  _Block_release(v4);
  swift_release(v3);
  OUTLINED_FUNCTION_9_83();
  OUTLINED_FUNCTION_11_90();
  swift_release(v8);
  OUTLINED_FUNCTION_7_5();
}

void closure #1 in TemplatingOperationManager.getResult(intentId:key:_:)( uint64_t a1, unint64_t a2, uint64_t a3, void (*a4)(char *), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v40[1] = a6;
  v40[2] = a7;
  uint64_t v41 = a3;
  uint64_t v42 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>?);
  __chkstk_darwin();
  os_log_type_t v13 = (char *)v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v14 = type metadata accessor for Logger(0LL);
  uint64_t v15 = __swift_project_value_buffer(v14, (uint64_t)static Logger.siriPhone);
  uint64_t v16 = swift_bridgeObjectRetain_n(a2, 2LL);
  v40[4] = v15;
  uint64_t v17 = (os_log_s *)Logger.logObject.getter(v16);
  os_log_type_t v19 = static os_log_type_t.debug.getter(v17, v18);
  BOOL v20 = os_log_type_enabled(v17, v19);
  v40[3] = a8;
  if (v20)
  {
    uint64_t v21 = swift_slowAlloc(22LL, -1LL);
    uint64_t v22 = swift_slowAlloc(64LL, -1LL);
    v40[0] = a5;
    uint64_t v23 = v22;
    v45[0] = v22;
    *(_DWORD *)uint64_t v21 = 136315394;
    uint64_t v44 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000015LL, 0x8000000000346790LL, v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, v45, v21 + 4);
    *(_WORD *)(v21 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v44 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v42, a2, v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, v45, v21 + 14);
    swift_bridgeObjectRelease_n(a2, 3LL);
    _os_log_impl( &dword_0,  v17,  v19,  "OperationManager: Getting operation for key: %s, intent: %s",  (uint8_t *)v21,  0x16u);
    swift_arrayDestroy(v23, 2LL);
    uint64_t v24 = v23;
    a5 = v40[0];
    swift_slowDealloc(v24, -1LL, -1LL);
    swift_slowDealloc(v21, -1LL, -1LL);
  }

  else
  {

    swift_bridgeObjectRelease_n(a2, 2LL);
  }

  uint64_t v25 = v41;
  uint64_t v26 = *(void *)(v41 + 40);
  if (v26
    && ((uint64_t v27 = *(void *)(v41 + 32), v27 == v42) ? (v28 = v26 == a2) : (v28 = 0),
        (v28 || (_stringCompareWithSmolCheck(_:_:expecting:)(v42, a2, v27, v26, 0LL) & 1) != 0)
     && (swift_beginAccess(v25 + 48, v45, 0LL, 0LL),
         uint64_t v29 = swift_bridgeObjectRetain(),
         specialized Dictionary.subscript.getter(v29),
         uint64_t v31 = v30,
         swift_bridgeObjectRelease(),
         v31)))
  {
    uint64_t v32 = swift_allocObject(&unk_416E20, 32LL, 7LL);
    *(void *)(v32 + 16) = a4;
    *(void *)(v32 + 24) = a5;
    swift_retain();
    TemplatingOperation.onComplete(_:)( (uint64_t)partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Result<TemplatingResult, Error>?) -> (),  v32);
    swift_release(v32);
    uint64_t v33 = swift_bridgeObjectRetain_n(a2, 2LL);
    uint64_t v34 = (os_log_s *)Logger.logObject.getter(v33);
    os_log_type_t v36 = static os_log_type_t.debug.getter(v34, v35);
    if (os_log_type_enabled(v34, v36))
    {
      uint64_t v37 = swift_slowAlloc(22LL, -1LL);
      uint64_t v38 = swift_slowAlloc(64LL, -1LL);
      uint64_t v44 = v38;
      *(_DWORD *)uint64_t v37 = 136315394;
      uint64_t v43 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000015LL, 0x8000000000346790LL, &v44);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44, v37 + 4);
      *(_WORD *)(v37 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v43 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v42, a2, &v44);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44, v37 + 14);
      swift_bridgeObjectRelease_n(a2, 3LL);
      _os_log_impl( &dword_0,  v34,  v36,  "OperationManager: Finished getting operation for key: %s, intent: %s",  (uint8_t *)v37,  0x16u);
      swift_arrayDestroy(v38, 2LL);
      swift_slowDealloc(v38, -1LL, -1LL);
      swift_slowDealloc(v37, -1LL, -1LL);
    }

    else
    {

      swift_bridgeObjectRelease_n(a2, 2LL);
    }

    Signpost.OpenSignpost.end()();
    swift_release(v31);
  }

  else
  {
    uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 1LL, 1LL, v39);
    a4(v13);
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v13,  &demangling cache variable for type metadata for Result<TemplatingResult, Error>?);
  }

void thunk for @escaping @callee_guaranteed (@in_guaranteed Result<TemplatingResult, Error>?) -> ()( uint64_t a1, void (*a2)(char *))
{
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  outlined init with copy of Result<TemplatingResult, Error>(a1, (uint64_t)v5);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  __swift_storeEnumTagSinglePayload((uint64_t)v5, 0LL, 1LL, v6);
  a2(v5);
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v5,  &demangling cache variable for type metadata for Result<TemplatingResult, Error>?);
}

void TemplatingOperationManager.getResult(intentIdOptional:key:_:)( uint64_t a1, uint64_t a2, void (*a3)(char *), uint64_t a4)
{
  id v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (a2)
  {
    (*(void (**)(uint64_t, uint64_t, void (*)(char *), uint64_t))(*(void *)v4 + 168LL))( a1,  a2,  a3,  a4);
  }

  else
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 1LL, 1LL, v11);
    a3(v10);
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v10,  &demangling cache variable for type metadata for Result<TemplatingResult, Error>?);
  }

uint64_t TemplatingOperationManager.deinit()
{
  swift_bridgeObjectRelease(*(void *)(v0 + 40));
  swift_bridgeObjectRelease(*(void *)(v0 + 48));
  return v0;
}

uint64_t TemplatingOperationManager.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 56LL, 7LL);
}

void *TemplatingOperationManager.init()()
{
  uint64_t v1 = v0;
  type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0LL);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  uint64_t v2 = type metadata accessor for OS_dispatch_queue.Attributes(0LL);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_32();
  type metadata accessor for DispatchQoS(0LL);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  unint64_t v3 = type metadata accessor for OS_dispatch_queue();
  static DispatchQoS.userInitiated.getter(v3);
  uint64_t v25 = _swiftEmptyArrayStorage;
  lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes,  (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes,  (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  uint64_t v5 = v4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  _sSay8Dispatch0A13WorkItemFlagsVGSayxGSTsWlTm_0( (unint64_t *)&lazy protocol witness table cache variable for type [OS_dispatch_queue.Attributes] and conformance [A],  &demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v25, v6, v7, v2, v5);
  OUTLINED_FUNCTION_12_89();
  OUTLINED_FUNCTION_17_66();
  uint64_t v14 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(v8, v9, v10, v11, v12, v13);
  v1[2] = v14;
  uint64_t v15 = static DispatchQoS.userInteractive.getter(v14);
  static OS_dispatch_queue.Attributes.concurrent.getter(v15);
  OUTLINED_FUNCTION_12_89();
  OUTLINED_FUNCTION_17_66();
  v1[3] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(v16, v17, v18, v19, v20, v21);
  uint64_t v22 = type metadata accessor for TemplatingOperation(0LL);
  unint64_t v23 = lazy protocol witness table accessor for type TemplatingOperationType and conformance TemplatingOperationType();
  v1[4] = 0LL;
  v1[5] = 0LL;
  v1[6] = Dictionary.init(dictionaryLiteral:)( _swiftEmptyArrayStorage,  &type metadata for TemplatingOperationType,  v22,  v23);
  return v1;
}

uint64_t partial apply for closure #1 in TemplatingOperationManager.addOperation(intentId:key:catCall:)()
{
  return partial apply for closure #1 in TemplatingOperationManager.addOperation(intentId:key:catCall:)((uint64_t (*)(void, void, void, void, void, void, void, void, __int16))closure #1 in TemplatingOperationManager.addOperation(intentId:key:catCall:));
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_7(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t objectdestroyTm_17()
{
  return swift_deallocObject(v0, 82LL, 7LL);
}

uint64_t partial apply for closure #1 in TemplatingOperationManager.getResult(intentId:key:_:)()
{
  return partial apply for closure #1 in TemplatingOperationManager.addOperation(intentId:key:catCall:)((uint64_t (*)(void, void, void, void, void, void, void, void, __int16))closure #1 in TemplatingOperationManager.getResult(intentId:key:_:));
}

uint64_t partial apply for closure #1 in TemplatingOperationManager.addOperation(intentId:key:catCall:)( uint64_t (*a1)(void, void, void, void, void, void, void, void, __int16))
{
  if (*(_BYTE *)(v1 + 81)) {
    __int16 v2 = 256;
  }
  else {
    __int16 v2 = 0;
  }
  __int16 v4 = v2 | *(unsigned __int8 *)(v1 + 80);
  return a1( *(void *)(v1 + 16),  *(void *)(v1 + 24),  *(void *)(v1 + 32),  *(void *)(v1 + 40),  *(void *)(v1 + 48),  *(void *)(v1 + 56),  *(void *)(v1 + 64),  *(void *)(v1 + 72),  v4);
}

void _sSay8Dispatch0A13WorkItemFlagsVGSayxGSTsWlTm_0(unint64_t *a1, uint64_t *a2)
{
  if (!*a1)
  {
    uint64_t v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    atomic_store(swift_getWitnessTable(&protocol conformance descriptor for [A], v3), a1);
  }

  OUTLINED_FUNCTION_2();
}

uint64_t type metadata accessor for TemplatingOperation(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for TemplatingOperation;
  if (!type metadata singleton initialization cache for TemplatingOperation) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TemplatingOperation);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TemplatingOperationType(uint64_t a1, int a2, int a3)
{
  else {
    int v3 = 2;
  }
  else {
    LODWORD(OUTLINED_FUNCTION_5_18(v2, v3, v4) = v3;
  }
  if (a3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2) {
    return ((uint64_t (*)(void))((char *)sub_2C9D9C + 4 * asc_33ECA0[v4]))();
  }
  else {
    return ((uint64_t (*)(void))((char *)sub_2C9DBC + 4 * byte_33ECA5[v4]))();
  }
}

_BYTE *sub_2C9D9C(_BYTE *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

_BYTE *sub_2C9DBC(_BYTE *result)
{
  *uint64_t result = 0;
  return result;
}

_DWORD *sub_2C9DC4(_DWORD *result, int a2)
{
  *uint64_t result = a2;
  return result;
}

_WORD *sub_2C9DCC(_WORD *result, __int16 a2)
{
  *uint64_t result = a2;
  return result;
}

_WORD *sub_2C9DD4(_WORD *result)
{
  *uint64_t result = 0;
  return result;
}

_DWORD *sub_2C9DDC(_DWORD *result)
{
  *uint64_t result = 0;
  return result;
}

ValueMetadata *type metadata accessor for TemplatingOperationType()
{
  return &type metadata for TemplatingOperationType;
}

uint64_t type metadata accessor for TemplatingOperationManager()
{
  return objc_opt_self(&OBJC_CLASS____TtC27PhoneCallFlowDelegatePlugin26TemplatingOperationManager);
}

uint64_t TemplatingOperation.init(key:catCall:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for PhoneError(0LL);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = (uint64_t *)(v3
                 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePluginP33_EDC7BAD48289BA0912D37340779F4F4B19TemplatingOperation_result);
  *(_OWORD *)uint64_t v8 = xmmword_3288B0;
  *((void *)v8 + __swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xD00000000000003CLL;
  *((void *)v8 + 3) = 0x8000000000351E50LL;
  *((void *)v8 + 4) = 0xD000000000000013LL;
  *((void *)v8 + __swift_destroy_boxed_opaque_existential_1(v0 + 5) = 0x800000000033ED90LL;
  *((void *)v8 + 6) = 87LL;
  v8[56] = 0;
  swift_storeEnumTagMultiPayload(v8, v6, 2LL);
  lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError,  type metadata accessor for PhoneError,  (uint64_t)&protocol conformance descriptor for PhoneError);
  uint64_t v11 = swift_allocError(v6, v10, 0LL, 0LL);
  PhoneError.logged()(v12);
  outlined destroy of PhoneError((uint64_t)v8);
  *uint64_t v9 = v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  swift_storeEnumTagMultiPayload(v9, v13, 1LL);
  uint64_t v14 = OBJC_IVAR____TtC27PhoneCallFlowDelegatePluginP33_EDC7BAD48289BA0912D37340779F4F4B19TemplatingOperation_group;
  *(void *)(v3 + v14) = dispatch_group_create();
  uint64_t v15 = (void *)(v3
                 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePluginP33_EDC7BAD48289BA0912D37340779F4F4B19TemplatingOperation_catCall);
  *uint64_t v15 = a1;
  v15[1] = a2;
  return v3;
}

uint64_t TemplatingOperation.start(on:)(uint64_t a1)
{
  uint64_t v2 = v1;
  v27[1] = a1;
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v28 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v27[0] = type metadata accessor for DispatchQoS(0LL);
  uint64_t v6 = *(void *)(v27[0] - 8LL);
  __chkstk_darwin();
  uint64_t v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static Signpost.begin(_:message:)();
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  __int16 v16 = v15;
  dispatch_group_enter(*(dispatch_group_t *)(v2
                                           + OBJC_IVAR____TtC27PhoneCallFlowDelegatePluginP33_EDC7BAD48289BA0912D37340779F4F4B19TemplatingOperation_group));
  uint64_t v17 = swift_allocObject(&unk_416D80, 24LL, 7LL);
  swift_weakInit(v17 + 16, v2);
  uint64_t v18 = swift_allocObject(&unk_416DA8, 50LL, 7LL);
  *(void *)(v18 + 16) = v17;
  *(void *)(v18 + 24) = v10;
  *(void *)(v18 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v12;
  *(void *)(v18 + 40) = v14;
  *(_BYTE *)(v18 + 48) = v16;
  *(_BYTE *)(v18 + 49) = HIBYTE(v16) & 1;
  aBlock[4] = partial apply for closure #1 in TemplatingOperation.start(on:);
  uint64_t v31 = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = thunk for @escaping @callee_guaranteed @Sendable () -> ();
  aBlock[3] = &block_descriptor_21;
  uint64_t v19 = _Block_copy(aBlock);
  swift_retain();
  uint64_t v20 = swift_retain();
  static DispatchQoS.unspecified.getter(v20);
  uint64_t v29 = _swiftEmptyArrayStorage;
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v22 = v21;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  _sSay8Dispatch0A13WorkItemFlagsVGSayxGSTsWlTm_0( (unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A],  &demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v29, v23, v24, v3, v22);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v8);
  _Block_release(v19);
  swift_release(v10);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v5, v3);
  (*(void (**)(char *, void))(v6 + 8))(v8, v27[0]);
  uint64_t v25 = v31;
  swift_release(v17);
  return swift_release(v25);
}

uint64_t closure #1 in TemplatingOperation.start(on:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int16 a5)
{
  uint64_t v9 = a1 + 16;
  swift_beginAccess(a1 + 16, v18, 0LL, 0LL);
  uint64_t result = swift_weakLoadStrong(v9);
  if (result)
  {
    uint64_t v11 = result;
    uint64_t v13 = *(void (**)(void (*)(uint64_t), uint64_t))(result
                                                                       + OBJC_IVAR____TtC27PhoneCallFlowDelegatePluginP33_EDC7BAD48289BA0912D37340779F4F4B19TemplatingOperation_catCall);
    uint64_t v12 = *(void *)(result
                    + OBJC_IVAR____TtC27PhoneCallFlowDelegatePluginP33_EDC7BAD48289BA0912D37340779F4F4B19TemplatingOperation_catCall
                    + 8);
    swift_retain();
    swift_release(v11);
    uint64_t v14 = swift_allocObject(&unk_416D80, 24LL, 7LL);
    swift_beginAccess(v9, &v17, 0LL, 0LL);
    uint64_t Strong = swift_weakLoadStrong(v9);
    swift_weakInit(v14 + 16, Strong);
    swift_release(Strong);
    uint64_t v16 = swift_allocObject(&unk_416DF8, 50LL, 7LL);
    *(void *)(v16 + 16) = v14;
    *(void *)(v16 + 24) = a2;
    *(void *)(v16 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a3;
    *(void *)(v16 + 40) = a4;
    *(_BYTE *)(v16 + 48) = a5;
    *(_BYTE *)(v16 + 49) = HIBYTE(a5) & 1;
    swift_retain();
    swift_retain();
    v13(partial apply for closure #1 in closure #1 in TemplatingOperation.start(on:), v16);
    swift_release(v14);
    swift_release(v16);
    return swift_release(v12);
  }

  return result;
}

void closure #1 in closure #1 in TemplatingOperation.start(on:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v6 = a2 + 16;
  swift_beginAccess(v6, v14, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(v6);
  if (Strong)
  {
    uint64_t v8 = Strong;
    outlined init with copy of Result<TemplatingResult, Error>(a1, (uint64_t)v5);
    uint64_t v9 = v8
       + OBJC_IVAR____TtC27PhoneCallFlowDelegatePluginP33_EDC7BAD48289BA0912D37340779F4F4B19TemplatingOperation_result;
    swift_beginAccess( v8 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePluginP33_EDC7BAD48289BA0912D37340779F4F4B19TemplatingOperation_result,  v13,  33LL,  0LL);
    outlined assign with take of Result<TemplatingResult, Error>((uint64_t)v5, v9);
    swift_endAccess(v13);
    swift_release(v8);
  }

  swift_beginAccess(v6, v13, 0LL, 0LL);
  uint64_t v10 = swift_weakLoadStrong(v6);
  if (v10)
  {
    uint64_t v11 = v10;
    uint64_t v12 = (dispatch_group_s *)objc_retain(*(id *)(v10
                                                + OBJC_IVAR____TtC27PhoneCallFlowDelegatePluginP33_EDC7BAD48289BA0912D37340779F4F4B19TemplatingOperation_group));
    swift_release(v11);
    dispatch_group_leave(v12);
  }

  Signpost.OpenSignpost.end()();
}

uint64_t TemplatingOperation.onComplete(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v37 = a1;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v40 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v38 = *(void *)(v8 - 8);
  uint64_t v39 = v8;
  __chkstk_darwin();
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for DispatchTime(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = __chkstk_darwin();
  uint64_t v17 = (char *)&v36 - v16;
  static DispatchTime.now()(v15);
  if (one-time initialization token for timeout != -1) {
    swift_once(&one-time initialization token for timeout, one-time initialization function for timeout);
  }
  uint64_t v18 = type metadata accessor for DispatchTimeInterval(0LL);
  uint64_t v19 = __swift_project_value_buffer(v18, (uint64_t)static TemplatingOperationManager.timeout);
  + infix(_:_:)(v14, v19);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v12 + 8);
  v20(v14, v11);
  char v21 = OS_dispatch_group.wait(timeout:)(v17);
  v20(v17, v11);
  if ((v21 & 1) != 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v22 = type metadata accessor for Logger(0LL);
    uint64_t v23 = __swift_project_value_buffer(v22, (uint64_t)static Logger.siriPhone);
    uint64_t v24 = (os_log_s *)Logger.logObject.getter(v23);
    os_log_type_t v25 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl(&dword_0, v24, v25, "Timed out waiting on TemplatingResult, returning .noResult", v26, 2u);
      swift_slowDealloc(v26, -1LL, -1LL);
    }
  }

  type metadata accessor for OS_dispatch_queue();
  uint64_t v27 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v28 = (void *)swift_allocObject(&unk_416D30, 40LL, 7LL);
  __int128 v28[2] = v37;
  v28[3] = a2;
  v28[4] = v3;
  aBlock[4] = partial apply for closure #1 in TemplatingOperation.onComplete(_:);
  uint64_t v43 = v28;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = thunk for @escaping @callee_guaranteed @Sendable () -> ();
  aBlock[3] = &block_descriptor_12;
  uint64_t v29 = _Block_copy(aBlock);
  swift_retain();
  uint64_t v30 = swift_retain();
  static DispatchQoS.unspecified.getter(v30);
  uint64_t v41 = _swiftEmptyArrayStorage;
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v32 = v31;
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  _sSay8Dispatch0A13WorkItemFlagsVGSayxGSTsWlTm_0( (unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A],  &demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v41, v33, v34, v5, v32);
  OS_dispatch_group.notify(qos:flags:queue:execute:)(v10, v7, v27, v29);
  _Block_release(v29);

  (*(void (**)(char *, uint64_t))(v40 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v10, v39);
  return swift_release(v43);
}

void closure #1 in TemplatingOperation.onComplete(_:)(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v7 = a3
     + OBJC_IVAR____TtC27PhoneCallFlowDelegatePluginP33_EDC7BAD48289BA0912D37340779F4F4B19TemplatingOperation_result;
  swift_beginAccess(v7, v9, 0LL, 0LL);
  outlined init with copy of Result<TemplatingResult, Error>(v7, (uint64_t)v6);
  a1(v6);
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v6,  &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
}

uint64_t TemplatingOperation.deinit()
{
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC27PhoneCallFlowDelegatePluginP33_EDC7BAD48289BA0912D37340779F4F4B19TemplatingOperation_group));
  swift_release(*(void *)(v0
                          + OBJC_IVAR____TtC27PhoneCallFlowDelegatePluginP33_EDC7BAD48289BA0912D37340779F4F4B19TemplatingOperation_catCall
                          + 8));
  return v0;
}

uint64_t TemplatingOperation.__deallocating_deinit()
{
  uint64_t v0 = TemplatingOperation.deinit();
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t ObjC metadata update function for TemplatingOperation()
{
  return type metadata accessor for TemplatingOperation(0LL);
}

void type metadata completion function for TemplatingOperation(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(v2 - 8) + 64LL;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    void v4[2] = (char *)&value witness table for () + 64;
    v4[3] = (char *)&value witness table for () + 64;
    swift_updateClassMetadata2(a1, 256LL, 4LL, v4, a1 + 80);
  }

void type metadata accessor for Result<TemplatingResult, Error>(uint64_t a1)
{
  if (!lazy cache variable for type metadata for Result<TemplatingResult, Error>)
  {
    uint64_t v2 = type metadata accessor for TemplatingResult(255LL);
    uint64_t v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Error);
    unint64_t v4 = type metadata accessor for Result(a1, v2, v3, &protocol self-conformance witness table for Error);
    if (!v5) {
      atomic_store(v4, (unint64_t *)&lazy cache variable for type metadata for Result<TemplatingResult, Error>);
    }
  }

uint64_t sub_2CAA84()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

void partial apply for closure #1 in TemplatingOperation.onComplete(_:)()
{
}

uint64_t sub_2CAAB8()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t partial apply for closure #1 in TemplatingOperation.start(on:)()
{
  if (*(_BYTE *)(v0 + 49)) {
    __int16 v1 = 256;
  }
  else {
    __int16 v1 = 0;
  }
  return closure #1 in TemplatingOperation.start(on:)( *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(void *)(v0 + 32),  *(void *)(v0 + 40),  v1 | *(unsigned __int8 *)(v0 + 48));
}

void partial apply for closure #1 in closure #1 in TemplatingOperation.start(on:)(uint64_t a1)
{
}

uint64_t outlined assign with take of Result<TemplatingResult, Error>(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_2CAB74()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

void partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Result<TemplatingResult, Error>?) -> ()( uint64_t a1)
{
}

uint64_t OUTLINED_FUNCTION_0_108(uint64_t a1)
{
  return dispatch thunk of SetAlgebra.init<A>(_:)(v4 - 136, v3, a1, v1, v2);
}

uint64_t OUTLINED_FUNCTION_2_93(uint64_t result)
{
  *(void *)(result + swift_weakDestroy(v0 + 16) = *(void *)(v8 - 184);
  *(void *)(result + 24) = v7;
  uint64_t v9 = *(void *)(v8 - 176);
  *(void *)(result + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v5;
  *(void *)(result + 40) = v9;
  *(void *)(result + 48) = v4;
  *(void *)(result + 56) = v3;
  *(void *)(result + 64) = v2;
  *(void *)(result + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v1;
  *(_BYTE *)(result + 80) = v6;
  *(_BYTE *)(result + 81) = HIBYTE(v6) & 1;
  return result;
}

uint64_t OUTLINED_FUNCTION_6_102()
{
  return OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v1, v0, v2);
}

uint64_t OUTLINED_FUNCTION_7_111(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 - 184) = a1;
  *(void *)(v3 - 176) = a3;
  return type metadata accessor for DispatchWorkItemFlags(0LL);
}

void OUTLINED_FUNCTION_8_86()
{
  *(void *)(v1 - 168) = *(void *)(v0 + 16);
}

uint64_t OUTLINED_FUNCTION_9_83()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 144) + 8LL))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_11_90()
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)(v1 - 160) + 8LL))(v0, *(void *)(v1 - 152));
}

uint64_t OUTLINED_FUNCTION_12_89()
{
  return v3(v0, v2, v1);
}

uint64_t OUTLINED_FUNCTION_15_78(uint64_t a1)
{
  return swift_allocObject(a1, 82LL, 7LL);
}

uint64_t OUTLINED_FUNCTION_16_61()
{
  return swift_bridgeObjectRetain(v0);
}

  ;
}

uint64_t DeviceState.siriInputLocale.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = dispatch thunk of DeviceState.preferencesLanguageCode.getter();
  if (v5) {
    return Locale.init(identifier:)(v4);
  }
  else {
    return dispatch thunk of DeviceState.siriLocale.getter(a1, a2);
  }
}

void DeviceState.isStandaloneIOS.getter()
{
  char v6 = dispatch thunk of DeviceState.isPhone.getter(v4, v5);
  OUTLINED_FUNCTION_37_20(v2);
  if ((v6 & 1) != 0) {
    char v7 = 1;
  }
  else {
    char v7 = OUTLINED_FUNCTION_25_61();
  }
  uint64_t v8 = *(void (**)(uint64_t))(v3 + 8);
  OUTLINED_FUNCTION_56_14(v2);
  OUTLINED_FUNCTION_37_20(v1);
  if ((v7 & 1) != 0)
  {
    OUTLINED_FUNCTION_56_14(v1);
    OUTLINED_FUNCTION_37_20(v0);
LABEL_7:
    OUTLINED_FUNCTION_26_58();
    goto LABEL_8;
  }

  char v9 = OUTLINED_FUNCTION_24_55();
  OUTLINED_FUNCTION_56_14(v1);
  OUTLINED_FUNCTION_37_20(v0);
  if ((v9 & 1) != 0) {
    goto LABEL_7;
  }
LABEL_8:
  uint64_t v10 = OUTLINED_FUNCTION_99_2();
  v8(v10);
  OUTLINED_FUNCTION_85_6();
  OUTLINED_FUNCTION_7_5();
}

void DeviceState.isSiriEmergencyCallingUnsupported.getter()
{
  uint64_t v4 = v0;
  uint64_t v6 = *(void *)(v5 - 8);
  OUTLINED_FUNCTION_27_61();
  __chkstk_darwin();
  OUTLINED_FUNCTION_6_4();
  __chkstk_darwin();
  OUTLINED_FUNCTION_52_16();
  __chkstk_darwin();
  OUTLINED_FUNCTION_66_9();
  char v9 = dispatch thunk of DeviceState.isPad.getter(v7, v8);
  OUTLINED_FUNCTION_43_10(v3, v4);
  if ((v9 & 1) != 0)
  {
    char v10 = 1;
  }

  else
  {
    uint64_t v11 = OUTLINED_FUNCTION_258();
    char v10 = dispatch thunk of DeviceState.isPod.getter(v11, v12);
  }

  uint64_t v13 = *(void (**)(uint64_t))(v6 + 8);
  OUTLINED_FUNCTION_6_10(v3);
  OUTLINED_FUNCTION_43_10(v2, v4);
  if ((v10 & 1) != 0)
  {
    OUTLINED_FUNCTION_6_10(v2);
    OUTLINED_FUNCTION_43_10(v1, v4);
  }

  else
  {
    char v14 = OUTLINED_FUNCTION_13_87();
    OUTLINED_FUNCTION_6_10(v2);
    OUTLINED_FUNCTION_43_10(v1, v4);
    if ((v14 & 1) == 0)
    {
      uint64_t v15 = OUTLINED_FUNCTION_258();
      dispatch thunk of DeviceState.isXRDevice.getter(v15, v16);
    }
  }

  uint64_t v17 = OUTLINED_FUNCTION_99_2();
  v13(v17);
  OUTLINED_FUNCTION_85_6();
  OUTLINED_FUNCTION_7_5();
}

void DeviceState.isGroupFaceTimeDeviceUnsupported(app:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  a19 = v23;
  a20 = v24;
  uint64_t v25 = v20;
  uint64_t v27 = *(void *)(v26 - 8);
  OUTLINED_FUNCTION_27_61();
  __chkstk_darwin();
  OUTLINED_FUNCTION_39_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_52_16();
  __chkstk_darwin();
  uint64_t v29 = (char *)&a9 - v28;
  Swift::Bool v30 = App.isFirstParty()();
  OUTLINED_FUNCTION_43_10((uint64_t)v29, v25);
  if (v30)
  {
    char v31 = OUTLINED_FUNCTION_22_61();
    OUTLINED_FUNCTION_43_10(v22, (uint64_t)v29);
    if ((v31 & 1) != 0) {
      char v32 = 1;
    }
    else {
      char v32 = OUTLINED_FUNCTION_23_63();
    }
    uint64_t v33 = *(void (**)(uint64_t))(v27 + 8);
    OUTLINED_FUNCTION_31_22(v22);
    OUTLINED_FUNCTION_43_10(v21, (uint64_t)v29);
    if ((v32 & 1) == 0) {
      OUTLINED_FUNCTION_13_87();
    }
    OUTLINED_FUNCTION_31_22(v21);
  }

  else
  {
    uint64_t v33 = *(void (**)(uint64_t))(v27 + 8);
  }

  uint64_t v34 = OUTLINED_FUNCTION_99_2();
  v33(v34);
  OUTLINED_FUNCTION_85_6();
  OUTLINED_FUNCTION_7_5();
}

void DeviceState.isSearchCallHistoryUnavailable(app:)()
{
  uint64_t v2 = v1;
  v21[1] = v3;
  uint64_t v4 = *(void *)(v1 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_52_16();
  __chkstk_darwin();
  uint64_t v6 = (char *)v21 - v5;
  __chkstk_darwin();
  uint64_t v8 = (char *)v21 - v7;
  __chkstk_darwin();
  char v10 = (char *)v21 - v9;
  char v13 = dispatch thunk of DeviceState.isAppleTV.getter(v11, v12);
  char v14 = *(void (**)(uint64_t, char *, uint64_t))(v4 + 16);
  OUTLINED_FUNCTION_8_87((uint64_t)v10);
  if ((v13 & 1) != 0) {
    char v15 = 1;
  }
  else {
    char v15 = OUTLINED_FUNCTION_13_87();
  }
  OUTLINED_FUNCTION_1_102((uint64_t)v10);
  OUTLINED_FUNCTION_8_87((uint64_t)v8);
  if ((v15 & 1) != 0)
  {
    OUTLINED_FUNCTION_1_102((uint64_t)v8);
    OUTLINED_FUNCTION_8_87((uint64_t)v6);
    goto LABEL_15;
  }

  if ((OUTLINED_FUNCTION_22_61() & 1) != 0)
  {
    Swift::Bool v16 = App.isFirstParty()();
    OUTLINED_FUNCTION_1_102((uint64_t)v8);
    OUTLINED_FUNCTION_8_87((uint64_t)v6);
    if (v16) {
      goto LABEL_15;
    }
  }

  else
  {
    OUTLINED_FUNCTION_1_102((uint64_t)v8);
    OUTLINED_FUNCTION_8_87((uint64_t)v6);
  }

  char v17 = OUTLINED_FUNCTION_23_63();
  v14(v0, v6, v2);
  if ((v17 & 1) != 0)
  {
    OUTLINED_FUNCTION_1_102(v0);
LABEL_14:
    App.isFirstParty()();
    goto LABEL_15;
  }

  uint64_t v18 = OUTLINED_FUNCTION_258();
  char v20 = dispatch thunk of DeviceState.isPad.getter(v18, v19);
  OUTLINED_FUNCTION_1_102(v0);
  if ((v20 & 1) != 0) {
    goto LABEL_14;
  }
LABEL_15:
  OUTLINED_FUNCTION_1_102((uint64_t)v6);
  OUTLINED_FUNCTION_85_6();
  OUTLINED_FUNCTION_7_5();
}

void DeviceState.requiresAppForFaceTime.getter( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  a19 = v23;
  a20 = v24;
  uint64_t v25 = v20;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  __chkstk_darwin();
  OUTLINED_FUNCTION_6_4();
  __chkstk_darwin();
  OUTLINED_FUNCTION_52_16();
  __chkstk_darwin();
  char v31 = (char *)&a9 - v30;
  uint64_t v32 = __chkstk_darwin();
  uint64_t v34 = (char *)&a9 - v33;
  char v36 = dispatch thunk of DeviceState.isPhone.getter(v32, v35);
  OUTLINED_FUNCTION_43_10((uint64_t)v34, v25);
  if ((v36 & 1) != 0) {
    char v37 = 1;
  }
  else {
    char v37 = OUTLINED_FUNCTION_25_61();
  }
  OUTLINED_FUNCTION_1_102((uint64_t)v34);
  OUTLINED_FUNCTION_43_10((uint64_t)v31, v25);
  if ((v37 & 1) != 0)
  {
    OUTLINED_FUNCTION_1_102((uint64_t)v31);
    OUTLINED_FUNCTION_43_10(v22, v25);
  }

  else
  {
    char v38 = OUTLINED_FUNCTION_24_55();
    OUTLINED_FUNCTION_1_102((uint64_t)v31);
    OUTLINED_FUNCTION_43_10(v22, v25);
    if ((v38 & 1) == 0)
    {
      char v39 = OUTLINED_FUNCTION_26_58();
      OUTLINED_FUNCTION_1_102(v22);
      OUTLINED_FUNCTION_43_10(v21, v25);
      if ((v39 & 1) == 0) {
        goto LABEL_9;
      }
      goto LABEL_8;
    }
  }

  OUTLINED_FUNCTION_1_102(v22);
  OUTLINED_FUNCTION_43_10(v21, v25);
LABEL_8:
  dispatch thunk of DeviceState.isXRDevice.getter(v29, v27);
LABEL_9:
  OUTLINED_FUNCTION_1_102(v21);
  OUTLINED_FUNCTION_85_6();
  OUTLINED_FUNCTION_7_5();
}

void DeviceState.isSendingFaceTimeLinkDeviceUnsupported(app:)()
{
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  OUTLINED_FUNCTION_27_61();
  __chkstk_darwin();
  OUTLINED_FUNCTION_39_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_66_9();
  char v9 = dispatch thunk of DeviceState.isWatch.getter(v7, v8);
  OUTLINED_FUNCTION_31_46(v1);
  if ((v9 & 1) != 0) {
    char v10 = 1;
  }
  else {
    char v10 = dispatch thunk of DeviceState.isHomePod.getter(v5, v3);
  }
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v11(v1, v5);
  OUTLINED_FUNCTION_31_46(v0);
  if ((v10 & 1) == 0) {
    dispatch thunk of DeviceState.isMac.getter(v5, v3);
  }
  v11(v0, v5);
  App.isFirstParty()();
  OUTLINED_FUNCTION_7_5();
}

uint64_t OUTLINED_FUNCTION_1_102(uint64_t a1)
{
  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_8_87(uint64_t a1)
{
  return v2(a1, v3, v1);
}

uint64_t OUTLINED_FUNCTION_13_87()
{
  return dispatch thunk of DeviceState.isMac.getter(v0, v1);
}

uint64_t OUTLINED_FUNCTION_17_67(uint64_t a1)
{
  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_22_61()
{
  return dispatch thunk of DeviceState.isWatch.getter(v0, v1);
}

uint64_t OUTLINED_FUNCTION_23_63()
{
  return dispatch thunk of DeviceState.isHomePod.getter(v0, v1);
}

uint64_t OUTLINED_FUNCTION_24_55()
{
  return dispatch thunk of DeviceState.isPod.getter(v0, v1);
}

uint64_t OUTLINED_FUNCTION_26_58()
{
  return dispatch thunk of DeviceState.isCarPlay.getter(v0, v1);
}

uint64_t OUTLINED_FUNCTION_30_48(uint64_t a1, uint64_t a2)
{
  return v4(v3, a2, v2);
}

uint64_t OUTLINED_FUNCTION_31_46(uint64_t a1)
{
  return v3(a1, v2, v1);
}

uint64_t OUTLINED_FUNCTION_32_51(uint64_t a1)
{
  return v3(a1, v2, v1);
}

uint64_t OUTLINED_FUNCTION_33_55()
{
  return specialized == infix<A>(_:_:)(v1, v0);
}

uint64_t OUTLINED_FUNCTION_34_39(uint64_t a1, uint64_t a2)
{
  return v3(v4, a2, v2);
}

void SeasAppUsageRule.__allocating_init(trialSmartAppSelectionConfigProvider:appUsageProvider:)( uint64_t a1, uint64_t a2)
{
}

void SeasAppUsageRule.init(trialSmartAppSelectionConfigProvider:appUsageProvider:)(uint64_t a1, uint64_t a2)
{
  v2[4] = type metadata accessor for SeasAppUsageRule();
  v2[5] = &outlined read-only object #0 of SeasAppUsageRule.init(trialSmartAppSelectionConfigProvider:appUsageProvider:);
  v2[6] = 0LL;
  v2[7] = 0LL;
  v2[2] = a2;
  v2[3] = a1;
  OUTLINED_FUNCTION_6();
}

uint64_t SeasAppUsageRule.resolve(sharedGlobals:startCallIntent:phoneCallNLIntent:appBundleIds:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v7[6] = a6;
  v7[7] = v6;
  v7[4] = a2;
  v7[5] = a5;
  v7[3] = a1;
  return swift_task_switch( SeasAppUsageRule.resolve(sharedGlobals:startCallIntent:phoneCallNLIntent:appBundleIds:),  0LL,  0LL);
}

uint64_t SeasAppUsageRule.resolve(sharedGlobals:startCallIntent:phoneCallNLIntent:appBundleIds:)()
{
  uint64_t v3 = v1;
  uint64_t v531 = v1 + 16;
  if (((*(uint64_t (**)(uint64_t, void))(**(void **)(*(void *)(v1 + 56) + 24LL) + 96LL))( 2LL,  *(void *)(v1 + 32)) & 1) == 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v30 = OUTLINED_FUNCTION_15_1();
    uint64_t v0 = __swift_project_value_buffer(v30, (uint64_t)static Logger.siriPhone);
    uint64_t v31 = OUTLINED_FUNCTION_48();
    Logger.logObject.getter(v31);
    os_log_type_t v32 = OUTLINED_FUNCTION_15_16();
    BOOL v33 = OUTLINED_FUNCTION_33_47(v32);
    uint64_t v12 = *(void **)(v1 + 56);
    if (v33)
    {
      uint64_t v34 = (_DWORD *)OUTLINED_FUNCTION_7_0(12LL);
      OUTLINED_FUNCTION_7_0(32LL);
      OUTLINED_FUNCTION_31_47();
      *uint64_t v34 = 136315138;
      *(void *)typed = v34 + 1;
      uint64_t v521 = (uint64_t)v34;
      uint64_t v35 = v3;
      uint64_t v36 = v12[4];
      uint64_t v3 = v12[5];
      uint64_t v37 = v12[6];
      char v38 = (void *)v12[7];
      uint64_t v533 = 0LL;
      unint64_t v534 = 0xE000000000000000LL;
      OUTLINED_FUNCTION_128();
      OUTLINED_FUNCTION_36_1();
      DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v36, v3, v37, v38);
      OUTLINED_FUNCTION_10_81();
      uint64_t v39 = OUTLINED_FUNCTION_23_5();
      *(void *)(v35 + swift_weakDestroy(v0 + 16) = OUTLINED_FUNCTION_3_122( v39,  v40,  v41,  v42,  v43,  v44,  v45,  v46,  v385,  (uint64_t)log,  v418,  (uint64_t)v434,  v451,  v467);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v531, v35 + 24, *(void *)typed);
      OUTLINED_FUNCTION_62();
      OUTLINED_FUNCTION_31_1((uint64_t)v12);
      uint64_t v29 = "%s is not enabled via trial, directly return noMatchFound";
      goto LABEL_27;
    }

id specialized Sequence.max(by:)(uint64_t a1)
{
  id result = (id)specialized _NativeDictionary.makeIterator()(a1, &v26);
  uint64_t v25 = v27;
  if (!v30)
  {
    int64_t v21 = v29 + 1;
    if (__OFADD__(v29, 1LL)) {
      goto LABEL_44;
    }
    int64_t v4 = (unint64_t)(v28 + 64) >> 6;
    if (v21 < v4)
    {
      unint64_t v22 = *(void *)(v27 + 8 * v21);
      int64_t v5 = v29 + 1;
      if (v22)
      {
LABEL_29:
        unint64_t v2 = (v22 - 1) & v22;
        unint64_t v3 = __clz(__rbit64(v22)) + (v5 << 6);
        goto LABEL_3;
      }

      int64_t v5 = v29 + 2;
      if (v29 + 2 < v4)
      {
        unint64_t v22 = *(void *)(v27 + 8 * v5);
        if (v22) {
          goto LABEL_29;
        }
        int64_t v5 = v29 + 3;
        if (v29 + 3 < v4)
        {
          unint64_t v22 = *(void *)(v27 + 8 * v5);
          if (v22) {
            goto LABEL_29;
          }
          int64_t v5 = v29 + 4;
          if (v29 + 4 < v4)
          {
            unint64_t v22 = *(void *)(v27 + 8 * v5);
            if (v22) {
              goto LABEL_29;
            }
            int64_t v5 = v29 + 5;
            if (v29 + 5 < v4)
            {
              unint64_t v22 = *(void *)(v27 + 8 * v5);
              if (!v22)
              {
                int64_t v23 = v29 + 6;
                do
                {
                  if (v23 >= v4) {
                    goto LABEL_42;
                  }
                  unint64_t v22 = *(void *)(v27 + 8 * v23++);
                }

                while (!v22);
                int64_t v5 = v23 - 1;
              }

              goto LABEL_29;
            }
          }
        }
      }
    }

Swift::String __swiftcall SeasAppUsageRule.getName()()
{
  uint64_t v0 = (void *)0x800000000033EDB0LL;
  uint64_t v1 = 0xD000000000000010LL;
  result._object = v0;
  result._uint64_t countAndFlagsBits = v1;
  return result;
}

uint64_t SeasAppUsageRule.deinit()
{
  return v0;
}

uint64_t SeasAppUsageRule.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 64LL, 7LL);
}

uint64_t protocol witness for SeasRule.resolve(sharedGlobals:startCallIntent:phoneCallNLIntent:appBundleIds:) in conformance SeasAppUsageRule( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int64_t v14 = *(int **)(**(void **)v6 + 112LL);
  id v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)v14 + *v14);
  uint64_t v15 = (void *)swift_task_alloc(v14[1]);
  *(void *)(v7 + swift_weakDestroy(v0 + 16) = v15;
  *uint64_t v15 = v7;
  v15[1] = protocol witness for Action.run() in conformance PlayVoiceMailAction;
  return v17(a1, a2, a3, a4, a5, a6);
}

uint64_t type metadata accessor for SeasAppUsageRule()
{
  return objc_opt_self(&OBJC_CLASS____TtC27PhoneCallFlowDelegatePlugin16SeasAppUsageRule);
}

void outlined consume of (key: String, value: NSNumber)?(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    swift_bridgeObjectRelease(a2);
  }

id outlined copy of (key: String, value: NSNumber)?(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    swift_bridgeObjectRetain(a2);
    return a3;
  }

  return result;
}

void specialized _NativeDictionary.extractDictionary(using:count:)( unint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (!a3) {
    return;
  }
  OUTLINED_FUNCTION_42_28();
  if (v6)
  {
    swift_retain();
    return;
  }

  uint64_t v7 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<String, Double>);
  uint64_t v8 = OUTLINED_FUNCTION_48_35();
  uint64_t v11 = v8;
  uint64_t v34 = v7;
  if (v7 < 1) {
    unint64_t v12 = 0LL;
  }
  else {
    unint64_t v12 = *a1;
  }
  uint64_t v13 = 0LL;
  uint64_t v14 = v8 + 64;
  while (1)
  {
    if (v12)
    {
      unint64_t v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v16 = v15 | (v13 << 6);
      goto LABEL_26;
    }

    uint64_t v17 = v13 + 1;
    if (__OFADD__(v13, 1LL)) {
      goto LABEL_40;
    }
    if (v17 >= v34) {
      return;
    }
    unint64_t v18 = a1[v17];
    ++v13;
    if (!v18)
    {
      uint64_t v13 = v17 + 1;
      if (v17 + 1 >= v34) {
        return;
      }
      unint64_t v18 = a1[v13];
      if (!v18)
      {
        uint64_t v13 = v17 + 2;
        if (v17 + 2 >= v34) {
          return;
        }
        unint64_t v18 = a1[v13];
        if (!v18) {
          break;
        }
      }
    }

void specialized _NativeDictionary.extractDictionary(using:count:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a3) {
    return;
  }
  OUTLINED_FUNCTION_42_28();
  if (v7)
  {
    swift_retain();
    return;
  }

  uint64_t v8 = v6;
  uint64_t v9 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<String, [INCallGroup]>);
  uint64_t v10 = OUTLINED_FUNCTION_48_35();
  uint64_t v13 = v10;
  uint64_t v36 = v9;
  uint64_t v37 = v8;
  if (v8 < 1) {
    unint64_t v14 = 0LL;
  }
  else {
    unint64_t v14 = *v9;
  }
  uint64_t v15 = 0LL;
  uint64_t v16 = v10 + 64;
  while (1)
  {
    if (v14)
    {
      unint64_t v17 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v18 = v17 | (v15 << 6);
      goto LABEL_26;
    }

    uint64_t v19 = v15 + 1;
    if (__OFADD__(v15, 1LL)) {
      goto LABEL_40;
    }
    if (v19 >= v37) {
      return;
    }
    unint64_t v20 = v36[v19];
    ++v15;
    if (!v20)
    {
      uint64_t v15 = v19 + 1;
      if (v19 + 1 >= v37) {
        return;
      }
      unint64_t v20 = v36[v15];
      if (!v20)
      {
        uint64_t v15 = v19 + 2;
        if (v19 + 2 >= v37) {
          return;
        }
        unint64_t v20 = v36[v15];
        if (!v20) {
          break;
        }
      }
    }

Swift::Int specialized _NativeDictionary.extractDictionary(using:count:)( unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return (Swift::Int)&_swiftEmptyDictionarySingleton;
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<String, NSNumber>);
  Swift::Int result = static _DictionaryStorage.allocate(capacity:)(v5);
  Swift::Int v9 = result;
  uint64_t v33 = a1;
  uint64_t v34 = a2;
  if (a2 < 1) {
    unint64_t v10 = 0LL;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0LL;
  Swift::Int v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
    }

    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1LL)) {
        goto LABEL_40;
      }
      if (v15 >= v34) {
        return v9;
      }
      unint64_t v16 = v33[v15];
      ++v11;
      if (!v16)
      {
        uint64_t v11 = v15 + 1;
        if (v15 + 1 >= v34) {
          return v9;
        }
        unint64_t v16 = v33[v11];
        if (!v16)
        {
          uint64_t v11 = v15 + 2;
          if (v15 + 2 >= v34) {
            return v9;
          }
          unint64_t v16 = v33[v11];
          if (!v16)
          {
            uint64_t v17 = v15 + 3;
            if (v17 >= v34) {
              return v9;
            }
            unint64_t v16 = v33[v17];
            if (!v16)
            {
              while (1)
              {
                uint64_t v11 = v17 + 1;
                if (__OFADD__(v17, 1LL)) {
                  goto LABEL_41;
                }
                if (v11 >= v34) {
                  return v9;
                }
                unint64_t v16 = v33[v11];
                ++v17;
                if (v16) {
                  goto LABEL_24;
                }
              }
            }

            uint64_t v11 = v17;
          }
        }
      }

uint64_t specialized _NativeDictionary.makeIterator()@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = -1LL;
  uint64_t v3 = -1LL << *(_BYTE *)(a1 + 32);
  *a2 = a1;
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t result = a1 + 64;
  uint64_t v5 = v6;
  if (-v3 < 64) {
    uint64_t v2 = ~(-1LL << -(char)v3);
  }
  a2[1] = result;
  a2[2] = ~v3;
  a2[3] = 0LL;
  a2[4] = v2 & v5;
  return result;
}

uint64_t OUTLINED_FUNCTION_3_122( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)( *(void *)(v14 - 104),  *(void *)(v14 - 96),  (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_4_106(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(a1, v4, v5, a4);
}

uint64_t OUTLINED_FUNCTION_8_88( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)( *(void *)(v14 - 104),  *(void *)(v14 - 96),  (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_10_81()
{
  return swift_bridgeObjectRelease(v0);
}

uint64_t OUTLINED_FUNCTION_14_76@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  *(void *)(v5 + swift_weakDestroy(v0 + 16) = a3;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(v4, v3, a1, a2);
}

void OUTLINED_FUNCTION_17_68()
{
}

uint64_t OUTLINED_FUNCTION_22_62( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22)
{
  *(void *)(v23 + swift_weakDestroy(v0 + 16) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(a22, v23 + 24, a19, v22);
}

void OUTLINED_FUNCTION_28_57( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17)
{
}

void OUTLINED_FUNCTION_29_49( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
}

uint64_t OUTLINED_FUNCTION_30_49()
{
  *(void *)(v1 - outlined init with copy of SharedGlobalsProviding(v0, v1 - 104) = 0LL;
  *(void *)(v1 - 96) = 0xE000000000000000LL;
  return swift_bridgeObjectRetain(v0);
}

  ;
}

void OUTLINED_FUNCTION_35_36( void *a1, os_log_s *a2, int a3, const char *a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, os_log_type_t type)
{
}

void OUTLINED_FUNCTION_36_40( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19)
{
}

uint64_t OUTLINED_FUNCTION_37_41()
{
  return v0;
}

void OUTLINED_FUNCTION_38_39()
{
}

uint64_t OUTLINED_FUNCTION_39_33()
{
  return v0;
}

  ;
}

void OUTLINED_FUNCTION_43_30( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14)
{
}

void OUTLINED_FUNCTION_46_34(void *a1, os_log_s *a2, os_log_type_t a3, const char *a4)
{
}

uint64_t OUTLINED_FUNCTION_48_35()
{
  return static _DictionaryStorage.allocate(capacity:)(v0);
}

id OUTLINED_FUNCTION_52_30()
{
  return [v0 *(SEL *)(v1 + 2568)];
}

void OUTLINED_FUNCTION_53_32(uint64_t a1, uint64_t a2)
{
}

void *OUTLINED_FUNCTION_54_26(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  return Hasher.init(_seed:)((uint64_t *)va, *(void *)(v3 + 40));
}

uint64_t OUTLINED_FUNCTION_55_30( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21)
{
  return swift_bridgeObjectRetain(a21);
}

void _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay12SiriOntology21NonTerminalIntentNodeVG_27PhoneCallFlowDelegatePlugin0dJ7Contact_ps5NeverOTg5( void (*a1)(void *__return_ptr, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySo8INPersonCG_Say11SiriKitFlow11DisplayHintVG12displayHints_AI13SemanticValueV02idM0ts5NeverOTg5( void (*a1)(id *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  unint64_t v18 = a1;
  uint64_t v19 = a2;
  __chkstk_darwin();
  char v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = *(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8LL));
  while (v8)
  {
    uint64_t v21 = _swiftEmptyArrayStorage;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    if (v8 < 0)
    {
      __break(1u);
      return;
    }

    uint64_t v9 = 0LL;
    unint64_t v10 = v21;
    unint64_t v16 = a3 & 0xC000000000000001LL;
    while (v8 != v9)
    {
      if (v16) {
        id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, a3);
      }
      else {
        id v11 = *(id *)(a3 + 8 * v9 + 32);
      }
      Swift::Int v12 = v11;
      id v20 = v11;
      v18(&v20);
      if (v4)
      {
        swift_release(v10);

        return;
      }

      uint64_t v4 = 0LL;

      uint64_t v21 = v10;
      unint64_t v13 = v10[2];
      if (v13 >= v10[3] >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        unint64_t v10 = v21;
      }

      ++v9;
      v10[2] = v13 + 1;
      outlined init with take of PhoneCallNLIntent?( (uint64_t)v7,  (uint64_t)v10 + ((*(unsigned __int8 *)(v17 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))
      + *(void *)(v17 + 72) * v13,
        &demangling cache variable for type metadata for (displayHints: [DisplayHint], idValue: SemanticValue));
      if (v8 == v9) {
        return;
      }
    }

    __break(1u);
LABEL_18:
    if (a3 < 0) {
      uint64_t v14 = a3;
    }
    else {
      uint64_t v14 = a3 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter(v14);
    swift_bridgeObjectRelease();
  }

void _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay12SiriOntology21NonTerminalIntentNodeVG_27PhoneCallFlowDelegatePlugin8SmsGroup_ps5NeverOTg5( void (*a1)(void *__return_ptr, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay12SiriOntology21NonTerminalIntentNodeVG_27PhoneCallFlowDelegatePlugin0dJ7Contact_ps5NeverOTg5Tm( void (*a1)(void *__return_ptr, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(BOOL, uint64_t, uint64_t), uint64_t (*a6)(void *, uint64_t))
{
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(a3 + 16);
  if (v8)
  {
    BOOL v29 = _swiftEmptyArrayStorage;
    a5(0, v8, 0LL);
    unint64_t v10 = _swiftEmptyArrayStorage;
    uint64_t v11 = *(void *)(type metadata accessor for NonTerminalIntentNode(0LL) - 8);
    uint64_t v12 = a3 + ((*(unsigned __int8 *)(v11 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    uint64_t v13 = *(void *)(v11 + 72);
    while (1)
    {
      a1(v26, v12);
      if (v7) {
        break;
      }
      uint64_t v7 = 0LL;
      BOOL v29 = v10;
      unint64_t v15 = v10[2];
      unint64_t v14 = v10[3];
      if (v15 >= v14 >> 1) {
        a5(v14 > 1, v15 + 1, 1LL);
      }
      uint64_t v16 = v27;
      uint64_t v17 = v28;
      uint64_t v18 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v26, v27);
      __chkstk_darwin(v18);
      OUTLINED_FUNCTION_8();
      uint64_t v21 = v20 - v19;
      (*(void (**)(uint64_t))(v22 + 16))(v20 - v19);
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)( v15,  v21,  (uint64_t *)&v29,  v16,  v17,  a6);
      __swift_destroy_boxed_opaque_existential_1(v26);
      unint64_t v10 = v29;
      v12 += v13;
      if (!--v8) {
        goto LABEL_9;
      }
    }

    OUTLINED_FUNCTION_118();
  }

void _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay17SiriAppResolution0E0CG_0D8NLUTypes0D27_Nlu_External_UserDialogActVs5NeverOTg5( void (*a1)(uint64_t *), uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v13 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  uint64_t v6 = *(void *)(v13 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v15 = v7;
  if (a3 >> 62) {
    goto LABEL_18;
  }
  uint64_t v8 = *(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8LL));
  while (1)
  {
    if (!v8)
    {
LABEL_16:
      OUTLINED_FUNCTION_7_1();
      return;
    }

    uint64_t v17 = _swiftEmptyArrayStorage;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    if (v8 < 0) {
      break;
    }
    uint64_t v9 = 0LL;
    unint64_t v10 = v17;
    while (v8 != v9)
    {
      if ((a3 & 0xC000000000000001LL) != 0)
      {
        uint64_t v11 = specialized _ArrayBuffer._getElementSlowPath(_:)(v9, a3);
      }

      else
      {
        uint64_t v11 = *(void *)(a3 + 8 * v9 + 32);
        swift_retain();
      }

      uint64_t v16 = v11;
      a1(&v16);
      if (v4)
      {
        OUTLINED_FUNCTION_118();
        swift_release(v11);
        goto LABEL_16;
      }

      uint64_t v4 = 0LL;
      swift_release(v11);
      uint64_t v17 = v10;
      unint64_t v12 = v10[2];
      if (v12 >= v10[3] >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        unint64_t v10 = v17;
      }

      ++v9;
      v10[2] = v12 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 32))( (unint64_t)v10 + ((*(unsigned __int8 *)(v6 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
      + *(void *)(v6 + 72) * v12,
        v15,
        v13);
      if (v8 == v9) {
        goto LABEL_16;
      }
    }

    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v8 = OUTLINED_FUNCTION_23_2();
    swift_bridgeObjectRelease();
  }

  __break(1u);
}

void _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySo19_HKEmergencyContactCG_So8INPersonCs5NeverOTg5( void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, unint64_t a3)
{
  uint64_t v20 = a2;
  if (a3 >> 62)
  {
    OUTLINED_FUNCTION_3_42();
    OUTLINED_FUNCTION_23_2();
    OUTLINED_FUNCTION_41_40();
  }

  else
  {
    uint64_t v4 = *(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8LL));
  }

  if (!v4)
  {
LABEL_11:
    OUTLINED_FUNCTION_20_17();
    return;
  }

  OUTLINED_FUNCTION_20_67();
  if ((v4 & 0x8000000000000000LL) == 0)
  {
    while (1)
    {
      id v7 = (a3 & 0xC000000000000001LL) != 0 ? (id)OUTLINED_FUNCTION_40_33() : *(id *)(a3 + 32);
      uint64_t v8 = v7;
      uint64_t v21 = (uint64_t)v7;
      a1(v22, &v21);

      if (v3) {
        break;
      }
      uint64_t v10 = OUTLINED_FUNCTION_30_50(v9);
      OUTLINED_FUNCTION_18_68(v10, v11, v12, v13, v14, v15, v16, v17, v19, v20, v21, v22[0], v22[1], v23);
      uint64_t v18 = OUTLINED_FUNCTION_19_68();
      specialized ContiguousArray._endMutation()(v18);
    }

    swift_release(v23);
    goto LABEL_11;
  }

  __break(1u);
}

void *_sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lF10Foundation8IndexSetV9RangeViewV_SnySS0E0VGs5NeverOTg5( void (*a1)(__int128 *__return_ptr, __int128 *))
{
  uint64_t v2 = v1;
  uint64_t v3 = type metadata accessor for IndexSet.RangeView(0LL);
  unint64_t v4 = lazy protocol witness table accessor for type IndexSet.RangeView and conformance IndexSet.RangeView();
  uint64_t v5 = dispatch thunk of Collection.count.getter(v3, v4);
  uint64_t v6 = _swiftEmptyArrayStorage;
  if (!v5) {
    return v6;
  }
  uint64_t v7 = v5;
  uint64_t v19 = _swiftEmptyArrayStorage;
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  uint64_t v6 = _swiftEmptyArrayStorage;
  uint64_t result = dispatch thunk of Collection.startIndex.getter(&v18, v3, v4);
  if ((v7 & 0x8000000000000000LL) == 0)
  {
    while (1)
    {
      uint64_t v9 = (void (*)(_BYTE *, void))dispatch thunk of Collection.subscript.read(v16, &v18, v3, v4);
      __int128 v15 = *v10;
      v9(v16, 0LL);
      a1(&v17, &v15);
      if (v2) {
        break;
      }
      uint64_t v2 = 0LL;
      __int128 v11 = v17;
      uint64_t v19 = v6;
      unint64_t v12 = v6[2];
      if (v12 >= v6[3] >> 1)
      {
        __int128 v13 = v17;
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        __int128 v11 = v13;
        uint64_t v6 = v19;
      }

      v6[2] = v12 + 1;
      *(_OWORD *)&v6[2 * v12 + 4] = v11;
      dispatch thunk of Collection.formIndex(after:)(&v18, v3, v4);
      if (!--v7) {
        return v6;
      }
    }

    OUTLINED_FUNCTION_118();
    return v6;
  }

  __break(1u);
  return result;
}

void _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay12SiriOntology23UsoEntity_common_PersonCG_So8INPersonCsAE_pTg5( void (*a1)(uint64_t *__return_ptr, uint64_t *, uint64_t *), uint64_t a2, unint64_t a3)
{
  uint64_t v18 = a2;
  if (a3 >> 62)
  {
    OUTLINED_FUNCTION_3_42();
    OUTLINED_FUNCTION_23_2();
    OUTLINED_FUNCTION_41_40();
  }

  else
  {
    uint64_t v4 = *(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8LL));
  }

  if (!v4)
  {
LABEL_11:
    OUTLINED_FUNCTION_20_17();
    return;
  }

  OUTLINED_FUNCTION_20_67();
  if ((v4 & 0x8000000000000000LL) == 0)
  {
    while (1)
    {
      if ((a3 & 0xC000000000000001LL) != 0)
      {
        uint64_t v7 = OUTLINED_FUNCTION_40_33();
      }

      else
      {
        uint64_t v7 = *(void *)(a3 + 32);
        swift_retain();
      }

      uint64_t v20 = v7;
      a1(v21, &v20, &v19);
      uint64_t v8 = swift_release(v7);
      if (v3) {
        break;
      }
      uint64_t v9 = OUTLINED_FUNCTION_30_50(v8);
      OUTLINED_FUNCTION_18_68(v9, v10, v11, v12, v13, v14, v15, v16, v18, v19, v20, v21[0], v21[1], v22);
      uint64_t v17 = OUTLINED_FUNCTION_19_68();
      specialized ContiguousArray._endMutation()(v17);
    }

    swift_release(v22);
    goto LABEL_11;
  }

  __break(1u);
}

uint64_t PhoneContactDisplayHintFactory.init(assistantProperties:deviceState:)@<X0>( void *a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v8 = v7 - v6;
  outlined init with copy of SharedGlobalsProviding((uint64_t)a1, a3);
  uint64_t v9 = type metadata accessor for PhoneCallDisplayTextCATs(0LL);
  static CATOption.defaultMode.getter(v9);
  type metadata accessor for CATGlobals(0LL);
  outlined init with copy of SharedGlobalsProviding((uint64_t)a2, (uint64_t)v13);
  uint64_t v10 = CATGlobals.__allocating_init(device:)(v13);
  uint64_t v11 = CATWrapper.__allocating_init(options:globals:)(v8, v10);
  __swift_destroy_boxed_opaque_existential_1(a1);
  *(void *)(a3 + 80) = v11;
  return outlined init with take of AppSelectionSignalComponent(a2, a3 + 40);
}

uint64_t PhoneContactDisplayHintFactory.build(for:_:)( unint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v130 = OUTLINED_FUNCTION_26_59();
  uint64_t v7 = *(void *)(v130 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v10 = (char *)(v9 - v8);
  uint64_t v125 = type metadata accessor for DisplayHint(0LL);
  uint64_t v132 = *(void *)(v125 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v131 = v11;
  *(void *)&__int128 v133 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (displayHints: [DisplayHint], idValue: SemanticValue));
  uint64_t v116 = *(void *)(v133 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  uint64_t v128 = (char *)v114 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  OUTLINED_FUNCTION_83_6();
  __chkstk_darwin();
  uint64_t v14 = (char *)v114 - v13;
  uint64_t v15 = OUTLINED_FUNCTION_39_34();
  uint64_t v121 = *(void *)(v15 - 8);
  uint64_t v122 = v15;
  uint64_t v16 = *(void *)(v121 + 64);
  __chkstk_darwin();
  uint64_t v129 = (char *)v114 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v18 = (char *)v114 - v17;
  uint64_t v19 = swift_allocObject(&unk_416EC0, 32LL, 7LL);
  os_log_t v115 = a2;
  *(void *)(v19 + ++*(void *)(v0 + 16) = a2;
  *(void *)(v19 + 24) = a3;
  uint64_t v119 = v19;
  v114[1] = a3;
  swift_retain();
  uint64_t v124 = v18;
  OrdinalDisplayHintsBuilder.init(referenceNode:)(0xD000000000000019LL, 0x8000000000342BD0LL);
  uint64_t v20 = OUTLINED_FUNCTION_43_31((uint64_t)&unk_416EE8);
  uint64_t v120 = v20;
  *(void *)(v20 + ++*(void *)(v0 + 16) = _swiftEmptyArrayStorage;
  uint64_t v21 = v20 + 16;
  uint64_t v22 = OUTLINED_FUNCTION_43_31((uint64_t)&unk_416F10);
  uint64_t v118 = v22;
  *(void *)(v22 + ++*(void *)(v0 + 16) = _swiftEmptyArrayStorage;
  uint64_t v23 = v22 + 16;
  char v24 = specialized Sequence.contains(where:)(a1, (char *)&dword_0 + 2);
  unint64_t v126 = a1;
  if ((v24 & 1) != 0 && (specialized Sequence.contains(where:)(a1, (char *)&dword_0 + 1) & 1) != 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v25 = type metadata accessor for Logger(0LL);
    uint64_t v26 = __swift_project_value_buffer(v25, (uint64_t)static Logger.siriPhone);
    uint64_t v27 = (os_log_s *)Logger.logObject.getter(v26);
    os_log_type_t v29 = static os_log_type_t.debug.getter(v27, v28);
    BOOL v30 = os_log_type_enabled(v27, v29);
    uint64_t v31 = v126;
    if (v30)
    {
      uint64_t v32 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
      *(_WORD *)uint64_t v32 = 0;
      _os_log_impl(&dword_0, v27, v29, "Building display hints for foreign emergency disambiguation", v32, 2u);
      OUTLINED_FUNCTION_0_2((uint64_t)v32);
    }

    uint64_t v34 = v121;
    uint64_t v33 = v122;
    char v35 = v129;
    uint64_t v36 = (uint64_t)v124;
    (*(void (**)(char *, char *, uint64_t))(v121 + 16))(v129, v124, v122);
    uint64_t v37 = *(unsigned __int8 *)(v34 + 80);
    uint64_t v38 = (v37 + 32) & ~v37;
    unint64_t v39 = (v16 + v38 + 7) & 0xFFFFFFFFFFFFFFF8LL;
    uint64_t v40 = swift_allocObject(&unk_416F38, v39 + 16, v37 | 7);
    uint64_t v41 = v120;
    uint64_t v42 = v118;
    *(void *)(v40 + ++*(void *)(v0 + 16) = v120;
    *(void *)(v40 + 24) = v42;
    (*(void (**)(uint64_t, char *, uint64_t))(v34 + 32))(v40 + v38, v35, v33);
    uint64_t v43 = (uint64_t (**)(uint64_t))(v40 + v39);
    uint64_t v44 = (uint64_t (*)(uint64_t))v119;
    *uint64_t v43 = partial apply for closure #1 in PhoneContactDisplayHintFactory.build(for:_:);
    v43[1] = v44;
    swift_retain();
    swift_retain();
    swift_retain();
    PhoneContactDisplayHintFactory.buildForeignEmergencyHints(_:_:)( v31,  (void (*)(void))partial apply for closure #2 in PhoneContactDisplayHintFactory.build(for:_:),  v40);
    swift_release(v44);
    swift_release(v40);
    OUTLINED_FUNCTION_122_5(v36, *(uint64_t (**)(uint64_t, uint64_t))(v34 + 8));
    swift_release(v41);
    uint64_t v45 = v42;
  }

  else
  {
    v114[0] = v23;
    uint64_t v46 = v130;
    if (one-time initialization token for siriPhone != -1) {
      goto LABEL_52;
    }
    while (1)
    {
      uint64_t v129 = v10;
      uint64_t v47 = type metadata accessor for Logger(0LL);
      uint64_t v127 = __swift_project_value_buffer(v47, (uint64_t)static Logger.siriPhone);
      uint64_t v48 = (os_log_s *)Logger.logObject.getter(v127);
      os_log_type_t v50 = static os_log_type_t.debug.getter(v48, v49);
      if (os_log_type_enabled(v48, v50))
      {
        int v51 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
        *(_WORD *)int v51 = 0;
        _os_log_impl(&dword_0, v48, v50, "Building display hints for regular contact disambiguation", v51, 2u);
        OUTLINED_FUNCTION_0_2((uint64_t)v51);
      }

      uint64_t v117 = v21;

      __chkstk_darwin();
      v113[2] = v123;
      _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySo8INPersonCG_Say11SiriKitFlow11DisplayHintVG12displayHints_AI13SemanticValueV02idM0ts5NeverOTg5( (void (*)(id *))partial apply for closure #3 in PhoneContactDisplayHintFactory.build(for:_:),  (uint64_t)v113,  v126);
      uint64_t v53 = *(void *)(v52 + 16);
      uint64_t v54 = _swiftEmptyArrayStorage;
      uint64_t v123 = v52;
      if (!v53) {
        break;
      }
      OUTLINED_FUNCTION_37_2();
      uint64_t v57 = v55 + v56;
      unint64_t v126 = *(void *)(v58 + 72);
      while (1)
      {
        outlined init with copy of TransformationResult?( v57,  (uint64_t)v14,  &demangling cache variable for type metadata for (displayHints: [DisplayHint], idValue: SemanticValue));
        uint64_t v59 = *(int *)(v133 + 48);
        uint64_t v60 = &v3[v59];
        uint64_t v10 = *(char **)v14;
        *(void *)uint64_t v3 = *(void *)v14;
        (*(void (**)(char *, char *, uint64_t))(v7 + 16))(&v3[v59], &v14[v59], v46);
        swift_bridgeObjectRetain();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v60, v46);
        outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v14,  &demangling cache variable for type metadata for (displayHints: [DisplayHint], idValue: SemanticValue));
        uint64_t v21 = *((void *)v10 + 2);
        uint64_t v61 = v54[2];
        uint64_t v46 = v61 + v21;
        if (__OFADD__(v61, v21)) {
          break;
        }
        if (!swift_isUniquelyReferenced_nonNull_native(v54) || v46 > v54[3] >> 1)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v54 = v62;
        }

        uint64_t v46 = v130;
        if (*((void *)v10 + 2))
        {
          uint64_t v63 = v54[2];
          if ((v54[3] >> 1) - v63 < v21) {
            goto LABEL_50;
          }
          unint64_t v64 = (*(unsigned __int8 *)(v132 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80);
          uint64_t v65 = *(void *)(v132 + 72);
          uint64_t v66 = (char *)v54 + v64 + v65 * v63;
          if (&v10[v64] < &v66[v65 * v21] && v66 < &v10[v64 + v65 * v21])
          {
            OUTLINED_FUNCTION_0_17();
            OUTLINED_FUNCTION_63_2();
            uint64_t result = OUTLINED_FUNCTION_5_15(v105, v106, v107, v108, v109, v110, v111);
            __break(1u);
            return result;
          }

          swift_arrayInitWithCopy(v66);
          if (v21)
          {
            uint64_t v68 = v54[2];
            BOOL v69 = __OFADD__(v68, v21);
            uint64_t v70 = v68 + v21;
            if (v69) {
              goto LABEL_51;
            }
            v54[2] = v70;
          }
        }

        else if (v21)
        {
          goto LABEL_49;
        }

        swift_bridgeObjectRelease();
        v57 += v126;
        if (!--v53) {
          goto LABEL_29;
        }
      }

      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }

uint64_t static PhoneContactDisplayHintFactory.build(for:deviceState:appInfoBuilder:)( uint64_t a1, void *a2, void *a3)
{
  return specialized static PhoneContactDisplayHintFactory.build(for:deviceState:appInfoBuilder:)(a1, a2);
}

uint64_t specialized Sequence.contains(where:)(unint64_t a1, id a2)
{
  uint64_t v4 = swift_allocObject(&unk_417010, 24LL, 7LL);
  *(void *)(v4 + ++*(void *)(v0 + 16) = a2;
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v5 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8LL));
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = OUTLINED_FUNCTION_23_2())
  {
    uint64_t v14 = v4;
    uint64_t v6 = 4LL;
    while (1)
    {
      id v7 = (a1 & 0xC000000000000001LL) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6 - 4, a1)
         : *(id *)(a1 + 8 * v6);
      uint64_t v8 = v7;
      uint64_t v4 = v6 - 3;
      if (__OFADD__(v6 - 4, 1LL)) {
        break;
      }
      id v9 = [v7 personHandle];
      if (v9)
      {
        uint64_t v10 = v9;
        id v11 = [v9 emergencyType];

        if (v11 == a2)
        {
          uint64_t v12 = 1LL;
LABEL_14:
          uint64_t v4 = v14;
          goto LABEL_18;
        }
      }

      else
      {
      }

      ++v6;
      if (v4 == v5)
      {
        uint64_t v12 = 0LL;
        goto LABEL_14;
      }
    }

    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }

  uint64_t v12 = 0LL;
LABEL_18:
  swift_bridgeObjectRelease();
  swift_release(v4);
  return v12;
}

uint64_t closure #1 in PhoneContactDisplayHintFactory.build(for:_:)( uint64_t a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DisplayHint(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  id v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10)
  {
    v29[1] = a3;
    BOOL v30 = a2;
    id v11 = (os_log_s *)((*(unsigned __int8 *)(v7 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    uint64_t v12 = one-time initialization token for siriPhone;
    swift_bridgeObjectRetain();
    if (v12 != -1) {
LABEL_12:
    }
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    uint64_t v14 = 0LL;
    v29[0] = a1;
    uint64_t v15 = (char *)v11 + a1;
    *(void *)&__int128 v13 = 136315138LL;
    __int128 v32 = v13;
    uint64_t v31 = (char *)&type metadata for Any + 8;
    uint64_t v33 = (char *)v11 + a1;
    uint64_t v34 = v10;
    do
    {
      uint64_t v16 = v14 + 1;
      if (__OFADD__(v14, 1LL))
      {
        __break(1u);
        goto LABEL_12;
      }

      uint64_t v17 = &v15[*(void *)(v7 + 72) * v14];
      uint64_t v18 = type metadata accessor for Logger(0LL);
      __swift_project_value_buffer(v18, (uint64_t)static Logger.siriPhone);
      uint64_t v19 = (*(uint64_t (**)(char *, char *, uint64_t))(v7 + 16))(v9, v17, v6);
      id v11 = (os_log_s *)Logger.logObject.getter(v19);
      os_log_type_t v21 = static os_log_type_t.debug.getter(v11, v20);
      a1 = v21;
      if (os_log_type_enabled(v11, v21))
      {
        uint64_t v22 = swift_slowAlloc(12LL, -1LL);
        uint64_t v23 = swift_slowAlloc(32LL, -1LL);
        uint64_t v35 = v23;
        *(_DWORD *)uint64_t v22 = v32;
        uint64_t v24 = DisplayHint.description.getter();
        *(void *)(v22 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v24, v25, &v35);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        _os_log_impl(&dword_0, v11, (os_log_type_t)a1, "DisplayHint: %s", (uint8_t *)v22, 0xCu);
        swift_arrayDestroy(v23, 1LL);
        uint64_t v26 = v23;
        uint64_t v15 = v33;
        swift_slowDealloc(v26, -1LL, -1LL);
        uint64_t v27 = v22;
        uint64_t v10 = v34;
        swift_slowDealloc(v27, -1LL, -1LL);
      }

      else
      {
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      }

      ++v14;
    }

    while (v16 != v10);
    a1 = v29[0];
    swift_bridgeObjectRelease();
    a2 = v30;
  }

  return a2(a1);
}

uint64_t closure #2 in PhoneContactDisplayHintFactory.build(for:_:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v41 = a6;
  uint64_t v42 = a5;
  uint64_t v39 = a3;
  uint64_t v40 = a4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SemanticValue?);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for SemanticValue(0LL);
  uint64_t v48 = *(void *)(v9 - 8);
  __chkstk_darwin();
  id v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v45 = (char *)&v37 - v12;
  uint64_t v13 = type metadata accessor for DisplayHint(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin();
  uint64_t v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  swift_beginAccess(a2 + 16, v51, 33LL, 0LL);
  uint64_t v17 = swift_bridgeObjectRetain();
  specialized Array.append<A>(contentsOf:)(v17);
  swift_endAccess(v51);
  uint64_t v38 = a2 + 16;
  swift_beginAccess(a2 + 16, v51, 0LL, 0LL);
  uint64_t v18 = *(void *)(a2 + 16);
  uint64_t v19 = *(void *)(v18 + 16);
  if (v19)
  {
    uint64_t v20 = v18 + ((*(unsigned __int8 *)(v14 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    uint64_t v21 = *(void *)(v14 + 72);
    uint64_t v46 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 16);
    uint64_t v47 = v21;
    uint64_t v37 = v18;
    swift_bridgeObjectRetain();
    uint64_t v22 = _swiftEmptyArrayStorage;
    uint64_t v43 = v13;
    uint64_t v44 = v11;
    do
    {
      uint64_t v23 = v46(v16, v20, v13);
      DisplayHint.idValue.getter(v23);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
      if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1LL, v9) == 1)
      {
        outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v8,  &demangling cache variable for type metadata for SemanticValue?);
      }

      else
      {
        uint64_t v24 = v14;
        unint64_t v25 = *(void (**)(char *, char *, uint64_t))(v48 + 32);
        uint64_t v26 = v45;
        v25(v45, v8, v9);
        v25(v11, v26, v9);
        if ((swift_isUniquelyReferenced_nonNull_native(v22) & 1) == 0)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v22 = v29;
        }

        unint64_t v27 = v22[2];
        if (v27 >= v22[3] >> 1)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v22 = v30;
        }

        uint64_t v22[2] = v27 + 1;
        unint64_t v28 = (unint64_t)v22
        id v11 = v44;
        v25((char *)v28, v44, v9);
        uint64_t v14 = v24;
        uint64_t v13 = v43;
      }

      v20 += v47;
      --v19;
    }

    while (v19);
    swift_bridgeObjectRelease();
  }

  else
  {
    uint64_t v22 = _swiftEmptyArrayStorage;
  }

  uint64_t v31 = v39;
  swift_beginAccess(v39 + 16, v50, 33LL, 0LL);
  specialized Array.append<A>(contentsOf:)((uint64_t)v22);
  swift_endAccess(v50);
  swift_beginAccess(v31 + 16, v50, 0LL, 0LL);
  uint64_t v32 = swift_bridgeObjectRetain();
  uint64_t v33 = OrdinalDisplayHintsBuilder.build(for:)(v32);
  swift_bridgeObjectRelease();
  uint64_t v34 = v38;
  swift_beginAccess(v38, v49, 33LL, 0LL);
  specialized Array.append<A>(contentsOf:)(v33);
  swift_endAccess(v49);
  swift_beginAccess(v34, v49, 0LL, 0LL);
  uint64_t v35 = swift_bridgeObjectRetain();
  v42(v35);
  return swift_bridgeObjectRelease();
}

void PhoneContactDisplayHintFactory.buildForeignEmergencyHints(_:_:)( uint64_t a1, void (*a2)(void), uint64_t a3)
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v6 = type metadata accessor for Logger(0LL);
  uint64_t v7 = __swift_project_value_buffer(v6, (uint64_t)static Logger.siriPhone);
  uint64_t v8 = (os_log_s *)Logger.logObject.getter(v7);
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl(&dword_0, v8, v9, "Building foreign emergency disambiguation display hints...", v10, 2u);
    swift_slowDealloc(v10, -1LL, -1LL);
  }

  PhoneContactDisplayHintFactory.buildForeignEmergencyHintsSerially(_:index:currentDisplayHints:_:)( a1,  0LL,  (uint64_t)_swiftEmptyArrayStorage,  a2,  a3);
}

void *closure #3 in PhoneContactDisplayHintFactory.build(for:_:)@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (displayHints: [DisplayHint], idValue: SemanticValue));
  uint64_t result = PhoneContactDisplayHintFactory.buildRegularDisplayHint(_:)((uint64_t)a2 + *(int *)(v4 + 48), v3);
  *a2 = result;
  return result;
}

void *PhoneContactDisplayHintFactory.buildRegularDisplayHint(_:)(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for Locale(0LL);
  uint64_t v121 = *(void *)(v4 - 8);
  uint64_t v122 = v4;
  __chkstk_darwin();
  uint64_t v120 = (char *)v116 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PersonNameComponents?);
  __chkstk_darwin();
  uint64_t v130 = (char *)v116 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v128 = (char *)v116 - v7;
  __chkstk_darwin();
  unint64_t v126 = (char *)v116 - v8;
  __chkstk_darwin();
  uint64_t v127 = (char *)v116 - v9;
  uint64_t v10 = type metadata accessor for SemanticValue(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin();
  uint64_t v13 = (char *)v116 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SemanticValue?);
  __chkstk_darwin();
  uint64_t v15 = (char *)v116 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = type metadata accessor for DisplayHint(0LL);
  uint64_t v132 = *(void *)(v16 - 8);
  uint64_t v133 = v16;
  __chkstk_darwin();
  v116[1] = (char *)v116 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  v116[0] = (char *)v116 - v18;
  __chkstk_darwin();
  uint64_t v123 = (char *)v116 - v19;
  __chkstk_darwin();
  uint64_t v118 = (char *)v116 - v20;
  __chkstk_darwin();
  uint64_t v117 = (char *)v116 - v21;
  __chkstk_darwin();
  uint64_t v124 = (char *)v116 - v22;
  Swift::String v23 = INPerson.asBase64()();
  SemanticValue.init()(v23._countAndFlagsBits);
  SemanticValue.string.setter(v23._countAndFlagsBits, v23._object);
  SemanticValue.label.setter(0xD000000000000012LL, 0x8000000000342B70LL);
  PhoneCallNLConstants.canonicalName.getter(2u);
  SemanticValue.nodeClass.setter();
  uint64_t v24 = a2;
  id v25 = [a2 displayName];
  uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
  unint64_t v28 = v27;

  swift_bridgeObjectRelease();
  uint64_t v29 = HIBYTE(v28) & 0xF;
  if ((v28 & 0x2000000000000000LL) == 0) {
    uint64_t v29 = v26 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v129 = a1;
  uint64_t v131 = v11;
  uint64_t v125 = v10;
  if (v29)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v15, a1, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v15, 0LL, 1LL, v10);
    id v30 = [v24 displayName];
    uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
    uint64_t v33 = v32;

    SemanticValue.init()(v34);
    SemanticValue.string.setter(v31, v33);
    SemanticValue.label.setter(0x75466E6F73726570LL, 0xEE00656D614E6C6CLL);
    PhoneCallNLConstants.canonicalName.getter(0xAu);
    SemanticValue.nodeClass.setter();
    uint64_t v35 = v124;
    uint64_t v36 = (uint64_t)v15;
    DisplayHint.init(idValue:displayValue:)(v15, v13);
    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v38 = v37;
    unint64_t v39 = v37[2];
    if (v39 >= v37[3] >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v38 = v107;
    }

    uint64_t v40 = (uint64_t)v126;
    uint64_t v41 = (uint64_t)v127;
    v38[2] = v39 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v132 + 32))( (unint64_t)v38 + ((*(unsigned __int8 *)(v132 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80))
    + *(void *)(v132 + 72) * v39,
      v35,
      v133);
  }

  else
  {
    uint64_t v36 = (uint64_t)v15;
    uint64_t v38 = _swiftEmptyArrayStorage;
    uint64_t v40 = (uint64_t)v126;
    uint64_t v41 = (uint64_t)v127;
  }

  id v42 = [v24 nameComponents];
  uint64_t v43 = (uint64_t)v130;
  if (v42)
  {
    uint64_t v44 = v42;
    static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v45 = type metadata accessor for PersonNameComponents(0LL);
    uint64_t v46 = v40;
    uint64_t v47 = 0LL;
  }

  else
  {
    uint64_t v45 = type metadata accessor for PersonNameComponents(0LL);
    uint64_t v46 = v40;
    uint64_t v47 = 1LL;
  }

  __swift_storeEnumTagSinglePayload(v46, v47, 1LL, v45);
  outlined init with take of PhoneCallNLIntent?( v40,  v41,  &demangling cache variable for type metadata for PersonNameComponents?);
  type metadata accessor for PersonNameComponents(0LL);
  if (__swift_getEnumTagSinglePayload(v41, 1LL, v45))
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v41,  &demangling cache variable for type metadata for PersonNameComponents?);
  }

  else
  {
    uint64_t v51 = PersonNameComponents.givenName.getter();
    unint64_t v53 = v52;
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v41,  &demangling cache variable for type metadata for PersonNameComponents?);
    if (v53)
    {
      uint64_t v54 = HIBYTE(v53) & 0xF;
      if ((v53 & 0x2000000000000000LL) == 0) {
        uint64_t v54 = v51 & 0xFFFFFFFFFFFFLL;
      }
      if (v54)
      {
        uint64_t v55 = v36;
        uint64_t v56 = v36;
        uint64_t v57 = v125;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v131 + 16))(v56, v129, v125);
        uint64_t v58 = __swift_storeEnumTagSinglePayload(v55, 0LL, 1LL, v57);
        SemanticValue.init()(v58);
        SemanticValue.string.setter(v51, v53);
        SemanticValue.label.setter(0x69466E6F73726570LL, 0xEF656D614E747372LL);
        PhoneCallNLConstants.canonicalName.getter(0xBu);
        SemanticValue.nodeClass.setter();
        uint64_t v59 = v117;
        uint64_t v36 = v55;
        DisplayHint.init(idValue:displayValue:)(v55, v13);
        if ((swift_isUniquelyReferenced_nonNull_native(v38) & 1) == 0)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v38 = v112;
        }

        unint64_t v60 = v38[2];
        if (v60 >= v38[3] >> 1)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v38 = v113;
        }

        v38[2] = v60 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v132 + 32))( (unint64_t)v38 + ((*(unsigned __int8 *)(v132 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80))
        + *(void *)(v132 + 72) * v60,
          v59,
          v133);
        uint64_t v43 = (uint64_t)v130;
      }

      else
      {
        swift_bridgeObjectRelease();
      }
    }
  }

  id v48 = [v24 nameComponents];
  if (v48)
  {
    uint64_t v49 = v48;
    static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v50 = 0LL;
  }

  else
  {
    uint64_t v50 = 1LL;
  }

  uint64_t v61 = (uint64_t)v128;
  __swift_storeEnumTagSinglePayload(v43, v50, 1LL, v45);
  outlined init with take of PhoneCallNLIntent?( v43,  v61,  &demangling cache variable for type metadata for PersonNameComponents?);
  if (__swift_getEnumTagSinglePayload(v61, 1LL, v45))
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v61,  &demangling cache variable for type metadata for PersonNameComponents?);
    uint64_t v62 = v131;
  }

  else
  {
    uint64_t v84 = PersonNameComponents.familyName.getter();
    unint64_t v86 = v85;
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v61,  &demangling cache variable for type metadata for PersonNameComponents?);
    uint64_t v62 = v131;
    if (v86)
    {
      uint64_t v87 = HIBYTE(v86) & 0xF;
      if ((v86 & 0x2000000000000000LL) == 0) {
        uint64_t v87 = v84 & 0xFFFFFFFFFFFFLL;
      }
      if (v87)
      {
        uint64_t v88 = v125;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v131 + 16))(v36, v129, v125);
        uint64_t v89 = __swift_storeEnumTagSinglePayload(v36, 0LL, 1LL, v88);
        SemanticValue.init()(v89);
        SemanticValue.string.setter(v84, v86);
        SemanticValue.label.setter(0x614C6E6F73726570LL, 0xEE00656D614E7473LL);
        PhoneCallNLConstants.canonicalName.getter(0xCu);
        SemanticValue.nodeClass.setter();
        uint64_t v90 = v118;
        DisplayHint.init(idValue:displayValue:)(v36, v13);
        if ((swift_isUniquelyReferenced_nonNull_native(v38) & 1) == 0)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v38 = v114;
        }

        unint64_t v91 = v38[2];
        if (v91 >= v38[3] >> 1)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v38 = v115;
        }

        v38[2] = v91 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v132 + 32))( (unint64_t)v38 + ((*(unsigned __int8 *)(v132 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80))
        + *(void *)(v132 + 72) * v91,
          v90,
          v133);
      }

      else
      {
        swift_bridgeObjectRelease();
      }
    }
  }

  id v63 = [v24 personHandle];
  if (v63)
  {
    unint64_t v64 = v63;
    uint64_t v130 = (char *)v36;
    id v65 = [v63 label];
    if (v65)
    {
      uint64_t v66 = v65;
      uint64_t v67 = v119[8];
      uint64_t v68 = v119[9];
      __swift_project_boxed_opaque_existential_1(v119 + 5, v67);
      BOOL v69 = v120;
      uint64_t v70 = dispatch thunk of DeviceState.siriLocale.getter(v67, v68);
      v135[2] = Locale.identifier.getter(v70);
      v135[3] = v71;
      v135[0] = 45LL;
      v135[1] = 0xE100000000000000LL;
      v134[0] = 95LL;
      v134[1] = 0xE100000000000000LL;
      lazy protocol witness table accessor for type String and conformance String();
      uint64_t v72 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( v135,  v134,  0LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String);
      uint64_t v74 = v73;
      swift_bridgeObjectRelease();
      uint64_t v75 = v125;
      (*(void (**)(char *, uint64_t))(v121 + 8))(v69, v122);
      uint64_t v76 = static LabelMappingUtil.translateINPersonHandleLabel(_:languageCode:)(v66, v72, v74);
      uint64_t v78 = v77;
      uint64_t v62 = v131;
      swift_bridgeObjectRelease();
      uint64_t v79 = v129;
      uint64_t v80 = (uint64_t)v130;
      (*(void (**)(char *, uint64_t, uint64_t))(v62 + 16))(v130, v129, v75);
      uint64_t v81 = __swift_storeEnumTagSinglePayload(v80, 0LL, 1LL, v75);
      SemanticValue.init()(v81);
      SemanticValue.string.setter(v76, v78);
      SemanticValue.label.setter(0x54746361746E6F63LL, 0xEB00000000657079LL);
      PhoneCallNLConstants.canonicalName.getter(0xDu);
      SemanticValue.nodeClass.setter();
      unint64_t v82 = v123;
      DisplayHint.init(idValue:displayValue:)(v80, v13);
      if ((swift_isUniquelyReferenced_nonNull_native(v38) & 1) == 0)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v38 = v108;
      }

      unint64_t v83 = v38[2];
      if (v83 >= v38[3] >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v38 = v109;
      }

      v38[2] = v83 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v132 + 32))( (unint64_t)v38 + ((*(unsigned __int8 *)(v132 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80))
      + *(void *)(v132 + 72) * v83,
        v82,
        v133);
    }

    else
    {
      uint64_t v79 = v129;
    }

    outlined bridged method (pb) of @objc INPersonHandle.value.getter(v64);
    if (!v93) {
      goto LABEL_57;
    }
    uint64_t v94 = v92;
    unint64_t v95 = v93;
    uint64_t v96 = HIBYTE(v93) & 0xF;
    if ((v93 & 0x2000000000000000LL) == 0) {
      uint64_t v96 = v92 & 0xFFFFFFFFFFFFLL;
    }
    if (v96)
    {
      uint64_t v97 = (char *)[v64 type];
      uint64_t v98 = *(void (**)(char *, uint64_t, uint64_t))(v62 + 16);
      uint64_t v99 = (uint64_t)v130;
      uint64_t v100 = v79;
      uint64_t v101 = v125;
      v98(v130, v100, v125);
      uint64_t v102 = __swift_storeEnumTagSinglePayload(v99, 0LL, 1LL, v101);
      SemanticValue.init()(v102);
      SemanticValue.string.setter(v94, v95);
      if (v97 == (_BYTE *)&dword_0 + 1)
      {
        SemanticValue.label.setter(0x6464416C69616D65LL, 0xEC00000073736572LL);
        PhoneCallNLConstants.canonicalName.getter(9u);
        SemanticValue.nodeClass.setter();
        unint64_t v103 = &v136;
      }

      else
      {
        SemanticValue.label.setter(0x6D754E656E6F6870LL, 0xEB00000000726562LL);
        PhoneCallNLConstants.canonicalName.getter(8u);
        SemanticValue.nodeClass.setter();
        unint64_t v103 = &v137;
      }

      uint64_t v104 = *(v103 - 32);
      DisplayHint.init(idValue:displayValue:)(v99, v13);
      if ((swift_isUniquelyReferenced_nonNull_native(v38) & 1) == 0)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v38 = v110;
      }

      unint64_t v105 = v38[2];
      if (v105 >= v38[3] >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v38 = v111;
      }

      v38[2] = v105 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v132 + 32))( (unint64_t)v38 + ((*(unsigned __int8 *)(v132 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80))
      + *(void *)(v132 + 72) * v105,
        v104,
        v133);
LABEL_57:

      return v38;
    }

    swift_bridgeObjectRelease();
  }

  return v38;
}

void PhoneContactDisplayHintFactory.buildForeignEmergencyHintsSerially(_:index:currentDisplayHints:_:)( uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v66 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for DisplayHint(0LL);
  uint64_t v68 = *(void *)(v11 - 8);
  __chkstk_darwin();
  uint64_t v67 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = *(void *)(*(void *)(type metadata accessor for SemanticValue(0LL) - 8) + 64LL);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = __chkstk_darwin();
  uint64_t v18 = (char *)&v62 - v17;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0) {
      uint64_t v60 = a1;
    }
    else {
      uint64_t v60 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    id v65 = a4;
    uint64_t v72 = v15;
    uint64_t v61 = v16;
    swift_bridgeObjectRetain();
    uint64_t v19 = _CocoaArrayWrapper.endIndex.getter(v60);
    swift_bridgeObjectRelease();
    uint64_t v16 = v61;
    uint64_t v15 = v72;
    a4 = v65;
  }

  else
  {
    uint64_t v19 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8LL));
  }

  if (v19 == a2)
  {
    a4(a3);
    return;
  }

  uint64_t v71 = v16;
  uint64_t v72 = v15;
  uint64_t v64 = a5;
  uint64_t v20 = swift_allocObject(&unk_416EE8, 24LL, 7LL);
  uint64_t v70 = v20;
  *(void *)(v20 + ++*(void *)(v0 + 16) = a3;
  uint64_t v21 = v20 + 16;
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(a2, (a1 & 0xC000000000000001LL) == 0, a1);
  id v65 = a4;
  uint64_t v63 = v11;
  if ((a1 & 0xC000000000000001LL) != 0)
  {
    swift_bridgeObjectRetain();
    id v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a1);
  }

  else
  {
    uint64_t v22 = *(void **)(a1 + 8 * a2 + 32);
    swift_bridgeObjectRetain();
    id v23 = v22;
  }

  uint64_t v24 = v23;
  Swift::String v25 = INPerson.asBase64()();
  SemanticValue.init()(v25._countAndFlagsBits);
  SemanticValue.string.setter(v25._countAndFlagsBits, v25._object);
  SemanticValue.label.setter(0xD000000000000012LL, 0x8000000000342B70LL);
  PhoneCallNLConstants.canonicalName.getter(2u);
  SemanticValue.nodeClass.setter();
  id v69 = v24;
  id v26 = [v24 personHandle];
  if (v26)
  {
    unint64_t v27 = v26;
    unint64_t v28 = (char *)[v26 emergencyType];

    if (v28 == (_BYTE *)&dword_0 + 2)
    {
      id v47 = [v69 personHandle];
      if (v47)
      {
        outlined bridged method (ob) of @objc INPersonHandle.value.getter(v47);
        if (v49)
        {
          uint64_t v50 = v48;
          uint64_t v51 = v49;
          uint64_t v52 = v72;
          uint64_t v53 = (uint64_t)v66;
          (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v66, v18, v72);
          uint64_t v54 = __swift_storeEnumTagSinglePayload(v53, 0LL, 1LL, v52);
          SemanticValue.init()(v54);
          SemanticValue.string.setter(v50, v51);
          SemanticValue.label.setter(0x6D754E656E6F6870LL, 0xEB00000000726562LL);
          PhoneCallNLConstants.canonicalName.getter(8u);
          SemanticValue.nodeClass.setter();
          uint64_t v55 = v67;
          DisplayHint.init(idValue:displayValue:)(v53, v14);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          uint64_t v56 = *(void *)(*(void *)v21 + 16LL);
          specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          uint64_t v57 = *(void *)v21;
          *(void *)(v57 + ++*(void *)(v0 + 16) = v56 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v68 + 32))( v57 + ((*(unsigned __int8 *)(v68 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80))
          + *(void *)(v68 + 72) * v56,
            v55,
            v63);
        }
      }
    }

    else if (v28 == (_BYTE *)&dword_0 + 1)
    {
      uint64_t v29 = v73;
      uint64_t v68 = *(void *)(v73 + 80);
      uint64_t v30 = v71;
      (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v14, v18, v72);
      outlined init with copy of PhoneContactDisplayHintFactory(v29, (uint64_t)__src);
      uint64_t v31 = *(unsigned __int8 *)(v30 + 80);
      uint64_t v32 = (v31 + 24) & ~v31;
      unint64_t v33 = (v13 + v32 + 7) & 0xFFFFFFFFFFFFFFF8LL;
      unint64_t v34 = (v33 + 95) & 0xFFFFFFFFFFFFFFF8LL;
      unint64_t v35 = (v34 + 15) & 0xFFFFFFFFFFFFFFF8LL;
      unint64_t v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8LL;
      uint64_t v37 = swift_allocObject(&unk_416FE8, v36 + 16, v31 | 7);
      *(void *)(v37 + ++*(void *)(v0 + 16) = v70;
      uint64_t v38 = v37 + v32;
      uint64_t v39 = v71;
      uint64_t v40 = v14;
      uint64_t v41 = v72;
      (*(void (**)(uint64_t, char *, uint64_t))(v71 + 32))(v38, v40, v72);
      memcpy((void *)(v37 + v33), __src, 0x58uLL);
      *(void *)(v37 + v34) = a1;
      *(void *)(v37 + v3__swift_destroy_boxed_opaque_existential_1(v0 + 5) = a2;
      id v42 = (void *)(v37 + v36);
      uint64_t v43 = v64;
      *id v42 = v65;
      v42[1] = v43;
      uint64_t v44 = *(void (**)(void (*)(uint64_t), uint64_t))(class metadata base offset for PhoneCallDisplayTextCATs
                                                                         + *(void *)v68
                                                                         + 256);
      swift_bridgeObjectRetain();
      uint64_t v45 = v70;
      swift_retain();
      swift_retain();
      v44( partial apply for closure #1 in PhoneContactDisplayHintFactory.buildForeignEmergencyHintsSerially(_:index:currentDisplayHints:_:),  v37);

      swift_release(v37);
      (*(void (**)(char *, uint64_t))(v39 + 8))(v18, v41);
      uint64_t v46 = v45;
      goto LABEL_16;
    }
  }

  if (__OFADD__(a2, 1LL))
  {
    __break(1u);
    return;
  }

  uint64_t v58 = v70;
  uint64_t v59 = *(void *)(v70 + 16);
  swift_bridgeObjectRetain();
  PhoneContactDisplayHintFactory.buildForeignEmergencyHintsSerially(_:index:currentDisplayHints:_:)( a1,  a2 + 1,  v59,  v65,  v64);
  swift_bridgeObjectRelease();

  (*(void (**)(char *, uint64_t))(v71 + 8))(v18, v72);
  uint64_t v46 = v58;
LABEL_16:
  swift_release(v46);
}

void closure #1 in PhoneContactDisplayHintFactory.buildForeignEmergencyHintsSerially(_:index:currentDisplayHints:_:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v43 = a7;
  uint64_t v44 = a8;
  uint64_t v45 = a6;
  uint64_t v46 = a1;
  uint64_t v41 = a5;
  uint64_t v42 = a4;
  uint64_t v40 = a3;
  uint64_t v9 = type metadata accessor for SemanticValue(0LL);
  uint64_t v39 = *(void *)(v9 - 8);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SemanticValue?);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for DisplayHint(0LL);
  uint64_t v37 = *(void *)(v14 - 8);
  uint64_t v38 = v14;
  __chkstk_darwin();
  unint64_t v36 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  __chkstk_darwin();
  uint64_t v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin();
  uint64_t v22 = (char *)&v36 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v23 = (uint64_t *)(a2 + 16);
  outlined init with copy of TransformationResult?( v46,  (uint64_t)v18,  &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  if (swift_getEnumCaseMultiPayload(v18, v16) == 1)
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v18,  &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  }

  else
  {
    uint64_t v24 = v20;
    uint64_t v25 = v19;
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v18, v19);
    (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v13, v40, v9);
    uint64_t v26 = __swift_storeEnumTagSinglePayload((uint64_t)v13, 0LL, 1LL, v9);
    unint64_t v27 = (void *)TemplatingResult.print.getter(v26);
    if (!v27[2]) {
      goto LABEL_8;
    }
    uint64_t v28 = v27[4];
    uint64_t v29 = v27[5];
    swift_bridgeObjectRetain();
    uint64_t v30 = swift_bridgeObjectRelease();
    SemanticValue.init()(v30);
    SemanticValue.string.setter(v28, v29);
    SemanticValue.label.setter(0xD000000000000014LL, 0x8000000000342BB0LL);
    PhoneCallNLConstants.canonicalName.getter(4u);
    SemanticValue.nodeClass.setter();
    uint64_t v31 = v36;
    DisplayHint.init(idValue:displayValue:)(v13, v11);
    swift_beginAccess(v23, v47, 33LL, 0LL);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    uint64_t v32 = *(void *)(*v23 + 16);
    specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    uint64_t v33 = *v23;
    *(void *)(v33 + ++*(void *)(v0 + 16) = v32 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v37 + 32))( v33 + ((*(unsigned __int8 *)(v37 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))
    + *(void *)(v37 + 72) * v32,
      v31,
      v38);
    swift_endAccess(v47);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v22, v25);
  }

  uint64_t v34 = v45 + 1;
  if (!__OFADD__(v45, 1LL))
  {
    swift_beginAccess(v23, v47, 0LL, 0LL);
    uint64_t v35 = *v23;
    swift_bridgeObjectRetain();
    PhoneContactDisplayHintFactory.buildForeignEmergencyHintsSerially(_:index:currentDisplayHints:_:)( v41,  v34,  v35,  v43,  v44);
    swift_bridgeObjectRelease();
    return;
  }

  __break(1u);
LABEL_8:
  __break(1u);
}

uint64_t DisplayHint.description.getter()
{
  uint64_t v2 = (char *)&v48 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v4 = (char *)&v48 - v3;
  __chkstk_darwin();
  OUTLINED_FUNCTION_83_6();
  uint64_t v5 = __chkstk_darwin();
  uint64_t v7 = (char *)&v48 - v6;
  uint64_t v48 = 40LL;
  unint64_t v49 = 0xE100000000000000LL;
  DisplayHint.displayValue.getter(v5);
  OUTLINED_FUNCTION_26_59();
  uint64_t v8 = OUTLINED_FUNCTION_6_26((uint64_t)v7);
  if (v9)
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v7,  &demangling cache variable for type metadata for SemanticValue?);
LABEL_5:
    swift_bridgeObjectRelease();
    uint64_t v12 = (void *)0xE300000000000000LL;
    uint64_t v10 = 7104878LL;
    goto LABEL_6;
  }

  uint64_t v10 = SemanticValue.label.getter(v8);
  uint64_t v12 = v11;
  OUTLINED_FUNCTION_37_42();
  OUTLINED_FUNCTION_122_5((uint64_t)v7, v13);
  if (!v12) {
    goto LABEL_5;
  }
LABEL_6:
  v14._uint64_t countAndFlagsBits = v10;
  v14._object = v12;
  String.append(_:)(v14);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_11_47();
  DisplayHint.displayValue.getter(v15);
  uint64_t v16 = OUTLINED_FUNCTION_6_26(v0);
  if (v9)
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( v0,  &demangling cache variable for type metadata for SemanticValue?);
  }

  else
  {
    uint64_t v17 = SemanticValue.string.getter(v16);
    uint64_t v19 = v18;
    OUTLINED_FUNCTION_37_42();
    OUTLINED_FUNCTION_122_5(v0, v20);
    if (v19)
    {
      uint64_t v21 = String.debugDescription.getter(v17, v19);
      id v23 = v22;
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
  }

  id v23 = (void *)0xE300000000000000LL;
  uint64_t v21 = 7104878LL;
LABEL_12:
  v24._uint64_t countAndFlagsBits = v21;
  v24._object = v23;
  String.append(_:)(v24);
  swift_bridgeObjectRelease();
  v25._uint64_t countAndFlagsBits = 0x203E3D2029LL;
  v25._object = (void *)0xE500000000000000LL;
  String.append(_:)(v25);
  uint64_t v27 = v48;
  unint64_t v26 = v49;
  uint64_t v48 = 40LL;
  unint64_t v49 = 0xE100000000000000LL;
  DisplayHint.idValue.getter();
  uint64_t v28 = OUTLINED_FUNCTION_6_26((uint64_t)v4);
  if (v9)
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v4,  &demangling cache variable for type metadata for SemanticValue?);
LABEL_16:
    swift_bridgeObjectRelease();
    uint64_t v31 = (void *)0xE300000000000000LL;
    uint64_t v29 = 7104878LL;
    goto LABEL_17;
  }

  uint64_t v29 = SemanticValue.label.getter(v28);
  uint64_t v31 = v30;
  OUTLINED_FUNCTION_37_42();
  OUTLINED_FUNCTION_122_5((uint64_t)v4, v32);
  if (!v31) {
    goto LABEL_16;
  }
LABEL_17:
  v33._uint64_t countAndFlagsBits = v29;
  v33._object = v31;
  String.append(_:)(v33);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_11_47();
  DisplayHint.idValue.getter();
  uint64_t v34 = OUTLINED_FUNCTION_6_26((uint64_t)v2);
  if (v9)
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v2,  &demangling cache variable for type metadata for SemanticValue?);
LABEL_22:
    uint64_t v38 = Substring.init(_:)(7104878LL, 0xE300000000000000LL);
    goto LABEL_23;
  }

  SemanticValue.string.getter(v34);
  uint64_t v36 = v35;
  OUTLINED_FUNCTION_37_42();
  OUTLINED_FUNCTION_122_5((uint64_t)v2, v37);
  if (!v36) {
    goto LABEL_22;
  }
  specialized Collection.prefix(_:)(30LL);
LABEL_23:
  v42._uint64_t countAndFlagsBits = static String._fromSubstring(_:)(v38, v39, v40, v41);
  String.append(_:)(v42);
  OUTLINED_FUNCTION_39();
  swift_bridgeObjectRelease();
  v43._uint64_t countAndFlagsBits = 41LL;
  v43._object = (void *)0xE100000000000000LL;
  String.append(_:)(v43);
  uint64_t v44 = v48;
  uint64_t v45 = (void *)v49;
  uint64_t v48 = v27;
  unint64_t v49 = v26;
  swift_bridgeObjectRetain();
  v46._uint64_t countAndFlagsBits = v44;
  v46._object = v45;
  String.append(_:)(v46);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v48;
}

uint64_t specialized UnsafeMutablePointer.initialize(from:count:)()
{
  if (v0 < 0)
  {
    OUTLINED_FUNCTION_0_17();
    OUTLINED_FUNCTION_64_0();
  }

  else
  {
    OUTLINED_FUNCTION_32_52();
    if (!v4 && v3)
    {
      BOOL v3 = v2 >= v1;
      BOOL v4 = v2 == v1;
    }

    else
    {
      BOOL v3 = 0;
      BOOL v4 = 0;
    }

    if (v4 || !v3) {
      return OUTLINED_FUNCTION_6_103(v1);
    }
    OUTLINED_FUNCTION_0_17();
    OUTLINED_FUNCTION_63_2();
  }

  uint64_t result = OUTLINED_FUNCTION_5_15(v6, v7, v8, v9, v10, v11, v12);
  __break(1u);
  return result;
}

{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  BOOL v3;
  BOOL v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  OUTLINED_FUNCTION_28_58();
  if (v0 < 0)
  {
    OUTLINED_FUNCTION_0_17();
    OUTLINED_FUNCTION_64_0();
  }

  else
  {
    OUTLINED_FUNCTION_32_52();
    if (!v4 && v3)
    {
      BOOL v3 = v2 >= v1;
      BOOL v4 = v2 == v1;
    }

    else
    {
      BOOL v3 = 0;
      BOOL v4 = 0;
    }

    if (v4 || !v3) {
      return OUTLINED_FUNCTION_6_103(v1);
    }
    OUTLINED_FUNCTION_0_17();
    OUTLINED_FUNCTION_63_2();
  }

  uint64_t result = OUTLINED_FUNCTION_5_15(v6, v7, v8, v9, v10, v11, v12);
  __break(1u);
  return result;
}

{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  BOOL v5;
  BOOL v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  OUTLINED_FUNCTION_28_58();
  if (v3 < 0)
  {
    OUTLINED_FUNCTION_0_17();
    OUTLINED_FUNCTION_64_0();
  }

  else
  {
    BOOL v4 = v0 + 48 * v1;
    if (v2 + 48 * v1 > v0)
    {
      uint64_t v5 = v4 >= v2;
      uint64_t v6 = v4 == v2;
    }

    else
    {
      uint64_t v5 = 0;
      uint64_t v6 = 0;
    }

    if (v6 || !v5) {
      return OUTLINED_FUNCTION_6_103(v2);
    }
    OUTLINED_FUNCTION_0_17();
    OUTLINED_FUNCTION_63_2();
  }

  uint64_t result = OUTLINED_FUNCTION_5_15(v8, v9, v10, v11, v12, v13, v14);
  __break(1u);
  return result;
}

{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  BOOL v3;
  BOOL v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  OUTLINED_FUNCTION_28_58();
  if (v0 < 0)
  {
    OUTLINED_FUNCTION_0_17();
    OUTLINED_FUNCTION_64_0();
  }

  else
  {
    OUTLINED_FUNCTION_33_56();
    if (!v4 && v3)
    {
      BOOL v3 = v2 >= v1;
      BOOL v4 = v2 == v1;
    }

    else
    {
      BOOL v3 = 0;
      BOOL v4 = 0;
    }

    if (v4 || !v3) {
      return OUTLINED_FUNCTION_6_103(v1);
    }
    OUTLINED_FUNCTION_0_17();
    OUTLINED_FUNCTION_63_2();
  }

  uint64_t result = OUTLINED_FUNCTION_5_15(v6, v7, v8, v9, v10, v11, v12);
  __break(1u);
  return result;
}

{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  BOOL v3;
  BOOL v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  OUTLINED_FUNCTION_28_58();
  if (v0 < 0)
  {
    OUTLINED_FUNCTION_0_17();
    OUTLINED_FUNCTION_64_0();
  }

  else
  {
    OUTLINED_FUNCTION_33_56();
    if (!v4 && v3)
    {
      BOOL v3 = v2 >= v1;
      BOOL v4 = v2 == v1;
    }

    else
    {
      BOOL v3 = 0;
      BOOL v4 = 0;
    }

    if (v4 || !v3) {
      return OUTLINED_FUNCTION_6_103(v1);
    }
    OUTLINED_FUNCTION_0_17();
    OUTLINED_FUNCTION_63_2();
  }

  uint64_t result = OUTLINED_FUNCTION_5_15(v6, v7, v8, v9, v10, v11, v12);
  __break(1u);
  return result;
}

uint64_t specialized UnsafeMutablePointer.initialize(from:count:)(uint64_t a1, uint64_t a2)
{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  unint64_t v2;
  void (*v3)(void);
  unint64_t v4;
  char v5;
  char v6;
  BOOL v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_17();
    OUTLINED_FUNCTION_64_0();
  }

  else
  {
    OUTLINED_FUNCTION_7_112();
    if (!v6 & v5) {
      uint64_t v7 = v4 > v2;
    }
    else {
      uint64_t v7 = 0;
    }
    if (!v7)
    {
      v3(0LL);
      uint64_t v8 = OUTLINED_FUNCTION_5_105();
      return OUTLINED_FUNCTION_1_103(v8);
    }

    OUTLINED_FUNCTION_0_17();
    OUTLINED_FUNCTION_63_2();
  }

  uint64_t result = OUTLINED_FUNCTION_5_15(v10, v11, v12, v13, v14, v15, v16);
  __break(1u);
  return result;
}

{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_17();
    OUTLINED_FUNCTION_64_0();
  }

  else
  {
    OUTLINED_FUNCTION_7_112();
    if (!v5 && v4)
    {
      BOOL v4 = v3 >= v2;
      uint64_t v5 = v3 == v2;
    }

    else
    {
      BOOL v4 = 0;
      uint64_t v5 = 0;
    }

    if (v5 || !v4)
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodeGenListEntry<UsoEntity_common_Agent>);
      uint64_t v6 = OUTLINED_FUNCTION_5_105();
      return OUTLINED_FUNCTION_1_103(v6);
    }

    OUTLINED_FUNCTION_0_17();
    OUTLINED_FUNCTION_63_2();
  }

  uint64_t result = OUTLINED_FUNCTION_5_15(v8, v9, v10, v11, v12, v13, v14);
  __break(1u);
  return result;
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_17();
    OUTLINED_FUNCTION_64_0();
  }

  else
  {
    OUTLINED_FUNCTION_8_89();
    if (!v5 && v4)
    {
      BOOL v4 = v3 >= v2;
      uint64_t v5 = v3 == v2;
    }

    else
    {
      BOOL v4 = 0;
      uint64_t v5 = 0;
    }

    if (v5 || !v4)
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: INPerson));
      uint64_t v6 = OUTLINED_FUNCTION_5_105();
      return OUTLINED_FUNCTION_1_103(v6);
    }

    OUTLINED_FUNCTION_0_17();
    OUTLINED_FUNCTION_63_2();
  }

  uint64_t result = OUTLINED_FUNCTION_5_15(v8, v9, v10, v11, v12, v13, v14);
  __break(1u);
  return result;
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  unint64_t v2;
  unint64_t *v3;
  void *v4;
  unint64_t v5;
  BOOL v6;
  BOOL v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_17();
    OUTLINED_FUNCTION_64_0();
  }

  else
  {
    OUTLINED_FUNCTION_7_112();
    if (!v7 && v6)
    {
      uint64_t v6 = v5 >= v2;
      uint64_t v7 = v5 == v2;
    }

    else
    {
      uint64_t v6 = 0;
      uint64_t v7 = 0;
    }

    if (v7 || !v6)
    {
      type metadata accessor for CNContactStore(0LL, v3, v4);
      uint64_t v8 = OUTLINED_FUNCTION_5_105();
      return OUTLINED_FUNCTION_1_103(v8);
    }

    OUTLINED_FUNCTION_0_17();
    OUTLINED_FUNCTION_63_2();
  }

  uint64_t result = OUTLINED_FUNCTION_5_15(v10, v11, v12, v13, v14, v15, v16);
  __break(1u);
  return result;
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_17();
    OUTLINED_FUNCTION_64_0();
  }

  else
  {
    OUTLINED_FUNCTION_7_112();
    if (!v5 && v4)
    {
      BOOL v4 = v3 >= v2;
      uint64_t v5 = v3 == v2;
    }

    else
    {
      BOOL v4 = 0;
      uint64_t v5 = 0;
    }

    if (v5 || !v4)
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INScoredPerson]);
      uint64_t v6 = OUTLINED_FUNCTION_5_105();
      return OUTLINED_FUNCTION_1_103(v6);
    }

    OUTLINED_FUNCTION_0_17();
    OUTLINED_FUNCTION_63_2();
  }

  uint64_t result = OUTLINED_FUNCTION_5_15(v8, v9, v10, v11, v12, v13, v14);
  __break(1u);
  return result;
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_17();
    OUTLINED_FUNCTION_64_0();
  }

  else
  {
    OUTLINED_FUNCTION_8_89();
    if (!v5 && v4)
    {
      BOOL v4 = v3 >= v2;
      uint64_t v5 = v3 == v2;
    }

    else
    {
      BOOL v4 = 0;
      uint64_t v5 = 0;
    }

    if (v5 || !v4)
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (agent: UsoEntity_common_Agent, contactRole: PhoneCallContactRole));
      uint64_t v6 = OUTLINED_FUNCTION_5_105();
      return OUTLINED_FUNCTION_1_103(v6);
    }

    OUTLINED_FUNCTION_0_17();
    OUTLINED_FUNCTION_63_2();
  }

  uint64_t result = OUTLINED_FUNCTION_5_15(v8, v9, v10, v11, v12, v13, v14);
  __break(1u);
  return result;
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_17();
    OUTLINED_FUNCTION_64_0();
  }

  else
  {
    OUTLINED_FUNCTION_8_89();
    if (!v5 && v4)
    {
      BOOL v4 = v3 >= v2;
      uint64_t v5 = v3 == v2;
    }

    else
    {
      BOOL v4 = 0;
      uint64_t v5 = 0;
    }

    if (v5 || !v4)
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
      uint64_t v6 = OUTLINED_FUNCTION_5_105();
      return OUTLINED_FUNCTION_1_103(v6);
    }

    OUTLINED_FUNCTION_0_17();
    OUTLINED_FUNCTION_63_2();
  }

  uint64_t result = OUTLINED_FUNCTION_5_15(v8, v9, v10, v11, v12, v13, v14);
  __break(1u);
  return result;
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  unint64_t v2;
  uint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  BOOL v7;
  BOOL v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_17();
    OUTLINED_FUNCTION_64_0();
  }

  else
  {
    OUTLINED_FUNCTION_12_90();
    uint64_t v6 = v4 + 40 * v5;
    if (v2 + 40 * v5 > v4)
    {
      uint64_t v7 = v6 >= v2;
      uint64_t v8 = v6 == v2;
    }

    else
    {
      uint64_t v7 = 0;
      uint64_t v8 = 0;
    }

    if (v8 || !v7)
    {
      __swift_instantiateConcreteTypeFromMangledName(v3);
      uint64_t v9 = OUTLINED_FUNCTION_5_105();
      return OUTLINED_FUNCTION_1_103(v9);
    }

    OUTLINED_FUNCTION_0_17();
    OUTLINED_FUNCTION_63_2();
  }

  uint64_t result = OUTLINED_FUNCTION_5_15(v11, v12, v13, v14, v15, v16, v17);
  __break(1u);
  return result;
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  unint64_t v2;
  uint64_t *v3;
  unint64_t v4;
  BOOL v5;
  BOOL v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_17();
    OUTLINED_FUNCTION_64_0();
  }

  else
  {
    OUTLINED_FUNCTION_12_90();
    __swift_instantiateConcreteTypeFromMangledName(v3);
    OUTLINED_FUNCTION_15_79();
    if (!v6 && v5)
    {
      uint64_t v5 = v4 >= v2;
      uint64_t v6 = v4 == v2;
    }

    else
    {
      uint64_t v5 = 0;
      uint64_t v6 = 0;
    }

    if (v6 || !v5)
    {
      uint64_t v7 = OUTLINED_FUNCTION_5_105();
      return OUTLINED_FUNCTION_1_103(v7);
    }

    OUTLINED_FUNCTION_0_17();
    OUTLINED_FUNCTION_63_2();
  }

  uint64_t result = OUTLINED_FUNCTION_5_15(v9, v10, v11, v12, v13, v14, v15);
  __break(1u);
  return result;
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  return specialized UnsafeMutablePointer.initialize(from:count:)(a1, a2);
}

{
  unint64_t v2;
  void (*v3)(void);
  unint64_t v4;
  char v5;
  char v6;
  BOOL v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_17();
    OUTLINED_FUNCTION_64_0();
  }

  else
  {
    OUTLINED_FUNCTION_12_90();
    v3(0LL);
    OUTLINED_FUNCTION_15_79();
    if (!v6 & v5) {
      uint64_t v7 = v4 > v2;
    }
    else {
      uint64_t v7 = 0;
    }
    if (!v7)
    {
      uint64_t v8 = OUTLINED_FUNCTION_5_105();
      return OUTLINED_FUNCTION_1_103(v8);
    }

    OUTLINED_FUNCTION_0_17();
    OUTLINED_FUNCTION_63_2();
  }

  uint64_t result = OUTLINED_FUNCTION_5_15(v10, v11, v12, v13, v14, v15, v16);
  __break(1u);
  return result;
}

{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  BOOL v6;
  BOOL v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_17();
    OUTLINED_FUNCTION_64_0();
  }

  else
  {
    OUTLINED_FUNCTION_12_90();
    uint64_t v5 = v3 + 32 * v4;
    if (v2 + 32 * v4 > v3)
    {
      uint64_t v6 = v5 >= v2;
      uint64_t v7 = v5 == v2;
    }

    else
    {
      uint64_t v6 = 0;
      uint64_t v7 = 0;
    }

    if (v7 || !v6)
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Any?);
      uint64_t v8 = OUTLINED_FUNCTION_5_105();
      return OUTLINED_FUNCTION_1_103(v8);
    }

    OUTLINED_FUNCTION_0_17();
    OUTLINED_FUNCTION_63_2();
  }

  uint64_t result = OUTLINED_FUNCTION_5_15(v10, v11, v12, v13, v14, v15, v16);
  __break(1u);
  return result;
}

uint64_t sub_2D0D08()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t partial apply for closure #1 in PhoneContactDisplayHintFactory.build(for:_:)(uint64_t a1)
{
  return closure #1 in PhoneContactDisplayHintFactory.build(for:_:)( a1,  *(uint64_t (**)(void))(v1 + 16),  *(void *)(v1 + 24));
}

uint64_t sub_2D0D34()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void *partial apply for closure #3 in PhoneContactDisplayHintFactory.build(for:_:)@<X0>( void **a1@<X0>, void *a2@<X8>)
{
  return closure #3 in PhoneContactDisplayHintFactory.build(for:_:)(a1, a2);
}

void *specialized UnsafeMutablePointer.initialize(from:count:)(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_17();
    OUTLINED_FUNCTION_64_0();
  }

  else
  {
    if (&__dst[16 * a2] <= __src || &__src[16 * a2] <= __dst) {
      return memcpy(__dst, __src, 16 * a2);
    }
    OUTLINED_FUNCTION_0_17();
    OUTLINED_FUNCTION_63_2();
  }

  uint64_t result = (void *)OUTLINED_FUNCTION_5_15(v5, v6, v7, v8, v9, v10, v11);
  __break(1u);
  return result;
}

uint64_t sub_2D1578()
{
  return swift_deallocObject(v0, v2 + 16, v1);
}

uint64_t partial apply for closure #2 in PhoneContactDisplayHintFactory.build(for:_:)(uint64_t a1)
{
  return closure #2 in PhoneContactDisplayHintFactory.build(for:_:)( a1,  *(void *)(v1 + 16),  *(void *)(v1 + 24),  v1 + v3,  *(void (**)(uint64_t))(v1 + v4),  *(void *)(v1 + v4 + 8));
}

uint64_t specialized static PhoneContactDisplayHintFactory.build(for:deviceState:appInfoBuilder:)( uint64_t a1, void *a2)
{
  uint64_t v84 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SemanticValue?);
  __chkstk_darwin();
  uint64_t v74 = (char *)&v67 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v75 = type metadata accessor for DisplayHint(0LL);
  uint64_t v73 = *(void *)(v75 - 8);
  __chkstk_darwin();
  unint64_t v82 = (char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v85 = type metadata accessor for SemanticValue(0LL);
  uint64_t v87 = *(void *)(v85 - 8);
  __chkstk_darwin();
  uint64_t v72 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v81 = (char *)&v67 - v6;
  __chkstk_darwin();
  unint64_t v86 = (char *)&v67 - v7;
  __chkstk_darwin();
  uint64_t v9 = (char *)&v67 - v8;
  uint64_t v10 = type metadata accessor for Locale(0LL);
  uint64_t v79 = *(void *)(v10 - 8);
  uint64_t v80 = v10;
  __chkstk_darwin();
  uint64_t v78 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for OrdinalDisplayHintsBuilder(0LL);
  uint64_t v70 = *(void *)(v12 - 8);
  __chkstk_darwin();
  id v69 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v92[0] = _swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0) {
      uint64_t v51 = a1;
    }
    else {
      uint64_t v51 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter(v51);
    uint64_t v14 = result;
    if (result) {
      goto LABEL_3;
    }
LABEL_34:
    swift_bridgeObjectRelease();
    uint64_t v17 = _swiftEmptyArrayStorage;
    goto LABEL_35;
  }

  uint64_t v14 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8LL));
  uint64_t result = swift_bridgeObjectRetain();
  if (!v14) {
    goto LABEL_34;
  }
LABEL_3:
  if (v14 < 1)
  {
    __break(1u);
    return result;
  }

  uint64_t v68 = v12;
  uint64_t v16 = 0LL;
  unint64_t v83 = a1 & 0xC000000000000001LL;
  uint64_t v17 = _swiftEmptyArrayStorage;
  uint64_t v76 = a1;
  uint64_t v77 = v14;
  uint64_t v71 = v9;
  do
  {
    if (v83)
    {
      uint64_t v18 = specialized _ArrayBuffer._getElementSlowPath(_:)(v16, a1);
    }

    else
    {
      uint64_t v18 = *(void *)(a1 + 8 * v16 + 32);
      swift_retain();
    }

    swift_retain();
    uint64_t v19 = v18;
    if (App.isFirstParty()())
    {
      uint64_t v19 = static UserFacingCallingAppUtils.getCommAppForLaunch(originalApp:preferredCallProvider:deviceState:)( v18,  0LL,  v84);
      swift_release(v18);
    }

    uint64_t v20 = App.appIdentifier.getter();
    if (v21)
    {
      uint64_t v22 = v20;
      uint64_t v23 = v21;
      uint64_t v24 = v84[3];
      uint64_t v25 = v84[4];
      __swift_project_boxed_opaque_existential_1(v84, v24);
      uint64_t v26 = (uint64_t)v78;
      dispatch thunk of DeviceState.siriLocale.getter(v24, v25);
      uint64_t v27 = type metadata accessor for AppInfoBuilder();
      swift_initStackObject(v27, v88);
      uint64_t v28 = AppInfoBuilder.getAppName(_:requestedLocale:)(v19, v26);
      uint64_t v30 = v29;
      (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v26, v80);
      if (v30)
      {
        uint64_t v31 = v19;
        if (one-time initialization token for applicationId != -1) {
          swift_once( &one-time initialization token for applicationId,  one-time initialization function for applicationId);
        }
        uint64_t v32 = TerminalOntologyNode.name.getter();
        Swift::String v33 = v71;
        SemanticValue.init(string:label:)(v22, v23, v32, v34);
        if (one-time initialization token for appName != -1) {
          swift_once(&one-time initialization token for appName, one-time initialization function for appName);
        }
        uint64_t v35 = TerminalOntologyNode.name.getter();
        SemanticValue.init(string:label:)(v28, v30, v35, v36);
        uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v87 + 16);
        v37(v81, v33, v85);
        uint64_t v38 = v33;
        if ((swift_isUniquelyReferenced_nonNull_native(v17) & 1) == 0)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v17 = v47;
        }

        a1 = v76;
        unint64_t v39 = v17[2];
        if (v39 >= v17[3] >> 1)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v17 = v48;
        }

        __int128 v17[2] = v39 + 1;
        uint64_t v40 = v85;
        (*(void (**)(unint64_t, char *, uint64_t))(v87 + 32))( (unint64_t)v17 + ((*(unsigned __int8 *)(v87 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80))
        + *(void *)(v87 + 72) * v39,
          v81,
          v85);
        uint64_t v41 = (uint64_t)v74;
        v37(v74, v38, v40);
        __swift_storeEnumTagSinglePayload(v41, 0LL, 1LL, v40);
        Swift::String v42 = v72;
        v37(v72, v86, v40);
        DisplayHint.init(idValue:displayValue:)(v41, v42);
        uint64_t v43 = v92[0];
        if ((swift_isUniquelyReferenced_nonNull_native(v92[0]) & 1) == 0)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v43 = v49;
        }

        unint64_t v44 = *(void *)(v43 + 16);
        if (v44 >= *(void *)(v43 + 24) >> 1)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          uint64_t v43 = v50;
        }

        *(void *)(v43 + ++*(void *)(v0 + 16) = v44 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v73 + 32))( v43 + ((*(unsigned __int8 *)(v73 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80))
        + *(void *)(v73 + 72) * v44,
          v82,
          v75);
        swift_release(v18);
        swift_release(v31);
        v92[0] = v43;
        uint64_t v45 = *(void (**)(char *, uint64_t))(v87 + 8);
        uint64_t v46 = v85;
        v45(v86, v85);
        v45(v38, v46);
      }

      else
      {
        swift_bridgeObjectRelease();
        swift_release(v18);
        swift_release(v19);
        a1 = v76;
      }

      uint64_t v14 = v77;
    }

    else
    {
      swift_release(v18);
      swift_release(v19);
    }

    ++v16;
  }

  while (v14 != v16);
  swift_bridgeObjectRelease();
  uint64_t v12 = v68;
LABEL_35:
  if (one-time initialization token for reference != -1) {
    swift_once(&one-time initialization token for reference, one-time initialization function for reference);
  }
  uint64_t v52 = TerminalOntologyNode.name.getter();
  uint64_t v53 = v69;
  OrdinalDisplayHintsBuilder.init(referenceNode:)(v52, v54);
  uint64_t v55 = OrdinalDisplayHintsBuilder.build(for:)(v17);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v53, v12);
  specialized Array.append<A>(contentsOf:)(v55);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v56 = type metadata accessor for Logger(0LL);
  uint64_t v57 = __swift_project_value_buffer(v56, (uint64_t)static Logger.siriPhone);
  uint64_t v58 = (os_log_s *)Logger.logObject.getter(v57);
  os_log_type_t v60 = static os_log_type_t.debug.getter(v58, v59);
  if (os_log_type_enabled(v58, v60))
  {
    uint64_t v61 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v62 = swift_slowAlloc(32LL, -1LL);
    v91[0] = v62;
    *(_DWORD *)uint64_t v61 = 136315138;
    swift_beginAccess(v92, v90, 0LL, 0LL);
    uint64_t v63 = swift_bridgeObjectRetain();
    uint64_t v64 = Array.description.getter(v63, v75);
    unint64_t v66 = v65;
    swift_bridgeObjectRelease();
    uint64_t v89 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v64, v66, v91);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v89, v90, v61 + 4);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v58, v60, "Built display hints for app disambiguation: %s'", v61, 0xCu);
    swift_arrayDestroy(v62, 1LL);
    swift_slowDealloc(v62, -1LL, -1LL);
    swift_slowDealloc(v61, -1LL, -1LL);
  }

  swift_beginAccess(v92, v91, 0LL, 0LL);
  return v92[0];
}

uint64_t destroy for PhoneContactDisplayHintFactory(void *a1)
{
  return swift_release(a1[10]);
}

uint64_t initializeWithCopy for PhoneContactDisplayHintFactory(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  __int128 v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  uint64_t v6 = *(void *)(a2 + 80);
  *(void *)(a1 + 80) = v6;
  swift_retain(v6);
  return a1;
}

void *assignWithCopy for PhoneContactDisplayHintFactory(void *a1, void *a2)
{
  uint64_t v4 = a2[10];
  uint64_t v5 = a1[10];
  a1[10] = v4;
  swift_retain();
  swift_release(v5);
  return a1;
}

void *__swift_memcpy88_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x58uLL);
}

uint64_t assignWithTake for PhoneContactDisplayHintFactory(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + ++*(void *)(v0 + 16) = v4;
  *(void *)(a1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *(void *)(a2 + 32);
  __swift_destroy_boxed_opaque_existential_1((void *)(a1 + 40));
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v5 = *(void *)(a2 + 80);
  uint64_t v6 = *(void *)(a1 + 80);
  *(void *)(a1 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v5;
  swift_release(v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for PhoneContactDisplayHintFactory(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 88))
    {
      LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }

    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 2) = -1;
      }
    }
  }

  else
  {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 2) = -1;
  }

  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PhoneContactDisplayHintFactory(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 88) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for PhoneContactDisplayHintFactory()
{
  return &type metadata for PhoneContactDisplayHintFactory;
}

uint64_t specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)( uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  return specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)( a1,  a2,  a3,  a4,  a5,  (uint64_t (*)(void *, uint64_t))outlined init with take of AppSelectionSignalComponent);
}

uint64_t specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)( uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void *, uint64_t))
{
  _OWORD v14[3] = a4;
  v14[4] = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v14);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32LL))(boxed_opaque_existential_1, a2, a4);
  uint64_t v12 = *a3;
  *(void *)(v12 + ++*(void *)(v0 + 16) = a1 + 1;
  return a6(v14, v12 + 40 * a1 + 32);
}

unint64_t lazy protocol witness table accessor for type IndexSet.RangeView and conformance IndexSet.RangeView()
{
  unint64_t result = lazy protocol witness table cache variable for type IndexSet.RangeView and conformance IndexSet.RangeView;
  if (!lazy protocol witness table cache variable for type IndexSet.RangeView and conformance IndexSet.RangeView)
  {
    uint64_t v1 = type metadata accessor for IndexSet.RangeView(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for IndexSet.RangeView, v1);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type IndexSet.RangeView and conformance IndexSet.RangeView);
  }

  return result;
}

uint64_t outlined init with copy of PhoneContactDisplayHintFactory(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_2D216C()
{
  unint64_t v3 = (((((v2 + 95) & 0xFFFFFFFFFFFFFFF8LL) + 15) & 0xFFFFFFFFFFFFFFF8LL) + 15) & 0xFFFFFFFFFFFFFFF8LL;
  swift_release(*(void *)(v0 + 16));
  OUTLINED_FUNCTION_20_37();
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + v2));
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + v2 + 40));
  swift_release(*(void *)(v0 + v2 + 80));
  swift_bridgeObjectRelease();
  swift_release(*(void *)(v0 + v3 + 8));
  return swift_deallocObject(v0, v3 + 16, v1);
}

void partial apply for closure #1 in PhoneContactDisplayHintFactory.buildForeignEmergencyHintsSerially(_:index:currentDisplayHints:_:)( uint64_t a1)
{
  closure #1 in PhoneContactDisplayHintFactory.buildForeignEmergencyHintsSerially(_:index:currentDisplayHints:_:)( a1,  *(void *)(v1 + 16),  v1 + v3,  v1 + v4,  *(void *)(v1 + ((v4 + 95) & 0xFFFFFFFFFFFFFFF8LL)),  *(void *)(v1 + ((((v4 + 95) & 0xFFFFFFFFFFFFFFF8LL) + 15) & 0xFFFFFFFFFFFFFFF8LL)),  *(void *)(v1 + ((((((v4 + 95) & 0xFFFFFFFFFFFFFFF8LL) + 15) & 0xFFFFFFFFFFFFFFF8LL) + 15) & 0xFFFFFFFFFFFFFFF8LL)),  *(void *)(v1 + ((((((v4 + 95) & 0xFFFFFFFFFFFFFFF8LL) + 15) & 0xFFFFFFFFFFFFFFF8LL) + 15) & 0xFFFFFFFFFFFFFFF8LL)
              + 8));
}

uint64_t sub_2D2288()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t OUTLINED_FUNCTION_1_103(uint64_t a1)
{
  return swift_arrayInitWithCopy(a1);
}

uint64_t OUTLINED_FUNCTION_6_103(uint64_t a1)
{
  return swift_arrayInitWithCopy(a1);
}

  ;
}

  ;
}

  ;
}

  ;
}

  ;
}

uint64_t OUTLINED_FUNCTION_18_68( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(*(void *)(a14 + 16));
}

uint64_t OUTLINED_FUNCTION_19_68()
{
  return specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v1, v0);
}

uint64_t OUTLINED_FUNCTION_20_67()
{
  return specialized ContiguousArray.reserveCapacity(_:)(v0);
}

  ;
}

uint64_t OUTLINED_FUNCTION_26_59()
{
  return type metadata accessor for SemanticValue(0LL);
}

  ;
}

uint64_t OUTLINED_FUNCTION_30_50(uint64_t a1)
{
  return specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(a1);
}

  ;
}

  ;
}

  ;
}

uint64_t OUTLINED_FUNCTION_39_34()
{
  return type metadata accessor for OrdinalDisplayHintsBuilder(0LL);
}

uint64_t OUTLINED_FUNCTION_41_40()
{
  return swift_bridgeObjectRelease(v0);
}

uint64_t OUTLINED_FUNCTION_43_31(uint64_t a1)
{
  return swift_allocObject(a1, 24LL, 7LL);
}

uint64_t static Transformer<>.transformer(device:callCapability:participants:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = swift_allocObject(&unk_417048, 32LL, 7LL);
  *(void *)(v5 + ++*(void *)(v0 + 16) = a2;
  *(void *)(v5 + 24) = a3;
  swift_bridgeObjectRetain();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for INCallRecordFilter?);
  return Transformer.init(transform:)( partial apply for closure #1 in static Transformer<>.transformer(device:callCapability:participants:),  v5,  v6);
}

uint64_t sub_2D2480()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

id @nonobjc INCallRecordFilter.init(participants:callTypes:callCapability:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  if (a1)
  {
    type metadata accessor for INPerson();
    v7.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }

  else
  {
    v7.super.Class isa = 0LL;
  }

  id v8 = [v4 initWithParticipants:v7.super.isa callTypes:a2 callCapability:a3];

  return v8;
}

uint64_t OUTLINED_FUNCTION_0_109(void *a1)
{
  return v1;
}

__n128 PhoneCallDirectInvocationNLIntent.init(app:contacts:phoneCallAVMode:phoneCallAttributes:phoneCallAudioRoute:phoneCallCapability:phoneCallConfirmation:phoneCallDestinationType:phoneCallNoun:phoneCallPreferredProvider:phoneCallReference:phoneCallVerb:voiceMailVerb:voiceMailNoun:smsGroups:contactQueries:references:)@<Q0>( uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, char a6@<W5>, char a7@<W6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10, __n128 a11, uint64_t a12)
{
  *(void *)(a9 + 40) = a2;
  *(_BYTE *)(a9 + 48) = a3;
  *(void *)(a9 + 56) = a4;
  *(_BYTE *)(a9 + 64) = a5;
  *(_BYTE *)(a9 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 5) = a6;
  *(_BYTE *)(a9 + 66) = a7;
  *(_BYTE *)(a9 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 7) = a8;
  *(_WORD *)(a9 + 68) = a10;
  *(_DWORD *)(a9 + 70) = *(_DWORD *)((char *)&a10 + 2);
  __n128 result = a11;
  *(__n128 *)(a9 + 80) = a11;
  *(void *)(a9 + 96) = a12;
  return result;
}

uint64_t PhoneCallDirectInvocationNLIntent.app.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of PhoneCallApp?(v1, a1);
}

uint64_t outlined init with copy of PhoneCallApp?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallApp?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t PhoneCallDirectInvocationNLIntent.app.setter(uint64_t a1)
{
  return outlined assign with take of PhoneCallApp?(a1, v1);
}

uint64_t outlined assign with take of PhoneCallApp?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallApp?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

void PhoneCallDirectInvocationNLIntent.contacts.setter(uint64_t a1)
{
  *(void *)(v1 + 40) = a1;
  OUTLINED_FUNCTION_2();
}

Swift::Void (__swiftcall *PhoneCallDirectInvocationNLIntent.contacts.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t PhoneCallDirectInvocationNLIntent.phoneCallAVMode.setter(uint64_t result)
{
  *(_BYTE *)(v1 + 48) = result;
  return result;
}

void PhoneCallDirectInvocationNLIntent.phoneCallAttributes.setter(uint64_t a1)
{
  *(void *)(v1 + 56) = a1;
  OUTLINED_FUNCTION_2();
}

uint64_t PhoneCallDirectInvocationNLIntent.phoneCallAudioRoute.setter(uint64_t result)
{
  *(_BYTE *)(v1 + 64) = result;
  return result;
}

uint64_t PhoneCallDirectInvocationNLIntent.phoneCallCapability.getter()
{
  return *(unsigned __int8 *)(v0 + 65);
}

uint64_t PhoneCallDirectInvocationNLIntent.phoneCallCapability.setter(uint64_t result)
{
  *(_BYTE *)(v1 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 5) = result;
  return result;
}

Swift::Void (__swiftcall *PhoneCallDirectInvocationNLIntent.phoneCallCapability.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t PhoneCallDirectInvocationNLIntent.phoneCallConfirmation.getter()
{
  return *(unsigned __int8 *)(v0 + 66);
}

uint64_t PhoneCallDirectInvocationNLIntent.phoneCallConfirmation.setter(uint64_t result)
{
  *(_BYTE *)(v1 + 66) = result;
  return result;
}

Swift::Void (__swiftcall *PhoneCallDirectInvocationNLIntent.phoneCallConfirmation.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t PhoneCallDirectInvocationNLIntent.phoneCallDestinationType.getter()
{
  return *(unsigned __int8 *)(v0 + 67);
}

uint64_t PhoneCallDirectInvocationNLIntent.phoneCallDestinationType.setter(uint64_t result)
{
  *(_BYTE *)(v1 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 7) = result;
  return result;
}

Swift::Void (__swiftcall *PhoneCallDirectInvocationNLIntent.phoneCallDestinationType.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t PhoneCallDirectInvocationNLIntent.phoneCallNoun.getter()
{
  return *(unsigned __int8 *)(v0 + 68);
}

uint64_t PhoneCallDirectInvocationNLIntent.phoneCallNoun.setter(uint64_t result)
{
  *(_BYTE *)(v1 + 68) = result;
  return result;
}

Swift::Void (__swiftcall *PhoneCallDirectInvocationNLIntent.phoneCallNoun.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t PhoneCallDirectInvocationNLIntent.phoneCallPreferredProvider.getter()
{
  return *(unsigned __int8 *)(v0 + 69);
}

uint64_t PhoneCallDirectInvocationNLIntent.phoneCallPreferredProvider.setter(uint64_t result)
{
  *(_BYTE *)(v1 + 69) = result;
  return result;
}

Swift::Void (__swiftcall *PhoneCallDirectInvocationNLIntent.phoneCallPreferredProvider.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t PhoneCallDirectInvocationNLIntent.phoneCallReference.getter()
{
  return *(unsigned __int8 *)(v0 + 70);
}

uint64_t PhoneCallDirectInvocationNLIntent.phoneCallReference.setter(uint64_t result)
{
  *(_BYTE *)(v1 + 70) = result;
  return result;
}

Swift::Void (__swiftcall *PhoneCallDirectInvocationNLIntent.phoneCallReference.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t PhoneCallDirectInvocationNLIntent.phoneCallVerb.getter()
{
  return *(unsigned __int8 *)(v0 + 71);
}

uint64_t PhoneCallDirectInvocationNLIntent.phoneCallVerb.setter(uint64_t result)
{
  *(_BYTE *)(v1 + 71) = result;
  return result;
}

Swift::Void (__swiftcall *PhoneCallDirectInvocationNLIntent.phoneCallVerb.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t destroy for PhoneCallDirectInvocationNLIntent(void *a1)
{
  if (a1[3]) {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PhoneCallDirectInvocationNLIntent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v4;
    *(void *)(a1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
  }

  else
  {
    __int128 v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + ++*(void *)(v0 + 16) = v6;
    *(void *)(a1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *(void *)(a2 + 32);
  }

  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 40) = v7;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 56) = v8;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_WORD *)(a1 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *(_WORD *)(a2 + 72);
  uint64_t v9 = *(void *)(a2 + 80);
  uint64_t v10 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = v9;
  *(void *)(a1 + 88) = v10;
  uint64_t v11 = *(void *)(a2 + 96);
  *(void *)(a1 + 96) = v11;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v11);
  return a1;
}

uint64_t assignWithCopy for PhoneCallDirectInvocationNLIntent(uint64_t a1, __int128 *a2)
{
  uint64_t v4 = *((void *)a2 + 3);
  if (!*(void *)(a1 + 24))
  {
    if (v4)
    {
      *(void *)(a1 + 24) = v4;
      *(void *)(a1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *((void *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v4 - 8))(a1, a2);
      goto LABEL_8;
    }

uint64_t assignWithTake for PhoneCallDirectInvocationNLIntent(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24)) {
    __swift_destroy_boxed_opaque_existential_1((void *)a1);
  }
  __int128 v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + ++*(void *)(v0 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_WORD *)(a1 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *(_WORD *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PhoneCallDirectInvocationNLIntent(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 104))
    {
      LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }

    else
    {
      unint64_t v2 = *(void *)(a1 + 40);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 2) = -1;
      }
    }
  }

  else
  {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 2) = -1;
  }

  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PhoneCallDirectInvocationNLIntent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + outlined init with copy of SharedGlobalsProviding(v0, v1 - 104) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + outlined init with copy of SharedGlobalsProviding(v0, v1 - 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for PhoneCallDirectInvocationNLIntent()
{
  return &type metadata for PhoneCallDirectInvocationNLIntent;
}

void default argument 5 of EmergencyCountdownOutputBuilder.init(app:intent:intentResponse:sharedGlobals:responseGenerator:startCallCATsSimple:displayTextCATsSimple:)()
{
}

void default argument 6 of EmergencyCountdownOutputBuilder.init(app:intent:intentResponse:sharedGlobals:responseGenerator:startCallCATsSimple:displayTextCATsSimple:)()
{
}

void default argument 5 of EmergencyCountdownOutputBuilder.init(app:intent:intentResponse:sharedGlobals:responseGenerator:startCallCATsSimple:displayTextCATsSimple:)( uint64_t (*a1)(void))
{
  uint64_t v3 = a1(0LL);
  static CATOption.defaultMode.getter(v3);
  CATWrapperSimple.__allocating_init(options:globals:)(v1, 0LL);
  OUTLINED_FUNCTION_2();
}

uint64_t EmergencyCountdownOutputBuilder.init(app:intent:intentResponse:sharedGlobals:responseGenerator:startCallCATsSimple:displayTextCATsSimple:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __int128 *a4@<X3>, __int128 *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  *a8 = a1;
  a8[1] = a2;
  a8[2] = a3;
  outlined init with take of AppSelectionSignalComponent(a4, (uint64_t)(a8 + 3));
  uint64_t result = outlined init with take of AppSelectionSignalComponent(a5, (uint64_t)(a8 + 8));
  a8[13] = a6;
  a8[14] = a7;
  return result;
}

uint64_t EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[545] = v5;
  v6[539] = a5;
  v6[533] = a4;
  v6[527] = a3;
  v6[521] = a2;
  v6[515] = a1;
  uint64_t v7 = type metadata accessor for PhoneError(0LL);
  v6[551] = v7;
  v6[557] = OUTLINED_FUNCTION_23(*(void *)(v7 - 8));
  uint64_t v8 = type metadata accessor for DialogPhase(0LL);
  v6[563] = OUTLINED_FUNCTION_23(*(void *)(v8 - 8));
  uint64_t v9 = type metadata accessor for OutputGenerationManifest(0LL);
  v6[569] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v6[575] = v10;
  v6[581] = OUTLINED_FUNCTION_23(v10);
  uint64_t v11 = type metadata accessor for Locale(0LL);
  v6[587] = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  v6[593] = v12;
  v6[599] = OUTLINED_FUNCTION_23(v12);
  uint64_t v13 = type metadata accessor for EmergencyCountdownModel(0LL);
  v6[605] = OUTLINED_FUNCTION_23(*(void *)(v13 - 8));
  uint64_t v14 = type metadata accessor for CommonDirectAction(0LL);
  v6[611] = v14;
  v6[617] = OUTLINED_FUNCTION_23(*(void *)(v14 - 8));
  uint64_t v15 = type metadata accessor for InputOrigin(0LL);
  v6[623] = v15;
  uint64_t v16 = *(void *)(v15 - 8);
  v6[629] = v16;
  v6[635] = OUTLINED_FUNCTION_23(v16);
  v6[641] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (InputOrigin?, InputOrigin?));
  v6[647] = OUTLINED_FUNCTION_28();
  v6[653] = OUTLINED_FUNCTION_28();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for InputOrigin?);
  v6[654] = OUTLINED_FUNCTION_28();
  v6[655] = OUTLINED_FUNCTION_28();
  v6[656] = OUTLINED_FUNCTION_28();
  v6[657] = OUTLINED_FUNCTION_28();
  v6[658] = OUTLINED_FUNCTION_28();
  v6[659] = OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:)()
{
  uint64_t v169 = v0 + 2776;
  uint64_t v174 = v0 + 2936;
  uint64_t v1 = v0 + 3416;
  uint64_t v139 = v0 + 16;
  uint64_t v144 = v0 + 3896;
  uint64_t v150 = v0 + 656;
  uint64_t v156 = v0 + 3912;
  unint64_t v2 = *(uint64_t **)(v0 + 4360);
  outlined init with copy of EmergencyCountdownOutputBuilder(v2, v0 + 3256);
  uint64_t v3 = OUTLINED_FUNCTION_42_29((uint64_t)&unk_4171E0);
  *(void *)(v0 + 5280) = v3;
  OUTLINED_FUNCTION_63_27((void *)(v3 + 16), (const void *)(v0 + 3256));
  swift_retain();
  uint64_t v4 = v3;
  uint64_t v5 = (uint64_t)v2;
  swift_asyncLet_begin( v0 + 1296,  0LL,  &type metadata for String,  &async function pointer to partial apply for implicit closure #1 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:),  v4);
  outlined init with copy of EmergencyCountdownOutputBuilder(v2, v0 + 2616);
  uint64_t v6 = OUTLINED_FUNCTION_42_29((uint64_t)&unk_417208);
  *(void *)(v0 + 5288) = v6;
  OUTLINED_FUNCTION_63_27((void *)(v6 + 16), (const void *)(v0 + 2616));
  swift_retain();
  swift_asyncLet_begin( v0 + 16,  0LL,  &type metadata for String,  &async function pointer to partial apply for implicit closure #2 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:),  v6);
  outlined init with copy of EmergencyCountdownOutputBuilder(v2, v0 + 3096);
  uint64_t v7 = OUTLINED_FUNCTION_42_29((uint64_t)&unk_417230);
  *(void *)(v0 + 5296) = v7;
  OUTLINED_FUNCTION_63_27((void *)(v7 + 16), (const void *)(v0 + 3096));
  swift_retain();
  OUTLINED_FUNCTION_64_26( v0 + 656,  v8,  v9,  (uint64_t)&async function pointer to partial apply for implicit closure #3 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
  outlined init with copy of EmergencyCountdownOutputBuilder(v2, v0 + 3416);
  uint64_t v10 = OUTLINED_FUNCTION_42_29((uint64_t)&unk_417258);
  *(void *)(v0 + 5304) = v10;
  OUTLINED_FUNCTION_63_27((void *)(v10 + 16), (const void *)(v0 + 3416));
  swift_retain();
  OUTLINED_FUNCTION_64_26( v0 + 1936,  v11,  v12,  (uint64_t)&async function pointer to partial apply for implicit closure #4 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
  uint64_t v163 = (uint64_t)(v2 + 3);
  __swift_project_boxed_opaque_existential_1(v2 + 3, v2[6]);
  uint64_t v13 = OUTLINED_FUNCTION_50_28();
  if (v13)
  {
    CurrentRequest.inputOrigin.getter(v13);
    uint64_t v13 = OUTLINED_FUNCTION_38_1();
    uint64_t v14 = 0LL;
  }

  else
  {
    uint64_t v14 = 1LL;
  }

  uint64_t v15 = *(void *)(v0 + 5224);
  uint64_t v16 = *(void *)(v0 + 5128);
  uint64_t v17 = *(void *)(v0 + 5032);
  uint64_t v18 = OUTLINED_FUNCTION_49_31(v13, v14);
  OUTLINED_FUNCTION_73_28(v18, enum case for InputOrigin.voiceTrigger(_:));
  OUTLINED_FUNCTION_27_63();
  OUTLINED_FUNCTION_71_21();
  if (__swift_getEnumTagSinglePayload(v15, 1LL, v0 + 3416) != 1)
  {
    outlined init with copy of InputOrigin?(*(void *)(v0 + 5224), *(void *)(v0 + 5256));
    int v37 = OUTLINED_FUNCTION_65_19();
    uint64_t v38 = *(void *)(v0 + 5272);
    uint64_t v1 = *(void *)(v0 + 5264);
    uint64_t v39 = *(void *)(v0 + 5256);
    if (v37 != 1)
    {
      uint64_t v51 = *(void *)(v0 + 5080);
      uint64_t v52 = *(void *)(v0 + 5032);
      uint64_t v158 = v5;
      uint64_t v53 = *(void *)(v0 + 4984);
      uint64_t v146 = *(void *)(v0 + 5224);
      uint64_t v152 = *(uint64_t **)(v0 + 4360);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 32))(v51, v17, v53);
      lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type InputOrigin and conformance InputOrigin,  (uint64_t (*)(uint64_t))&type metadata accessor for InputOrigin,  (uint64_t)&protocol conformance descriptor for InputOrigin);
      uint64_t v41 = dispatch thunk of static Equatable.== infix(_:_:)(v39, v51, v53);
      uint64_t v54 = *(void (**)(uint64_t))(v52 + 8);
      uint64_t v55 = OUTLINED_FUNCTION_60_4();
      v54(v55);
      OUTLINED_FUNCTION_76_21(v1);
      OUTLINED_FUNCTION_76_21(v38);
      uint64_t v56 = v53;
      uint64_t v5 = v158;
      ((void (*)(uint64_t, uint64_t))v54)(v39, v56);
      OUTLINED_FUNCTION_76_21(v146);
      uint64_t v29 = OUTLINED_FUNCTION_68_28( v152,  v57,  v58,  v59,  v60,  v61,  v62,  v63,  v134,  v139,  v146,  (uint64_t)v152,  v158,  v163,  v169,  v174);
      if ((v41 & 1) != 0) {
        goto LABEL_18;
      }
LABEL_10:
      __swift_project_boxed_opaque_existential_1((void *)(v0 + 2960), *(void *)(v0 + 2984));
      uint64_t v49 = OUTLINED_FUNCTION_50_28();
      if (v49)
      {
        uint64_t v41 = v49;
        CurrentRequest.inputOrigin.getter(v49);
        uint64_t v49 = OUTLINED_FUNCTION_38_1();
        uint64_t v50 = 0LL;
      }

      else
      {
        uint64_t v50 = 1LL;
      }

      uint64_t v64 = *(void *)(v0 + 5176);
      uint64_t v65 = OUTLINED_FUNCTION_49_31(v49, v50);
      OUTLINED_FUNCTION_73_28(v65, enum case for InputOrigin.raiseToSpeak(_:));
      OUTLINED_FUNCTION_27_63();
      OUTLINED_FUNCTION_71_21();
      if (__swift_getEnumTagSinglePayload(v64, 1LL, v1) == 1)
      {
        uint64_t v66 = *(void *)(v0 + 5248);
        uint64_t v67 = *(void *)(v0 + 4984);
        OUTLINED_FUNCTION_47_7(*(void *)(v0 + 5240));
        OUTLINED_FUNCTION_47_7(v66);
        if (__swift_getEnumTagSinglePayload(v41, 1LL, v67) == 1)
        {
          outlined destroy of UUID?( *(void *)(v0 + 5176),  &demangling cache variable for type metadata for InputOrigin?);
          goto LABEL_18;
        }
      }

      else
      {
        outlined init with copy of InputOrigin?(*(void *)(v0 + 5176), *(void *)(v0 + 5232));
        int v77 = OUTLINED_FUNCTION_65_19();
        uint64_t v78 = *(void *)(v0 + 5248);
        uint64_t v79 = *(void *)(v0 + 5232);
        if (v77 != 1)
        {
          uint64_t v96 = *(void *)(v0 + 5176);
          uint64_t v97 = v5;
          uint64_t v98 = *(void *)(v0 + 5080);
          uint64_t v99 = *(void *)(v0 + 5032);
          uint64_t v100 = *(void *)(v0 + 4984);
          uint64_t v161 = *(void *)(v0 + 4360);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v99 + 32))(v98, v41, v100);
          lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type InputOrigin and conformance InputOrigin,  (uint64_t (*)(uint64_t))&type metadata accessor for InputOrigin,  (uint64_t)&protocol conformance descriptor for InputOrigin);
          char v101 = dispatch thunk of static Equatable.== infix(_:_:)(v79, v98, v100);
          uint64_t v16 = *(void *)(v99 + 8);
          ((void (*)(uint64_t, uint64_t))v16)(v98, v100);
          uint64_t v102 = OUTLINED_FUNCTION_60_4();
          outlined destroy of UUID?(v102, v103);
          outlined destroy of UUID?(v78, &demangling cache variable for type metadata for InputOrigin?);
          ((void (*)(uint64_t, uint64_t))v16)(v79, v100);
          uint64_t v5 = v97;
          outlined destroy of UUID?(v96, &demangling cache variable for type metadata for InputOrigin?);
          OUTLINED_FUNCTION_74_22( v104,  v105,  v106,  v107,  v108,  v109,  v110,  v111,  v135,  v140,  v145,  v151,  v161,  v164,  v170,  v175);
          OUTLINED_FUNCTION_55_31( v162,  v112,  v113,  v114,  v115,  v116,  v117,  v118,  v138,  v143,  v149,  v155,  (uint64_t)v162,  v168,  v173);
          if ((v101 & 1) != 0) {
            goto LABEL_19;
          }
LABEL_24:
          uint64_t v119 = *(void *)(v0 + 2824);
          uint64_t v120 = *(void *)(v0 + 2832);
          __swift_project_boxed_opaque_existential_1((void *)(v0 + 2800), v119);
          (*(void (**)(uint64_t, uint64_t))(v120 + 8))(v119, v120);
          uint64_t v121 = *(void *)(v0 + 3600);
          uint64_t v122 = *(void *)(v0 + 3608);
          __swift_project_boxed_opaque_existential_1((void *)(v0 + 3576), v121);
          char v76 = dispatch thunk of DeviceState.isCarPlay.getter(v121, v122);
          __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 3576));
          goto LABEL_25;
        }

        uint64_t v16 = *(void *)(v0 + 5032);
        OUTLINED_FUNCTION_40_0(*(void *)(v0 + 5240));
        OUTLINED_FUNCTION_40_0(v78);
        OUTLINED_FUNCTION_11_71(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
      }

      uint64_t v80 = *(uint64_t **)(v0 + 4360);
      outlined destroy of UUID?( *(void *)(v0 + 5176),  &demangling cache variable for type metadata for (InputOrigin?, InputOrigin?));
      OUTLINED_FUNCTION_74_22(v81, v82, v83, v84, v85, v86, v87, v88, v135, v140, v145, v151, v157, v164, v170, v175);
      OUTLINED_FUNCTION_55_31(v80, v89, v90, v91, v92, v93, v94, v95, v137, v142, v148, v154, v160, v167, v172);
      goto LABEL_24;
    }

    uint64_t v40 = *(void *)(v0 + 5032);
    OUTLINED_FUNCTION_40_0(*(void *)(v0 + 5264));
    OUTLINED_FUNCTION_40_0(v38);
    OUTLINED_FUNCTION_11_71(*(uint64_t (**)(uint64_t, uint64_t))(v40 + 8));
LABEL_9:
    uint64_t v41 = *(void *)(v0 + 4360);
    outlined destroy of UUID?( *(void *)(v0 + 5224),  &demangling cache variable for type metadata for (InputOrigin?, InputOrigin?));
    OUTLINED_FUNCTION_68_28( (uint64_t *)v41,  v42,  v43,  v44,  v45,  v46,  v47,  v48,  v134,  v139,  v144,  v150,  v156,  v163,  v169,  v174);
    goto LABEL_10;
  }

  uint64_t v19 = *(void *)(v0 + 5272);
  uint64_t v20 = *(void *)(v0 + 4984);
  OUTLINED_FUNCTION_47_7(*(void *)(v0 + 5264));
  OUTLINED_FUNCTION_47_7(v19);
  uint64_t v21 = *(uint64_t **)(v0 + 4360);
  outlined destroy of UUID?(*(void *)(v0 + 5224), &demangling cache variable for type metadata for InputOrigin?);
  uint64_t v29 = OUTLINED_FUNCTION_68_28(v21, v22, v23, v24, v25, v26, v27, v28, v134, v139, v144, v150, v156, v163, v169, v174);
LABEL_18:
  uint64_t v68 = *(uint64_t **)(v0 + 4360);
  OUTLINED_FUNCTION_74_22(v29, v30, v31, v32, v33, v34, v35, v36, v135, v140, v145, v151, v157, v164, v170, v175);
  OUTLINED_FUNCTION_55_31(v68, v69, v70, v71, v72, v73, v74, v75, v136, v141, v147, v153, v159, v165, v171);
LABEL_19:
  char v76 = 1;
LABEL_25:
  uint64_t v123 = v76 & 1;
  *(_BYTE *)(v0 + 5563) = v76 & 1;
  uint64_t v124 = *(void *)(v0 + 4360);
  uint64_t v125 = *(void **)(v0 + 4216);
  outlined destroy of EmergencyCountdownOutputBuilder(v16);
  unint64_t v126 = *(void **)(v124 + 104);
  id v127 = v125;
  specialized PhoneStartCallIntent.__allocating_init(intent:isRelationshipRequest:)();
  uint64_t v129 = v128;
  *(void *)(v0 + 531__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v128;
  type metadata accessor for SirikitDeviceState(0LL);
  __swift_project_boxed_opaque_existential_1(v166, *(void *)(v5 + 48));
  OUTLINED_FUNCTION_62_12();
  uint64_t v130 = SirikitDeviceState.__allocating_init(from:)(v177);
  *(void *)(v0 + 5320) = v130;
  uint64_t v131 = *(int **)(class metadata base offset for StartCallCATsSimple + *v126 + 512);
  uint64_t v176 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v131 + *v131);
  uint64_t v132 = (void *)swift_task_alloc(v131[1]);
  *(void *)(v0 + 5328) = v132;
  void *v132 = v0;
  v132[1] = EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:);
  return v176(v129, v130, v123);
}

{
  uint64_t v0;
  void *v1;
  uint64_t (*v2)(void);
  uint64_t v4;
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2(*(void *)(class metadata base offset for StartCallCATsSimple
                                                  + **(void **)(*(void *)(v0 + 4360) + 104LL)
                                                  + 264));
  *(void *)(v0 + 535__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v1;
  unint64_t v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_8( v1,  (uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:),  v4);
  return OUTLINED_FUNCTION_3_0(v2);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  os_log_s *v18;
  uint64_t v19;
  os_log_type_t v20;
  BOOL v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  os_log_s *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  void *v47;
  uint64_t *v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  os_log_s *log;
  uint64_t v65;
  uint64_t v66;
  uint64_t v1 = *(void **)(v0 + 5336);
  *(_BYTE *)(v0 + 5560) = 0;
  *(void *)(v0 + 3960) = dispatch thunk of LabelExecutionResult.subscript.getter(v0 + 5560);
  *(void *)(v0 + 3968) = v2;
  *(void *)(v0 + 5376) = v2;
  *(_BYTE *)(v0 + 556__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 1;
  *(void *)(v0 + 3976) = dispatch thunk of LabelExecutionResult.subscript.getter(v0 + 5562);
  *(void *)(v0 + 3984) = v3;
  *(void *)(v0 + 5384) = v3;
  *(_BYTE *)(v0 + 5561) = 2;
  *(void *)(v0 + 399__swift_destroy_boxed_opaque_existential_1(v0 + 2) = dispatch thunk of LabelExecutionResult.subscript.getter(v0 + 5561);
  *(void *)(v0 + 4000) = v4;
  *(void *)(v0 + 539__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v4;
  uint64_t v5 = [v1 dialog];
  uint64_t v6 = type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for DialogElement,  &OBJC_CLASS___DialogElement_ptr);
  uint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0) {
      uint64_t v39 = v7;
    }
    else {
      uint64_t v39 = v7 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    uint64_t v40 = _CocoaArrayWrapper.endIndex.getter(v39);
    OUTLINED_FUNCTION_4_1();
    if (v40) {
      goto LABEL_3;
    }
  }

  else if (*(void *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFF8LL)))
  {
LABEL_3:
    specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v7 & 0xC000000000000001LL) == 0, v7);
    if ((v7 & 0xC000000000000001LL) != 0) {
      uint64_t v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v7);
    }
    else {
      uint64_t v8 = *(id *)(v7 + 32);
    }
    uint64_t v9 = v8;
    OUTLINED_FUNCTION_4_1();
    uint64_t v10 = [v9 fullPrint];

    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    uint64_t v13 = v12;
    *(void *)(v0 + 4008) = v11;
    *(void *)(v0 + 40++*(void *)(v0 + 16) = v12;

    *(void *)(v0 + 5400) = v13;
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v14 = *(void **)(v0 + 4216);
    uint64_t v15 = *(void *)(v0 + 4168);
    uint64_t v16 = type metadata accessor for Logger(0LL);
    __swift_project_value_buffer(v16, (uint64_t)static Logger.siriPhone);
    uint64_t v17 = v14;
    swift_retain_n(v15, 2LL);
    uint64_t v18 = (os_log_s *)Logger.logObject.getter(v17);
    uint64_t v20 = static os_log_type_t.debug.getter(v18, v19);
    uint64_t v21 = os_log_type_enabled(v18, v20);
    uint64_t v22 = *(void **)(v0 + 4216);
    uint64_t v23 = *(void *)(v0 + 4168);
    if (v21)
    {
      uint64_t v24 = OUTLINED_FUNCTION_7_0(22LL);
      log = v18;
      uint64_t v25 = (void *)OUTLINED_FUNCTION_7_0(8LL);
      uint64_t v65 = OUTLINED_FUNCTION_7_0(32LL);
      uint64_t v66 = v65;
      *(_DWORD *)uint64_t v24 = 138412546;
      *(void *)(v0 + 407__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v22;
      uint64_t v26 = v22;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 4072, v0 + 4080, v24 + 4);
      uint64_t v27 = (uint64_t)v25;
      *uint64_t v25 = v22;

      *(_WORD *)(v24 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
      uint64_t v28 = App.appIdentifier.getter();
      if (v29)
      {
        uint64_t v30 = v29;
      }

      else
      {
        uint64_t v28 = 7104878LL;
        uint64_t v30 = 0xE300000000000000LL;
      }

      *(void *)(v0 + 4024) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v28, v30, &v66);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 4024, v0 + 4032, v24 + 14);
      OUTLINED_FUNCTION_13_1();
      OUTLINED_FUNCTION_31_1(v23);
      uint64_t v18 = log;
      _os_log_impl(&dword_0, log, v20, "EmergencyCountdown intent for launch app = %@ \n app=%s", (uint8_t *)v24, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      swift_arrayDestroy(v27, 1LL);
      OUTLINED_FUNCTION_0_2(v27);
      swift_arrayDestroy(v65, 1LL);
      OUTLINED_FUNCTION_0_2(v65);
      OUTLINED_FUNCTION_0_2(v24);
    }

    else
    {

      OUTLINED_FUNCTION_31_1(v23);
    }

    uint64_t v31 = *(void *)(v0 + 4936);
    uint64_t v32 = *(void *)(v0 + 4888);
    uint64_t v33 = *(void *)(v0 + 4360);
    uint64_t v34 = *(void *)(v0 + 4264);
    uint64_t v35 = *(void *)(v0 + 4216);
    uint64_t v36 = *(void *)(v0 + 4168);
    type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupLaunchAppWithIntent,  &OBJC_CLASS___SAIntentGroupLaunchAppWithIntent_ptr);
    *(void *)(v0 + 5408) = static SAIntentGroupLaunchAppWithIntent.launchAppWithIntent(app:intent:intentResponse:)( v36,  v35,  v34);
    swift_storeEnumTagMultiPayload(v31, v32, 7LL);
    __swift_project_boxed_opaque_existential_1((void *)(v33 + 24), *(void *)(v33 + 48));
    OUTLINED_FUNCTION_62_12();
    CommonDirectAction.toSAIntentGroupRunSiriKitExecutor(deviceState:)((void *)(v0 + 3656));
    *(void *)(v0 + 54++*(void *)(v0 + 16) = v37;
    __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 3656));
    outlined destroy of MainFlow(v31, type metadata accessor for CommonDirectAction);
    return swift_asyncLet_get_throwing( v0 + 1296,  v0 + 3944,  EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:),  v0 + 4224);
  }

  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_34_0();
  OUTLINED_FUNCTION_62();
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v41 = type metadata accessor for Logger(0LL);
  uint64_t v42 = __swift_project_value_buffer(v41, (uint64_t)static Logger.siriPhone);
  uint64_t v43 = (os_log_s *)Logger.logObject.getter(v42);
  uint64_t v44 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v43, v44))
  {
    uint64_t v45 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
    *(_WORD *)uint64_t v45 = 0;
    _os_log_impl( &dword_0,  v43,  v44,  "#EmergencyCountdownOutputBuilder intentConfirmationEmergency CAT returned no dialog. ",  v45,  2u);
    OUTLINED_FUNCTION_0_2((uint64_t)v45);
  }

  uint64_t v46 = *(void *)(v0 + 5360);
  uint64_t v47 = *(void **)(v0 + 5336);
  uint64_t v48 = *(uint64_t **)(v0 + 4456);
  uint64_t v49 = *(void *)(v0 + 4408);

  uint64_t v50 = [v47 catId];
  uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
  uint64_t v53 = v52;

  *uint64_t v48 = v51;
  v48[1] = v53;
  v48[2] = 0xD000000000000041LL;
  void v48[3] = 0x8000000000351F10LL;
  v48[4] = 0xD000000000000049LL;
  v48[5] = 0x8000000000351F60LL;
  v48[6] = 40LL;
  swift_storeEnumTagMultiPayload(v48, v49, 3LL);
  lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError,  type metadata accessor for PhoneError,  (uint64_t)&protocol conformance descriptor for PhoneError);
  *(void *)(v0 + 555__swift_destroy_boxed_opaque_existential_1(v0 + 2) = swift_allocError(v49, v54, 0LL, 0LL);
  PhoneError.logged()(v55);
  outlined destroy of MainFlow((uint64_t)v48, type metadata accessor for PhoneError);
  swift_willThrow(v56, v57, v58, v59, v60, v61, v62, v63);
  swift_release(v46);

  return swift_asyncLet_finish( v0 + 1936,  v0 + 3912,  EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:),  v0 + 4128);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  v1[678] = v0;
  if (v0)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_34_0();
    OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v2, v3, v4);
  }

  else
  {
    v1[679] = v1[493];
    v1[680] = v1[494];
    swift_bridgeObjectRetain();
    return swift_asyncLet_get_throwing( v1 + 2,  v1 + 491,  EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:),  v1 + 558);
  }

{
  uint64_t v0;
  void *v1;
  v1[681] = v0;
  if (v0)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_4_1();
    OUTLINED_FUNCTION_34_0();
    OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_4_0();
  }

  else
  {
    v1[682] = v1[491];
    v1[683] = v1[492];
    swift_bridgeObjectRetain();
    return swift_asyncLet_get_throwing( v1 + 82,  v1 + 487,  EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:),  v1 + 588);
  }

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  v1[684] = v0;
  if (v0)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_13_1();
    OUTLINED_FUNCTION_4_1();
    OUTLINED_FUNCTION_34_0();
    OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_19_1();
    return swift_task_switch(v2, v3, v4);
  }

  else
  {
    v1[685] = v1[487];
    v1[686] = v1[488];
    swift_bridgeObjectRetain();
    return swift_asyncLet_get_throwing( v1 + 242,  v1 + 489,  EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:),  v1 + 618);
  }

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  v1[687] = v0;
  if (v0)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_62();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_13_1();
    OUTLINED_FUNCTION_4_1();
    OUTLINED_FUNCTION_34_0();
  }

  else
  {
    unint64_t v2 = v1[499];
    uint64_t v3 = v1[497];
    uint64_t v4 = v1[495];
    v1[688] = v1[501];
    v1[689] = v2;
    v1[690] = v3;
    v1[691] = v4;
  }

  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_4_0();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  char v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *boxed_opaque_existential_1;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t v55 = *(void *)(v0 + 5528);
  uint64_t v52 = *(void *)(v0 + 5520);
  uint64_t v49 = *(void *)(v0 + 5512);
  uint64_t v46 = *(void *)(v0 + 5504);
  uint64_t v57 = *(void *)(v0 + 5480);
  uint64_t v58 = *(void *)(v0 + 5488);
  uint64_t v54 = *(void *)(v0 + 5464);
  uint64_t v50 = *(void *)(v0 + 5440);
  uint64_t v51 = *(void *)(v0 + 5456);
  uint64_t v48 = *(void *)(v0 + 5432);
  uint64_t v36 = *(void **)(v0 + 5416);
  uint64_t v1 = *(void **)(v0 + 5408);
  uint64_t v42 = *(void *)(v0 + 5400);
  uint64_t v43 = *(void *)(v0 + 5392);
  uint64_t v44 = *(void *)(v0 + 5384);
  uint64_t v45 = *(void *)(v0 + 5376);
  uint64_t v60 = *(void **)(v0 + 5336);
  uint64_t v39 = *(_BYTE *)(v0 + 5563);
  uint64_t v41 = *(void *)(v0 + 4840);
  unint64_t v2 = *(void *)(v0 + 4792);
  uint64_t v34 = *(void *)(v0 + 4744);
  uint64_t v35 = *(void *)(v0 + 4696);
  uint64_t v47 = *(void *)(v0 + 4504);
  uint64_t v3 = *(void **)(v0 + 4360);
  uint64_t v59 = *(void *)(v0 + 4312);
  uint64_t v56 = *(void *)(v0 + 4264);
  uint64_t v53 = *(void *)(v0 + 4216);
  uint64_t v40 = *(void *)(v0 + 3912);
  uint64_t v38 = *(void *)(v0 + 3920);
  uint64_t v5 = v3[6];
  uint64_t v4 = v3[7];
  __swift_project_boxed_opaque_existential_1(v3 + 3, v5);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  swift_bridgeObjectRetain();
  uint64_t v7 = v1;
  int v37 = v36;
  v6(v5, v4);
  uint64_t v8 = *(void *)(v0 + 3760);
  uint64_t v9 = *(void *)(v0 + 3768);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 3736), v8);
  uint64_t v10 = dispatch thunk of DeviceState.siriLocale.getter(v8, v9);
  uint64_t v11 = Locale.identifier.getter(v10);
  uint64_t v13 = v12;
  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v2, v35);
  __swift_project_boxed_opaque_existential_1(v3 + 3, v3[6]);
  uint64_t v14 = OUTLINED_FUNCTION_60_4();
  uint64_t v16 = v15(v14);
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(*(void *)v16 + 248LL))(v16);
  OUTLINED_FUNCTION_38_1();
  EmergencyCountdownModel.init(sashTitle:cancelButtonText:cancelledText:callButtonText:callingLabel:emergencyServicesLabel:sos:dialog:callAction:cancelAction:localeIdentifier:isSmartEnabled:shouldPlayTTSCountdown:)( v48,  v50,  v51,  v54,  v57,  v58,  v40,  v38,  v41,  v55,  v45,  v52,  v44,  v49,  v43,  v46,  v42,  v7,  v37,  v11,  v13,  v17 & 1,  v39);
  uint64_t v18 = __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 3736));
  static DialogPhase.confirmation.getter(v18);
  uint64_t v19 = (void *)swift_task_alloc(64LL);
  void v19[2] = v41;
  v19[3] = v53;
  v19[4] = v56;
  v19[5] = v3;
  v19[6] = v59;
  OutputGenerationManifest.init(dialogPhase:_:)( v47,  partial apply for closure #1 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:),  v19);
  OUTLINED_FUNCTION_23_3();
  uint64_t v20 = v3[11];
  uint64_t v21 = v3[12];
  __swift_project_boxed_opaque_existential_1(v3 + 8, v20);
  uint64_t v22 = type metadata accessor for PhoneSnippetDataModels(0LL);
  *(void *)(v0 + 3840) = v22;
  lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels and conformance PhoneSnippetDataModels,  type metadata accessor for PhoneSnippetDataModels,  (uint64_t)&protocol conformance descriptor for PhoneSnippetDataModels);
  *(void *)(v0 + 3848) = v23;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((void *)(v0 + 3816));
  outlined init with copy of EmergencyCountdownModel(v41, (uint64_t)boxed_opaque_existential_1);
  swift_storeEnumTagMultiPayload(boxed_opaque_existential_1, v22, 3LL);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v26 = swift_allocObject(v25, 40LL, 7LL);
  *(_OWORD *)(v26 + ++*(void *)(v0 + 16) = xmmword_31FE60;
  *(void *)(v26 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v60;
  uint64_t v61 = v26;
  specialized Array._endMutation()(v26, v27, v28, v29);
  *(void *)(v0 + 5536) = v61;
  uint64_t v30 = async function pointer to dispatch thunk of ResponseGenerating.makeResponseOutput(resultModel:dialog:outputGenerationManifest:)[1];
  uint64_t v31 = v60;
  uint64_t v32 = (void *)swift_task_alloc(v30);
  *(void *)(v0 + 5544) = v32;
  *uint64_t v32 = v0;
  v32[1] = EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:);
  return dispatch thunk of ResponseGenerating.makeResponseOutput(resultModel:dialog:outputGenerationManifest:)( *(void *)(v0 + 4120),  v0 + 3816,  v61,  *(void *)(v0 + 4648),  v20,  v21);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v1 = (void *)(*(void *)v0 + 3816LL);
  OUTLINED_FUNCTION_14_1(*(void *)(*(void *)v0 + 5544LL));
  OUTLINED_FUNCTION_39();
  __swift_destroy_boxed_opaque_existential_1(v1);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_4_0();
}

{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v1 = (void *)v0[677];
  unint64_t v2 = (void *)v0[676];
  uint64_t v3 = (void *)v0[667];
  uint64_t v4 = v0[605];
  uint64_t v5 = v0[581];
  uint64_t v6 = v0[575];
  uint64_t v7 = v0[569];
  swift_release(v0[670]);

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  outlined destroy of MainFlow(v4, type metadata accessor for EmergencyCountdownModel);
  return swift_asyncLet_finish( v0 + 242,  v0 + 489,  EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:),  v0 + 648);
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  OUTLINED_FUNCTION_13_88();
  OUTLINED_FUNCTION_2_16();
  return OUTLINED_FUNCTION_1_19();
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  OUTLINED_FUNCTION_12_91();
  OUTLINED_FUNCTION_2_16();
  return OUTLINED_FUNCTION_1_19();
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  OUTLINED_FUNCTION_11_91();
  OUTLINED_FUNCTION_2_16();
  return OUTLINED_FUNCTION_1_19();
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v1 = *(void *)(v0 + 5304);
  unint64_t v2 = *(void *)(v0 + 5264);
  uint64_t v68 = *(void *)(v0 + 5224);
  char v76 = *(void *)(v0 + 5176);
  uint64_t v84 = *(void *)(v0 + 5080);
  uint64_t v91 = *(void *)(v0 + 4936);
  uint64_t v97 = *(void *)(v0 + 4840);
  uint64_t v102 = *(void *)(v0 + 4792);
  uint64_t v106 = *(void *)(v0 + 4648);
  uint64_t v109 = *(void *)(v0 + 4504);
  uint64_t v111 = *(void *)(v0 + 4456);
  OUTLINED_FUNCTION_31_1(*(void *)(v0 + 5280));
  OUTLINED_FUNCTION_118();
  OUTLINED_FUNCTION_164_0();
  swift_release(v1);
  OUTLINED_FUNCTION_23_3();
  swift_task_dealloc(v2);
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  uint64_t v3 = swift_task_dealloc(v68);
  uint64_t v11 = OUTLINED_FUNCTION_49_8(v3, v4, v5, v6, v7, v8, v9, v10, v68, v76);
  uint64_t v19 = OUTLINED_FUNCTION_36_41(v11, v12, v13, v14, v15, v16, v17, v18, v69, v77, v84);
  uint64_t v27 = OUTLINED_FUNCTION_35_37(v19, v20, v21, v22, v23, v24, v25, v26, v70, v78, v85, v91);
  uint64_t v35 = OUTLINED_FUNCTION_29_50(v27, v28, v29, v30, v31, v32, v33, v34, v71, v79, v86, v92, v97);
  uint64_t v43 = OUTLINED_FUNCTION_23_64(v35, v36, v37, v38, v39, v40, v41, v42, v72, v80, v87, v93, v98, v102);
  uint64_t v51 = OUTLINED_FUNCTION_26_60(v43, v44, v45, v46, v47, v48, v49, v50, v73, v81, v88, v94, v99, v103, v106);
  uint64_t v59 = OUTLINED_FUNCTION_33_57(v51, v52, v53, v54, v55, v56, v57, v58, v74, v82, v89, v95, v100, v104, v107, v109);
  OUTLINED_FUNCTION_25_62(v59, v60, v61, v62, v63, v64, v65, v66, v75, v83, v90, v96, v101, v105, v108, v110, v111);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  OUTLINED_FUNCTION_13_88();
  OUTLINED_FUNCTION_2_16();
  return OUTLINED_FUNCTION_1_19();
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  OUTLINED_FUNCTION_12_91();
  OUTLINED_FUNCTION_2_16();
  return OUTLINED_FUNCTION_1_19();
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  OUTLINED_FUNCTION_11_91();
  OUTLINED_FUNCTION_2_16();
  return OUTLINED_FUNCTION_1_19();
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  OUTLINED_FUNCTION_13_88();
  OUTLINED_FUNCTION_2_16();
  return OUTLINED_FUNCTION_1_19();
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  OUTLINED_FUNCTION_12_91();
  OUTLINED_FUNCTION_2_16();
  return OUTLINED_FUNCTION_1_19();
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  OUTLINED_FUNCTION_11_91();
  OUTLINED_FUNCTION_2_16();
  return OUTLINED_FUNCTION_1_19();
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  OUTLINED_FUNCTION_13_88();
  OUTLINED_FUNCTION_2_16();
  return OUTLINED_FUNCTION_1_19();
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  OUTLINED_FUNCTION_12_91();
  OUTLINED_FUNCTION_2_16();
  return OUTLINED_FUNCTION_1_19();
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  OUTLINED_FUNCTION_11_91();
  OUTLINED_FUNCTION_2_16();
  return OUTLINED_FUNCTION_1_19();
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  OUTLINED_FUNCTION_13_88();
  OUTLINED_FUNCTION_2_16();
  return OUTLINED_FUNCTION_1_19();
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  OUTLINED_FUNCTION_12_91();
  OUTLINED_FUNCTION_2_16();
  return OUTLINED_FUNCTION_1_19();
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  OUTLINED_FUNCTION_11_91();
  OUTLINED_FUNCTION_2_16();
  return OUTLINED_FUNCTION_1_19();
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  OUTLINED_FUNCTION_13_88();
  OUTLINED_FUNCTION_2_16();
  return OUTLINED_FUNCTION_1_19();
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  OUTLINED_FUNCTION_12_91();
  OUTLINED_FUNCTION_2_16();
  return OUTLINED_FUNCTION_1_19();
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  OUTLINED_FUNCTION_11_91();
  OUTLINED_FUNCTION_2_16();
  return OUTLINED_FUNCTION_1_19();
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  OUTLINED_FUNCTION_13_88();
  OUTLINED_FUNCTION_2_16();
  return OUTLINED_FUNCTION_1_19();
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  OUTLINED_FUNCTION_12_91();
  OUTLINED_FUNCTION_2_16();
  return OUTLINED_FUNCTION_1_19();
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  OUTLINED_FUNCTION_11_91();
  OUTLINED_FUNCTION_2_16();
  return OUTLINED_FUNCTION_1_19();
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  OUTLINED_FUNCTION_13_88();
  OUTLINED_FUNCTION_2_16();
  return OUTLINED_FUNCTION_1_19();
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  OUTLINED_FUNCTION_12_91();
  OUTLINED_FUNCTION_2_16();
  return OUTLINED_FUNCTION_1_19();
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

{
  OUTLINED_FUNCTION_11_91();
  OUTLINED_FUNCTION_2_16();
  return OUTLINED_FUNCTION_1_19();
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:));
}

uint64_t EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:)( uint64_t a1)
{
  uint64_t v3 = *(void **)v2;
  uint64_t v4 = *(void *)(*(void *)v2 + 5328LL);
  v3[667] = a1;
  v3[668] = v1;
  swift_task_dealloc(v4);
  if (!v1)
  {
    swift_release(v3[665]);
    OUTLINED_FUNCTION_38_1();
  }

  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_4_0();
}

{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v3 = *v2;
  uint64_t v4 = *(void *)(*v2 + 5352);
  *(void *)(v3 + 5360) = a1;
  *(void *)(v3 + 5368) = v1;
  swift_task_dealloc(v4);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

#error "2D46E8: call analysis failed (funcsize=29)"
uint64_t EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  swift_release(*(void *)(v0 + 5320));
  OUTLINED_FUNCTION_76();
  uint64_t v1 = OUTLINED_FUNCTION_2_16();
  return swift_asyncLet_finish(v1, v2, v3, v4);
}

#error "2D4888: call analysis failed (funcsize=29)"
uint64_t EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_2_16();
  return OUTLINED_FUNCTION_1_19();
}

#error "2D4A14: call analysis failed (funcsize=29)"
uint64_t EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:)()
{
  void *v0;
  void *v1;
  OUTLINED_FUNCTION_9_84();

  OUTLINED_FUNCTION_76();
  OUTLINED_FUNCTION_2_16();
  return OUTLINED_FUNCTION_7_113();
}

#error "2D4BB0: call analysis failed (funcsize=29)"
uint64_t EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:)()
{
  void *v0;
  void *v1;
  OUTLINED_FUNCTION_9_84();

  OUTLINED_FUNCTION_76();
  OUTLINED_FUNCTION_2_16();
  return OUTLINED_FUNCTION_7_113();
}

#error "2D4D4C: call analysis failed (funcsize=29)"
uint64_t EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:)()
{
  void *v0;
  void *v1;
  OUTLINED_FUNCTION_9_84();

  OUTLINED_FUNCTION_76();
  OUTLINED_FUNCTION_2_16();
  return OUTLINED_FUNCTION_7_113();
}

#error "2D4EEC: call analysis failed (funcsize=29)"
uint64_t EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:)()
{
  void *v0;
  void *v1;
  OUTLINED_FUNCTION_9_84();

  OUTLINED_FUNCTION_76();
  OUTLINED_FUNCTION_2_16();
  return OUTLINED_FUNCTION_7_113();
}

#error "2D508C: call analysis failed (funcsize=29)"
id specialized UpdateResponseCommand<>.asUpdateCommand(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  NSString v10;
  NSString v11;
  unint64_t updated;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  Class isa;
  uint64_t v6 = type metadata accessor for UUID(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_134();
  uint64_t v8 = [objc_allocWithZone(SAUIUpdateVisualResponseSnippet) init];
  uint64_t v9 = UUID.init()(v8);
  UUID.uuidString.getter(v9);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v2, v6);
  OUTLINED_FUNCTION_60_4();
  uint64_t v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v8 setAceId:v10];

  (*(void (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2);
  uint64_t v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v8 setViewId:v11];

  updated = lazy protocol witness table accessor for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction();
  uint64_t v13 = dispatch thunk of UpdateResponseCommand.serializeData()( &type metadata for EmergencyCountdownUpdateAction,  updated);
  if (v3)
  {
  }

  else
  {
    uint64_t v15 = v13;
    uint64_t v16 = v14;
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    outlined consume of Data._Representation(v15, v16);
    [v8 setStateData:isa];
  }

  return v8;
}

id EmergencyCountdownOutputBuilder.intent.getter()
{
  return *(id *)(v0 + 8);
}

uint64_t EmergencyCountdownOutputBuilder.startCallCATsSimple.setter(uint64_t a1)
{
  uint64_t result = swift_release(*(void *)(v1 + 104));
  *(void *)(v1 + outlined init with copy of SharedGlobalsProviding(v0, v1 - 104) = a1;
  return result;
}

Swift::Void (__swiftcall *EmergencyCountdownOutputBuilder.startCallCATsSimple.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t EmergencyCountdownOutputBuilder.displayTextCATsSimple.setter(uint64_t a1)
{
  uint64_t result = swift_release(*(void *)(v1 + 112));
  *(void *)(v1 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a1;
  return result;
}

uint64_t implicit closure #1 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:)( uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + ++*(void *)(v0 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_task_switch( implicit closure #1 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:),  0LL,  0LL);
}

uint64_t implicit closure #1 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:)()
{
  uint64_t v2 = (void *)OUTLINED_FUNCTION_10_2(*(void *)(class metadata base offset for PhoneCallDisplayTextCATsSimple
                                                  + v1
                                                  + 136));
  *(void *)(v0 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v2;
  uint64_t v3 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_8( v2,  (uint64_t)implicit closure #1 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:),  v5);
  return OUTLINED_FUNCTION_3_0(v3);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  OUTLINED_FUNCTION_7_18();
  if (v1) {
    return OUTLINED_FUNCTION_24_1(*(uint64_t (**)(void))(v3 + 8));
  }
  *(void *)(v2 + 40) = v0;
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_9_11(v5, v6, v7);
}

uint64_t implicit closure #2 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:)( uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + ++*(void *)(v0 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_task_switch( implicit closure #2 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:),  0LL,  0LL);
}

uint64_t implicit closure #2 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:)()
{
  uint64_t v2 = (void *)OUTLINED_FUNCTION_10_2(*(void *)(class metadata base offset for PhoneCallDisplayTextCATsSimple
                                                  + v1
                                                  + 56));
  *(void *)(v0 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v2;
  uint64_t v3 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_8( v2,  (uint64_t)implicit closure #2 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:),  v5);
  return OUTLINED_FUNCTION_3_0(v3);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  OUTLINED_FUNCTION_7_18();
  if (v1) {
    return OUTLINED_FUNCTION_24_1(*(uint64_t (**)(void))(v3 + 8));
  }
  *(void *)(v2 + 40) = v0;
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_9_11(v5, v6, v7);
}

uint64_t implicit closure #2 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:)( uint64_t a1)
{
  uint64_t v2 = *(uint64_t **)(v1 + 16);
  uint64_t v3 = dispatch thunk of LabelExecutionResult.subscript.getter(a1);
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_38_1();
  uint64_t *v2 = v3;
  v2[1] = v5;
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t implicit closure #3 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:)( uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + ++*(void *)(v0 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_task_switch( implicit closure #3 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:),  0LL,  0LL);
}

uint64_t implicit closure #3 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:)()
{
  uint64_t v2 = (void *)OUTLINED_FUNCTION_10_2(*(void *)(class metadata base offset for PhoneCallDisplayTextCATsSimple
                                                  + v1
                                                  + 72));
  *(void *)(v0 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v2;
  uint64_t v3 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_8( v2,  (uint64_t)implicit closure #1 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:),  v5);
  return OUTLINED_FUNCTION_3_0(v3);
}

uint64_t implicit closure #4 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:)( uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v2[4] = swift_task_alloc((*(void *)(*(void *)(v3 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch( implicit closure #4 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:),  0LL,  0LL);
}

uint64_t implicit closure #4 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:)()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = *(void **)(v0[3] + 112LL);
  uint64_t v3 = type metadata accessor for SpeakableString(0LL);
  __swift_storeEnumTagSinglePayload(v1, 1LL, 1LL, v3);
  uint64_t v4 = *(int **)(class metadata base offset for PhoneCallDisplayTextCATsSimple + *v2 + 40);
  uint64_t v7 = (uint64_t (*)(void))((char *)v4 + *v4);
  uint64_t v5 = (void *)swift_task_alloc(v4[1]);
  v0[5] = v5;
  void *v5 = v0;
  v5[1] = implicit closure #4 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:);
  return v7(v0[4]);
}

uint64_t implicit closure #4 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:)( uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 48) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v4 + 32);
  if (!v1) {
    *(void *)(v4 + 56) = a1;
  }
  outlined destroy of UUID?(v5, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_9_11(v6, v7, v8);
}

{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v2 = *(uint64_t **)(v1 + 16);
  uint64_t v3 = dispatch thunk of LabelExecutionResult.subscript.getter(a1);
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_38_1();
  uint64_t *v2 = v3;
  v2[1] = v5;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t closure #1 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:)( uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, uint64_t a6)
{
  uint64_t v12 = &v39[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLContextUpdate?);
  __chkstk_darwin();
  uint64_t v14 = &v39[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v15 = type metadata accessor for EmergencyCountdownModel(0LL);
  uint64_t v16 = (uint64_t *)(a2 + *(int *)(v15 + 68));
  uint64_t v17 = *v16;
  uint64_t v18 = v16[1];
  swift_bridgeObjectRetain();
  OutputGenerationManifest.responseViewId.setter(v17, v18);
  OutputGenerationManifest.canUseServerTTS.setter(0LL);
  uint64_t v19 = a5 + 3;
  uint64_t v21 = a5[6];
  uint64_t v20 = a5[7];
  __swift_project_boxed_opaque_existential_1(v19, v21);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v20 + 8))(v41, v21, v20);
  static EmergencyUtils.requiresEmergencyConfirmation(intent:intentResponse:)(a3, a4);
  LOBYTE(a4) = v22;
  outlined init with copy of SharedGlobalsProviding((uint64_t)v41, (uint64_t)v40);
  char v23 = 0;
  __swift_destroy_boxed_opaque_existential_1(v40);
  __swift_destroy_boxed_opaque_existential_1(v41);
  OutputGenerationManifest.listenAfterSpeaking.setter(v23 & 1);
  OutputGenerationManifest.resultViewId.setter(0xD000000000000017LL, 0x8000000000346BE0LL);
  uint64_t v24 = type metadata accessor for NLContextUpdate(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16LL))(v14, a6, v24);
  __swift_storeEnumTagSinglePayload((uint64_t)v14, 0LL, 1LL, v24);
  uint64_t v25 = OutputGenerationManifest.nlContextUpdate.setter(v14);
  static ResponseMode.voiceForward.getter(v25);
  OutputGenerationManifest.responseMode.setter(v12);
  id v26 = specialized UpdateResponseCommand<>.asUpdateCommand(for:)( v15,  (uint64_t)&protocol witness table for EmergencyCountdownModel);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v27 = type metadata accessor for Logger(0LL);
  uint64_t v28 = __swift_project_value_buffer(v27, (uint64_t)static Logger.siriPhone);
  uint64_t v29 = (os_log_s *)Logger.logObject.getter(v28);
  os_log_type_t v31 = static os_log_type_t.debug.getter(v29, v30);
  if (os_log_type_enabled(v29, v31))
  {
    uint64_t v32 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v32 = 0;
    _os_log_impl( &dword_0,  v29,  v31,  "#EmergencyCountdownOutputBuilder adding startTimerCommand to additional commands",  v32,  2u);
    swift_slowDealloc(v32, -1LL, -1LL);
  }

  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v34 = swift_allocObject(v33, 40LL, 7LL);
  *(_OWORD *)(v34 + ++*(void *)(v0 + 16) = xmmword_31FE60;
  *(void *)(v34 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v26;
  v41[0] = v34;
  specialized Array._endMutation()(v34, v35, v36, v37);
  return OutputGenerationManifest.additionalCommands.setter(v41[0]);
}

uint64_t outlined init with copy of EmergencyCountdownOutputBuilder(uint64_t *a1, uint64_t a2)
{
  return a2;
}

uint64_t partial apply for implicit closure #1 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:)()
{
  uint64_t v0 = swift_task_alloc(dword_43FED4);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_53_2(v0);
  uint64_t v2 = OUTLINED_FUNCTION_18_12(v1);
  return implicit closure #1 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:)( v2,  v3);
}

uint64_t partial apply for implicit closure #2 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:)()
{
  uint64_t v0 = swift_task_alloc(dword_43FEE4);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_53_2(v0);
  uint64_t v2 = OUTLINED_FUNCTION_18_12(v1);
  return implicit closure #2 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:)( v2,  v3);
}

uint64_t partial apply for implicit closure #3 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:)()
{
  uint64_t v0 = swift_task_alloc(dword_43FEF4);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_53_2(v0);
  uint64_t v2 = OUTLINED_FUNCTION_18_12(v1);
  return implicit closure #3 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:)( v2,  v3);
}

uint64_t objectdestroyTm_18()
{
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 40));
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 80));
  swift_release(*(void *)(v0 + 120));
  swift_release(*(void *)(v0 + 128));
  return swift_deallocObject(v0, 136LL, 7LL);
}

uint64_t partial apply for implicit closure #4 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:)()
{
  uint64_t v0 = swift_task_alloc(dword_43FF04);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_53_2(v0);
  uint64_t v2 = OUTLINED_FUNCTION_18_12(v1);
  return implicit closure #4 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:)( v2,  v3);
}

uint64_t outlined init with copy of InputOrigin?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for InputOrigin?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t partial apply for closure #1 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:)( uint64_t a1)
{
  return closure #1 in EmergencyCountdownOutputBuilder.makeEmergencyCountdownSnippet(app:intent:intentResponse:nlContextUpdate:)( a1,  *(void *)(v1 + 16),  *(void **)(v1 + 24),  *(void **)(v1 + 32),  *(void **)(v1 + 40),  *(void *)(v1 + 48));
}

uint64_t destroy for EmergencyCountdownOutputBuilder(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1((void *)(a1 + 24));
  __swift_destroy_boxed_opaque_existential_1((void *)(a1 + 64));
  swift_release(*(void *)(a1 + 104));
  return swift_release(*(void *)(a1 + 112));
}

uint64_t initializeWithCopy for EmergencyCountdownOutputBuilder(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = (void *)a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = (void *)a2[2];
  *(void *)(a1 + ++*(void *)(v0 + 16) = v6;
  uint64_t v7 = a2 + 3;
  __int128 v8 = *((_OWORD *)a2 + 3);
  *(_OWORD *)(a1 + 48) = v8;
  uint64_t v9 = v8;
  uint64_t v10 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v8 - 8);
  swift_retain(v4);
  id v11 = v5;
  id v12 = v6;
  v10(a1 + 24, v7, v9);
  __int128 v13 = *(_OWORD *)(a2 + 11);
  *(_OWORD *)(a1 + 88) = v13;
  (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 64, (uint64_t)(a2 + 8));
  uint64_t v14 = a2[13];
  uint64_t v15 = a2[14];
  *(void *)(a1 + outlined init with copy of SharedGlobalsProviding(v0, v1 - 104) = v14;
  *(void *)(a1 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v15;
  swift_retain(v14);
  swift_retain(v15);
  return a1;
}

uint64_t *assignWithCopy for EmergencyCountdownOutputBuilder(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a1;
  *a1 = *a2;
  swift_retain();
  swift_release(v4);
  uint64_t v5 = (void *)a2[1];
  uint64_t v6 = (void *)a1[1];
  a1[1] = (uint64_t)v5;
  id v7 = v5;

  __int128 v8 = (void *)a2[2];
  uint64_t v9 = (void *)a1[2];
  a1[2] = (uint64_t)v8;
  id v10 = v8;

  __swift_assign_boxed_opaque_existential_1(a1 + 3, a2 + 3);
  __swift_assign_boxed_opaque_existential_1(a1 + 8, a2 + 8);
  uint64_t v11 = a1[13];
  a1[13] = a2[13];
  swift_retain();
  swift_release(v11);
  uint64_t v12 = a2[14];
  uint64_t v13 = a1[14];
  a1[14] = v12;
  swift_retain();
  swift_release(v13);
  return a1;
}

uint64_t *assignWithTake for EmergencyCountdownOutputBuilder(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  uint64_t v5 = (void *)a1[1];
  a1[1] = a2[1];

  uint64_t v6 = (void *)a1[2];
  a1[2] = a2[2];

  __swift_destroy_boxed_opaque_existential_1(a1 + 3);
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
  *(_OWORD *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 5) = *(_OWORD *)(a2 + 5);
  a1[7] = a2[7];
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  __int128 v7 = *((_OWORD *)a2 + 5);
  *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
  *((_OWORD *)a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 5) = v7;
  uint64_t v8 = a2[13];
  uint64_t v9 = a1[13];
  a1[12] = a2[12];
  a1[13] = v8;
  swift_release(v9);
  uint64_t v10 = a1[14];
  a1[14] = a2[14];
  swift_release(v10);
  return a1;
}

ValueMetadata *type metadata accessor for EmergencyCountdownOutputBuilder()
{
  return &type metadata for EmergencyCountdownOutputBuilder;
}

uint64_t OUTLINED_FUNCTION_0_110()
{
  return swift_release_n(*(void *)(v0 + 5280), 2LL);
}

uint64_t OUTLINED_FUNCTION_4_107(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_7_113()
{
  return swift_asyncLet_finish();
}

void OUTLINED_FUNCTION_9_84()
{
}

uint64_t OUTLINED_FUNCTION_11_91()
{
  return swift_release(*(void *)(v0 + 5288));
}

uint64_t OUTLINED_FUNCTION_12_91()
{
  return swift_release(*(void *)(v0 + 5296));
}

uint64_t OUTLINED_FUNCTION_13_88()
{
  return swift_release(*(void *)(v0 + 5304));
}

uint64_t OUTLINED_FUNCTION_23_64( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return swift_task_dealloc(a14);
}

uint64_t OUTLINED_FUNCTION_26_60( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  return swift_task_dealloc(a15);
}

uint64_t OUTLINED_FUNCTION_29_50( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return swift_task_dealloc(a13);
}

uint64_t OUTLINED_FUNCTION_33_57( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  return swift_task_dealloc(a16);
}

uint64_t OUTLINED_FUNCTION_35_37( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return swift_task_dealloc(a12);
}

uint64_t OUTLINED_FUNCTION_36_41( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return swift_task_dealloc(a11);
}

uint64_t OUTLINED_FUNCTION_39_35( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  return swift_task_dealloc(a18);
}

uint64_t OUTLINED_FUNCTION_42_29(uint64_t a1)
{
  return swift_allocObject(a1, 136LL, 7LL);
}

uint64_t OUTLINED_FUNCTION_45_31()
{
  return *(void *)(v0 + 8);
}

uint64_t OUTLINED_FUNCTION_49_31(uint64_t a1, uint64_t a2)
{
  return __swift_storeEnumTagSinglePayload(v2, a2, 1LL, *(void *)(v3 + 4984));
}

uint64_t OUTLINED_FUNCTION_50_28()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 112))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_55_31( uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  return outlined init with copy of EmergencyCountdownOutputBuilder(a1, a15);
}

  ;
}

void *OUTLINED_FUNCTION_63_27(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x78uLL);
}

uint64_t OUTLINED_FUNCTION_68_28( uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  return outlined init with copy of EmergencyCountdownOutputBuilder(a1, a16);
}

uint64_t OUTLINED_FUNCTION_71_21()
{
  return outlined init with copy of InputOrigin?(v1, v0);
}

uint64_t OUTLINED_FUNCTION_73_28(uint64_t a1, uint64_t a2)
{
  return v4(v2, a2, v3);
}

uint64_t OUTLINED_FUNCTION_74_22( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  return outlined destroy of EmergencyCountdownOutputBuilder(a16);
}

  ;
}

void OUTLINED_FUNCTION_76_21(uint64_t a1)
{
}

uint64_t static OngoingCallFlowProducers.overrideStartCallProducers(producers:delegate:sharedGlobals:)( uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Logger(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_32();
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v5 = __swift_project_value_buffer(v3, (uint64_t)static Logger.siriPhone);
  uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
  os_log_type_t v8 = static os_log_type_t.debug.getter(v6, v7);
  if (os_log_type_enabled(v6, v8))
  {
    uint64_t v9 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_0, v6, v8, "#OngoingCallFlowProducers Setting ongoing call flow producers", v9, 2u);
    OUTLINED_FUNCTION_0_2((uint64_t)v9);
  }

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RCHChildFlowProducersAsync<INStartCallIntent, INStartCallIntentResponse>);
  uint64_t v10 = RCHChildFlowProducersAsync.unsupportedValueFlowProducer.getter();
  if (v10)
  {
    uint64_t v12 = v10;
    uint64_t v13 = v11;
    OUTLINED_FUNCTION_6_104();
    uint64_t v14 = swift_allocObject(&unk_417318, 72LL, 7LL);
    OUTLINED_FUNCTION_3_123(v14);
    *(void *)(a1 + 56) = v12;
    *(void *)(a1 + 64) = v13;
    swift_retain();
    OUTLINED_FUNCTION_8_90();
    RCHChildFlowProducersAsync.unsupportedValueFlowProducer.setter(v15, v16, v17);
    OUTLINED_FUNCTION_6_104();
    uint64_t v18 = OUTLINED_FUNCTION_28_15((uint64_t)&unk_417340);
    OUTLINED_FUNCTION_3_123(v18);
    OUTLINED_FUNCTION_8_90();
    RCHChildFlowProducersAsync.confirmIntentFlowProducer.setter();
    OUTLINED_FUNCTION_6_104();
    uint64_t v19 = OUTLINED_FUNCTION_28_15((uint64_t)&unk_417368);
    OUTLINED_FUNCTION_3_123(v19);
    OUTLINED_FUNCTION_8_90();
    RCHChildFlowProducersAsync.continueInAppFlowProducer.setter();
    return outlined consume of (@escaping @callee_guaranteed () -> ())?(v12, v13);
  }

  else
  {
    uint64_t v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v5, v3);
    char v22 = (os_log_s *)Logger.logObject.getter(v21);
    os_log_type_t v23 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v25 = OUTLINED_FUNCTION_7_0(32LL);
      v26[0] = v25;
      *(_DWORD *)uint64_t v24 = 136315138;
      uint64_t v27 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000053LL, 0x8000000000351FB0LL, v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, &v28, v24 + 4);
      _os_log_impl(&dword_0, v22, v23, "%s", v24, 0xCu);
      swift_arrayDestroy(v25, 1LL);
      OUTLINED_FUNCTION_0_2(v25);
      OUTLINED_FUNCTION_0_2((uint64_t)v24);
    }

    static SiriKitLifecycle._logCrashToEventBus(_:)(0xD000000000000053LL, 0x8000000000351FB0LL);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000053LL,  0x8000000000351FB0LL,  "PhoneCallFlowDelegatePlugin/PhoneLog.swift",  42LL,  2LL);
    __break(1u);
  }

  return result;
}

uint64_t (*static OngoingCallFlowProducers.makeUnsupportedValueOfferFlowProducer<A, B>(sharedGlobals:)( uint64_t a1))(uint64_t *a1, uint64_t a2)
{
  uint64_t v1 = OUTLINED_FUNCTION_28_15((uint64_t)&unk_417390);
  outlined init with take of AppSelectionSignalComponent(v3, v1 + 16);
  return partial apply for closure #1 in static OngoingCallFlowProducers.makeUnsupportedValueOfferFlowProducer<A, B>(sharedGlobals:);
}

uint64_t closure #1 in static OngoingCallFlowProducers.overrideStartCallProducers(producers:delegate:sharedGlobals:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t), uint64_t a5)
{
  uint64_t v24 = a3;
  uint64_t v9 = type metadata accessor for ParameterIdentifier(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParameterResolutionRecord<INStartCallIntent>);
  uint64_t v14 = ParameterResolutionRecord.parameter.getter(v13);
  uint64_t v15 = ParameterIdentifier.name.getter(v14);
  uint64_t v17 = v16;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v18._uint64_t countAndFlagsBits = v15;
  v18._object = v17;
  if (PhoneCallSlotNames.init(rawValue:)(v18).value == PhoneCallFlowDelegatePlugin_PhoneCallSlotNames_contacts
    && (uint64_t v19 = (void *)ParameterResolutionRecord.result.getter(v13),
        id v20 = [v19 unsupportedReason],
        v19,
        (id)_INStartCallContactUnsupportedReasonForeignEmergencyDisambiguation == v20))
  {
    outlined init with copy of SharedGlobalsProviding(v24, (uint64_t)v25);
    a5 = swift_allocObject(&unk_417450, 56LL, 7LL);
    outlined init with take of AppSelectionSignalComponent(v25, a5 + 16);
    uint64_t v21 = partial apply for specialized closure #1 in static OngoingCallFlowProducers.makeUnsupportedValueOfferFlowProducer<A, B>(sharedGlobals:)( a1,  a2);
  }

  else
  {
    swift_retain();
    uint64_t v21 = a4(a1, a2);
  }

  uint64_t v22 = v21;
  swift_release(a5);
  return v22;
}

uint64_t closure #2 in static OngoingCallFlowProducers.overrideStartCallProducers(producers:delegate:sharedGlobals:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentResolutionRecord<INStartCallIntent, INStartCallIntentResponse>);
  uint64_t v7 = (void *)IntentResolutionRecord.intent.getter(v6);
  os_log_type_t v8 = (void *)IntentResolutionRecord.intentResponse.getter(v6);
  static EmergencyUtils.requiresEmergencyConfirmation(intent:intentResponse:)(v7, v8);
  char v10 = v9;

  outlined init with copy of SharedGlobalsProviding(a3, (uint64_t)v15);
  if ((v10 & 1) != 0)
  {
    uint64_t v11 = swift_allocObject(&unk_417428, 56LL, 7LL);
    outlined init with take of AppSelectionSignalComponent(v15, v11 + 16);
    uint64_t v12 = partial apply for closure #1 in static OngoingCallFlowProducers.makeEmergencyConfirmIntentOfferFlowProducer(sharedGlobals:);
  }

  else
  {
    uint64_t v11 = swift_allocObject(&unk_417400, 56LL, 7LL);
    outlined init with take of AppSelectionSignalComponent(v15, v11 + 16);
    uint64_t v12 = partial apply for closure #1 in static OngoingCallFlowProducers.makeConfirmIntentOfferFlowProducer(sharedGlobals:);
  }

  swift_retain();
  uint64_t v13 = v12(a1, a2);
  outlined consume of (@escaping @callee_guaranteed () -> ())?((uint64_t)v12, v11);
  outlined consume of (@escaping @callee_guaranteed () -> ())?((uint64_t)v12, v11);
  return v13;
}

uint64_t closure #3 in static OngoingCallFlowProducers.overrideStartCallProducers(producers:delegate:sharedGlobals:)( uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = a3[3];
  uint64_t v7 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v6);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v7 + 120))(v41, v6, v7);
  uint64_t v8 = a3[3];
  uint64_t v9 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v8);
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 72))(v8, v9);
  (*(void (**)(__int128 *__return_ptr))(*(void *)v10 + 232LL))(v37);
  swift_release(v10);
  if (v38 == 1)
  {
    outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v37,  (uint64_t *)&demangling cache variable for type metadata for TransformationResult?);
    memset(v39, 0, sizeof(v39));
    uint64_t v40 = 0LL;
  }

  else
  {
    outlined init with copy of PhoneCallNLIntent?((uint64_t)v37 + 8, (uint64_t)v39);
    outlined destroy of TransformationResult((uint64_t)v37);
  }

  static OngoingCallOfferOptions.from(rchRecord:callStateProvider:nlIntent:)(a2, v41, (uint64_t)v39);
  uint64_t v12 = v11;
  outlined destroy of (UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?, UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues?)( (uint64_t)v39,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
  __swift_destroy_boxed_opaque_existential_1(v41);
  if (!*(void *)(v12 + 16))
  {
    swift_bridgeObjectRetain();
LABEL_24:
    swift_bridgeObjectRelease_n(v12, 2LL);
    outlined init with copy of SharedGlobalsProviding((uint64_t)a3, (uint64_t)v37);
    uint64_t v28 = swift_allocObject(&unk_4173D8, 56LL, 7LL);
    outlined init with take of AppSelectionSignalComponent(v37, v28 + 16);
    uint64_t v29 = partial apply for specialized closure #1 in static CallingIntentContinueInAppFlow.makeProducer(sharedGlobals:)( a1,  a2);
    goto LABEL_31;
  }

  Hasher.init(_seed:)(v37, *(void *)(v12 + 40));
  swift_bridgeObjectRetain();
  String.hash(into:)(v37, 0x4E646E41646C6F68LL, 0xEE006C6C61437765LL);
  Swift::Int v13 = Hasher._finalize()();
  uint64_t v14 = -1LL << *(_BYTE *)(v12 + 32);
  unint64_t v15 = v13 & ~v14;
  uint64_t v16 = v12 + 56;
  if (((*(void *)(v12 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v15) & 1) == 0)
  {
LABEL_13:
    if (*(void *)(v12 + 16))
    {
      Hasher.init(_seed:)(v37, *(void *)(v12 + 40));
      swift_bridgeObjectRetain();
      String.hash(into:)(v37, 0x654E646E41646E65LL, 0xED00006C6C614377LL);
      Swift::Int v21 = Hasher._finalize()();
      uint64_t v22 = -1LL << *(_BYTE *)(v12 + 32);
      unint64_t v23 = v21 & ~v22;
      if (((*(void *)(v16 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v23) & 1) != 0)
      {
        uint64_t v24 = ~v22;
        do
        {
          if (*(_BYTE *)(*(void *)(v12 + 48) + v23))
          {
            if (*(_BYTE *)(*(void *)(v12 + 48) + v23) != 2)
            {
              swift_bridgeObjectRelease();
              goto LABEL_29;
            }

            uint64_t v25 = 0x4E646E41646C6F68LL;
            unint64_t v26 = 0xEE006C6C61437765LL;
          }

          else
          {
            unint64_t v26 = 0xE300000000000000LL;
            uint64_t v25 = 6579297LL;
          }

          char v27 = _stringCompareWithSmolCheck(_:_:expecting:)(v25, v26, 0x654E646E41646E65LL, 0xED00006C6C614377LL, 0LL);
          swift_bridgeObjectRelease();
          if ((v27 & 1) != 0) {
            goto LABEL_29;
          }
          unint64_t v23 = (v23 + 1) & v24;
        }

        while (((*(void *)(v16 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v23) & 1) != 0);
      }

      swift_bridgeObjectRelease();
    }

    goto LABEL_24;
  }

  uint64_t v17 = ~v14;
  while (!*(_BYTE *)(*(void *)(v12 + 48) + v15))
  {
    unint64_t v19 = 0xE300000000000000LL;
    uint64_t v18 = 6579297LL;
LABEL_11:
    char v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v19, 0x4E646E41646C6F68LL, 0xEE006C6C61437765LL, 0LL);
    swift_bridgeObjectRelease();
    if ((v20 & 1) != 0) {
      goto LABEL_30;
    }
    unint64_t v15 = (v15 + 1) & v17;
    if (((*(void *)(v16 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v15) & 1) == 0) {
      goto LABEL_13;
    }
  }

  if (*(_BYTE *)(*(void *)(v12 + 48) + v15) == 1)
  {
    uint64_t v18 = 0x654E646E41646E65LL;
    unint64_t v19 = 0xED00006C6C614377LL;
    goto LABEL_11;
  }

uint64_t specialized closure #1 in static OngoingCallFlowProducers.makeUnsupportedValueOfferFlowProducer<A, B>(sharedGlobals:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParameterResolutionRecord<INAddCallParticipantIntent>);
  uint64_t v5 = (void *)ParameterResolutionRecord.intent.getter(v4);
  uint64_t v38 = v4;
  uint64_t v6 = (void *)ParameterResolutionRecord.result.getter(v4);
  uint64_t v7 = static EmergencyDuringOngoingCallPromptType.from(intent:intentResolutionResult:)(v5);
  uint64_t v9 = v8;
  char v11 = v10;
  int v12 = v10;

  if (v12 == 255) {
    Swift::Int v13 = 0LL;
  }
  else {
    Swift::Int v13 = v7;
  }
  if (v12 == 255) {
    uint64_t v14 = 0LL;
  }
  else {
    uint64_t v14 = v9;
  }
  if (v12 == 255) {
    char v15 = 0;
  }
  else {
    char v15 = v11;
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v16 = type metadata accessor for Logger(0LL);
  __swift_project_value_buffer(v16, (uint64_t)static Logger.siriPhone);
  OUTLINED_FUNCTION_1_104();
  id v17 = OUTLINED_FUNCTION_1_104();
  uint64_t v18 = (os_log_s *)Logger.logObject.getter(v17);
  os_log_type_t v20 = static os_log_type_t.debug.getter(v18, v19);
  if (os_log_type_enabled(v18, v20))
  {
    Swift::Int v21 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v37 = OUTLINED_FUNCTION_7_0(32LL);
    v40[0] = v37;
    *(_DWORD *)Swift::Int v21 = 136315138;
    OUTLINED_FUNCTION_1_104();
    uint64_t v22 = a3;
    unint64_t v23 = EmergencyDuringOngoingCallPromptType.description.getter(v13, v14, v15);
    unint64_t v25 = v24;
    OUTLINED_FUNCTION_0_111();
    uint64_t v26 = v23;
    a3 = v22;
    uint64_t v39 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v26, v25, v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, v40, v21 + 4);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_0_111();
    OUTLINED_FUNCTION_0_111();
    _os_log_impl( &dword_0,  v18,  v20,  "#OngoingCallFlowProducers Emergency during ongoing call - pushing unsupported value offer flow for %s",  v21,  0xCu);
    swift_arrayDestroy(v37, 1LL);
    OUTLINED_FUNCTION_0_2(v37);
    OUTLINED_FUNCTION_0_2((uint64_t)v21);
  }

  else
  {
    OUTLINED_FUNCTION_0_111();
    OUTLINED_FUNCTION_0_111();
  }

  OUTLINED_FUNCTION_1_104();
  char v27 = (void *)ParameterResolutionRecord.intent.getter(v38);
  outlined init with copy of SharedGlobalsProviding(a3, (uint64_t)v40);
  type metadata accessor for PhoneCallCommonCATs(0LL);
  OUTLINED_FUNCTION_43_21();
  uint64_t v28 = OUTLINED_FUNCTION_12_92();
  type metadata accessor for PhoneCallCommonCATPatternsExecutor(0LL);
  OUTLINED_FUNCTION_43_21();
  uint64_t v29 = OUTLINED_FUNCTION_12_92();
  uint64_t v30 = specialized EmergencyDuringOngoingCallOfferFlow.__allocating_init(emergencyPromptType:previousIntent:sharedGlobals:commonCats:commonCatPatterns:)( v13,  v14,  v15,  v27,  v40,  v28,  v29);
  uint64_t v31 = *(uint64_t (**)(uint64_t))(*(void *)v30 + 224LL);
  uint64_t v32 = type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for INAddCallParticipantIntent,  &OBJC_CLASS___INAddCallParticipantIntent_ptr);
  uint64_t v33 = v31(v32);
  v40[0] = v33;
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyUnsupportedValueFlow<INAddCallParticipantIntent>);
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type AnyUnsupportedValueFlow<INAddCallParticipantIntent> and conformance AnyUnsupportedValueFlow<A>,  &demangling cache variable for type metadata for AnyUnsupportedValueFlow<INAddCallParticipantIntent>);
  uint64_t v35 = Flow.eraseToAnyValueFlow()(v34);
  swift_release(v30);
  OUTLINED_FUNCTION_0_111();
  swift_release(v33);
  return v35;
}

{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  char *v14;
  uint64_t v15;
  id v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  os_log_s *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  id v30;
  os_log_s *v31;
  uint64_t v32;
  os_log_type_t v33;
  uint64_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint8_t *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v56;
  uint8_t *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62[5];
  type metadata accessor for CATOption(0LL);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParameterResolutionRecord<INStartCallIntent>);
  uint64_t v8 = (void *)ParameterResolutionRecord.intent.getter(v7);
  uint64_t v9 = (void *)ParameterResolutionRecord.result.getter(v7);
  unsigned __int8 v10 = objc_opt_self(&OBJC_CLASS___INAddCallParticipantIntent);
  char v11 = swift_dynamicCastObjCClass(v8, v10);
  if (!v11)
  {
    char v15 = objc_opt_self(&OBJC_CLASS___INStartCallIntent);
    if (swift_dynamicCastObjCClass(v8, v15))
    {
      uint64_t v16 = [v9 unsupportedReason];
      if ((id)_INStartCallContactUnsupportedReasonForeignEmergencyDisambiguation == v16)
      {

        goto LABEL_8;
      }
    }

    goto LABEL_17;
  }

  int v12 = (void *)v11;
  Swift::Int v13 = v8;
  uint64_t v14 = (char *)[v9 unsupportedReason];
  if (v14 == (_BYTE *)&dword_4 + 1)
  {
    outlined bridged method (pb) of @objc INAddCallParticipantIntent.participants.getter(v12);
    if (!v18)
    {

      goto LABEL_23;
    }

    uint64_t v19 = v18;
    if ((unint64_t)v18 >> 62)
    {
      if (v18 >= 0) {
        v18 &= 0xFFFFFFFFFFFFFF8uLL;
      }
      if (_CocoaArrayWrapper.endIndex.getter(v18))
      {
LABEL_12:
        specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v19 & 0xC000000000000001LL) == 0, v19);
        if ((v19 & 0xC000000000000001LL) != 0) {
          os_log_type_t v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v19);
        }
        else {
          os_log_type_t v20 = *(id *)(v19 + 32);
        }
        uint64_t v8 = v20;
        swift_bridgeObjectRelease();
        Swift::Int v21 = [v8 personHandle];
        if (v21)
        {
          outlined bridged method (ob) of @objc INPersonHandle.value.getter(v21);
          unint64_t v23 = v22;
        }

        else
        {
          unint64_t v23 = 0LL;
        }

        uint64_t v56 = specialized Optional<A>.isNilOrEmpty.getter((uint64_t)v21, v23);

        swift_bridgeObjectRelease();
        if ((v56 & 1) == 0) {
          goto LABEL_24;
        }
        goto LABEL_22;
      }
    }

    else if (*(void *)((char *)&dword_10 + (v18 & 0xFFFFFFFFFFFFFF8LL)))
    {
      goto LABEL_12;
    }

    swift_bridgeObjectRelease();
    goto LABEL_23;
  }

  if (v14 == (_BYTE *)&dword_4 + 2)
  {

LABEL_8:
    uint64_t v8 = 0LL;
    id v17 = 2;
    goto LABEL_25;
  }

LABEL_17:
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  unint64_t v24 = type metadata accessor for Logger(0LL);
  unint64_t v25 = __swift_project_value_buffer(v24, (uint64_t)static Logger.siriPhone);
  uint64_t v26 = (os_log_s *)Logger.logObject.getter(v25);
  char v27 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v28 = 0;
    _os_log_impl( &dword_0,  v26,  v27,  "#EmergencyDuringOngoingCallPromptType Intent and resolutionResult do not correspond to an emergency usecase.",  v28,  2u);
    swift_slowDealloc(v28, -1LL, -1LL);
  }

LABEL_22:
LABEL_23:
  uint64_t v8 = 0LL;
LABEL_24:
  id v17 = 0;
LABEL_25:
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v29 = type metadata accessor for Logger(0LL);
  __swift_project_value_buffer(v29, (uint64_t)static Logger.siriPhone);
  outlined copy of EmergencyDuringOngoingCallPromptType(v8, 0LL, v17);
  uint64_t v30 = outlined copy of EmergencyDuringOngoingCallPromptType(v8, 0LL, v17);
  uint64_t v31 = (os_log_s *)Logger.logObject.getter(v30);
  uint64_t v33 = static os_log_type_t.debug.getter(v31, v32);
  if (os_log_type_enabled(v31, v33))
  {
    uint64_t v34 = swift_slowAlloc(12LL, -1LL);
    uint64_t v58 = v7;
    uint64_t v35 = (uint8_t *)v34;
    uint64_t v36 = swift_slowAlloc(32LL, -1LL);
    uint64_t v59 = a2;
    uint64_t v37 = v36;
    v62[0] = v36;
    *(_DWORD *)uint64_t v35 = 136315138;
    uint64_t v60 = v6;
    uint64_t v57 = v35 + 4;
    outlined copy of EmergencyDuringOngoingCallPromptType(v8, 0LL, v17);
    uint64_t v38 = a3;
    uint64_t v39 = EmergencyDuringOngoingCallPromptType.description.getter(v8, 0LL, v17);
    uint64_t v41 = v40;
    outlined consume of EmergencyDuringOngoingCallPromptType(v8, 0LL, v17);
    uint64_t v42 = v39;
    a3 = v38;
    uint64_t v61 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v42, v41, v62);
    uint64_t v6 = v60;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, v62, v57);
    swift_bridgeObjectRelease();
    outlined consume of EmergencyDuringOngoingCallPromptType(v8, 0LL, v17);
    outlined consume of EmergencyDuringOngoingCallPromptType(v8, 0LL, v17);
    _os_log_impl( &dword_0,  v31,  v33,  "#OngoingCallFlowProducers Emergency during ongoing call - pushing unsupported value offer flow for %s",  v35,  0xCu);
    swift_arrayDestroy(v37, 1LL);
    swift_slowDealloc(v37, -1LL, -1LL);
    uint64_t v43 = v35;
    uint64_t v7 = v58;
    swift_slowDealloc(v43, -1LL, -1LL);
  }

  else
  {
    outlined consume of EmergencyDuringOngoingCallPromptType(v8, 0LL, v17);
    outlined consume of EmergencyDuringOngoingCallPromptType(v8, 0LL, v17);
  }

  outlined copy of EmergencyDuringOngoingCallPromptType(v8, 0LL, v17);
  uint64_t v44 = (void *)ParameterResolutionRecord.intent.getter(v7);
  outlined init with copy of SharedGlobalsProviding(a3, (uint64_t)v62);
  uint64_t v45 = type metadata accessor for PhoneCallCommonCATs(0LL);
  static CATOption.defaultMode.getter(v45);
  uint64_t v46 = CATWrapper.__allocating_init(options:globals:)(v6, 0LL);
  uint64_t v47 = type metadata accessor for PhoneCallCommonCATPatternsExecutor(0LL);
  static CATOption.defaultMode.getter(v47);
  uint64_t v48 = CATWrapper.__allocating_init(options:globals:)(v6, 0LL);
  uint64_t v49 = specialized EmergencyDuringOngoingCallOfferFlow.__allocating_init(emergencyPromptType:previousIntent:sharedGlobals:commonCats:commonCatPatterns:)( v8,  0LL,  v17,  v44,  v62,  v46,  v48);
  uint64_t v50 = *(uint64_t (**)(uint64_t))(*(void *)v49 + 224LL);
  uint64_t v51 = type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for INStartCallIntent,  &OBJC_CLASS___INStartCallIntent_ptr);
  uint64_t v52 = v50(v51);
  v62[0] = v52;
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyUnsupportedValueFlow<INStartCallIntent>);
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type AnyUnsupportedValueFlow<INStartCallIntent> and conformance AnyUnsupportedValueFlow<A>,  &demangling cache variable for type metadata for AnyUnsupportedValueFlow<INStartCallIntent>);
  uint64_t v54 = Flow.eraseToAnyValueFlow()(v53);
  swift_release(v49);
  outlined consume of EmergencyDuringOngoingCallPromptType(v8, 0LL, v17);
  swift_release(v52);
  return v54;
}

uint64_t closure #1 in static OngoingCallFlowProducers.makeUnsupportedValueOfferFlowProducer<A, B>(sharedGlobals:)( uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *a1;
  type metadata accessor for CATOption(0LL);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = *(void *)(v5 + class metadata base offset for RCHChildFlowFactory);
  uint64_t v9 = type metadata accessor for ParameterResolutionRecord(0LL, v8);
  unsigned __int8 v10 = (void *)ParameterResolutionRecord.intent.getter(v9);
  uint64_t v48 = v9;
  char v11 = (void *)ParameterResolutionRecord.result.getter(v9);
  int v12 = static EmergencyDuringOngoingCallPromptType.from(intent:intentResolutionResult:)(v10);
  uint64_t v14 = v13;
  char v16 = v15;
  int v17 = v15;

  if (v17 == 255)
  {
    int v12 = 0LL;
    uint64_t v14 = 0LL;
    char v16 = 0;
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v18 = type metadata accessor for Logger(0LL);
  __swift_project_value_buffer(v18, (uint64_t)static Logger.siriPhone);
  outlined copy of EmergencyDuringOngoingCallPromptType(v12, v14, v16);
  id v19 = outlined copy of EmergencyDuringOngoingCallPromptType(v12, v14, v16);
  os_log_type_t v20 = (os_log_s *)Logger.logObject.getter(v19);
  os_log_type_t v22 = static os_log_type_t.debug.getter(v20, v21);
  if (os_log_type_enabled(v20, v22))
  {
    uint64_t v23 = swift_slowAlloc(12LL, -1LL);
    uint64_t v47 = v8;
    unint64_t v24 = (uint8_t *)v23;
    uint64_t v45 = swift_slowAlloc(32LL, -1LL);
    v50[0] = v45;
    uint64_t v46 = a2;
    *(_DWORD *)unint64_t v24 = 136315138;
    uint64_t v43 = v24 + 4;
    uint64_t v44 = v24;
    outlined copy of EmergencyDuringOngoingCallPromptType(v12, v14, v16);
    unint64_t v25 = v7;
    uint64_t v26 = a3;
    unint64_t v27 = EmergencyDuringOngoingCallPromptType.description.getter(v12, v14, v16);
    unint64_t v29 = v28;
    outlined consume of EmergencyDuringOngoingCallPromptType(v12, v14, v16);
    uint64_t v30 = v27;
    a3 = v26;
    uint64_t v7 = v25;
    uint64_t v49 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v30, v29, v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, v50, v43);
    swift_bridgeObjectRelease();
    outlined consume of EmergencyDuringOngoingCallPromptType(v12, v14, v16);
    outlined consume of EmergencyDuringOngoingCallPromptType(v12, v14, v16);
    uint64_t v31 = v44;
    _os_log_impl( &dword_0,  v20,  v22,  "#OngoingCallFlowProducers Emergency during ongoing call - pushing unsupported value offer flow for %s",  v44,  0xCu);
    uint64_t v32 = v45;
    swift_arrayDestroy(v45, 1LL);
    swift_slowDealloc(v32, -1LL, -1LL);
    uint64_t v8 = v47;
    swift_slowDealloc(v31, -1LL, -1LL);
  }

  else
  {
    outlined consume of EmergencyDuringOngoingCallPromptType(v12, v14, v16);
    outlined consume of EmergencyDuringOngoingCallPromptType(v12, v14, v16);
  }

  outlined copy of EmergencyDuringOngoingCallPromptType(v12, v14, v16);
  uint64_t v33 = (void *)ParameterResolutionRecord.intent.getter(v48);
  outlined init with copy of SharedGlobalsProviding(a3, (uint64_t)v50);
  uint64_t v34 = type metadata accessor for PhoneCallCommonCATs(0LL);
  static CATOption.defaultMode.getter(v34);
  uint64_t v35 = CATWrapper.__allocating_init(options:globals:)(v7, 0LL);
  uint64_t v36 = type metadata accessor for PhoneCallCommonCATPatternsExecutor(0LL);
  static CATOption.defaultMode.getter(v36);
  uint64_t v37 = CATWrapper.__allocating_init(options:globals:)(v7, 0LL);
  uint64_t v38 = specialized EmergencyDuringOngoingCallOfferFlow.__allocating_init(emergencyPromptType:previousIntent:sharedGlobals:commonCats:commonCatPatterns:)( v12,  v14,  v16,  v33,  v50,  v35,  v37);
  uint64_t v39 = (*(uint64_t (**)(uint64_t))(*(void *)v38 + 224LL))(v8);
  v50[0] = v39;
  uint64_t v40 = type metadata accessor for AnyUnsupportedValueFlow(0LL);
  swift_getWitnessTable(&protocol conformance descriptor for AnyUnsupportedValueFlow<A>, v40);
  uint64_t v41 = Flow.eraseToAnyValueFlow()(v40);
  swift_release(v38);
  outlined consume of EmergencyDuringOngoingCallPromptType(v12, v14, v16);
  swift_release(v39);
  return v41;
}

uint64_t closure #1 in static OngoingCallFlowProducers.makeEmergencyConfirmIntentOfferFlowProducer(sharedGlobals:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (char *)&v28[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v6 = type metadata accessor for Logger(0LL);
  uint64_t v7 = __swift_project_value_buffer(v6, (uint64_t)static Logger.siriPhone);
  uint64_t v8 = (os_log_s *)Logger.logObject.getter(v7);
  os_log_type_t v10 = static os_log_type_t.debug.getter(v8, v9);
  if (os_log_type_enabled(v8, v10))
  {
    char v11 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)char v11 = 0;
    _os_log_impl( &dword_0,  v8,  v10,  "#OngoingCallFlowProducers Emergency during ongoing call - pushing confirm intent offer flow",  v11,  2u);
    swift_slowDealloc(v11, -1LL, -1LL);
  }

  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentResolutionRecord<INStartCallIntent, INStartCallIntentResponse>);
  Swift::Int v13 = (void *)IntentResolutionRecord.intent.getter(v12);
  uint64_t v14 = (void *)IntentResolutionRecord.intentResponse.getter(v12);
  unsigned __int8 v15 = (void *)IntentResolutionRecord.intent.getter(v12);
  outlined init with copy of SharedGlobalsProviding(a3, (uint64_t)v28);
  uint64_t v16 = type metadata accessor for PhoneCallCommonCATs(0LL);
  static CATOption.defaultMode.getter(v16);
  uint64_t v17 = CATWrapper.__allocating_init(options:globals:)(v5, 0LL);
  uint64_t v18 = type metadata accessor for PhoneCallCommonCATPatternsExecutor(0LL);
  static CATOption.defaultMode.getter(v18);
  uint64_t v19 = CATWrapper.__allocating_init(options:globals:)(v5, 0LL);
  uint64_t v20 = specialized EmergencyDuringOngoingCallOfferFlow.__allocating_init(emergencyPromptType:previousIntent:sharedGlobals:commonCats:commonCatPatterns:)( v13,  v14,  1,  v15,  v28,  v17,  v19);
  uint64_t v21 = *(uint64_t (**)(uint64_t))(*(void *)v20 + 216LL);
  uint64_t v22 = type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for INStartCallIntent,  &OBJC_CLASS___INStartCallIntent_ptr);
  uint64_t v23 = v21(v22);
  v28[0] = v23;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyConfirmIntentFlow<INStartCallIntent>);
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type AnyConfirmIntentFlow<INStartCallIntent> and conformance AnyConfirmIntentFlow<A>,  &demangling cache variable for type metadata for AnyConfirmIntentFlow<INStartCallIntent>);
  uint64_t v25 = Flow.eraseToAnyValueFlow()(v24);
  swift_release(v23);
  swift_release(v20);
  return v25;
}

uint64_t closure #1 in static OngoingCallFlowProducers.makeConfirmIntentOfferFlowProducer(sharedGlobals:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IntentResolutionRecord<INStartCallIntent, INStartCallIntentResponse>);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v20[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v9 = type metadata accessor for Logger(0LL);
  uint64_t v10 = __swift_project_value_buffer(v9, (uint64_t)static Logger.siriPhone);
  char v11 = (os_log_s *)Logger.logObject.getter(v10);
  os_log_type_t v13 = static os_log_type_t.debug.getter(v11, v12);
  if (os_log_type_enabled(v11, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl( &dword_0,  v11,  v13,  "#OngoingCallFlowProducers Call request during ongoing call - pushing confirm intent offer flow",  v14,  2u);
    swift_slowDealloc(v14, -1LL, -1LL);
  }

  uint64_t v15 = type metadata accessor for OngoingCallConfirmIntentFlow(0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a2, v5);
  outlined init with copy of SharedGlobalsProviding(a3, (uint64_t)v20);
  uint64_t v16 = OngoingCallConfirmIntentFlow.__allocating_init(rchRecord:sharedGlobals:)((uint64_t)v8, v20);
  v20[0] = v16;
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type OngoingCallConfirmIntentFlow and conformance OngoingCallConfirmIntentFlow,  type metadata accessor for OngoingCallConfirmIntentFlow);
  uint64_t v17 = Flow.eraseToAnyValueFlow()(v15);
  swift_release(v16);
  return v17;
}

uint64_t sub_2D7C54()
{
  return swift_deallocObject(v0, 72LL, 7LL);
}

uint64_t partial apply for closure #1 in static OngoingCallFlowProducers.overrideStartCallProducers(producers:delegate:sharedGlobals:)( uint64_t a1, uint64_t a2)
{
  return closure #1 in static OngoingCallFlowProducers.overrideStartCallProducers(producers:delegate:sharedGlobals:)( a1,  a2,  v2 + 16,  *(uint64_t (**)(uint64_t, uint64_t))(v2 + 56),  *(void *)(v2 + 64));
}

uint64_t partial apply for closure #2 in static OngoingCallFlowProducers.overrideStartCallProducers(producers:delegate:sharedGlobals:)( uint64_t a1, uint64_t a2)
{
  return closure #2 in static OngoingCallFlowProducers.overrideStartCallProducers(producers:delegate:sharedGlobals:)( a1,  a2,  v2 + 16);
}

uint64_t partial apply for closure #3 in static OngoingCallFlowProducers.overrideStartCallProducers(producers:delegate:sharedGlobals:)( uint64_t a1, uint64_t a2)
{
  return closure #3 in static OngoingCallFlowProducers.overrideStartCallProducers(producers:delegate:sharedGlobals:)( a1,  a2,  (void *)(v2 + 16));
}

uint64_t partial apply for closure #1 in static OngoingCallFlowProducers.makeUnsupportedValueOfferFlowProducer<A, B>(sharedGlobals:)( uint64_t *a1, uint64_t a2)
{
  return closure #1 in static OngoingCallFlowProducers.makeUnsupportedValueOfferFlowProducer<A, B>(sharedGlobals:)( a1,  a2,  v2 + 16);
}

ValueMetadata *type metadata accessor for OngoingCallFlowProducers()
{
  return &type metadata for OngoingCallFlowProducers;
}

uint64_t specialized EmergencyDuringOngoingCallOfferFlow.__allocating_init(emergencyPromptType:previousIntent:sharedGlobals:commonCats:commonCatPatterns:)( void *a1, void *a2, char a3, void *a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v15 = (char *)&v22[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = type metadata accessor for ConfirmationResponse(0LL);
  __swift_storeEnumTagSinglePayload((uint64_t)v15, 1LL, 2LL, v16);
  outlined init with copy of SharedGlobalsProviding((uint64_t)a5, (uint64_t)v22);
  uint64_t v17 = type metadata accessor for EmergencyDuringOngoingCallOfferFlow(0LL);
  uint64_t v18 = swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
  swift_retain();
  uint64_t v19 = specialized EmergencyDuringOngoingCallOfferFlow.init(state:emergencyPromptType:previousIntent:sharedGlobals:commonCats:commonCatPatterns:)( (uint64_t)v15,  a1,  a2,  a3,  a4,  v22,  a6,  a7,  v18);
  __swift_destroy_boxed_opaque_existential_1(a5);
  swift_release(a7);
  return v19;
}

uint64_t specialized EmergencyDuringOngoingCallOfferFlow.init(state:emergencyPromptType:previousIntent:sharedGlobals:commonCats:commonCatPatterns:)( uint64_t a1, void *a2, void *a3, char a4, void *a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  v36[3] = type metadata accessor for PhoneCallCommonCATPatternsExecutor(0LL);
  v36[4] = &protocol witness table for PhoneCallCommonCATPatternsExecutor;
  v36[0] = a8;
  outlined init with copy of EmergencyDuringOngoingCallOfferFlow.State( a1,  a9 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin35EmergencyDuringOngoingCallOfferFlow_state);
  *(void *)(a9 + ++*(void *)(v0 + 16) = a2;
  *(void *)(a9 + 24) = a3;
  *(_BYTE *)(a9 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a4;
  *(void *)(a9 + 40) = a5;
  outlined init with copy of SharedGlobalsProviding( (uint64_t)a6,  a9 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin35EmergencyDuringOngoingCallOfferFlow_sharedGlobals);
  *(void *)(a9 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin35EmergencyDuringOngoingCallOfferFlow_commonCats) = a7;
  outlined init with copy of SharedGlobalsProviding( (uint64_t)v36,  a9 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin35EmergencyDuringOngoingCallOfferFlow_commonCatPatterns);
  outlined copy of EmergencyDuringOngoingCallPromptType(a2, a3, a4);
  uint64_t v17 = one-time initialization token for siriPhone;
  id v18 = a5;
  swift_retain();
  if (v17 != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v19 = type metadata accessor for Logger(0LL);
  __swift_project_value_buffer(v19, (uint64_t)static Logger.siriPhone);
  outlined copy of EmergencyDuringOngoingCallPromptType(a2, a3, a4);
  id v20 = outlined copy of EmergencyDuringOngoingCallPromptType(a2, a3, a4);
  uint64_t v21 = (os_log_s *)Logger.logObject.getter(v20);
  os_log_type_t v23 = static os_log_type_t.debug.getter(v21, v22);
  if (os_log_type_enabled(v21, v23))
  {
    uint64_t v33 = a1;
    uint64_t v32 = a7;
    uint64_t v24 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v30 = swift_slowAlloc(32LL, -1LL);
    uint64_t v35 = v30;
    *(_DWORD *)uint64_t v24 = 136315138;
    outlined copy of EmergencyDuringOngoingCallPromptType(a2, a3, a4);
    uint64_t v31 = a6;
    unint64_t v25 = EmergencyDuringOngoingCallPromptType.description.getter(a2, a3, a4);
    unint64_t v27 = v26;
    outlined consume of EmergencyDuringOngoingCallPromptType(a2, a3, a4);
    uint64_t v34 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v25, v27, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35, v24 + 4);
    swift_bridgeObjectRelease();
    outlined consume of EmergencyDuringOngoingCallPromptType(a2, a3, a4);
    outlined consume of EmergencyDuringOngoingCallPromptType(a2, a3, a4);
    _os_log_impl(&dword_0, v21, v23, "#EmergencyDuringOngoingCallOfferFlow initialized with promptType: %s", v24, 0xCu);
    swift_arrayDestroy(v30, 1LL);
    swift_slowDealloc(v30, -1LL, -1LL);
    swift_slowDealloc(v24, -1LL, -1LL);

    swift_release(v32);
    outlined consume of EmergencyDuringOngoingCallPromptType(a2, a3, a4);

    __swift_destroy_boxed_opaque_existential_1(v31);
    uint64_t v28 = v33;
  }

  else
  {

    swift_release(a7);
    outlined consume of EmergencyDuringOngoingCallPromptType(a2, a3, a4);

    outlined consume of EmergencyDuringOngoingCallPromptType(a2, a3, a4);
    outlined consume of EmergencyDuringOngoingCallPromptType(a2, a3, a4);
    __swift_destroy_boxed_opaque_existential_1(a6);
    uint64_t v28 = a1;
  }

  outlined destroy of EmergencyDuringOngoingCallOfferFlow.State(v28);
  __swift_destroy_boxed_opaque_existential_1(v36);
  return a9;
}

uint64_t sub_2D811C()
{
  return swift_deallocObject(v0, 56LL, 7LL);
}

uint64_t partial apply for closure #1 in static OngoingCallFlowProducers.makeConfirmIntentOfferFlowProducer(sharedGlobals:)( uint64_t a1, uint64_t a2)
{
  return closure #1 in static OngoingCallFlowProducers.makeConfirmIntentOfferFlowProducer(sharedGlobals:)( a1,  a2,  v2 + 16);
}

uint64_t partial apply for closure #1 in static OngoingCallFlowProducers.makeEmergencyConfirmIntentOfferFlowProducer(sharedGlobals:)( uint64_t a1, uint64_t a2)
{
  return closure #1 in static OngoingCallFlowProducers.makeEmergencyConfirmIntentOfferFlowProducer(sharedGlobals:)( a1,  a2,  v2 + 16);
}

void OUTLINED_FUNCTION_0_111()
{
}

id OUTLINED_FUNCTION_1_104()
{
  return outlined copy of EmergencyDuringOngoingCallPromptType(v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_3_123(uint64_t a1)
{
  return outlined init with take of AppSelectionSignalComponent((__int128 *)(v1 - 128), a1 + 16);
}

void OUTLINED_FUNCTION_6_104()
{
}

  ;
}

uint64_t OUTLINED_FUNCTION_12_92()
{
  return CATWrapper.__allocating_init(options:globals:)(v0, 0LL);
}

uint64_t protocol witness for SKIntentResolver.resolve(skIntent:nlIntent:) in conformance AddCallParticipantContactSlotResolver()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to specialized SlotResolver.resolve(skIntent:nlIntent:));
  *(void *)(v0 + ++*(void *)(v0 + 16) = v1;
  uint64_t v2 = OUTLINED_FUNCTION_11_92( v1,  (uint64_t)implicit closure #4 in implicit closure #3 in implicit closure #2 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow());
  return OUTLINED_FUNCTION_22_3(v2, v3, v4);
}

uint64_t specialized SlotResolver.resolve(skIntent:nlIntent:)(uint64_t a1)
{
  uint64_t v3 = (void *)OUTLINED_FUNCTION_10_2(*(void *)(*(void *)v1 + 104LL));
  *(void *)(v2 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v3;
  uint64_t v4 = OUTLINED_FUNCTION_11_92(v3, (uint64_t)specialized SlotResolver.resolve(skIntent:nlIntent:));
  return OUTLINED_FUNCTION_22_3(v4, v5, v6);
}

{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  OUTLINED_FUNCTION_27_64(a1);
  uint64_t v2 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to specialized SlotResolver.resolveSlot(skIntent:nlIntent:));
  *(void *)(v1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v2;
  uint64_t v3 = OUTLINED_FUNCTION_11_92(v2, (uint64_t)specialized SlotResolver.resolve(skIntent:nlIntent:));
  return OUTLINED_FUNCTION_22_3(v3, v4, v5);
}

{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  OUTLINED_FUNCTION_27_64(a1);
  uint64_t v2 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to specialized SlotResolver.resolveSlot(skIntent:nlIntent:));
  *(void *)(v1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v2;
  uint64_t v3 = OUTLINED_FUNCTION_11_92(v2, (uint64_t)specialized SlotResolver.resolve(skIntent:nlIntent:));
  return OUTLINED_FUNCTION_22_3(v3, v4, v5);
}

{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  OUTLINED_FUNCTION_27_64(a1);
  uint64_t v2 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to specialized SlotResolver.resolveSlot(skIntent:nlIntent:));
  *(void *)(v1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v2;
  uint64_t v3 = OUTLINED_FUNCTION_11_92(v2, (uint64_t)specialized SlotResolver.resolve(skIntent:nlIntent:));
  return OUTLINED_FUNCTION_22_3(v3, v4, v5);
}

uint64_t specialized SlotResolver.resolve(skIntent:nlIntent:)()
{
  if (v1) {
    return OUTLINED_FUNCTION_24_1(*(uint64_t (**)(void))(v3 + 8));
  }
  *(void *)(v2 + 40) = v0;
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_9_11(v5, v6, v7);
}

{
  uint64_t v0;
  uint64_t (*v2)(void);
  OUTLINED_FUNCTION_72_0(*(uint64_t (**)(uint64_t, uint64_t))(**(void **)(v0 + 24) + 120LL));
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_33_58();
  return OUTLINED_FUNCTION_8_3(*(void *)(v0 + 16), v2);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  OUTLINED_FUNCTION_7_18();
  if (v1) {
    return OUTLINED_FUNCTION_24_1(*(uint64_t (**)(void))(v3 + 8));
  }
  *(void *)(v2 + 40) = v0;
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_9_11(v5, v6, v7);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  OUTLINED_FUNCTION_7_18();
  if (v1) {
    return OUTLINED_FUNCTION_24_1(*(uint64_t (**)(void))(v3 + 8));
  }
  *(void *)(v2 + 40) = v0;
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_9_11(v5, v6, v7);
}

{
  uint64_t v0;
  uint64_t (*v2)(void);
  OUTLINED_FUNCTION_72_0(*(uint64_t (**)(uint64_t, uint64_t))(**(void **)(v0 + 24) + 144LL));
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_33_58();
  return OUTLINED_FUNCTION_8_3(*(void *)(v0 + 16), v2);
}

uint64_t SlotResolver.resolve(skIntent:nlIntent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[4] = a4;
  v5[5] = v4;
  __int128 v5[2] = a1;
  v5[3] = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(0LL);
  v5[6] = AssociatedTypeWitness;
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  v5[7] = v8;
  v5[8] = swift_task_alloc((*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = *(int **)(a4 + 24);
  os_log_type_t v13 = (uint64_t (*)(uint64_t))((char *)v9 + *v9);
  uint64_t v10 = (void *)swift_task_alloc(v9[1]);
  v5[9] = v10;
  uint64_t v11 = OUTLINED_FUNCTION_22_63(v10);
  return v13(v11);
}

uint64_t SlotResolver.resolve(skIntent:nlIntent:)()
{
  *(void *)(*(void *)v1 + 8OUTLINED_FUNCTION_25_0(v0 + 16, (uint64_t)v2, 0LL) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19_1();
  return swift_task_switch(v2, v3, v4);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v4 = *(void **)(v0 + 16);
  (*(void (**)(uint64_t, void *, void))(*(void *)(v0 + 32) + 40LL))(v1, v4, *(void *)(v0 + 24));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v5 = v4;
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

{
  uint64_t v0;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_3_0(*(uint64_t (**)(void))(v0 + 8));
}

void specialized EmergencyContactSlotResolver.resolveSlot(skIntent:nlIntent:_:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, char *, void *, uint64_t, uint64_t, uint64_t))
{
  uint64_t v22 = a6;
  os_log_type_t v23 = a7;
  uint64_t v20 = a3;
  uint64_t v21 = a1;
  uint64_t v10 = OUTLINED_FUNCTION_94_4();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin();
  os_log_type_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for EmergencyContactResolution();
  uint64_t v15 = v7[3];
  uint64_t v16 = v7[4];
  __swift_project_boxed_opaque_existential_1(v7, v15);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v16 + 8))(v25, v15, v16);
  uint64_t v17 = v26;
  uint64_t v18 = v27;
  __swift_project_boxed_opaque_existential_1(v25, v26);
  dispatch thunk of DeviceState.siriLocale.getter(v17, v18);
  outlined init with copy of SignalProviding((uint64_t)(v7 + 5), (uint64_t)v24);
  uint64_t v19 = OUTLINED_FUNCTION_10_22(a5);
  *(void *)(v19 + ++*(void *)(v0 + 16) = v20;
  *(void *)(v19 + 24) = a4;
  swift_retain();
  v23(v21, v13, v24, v22, v19, v14);
  swift_release(v19);
  __swift_destroy_boxed_opaque_existential_1(v24);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  __swift_destroy_boxed_opaque_existential_1(v25);
  OUTLINED_FUNCTION_7_5();
}

uint64_t protocol witness for SlotResolver.resolveSlot(skIntent:nlIntent:) in conformance EmergencyContactSlotResolver<A>()
{
  uint64_t v1 = (void *)swift_task_alloc(dword_43FF4C);
  *(void *)(v0 + ++*(void *)(v0 + 16) = v1;
  uint64_t v2 = OUTLINED_FUNCTION_22_63(v1);
  return SlotResolver.resolveSlot(skIntent:nlIntent:)(v2, v3, v4, v5, v6);
}

uint64_t specialized SlotResolver.resolveSlot(skIntent:nlIntent:)(uint64_t a1, uint64_t a2)
{
  v3[4] = a1;
  v3[5] = a2;
  v3[3] = v2;
  return swift_task_switch(specialized SlotResolver.resolveSlot(skIntent:nlIntent:), 0LL, 0LL);
}

{
  uint64_t v2;
  void *v3;
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)specialized SlotResolver.resolveSlot(skIntent:nlIntent:));
}

{
  uint64_t v2;
  void *v3;
  v3[4] = a1;
  v3[5] = a2;
  v3[3] = v2;
  return swift_task_switch(specialized SlotResolver.resolveSlot(skIntent:nlIntent:), 0LL, 0LL);
}

{
  uint64_t v2;
  void *v3;
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)specialized SlotResolver.resolveSlot(skIntent:nlIntent:));
}

{
  uint64_t v2;
  void *v3;
  v3[4] = a1;
  v3[5] = a2;
  v3[3] = v2;
  return swift_task_switch(specialized SlotResolver.resolveSlot(skIntent:nlIntent:), 0LL, 0LL);
}

{
  uint64_t v2;
  void *v3;
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)specialized SlotResolver.resolveSlot(skIntent:nlIntent:));
}

uint64_t specialized SlotResolver.resolveSlot(skIntent:nlIntent:)()
{
  unint64_t v2 = OUTLINED_FUNCTION_18_69();
  OUTLINED_FUNCTION_15_80(v2);
  uint64_t v3 = swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  OUTLINED_FUNCTION_30_51(v3);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INPerson]);
  *uint64_t v0 = v1;
  v0[1] = specialized SlotResolver.resolveSlot(skIntent:nlIntent:);
  OUTLINED_FUNCTION_28_59();
  OUTLINED_FUNCTION_4_108();
  return OUTLINED_FUNCTION_3_124();
}

{
  uint64_t v0;
  uint64_t v2;
  uint64_t (*v3)(void);
  OUTLINED_FUNCTION_12_2();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_17_3();
  }

  else
  {
    OUTLINED_FUNCTION_26_61();
    unint64_t v2 = OUTLINED_FUNCTION_29_51();
    return OUTLINED_FUNCTION_116_1(v2, v3);
  }

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v2 = OUTLINED_FUNCTION_19_69();
  OUTLINED_FUNCTION_16_62(v2);
  uint64_t v3 = swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  OUTLINED_FUNCTION_30_51(v3);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INPerson]);
  *uint64_t v0 = v1;
  v0[1] = specialized SlotResolver.resolveSlot(skIntent:nlIntent:);
  OUTLINED_FUNCTION_28_59();
  OUTLINED_FUNCTION_4_108();
  return OUTLINED_FUNCTION_3_124();
}

{
  void *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v2 = OUTLINED_FUNCTION_18_69();
  OUTLINED_FUNCTION_15_80(v2);
  uint64_t v3 = swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  OUTLINED_FUNCTION_30_51(v3);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INPerson]);
  *uint64_t v0 = v1;
  v0[1] = specialized SlotResolver.resolveSlot(skIntent:nlIntent:);
  OUTLINED_FUNCTION_28_59();
  OUTLINED_FUNCTION_4_108();
  return OUTLINED_FUNCTION_3_124();
}

{
  uint64_t v0;
  uint64_t v2;
  uint64_t (*v3)(void);
  OUTLINED_FUNCTION_12_2();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_17_3();
  }

  else
  {
    OUTLINED_FUNCTION_26_61();
    unint64_t v2 = OUTLINED_FUNCTION_29_51();
    return OUTLINED_FUNCTION_116_1(v2, v3);
  }

{
  uint64_t v0;
  swift_task_dealloc(*(void *)(v0 + 48));
  return OUTLINED_FUNCTION_3_0(*(uint64_t (**)(void))(v0 + 8));
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v2 = OUTLINED_FUNCTION_19_69();
  OUTLINED_FUNCTION_16_62(v2);
  uint64_t v3 = swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  OUTLINED_FUNCTION_30_51(v3);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INPerson]);
  *uint64_t v0 = v1;
  v0[1] = specialized SlotResolver.resolveSlot(skIntent:nlIntent:);
  OUTLINED_FUNCTION_28_59();
  OUTLINED_FUNCTION_4_108();
  return OUTLINED_FUNCTION_3_124();
}

{
  void *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v2 = OUTLINED_FUNCTION_18_69();
  OUTLINED_FUNCTION_15_80(v2);
  uint64_t v3 = swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  OUTLINED_FUNCTION_30_51(v3);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INPerson]);
  *uint64_t v0 = v1;
  v0[1] = specialized SlotResolver.resolveSlot(skIntent:nlIntent:);
  OUTLINED_FUNCTION_28_59();
  OUTLINED_FUNCTION_4_108();
  return OUTLINED_FUNCTION_3_124();
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v2 = OUTLINED_FUNCTION_19_69();
  OUTLINED_FUNCTION_16_62(v2);
  uint64_t v3 = swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  OUTLINED_FUNCTION_30_51(v3);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INPerson]);
  *uint64_t v0 = v1;
  v0[1] = specialized SlotResolver.resolveSlot(skIntent:nlIntent:);
  OUTLINED_FUNCTION_28_59();
  OUTLINED_FUNCTION_4_108();
  return OUTLINED_FUNCTION_3_124();
}

uint64_t SlotResolver.resolveSlot(skIntent:nlIntent:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  return OUTLINED_FUNCTION_33_0((uint64_t)SlotResolver.resolveSlot(skIntent:nlIntent:));
}

uint64_t SlotResolver.resolveSlot(skIntent:nlIntent:)()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = swift_task_alloc(64LL);
  *(void *)(v0 + 64) = v2;
  __int128 v3 = *(_OWORD *)(v0 + 48);
  __int128 v4 = *(_OWORD *)(v0 + 24);
  *(void *)(v2 + ++*(void *)(v0 + 16) = v1;
  *(_OWORD *)(v2 + 24) = v3;
  *(_OWORD *)(v2 + 40) = v4;
  uint64_t v5 = (void *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(void *)(v0 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v5;
  swift_getAssociatedTypeWitness(0LL);
  void *v5 = v0;
  v5[1] = SlotResolver.resolveSlot(skIntent:nlIntent:);
  OUTLINED_FUNCTION_28_59();
  return withCheckedThrowingContinuation<A>(isolation:function:_:)( v6,  0LL,  0LL,  0xD00000000000001FLL,  v7,  partial apply for closure #1 in SlotResolver.resolveSlot(skIntent:nlIntent:),  v2,  v8);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v2 = *v1;
  *(void *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_17_3();
  }

  else
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v2 + 8))();
  }

uint64_t protocol witness for SKIntentResolver.resolve(skIntent:nlIntent:) in conformance EmergencyContactSlotResolver<A>( uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + ++*(void *)(v0 + 16) = swift_task_alloc(dword_43FF44);
  swift_getWitnessTable(&protocol conformance descriptor for EmergencyContactSlotResolver<A>, a3);
  uint64_t v5 = OUTLINED_FUNCTION_31_48((uint64_t)implicit closure #7 in implicit closure #6 in implicit closure #5 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow());
  return OUTLINED_FUNCTION_17_69(v5, v6, v7, v8);
}

uint64_t specialized closure #1 in SlotResolver.resolveSlot(skIntent:nlIntent:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<[INPerson], Error>);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))( (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL),  a1,  v7);
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (v10 + 16) & ~v10;
  uint64_t v12 = swift_allocObject(&unk_4176D0, v11 + v9, v10 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))( v12 + v11,  (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL),  v7);
  uint64_t v13 = swift_allocObject(&unk_4176F8, 32LL, 7LL);
  *(void *)(v13 + ++*(void *)(v0 + 16) = _s27PhoneCallFlowDelegatePlugin12SlotResolverPAAE07resolveF08skIntent02nlJ00F4TypeQz0jL0Qz_AA0aB8NLIntent_ptYaKFyScCyAHs5Error_pGXEfU_ys6ResultOyAhA0fgN0OGYucAMcfu_yARYucfu0_AA020SiriInferenceContactfG0CySo07INStartbJ0CG_TG5TA;
  *(void *)(v13 + 24) = v12;
  swift_retain();
  specialized EmergencyContactSlotResolver.resolveSlot(skIntent:nlIntent:_:)( a3,  a4,  (uint64_t)_ss6ResultOySaySo8INPersonCG27PhoneCallFlowDelegatePlugin17SlotResolverErrorOGIegn_AIIegg_TRTA_0,  v13,  (uint64_t)&unk_417720,  (uint64_t)closure #1 in EmergencyContactSlotResolver.resolveSlot(skIntent:nlIntent:_:)partial apply,  (void (*)(uint64_t, char *, void *, uint64_t, uint64_t, uint64_t))specialized static EmergencyContactResolution.fetchEmergencyContacts(sirikitIntent:locale:medicalIDStore:_:));
  swift_release(v12);
  return swift_release(v13);
}

{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<[INPerson], Error>);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))( (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL),  a1,  v7);
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (v10 + 16) & ~v10;
  uint64_t v12 = swift_allocObject(&unk_4175E0, v11 + v9, v10 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))( v12 + v11,  (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL),  v7);
  uint64_t v13 = swift_allocObject(&unk_417608, 32LL, 7LL);
  *(void *)(v13 + ++*(void *)(v0 + 16) = _s27PhoneCallFlowDelegatePlugin12SlotResolverPAAE07resolveF08skIntent02nlJ00F4TypeQz0jL0Qz_AA0aB8NLIntent_ptYaKFyScCyAHs5Error_pGXEfU_ys6ResultOyAhA0fgN0OGYucAMcfu_yARYucfu0_AA020SiriInferenceContactfG0CySo07INStartbJ0CG_TG5TA;
  *(void *)(v13 + 24) = v12;
  swift_retain();
  specialized EmergencyContactSlotResolver.resolveSlot(skIntent:nlIntent:_:)( a3,  a4,  (uint64_t)_ss6ResultOySaySo8INPersonCG27PhoneCallFlowDelegatePlugin17SlotResolverErrorOGIegn_AIIegg_TRTA_0,  v13,  (uint64_t)&unk_417630,  (uint64_t)closure #1 in EmergencyContactSlotResolver.resolveSlot(skIntent:nlIntent:_:)partial apply,  (void (*)(uint64_t, char *, void *, uint64_t, uint64_t, uint64_t))specialized static EmergencyContactResolution.fetchEmergencyContacts(sirikitIntent:locale:medicalIDStore:_:));
  swift_release(v12);
  return swift_release(v13);
}

{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<[INPerson], Error>);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))( (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL),  a1,  v7);
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (v10 + 16) & ~v10;
  uint64_t v12 = swift_allocObject(&unk_4174F0, v11 + v9, v10 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))( v12 + v11,  (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL),  v7);
  uint64_t v13 = swift_allocObject(&unk_417518, 32LL, 7LL);
  *(void *)(v13 + ++*(void *)(v0 + 16) = _s27PhoneCallFlowDelegatePlugin12SlotResolverPAAE07resolveF08skIntent02nlJ00F4TypeQz0jL0Qz_AA0aB8NLIntent_ptYaKFyScCyAHs5Error_pGXEfU_ys6ResultOyAhA0fgN0OGYucAMcfu_yARYucfu0_AA020SiriInferenceContactfG0CySo07INStartbJ0CG_TG5TA;
  *(void *)(v13 + 24) = v12;
  swift_retain();
  specialized EmergencyContactSlotResolver.resolveSlot(skIntent:nlIntent:_:)( a3,  a4,  (uint64_t)_ss6ResultOySaySo8INPersonCG27PhoneCallFlowDelegatePlugin17SlotResolverErrorOGIegn_AIIegg_TRTA_0,  v13,  (uint64_t)&unk_417540,  (uint64_t)partial apply for closure #1 in EmergencyContactSlotResolver.resolveSlot(skIntent:nlIntent:_:),  (void (*)(uint64_t, char *, void *, uint64_t, uint64_t, uint64_t))specialized static EmergencyContactResolution.fetchEmergencyContacts(sirikitIntent:locale:medicalIDStore:_:));
  swift_release(v12);
  return swift_release(v13);
}

void specialized closure #1 in SlotResolver.resolveSlot(skIntent:nlIntent:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v22 = a4;
  uint64_t v23 = a8;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<[INPerson], Error>);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  __chkstk_darwin();
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))( (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL),  a1,  v14);
  uint64_t v17 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = (v17 + 16) & ~v17;
  uint64_t v19 = swift_allocObject(a5, v18 + v16, v17 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))( v19 + v18,  (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL),  v14);
  uint64_t v20 = OUTLINED_FUNCTION_10_22(a6);
  *(void *)(v20 + ++*(void *)(v0 + 16) = a7;
  *(void *)(v20 + 24) = v19;
  uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a2 + 136LL);
  swift_retain();
  v21(a3, v22, v23, v20);
  swift_release(v19);
  swift_release(v20);
  OUTLINED_FUNCTION_7_5();
}

uint64_t closure #1 in SlotResolver.resolveSlot(skIntent:nlIntent:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = _s27PhoneCallFlowDelegatePlugin12SlotResolverPAAE07resolveF08skIntent02nlJ00F4TypeQz0jL0Qz_AA0aB8NLIntent_ptYaKFyScCyAHs5Error_pGXEfU_ys6ResultOyAhA0fgN0OGYucAMcfu_( a1,  a5,  a6);
  uint64_t v12 = v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(a6 + 32))( a3,  a4,  v10,  v11,  a5,  a6);
  return swift_release(v12);
}

uint64_t partial apply for closure #1 in SlotResolver.resolveSlot(skIntent:nlIntent:)(uint64_t a1)
{
  return closure #1 in SlotResolver.resolveSlot(skIntent:nlIntent:)(a1, v1[4], v1[5], v1[6], v1[2], v1[3]);
}

uint64_t (*_s27PhoneCallFlowDelegatePlugin12SlotResolverPAAE07resolveF08skIntent02nlJ00F4TypeQz0jL0Qz_AA0aB8NLIntent_ptYaKFyScCyAHs5Error_pGXEfU_ys6ResultOyAhA0fgN0OGYucAMcfu_( uint64_t a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(255LL);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Error);
  uint64_t v8 = type metadata accessor for CheckedContinuation( 0LL,  AssociatedTypeWitness,  v7,  &protocol self-conformance witness table for Error);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v17 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v17 - v11, a1, v8);
  uint64_t v13 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v14 = (v13 + 32) & ~v13;
  uint64_t v15 = swift_allocObject(&unk_417478, v14 + v10, v13 | 7);
  *(void *)(v15 + ++*(void *)(v0 + 16) = a2;
  *(void *)(v15 + 24) = a3;
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v15 + v14, v12, v8);
  return _s27PhoneCallFlowDelegatePlugin12SlotResolverPAAE07resolveF08skIntent02nlJ00F4TypeQz0jL0Qz_AA0aB8NLIntent_ptYaKFyScCyAHs5Error_pGXEfU_ys6ResultOyAhA0fgN0OGYucAMcfu_yARYucfu0_TA;
}

uint64_t _s27PhoneCallFlowDelegatePlugin12SlotResolverPAAE07resolveF08skIntent02nlJ00F4TypeQz0jL0Qz_AA0aB8NLIntent_ptYaKFyScCyAHs5Error_pGXEfU_ys6ResultOyAhA0fgN0OGYucAMcfu_yARYucfu0_AA020SiriInferenceContactfG0CySo012INStartVideobJ0CG_Tg5Tm( uint64_t a1, uint64_t a2, __int16 a3)
{
  if ((a3 & 0x100) != 0)
  {
    char v6 = a3;
    unint64_t v8 = lazy protocol witness table accessor for type SlotResolverError and conformance SlotResolverError();
    uint64_t v9 = swift_allocError(&type metadata for SlotResolverError, v8, 0LL, 0LL);
    *(void *)uint64_t v10 = a1;
    *(void *)(v10 + 8) = a2;
    *(_BYTE *)(v10 + ++*(void *)(v0 + 16) = v6;
    uint64_t v12 = v9;
    outlined copy of SlotResolverError(a1, a2, v6);
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<[INPerson], Error>);
    return CheckedContinuation.resume(throwing:)(&v12, v11);
  }

  else
  {
    uint64_t v12 = a1;
    swift_bridgeObjectRetain();
    uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<[INPerson], Error>);
    return CheckedContinuation.resume(returning:)(&v12, v4);
  }

uint64_t _s27PhoneCallFlowDelegatePlugin12SlotResolverPAAE07resolveF08skIntent02nlJ00F4TypeQz0jL0Qz_AA0aB8NLIntent_ptYaKFyScCyAHs5Error_pGXEfU_ys6ResultOyAhA0fgN0OGYucAMcfu_yARYucfu0_( uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(255LL);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Error);
  uint64_t v4 = type metadata accessor for CheckedContinuation( 0LL,  AssociatedTypeWitness,  v3,  &protocol self-conformance witness table for Error);
  unint64_t v5 = lazy protocol witness table accessor for type SlotResolverError and conformance SlotResolverError();
  return CheckedContinuation.resume<A>(with:)(a1, v4, (uint64_t)&type metadata for SlotResolverError, v5);
}

uint64_t CheckedContinuation.resume<A>(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v27 = a2;
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(a1);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v9);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = type metadata accessor for Result(0LL, v7, v16, v17);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v26 - v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))((char *)&v26 - v19, a1, v18);
  if (swift_getEnumCaseMultiPayload(v20, v18) == 1)
  {
    uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    v22(v15, v20, a3);
    uint64_t v23 = swift_allocError(a3, a4, 0LL, 0LL);
    v22(v24, v15, a3);
    uint64_t v28 = v23;
    return CheckedContinuation.resume(throwing:)(&v28, v27);
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v20, v7);
    return CheckedContinuation.resume(returning:)(v11, v27);
  }

uint64_t protocol witness for SlotResolver.resolveSlot(skIntent:nlIntent:) in conformance SiriInferenceContactSlotResolver<A>()
{
  char v6 = (void *)swift_task_alloc(dword_43FF4C);
  *(void *)(v2 + ++*(void *)(v0 + 16) = v6;
  uint64_t v8 = type metadata accessor for SiriInferenceContactSlotResolver(0LL, *(void *)(v1 + 80), *(void *)(v1 + 88), v7);
  *char v6 = v2;
  v6[1] = UnsupportedFlowCATs.deleteVoicemail();
  return SlotResolver.resolveSlot(skIntent:nlIntent:)(v5, v4, v3, v8, v0);
}

uint64_t protocol witness for SKIntentResolver.resolve(skIntent:nlIntent:) in conformance SiriInferenceContactSlotResolver<A>( uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + ++*(void *)(v0 + 16) = swift_task_alloc(dword_43FF44);
  uint64_t v6 = type metadata accessor for SiriInferenceContactSlotResolver(0LL, *(void *)(a3 + 80), *(void *)(a3 + 88), v5);
  swift_getWitnessTable(&protocol conformance descriptor for SiriInferenceContactSlotResolver<A>, v6);
  uint64_t v7 = OUTLINED_FUNCTION_31_48((uint64_t)implicit closure #7 in implicit closure #6 in implicit closure #5 in AddCallParticipantGuardFlowFactory.makeCallStateGuardFlow());
  return OUTLINED_FUNCTION_17_69(v7, v8, v9, v10);
}

uint64_t sub_2D9770()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(255LL);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Error);
  uint64_t v2 = type metadata accessor for CheckedContinuation( 0LL,  AssociatedTypeWitness,  v1,  &protocol self-conformance witness table for Error);
  OUTLINED_FUNCTION_21_58(*(void *)(v2 - 8));
  return OUTLINED_FUNCTION_54();
}

uint64_t _s27PhoneCallFlowDelegatePlugin12SlotResolverPAAE07resolveF08skIntent02nlJ00F4TypeQz0jL0Qz_AA0aB8NLIntent_ptYaKFyScCyAHs5Error_pGXEfU_ys6ResultOyAhA0fgN0OGYucAMcfu_yARYucfu0_TA( uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(255LL);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Error);
  type metadata accessor for CheckedContinuation( 0LL,  AssociatedTypeWitness,  v3,  &protocol self-conformance witness table for Error);
  return _s27PhoneCallFlowDelegatePlugin12SlotResolverPAAE07resolveF08skIntent02nlJ00F4TypeQz0jL0Qz_AA0aB8NLIntent_ptYaKFyScCyAHs5Error_pGXEfU_ys6ResultOyAhA0fgN0OGYucAMcfu_yARYucfu0_(a1);
}

unint64_t lazy protocol witness table accessor for type SlotResolverError and conformance SlotResolverError()
{
  unint64_t result = lazy protocol witness table cache variable for type SlotResolverError and conformance SlotResolverError;
  if (!lazy protocol witness table cache variable for type SlotResolverError and conformance SlotResolverError)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for SlotResolverError,  &type metadata for SlotResolverError);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type SlotResolverError and conformance SlotResolverError);
  }

  return result;
}

uint64_t specialized static EmergencyContactResolution.fetchEmergencyContacts(sirikitIntent:locale:medicalIDStore:_:)( void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v39 = a1;
  uint64_t v40 = a6;
  uint64_t v37 = a4;
  uint64_t v38 = a5;
  uint64_t v8 = type metadata accessor for Locale(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static Signpost.begin(_:)();
  uint64_t v13 = v12;
  uint64_t v33 = v14;
  uint64_t v16 = v15;
  __int16 v18 = v17;
  uint64_t v19 = a3[4];
  uint64_t v36 = a3[3];
  uint64_t v34 = v19;
  uint64_t v35 = __swift_project_boxed_opaque_existential_1(a3, v36);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  uint64_t v20 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v21 = (v20 + 64) & ~v20;
  unint64_t v22 = (v10 + v21 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v23 = (v22 + 23) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v24 = swift_allocObject(&unk_417748, v23 + 8, v20 | 7);
  uint64_t v25 = v33;
  *(void *)(v24 + ++*(void *)(v0 + 16) = v13;
  *(void *)(v24 + 24) = v25;
  *(void *)(v24 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v16;
  *(_BYTE *)(v24 + 40) = v18;
  *(_BYTE *)(v24 + 41) = HIBYTE(v18) & 1;
  uint64_t v26 = v38;
  *(void *)(v24 + 48) = v37;
  *(void *)(v24 + 56) = v26;
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v24 + v21, v11, v8);
  uint64_t v27 = (void *)(v24 + v22);
  uint64_t v28 = v39;
  *uint64_t v27 = v39;
  v27[1] = &protocol witness table for INStartVideoCallIntent;
  *(void *)(v24 + v23) = v40;
  uint64_t v29 = v34;
  uint64_t v30 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v34 + 8);
  swift_retain();
  swift_retain();
  id v31 = v28;
  v30( _s27PhoneCallFlowDelegatePlugin26EmergencyContactResolutionC05fetchF8Contacts13sirikitIntent6locale14medicalIDStore_yAA018INPersonContainingL0_p_10Foundation6LocaleVAA0fG9Providing_pys6ResultOySaySo0P0CGs5Error_pGctFZySaySo012_HKEmergencyG0CGSg_sAR_pSgtcfU_TA_0,  v24,  v36,  v29);
  swift_release(v24);
  return swift_release(v13);
}

{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int16 v17;
  __int16 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  void (*v30)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  id v31;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v39 = a1;
  uint64_t v40 = a6;
  uint64_t v37 = a4;
  uint64_t v38 = a5;
  uint64_t v8 = type metadata accessor for Locale(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static Signpost.begin(_:)();
  uint64_t v13 = v12;
  uint64_t v33 = v14;
  uint64_t v16 = v15;
  __int16 v18 = v17;
  uint64_t v19 = a3[4];
  uint64_t v36 = a3[3];
  uint64_t v34 = v19;
  uint64_t v35 = __swift_project_boxed_opaque_existential_1(a3, v36);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  uint64_t v20 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v21 = (v20 + 64) & ~v20;
  unint64_t v22 = (v10 + v21 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v23 = (v22 + 23) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v24 = swift_allocObject(&unk_417658, v23 + 8, v20 | 7);
  uint64_t v25 = v33;
  *(void *)(v24 + ++*(void *)(v0 + 16) = v13;
  *(void *)(v24 + 24) = v25;
  *(void *)(v24 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v16;
  *(_BYTE *)(v24 + 40) = v18;
  *(_BYTE *)(v24 + 41) = HIBYTE(v18) & 1;
  uint64_t v26 = v38;
  *(void *)(v24 + 48) = v37;
  *(void *)(v24 + 56) = v26;
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v24 + v21, v11, v8);
  uint64_t v27 = (void *)(v24 + v22);
  uint64_t v28 = v39;
  *uint64_t v27 = v39;
  v27[1] = &protocol witness table for INStartAudioCallIntent;
  *(void *)(v24 + v23) = v40;
  uint64_t v29 = v34;
  uint64_t v30 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v34 + 8);
  swift_retain();
  swift_retain();
  id v31 = v28;
  v30( _s27PhoneCallFlowDelegatePlugin26EmergencyContactResolutionC05fetchF8Contacts13sirikitIntent6locale14medicalIDStore_yAA018INPersonContainingL0_p_10Foundation6LocaleVAA0fG9Providing_pys6ResultOySaySo0P0CGs5Error_pGctFZySaySo012_HKEmergencyG0CGSg_sAR_pSgtcfU_TA_0,  v24,  v36,  v29);
  swift_release(v24);
  return swift_release(v13);
}

{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int16 v17;
  __int16 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  void (*v30)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  id v31;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v39 = a1;
  uint64_t v40 = a6;
  uint64_t v37 = a4;
  uint64_t v38 = a5;
  uint64_t v8 = type metadata accessor for Locale(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static Signpost.begin(_:)();
  uint64_t v13 = v12;
  uint64_t v33 = v14;
  uint64_t v16 = v15;
  __int16 v18 = v17;
  uint64_t v19 = a3[4];
  uint64_t v36 = a3[3];
  uint64_t v34 = v19;
  uint64_t v35 = __swift_project_boxed_opaque_existential_1(a3, v36);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  uint64_t v20 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v21 = (v20 + 64) & ~v20;
  unint64_t v22 = (v10 + v21 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v23 = (v22 + 23) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v24 = swift_allocObject(&unk_417568, v23 + 8, v20 | 7);
  uint64_t v25 = v33;
  *(void *)(v24 + ++*(void *)(v0 + 16) = v13;
  *(void *)(v24 + 24) = v25;
  *(void *)(v24 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v16;
  *(_BYTE *)(v24 + 40) = v18;
  *(_BYTE *)(v24 + 41) = HIBYTE(v18) & 1;
  uint64_t v26 = v38;
  *(void *)(v24 + 48) = v37;
  *(void *)(v24 + 56) = v26;
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v24 + v21, v11, v8);
  uint64_t v27 = (void *)(v24 + v22);
  uint64_t v28 = v39;
  *uint64_t v27 = v39;
  v27[1] = &protocol witness table for INStartCallIntent;
  *(void *)(v24 + v23) = v40;
  uint64_t v29 = v34;
  uint64_t v30 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v34 + 8);
  swift_retain();
  swift_retain();
  id v31 = v28;
  v30( _s27PhoneCallFlowDelegatePlugin26EmergencyContactResolutionC05fetchF8Contacts13sirikitIntent6locale14medicalIDStore_yAA018INPersonContainingL0_p_10Foundation6LocaleVAA0fG9Providing_pys6ResultOySaySo0P0CGs5Error_pGctFZySaySo012_HKEmergencyG0CGSg_sAR_pSgtcfU_TA_0,  v24,  v36,  v29);
  swift_release(v24);
  return swift_release(v13);
}

void specialized closure #1 in SlotResolver.resolveSlot(skIntent:nlIntent:)( uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
}

{
  specialized closure #1 in SlotResolver.resolveSlot(skIntent:nlIntent:)( a1,  *a2,  a3,  a4,  (uint64_t)&unk_417590,  (uint64_t)&unk_4175B8,  (uint64_t)_s27PhoneCallFlowDelegatePlugin12SlotResolverPAAE07resolveF08skIntent02nlJ00F4TypeQz0jL0Qz_AA0aB8NLIntent_ptYaKFyScCyAHs5Error_pGXEfU_ys6ResultOyAhA0fgN0OGYucAMcfu_yARYucfu0_AA020SiriInferenceContactfG0CySo07INStartbJ0CG_TG5TA,  (uint64_t)_ss6ResultOySaySo8INPersonCG27PhoneCallFlowDelegatePlugin17SlotResolverErrorOGIegn_AIIegg_TRTA_0);
}

{
  specialized closure #1 in SlotResolver.resolveSlot(skIntent:nlIntent:)( a1,  *a2,  a3,  a4,  (uint64_t)&unk_4174A0,  (uint64_t)&unk_4174C8,  (uint64_t)_s27PhoneCallFlowDelegatePlugin12SlotResolverPAAE07resolveF08skIntent02nlJ00F4TypeQz0jL0Qz_AA0aB8NLIntent_ptYaKFyScCyAHs5Error_pGXEfU_ys6ResultOyAhA0fgN0OGYucAMcfu_yARYucfu0_AA020SiriInferenceContactfG0CySo07INStartbJ0CG_TG5TA,  (uint64_t)_ss6ResultOySaySo8INPersonCG27PhoneCallFlowDelegatePlugin17SlotResolverErrorOGIegn_AIIegg_TRTA_0);
}

uint64_t _s27PhoneCallFlowDelegatePlugin12SlotResolverPAAE07resolveF08skIntent02nlJ00F4TypeQz0jL0Qz_AA0aB8NLIntent_ptYaKFyScCyAHs5Error_pGXEfU_ys6ResultOyAhA0fgN0OGYucAMcfu_yARYucfu0_AA020SiriInferenceContactfG0CySo012INStartVideobJ0CG_TG5Tm( uint64_t a1)
{
  return _s27PhoneCallFlowDelegatePlugin12SlotResolverPAAE07resolveF08skIntent02nlJ00F4TypeQz0jL0Qz_AA0aB8NLIntent_ptYaKFyScCyAHs5Error_pGXEfU_ys6ResultOyAhA0fgN0OGYucAMcfu_yARYucfu0_AA020SiriInferenceContactfG0CySo012INStartVideobJ0CG_Tg5Tm( *(void *)a1,  *(void *)(a1 + 8),  *(unsigned __int8 *)(a1 + 16) | (unsigned __int16)(*(unsigned __int8 *)(a1 + 17) << 8));
}

void partial apply for specialized closure #1 in SlotResolver.resolveSlot(skIntent:nlIntent:)(uint64_t a1)
{
}

{
  uint64_t v1;
  specialized closure #1 in SlotResolver.resolveSlot(skIntent:nlIntent:)( a1,  *(uint64_t **)(v1 + 16),  *(void *)(v1 + 24),  *(void *)(v1 + 32));
}

{
  uint64_t v1;
  specialized closure #1 in SlotResolver.resolveSlot(skIntent:nlIntent:)( a1,  *(uint64_t **)(v1 + 16),  *(void *)(v1 + 24),  *(void *)(v1 + 32));
}

uint64_t sub_2D9E9C()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t partial apply for specialized closure #1 in SlotResolver.resolveSlot(skIntent:nlIntent:)(uint64_t a1)
{
  return specialized closure #1 in SlotResolver.resolveSlot(skIntent:nlIntent:)(a1, v1[2], v1[3], v1[4]);
}

{
  uint64_t *v1;
  return specialized closure #1 in SlotResolver.resolveSlot(skIntent:nlIntent:)(a1, v1[2], v1[3], v1[4]);
}

{
  uint64_t *v1;
  return specialized closure #1 in SlotResolver.resolveSlot(skIntent:nlIntent:)(a1, v1[2], v1[3], v1[4]);
}

uint64_t objectdestroy_22Tm_0()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<[INPerson], Error>);
  OUTLINED_FUNCTION_21_58(*(void *)(v0 - 8));
  return OUTLINED_FUNCTION_54();
}

uint64_t _s27PhoneCallFlowDelegatePlugin12SlotResolverPAAE07resolveF08skIntent02nlJ00F4TypeQz0jL0Qz_AA0aB8NLIntent_ptYaKFyScCyAHs5Error_pGXEfU_ys6ResultOyAhA0fgN0OGYucAMcfu_yARYucfu0_AA020SiriInferenceContactfG0CySo07INStartbJ0CG_TG5TATm( uint64_t a1)
{
  return _s27PhoneCallFlowDelegatePlugin12SlotResolverPAAE07resolveF08skIntent02nlJ00F4TypeQz0jL0Qz_AA0aB8NLIntent_ptYaKFyScCyAHs5Error_pGXEfU_ys6ResultOyAhA0fgN0OGYucAMcfu_yARYucfu0_AA020SiriInferenceContactfG0CySo012INStartVideobJ0CG_TG5Tm(a1);
}

uint64_t objectdestroy_40Tm()
{
  uint64_t v1 = OUTLINED_FUNCTION_94_4();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 64) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  swift_release(*(void *)(v0 + 16));
  swift_release(*(void *)(v0 + 56));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return swift_deallocObject(v0, ((v6 + 23) & 0xFFFFFFFFFFFFFFF8LL) + 8, v5);
}

uint64_t OUTLINED_FUNCTION_3_124()
{
  return ((uint64_t (*)(void))withCheckedThrowingContinuation<A>(isolation:function:_:))();
}

uint64_t OUTLINED_FUNCTION_4_108()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_11_92@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  *a1 = v3;
  a1[1] = a2;
  return v2;
}

__n128 OUTLINED_FUNCTION_15_80(unint64_t a1)
{
  v2[3].n128_u64[0] = a1;
  __n128 result = v2[2];
  *(void *)(a1 + ++*(void *)(v0 + 16) = v1;
  *(__n128 *)(a1 + 24) = result;
  return result;
}

__n128 OUTLINED_FUNCTION_16_62(uint64_t a1)
{
  *(void *)(v2 + 48) = a1;
  __n128 result = *(__n128 *)(v2 + 24);
  *(void *)(a1 + ++*(void *)(v0 + 16) = v1;
  *(__n128 *)(a1 + 24) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_17_69(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return SlotResolver.resolve(skIntent:nlIntent:)(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_18_69()
{
  return swift_task_alloc(48LL);
}

uint64_t OUTLINED_FUNCTION_19_69()
{
  return swift_task_alloc(48LL);
}

uint64_t OUTLINED_FUNCTION_22_63(void *a1)
{
  *a1 = v2;
  a1[1] = v1;
  return v3;
}

uint64_t OUTLINED_FUNCTION_26_61()
{
  return swift_task_dealloc(*(void *)(v0 + 48));
}

  ;
}

uint64_t OUTLINED_FUNCTION_29_51()
{
  return *(void *)(v0 + 16);
}

uint64_t OUTLINED_FUNCTION_30_51(uint64_t result)
{
  *(void *)(v1 + 56) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_31_48@<X0>(uint64_t a1@<X8>)
{
  *uint64_t v3 = v1;
  v3[1] = a1;
  return v2;
}

  ;
}

id OUTLINED_FUNCTION_33_58()
{
  return v0;
}

uint64_t ContactDisambiguationPromptResponseParser.init(personsToDisambiguate:referenceResolver:sharedGlobals:)@<X0>( uint64_t a1@<X0>, __int128 *a2@<X1>, __int128 *a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  uint64_t v5 = (uint64_t)(a4 + 6);
  outlined init with take of AppSelectionSignalComponent(a2, (uint64_t)(a4 + 1));
  return outlined init with take of AppSelectionSignalComponent(a3, v5);
}

void *ContactDisambiguationPromptResponseParser.parseDisambiguationResponse(from:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Parse.DirectInvocation(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  unint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for Parse(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  uint64_t v10 = (uint64_t *)((char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v36 = v1;
  uint64_t v11 = (void *)(v1 + 48);
  outlined init with copy of SharedGlobalsProviding(v1 + 48, (uint64_t)v39);
  unsigned __int8 v12 = ContactPromptResponseParser.parseResponse(from:)(a1);
  outlined destroy of ContactPromptResponseParser((uint64_t)v39);
  if (v12 != 8) {
    return (void *)v12;
  }
  (*(void (**)(void *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  int v13 = (*(uint64_t (**)(void *, uint64_t))(v8 + 88))(v10, v7);
  if (v13 == enum case for Parse.NLv3IntentOnly(_:))
  {
    OUTLINED_FUNCTION_3_67(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
    goto LABEL_10;
  }

  int v15 = v13;
  if (v13 != enum case for Parse.directInvocation(_:))
  {
    if (v13 == enum case for Parse.NLv4IntentOnly(_:))
    {
      OUTLINED_FUNCTION_3_67(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 96));
      swift_unknownObjectRelease(*v10);
    }

    else
    {
      int v18 = enum case for Parse.uso(_:);
      OUTLINED_FUNCTION_3_67(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
      if (v15 != v18) {
        goto LABEL_13;
      }
    }

uint64_t specialized PhoneCallNLIntent.isEmergencyServicesCall()()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 8);
  uint64_t v3 = *(void *)(v2 + 16);
  if (!v3)
  {
LABEL_8:
    int v9 = 0;
    uint64_t v10 = 0LL;
    int v11 = *(unsigned __int8 *)(v1 + 75);
    if (v11 != 5) {
      goto LABEL_11;
    }
    return v10;
  }

  uint64_t v4 = v2 + 32;
  swift_bridgeObjectRetain_n(*(void *)(v0 + 8), 2LL);
  while (1)
  {
    outlined init with copy of SharedGlobalsProviding(v4, (uint64_t)v23);
    uint64_t v5 = v24;
    uint64_t v6 = v25;
    __swift_project_boxed_opaque_existential_1(v23, v24);
    uint64_t v7 = SiriPhoneContact.getEmergencyType()(v5, v6);
    if (v8 != 3) {
      break;
    }
LABEL_6:
    __swift_destroy_boxed_opaque_existential_1(v23);
    v4 += 40LL;
    if (!--v3)
    {
      swift_bridgeObjectRelease_n(v2, 2LL);
      goto LABEL_8;
    }
  }

  if (v8 != 1)
  {
    outlined consume of PhoneCallEmergencyType?(v7, v8);
    goto LABEL_6;
  }

  int v9 = 1;
  outlined consume of PhoneCallEmergencyType?(v7, 1uLL);
  __swift_destroy_boxed_opaque_existential_1(v23);
  swift_bridgeObjectRelease_n(v2, 2LL);
  int v11 = *(unsigned __int8 *)(v1 + 75);
  if (v11 != 5)
  {
LABEL_11:
    uint64_t v12 = PhoneCallDestinationType.rawValue.getter(v11);
    if (v12 == 0x636E656772656D65LL && v13 == 0xE900000000000079LL)
    {
      swift_bridgeObjectRelease();
    }

    else
    {
      int v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v13, 0x636E656772656D65LL, 0xE900000000000079LL, 0LL);
      swift_bridgeObjectRelease();
      uint64_t v10 = 0LL;
      if (((v9 | v15) & 1) == 0) {
        return v10;
      }
    }
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v16 = type metadata accessor for Logger(0LL);
  uint64_t v17 = __swift_project_value_buffer(v16, (uint64_t)static Logger.siriPhone);
  int v18 = (os_log_s *)Logger.logObject.getter(v17);
  os_log_type_t v20 = static os_log_type_t.debug.getter(v18, v19);
  if (os_log_type_enabled(v18, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v21 = 0;
    _os_log_impl(&dword_0, v18, v20, "#PhoneCallNLIntent EmergencyServices intent", v21, 2u);
    swift_slowDealloc(v21, -1LL, -1LL);
  }

  return 1LL;
}

void ContactDisambiguationPromptResponse.debugDescription.getter(uint64_t a1, char a2)
{
  __asm { BR              X10 }

void protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ContactDisambiguationPromptResponse()
{
}

void ContactDisambiguationPromptResponseParser.sharedGlobals.getter(uint64_t a1@<X8>)
{
}

Class ContactDisambiguationPromptResponseParser.parseDisambiguationResponse(from:)(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)((char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin();
  uint64_t v5 = (char *)&v13 - v4;
  static CommonDirectAction.from(_:)(a1, (uint64_t *)((char *)&v13 - v4));
  uint64_t v6 = type metadata accessor for CommonDirectAction(0LL);
  outlined init with copy of Result<TemplatingResult, Error>( (uint64_t)v5,  (uint64_t)v3,  &demangling cache variable for type metadata for CommonDirectAction?);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v3, v6);
  if (!EnumCaseMultiPayload)
  {
    uint64_t v10 = *v3;
    int v9 = (void *)v3[1];
    type metadata accessor for INPerson();
    v11._uint64_t countAndFlagsBits = v10;
    v11._object = v9;
    Class isa = INPerson.init(contactIdentifier:)(v11).super.isa;
    goto LABEL_10;
  }

  if (EnumCaseMultiPayload == 2)
  {
    Class isa = (Class)*v3;
    goto LABEL_10;
  }

  if (EnumCaseMultiPayload != 1)
  {
    outlined destroy of MainFlow((uint64_t)v3, type metadata accessor for CommonDirectAction);
LABEL_9:
    Class isa = 0LL;
    goto LABEL_10;
  }

  Class isa = (Class)*v3;
LABEL_10:
  outlined destroy of UUID?((uint64_t)v5, &demangling cache variable for type metadata for CommonDirectAction?);
  return isa;
}

uint64_t ContactDisambiguationPromptResponseParser.parseDisambiguationResponse(from:parse:)(void *a1)
{
  uint64_t v2 = v1;
  type metadata accessor for PhoneCallNLv3Intent(0LL);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v50[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  outlined init with copy of SharedGlobalsProviding((uint64_t)a1, (uint64_t)__dst);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for PhoneCallNLIntent);
  if ((swift_dynamicCast(v5, __dst, v6) & 1) != 0)
  {
    outlined destroy of MainFlow((uint64_t)v5, type metadata accessor for PhoneCallNLv3Intent);
    uint64_t v7 = a1[3];
    uint64_t v8 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v7);
    (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v7, v8);
    specialized Collection.first.getter(__dst);
    swift_bridgeObjectRelease();
    uint64_t v9 = __dst[3];
    if (__dst[3])
    {
      uint64_t v10 = __dst[4];
      __swift_project_boxed_opaque_existential_1(__dst, __dst[3]);
      uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 32))(v9, v10);
      uint64_t v13 = v12;
      __swift_destroy_boxed_opaque_existential_1(__dst);
      if (v13)
      {
        type metadata accessor for INPerson();
        static INPerson.from(base64ContactId:)(v11, v13);
        id v15 = v14;
        swift_bridgeObjectRelease();
        if (v15) {
          return (uint64_t)v15;
        }
      }
    }

    else
    {
      outlined destroy of UUID?((uint64_t)__dst, &demangling cache variable for type metadata for SiriPhoneContact?);
    }
  }

  outlined init with copy of SharedGlobalsProviding((uint64_t)a1, (uint64_t)v51);
  if (!swift_dynamicCast(v54, v51, v6))
  {
    memset(v54, 0, sizeof(v54));
    outlined destroy of UUID?((uint64_t)v54, &demangling cache variable for type metadata for PhoneCallNLv4Intent?);
    return 0LL;
  }

  memcpy(__dst, v54, 0x68uLL);
  outlined init with copy of SharedGlobalsProviding((uint64_t)(v2 + 1), (uint64_t)v54);
  id v15 = DisambiguationReferenceResolver.resolveDisambiguationReference(_:)();
  outlined destroy of DisambiguationReferenceResolver((uint64_t)v54);
  if (v15)
  {
    outlined destroy of PhoneCallNLv4Intent(__dst);
    return (uint64_t)v15;
  }

  if ((specialized PhoneCallNLIntent.isEmergencyServicesCall()() & 1) == 0)
  {
    if (*(void *)(__dst[1] + 16LL) == 1LL)
    {
      specialized Collection.first.getter(v54);
      if (v54[3])
      {
        __swift_project_boxed_opaque_existential_1(v54, v54[3]);
        Class isa = SiriPhoneContact.toINPerson()().super.isa;
        uint64_t v26 = __swift_destroy_boxed_opaque_existential_1(v54);
        INPerson.isUnnamedHandleLabel.getter(v26);
        char v28 = v27;

        if ((v28 & 1) != 0)
        {
          if (one-time initialization token for siriPhone != -1) {
            swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
          }
          uint64_t v29 = type metadata accessor for Logger(0LL);
          uint64_t v30 = __swift_project_value_buffer(v29, (uint64_t)static Logger.siriPhone);
          uint64_t v31 = (os_log_s *)Logger.logObject.getter(v30);
          os_log_type_t v33 = static os_log_type_t.debug.getter(v31, v32);
          if (os_log_type_enabled(v31, v33))
          {
            uint64_t v34 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
            *(_WORD *)uint64_t v34 = 0;
            _os_log_impl( &dword_0,  v31,  v33,  "#ContactDisambiguationPromptResponseParser user called an unknown label",  v34,  2u);
            swift_slowDealloc(v34, -1LL, -1LL);
          }

          uint64_t v35 = v2 + 6;
          uint64_t v37 = v2[9];
          uint64_t v36 = v2[10];
          __swift_project_boxed_opaque_existential_1(v35, v37);
          uint64_t v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 72))(v37, v36);
          (*(void (**)(uint64_t *__return_ptr))(*(void *)v38 + 240LL))(v54);
          swift_release(v38);
          if (v54[4] == 1)
          {
            outlined destroy of UUID?( (uint64_t)v54,  (uint64_t *)&demangling cache variable for type metadata for TransformationResult?);
            memset(v52, 0, sizeof(v52));
            uint64_t v53 = 0LL;
          }

          else
          {
            outlined init with copy of Result<TemplatingResult, Error>( (uint64_t)&v54[1],  (uint64_t)v52,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
            outlined destroy of TransformationResult((uint64_t)v54);
          }

          outlined init with copy of Result<TemplatingResult, Error>( (uint64_t)v52,  (uint64_t)v50,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
          if (v50[3])
          {
            if ((swift_dynamicCast(v51, v50, v6) & 1) != 0)
            {
              if (v51[0])
              {
                memcpy(v54, v51, sizeof(v54));
                Swift::Bool v41 = PhoneCallNLv4Intent.isCallLabelOnly()();
                outlined init with copy of PhoneCallNLv4Intent(v54, (uint64_t)v51);
                if (v41)
                {
                  Swift::Bool v42 = PhoneCallNLv4Intent.isCallLabelOnly()();
                  uint64_t v43 = outlined destroy of PhoneCallNLv4Intent(v51);
                  if (v42)
                  {
                    uint64_t v44 = (os_log_s *)Logger.logObject.getter(v43);
                    os_log_type_t v46 = static os_log_type_t.debug.getter(v44, v45);
                    if (os_log_type_enabled(v44, v46))
                    {
                      uint64_t v47 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
                      *(_WORD *)uint64_t v47 = 0;
                      _os_log_impl( &dword_0,  v44,  v46,  "#ContactDisambiguationPromptResponseParser user may actually want to call the handle specified o n the meCard (if existing). Skipping the current disambiguation flow..",  v47,  2u);
                      swift_slowDealloc(v47, -1LL, -1LL);
                    }

                    outlined destroy of PhoneCallNLv4Intent(v54);
                    outlined destroy of UUID?( (uint64_t)v52,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
                    outlined destroy of PhoneCallNLv4Intent(__dst);
                    return 7LL;
                  }
                }

                else
                {
                  outlined destroy of PhoneCallNLv4Intent(v51);
                }

                outlined destroy of PhoneCallNLv4Intent(v54);
                outlined destroy of UUID?( (uint64_t)v52,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
                outlined destroy of PhoneCallNLv4Intent(__dst);
                return 0LL;
              }
            }

            else
            {
              memset(v51, 0, 104);
            }
          }

          else
          {
            outlined destroy of UUID?((uint64_t)v50, &demangling cache variable for type metadata for PhoneCallNLIntent?);
            memset(v51, 0, 104);
          }

          outlined destroy of UUID?((uint64_t)v52, &demangling cache variable for type metadata for PhoneCallNLIntent?);
          outlined destroy of PhoneCallNLv4Intent(__dst);
          outlined destroy of UUID?((uint64_t)v51, &demangling cache variable for type metadata for PhoneCallNLv4Intent?);
          return 0LL;
        }
      }

      else
      {
        outlined destroy of UUID?((uint64_t)v54, &demangling cache variable for type metadata for SiriPhoneContact?);
      }
    }

    uint64_t v39 = swift_bridgeObjectRetain();
    char v40 = Array<A>.hasQueryableContactInformation.getter(v39);
    swift_bridgeObjectRelease();
    outlined destroy of PhoneCallNLv4Intent(__dst);
    if ((v40 & 1) != 0) {
      return 1LL;
    }
    else {
      return 2LL;
    }
  }

  uint64_t v17 = *v2;
  uint64_t v18 = *(void *)((char *)&dword_10 + (v17 & 0xFFFFFFFFFFFFF8LL));
  swift_bridgeObjectRetain_n(v17, 2LL);
  for (; v18; uint64_t v18 = _CocoaArrayWrapper.endIndex.getter(v48))
  {
    uint64_t v19 = 4LL;
    while (1)
    {
      id v20 = (v17 & 0xC000000000000001LL) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v19 - 4, v17)
          : *(id *)(v17 + 8 * v19);
      id v15 = v20;
      uint64_t v21 = v19 - 3;
      if (__OFADD__(v19 - 4, 1LL)) {
        break;
      }
      id v22 = [v20 personHandle];
      if (v22)
      {
        uint64_t v23 = v22;
        uint64_t v24 = (char *)[v22 emergencyType];

        if (v24 == (_BYTE *)&dword_0 + 1)
        {
          swift_bridgeObjectRelease_n(v17, 2LL);
          outlined destroy of PhoneCallNLv4Intent(__dst);
          return (uint64_t)v15;
        }
      }

      ++v19;
      if (v21 == v18) {
        goto LABEL_24;
      }
    }

    __break(1u);
LABEL_55:
    if (v17 < 0) {
      uint64_t v48 = v17;
    }
    else {
      uint64_t v48 = v17 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain_n(v17, 2LL);
  }

uint64_t initializeBufferWithCopyOfBuffer for ContactDisambiguationPromptResponse(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unsigned __int8 v4 = *(_BYTE *)(a2 + 8);
  outlined copy of ContactDisambiguationPromptResponse(*(id *)a2, v4);
  *(void *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

void destroy for ContactDisambiguationPromptResponse(uint64_t a1)
{
}

uint64_t assignWithCopy for ContactDisambiguationPromptResponse(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unsigned __int8 v4 = *(_BYTE *)(a2 + 8);
  outlined copy of ContactDisambiguationPromptResponse(*(id *)a2, v4);
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = v3;
  unsigned __int8 v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  outlined consume of ContactDisambiguationPromptResponse(v5, v6);
  return a1;
}

uint64_t assignWithTake for ContactDisambiguationPromptResponse(uint64_t a1, uint64_t a2)
{
  char v3 = *(_BYTE *)(a2 + 8);
  unsigned __int8 v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  unsigned __int8 v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  outlined consume of ContactDisambiguationPromptResponse(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContactDisambiguationPromptResponse(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFC && *(_BYTE *)(a1 + 9))
    {
      int v2 = *(_DWORD *)a1 + 251;
    }

    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 4) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }

  else
  {
    int v2 = -1;
  }

  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ContactDisambiguationPromptResponse( uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_BYTE *)(result + 8) = 0;
    *(void *)__n128 result = a2 - 252;
    if (a3 >= 0xFC) {
      *(_BYTE *)(result + 9) = 1;
    }
  }

  else
  {
    if (a3 >= 0xFC) {
      *(_BYTE *)(result + 9) = 0;
    }
    if (a2) {
      *(_BYTE *)(result + 8) = -(char)a2;
    }
  }

  return result;
}

uint64_t getEnumTag for ContactDisambiguationPromptResponse(uint64_t a1)
{
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t destructiveInjectEnumTag for ContactDisambiguationPromptResponse(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(void *)__n128 result = a2 - 4;
    LOBYTE(a__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 4;
  }

  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ContactDisambiguationPromptResponse()
{
  return &type metadata for ContactDisambiguationPromptResponse;
}

uint64_t destroy for ContactDisambiguationPromptResponseParser(uint64_t a1)
{
  int v2 = (void *)(a1 + 48);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((void *)(a1 + 8));
  return __swift_destroy_boxed_opaque_existential_1(v2);
}

uint64_t initializeWithCopy for ContactDisambiguationPromptResponseParser(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  unsigned __int8 v5 = a2 + 1;
  __int128 v6 = *((_OWORD *)a2 + 2);
  *(_OWORD *)(a1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v6 - 8);
  swift_bridgeObjectRetain(v4);
  v8(a1 + 8, v5, v7);
  __int128 v9 = *(_OWORD *)(a2 + 9);
  *(_OWORD *)(a1 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 48, (uint64_t)(a2 + 6));
  return a1;
}

void *assignWithCopy for ContactDisambiguationPromptResponseParser(void *a1, void *a2)
{
  uint64_t v4 = a2 + 6;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 1, a2 + 1);
  __swift_assign_boxed_opaque_existential_1(a1 + 6, v4);
  return a1;
}

uint64_t assignWithTake for ContactDisambiguationPromptResponseParser(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((void *)(a1 + 8));
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  __swift_destroy_boxed_opaque_existential_1((void *)(a1 + 48));
  __int128 v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContactDisambiguationPromptResponseParser(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 88))
    {
      LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }

    else
    {
      uint64_t v2 = *a1;
    }
  }

  else
  {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 2) = -1;
  }

  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ContactDisambiguationPromptResponseParser( uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 88) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for ContactDisambiguationPromptResponseParser()
{
  return &type metadata for ContactDisambiguationPromptResponseParser;
}

uint64_t outlined destroy of DisambiguationReferenceResolver(uint64_t a1)
{
  return a1;
}

void OUTLINED_FUNCTION_3_125()
{
}

id OUTLINED_FUNCTION_7_114()
{
  return outlined copy of ContactDisambiguationPromptResponse?(v0, v1);
}

void OUTLINED_FUNCTION_8_91(uint64_t a1@<X8>)
{
}

void PhoneCallControlAction.isMicrophoneAction.getter(unsigned __int8 a1)
{
  uint64_t v1 = PhoneCallControlAction.rawValue.getter(a1);
  BOOL v3 = v1 == 0x7263694D6574756DLL && v2 == 0xEE00656E6F68706FLL;
  if (v3) {
    goto LABEL_9;
  }
  uint64_t v4 = v1;
  uint64_t v5 = v2;
  char v6 = OUTLINED_FUNCTION_49_2(v1, v2, 0x7263694D6574756DLL, 0xEE00656E6F68706FLL);
  OUTLINED_FUNCTION_39();
  if ((v6 & 1) == 0)
  {
    uint64_t v7 = "unmuteMicrophone";
    if (v4 != 0xD000000000000010LL || (OUTLINED_FUNCTION_8_92((uint64_t)"unmuteMicrophone"), !v3))
    {
      OUTLINED_FUNCTION_49_2(v4, v5, 0xD000000000000010LL, (unint64_t)(v7 - 32) | 0x8000000000000000LL);
      OUTLINED_FUNCTION_39();
      goto LABEL_10;
    }

void PhoneCallControlAction.isHoldAction.getter(unsigned __int8 a1)
{
  if (PhoneCallControlAction.rawValue.getter(a1) == 0x6F48656C62616E65LL && v3 == 0xEA0000000000646CLL) {
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_17_70();
  char v8 = OUTLINED_FUNCTION_49_2(v6, v7, v5 & 0xFFFFFFFFFFFFLL | 0x6F48000000000000LL, 0xEA0000000000646CLL);
  OUTLINED_FUNCTION_39();
  if ((v8 & 1) == 0)
  {
    if (v2 != 0x48656C6261736964LL || v1 != 0xEB00000000646C6FLL)
    {
      uint64_t v10 = OUTLINED_FUNCTION_18_70();
      OUTLINED_FUNCTION_49_2(v10, v12, v11 & 0xFFFFFFFFFFFFLL | 0x4865000000000000LL, 0xEB00000000646C6FLL);
      OUTLINED_FUNCTION_39();
      goto LABEL_12;
    }

uint64_t PhoneCallControlAction.description.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_2DB9DC + 4 * byte_33EFE0[a1]))( 0xD000000000000012LL,  0x8000000000346800LL);
}

uint64_t sub_2DB9DC()
{
  return v0 + 3;
}

uint64_t PhoneCallControlNLIntent.Target.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)j__OUTLINED_FUNCTION_16_63_0 + 4 * byte_33EFEB[a1]))( 0x6172656D6163LL,  0xE600000000000000LL);
}

uint64_t sub_2DBA7C()
{
  return 0x656D756C6F76LL;
}

void PhoneCallControlAction.isCameraAction.getter(unsigned __int8 a1)
{
  if (PhoneCallControlAction.rawValue.getter(a1) == 0x6143656C62616E65LL && v3 == 0xEC0000006172656DLL) {
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_17_70();
  char v8 = OUTLINED_FUNCTION_49_2(v6, v7, v5 & 0xFFFFFFFFFFFFLL | 0x6143000000000000LL, 0xEC0000006172656DLL);
  OUTLINED_FUNCTION_39();
  if ((v8 & 1) == 0)
  {
    if (v2 != 0x43656C6261736964LL || v1 != 0xED00006172656D61LL)
    {
      uint64_t v10 = OUTLINED_FUNCTION_18_70();
      OUTLINED_FUNCTION_49_2(v10, v12, v11 & 0xFFFFFFFFFFFFLL | 0x4365000000000000LL, 0xED00006172656D61LL);
      OUTLINED_FUNCTION_39();
      goto LABEL_12;
    }

void PhoneCallControlAction.isSpeakerphoneAction.getter(unsigned __int8 a1)
{
  uint64_t v1 = PhoneCallControlAction.rawValue.getter(a1);
  uint64_t v3 = v2;
  uint64_t v4 = "turnOnSpeakerPhone";
  if (v1 != 0xD000000000000012LL || (OUTLINED_FUNCTION_8_92((uint64_t)"turnOnSpeakerPhone"), !v5))
  {
    char v6 = OUTLINED_FUNCTION_49_2(v1, v3, 0xD000000000000012LL, (unint64_t)(v4 - 32) | 0x8000000000000000LL);
    OUTLINED_FUNCTION_39();
    if ((v6 & 1) != 0) {
      goto LABEL_6;
    }
    uint64_t v7 = 0xD000000000000013LL;
    char v8 = "turnOffSpeakerPhone";
    if (v1 != 0xD000000000000013LL || (OUTLINED_FUNCTION_8_92((uint64_t)"turnOffSpeakerPhone"), !v5))
    {
      OUTLINED_FUNCTION_49_2(v1, v3, v7, (unint64_t)(v8 - 32) | 0x8000000000000000LL);
      OUTLINED_FUNCTION_39();
      goto LABEL_6;
    }
  }

  swift_bridgeObjectRelease();
LABEL_6:
  OUTLINED_FUNCTION_6();
}

void PhoneCallControlAction.isSwitchToFaceTimeAction.getter(unsigned __int8 a1)
{
  uint64_t v1 = PhoneCallControlAction.rawValue.getter(a1);
  uint64_t v3 = v2;
  uint64_t v4 = "switchToFaceTime";
  if (v1 != 0xD000000000000010LL || (OUTLINED_FUNCTION_8_92((uint64_t)"switchToFaceTime"), !v5))
  {
    char v6 = OUTLINED_FUNCTION_49_2(v1, v3, 0xD000000000000010LL, (unint64_t)(v4 - 32) | 0x8000000000000000LL);
    OUTLINED_FUNCTION_39();
    if ((v6 & 1) != 0) {
      goto LABEL_6;
    }
    uint64_t v7 = 0xD000000000000015LL;
    char v8 = "switchToFaceTimeAudio";
    if (v1 != 0xD000000000000015LL || (OUTLINED_FUNCTION_8_92((uint64_t)"switchToFaceTimeAudio"), !v5))
    {
      OUTLINED_FUNCTION_49_2(v1, v3, v7, (unint64_t)(v8 - 32) | 0x8000000000000000LL);
      OUTLINED_FUNCTION_39();
      goto LABEL_6;
    }
  }

  swift_bridgeObjectRelease();
LABEL_6:
  OUTLINED_FUNCTION_6();
}

_BYTE *PhoneCallControlNLIntent.__allocating_init(verb:target:)(char a1, char a2)
{
  __n128 result = (_BYTE *)swift_allocObject(v2, 19LL, 7LL);
  result[18] = 11;
  result[16] = a1;
  result[17] = a2;
  return result;
}

uint64_t PhoneCallControlAction.toSpeakableString.getter(unsigned __int8 a1)
{
  return swift_bridgeObjectRelease();
}

uint64_t PhoneCallControlNLIntent.target.getter()
{
  return *(unsigned __int8 *)(v0 + 17);
}

void PhoneCallControlNLIntent.action(for:)(uint64_t a1, uint64_t a2)
{
  if (*(_BYTE *)(v2 + 18) == 11)
  {
    static PhoneCallControlAction.from(nlIntent:for:)(v2, a1, a2);
    *(_BYTE *)(v2 + 18) = v3;
  }

void static PhoneCallControlAction.from(nlIntent:for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(unsigned __int8 *)(a1 + 17);
  switch(*(_BYTE *)(a1 + 16))
  {
    case 0:
      __asm { BR              X10 }

      return;
    case 2:
      __asm { BR              X10 }

      return;
    case 3:
      uint64_t v6 = OUTLINED_FUNCTION_12_93();
      SPHCall.isFTVideo.getter(v6, a3);
      if ((v7 & 1) != 0) {
        OUTLINED_FUNCTION_41_2(v6, *(uint64_t (**)(uint64_t, uint64_t))(a3 + 144));
      }
      break;
    case 4:
      uint64_t v5 = OUTLINED_FUNCTION_12_93();
      break;
    default:
      break;
  }

  OUTLINED_FUNCTION_6();
}

uint64_t PhoneCallControlNLIntent.Verb.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)j__OUTLINED_FUNCTION_15_81_0 + 4 * byte_33F00D[a1]))( 0x656C62616E65LL,  0xE600000000000000LL);
}

unint64_t sub_2DBF68()
{
  return OUTLINED_FUNCTION_17_8();
}

void sub_2DBF74()
{
}

uint64_t sub_2DBF94()
{
  return 1684104562LL;
}

PhoneCallFlowDelegatePlugin::PhoneCallControlNLIntent::Verb_optional __swiftcall PhoneCallControlNLIntent.Verb.init(rawValue:)( Swift::String rawValue)
{
  uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._rawValue = &outlined read-only object #0 of PhoneCallControlNLIntent.Verb.init(rawValue:);
  OUTLINED_FUNCTION_33_3(v2, countAndFlagsBits);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_2();
  return result;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance PhoneCallControlNLIntent.Verb()
{
  specialized == infix<A>(_:_:)();
}

void protocol witness for Hashable.hashValue.getter in conformance PhoneCallControlNLIntent.Verb()
{
}

void protocol witness for Hashable.hash(into:) in conformance PhoneCallControlNLIntent.Verb()
{
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallControlNLIntent.Verb( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::PhoneCallControlNLIntent::Verb_optional protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallControlNLIntent.Verb@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::PhoneCallControlNLIntent::Verb_optional *a2@<X8>)
{
  result.int value = PhoneCallControlNLIntent.Verb.init(rawValue:)(*a1).value;
  a2->int value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallControlNLIntent.Verb( uint64_t *a1@<X8>)
{
  *a1 = PhoneCallControlNLIntent.Verb.rawValue.getter(*v1);
  a1[1] = v3;
  OUTLINED_FUNCTION_2();
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneCallControlNLIntent.Verb()
{
  return PhoneCallControlNLIntent.Verb.description.getter(*v0);
}

PhoneCallFlowDelegatePlugin::PhoneCallControlNLIntent::Target_optional __swiftcall PhoneCallControlNLIntent.Target.init(rawValue:)( Swift::String rawValue)
{
  uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._rawValue = &outlined read-only object #0 of PhoneCallControlNLIntent.Target.init(rawValue:);
  OUTLINED_FUNCTION_33_3(v2, countAndFlagsBits);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_2();
  return result;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance PhoneCallControlNLIntent.Target()
{
  specialized == infix<A>(_:_:)();
}

void protocol witness for Hashable.hashValue.getter in conformance PhoneCallControlNLIntent.Target()
{
}

void protocol witness for Hashable.hash(into:) in conformance PhoneCallControlNLIntent.Target()
{
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallControlNLIntent.Target( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::PhoneCallControlNLIntent::Target_optional protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallControlNLIntent.Target@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::PhoneCallControlNLIntent::Target_optional *a2@<X8>)
{
  result.int value = PhoneCallControlNLIntent.Target.init(rawValue:)(*a1).value;
  a2->int value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallControlNLIntent.Target( uint64_t *a1@<X8>)
{
  *a1 = PhoneCallControlNLIntent.Target.rawValue.getter(*v1);
  a1[1] = v3;
  OUTLINED_FUNCTION_2();
}

uint64_t PhoneCallControlAction.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_2DC148 + 4 * byte_33F014[a1]))( 0xD000000000000012LL,  0x8000000000346800LL);
}

uint64_t sub_2DC148()
{
  return v0 + 3;
}

PhoneCallFlowDelegatePlugin::PhoneCallControlAction_optional __swiftcall PhoneCallControlAction.init(rawValue:)( Swift::String rawValue)
{
  uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._rawValue = &outlined read-only object #0 of PhoneCallControlAction.init(rawValue:);
  OUTLINED_FUNCTION_33_3(v2, countAndFlagsBits);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_2();
  return result;
}

_UNKNOWN **static PhoneCallControlAction.allCases.getter()
{
  return &outlined read-only object #0 of static PhoneCallControlAction.allCases.getter;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance PhoneCallControlAction( unsigned __int8 *a1, unsigned __int8 *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance PhoneCallControlAction()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance PhoneCallControlAction(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallControlAction(uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::PhoneCallControlAction_optional protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallControlAction@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::PhoneCallControlAction_optional *a2@<X8>)
{
  result.int value = PhoneCallControlAction.init(rawValue:)(*a1).value;
  a2->int value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallControlAction( uint64_t *a1@<X8>)
{
  *a1 = PhoneCallControlAction.rawValue.getter(*v1);
  a1[1] = v3;
  OUTLINED_FUNCTION_2();
}

void protocol witness for static CaseIterable.allCases.getter in conformance PhoneCallControlAction( void *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static PhoneCallControlAction.allCases.getter;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneCallControlAction()
{
  return PhoneCallControlAction.description.getter(*v0);
}

unint64_t lazy protocol witness table accessor for type PhoneCallControlNLIntent.Verb and conformance PhoneCallControlNLIntent.Verb()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallControlNLIntent.Verb and conformance PhoneCallControlNLIntent.Verb;
  if (!lazy protocol witness table cache variable for type PhoneCallControlNLIntent.Verb and conformance PhoneCallControlNLIntent.Verb)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallControlNLIntent.Verb,  &type metadata for PhoneCallControlNLIntent.Verb);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallControlNLIntent.Verb and conformance PhoneCallControlNLIntent.Verb);
  }

  return result;
}

unint64_t lazy protocol witness table accessor for type PhoneCallControlNLIntent.Target and conformance PhoneCallControlNLIntent.Target()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallControlNLIntent.Target and conformance PhoneCallControlNLIntent.Target;
  if (!lazy protocol witness table cache variable for type PhoneCallControlNLIntent.Target and conformance PhoneCallControlNLIntent.Target)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallControlNLIntent.Target,  &type metadata for PhoneCallControlNLIntent.Target);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallControlNLIntent.Target and conformance PhoneCallControlNLIntent.Target);
  }

  return result;
}

unint64_t lazy protocol witness table accessor for type PhoneCallControlAction and conformance PhoneCallControlAction()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallControlAction and conformance PhoneCallControlAction;
  if (!lazy protocol witness table cache variable for type PhoneCallControlAction and conformance PhoneCallControlAction)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhoneCallControlAction,  &type metadata for PhoneCallControlAction);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallControlAction and conformance PhoneCallControlAction);
  }

  return result;
}

unint64_t lazy protocol witness table accessor for type [PhoneCallControlAction] and conformance [A]()
{
  unint64_t result = lazy protocol witness table cache variable for type [PhoneCallControlAction] and conformance [A];
  if (!lazy protocol witness table cache variable for type [PhoneCallControlAction] and conformance [A])
  {
    uint64_t v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [PhoneCallControlAction]);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type [PhoneCallControlAction] and conformance [A]);
  }

  return result;
}

uint64_t storeEnumTagSinglePayload for PhoneCallControlNLIntent.Verb( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    LODWORD(OUTLINED_FUNCTION_5_18(v2, v3, v4) = 1;
  }
  else {
    LODWORD(OUTLINED_FUNCTION_5_18(v2, v3, v4) = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xF9) {
    return ((uint64_t (*)(void))((char *)&loc_2DC3D4 + 4 * byte_33F024[v4]))();
  }
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_2DC408 + 4 * byte_33F01F[v4]))();
}

uint64_t sub_2DC408(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2DC410(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x2DC418LL);
  }
  return result;
}

uint64_t sub_2DC424(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x2DC42CLL);
  }
  *(_BYTE *)unint64_t result = a2 + 6;
  return result;
}

uint64_t sub_2DC430(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2DC438(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for PhoneCallControlNLIntent.Verb()
{
}

uint64_t storeEnumTagSinglePayload for PhoneCallControlNLIntent.Target( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    LODWORD(OUTLINED_FUNCTION_5_18(v2, v3, v4) = 1;
  }
  else {
    LODWORD(OUTLINED_FUNCTION_5_18(v2, v3, v4) = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFB) {
    return ((uint64_t (*)(void))((char *)&loc_2DC49C + 4 * byte_33F02E[v4]))();
  }
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_2DC4D0 + 4 * byte_33F029[v4]))();
}

uint64_t sub_2DC4D0(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2DC4D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x2DC4E0LL);
  }
  return result;
}

uint64_t sub_2DC4EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x2DC4F4LL);
  }
  *(_BYTE *)unint64_t result = a2 + 4;
  return result;
}

uint64_t sub_2DC4F8(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2DC500(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for PhoneCallControlNLIntent.Target()
{
}

uint64_t storeEnumTagSinglePayload for PhoneCallControlAction(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    LODWORD(OUTLINED_FUNCTION_5_18(v2, v3, v4) = 1;
  }
  else {
    LODWORD(OUTLINED_FUNCTION_5_18(v2, v3, v4) = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xF5) {
    return ((uint64_t (*)(void))((char *)&loc_2DC564 + 4 * byte_33F038[v4]))();
  }
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_2DC598 + 4 * byte_33F033[v4]))();
}

uint64_t sub_2DC598(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2DC5A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x2DC5A8LL);
  }
  return result;
}

uint64_t sub_2DC5B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x2DC5BCLL);
  }
  *(_BYTE *)unint64_t result = a2 + 10;
  return result;
}

uint64_t sub_2DC5C0(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2DC5C8(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for PhoneCallControlAction()
{
}

uint64_t OUTLINED_FUNCTION_4_109()
{
  return 0x43656C6261736964LL;
}

uint64_t OUTLINED_FUNCTION_6_105()
{
  return 0x6143656C62616E65LL;
}

unint64_t OUTLINED_FUNCTION_8_92@<X0>(uint64_t a1@<X8>)
{
  return (a1 - 32) | 0x8000000000000000LL;
}

uint64_t OUTLINED_FUNCTION_9_85()
{
  return 0x48656C6261736964LL;
}

uint64_t OUTLINED_FUNCTION_11_93()
{
  return 0x6F68706F7263696DLL;
}

uint64_t OUTLINED_FUNCTION_12_93()
{
  return swift_getObjectType(v0);
}

uint64_t OUTLINED_FUNCTION_13_89()
{
  return 0x6F48656C62616E65LL;
}

uint64_t OUTLINED_FUNCTION_14_78()
{
  return 0x6C6576654C746573LL;
}

uint64_t OUTLINED_FUNCTION_15_81()
{
  return 0x656C6261736964LL;
}

uint64_t OUTLINED_FUNCTION_16_63()
{
  return 1684828008LL;
}

  ;
}

uint64_t OUTLINED_FUNCTION_18_70()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_19_70()
{
  return 0x656C67676F74LL;
}

void BusinessCompositionFlow.__allocating_init(parse:sharedGlobals:)(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = OUTLINED_FUNCTION_4_3();
  OUTLINED_FUNCTION_44_0();
  __chkstk_darwin(v8);
  OUTLINED_FUNCTION_8();
  uint64_t v11 = v10 - v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v10 - v9, a1, v7);
  outlined init with copy of SignalProviding(a2, (uint64_t)v16);
  type metadata accessor for StartCallCATsSimple(0LL);
  OUTLINED_FUNCTION_96_9();
  uint64_t v12 = OUTLINED_FUNCTION_70_21();
  (*(void (**)(uint64_t, _BYTE *, ValueMetadata *, _UNKNOWN **, uint64_t))(v2 + 144))( v11,  v16,  &type metadata for PhoneCallFlowFactory,  &protocol witness table for PhoneCallFlowFactory,  v12);
  uint64_t v13 = (void *)OUTLINED_FUNCTION_80_12();
  __swift_destroy_boxed_opaque_existential_1(v13);
  uint64_t v14 = OUTLINED_FUNCTION_258();
  v15(v14);
  OUTLINED_FUNCTION_58();
}

uint64_t BusinessCompositionFlow.__allocating_init(parse:sharedGlobals:phoneCallFactoryType:startCallCATsSimple:)()
{
  uint64_t v1 = swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  BusinessCompositionFlow.init(parse:sharedGlobals:phoneCallFactoryType:startCallCATsSimple:)();
  return v1;
}

void BusinessCompositionFlow.init(parse:sharedGlobals:phoneCallFactoryType:startCallCATsSimple:)()
{
  uint64_t v6 = v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin23BusinessCompositionFlow_parse;
  uint64_t v7 = OUTLINED_FUNCTION_4_3();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32LL))(v6, v5, v7);
  outlined init with take of AppSelectionSignalComponent( v4,  v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin23BusinessCompositionFlow_sharedGlobals);
  uint64_t v8 = v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin23BusinessCompositionFlow_state;
  *(void *)uint64_t v8 = 0LL;
  *(_BYTE *)(v8 + 8) = 2;
  uint64_t v9 = (void *)(v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin23BusinessCompositionFlow_phoneCallFactoryType);
  *uint64_t v9 = v3;
  v9[1] = v2;
  *(void *)(v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin23BusinessCompositionFlow_startCallCATsSimple) = v0;
  OUTLINED_FUNCTION_58();
}

uint64_t BusinessCompositionFlow.on(input:)(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = type metadata accessor for Input(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_32();
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v7 = OUTLINED_FUNCTION_15_1();
  uint64_t v8 = (os_log_s *)__swift_project_value_buffer(v7, (uint64_t)static Logger.siriPhone);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v2, a1, v5);
  uint64_t v9 = swift_retain_n(v3, 2LL);
  uint64_t v10 = (os_log_s *)Logger.logObject.getter(v9);
  os_log_type_t v12 = static os_log_type_t.debug.getter(v10, v11);
  uint64_t v13 = &demangling cache variable for type metadata for [PhoneCallControlAction];
  if (os_log_type_enabled(v10, v12))
  {
    uint64_t v14 = OUTLINED_FUNCTION_7_0(22LL);
    uint64_t v28 = OUTLINED_FUNCTION_7_0(64LL);
    uint64_t v31 = v28;
    *(_DWORD *)uint64_t v14 = 136315394;
    char v15 = *(_BYTE *)(v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin23BusinessCompositionFlow_state + 8);
    uint64_t v29 = *(void *)(v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin23BusinessCompositionFlow_state);
    v30[0] = v15;
    outlined copy of BusinessCompositionFlow.State(v29, v15);
    uint64_t v16 = String.init<A>(describing:)(&v29, &unk_417B58);
    uint64_t v29 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16, v17, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, v30, v14 + 4);
    swift_bridgeObjectRelease();
    uint64_t v18 = OUTLINED_FUNCTION_12_7();
    *(_WORD *)(v14 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
    uint64_t v19 = Input.description.getter(v18);
    uint64_t v29 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v19, v20, &v31);
    uint64_t v13 = &demangling cache variable for type metadata for [PhoneCallControlAction];
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, v30, v14 + 14);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_59_23();
    _os_log_impl( &dword_0,  v10,  v12,  "#BusinessCompositionFlow entering on with state: %s, input: %s",  (uint8_t *)v14,  0x16u);
    swift_arrayDestroy(v28, 2LL);
    OUTLINED_FUNCTION_0_2(v28);
    OUTLINED_FUNCTION_0_2(v14);
  }

  else
  {
    OUTLINED_FUNCTION_12_7();
    OUTLINED_FUNCTION_59_23();
  }

  uint64_t v22 = v3 + v13[30];
  BOOL v23 = *(_BYTE *)(v22 + 8) == 2 && *(void *)v22 == 0LL;
  uint64_t v24 = v23;
  if (!v23)
  {
    Logger.logObject.getter(v21);
    os_log_type_t v25 = OUTLINED_FUNCTION_6_0();
    if (os_log_type_enabled(v8, v25))
    {
      uint64_t v26 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl( &dword_0,  v8,  v25,  "#BusinessCompositionFlow ignoring focus since flow is not in initiated state",  v26,  2u);
      OUTLINED_FUNCTION_0_2((uint64_t)v26);
    }
  }

  return v24;
}

uint64_t BusinessCompositionFlow.execute()(uint64_t a1)
{
  v2[27] = a1;
  v2[28] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneError?);
  v2[29] = OUTLINED_FUNCTION_12_0(v3);
  uint64_t v4 = type metadata accessor for DialogPhase(0LL);
  v2[30] = OUTLINED_FUNCTION_12_0(v4);
  uint64_t v5 = type metadata accessor for CATOption(0LL);
  v2[31] = OUTLINED_FUNCTION_12_0(v5);
  v2[32] = type metadata accessor for PhoneError(0LL);
  v2[33] = OUTLINED_FUNCTION_28();
  v2[34] = OUTLINED_FUNCTION_28();
  v2[35] = OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v4 = *v2;
  *(void *)(*v2 + 320) = v1;
  swift_task_dealloc();
  if (!v1) {
    *(void *)(v4 + 328) = a1;
  }
  OUTLINED_FUNCTION_19_1();
  return swift_task_switch(v5, v6, v7);
}

void BusinessCompositionFlow.execute()()
{
  uint64_t v1 = (__int128 *)(v0 + 56);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v2 = *(os_log_s **)(v0 + 224);
  uint64_t v3 = OUTLINED_FUNCTION_15_1();
  uint64_t v4 = __swift_project_value_buffer(v3, (uint64_t)static Logger.siriPhone);
  *(void *)(v0 + 288) = v4;
  swift_retain_n(v2, 2LL);
  OUTLINED_FUNCTION_91_13();
  os_log_type_t v5 = OUTLINED_FUNCTION_6_0();
  BOOL v6 = os_log_type_enabled(v2, v5);
  uint64_t v7 = *(void *)(v0 + 224);
  if (v6)
  {
    uint64_t v8 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v9 = OUTLINED_FUNCTION_7_0(32LL);
    v82[0] = v9;
    *(_DWORD *)uint64_t v8 = 136315138;
    uint64_t v10 = *(void *)(v7 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin23BusinessCompositionFlow_state);
    char v11 = *(_BYTE *)(v7 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin23BusinessCompositionFlow_state + 8);
    *(void *)(v0 + 136) = v10;
    *(_BYTE *)(v0 + 144) = v11;
    outlined copy of BusinessCompositionFlow.State(v10, v11);
    uint64_t v12 = String.init<A>(describing:)(v0 + 136, &unk_417B58);
    *(void *)(v0 + outlined init with copy of SharedGlobalsProviding(v0 - 168, v0 - 208) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v12, v13, v82);
    uint64_t v1 = (__int128 *)(v0 + 56);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 208, v0 + 216, v8 + 4);
    OUTLINED_FUNCTION_12_7();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_57_0(&dword_0, v2, v5, "#BusinessCompositionFlow entering execute with state: %s", v8);
    swift_arrayDestroy(v9, 1LL);
    OUTLINED_FUNCTION_0_2(v9);
    OUTLINED_FUNCTION_0_2((uint64_t)v8);
  }

  else
  {

    OUTLINED_FUNCTION_12_7();
  }

  uint64_t v14 = *(void *)(v0 + 224);
  uint64_t v15 = OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin23BusinessCompositionFlow_sharedGlobals;
  *(void *)(v0 + 296) = OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin23BusinessCompositionFlow_sharedGlobals;
  uint64_t v16 = *(void *)(v14 + v15 + 24);
  uint64_t v17 = *(void *)(v14 + v15 + 32);
  OUTLINED_FUNCTION_49_0((void *)(v14 + v15));
  uint64_t v18 = OUTLINED_FUNCTION_258();
  uint64_t v20 = v19(v18);
  uint64_t v21 = OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin23BusinessCompositionFlow_parse;
  *(void *)(v0 + 304) = OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin23BusinessCompositionFlow_parse;
  (*(void (**)(uint64_t))(*(void *)v20 + 192LL))(v14 + v21);
  OUTLINED_FUNCTION_38_1();
  if (*(void *)(v0 + 80))
  {
    uint64_t v22 = *(void *)(v0 + 224);
    outlined init with take of AppSelectionSignalComponent(v1, v0 + 16);
    BOOL v23 = &demangling cache variable for type metadata for [PhoneCallControlAction];
    uint64_t v17 = *(void *)(v22 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin23BusinessCompositionFlow_state);
    if (!*(_BYTE *)(v22 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin23BusinessCompositionFlow_state + 8))
    {
      outlined copy of BusinessCompositionFlow.State( *(void *)(v22 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin23BusinessCompositionFlow_state),  0);
      outlined copy of BusinessCompositionFlow.State(v17, 0);
      outlined copy of BusinessCompositionFlow.State(v17, 0);
      outlined copy of BusinessCompositionFlow.State(v17, 0);
      OUTLINED_FUNCTION_124();
      char v40 = (os_log_s *)OUTLINED_FUNCTION_91_13();
      os_log_type_t v41 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v40, v41))
      {
        uint64_t v42 = OUTLINED_FUNCTION_7_0(22LL);
        uint64_t v81 = OUTLINED_FUNCTION_7_0(32LL);
        v82[0] = v81;
        *(_DWORD *)uint64_t v42 = 134218242;
        if ((unint64_t)v17 >> 62)
        {
          if (v17 >= 0) {
            uint64_t v80 = v17 & 0xFFFFFFFFFFFFFF8LL;
          }
          else {
            uint64_t v80 = v17;
          }
          OUTLINED_FUNCTION_124();
          uint64_t v43 = _CocoaArrayWrapper.endIndex.getter(v80);
          OUTLINED_FUNCTION_6_106();
        }

        else
        {
          uint64_t v43 = *(void *)((char *)&dword_10 + (v17 & 0xFFFFFFFFFFFFFF8LL));
        }

        OUTLINED_FUNCTION_6_106();
        *(void *)(v0 + 176) = v43;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 176, v0 + 184, v42 + 4);
        OUTLINED_FUNCTION_6_106();
        *(_WORD *)(v42 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
        uint64_t v44 = type metadata accessor for CompositionResolutionEntity(0LL);
        uint64_t v45 = OUTLINED_FUNCTION_124();
        uint64_t v46 = Array.description.getter(v45, v44);
        unint64_t v48 = v47;
        OUTLINED_FUNCTION_6_106();
        *(void *)(v0 + 184) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v46, v48, v82);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 184, v0 + 192, v42 + 14);
        swift_bridgeObjectRelease();
        outlined consume of BusinessCompositionFlow.State(v17, 0);
        OUTLINED_FUNCTION_6_106();
        _os_log_impl( &dword_0,  v40,  v41,  "#BusinessCompositionFlow resolution completed with %ld entities %s",  (uint8_t *)v42,  0x16u);
        swift_arrayDestroy(v81, 1LL);
        OUTLINED_FUNCTION_0_2(v81);
        OUTLINED_FUNCTION_0_2(v42);
      }

      else
      {
        outlined consume of BusinessCompositionFlow.State(v17, 0);
        OUTLINED_FUNCTION_6_106();

        swift_bridgeObjectRelease_n(v17, 2LL);
      }

      uint64_t v49 = OUTLINED_FUNCTION_161_1();
      BusinessCompositionFlow.createMainFlow(entities:phoneCallNLIntent:)(v49, v50);
      uint64_t v52 = v51;
      OUTLINED_FUNCTION_6_106();
      static ExecuteResponse.complete(next:)(v52);
      swift_release(v52);
      OUTLINED_FUNCTION_115_10();
      goto LABEL_29;
    }

    if (*(_BYTE *)(v22 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin23BusinessCompositionFlow_state + 8) != 1) {
      __asm { BR              X10 }
    }

    uint64_t v24 = OUTLINED_FUNCTION_25_63();
    swift_willThrow(v24, v53, v54, v55, v56, v57, v58, v59);
    OUTLINED_FUNCTION_115_10();
  }

  else
  {
    outlined destroy of UUID?((uint64_t)v1, &demangling cache variable for type metadata for PhoneCallNLIntent?);
    OUTLINED_FUNCTION_91_13();
    os_log_type_t v25 = OUTLINED_FUNCTION_6_0();
    BOOL v23 = &demangling cache variable for type metadata for [PhoneCallControlAction];
    if (OUTLINED_FUNCTION_27_1(v25))
    {
      uint64_t v26 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
      OUTLINED_FUNCTION_47(v26);
      OUTLINED_FUNCTION_5_13( &dword_0,  v27,  v28,  "#BusinessCompositionFlow parse is not .uso and/or failed to transform parse to NLIntent, cannot redirect to comp osition resolution flow");
      OUTLINED_FUNCTION_0_2(v4);
    }

    OUTLINED_FUNCTION_88_24();
    swift_storeEnumTagMultiPayload(v16, v4, 13LL);
    lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError,  type metadata accessor for PhoneError);
    uint64_t v30 = OUTLINED_FUNCTION_17_14(v29);
    OUTLINED_FUNCTION_69_18(v30, v31);
    uint64_t v32 = OUTLINED_FUNCTION_98_9();
    swift_willThrow(v32, v33, v34, v35, v36, v37, v38, v39);
  }

  uint64_t v60 = *(void *)(v0 + 256);
  uint64_t v61 = *(void *)(v0 + 232);
  uint64_t v62 = *(void *)(v0 + 224) + v23[30];
  uint64_t v63 = *(void *)v62;
  *(void *)uint64_t v62 = v17;
  char v64 = *(_BYTE *)(v62 + 8);
  *(_BYTE *)(v62 + 8) = 1;
  OUTLINED_FUNCTION_25_63();
  outlined consume of BusinessCompositionFlow.State(v63, v64);
  *(void *)(v0 + 200) = v17;
  OUTLINED_FUNCTION_25_63();
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
  if ((swift_dynamicCast(v61, v0 + 200, v65) & 1) != 0)
  {
    uint64_t v66 = *(void *)(v0 + 264);
    uint64_t v67 = *(void *)(v0 + 272);
    uint64_t v68 = *(void *)(v0 + 256);
    uint64_t v69 = *(void *)(v0 + 232);
    OUTLINED_FUNCTION_3_91(v69);
    outlined init with take of PhoneError(v69, v67);
    outlined init with copy of PhoneError(v67, v66);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v66, v68);
    uint64_t v60 = *(void *)(v0 + 264);
    if (EnumCaseMultiPayload == 21)
    {
      uint64_t v71 = OUTLINED_FUNCTION_98_9();
      static ExecuteResponse.complete()(v71);
      OUTLINED_FUNCTION_9_16();
      OUTLINED_FUNCTION_32_41();
      goto LABEL_29;
    }

    OUTLINED_FUNCTION_32_41();
    OUTLINED_FUNCTION_98_9();
  }

  else
  {
    OUTLINED_FUNCTION_30_52();
    outlined destroy of UUID?(v0 + 200, &demangling cache variable for type metadata for PhoneError?);
  }

  uint64_t v72 = *(os_log_s **)(v0 + 288);
  OUTLINED_FUNCTION_25_63();
  uint64_t v73 = OUTLINED_FUNCTION_25_63();
  Logger.logObject.getter(v73);
  os_log_type_t v74 = OUTLINED_FUNCTION_24();
  if (OUTLINED_FUNCTION_27_1(v74))
  {
    uint64_t v75 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    char v76 = (void *)OUTLINED_FUNCTION_7_0(8LL);
    *(_DWORD *)uint64_t v75 = 138412290;
    OUTLINED_FUNCTION_25_63();
    uint64_t v77 = _swift_stdlib_bridgeErrorToNSError(v17);
    *(void *)(v0 + 160) = v77;
    OUTLINED_FUNCTION_87_15(v0 + 160, v0 + 168);
    *char v76 = v77;
    OUTLINED_FUNCTION_9_16();
    OUTLINED_FUNCTION_9_16();
    OUTLINED_FUNCTION_57_0( &dword_0,  v72,  (os_log_type_t)v60,  "#BusinessCompositionFlow ERROR - %@. Falling back to MainFlow",  v75);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    OUTLINED_FUNCTION_21_59();
    OUTLINED_FUNCTION_0_2((uint64_t)v76);
    OUTLINED_FUNCTION_0_2((uint64_t)v75);
  }

  else
  {
    OUTLINED_FUNCTION_9_16();
    OUTLINED_FUNCTION_9_16();
  }

  uint64_t v78 = OUTLINED_FUNCTION_37_43(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin23BusinessCompositionFlow_phoneCallFactoryType);
  static ExecuteResponse.complete(next:)(v78);
  OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_9_16();
LABEL_29:
  OUTLINED_FUNCTION_16_64();
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_41_14();
  __asm { BR              X0 }

uint64_t BusinessCompositionFlow.execute()()
{
  *(void *)(v0 + 15__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *(void *)(v0 + 328);
  OUTLINED_FUNCTION_25_29();
  static ExecuteResponse.complete<A>(next:)(v0 + 152);
  OUTLINED_FUNCTION_22();
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 16));
  OUTLINED_FUNCTION_16_64();
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  os_log_s *v15;
  uint64_t v16;
  os_log_type_t v17;
  uint8_t *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 16));
  uint64_t v1 = *(void *)(v0 + 320);
  uint64_t v2 = *(void *)(v0 + 256);
  uint64_t v3 = *(void *)(v0 + 232);
  uint64_t v4 = *(void *)(v0 + 224) + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin23BusinessCompositionFlow_state;
  os_log_type_t v5 = *(void *)v4;
  *(void *)uint64_t v4 = v1;
  BOOL v6 = *(_BYTE *)(v4 + 8);
  *(_BYTE *)(v4 + 8) = 1;
  OUTLINED_FUNCTION_9_50();
  outlined consume of BusinessCompositionFlow.State(v5, v6);
  *(void *)(v0 + 200) = v1;
  OUTLINED_FUNCTION_9_50();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
  if ((swift_dynamicCast(v3, v0 + 200, v7) & 1) != 0)
  {
    uint64_t v9 = *(void *)(v0 + 264);
    uint64_t v8 = *(void *)(v0 + 272);
    uint64_t v10 = *(void *)(v0 + 232);
    __swift_storeEnumTagSinglePayload(v10, 0LL, 1LL, *(void *)(v0 + 256));
    outlined init with take of PhoneError(v10, v8);
    outlined init with copy of PhoneError(v8, v9);
    char v11 = OUTLINED_FUNCTION_161_1();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v11, v12);
    uint64_t v3 = *(void *)(v0 + 264);
    if (EnumCaseMultiPayload == 21)
    {
      uint64_t v14 = outlined destroy of PhoneError(*(void *)(v0 + 264));
      static ExecuteResponse.complete()(v14);
      OUTLINED_FUNCTION_13_6();
      OUTLINED_FUNCTION_32_41();
      goto LABEL_10;
    }

    OUTLINED_FUNCTION_32_41();
    outlined destroy of PhoneError(v3);
  }

  else
  {
    OUTLINED_FUNCTION_30_52();
    outlined destroy of UUID?(v2, &demangling cache variable for type metadata for PhoneError?);
  }

  uint64_t v15 = *(os_log_s **)(v0 + 288);
  OUTLINED_FUNCTION_9_50();
  uint64_t v16 = OUTLINED_FUNCTION_9_50();
  Logger.logObject.getter(v16);
  uint64_t v17 = OUTLINED_FUNCTION_24();
  if (OUTLINED_FUNCTION_93(v17))
  {
    uint64_t v18 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v19 = (void *)OUTLINED_FUNCTION_7_0(8LL);
    *(_DWORD *)uint64_t v18 = 138412290;
    OUTLINED_FUNCTION_9_50();
    uint64_t v20 = _swift_stdlib_bridgeErrorToNSError(v1);
    *(void *)(v0 + 160) = v20;
    OUTLINED_FUNCTION_87_15(v0 + 160, v0 + 168);
    *uint64_t v19 = v20;
    OUTLINED_FUNCTION_13_6();
    OUTLINED_FUNCTION_13_6();
    OUTLINED_FUNCTION_57_0( &dword_0,  v15,  (os_log_type_t)v3,  "#BusinessCompositionFlow ERROR - %@. Falling back to MainFlow",  v18);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    OUTLINED_FUNCTION_21_59();
    OUTLINED_FUNCTION_0_2((uint64_t)v19);
    OUTLINED_FUNCTION_0_2((uint64_t)v18);
  }

  else
  {
    OUTLINED_FUNCTION_13_6();
    OUTLINED_FUNCTION_13_6();
  }

  uint64_t v21 = OUTLINED_FUNCTION_37_43(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin23BusinessCompositionFlow_phoneCallFactoryType);
  static ExecuteResponse.complete(next:)(v21);
  OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_13_6();
LABEL_10:
  OUTLINED_FUNCTION_16_64();
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t closure #1 in BusinessCompositionFlow.execute()(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  v11[3] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConditionalFlowResult<CompositionResolutionResponse>);
  v11[0] = v4;
  swift_retain();
  BusinessCompositionFlow.extractResolutionResult(anyResolutionResult:)((uint64_t)v11);
  uint64_t v6 = v5;
  outlined destroy of UUID?((uint64_t)v11, &demangling cache variable for type metadata for Any?);
  uint64_t v7 = a2 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin23BusinessCompositionFlow_state;
  uint64_t v8 = *(void *)(a2 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin23BusinessCompositionFlow_state);
  *(void *)uint64_t v7 = v6;
  char v9 = *(_BYTE *)(v7 + 8);
  *(_BYTE *)(v7 + 8) = 0;
  return outlined consume of BusinessCompositionFlow.State(v8, v9);
}

uint64_t BusinessCompositionFlow.makeOutputFlowForUnsupportedRequest()()
{
  v1[13] = v0;
  uint64_t v2 = type metadata accessor for DialogPhase(0LL);
  v1[14] = OUTLINED_FUNCTION_12_0(v2);
  uint64_t v3 = OUTLINED_FUNCTION_94();
  v1[15] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v1[16] = v4;
  v1[17] = *(void *)(v4 + 64);
  v1[18] = OUTLINED_FUNCTION_28();
  v1[19] = OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  (*(void (**)(void, void))(*(void *)(v0 + 128) + 8LL))(*(void *)(v0 + 152), *(void *)(v0 + 120));
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t BusinessCompositionFlow.makeOutputFlowForUnsupportedRequest()(uint64_t a1)
{
  uint64_t v3 = v1[13];
  uint64_t v2 = v1[14];
  static DialogPhase.completion.getter(a1);
  OutputGenerationManifest.init(dialogPhase:_:)(v2, INStartAudioCallIntent.overwriteCallGroups(newCallGroups:), 0LL);
  uint64_t v4 = *(void **)(v3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin23BusinessCompositionFlow_startCallCATsSimple);
  type metadata accessor for SirikitDeviceState(0LL);
  uint64_t v5 = OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin23BusinessCompositionFlow_sharedGlobals;
  v1[20] = OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin23BusinessCompositionFlow_sharedGlobals;
  __swift_project_boxed_opaque_existential_1((void *)(v3 + v5), *(void *)(v3 + v5 + 24));
  uint64_t v6 = OUTLINED_FUNCTION_161_1();
  v7(v6);
  uint64_t v8 = SirikitDeviceState.__allocating_init(from:)(v13);
  v1[21] = v8;
  char v9 = *(int **)(class metadata base offset for StartCallCATsSimple + *v4 + 1072);
  uint64_t v12 = (int *)((char *)v9 + *v9);
  uint64_t v10 = (void *)swift_task_alloc(v9[1]);
  v1[22] = v10;
  *uint64_t v10 = v1;
  v10[1] = BusinessCompositionFlow.makeOutputFlowForUnsupportedRequest();
  return ((uint64_t (*)(uint64_t, void))v12)(v8, 0LL);
}

{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 168);
  *(void *)(*v2 + 184) = v1;
  swift_task_dealloc();
  swift_release(v5);
  if (!v1) {
    *(void *)(v4 + 19__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a1;
  }
  OUTLINED_FUNCTION_19_1();
  return swift_task_switch(v6, v7, v8);
}

void BusinessCompositionFlow.makeOutputFlowForUnsupportedRequest()()
{
  uint64_t v1 = v0[19];
  uint64_t v17 = v0[18];
  uint64_t v2 = v0[16];
  uint64_t v18 = v0[17];
  uint64_t v19 = v0[24];
  uint64_t v3 = v0[15];
  uint64_t v4 = v0[13];
  uint64_t v5 = (void *)(v4 + v0[20]);
  uint64_t v7 = v5[3];
  uint64_t v6 = v5[4];
  __swift_project_boxed_opaque_existential_1(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v6 + 16))(v7, v6);
  uint64_t v8 = v0[5];
  uint64_t v9 = v0[7];
  uint64_t v10 = __swift_project_boxed_opaque_existential_1(v0 + 2, v8);
  v0[11] = v8;
  v0[12] = v9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v0 + 8);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16LL))( boxed_opaque_existential_1,  v10,  v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v17, v1, v3);
  uint64_t v12 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v13 = (v12 + 32) & ~v12;
  uint64_t v14 = swift_allocObject(&unk_417B78, v13 + v18, v12 | 7);
  *(void *)(v14 + ++*(void *)(v0 + 16) = v4;
  *(void *)(v14 + 24) = v19;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v14 + v13, v17, v3);
  uint64_t v15 = OUTLINED_FUNCTION_25_29();
  OUTLINED_FUNCTION_15_2(v15);
  swift_retain();
  SimpleOutputFlowAsync.init(outputPublisher:outputGenerator:)( v0 + 8,  &async function pointer to partial apply for closure #1 in BusinessCompositionFlow.makeOutputFlowForUnsupportedRequest(),  v14);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  __swift_destroy_boxed_opaque_existential_1(v0 + 2);
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_7_8();
  swift_task_dealloc();
  OUTLINED_FUNCTION_41_14();
  __asm { BR              X1 }

uint64_t closure #1 in BusinessCompositionFlow.makeOutputFlowForUnsupportedRequest()( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[9] = a3;
  v4[10] = a4;
  v4[7] = a1;
  v4[8] = a2;
  return swift_task_switch(closure #1 in BusinessCompositionFlow.makeOutputFlowForUnsupportedRequest(), 0LL, 0LL);
}

uint64_t closure #1 in BusinessCompositionFlow.makeOutputFlowForUnsupportedRequest()()
{
  uint64_t v1 = (void *)v0[9];
  OUTLINED_FUNCTION_49_0((void *)(v0[8]
                                  + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin23BusinessCompositionFlow_sharedGlobals));
  uint64_t v2 = OUTLINED_FUNCTION_258();
  v3(v2);
  uint64_t v4 = v0[5];
  uint64_t v5 = v0[6];
  OUTLINED_FUNCTION_49_0(v0 + 2);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v7 = OUTLINED_FUNCTION_5_32(v6);
  *(_OWORD *)(v7 + ++*(void *)(v0 + 16) = xmmword_31FE60;
  *(void *)(v7 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v1;
  uint64_t v16 = v7;
  specialized Array._endMutation()(v7, v8, v9, v10);
  v0[11] = v16;
  uint64_t v11 = *(void *)(v5 + 8);
  uint64_t v12 = async function pointer to dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)[1];
  id v13 = v1;
  uint64_t v14 = (void *)swift_task_alloc(v12);
  v0[12] = v14;
  *uint64_t v14 = v0;
  v14[1] = closure #1 in BusinessCompositionFlow.makeOutputFlowForUnsupportedRequest();
  return dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)( v0[7],  v16,  v0[10],  v4,  v11);
}

{
  swift_task_dealloc();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 16));
  return OUTLINED_FUNCTION_3_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t BusinessCompositionFlow.createBusinessEntity(businessName:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = OUTLINED_FUNCTION_82_0();
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  uint64_t v7 = OUTLINED_FUNCTION_5_50();
  uint64_t v8 = type metadata accessor for UsoEntityBuilder_common_LocalBusiness(v7);
  OUTLINED_FUNCTION_15_2(v8);
  uint64_t v9 = (os_log_s *)UsoEntityBuilder_common_LocalBusiness.init()();
  uint64_t v10 = (uint64_t)v9;
  dispatch thunk of UsoEntityBuilder_common_LocalBusiness.setName(value:)(a1, a2);
  uint64_t v11 = static UsoBuilderConversionUtils.convertEntityBuilderToEntity(entityBuilder:)(v9);
  if (v11)
  {
    uint64_t v10 = v11;
    OUTLINED_FUNCTION_76();
  }

  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v12 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v12, (uint64_t)static Logger.siriPhone);
    os_log_type_t v13 = OUTLINED_FUNCTION_24();
    if (OUTLINED_FUNCTION_63(v13))
    {
      uint64_t v14 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
      *(_WORD *)uint64_t v14 = 0;
      OUTLINED_FUNCTION_5(&dword_0, v9, v3, "#BusinessCompositionFlow failed to build common_LocalBusiness entity", v14);
      OUTLINED_FUNCTION_0_2((uint64_t)v14);
    }

    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UsoEntity_common_LocalBusiness.Type);
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UsoEntity_common_LocalBusiness.Type.Type);
    uint64_t v16 = OUTLINED_FUNCTION_86_17(v15);
    OUTLINED_FUNCTION_33_59(v16, v17);
    lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError,  type metadata accessor for PhoneError);
    uint64_t v19 = OUTLINED_FUNCTION_4_4(v6, v18);
    OUTLINED_FUNCTION_56_26(v19, v20);
    uint64_t v21 = outlined destroy of PhoneError(v2);
    swift_willThrow(v21, v22, v23, v24, v25, v26, v27, v28);
    OUTLINED_FUNCTION_76();
  }

  return v10;
}

os_log_s *BusinessCompositionFlow.createPersonEntity()()
{
  uint64_t v2 = OUTLINED_FUNCTION_82_0();
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  uint64_t v3 = OUTLINED_FUNCTION_5_50();
  uint64_t v4 = type metadata accessor for UsoEntityBuilder_common_Person(v3);
  uint64_t v5 = (os_log_s *)OUTLINED_FUNCTION_15_2(v4);
  uint64_t v6 = UsoEntityBuilder_common_Person.init()();
  uint64_t v7 = static UsoBuilderConversionUtils.convertEntityBuilderToEntity(entityBuilder:)(v6);
  if (v7)
  {
    uint64_t v5 = (os_log_s *)v7;
    OUTLINED_FUNCTION_76();
  }

  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v8 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v8, (uint64_t)static Logger.siriPhone);
    os_log_type_t v9 = OUTLINED_FUNCTION_24();
    if (OUTLINED_FUNCTION_63(v9))
    {
      uint64_t v10 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
      *(_WORD *)uint64_t v10 = 0;
      OUTLINED_FUNCTION_5(&dword_0, v5, v1, "#BusinessCompositionFlow failed to build common_person entity", v10);
      OUTLINED_FUNCTION_0_2((uint64_t)v10);
    }

    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UsoEntity_common_Person.Type);
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UsoEntity_common_Person.Type.Type);
    uint64_t v12 = OUTLINED_FUNCTION_86_17(v11);
    OUTLINED_FUNCTION_33_59(v12, v13);
    lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError,  type metadata accessor for PhoneError);
    uint64_t v15 = OUTLINED_FUNCTION_4_4(v2, v14);
    OUTLINED_FUNCTION_56_26(v15, v16);
    uint64_t v17 = outlined destroy of PhoneError(v0);
    swift_willThrow(v17, v18, v19, v20, v21, v22, v23, v24);
    OUTLINED_FUNCTION_76();
  }

  return v5;
}

uint64_t BusinessCompositionFlow.updateNLContext()()
{
  uint64_t v1 = type metadata accessor for PommesContext.Source(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v5 = v4 - v3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PommesContext?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_7_6();
  NLContextUpdate.init()(v6);
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))( v5,  enum case for PommesContext.Source.pluginDefined(_:),  v1);
  PommesContext.init(source:domain:listenAfterSpeaking:)(v5, 0x656E6F6870LL, 0xE500000000000000LL, 1LL);
  uint64_t v7 = type metadata accessor for PommesContext(0LL);
  __swift_storeEnumTagSinglePayload(v0, 0LL, 1LL, v7);
  return NLContextUpdate.pommesContext.setter(v0);
}

void BusinessCompositionFlow.createCompositionResolutionFlow(phoneCallNLIntent:)(void *a1)
{
  uint64_t v5 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLContextUpdate?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_135();
  uint64_t v7 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_32();
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  (*(void (**)(uint64_t, uint64_t))(v10 + 24))(v9, v10);
  specialized Collection.first.getter(v64);
  swift_bridgeObjectRelease();
  uint64_t v11 = v65;
  if (!v65)
  {
    outlined destroy of UUID?((uint64_t)v64, &demangling cache variable for type metadata for SiriPhoneContact?);
    goto LABEL_8;
  }

  uint64_t v12 = v66;
  __swift_project_boxed_opaque_existential_1(v64, v65);
  uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 56))(v11, v12);
  unint64_t v15 = v14;
  OUTLINED_FUNCTION_57_4();
  if (!v15)
  {
LABEL_8:
    unint64_t v26 = lazy protocol witness table accessor for type ParseError and conformance ParseError();
    uint64_t v27 = OUTLINED_FUNCTION_4_4((uint64_t)&type metadata for ParseError, v26);
    *uint64_t v28 = xmmword_31D8B0;
    swift_willThrow(v27, v28, v29, v30, v31, v32, v33, v34);
    goto LABEL_12;
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v16 = OUTLINED_FUNCTION_15_1();
  __swift_project_value_buffer(v16, (uint64_t)static Logger.siriPhone);
  uint64_t v17 = swift_bridgeObjectRetain_n(v15, 2LL);
  uint64_t v18 = (os_log_s *)Logger.logObject.getter(v17);
  os_log_type_t v20 = static os_log_type_t.debug.getter(v18, v19);
  uint64_t v60 = v8;
  uint64_t v61 = v7;
  if (OUTLINED_FUNCTION_63(v20))
  {
    uint64_t v21 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v22 = OUTLINED_FUNCTION_7_0(32LL);
    v64[0] = v22;
    *(_DWORD *)uint64_t v21 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v23 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v13, v15, v64);
    uint64_t v24 = OUTLINED_FUNCTION_11_2(v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v24, v25, v21 + 4);
    swift_bridgeObjectRelease_n(v15, 3LL);
    OUTLINED_FUNCTION_57_0( &dword_0,  v18,  (os_log_type_t)v11,  "#BusinessCompositionFlow preparing to start a composition resolution flow for %s with location guard",  v21);
    OUTLINED_FUNCTION_17_0(v22);
    OUTLINED_FUNCTION_0_2(v22);
    OUTLINED_FUNCTION_0_2((uint64_t)v21);
  }

  else
  {

    swift_bridgeObjectRelease_n(v15, 2LL);
  }

  uint64_t v35 = BusinessCompositionFlow.createBusinessEntity(businessName:)(v13, v15);
  swift_bridgeObjectRelease();
  if (!v2)
  {
    uint64_t v62 = BusinessCompositionFlow.createPersonEntity()();
    BusinessCompositionFlow.updateNLContext()();
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v37 = swift_allocObject(v36, 40LL, 7LL);
    *(_OWORD *)(v37 + ++*(void *)(v0 + 16) = xmmword_31FE60;
    uint64_t v38 = (void *)(v5 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin23BusinessCompositionFlow_sharedGlobals);
    uint64_t v59 = v3;
    __swift_project_boxed_opaque_existential_1(v38, v38[3]);
    uint64_t v39 = OUTLINED_FUNCTION_161_1();
    v40(v39);
    __swift_project_boxed_opaque_existential_1(v64, v65);
    uint64_t v41 = OUTLINED_FUNCTION_161_1();
    uint64_t v43 = v42(v41);
    *(void *)(v37 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v43;
    uint64_t v67 = v37;
    specialized Array._endMutation()(v43, v44, v45, v46);
    uint64_t v58 = v67;
    OUTLINED_FUNCTION_57_4();
    __swift_project_boxed_opaque_existential_1(v38, v38[3]);
    uint64_t v47 = OUTLINED_FUNCTION_258();
    v48(v47);
    uint64_t v49 = v65;
    uint64_t v50 = v66;
    __swift_project_boxed_opaque_existential_1(v64, v65);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v60 + 16))(v4, v3, v61);
    __swift_storeEnumTagSinglePayload(v4, 0LL, 1LL, v61);
    type metadata accessor for SiriEnvironment(0LL);
    uint64_t v51 = static SiriEnvironment.default.getter();
    uint64_t v52 = SiriEnvironment.currentRequest.getter();
    swift_release(v51);
    uint64_t v53 = (*(uint64_t (**)(uint64_t, os_log_s *, void, uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 120))( v35,  v62,  0LL,  v4,  v52,  v49,  v50);
    swift_release(v52);
    outlined destroy of UUID?(v4, &demangling cache variable for type metadata for NLContextUpdate?);
    uint64_t v67 = v53;
    uint64_t v54 = type metadata accessor for GuardFlow(0LL);
    OUTLINED_FUNCTION_15_2(v54);
    uint64_t v55 = GuardFlow.init(preconditionFlows:)(v58);
    uint64_t v63 = v55;
    uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyValueFlow<CompositionResolutionResponse>);
    lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]( &lazy protocol witness table cache variable for type AnyValueFlow<CompositionResolutionResponse> and conformance AnyValueFlow<A>,  &demangling cache variable for type metadata for AnyValueFlow<CompositionResolutionResponse>);
    Flow.guarded<A>(by:)(&v63, v56, v54, v57);
    swift_release(v53);
    swift_release(v55);
    swift_release(v35);
    swift_release(v62);
    (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v59, v61);
    OUTLINED_FUNCTION_57_4();
  }

void BusinessCompositionFlow.createMainFlow(entities:phoneCallNLIntent:)(uint64_t a1, os_log_s *a2)
{
  uint64_t v7 = v2;
  uint64_t v31 = OUTLINED_FUNCTION_82_0();
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_135();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Parse?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  uint64_t v10 = OUTLINED_FUNCTION_44_9();
  uint64_t v11 = type metadata accessor for Parse(v10);
  OUTLINED_FUNCTION_44_0();
  __chkstk_darwin();
  OUTLINED_FUNCTION_7_6();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))( v3,  v7 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin23BusinessCompositionFlow_parse,  v11);
  if (!((unint64_t)a1 >> 62))
  {
LABEL_14:
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v27 = OUTLINED_FUNCTION_15_1();
    uint64_t v28 = (os_log_s *)OUTLINED_FUNCTION_12_1(v27, (uint64_t)static Logger.siriPhone);
    os_log_type_t v29 = static os_log_type_t.info.getter();
    if (OUTLINED_FUNCTION_29_5(v29))
    {
      uint64_t v30 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
      *(_WORD *)uint64_t v30 = 0;
      OUTLINED_FUNCTION_5(&dword_0, v28, (os_log_type_t)v4, "#BusinessCompositionFlow no entities found.", v30);
      OUTLINED_FUNCTION_0_2((uint64_t)v30);
    }

    goto LABEL_19;
  }

  if (a1 < 0) {
    uint64_t v25 = a1;
  }
  else {
    uint64_t v25 = a1 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain();
  uint64_t v26 = _CocoaArrayWrapper.endIndex.getter(v25);
  swift_bridgeObjectRelease();
  if (!v26) {
    goto LABEL_14;
  }
LABEL_3:
  BusinessCompositionFlow.constructCallParse(with:phoneCallNLIntent:)(a1, a2, v6);
  if (__swift_getEnumTagSinglePayload(v6, 1LL, v11) != 1)
  {
    OUTLINED_FUNCTION_28_32();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v3, v6, v11);
LABEL_19:
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7
                                                         + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin23BusinessCompositionFlow_phoneCallFactoryType
                                                         + 8)
                                             + 8LL))( v3,  v7 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin23BusinessCompositionFlow_sharedGlobals);
    OUTLINED_FUNCTION_28_32();
    goto LABEL_20;
  }

  outlined destroy of UUID?(v6, &demangling cache variable for type metadata for Parse?);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v12 = OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_12_1(v12, (uint64_t)static Logger.siriPhone);
  os_log_type_t v13 = OUTLINED_FUNCTION_24();
  if (os_log_type_enabled(a2, v13))
  {
    unint64_t v14 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
    *(_WORD *)unint64_t v14 = 0;
    OUTLINED_FUNCTION_5( &dword_0,  a2,  v13,  "#BusinessCompositionFlow failed to construct a new parse after receiving composition resolution result",  v14);
    OUTLINED_FUNCTION_0_2((uint64_t)v14);
  }

  swift_storeEnumTagMultiPayload(v4, v31, 11LL);
  lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError,  type metadata accessor for PhoneError);
  OUTLINED_FUNCTION_4_4(v31, v15);
  PhoneError.logged()(v16);
  uint64_t v17 = outlined destroy of PhoneError(v4);
  swift_willThrow(v17, v18, v19, v20, v21, v22, v23, v24);
  OUTLINED_FUNCTION_28_32();
LABEL_20:
  OUTLINED_FUNCTION_7_1();
}

void BusinessCompositionFlow.extractResolutionResult(anyResolutionResult:)(uint64_t a1)
{
  uint64_t v5 = OUTLINED_FUNCTION_82_0();
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_32();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CompositionResolutionError?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  uint64_t v6 = OUTLINED_FUNCTION_44_9();
  uint64_t v7 = type metadata accessor for CompositionResolutionError(v6);
  OUTLINED_FUNCTION_44_0();
  __chkstk_darwin();
  uint64_t v9 = (char *)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v77 - v10;
  outlined init with copy of Any?(a1, (uint64_t)v81);
  if (!v81[3])
  {
    outlined destroy of UUID?((uint64_t)v81, &demangling cache variable for type metadata for Any?);
    goto LABEL_10;
  }

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConditionalFlowResult<CompositionResolutionResponse>);
  if ((swift_dynamicCast(&v82, v81, &type metadata for Any[1]) & 1) == 0)
  {
LABEL_10:
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v28 = OUTLINED_FUNCTION_15_1();
    os_log_type_t v29 = (os_log_s *)OUTLINED_FUNCTION_12_1(v28, (uint64_t)static Logger.siriPhone);
    os_log_type_t v30 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_10(v30))
    {
      uint64_t v31 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
      *(_WORD *)uint64_t v31 = 0;
      OUTLINED_FUNCTION_5( &dword_0,  v29,  (os_log_type_t)v11,  "#BusinessCompositionFlow failed to get CompositionResolutionResponse from the composition resolution flow",  v31);
      OUTLINED_FUNCTION_0_2((uint64_t)v31);
    }

    *uint64_t v1 = 1;
    uint64_t v32 = v1;
    uint64_t v33 = v5;
    uint64_t v34 = 1LL;
    goto LABEL_15;
  }

  if (!v82)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v45 = OUTLINED_FUNCTION_15_1();
    uint64_t v46 = (os_log_s *)OUTLINED_FUNCTION_12_1(v45, (uint64_t)static Logger.siriPhone);
    os_log_type_t v47 = static os_log_type_t.info.getter();
    if (OUTLINED_FUNCTION_10(v47))
    {
      unint64_t v48 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
      *(_WORD *)unint64_t v48 = 0;
      OUTLINED_FUNCTION_5( &dword_0,  v46,  (os_log_type_t)v11,  "#BusinessCompositionFlow location guard flow failed.",  v48);
      OUTLINED_FUNCTION_0_2((uint64_t)v48);
    }

    uint64_t v32 = v1;
    uint64_t v33 = v5;
    uint64_t v34 = 21LL;
LABEL_15:
    swift_storeEnumTagMultiPayload(v32, v33, v34);
    lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError,  type metadata accessor for PhoneError);
    OUTLINED_FUNCTION_4_4(v5, v35);
    PhoneError.logged()(v36);
    uint64_t v37 = outlined destroy of PhoneError((uint64_t)v1);
    swift_willThrow(v37, v38, v39, v40, v41, v42, v43, v44);
    goto LABEL_16;
  }

  uint64_t v80 = v11;
  uint64_t v12 = OUTLINED_FUNCTION_3_8();
  CompositionResolutionResponse.error.getter(v12);
  if (__swift_getEnumTagSinglePayload(v3, 1LL, v7) == 1)
  {
    outlined destroy of UUID?(v3, &demangling cache variable for type metadata for CompositionResolutionError?);
    uint64_t v13 = CompositionResolutionResponse.entities.getter();
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v14 = OUTLINED_FUNCTION_15_1();
    __swift_project_value_buffer(v14, (uint64_t)static Logger.siriPhone);
    uint64_t v15 = swift_bridgeObjectRetain_n(v13, 2LL);
    uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
    os_log_type_t v17 = static os_log_type_t.info.getter();
    if (OUTLINED_FUNCTION_29_5(v17))
    {
      uint64_t v18 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v80 = (char *)OUTLINED_FUNCTION_7_0(32LL);
      v81[0] = (uint64_t)v80;
      *(_DWORD *)uint64_t v18 = 136315138;
      uint64_t v79 = v18 + 4;
      uint64_t v19 = type metadata accessor for CompositionResolutionEntity(0LL);
      uint64_t v20 = OUTLINED_FUNCTION_124();
      uint64_t v21 = Array.description.getter(v20, v19);
      unint64_t v23 = v22;
      swift_bridgeObjectRelease();
      uint64_t v24 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v21, v23, v81);
      uint64_t v25 = OUTLINED_FUNCTION_11_2(v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v25, v26, v79);
      OUTLINED_FUNCTION_28_16();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_57_0( &dword_0,  v16,  (os_log_type_t)v5,  "#BusinessCompositionFlow successfully resolved composition entity to %s",  v18);
      uint64_t v27 = (uint64_t)v80;
      OUTLINED_FUNCTION_17_0((uint64_t)v80);
      OUTLINED_FUNCTION_0_2(v27);
      OUTLINED_FUNCTION_0_2((uint64_t)v18);
    }

    else
    {

      OUTLINED_FUNCTION_28_16();
    }

    OUTLINED_FUNCTION_0_3();
  }

  else
  {
    uint64_t v49 = (uint64_t)v80;
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 32))(v80, v3, v7);
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v50 = OUTLINED_FUNCTION_15_1();
    uint64_t v51 = (void (*)(uint64_t))__swift_project_value_buffer(v50, (uint64_t)static Logger.siriPhone);
    uint64_t v52 = *(uint8_t **)(v2 + 16);
    uint64_t v53 = ((uint64_t (*)(char *, uint64_t, uint64_t))v52)(v9, v49, v7);
    uint64_t v54 = (os_log_s *)Logger.logObject.getter(v53);
    os_log_type_t v55 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v54, v55))
    {
      uint64_t v56 = OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v79 = v52;
      uint64_t v57 = (uint8_t *)v56;
      uint64_t v78 = OUTLINED_FUNCTION_7_0(32LL);
      v81[0] = v78;
      *(_DWORD *)uint64_t v57 = 136315138;
      uint64_t v77 = v57 + 4;
      lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type CompositionResolutionError and conformance CompositionResolutionError,  (uint64_t (*)(uint64_t))&type metadata accessor for CompositionResolutionError);
      uint64_t v59 = Error.localizedDescription.getter(v7, v58);
      uint64_t v51 = (void (*)(uint64_t))v60;
      uint64_t v61 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v59, v60, v81);
      uint64_t v62 = OUTLINED_FUNCTION_11_2(v61);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v62, v63, v77);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_81_22();
      OUTLINED_FUNCTION_57_0( &dword_0,  v54,  v55,  "#BusinessCompositionFlow composition resolution failed with error: %s",  v57);
      uint64_t v64 = v78;
      OUTLINED_FUNCTION_17_0(v78);
      OUTLINED_FUNCTION_0_2(v64);
      uint64_t v65 = (uint64_t)v57;
      uint64_t v52 = v79;
      OUTLINED_FUNCTION_0_2(v65);
    }

    else
    {
      OUTLINED_FUNCTION_81_22();
    }

    lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type CompositionResolutionError and conformance CompositionResolutionError,  (uint64_t (*)(uint64_t))&type metadata accessor for CompositionResolutionError);
    OUTLINED_FUNCTION_4_4(v7, v66);
    uint64_t v68 = ((uint64_t (*)(uint64_t, char *, uint64_t))v52)(v67, v80, v7);
    swift_willThrow(v68, v69, v70, v71, v72, v73, v74, v75);
    OUTLINED_FUNCTION_0_3();
    uint64_t v76 = OUTLINED_FUNCTION_161_1();
    v51(v76);
  }

void BusinessCompositionFlow.constructCallParse(with:phoneCallNLIntent:)( uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v51 = a2;
  uint64_t v56 = a3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Siri_Nlu_External_Parser.ParserIdentifier?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v42 = v4;
  uint64_t v5 = OUTLINED_FUNCTION_65_1();
  uint64_t v45 = type metadata accessor for USOParse(v5);
  uint64_t v44 = *(void *)(v45 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v43 = v6;
  uint64_t v7 = OUTLINED_FUNCTION_65_1();
  uint64_t v41 = type metadata accessor for Siri_Nlu_External_UserParse(v7);
  uint64_t v40[5] = *(void *)(v41 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  v40[2] = v8;
  __chkstk_darwin();
  v40[4] = (char *)v40 - v9;
  uint64_t v10 = OUTLINED_FUNCTION_65_1();
  uint64_t v50 = type metadata accessor for Siri_Nlu_External_UserDialogAct(v10);
  v40[3] = *(void *)(v50 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v49 = v11;
  uint64_t v12 = OUTLINED_FUNCTION_65_1();
  type metadata accessor for Siri_Nlu_External_UsoGraph(v12);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v55 = v13;
  uint64_t v14 = OUTLINED_FUNCTION_65_1();
  uint64_t v15 = type metadata accessor for Siri_Nlu_External_UserStatedTask(v14);
  uint64_t v58 = *(void *)(v15 - 8);
  uint64_t v59 = v15;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  v40[1] = v16;
  __chkstk_darwin();
  uint64_t v57 = (char *)v40 - v17;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UsoBuilderOptions?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v54 = v18;
  uint64_t v19 = OUTLINED_FUNCTION_65_1();
  uint64_t v20 = type metadata accessor for UsoIdentifier(v19);
  uint64_t v52 = *(void *)(v20 - 8);
  uint64_t v53 = v20;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_7_6();
  uint64_t v21 = type metadata accessor for UsoEntity_applePhoneCall_PhoneCallAttribute.DefinedValues(0LL);
  uint64_t v47 = *(void *)(v21 - 8);
  uint64_t v48 = v21;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v46 = v22;
  uint64_t v23 = OUTLINED_FUNCTION_65_1();
  uint64_t v24 = type metadata accessor for UsoTaskBuilder_call_common_PhoneCall(v23);
  uint64_t v25 = OUTLINED_FUNCTION_15_2(v24);
  uint64_t v60 = UsoTaskBuilder_call_common_PhoneCall.init()(v25);
  uint64_t v26 = type metadata accessor for UsoEntityBuilder_common_PhoneCall(0LL);
  OUTLINED_FUNCTION_15_2(v26);
  uint64_t v27 = UsoEntityBuilder_common_PhoneCall.init()();
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0) {
      uint64_t v39 = a1;
    }
    else {
      uint64_t v39 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    uint64_t v28 = _CocoaArrayWrapper.endIndex.getter(v39);
    if (!v28) {
      goto LABEL_9;
    }
  }

  else
  {
    uint64_t v28 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8LL));
    swift_bridgeObjectRetain();
    if (!v28) {
      goto LABEL_9;
    }
  }

  if (v28 < 1)
  {
    __break(1u);
    JUMPOUT(0x2DFD28LL);
  }

  uint64_t v29 = 0LL;
  do
  {
    if ((a1 & 0xC000000000000001LL) != 0)
    {
      uint64_t v30 = specialized _ArrayBuffer._getElementSlowPath(_:)(v29, a1);
    }

    else
    {
      uint64_t v30 = *(void *)(a1 + 8 * v29 + 32);
      OUTLINED_FUNCTION_3_8();
    }

    ++v29;
    uint64_t v31 = type metadata accessor for UsoEntityBuilder_common_Person(0LL);
    OUTLINED_FUNCTION_15_2(v31);
    uint64_t v32 = UsoEntityBuilder_common_Person.init()();
    CompositionResolutionEntity.usoEntity.getter();
    uint64_t v33 = OUTLINED_FUNCTION_80_12();
    static UsoBuilderConversionUtils.copyEntityDataToEntityBuilder(entityBuilder:entity:copyValueType:copyIdentifiers:copyUtteranceAlignments:)( v33,  v30,  1LL,  1LL,  1LL);
    OUTLINED_FUNCTION_38_1();
    uint64_t v34 = swift_retain();
    dispatch thunk of UsoEntityBuilder_common_PhoneCall.addRecipients(value:)( v34,  &protocol witness table for UsoEntityBuilder_common_Person);
    OUTLINED_FUNCTION_22();
    swift_release_n(v32, 2LL);
  }

  while (v28 != v29);
LABEL_9:
  swift_bridgeObjectRelease();
  dispatch thunk of Uso_VerbTemplateBuilder_Target.setTarget(value:)(v27);
  uint64_t v35 = v51[4];
  __swift_project_boxed_opaque_existential_1(v51, v51[3]);
  uint64_t v36 = OUTLINED_FUNCTION_80_12();
  uint64_t v38 = (char *)&loc_2DF720 + *((int *)qword_2DFD58 + v37(v36, v35));
  __asm { BR              X10 }

uint64_t BusinessCompositionFlow.execute(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BusinessCompositionFlow(0LL);
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type BusinessCompositionFlow and conformance BusinessCompositionFlow,  type metadata accessor for BusinessCompositionFlow);
  return Flow.deferToExecuteAsync(_:)(a1, a2, v4, v5);
}

void BusinessCompositionFlow.deinit()
{
  uint64_t v1 = OUTLINED_FUNCTION_4_3();
  OUTLINED_FUNCTION_2_0(v1);
  __swift_destroy_boxed_opaque_existential_1((void *)(v0
                                                      + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin23BusinessCompositionFlow_sharedGlobals));
  outlined consume of BusinessCompositionFlow.State( *(void *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin23BusinessCompositionFlow_state),  *(_BYTE *)(v0 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin23BusinessCompositionFlow_state + 8));
  swift_release(*(void *)(v0
                          + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin23BusinessCompositionFlow_startCallCATsSimple));
  OUTLINED_FUNCTION_2();
}

uint64_t BusinessCompositionFlow.__deallocating_deinit()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t protocol witness for Flow.exitValue.getter in conformance BusinessCompositionFlow( uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for BusinessCompositionFlow(0LL);
  return Flow<>.exitValue.getter(v3, a2);
}

uint64_t outlined copy of BusinessCompositionFlow.State(uint64_t result, char a2)
{
  if (a2 == 1) {
    return swift_errorRetain(result);
  }
  if (!a2) {
    return swift_bridgeObjectRetain(result);
  }
  return result;
}

uint64_t outlined consume of BusinessCompositionFlow.State(uint64_t result, char a2)
{
  if (a2 == 1) {
    return swift_errorRelease(result);
  }
  if (!a2) {
    return swift_bridgeObjectRelease(result);
  }
  return result;
}

uint64_t partial apply for closure #1 in BusinessCompositionFlow.execute()(uint64_t *a1)
{
  return closure #1 in BusinessCompositionFlow.execute()(a1, v1);
}

uint64_t type metadata accessor for BusinessCompositionFlow(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for BusinessCompositionFlow;
  if (!type metadata singleton initialization cache for BusinessCompositionFlow) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for BusinessCompositionFlow);
  }
  return result;
}

void base witness table accessor for Flow in BusinessCompositionFlow()
{
}

void base witness table accessor for SiriEnvironmentLocating in BusinessCompositionFlow()
{
}

uint64_t ObjC metadata update function for BusinessCompositionFlow()
{
  return type metadata accessor for BusinessCompositionFlow(0LL);
}

uint64_t type metadata completion function for BusinessCompositionFlow(uint64_t a1)
{
  uint64_t result = type metadata accessor for Parse(319LL);
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(result - 8) + 64LL;
    v4[1] = "(";
    void v4[2] = &unk_33F480;
    v4[3] = &unk_33F498;
    void v4[4] = (char *)&value witness table for Builtin.NativeObject + 64;
    uint64_t result = swift_updateClassMetadata2(a1, 256LL, 5LL, v4, a1 + 80);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for BusinessCompositionFlow.State(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(_BYTE *)(a2 + 8);
  outlined copy of BusinessCompositionFlow.State(*(void *)a2, v4);
  *(void *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for BusinessCompositionFlow.State(uint64_t a1)
{
  return outlined consume of BusinessCompositionFlow.State(*(void *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t assignWithCopy for BusinessCompositionFlow.State(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(_BYTE *)(a2 + 8);
  outlined copy of BusinessCompositionFlow.State(*(void *)a2, v4);
  uint64_t v5 = *(void *)a1;
  *(void *)a1 = v3;
  char v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  outlined consume of BusinessCompositionFlow.State(v5, v6);
  return a1;
}

uint64_t assignWithTake for BusinessCompositionFlow.State(uint64_t a1, uint64_t a2)
{
  char v3 = *(_BYTE *)(a2 + 8);
  uint64_t v4 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  char v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  outlined consume of BusinessCompositionFlow.State(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for BusinessCompositionFlow.State(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    {
      int v2 = *(_DWORD *)a1 + 253;
    }

    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 2) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }

  else
  {
    int v2 = -1;
  }

  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BusinessCompositionFlow.State( uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(_BYTE *)(result + 9) = 1;
    }
  }

  else
  {
    if (a3 >= 0xFE) {
      *(_BYTE *)(result + 9) = 0;
    }
    if (a2) {
      *(_BYTE *)(result + 8) = -(char)a2;
    }
  }

  return result;
}

uint64_t getEnumTag for BusinessCompositionFlow.State(uint64_t a1)
{
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t destructiveInjectEnumTag for BusinessCompositionFlow.State(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)uint64_t result = a2 - 2;
    LOBYTE(a__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2;
  }

  *(_BYTE *)(result + 8) = a2;
  return result;
}

void *type metadata accessor for BusinessCompositionFlow.State()
{
  return &unk_417B58;
}

uint64_t sub_2E01A4()
{
  uint64_t v1 = OUTLINED_FUNCTION_94();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release(*(void *)(v0 + 16));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t partial apply for closure #1 in BusinessCompositionFlow.makeOutputFlowForUnsupportedRequest()( uint64_t a1)
{
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(OUTLINED_FUNCTION_94() - 8) + 80LL);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((v4 + 32) & ~v4);
  uint64_t v8 = (void *)swift_task_alloc(dword_4402D4);
  *(void *)(v2 + ++*(void *)(v0 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return closure #1 in BusinessCompositionFlow.makeOutputFlowForUnsupportedRequest()(a1, v5, v6, v7);
}

uint64_t OUTLINED_FUNCTION_6_106()
{
  return outlined consume of BusinessCompositionFlow.State(v0, 0);
}

uint64_t OUTLINED_FUNCTION_16_64()
{
  return swift_task_dealloc(*(void *)(v0 + 280));
}

uint64_t OUTLINED_FUNCTION_30_52()
{
  return __swift_storeEnumTagSinglePayload(*(void *)(v0 + 232), 1LL, 1LL, *(void *)(v0 + 256));
}

uint64_t OUTLINED_FUNCTION_33_59(uint64_t a1, uint64_t a2)
{
  void *v2 = a1;
  v2[1] = a2;
  v2[2] = 0LL;
  v2[3] = 0LL;
  return swift_storeEnumTagMultiPayload(v2, v3, 5LL);
}

uint64_t OUTLINED_FUNCTION_37_43@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(*(void *)(v1 + a1 + 8) + 8LL))();
}

uint64_t OUTLINED_FUNCTION_54_27()
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)(v1 - 152) + 8LL))(v0, *(void *)(v1 - 144));
}

uint64_t OUTLINED_FUNCTION_56_26(uint64_t a1, uint64_t a2)
{
  return PhoneError.logged()(a2);
}

uint64_t OUTLINED_FUNCTION_59_23()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_70_21()
{
  return CATWrapperSimple.__allocating_init(options:globals:)(v0, 0LL);
}

uint64_t OUTLINED_FUNCTION_81_22()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t OUTLINED_FUNCTION_86_17(uint64_t a1)
{
  return String.init<A>(describing:)(v1 - 56, a1);
}

uint64_t OUTLINED_FUNCTION_87_15(uint64_t a1, uint64_t a2)
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(a1, a2, v3, v2);
}

void OUTLINED_FUNCTION_88_24()
{
}

uint64_t OutputPublisherWrapper.publish(output:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = v3[5];
  uint64_t v8 = v3[6];
  __swift_project_boxed_opaque_existential_1(v3 + 2, v7);
  return dispatch thunk of OutputPublisher.publish(output:_:)(a1, a2, a3, v7, v8);
}

uint64_t OutputPublisherWrapper.publish(output:)(uint64_t a1)
{
  *(void *)(v2 + ++*(void *)(v0 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return swift_task_switch(OutputPublisherWrapper.publish(output:), 0LL, 0LL);
}

uint64_t OutputPublisherWrapper.publish(output:)()
{
  uint64_t v1 = (void *)v0[3];
  uint64_t v2 = v1[10];
  uint64_t v3 = v1[11];
  __swift_project_boxed_opaque_existential_1(v1 + 7, v2);
  uint64_t v4 = (void *)swift_task_alloc(async function pointer to dispatch thunk of OutputPublisherAsync.publish(output:)[1]);
  v0[4] = v4;
  *uint64_t v4 = v0;
  v4[1] = PhoneCallYesNoConfirmationFlowStrategy.makePromptForConfirmation(itemToConfirm:);
  return dispatch thunk of OutputPublisherAsync.publish(output:)(v0[2], v2, v3);
}

uint64_t protocol witness for OutputPublisherAsync.publish(output:) in conformance OutputPublisherWrapper( uint64_t a1)
{
  uint64_t v4 = *(int **)(**(void **)v1 + 112LL);
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  uint64_t v5 = (void *)swift_task_alloc(v4[1]);
  *(void *)(v2 + ++*(void *)(v0 + 16) = v5;
  void *v5 = v2;
  v5[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.makeFlowCancelledResponse() in conformance IncomingCallActionConfirmationStrategy<A>;
  return v7(a1);
}

uint64_t type metadata accessor for OutputPublisherWrapper()
{
  return objc_opt_self(&OBJC_CLASS____TtC27PhoneCallFlowDelegatePlugin22OutputPublisherWrapper);
}

PhoneCallFlowDelegatePlugin::UnsupportedFlowCATsSimple::Properties_optional __swiftcall UnsupportedFlowCATsSimple.Properties.init(rawValue:)( Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  _findStringSwitchCase(cases:string:)( (Swift::OpaquePointer)&outlined read-only object #0 of UnsupportedFlowCATsSimple.Properties.init(rawValue:),  v2);
  OUTLINED_FUNCTION_27_2();
  OUTLINED_FUNCTION_2();
  return result;
}

uint64_t UnsupportedFlowCATsSimple.Properties.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_2E0564 + 4 * byte_33F550[a1]))( 0xD000000000000021LL,  0x8000000000341990LL);
}

void sub_2E0564()
{
}

void protocol witness for static Equatable.== infix(_:_:) in conformance UnsupportedFlowCATsSimple.Properties( unsigned __int8 *a1, unsigned __int8 *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance UnsupportedFlowCATsSimple.Properties()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance UnsupportedFlowCATsSimple.Properties( uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance UnsupportedFlowCATsSimple.Properties( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::UnsupportedFlowCATsSimple::Properties_optional protocol witness for RawRepresentable.init(rawValue:) in conformance UnsupportedFlowCATsSimple.Properties@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::UnsupportedFlowCATsSimple::Properties_optional *a2@<X8>)
{
  result.int value = UnsupportedFlowCATsSimple.Properties.init(rawValue:)(*a1).value;
  a2->int value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance UnsupportedFlowCATsSimple.Properties()
{
  unsigned __int8 v1 = OUTLINED_FUNCTION_38();
  *uint64_t v0 = UnsupportedFlowCATsSimple.Properties.rawValue.getter(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

uint64_t UnsupportedFlowCATsSimple.deleteCallHistory()()
{
  unsigned __int8 v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + ++*(void *)(v0 + 16) = v1;
  *unsigned __int8 v1 = v0;
  v1[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v2 = OUTLINED_FUNCTION_59_1(33LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

void UnsupportedFlowCATsSimple.DeleteCallHistoryDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of UnsupportedFlowCATsSimple.DeleteCallHistoryDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance UnsupportedFlowCATsSimple.DeleteCallHistoryDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

uint64_t UnsupportedFlowCATsSimple.deleteCallHistoryAsLabels()()
{
  uint64_t v2 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_27_4(v2);
  lazy protocol witness table accessor for type UnsupportedFlowCATsSimple.DeleteCallHistoryDialogIds and conformance UnsupportedFlowCATsSimple.DeleteCallHistoryDialogIds();
  *uint64_t v0 = v1;
  v0[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v3 = OUTLINED_FUNCTION_26_33(33LL);
  return OUTLINED_FUNCTION_1_4(v3, v4, v5, v6, v7, v8);
}

unint64_t lazy protocol witness table accessor for type UnsupportedFlowCATsSimple.DeleteCallHistoryDialogIds and conformance UnsupportedFlowCATsSimple.DeleteCallHistoryDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type UnsupportedFlowCATsSimple.DeleteCallHistoryDialogIds and conformance UnsupportedFlowCATsSimple.DeleteCallHistoryDialogIds;
  if (!lazy protocol witness table cache variable for type UnsupportedFlowCATsSimple.DeleteCallHistoryDialogIds and conformance UnsupportedFlowCATsSimple.DeleteCallHistoryDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for UnsupportedFlowCATsSimple.DeleteCallHistoryDialogIds,  &type metadata for UnsupportedFlowCATsSimple.DeleteCallHistoryDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type UnsupportedFlowCATsSimple.DeleteCallHistoryDialogIds and conformance UnsupportedFlowCATsSimple.DeleteCallHistoryDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type UnsupportedFlowCATsSimple.DeleteCallHistoryDialogIds and conformance UnsupportedFlowCATsSimple.DeleteCallHistoryDialogIds;
  if (!lazy protocol witness table cache variable for type UnsupportedFlowCATsSimple.DeleteCallHistoryDialogIds and conformance UnsupportedFlowCATsSimple.DeleteCallHistoryDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for UnsupportedFlowCATsSimple.DeleteCallHistoryDialogIds,  &type metadata for UnsupportedFlowCATsSimple.DeleteCallHistoryDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type UnsupportedFlowCATsSimple.DeleteCallHistoryDialogIds and conformance UnsupportedFlowCATsSimple.DeleteCallHistoryDialogIds);
  }

  return result;
}

uint64_t UnsupportedFlowCATsSimple.deleteVoicemail()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + ++*(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v2 = OUTLINED_FUNCTION_59_1(31LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

void UnsupportedFlowCATsSimple.DeleteVoicemailDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of UnsupportedFlowCATsSimple.DeleteVoicemailDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance UnsupportedFlowCATsSimple.DeleteVoicemailDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

uint64_t UnsupportedFlowCATsSimple.deleteVoicemailAsLabels()()
{
  uint64_t v2 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_27_4(v2);
  lazy protocol witness table accessor for type UnsupportedFlowCATsSimple.DeleteVoicemailDialogIds and conformance UnsupportedFlowCATsSimple.DeleteVoicemailDialogIds();
  *uint64_t v0 = v1;
  v0[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v3 = OUTLINED_FUNCTION_26_33(31LL);
  return OUTLINED_FUNCTION_1_4(v3, v4, v5, v6, v7, v8);
}

unint64_t lazy protocol witness table accessor for type UnsupportedFlowCATsSimple.DeleteVoicemailDialogIds and conformance UnsupportedFlowCATsSimple.DeleteVoicemailDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type UnsupportedFlowCATsSimple.DeleteVoicemailDialogIds and conformance UnsupportedFlowCATsSimple.DeleteVoicemailDialogIds;
  if (!lazy protocol witness table cache variable for type UnsupportedFlowCATsSimple.DeleteVoicemailDialogIds and conformance UnsupportedFlowCATsSimple.DeleteVoicemailDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for UnsupportedFlowCATsSimple.DeleteVoicemailDialogIds,  &type metadata for UnsupportedFlowCATsSimple.DeleteVoicemailDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type UnsupportedFlowCATsSimple.DeleteVoicemailDialogIds and conformance UnsupportedFlowCATsSimple.DeleteVoicemailDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type UnsupportedFlowCATsSimple.DeleteVoicemailDialogIds and conformance UnsupportedFlowCATsSimple.DeleteVoicemailDialogIds;
  if (!lazy protocol witness table cache variable for type UnsupportedFlowCATsSimple.DeleteVoicemailDialogIds and conformance UnsupportedFlowCATsSimple.DeleteVoicemailDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for UnsupportedFlowCATsSimple.DeleteVoicemailDialogIds,  &type metadata for UnsupportedFlowCATsSimple.DeleteVoicemailDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type UnsupportedFlowCATsSimple.DeleteVoicemailDialogIds and conformance UnsupportedFlowCATsSimple.DeleteVoicemailDialogIds);
  }

  return result;
}

uint64_t UnsupportedFlowCATsSimple.searchCallHistory(supportsAppLaunch:nonDefaultAppName:isVoicemail:device:)( uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  *(void *)(v4 + 40) = OUTLINED_FUNCTION_12_0(v5);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t UnsupportedFlowCATsSimple.searchCallHistory(supportsAppLaunch:nonDefaultAppName:isVoicemail:device:)()
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v5 = OUTLINED_FUNCTION_8_2(v4, 224LL);
  *(void *)(v2 + 48) = v5;
  *(_OWORD *)(v5 + ++*(void *)(v0 + 16) = xmmword_31F580;
  uint64_t v6 = OUTLINED_FUNCTION_32_3(v5, (uint64_t)"supportsAppLaunch");
  *(_BYTE *)(v6 + 48) = v0;
  uint64_t v7 = v6 + 96;
  *(void *)(v6 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = &type metadata for Bool;
  *(void *)(v6 + 80) = v3;
  *(void *)(v6 + 88) = 0x8000000000346FE0LL;
  OUTLINED_FUNCTION_27_6(v6, v8, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v9 = OUTLINED_FUNCTION_26_0();
  uint64_t v10 = OUTLINED_FUNCTION_45_0(v9);
  if (v11)
  {
    OUTLINED_FUNCTION_41_1(v10, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    *(void *)(v5 + 120) = v1;
    uint64_t v12 = OUTLINED_FUNCTION_51();
    OUTLINED_FUNCTION_11_11((uint64_t)v12);
  }

  uint64_t v13 = OUTLINED_FUNCTION_3_126();
  if (v7)
  {
    uint64_t v13 = type metadata accessor for SirikitDeviceState(v13);
  }

  else
  {
    *(void *)(v5 + 200) = 0LL;
    *(void *)(v5 + outlined init with copy of SharedGlobalsProviding(v0 - 168, v0 - 208) = 0LL;
  }

  *(void *)(v5 + 19__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v7;
  *(void *)(v5 + 2++*(void *)(v0 + 16) = v13;
  OUTLINED_FUNCTION_2_3();
  uint64_t v14 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v2 + 56) = v14;
  *uint64_t v14 = v2;
  v14[1] = SuggestionsCATsSimple.phoneCall_StartCallAsLabels(name:hasReference:thirdPartyAppName:);
  uint64_t v15 = OUTLINED_FUNCTION_40(v3 + 16);
  return OUTLINED_FUNCTION_25_5(v15, v16, v17, v18);
}

PhoneCallFlowDelegatePlugin::UnsupportedFlowCATsSimple::SearchCallHistoryDialogIds_optional __swiftcall UnsupportedFlowCATsSimple.SearchCallHistoryDialogIds.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of UnsupportedFlowCATsSimple.SearchCallHistoryDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds.init(rawValue:)(rawValue, v1);
  return result;
}

PhoneCallFlowDelegatePlugin::UnsupportedFlowCATsSimple::SearchCallHistoryDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance UnsupportedFlowCATsSimple.SearchCallHistoryDialogIds@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::UnsupportedFlowCATsSimple::SearchCallHistoryDialogIds_optional *a2@<X8>)
{
  result.int value = UnsupportedFlowCATsSimple.SearchCallHistoryDialogIds.init(rawValue:)(*a1).value;
  a2->int value = result.value;
  return result;
}

uint64_t UnsupportedFlowCATsSimple.searchCallHistoryAsLabels(supportsAppLaunch:nonDefaultAppName:isVoicemail:device:)( uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  *(void *)(v4 + 40) = OUTLINED_FUNCTION_12_0(v5);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t UnsupportedFlowCATsSimple.searchCallHistoryAsLabels(supportsAppLaunch:nonDefaultAppName:isVoicemail:device:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(void))
{
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v15 = OUTLINED_FUNCTION_8_2(v14, 224LL);
  *(void *)(v12 + 48) = v15;
  *(_OWORD *)(v15 + ++*(void *)(v0 + 16) = xmmword_31F580;
  uint64_t v16 = OUTLINED_FUNCTION_32_3(v15, (uint64_t)"supportsAppLaunch");
  *(_BYTE *)(v16 + 48) = v10;
  uint64_t v17 = v16 + 96;
  *(void *)(v16 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = &type metadata for Bool;
  *(void *)(v16 + 80) = v13;
  *(void *)(v16 + 88) = 0x8000000000346FE0LL;
  OUTLINED_FUNCTION_27_6(v16, v18, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v19 = OUTLINED_FUNCTION_26_0();
  uint64_t v20 = OUTLINED_FUNCTION_45_0(v19);
  if (v21)
  {
    OUTLINED_FUNCTION_41_1(v20, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    *(void *)(v15 + 120) = v11;
    uint64_t v22 = OUTLINED_FUNCTION_51();
    OUTLINED_FUNCTION_11_11((uint64_t)v22);
  }

  uint64_t v23 = OUTLINED_FUNCTION_3_126();
  if (v17)
  {
    uint64_t v23 = type metadata accessor for SirikitDeviceState(v23);
  }

  else
  {
    *(void *)(v15 + 200) = 0LL;
    *(void *)(v15 + outlined init with copy of SharedGlobalsProviding(v0 - 168, v0 - 208) = 0LL;
  }

  *(void *)(v15 + 19__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v17;
  *(void *)(v15 + 2++*(void *)(v0 + 16) = v23;
  OUTLINED_FUNCTION_2_3();
  uint64_t v24 = (void *)OUTLINED_FUNCTION_46();
  *(void *)(v12 + 56) = v24;
  lazy protocol witness table accessor for type UnsupportedFlowCATsSimple.SearchCallHistoryDialogIds and conformance UnsupportedFlowCATsSimple.SearchCallHistoryDialogIds();
  *uint64_t v24 = v12;
  v24[1] = SuggestionsCATsSimple.phoneCall_StartCall(name:hasReference:thirdPartyAppName:);
  OUTLINED_FUNCTION_38_2();
  return OUTLINED_FUNCTION_8_13( v25,  v26,  v15,  (uint64_t)&type metadata for UnsupportedFlowCATsSimple.SearchCallHistoryDialogIds,  v27,  a10);
}

unint64_t lazy protocol witness table accessor for type UnsupportedFlowCATsSimple.SearchCallHistoryDialogIds and conformance UnsupportedFlowCATsSimple.SearchCallHistoryDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type UnsupportedFlowCATsSimple.SearchCallHistoryDialogIds and conformance UnsupportedFlowCATsSimple.SearchCallHistoryDialogIds;
  if (!lazy protocol witness table cache variable for type UnsupportedFlowCATsSimple.SearchCallHistoryDialogIds and conformance UnsupportedFlowCATsSimple.SearchCallHistoryDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for UnsupportedFlowCATsSimple.SearchCallHistoryDialogIds,  &type metadata for UnsupportedFlowCATsSimple.SearchCallHistoryDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type UnsupportedFlowCATsSimple.SearchCallHistoryDialogIds and conformance UnsupportedFlowCATsSimple.SearchCallHistoryDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type UnsupportedFlowCATsSimple.SearchCallHistoryDialogIds and conformance UnsupportedFlowCATsSimple.SearchCallHistoryDialogIds;
  if (!lazy protocol witness table cache variable for type UnsupportedFlowCATsSimple.SearchCallHistoryDialogIds and conformance UnsupportedFlowCATsSimple.SearchCallHistoryDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for UnsupportedFlowCATsSimple.SearchCallHistoryDialogIds,  &type metadata for UnsupportedFlowCATsSimple.SearchCallHistoryDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type UnsupportedFlowCATsSimple.SearchCallHistoryDialogIds and conformance UnsupportedFlowCATsSimple.SearchCallHistoryDialogIds);
  }

  return result;
}

uint64_t UnsupportedFlowCATsSimple.startCallEmergency()()
{
  Swift::OpaquePointer v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + ++*(void *)(v0 + 16) = v1;
  *Swift::OpaquePointer v1 = v0;
  v1[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v2 = OUTLINED_FUNCTION_59_1(34LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

void UnsupportedFlowCATsSimple.StartCallEmergencyDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of UnsupportedFlowCATsSimple.StartCallEmergencyDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance UnsupportedFlowCATsSimple.StartCallEmergencyDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

uint64_t UnsupportedFlowCATsSimple.startCallEmergencyAsLabels()()
{
  uint64_t v2 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_27_4(v2);
  lazy protocol witness table accessor for type UnsupportedFlowCATsSimple.StartCallEmergencyDialogIds and conformance UnsupportedFlowCATsSimple.StartCallEmergencyDialogIds();
  *uint64_t v0 = v1;
  v0[1] = SuggestionsCATsSimple.phoneCall_StartGFTCall();
  OUTLINED_FUNCTION_38_2();
  unint64_t v3 = OUTLINED_FUNCTION_26_33(34LL);
  return OUTLINED_FUNCTION_1_4(v3, v4, v5, v6, v7, v8);
}

unint64_t lazy protocol witness table accessor for type UnsupportedFlowCATsSimple.StartCallEmergencyDialogIds and conformance UnsupportedFlowCATsSimple.StartCallEmergencyDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type UnsupportedFlowCATsSimple.StartCallEmergencyDialogIds and conformance UnsupportedFlowCATsSimple.StartCallEmergencyDialogIds;
  if (!lazy protocol witness table cache variable for type UnsupportedFlowCATsSimple.StartCallEmergencyDialogIds and conformance UnsupportedFlowCATsSimple.StartCallEmergencyDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for UnsupportedFlowCATsSimple.StartCallEmergencyDialogIds,  &type metadata for UnsupportedFlowCATsSimple.StartCallEmergencyDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type UnsupportedFlowCATsSimple.StartCallEmergencyDialogIds and conformance UnsupportedFlowCATsSimple.StartCallEmergencyDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type UnsupportedFlowCATsSimple.StartCallEmergencyDialogIds and conformance UnsupportedFlowCATsSimple.StartCallEmergencyDialogIds;
  if (!lazy protocol witness table cache variable for type UnsupportedFlowCATsSimple.StartCallEmergencyDialogIds and conformance UnsupportedFlowCATsSimple.StartCallEmergencyDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for UnsupportedFlowCATsSimple.StartCallEmergencyDialogIds,  &type metadata for UnsupportedFlowCATsSimple.StartCallEmergencyDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type UnsupportedFlowCATsSimple.StartCallEmergencyDialogIds and conformance UnsupportedFlowCATsSimple.StartCallEmergencyDialogIds);
  }

  return result;
}

uint64_t UnsupportedFlowCATsSimple.startCallEmergencyInRetailStore()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + ++*(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v2 = OUTLINED_FUNCTION_59_1(47LL);
  return OUTLINED_FUNCTION_4_2(v2, v3, v4, v5);
}

void UnsupportedFlowCATsSimple.StartCallEmergencyInRetailStoreDialogIds.init(rawValue:)(Swift::String a1)
{
  v1._rawValue = &outlined read-only object #0 of UnsupportedFlowCATsSimple.StartCallEmergencyInRetailStoreDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ConfirmParticipantDialogIds.init(rawValue:)(a1, v1);
}

void protocol witness for RawRepresentable.init(rawValue:) in conformance UnsupportedFlowCATsSimple.StartCallEmergencyInRetailStoreDialogIds( Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = v3 != 0;
}

uint64_t UnsupportedFlowCATsSimple.startCallEmergencyInRetailStoreAsLabels()()
{
  uint64_t v2 = OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  OUTLINED_FUNCTION_27_4(v2);
  lazy protocol witness table accessor for type UnsupportedFlowCATsSimple.StartCallEmergencyInRetailStoreDialogIds and conformance UnsupportedFlowCATsSimple.StartCallEmergencyInRetailStoreDialogIds();
  *uint64_t v0 = v1;
  v0[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  OUTLINED_FUNCTION_38_2();
  unint64_t v3 = OUTLINED_FUNCTION_26_33(47LL);
  return OUTLINED_FUNCTION_1_4(v3, v4, v5, v6, v7, v8);
}

unint64_t lazy protocol witness table accessor for type UnsupportedFlowCATsSimple.StartCallEmergencyInRetailStoreDialogIds and conformance UnsupportedFlowCATsSimple.StartCallEmergencyInRetailStoreDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type UnsupportedFlowCATsSimple.StartCallEmergencyInRetailStoreDialogIds and conformance UnsupportedFlowCATsSimple.StartCallEmergencyInRetailStoreDialogIds;
  if (!lazy protocol witness table cache variable for type UnsupportedFlowCATsSimple.StartCallEmergencyInRetailStoreDialogIds and conformance UnsupportedFlowCATsSimple.StartCallEmergencyInRetailStoreDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for UnsupportedFlowCATsSimple.StartCallEmergencyInRetailStoreDialogIds,  &type metadata for UnsupportedFlowCATsSimple.StartCallEmergencyInRetailStoreDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type UnsupportedFlowCATsSimple.StartCallEmergencyInRetailStoreDialogIds and conformance UnsupportedFlowCATsSimple.StartCallEmergencyInRetailStoreDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type UnsupportedFlowCATsSimple.StartCallEmergencyInRetailStoreDialogIds and conformance UnsupportedFlowCATsSimple.StartCallEmergencyInRetailStoreDialogIds;
  if (!lazy protocol witness table cache variable for type UnsupportedFlowCATsSimple.StartCallEmergencyInRetailStoreDialogIds and conformance UnsupportedFlowCATsSimple.StartCallEmergencyInRetailStoreDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for UnsupportedFlowCATsSimple.StartCallEmergencyInRetailStoreDialogIds,  &type metadata for UnsupportedFlowCATsSimple.StartCallEmergencyInRetailStoreDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type UnsupportedFlowCATsSimple.StartCallEmergencyInRetailStoreDialogIds and conformance UnsupportedFlowCATsSimple.StartCallEmergencyInRetailStoreDialogIds);
  }

  return result;
}

uint64_t UnsupportedFlowCATsSimple.unsupportedEmergencyContactCall(thirdPartyAppName:isFaceTime:)( uint64_t a1, char a2)
{
  *(_BYTE *)(v3 + 64) = a2;
  *(void *)(v3 + ++*(void *)(v0 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  *(void *)(v3 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = OUTLINED_FUNCTION_12_0(v4);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t UnsupportedFlowCATsSimple.unsupportedEmergencyContactCall(thirdPartyAppName:isFaceTime:)()
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 128LL);
  *(void *)(v1 + 40) = v4;
  *(_OWORD *)(v4 + ++*(void *)(v0 + 16) = xmmword_31D880;
  uint64_t v5 = OUTLINED_FUNCTION_32_3(v4, (uint64_t)"thirdPartyAppName");
  OUTLINED_FUNCTION_27_6(v5, v6, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v7 = OUTLINED_FUNCTION_26_0();
  uint64_t v8 = OUTLINED_FUNCTION_3_22(v7);
  if (v9)
  {
    OUTLINED_FUNCTION_41_1(v8, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    *(void *)(v4 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v0;
    char v10 = OUTLINED_FUNCTION_51();
    OUTLINED_FUNCTION_11_11((uint64_t)v10);
  }

  OUTLINED_FUNCTION_24_57();
  *(void *)(v4 + 120) = &type metadata for Bool;
  *(_BYTE *)(v4 + 96) = v11;
  uint64_t v12 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v1 + 48) = v12;
  *uint64_t v12 = v1;
  v12[1] = SuggestionsCATsSimple.phoneCall_StartFTCall(name:hasReference:);
  uint64_t v13 = OUTLINED_FUNCTION_40(v2 + 30);
  return OUTLINED_FUNCTION_25_5(v13, v14, v15, v16);
}

PhoneCallFlowDelegatePlugin::UnsupportedFlowCATsSimple::UnsupportedEmergencyContactCallDialogIds_optional __swiftcall UnsupportedFlowCATsSimple.UnsupportedEmergencyContactCallDialogIds.init(rawValue:)( Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  _findStringSwitchCase(cases:string:)( (Swift::OpaquePointer)&outlined read-only object #0 of UnsupportedFlowCATsSimple.UnsupportedEmergencyContactCallDialogIds.init(rawValue:),  v2);
  OUTLINED_FUNCTION_27_2();
  OUTLINED_FUNCTION_2();
  return result;
}

PhoneCallFlowDelegatePlugin::UnsupportedFlowCATsSimple::UnsupportedEmergencyContactCallDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance UnsupportedFlowCATsSimple.UnsupportedEmergencyContactCallDialogIds@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::UnsupportedFlowCATsSimple::UnsupportedEmergencyContactCallDialogIds_optional *a2@<X8>)
{
  result.int value = UnsupportedFlowCATsSimple.UnsupportedEmergencyContactCallDialogIds.init(rawValue:)(*a1).value;
  a2->int value = result.value;
  return result;
}

uint64_t UnsupportedFlowCATsSimple.unsupportedEmergencyContactCallAsLabels(thirdPartyAppName:isFaceTime:)( uint64_t a1, char a2)
{
  *(_BYTE *)(v3 + 64) = a2;
  *(void *)(v3 + ++*(void *)(v0 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  *(void *)(v3 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = OUTLINED_FUNCTION_12_0(v4);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t UnsupportedFlowCATsSimple.unsupportedEmergencyContactCallAsLabels(thirdPartyAppName:isFaceTime:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(void))
{
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v13 = OUTLINED_FUNCTION_8_2(v12, 128LL);
  *(void *)(v11 + 40) = v13;
  *(_OWORD *)(v13 + ++*(void *)(v0 + 16) = xmmword_31D880;
  uint64_t v14 = OUTLINED_FUNCTION_32_3(v13, (uint64_t)"thirdPartyAppName");
  OUTLINED_FUNCTION_27_6(v14, v15, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v16 = OUTLINED_FUNCTION_26_0();
  uint64_t v17 = OUTLINED_FUNCTION_3_22(v16);
  if (v18)
  {
    OUTLINED_FUNCTION_41_1(v17, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_57_2();
  }

  else
  {
    *(void *)(v13 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v10;
    uint64_t v19 = OUTLINED_FUNCTION_51();
    OUTLINED_FUNCTION_11_11((uint64_t)v19);
  }

  OUTLINED_FUNCTION_24_57();
  *(void *)(v13 + 120) = &type metadata for Bool;
  *(_BYTE *)(v13 + 96) = v20;
  char v21 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.executeAsLabels<A>(catId:parameters:));
  *(void *)(v11 + 48) = v21;
  lazy protocol witness table accessor for type UnsupportedFlowCATsSimple.UnsupportedEmergencyContactCallDialogIds and conformance UnsupportedFlowCATsSimple.UnsupportedEmergencyContactCallDialogIds();
  *char v21 = v11;
  v21[1] = SuggestionsCATsSimple.phoneCall_StartFTCallAsLabels(name:hasReference:);
  OUTLINED_FUNCTION_38_2();
  return OUTLINED_FUNCTION_8_13( v22,  v23,  v13,  (uint64_t)&type metadata for UnsupportedFlowCATsSimple.UnsupportedEmergencyContactCallDialogIds,  v24,  a10);
}

unint64_t lazy protocol witness table accessor for type UnsupportedFlowCATsSimple.UnsupportedEmergencyContactCallDialogIds and conformance UnsupportedFlowCATsSimple.UnsupportedEmergencyContactCallDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type UnsupportedFlowCATsSimple.UnsupportedEmergencyContactCallDialogIds and conformance UnsupportedFlowCATsSimple.UnsupportedEmergencyContactCallDialogIds;
  if (!lazy protocol witness table cache variable for type UnsupportedFlowCATsSimple.UnsupportedEmergencyContactCallDialogIds and conformance UnsupportedFlowCATsSimple.UnsupportedEmergencyContactCallDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for UnsupportedFlowCATsSimple.UnsupportedEmergencyContactCallDialogIds,  &type metadata for UnsupportedFlowCATsSimple.UnsupportedEmergencyContactCallDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type UnsupportedFlowCATsSimple.UnsupportedEmergencyContactCallDialogIds and conformance UnsupportedFlowCATsSimple.UnsupportedEmergencyContactCallDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type UnsupportedFlowCATsSimple.UnsupportedEmergencyContactCallDialogIds and conformance UnsupportedFlowCATsSimple.UnsupportedEmergencyContactCallDialogIds;
  if (!lazy protocol witness table cache variable for type UnsupportedFlowCATsSimple.UnsupportedEmergencyContactCallDialogIds and conformance UnsupportedFlowCATsSimple.UnsupportedEmergencyContactCallDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for UnsupportedFlowCATsSimple.UnsupportedEmergencyContactCallDialogIds,  &type metadata for UnsupportedFlowCATsSimple.UnsupportedEmergencyContactCallDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type UnsupportedFlowCATsSimple.UnsupportedEmergencyContactCallDialogIds and conformance UnsupportedFlowCATsSimple.UnsupportedEmergencyContactCallDialogIds);
  }

  return result;
}

uint64_t UnsupportedFlowCATsSimple.unsupportedOnDeviceType(device:)(uint64_t a1)
{
  *(void *)(v2 + ++*(void *)(v0 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)UnsupportedFlowCATsSimple.unsupportedOnDeviceType(device:));
}

uint64_t UnsupportedFlowCATsSimple.unsupportedOnDeviceType(device:)()
{
  unint64_t v1 = v0[2];
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_8_2(v2, 80LL);
  v0[4] = v3;
  uint64_t v4 = OUTLINED_FUNCTION_35_0(v3, (__n128)xmmword_31D870);
  if (v1)
  {
    uint64_t v4 = type metadata accessor for SirikitDeviceState(v4);
  }

  else
  {
    v3[3].n128_u64[1] = 0LL;
    v3[4].n128_u64[0] = 0LL;
  }

  v3[3].n128_u64[0] = v1;
  v3[4].n128_u64[1] = v4;
  OUTLINED_FUNCTION_2_3();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_46();
  v0[5] = v5;
  void *v5 = v0;
  v5[1] = OngoingCallCATs.informHangUpForEmergency(currentCall:);
  OUTLINED_FUNCTION_38_2();
  return v7(0xD000000000000027LL);
}

PhoneCallFlowDelegatePlugin::UnsupportedFlowCATsSimple::UnsupportedOnDeviceTypeDialogIds_optional __swiftcall UnsupportedFlowCATsSimple.UnsupportedOnDeviceTypeDialogIds.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of UnsupportedFlowCATsSimple.UnsupportedOnDeviceTypeDialogIds.init(rawValue:);
  AddCallParticipantCATsSimple.ErrorRestrictedDeviceByRegionDialogIds.init(rawValue:)(rawValue, v1);
  return result;
}

void UnsupportedFlowCATsSimple.UnsupportedOnDeviceTypeDialogIds.rawValue.getter()
{
}

void protocol witness for static Equatable.== infix(_:_:) in conformance UnsupportedFlowCATsSimple.UnsupportedOnDeviceTypeDialogIds()
{
  specialized == infix<A>(_:_:)();
}

void protocol witness for Hashable.hashValue.getter in conformance UnsupportedFlowCATsSimple.UnsupportedOnDeviceTypeDialogIds()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance UnsupportedFlowCATsSimple.UnsupportedOnDeviceTypeDialogIds( uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance UnsupportedFlowCATsSimple.UnsupportedOnDeviceTypeDialogIds( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::UnsupportedFlowCATsSimple::UnsupportedOnDeviceTypeDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance UnsupportedFlowCATsSimple.UnsupportedOnDeviceTypeDialogIds@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::UnsupportedFlowCATsSimple::UnsupportedOnDeviceTypeDialogIds_optional *a2@<X8>)
{
  result.int value = UnsupportedFlowCATsSimple.UnsupportedOnDeviceTypeDialogIds.init(rawValue:)(*a1).value;
  a2->int value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance UnsupportedFlowCATsSimple.UnsupportedOnDeviceTypeDialogIds()
{
  *uint64_t v0 = v1;
  v0[1] = 0xE700000000000000LL;
  OUTLINED_FUNCTION_2();
}

uint64_t UnsupportedFlowCATsSimple.unsupportedOnDeviceTypeAsLabels(device:)(uint64_t a1)
{
  *(void *)(v2 + ++*(void *)(v0 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)UnsupportedFlowCATsSimple.unsupportedOnDeviceTypeAsLabels(device:));
}

uint64_t UnsupportedFlowCATsSimple.unsupportedOnDeviceTypeAsLabels(device:)()
{
  unint64_t v1 = v0[2];
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = (__n128 *)OUTLINED_FUNCTION_8_2(v2, 80LL);
  v0[4] = v3;
  uint64_t v4 = OUTLINED_FUNCTION_35_0(v3, (__n128)xmmword_31D870);
  if (v1)
  {
    uint64_t v4 = type metadata accessor for SirikitDeviceState(v4);
  }

  else
  {
    v3[3].n128_u64[1] = 0LL;
    v3[4].n128_u64[0] = 0LL;
  }

  v3[3].n128_u64[0] = v1;
  v3[4].n128_u64[1] = v4;
  OUTLINED_FUNCTION_2_3();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_46();
  v0[5] = v5;
  lazy protocol witness table accessor for type UnsupportedFlowCATsSimple.UnsupportedOnDeviceTypeDialogIds and conformance UnsupportedFlowCATsSimple.UnsupportedOnDeviceTypeDialogIds();
  void *v5 = v0;
  v5[1] = OngoingCallCATs.confirmHangUpForForeignEmergency(currentCall:);
  OUTLINED_FUNCTION_38_2();
  return v7(0xD000000000000027LL);
}

unint64_t lazy protocol witness table accessor for type UnsupportedFlowCATsSimple.UnsupportedOnDeviceTypeDialogIds and conformance UnsupportedFlowCATsSimple.UnsupportedOnDeviceTypeDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type UnsupportedFlowCATsSimple.UnsupportedOnDeviceTypeDialogIds and conformance UnsupportedFlowCATsSimple.UnsupportedOnDeviceTypeDialogIds;
  if (!lazy protocol witness table cache variable for type UnsupportedFlowCATsSimple.UnsupportedOnDeviceTypeDialogIds and conformance UnsupportedFlowCATsSimple.UnsupportedOnDeviceTypeDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for UnsupportedFlowCATsSimple.UnsupportedOnDeviceTypeDialogIds,  &type metadata for UnsupportedFlowCATsSimple.UnsupportedOnDeviceTypeDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type UnsupportedFlowCATsSimple.UnsupportedOnDeviceTypeDialogIds and conformance UnsupportedFlowCATsSimple.UnsupportedOnDeviceTypeDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type UnsupportedFlowCATsSimple.UnsupportedOnDeviceTypeDialogIds and conformance UnsupportedFlowCATsSimple.UnsupportedOnDeviceTypeDialogIds;
  if (!lazy protocol witness table cache variable for type UnsupportedFlowCATsSimple.UnsupportedOnDeviceTypeDialogIds and conformance UnsupportedFlowCATsSimple.UnsupportedOnDeviceTypeDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for UnsupportedFlowCATsSimple.UnsupportedOnDeviceTypeDialogIds,  &type metadata for UnsupportedFlowCATsSimple.UnsupportedOnDeviceTypeDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type UnsupportedFlowCATsSimple.UnsupportedOnDeviceTypeDialogIds and conformance UnsupportedFlowCATsSimple.UnsupportedOnDeviceTypeDialogIds);
  }

  return result;
}

unint64_t lazy protocol witness table accessor for type UnsupportedFlowCATsSimple.Properties and conformance UnsupportedFlowCATsSimple.Properties()
{
  unint64_t result = lazy protocol witness table cache variable for type UnsupportedFlowCATsSimple.Properties and conformance UnsupportedFlowCATsSimple.Properties;
  if (!lazy protocol witness table cache variable for type UnsupportedFlowCATsSimple.Properties and conformance UnsupportedFlowCATsSimple.Properties)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for UnsupportedFlowCATsSimple.Properties,  &type metadata for UnsupportedFlowCATsSimple.Properties);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type UnsupportedFlowCATsSimple.Properties and conformance UnsupportedFlowCATsSimple.Properties);
  }

  return result;
}

uint64_t type metadata accessor for UnsupportedFlowCATsSimple(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for UnsupportedFlowCATsSimple;
  if (!type metadata singleton initialization cache for UnsupportedFlowCATsSimple) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for UnsupportedFlowCATsSimple);
  }
  return result;
}

uint64_t type metadata completion function for UnsupportedFlowCATsSimple(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL, 0LL, v2, a1 + class metadata base offset for UnsupportedFlowCATsSimple);
}

uint64_t ObjC metadata update function for UnsupportedFlowCATsSimple()
{
  return type metadata accessor for UnsupportedFlowCATsSimple(0LL);
}

uint64_t storeEnumTagSinglePayload for UnsupportedFlowCATsSimple.Properties( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    LODWORD(OUTLINED_FUNCTION_5_18(v2, v3, v4) = 1;
  }
  else {
    LODWORD(OUTLINED_FUNCTION_5_18(v2, v3, v4) = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xF9) {
    return ((uint64_t (*)(void))((char *)&loc_2E16B0 + 4 * byte_33F55C[v4]))();
  }
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_2E16E4 + 4 * byte_33F557[v4]))();
}

uint64_t sub_2E16E4(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2E16EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x2E16F4LL);
  }
  return result;
}

uint64_t sub_2E1700(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x2E1708LL);
  }
  *(_BYTE *)uint64_t result = a2 + 6;
  return result;
}

uint64_t sub_2E170C(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2E1714(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for UnsupportedFlowCATsSimple.Properties()
{
}

void type metadata accessor for UnsupportedFlowCATsSimple.DeleteCallHistoryDialogIds()
{
}

void type metadata accessor for UnsupportedFlowCATsSimple.DeleteVoicemailDialogIds()
{
}

void type metadata accessor for UnsupportedFlowCATsSimple.SearchCallHistoryDialogIds()
{
}

void type metadata accessor for UnsupportedFlowCATsSimple.StartCallEmergencyDialogIds()
{
}

uint64_t storeEnumTagSinglePayload for UnsupportedFlowCATsSimple.DeleteCallHistoryDialogIds( uint64_t a1, int a2, int a3)
{
  else {
    int v3 = 2;
  }
  else {
    LODWORD(OUTLINED_FUNCTION_5_18(v2, v3, v4) = v3;
  }
  if (a3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2) {
    return ((uint64_t (*)(void))((char *)sub_2E17A4 + 4 * byte_33F561[v4]))();
  }
  else {
    return ((uint64_t (*)(void))((char *)sub_2E17C4 + 4 * byte_33F566[v4]))();
  }
}

_BYTE *sub_2E17A4(_BYTE *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

_BYTE *sub_2E17C4(_BYTE *result)
{
  *uint64_t result = 0;
  return result;
}

_DWORD *sub_2E17CC(_DWORD *result, int a2)
{
  *uint64_t result = a2;
  return result;
}

_WORD *sub_2E17D4(_WORD *result, __int16 a2)
{
  *uint64_t result = a2;
  return result;
}

_WORD *sub_2E17DC(_WORD *result)
{
  *uint64_t result = 0;
  return result;
}

_DWORD *sub_2E17E4(_DWORD *result)
{
  *uint64_t result = 0;
  return result;
}

void type metadata accessor for UnsupportedFlowCATsSimple.StartCallEmergencyInRetailStoreDialogIds()
{
}

uint64_t storeEnumTagSinglePayload for UnsupportedFlowCATsSimple.UnsupportedEmergencyContactCallDialogIds( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    LODWORD(OUTLINED_FUNCTION_5_18(v2, v3, v4) = 1;
  }
  else {
    LODWORD(OUTLINED_FUNCTION_5_18(v2, v3, v4) = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFD) {
    return ((uint64_t (*)(void))((char *)&loc_2E1848 + 4 * byte_33F570[v4]))();
  }
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2E187C + 4 * byte_33F56B[v4]))();
}

uint64_t sub_2E187C(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2E1884(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x2E188CLL);
  }
  return result;
}

uint64_t sub_2E1898(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x2E18A0LL);
  }
  *(_BYTE *)uint64_t result = a2 + 2;
  return result;
}

uint64_t sub_2E18A4(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2E18AC(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for UnsupportedFlowCATsSimple.UnsupportedEmergencyContactCallDialogIds()
{
}

uint64_t storeEnumTagSinglePayload for UnsupportedFlowCATsSimple.SearchCallHistoryDialogIds( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(OUTLINED_FUNCTION_5_18(v2, v3, v4) = 1;
  }
  else {
    LODWORD(OUTLINED_FUNCTION_5_18(v2, v3, v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_2E1910 + 4 * byte_33F57A[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2E1944 + 4 * byte_33F575[v4]))();
}

uint64_t sub_2E1944(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2E194C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x2E1954LL);
  }
  return result;
}

uint64_t sub_2E1960(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x2E1968LL);
  }
  *(_BYTE *)uint64_t result = a2 + 1;
  return result;
}

uint64_t sub_2E196C(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2E1974(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for UnsupportedFlowCATsSimple.UnsupportedOnDeviceTypeDialogIds()
{
}

uint64_t OUTLINED_FUNCTION_3_126()
{
  char v3 = *(_BYTE *)(v1 + 73);
  *(void *)(v2 + outlined init with copy of SharedGlobalsProviding(v0, v1 - 128) = 0x6D6563696F567369LL;
  *(void *)(v2 + 136) = 0xEB000000006C6961LL;
  *(_BYTE *)(v2 + 144) = v3;
  *(void *)(v2 + 168) = v0;
  *(void *)(v2 + 176) = 0x656369766564LL;
  *(void *)(v2 + 184) = 0xE600000000000000LL;
  return 0LL;
}

void OUTLINED_FUNCTION_24_57()
{
  *(void *)(v0 + 80) = 0x6954656361467369LL;
  *(void *)(v0 + 88) = 0xEA0000000000656DLL;
}

  ;
}

uint64_t OUTLINED_FUNCTION_54_28(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  *(void *)(v5 + 24) = a4;
  *(void *)(v5 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v4;
  *(_BYTE *)(v5 + 73) = a3;
  *(void *)(v5 + ++*(void *)(v0 + 16) = a2;
  *(_BYTE *)(v5 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = result;
  return result;
}

PhoneCallFlowDelegatePlugin::SearchCallHistoryCATPatternsIdentifiers_optional __swiftcall SearchCallHistoryCATPatternsIdentifiers.init(rawValue:)( Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)( (Swift::OpaquePointer)&outlined read-only object #0 of SearchCallHistoryCATPatternsIdentifiers.init(rawValue:),  v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 0xF) {
    return (PhoneCallFlowDelegatePlugin::SearchCallHistoryCATPatternsIdentifiers_optional)15;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::SearchCallHistoryCATPatternsIdentifiers_optional)v3;
  }
}

uint64_t SearchCallHistoryCATPatternsIdentifiers.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_2E1AA8 + 4
                                                                                          * a7_0[a1]))( 0xD00000000000002CLL,  0x8000000000344360LL);
}

uint64_t sub_2E1AA8(uint64_t a1)
{
  return a1 - 2;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance SearchCallHistoryCATPatternsIdentifiers( unsigned __int8 *a1, unsigned __int8 *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance SearchCallHistoryCATPatternsIdentifiers()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance SearchCallHistoryCATPatternsIdentifiers( uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance SearchCallHistoryCATPatternsIdentifiers( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::SearchCallHistoryCATPatternsIdentifiers_optional protocol witness for RawRepresentable.init(rawValue:) in conformance SearchCallHistoryCATPatternsIdentifiers@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::SearchCallHistoryCATPatternsIdentifiers_optional *a2@<X8>)
{
  result.int value = SearchCallHistoryCATPatternsIdentifiers.init(rawValue:)(*a1).value;
  a2->int value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance SearchCallHistoryCATPatternsIdentifiers( uint64_t *a1@<X8>)
{
  *a1 = SearchCallHistoryCATPatternsIdentifiers.rawValue.getter(*v1);
  a1[1] = v3;
  OUTLINED_FUNCTION_2();
}

void SearchCallHistoryOfferToReadMoreCallRecordsParameters.asKeyValuePairs()(char a1)
{
}

void SearchCallHistoryReadCannotFindCallRecordParameters.appName.getter()
{
  uint64_t v0 = OUTLINED_FUNCTION_101_1();
  outlined init with copy of TransformationResult?( v0,  v1,  &demangling cache variable for type metadata for SpeakableString?);
}

uint64_t SearchCallHistoryReadCannotFindCallRecordParameters.callRecordCount.getter()
{
  uint64_t v0 = type metadata accessor for SearchCallHistoryReadCannotFindCallRecordParameters(0LL);
  return OUTLINED_FUNCTION_75_22(*(int *)(v0 + 20));
}

uint64_t type metadata accessor for SearchCallHistoryReadCannotFindCallRecordParameters(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State( a1,  (uint64_t *)&type metadata singleton initialization cache for SearchCallHistoryReadCannotFindCallRecordParameters,  (uint64_t)&nominal type descriptor for SearchCallHistoryReadCannotFindCallRecordParameters);
}

void SearchCallHistoryReadCannotFindCallRecordParameters.callRecordCount.setter()
{
  uint64_t v0 = OUTLINED_FUNCTION_125_10();
  OUTLINED_FUNCTION_25_44(*(int *)(v0 + 20));
  OUTLINED_FUNCTION_6();
}

Swift::Void (__swiftcall *SearchCallHistoryReadCannotFindCallRecordParameters.callRecordCount.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t SearchCallHistoryReadCannotFindCallRecordParameters.device.getter()
{
  return StartCallIntentConfirmationWithRestrictedContactsParameters.intent.getter(type metadata accessor for SearchCallHistoryReadCannotFindCallRecordParameters);
}

void SearchCallHistoryReadCannotFindCallRecordParameters.device.setter(uint64_t a1)
{
}

Swift::Void (__swiftcall *SearchCallHistoryReadCannotFindCallRecordParameters.device.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t SearchCallHistoryReadCannotFindCallRecordParameters.intent.getter()
{
  return swift_retain();
}

void SearchCallHistoryReadCannotFindCallRecordParameters.intent.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(OUTLINED_FUNCTION_81_23() + 28);
  OUTLINED_FUNCTION_120_2();
  *(void *)(v1 + OUTLINED_FUNCTION_2_18(v2, v3) = a1;
  OUTLINED_FUNCTION_6();
}

Swift::Void (__swiftcall *SearchCallHistoryReadCannotFindCallRecordParameters.intent.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t SearchCallHistoryReadCannotFindCallRecordParameters.isFirstPartyApp.getter()
{
  uint64_t v0 = OUTLINED_FUNCTION_81_23();
  return OUTLINED_FUNCTION_99_13(v0);
}

uint64_t SearchCallHistoryReadCannotFindCallRecordParameters.isShowingMissedCall.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(OUTLINED_FUNCTION_81_23() + 36));
}

uint64_t SearchCallHistoryReadCannotFindCallRecordParameters.totalCallRecordCount.getter()
{
  uint64_t v0 = type metadata accessor for SearchCallHistoryReadCannotFindCallRecordParameters(0LL);
  return OUTLINED_FUNCTION_75_22(*(int *)(v0 + 40));
}

void SearchCallHistoryReadCannotFindCallRecordParameters.totalCallRecordCount.setter()
{
  uint64_t v0 = OUTLINED_FUNCTION_125_10();
  OUTLINED_FUNCTION_25_44(*(int *)(v0 + 40));
  OUTLINED_FUNCTION_6();
}

Swift::Void (__swiftcall *SearchCallHistoryReadCannotFindCallRecordParameters.totalCallRecordCount.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

void SearchCallHistoryReadCannotFindCallRecordParameters.asKeyValuePairs()()
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_8_2(v2, 368LL);
  *(_OWORD *)(v3 + ++*(void *)(v0 + 16) = xmmword_32A100;
  *(void *)(v3 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0x656D614E707061LL;
  *(void *)(v3 + 40) = 0xE700000000000000LL;
  outlined init with copy of TransformationResult?( v0,  v1,  &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_26_0();
  uint64_t v4 = OUTLINED_FUNCTION_34_5(v1);
  if (v5)
  {
    OUTLINED_FUNCTION_150(v4, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)(v3 + 48) = 0u;
    *(_OWORD *)(v3 + 64) = 0u;
  }

  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_154_9();
    OUTLINED_FUNCTION_61_5((uint64_t)v6);
  }

  *(void *)(v3 + 80) = 0x6F6365526C6C6163LL;
  *(void *)(v3 + 88) = 0xEF746E756F436472LL;
  uint64_t v7 = (int *)OUTLINED_FUNCTION_81_23();
  OUTLINED_FUNCTION_80_18();
  if ((v9 & 1) != 0)
  {
    uint64_t v10 = 0LL;
    *(void *)(v3 + outlined init with copy of SharedGlobalsProviding(v0, v1 - 104) = 0LL;
    *(void *)(v3 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
    uint64_t v11 = 0LL;
  }

  else
  {
    uint64_t v11 = *v8;
    uint64_t v10 = &type metadata for Double;
  }

  *(void *)(v3 + 96) = v11;
  *(void *)(v3 + 120) = v10;
  *(void *)(v3 + outlined init with copy of SharedGlobalsProviding(v0, v1 - 128) = 0x656369766564LL;
  *(void *)(v3 + 136) = 0xE600000000000000LL;
  uint64_t v12 = *(void *)(v0 + v7[6]);
  if (v12)
  {
    OUTLINED_FUNCTION_50_6();
    uint64_t v13 = v12;
  }

  else
  {
    uint64_t v13 = 0LL;
    *(void *)(v3 + 15__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
    *(void *)(v3 + 160) = 0LL;
  }

  *(void *)(v3 + 144) = v13;
  OUTLINED_FUNCTION_98_7();
  *(void *)(v3 + 168) = v14;
  *(void *)(v3 + 176) = v15;
  *(void *)(v3 + 184) = 0xE600000000000000LL;
  uint64_t v16 = *(void *)(v0 + v7[7]);
  if (v16)
  {
    ObjC metadata update function for PhoneSearchCallHistoryIntent();
    uint64_t v17 = v16;
  }

  else
  {
    OUTLINED_FUNCTION_54_0();
    *(void *)(v3 + 200) = 0LL;
    *(void *)(v3 + outlined init with copy of SharedGlobalsProviding(v0 - 168, v0 - 208) = 0LL;
  }

  *(void *)(v3 + 19__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v17;
  OUTLINED_FUNCTION_207();
  *(void *)(v3 + 2++*(void *)(v0 + 16) = v18;
  *(void *)(v3 + 224) = v19;
  OUTLINED_FUNCTION_192();
  *(void *)(v3 + 23__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v20;
  *(_BYTE *)(v3 + 240) = *(_BYTE *)(v0 + v7[8]);
  *(void *)(v3 + 264) = &type metadata for Bool;
  *(void *)(v3 + 27__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xD000000000000013LL;
  *(void *)(v3 + 280) = 0x800000000034C7C0LL;
  *(_BYTE *)(v3 + 288) = *(_BYTE *)(v0 + v7[9]);
  *(void *)(v3 + 31__swift_destroy_boxed_opaque_existential_1(v0 + 2) = &type metadata for Bool;
  *(void *)(v3 + 320) = 0xD000000000000014LL;
  OUTLINED_FUNCTION_152_8((uint64_t)"totalCallRecordCount");
  OUTLINED_FUNCTION_80_18();
  if ((v22 & 1) != 0)
  {
    uint64_t v23 = 0LL;
    *(void *)(v3 + 344) = 0LL;
    *(void *)(v3 + 35__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
    uint64_t v24 = 0LL;
  }

  else
  {
    uint64_t v24 = *v21;
    uint64_t v23 = &type metadata for Double;
  }

  *(void *)(v3 + 336) = v24;
  *(void *)(v3 + 360) = v23;
  OUTLINED_FUNCTION_95_1();
  OUTLINED_FUNCTION_29_3();
  OUTLINED_FUNCTION_158_7();
  OUTLINED_FUNCTION_16();
}

void SearchCallHistoryReadCannotFindCallRecordParameters.init(appName:callRecordCount:device:intent:isFirstPartyApp:isShowingMissedCall:totalCallRecordCount:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, char a21)
{
  uint64_t v22 = v21;
  char v24 = v23;
  char v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  char v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  OUTLINED_FUNCTION_150_7(v37, &demangling cache variable for type metadata for SpeakableString?, v35);
  uint64_t v38 = (int *)type metadata accessor for SearchCallHistoryReadCannotFindCallRecordParameters(0LL);
  uint64_t v39 = v36 + v38[5];
  *(void *)uint64_t v39 = v34;
  *(_BYTE *)(v39 + 8) = v32 & 1;
  *(void *)(v36 + v38[6]) = v30;
  *(void *)(v36 + v38[7]) = v28;
  *(_BYTE *)(v36 + v38[8]) = v26;
  *(_BYTE *)(v36 + v38[9]) = v24;
  uint64_t v40 = v36 + v38[10];
  *(void *)uint64_t v40 = v22;
  *(_BYTE *)(v40 + 8) = a21 & 1;
  OUTLINED_FUNCTION_7_5();
}

uint64_t SearchCallHistoryReadCannotFindVoicemailParameters.newRecordsCount.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t SearchCallHistoryReadCannotFindVoicemailParameters.newRecordsCount.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 8) = result;
  *(_BYTE *)(v2 + ++*(void *)(v0 + 16) = a2 & 1;
  return result;
}

uint64_t SearchCallHistoryReadCannotFindVoicemailParameters.savedRecordsCount.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 24) = result;
  *(_BYTE *)(v2 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a2 & 1;
  return result;
}

void *outlined retain of PhoneSearchCallHistoryIntent?(void *a1)
{
  return a1;
}

void SearchCallHistoryReadCannotFindVoicemailParameters.init()(uint64_t a1@<X8>)
{
  *(void *)a1 = 0LL;
  *(void *)(a1 + 8) = 0LL;
  *(_BYTE *)(a1 + ++*(void *)(v0 + 16) = 1;
  *(void *)(a1 + 24) = 0LL;
  *(_BYTE *)(a1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 1;
}

uint64_t SearchCallHistoryReadCannotFindVoicemailParameters.init(intent:newRecordsCount:savedRecordsCount:)@<X0>( uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  *(void *)a6 = result;
  *(void *)(a6 + 8) = a2;
  *(_BYTE *)(a6 + ++*(void *)(v0 + 16) = a3 & 1;
  *(void *)(a6 + 24) = a4;
  *(_BYTE *)(a6 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a5 & 1;
  return result;
}

void SearchCallHistoryReadMultipleCallRecordsParameters.appName.getter()
{
}

uint64_t type metadata accessor for SearchCallHistoryReadMultipleCallRecordsParameters(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State( a1,  (uint64_t *)&type metadata singleton initialization cache for SearchCallHistoryReadMultipleCallRecordsParameters,  (uint64_t)&nominal type descriptor for SearchCallHistoryReadMultipleCallRecordsParameters);
}

uint64_t SearchCallHistoryReadMultipleCallRecordsParameters.appName.setter(uint64_t a1)
{
  return SearchCallHistoryReadMultipleCallRecordsParameters.appName.setter( a1,  type metadata accessor for SearchCallHistoryReadMultipleCallRecordsParameters);
}

Swift::Void (__swiftcall *SearchCallHistoryReadMultipleCallRecordsParameters.appName.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t SearchCallHistoryReadMultipleCallRecordsParameters.callRecordCount.getter()
{
  return SearchCallHistoryReadMultipleCallRecordsParameters.callRecordCount.getter(type metadata accessor for SearchCallHistoryReadMultipleCallRecordsParameters);
}

void SearchCallHistoryReadMultipleCallRecordsParameters.callRecordCount.setter(uint64_t a1, uint64_t a2)
{
}

Swift::Void (__swiftcall *SearchCallHistoryReadMultipleCallRecordsParameters.callRecordCount.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t SearchCallHistoryReadMultipleCallRecordsParameters.callRecords.getter()
{
  return SearchCallHistoryReadMultipleCallRecordsParameters.callRecords.getter(type metadata accessor for SearchCallHistoryReadMultipleCallRecordsParameters);
}

uint64_t SearchCallHistoryReadMultipleCallRecordsParameters.callRecordsItem1.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SearchCallHistoryReadMultipleCallRecordsParameters.callRecordsItem2.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SearchCallHistoryReadMultipleCallRecordsParameters.callRecordsItem3.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SearchCallHistoryReadMultipleCallRecordsParameters.callRecordsItem4.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SearchCallHistoryReadMultipleCallRecordsParameters.device.getter()
{
  return swift_retain();
}

void SearchCallHistoryReadMultipleCallRecordsParameters.device.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(OUTLINED_FUNCTION_20_68() + 48);
  OUTLINED_FUNCTION_120_2();
  *(void *)(v1 + OUTLINED_FUNCTION_2_18(v2, v3) = a1;
  OUTLINED_FUNCTION_6();
}

Swift::Void (__swiftcall *SearchCallHistoryReadMultipleCallRecordsParameters.device.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t SearchCallHistoryReadMultipleCallRecordsParameters.intent.getter()
{
  return swift_retain();
}

void SearchCallHistoryReadMultipleCallRecordsParameters.intent.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(OUTLINED_FUNCTION_20_68() + 52);
  OUTLINED_FUNCTION_120_2();
  *(void *)(v1 + OUTLINED_FUNCTION_2_18(v2, v3) = a1;
  OUTLINED_FUNCTION_6();
}

Swift::Void (__swiftcall *SearchCallHistoryReadMultipleCallRecordsParameters.intent.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t SearchCallHistoryReadMultipleCallRecordsParameters.isFirstPartyApp.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(OUTLINED_FUNCTION_20_68() + 56));
}

uint64_t SearchCallHistoryReadMultipleCallRecordsParameters.isFirstWindow.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(OUTLINED_FUNCTION_20_68() + 60));
}

uint64_t SearchCallHistoryReadMultipleCallRecordsParameters.isLastWindow.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(OUTLINED_FUNCTION_20_68() + 64));
}

uint64_t SearchCallHistoryReadMultipleCallRecordsParameters.isShowingMissedCall.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(OUTLINED_FUNCTION_20_68() + 68));
}

uint64_t SearchCallHistoryReadMultipleCallRecordsParameters.isSingleDateRequest.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(OUTLINED_FUNCTION_20_68() + 72));
}

uint64_t SearchCallHistoryReadMultipleCallRecordsParameters.isTimeRangeRequest.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(OUTLINED_FUNCTION_20_68() + 76));
}

uint64_t SearchCallHistoryReadMultipleCallRecordsParameters.totalCallRecordCount.getter()
{
  uint64_t v0 = type metadata accessor for SearchCallHistoryReadMultipleCallRecordsParameters(0LL);
  return OUTLINED_FUNCTION_75_22(*(int *)(v0 + 80));
}

void SearchCallHistoryReadMultipleCallRecordsParameters.totalCallRecordCount.setter()
{
  uint64_t v0 = OUTLINED_FUNCTION_123_9();
  OUTLINED_FUNCTION_25_44(*(int *)(v0 + 80));
  OUTLINED_FUNCTION_6();
}

Swift::Void (__swiftcall *SearchCallHistoryReadMultipleCallRecordsParameters.totalCallRecordCount.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t SearchCallHistoryReadMultipleCallRecordsParameters.windowSize.getter()
{
  uint64_t v0 = type metadata accessor for SearchCallHistoryReadMultipleCallRecordsParameters(0LL);
  return OUTLINED_FUNCTION_75_22(*(int *)(v0 + 84));
}

void SearchCallHistoryReadMultipleCallRecordsParameters.windowSize.setter()
{
  uint64_t v0 = OUTLINED_FUNCTION_123_9();
  OUTLINED_FUNCTION_25_44(*(int *)(v0 + 84));
  OUTLINED_FUNCTION_6();
}

Swift::Void (__swiftcall *SearchCallHistoryReadMultipleCallRecordsParameters.windowSize.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

void SearchCallHistoryReadMultipleCallRecordsParameters.asKeyValuePairs()()
{
  uint64_t v3 = (char *)v53 - v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v5 = OUTLINED_FUNCTION_8_2(v4, 896LL);
  *(_OWORD *)(v5 + ++*(void *)(v0 + 16) = xmmword_340090;
  OUTLINED_FUNCTION_11_94(v5);
  uint64_t v6 = OUTLINED_FUNCTION_26_0();
  uint64_t v7 = OUTLINED_FUNCTION_34_5((uint64_t)v3);
  if (v8)
  {
    OUTLINED_FUNCTION_150(v7, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_133_13();
  }

  else
  {
    *(void *)(v5 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v6;
    char v9 = OUTLINED_FUNCTION_186();
    OUTLINED_FUNCTION_61_5((uint64_t)v9);
  }

  *(void *)(v5 + 80) = 0x656D614E707061LL;
  *(void *)(v5 + 88) = 0xE700000000000000LL;
  uint64_t v10 = (int *)OUTLINED_FUNCTION_20_68();
  uint64_t v11 = OUTLINED_FUNCTION_123_0((uint64_t)v10);
  outlined init with copy of TransformationResult?( v11,  v1,  &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v12 = OUTLINED_FUNCTION_34_5(v1);
  if (v8)
  {
    OUTLINED_FUNCTION_190(v12, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_133_13();
  }

  else
  {
    *(void *)(v5 + 120) = v6;
    uint64_t v13 = OUTLINED_FUNCTION_186();
    OUTLINED_FUNCTION_71_4( (uint64_t)v13,  v1,  *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL));
  }

  OUTLINED_FUNCTION_41_41();
  if ((v16 & 1) != 0)
  {
    *(void *)(v5 + 15__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
    *(void *)(v5 + 160) = 0LL;
    double v17 = 0.0;
  }

  else
  {
    double v17 = *v15;
  }

  OUTLINED_FUNCTION_75_28(v14, v17);
  uint64_t v19 = *(void *)(v0 + v18);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PhoneCallRecord]);
  v53[1] = v19;
  *(void *)(v5 + 19__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v19;
  *(void *)(v5 + 2++*(void *)(v0 + 16) = v20;
  *(void *)(v5 + 224) = 0xD000000000000010LL;
  OUTLINED_FUNCTION_129_12((uint64_t)"callRecordsItem1");
  *(void *)(v5 + 240) = *(void *)(v0 + v10[8]);
  *(void *)(v5 + 264) = v21;
  *(void *)(v5 + 27__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xD000000000000010LL;
  OUTLINED_FUNCTION_56_0();
  *(void *)(v5 + 280) = v22;
  *(void *)(v5 + 288) = *(void *)(v0 + v10[9]);
  *(void *)(v5 + 31__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v23;
  *(void *)(v5 + 320) = 0xD000000000000010LL;
  OUTLINED_FUNCTION_152_8((uint64_t)"callRecordsItem3");
  *(void *)(v5 + 336) = *(void *)(v0 + v24);
  *(void *)(v5 + 360) = v25;
  *(void *)(v5 + 368) = 0xD000000000000010LL;
  OUTLINED_FUNCTION_56_0();
  *(void *)(v5 + 376) = v26;
  *(void *)(v5 + 384) = *(void *)(v0 + v10[11]);
  *(void *)(v5 + 408) = v27;
  *(void *)(v5 + 4++*(void *)(v0 + 16) = 0x656369766564LL;
  *(void *)(v5 + 424) = 0xE600000000000000LL;
  uint64_t v28 = *(void *)(v0 + v10[12]);
  if (v28)
  {
    OUTLINED_FUNCTION_50_6();
    uint64_t v29 = v28;
  }

  else
  {
    OUTLINED_FUNCTION_54_0();
    *(void *)(v5 + 440) = 0LL;
    *(void *)(v5 + 448) = 0LL;
  }

  *(void *)(v5 + 43__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v29;
  OUTLINED_FUNCTION_98_7();
  *(void *)(v5 + 456) = v30;
  *(void *)(v5 + 464) = v31;
  *(void *)(v5 + 47__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xE600000000000000LL;
  uint64_t v32 = *(void *)(v0 + v10[13]);
  if (v32)
  {
    ObjC metadata update function for PhoneSearchCallHistoryIntent();
    uint64_t v33 = v32;
  }

  else
  {
    OUTLINED_FUNCTION_54_0();
    *(void *)(v5 + 488) = 0LL;
    *(void *)(v5 + 496) = 0LL;
  }

  *(void *)(v5 + 480) = v33;
  OUTLINED_FUNCTION_207();
  *(void *)(v5 + 504) = v34;
  *(void *)(v5 + 51__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v35;
  OUTLINED_FUNCTION_192();
  *(void *)(v5 + 520) = v36;
  LOBYTE(v36) = *(_BYTE *)(v0 + v10[14]);
  *(void *)(v5 + 55__swift_destroy_boxed_opaque_existential_1(v0 + 2) = &type metadata for Bool;
  *(_BYTE *)(v5 + 528) = v36;
  strcpy((char *)(v5 + 560), "isFirstWindow");
  *(_WORD *)(v5 + 574) = -4864;
  LOBYTE(v36) = *(_BYTE *)(v0 + v10[15]);
  *(void *)(v5 + 600) = &type metadata for Bool;
  *(_BYTE *)(v5 + 576) = v36;
  OUTLINED_FUNCTION_146_7();
  *(void *)(v5 + 608) = v37;
  *(void *)(v5 + 6++*(void *)(v0 + 16) = 0xEC000000776F646ELL;
  LOBYTE(v3__swift_destroy_boxed_opaque_existential_1(v0 + 7) = *(_BYTE *)(v0 + v10[16]);
  *(void *)(v5 + 648) = v38;
  *(_BYTE *)(v5 + 624) = v37;
  *(void *)(v5 + 656) = 0xD000000000000013LL;
  *(void *)(v5 + 664) = 0x800000000034C7C0LL;
  char v39 = *(_BYTE *)(v0 + v10[17]);
  *(void *)(v5 + 696) = v38;
  *(_BYTE *)(v5 + 67__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v39;
  *(void *)(v5 + 704) = 0xD000000000000013LL;
  OUTLINED_FUNCTION_56_0();
  *(void *)(v5 + 71__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v40;
  LOBYTE(v40) = *(_BYTE *)(v0 + v10[18]);
  *(void *)(v5 + 744) = v41;
  *(_BYTE *)(v5 + 720) = v40;
  *(void *)(v5 + 75__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xD000000000000012LL;
  OUTLINED_FUNCTION_56_0();
  *(void *)(v5 + 760) = v42;
  LOBYTE(v4__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *(_BYTE *)(v0 + v10[19]);
  *(void *)(v5 + 79__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v43;
  *(_BYTE *)(v5 + 768) = v42;
  *(void *)(v5 + 800) = 0xD000000000000014LL;
  OUTLINED_FUNCTION_56_0();
  *(void *)(v5 + 808) = v44;
  OUTLINED_FUNCTION_80_18();
  if ((v46 & 1) != 0)
  {
    uint64_t v47 = 0LL;
    *(_OWORD *)(v5 + 824) = 0u;
    uint64_t v48 = 0LL;
  }

  else
  {
    uint64_t v48 = *v45;
    uint64_t v47 = &type metadata for Double;
  }

  *(void *)(v5 + 8++*(void *)(v0 + 16) = v48;
  *(void *)(v5 + 840) = v47;
  *(void *)(v5 + 848) = 0x6953776F646E6977LL;
  *(void *)(v5 + 856) = 0xEA0000000000657ALL;
  OUTLINED_FUNCTION_80_18();
  if ((v50 & 1) != 0)
  {
    uint64_t v51 = 0LL;
    *(_OWORD *)(v5 + 87__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0u;
    uint64_t v52 = 0LL;
  }

  else
  {
    uint64_t v52 = *v49;
    uint64_t v51 = &type metadata for Double;
  }

  *(void *)(v5 + 864) = v52;
  *(void *)(v5 + 888) = v51;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  OUTLINED_FUNCTION_7_5();
}

void SearchCallHistoryReadMultipleCallRecordsParameters.init(appBundleId:appName:callRecordCount:callRecords:callRecordsItem1:callRecordsItem2:callRecordsItem3:callRecordsItem4:device:intent:isFirstPartyApp:isFirstWindow:isLastWindow:isShowingMissedCall:isSingleDateRequest:isTimeRangeRequest:totalCallRecordCount:windowSize:)( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, char a13, char a14, char a15, char a16, char a17, char a18, uint64_t a19, char a20, uint64_t a21, char a22)
{
  uint64_t v26 = (int *)OUTLINED_FUNCTION_20_68();
  OUTLINED_FUNCTION_61_27(a2, a9 + v26[5]);
  uint64_t v27 = a9 + v26[6];
  *(void *)uint64_t v27 = a3;
  *(_BYTE *)(v27 + 8) = a4 & 1;
  *(void *)(a9 + v26[7]) = a5;
  *(void *)(a9 + v26[8]) = a6;
  *(void *)(a9 + v26[9]) = a7;
  *(void *)(a9 + v26[10]) = a8;
  *(void *)(a9 + v26[11]) = a10;
  *(void *)(a9 + v26[12]) = a11;
  *(void *)(a9 + v26[13]) = a12;
  *(_BYTE *)(a9 + v26[14]) = a13;
  *(_BYTE *)(a9 + v26[15]) = a14;
  *(_BYTE *)(a9 + v26[16]) = a15;
  *(_BYTE *)(a9 + v26[17]) = a16;
  *(_BYTE *)(a9 + v26[18]) = a17;
  *(_BYTE *)(a9 + v26[19]) = a18;
  uint64_t v28 = a9 + v26[20];
  *(void *)uint64_t v28 = a19;
  *(_BYTE *)(v28 + 8) = a20 & 1;
  uint64_t v29 = a9 + v26[21];
  *(void *)uint64_t v29 = a21;
  *(_BYTE *)(v29 + 8) = a22 & 1;
}

uint64_t SearchCallHistoryReadMultipleVoiceMailRecordsParameters.callRecord.getter()
{
  return StartCallIntentHandledResponseParameters.device.getter(type metadata accessor for SearchCallHistoryReadMultipleVoiceMailRecordsParameters);
}

uint64_t type metadata accessor for SearchCallHistoryReadMultipleVoiceMailRecordsParameters(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State( a1,  (uint64_t *)&type metadata singleton initialization cache for SearchCallHistoryReadMultipleVoiceMailRecordsParameters,  (uint64_t)&nominal type descriptor for SearchCallHistoryReadMultipleVoiceMailRecordsParameters);
}

void SearchCallHistoryReadMultipleVoiceMailRecordsParameters.callRecord.setter(uint64_t a1)
{
}

Swift::Void (__swiftcall *SearchCallHistoryReadMultipleVoiceMailRecordsParameters.callRecord.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t SearchCallHistoryReadMultipleVoiceMailRecordsParameters.intent.getter()
{
  return StartCallIntentConfirmationWithRestrictedContactsParameters.intent.getter(type metadata accessor for SearchCallHistoryReadMultipleVoiceMailRecordsParameters);
}

void SearchCallHistoryReadMultipleVoiceMailRecordsParameters.intent.setter(uint64_t a1)
{
}

Swift::Void (__swiftcall *SearchCallHistoryReadMultipleVoiceMailRecordsParameters.intent.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t SearchCallHistoryReadMultipleVoiceMailRecordsParameters.isLeadingSavedVoiceMailPostPrompt.getter()
{
  uint64_t v0 = OUTLINED_FUNCTION_58_27();
  return OUTLINED_FUNCTION_145_9(v0);
}

uint64_t SearchCallHistoryReadMultipleVoiceMailRecordsParameters.isNewVoicemail.getter()
{
  uint64_t v0 = OUTLINED_FUNCTION_58_27();
  return OUTLINED_FUNCTION_99_13(v0);
}

uint64_t SearchCallHistoryReadMultipleVoiceMailRecordsParameters.isSingleDateRequest.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(OUTLINED_FUNCTION_58_27() + 36));
}

uint64_t SearchCallHistoryReadMultipleVoiceMailRecordsParameters.isTimeRangeRequest.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(OUTLINED_FUNCTION_58_27() + 40));
}

uint64_t SearchCallHistoryReadMultipleVoiceMailRecordsParameters.newRecordsCount.getter()
{
  uint64_t v0 = type metadata accessor for SearchCallHistoryReadMultipleVoiceMailRecordsParameters(0LL);
  return OUTLINED_FUNCTION_75_22(*(int *)(v0 + 44));
}

void SearchCallHistoryReadMultipleVoiceMailRecordsParameters.newRecordsCount.setter()
{
  uint64_t v0 = type metadata accessor for SearchCallHistoryReadMultipleVoiceMailRecordsParameters(0LL);
  OUTLINED_FUNCTION_25_44(*(int *)(v0 + 44));
  OUTLINED_FUNCTION_6();
}

Swift::Void (__swiftcall *SearchCallHistoryReadMultipleVoiceMailRecordsParameters.newRecordsCount.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t SearchCallHistoryReadMultipleVoiceMailRecordsParameters.savedRecordsCount.getter()
{
  return SearchCallHistoryReadMultipleVoiceMailRecordsParameters.savedRecordsCount.getter(type metadata accessor for SearchCallHistoryReadMultipleVoiceMailRecordsParameters);
}

void SearchCallHistoryReadMultipleVoiceMailRecordsParameters.savedRecordsCount.setter( uint64_t a1, uint64_t a2)
{
}

Swift::Void (__swiftcall *SearchCallHistoryReadMultipleVoiceMailRecordsParameters.savedRecordsCount.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

void SearchCallHistoryReadMultipleVoiceMailRecordsParameters.voiceMailPosition.getter()
{
  uint64_t v1 = type metadata accessor for SearchCallHistoryReadMultipleVoiceMailRecordsParameters(0LL);
  OUTLINED_FUNCTION_87_16(v0 + *(int *)(v1 + 52), v2, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_2();
}

uint64_t SearchCallHistoryReadMultipleVoiceMailRecordsParameters.voiceMailPosition.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SearchCallHistoryReadMultipleVoiceMailRecordsParameters(0LL);
  return OUTLINED_FUNCTION_16_16(a1, v1 + *(int *)(v3 + 52));
}

Swift::Void (__swiftcall *SearchCallHistoryReadMultipleVoiceMailRecordsParameters.voiceMailPosition.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

void SearchCallHistoryReadMultipleVoiceMailRecordsParameters.asKeyValuePairs()()
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_41_12();
  __chkstk_darwin();
  uint64_t v4 = (char *)&v38 - v3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v6 = OUTLINED_FUNCTION_8_2(v5, 512LL);
  *(_OWORD *)(v6 + ++*(void *)(v0 + 16) = xmmword_323F70;
  *(void *)(v6 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0x6C646E7542707061LL;
  *(void *)(v6 + 40) = 0xEB00000000644965LL;
  outlined init with copy of TransformationResult?( v2,  (uint64_t)v4,  &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v7 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_6_26((uint64_t)v4);
  if (v8)
  {
    outlined destroy of UUID?((uint64_t)v4, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_133_13();
  }

  else
  {
    *(void *)(v6 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v7;
    char v9 = OUTLINED_FUNCTION_186();
    OUTLINED_FUNCTION_86_3( (uint64_t)v9,  (uint64_t)v4,  *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32LL));
  }

  OUTLINED_FUNCTION_108_10();
  *(void *)(v6 + 80) = v10;
  *(void *)(v6 + 88) = v11;
  uint64_t v12 = (int *)OUTLINED_FUNCTION_58_27();
  uint64_t v13 = *(void *)(v2 + v12[5]);
  if (v13)
  {
    type metadata accessor for PhoneCallRecord(0LL);
    uint64_t v14 = v13;
  }

  else
  {
    OUTLINED_FUNCTION_54_0();
    *(void *)(v6 + outlined init with copy of SharedGlobalsProviding(v0, v1 - 104) = 0LL;
    *(void *)(v6 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  }

  *(void *)(v6 + 96) = v14;
  OUTLINED_FUNCTION_98_7();
  *(void *)(v6 + 120) = v15;
  *(void *)(v6 + outlined init with copy of SharedGlobalsProviding(v0, v1 - 128) = v16;
  *(void *)(v6 + 136) = 0xE600000000000000LL;
  uint64_t v17 = *(void *)(v2 + v12[6]);
  if (v17)
  {
    uint64_t v18 = ObjC metadata update function for PhoneSearchCallHistoryIntent();
    uint64_t v19 = v17;
  }

  else
  {
    uint64_t v19 = 0LL;
    uint64_t v18 = 0LL;
    *(void *)(v6 + 15__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
    *(void *)(v6 + 160) = 0LL;
  }

  *(void *)(v6 + 144) = v19;
  *(void *)(v6 + 168) = v18;
  *(void *)(v6 + 176) = 0xD000000000000021LL;
  OUTLINED_FUNCTION_179();
  *(void *)(v6 + 184) = v20;
  *(_BYTE *)(v6 + 19__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *(_BYTE *)(v2 + v12[7]);
  *(void *)(v6 + 2++*(void *)(v0 + 16) = &type metadata for Bool;
  strcpy((char *)(v6 + 224), "isNewVoicemail");
  *(_BYTE *)(v6 + 239) = -18;
  *(_BYTE *)(v6 + 240) = *(_BYTE *)(v2 + v12[8]);
  *(void *)(v6 + 264) = &type metadata for Bool;
  *(void *)(v6 + 27__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v21 | 2;
  OUTLINED_FUNCTION_179();
  *(void *)(v6 + 280) = v22;
  *(_BYTE *)(v6 + 288) = *(_BYTE *)(v2 + v12[9]);
  *(void *)(v6 + 31__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v24;
  *(void *)(v6 + 320) = v23 + 1;
  OUTLINED_FUNCTION_179();
  *(void *)(v6 + 328) = v26;
  *(_BYTE *)(v6 + 336) = *(_BYTE *)(v2 + v12[10]);
  *(void *)(v6 + 360) = v27;
  *(void *)(v6 + 368) = 0x726F63655277656ELL;
  *(void *)(v6 + 376) = 0xEF746E756F437364LL;
  uint64_t v28 = v2 + v12[11];
  if ((*(_BYTE *)(v28 + 8) & 1) != 0)
  {
    uint64_t v29 = 0LL;
    *(void *)(v6 + 39__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
    *(void *)(v6 + 400) = 0LL;
    uint64_t v30 = 0LL;
  }

  else
  {
    uint64_t v30 = *(void *)v28;
    uint64_t v29 = &type metadata for Double;
  }

  *(void *)(v6 + 384) = v30;
  *(void *)(v6 + 408) = v29;
  *(void *)(v6 + 4++*(void *)(v0 + 16) = v25;
  OUTLINED_FUNCTION_179();
  *(void *)(v6 + 424) = v33;
  uint64_t v34 = v2 + v12[12];
  if ((*(_BYTE *)(v34 + 8) & 1) != 0)
  {
    uint64_t v35 = 0LL;
    *(void *)(v6 + 440) = 0LL;
    *(void *)(v6 + 448) = 0LL;
    uint64_t v36 = 0LL;
  }

  else
  {
    uint64_t v36 = *(void *)v34;
    uint64_t v35 = &type metadata for Double;
  }

  *(void *)(v6 + 43__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v36;
  *(void *)(v6 + 456) = v35;
  *(void *)(v6 + 464) = v32;
  *(void *)(v6 + 47__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0x800000000034C780LL;
  OUTLINED_FUNCTION_87_16(v2 + v12[13], v31, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_6_26(v0);
  if (v8)
  {
    OUTLINED_FUNCTION_95();
    OUTLINED_FUNCTION_95_1();
    outlined destroy of UUID?(v0, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_134_1();
  }

  else
  {
    *(void *)(v6 + 504) = v7;
    uint64_t v37 = OUTLINED_FUNCTION_112_0();
    OUTLINED_FUNCTION_86_3( (uint64_t)v37,  v0,  *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32LL));
    OUTLINED_FUNCTION_95();
    OUTLINED_FUNCTION_95_1();
  }

  OUTLINED_FUNCTION_58();
}

void SearchCallHistoryReadMultipleVoiceMailRecordsParameters.init(appBundleId:callRecord:intent:isLeadingSavedVoiceMailPostPrompt:isNewVoicemail:isSingleDateRequest:isTimeRangeRequest:newRecordsCount:savedRecordsCount:voiceMailPosition:)( uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, char a6, char a7, uint64_t a8, char a9, uint64_t a10, char a11, uint64_t a12)
{
  uint64_t v20 = (int *)type metadata accessor for SearchCallHistoryReadMultipleVoiceMailRecordsParameters(0LL);
  *(void *)(v14 + v20[5]) = v13;
  *(void *)(v14 + v20[6]) = v12;
  *(_BYTE *)(v14 + v20[7]) = a4;
  *(_BYTE *)(v14 + v20[8]) = a5;
  *(_BYTE *)(v14 + v20[9]) = a6;
  *(_BYTE *)(v14 + v20[10]) = a7;
  uint64_t v21 = v14 + v20[11];
  *(void *)uint64_t v21 = a8;
  *(_BYTE *)(v21 + 8) = a9 & 1;
  uint64_t v22 = v14 + v20[12];
  *(void *)uint64_t v22 = a10;
  *(_BYTE *)(v22 + 8) = a11 & 1;
  outlined init with take of PhoneCallNLIntent?( a12,  v14 + v20[13],  &demangling cache variable for type metadata for SpeakableString?);
}

uint64_t SearchCallHistoryReadSingleCallRecordParameters.callRecord.getter()
{
  return StartCallIntentHandledResponseParameters.device.getter(type metadata accessor for SearchCallHistoryReadSingleCallRecordParameters);
}

uint64_t type metadata accessor for SearchCallHistoryReadSingleCallRecordParameters(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State( a1,  (uint64_t *)&type metadata singleton initialization cache for SearchCallHistoryReadSingleCallRecordParameters,  (uint64_t)&nominal type descriptor for SearchCallHistoryReadSingleCallRecordParameters);
}

void SearchCallHistoryReadSingleCallRecordParameters.callRecord.setter(uint64_t a1)
{
}

Swift::Void (__swiftcall *SearchCallHistoryReadSingleCallRecordParameters.callRecord.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t SearchCallHistoryReadSingleCallRecordParameters.intent.getter()
{
  return StartCallIntentConfirmationWithRestrictedContactsParameters.intent.getter(type metadata accessor for SearchCallHistoryReadSingleCallRecordParameters);
}

void SearchCallHistoryReadSingleCallRecordParameters.intent.setter(uint64_t a1)
{
}

Swift::Void (__swiftcall *SearchCallHistoryReadSingleCallRecordParameters.intent.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t SearchCallHistoryReadSingleCallRecordParameters.isSingleDateRequest.getter()
{
  uint64_t v0 = OUTLINED_FUNCTION_103_12();
  return OUTLINED_FUNCTION_145_9(v0);
}

uint64_t SearchCallHistoryReadSingleCallRecordParameters.isTimeRangeRequest.getter()
{
  uint64_t v0 = OUTLINED_FUNCTION_103_12();
  return OUTLINED_FUNCTION_99_13(v0);
}

void SearchCallHistoryReadSingleCallRecordParameters.asKeyValuePairs()()
{
}

int *SearchCallHistoryReadSingleCallRecordParameters.init(appBundleId:callRecord:intent:isSingleDateRequest:isTimeRangeRequest:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, char a5@<W4>, uint64_t a6@<X8>)
{
  return SearchCallHistoryReadSingleCallRecordParameters.init(appBundleId:callRecord:intent:isSingleDateRequest:isTimeRangeRequest:)( a1,  a2,  a3,  a4,  a5,  type metadata accessor for SearchCallHistoryReadSingleCallRecordParameters,  a6);
}

uint64_t SearchCallHistoryReadSingleCallRecordDisplayForwardParameters.callRecord.getter()
{
  return StartCallIntentHandledResponseParameters.device.getter(type metadata accessor for SearchCallHistoryReadSingleCallRecordDisplayForwardParameters);
}

uint64_t type metadata accessor for SearchCallHistoryReadSingleCallRecordDisplayForwardParameters(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State( a1,  (uint64_t *)&type metadata singleton initialization cache for SearchCallHistoryReadSingleCallRecordDisplayForwardParameters,  (uint64_t)&nominal type descriptor for SearchCallHistoryReadSingleCallRecordDisplayForwardParameters);
}

void SearchCallHistoryReadSingleCallRecordDisplayForwardParameters.callRecord.setter(uint64_t a1)
{
}

Swift::Void (__swiftcall *SearchCallHistoryReadSingleCallRecordDisplayForwardParameters.callRecord.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t SearchCallHistoryReadSingleCallRecordDisplayForwardParameters.intent.getter()
{
  return StartCallIntentConfirmationWithRestrictedContactsParameters.intent.getter(type metadata accessor for SearchCallHistoryReadSingleCallRecordDisplayForwardParameters);
}

void SearchCallHistoryReadSingleCallRecordDisplayForwardParameters.intent.setter(uint64_t a1)
{
}

Swift::Void (__swiftcall *SearchCallHistoryReadSingleCallRecordDisplayForwardParameters.intent.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t SearchCallHistoryReadSingleCallRecordDisplayForwardParameters.isSingleDateRequest.getter()
{
  uint64_t v0 = OUTLINED_FUNCTION_104_10();
  return OUTLINED_FUNCTION_145_9(v0);
}

uint64_t SearchCallHistoryReadSingleCallRecordDisplayForwardParameters.isTimeRangeRequest.getter()
{
  uint64_t v0 = OUTLINED_FUNCTION_104_10();
  return OUTLINED_FUNCTION_99_13(v0);
}

void SearchCallHistoryReadSingleCallRecordDisplayForwardParameters.asKeyValuePairs()()
{
}

void SearchCallHistoryReadSingleCallRecordParameters.asKeyValuePairs()(uint64_t (*a1)(void))
{
  uint64_t v5 = v4 - v3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v7 = OUTLINED_FUNCTION_8_2(v6, 272LL);
  *(_OWORD *)(v7 + ++*(void *)(v0 + 16) = xmmword_323F80;
  char v8 = (void *)(v7 + 48);
  uint64_t v9 = OUTLINED_FUNCTION_62_25(v7);
  outlined init with copy of TransformationResult?( v9,  v5,  &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v10 = OUTLINED_FUNCTION_26_0();
  uint64_t EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v5, 1LL, v10);
  if ((_DWORD)EnumTagSinglePayload == 1)
  {
    OUTLINED_FUNCTION_190(EnumTagSinglePayload, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)char v8 = 0u;
    *(_OWORD *)(v7 + 64) = 0u;
  }

  else
  {
    *(void *)(v7 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v10;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v8);
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32LL))( boxed_opaque_existential_1,  v5,  v10);
  }

  OUTLINED_FUNCTION_108_10();
  *(void *)(v7 + 80) = v13;
  *(void *)(v7 + 88) = v14;
  uint64_t v15 = (int *)a1(0LL);
  uint64_t v16 = *(void *)(v1 + v15[5]);
  if (v16)
  {
    uint64_t v17 = type metadata accessor for PhoneCallRecord(0LL);
    uint64_t v18 = v16;
  }

  else
  {
    uint64_t v17 = OUTLINED_FUNCTION_54_0();
    *(void *)(v7 + outlined init with copy of SharedGlobalsProviding(v0, v1 - 104) = 0LL;
    *(void *)(v7 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  }

  *(void *)(v7 + 96) = v18;
  OUTLINED_FUNCTION_105_9(v17);
  uint64_t v19 = *(void *)(v1 + v15[6]);
  if (v19)
  {
    uint64_t v20 = ObjC metadata update function for PhoneSearchCallHistoryIntent();
  }

  else
  {
    uint64_t v20 = 0LL;
    *(void *)(v7 + 15__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
    *(void *)(v7 + 160) = 0LL;
  }

  *(void *)(v7 + 144) = v19;
  *(void *)(v7 + 168) = v20;
  *(void *)(v7 + 176) = 0xD000000000000013LL;
  OUTLINED_FUNCTION_179();
  *(void *)(v7 + 184) = v21;
  *(_BYTE *)(v7 + 19__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *(_BYTE *)(v1 + v15[7]);
  *(void *)(v7 + 2++*(void *)(v0 + 16) = &type metadata for Bool;
  *(void *)(v7 + 224) = v22;
  OUTLINED_FUNCTION_129_12((uint64_t)"isTimeRangeRequest");
  char v23 = *(_BYTE *)(v1 + v15[8]);
  *(void *)(v7 + 264) = v24;
  *(_BYTE *)(v7 + 240) = v23;
  swift_retain();
  OUTLINED_FUNCTION_95_1();
  OUTLINED_FUNCTION_158_7();
  OUTLINED_FUNCTION_16();
}

int *SearchCallHistoryReadSingleCallRecordDisplayForwardParameters.init(appBundleId:callRecord:intent:isSingleDateRequest:isTimeRangeRequest:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, char a5@<W4>, uint64_t a6@<X8>)
{
  return SearchCallHistoryReadSingleCallRecordParameters.init(appBundleId:callRecord:intent:isSingleDateRequest:isTimeRangeRequest:)( a1,  a2,  a3,  a4,  a5,  type metadata accessor for SearchCallHistoryReadSingleCallRecordDisplayForwardParameters,  a6);
}

int *SearchCallHistoryReadSingleCallRecordParameters.init(appBundleId:callRecord:intent:isSingleDateRequest:isTimeRangeRequest:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, char a5@<W4>, uint64_t (*a6)(void)@<X5>, uint64_t a7@<X8>)
{
  PhoneCallFlowDelegatePlugin::SearchCallHistoryCATPatternsIdentifiers_optional result = (int *)a6(0LL);
  *(void *)(a7 + result[5]) = a2;
  *(void *)(a7 + result[6]) = a3;
  *(_BYTE *)(a7 + result[7]) = a4;
  *(_BYTE *)(a7 + result[8]) = a5;
  return result;
}

uint64_t SearchCallHistoryReadSingleVoiceMailRecordParameters.callRecord.getter()
{
  return StartCallIntentHandledResponseParameters.device.getter(type metadata accessor for SearchCallHistoryReadSingleVoiceMailRecordParameters);
}

uint64_t type metadata accessor for SearchCallHistoryReadSingleVoiceMailRecordParameters(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State( a1,  (uint64_t *)&type metadata singleton initialization cache for SearchCallHistoryReadSingleVoiceMailRecordParameters,  (uint64_t)&nominal type descriptor for SearchCallHistoryReadSingleVoiceMailRecordParameters);
}

void SearchCallHistoryReadSingleVoiceMailRecordParameters.callRecord.setter(uint64_t a1)
{
}

Swift::Void (__swiftcall *SearchCallHistoryReadSingleVoiceMailRecordParameters.callRecord.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t SearchCallHistoryReadSingleVoiceMailRecordParameters.intent.getter()
{
  return StartCallIntentConfirmationWithRestrictedContactsParameters.intent.getter(type metadata accessor for SearchCallHistoryReadSingleVoiceMailRecordParameters);
}

void SearchCallHistoryReadSingleVoiceMailRecordParameters.intent.setter(uint64_t a1)
{
}

Swift::Void (__swiftcall *SearchCallHistoryReadSingleVoiceMailRecordParameters.intent.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t SearchCallHistoryReadSingleVoiceMailRecordParameters.isSingleDateRequest.getter()
{
  uint64_t v0 = OUTLINED_FUNCTION_102_9();
  return OUTLINED_FUNCTION_145_9(v0);
}

uint64_t SearchCallHistoryReadSingleVoiceMailRecordParameters.isTimeRangeRequest.getter()
{
  uint64_t v0 = OUTLINED_FUNCTION_102_9();
  return OUTLINED_FUNCTION_99_13(v0);
}

void SearchCallHistoryReadSingleVoiceMailRecordParameters.asKeyValuePairs()()
{
}

int *SearchCallHistoryReadSingleVoiceMailRecordParameters.init(appBundleId:callRecord:intent:isSingleDateRequest:isTimeRangeRequest:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, char a5@<W4>, uint64_t a6@<X8>)
{
  return SearchCallHistoryReadSingleCallRecordParameters.init(appBundleId:callRecord:intent:isSingleDateRequest:isTimeRangeRequest:)( a1,  a2,  a3,  a4,  a5,  type metadata accessor for SearchCallHistoryReadSingleVoiceMailRecordParameters,  a6);
}

__n128 *SearchCallHistoryReadCannotFindVoicemailParameters.asKeyValuePairs()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = (__n128 *)OUTLINED_FUNCTION_8_2(v1, 176LL);
  OUTLINED_FUNCTION_136_0(v2, (__n128)xmmword_320080);
  OUTLINED_FUNCTION_131_10(v0, (uint64_t)&v12);
  OUTLINED_FUNCTION_131_10((uint64_t)&v12, (uint64_t)&v13);
  unint64_t v3 = v13;
  if (v13)
  {
    uint64_t v4 = ObjC metadata update function for PhoneSearchCallHistoryIntent();
  }

  else
  {
    uint64_t v4 = 0LL;
    v2[3].n128_u64[1] = 0LL;
    v2[4].n128_u64[0] = 0LL;
  }

  v2[3].n128_u64[0] = v3;
  OUTLINED_FUNCTION_18_71(v4);
  OUTLINED_FUNCTION_131_10(v0 + 8, (uint64_t)v11);
  OUTLINED_FUNCTION_131_10((uint64_t)v11, (uint64_t)&v14);
  if ((v15 & 1) != 0)
  {
    uint64_t v5 = 0LL;
    v2[6].n128_u64[1] = 0LL;
    v2[7].n128_u64[0] = 0LL;
    unint64_t v6 = 0LL;
  }

  else
  {
    uint64_t v5 = &type metadata for Double;
    unint64_t v6 = v14;
  }

  v2[6].n128_u64[0] = v6;
  v2[7].n128_u64[1] = (unint64_t)v5;
  v2[8].n128_u64[0] = 0xD000000000000011LL;
  OUTLINED_FUNCTION_130_4((uint64_t)"savedRecordsCount");
  outlined init with take of PhoneCallNLIntent?( v0 + 24,  (uint64_t)v10,  &demangling cache variable for type metadata for Double?);
  outlined init with take of PhoneCallNLIntent?( (uint64_t)v10,  (uint64_t)&v16,  &demangling cache variable for type metadata for Double?);
  if ((v17 & 1) != 0)
  {
    uint64_t v7 = 0LL;
    v2[9].n128_u64[1] = 0LL;
    v2[10].n128_u64[0] = 0LL;
    unint64_t v8 = 0LL;
  }

  else
  {
    uint64_t v7 = &type metadata for Double;
    unint64_t v8 = v16;
  }

  v2[9].n128_u64[0] = v8;
  v2[10].n128_u64[1] = (unint64_t)v7;
  outlined retain of PhoneSearchCallHistoryIntent?(&v12);
  return v2;
}

void SearchCallHistoryShowCallHistoryParameters.appName.getter()
{
}

void SearchCallHistoryReadMultipleCallRecordsParameters.appName.getter(uint64_t (*a1)(void))
{
  uint64_t v1 = a1(0LL);
  uint64_t v2 = OUTLINED_FUNCTION_123_0(v1);
  OUTLINED_FUNCTION_87_16(v2, v3, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_2();
}

uint64_t type metadata accessor for SearchCallHistoryShowCallHistoryParameters(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State( a1,  (uint64_t *)&type metadata singleton initialization cache for SearchCallHistoryShowCallHistoryParameters,  (uint64_t)&nominal type descriptor for SearchCallHistoryShowCallHistoryParameters);
}

uint64_t SearchCallHistoryShowCallHistoryParameters.appName.setter(uint64_t a1)
{
  return SearchCallHistoryReadMultipleCallRecordsParameters.appName.setter( a1,  type metadata accessor for SearchCallHistoryShowCallHistoryParameters);
}

uint64_t SearchCallHistoryReadMultipleCallRecordsParameters.appName.setter( uint64_t a1, uint64_t (*a2)(void))
{
  return OUTLINED_FUNCTION_16_16(v2, v3);
}

Swift::Void (__swiftcall *SearchCallHistoryShowCallHistoryParameters.appName.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t SearchCallHistoryShowCallHistoryParameters.callRecordCount.getter()
{
  return SearchCallHistoryReadMultipleCallRecordsParameters.callRecordCount.getter(type metadata accessor for SearchCallHistoryShowCallHistoryParameters);
}

uint64_t SearchCallHistoryReadMultipleCallRecordsParameters.callRecordCount.getter( uint64_t (*a1)(void))
{
  uint64_t v1 = OUTLINED_FUNCTION_94_0(a1);
  return OUTLINED_FUNCTION_75_22(*(int *)(v1 + 24));
}

void SearchCallHistoryShowCallHistoryParameters.callRecordCount.setter(uint64_t a1, uint64_t a2)
{
}

void SearchCallHistoryReadMultipleCallRecordsParameters.callRecordCount.setter( uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v3 = OUTLINED_FUNCTION_126_9(a1, a2, a3);
  OUTLINED_FUNCTION_25_44(*(int *)(v3 + 24));
  OUTLINED_FUNCTION_6();
}

Swift::Void (__swiftcall *SearchCallHistoryShowCallHistoryParameters.callRecordCount.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t SearchCallHistoryShowCallHistoryParameters.callRecords.getter()
{
  return SearchCallHistoryReadMultipleCallRecordsParameters.callRecords.getter(type metadata accessor for SearchCallHistoryShowCallHistoryParameters);
}

uint64_t SearchCallHistoryReadMultipleCallRecordsParameters.callRecords.getter( uint64_t (*a1)(void))
{
  return swift_bridgeObjectRetain();
}

uint64_t SearchCallHistoryShowCallHistoryParameters.device.getter()
{
  return swift_retain();
}

void SearchCallHistoryShowCallHistoryParameters.device.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(OUTLINED_FUNCTION_45_32() + 32);
  OUTLINED_FUNCTION_120_2();
  *(void *)(v1 + OUTLINED_FUNCTION_2_18(v2, v3) = a1;
  OUTLINED_FUNCTION_6();
}

Swift::Void (__swiftcall *SearchCallHistoryShowCallHistoryParameters.device.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t SearchCallHistoryShowCallHistoryParameters.intent.getter()
{
  return swift_retain();
}

void SearchCallHistoryShowCallHistoryParameters.intent.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(OUTLINED_FUNCTION_45_32() + 36);
  OUTLINED_FUNCTION_120_2();
  *(void *)(v1 + OUTLINED_FUNCTION_2_18(v2, v3) = a1;
  OUTLINED_FUNCTION_6();
}

Swift::Void (__swiftcall *SearchCallHistoryShowCallHistoryParameters.intent.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t SearchCallHistoryShowCallHistoryParameters.isFirstPartyApp.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(OUTLINED_FUNCTION_45_32() + 40));
}

uint64_t SearchCallHistoryShowCallHistoryParameters.isShowingMissedCall.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(OUTLINED_FUNCTION_45_32() + 44));
}

uint64_t SearchCallHistoryShowCallHistoryParameters.totalCallRecordCount.getter()
{
  return SearchCallHistoryReadMultipleVoiceMailRecordsParameters.savedRecordsCount.getter(type metadata accessor for SearchCallHistoryShowCallHistoryParameters);
}

uint64_t SearchCallHistoryReadMultipleVoiceMailRecordsParameters.savedRecordsCount.getter( uint64_t (*a1)(void))
{
  uint64_t v1 = OUTLINED_FUNCTION_94_0(a1);
  return OUTLINED_FUNCTION_75_22(*(int *)(v1 + 48));
}

void SearchCallHistoryShowCallHistoryParameters.totalCallRecordCount.setter(uint64_t a1, uint64_t a2)
{
}

void SearchCallHistoryReadMultipleVoiceMailRecordsParameters.savedRecordsCount.setter( uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v3 = OUTLINED_FUNCTION_126_9(a1, a2, a3);
  OUTLINED_FUNCTION_25_44(*(int *)(v3 + 48));
  OUTLINED_FUNCTION_6();
}

Swift::Void (__swiftcall *SearchCallHistoryShowCallHistoryParameters.totalCallRecordCount.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

void SearchCallHistoryShowCallHistoryParameters.asKeyValuePairs()()
{
  uint64_t v3 = (char *)&v35 - v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v5 = OUTLINED_FUNCTION_8_2(v4, 464LL);
  *(_OWORD *)(v5 + ++*(void *)(v0 + 16) = xmmword_32CC10;
  OUTLINED_FUNCTION_11_94(v5);
  uint64_t v6 = OUTLINED_FUNCTION_26_0();
  uint64_t v7 = OUTLINED_FUNCTION_34_5((uint64_t)v3);
  if (v8)
  {
    OUTLINED_FUNCTION_150(v7, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_133_13();
  }

  else
  {
    *(void *)(v5 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v6;
    uint64_t v9 = OUTLINED_FUNCTION_186();
    OUTLINED_FUNCTION_61_5((uint64_t)v9);
  }

  *(void *)(v5 + 80) = 0x656D614E707061LL;
  *(void *)(v5 + 88) = 0xE700000000000000LL;
  uint64_t v10 = (int *)OUTLINED_FUNCTION_45_32();
  uint64_t v11 = OUTLINED_FUNCTION_123_0((uint64_t)v10);
  outlined init with copy of TransformationResult?( v11,  v1,  &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v12 = OUTLINED_FUNCTION_34_5(v1);
  if (v8)
  {
    OUTLINED_FUNCTION_190(v12, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_133_13();
  }

  else
  {
    *(void *)(v5 + 120) = v6;
    unint64_t v13 = OUTLINED_FUNCTION_186();
    OUTLINED_FUNCTION_71_4( (uint64_t)v13,  v1,  *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL));
  }

  OUTLINED_FUNCTION_41_41();
  if ((v16 & 1) != 0)
  {
    *(void *)(v5 + 15__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
    *(void *)(v5 + 160) = 0LL;
    double v17 = 0.0;
  }

  else
  {
    double v17 = *v15;
  }

  OUTLINED_FUNCTION_75_28(v14, v17);
  uint64_t v19 = *(void *)(v0 + v18);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PhoneCallRecord]);
  *(void *)(v5 + 19__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v19;
  *(void *)(v5 + 2++*(void *)(v0 + 16) = v20;
  *(void *)(v5 + 224) = 0x656369766564LL;
  *(void *)(v5 + 23__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xE600000000000000LL;
  uint64_t v21 = *(void *)(v0 + v10[8]);
  if (v21)
  {
    OUTLINED_FUNCTION_50_6();
    uint64_t v22 = v21;
  }

  else
  {
    OUTLINED_FUNCTION_54_0();
    *(void *)(v5 + outlined init with copy of SharedGlobalsProviding(v0 - 128, v0 - 248) = 0LL;
    *(void *)(v5 + 256) = 0LL;
  }

  *(void *)(v5 + 240) = v22;
  OUTLINED_FUNCTION_98_7();
  *(void *)(v5 + 264) = v23;
  *(void *)(v5 + 27__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v24;
  *(void *)(v5 + 280) = 0xE600000000000000LL;
  uint64_t v25 = *(void *)(v0 + v10[9]);
  if (v25)
  {
    ObjC metadata update function for PhoneSearchCallHistoryIntent();
    uint64_t v26 = v25;
  }

  else
  {
    OUTLINED_FUNCTION_54_0();
    *(void *)(v5 + 296) = 0LL;
    *(void *)(v5 + 304) = 0LL;
  }

  *(void *)(v5 + 288) = v26;
  OUTLINED_FUNCTION_207();
  *(void *)(v5 + 31__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v27;
  *(void *)(v5 + 320) = v28;
  OUTLINED_FUNCTION_192();
  *(void *)(v5 + 328) = v29;
  *(_BYTE *)(v5 + 336) = *(_BYTE *)(v0 + v10[10]);
  *(void *)(v5 + 360) = &type metadata for Bool;
  *(void *)(v5 + 368) = 0xD000000000000013LL;
  *(void *)(v5 + 376) = 0x800000000034C7C0LL;
  *(_BYTE *)(v5 + 384) = *(_BYTE *)(v0 + v10[11]);
  *(void *)(v5 + 408) = &type metadata for Bool;
  *(void *)(v5 + 4++*(void *)(v0 + 16) = 0xD000000000000014LL;
  OUTLINED_FUNCTION_56_0();
  *(void *)(v5 + 424) = v30;
  OUTLINED_FUNCTION_80_18();
  if ((v32 & 1) != 0)
  {
    uint64_t v33 = 0LL;
    *(void *)(v5 + 440) = 0LL;
    *(void *)(v5 + 448) = 0LL;
    uint64_t v34 = 0LL;
  }

  else
  {
    uint64_t v34 = *v31;
    uint64_t v33 = &type metadata for Double;
  }

  *(void *)(v5 + 43__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v34;
  *(void *)(v5 + 456) = v33;
  OUTLINED_FUNCTION_95();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_95_1();
  OUTLINED_FUNCTION_158_7();
  OUTLINED_FUNCTION_16();
}

void SearchCallHistoryShowCallHistoryParameters.init(appBundleId:appName:callRecordCount:callRecords:device:intent:isFirstPartyApp:isShowingMissedCall:totalCallRecordCount:)( uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, char a9, uint64_t a10, char a11)
{
  uint64_t v18 = (int *)OUTLINED_FUNCTION_45_32();
  OUTLINED_FUNCTION_61_27(v12, v13 + v18[5]);
  uint64_t v19 = v13 + v18[6];
  *(void *)uint64_t v19 = v11;
  *(_BYTE *)(v19 + 8) = a4 & 1;
  *(void *)(v13 + v18[7]) = a5;
  *(void *)(v13 + v18[8]) = a6;
  *(void *)(v13 + v18[9]) = a7;
  *(_BYTE *)(v13 + v18[10]) = a8;
  *(_BYTE *)(v13 + v18[11]) = a9;
  uint64_t v20 = v13 + v18[12];
  *(void *)uint64_t v20 = a10;
  *(_BYTE *)(v20 + 8) = a11 & 1;
}

uint64_t SearchCallHistoryShowVoicemailsParameters.callRecords.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for SearchCallHistoryShowVoicemailsParameters(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State( a1,  (uint64_t *)&type metadata singleton initialization cache for SearchCallHistoryShowVoicemailsParameters,  (uint64_t)&nominal type descriptor for SearchCallHistoryShowVoicemailsParameters);
}

uint64_t SearchCallHistoryShowVoicemailsParameters.intent.getter()
{
  return StartCallIntentConfirmationWithRestrictedContactsParameters.intent.getter(type metadata accessor for SearchCallHistoryShowVoicemailsParameters);
}

void SearchCallHistoryShowVoicemailsParameters.intent.setter(uint64_t a1)
{
}

Swift::Void (__swiftcall *SearchCallHistoryShowVoicemailsParameters.intent.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t SearchCallHistoryShowVoicemailsParameters.newRecordsCount.getter()
{
  uint64_t v0 = type metadata accessor for SearchCallHistoryShowVoicemailsParameters(0LL);
  return OUTLINED_FUNCTION_75_22(*(int *)(v0 + 28));
}

void SearchCallHistoryShowVoicemailsParameters.newRecordsCount.setter()
{
  uint64_t v0 = OUTLINED_FUNCTION_124_10();
  OUTLINED_FUNCTION_25_44(*(int *)(v0 + 28));
  OUTLINED_FUNCTION_6();
}

Swift::Void (__swiftcall *SearchCallHistoryShowVoicemailsParameters.newRecordsCount.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t SearchCallHistoryShowVoicemailsParameters.savedRecordsCount.getter()
{
  uint64_t v0 = type metadata accessor for SearchCallHistoryShowVoicemailsParameters(0LL);
  return OUTLINED_FUNCTION_75_22(*(int *)(v0 + 32));
}

void SearchCallHistoryShowVoicemailsParameters.savedRecordsCount.setter()
{
  uint64_t v0 = OUTLINED_FUNCTION_124_10();
  OUTLINED_FUNCTION_25_44(*(int *)(v0 + 32));
  OUTLINED_FUNCTION_6();
}

Swift::Void (__swiftcall *SearchCallHistoryShowVoicemailsParameters.savedRecordsCount.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

void SearchCallHistoryShowVoicemailsParameters.asKeyValuePairs()()
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_8_2(v2, 272LL);
  *(_OWORD *)(v3 + ++*(void *)(v0 + 16) = xmmword_323F80;
  OUTLINED_FUNCTION_11_94(v3);
  OUTLINED_FUNCTION_26_0();
  uint64_t v4 = OUTLINED_FUNCTION_34_5(v1);
  if (v5)
  {
    OUTLINED_FUNCTION_150(v4, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)(v3 + 48) = 0u;
    *(_OWORD *)(v3 + 64) = 0u;
  }

  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_154_9();
    OUTLINED_FUNCTION_61_5((uint64_t)v6);
  }

  *(void *)(v3 + 80) = 0x6F6365526C6C6163LL;
  *(void *)(v3 + 88) = 0xEB00000000736472LL;
  uint64_t v7 = OUTLINED_FUNCTION_148_9();
  uint64_t v8 = *(void *)(v0 + *(int *)(v7 + 20));
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PhoneCallRecord]);
  *(void *)(v3 + 96) = v8;
  OUTLINED_FUNCTION_105_9(v9);
  uint64_t v10 = *(void *)(v0 + *(int *)(v7 + 24));
  if (v10)
  {
    uint64_t v11 = ObjC metadata update function for PhoneSearchCallHistoryIntent();
    uint64_t v12 = v10;
  }

  else
  {
    uint64_t v12 = 0LL;
    uint64_t v11 = 0LL;
    *(void *)(v3 + 15__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
    *(void *)(v3 + 160) = 0LL;
  }

  *(void *)(v3 + 144) = v12;
  *(void *)(v3 + 168) = v11;
  *(void *)(v3 + 176) = 0x726F63655277656ELL;
  *(void *)(v3 + 184) = 0xEF746E756F437364LL;
  OUTLINED_FUNCTION_80_18();
  if ((v14 & 1) != 0)
  {
    char v15 = 0LL;
    *(void *)(v3 + 200) = 0LL;
    *(void *)(v3 + outlined init with copy of SharedGlobalsProviding(v0 - 168, v0 - 208) = 0LL;
    uint64_t v16 = 0LL;
  }

  else
  {
    uint64_t v16 = *v13;
    char v15 = &type metadata for Double;
  }

  *(void *)(v3 + 19__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v16;
  *(void *)(v3 + 2++*(void *)(v0 + 16) = v15;
  *(void *)(v3 + 224) = 0xD000000000000011LL;
  OUTLINED_FUNCTION_129_12((uint64_t)"savedRecordsCount");
  OUTLINED_FUNCTION_80_18();
  if ((v18 & 1) != 0)
  {
    uint64_t v19 = 0LL;
    *(void *)(v3 + outlined init with copy of SharedGlobalsProviding(v0 - 128, v0 - 248) = 0LL;
    *(void *)(v3 + 256) = 0LL;
    uint64_t v20 = 0LL;
  }

  else
  {
    uint64_t v20 = *v17;
    uint64_t v19 = &type metadata for Double;
  }

  *(void *)(v3 + 240) = v20;
  *(void *)(v3 + 264) = v19;
  OUTLINED_FUNCTION_29_3();
  OUTLINED_FUNCTION_48_0();
  OUTLINED_FUNCTION_158_7();
  OUTLINED_FUNCTION_16();
}

int *SearchCallHistoryShowVoicemailsParameters.init(appBundleId:callRecords:intent:newRecordsCount:savedRecordsCount:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X8>)
{
  PhoneCallFlowDelegatePlugin::SearchCallHistoryCATPatternsIdentifiers_optional result = (int *)type metadata accessor for SearchCallHistoryShowVoicemailsParameters(0LL);
  *(void *)(a8 + result[5]) = a2;
  *(void *)(a8 + result[6]) = a3;
  uint64_t v16 = a8 + result[7];
  *(void *)uint64_t v16 = a4;
  *(_BYTE *)(v16 + 8) = a5 & 1;
  uint64_t v17 = a8 + result[8];
  *(void *)uint64_t v17 = a6;
  *(_BYTE *)(v17 + 8) = a7 & 1;
  return result;
}

void SearchCallHistoryUnsupportedSearchParametersParameters.confirmAction.getter()
{
}

uint64_t type metadata accessor for SearchCallHistoryUnsupportedSearchParametersParameters(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State( a1,  (uint64_t *)&type metadata singleton initialization cache for SearchCallHistoryUnsupportedSearchParametersParameters,  (uint64_t)&nominal type descriptor for SearchCallHistoryUnsupportedSearchParametersParameters);
}

uint64_t SearchCallHistoryUnsupportedSearchParametersParameters.confirmAction.setter(uint64_t a1)
{
  return SearchCallHistoryReadMultipleCallRecordsParameters.appName.setter( a1,  type metadata accessor for SearchCallHistoryUnsupportedSearchParametersParameters);
}

Swift::Void (__swiftcall *SearchCallHistoryUnsupportedSearchParametersParameters.confirmAction.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t SearchCallHistoryUnsupportedSearchParametersParameters.contactToConfirm.getter()
{
  return StartCallIntentConfirmationWithRestrictedContactsParameters.intent.getter(type metadata accessor for SearchCallHistoryUnsupportedSearchParametersParameters);
}

void SearchCallHistoryUnsupportedSearchParametersParameters.contactToConfirm.setter(uint64_t a1)
{
}

Swift::Void (__swiftcall *SearchCallHistoryUnsupportedSearchParametersParameters.contactToConfirm.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

void SearchCallHistoryUnsupportedSearchParametersParameters.displayText.getter()
{
  uint64_t v1 = OUTLINED_FUNCTION_151_7();
  OUTLINED_FUNCTION_87_16(v0 + *(int *)(v1 + 28), v2, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_2();
}

uint64_t SearchCallHistoryUnsupportedSearchParametersParameters.displayText.setter()
{
  return OUTLINED_FUNCTION_16_16(v0, v1);
}

Swift::Void (__swiftcall *SearchCallHistoryUnsupportedSearchParametersParameters.displayText.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

uint64_t SearchCallHistoryUnsupportedSearchParametersParameters.isLatest.getter()
{
  uint64_t v0 = OUTLINED_FUNCTION_59_24();
  return OUTLINED_FUNCTION_99_13(v0);
}

uint64_t SearchCallHistoryUnsupportedSearchParametersParameters.isMissed.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(OUTLINED_FUNCTION_59_24() + 36));
}

uint64_t SearchCallHistoryUnsupportedSearchParametersParameters.isVoicemail.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(OUTLINED_FUNCTION_59_24() + 40));
}

void SearchCallHistoryUnsupportedSearchParametersParameters.rejectAction.getter()
{
  uint64_t v1 = OUTLINED_FUNCTION_151_7();
  OUTLINED_FUNCTION_87_16(v0 + *(int *)(v1 + 44), v2, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_2();
}

uint64_t SearchCallHistoryUnsupportedSearchParametersParameters.rejectAction.setter()
{
  uint64_t v2 = OUTLINED_FUNCTION_142_11();
  return OUTLINED_FUNCTION_16_16(v0, v1 + *(int *)(v2 + 44));
}

Swift::Void (__swiftcall *SearchCallHistoryUnsupportedSearchParametersParameters.rejectAction.modify())(Swift::OpaquePointer newCallGroups)
{
  return INStartAudioCallIntent.overwriteCallGroups(newCallGroups:);
}

void SearchCallHistoryUnsupportedSearchParametersParameters.asKeyValuePairs()()
{
  uint64_t v3 = (char *)&v25 - v2;
  __chkstk_darwin();
  char v5 = (char *)&v25 - v4;
  __chkstk_darwin();
  uint64_t v7 = (char *)&v25 - v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v9 = OUTLINED_FUNCTION_8_2(v8, 416LL);
  *(_OWORD *)(v9 + ++*(void *)(v0 + 16) = xmmword_323F90;
  uint64_t v10 = OUTLINED_FUNCTION_62_25(v9);
  outlined init with copy of TransformationResult?( v10,  (uint64_t)v7,  &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v11 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_6_26((uint64_t)v7);
  if (v12)
  {
    outlined destroy of UUID?((uint64_t)v7, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_134_1();
  }

  else
  {
    *(void *)(v9 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v11;
    uint64_t v13 = OUTLINED_FUNCTION_112_0();
    OUTLINED_FUNCTION_86_3( (uint64_t)v13,  (uint64_t)v7,  *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32LL));
  }

  strcpy((char *)(v9 + 80), "confirmAction");
  *(_WORD *)(v9 + 94) = -4864;
  char v14 = (int *)OUTLINED_FUNCTION_59_24();
  uint64_t v15 = OUTLINED_FUNCTION_123_0((uint64_t)v14);
  outlined init with copy of TransformationResult?( v15,  (uint64_t)v5,  &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_6_26((uint64_t)v5);
  if (v12)
  {
    outlined destroy of UUID?((uint64_t)v5, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_134_1();
  }

  else
  {
    *(void *)(v9 + 120) = v11;
    uint64_t v16 = OUTLINED_FUNCTION_112_0();
    OUTLINED_FUNCTION_86_3( (uint64_t)v16,  (uint64_t)v5,  *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32LL));
  }

  OUTLINED_FUNCTION_179();
  *(void *)(v9 + outlined init with copy of SharedGlobalsProviding(v0, v1 - 128) = v17;
  *(void *)(v9 + 136) = v18;
  uint64_t v19 = *(void *)(v1 + v14[6]);
  if (v19)
  {
    uint64_t v20 = type metadata accessor for DialogPerson(0LL);
    uint64_t v21 = v19;
  }

  else
  {
    uint64_t v20 = OUTLINED_FUNCTION_54_0();
    *(void *)(v9 + 15__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
    *(void *)(v9 + 160) = 0LL;
  }

  *(void *)(v9 + 144) = v21;
  *(void *)(v9 + 168) = v20;
  *(void *)(v9 + 176) = 0x5479616C70736964LL;
  *(void *)(v9 + 184) = 0xEB00000000747865LL;
  outlined init with copy of TransformationResult?( v1 + v14[7],  (uint64_t)v3,  &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_6_26((uint64_t)v3);
  if (v12)
  {
    swift_retain();
    outlined destroy of UUID?((uint64_t)v3, &demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_134_1();
  }

  else
  {
    *(void *)(v9 + 2++*(void *)(v0 + 16) = v11;
    uint64_t v22 = OUTLINED_FUNCTION_112_0();
    OUTLINED_FUNCTION_86_3( (uint64_t)v22,  (uint64_t)v3,  *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32LL));
    swift_retain();
  }

  *(void *)(v9 + 224) = 0x74736574614C7369LL;
  *(void *)(v9 + 23__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xE800000000000000LL;
  *(_BYTE *)(v9 + 240) = *(_BYTE *)(v1 + v14[8]);
  *(void *)(v9 + 264) = &type metadata for Bool;
  *(void *)(v9 + 27__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0x64657373694D7369LL;
  *(void *)(v9 + 280) = 0xE800000000000000LL;
  *(_BYTE *)(v9 + 288) = *(_BYTE *)(v1 + v14[9]);
  *(void *)(v9 + 31__swift_destroy_boxed_opaque_existential_1(v0 + 2) = &type metadata for Bool;
  *(void *)(v9 + 320) = 0x6D6563696F567369LL;
  *(void *)(v9 + 328) = 0xEB000000006C6961LL;
  *(_BYTE *)(v9 + 336) = *(_BYTE *)(v1 + v14[10]);
  *(void *)(v9 + 360) = &type metadata for Bool;
  strcpy((char *)(v9 + 368), "rejectAction");
  *(_BYTE *)(v9 + 381) = 0;
  *(_WORD *)(v9 + 38__swift_destroy_boxed_opaque_existential_1(v0 + 2) = -5120;
  OUTLINED_FUNCTION_87_16(v1 + v14[11], v23, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_6_26(v0);
  if (v12)
  {
    outlined destroy of UUID?(v0, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)(v9 + 384) = 0u;
    *(_OWORD *)(v9 + 400) = 0u;
  }

  else
  {
    *(void *)(v9 + 408) = v11;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((void *)(v9 + 384));
    OUTLINED_FUNCTION_86_3( (uint64_t)boxed_opaque_existential_1,  v0,  *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32LL));
  }

  OUTLINED_FUNCTION_58();
}

void SearchCallHistoryUnsupportedSearchParametersParameters.init(appBundleId:confirmAction:contactToConfirm:displayText:isLatest:isMissed:isVoicemail:rejectAction:)()
{
  uint64_t v4 = v3;
  char v6 = v5;
  char v8 = v7;
  char v10 = v9;
  uint64_t v12 = v11;
  OUTLINED_FUNCTION_127_11();
  OUTLINED_FUNCTION_61_27(v13, v14);
  uint64_t v15 = (int *)OUTLINED_FUNCTION_59_24();
  OUTLINED_FUNCTION_61_27(v1, v2 + v15[5]);
  *(void *)(v2 + v15[6]) = v0;
  OUTLINED_FUNCTION_61_27(v12, v2 + v15[7]);
  *(_BYTE *)(v2 + v15[8]) = v10;
  *(_BYTE *)(v2 + v15[9]) = v8;
  *(_BYTE *)(v2 + v15[10]) = v6;
  OUTLINED_FUNCTION_61_27(v4, v2 + v15[11]);
  OUTLINED_FUNCTION_7_5();
}

void SearchCallHistoryVoiceMailOfferToFollowUpActionParameters.asKeyValuePairs()(char a1)
{
}

void SearchCallHistoryOfferToReadMoreCallRecordsParameters.asKeyValuePairs()( char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v7 = OUTLINED_FUNCTION_8_2(v6, 80LL);
  *(_OWORD *)(v7 + ++*(void *)(v0 + 16) = xmmword_31D870;
  *(void *)(v7 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a2;
  *(void *)(v7 + 40) = a3;
  *(void *)(v7 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = &type metadata for Bool;
  *(_BYTE *)(v7 + 48) = a1;
  OUTLINED_FUNCTION_6();
}

uint64_t SearchCallHistoryCATPatternsExecutor.offerToReadMoreCallRecords(isLastWindow:)(char a1)
{
  *(void *)(v2 + ++*(void *)(v0 + 16) = v1;
  *(_BYTE *)(v2 + 48) = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)SearchCallHistoryCATPatternsExecutor.offerToReadMoreCallRecords(isLastWindow:));
}

uint64_t SearchCallHistoryCATPatternsExecutor.offerToReadMoreCallRecords(isLastWindow:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_8_2(v1, 80LL);
  OUTLINED_FUNCTION_146_7();
  v3[4] = v4;
  v3[5] = 0xEC000000776F646ELL;
  v3[9] = &type metadata for Bool;
  uint64_t v6 = (void *)OUTLINED_FUNCTION_96_3( (uint64_t)v3,  (uint64_t)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:),  v5);
  *(void *)(v0 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v6;
  *uint64_t v6 = v0;
  v6[1] = SearchCallHistoryCATPatternsExecutor.offerToReadMoreCallRecords(isLastWindow:);
  OUTLINED_FUNCTION_27_3();
  return OUTLINED_FUNCTION_81_11(0xD00000000000002CLL, v7, v2, v9);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  OUTLINED_FUNCTION_26_31();
  if (v1)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v3, v4, v5);
  }

  else
  {
    swift_bridgeObjectRelease();
    return OUTLINED_FUNCTION_8_3(v0, *(uint64_t (**)(void))(v2 + 8));
  }

uint64_t SearchCallHistoryCATPatternsExecutor.readCannotFindCallRecord(isFirstPartyApp:isShowingMissedCall:_:)( char a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = OUTLINED_FUNCTION_38_40(a1, a2, a3, a4);
  uint64_t v6 = type metadata accessor for SearchCallHistoryReadCannotFindCallRecordParameters(v5);
  *(void *)(v4 + 40) = v6;
  *(void *)(v4 + 48) = OUTLINED_FUNCTION_12_0(v6);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t SearchCallHistoryCATPatternsExecutor.readCannotFindCallRecord(isFirstPartyApp:isShowingMissedCall:_:)()
{
  uint64_t v2 = *(int **)(v0 + 40);
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v3 = *(void (**)(uint64_t))(v0 + 16);
  char v4 = *(_BYTE *)(v0 + 89);
  char v5 = *(_BYTE *)(v0 + 88);
  uint64_t v6 = OUTLINED_FUNCTION_26_0();
  __swift_storeEnumTagSinglePayload(v1, 1LL, 1LL, v6);
  uint64_t v7 = v1 + v2[5];
  *(void *)uint64_t v7 = 0LL;
  *(_BYTE *)(v7 + 8) = 1;
  *(void *)(v1 + v2[6]) = 0LL;
  *(void *)(v1 + v2[7]) = 0LL;
  *(_BYTE *)(v1 + v2[8]) = v5;
  *(_BYTE *)(v1 + v2[9]) = v4;
  uint64_t v8 = v1 + v2[10];
  *(void *)uint64_t v8 = 0LL;
  *(_BYTE *)(v8 + 8) = 1;
  v3(v1);
  SearchCallHistoryReadCannotFindCallRecordParameters.asKeyValuePairs()();
  OUTLINED_FUNCTION_68_2(v9);
  char v10 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
  *(void *)(v0 + 64) = v10;
  OUTLINED_FUNCTION_53_7( v10,  (uint64_t)SearchCallHistoryCATPatternsExecutor.readCannotFindCallRecord(isFirstPartyApp:isShowingMissedCall:_:));
  OUTLINED_FUNCTION_27_3();
  unint64_t v11 = OUTLINED_FUNCTION_103_1(42LL);
  return OUTLINED_FUNCTION_18_39(v11, v12, v13, v14);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  OUTLINED_FUNCTION_6_33();
  OUTLINED_FUNCTION_34_0();
  if (!v1) {
    *(void *)(v2 + 80) = v0;
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_2_26(v3, v4, v5);
}

uint64_t SearchCallHistoryCATPatternsExecutor.readCannotFindCallRecord(isFirstPartyApp:isShowingMissedCall:_:)( uint64_t a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_22_15();
  return OUTLINED_FUNCTION_4_31(v1, v2);
}

{
  uint64_t (*v1)(void);
  OUTLINED_FUNCTION_22_19(a1, type metadata accessor for SearchCallHistoryReadCannotFindCallRecordParameters);
  OUTLINED_FUNCTION_23_3();
  uint64_t v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_58_0();
  return OUTLINED_FUNCTION_3_0(v1);
}

uint64_t SearchCallHistoryCATPatternsExecutor.readCannotFindVoicemail(_:)(uint64_t a1, uint64_t a2)
{
  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)SearchCallHistoryCATPatternsExecutor.readCannotFindVoicemail(_:));
}

uint64_t SearchCallHistoryCATPatternsExecutor.readCannotFindVoicemail(_:)()
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v7 = (__n128 *)OUTLINED_FUNCTION_8_2(v6, 176LL);
  *(void *)(v1 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v7;
  OUTLINED_FUNCTION_136_0(v7, (__n128)xmmword_320080);
  if (v0)
  {
    uint64_t v8 = ObjC metadata update function for PhoneSearchCallHistoryIntent();
    unint64_t v9 = v0;
  }

  else
  {
    unint64_t v9 = 0LL;
    uint64_t v8 = 0LL;
    v7[3].n128_u64[1] = 0LL;
    v7[4].n128_u64[0] = 0LL;
  }

  v7[3].n128_u64[0] = v9;
  OUTLINED_FUNCTION_18_71(v8);
  if ((_DWORD)v4)
  {
    char v10 = 0LL;
    v7[6].n128_u64[1] = 0LL;
    v7[7].n128_u64[0] = 0LL;
  }

  else
  {
    char v10 = &type metadata for Double;
  }

  OUTLINED_FUNCTION_141_9((uint64_t)v10);
  OUTLINED_FUNCTION_130_4((uint64_t)"savedRecordsCount");
  if (v3)
  {
    unint64_t v11 = 0LL;
    v7[9].n128_u64[1] = 0LL;
    v7[10].n128_u64[0] = 0LL;
    unint64_t v5 = 0LL;
  }

  else
  {
    unint64_t v11 = &type metadata for Double;
  }

  v7[9].n128_u64[0] = v5;
  v7[10].n128_u64[1] = (unint64_t)v11;
  OUTLINED_FUNCTION_72_28();
  uint64_t v12 = (void *)swift_task_alloc(v1);
  *(void *)(v2 + 96) = v12;
  *uint64_t v12 = v2;
  v12[1] = SearchCallHistoryCATPatternsExecutor.readCannotFindVoicemail(_:);
  uint64_t v13 = OUTLINED_FUNCTION_111_12(v4 + 24);
  return OUTLINED_FUNCTION_18_39(v13, v14, v15, v16);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  OUTLINED_FUNCTION_50_29();
  OUTLINED_FUNCTION_34_0();
  if (!v1) {
    *(void *)(v2 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v0;
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_2_26(v3, v4, v5);
}

{
  uint64_t v0;
  swift_release(*(void *)(v0 + 80));
  return OUTLINED_FUNCTION_4_31(*(void *)(v0 + 112), *(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  swift_release(*(void *)(v0 + 80));
  return OUTLINED_FUNCTION_3_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t SearchCallHistoryCATPatternsExecutor.readMultipleCallRecords(callRecords:callRecordsItem1:callRecordsItem2:callRecordsItem3:callRecordsItem4:isFirstPartyApp:isFirstWindow:isLastWindow:isShowingMissedCall:isSingleDateRequest:isTimeRangeRequest:_:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7, char a8)
{
  *(void *)(v9 + 64) = v19;
  *(void *)(v9 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v8;
  *(_BYTE *)(v9 + 133) = v17;
  *(_BYTE *)(v9 + 13__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v16;
  *(_BYTE *)(v9 + 131) = v15;
  *(_BYTE *)(v9 + 130) = a8;
  *(_BYTE *)(v9 + 129) = a7;
  *(_BYTE *)(v9 + outlined init with copy of SharedGlobalsProviding(v0, v1 - 128) = a6;
  *(void *)(v9 + 48) = a5;
  *(void *)(v9 + 56) = v18;
  *(void *)(v9 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a3;
  *(void *)(v9 + 40) = a4;
  *(void *)(v9 + ++*(void *)(v0 + 16) = a1;
  *(void *)(v9 + 24) = a2;
  uint64_t v10 = OUTLINED_FUNCTION_20_68();
  *(void *)(v9 + 80) = v10;
  *(void *)(v9 + 88) = OUTLINED_FUNCTION_12_0(v10);
  OUTLINED_FUNCTION_19_1();
  return swift_task_switch(v11, v12, v13);
}

uint64_t SearchCallHistoryCATPatternsExecutor.readMultipleCallRecords(callRecords:callRecordsItem1:callRecordsItem2:callRecordsItem3:callRecordsItem4:isFirstPartyApp:isFirstWindow:isLastWindow:isShowingMissedCall:isSingleDateRequest:isTimeRangeRequest:_:)()
{
  uint64_t v2 = *(int **)(v0 + 80);
  uint64_t v1 = *(void *)(v0 + 88);
  char v17 = *(_BYTE *)(v0 + 132);
  char v18 = *(_BYTE *)(v0 + 133);
  char v15 = *(_BYTE *)(v0 + 130);
  char v16 = *(_BYTE *)(v0 + 131);
  char v14 = *(_BYTE *)(v0 + 129);
  char v3 = *(_BYTE *)(v0 + 128);
  uint64_t v4 = *(void *)(v0 + 48);
  uint64_t v19 = *(void (**)(uint64_t))(v0 + 56);
  uint64_t v6 = *(void *)(v0 + 32);
  uint64_t v5 = *(void *)(v0 + 40);
  uint64_t v8 = *(void *)(v0 + 16);
  uint64_t v7 = *(void *)(v0 + 24);
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_135_8(v1);
  OUTLINED_FUNCTION_135_8(v1 + v2[5]);
  OUTLINED_FUNCTION_84_20(v2[6]);
  *(void *)(v1 + v2[7]) = v8;
  *(void *)(v1 + v2[8]) = v7;
  *(void *)(v1 + v2[9]) = v6;
  *(void *)(v1 + v2[10]) = v5;
  *(void *)(v1 + v2[11]) = v4;
  *(void *)(v1 + v2[12]) = 0LL;
  *(void *)(v1 + v2[13]) = 0LL;
  *(_BYTE *)(v1 + v2[14]) = v3;
  *(_BYTE *)(v1 + v2[15]) = v14;
  *(_BYTE *)(v1 + v2[16]) = v15;
  *(_BYTE *)(v1 + v2[17]) = v16;
  *(_BYTE *)(v1 + v2[18]) = v17;
  *(_BYTE *)(v1 + v2[19]) = v18;
  OUTLINED_FUNCTION_84_20(v2[20]);
  uint64_t v9 = v1 + v2[21];
  *(void *)uint64_t v9 = 0LL;
  *(_BYTE *)(v9 + 8) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_48_0();
  v19(v1);
  SearchCallHistoryReadMultipleCallRecordsParameters.asKeyValuePairs()();
  *(void *)(v0 + 96) = v11;
  *(void *)(v0 + outlined init with copy of SharedGlobalsProviding(v0, v1 - 104) = v12;
  *uint64_t v12 = v0;
  v12[1] = SearchCallHistoryCATPatternsExecutor.readMultipleCallRecords(callRecords:callRecordsItem1:callRecordsItem2:callRecordsItem3:callRecordsItem4:isFirstPartyApp:isFirstWindow:isLastWindow:isShowingMissedCall:isSingleDateRequest:isTimeRangeRequest:_:);
  OUTLINED_FUNCTION_27_3();
  return v20(0xD000000000000029LL);
}

uint64_t SearchCallHistoryCATPatternsExecutor.readMultipleCallRecords(callRecords:callRecordsItem1:callRecordsItem2:callRecordsItem3:callRecordsItem4:isFirstPartyApp:isFirstWindow:isLastWindow:isShowingMissedCall:isSingleDateRequest:isTimeRangeRequest:_:)( uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_34_0();
  if (!v1) {
    *(void *)(v4 + 120) = a1;
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_2_26(v5, v6, v7);
}

{
  uint64_t v1;
  OUTLINED_FUNCTION_22_19(a1, type metadata accessor for SearchCallHistoryReadMultipleCallRecordsParameters);
  OUTLINED_FUNCTION_23_3();
  return OUTLINED_FUNCTION_4_31(*(void *)(v1 + 120), *(uint64_t (**)(void))(v1 + 8));
}

{
  uint64_t v1;
  OUTLINED_FUNCTION_22_19(a1, type metadata accessor for SearchCallHistoryReadMultipleCallRecordsParameters);
  OUTLINED_FUNCTION_23_3();
  return OUTLINED_FUNCTION_3_0(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t SearchCallHistoryCATPatternsExecutor.readMultipleVoiceMailRecords(isLeadingSavedVoiceMailPostPrompt:isNewVoicemail:isSingleDateRequest:isTimeRangeRequest:_:)( char a1, char a2, char a3, char a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v7 + 24) = a6;
  *(void *)(v7 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v6;
  *(void *)(v7 + ++*(void *)(v0 + 16) = a5;
  *(_BYTE *)(v7 + 91) = a4;
  *(_BYTE *)(v7 + 90) = a3;
  *(_BYTE *)(v7 + 89) = a2;
  *(_BYTE *)(v7 + 88) = a1;
  uint64_t v8 = OUTLINED_FUNCTION_58_27();
  *(void *)(v7 + 40) = v8;
  *(void *)(v7 + 48) = OUTLINED_FUNCTION_12_0(v8);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t SearchCallHistoryCATPatternsExecutor.readMultipleVoiceMailRecords(isLeadingSavedVoiceMailPostPrompt:isNewVoicemail:isSingleDateRequest:isTimeRangeRequest:_:)()
{
  uint64_t v2 = *(int **)(v0 + 40);
  uint64_t v1 = *(void *)(v0 + 48);
  char v3 = *(_BYTE *)(v0 + 88);
  uint64_t v4 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_77_20(v4);
  OUTLINED_FUNCTION_32_54(v2[13]);
  *(void *)(v1 + v2[5]) = 0LL;
  *(void *)(v1 + v2[6]) = 0LL;
  *(_BYTE *)(v1 + v2[7]) = v3;
  OUTLINED_FUNCTION_92_16();
  OUTLINED_FUNCTION_84_20(v2[11]);
  uint64_t v5 = v1 + v2[12];
  *(void *)uint64_t v5 = 0LL;
  *(_BYTE *)(v5 + 8) = v6;
  OUTLINED_FUNCTION_156_3();
  SearchCallHistoryReadMultipleVoiceMailRecordsParameters.asKeyValuePairs()();
  OUTLINED_FUNCTION_68_2(v7);
  uint64_t v8 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
  *(void *)(v0 + 64) = v8;
  OUTLINED_FUNCTION_53_7( v8,  (uint64_t)SearchCallHistoryCATPatternsExecutor.readMultipleVoiceMailRecords(isLeadingSavedVoiceMailPostPrompt:isNewVoicemail:isSingleDateRequest:isTimeRangeRequest:_:));
  OUTLINED_FUNCTION_27_3();
  unint64_t v9 = OUTLINED_FUNCTION_103_1(46LL);
  return OUTLINED_FUNCTION_191_0(v9, v10, v11, v12);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  OUTLINED_FUNCTION_6_33();
  OUTLINED_FUNCTION_34_0();
  if (!v1) {
    *(void *)(v2 + 80) = v0;
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_2_26(v3, v4, v5);
}

uint64_t SearchCallHistoryCATPatternsExecutor.readMultipleVoiceMailRecords(isLeadingSavedVoiceMailPostPrompt:isNewVoicemail:isSingleDateRequest:isTimeRangeRequest:_:)( uint64_t a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_22_15();
  return OUTLINED_FUNCTION_4_31(v1, v2);
}

{
  uint64_t (*v1)(void);
  OUTLINED_FUNCTION_22_19(a1, type metadata accessor for SearchCallHistoryReadMultipleVoiceMailRecordsParameters);
  OUTLINED_FUNCTION_23_3();
  uint64_t v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_58_0();
  return OUTLINED_FUNCTION_3_0(v1);
}

uint64_t SearchCallHistoryCATPatternsExecutor.readPlayVoiceMailPrePrompt()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
  *(void *)(v0 + ++*(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  return OUTLINED_FUNCTION_4_2(0xD00000000000002CLL, 0x8000000000344550LL, (uint64_t)_swiftEmptyArrayStorage, v3);
}

uint64_t SearchCallHistoryCATPatternsExecutor.readSingleCallRecord(isSingleDateRequest:isTimeRangeRequest:_:)( char a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = OUTLINED_FUNCTION_38_40(a1, a2, a3, a4);
  uint64_t v6 = type metadata accessor for SearchCallHistoryReadSingleCallRecordParameters(v5);
  *(void *)(v4 + 40) = v6;
  *(void *)(v4 + 48) = OUTLINED_FUNCTION_12_0(v6);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t SearchCallHistoryCATPatternsExecutor.readSingleCallRecord(isSingleDateRequest:isTimeRangeRequest:_:)()
{
  uint64_t v1 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_9_86(v1);
  SearchCallHistoryReadSingleCallRecordParameters.asKeyValuePairs()();
  OUTLINED_FUNCTION_68_2(v2);
  char v3 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
  *(void *)(v0 + 64) = v3;
  OUTLINED_FUNCTION_53_7( v3,  (uint64_t)SearchCallHistoryCATPatternsExecutor.readSingleCallRecord(isSingleDateRequest:isTimeRangeRequest:_:));
  OUTLINED_FUNCTION_27_3();
  unint64_t v4 = OUTLINED_FUNCTION_52_7(38LL);
  return OUTLINED_FUNCTION_18_39(v4, v5, v6, v7);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  OUTLINED_FUNCTION_6_33();
  OUTLINED_FUNCTION_34_0();
  if (!v1) {
    *(void *)(v2 + 80) = v0;
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_2_26(v3, v4, v5);
}

uint64_t SearchCallHistoryCATPatternsExecutor.readSingleCallRecord(isSingleDateRequest:isTimeRangeRequest:_:)( uint64_t a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_22_15();
  return OUTLINED_FUNCTION_4_31(v1, v2);
}

{
  uint64_t (*v1)(void);
  OUTLINED_FUNCTION_22_19(a1, type metadata accessor for SearchCallHistoryReadSingleCallRecordParameters);
  OUTLINED_FUNCTION_23_3();
  uint64_t v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_58_0();
  return OUTLINED_FUNCTION_3_0(v1);
}

uint64_t SearchCallHistoryCATPatternsExecutor.readSingleCallRecordDisplayForward(isSingleDateRequest:isTimeRangeRequest:_:)( char a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = OUTLINED_FUNCTION_38_40(a1, a2, a3, a4);
  uint64_t v6 = type metadata accessor for SearchCallHistoryReadSingleCallRecordDisplayForwardParameters(v5);
  *(void *)(v4 + 40) = v6;
  *(void *)(v4 + 48) = OUTLINED_FUNCTION_12_0(v6);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t SearchCallHistoryCATPatternsExecutor.readSingleCallRecordDisplayForward(isSingleDateRequest:isTimeRangeRequest:_:)()
{
  uint64_t v1 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_9_86(v1);
  SearchCallHistoryReadSingleCallRecordDisplayForwardParameters.asKeyValuePairs()();
  OUTLINED_FUNCTION_68_2(v2);
  char v3 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
  *(void *)(v0 + 64) = v3;
  OUTLINED_FUNCTION_53_7( v3,  (uint64_t)SearchCallHistoryCATPatternsExecutor.readSingleCallRecordDisplayForward(isSingleDateRequest:isTimeRangeRequest:_:));
  OUTLINED_FUNCTION_27_3();
  unint64_t v4 = OUTLINED_FUNCTION_52_7(52LL);
  return OUTLINED_FUNCTION_18_39(v4, v5, v6, v7);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  OUTLINED_FUNCTION_6_33();
  OUTLINED_FUNCTION_34_0();
  if (!v1) {
    *(void *)(v2 + 80) = v0;
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_2_26(v3, v4, v5);
}

uint64_t SearchCallHistoryCATPatternsExecutor.readSingleCallRecordDisplayForward(isSingleDateRequest:isTimeRangeRequest:_:)( uint64_t a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_22_15();
  return OUTLINED_FUNCTION_4_31(v1, v2);
}

{
  uint64_t (*v1)(void);
  OUTLINED_FUNCTION_22_19(a1, type metadata accessor for SearchCallHistoryReadSingleCallRecordDisplayForwardParameters);
  OUTLINED_FUNCTION_23_3();
  uint64_t v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_58_0();
  return OUTLINED_FUNCTION_3_0(v1);
}

uint64_t SearchCallHistoryCATPatternsExecutor.readSingleVoiceMailRecord(isSingleDateRequest:isTimeRangeRequest:_:)( char a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = OUTLINED_FUNCTION_38_40(a1, a2, a3, a4);
  uint64_t v6 = type metadata accessor for SearchCallHistoryReadSingleVoiceMailRecordParameters(v5);
  *(void *)(v4 + 40) = v6;
  *(void *)(v4 + 48) = OUTLINED_FUNCTION_12_0(v6);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t SearchCallHistoryCATPatternsExecutor.readSingleVoiceMailRecord(isSingleDateRequest:isTimeRangeRequest:_:)()
{
  uint64_t v1 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_9_86(v1);
  SearchCallHistoryReadSingleVoiceMailRecordParameters.asKeyValuePairs()();
  OUTLINED_FUNCTION_68_2(v2);
  char v3 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
  *(void *)(v0 + 64) = v3;
  OUTLINED_FUNCTION_53_7( v3,  (uint64_t)SearchCallHistoryCATPatternsExecutor.readSingleVoiceMailRecord(isSingleDateRequest:isTimeRangeRequest:_:));
  OUTLINED_FUNCTION_27_3();
  unint64_t v4 = OUTLINED_FUNCTION_52_7(43LL);
  return OUTLINED_FUNCTION_18_39(v4, v5, v6, v7);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  OUTLINED_FUNCTION_6_33();
  OUTLINED_FUNCTION_34_0();
  if (!v1) {
    *(void *)(v2 + 80) = v0;
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_2_26(v3, v4, v5);
}

uint64_t SearchCallHistoryCATPatternsExecutor.readSingleVoiceMailRecord(isSingleDateRequest:isTimeRangeRequest:_:)( uint64_t a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_22_15();
  return OUTLINED_FUNCTION_4_31(v1, v2);
}

{
  uint64_t (*v1)(void);
  OUTLINED_FUNCTION_22_19(a1, type metadata accessor for SearchCallHistoryReadSingleVoiceMailRecordParameters);
  OUTLINED_FUNCTION_23_3();
  uint64_t v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_58_0();
  return OUTLINED_FUNCTION_3_0(v1);
}

uint64_t SearchCallHistoryCATPatternsExecutor.readVoicemailsIntroduction(_:)(uint64_t a1, uint64_t a2)
{
  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)SearchCallHistoryCATPatternsExecutor.readVoicemailsIntroduction(_:));
}

uint64_t SearchCallHistoryCATPatternsExecutor.readVoicemailsIntroduction(_:)()
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v7 = (__n128 *)OUTLINED_FUNCTION_8_2(v6, 176LL);
  *(void *)(v1 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v7;
  OUTLINED_FUNCTION_136_0(v7, (__n128)xmmword_320080);
  if (v0)
  {
    uint64_t v8 = ObjC metadata update function for PhoneSearchCallHistoryIntent();
    unint64_t v9 = v0;
  }

  else
  {
    unint64_t v9 = 0LL;
    uint64_t v8 = 0LL;
    v7[3].n128_u64[1] = 0LL;
    v7[4].n128_u64[0] = 0LL;
  }

  v7[3].n128_u64[0] = v9;
  OUTLINED_FUNCTION_18_71(v8);
  if ((_DWORD)v4)
  {
    uint64_t v10 = 0LL;
    v7[6].n128_u64[1] = 0LL;
    v7[7].n128_u64[0] = 0LL;
  }

  else
  {
    uint64_t v10 = &type metadata for Double;
  }

  OUTLINED_FUNCTION_141_9((uint64_t)v10);
  OUTLINED_FUNCTION_130_4((uint64_t)"savedRecordsCount");
  if (v3)
  {
    uint64_t v11 = 0LL;
    v7[9].n128_u64[1] = 0LL;
    v7[10].n128_u64[0] = 0LL;
    unint64_t v5 = 0LL;
  }

  else
  {
    uint64_t v11 = &type metadata for Double;
  }

  v7[9].n128_u64[0] = v5;
  v7[10].n128_u64[1] = (unint64_t)v11;
  OUTLINED_FUNCTION_72_28();
  uint64_t v12 = (void *)swift_task_alloc(v1);
  *(void *)(v2 + 96) = v12;
  *uint64_t v12 = v2;
  v12[1] = SearchCallHistoryCATPatternsExecutor.readVoicemailsIntroduction(_:);
  uint64_t v13 = OUTLINED_FUNCTION_111_12(v4 + 27);
  return OUTLINED_FUNCTION_18_39(v13, v14, v15, v16);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  OUTLINED_FUNCTION_50_29();
  OUTLINED_FUNCTION_34_0();
  if (!v1) {
    *(void *)(v2 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v0;
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_2_26(v3, v4, v5);
}

uint64_t SearchCallHistoryCATPatternsExecutor.showCallHistory(callRecords:isFirstPartyApp:isShowingMissedCall:_:)( uint64_t a1, char a2, char a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v6 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a5;
  *(void *)(v6 + 40) = v5;
  *(_BYTE *)(v6 + 9__swift_destroy_boxed_opaque_existential_1(v0 + 7) = a3;
  *(_BYTE *)(v6 + 96) = a2;
  *(void *)(v6 + ++*(void *)(v0 + 16) = a1;
  *(void *)(v6 + 24) = a4;
  uint64_t v7 = OUTLINED_FUNCTION_45_32();
  *(void *)(v6 + 48) = v7;
  *(void *)(v6 + 56) = OUTLINED_FUNCTION_12_0(v7);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t SearchCallHistoryCATPatternsExecutor.showCallHistory(callRecords:isFirstPartyApp:isShowingMissedCall:_:)()
{
  uint64_t v2 = *(int **)(v0 + 48);
  uint64_t v1 = *(void *)(v0 + 56);
  int v3 = *(void (**)(uint64_t))(v0 + 24);
  char v4 = *(_BYTE *)(v0 + 97);
  char v5 = *(_BYTE *)(v0 + 96);
  uint64_t v6 = *(void *)(v0 + 16);
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_164(v1);
  OUTLINED_FUNCTION_164(v1 + v2[5]);
  uint64_t v7 = v1 + v2[6];
  *(void *)uint64_t v7 = 0LL;
  *(_BYTE *)(v7 + 8) = 1;
  *(void *)(v1 + v2[7]) = v6;
  *(void *)(v1 + v2[8]) = 0LL;
  *(void *)(v1 + v2[9]) = 0LL;
  *(_BYTE *)(v1 + v2[10]) = v5;
  *(_BYTE *)(v1 + v2[11]) = v4;
  uint64_t v8 = v1 + v2[12];
  *(void *)uint64_t v8 = 0LL;
  *(_BYTE *)(v8 + 8) = 1;
  OUTLINED_FUNCTION_48_0();
  v3(v1);
  SearchCallHistoryShowCallHistoryParameters.asKeyValuePairs()();
  *(void *)(v0 + 64) = v9;
  uint64_t v10 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
  *(void *)(v0 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v10;
  *uint64_t v10 = v0;
  v10[1] = SearchCallHistoryCATPatternsExecutor.showCallHistory(callRecords:isFirstPartyApp:isShowingMissedCall:_:);
  OUTLINED_FUNCTION_27_3();
  unint64_t v11 = OUTLINED_FUNCTION_103_1(33LL);
  return OUTLINED_FUNCTION_191_0(v11, v12, v13, v14);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  OUTLINED_FUNCTION_88_3();
  OUTLINED_FUNCTION_34_0();
  if (!v1) {
    *(void *)(v2 + 88) = v0;
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_2_26(v3, v4, v5);
}

uint64_t SearchCallHistoryCATPatternsExecutor.showCallHistory(callRecords:isFirstPartyApp:isShowingMissedCall:_:)( uint64_t a1)
{
  return OUTLINED_FUNCTION_4_31(*(void *)(v1 + 88), *(uint64_t (**)(void))(v1 + 8));
}

{
  uint64_t v1;
  OUTLINED_FUNCTION_22_19(a1, type metadata accessor for SearchCallHistoryShowCallHistoryParameters);
  OUTLINED_FUNCTION_23_3();
  return OUTLINED_FUNCTION_3_0(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t SearchCallHistoryCATPatternsExecutor.showVoicemails(callRecords:_:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  void v4[4] = a3;
  void v4[5] = v3;
  void v4[2] = a1;
  v4[3] = a2;
  uint64_t v5 = OUTLINED_FUNCTION_148_9();
  void v4[6] = v5;
  v4[7] = OUTLINED_FUNCTION_12_0(v5);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t SearchCallHistoryCATPatternsExecutor.showVoicemails(callRecords:_:)()
{
  uint64_t v2 = (int *)v0[6];
  uint64_t v1 = v0[7];
  uint64_t v3 = v0[2];
  uint64_t v4 = OUTLINED_FUNCTION_26_0();
  __swift_storeEnumTagSinglePayload(v1, 1LL, 1LL, v4);
  *(void *)(v1 + v2[5]) = v3;
  *(void *)(v1 + v2[6]) = 0LL;
  uint64_t v5 = v1 + v2[7];
  *(void *)uint64_t v5 = 0LL;
  *(_BYTE *)(v5 + 8) = 1;
  uint64_t v6 = v1 + v2[8];
  *(void *)uint64_t v6 = 0LL;
  *(_BYTE *)(v6 + 8) = 1;
  OUTLINED_FUNCTION_48_0();
  OUTLINED_FUNCTION_156_3();
  SearchCallHistoryShowVoicemailsParameters.asKeyValuePairs()();
  v0[8] = v7;
  uint64_t v8 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
  v0[9] = v8;
  *uint64_t v8 = v0;
  v8[1] = SearchCallHistoryCATPatternsExecutor.showVoicemails(callRecords:_:);
  OUTLINED_FUNCTION_27_3();
  unint64_t v9 = OUTLINED_FUNCTION_52_7(32LL);
  return OUTLINED_FUNCTION_18_39(v9, v10, v11, v12);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  OUTLINED_FUNCTION_88_3();
  OUTLINED_FUNCTION_34_0();
  if (!v1) {
    *(void *)(v2 + 88) = v0;
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_2_26(v3, v4, v5);
}

uint64_t SearchCallHistoryCATPatternsExecutor.showVoicemails(callRecords:_:)(uint64_t a1)
{
  return OUTLINED_FUNCTION_4_31(*(void *)(v1 + 88), *(uint64_t (**)(void))(v1 + 8));
}

{
  uint64_t v1;
  OUTLINED_FUNCTION_22_19(a1, type metadata accessor for SearchCallHistoryShowVoicemailsParameters);
  OUTLINED_FUNCTION_23_3();
  return OUTLINED_FUNCTION_3_0(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t SearchCallHistoryCATPatternsExecutor.unsupportedSearchParameters(isLatest:isMissed:isVoicemail:_:)( char a1, char a2, char a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v6 + 24) = a5;
  *(void *)(v6 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v5;
  *(void *)(v6 + ++*(void *)(v0 + 16) = a4;
  *(_BYTE *)(v6 + 90) = a3;
  *(_BYTE *)(v6 + 89) = a2;
  *(_BYTE *)(v6 + 88) = a1;
  uint64_t v7 = OUTLINED_FUNCTION_59_24();
  *(void *)(v6 + 40) = v7;
  *(void *)(v6 + 48) = OUTLINED_FUNCTION_12_0(v7);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t SearchCallHistoryCATPatternsExecutor.unsupportedSearchParameters(isLatest:isMissed:isVoicemail:_:)()
{
  uint64_t v2 = (int *)v0[5];
  uint64_t v1 = v0[6];
  uint64_t v3 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_77_20(v3);
  OUTLINED_FUNCTION_32_54(v2[5]);
  OUTLINED_FUNCTION_32_54(v2[7]);
  OUTLINED_FUNCTION_32_54(v2[11]);
  *(void *)(v1 + v2[6]) = 0LL;
  OUTLINED_FUNCTION_92_16();
  OUTLINED_FUNCTION_156_3();
  SearchCallHistoryUnsupportedSearchParametersParameters.asKeyValuePairs()();
  OUTLINED_FUNCTION_68_2(v4);
  uint64_t v5 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
  v0[8] = v5;
  OUTLINED_FUNCTION_53_7( v5,  (uint64_t)SearchCallHistoryCATPatternsExecutor.unsupportedSearchParameters(isLatest:isMissed:isVoicemail:_:));
  OUTLINED_FUNCTION_27_3();
  return OUTLINED_FUNCTION_191_0(0xD00000000000002DLL, v6, v1, v8);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  OUTLINED_FUNCTION_6_33();
  OUTLINED_FUNCTION_34_0();
  if (!v1) {
    *(void *)(v2 + 80) = v0;
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_2_26(v3, v4, v5);
}

uint64_t SearchCallHistoryCATPatternsExecutor.unsupportedSearchParameters(isLatest:isMissed:isVoicemail:_:)( uint64_t a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_22_15();
  return OUTLINED_FUNCTION_4_31(v1, v2);
}

{
  uint64_t (*v1)(void);
  OUTLINED_FUNCTION_22_19(a1, type metadata accessor for SearchCallHistoryUnsupportedSearchParametersParameters);
  OUTLINED_FUNCTION_23_3();
  uint64_t v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_58_0();
  return OUTLINED_FUNCTION_3_0(v1);
}

uint64_t SearchCallHistoryCATPatternsExecutor.voiceMailOfferToFollowUpAction(isLastPage:)(char a1)
{
  *(void *)(v2 + ++*(void *)(v0 + 16) = v1;
  *(_BYTE *)(v2 + 48) = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)SearchCallHistoryCATPatternsExecutor.voiceMailOfferToFollowUpAction(isLastPage:));
}

uint64_t SearchCallHistoryCATPatternsExecutor.voiceMailOfferToFollowUpAction(isLastPage:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = (void *)OUTLINED_FUNCTION_8_2(v1, 80LL);
  v2[4] = 0x61507473614C7369LL;
  v2[5] = 0xEA00000000006567LL;
  v2[9] = &type metadata for Bool;
  uint64_t v3 = (void *)OUTLINED_FUNCTION_96_3( (uint64_t)v2,  (uint64_t)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:),  (__n128)xmmword_31D870);
  *(void *)(v0 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v3;
  *uint64_t v3 = v0;
  v3[1] = SearchCallHistoryCATPatternsExecutor.voiceMailOfferToFollowUpAction(isLastPage:);
  OUTLINED_FUNCTION_27_3();
  return OUTLINED_FUNCTION_81_11(0xD000000000000030LL, v4, (uint64_t)v2, v6);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  OUTLINED_FUNCTION_26_31();
  if (v1)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v3, v4, v5);
  }

  else
  {
    swift_bridgeObjectRelease();
    return OUTLINED_FUNCTION_8_3(v0, *(uint64_t (**)(void))(v2 + 8));
  }

uint64_t SearchCallHistoryCATPatternsExecutor.voiceMailPromptToPlay()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
  *(void *)(v0 + ++*(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = SuggestionsCATsSimple.phoneCall_StartGFTCall();
  return OUTLINED_FUNCTION_4_2(0xD000000000000027LL, 0x8000000000344880LL, (uint64_t)_swiftEmptyArrayStorage, v3);
}

void SearchCallHistoryCATPatternsExecutor.__allocating_init(templateDir:options:globals:)()
{
}

void SearchCallHistoryCATPatternsExecutor.init(templateDir:options:globals:)()
{
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = type metadata accessor for CATOption(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v10 = v9 - v8;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v13 = v12 - v11;
  outlined init with copy of TransformationResult?( v5,  v12 - v11,  (uint64_t *)&demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_71_4(v10, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16));
  CATWrapper.init(templateDir:options:globals:)(v13, v10, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v3, v6);
  outlined destroy of UUID?(v5, (uint64_t *)&demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_7_5();
}

unint64_t lazy protocol witness table accessor for type SearchCallHistoryCATPatternsIdentifiers and conformance SearchCallHistoryCATPatternsIdentifiers()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryCATPatternsIdentifiers and conformance SearchCallHistoryCATPatternsIdentifiers;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryCATPatternsIdentifiers and conformance SearchCallHistoryCATPatternsIdentifiers)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for SearchCallHistoryCATPatternsIdentifiers,  &type metadata for SearchCallHistoryCATPatternsIdentifiers);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryCATPatternsIdentifiers and conformance SearchCallHistoryCATPatternsIdentifiers);
  }

  return result;
}

uint64_t protocol witness for SearchCallHistoryCATPatternsExecuting.offerToReadMoreCallRecords(isLastWindow:) in conformance SearchCallHistoryCATPatternsExecutor( uint64_t a1)
{
  uint64_t v4 = *(int **)(**v1 + class metadata base offset for SearchCallHistoryCATPatternsExecutor);
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  uint64_t v5 = (void *)swift_task_alloc(v4[1]);
  *(void *)(v2 + ++*(void *)(v0 + 16) = v5;
  void *v5 = v2;
  v5[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  return v7(a1);
}

uint64_t protocol witness for SearchCallHistoryCATPatternsExecuting.readCannotFindCallRecord(isFirstPartyApp:isShowingMissedCall:_:) in conformance SearchCallHistoryCATPatternsExecutor( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = *(int **)(class metadata base offset for SearchCallHistoryCATPatternsExecutor + **v4 + 8);
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v10 + *v10);
  uint64_t v11 = (void *)swift_task_alloc(v10[1]);
  *(void *)(v5 + ++*(void *)(v0 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  return v13(a1, a2, a3, a4);
}

uint64_t protocol witness for SearchCallHistoryCATPatternsExecuting.readCannotFindVoicemail(_:) in conformance SearchCallHistoryCATPatternsExecutor( uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)(class metadata base offset for SearchCallHistoryCATPatternsExecutor + **v2 + 16);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  uint64_t v7 = (void *)swift_task_alloc(v6[1]);
  *(void *)(v3 + ++*(void *)(v0 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  return v9(a1, a2);
}

uint64_t protocol witness for SearchCallHistoryCATPatternsExecuting.readMultipleCallRecords(callRecords:callRecordsItem1:callRecordsItem2:callRecordsItem3:callRecordsItem4:isFirstPartyApp:isFirstWindow:isLastWindow:isShowingMissedCall:isSingleDateRequest:isTimeRangeRequest:_:) in conformance SearchCallHistoryCATPatternsExecutor( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, unsigned int a7, unsigned int a8, uint64_t a9)
{
  uint64_t v14 = *(int **)(class metadata base offset for SearchCallHistoryCATPatternsExecutor + **v9 + 24);
  char v17 = (int *)((char *)v14 + *v14);
  uint64_t v15 = (void *)swift_task_alloc(v14[1]);
  *(void *)(v10 + ++*(void *)(v0 + 16) = v15;
  *uint64_t v15 = v10;
  v15[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  BYTE2(a9) = v24;
  LOWORD(a9) = v23;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, uint64_t))v17)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9);
}

uint64_t protocol witness for SearchCallHistoryCATPatternsExecuting.readMultipleVoiceMailRecords(isLeadingSavedVoiceMailPostPrompt:isNewVoicemail:isSingleDateRequest:isTimeRangeRequest:_:) in conformance SearchCallHistoryCATPatternsExecutor( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v14 = *(int **)(class metadata base offset for SearchCallHistoryCATPatternsExecutor + **v6 + 32);
  char v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)v14 + *v14);
  uint64_t v15 = (void *)swift_task_alloc(v14[1]);
  *(void *)(v7 + ++*(void *)(v0 + 16) = v15;
  *uint64_t v15 = v7;
  v15[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  return v17(a1, a2, a3, a4, a5, a6);
}

uint64_t protocol witness for SearchCallHistoryCATPatternsExecuting.readPlayVoiceMailPrePrompt() in conformance SearchCallHistoryCATPatternsExecutor()
{
  uint64_t v2 = *(int **)(class metadata base offset for SearchCallHistoryCATPatternsExecutor + **v0 + 40);
  uint64_t v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  uint64_t v3 = (void *)swift_task_alloc(v2[1]);
  *(void *)(v1 + ++*(void *)(v0 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  return v5();
}

uint64_t protocol witness for SearchCallHistoryCATPatternsExecuting.readSingleCallRecord(isSingleDateRequest:isTimeRangeRequest:_:) in conformance SearchCallHistoryCATPatternsExecutor( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = *(int **)(class metadata base offset for SearchCallHistoryCATPatternsExecutor + **v4 + 48);
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v10 + *v10);
  uint64_t v11 = (void *)swift_task_alloc(v10[1]);
  *(void *)(v5 + ++*(void *)(v0 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  return v13(a1, a2, a3, a4);
}

uint64_t protocol witness for SearchCallHistoryCATPatternsExecuting.readSingleCallRecordDisplayForward(isSingleDateRequest:isTimeRangeRequest:_:) in conformance SearchCallHistoryCATPatternsExecutor( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = *(int **)(class metadata base offset for SearchCallHistoryCATPatternsExecutor + **v4 + 56);
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v10 + *v10);
  uint64_t v11 = (void *)swift_task_alloc(v10[1]);
  *(void *)(v5 + ++*(void *)(v0 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  return v13(a1, a2, a3, a4);
}

uint64_t protocol witness for SearchCallHistoryCATPatternsExecuting.readSingleVoiceMailRecord(isSingleDateRequest:isTimeRangeRequest:_:) in conformance SearchCallHistoryCATPatternsExecutor( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = *(int **)(class metadata base offset for SearchCallHistoryCATPatternsExecutor + **v4 + 64);
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v10 + *v10);
  uint64_t v11 = (void *)swift_task_alloc(v10[1]);
  *(void *)(v5 + ++*(void *)(v0 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  return v13(a1, a2, a3, a4);
}

uint64_t protocol witness for SearchCallHistoryCATPatternsExecuting.readVoicemailsIntroduction(_:) in conformance SearchCallHistoryCATPatternsExecutor( uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)(class metadata base offset for SearchCallHistoryCATPatternsExecutor + **v2 + 72);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  uint64_t v7 = (void *)swift_task_alloc(v6[1]);
  *(void *)(v3 + ++*(void *)(v0 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  return v9(a1, a2);
}

uint64_t protocol witness for SearchCallHistoryCATPatternsExecuting.showCallHistory(callRecords:isFirstPartyApp:isShowingMissedCall:_:) in conformance SearchCallHistoryCATPatternsExecutor( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = *(int **)(class metadata base offset for SearchCallHistoryCATPatternsExecutor + **v5 + 80);
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)v12 + *v12);
  uint64_t v13 = (void *)swift_task_alloc(v12[1]);
  *(void *)(v6 + ++*(void *)(v0 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  return v15(a1, a2, a3, a4, a5);
}

uint64_t protocol witness for SearchCallHistoryCATPatternsExecuting.showVoicemails(callRecords:_:) in conformance SearchCallHistoryCATPatternsExecutor( uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(int **)(class metadata base offset for SearchCallHistoryCATPatternsExecutor + **v3 + 88);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v8 + *v8);
  uint64_t v9 = (void *)swift_task_alloc(v8[1]);
  *(void *)(v4 + ++*(void *)(v0 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  return v11(a1, a2, a3);
}

uint64_t protocol witness for SearchCallHistoryCATPatternsExecuting.unsupportedSearchParameters(isLatest:isMissed:isVoicemail:_:) in conformance SearchCallHistoryCATPatternsExecutor( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = *(int **)(class metadata base offset for SearchCallHistoryCATPatternsExecutor + **v5 + 96);
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)v12 + *v12);
  uint64_t v13 = (void *)swift_task_alloc(v12[1]);
  *(void *)(v6 + ++*(void *)(v0 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  return v15(a1, a2, a3, a4, a5);
}

uint64_t protocol witness for SearchCallHistoryCATPatternsExecuting.voiceMailOfferToFollowUpAction(isLastPage:) in conformance SearchCallHistoryCATPatternsExecutor( uint64_t a1)
{
  uint64_t v4 = *(int **)(class metadata base offset for SearchCallHistoryCATPatternsExecutor + **v1 + 104);
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  uint64_t v5 = (void *)swift_task_alloc(v4[1]);
  *(void *)(v2 + ++*(void *)(v0 + 16) = v5;
  void *v5 = v2;
  v5[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  return v7(a1);
}

uint64_t protocol witness for SearchCallHistoryCATPatternsExecuting.voiceMailPromptToPlay() in conformance SearchCallHistoryCATPatternsExecutor()
{
  uint64_t v2 = *(int **)(class metadata base offset for SearchCallHistoryCATPatternsExecutor + **v0 + 112);
  uint64_t v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  uint64_t v3 = (void *)swift_task_alloc(v2[1]);
  *(void *)(v1 + ++*(void *)(v0 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  return v5();
}

uint64_t getEnumTagSinglePayload for SearchCallHistoryCATPatternsIdentifiers( unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }

  if (a2 >= 0xF2)
  {
    if (a2 + 14 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 14) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }

    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }

    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }

    int v5 = (*a1 | (v4 << 8)) - 15;
    return (v5 + 1);
  }

uint64_t storeEnumTagSinglePayload for SearchCallHistoryCATPatternsIdentifiers( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 14 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 14) >> 8 < 0xFF) {
    LODWORD(OUTLINED_FUNCTION_5_18(v2, v3, v4) = 1;
  }
  else {
    LODWORD(OUTLINED_FUNCTION_5_18(v2, v3, v4) = v3;
  }
  if (a3 >= 0xF2) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xF1) {
    return ((uint64_t (*)(void))((char *)&loc_2E67FC + 4 * byte_33FBE4[v4]))();
  }
  *a1 = a2 + 14;
  return ((uint64_t (*)(void))((char *)sub_2E6830 + 4 * byte_33FBDF[v4]))();
}

uint64_t sub_2E6830(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2E6838(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x2E6840LL);
  }
  return result;
}

uint64_t sub_2E684C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x2E6854LL);
  }
  *(_BYTE *)unint64_t result = a2 + 14;
  return result;
}

uint64_t sub_2E6858(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2E6860(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for SearchCallHistoryCATPatternsIdentifiers()
{
}

void type metadata accessor for SearchCallHistoryOfferToReadMoreCallRecordsParameters()
{
}

char *initializeBufferWithCopyOfBuffer for SearchCallHistoryReadCannotFindCallRecordParameters( char *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *(void *)a1 = *a2;
    uint64_t v4 = (char *)(v9 + ((v5 + 16LL) & ~(unint64_t)v5));
  }

  else
  {
    uint64_t v7 = type metadata accessor for SpeakableString(0LL);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1LL, v7))
    {
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
      memcpy(v4, a2, *(void *)(*(void *)(v8 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16LL))(v4, a2, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v4, 0LL, 1LL, v7);
    }

    uint64_t v10 = a3[5];
    uint64_t v11 = a3[6];
    uint64_t v12 = &v4[v10];
    uint64_t v13 = (char *)a2 + v10;
    *(void *)uint64_t v12 = *(void *)v13;
    v12[8] = v13[8];
    *(void *)&v4[v11] = *(uint64_t *)((char *)a2 + v11);
    uint64_t v14 = a3[8];
    *(void *)&v4[a3[7]] = *(uint64_t *)((char *)a2 + a3[7]);
    v4[v14] = *((_BYTE *)a2 + v14);
    uint64_t v15 = a3[10];
    v4[a3[9]] = *((_BYTE *)a2 + a3[9]);
    char v16 = &v4[v15];
    char v17 = (char *)a2 + v15;
    *(void *)char v16 = *(void *)v17;
    v16[8] = v17[8];
    swift_retain();
  }

  swift_retain();
  return v4;
}

uint64_t destroy for SearchCallHistoryReadCannotFindCallRecordParameters(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SpeakableString(0LL);
  swift_release(*(void *)(a1 + *(int *)(a2 + 24)));
  return swift_release(*(void *)(a1 + *(int *)(a2 + 28)));
}

char *initializeWithCopy for SearchCallHistoryReadCannotFindCallRecordParameters( char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for SpeakableString(0LL);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1LL, v6))
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0LL, 1LL, v6);
  }

  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = &a1[v8];
  uint64_t v11 = &a2[v8];
  *(void *)uint64_t v10 = *(void *)v11;
  v10[8] = v11[8];
  *(void *)&a1[v9] = *(void *)&a2[v9];
  uint64_t v12 = a3[8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  a1[v12] = a2[v12];
  uint64_t v13 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  swift_retain();
  swift_retain();
  return a1;
}

char *assignWithCopy for SearchCallHistoryReadCannotFindCallRecordParameters(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for SpeakableString(0LL);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1LL, v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1LL, v6);
  if (!EnumTagSinglePayload)
  {
    uint64_t v9 = *(void *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 24))(a1, a2, v6);
      goto LABEL_7;
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }

  if (v8)
  {
LABEL_6:
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0LL, 1LL, v6);
LABEL_7:
  uint64_t v11 = a3[5];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = *(void *)v13;
  v12[8] = v13[8];
  *(void *)uint64_t v12 = v14;
  uint64_t v15 = a3[6];
  uint64_t v16 = *(void *)&a1[v15];
  *(void *)&a1[v15] = *(void *)&a2[v15];
  swift_retain();
  swift_release(v16);
  uint64_t v17 = a3[7];
  uint64_t v18 = *(void *)&a1[v17];
  *(void *)&a1[v17] = *(void *)&a2[v17];
  swift_retain();
  swift_release(v18);
  a1[a3[8]] = a2[a3[8]];
  a1[a3[9]] = a2[a3[9]];
  uint64_t v19 = a3[10];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  uint64_t v22 = *(void *)v21;
  v20[8] = v21[8];
  *(void *)uint64_t v20 = v22;
  return a1;
}

char *initializeWithTake for SearchCallHistoryReadCannotFindCallRecordParameters( char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for SpeakableString(0LL);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1LL, v6))
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0LL, 1LL, v6);
  }

  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = &a1[v8];
  uint64_t v11 = &a2[v8];
  *(void *)uint64_t v10 = *(void *)v11;
  v10[8] = v11[8];
  *(void *)&a1[v9] = *(void *)&a2[v9];
  uint64_t v12 = a3[8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  a1[v12] = a2[v12];
  uint64_t v13 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  return a1;
}

char *assignWithTake for SearchCallHistoryReadCannotFindCallRecordParameters(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for SpeakableString(0LL);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1LL, v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1LL, v6);
  if (!EnumTagSinglePayload)
  {
    uint64_t v9 = *(void *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, a2, v6);
      goto LABEL_7;
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }

  if (v8)
  {
LABEL_6:
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0LL, 1LL, v6);
LABEL_7:
  uint64_t v11 = a3[5];
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v11];
  uint64_t v14 = &a2[v11];
  *(void *)uint64_t v13 = *(void *)v14;
  v13[8] = v14[8];
  uint64_t v15 = *(void *)&a1[v12];
  *(void *)&a1[v12] = *(void *)&a2[v12];
  swift_release(v15);
  uint64_t v16 = a3[7];
  uint64_t v17 = *(void *)&a1[v16];
  *(void *)&a1[v16] = *(void *)&a2[v16];
  swift_release(v17);
  uint64_t v18 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  a1[v18] = a2[v18];
  uint64_t v19 = a3[10];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  *(void *)uint64_t v20 = *(void *)v21;
  v20[8] = v21[8];
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchCallHistoryReadCannotFindCallRecordParameters( uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, j____swift_get_extra_inhabitant_indexTm);
}

uint64_t storeEnumTagSinglePayload for SearchCallHistoryReadCannotFindCallRecordParameters( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, j____swift_store_extra_inhabitant_indexTm);
}

void type metadata completion function for SearchCallHistoryReadCannotFindCallRecordParameters(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(v2 - 8) + 64LL;
    v4[1] = "\t";
    void v4[2] = &unk_33FD70;
    v4[3] = &unk_33FD70;
    void v4[4] = &unk_33FD88;
    void v4[5] = &unk_33FD88;
    void v4[6] = "\t";
    swift_initStructMetadata(a1, 256LL, 7LL, v4, a1 + 16);
  }

uint64_t initializeWithCopy for SearchCallHistoryReadCannotFindVoicemailParameters(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + ++*(void *)(v0 + 16) = *((_BYTE *)a2 + 16);
  *(void *)(a1 + 24) = a2[3];
  *(_BYTE *)(a1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *((_BYTE *)a2 + 32);
  swift_retain(v3);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  __int128 v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + ++*(void *)(v0 + 16) = v3;
  return result;
}

void type metadata accessor for SearchCallHistoryReadCannotFindVoicemailParameters()
{
}

char *initializeBufferWithCopyOfBuffer for SearchCallHistoryReadMultipleCallRecordsParameters( char *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *(void *)a1 = *a2;
    uint64_t v4 = (char *)(v9 + ((v5 + 16LL) & ~(unint64_t)v5));
  }

  else
  {
    uint64_t v7 = type metadata accessor for SpeakableString(0LL);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1LL, v7))
    {
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
      memcpy(v4, a2, *(void *)(*(void *)(v8 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16LL))(v4, a2, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v4, 0LL, 1LL, v7);
    }

    uint64_t v10 = a3[5];
    uint64_t v11 = &v4[v10];
    uint64_t v12 = (char *)a2 + v10;
    if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v10, 1LL, v7))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16LL))(v11, v12, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0LL, 1LL, v7);
    }

    uint64_t v14 = a3[6];
    uint64_t v15 = a3[7];
    uint64_t v16 = &v4[v14];
    uint64_t v17 = (char *)a2 + v14;
    *(void *)uint64_t v16 = *(void *)v17;
    v16[8] = v17[8];
    *(void *)&v4[v15] = *(uint64_t *)((char *)a2 + v15);
    uint64_t v18 = a3[9];
    *(void *)&v4[a3[8]] = *(uint64_t *)((char *)a2 + a3[8]);
    *(void *)&v4[v18] = *(uint64_t *)((char *)a2 + v18);
    uint64_t v19 = a3[11];
    *(void *)&v4[a3[10]] = *(uint64_t *)((char *)a2 + a3[10]);
    *(void *)&v4[v19] = *(uint64_t *)((char *)a2 + v19);
    uint64_t v20 = a3[13];
    *(void *)&v4[a3[12]] = *(uint64_t *)((char *)a2 + a3[12]);
    *(void *)&v4[v20] = *(uint64_t *)((char *)a2 + v20);
    uint64_t v21 = a3[15];
    v4[a3[14]] = *((_BYTE *)a2 + a3[14]);
    v4[v21] = *((_BYTE *)a2 + v21);
    uint64_t v22 = a3[17];
    v4[a3[16]] = *((_BYTE *)a2 + a3[16]);
    v4[v22] = *((_BYTE *)a2 + v22);
    uint64_t v23 = a3[19];
    v4[a3[18]] = *((_BYTE *)a2 + a3[18]);
    v4[v23] = *((_BYTE *)a2 + v23);
    uint64_t v24 = a3[20];
    uint64_t v25 = a3[21];
    uint64_t v26 = &v4[v24];
    uint64_t v27 = (char *)a2 + v24;
    *(void *)uint64_t v26 = *(void *)v27;
    v26[8] = v27[8];
    uint64_t v28 = &v4[v25];
    uint64_t v29 = (char *)a2 + v25;
    *(void *)uint64_t v28 = *(void *)v29;
    v28[8] = v29[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
  }

  swift_retain();
  return v4;
}

uint64_t destroy for SearchCallHistoryReadMultipleCallRecordsParameters(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for SpeakableString(0LL);
  uint64_t v5 = a1 + a2[5];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release(*(void *)(a1 + a2[12]));
  return swift_release(*(void *)(a1 + a2[13]));
}

char *initializeWithCopy for SearchCallHistoryReadMultipleCallRecordsParameters(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for SpeakableString(0LL);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1LL, v6))
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0LL, 1LL, v6);
  }

  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v8], 1LL, v6))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16LL))(v9, v10, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0LL, 1LL, v6);
  }

  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = &a1[v12];
  uint64_t v15 = &a2[v12];
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  *(void *)&a1[v13] = *(void *)&a2[v13];
  uint64_t v16 = a3[9];
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  *(void *)&a1[v16] = *(void *)&a2[v16];
  uint64_t v17 = a3[11];
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  *(void *)&a1[v17] = *(void *)&a2[v17];
  uint64_t v18 = a3[13];
  *(void *)&a1[a3[12]] = *(void *)&a2[a3[12]];
  *(void *)&a1[v18] = *(void *)&a2[v18];
  uint64_t v19 = a3[15];
  a1[a3[14]] = a2[a3[14]];
  a1[v19] = a2[v19];
  uint64_t v20 = a3[17];
  a1[a3[16]] = a2[a3[16]];
  a1[v20] = a2[v20];
  uint64_t v21 = a3[19];
  a1[a3[18]] = a2[a3[18]];
  a1[v21] = a2[v21];
  uint64_t v22 = a3[20];
  uint64_t v23 = a3[21];
  uint64_t v24 = &a1[v22];
  uint64_t v25 = &a2[v22];
  *(void *)uint64_t v24 = *(void *)v25;
  v24[8] = v25[8];
  uint64_t v26 = &a1[v23];
  uint64_t v27 = &a2[v23];
  *(void *)uint64_t v26 = *(void *)v27;
  v26[8] = v27[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

char *assignWithCopy for SearchCallHistoryReadMultipleCallRecordsParameters(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for SpeakableString(0LL);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1LL, v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1LL, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0LL, 1LL, v6);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  uint64_t v9 = *(void *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v9 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v11 = a3[5];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  int v14 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v11], 1LL, v6);
  int v15 = __swift_getEnumTagSinglePayload((uint64_t)v13, 1LL, v6);
  if (!v14)
  {
    uint64_t v16 = *(void *)(v6 - 8);
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v12, v13, v6);
      goto LABEL_13;
    }

    (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v6);
    goto LABEL_12;
  }

  if (v15)
  {
LABEL_12:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64LL));
    goto LABEL_13;
  }

  (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16LL))(v12, v13, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 0LL, 1LL, v6);
LABEL_13:
  uint64_t v18 = a3[6];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  uint64_t v21 = *(void *)v20;
  v19[8] = v20[8];
  *(void *)uint64_t v19 = v21;
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[12];
  uint64_t v23 = *(void *)&a1[v22];
  *(void *)&a1[v22] = *(void *)&a2[v22];
  swift_retain();
  swift_release(v23);
  uint64_t v24 = a3[13];
  uint64_t v25 = *(void *)&a1[v24];
  *(void *)&a1[v24] = *(void *)&a2[v24];
  swift_retain();
  swift_release(v25);
  a1[a3[14]] = a2[a3[14]];
  a1[a3[15]] = a2[a3[15]];
  a1[a3[16]] = a2[a3[16]];
  a1[a3[17]] = a2[a3[17]];
  a1[a3[18]] = a2[a3[18]];
  a1[a3[19]] = a2[a3[19]];
  uint64_t v26 = a3[20];
  uint64_t v27 = &a1[v26];
  uint64_t v28 = &a2[v26];
  uint64_t v29 = *(void *)v28;
  v27[8] = v28[8];
  *(void *)uint64_t v27 = v29;
  uint64_t v30 = a3[21];
  uint64_t v31 = &a1[v30];
  char v32 = &a2[v30];
  uint64_t v33 = *(void *)v32;
  v31[8] = v32[8];
  *(void *)uint64_t v31 = v33;
  return a1;
}

char *initializeWithTake for SearchCallHistoryReadMultipleCallRecordsParameters(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for SpeakableString(0LL);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1LL, v6))
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0LL, 1LL, v6);
  }

  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v8], 1LL, v6))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32LL))(v9, v10, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0LL, 1LL, v6);
  }

  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  int v14 = &a1[v12];
  int v15 = &a2[v12];
  *(void *)int v14 = *(void *)v15;
  v14[8] = v15[8];
  *(void *)&a1[v13] = *(void *)&a2[v13];
  uint64_t v16 = a3[9];
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  *(void *)&a1[v16] = *(void *)&a2[v16];
  uint64_t v17 = a3[11];
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  *(void *)&a1[v17] = *(void *)&a2[v17];
  uint64_t v18 = a3[13];
  *(void *)&a1[a3[12]] = *(void *)&a2[a3[12]];
  *(void *)&a1[v18] = *(void *)&a2[v18];
  uint64_t v19 = a3[15];
  a1[a3[14]] = a2[a3[14]];
  a1[v19] = a2[v19];
  uint64_t v20 = a3[17];
  a1[a3[16]] = a2[a3[16]];
  a1[v20] = a2[v20];
  uint64_t v21 = a3[19];
  a1[a3[18]] = a2[a3[18]];
  a1[v21] = a2[v21];
  uint64_t v22 = a3[20];
  uint64_t v23 = a3[21];
  uint64_t v24 = &a1[v22];
  uint64_t v25 = &a2[v22];
  *(void *)uint64_t v24 = *(void *)v25;
  v24[8] = v25[8];
  uint64_t v26 = &a1[v23];
  uint64_t v27 = &a2[v23];
  *(void *)uint64_t v26 = *(void *)v27;
  v26[8] = v27[8];
  return a1;
}

char *assignWithTake for SearchCallHistoryReadMultipleCallRecordsParameters(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for SpeakableString(0LL);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1LL, v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1LL, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0LL, 1LL, v6);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  uint64_t v9 = *(void *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v11 = a3[5];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  int v14 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v11], 1LL, v6);
  int v15 = __swift_getEnumTagSinglePayload((uint64_t)v13, 1LL, v6);
  if (!v14)
  {
    uint64_t v16 = *(void *)(v6 - 8);
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v12, v13, v6);
      goto LABEL_13;
    }

    (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v6);
    goto LABEL_12;
  }

  if (v15)
  {
LABEL_12:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64LL));
    goto LABEL_13;
  }

  (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32LL))(v12, v13, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 0LL, 1LL, v6);
LABEL_13:
  uint64_t v18 = a3[6];
  uint64_t v19 = a3[7];
  uint64_t v20 = &a1[v18];
  uint64_t v21 = &a2[v18];
  *(void *)uint64_t v20 = *(void *)v21;
  v20[8] = v21[8];
  *(void *)&a1[v19] = *(void *)&a2[v19];
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[12];
  uint64_t v23 = *(void *)&a1[v22];
  *(void *)&a1[v22] = *(void *)&a2[v22];
  swift_release(v23);
  uint64_t v24 = a3[13];
  uint64_t v25 = *(void *)&a1[v24];
  *(void *)&a1[v24] = *(void *)&a2[v24];
  swift_release(v25);
  uint64_t v26 = a3[15];
  a1[a3[14]] = a2[a3[14]];
  a1[v26] = a2[v26];
  uint64_t v27 = a3[17];
  a1[a3[16]] = a2[a3[16]];
  a1[v27] = a2[v27];
  uint64_t v28 = a3[19];
  a1[a3[18]] = a2[a3[18]];
  a1[v28] = a2[v28];
  uint64_t v29 = a3[20];
  uint64_t v30 = a3[21];
  uint64_t v31 = &a1[v29];
  char v32 = &a2[v29];
  *(void *)uint64_t v31 = *(void *)v32;
  v31[8] = v32[8];
  uint64_t v33 = &a1[v30];
  uint64_t v34 = &a2[v30];
  v33[8] = v34[8];
  *(void *)uint64_t v33 = *(void *)v34;
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchCallHistoryReadMultipleCallRecordsParameters( uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, j____swift_get_extra_inhabitant_index_31Tm);
}

uint64_t storeEnumTagSinglePayload for SearchCallHistoryReadMultipleCallRecordsParameters( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_32Tm);
}

void type metadata completion function for SearchCallHistoryReadMultipleCallRecordsParameters(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(v2 - 8) + 64LL;
    v4[1] = v4[0];
    void v4[2] = "\t";
    v4[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
    void v4[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
    void v4[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
    void v4[6] = (char *)&value witness table for Builtin.BridgeObject + 64;
    void v4[7] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[8] = &unk_33FD70;
    v4[9] = &unk_33FD70;
    v4[10] = &unk_33FD88;
    v4[11] = &unk_33FD88;
    v4[12] = &unk_33FD88;
    v4[13] = &unk_33FD88;
    v4[14] = &unk_33FD88;
    v4[15] = &unk_33FD88;
    v4[16] = "\t";
    v4[17] = "\t";
    swift_initStructMetadata(a1, 256LL, 18LL, v4, a1 + 16);
  }

uint64_t *initializeBufferWithCopyOfBuffer for SearchCallHistoryReadMultipleVoiceMailRecordsParameters( uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain();
  }

  else
  {
    uint64_t v7 = type metadata accessor for SpeakableString(0LL);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1LL, v7))
    {
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0LL, 1LL, v7);
    }

    uint64_t v10 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(uint64_t *)((char *)a1 + OUTLINED_FUNCTION_45_9(v8, v9, v10) = *(uint64_t *)((char *)a2 + v10);
    uint64_t v11 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    *((_BYTE *)a1 + v11) = *((_BYTE *)a2 + v11);
    uint64_t v12 = a3[10];
    *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    *((_BYTE *)a1 + v1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *((_BYTE *)a2 + v12);
    uint64_t v13 = a3[11];
    uint64_t v14 = a3[12];
    int v15 = (char *)a1 + v13;
    uint64_t v16 = (char *)a2 + v13;
    *(void *)int v15 = *(void *)v16;
    v15[8] = v16[8];
    uint64_t v17 = (char *)a1 + v14;
    uint64_t v18 = (char *)a2 + v14;
    v17[8] = v18[8];
    uint64_t v19 = a3[13];
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    *(void *)uint64_t v17 = *(void *)v18;
    swift_retain();
    swift_retain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1LL, v7))
    {
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16LL))(v20, v21, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v20, 0LL, 1LL, v7);
    }
  }

  return a1;
}

uint64_t destroy for SearchCallHistoryReadMultipleVoiceMailRecordsParameters(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for SpeakableString(0LL);
  swift_release(*(void *)(a1 + a2[5]));
  swift_release(*(void *)(a1 + a2[6]));
  uint64_t v5 = a1 + a2[13];
  uint64_t result = __swift_getEnumTagSinglePayload(v5, 1LL, v4);
  if (!(_DWORD)result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL))(v5, v4);
  }
  return result;
}

char *initializeWithCopy for SearchCallHistoryReadMultipleVoiceMailRecordsParameters( char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for SpeakableString(0LL);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1LL, v6))
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0LL, 1LL, v6);
  }

  uint64_t v8 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  *(void *)&a1[v8] = *(void *)&a2[v8];
  uint64_t v9 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  a1[v9] = a2[v9];
  uint64_t v10 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  a1[v10] = a2[v10];
  uint64_t v11 = a3[11];
  uint64_t v12 = a3[12];
  uint64_t v13 = &a1[v11];
  uint64_t v14 = &a2[v11];
  *(void *)uint64_t v13 = *(void *)v14;
  v13[8] = v14[8];
  int v15 = &a1[v12];
  uint64_t v16 = &a2[v12];
  v15[8] = v16[8];
  uint64_t v17 = a3[13];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  *(void *)int v15 = *(void *)v16;
  swift_retain();
  swift_retain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1LL, v6))
  {
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16LL))(v18, v19, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v18, 0LL, 1LL, v6);
  }

  return a1;
}

char *assignWithCopy for SearchCallHistoryReadMultipleVoiceMailRecordsParameters( char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for SpeakableString(0LL);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1LL, v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1LL, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0LL, 1LL, v6);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  uint64_t v9 = *(void *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v9 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v11 = a3[5];
  uint64_t v12 = *(void *)&a1[v11];
  *(void *)&a1[v11] = *(void *)&a2[v11];
  swift_retain();
  swift_release(v12);
  uint64_t v13 = a3[6];
  uint64_t v14 = *(void *)&a1[v13];
  *(void *)&a1[v13] = *(void *)&a2[v13];
  swift_retain();
  swift_release(v14);
  a1[a3[7]] = a2[a3[7]];
  a1[a3[8]] = a2[a3[8]];
  a1[a3[9]] = a2[a3[9]];
  a1[a3[10]] = a2[a3[10]];
  uint64_t v15 = a3[11];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = *(void *)v17;
  v16[8] = v17[8];
  *(void *)uint64_t v16 = v18;
  uint64_t v19 = a3[12];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  uint64_t v22 = *(void *)v21;
  v20[8] = v21[8];
  *(void *)uint64_t v20 = v22;
  uint64_t v23 = a3[13];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  LODWORD(v14) = __swift_getEnumTagSinglePayload((uint64_t)&a1[v23], 1LL, v6);
  int v26 = __swift_getEnumTagSinglePayload((uint64_t)v25, 1LL, v6);
  if (!(_DWORD)v14)
  {
    uint64_t v27 = *(void *)(v6 - 8);
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 24))(v24, v25, v6);
      return a1;
    }

    (*(void (**)(char *, uint64_t))(v27 + 8))(v24, v6);
    goto LABEL_12;
  }

  if (v26)
  {
LABEL_12:
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64LL));
    return a1;
  }

  (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16LL))(v24, v25, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v24, 0LL, 1LL, v6);
  return a1;
}

char *initializeWithTake for SearchCallHistoryReadMultipleVoiceMailRecordsParameters( char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for SpeakableString(0LL);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1LL, v6))
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0LL, 1LL, v6);
  }

  uint64_t v8 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  *(void *)&a1[v8] = *(void *)&a2[v8];
  uint64_t v9 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  a1[v9] = a2[v9];
  uint64_t v10 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  a1[v10] = a2[v10];
  uint64_t v11 = a3[11];
  uint64_t v12 = a3[12];
  uint64_t v13 = &a1[v11];
  uint64_t v14 = &a2[v11];
  *(void *)uint64_t v13 = *(void *)v14;
  v13[8] = v14[8];
  uint64_t v15 = &a1[v12];
  uint64_t v16 = &a2[v12];
  v15[8] = v16[8];
  uint64_t v17 = a3[13];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  *(void *)uint64_t v15 = *(void *)v16;
  if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1LL, v6))
  {
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32LL))(v18, v19, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v18, 0LL, 1LL, v6);
  }

  return a1;
}

char *assignWithTake for SearchCallHistoryReadMultipleVoiceMailRecordsParameters( char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for SpeakableString(0LL);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1LL, v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1LL, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0LL, 1LL, v6);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  uint64_t v9 = *(void *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v11 = a3[5];
  uint64_t v12 = *(void *)&a1[v11];
  *(void *)&a1[v11] = *(void *)&a2[v11];
  swift_release(v12);
  uint64_t v13 = a3[6];
  uint64_t v14 = *(void *)&a1[v13];
  *(void *)&a1[v13] = *(void *)&a2[v13];
  swift_release(v14);
  uint64_t v15 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  a1[v15] = a2[v15];
  uint64_t v16 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  a1[v16] = a2[v16];
  uint64_t v17 = a3[11];
  uint64_t v18 = a3[12];
  uint64_t v19 = &a1[v17];
  uint64_t v20 = &a2[v17];
  *(void *)uint64_t v19 = *(void *)v20;
  v19[8] = v20[8];
  uint64_t v21 = &a1[v18];
  uint64_t v22 = &a2[v18];
  v21[8] = v22[8];
  uint64_t v23 = a3[13];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  *(void *)uint64_t v21 = *(void *)v22;
  int v26 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v23], 1LL, v6);
  int v27 = __swift_getEnumTagSinglePayload((uint64_t)v25, 1LL, v6);
  if (!v26)
  {
    uint64_t v28 = *(void *)(v6 - 8);
    if (!v27)
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 40))(v24, v25, v6);
      return a1;
    }

    (*(void (**)(char *, uint64_t))(v28 + 8))(v24, v6);
    goto LABEL_12;
  }

  if (v27)
  {
LABEL_12:
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(v24, v25, *(void *)(*(void *)(v29 - 8) + 64LL));
    return a1;
  }

  (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32LL))(v24, v25, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v24, 0LL, 1LL, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchCallHistoryReadMultipleVoiceMailRecordsParameters( uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, j____swift_get_extra_inhabitant_index_33Tm);
}

uint64_t storeEnumTagSinglePayload for SearchCallHistoryReadMultipleVoiceMailRecordsParameters( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_84Tm_0);
}

void type metadata completion function for SearchCallHistoryReadMultipleVoiceMailRecordsParameters( uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(v2 - 8) + 64LL;
    v4[1] = &unk_33FD70;
    void v4[2] = &unk_33FD70;
    v4[3] = &unk_33FD88;
    void v4[4] = &unk_33FD88;
    void v4[5] = &unk_33FD88;
    void v4[6] = &unk_33FD88;
    void v4[7] = "\t";
    v4[8] = "\t";
    v4[9] = v4[0];
    swift_initStructMetadata(a1, 256LL, 10LL, v4, a1 + 16);
  }

uint64_t destroy for SearchCallHistoryReadSingleCallRecordParameters(uint64_t a1, uint64_t a2)
{
  return destroy for SearchCallHistoryReadSingleCallRecordParameters( a1,  a2,  (void (*)(void))&_swift_release);
}

uint64_t getEnumTagSinglePayload for SearchCallHistoryReadSingleCallRecordParameters( uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, j____swift_get_extra_inhabitant_index_33Tm_0);
}

uint64_t storeEnumTagSinglePayload for SearchCallHistoryReadSingleCallRecordParameters( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_84Tm_1);
}

void type metadata completion function for SearchCallHistoryReadSingleCallRecordParameters( uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t getEnumTagSinglePayload for SearchCallHistoryReadSingleCallRecordDisplayForwardParameters( uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, j____swift_get_extra_inhabitant_index_33Tm_1);
}

uint64_t storeEnumTagSinglePayload for SearchCallHistoryReadSingleCallRecordDisplayForwardParameters( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_84Tm_2);
}

void initializeBufferWithCopyOfBuffer for SearchCallHistoryReadSingleCallRecordParameters( void *a1, void *a2, uint64_t a3)
{
  if ((*(_DWORD *)(*(void *)(a3 - 8) + 80LL) & 0x20000) != 0)
  {
    *a1 = *a2;
  }

  else
  {
    uint64_t v3 = OUTLINED_FUNCTION_26_0();
    if (OUTLINED_FUNCTION_31_49())
    {
      uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
      OUTLINED_FUNCTION_62_3(v4);
    }

    else
    {
      OUTLINED_FUNCTION_15_82(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16LL));
      OUTLINED_FUNCTION_21_60();
    }

    OUTLINED_FUNCTION_39_36();
  }

  OUTLINED_FUNCTION_29_3();
  OUTLINED_FUNCTION_6();
}

void initializeWithCopy for SearchCallHistoryReadSingleCallRecordParameters()
{
  uint64_t v0 = OUTLINED_FUNCTION_26_0();
  if (OUTLINED_FUNCTION_31_49())
  {
    uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_62_3(v1);
  }

  else
  {
    OUTLINED_FUNCTION_15_82(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL));
    OUTLINED_FUNCTION_21_60();
  }

  OUTLINED_FUNCTION_39_36();
  OUTLINED_FUNCTION_29_3();
  OUTLINED_FUNCTION_6();
}

void assignWithCopy for SearchCallHistoryReadSingleCallRecordParameters(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = OUTLINED_FUNCTION_26_0();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1, 1LL, v6);
  int v8 = OUTLINED_FUNCTION_31_49();
  if (!EnumTagSinglePayload)
  {
    uint64_t v9 = *(void *)(v6 - 8);
    if (!v8)
    {
      OUTLINED_FUNCTION_15_82(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 24));
      goto LABEL_7;
    }

    OUTLINED_FUNCTION_66_23(v9);
    goto LABEL_6;
  }

  if (v8)
  {
LABEL_6:
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_62_3(v10);
    goto LABEL_7;
  }

  OUTLINED_FUNCTION_15_82(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL));
  OUTLINED_FUNCTION_21_60();
LABEL_7:
  OUTLINED_FUNCTION_121_13(a3[5]);
  swift_release(v6);
  OUTLINED_FUNCTION_121_13(a3[6]);
  swift_release(v6);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  OUTLINED_FUNCTION_16();
}

void initializeWithTake for SearchCallHistoryReadSingleCallRecordParameters( uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = OUTLINED_FUNCTION_26_0();
  if (OUTLINED_FUNCTION_31_49())
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_62_3(v7);
  }

  else
  {
    OUTLINED_FUNCTION_15_82(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL));
    OUTLINED_FUNCTION_21_60();
  }

  uint64_t v8 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  OUTLINED_FUNCTION_97_18();
  OUTLINED_FUNCTION_6();
}

void assignWithTake for SearchCallHistoryReadSingleCallRecordParameters(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = OUTLINED_FUNCTION_26_0();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1, 1LL, v5);
  int v7 = OUTLINED_FUNCTION_31_49();
  if (!EnumTagSinglePayload)
  {
    uint64_t v8 = *(void *)(v5 - 8);
    if (!v7)
    {
      OUTLINED_FUNCTION_15_82(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 40));
      goto LABEL_7;
    }

    OUTLINED_FUNCTION_66_23(v8);
    goto LABEL_6;
  }

  if (v7)
  {
LABEL_6:
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    OUTLINED_FUNCTION_62_3(v9);
    goto LABEL_7;
  }

  OUTLINED_FUNCTION_15_82(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32LL));
  OUTLINED_FUNCTION_21_60();
LABEL_7:
  OUTLINED_FUNCTION_115_12(*(int *)(a3 + 20));
  OUTLINED_FUNCTION_115_12(*(int *)(a3 + 24));
  OUTLINED_FUNCTION_97_18();
  OUTLINED_FUNCTION_16();
}

uint64_t getEnumTagSinglePayload for SearchCallHistoryReadSingleVoiceMailRecordParameters( uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_2E8BFC);
}

void __swift_get_extra_inhabitant_index_33Tm()
{
  if (v1)
  {
    uint64_t v2 = OUTLINED_FUNCTION_158();
    OUTLINED_FUNCTION_9_3(v2, v3, v4);
  }

  else
  {
    OUTLINED_FUNCTION_71_22(*(int *)(v0 + 20));
    OUTLINED_FUNCTION_6();
  }

uint64_t storeEnumTagSinglePayload for SearchCallHistoryReadSingleVoiceMailRecordParameters( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_84Tm_3);
}

void assignWithCopy for SearchCallHistoryReadCannotFindVoicemailParameters(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a1;
  *a1 = *a2;
  swift_retain();
  swift_release(v4);
  uint64_t v5 = a2[1];
  *((_BYTE *)a1 + ++*(void *)(v0 + 16) = *((_BYTE *)a2 + 16);
  a1[1] = v5;
  uint64_t v6 = a2[3];
  *((_BYTE *)a1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *((_BYTE *)a2 + 32);
  a1[3] = v6;
  OUTLINED_FUNCTION_6();
}

void assignWithTake for SearchCallHistoryReadCannotFindVoicemailParameters(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  a1[1] = a2[1];
  *((_BYTE *)a1 + ++*(void *)(v0 + 16) = *((_BYTE *)a2 + 16);
  a1[3] = a2[3];
  *((_BYTE *)a1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *((_BYTE *)a2 + 32);
  OUTLINED_FUNCTION_2();
}

uint64_t getEnumTagSinglePayload for SearchCallHistoryReadCannotFindVoicemailParameters( uint64_t *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 33))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }

    else
    {
      uint64_t v3 = *a1;
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }

  else
  {
    int v2 = -1;
  }

  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchCallHistoryReadCannotFindVoicemailParameters( uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + ++*(void *)(v0 + 16) = 0LL;
    *(void *)(result + 24) = 0LL;
    *(_BYTE *)(result + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0LL;
    if (a3 >= 0x7FFFFFFF) {
      *(_BYTE *)(result + 33) = 1;
    }
  }

  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(_BYTE *)(result + 33) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }

  return result;
}

void type metadata accessor for SearchCallHistoryReadVoicemailsIntroductionParameters()
{
}

char *initializeBufferWithCopyOfBuffer for SearchCallHistoryShowCallHistoryParameters( char *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *(void *)a1 = *a2;
    uint64_t v4 = (char *)(v9 + ((v5 + 16LL) & ~(unint64_t)v5));
  }

  else
  {
    uint64_t v7 = type metadata accessor for SpeakableString(0LL);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1LL, v7))
    {
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
      memcpy(v4, a2, *(void *)(*(void *)(v8 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16LL))(v4, a2, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v4, 0LL, 1LL, v7);
    }

    uint64_t v10 = a3[5];
    uint64_t v11 = &v4[v10];
    uint64_t v12 = (char *)a2 + v10;
    if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v10, 1LL, v7))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16LL))(v11, v12, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0LL, 1LL, v7);
    }

    uint64_t v14 = a3[6];
    uint64_t v15 = a3[7];
    uint64_t v16 = &v4[v14];
    uint64_t v17 = (char *)a2 + v14;
    *(void *)uint64_t v16 = *(void *)v17;
    v16[8] = v17[8];
    *(void *)&v4[v15] = *(uint64_t *)((char *)a2 + v15);
    uint64_t v18 = a3[9];
    *(void *)&v4[a3[8]] = *(uint64_t *)((char *)a2 + a3[8]);
    *(void *)&v4[v18] = *(uint64_t *)((char *)a2 + v18);
    uint64_t v19 = a3[11];
    v4[a3[10]] = *((_BYTE *)a2 + a3[10]);
    v4[v19] = *((_BYTE *)a2 + v19);
    uint64_t v20 = a3[12];
    uint64_t v21 = &v4[v20];
    uint64_t v22 = (char *)a2 + v20;
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    swift_bridgeObjectRetain();
    swift_retain();
  }

  swift_retain();
  return v4;
}

uint64_t destroy for SearchCallHistoryShowCallHistoryParameters(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for SpeakableString(0LL);
  uint64_t v5 = a1 + a2[5];
  swift_bridgeObjectRelease();
  swift_release(*(void *)(a1 + a2[8]));
  return swift_release(*(void *)(a1 + a2[9]));
}

char *initializeWithCopy for SearchCallHistoryShowCallHistoryParameters(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for SpeakableString(0LL);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1LL, v6))
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0LL, 1LL, v6);
  }

  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v8], 1LL, v6))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16LL))(v9, v10, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0LL, 1LL, v6);
  }

  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = &a1[v12];
  uint64_t v15 = &a2[v12];
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  *(void *)&a1[v13] = *(void *)&a2[v13];
  uint64_t v16 = a3[9];
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  *(void *)&a1[v16] = *(void *)&a2[v16];
  uint64_t v17 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  a1[v17] = a2[v17];
  uint64_t v18 = a3[12];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  *(void *)uint64_t v19 = *(void *)v20;
  v19[8] = v20[8];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

char *assignWithCopy for SearchCallHistoryShowCallHistoryParameters(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for SpeakableString(0LL);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1LL, v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1LL, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0LL, 1LL, v6);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  uint64_t v9 = *(void *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v9 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v11 = a3[5];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  int v14 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v11], 1LL, v6);
  int v15 = __swift_getEnumTagSinglePayload((uint64_t)v13, 1LL, v6);
  if (!v14)
  {
    uint64_t v16 = *(void *)(v6 - 8);
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v12, v13, v6);
      goto LABEL_13;
    }

    (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v6);
    goto LABEL_12;
  }

  if (v15)
  {
LABEL_12:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64LL));
    goto LABEL_13;
  }

  (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16LL))(v12, v13, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 0LL, 1LL, v6);
LABEL_13:
  uint64_t v18 = a3[6];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  uint64_t v21 = *(void *)v20;
  v19[8] = v20[8];
  *(void *)uint64_t v19 = v21;
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[8];
  uint64_t v23 = *(void *)&a1[v22];
  *(void *)&a1[v22] = *(void *)&a2[v22];
  swift_retain();
  swift_release(v23);
  uint64_t v24 = a3[9];
  uint64_t v25 = *(void *)&a1[v24];
  *(void *)&a1[v24] = *(void *)&a2[v24];
  swift_retain();
  swift_release(v25);
  a1[a3[10]] = a2[a3[10]];
  a1[a3[11]] = a2[a3[11]];
  uint64_t v26 = a3[12];
  int v27 = &a1[v26];
  uint64_t v28 = &a2[v26];
  uint64_t v29 = *(void *)v28;
  v27[8] = v28[8];
  *(void *)int v27 = v29;
  return a1;
}

char *initializeWithTake for SearchCallHistoryShowCallHistoryParameters(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for SpeakableString(0LL);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1LL, v6))
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0LL, 1LL, v6);
  }

  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v8], 1LL, v6))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32LL))(v9, v10, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0LL, 1LL, v6);
  }

  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  int v14 = &a1[v12];
  int v15 = &a2[v12];
  *(void *)int v14 = *(void *)v15;
  v14[8] = v15[8];
  *(void *)&a1[v13] = *(void *)&a2[v13];
  uint64_t v16 = a3[9];
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  *(void *)&a1[v16] = *(void *)&a2[v16];
  uint64_t v17 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  a1[v17] = a2[v17];
  uint64_t v18 = a3[12];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  *(void *)uint64_t v19 = *(void *)v20;
  v19[8] = v20[8];
  return a1;
}

char *assignWithTake for SearchCallHistoryShowCallHistoryParameters(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for SpeakableString(0LL);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1LL, v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1LL, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0LL, 1LL, v6);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  uint64_t v9 = *(void *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v11 = a3[5];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  int v14 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v11], 1LL, v6);
  int v15 = __swift_getEnumTagSinglePayload((uint64_t)v13, 1LL, v6);
  if (!v14)
  {
    uint64_t v16 = *(void *)(v6 - 8);
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v12, v13, v6);
      goto LABEL_13;
    }

    (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v6);
    goto LABEL_12;
  }

  if (v15)
  {
LABEL_12:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64LL));
    goto LABEL_13;
  }

  (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32LL))(v12, v13, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 0LL, 1LL, v6);
LABEL_13:
  uint64_t v18 = a3[6];
  uint64_t v19 = a3[7];
  uint64_t v20 = &a1[v18];
  uint64_t v21 = &a2[v18];
  *(void *)uint64_t v20 = *(void *)v21;
  v20[8] = v21[8];
  *(void *)&a1[v19] = *(void *)&a2[v19];
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[8];
  uint64_t v23 = *(void *)&a1[v22];
  *(void *)&a1[v22] = *(void *)&a2[v22];
  swift_release(v23);
  uint64_t v24 = a3[9];
  uint64_t v25 = *(void *)&a1[v24];
  *(void *)&a1[v24] = *(void *)&a2[v24];
  swift_release(v25);
  uint64_t v26 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  a1[v26] = a2[v26];
  uint64_t v27 = a3[12];
  uint64_t v28 = &a1[v27];
  uint64_t v29 = &a2[v27];
  *(void *)uint64_t v28 = *(void *)v29;
  v28[8] = v29[8];
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchCallHistoryShowCallHistoryParameters( uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_2E97C8);
}

void __swift_get_extra_inhabitant_index_31Tm()
{
  if (v1)
  {
    uint64_t v2 = OUTLINED_FUNCTION_158();
    OUTLINED_FUNCTION_9_3(v2, v3, v4);
  }

  else
  {
    OUTLINED_FUNCTION_140_11(*(int *)(v0 + 28));
    OUTLINED_FUNCTION_6();
  }

uint64_t storeEnumTagSinglePayload for SearchCallHistoryShowCallHistoryParameters( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_2E981C);
}

void __swift_store_extra_inhabitant_index_32Tm()
{
  if (v3)
  {
    uint64_t v4 = OUTLINED_FUNCTION_91_3();
    OUTLINED_FUNCTION_32_6(v4, v5, v6, v7);
  }

  else
  {
    *(void *)(v1 + *(int *)(v2 + 2ContactDisambiguationPromptResponse.debugDescription.getter(*(void *)v0, *(_BYTE *)(v0 + 8)) = (v0 - 1);
    OUTLINED_FUNCTION_6();
  }

void type metadata completion function for SearchCallHistoryShowCallHistoryParameters(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(v2 - 8) + 64LL;
    v4[1] = v4[0];
    void v4[2] = "\t";
    v4[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
    void v4[4] = &unk_33FD70;
    void v4[5] = &unk_33FD70;
    void v4[6] = &unk_33FD88;
    void v4[7] = &unk_33FD88;
    v4[8] = "\t";
    swift_initStructMetadata(a1, 256LL, 9LL, v4, a1 + 16);
  }

char *initializeBufferWithCopyOfBuffer for SearchCallHistoryShowVoicemailsParameters( char *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *(void *)a1 = *a2;
    uint64_t v4 = (char *)(v9 + ((v5 + 16LL) & ~(unint64_t)v5));
  }

  else
  {
    uint64_t v7 = type metadata accessor for SpeakableString(0LL);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1LL, v7))
    {
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
      memcpy(v4, a2, *(void *)(*(void *)(v8 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16LL))(v4, a2, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v4, 0LL, 1LL, v7);
    }

    uint64_t v10 = a3[6];
    *(void *)&v4[a3[5]] = *(uint64_t *)((char *)a2 + a3[5]);
    *(void *)&v4[v10] = *(uint64_t *)((char *)a2 + v10);
    uint64_t v11 = a3[7];
    uint64_t v12 = a3[8];
    uint64_t v13 = &v4[v11];
    int v14 = (char *)a2 + v11;
    *(void *)uint64_t v13 = *(void *)v14;
    v13[8] = v14[8];
    int v15 = &v4[v12];
    uint64_t v16 = (char *)a2 + v12;
    *(void *)int v15 = *(void *)v16;
    v15[8] = v16[8];
    swift_bridgeObjectRetain();
  }

  swift_retain();
  return v4;
}

uint64_t destroy for SearchCallHistoryShowVoicemailsParameters(uint64_t a1, uint64_t a2)
{
  return destroy for SearchCallHistoryReadSingleCallRecordParameters( a1,  a2,  (void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t destroy for SearchCallHistoryReadSingleCallRecordParameters( uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v6 = OUTLINED_FUNCTION_26_0();
  a3(*(void *)(a1 + *(int *)(a2 + 20)));
  return swift_release(*(void *)(a1 + *(int *)(a2 + 24)));
}

char *initializeWithCopy for SearchCallHistoryShowVoicemailsParameters(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for SpeakableString(0LL);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1LL, v6))
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0LL, 1LL, v6);
  }

  uint64_t v8 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  *(void *)&a1[v8] = *(void *)&a2[v8];
  uint64_t v9 = a3[7];
  uint64_t v10 = a3[8];
  uint64_t v11 = &a1[v9];
  uint64_t v12 = &a2[v9];
  *(void *)uint64_t v11 = *(void *)v12;
  v11[8] = v12[8];
  uint64_t v13 = &a1[v10];
  int v14 = &a2[v10];
  *(void *)uint64_t v13 = *(void *)v14;
  v13[8] = v14[8];
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

char *assignWithCopy for SearchCallHistoryShowVoicemailsParameters(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for SpeakableString(0LL);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1LL, v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1LL, v6);
  if (!EnumTagSinglePayload)
  {
    uint64_t v9 = *(void *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 24))(a1, a2, v6);
      goto LABEL_7;
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }

  if (v8)
  {
LABEL_6:
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0LL, 1LL, v6);
LABEL_7:
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[6];
  uint64_t v12 = *(void *)&a1[v11];
  *(void *)&a1[v11] = *(void *)&a2[v11];
  swift_retain();
  swift_release(v12);
  uint64_t v13 = a3[7];
  int v14 = &a1[v13];
  int v15 = &a2[v13];
  uint64_t v16 = *(void *)v15;
  v14[8] = v15[8];
  *(void *)int v14 = v16;
  uint64_t v17 = a3[8];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  uint64_t v20 = *(void *)v19;
  v18[8] = v19[8];
  *(void *)uint64_t v18 = v20;
  return a1;
}

char *initializeWithTake for SearchCallHistoryShowVoicemailsParameters(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for SpeakableString(0LL);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1LL, v6))
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0LL, 1LL, v6);
  }

  uint64_t v8 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  *(void *)&a1[v8] = *(void *)&a2[v8];
  uint64_t v9 = a3[7];
  uint64_t v10 = a3[8];
  uint64_t v11 = &a1[v9];
  uint64_t v12 = &a2[v9];
  *(void *)uint64_t v11 = *(void *)v12;
  v11[8] = v12[8];
  uint64_t v13 = &a1[v10];
  int v14 = &a2[v10];
  *(void *)uint64_t v13 = *(void *)v14;
  v13[8] = v14[8];
  return a1;
}

char *assignWithTake for SearchCallHistoryShowVoicemailsParameters(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for SpeakableString(0LL);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1LL, v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1LL, v6);
  if (!EnumTagSinglePayload)
  {
    uint64_t v9 = *(void *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, a2, v6);
      goto LABEL_7;
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }

  if (v8)
  {
LABEL_6:
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0LL, 1LL, v6);
LABEL_7:
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[6];
  uint64_t v12 = *(void *)&a1[v11];
  *(void *)&a1[v11] = *(void *)&a2[v11];
  swift_release(v12);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  int v15 = &a1[v13];
  uint64_t v16 = &a2[v13];
  *(void *)int v15 = *(void *)v16;
  v15[8] = v16[8];
  uint64_t v17 = &a1[v14];
  uint64_t v18 = &a2[v14];
  *(void *)uint64_t v17 = *(void *)v18;
  v17[8] = v18[8];
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchCallHistoryShowVoicemailsParameters( uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_2E9F24);
}

void sub_2E9F24()
{
  if (v1)
  {
    uint64_t v2 = OUTLINED_FUNCTION_158();
    OUTLINED_FUNCTION_9_3(v2, v3, v4);
  }

  else
  {
    OUTLINED_FUNCTION_140_11(*(int *)(v0 + 20));
    OUTLINED_FUNCTION_6();
  }

uint64_t storeEnumTagSinglePayload for SearchCallHistoryShowVoicemailsParameters( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_2E9F74);
}

void sub_2E9F74()
{
  if (v3)
  {
    uint64_t v4 = OUTLINED_FUNCTION_91_3();
    OUTLINED_FUNCTION_32_6(v4, v5, v6, v7);
  }

  else
  {
    *(void *)(v1 + *(int *)(v2 + 20)) = (v0 - 1);
    OUTLINED_FUNCTION_6();
  }

void type metadata completion function for SearchCallHistoryShowVoicemailsParameters( uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void type metadata completion function for SearchCallHistoryReadSingleCallRecordParameters( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (v9 <= 0x3F)
  {
    v10[0] = *(void *)(v8 - 8) + 64LL;
    v10[1] = a4;
    v10[2] = &unk_33FD70;
    v10[3] = a5;
    v10[4] = a5;
    swift_initStructMetadata(a1, 256LL, 5LL, v10, a1 + 16);
  }

uint64_t *initializeBufferWithCopyOfBuffer for SearchCallHistoryUnsupportedSearchParametersParameters( uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain();
  }

  else
  {
    uint64_t v7 = type metadata accessor for SpeakableString(0LL);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1LL, v7))
    {
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0LL, 1LL, v7);
    }

    uint64_t v10 = a3[5];
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v10, 1LL, v7))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16LL))(v11, v12, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0LL, 1LL, v7);
    }

    uint64_t v14 = a3[7];
    *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    int v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    swift_retain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1LL, v7))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16LL))(v15, v16, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v15, 0LL, 1LL, v7);
    }

    uint64_t v18 = a3[9];
    *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    *((_BYTE *)a1 + v18) = *((_BYTE *)a2 + v18);
    uint64_t v19 = a3[11];
    *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1LL, v7))
    {
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16LL))(v20, v21, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v20, 0LL, 1LL, v7);
    }
  }

  return a1;
}

uint64_t destroy for SearchCallHistoryUnsupportedSearchParametersParameters(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for SpeakableString(0LL);
  uint64_t v5 = a1 + a2[5];
  swift_release(*(void *)(a1 + a2[6]));
  uint64_t v6 = a1 + a2[7];
  uint64_t v7 = a1 + a2[11];
  uint64_t result = __swift_getEnumTagSinglePayload(v7, 1LL, v4);
  if (!(_DWORD)result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL))(v7, v4);
  }
  return result;
}

char *initializeWithCopy for SearchCallHistoryUnsupportedSearchParametersParameters( char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for SpeakableString(0LL);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1LL, v6))
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0LL, 1LL, v6);
  }

  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v8], 1LL, v6))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16LL))(v9, v10, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0LL, 1LL, v6);
  }

  uint64_t v12 = a3[7];
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  swift_retain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1LL, v6))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16LL))(v13, v14, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0LL, 1LL, v6);
  }

  uint64_t v16 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  a1[v16] = a2[v16];
  uint64_t v17 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1LL, v6))
  {
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16LL))(v18, v19, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v18, 0LL, 1LL, v6);
  }

  return a1;
}

char *assignWithCopy for SearchCallHistoryUnsupportedSearchParametersParameters(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for SpeakableString(0LL);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1LL, v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1LL, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0LL, 1LL, v6);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  uint64_t v9 = *(void *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v9 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v11 = a3[5];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  int v14 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v11], 1LL, v6);
  int v15 = __swift_getEnumTagSinglePayload((uint64_t)v13, 1LL, v6);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16LL))(v12, v13, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v12, 0LL, 1LL, v6);
      goto LABEL_13;
    }

    goto LABEL_12;
  }

  uint64_t v16 = *(void *)(v6 - 8);
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v6);
LABEL_12:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64LL));
    goto LABEL_13;
  }

  (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v12, v13, v6);
LABEL_13:
  uint64_t v18 = a3[6];
  uint64_t v19 = *(void *)&a1[v18];
  *(void *)&a1[v18] = *(void *)&a2[v18];
  swift_retain();
  swift_release(v19);
  uint64_t v20 = a3[7];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  int v23 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v20], 1LL, v6);
  int v24 = __swift_getEnumTagSinglePayload((uint64_t)v22, 1LL, v6);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16LL))(v21, v22, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v21, 0LL, 1LL, v6);
      goto LABEL_19;
    }

    goto LABEL_18;
  }

  uint64_t v25 = *(void *)(v6 - 8);
  if (v24)
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v21, v6);
LABEL_18:
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(v21, v22, *(void *)(*(void *)(v26 - 8) + 64LL));
    goto LABEL_19;
  }

  (*(void (**)(char *, char *, uint64_t))(v25 + 24))(v21, v22, v6);
LABEL_19:
  a1[a3[8]] = a2[a3[8]];
  a1[a3[9]] = a2[a3[9]];
  a1[a3[10]] = a2[a3[10]];
  uint64_t v27 = a3[11];
  uint64_t v28 = &a1[v27];
  uint64_t v29 = &a2[v27];
  int v30 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v27], 1LL, v6);
  int v31 = __swift_getEnumTagSinglePayload((uint64_t)v29, 1LL, v6);
  if (!v30)
  {
    uint64_t v32 = *(void *)(v6 - 8);
    if (!v31)
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 24))(v28, v29, v6);
      return a1;
    }

    (*(void (**)(char *, uint64_t))(v32 + 8))(v28, v6);
    goto LABEL_24;
  }

  if (v31)
  {
LABEL_24:
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(v28, v29, *(void *)(*(void *)(v33 - 8) + 64LL));
    return a1;
  }

  (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16LL))(v28, v29, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v28, 0LL, 1LL, v6);
  return a1;
}

char *initializeWithTake for SearchCallHistoryUnsupportedSearchParametersParameters( char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for SpeakableString(0LL);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1LL, v6))
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0LL, 1LL, v6);
  }

  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v8], 1LL, v6))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32LL))(v9, v10, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0LL, 1LL, v6);
  }

  uint64_t v12 = a3[7];
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  uint64_t v13 = &a1[v12];
  int v14 = &a2[v12];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v12], 1LL, v6))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32LL))(v13, v14, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0LL, 1LL, v6);
  }

  uint64_t v16 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  a1[v16] = a2[v16];
  uint64_t v17 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1LL, v6))
  {
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32LL))(v18, v19, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v18, 0LL, 1LL, v6);
  }

  return a1;
}

char *assignWithTake for SearchCallHistoryUnsupportedSearchParametersParameters(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for SpeakableString(0LL);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1LL, v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1LL, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0LL, 1LL, v6);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  uint64_t v9 = *(void *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v11 = a3[5];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  int v14 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v11], 1LL, v6);
  int v15 = __swift_getEnumTagSinglePayload((uint64_t)v13, 1LL, v6);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32LL))(v12, v13, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v12, 0LL, 1LL, v6);
      goto LABEL_13;
    }

    goto LABEL_12;
  }

  uint64_t v16 = *(void *)(v6 - 8);
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v6);
LABEL_12:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64LL));
    goto LABEL_13;
  }

  (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v12, v13, v6);
LABEL_13:
  uint64_t v18 = a3[6];
  uint64_t v19 = *(void *)&a1[v18];
  *(void *)&a1[v18] = *(void *)&a2[v18];
  swift_release(v19);
  uint64_t v20 = a3[7];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  int v23 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v20], 1LL, v6);
  int v24 = __swift_getEnumTagSinglePayload((uint64_t)v22, 1LL, v6);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32LL))(v21, v22, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v21, 0LL, 1LL, v6);
      goto LABEL_19;
    }

    goto LABEL_18;
  }

  uint64_t v25 = *(void *)(v6 - 8);
  if (v24)
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v21, v6);
LABEL_18:
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(v21, v22, *(void *)(*(void *)(v26 - 8) + 64LL));
    goto LABEL_19;
  }

  (*(void (**)(char *, char *, uint64_t))(v25 + 40))(v21, v22, v6);
LABEL_19:
  uint64_t v27 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  a1[v27] = a2[v27];
  uint64_t v28 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  uint64_t v29 = &a1[v28];
  int v30 = &a2[v28];
  int v31 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v28], 1LL, v6);
  int v32 = __swift_getEnumTagSinglePayload((uint64_t)v30, 1LL, v6);
  if (!v31)
  {
    uint64_t v33 = *(void *)(v6 - 8);
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 40))(v29, v30, v6);
      return a1;
    }

    (*(void (**)(char *, uint64_t))(v33 + 8))(v29, v6);
    goto LABEL_24;
  }

  if (v32)
  {
LABEL_24:
    uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
    memcpy(v29, v30, *(void *)(*(void *)(v34 - 8) + 64LL));
    return a1;
  }

  (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32LL))(v29, v30, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v29, 0LL, 1LL, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchCallHistoryUnsupportedSearchParametersParameters( uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_2EAEA4);
}

void __swift_get_extra_inhabitant_indexTm()
{
  if (v1)
  {
    uint64_t v2 = OUTLINED_FUNCTION_158();
    OUTLINED_FUNCTION_9_3(v2, v3, v4);
  }

  else
  {
    OUTLINED_FUNCTION_71_22(*(int *)(v0 + 24));
    OUTLINED_FUNCTION_6();
  }

uint64_t storeEnumTagSinglePayload for SearchCallHistoryUnsupportedSearchParametersParameters( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_2EAEF8);
}

void __swift_store_extra_inhabitant_indexTm()
{
  if (v3)
  {
    uint64_t v4 = OUTLINED_FUNCTION_91_3();
    OUTLINED_FUNCTION_32_6(v4, v5, v6, v7);
  }

  else
  {
    *(void *)(v1 + *(int *)(v2 + swift_release(*(void *)(v0 + 24)) = v0;
    OUTLINED_FUNCTION_6();
  }

void type metadata completion function for SearchCallHistoryUnsupportedSearchParametersParameters( uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(v2 - 8) + 64LL;
    v4[1] = v4[0];
    void v4[2] = &unk_33FD70;
    v4[3] = v4[0];
    void v4[4] = &unk_33FD88;
    void v4[5] = &unk_33FD88;
    void v4[6] = &unk_33FD88;
    void v4[7] = v4[0];
    swift_initStructMetadata(a1, 256LL, 8LL, v4, a1 + 16);
  }

uint64_t storeEnumTagSinglePayload for SearchCallHistoryOfferToReadMoreCallRecordsParameters( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(OUTLINED_FUNCTION_5_18(v2, v3, v4) = 1;
  }
  else {
    LODWORD(OUTLINED_FUNCTION_5_18(v2, v3, v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_2EB014 + 4 * byte_33FBEE[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2EB048 + 4 * byte_33FBE9[v4]))();
}

uint64_t sub_2EB048(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2EB050(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x2EB058LL);
  }
  return result;
}

uint64_t sub_2EB064(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x2EB06CLL);
  }
  *(_BYTE *)uint64_t result = a2 + 1;
  return result;
}

uint64_t sub_2EB070(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2EB078(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for SearchCallHistoryVoiceMailOfferToFollowUpActionParameters()
{
}

uint64_t type metadata accessor for SearchCallHistoryCATPatternsExecutor(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State( a1,  (uint64_t *)&type metadata singleton initialization cache for SearchCallHistoryCATPatternsExecutor,  (uint64_t)&nominal type descriptor for SearchCallHistoryCATPatternsExecutor);
}

uint64_t type metadata completion function for SearchCallHistoryCATPatternsExecutor(uint64_t a1)
{
  return swift_initClassMetadata2( a1,  0LL,  0LL,  v2,  a1 + class metadata base offset for SearchCallHistoryCATPatternsExecutor);
}

uint64_t ObjC metadata update function for SearchCallHistoryCATPatternsExecutor()
{
  return type metadata accessor for SearchCallHistoryCATPatternsExecutor(0LL);
}

uint64_t OUTLINED_FUNCTION_9_86(uint64_t a1)
{
  *(void *)(v1 + v2[5]) = 0LL;
  *(void *)(v1 + v2[6]) = 0LL;
  *(_BYTE *)(v1 + v2[7]) = v5;
  *(_BYTE *)(v1 + v2[8]) = v4;
  return v3(v1);
}

void OUTLINED_FUNCTION_11_94(uint64_t a1)
{
  *(void *)(a1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0x6C646E7542707061LL;
  *(void *)(a1 + 40) = 0xEB00000000644965LL;
  outlined init with copy of TransformationResult?(v1, v2, v3);
}

uint64_t OUTLINED_FUNCTION_15_82@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  return a1(v1, v2, v3);
}

uint64_t OUTLINED_FUNCTION_18_71(uint64_t result)
{
  v1[9] = result;
  v1[10] = 0x726F63655277656ELL;
  v1[11] = 0xEF746E756F437364LL;
  return result;
}

uint64_t OUTLINED_FUNCTION_20_68()
{
  return type metadata accessor for SearchCallHistoryReadMultipleCallRecordsParameters(0LL);
}

uint64_t OUTLINED_FUNCTION_31_49()
{
  return __swift_getEnumTagSinglePayload(v0, 1LL, v1);
}

uint64_t OUTLINED_FUNCTION_32_54@<X0>(uint64_t a1@<X8>)
{
  return __swift_storeEnumTagSinglePayload(v1 + a1, 1LL, 1LL, v2);
}

uint64_t OUTLINED_FUNCTION_38_40(char a1, char a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v5 + 24) = a4;
  *(void *)(v5 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v4;
  *(void *)(v5 + ++*(void *)(v0 + 16) = a3;
  *(_BYTE *)(v5 + 89) = a2;
  *(_BYTE *)(v5 + 88) = a1;
  return 0LL;
}

uint64_t OUTLINED_FUNCTION_39_36()
{
  uint64_t v3 = v2[5];
  uint64_t v4 = v2[6];
  uint64_t v5 = *(void *)(v1 + v3);
  *(void *)(v0 + OUTLINED_FUNCTION_2_18(v2, v3) = v5;
  *(void *)(v0 + OUTLINED_FUNCTION_5_18(v2, v3, v4) = *(void *)(v1 + v4);
  uint64_t v6 = v2[8];
  *(_BYTE *)(v0 + v2[7]) = *(_BYTE *)(v1 + v2[7]);
  *(_BYTE *)(v0 + OUTLINED_FUNCTION_45_9(v4, v5, v6) = *(_BYTE *)(v1 + v6);
  return swift_retain(v5);
}

void OUTLINED_FUNCTION_41_41()
{
  *(void *)(v0 + outlined init with copy of SharedGlobalsProviding(v0, v1 - 128) = 0x6F6365526C6C6163LL;
  *(void *)(v0 + 136) = 0xEF746E756F436472LL;
}

uint64_t OUTLINED_FUNCTION_44_34()
{
  *(void *)(v0 + ++*(void *)(v0 + 16) = 0LL;
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 56);
  *(void *)(v0 + 24) = 0LL;
  *(_BYTE *)(v0 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 1;
  *(void *)(v0 + 40) = 0LL;
  *(_BYTE *)(v0 + 48) = 1;
  return v1(v0 + 16);
}

uint64_t OUTLINED_FUNCTION_45_32()
{
  return type metadata accessor for SearchCallHistoryShowCallHistoryParameters(0LL);
}

uint64_t OUTLINED_FUNCTION_50_29()
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t *)(v2 - 8);
  *uint64_t v4 = *v1;
  uint64_t v5 = *(void *)(v3 + 96);
  *uint64_t v4 = *v1;
  *(void *)(v3 + outlined init with copy of SharedGlobalsProviding(v0, v1 - 104) = v0;
  return swift_task_dealloc(v5);
}

uint64_t OUTLINED_FUNCTION_58_27()
{
  return type metadata accessor for SearchCallHistoryReadMultipleVoiceMailRecordsParameters(0LL);
}

uint64_t OUTLINED_FUNCTION_59_24()
{
  return type metadata accessor for SearchCallHistoryUnsupportedSearchParametersParameters(0LL);
}

void OUTLINED_FUNCTION_61_27(uint64_t a1, uint64_t a2)
{
}

uint64_t OUTLINED_FUNCTION_62_25(uint64_t a1)
{
  *(void *)(a1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0x6C646E7542707061LL;
  *(void *)(a1 + 40) = 0xEB00000000644965LL;
  return v1;
}

uint64_t OUTLINED_FUNCTION_71_22@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + a1);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 2) = -1;
  }
  int v3 = v2 - 1;
  if (v3 < 0) {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t OUTLINED_FUNCTION_72_28()
{
  return swift_retain(v0);
}

void OUTLINED_FUNCTION_75_28(uint64_t a1@<X8>, double a2@<D0>)
{
  *(double *)(v3 + 144) = a2;
  *(void *)(v3 + 168) = v2;
  *(void *)(v3 + 176) = a1;
  *(void *)(v3 + 184) = 0xEB00000000736472LL;
}

uint64_t OUTLINED_FUNCTION_77_20(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(v1, 1LL, 1LL, a1);
}

  ;
}

uint64_t OUTLINED_FUNCTION_81_23()
{
  return type metadata accessor for SearchCallHistoryReadCannotFindCallRecordParameters(0LL);
}

void OUTLINED_FUNCTION_84_20(uint64_t a1@<X8>)
{
  uint64_t v2 = v1 + a1;
  *(void *)uint64_t v2 = 0LL;
  *(_BYTE *)(v2 + 8) = 1;
}

void OUTLINED_FUNCTION_87_16(uint64_t a1, uint64_t a2, uint64_t *a3)
{
}

void OUTLINED_FUNCTION_92_16()
{
  *(_BYTE *)(v0 + v1[8]) = v4;
  *(_BYTE *)(v0 + v1[9]) = v3;
  *(_BYTE *)(v0 + v1[10]) = v2;
}

uint64_t OUTLINED_FUNCTION_97_18()
{
  uint64_t v3 = *(int *)(v2 + 32);
  *(_BYTE *)(v0 + *(int *)(v2 + 2ContactDisambiguationPromptResponse.debugDescription.getter(*(void *)v0, *(_BYTE *)(v0 + 8)) = *(_BYTE *)(v1 + *(int *)(v2 + 28));
  *(_BYTE *)(v0 + OUTLINED_FUNCTION_2_18(v2, v3) = *(_BYTE *)(v1 + v3);
  return v0;
}

void OUTLINED_FUNCTION_98_15()
{
  v0[8] = *v0;
}

uint64_t OUTLINED_FUNCTION_99_13(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 32));
}

uint64_t OUTLINED_FUNCTION_102_9()
{
  return type metadata accessor for SearchCallHistoryReadSingleVoiceMailRecordParameters(0LL);
}

uint64_t OUTLINED_FUNCTION_103_12()
{
  return type metadata accessor for SearchCallHistoryReadSingleCallRecordParameters(0LL);
}

uint64_t OUTLINED_FUNCTION_104_10()
{
  return type metadata accessor for SearchCallHistoryReadSingleCallRecordDisplayForwardParameters(0LL);
}

uint64_t OUTLINED_FUNCTION_105_9(uint64_t result)
{
  v1[15] = result;
  v1[16] = 0x746E65746E69LL;
  v1[17] = 0xE600000000000000LL;
  return result;
}

uint64_t OUTLINED_FUNCTION_111_12@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t OUTLINED_FUNCTION_115_12@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + a1);
  *(void *)(v1 + a1) = *(void *)(v2 + a1);
  return swift_release(v3);
}

uint64_t OUTLINED_FUNCTION_121_13@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v2 + a1);
  *(void *)(v1 + a1) = v3;
  return swift_retain(v3);
}

uint64_t OUTLINED_FUNCTION_123_9()
{
  return type metadata accessor for SearchCallHistoryReadMultipleCallRecordsParameters(0LL);
}

uint64_t OUTLINED_FUNCTION_124_10()
{
  return type metadata accessor for SearchCallHistoryShowVoicemailsParameters(0LL);
}

uint64_t OUTLINED_FUNCTION_125_10()
{
  return type metadata accessor for SearchCallHistoryReadCannotFindCallRecordParameters(0LL);
}

uint64_t OUTLINED_FUNCTION_126_9(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3(0LL);
}

  ;
}

void OUTLINED_FUNCTION_129_12(uint64_t a1@<X8>)
{
  *(void *)(v1 + 23__swift_destroy_boxed_opaque_existential_1(v0 + 2) = (a1 - 32) | 0x8000000000000000LL;
}

void OUTLINED_FUNCTION_130_4(uint64_t a1@<X8>)
{
  *(void *)(v1 + 136) = (a1 - 32) | 0x8000000000000000LL;
}

void OUTLINED_FUNCTION_131_10(uint64_t a1, uint64_t a2)
{
}

double OUTLINED_FUNCTION_133_13()
{
  double result = 0.0;
  *uint64_t v0 = 0u;
  v0[1] = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_135_8(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(a1, 1LL, 1LL, v1);
}

uint64_t OUTLINED_FUNCTION_140_11@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + a1);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 2) = -1;
  }
  return (v2 + 1);
}

void OUTLINED_FUNCTION_141_9(uint64_t a1@<X8>)
{
  v1[12] = v2;
  v1[15] = a1;
  v1[16] = 0xD000000000000011LL;
}

uint64_t OUTLINED_FUNCTION_145_9(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 28));
}

uint64_t OUTLINED_FUNCTION_148_9()
{
  return type metadata accessor for SearchCallHistoryShowVoicemailsParameters(0LL);
}

void OUTLINED_FUNCTION_150_7(uint64_t a1@<X0>, uint64_t *a2@<X2>, uint64_t a3@<X8>)
{
}

void OUTLINED_FUNCTION_152_8(uint64_t a1@<X8>)
{
  *(void *)(v1 + 328) = (a1 - 32) | 0x8000000000000000LL;
}

void *OUTLINED_FUNCTION_154_9()
{
  *(void *)(v0 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v2;
  return __swift_allocate_boxed_opaque_existential_1(v1);
}

uint64_t OUTLINED_FUNCTION_156_3()
{
  return v1(v0);
}

PhoneCallFlowDelegatePlugin::AnnounceGroupFaceTimeInviteCATs::Properties_optional __swiftcall AnnounceGroupFaceTimeInviteCATs.Properties.init(rawValue:)( Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)( (Swift::OpaquePointer)&outlined read-only object #0 of AnnounceGroupFaceTimeInviteCATs.Properties.init(rawValue:),  v2);
  swift_bridgeObjectRelease(object);
  if (v3 == 1) {
    v4.int value = PhoneCallFlowDelegatePlugin_AnnounceGroupFaceTimeInviteCATs_Properties_readGroupFaceTimeInviteAnnouncement;
  }
  else {
    v4.int value = PhoneCallFlowDelegatePlugin_AnnounceGroupFaceTimeInviteCATs_Properties_unknownDefault;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

PhoneCallFlowDelegatePlugin::AnnounceGroupFaceTimeInviteCATs::Properties_optional protocol witness for RawRepresentable.init(rawValue:) in conformance AnnounceGroupFaceTimeInviteCATs.Properties@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::AnnounceGroupFaceTimeInviteCATs::Properties_optional *a2@<X8>)
{
  result.int value = AnnounceGroupFaceTimeInviteCATs.Properties.init(rawValue:)(*a1).value;
  a2->int value = result.value;
  return result;
}

unint64_t protocol witness for RawRepresentable.rawValue.getter in conformance AnnounceGroupFaceTimeInviteCATs.Properties@<X0>( unint64_t *a1@<X8>)
{
  unint64_t result = AnnounceGroupFaceTimeInviteCATPatternsIdentifiers.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t AnnounceGroupFaceTimeInviteCATs.offerFollowUpIntent(completion:)()
{
  return dispatch thunk of CATWrapper.execute(catId:parameters:completion:)(0xD00000000000002FLL);
}

uint64_t AnnounceGroupFaceTimeInviteCATs.offerFollowUpIntent()(uint64_t a1)
{
  *(void *)(v1 + ++*(void *)(v0 + 16) = v3;
  *Swift::Int v3 = v1;
  v3[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return ((uint64_t (*)(uint64_t, unint64_t, unint64_t, void *))v5)( a1,  0xD00000000000002FLL,  0x8000000000345A30LL,  _swiftEmptyArrayStorage);
}

uint64_t AnnounceGroupFaceTimeInviteCATs.offerFollowUpIntent()()
{
  *(void *)(v0 + ++*(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return ((uint64_t (*)(unint64_t, unint64_t, void *))v3)( 0xD00000000000002FLL,  0x8000000000345A30LL,  _swiftEmptyArrayStorage);
}

{
  return dispatch thunk of CATWrapper.execute(catId:parameters:)( 0xD00000000000002FLL,  0x8000000000345A30LL,  _swiftEmptyArrayStorage);
}

void AnnounceGroupFaceTimeInviteCATs.readGroupFaceTimeInviteAnnouncement(messagesGroupName:caller:participants:burstIndex:numberOfParticipants:numberOfParticipantsNotAnnounced:completion:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = v13 - v12;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v16 = OUTLINED_FUNCTION_28_38(v15);
  *(_OWORD *)(v16 + ++*(void *)(v0 + 16) = xmmword_328A80;
  uint64_t v17 = (void *)(v16 + 48);
  *(void *)(v16 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xD000000000000011LL;
  *(void *)(v16 + 40) = 0x800000000034CEF0LL;
  outlined init with copy of SpeakableString?( a1,  v14,  &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v18 = OUTLINED_FUNCTION_26_0();
  if (__swift_getEnumTagSinglePayload(v14, 1LL, v18) == 1)
  {
    outlined destroy of SpeakableString?(v14, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)uint64_t v17 = 0u;
    *(_OWORD *)(v16 + 64) = 0u;
  }

  else
  {
    *(void *)(v16 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v18;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v17);
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32LL))( boxed_opaque_existential_1,  v14,  v18);
  }

  *(void *)(v16 + 80) = 0x72656C6C6163LL;
  *(void *)(v16 + 88) = 0xE600000000000000LL;
  if (a2)
  {
    uint64_t v20 = OUTLINED_FUNCTION_18_22();
    uint64_t v21 = a2;
  }

  else
  {
    uint64_t v21 = 0LL;
    uint64_t v20 = 0LL;
    *(void *)(v16 + outlined init with copy of SharedGlobalsProviding(v0, v1 - 104) = 0LL;
    *(void *)(v16 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  }

  *(void *)(v16 + 96) = v21;
  *(void *)(v16 + 120) = v20;
  strcpy((char *)(v16 + 128), "participants");
  *(_BYTE *)(v16 + 141) = 0;
  *(_WORD *)(v16 + 14__swift_destroy_boxed_opaque_existential_1(v0 + 2) = -5120;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PhonePerson]);
  *(void *)(v16 + 144) = a3;
  *(void *)(v16 + 168) = v22;
  *(void *)(v16 + 176) = 0x646E497473727562LL;
  *(void *)(v16 + 184) = 0xEA00000000007865LL;
  if ((a5 & 1) != 0)
  {
    OUTLINED_FUNCTION_22_64();
    *(void *)(v16 + 200) = 0LL;
    *(void *)(v16 + outlined init with copy of SharedGlobalsProviding(v0 - 168, v0 - 208) = 0LL;
  }

  else
  {
    int v23 = &type metadata for Double;
    uint64_t v24 = a4;
  }

  *(void *)(v16 + 19__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v24;
  *(void *)(v16 + 2++*(void *)(v0 + 16) = v23;
  *(void *)(v16 + 224) = 0xD000000000000014LL;
  OUTLINED_FUNCTION_179();
  *(void *)(v16 + 23__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v25;
  if ((v26 & 1) != 0)
  {
    OUTLINED_FUNCTION_22_64();
    *(void *)(v16 + outlined init with copy of SharedGlobalsProviding(v0 - 128, v0 - 248) = 0LL;
    *(void *)(v16 + 256) = 0LL;
  }

  else
  {
    uint64_t v27 = &type metadata for Double;
    uint64_t v28 = a6;
  }

  *(void *)(v16 + 240) = v28;
  *(void *)(v16 + 264) = v27;
  *(void *)(v16 + 27__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xD000000000000020LL;
  OUTLINED_FUNCTION_179();
  *(void *)(v16 + 280) = v29;
  if ((v30 & 1) != 0)
  {
    int v31 = 0LL;
    uint64_t v32 = 0LL;
    *(void *)(v16 + 296) = 0LL;
    *(void *)(v16 + 304) = 0LL;
  }

  else
  {
    int v31 = &type metadata for Double;
    uint64_t v32 = a8;
  }

  *(void *)(v16 + 31__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v31;
  *(void *)(v16 + 288) = v32;
  swift_retain();
  swift_bridgeObjectRetain();
  dispatch thunk of CATWrapper.execute(catId:parameters:completion:)(0xD00000000000003FLL);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_7_5();
}

uint64_t AnnounceGroupFaceTimeInviteCATs.readGroupFaceTimeInviteAnnouncement(messagesGroupName:caller:participants:burstIndex:numberOfParticipants:numberOfParticipantsNotAnnounced:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, char a8, uint64_t a9, char a10)
{
  *(_BYTE *)(v11 + 114) = a10;
  *(void *)(v11 + 64) = a9;
  *(void *)(v11 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v10;
  *(_BYTE *)(v11 + 113) = a8;
  *(_BYTE *)(v11 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a6;
  *(void *)(v11 + 48) = a5;
  *(void *)(v11 + 56) = a7;
  *(void *)(v11 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a3;
  *(void *)(v11 + 40) = a4;
  *(void *)(v11 + ++*(void *)(v0 + 16) = a1;
  *(void *)(v11 + 24) = a2;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  *(void *)(v11 + 80) = OUTLINED_FUNCTION_12_0(v12);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_33_37(v13, v14, v15);
}

uint64_t AnnounceGroupFaceTimeInviteCATs.readGroupFaceTimeInviteAnnouncement(messagesGroupName:caller:participants:burstIndex:numberOfParticipants:numberOfParticipantsNotAnnounced:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_28_38(v1);
  *(void *)(v0 + 88) = v2;
  *(_OWORD *)(v2 + ++*(void *)(v0 + 16) = xmmword_328A80;
  *(void *)(v2 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xD000000000000011LL;
  *(void *)(v2 + 40) = 0x800000000034CEF0LL;
  OUTLINED_FUNCTION_27_6(v2, v3, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v4 = OUTLINED_FUNCTION_26_0();
  int v5 = OUTLINED_FUNCTION_36_2(v4);
  uint64_t v6 = *(void *)(v0 + 80);
  if (v5 == 1)
  {
    outlined destroy of SpeakableString?( *(void *)(v0 + 80),  &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)(v2 + 48) = 0u;
    *(_OWORD *)(v2 + 64) = 0u;
  }

  else
  {
    uint64_t v7 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v7);
  }

  uint64_t v8 = *(void *)(v0 + 32);
  OUTLINED_FUNCTION_2_94();
  if (v8)
  {
    uint64_t v9 = OUTLINED_FUNCTION_18_22();
    uint64_t v10 = v8;
  }

  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_15_83();
  }

  char v11 = *(_BYTE *)(v0 + 112);
  OUTLINED_FUNCTION_0_112(v9, v10);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PhonePerson]);
  OUTLINED_FUNCTION_2_66(v12);
  if ((v11 & 1) != 0)
  {
    uint64_t v14 = 0LL;
    uint64_t v13 = 0LL;
    *(void *)(v2 + 200) = 0LL;
    *(void *)(v2 + outlined init with copy of SharedGlobalsProviding(v0 - 168, v0 - 208) = 0LL;
  }

  else
  {
    uint64_t v13 = *(void *)(v0 + 48);
    uint64_t v14 = &type metadata for Double;
  }

  char v15 = *(_BYTE *)(v0 + 113);
  *(void *)(v2 + 19__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v13;
  *(void *)(v2 + 2++*(void *)(v0 + 16) = v14;
  *(void *)(v2 + 224) = 0xD000000000000014LL;
  *(void *)(v2 + 23__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0x800000000034CF10LL;
  if ((v15 & 1) != 0)
  {
    uint64_t v17 = 0LL;
    uint64_t v16 = 0LL;
    *(void *)(v2 + outlined init with copy of SharedGlobalsProviding(v0 - 128, v0 - 248) = 0LL;
    *(void *)(v2 + 256) = 0LL;
  }

  else
  {
    uint64_t v16 = *(void *)(v0 + 56);
    uint64_t v17 = &type metadata for Double;
  }

  char v18 = *(_BYTE *)(v0 + 114);
  *(void *)(v2 + 240) = v16;
  *(void *)(v2 + 264) = v17;
  *(void *)(v2 + 27__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xD000000000000020LL;
  *(void *)(v2 + 280) = 0x800000000034CF30LL;
  if ((v18 & 1) != 0)
  {
    uint64_t v20 = 0LL;
    uint64_t v19 = 0LL;
    *(void *)(v2 + 296) = 0LL;
    *(void *)(v2 + 304) = 0LL;
  }

  else
  {
    uint64_t v19 = *(void *)(v0 + 64);
    uint64_t v20 = &type metadata for Double;
  }

  *(void *)(v2 + 31__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v20;
  *(void *)(v2 + 288) = v19;
  OUTLINED_FUNCTION_7_74();
  OUTLINED_FUNCTION_48_0();
  uint64_t v21 = (void *)swift_task_alloc(v6);
  *(void *)(v0 + 96) = v21;
  *uint64_t v21 = v0;
  v21[1] = AnnounceGroupFaceTimeInviteCATs.readGroupFaceTimeInviteAnnouncement(messagesGroupName:caller:participants:burstIndex:numberOfParticipants:numberOfParticipantsNotAnnounced:);
  return v23(*(void *)(v0 + 16), 0xD00000000000003FLL, 0x8000000000345A60LL, v2);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v2 = *v1;
  *(void *)(v2 + outlined init with copy of SharedGlobalsProviding(v0, v1 - 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return swift_task_switch(v3, v4, v5);
  }

  else
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_23_3();
    return (*(uint64_t (**)(void))(v2 + 8))();
  }

{
  uint64_t v0;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_23_3();
  return OUTLINED_FUNCTION_3_0(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  char v15;
  uint64_t v16;
  void *v17;
  char v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t (*v23)(unint64_t, unint64_t, uint64_t);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_28_38(v1);
  *(void *)(v0 + 80) = v2;
  *(_OWORD *)(v2 + ++*(void *)(v0 + 16) = xmmword_328A80;
  *(void *)(v2 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xD000000000000011LL;
  *(void *)(v2 + 40) = 0x800000000034CEF0LL;
  OUTLINED_FUNCTION_27_6(v2, v3, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v4 = OUTLINED_FUNCTION_26_0();
  int v5 = OUTLINED_FUNCTION_36_2(v4);
  uint64_t v6 = *(void *)(v0 + 72);
  if (v5 == 1)
  {
    outlined destroy of SpeakableString?( *(void *)(v0 + 72),  &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)(v2 + 48) = 0u;
    *(_OWORD *)(v2 + 64) = 0u;
  }

  else
  {
    uint64_t v7 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v7);
  }

  uint64_t v8 = *(void *)(v0 + 24);
  OUTLINED_FUNCTION_2_94();
  if (v8)
  {
    uint64_t v9 = OUTLINED_FUNCTION_18_22();
    uint64_t v10 = v8;
  }

  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_15_83();
  }

  char v11 = *(_BYTE *)(v0 + 104);
  OUTLINED_FUNCTION_0_112(v9, v10);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PhonePerson]);
  OUTLINED_FUNCTION_2_66(v12);
  if ((v11 & 1) != 0)
  {
    uint64_t v14 = 0LL;
    uint64_t v13 = 0LL;
    *(void *)(v2 + 200) = 0LL;
    *(void *)(v2 + outlined init with copy of SharedGlobalsProviding(v0 - 168, v0 - 208) = 0LL;
  }

  else
  {
    uint64_t v13 = *(void *)(v0 + 40);
    uint64_t v14 = &type metadata for Double;
  }

  char v15 = *(_BYTE *)(v0 + 105);
  *(void *)(v2 + 19__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v13;
  *(void *)(v2 + 2++*(void *)(v0 + 16) = v14;
  *(void *)(v2 + 224) = 0xD000000000000014LL;
  *(void *)(v2 + 23__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0x800000000034CF10LL;
  if ((v15 & 1) != 0)
  {
    uint64_t v17 = 0LL;
    uint64_t v16 = 0LL;
    *(void *)(v2 + outlined init with copy of SharedGlobalsProviding(v0 - 128, v0 - 248) = 0LL;
    *(void *)(v2 + 256) = 0LL;
  }

  else
  {
    uint64_t v16 = *(void *)(v0 + 48);
    uint64_t v17 = &type metadata for Double;
  }

  char v18 = *(_BYTE *)(v0 + 106);
  *(void *)(v2 + 240) = v16;
  *(void *)(v2 + 264) = v17;
  *(void *)(v2 + 27__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xD000000000000020LL;
  *(void *)(v2 + 280) = 0x800000000034CF30LL;
  if ((v18 & 1) != 0)
  {
    uint64_t v20 = 0LL;
    uint64_t v19 = 0LL;
    *(void *)(v2 + 296) = 0LL;
    *(void *)(v2 + 304) = 0LL;
  }

  else
  {
    uint64_t v19 = *(void *)(v0 + 56);
    uint64_t v20 = &type metadata for Double;
  }

  *(void *)(v2 + 31__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v20;
  *(void *)(v2 + 288) = v19;
  OUTLINED_FUNCTION_7_74();
  OUTLINED_FUNCTION_48_0();
  uint64_t v21 = (void *)swift_task_alloc(v6);
  *(void *)(v0 + 88) = v21;
  *uint64_t v21 = v0;
  v21[1] = AnnounceGroupFaceTimeInviteCATs.readGroupFaceTimeInviteAnnouncement(messagesGroupName:caller:participants:burstIndex:numberOfParticipants:numberOfParticipantsNotAnnounced:);
  return v23(0xD00000000000003FLL, 0x8000000000345A60LL, v2);
}

uint64_t AnnounceGroupFaceTimeInviteCATs.readGroupFaceTimeInviteAnnouncement(messagesGroupName:caller:participants:burstIndex:numberOfParticipants:numberOfParticipantsNotAnnounced:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7, uint64_t a8, char a9)
{
  *(void *)(v10 + 56) = a8;
  *(void *)(v10 + 64) = v9;
  *(_BYTE *)(v10 + 106) = a9;
  *(_BYTE *)(v10 + 10__swift_destroy_boxed_opaque_existential_1(v0 + 5) = a7;
  *(void *)(v10 + 40) = a4;
  *(void *)(v10 + 48) = a6;
  *(_BYTE *)(v10 + outlined init with copy of SharedGlobalsProviding(v0, v1 - 104) = a5;
  *(void *)(v10 + 24) = a2;
  *(void *)(v10 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a3;
  *(void *)(v10 + ++*(void *)(v0 + 16) = a1;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  *(void *)(v10 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = OUTLINED_FUNCTION_12_0(v11);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_33_37(v12, v13, v14);
}

uint64_t AnnounceGroupFaceTimeInviteCATs.readGroupFaceTimeInviteAnnouncement(messagesGroupName:caller:participants:burstIndex:numberOfParticipants:numberOfParticipantsNotAnnounced:)( uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 96) = v1;
  swift_task_dealloc();
  if (v1)
  {
    OUTLINED_FUNCTION_19_1();
    return swift_task_switch(v5, v6, v7);
  }

  else
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_23_3();
    return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
  }

void AnnounceGroupFaceTimeInviteCATs.readGroupFaceTimeInviteAnnouncement(messagesGroupName:caller:participants:burstIndex:numberOfParticipants:numberOfParticipantsNotAnnounced:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13 = v12 - v11;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v15 = OUTLINED_FUNCTION_28_38(v14);
  *(_OWORD *)(v15 + ++*(void *)(v0 + 16) = xmmword_328A80;
  uint64_t v16 = (void *)(v15 + 48);
  *(void *)(v15 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xD000000000000011LL;
  *(void *)(v15 + 40) = 0x800000000034CEF0LL;
  outlined init with copy of SpeakableString?( a1,  v13,  &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v17 = OUTLINED_FUNCTION_26_0();
  if (__swift_getEnumTagSinglePayload(v13, 1LL, v17) == 1)
  {
    outlined destroy of SpeakableString?(v13, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)uint64_t v16 = 0u;
    *(_OWORD *)(v15 + 64) = 0u;
  }

  else
  {
    *(void *)(v15 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v17;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v16);
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32LL))( boxed_opaque_existential_1,  v13,  v17);
  }

  OUTLINED_FUNCTION_2_94();
  if (a2)
  {
    uint64_t v19 = OUTLINED_FUNCTION_18_22();
    uint64_t v20 = a2;
  }

  else
  {
    uint64_t v19 = OUTLINED_FUNCTION_15_83();
  }

  OUTLINED_FUNCTION_0_112(v19, v20);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PhonePerson]);
  OUTLINED_FUNCTION_2_66(v21);
  if ((a5 & 1) != 0)
  {
    OUTLINED_FUNCTION_22_64();
    *(void *)(v15 + 200) = 0LL;
    *(void *)(v15 + outlined init with copy of SharedGlobalsProviding(v0 - 168, v0 - 208) = 0LL;
  }

  else
  {
    uint64_t v22 = &type metadata for Double;
    uint64_t v23 = a4;
  }

  *(void *)(v15 + 19__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v23;
  *(void *)(v15 + 2++*(void *)(v0 + 16) = v22;
  *(void *)(v15 + 224) = 0xD000000000000014LL;
  OUTLINED_FUNCTION_179();
  *(void *)(v15 + 23__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v24;
  if ((v25 & 1) != 0)
  {
    OUTLINED_FUNCTION_22_64();
    *(void *)(v15 + outlined init with copy of SharedGlobalsProviding(v0 - 128, v0 - 248) = 0LL;
    *(void *)(v15 + 256) = 0LL;
  }

  else
  {
    char v26 = &type metadata for Double;
    uint64_t v27 = a6;
  }

  *(void *)(v15 + 240) = v27;
  *(void *)(v15 + 264) = v26;
  *(void *)(v15 + 27__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xD000000000000020LL;
  OUTLINED_FUNCTION_179();
  *(void *)(v15 + 280) = v28;
  if ((v29 & 1) != 0)
  {
    char v30 = 0LL;
    uint64_t v31 = 0LL;
    *(void *)(v15 + 296) = 0LL;
    *(void *)(v15 + 304) = 0LL;
  }

  else
  {
    char v30 = &type metadata for Double;
    uint64_t v31 = a8;
  }

  *(void *)(v15 + 31__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v30;
  *(void *)(v15 + 288) = v31;
  swift_retain();
  OUTLINED_FUNCTION_48_0();
  dispatch thunk of CATWrapper.execute(catId:parameters:)(0xD00000000000003FLL, 0x8000000000345A60LL, v15);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_7_5();
}

unint64_t lazy protocol witness table accessor for type AnnounceGroupFaceTimeInviteCATs.Properties and conformance AnnounceGroupFaceTimeInviteCATs.Properties()
{
  unint64_t result = lazy protocol witness table cache variable for type AnnounceGroupFaceTimeInviteCATs.Properties and conformance AnnounceGroupFaceTimeInviteCATs.Properties;
  if (!lazy protocol witness table cache variable for type AnnounceGroupFaceTimeInviteCATs.Properties and conformance AnnounceGroupFaceTimeInviteCATs.Properties)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AnnounceGroupFaceTimeInviteCATs.Properties,  &type metadata for AnnounceGroupFaceTimeInviteCATs.Properties);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AnnounceGroupFaceTimeInviteCATs.Properties and conformance AnnounceGroupFaceTimeInviteCATs.Properties);
  }

  return result;
}

uint64_t type metadata accessor for AnnounceGroupFaceTimeInviteCATs(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for AnnounceGroupFaceTimeInviteCATs;
  if (!type metadata singleton initialization cache for AnnounceGroupFaceTimeInviteCATs) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AnnounceGroupFaceTimeInviteCATs);
  }
  return result;
}

uint64_t type metadata completion function for AnnounceGroupFaceTimeInviteCATs(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL, 0LL, v2, a1 + class metadata base offset for AnnounceGroupFaceTimeInviteCATs);
}

uint64_t ObjC metadata update function for AnnounceGroupFaceTimeInviteCATs()
{
  return type metadata accessor for AnnounceGroupFaceTimeInviteCATs(0LL);
}

uint64_t storeEnumTagSinglePayload for AnnounceGroupFaceTimeInviteCATs.Properties( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(OUTLINED_FUNCTION_5_18(v2, v3, v4) = 1;
  }
  else {
    LODWORD(OUTLINED_FUNCTION_5_18(v2, v3, v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_2EC334 + 4 * byte_3400A5[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2EC368 + 4 * byte_3400A0[v4]))();
}

uint64_t sub_2EC368(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2EC370(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x2EC378LL);
  }
  return result;
}

uint64_t sub_2EC384(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x2EC38CLL);
  }
  *(_BYTE *)uint64_t result = a2 + 1;
  return result;
}

uint64_t sub_2EC390(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2EC398(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AnnounceGroupFaceTimeInviteCATs.Properties()
{
  return &type metadata for AnnounceGroupFaceTimeInviteCATs.Properties;
}

uint64_t OUTLINED_FUNCTION_0_112@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(v2 + 96) = a2;
  *(void *)(v2 + 120) = result;
  strcpy((char *)(v2 + 128), "participants");
  *(_BYTE *)(v2 + 141) = 0;
  *(_WORD *)(v2 + 14__swift_destroy_boxed_opaque_existential_1(v0 + 2) = -5120;
  return result;
}

void OUTLINED_FUNCTION_2_94()
{
  *(void *)(v0 + 80) = 0x72656C6C6163LL;
  *(void *)(v0 + 88) = 0xE600000000000000LL;
}

uint64_t OUTLINED_FUNCTION_15_83()
{
  uint64_t result = 0LL;
  *(void *)(v0 + outlined init with copy of SharedGlobalsProviding(v0, v1 - 104) = 0LL;
  *(void *)(v0 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  return result;
}

  ;
}

uint64_t Locale.underscoredIdentifier.getter(uint64_t a1)
{
  __int128 v5[2] = Locale.identifier.getter(a1);
  v5[3] = v1;
  v5[0] = 45LL;
  v5[1] = 0xE100000000000000LL;
  v4[0] = 95LL;
  v4[1] = 0xE100000000000000LL;
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t v2 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( v5,  v4,  0LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t _sSq3mapyqd_0_Sgqd_0_xqd__YKXEqd__YKs5ErrorRd__Ri_d_0_r0_lF12SiriOntology21NonTerminalIntentNodeV_s5NeverO27PhoneCallFlowDelegatePlugin0jK3App_pTg5@<X0>( void (*a1)(char *)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v14 = a1;
  uint64_t v5 = type metadata accessor for NonTerminalIntentNode(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NonTerminalIntentNode?);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  outlined init with copy of CommonDirectAction?( v3,  (uint64_t)v11,  &demangling cache variable for type metadata for NonTerminalIntentNode?);
  uint64_t result = __swift_getEnumTagSinglePayload((uint64_t)v11, 1LL, v5);
  if ((_DWORD)result == 1)
  {
    *(void *)(a2 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + ++*(void *)(v0 + 16) = 0u;
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
    v14(v8);
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }

  return result;
}

uint64_t *PhoneCallNLv3Intent.appName.unsafeMutableAddressor()
{
  if (one-time initialization token for appName != -1) {
    swift_once(&one-time initialization token for appName, one-time initialization function for appName);
  }
  return &static PhoneCallNLv3Intent.appName;
}

uint64_t *PhoneCallNLv3Intent.reference.unsafeMutableAddressor()
{
  if (one-time initialization token for reference != -1) {
    swift_once(&one-time initialization token for reference, one-time initialization function for reference);
  }
  return &static PhoneCallNLv3Intent.reference;
}

uint64_t *PhoneCallNLv3Intent.confirmation.unsafeMutableAddressor()
{
  if (one-time initialization token for confirmation != -1) {
    swift_once(&one-time initialization token for confirmation, one-time initialization function for confirmation);
  }
  return &static PhoneCallNLv3Intent.confirmation;
}

uint64_t specialized PhoneCallNLIntent.hasVideoCallSemantic()()
{
  uint64_t v1 = type metadata accessor for PhoneCallNLv3Intent(0LL);
  uint64_t v2 = *(void *)(v0 + *(int *)(v1 + 56));
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type PhoneCallNLv3Intent and conformance PhoneCallNLv3Intent,  type metadata accessor for PhoneCallNLv3Intent);
  uint64_t v4 = v3;
  IntentNodeTraversable.value<A>(forNode:)((uint64_t *)((char *)&v19 + 2), v2, v1, v3);
  if (BYTE2(v19) == 9)
  {
    char v5 = 0;
  }

  else
  {
    uint64_t v6 = PhoneCallNoun.rawValue.getter(BYTE2(v19));
    if (v6 == 0x656D697465636166LL && v7 == 0xE800000000000000LL)
    {
      swift_bridgeObjectRelease();
      char v5 = 1;
    }

    else
    {
      char v5 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v7, 0x656D697465636166LL, 0xE800000000000000LL, 0LL);
      swift_bridgeObjectRelease();
    }
  }

  IntentNodeTraversable.value<A>(forNode:)((uint64_t *)((char *)&v19 + 1), *(void *)(v0 + *(int *)(v1 + 60)), v1, v4);
  if (BYTE1(v19) == 17)
  {
    char v9 = 0;
  }

  else
  {
    uint64_t v10 = PhoneCallVerb.rawValue.getter(BYTE1(v19));
    if (v10 == 0x656D697465636166LL && v11 == 0xE800000000000000LL)
    {
      swift_bridgeObjectRelease();
      char v9 = 1;
    }

    else
    {
      char v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v11, 0x656D697465636166LL, 0xE800000000000000LL, 0LL);
      swift_bridgeObjectRelease();
    }
  }

  IntentNodeTraversable.value<A>(forNode:)(&v19, v2, v1, v4);
  if (v19 == 9)
  {
    char v13 = 0;
  }

  else
  {
    uint64_t v14 = PhoneCallNoun.rawValue.getter(v19);
    if (v14 == 0x61665F70756F7267LL && v15 == 0xEE00656D69746563LL)
    {
      swift_bridgeObjectRelease();
      char v13 = 1;
    }

    else
    {
      char v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v15, 0x61665F70756F7267LL, 0xEE00656D69746563LL, 0LL);
      swift_bridgeObjectRelease();
    }
  }

  if ((v5 & 1) != 0) {
    char v17 = 1;
  }
  else {
    char v17 = v9 | v13;
  }
  return v17 & 1;
}

uint64_t specialized PhoneCallNLIntent.hasAudioCallSemantic()()
{
  uint64_t v1 = type metadata accessor for PhoneCallNLv3Intent(0LL);
  uint64_t v2 = *(void *)(v0 + *(int *)(v1 + 56));
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type PhoneCallNLv3Intent and conformance PhoneCallNLv3Intent,  type metadata accessor for PhoneCallNLv3Intent);
  uint64_t v4 = v3;
  IntentNodeTraversable.value<A>(forNode:)((uint64_t *)((char *)&v14 + 1), v2, v1, v3);
  if (BYTE1(v14) == 9)
  {
    int v5 = 0;
  }

  else
  {
    uint64_t v6 = PhoneCallNoun.rawValue.getter(BYTE1(v14));
    if (v6 == 0x656D697465636166LL && v7 == 0xEE006F6964756120LL)
    {
      swift_bridgeObjectRelease();
      int v5 = 1;
    }

    else
    {
      int v5 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v7, 0x656D697465636166LL, 0xEE006F6964756120LL, 0LL);
      swift_bridgeObjectRelease();
    }
  }

  IntentNodeTraversable.value<A>(forNode:)(&v14, *(void *)(v0 + *(int *)(v1 + 60)), v1, v4);
  if (v14 == 17)
  {
    int v9 = 0;
  }

  else
  {
    uint64_t v10 = PhoneCallVerb.rawValue.getter(v14);
    if (v10 == 0x656D697465636166LL && v11 == 0xEE006F6964756120LL)
    {
      swift_bridgeObjectRelease();
      int v9 = 1;
    }

    else
    {
      int v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v11, 0x656D697465636166LL, 0xEE006F6964756120LL, 0LL);
      swift_bridgeObjectRelease();
    }
  }

  return (v5 | v9) & 1;
}

uint64_t *PhoneCallNLv3Intent.callId.unsafeMutableAddressor()
{
  if (one-time initialization token for callId != -1) {
    swift_once(&one-time initialization token for callId, one-time initialization function for callId);
  }
  return &static PhoneCallNLv3Intent.callId;
}

uint64_t static PhoneCallNLv3Intent.placeCallBack()@<X0>(uint64_t a1@<X8>)
{
  return static PhoneCallNLv3Intent.placeCall()(0x636162206C6C6163LL, 0xE90000000000006BLL, a1);
}

uint64_t *PhoneCallNLv3Intent.applicationId.unsafeMutableAddressor()
{
  if (one-time initialization token for applicationId != -1) {
    swift_once(&one-time initialization token for applicationId, one-time initialization function for applicationId);
  }
  return &static PhoneCallNLv3Intent.applicationId;
}

uint64_t PhoneCallNLv3Intent.intent.getter()
{
  return PhoneCallNLv3Intent.intent.getter((void (*)(void))&type metadata accessor for NLIntent);
}

uint64_t PhoneCallNLv3Intent.appNode.getter()
{
  return PhoneCallNLv3Intent.appNode.getter(type metadata accessor for PhoneCallNLv3Intent);
}

uint64_t PhoneCallNLv3Intent.domainOntologyNode.getter()
{
  return swift_retain();
}

void one-time initialization function for appName(uint64_t a1)
{
}

uint64_t static PhoneCallNLv3Intent.appName.getter()
{
  return static PhoneCallNLv3Intent.appName.getter();
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  OUTLINED_FUNCTION_44_35();
  if (!v4) {
    OUTLINED_FUNCTION_52_31(v1, v2, v3);
  }
  return OUTLINED_FUNCTION_27_0(*v0);
}

void one-time initialization function for applicationId(uint64_t a1)
{
}

uint64_t static PhoneCallNLv3Intent.applicationId.getter()
{
  return static PhoneCallNLv3Intent.appName.getter();
}

void one-time initialization function for callId(uint64_t a1)
{
}

uint64_t static PhoneCallNLv3Intent.callId.getter()
{
  return static PhoneCallNLv3Intent.appName.getter();
}

void one-time initialization function for confirmation(uint64_t a1)
{
}

uint64_t static PhoneCallNLv3Intent.confirmation.getter()
{
  return static PhoneCallNLv3Intent.appName.getter();
}

void one-time initialization function for reference(uint64_t a1)
{
}

uint64_t static PhoneCallNLv3Intent.reference.getter()
{
  return static PhoneCallNLv3Intent.appName.getter();
}

uint64_t PhoneCallContactOntologyNode.__allocating_init(name:multicardinal:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PhoneCallContactOntologyNode.__allocating_init(name:multicardinal:)( a1,  a2,  a3,  (uint64_t (*)(uint64_t, uint64_t, uint64_t))PhoneCallContactOntologyNode.init(name:multicardinal:));
}

uint64_t SmsGroupOntologyNode.__allocating_init(name:multicardinal:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PhoneCallContactOntologyNode.__allocating_init(name:multicardinal:)( a1,  a2,  a3,  (uint64_t (*)(uint64_t, uint64_t, uint64_t))SmsGroupOntologyNode.init(name:multicardinal:));
}

uint64_t PhoneCallContactOntologyNode.__allocating_init(name:multicardinal:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  return a4(a1, a2, a3);
}

uint64_t closure #1 in PhoneCallNLv3Intent.app.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for AppIntentNode(0LL);
  a3[3] = v6;
  a3[4] = &protocol witness table for AppIntentNode;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a3);
  uint64_t v8 = type metadata accessor for NonTerminalIntentNode(0LL);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16LL))(boxed_opaque_existential_1, a1, v8);
  *(void *)((char *)boxed_opaque_existential_1 + *(int *)(v6 + 20)) = *(void *)(a2
  return swift_retain();
}

void AppIntentNode.init(intentNode:ontologyNode:)(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
}

uint64_t PhoneCallNLv3Intent.phoneCallAVMode.getter()
{
  if ((specialized PhoneCallNLIntent.hasVideoCallSemantic()() & 1) != 0) {
    return 1LL;
  }
  if ((specialized PhoneCallNLIntent.hasAudioCallSemantic()() & 1) != 0) {
    return 0LL;
  }
  return 2LL;
}

void PhoneCallNLv3Intent.phoneCallCapability.getter()
{
}

void PhoneCallNLv3Intent.phoneCallPreferredProvider.getter()
{
}

void PhoneCallNLv3Intent.phoneCallReference.getter()
{
}

void PhoneCallContactIntentNode.__allocating_init(intentNode:ontologyNode:)()
{
}

uint64_t closure #1 in PhoneCallNLv3Intent.smsGroups.getter@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for SmsGroupIntentNode(0LL);
  a3[3] = v6;
  a3[4] = &protocol witness table for SmsGroupIntentNode;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a3);
  uint64_t v8 = type metadata accessor for NonTerminalIntentNode(0LL);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16LL))(boxed_opaque_existential_1, a1, v8);
  *(void *)((char *)boxed_opaque_existential_1 + *(int *)(v6 + 20)) = *(void *)(a2
  return swift_retain();
}

void SmsGroupIntentNode.init(intentNode:ontologyNode:)(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
}

void AppIntentNode.init(intentNode:ontologyNode:)( uint64_t a1@<X1>, uint64_t (*a2)(void)@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = OUTLINED_FUNCTION_16_65();
  OUTLINED_FUNCTION_39_37(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL));
  *(void *)(a3 + *(int *)(a2(0LL) + 20)) = a1;
  OUTLINED_FUNCTION_6();
}

uint64_t PhoneCallNLv3Intent.hash(into:)(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NLIntent(0LL);
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type NLIntent and conformance NLIntent,  (uint64_t (*)(uint64_t))&type metadata accessor for NLIntent);
  dispatch thunk of Hashable.hash(into:)(a1, v2, v3);
  type metadata accessor for PhoneCallNLv3Intent(0LL);
  OUTLINED_FUNCTION_67_10();
  OUTLINED_FUNCTION_56_27( &lazy protocol witness table cache variable for type AppOntologyNode and conformance NonTerminalOntologyNode,  (uint64_t (*)(uint64_t))&type metadata accessor for AppOntologyNode);
  OUTLINED_FUNCTION_30_53(v4);
  uint64_t v5 = OUTLINED_FUNCTION_47_28();
  type metadata accessor for DomainOntologyNode(v5);
  OUTLINED_FUNCTION_56_27( &lazy protocol witness table cache variable for type DomainOntologyNode and conformance NonTerminalOntologyNode,  (uint64_t (*)(uint64_t))&type metadata accessor for DomainOntologyNode);
  OUTLINED_FUNCTION_30_53(v6);
  OUTLINED_FUNCTION_38_41();
  OUTLINED_FUNCTION_43_3();
  OUTLINED_FUNCTION_12_94(&lazy protocol witness table cache variable for type TerminalOntologyNode<PhoneCallAttribute> and conformance TerminalOntologyNode<A>);
  OUTLINED_FUNCTION_1_105(v7);
  OUTLINED_FUNCTION_38_41();
  OUTLINED_FUNCTION_43_3();
  OUTLINED_FUNCTION_12_94(&lazy protocol witness table cache variable for type TerminalOntologyNode<PhoneCallAudioRoute> and conformance TerminalOntologyNode<A>);
  OUTLINED_FUNCTION_1_105(v8);
  OUTLINED_FUNCTION_38_41();
  OUTLINED_FUNCTION_43_3();
  OUTLINED_FUNCTION_12_94(&lazy protocol witness table cache variable for type TerminalOntologyNode<PhoneCallCapability> and conformance TerminalOntologyNode<A>);
  OUTLINED_FUNCTION_1_105(v9);
  OUTLINED_FUNCTION_38_41();
  OUTLINED_FUNCTION_43_3();
  OUTLINED_FUNCTION_12_94(&lazy protocol witness table cache variable for type TerminalOntologyNode<PhoneCallPreferredProvider> and conformance TerminalOntologyNode<A>);
  OUTLINED_FUNCTION_1_105(v10);
  OUTLINED_FUNCTION_38_41();
  OUTLINED_FUNCTION_43_3();
  OUTLINED_FUNCTION_12_94(&lazy protocol witness table cache variable for type TerminalOntologyNode<PhoneCallDestinationType> and conformance TerminalOntologyNode<A>);
  OUTLINED_FUNCTION_1_105(v11);
  uint64_t v12 = OUTLINED_FUNCTION_47_28();
  type metadata accessor for PhoneCallContactOntologyNode(v12);
  OUTLINED_FUNCTION_56_27( &lazy protocol witness table cache variable for type PhoneCallContactOntologyNode and conformance NonTerminalOntologyNode,  type metadata accessor for PhoneCallContactOntologyNode);
  OUTLINED_FUNCTION_1_105(v13);
  OUTLINED_FUNCTION_38_41();
  OUTLINED_FUNCTION_43_3();
  OUTLINED_FUNCTION_12_94(&lazy protocol witness table cache variable for type TerminalOntologyNode<String> and conformance TerminalOntologyNode<A>);
  OUTLINED_FUNCTION_1_105(v14);
  OUTLINED_FUNCTION_38_41();
  OUTLINED_FUNCTION_43_3();
  OUTLINED_FUNCTION_12_94(&lazy protocol witness table cache variable for type TerminalOntologyNode<PhoneCallNoun> and conformance TerminalOntologyNode<A>);
  OUTLINED_FUNCTION_1_105(v15);
  OUTLINED_FUNCTION_38_41();
  OUTLINED_FUNCTION_43_3();
  OUTLINED_FUNCTION_12_94(&lazy protocol witness table cache variable for type TerminalOntologyNode<PhoneCallVerb> and conformance TerminalOntologyNode<A>);
  OUTLINED_FUNCTION_1_105(v16);
  uint64_t v17 = OUTLINED_FUNCTION_47_28();
  type metadata accessor for NonTerminalOntologyNode(v17);
  OUTLINED_FUNCTION_56_27( &lazy protocol witness table cache variable for type NonTerminalOntologyNode and conformance NonTerminalOntologyNode,  (uint64_t (*)(uint64_t))&type metadata accessor for NonTerminalOntologyNode);
  OUTLINED_FUNCTION_30_53(v18);
  uint64_t v19 = OUTLINED_FUNCTION_47_28();
  uint64_t v20 = type metadata accessor for SmsGroupOntologyNode(v19);
  OUTLINED_FUNCTION_56_27( &lazy protocol witness table cache variable for type SmsGroupOntologyNode and conformance NonTerminalOntologyNode,  type metadata accessor for SmsGroupOntologyNode);
  return dispatch thunk of Hashable.hash(into:)(a1, v20, v21);
}

void static PhoneCallNLv3Intent.__derived_struct_equals(_:_:)()
{
  if ((static NLIntent.== infix(_:_:)() & 1) != 0)
  {
    OUTLINED_FUNCTION_73_29();
    uint64_t v0 = (int *)type metadata accessor for PhoneCallNLv3Intent(0LL);
    if ((OUTLINED_FUNCTION_19_71(v0[5]) & 1) != 0 && (OUTLINED_FUNCTION_19_71(v0[6]) & 1) != 0)
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TerminalOntologyNode<PhoneCallAttribute>);
      if ((OUTLINED_FUNCTION_11_95(v0[7]) & 1) != 0)
      {
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TerminalOntologyNode<PhoneCallAudioRoute>);
        if ((OUTLINED_FUNCTION_11_95(v0[8]) & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TerminalOntologyNode<PhoneCallCapability>);
          if ((OUTLINED_FUNCTION_11_95(v0[9]) & 1) != 0)
          {
            __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TerminalOntologyNode<PhoneCallPreferredProvider>);
            if ((OUTLINED_FUNCTION_11_95(v0[10]) & 1) != 0)
            {
              __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TerminalOntologyNode<PhoneCallDestinationType>);
              if ((OUTLINED_FUNCTION_11_95(v0[11]) & 1) != 0 && (OUTLINED_FUNCTION_19_71(v0[12]) & 1) != 0)
              {
                __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TerminalOntologyNode<String>);
                if ((OUTLINED_FUNCTION_11_95(v0[13]) & 1) != 0)
                {
                  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TerminalOntologyNode<PhoneCallNoun>);
                  if ((OUTLINED_FUNCTION_11_95(v0[14]) & 1) != 0)
                  {
                    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TerminalOntologyNode<PhoneCallVerb>);
                    if ((OUTLINED_FUNCTION_11_95(v0[15]) & 1) != 0 && (OUTLINED_FUNCTION_19_71(v0[16]) & 1) != 0) {
                      OUTLINED_FUNCTION_19_71(v0[17]);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }

  OUTLINED_FUNCTION_16();
}

Swift::Int PhoneCallNLv3Intent.hashValue.getter()
{
  return Hasher._finalize()();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallNLv3Intent(uint64_t a1)
{
  return Hasher._finalize()();
}

uint64_t key path setter for PhoneCallContactIntentNode.intentNode : PhoneCallContactIntentNode( uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NonTerminalIntentNode(0LL);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 128LL))(v6);
}

void PhoneCallContactIntentNode.intentNode.setter(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin26PhoneCallContactIntentNode_intentNode;
  swift_beginAccess(v3, v5, 33LL, 0LL);
  uint64_t v4 = OUTLINED_FUNCTION_16_65();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(v3, a1, v4);
  swift_endAccess(v5);
  OUTLINED_FUNCTION_60_2();
}

void PhoneCallContactIntentNode.intentNode.modify(uint64_t a1)
{
}

uint64_t key path setter for PhoneCallContactIntentNode.ontologyNode : PhoneCallContactIntentNode( void *a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 152LL);
  uint64_t v3 = swift_retain(*a1);
  return v2(v3);
}

void PhoneCallContactIntentNode.ontologyNode.setter(uint64_t a1)
{
  uint64_t v3 = *v1;
  *uint64_t v1 = a1;
  swift_release(v3);
  OUTLINED_FUNCTION_60_2();
}

void PhoneCallContactIntentNode.ontologyNode.modify(uint64_t a1)
{
}

void static PhoneCallContactIntentNode.from(intentNode:ontologyNode:)()
{
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(v1 + 168);
  swift_retain();
  v4(v2, v0);
  OUTLINED_FUNCTION_6();
}

uint64_t *PhoneCallContactOntologyNode.personNode.unsafeMutableAddressor()
{
  if (one-time initialization token for personNode != -1) {
    swift_once(&one-time initialization token for personNode, one-time initialization function for personNode);
  }
  return &static PhoneCallContactOntologyNode.personNode;
}

uint64_t key path setter for PhoneCallContactIntentNode.contactId : PhoneCallContactIntentNode( uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 192LL);
  swift_bridgeObjectRetain(v3);
  return v4(v2, v3);
}

uint64_t *PhoneCallContactOntologyNode.phoneCallContactIdNode.unsafeMutableAddressor()
{
  if (one-time initialization token for phoneCallContactIdNode != -1) {
    swift_once( &one-time initialization token for phoneCallContactIdNode,  one-time initialization function for phoneCallContactIdNode);
  }
  return &static PhoneCallContactOntologyNode.phoneCallContactIdNode;
}

void PhoneCallContactIntentNode.contactId.modify(uint64_t *a1)
{
  *a1 = PhoneCallContactIntentNode.contactId.getter();
  a1[1] = v2;
  OUTLINED_FUNCTION_2();
}

uint64_t *PhoneCallContactOntologyNode.phoneCallContactReferenceNode.unsafeMutableAddressor()
{
  if (one-time initialization token for phoneCallContactReferenceNode != -1) {
    swift_once( &one-time initialization token for phoneCallContactReferenceNode,  one-time initialization function for phoneCallContactReferenceNode);
  }
  return &static PhoneCallContactOntologyNode.phoneCallContactReferenceNode;
}

void PhoneCallContactIntentNode.contactReference.modify(_BYTE *a1)
{
  *a1 = v2;
  OUTLINED_FUNCTION_2();
}

uint64_t key path setter for PhoneCallContactIntentNode.emailAddress : PhoneCallContactIntentNode( uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 240LL);
  swift_bridgeObjectRetain(v3);
  return v4(v2, v3);
}

uint64_t *PhoneCallContactOntologyNode.emailAddressNode.unsafeMutableAddressor()
{
  if (one-time initialization token for emailAddressNode != -1) {
    swift_once( &one-time initialization token for emailAddressNode,  one-time initialization function for emailAddressNode);
  }
  return &static PhoneCallContactOntologyNode.emailAddressNode;
}

void PhoneCallContactIntentNode.emailAddress.modify(uint64_t *a1)
{
  *a1 = PhoneCallContactIntentNode.emailAddress.getter();
  a1[1] = v2;
  OUTLINED_FUNCTION_2();
}

uint64_t key path setter for PhoneCallContactIntentNode.contactName : PhoneCallContactIntentNode( uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 264LL);
  swift_bridgeObjectRetain(v3);
  return v4(v2, v3);
}

uint64_t *PhoneCallContactOntologyNode.phoneCallContactNameNode.unsafeMutableAddressor()
{
  if (one-time initialization token for phoneCallContactNameNode != -1) {
    swift_once( &one-time initialization token for phoneCallContactNameNode,  one-time initialization function for phoneCallContactNameNode);
  }
  return &static PhoneCallContactOntologyNode.phoneCallContactNameNode;
}

void PhoneCallContactIntentNode.contactName.modify(uint64_t *a1)
{
  *a1 = PhoneCallContactIntentNode.contactName.getter();
  a1[1] = v2;
  OUTLINED_FUNCTION_2();
}

void PhoneCallContactIntentNode.isMe.modify()
{
  uint64_t v0 = PhoneCallContactIntentNode.isMe.getter();
  OUTLINED_FUNCTION_94_15(v0);
  OUTLINED_FUNCTION_2();
}

uint64_t key path getter for PhoneCallContactIntentNode.personName : PhoneCallContactIntentNode@<X0>( uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  (*(void (**)(void *__return_ptr))(**(void **)a1 + 304LL))(v4);
  return outlined init with take of PhoneCallPersonName?((uint64_t)v4, a2);
}

uint64_t key path setter for PhoneCallContactIntentNode.personName : PhoneCallContactIntentNode( uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(uint64_t (**)(void *))(**(void **)a2 + 312LL);
  outlined retain of PhoneCallPersonName?( v5,  (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void))outlined copy of PhoneCallPersonName?);
  return v3(v5);
}

void *PhoneCallContactIntentNode.personName.setter(void *a1)
{
  return outlined retain of PhoneCallPersonName?( a1,  (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void))outlined consume of PhoneCallPersonName?);
}

void PhoneCallContactIntentNode.personName.modify(void **a1)
{
  *a1 = malloc(0xE0uLL);
  PhoneCallContactIntentNode.personName.getter();
  uint64_t v1 = OUTLINED_FUNCTION_99_2();
  outlined init with take of PhoneCallPersonName?(v1, v2);
  OUTLINED_FUNCTION_6();
}

void PhoneCallContactIntentNode.personName.modify(uint64_t **a1)
{
  uint64_t v1 = *a1;
  outlined consume of PhoneCallPersonName?( (*a1)[14],  v1[15],  v1[16],  v1[17],  v1[18],  v1[19],  v1[20],  v1[21],  v1[22],  v1[23],  v1[24],  v1[25],  v1[26],  v1[27]);
  free(v1);
}

uint64_t key path setter for PhoneCallContactIntentNode.organizationName : PhoneCallContactIntentNode( uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 336LL);
  swift_bridgeObjectRetain(v3);
  return v4(v2, v3);
}

void PhoneCallContactIntentNode.organizationName.modify(void *a1)
{
  *a1 = v2;
  a1[1] = v3;
  OUTLINED_FUNCTION_2();
}

uint64_t key path setter for PhoneCallContactIntentNode.telephoneNumber : PhoneCallContactIntentNode( uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 360LL);
  swift_bridgeObjectRetain(v3);
  return v4(v2, v3);
}

uint64_t *PhoneCallContactOntologyNode.phoneNumberNode.unsafeMutableAddressor()
{
  if (one-time initialization token for phoneNumberNode != -1) {
    swift_once(&one-time initialization token for phoneNumberNode, one-time initialization function for phoneNumberNode);
  }
  return &static PhoneCallContactOntologyNode.phoneNumberNode;
}

void PhoneCallContactIntentNode.telephoneNumber.modify(uint64_t *a1)
{
  *a1 = PhoneCallContactIntentNode.telephoneNumber.getter();
  a1[1] = v2;
  OUTLINED_FUNCTION_2();
}

uint64_t key path setter for PhoneCallContactIntentNode.relationship : PhoneCallContactIntentNode( uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 384LL);
  swift_bridgeObjectRetain(v3);
  return v4(v2, v3);
}

void PhoneCallContactIntentNode.relationship.modify(void *a1)
{
  *a1 = v2;
  a1[1] = v3;
  OUTLINED_FUNCTION_2();
}

uint64_t key path setter for PhoneCallContactIntentNode.handleType : PhoneCallContactIntentNode( uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 408LL);
  swift_bridgeObjectRetain(v3);
  return v4(v2, v3);
}

uint64_t *PhoneCallContactOntologyNode.contactTypeNode.unsafeMutableAddressor()
{
  if (one-time initialization token for contactTypeNode != -1) {
    swift_once(&one-time initialization token for contactTypeNode, one-time initialization function for contactTypeNode);
  }
  return &static PhoneCallContactOntologyNode.contactTypeNode;
}

uint64_t PhoneCallContactIntentNode.handleType.setter(uint64_t a1, uint64_t a2)
{
  return swift_bridgeObjectRelease(a2);
}

void PhoneCallContactIntentNode.handleType.modify(uint64_t *a1)
{
  *a1 = PhoneCallContactIntentNode.handleType.getter();
  a1[1] = v2;
  OUTLINED_FUNCTION_2();
}

uint64_t key path setter for PhoneCallContactIntentNode.handleLabel : PhoneCallContactIntentNode( uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 432LL);
  swift_bridgeObjectRetain(v3);
  return v4(v2, v3);
}

uint64_t PhoneCallContactIntentNode.handleLabel.setter()
{
  *uint64_t v1 = v2;
  v1[1] = v0;
  return swift_bridgeObjectRelease();
}

void PhoneCallContactIntentNode.handleLabel.modify(uint64_t a1)
{
}

uint64_t key path setter for PhoneCallContactIntentNode.emergencyType : PhoneCallContactIntentNode( uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, unint64_t))(**(void **)a2 + 456LL);
  outlined copy of PhoneCallEmergencyType?(*a1, v3);
  return v4(v2, v3);
}

void PhoneCallContactIntentNode.emergencyType.modify(void *a1)
{
  *a1 = 0LL;
  a1[1] = v2;
  OUTLINED_FUNCTION_2();
}

uint64_t PhoneCallContactIntentNode.emergencyType.modify(uint64_t a1)
{
  return outlined consume of PhoneCallEmergencyType?(*(void *)a1, *(void *)(a1 + 8));
}

void PhoneCallContactIntentNode.isAmbiguousHandle.getter()
{
  uint64_t v4 = (char *)&v18 - v3;
  uint64_t v19 = v0;
  if (one-time initialization token for contactTypeNode != -1) {
    swift_once(&one-time initialization token for contactTypeNode, one-time initialization function for contactTypeNode);
  }
  uint64_t v5 = static PhoneCallContactOntologyNode.contactTypeNode;
  uint64_t v6 = ObjC metadata update function for PhoneCallContactIntentNode();
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type PhoneCallContactIntentNode and conformance PhoneCallContactIntentNode,  type metadata accessor for PhoneCallContactIntentNode);
  IntentNodeTraversable.intentNode<A>(forOntologyNode:)(v5, v6, v7);
  outlined init with copy of CommonDirectAction?( (uint64_t)v4,  v2,  &demangling cache variable for type metadata for TerminalIntentNode?);
  uint64_t v8 = OUTLINED_FUNCTION_76_22();
  uint64_t v9 = OUTLINED_FUNCTION_35(v2, 1LL, v8);
  if (v13)
  {
    uint64_t v10 = &demangling cache variable for type metadata for TerminalIntentNode?;
    uint64_t v11 = v2;
LABEL_9:
    outlined destroy of UUID?(v11, v10);
    OUTLINED_FUNCTION_93_1(v15, &demangling cache variable for type metadata for TerminalIntentNode?);
    goto LABEL_10;
  }

  TerminalIntentNode.elements.getter(v9);
  OUTLINED_FUNCTION_26_5(v2, *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8LL));
  OUTLINED_FUNCTION_107_14(v1);
  OUTLINED_FUNCTION_62();
  uint64_t v12 = OUTLINED_FUNCTION_100_11();
  uint64_t v14 = OUTLINED_FUNCTION_35(v1, 1LL, v12);
  if (v13)
  {
    uint64_t v10 = &demangling cache variable for type metadata for TerminalElement?;
    uint64_t v11 = v1;
    goto LABEL_9;
  }

  uint64_t v16 = (void *)TerminalElement.semanticTags.getter(v14);
  OUTLINED_FUNCTION_122_5(v1, *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8LL));
  specialized Sequence<>.contains(_:)(0x756F756769626D41LL, 0xEF656C646E614873LL, v16);
  OUTLINED_FUNCTION_93_1(v17, &demangling cache variable for type metadata for TerminalIntentNode?);
  OUTLINED_FUNCTION_62();
LABEL_10:
  OUTLINED_FUNCTION_16();
}

uint64_t SemanticTag.value.getter()
{
  return OUTLINED_FUNCTION_33_60(0x6D41u);
}

void PhoneCallContactIntentNode.isAmbiguousHandle.modify()
{
}

void PhoneCallContactIntentNode.emergencyLocationType.getter()
{
}

void PhoneCallContactIntentNode.emergencyLocationType.setter(char a1)
{
  *uint64_t v1 = a1;
  OUTLINED_FUNCTION_60_2();
}

void PhoneCallContactIntentNode.emergencyLocationType.modify(uint64_t a1)
{
}

uint64_t *PhoneCallContactOntologyNode.phoneCallContactRole.unsafeMutableAddressor()
{
  if (one-time initialization token for phoneCallContactRole != -1) {
    swift_once( &one-time initialization token for phoneCallContactRole,  one-time initialization function for phoneCallContactRole);
  }
  return &static PhoneCallContactOntologyNode.phoneCallContactRole;
}

uint64_t key path setter for PhoneCallContactIntentNode.backingContact : PhoneCallContactIntentNode( uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(_BYTE *))(**(void **)a2 + 544LL))(v4);
}

uint64_t PhoneCallContactIntentNode.backingContact.getter@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = v1;
  *(_BYTE *)(a1 + 40) = 1;
  return swift_retain(v1);
}

void PhoneCallContactIntentNode.backingContact.setter()
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v0 = type metadata accessor for Logger(0LL);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)static Logger.siriPhone);
  uint64_t v2 = (os_log_s *)Logger.logObject.getter(v1);
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "Cannot set a backing contact for an NLv3 intent!", v4, 2u);
    swift_slowDealloc(v4, -1LL, -1LL);
  }

  OUTLINED_FUNCTION_93_1(v5, &demangling cache variable for type metadata for BackingContact?);
  OUTLINED_FUNCTION_6();
}

void PhoneCallContactIntentNode.backingContact.modify(void *a1)
{
  os_log_type_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[12] = v1;
  *os_log_type_t v3 = v1;
  *((_BYTE *)v3 + 40) = 1;
  swift_retain();
  OUTLINED_FUNCTION_6();
}

void PhoneCallContactIntentNode.backingContact.modify(uint64_t *a1, char a2)
{
  uint64_t v2 = (void *)*a1;
  if ((a2 & 1) != 0)
  {
    outlined init with copy of CommonDirectAction?( *a1,  (uint64_t)v2 + 48,  &demangling cache variable for type metadata for BackingContact?);
    PhoneCallContactIntentNode.backingContact.setter();
    outlined destroy of UUID?((uint64_t)v2, &demangling cache variable for type metadata for BackingContact?);
  }

  else
  {
    PhoneCallContactIntentNode.backingContact.setter();
  }

  free(v2);
}

void PhoneCallContactIntentNode.contactSource.getter()
{
}

void PhoneCallContactIntentNode.contactSource.setter(char a1)
{
  *uint64_t v1 = a1;
  OUTLINED_FUNCTION_60_2();
}

void PhoneCallContactIntentNode.contactSource.modify(uint64_t a1)
{
}

uint64_t (*protocol witness for SiriPhoneContact.isMe.modify in conformance PhoneCallContactIntentNode( void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 296LL))();
  return protocol witness for Collection.subscript.read in conformance [A]specialized ;
}

uint64_t (*protocol witness for SiriPhoneContact.contactId.modify in conformance PhoneCallContactIntentNode( void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 200LL))();
  return protocol witness for Collection.subscript.read in conformance [A]specialized ;
}

uint64_t (*protocol witness for SiriPhoneContact.contactName.modify in conformance PhoneCallContactIntentNode( void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 272LL))();
  return protocol witness for Collection.subscript.read in conformance [A]specialized ;
}

uint64_t protocol witness for SiriPhoneContact.contactSource.setter in conformance PhoneCallContactIntentNode()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 568LL))();
}

uint64_t (*protocol witness for SiriPhoneContact.contactSource.modify in conformance PhoneCallContactIntentNode( void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 576LL))();
  return protocol witness for Collection.subscript.read in conformance [A]specialized ;
}

uint64_t (*protocol witness for SiriPhoneContact.personName.modify in conformance PhoneCallContactIntentNode( void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 320LL))();
  return protocol witness for Collection.subscript.read in conformance [A]specialized ;
}

uint64_t (*protocol witness for SiriPhoneContact.organizationName.modify in conformance PhoneCallContactIntentNode( void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 344LL))();
  return protocol witness for Collection.subscript.read in conformance [A]specialized ;
}

uint64_t protocol witness for SiriPhoneContact.telephoneNumber.setter in conformance PhoneCallContactIntentNode()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 360LL))();
}

uint64_t (*protocol witness for SiriPhoneContact.telephoneNumber.modify in conformance PhoneCallContactIntentNode( void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 368LL))();
  return protocol witness for Collection.subscript.read in conformance [A]specialized ;
}

uint64_t (*protocol witness for SiriPhoneContact.emailAddress.modify in conformance PhoneCallContactIntentNode( void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 248LL))();
  return protocol witness for Collection.subscript.read in conformance [A]specialized ;
}

uint64_t (*protocol witness for SiriPhoneContact.relationship.modify in conformance PhoneCallContactIntentNode( void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 392LL))();
  return protocol witness for Collection.subscript.read in conformance [A]specialized ;
}

uint64_t (*protocol witness for SiriPhoneContact.handleType.modify in conformance PhoneCallContactIntentNode( void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 416LL))();
  return protocol witness for Collection.subscript.read in conformance [A]specialized ;
}

uint64_t (*protocol witness for SiriPhoneContact.handleLabel.modify in conformance PhoneCallContactIntentNode( void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 440LL))();
  return protocol witness for Collection.subscript.read in conformance [A]specialized ;
}

uint64_t (*protocol witness for SiriPhoneContact.emergencyType.modify in conformance PhoneCallContactIntentNode( void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 464LL))();
  return protocol witness for Collection.subscript.read in conformance [A]specialized ;
}

uint64_t protocol witness for SiriPhoneContact.emergencyLocationType.getter in conformance PhoneCallContactIntentNode()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 496LL))();
}

uint64_t (*protocol witness for SiriPhoneContact.emergencyLocationType.modify in conformance PhoneCallContactIntentNode( void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 512LL))();
  return protocol witness for Collection.subscript.read in conformance [A]specialized ;
}

uint64_t (*protocol witness for SiriPhoneContact.contactReference.modify in conformance PhoneCallContactIntentNode( void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 224LL))();
  return protocol witness for Collection.subscript.read in conformance [A]specialized ;
}

uint64_t protocol witness for SiriPhoneContact.isAmbiguousHandle.getter in conformance PhoneCallContactIntentNode()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 472LL))() & 1;
}

uint64_t (*protocol witness for SiriPhoneContact.isAmbiguousHandle.modify in conformance PhoneCallContactIntentNode( void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 488LL))();
  return protocol witness for Collection.subscript.read in conformance [A]specialized ;
}

uint64_t protocol witness for SiriPhoneContact.backingContact.getter in conformance PhoneCallContactIntentNode()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 536LL))();
}

uint64_t protocol witness for SiriPhoneContact.backingContact.setter in conformance PhoneCallContactIntentNode()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 544LL))();
}

uint64_t (*protocol witness for SiriPhoneContact.backingContact.modify in conformance PhoneCallContactIntentNode( void *a1))()
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(**(void **)v1 + 552LL))();
  return protocol witness for Collection.subscript.read in conformance [A]specialized ;
}

void protocol witness for static NonTerminalIntentNodeWrapper.from(intentNode:ontologyNode:) in conformance PhoneCallContactIntentNode( void *a1@<X8>)
{
  *a1 = v2;
}

uint64_t one-time initialization function for personNode()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<OntologyNode>);
  uint64_t v1 = swift_allocObject(v0, 72LL, 7LL);
  *(_OWORD *)(v1 + ++*(void *)(v0 + 16) = xmmword_31D870;
  uint64_t v2 = type metadata accessor for PersonOntologyNode(0LL);
  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  uint64_t v3 = PersonOntologyNode.init(name:multicardinal:)(0x6E6F73726570LL, 0xE600000000000000LL, 0LL);
  *(void *)(v1 + 56) = v2;
  *(void *)(v1 + 64) = &protocol witness table for NonTerminalOntologyNode;
  *(void *)(v1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v3;
  uint64_t v4 = type metadata accessor for NonTerminalOntologyNode(0LL);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  uint64_t result = NonTerminalOntologyNode.init(name:multicardinal:childNodes:)(0x6E6F73726570LL, 0xE600000000000000LL, 0LL, v1);
  static PhoneCallContactOntologyNode.personNode = result;
  return result;
}

uint64_t static PhoneCallContactOntologyNode.personNode.getter()
{
  return static PhoneCallNLv3Intent.appName.getter();
}

void one-time initialization function for phoneCallContactNameNode(uint64_t a1)
{
}

uint64_t static PhoneCallContactOntologyNode.phoneCallContactNameNode.getter()
{
  return static PhoneCallNLv3Intent.appName.getter();
}

void one-time initialization function for phoneCallContactIdNode(uint64_t a1)
{
}

uint64_t static PhoneCallContactOntologyNode.phoneCallContactIdNode.getter()
{
  return static PhoneCallNLv3Intent.appName.getter();
}

void one-time initialization function for phoneCallContactReferenceNode(uint64_t a1)
{
}

uint64_t static PhoneCallContactOntologyNode.phoneCallContactReferenceNode.getter()
{
  return static PhoneCallNLv3Intent.appName.getter();
}

void one-time initialization function for phoneNumberNode(uint64_t a1)
{
}

uint64_t static PhoneCallContactOntologyNode.phoneNumberNode.getter()
{
  return static PhoneCallNLv3Intent.appName.getter();
}

void one-time initialization function for emailAddressNode(uint64_t a1)
{
}

uint64_t static PhoneCallContactOntologyNode.emailAddressNode.getter()
{
  return static PhoneCallNLv3Intent.appName.getter();
}

void one-time initialization function for contactTypeNode(uint64_t a1)
{
}

uint64_t static PhoneCallContactOntologyNode.contactTypeNode.getter()
{
  return static PhoneCallNLv3Intent.appName.getter();
}

void one-time initialization function for phoneCallContactRole(uint64_t a1)
{
}

uint64_t static PhoneCallContactOntologyNode.phoneCallContactRole.getter()
{
  return static PhoneCallNLv3Intent.appName.getter();
}

void PhoneCallContactOntologyNode.init(name:multicardinal:childNodes:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t SmsGroupIntentNode.intentNode.getter()
{
  return PhoneCallNLv3Intent.intent.getter((void (*)(void))&type metadata accessor for NonTerminalIntentNode);
}

uint64_t SmsGroupIntentNode.ontologyNode.getter()
{
  return PhoneCallNLv3Intent.appNode.getter(type metadata accessor for SmsGroupIntentNode);
}

uint64_t PhoneCallNLv3Intent.appNode.getter(uint64_t (*a1)(void))
{
  uint64_t v2 = a1(0LL);
  return swift_retain(*(void *)(v1 + *(int *)(v2 + 20)));
}

uint64_t static SmsGroupIntentNode.from(intentNode:ontologyNode:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return static SmsGroupIntentNode.from(intentNode:ontologyNode:)(a1, type metadata accessor for SmsGroupIntentNode, a2);
}

void SmsGroupIntentNode.smsGroupName.getter()
{
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  OUTLINED_FUNCTION_44_35();
  if (!v3) {
    OUTLINED_FUNCTION_52_31(v0, v1, v2);
  }
  type metadata accessor for SmsGroupIntentNode(0LL);
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type SmsGroupIntentNode and conformance SmsGroupIntentNode,  type metadata accessor for SmsGroupIntentNode);
  OUTLINED_FUNCTION_28_60(v4, &v5);
  OUTLINED_FUNCTION_24_0();
}

uint64_t *SmsGroupOntologyNode.smsGroupName.unsafeMutableAddressor()
{
  if (one-time initialization token for smsGroupName != -1) {
    swift_once(&one-time initialization token for smsGroupName, one-time initialization function for smsGroupName);
  }
  return &static SmsGroupOntologyNode.smsGroupName;
}

void SmsGroupIntentNode.smsGroupNameId.getter()
{
}

uint64_t *SmsGroupOntologyNode.smsGroupNameId.unsafeMutableAddressor()
{
  if (one-time initialization token for smsGroupNameId != -1) {
    swift_once(&one-time initialization token for smsGroupNameId, one-time initialization function for smsGroupNameId);
  }
  return &static SmsGroupOntologyNode.smsGroupNameId;
}

uint64_t protocol witness for NonTerminalIntentNodeWrapper.intentNode.getter in conformance SmsGroupIntentNode( uint64_t a1, uint64_t a2)
{
  return protocol witness for NLIntentWrapper.intent.getter in conformance PhoneCallNLv3Intent( a1,  a2,  (void (*)(void))&type metadata accessor for NonTerminalIntentNode);
}

uint64_t protocol witness for IntentNodeTraversable.traversableIntentNode.getter in conformance SmsGroupIntentNode( uint64_t a1)
{
  return NonTerminalIntentNodeWrapper.traversableIntentNode.getter(a1, v2);
}

uint64_t protocol witness for IntentNodeTraversable.traversableOntologyNode.getter in conformance SmsGroupIntentNode( uint64_t a1)
{
  return NonTerminalIntentNodeWrapper.traversableOntologyNode.getter(a1, v2);
}

void one-time initialization function for smsGroupName(uint64_t a1)
{
}

uint64_t static SmsGroupOntologyNode.smsGroupName.getter()
{
  return static PhoneCallNLv3Intent.appName.getter();
}

void one-time initialization function for smsGroupNameId(uint64_t a1)
{
}

void one-time initialization function for appName( uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_15_2(v8);
  *a5 = TerminalOntologyNode.init(name:multicardinal:)(a3, a4, 0LL);
  OUTLINED_FUNCTION_6();
}

uint64_t static SmsGroupOntologyNode.smsGroupNameId.getter()
{
  return static PhoneCallNLv3Intent.appName.getter();
}

uint64_t partial apply for closure #1 in PhoneCallNLv3Intent.app.getter@<X0>( uint64_t a1@<X0>, void *a2@<X8>)
{
  return closure #1 in PhoneCallNLv3Intent.app.getter(a1, *(void *)(v2 + 16), a2);
}

uint64_t type metadata accessor for AppIntentNode(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State( a1,  (uint64_t *)&type metadata singleton initialization cache for AppIntentNode,  (uint64_t)&nominal type descriptor for AppIntentNode);
}

void SmsGroupOntologyNode.init(name:multicardinal:childNodes:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void PhoneCallContactOntologyNode.__allocating_init(name:multicardinal:childNodes:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
}

uint64_t PhoneCallNLv3Intent.intent.getter(void (*a1)(void))
{
  uint64_t v1 = OUTLINED_FUNCTION_105_2();
  return OUTLINED_FUNCTION_55_1(v1, v2, v3, v4);
}

uint64_t AppIntentNode.ontologyNode.getter()
{
  return PhoneCallNLv3Intent.appNode.getter(type metadata accessor for AppIntentNode);
}

uint64_t static AppIntentNode.from(intentNode:ontologyNode:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return static SmsGroupIntentNode.from(intentNode:ontologyNode:)(a1, type metadata accessor for AppIntentNode, a2);
}

uint64_t static SmsGroupIntentNode.from(intentNode:ontologyNode:)@<X0>( uint64_t a1@<X1>, uint64_t (*a2)(void)@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = OUTLINED_FUNCTION_16_65();
  OUTLINED_FUNCTION_39_37(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL));
  *(void *)(a3 + *(int *)(a2(0LL) + 20)) = a1;
  return swift_retain();
}

void AppIntentNode.applicationId.getter()
{
  uint64_t v59 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TerminalElement.OriginDetail?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v58 = (uint64_t *)v2;
  uint64_t v61 = type metadata accessor for TerminalElement.MatchingSpan(0LL);
  uint64_t v57 = *(void *)(v61 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v56 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TerminalElement.Value?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v60 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TerminalIntentNode?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v62 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TerminalElement?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_5_1();
  uint64_t v6 = OUTLINED_FUNCTION_100_11();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  OUTLINED_FUNCTION_67_10();
  uint64_t v10 = static AppOntologyNode.applicationIdNode.getter();
  uint64_t v11 = type metadata accessor for AppIntentNode(0LL);
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type AppIntentNode and conformance AppIntentNode,  type metadata accessor for AppIntentNode);
  uint64_t v13 = v12;
  IntentNodeTraversable.value<A>(forNode:)(v63, v10, v11, v12);
  uint64_t v14 = swift_release(v10);
  if (v63[1]) {
    goto LABEL_9;
  }
  uint64_t v15 = v0;
  uint64_t v54 = v7;
  uint64_t v55 = v9;
  uint64_t v16 = v61;
  uint64_t v17 = static AppOntologyNode.appNameNode.getter(v14);
  uint64_t v18 = v62;
  IntentNodeTraversable.intentNode<A>(forOntologyNode:)(v17, v11, v13);
  swift_release(v17);
  uint64_t v19 = OUTLINED_FUNCTION_76_22();
  uint64_t v20 = OUTLINED_FUNCTION_35(v18, 1LL, v19);
  if (v24)
  {
    OUTLINED_FUNCTION_150(v20, &demangling cache variable for type metadata for TerminalIntentNode?);
    __swift_storeEnumTagSinglePayload(v15, 1LL, 1LL, v6);
LABEL_7:
    char v25 = &demangling cache variable for type metadata for TerminalElement?;
    uint64_t v26 = v15;
LABEL_8:
    outlined destroy of UUID?(v26, v25);
    goto LABEL_9;
  }

  TerminalIntentNode.elements.getter(v20);
  uint64_t v21 = OUTLINED_FUNCTION_99_2();
  v22(v21);
  OUTLINED_FUNCTION_107_14(v15);
  OUTLINED_FUNCTION_62();
  uint64_t v23 = v6;
  OUTLINED_FUNCTION_35(v15, 1LL, v6);
  if (v24) {
    goto LABEL_7;
  }
  uint64_t v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 32))(v55, v15, v6);
  uint64_t v28 = v60;
  TerminalElement.value.getter(v27);
  uint64_t v29 = type metadata accessor for TerminalElement.Value(0LL);
  OUTLINED_FUNCTION_35((uint64_t)v28, 1LL, v29);
  if (v30)
  {
    OUTLINED_FUNCTION_23_65();
    char v25 = &demangling cache variable for type metadata for TerminalElement.Value?;
LABEL_22:
    uint64_t v26 = (uint64_t)v28;
    goto LABEL_8;
  }

  int v31 = OUTLINED_FUNCTION_57_32();
  if (v31 != enum case for TerminalElement.Value.string(_:))
  {
    OUTLINED_FUNCTION_23_65();
LABEL_18:
    (*(void (**)(uint64_t *, uint64_t))(v19 + 8))(v28, v29);
    goto LABEL_9;
  }

  uint64_t v32 = OUTLINED_FUNCTION_67_22();
  uint64_t v34 = *v28;
  unint64_t v33 = v28[1];
  uint64_t v35 = v59;
  TerminalElement.origin.getter(v32);
  uint64_t v19 = type metadata accessor for TerminalElement.Origin(0LL);
  uint64_t v36 = OUTLINED_FUNCTION_35(v35, 1LL, v19);
  if (v24)
  {
    outlined destroy of UUID?(v35, &demangling cache variable for type metadata for TerminalElement.Origin?);
    uint64_t v37 = type metadata accessor for TerminalElement.OriginDetail(0LL);
    uint64_t v28 = v58;
    __swift_storeEnumTagSinglePayload((uint64_t)v58, 1LL, 1LL, v37);
LABEL_21:
    OUTLINED_FUNCTION_87_0();
    OUTLINED_FUNCTION_23_65();
    char v25 = &demangling cache variable for type metadata for TerminalElement.OriginDetail?;
    goto LABEL_22;
  }

  uint64_t v28 = v58;
  TerminalElement.Origin.originDetail.getter(v36);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8LL))(v35, v19);
  uint64_t v29 = type metadata accessor for TerminalElement.OriginDetail(0LL);
  OUTLINED_FUNCTION_35((uint64_t)v28, 1LL, v29);
  if (v38) {
    goto LABEL_21;
  }
  int v39 = OUTLINED_FUNCTION_57_32();
  if (v39 != enum case for TerminalElement.OriginDetail.matchingSpan(_:))
  {
    OUTLINED_FUNCTION_23_65();
    OUTLINED_FUNCTION_87_0();
    goto LABEL_18;
  }

  OUTLINED_FUNCTION_67_22();
  uint64_t v40 = v28;
  uint64_t v42 = v56;
  uint64_t v41 = v57;
  uint64_t v43 = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(v57 + 32))(v56, v40, v16);
  uint64_t v44 = (void *)TerminalElement.MatchingSpan.matcherNames.getter(v43);
  specialized Sequence<>.contains(_:)(0xD000000000000010LL, 0x80000000003523A0LL, v44);
  char v46 = v45;
  OUTLINED_FUNCTION_39();
  if ((v46 & 1) != 0)
  {
    v47._uint64_t countAndFlagsBits = 0xD000000000000017LL;
    v47._object = (void *)0x800000000034F500LL;
    if (String.hasSuffix(_:)(v47))
    {
      uint64_t v48 = String.count.getter(0xD000000000000017LL, 0x800000000034F500LL);
      uint64_t v49 = specialized BidirectionalCollection.dropLast(_:)(v48, v34, v33);
      static String._fromSubstring(_:)(v49, v50, v51, v52);
      OUTLINED_FUNCTION_39();
    }

    OUTLINED_FUNCTION_26_5(v42, *(uint64_t (**)(uint64_t, uint64_t))(v41 + 8));
    OUTLINED_FUNCTION_122_5((uint64_t)v55, *(uint64_t (**)(uint64_t, uint64_t))(v54 + 8));
  }

  else
  {
    OUTLINED_FUNCTION_87_0();
    OUTLINED_FUNCTION_26_5(v42, *(uint64_t (**)(uint64_t, uint64_t))(v41 + 8));
    (*(void (**)(char *, uint64_t))(v54 + 8))(v55, v23);
  }

uint64_t specialized BidirectionalCollection.dropLast(_:)(uint64_t result, uint64_t a2, unint64_t a3)
{
  if (result < 0)
  {
    __break(1u);
  }

  else
  {
    uint64_t v5 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000LL) == 0) {
      uint64_t v5 = a2;
    }
    uint64_t v6 = 7LL;
    if (((a3 >> 60) & ((a2 & 0x800000000000000LL) == 0)) != 0) {
      uint64_t v6 = 11LL;
    }
    uint64_t v7 = String.index(_:offsetBy:limitedBy:)(v6 | (v5 << 16), -result, 15LL, a2, a3);
    if ((v8 & 1) != 0) {
      uint64_t v9 = 15LL;
    }
    else {
      uint64_t v9 = v7;
    }
    uint64_t v10 = String.subscript.getter(15LL, v9, a2, a3);
    swift_bridgeObjectRelease(a3);
    return v10;
  }

  return result;
}

void AppIntentNode.appName.getter()
{
  uint64_t v0 = OUTLINED_FUNCTION_67_10();
  uint64_t v1 = static AppOntologyNode.appNameNode.getter(v0);
  uint64_t v2 = type metadata accessor for AppIntentNode(0LL);
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type AppIntentNode and conformance AppIntentNode,  type metadata accessor for AppIntentNode);
  IntentNodeTraversable.value<A>(forNode:)(&v4, v1, v2, v3);
  swift_release(v1);
  OUTLINED_FUNCTION_24_0();
}

uint64_t protocol witness for IntentNodeTraversable.traversableIntentNode.getter in conformance AppIntentNode( uint64_t a1)
{
  return NonTerminalIntentNodeWrapper.traversableIntentNode.getter(a1, v2);
}

uint64_t protocol witness for IntentNodeTraversable.traversableOntologyNode.getter in conformance AppIntentNode( uint64_t a1)
{
  return NonTerminalIntentNodeWrapper.traversableOntologyNode.getter(a1, v2);
}

PhoneCallFlowDelegatePlugin::PhonePreferredCallProvider_optional __swiftcall PhonePreferredCallProvider.init(rawValue:)( Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)( (Swift::OpaquePointer)&outlined read-only object #0 of PhonePreferredCallProvider.init(rawValue:),  v2);
  OUTLINED_FUNCTION_39();
  if (v3 >= 3) {
    return (PhoneCallFlowDelegatePlugin::PhonePreferredCallProvider_optional)3;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::PhonePreferredCallProvider_optional)v3;
  }
}

_UNKNOWN **static PhonePreferredCallProvider.allCases.getter()
{
  return &outlined read-only object #0 of static PhonePreferredCallProvider.allCases.getter;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance PhonePreferredCallProvider( unsigned __int8 *a1, unsigned __int8 *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance PhonePreferredCallProvider()
{
}

PhoneCallFlowDelegatePlugin::PhonePreferredCallProvider_optional protocol witness for RawRepresentable.init(rawValue:) in conformance PhonePreferredCallProvider@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::PhonePreferredCallProvider_optional *a2@<X8>)
{
  result.int value = PhonePreferredCallProvider.init(rawValue:)(*a1).value;
  a2->int value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PhonePreferredCallProvider( uint64_t *a1@<X8>)
{
  *a1 = PhoneCallPreferredProvider.rawValue.getter(*v1);
  a1[1] = v3;
  OUTLINED_FUNCTION_2();
}

void protocol witness for static CaseIterable.allCases.getter in conformance PhonePreferredCallProvider( void *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static PhonePreferredCallProvider.allCases.getter;
}

uint64_t protocol witness for static TerminalNodeValueType.fromIntentNodeValue(_:) in conformance PhonePreferredCallProvider( uint64_t a1, uint64_t a2)
{
  unint64_t v4 = lazy protocol witness table accessor for type PhonePreferredCallProvider and conformance PhonePreferredCallProvider();
  unint64_t v5 = lazy protocol witness table accessor for type PhonePreferredCallProvider and conformance PhonePreferredCallProvider();
  unint64_t v6 = lazy protocol witness table accessor for type PhonePreferredCallProvider and conformance PhonePreferredCallProvider();
  return static TerminalNodeBoundedSemanticValue<>.fromIntentNodeValue(_:)(a1, a2, v4, v5, v6);
}

BOOL SemanticTag.init(rawValue:)(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)( (Swift::OpaquePointer)&outlined read-only object #0 of SemanticTag.init(rawValue:),  v2);
  OUTLINED_FUNCTION_39();
  return v3 != 0;
}

uint64_t SemanticTag.rawValue.getter()
{
  return OUTLINED_FUNCTION_33_60(0x6D61u);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance SemanticTag@<W0>( Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  BOOL result = SemanticTag.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance SemanticTag(void *a1@<X8>)
{
  *a1 = 0x756F756769626D61LL;
  a1[1] = 0xEF656C646E614873LL;
}

uint64_t partial apply for closure #1 in PhoneCallNLv3Intent.smsGroups.getter@<X0>( uint64_t a1@<X0>, void *a2@<X8>)
{
  return closure #1 in PhoneCallNLv3Intent.smsGroups.getter(a1, *(void *)(v2 + 16), a2);
}

uint64_t type metadata accessor for SmsGroupIntentNode(uint64_t a1)
{
  return type metadata accessor for RedirectToCompanionFlow.State( a1,  (uint64_t *)&type metadata singleton initialization cache for SmsGroupIntentNode,  (uint64_t)&nominal type descriptor for SmsGroupIntentNode);
}

void base witness table accessor for IntentNodeTraversable in PhoneCallNLv3Intent()
{
}

void base witness table accessor for CustomStringConvertible in PhoneCallNLv3Intent()
{
}

void base witness table accessor for Equatable in PhoneCallNLv3Intent()
{
}

void base witness table accessor for IntentNodeTraversable in PhoneCallContactIntentNode()
{
}

void base witness table accessor for IntentNodeTraversable in SmsGroupIntentNode()
{
}

void base witness table accessor for IntentNodeTraversable in AppIntentNode()
{
}

unint64_t lazy protocol witness table accessor for type PhonePreferredCallProvider and conformance PhonePreferredCallProvider()
{
  unint64_t result = lazy protocol witness table cache variable for type PhonePreferredCallProvider and conformance PhonePreferredCallProvider;
  if (!lazy protocol witness table cache variable for type PhonePreferredCallProvider and conformance PhonePreferredCallProvider)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhonePreferredCallProvider,  &type metadata for PhonePreferredCallProvider);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhonePreferredCallProvider and conformance PhonePreferredCallProvider);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhonePreferredCallProvider and conformance PhonePreferredCallProvider;
  if (!lazy protocol witness table cache variable for type PhonePreferredCallProvider and conformance PhonePreferredCallProvider)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhonePreferredCallProvider,  &type metadata for PhonePreferredCallProvider);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhonePreferredCallProvider and conformance PhonePreferredCallProvider);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhonePreferredCallProvider and conformance PhonePreferredCallProvider;
  if (!lazy protocol witness table cache variable for type PhonePreferredCallProvider and conformance PhonePreferredCallProvider)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhonePreferredCallProvider,  &type metadata for PhonePreferredCallProvider);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhonePreferredCallProvider and conformance PhonePreferredCallProvider);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhonePreferredCallProvider and conformance PhonePreferredCallProvider;
  if (!lazy protocol witness table cache variable for type PhonePreferredCallProvider and conformance PhonePreferredCallProvider)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhonePreferredCallProvider,  &type metadata for PhonePreferredCallProvider);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhonePreferredCallProvider and conformance PhonePreferredCallProvider);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhonePreferredCallProvider and conformance PhonePreferredCallProvider;
  if (!lazy protocol witness table cache variable for type PhonePreferredCallProvider and conformance PhonePreferredCallProvider)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhonePreferredCallProvider,  &type metadata for PhonePreferredCallProvider);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhonePreferredCallProvider and conformance PhonePreferredCallProvider);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type PhonePreferredCallProvider and conformance PhonePreferredCallProvider;
  if (!lazy protocol witness table cache variable for type PhonePreferredCallProvider and conformance PhonePreferredCallProvider)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PhonePreferredCallProvider,  &type metadata for PhonePreferredCallProvider);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PhonePreferredCallProvider and conformance PhonePreferredCallProvider);
  }

  return result;
}

void associated type witness table accessor for CaseIterable.AllCases : Collection in PhonePreferredCallProvider()
{
}

unint64_t lazy protocol witness table accessor for type SemanticTag and conformance SemanticTag()
{
  unint64_t result = lazy protocol witness table cache variable for type SemanticTag and conformance SemanticTag;
  if (!lazy protocol witness table cache variable for type SemanticTag and conformance SemanticTag)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for SemanticTag, &type metadata for SemanticTag);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type SemanticTag and conformance SemanticTag);
  }

  return result;
}

void sub_2EFBF8(uint64_t a1)
{
}

void sub_2EFC20()
{
  *uint64_t v0 = (*(uint64_t (**)(void))(v1 + 144))();
  OUTLINED_FUNCTION_2();
}

void sub_2EFC48()
{
  *uint64_t v0 = (*(uint64_t (**)(void))(v1 + 184))();
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

void sub_2EFC70()
{
  *uint64_t v0 = (*(uint64_t (**)(void))(v1 + 208))();
  OUTLINED_FUNCTION_2();
}

void sub_2EFC94()
{
}

void sub_2EFCB4()
{
  *uint64_t v0 = (*(uint64_t (**)(void))(v1 + 232))();
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

void sub_2EFCDC()
{
  *uint64_t v0 = (*(uint64_t (**)(void))(v1 + 256))();
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

void sub_2EFD04()
{
  uint64_t v1 = (*(uint64_t (**)(void))(v0 + 280))();
  OUTLINED_FUNCTION_94_15(v1);
  OUTLINED_FUNCTION_2();
}

void sub_2EFD28()
{
}

void sub_2EFD54()
{
  *uint64_t v0 = (*(uint64_t (**)(void))(v1 + 328))();
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

void sub_2EFD7C()
{
  *uint64_t v0 = (*(uint64_t (**)(void))(v1 + 352))();
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

void sub_2EFDA4()
{
  *uint64_t v0 = (*(uint64_t (**)(void))(v1 + 376))();
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

void sub_2EFDCC()
{
  *uint64_t v0 = (*(uint64_t (**)(void))(v1 + 400))();
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

void sub_2EFDF4()
{
  *uint64_t v0 = (*(uint64_t (**)(void))(v1 + 424))();
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

void sub_2EFE1C()
{
  *uint64_t v0 = (*(uint64_t (**)(void))(v1 + 448))();
  v0[1] = v2;
  OUTLINED_FUNCTION_2();
}

void sub_2EFE44()
{
  uint64_t v1 = (*(uint64_t (**)(void))(v0 + 472))();
  OUTLINED_FUNCTION_94_15(v1);
  OUTLINED_FUNCTION_2();
}

void sub_2EFE68()
{
}

void sub_2EFE8C()
{
  *uint64_t v0 = (*(uint64_t (**)(void))(v1 + 496))();
  OUTLINED_FUNCTION_2();
}

void sub_2EFEB0()
{
}

void sub_2EFED0(uint64_t a1)
{
}

void sub_2EFEF8()
{
  *uint64_t v0 = (*(uint64_t (**)(void))(v1 + 560))();
  OUTLINED_FUNCTION_2();
}

void sub_2EFF1C()
{
}

uint64_t assignWithCopy for PhoneCallNLv3Intent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for NLIntent(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = *(void *)(a2 + v7);
  uint64_t v9 = *(void *)(a1 + v7);
  *(void *)(a1 + v__swift_destroy_boxed_opaque_existential_1(v0 + 7) = v8;
  swift_retain(v8);
  swift_release(v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = *(void *)(a2 + v10);
  uint64_t v12 = *(void *)(a1 + v10);
  *(void *)(a1 + OUTLINED_FUNCTION_45_9(v8, v9, v10) = v11;
  swift_retain(v11);
  swift_release(v12);
  uint64_t v13 = a3[7];
  uint64_t v14 = *(void *)(a2 + v13);
  uint64_t v15 = *(void *)(a1 + v13);
  *(void *)(a1 + OUTLINED_FUNCTION_61_27(v17, v13) = v14;
  swift_retain(v14);
  swift_release(v15);
  uint64_t v16 = a3[8];
  uint64_t v17 = *(void *)(a2 + v16);
  uint64_t v18 = *(void *)(a1 + v16);
  *(void *)(a1 + v++*(void *)(v0 + 16) = v17;
  swift_retain(v17);
  swift_release(v18);
  uint64_t v19 = a3[9];
  uint64_t v20 = *(void *)(a2 + v19);
  uint64_t v21 = *(void *)(a1 + v19);
  *(void *)(a1 + v19) = v20;
  swift_retain(v20);
  swift_release(v21);
  uint64_t v22 = a3[10];
  uint64_t v23 = *(void *)(a2 + v22);
  uint64_t v24 = *(void *)(a1 + v22);
  *(void *)(a1 + v2__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v23;
  swift_retain(v23);
  swift_release(v24);
  uint64_t v25 = a3[11];
  uint64_t v26 = *(void *)(a2 + v25);
  uint64_t v27 = *(void *)(a1 + v25);
  *(void *)(a1 + v2__swift_destroy_boxed_opaque_existential_1(v0 + 5) = v26;
  swift_retain(v26);
  swift_release(v27);
  uint64_t v28 = a3[12];
  uint64_t v29 = *(void *)(a2 + v28);
  uint64_t v30 = *(void *)(a1 + v28);
  *(void *)(a1 + v28) = v29;
  swift_retain(v29);
  swift_release(v30);
  uint64_t v31 = a3[13];
  uint64_t v32 = *(void *)(a2 + v31);
  uint64_t v33 = *(void *)(a1 + v31);
  *(void *)(a1 + OUTLINED_FUNCTION_74_21(v5, v31) = v32;
  swift_retain(v32);
  swift_release(v33);
  uint64_t v34 = a3[14];
  uint64_t v35 = *(void *)(a2 + v34);
  uint64_t v36 = *(void *)(a1 + v34);
  *(void *)(a1 + v34) = v35;
  swift_retain(v35);
  swift_release(v36);
  uint64_t v37 = a3[15];
  uint64_t v38 = *(void *)(a2 + v37);
  uint64_t v39 = *(void *)(a1 + v37);
  *(void *)(a1 + v3__swift_destroy_boxed_opaque_existential_1(v0 + 7) = v38;
  swift_retain(v38);
  swift_release(v39);
  uint64_t v40 = a3[16];
  uint64_t v41 = *(void *)(a2 + v40);
  uint64_t v42 = *(void *)(a1 + v40);
  *(void *)(a1 + v40) = v41;
  swift_retain(v41);
  swift_release(v42);
  uint64_t v43 = a3[17];
  uint64_t v44 = *(void *)(a2 + v43);
  uint64_t v45 = *(void *)(a1 + v43);
  *(void *)(a1 + v43) = v44;
  swift_retain(v44);
  swift_release(v45);
  return a1;
}

uint64_t initializeWithTake for PhoneCallNLv3Intent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for NLIntent(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v__swift_destroy_boxed_opaque_existential_1(v0 + 7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v9 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + v9) = *(void *)(a2 + v9);
  uint64_t v10 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(void *)(a1 + OUTLINED_FUNCTION_45_9(v8, v9, v10) = *(void *)(a2 + v10);
  uint64_t v11 = a3[14];
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  uint64_t v12 = a3[16];
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  *(void *)(a1 + v1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *(void *)(a2 + v12);
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  return a1;
}

uint64_t assignWithTake for PhoneCallNLv3Intent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for NLIntent(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = *(void *)(a1 + v7);
  *(void *)(a1 + v__swift_destroy_boxed_opaque_existential_1(v0 + 7) = *(void *)(a2 + v7);
  swift_release(v8);
  uint64_t v9 = a3[6];
  uint64_t v10 = *(void *)(a1 + v9);
  *(void *)(a1 + v9) = *(void *)(a2 + v9);
  swift_release(v10);
  uint64_t v11 = a3[7];
  uint64_t v12 = *(void *)(a1 + v11);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  swift_release(v12);
  uint64_t v13 = a3[8];
  uint64_t v14 = *(void *)(a1 + v13);
  *(void *)(a1 + OUTLINED_FUNCTION_61_27(v17, v13) = *(void *)(a2 + v13);
  swift_release(v14);
  uint64_t v15 = a3[9];
  uint64_t v16 = *(void *)(a1 + v15);
  *(void *)(a1 + v1__swift_destroy_boxed_opaque_existential_1(v0 + 5) = *(void *)(a2 + v15);
  swift_release(v16);
  uint64_t v17 = a3[10];
  uint64_t v18 = *(void *)(a1 + v17);
  *(void *)(a1 + v1__swift_destroy_boxed_opaque_existential_1(v0 + 7) = *(void *)(a2 + v17);
  swift_release(v18);
  uint64_t v19 = a3[11];
  uint64_t v20 = *(void *)(a1 + v19);
  *(void *)(a1 + v19) = *(void *)(a2 + v19);
  swift_release(v20);
  uint64_t v21 = a3[12];
  uint64_t v22 = *(void *)(a1 + v21);
  *(void *)(a1 + v21) = *(void *)(a2 + v21);
  swift_release(v22);
  uint64_t v23 = a3[13];
  uint64_t v24 = *(void *)(a1 + v23);
  *(void *)(a1 + v23) = *(void *)(a2 + v23);
  swift_release(v24);
  uint64_t v25 = a3[14];
  uint64_t v26 = *(void *)(a1 + v25);
  *(void *)(a1 + v2__swift_destroy_boxed_opaque_existential_1(v0 + 5) = *(void *)(a2 + v25);
  swift_release(v26);
  uint64_t v27 = a3[15];
  uint64_t v28 = *(void *)(a1 + v27);
  *(void *)(a1 + v2__swift_destroy_boxed_opaque_existential_1(v0 + 7) = *(void *)(a2 + v27);
  swift_release(v28);
  uint64_t v29 = a3[16];
  uint64_t v30 = *(void *)(a1 + v29);
  *(void *)(a1 + v29) = *(void *)(a2 + v29);
  swift_release(v30);
  uint64_t v31 = a3[17];
  uint64_t v32 = *(void *)(a1 + v31);
  *(void *)(a1 + OUTLINED_FUNCTION_74_21(v5, v31) = *(void *)(a2 + v31);
  swift_release(v32);
  return a1;
}

uint64_t sub_2F0320(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm_0( a1,  a2,  a3,  (uint64_t (*)(void))&type metadata accessor for NLIntent);
}

void sub_2F032C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
}

uint64_t type metadata completion function for PhoneCallNLv3Intent(uint64_t a1)
{
  uint64_t result = type metadata accessor for NLIntent(319LL);
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(result - 8) + 64LL;
    v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
    void v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
    void v4[4] = (char *)&value witness table for Builtin.NativeObject + 64;
    void v4[5] = (char *)&value witness table for Builtin.NativeObject + 64;
    void v4[6] = (char *)&value witness table for Builtin.NativeObject + 64;
    void v4[7] = (char *)&value witness table for Builtin.NativeObject + 64;
    void v4[8] = (char *)&value witness table for Builtin.NativeObject + 64;
    void v4[9] = (char *)&value witness table for Builtin.NativeObject + 64;
    void v4[10] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[11] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[12] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[13] = (char *)&value witness table for Builtin.NativeObject + 64;
    swift_initStructMetadata(a1, 256LL, 14LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

uint64_t ObjC metadata update function for PhoneCallContactIntentNode()
{
  return type metadata accessor for PhoneCallContactIntentNode(0LL);
}

uint64_t type metadata completion function for PhoneCallContactIntentNode(uint64_t a1)
{
  uint64_t result = type metadata accessor for NonTerminalIntentNode(319LL);
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(result - 8) + 64LL;
    v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
    void v4[2] = &unk_340660;
    v4[3] = &unk_340678;
    void v4[4] = &unk_340678;
    uint64_t result = swift_updateClassMetadata2(a1, 256LL, 5LL, v4, a1 + 80);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

uint64_t type metadata completion function for PhoneCallContactOntologyNode( uint64_t a1, uint64_t a2, uint64_t a3)
{
  return type metadata completion function for PhonePerson( a1,  a2,  a3,  class metadata base offset for PhoneCallContactOntologyNode);
}

uint64_t ObjC metadata update function for PhoneCallContactOntologyNode()
{
  return type metadata accessor for PhoneCallContactOntologyNode(0LL);
}

uint64_t getEnumTagSinglePayload for SmsGroupIntentNode(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_2F0494);
}

uint64_t sub_2F0494(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm_0( a1,  a2,  a3,  (uint64_t (*)(void))&type metadata accessor for NonTerminalIntentNode);
}

uint64_t storeEnumTagSinglePayload for SmsGroupIntentNode(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_2F04AC);
}

void sub_2F04AC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
}

uint64_t type metadata completion function for SmsGroupOntologyNode(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return type metadata completion function for PhonePerson( a1,  a2,  a3,  class metadata base offset for SmsGroupOntologyNode);
}

uint64_t ObjC metadata update function for SmsGroupOntologyNode()
{
  return type metadata accessor for SmsGroupOntologyNode(0LL);
}

void initializeBufferWithCopyOfBuffer for SmsGroupIntentNode(void *a1, void *a2, uint64_t a3)
{
  if ((*(_DWORD *)(*(void *)(a3 - 8) + 80LL) & 0x20000) != 0)
  {
    *a1 = *a2;
  }

  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_16_65();
    OUTLINED_FUNCTION_57(v6);
    *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  }

  swift_retain();
  OUTLINED_FUNCTION_6();
}

uint64_t destroy for SmsGroupIntentNode(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = OUTLINED_FUNCTION_16_65();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL))(a1, v4);
  return swift_release(*(void *)(a1 + *(int *)(a2 + 20)));
}

void initializeWithCopy for SmsGroupIntentNode(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = OUTLINED_FUNCTION_16_65();
  OUTLINED_FUNCTION_11_71(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL));
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  OUTLINED_FUNCTION_6();
}

void assignWithCopy for SmsGroupIntentNode(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = OUTLINED_FUNCTION_16_65();
  OUTLINED_FUNCTION_11_71(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 24LL));
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void *)(a1 + v7);
  *(void *)(a1 + v__swift_destroy_boxed_opaque_existential_1(v0 + 7) = *(void *)(a2 + v7);
  swift_retain();
  swift_release(v8);
  OUTLINED_FUNCTION_6();
}

void initializeWithTake for SmsGroupIntentNode(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = OUTLINED_FUNCTION_16_65();
  OUTLINED_FUNCTION_11_71(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL));
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  OUTLINED_FUNCTION_6();
}

void assignWithTake for SmsGroupIntentNode(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = OUTLINED_FUNCTION_16_65();
  OUTLINED_FUNCTION_11_71(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 40LL));
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void *)(a1 + v7);
  *(void *)(a1 + v__swift_destroy_boxed_opaque_existential_1(v0 + 7) = *(void *)(a2 + v7);
  swift_release(v8);
  OUTLINED_FUNCTION_6();
}

uint64_t getEnumTagSinglePayload for AppIntentNode(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_2F06C0);
}

uint64_t sub_2F06C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm_0( a1,  a2,  a3,  (uint64_t (*)(void))&type metadata accessor for NonTerminalIntentNode);
}

uint64_t __swift_get_extra_inhabitant_indexTm_0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v7 = a4(0LL);
  if (*(_DWORD *)(*(void *)(v7 - 8) + 84LL) == (_DWORD)a2) {
    return __swift_getEnumTagSinglePayload(a1, a2, v7);
  }
  unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF) {
    LODWORD(v9) = -1;
  }
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for AppIntentNode(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_2F0750);
}

void sub_2F0750(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
}

void __swift_store_extra_inhabitant_indexTm_0( uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v9 = a5(0LL);
  if (*(_DWORD *)(*(void *)(v9 - 8) + 84LL) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v9);
  }

  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
    OUTLINED_FUNCTION_6();
  }

uint64_t type metadata completion function for SmsGroupIntentNode(uint64_t a1)
{
  uint64_t result = type metadata accessor for NonTerminalIntentNode(319LL);
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(result - 8) + 64LL;
    v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
    swift_initStructMetadata(a1, 256LL, 2LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

uint64_t storeEnumTagSinglePayload for PhonePreferredCallProvider( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    LODWORD(OUTLINED_FUNCTION_48_23(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin26PhoneCallContactIntentNode_handleLabel, v4) = 1;
  }
  else {
    LODWORD(OUTLINED_FUNCTION_48_23(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin26PhoneCallContactIntentNode_handleLabel, v4) = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFD) {
    return ((uint64_t (*)(void))((char *)&loc_2F0888 + 4 * byte_340199[v4]))();
  }
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2F08BC + 4 * byte_340194[v4]))();
}

uint64_t sub_2F08BC(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2F08C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x2F08CCLL);
  }
  return result;
}

uint64_t sub_2F08D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x2F08E0LL);
  }
  *(_BYTE *)uint64_t result = a2 + 2;
  return result;
}

uint64_t sub_2F08E4(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2F08EC(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PhonePreferredCallProvider()
{
  return &type metadata for PhonePreferredCallProvider;
}

uint64_t storeEnumTagSinglePayload for SemanticTag(uint64_t a1, int a2, int a3)
{
  else {
    int v3 = 2;
  }
  else {
    LODWORD(OUTLINED_FUNCTION_48_23(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin26PhoneCallContactIntentNode_handleLabel, v4) = v3;
  }
  if (a3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2) {
    return ((uint64_t (*)(void))((char *)sub_2F0948 + 4 * byte_34019E[v4]))();
  }
  else {
    return ((uint64_t (*)(void))((char *)sub_2F0968 + 4 * byte_3401A3[v4]))();
  }
}

_BYTE *sub_2F0948(_BYTE *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

_BYTE *sub_2F0968(_BYTE *result)
{
  *uint64_t result = 0;
  return result;
}

_DWORD *sub_2F0970(_DWORD *result, int a2)
{
  *uint64_t result = a2;
  return result;
}

_WORD *sub_2F0978(_WORD *result, __int16 a2)
{
  *uint64_t result = a2;
  return result;
}

_WORD *sub_2F0980(_WORD *result)
{
  *uint64_t result = 0;
  return result;
}

_DWORD *sub_2F0988(_DWORD *result)
{
  *uint64_t result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SemanticTag()
{
  return &type metadata for SemanticTag;
}

uint64_t OUTLINED_FUNCTION_1_105(uint64_t a1)
{
  return dispatch thunk of Hashable.hash(into:)(v1, v2, a1);
}

uint64_t OUTLINED_FUNCTION_7_115@<X0>(uint64_t a1@<X8>, uint64_t a2, ...)
{
  return swift_beginAccess(v2 + a1, va, 0LL, 0LL);
}

uint64_t OUTLINED_FUNCTION_11_95@<X0>(uint64_t a1@<X8>)
{
  return static TerminalOntologyNode.== infix(_:_:)(*(void *)(v2 + a1), *(void *)(v1 + a1));
}

void OUTLINED_FUNCTION_12_94(unint64_t *a1)
{
}

uint64_t OUTLINED_FUNCTION_16_65()
{
  return type metadata accessor for NonTerminalIntentNode(0LL);
}

uint64_t OUTLINED_FUNCTION_17_71()
{
  return type metadata accessor for PhoneCallNLv3Intent(0LL);
}

void OUTLINED_FUNCTION_18_72(unint64_t *a1, uint64_t *a2)
{
}

uint64_t OUTLINED_FUNCTION_19_71@<X0>(uint64_t a1@<X8>)
{
  return static NonTerminalOntologyNode.== infix(_:_:)(*(void *)(v2 + a1), *(void *)(v1 + a1));
}

uint64_t OUTLINED_FUNCTION_23_65()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_24_58(uint64_t a1)
{
  return static PersonIntentNode.getProcessedNameField(person:terminalNode:)(v1, a1);
}

  ;
}

void *OUTLINED_FUNCTION_28_60@<X0>(uint64_t a1@<X2>, void *a2@<X8>)
{
  return IntentNodeTraversable.value<A>(forNode:)(a2, v2, v3, a1);
}

uint64_t OUTLINED_FUNCTION_30_53(uint64_t a1)
{
  return dispatch thunk of Hashable.hash(into:)(v1, v2, a1);
}

uint64_t OUTLINED_FUNCTION_33_60(unsigned __int16 a1)
{
  return a1 | 0x756F756769620000LL;
}

  ;
}

uint64_t OUTLINED_FUNCTION_39_37@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_41_42(uint64_t a1, uint64_t a2)
{
  return TerminalOntologyNode.init(name:multicardinal:)(a1, a2, 0LL);
}

  ;
}

uint64_t OUTLINED_FUNCTION_47_28()
{
  return 0LL;
}

uint64_t OUTLINED_FUNCTION_48_36(uint64_t result)
{
  *(void *)(v1 + v__swift_destroy_boxed_opaque_existential_1(v0 + 2) = result;
  return result;
}

void OUTLINED_FUNCTION_49_32(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, void *a5)
{
}

uint64_t OUTLINED_FUNCTION_52_31(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_once(a1, a3);
}

void OUTLINED_FUNCTION_56_27(unint64_t *a1, uint64_t (*a2)(uint64_t))
{
}

uint64_t OUTLINED_FUNCTION_60_28()
{
  return 0LL;
}

uint64_t OUTLINED_FUNCTION_67_22()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 96))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_68_29()
{
  return __swift_instantiateConcreteTypeFromMangledName(v0);
}

uint64_t OUTLINED_FUNCTION_72_29()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_73_29()
{
  return type metadata accessor for NonTerminalOntologyNode(0LL);
}

uint64_t OUTLINED_FUNCTION_74_23()
{
  return type metadata accessor for PersonIntentNode(0LL);
}

uint64_t OUTLINED_FUNCTION_76_22()
{
  return type metadata accessor for TerminalIntentNode(0LL);
}

uint64_t OUTLINED_FUNCTION_77_21(uint64_t a1)
{
  return IntentNodeTraversable.intentNodes(forOntologyNode:)(v2, v1, a1);
}

uint64_t OUTLINED_FUNCTION_86_18(uint64_t a1)
{
  return IntentNodeTraversable.intentNodes(forOntologyNode:)(a1, v1, v2);
}

uint64_t OUTLINED_FUNCTION_90_19@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_91_18()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_92_17()
{
  return 0x6C6143656E6F6870LL;
}

uint64_t OUTLINED_FUNCTION_94_15(uint64_t result)
{
  *uint64_t v1 = result & 1;
  return result;
}

void OUTLINED_FUNCTION_97_19()
{
}

uint64_t OUTLINED_FUNCTION_100_11()
{
  return type metadata accessor for TerminalElement(0LL);
}

  ;
}

uint64_t OUTLINED_FUNCTION_106_12(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_stdlib_reportUnimplementedInitializer(a1, a2, a3, 36LL, 0LL);
}

void CameraControlFlow.executeAction(currentCall:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  unsigned __int8 v8 = *(_BYTE *)(v4 + 56);
  PhoneCallControlAction.isCameraAction.getter(v8);
  if ((v9 & 1) == 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v19 = type metadata accessor for Logger(0LL);
    uint64_t v20 = __swift_project_value_buffer(v19, (uint64_t)static Logger.siriPhone);
    uint64_t v21 = (void *)Logger.logObject.getter(v20);
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_10(v22))
    {
      uint64_t v23 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
      *uint64_t v23 = 0;
      OUTLINED_FUNCTION_2_85( &dword_0,  v24,  v25,  "#CameraControlFlow used to handle a call control not related to the camera.");
      OUTLINED_FUNCTION_0_2((uint64_t)v23);
    }

    unint64_t v26 = lazy protocol witness table accessor for type ActionableCallControlFlow.ActionableCallControlFlowError and conformance ActionableCallControlFlow.ActionableCallControlFlowError();
    unint64_t v27 = OUTLINED_FUNCTION_4_4( (uint64_t)&type metadata for ActionableCallControlFlow.ActionableCallControlFlowError,  v26);
    uint64_t v35 = v28;
    char v36 = 0;
    *uint64_t v28 = v8;
    goto LABEL_29;
  }

  uint64_t v88 = a3;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v10 = type metadata accessor for Logger(0LL);
  __swift_project_value_buffer(v10, (uint64_t)static Logger.siriPhone);
  swift_unknownObjectRetain(a1);
  uint64_t v11 = (os_log_s *)OUTLINED_FUNCTION_62_18();
  os_log_type_t v13 = static os_log_type_t.debug.getter(v11, v12);
  if (os_log_type_enabled(v11, v13))
  {
    uint64_t v14 = (_DWORD *)OUTLINED_FUNCTION_7_0(8LL);
    *uint64_t v14 = 67109120;
    uint64_t ObjectType = swift_getObjectType(a1);
    OUTLINED_FUNCTION_9_87(ObjectType);
    OUTLINED_FUNCTION_3_127();
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v16, v17, v18);
    OUTLINED_FUNCTION_8_93();
    OUTLINED_FUNCTION_4_110(&dword_0, v11, v13, "#CameraControlFlow isFaceTime: %{BOOL}d");
    OUTLINED_FUNCTION_0_2((uint64_t)v14);
  }

  else
  {

    OUTLINED_FUNCTION_8_93();
  }

  uint64_t v37 = swift_getObjectType(a1);
  if ((OUTLINED_FUNCTION_9_87(v37) & 1) == 0)
  {
    uint64_t v49 = (void *)OUTLINED_FUNCTION_62_18();
    os_log_type_t v51 = static os_log_type_t.debug.getter(v49, v50);
    if (OUTLINED_FUNCTION_10(v51))
    {
      uint64_t v52 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
      *uint64_t v52 = 0;
      OUTLINED_FUNCTION_2_85( &dword_0,  v53,  v54,  "#CameraControlFlow requesting to turn on camera while on Telephony call. Throwing ActionableCallControlFlow.unsupportedAction.");
      OUTLINED_FUNCTION_0_2((uint64_t)v52);
    }

    unint64_t v55 = lazy protocol witness table accessor for type ActionableCallControlFlow.ActionableCallControlFlowError and conformance ActionableCallControlFlow.ActionableCallControlFlowError();
    OUTLINED_FUNCTION_4_4((uint64_t)&type metadata for ActionableCallControlFlow.ActionableCallControlFlowError, v55);
    uint64_t v35 = (unsigned __int8 *)v56;
    *(void *)(v56 + 24) = &type metadata for ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason;
    unint64_t v27 = lazy protocol witness table accessor for type ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason and conformance ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason();
    *((void *)v35 + 4) = v27;
    *uint64_t v35 = 9;
    goto LABEL_28;
  }

  uint64_t v38 = static PhoneCallControlRequestSupportPolicy.unsupportedCameraControlReason(for:action:sharedGlobals:)( a1,  a2,  v8);
  if (v38 != 10)
  {
    uint64_t v57 = v38;
    uint64_t v58 = (os_log_s *)OUTLINED_FUNCTION_62_18();
    os_log_type_t v60 = static os_log_type_t.debug.getter(v58, v59);
    if (os_log_type_enabled(v58, v60))
    {
      uint64_t v61 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v62 = OUTLINED_FUNCTION_7_0(32LL);
      v89[0] = v62;
      *(_DWORD *)uint64_t v61 = 136315138;
      specialized UnsupportedAction.description.getter(v57);
      uint64_t v90 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v63, v64, v89);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, &v91, v61 + 4);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v58, v60, "#CameraControlFlow unsupported reason=%s", v61, 0xCu);
      swift_arrayDestroy(v62, 1LL);
      OUTLINED_FUNCTION_0_2(v62);
      OUTLINED_FUNCTION_0_2((uint64_t)v61);
    }

    unint64_t v65 = lazy protocol witness table accessor for type ActionableCallControlFlow.ActionableCallControlFlowError and conformance ActionableCallControlFlow.ActionableCallControlFlowError();
    OUTLINED_FUNCTION_4_4((uint64_t)&type metadata for ActionableCallControlFlow.ActionableCallControlFlowError, v65);
    uint64_t v35 = (unsigned __int8 *)v66;
    *(void *)(v66 + 24) = &type metadata for ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason;
    unint64_t v27 = lazy protocol witness table accessor for type ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason and conformance ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason();
    *((void *)v35 + 4) = v27;
    *uint64_t v35 = v57;
LABEL_28:
    char v36 = 1;
LABEL_29:
    v35[40] = v36;
    swift_willThrow(v27, v28, v29, v30, v31, v32, v33, v34);
    return;
  }

  uint64_t v87 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 144);
  char v39 = v87(v37, a2);
  uint64_t v40 = (os_log_s *)OUTLINED_FUNCTION_62_18();
  os_log_type_t v42 = static os_log_type_t.debug.getter(v40, v41);
  if (os_log_type_enabled(v40, v42))
  {
    uint64_t v43 = (_DWORD *)OUTLINED_FUNCTION_7_0(8LL);
    *uint64_t v43 = 67109120;
    LODWORD(v89[0]) = v39 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v89, (char *)v89 + 4, v43 + 1);
    OUTLINED_FUNCTION_4_110(&dword_0, v40, v42, "#CameraControlFlow cameraIsEnabled = %{BOOL}d");
    OUTLINED_FUNCTION_0_2((uint64_t)v43);
  }

  uint64_t v44 = PhoneCallControlAction.rawValue.getter(v8);
  if ((v39 & 1) != 0)
  {
    if (v44 != 0x43656C6261736964LL || v45 != 0xED00006172656D61LL)
    {
      uint64_t v47 = 0x43656C6261736964LL;
      unint64_t v48 = 0xED00006172656D61LL;
      goto LABEL_35;
    }

uint64_t type metadata accessor for CameraControlFlow()
{
  return objc_opt_self(&OBJC_CLASS____TtC27PhoneCallFlowDelegatePlugin17CameraControlFlow);
}

  ;
}

void OUTLINED_FUNCTION_4_110(void *a1, os_log_s *a2, os_log_type_t a3, const char *a4)
{
}

uint64_t OUTLINED_FUNCTION_8_93()
{
  return swift_unknownObjectRelease(v0);
}

uint64_t OUTLINED_FUNCTION_9_87(uint64_t a1)
{
  return v1(a1, v2);
}

PhoneCallFlowDelegatePlugin::PostCallInquiryAnswerCallCATs::Properties_optional __swiftcall PostCallInquiryAnswerCallCATs.Properties.init(rawValue:)( Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)( (Swift::OpaquePointer)&outlined read-only object #0 of PostCallInquiryAnswerCallCATs.Properties.init(rawValue:),  v2);
  swift_bridgeObjectRelease(object);
  if (v3 == 1) {
    v4.int value = PhoneCallFlowDelegatePlugin_PostCallInquiryAnswerCallCATs_Properties_offerFollowUpIntent;
  }
  else {
    v4.int value = PhoneCallFlowDelegatePlugin_PostCallInquiryAnswerCallCATs_Properties_unknownDefault;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

PhoneCallFlowDelegatePlugin::PostCallInquiryAnswerCallCATs::Properties_optional protocol witness for RawRepresentable.init(rawValue:) in conformance PostCallInquiryAnswerCallCATs.Properties@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::PostCallInquiryAnswerCallCATs::Properties_optional *a2@<X8>)
{
  result.int value = PostCallInquiryAnswerCallCATs.Properties.init(rawValue:)(*a1).value;
  a2->int value = result.value;
  return result;
}

uint64_t PostCallInquiryAnswerCallCATs.intentHandledResponse(incomingCallConcept:completion:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_15_3(v2);
  *(_OWORD *)(v3 + ++*(void *)(v0 + 16) = xmmword_31D870;
  *(void *)(v3 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xD000000000000013LL;
  *(void *)(v3 + 40) = 0x8000000000349470LL;
  if (a1)
  {
    uint64_t v4 = type metadata accessor for PhoneIncomingCall();
    uint64_t v5 = a1;
  }

  else
  {
    uint64_t v5 = 0LL;
    uint64_t v4 = 0LL;
    *(void *)(v3 + 56) = 0LL;
    *(void *)(v3 + 64) = 0LL;
  }

  *(void *)(v3 + 48) = v5;
  *(void *)(v3 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v4;
  swift_retain();
  OUTLINED_FUNCTION_23_19(0xD00000000000002FLL);
  return OUTLINED_FUNCTION_1_41(v3);
}

uint64_t PostCallInquiryAnswerCallCATs.intentHandledResponse(incomingCallConcept:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  __int128 v3[2] = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)PostCallInquiryAnswerCallCATs.intentHandledResponse(incomingCallConcept:));
}

uint64_t PostCallInquiryAnswerCallCATs.intentHandledResponse(incomingCallConcept:)()
{
  uint64_t v2 = v1[3];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  v1[5] = v4;
  *(_OWORD *)(v4 + ++*(void *)(v0 + 16) = xmmword_31D870;
  uint64_t v5 = OUTLINED_FUNCTION_20(v4, (uint64_t)"incomingCallConcept");
  if (v2)
  {
    uint64_t v5 = type metadata accessor for PhoneIncomingCall();
  }

  else
  {
    *(void *)(v4 + 56) = 0LL;
    *(void *)(v4 + 64) = 0LL;
  }

  *(void *)(v4 + 48) = v2;
  *(void *)(v4 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v5;
  OUTLINED_FUNCTION_18_2();
  uint64_t v6 = (void *)swift_task_alloc(v0);
  v1[6] = v6;
  *uint64_t v6 = v1;
  v6[1] = PhoneCallCommonCATs.orList(items:);
  return v8(v1[2], 0xD00000000000002FLL, 0x8000000000346150LL, v4);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t (*v9)(uint64_t);
  uint64_t v2 = v1[2];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v4 = OUTLINED_FUNCTION_15_3(v3);
  v1[4] = v4;
  *(_OWORD *)(v4 + ++*(void *)(v0 + 16) = xmmword_31D870;
  uint64_t v5 = OUTLINED_FUNCTION_20(v4, (uint64_t)"incomingCallConcept");
  if (v2)
  {
    uint64_t v5 = type metadata accessor for PhoneIncomingCall();
  }

  else
  {
    *(void *)(v4 + 56) = 0LL;
    *(void *)(v4 + 64) = 0LL;
  }

  *(void *)(v4 + 48) = v2;
  *(void *)(v4 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v5;
  OUTLINED_FUNCTION_18_2();
  uint64_t v6 = (void *)swift_task_alloc(v0);
  v1[5] = v6;
  *uint64_t v6 = v1;
  v6[1] = UnsupportedFlowCATs.unsupportedOnDeviceType(device:);
  uint64_t v7 = OUTLINED_FUNCTION_21_19(0xD00000000000002FLL);
  return v9(v7);
}

uint64_t PostCallInquiryAnswerCallCATs.intentHandledResponse(incomingCallConcept:)(uint64_t a1)
{
  *(void *)(v2 + ++*(void *)(v0 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)PostCallInquiryAnswerCallCATs.intentHandledResponse(incomingCallConcept:));
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_15_3(v2);
  *(_OWORD *)(v3 + ++*(void *)(v0 + 16) = xmmword_31D870;
  *(void *)(v3 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xD000000000000013LL;
  *(void *)(v3 + 40) = 0x8000000000349470LL;
  if (a1)
  {
    uint64_t v4 = type metadata accessor for PhoneIncomingCall();
    uint64_t v5 = a1;
  }

  else
  {
    uint64_t v5 = 0LL;
    uint64_t v4 = 0LL;
    *(void *)(v3 + 56) = 0LL;
    *(void *)(v3 + 64) = 0LL;
  }

  *(void *)(v3 + 48) = v5;
  *(void *)(v3 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v4;
  swift_retain();
  dispatch thunk of CATWrapper.execute(catId:parameters:)(0xD00000000000002FLL, 0x8000000000346150LL, v3);
  return OUTLINED_FUNCTION_1_41(v3);
}

uint64_t PostCallInquiryAnswerCallCATs.offerFollowUpIntent(followUpOfferType:completion:)(uint64_t a1)
{
  uint64_t v4 = v3 - v2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v6 = OUTLINED_FUNCTION_15_3(v5);
  *(_OWORD *)(v6 + ++*(void *)(v0 + 16) = xmmword_31D870;
  uint64_t v7 = (void *)(v6 + 48);
  *(void *)(v6 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xD000000000000011LL;
  *(void *)(v6 + 40) = 0x8000000000349490LL;
  outlined init with copy of SpeakableString?(a1, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v8 = OUTLINED_FUNCTION_26_0();
  uint64_t EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v4, 1LL, v8);
  if ((_DWORD)EnumTagSinglePayload == 1)
  {
    OUTLINED_FUNCTION_41_1(EnumTagSinglePayload, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)uint64_t v7 = 0u;
    *(_OWORD *)(v6 + 64) = 0u;
  }

  else
  {
    *(void *)(v6 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v8;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v7);
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32LL))( boxed_opaque_existential_1,  v4,  v8);
  }

  OUTLINED_FUNCTION_23_19(0xD00000000000002DLL);
  return swift_bridgeObjectRelease();
}

uint64_t PostCallInquiryAnswerCallCATs.offerFollowUpIntent(followUpOfferType:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  __int128 v3[2] = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v3[5] = OUTLINED_FUNCTION_12_0(v4);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t PostCallInquiryAnswerCallCATs.offerFollowUpIntent(followUpOfferType:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_15_3(v1);
  v0[6] = v2;
  *(_OWORD *)(v2 + ++*(void *)(v0 + 16) = xmmword_31D870;
  *(void *)(v2 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xD000000000000011LL;
  *(void *)(v2 + 40) = 0x8000000000349490LL;
  OUTLINED_FUNCTION_27_6(v2, v3, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v4 = OUTLINED_FUNCTION_26_0();
  uint64_t v5 = OUTLINED_FUNCTION_36_2(v4);
  if ((_DWORD)v5 == 1)
  {
    OUTLINED_FUNCTION_41_1(v5, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)(v2 + 48) = 0u;
    *(_OWORD *)(v2 + 64) = 0u;
  }

  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v6);
  }

  uint64_t v7 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.execute(catId:parameters:));
  v0[7] = v7;
  *uint64_t v7 = v0;
  v7[1] = AnswerCallCATs.offerFollowUpIntent(followUpOfferType:);
  return v9(v0[2], 0xD00000000000002DLL, 0x8000000000346180LL, v2);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t (*v10)(uint64_t);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v2 = OUTLINED_FUNCTION_15_3(v1);
  *(void *)(v0 + 40) = v2;
  *(_OWORD *)(v2 + ++*(void *)(v0 + 16) = xmmword_31D870;
  *(void *)(v2 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xD000000000000011LL;
  *(void *)(v2 + 40) = 0x8000000000349490LL;
  OUTLINED_FUNCTION_27_6(v2, v3, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v4 = OUTLINED_FUNCTION_26_0();
  uint64_t v5 = OUTLINED_FUNCTION_36_2(v4);
  if ((_DWORD)v5 == 1)
  {
    OUTLINED_FUNCTION_41_1(v5, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)(v2 + 48) = 0u;
    *(_OWORD *)(v2 + 64) = 0u;
  }

  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_11_11((uint64_t)v6);
  }

  uint64_t v7 = (void *)OUTLINED_FUNCTION_0_1((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executeDialog(catId:parameters:));
  *(void *)(v0 + 48) = v7;
  *uint64_t v7 = v0;
  v7[1] = UnsupportedFlowCATs.unsupportedEmergencyContactCall(thirdPartyAppName:isFaceTime:);
  uint64_t v8 = OUTLINED_FUNCTION_21_19(0xD00000000000002DLL);
  return v10(v8);
}

uint64_t PostCallInquiryAnswerCallCATs.offerFollowUpIntent(followUpOfferType:)(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  v2[4] = OUTLINED_FUNCTION_12_0(v3);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *boxed_opaque_existential_1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v4 = v3 - v2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v6 = OUTLINED_FUNCTION_15_3(v5);
  *(_OWORD *)(v6 + ++*(void *)(v0 + 16) = xmmword_31D870;
  uint64_t v7 = (void *)(v6 + 48);
  *(void *)(v6 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xD000000000000011LL;
  *(void *)(v6 + 40) = 0x8000000000349490LL;
  outlined init with copy of SpeakableString?(a1, v4, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v8 = OUTLINED_FUNCTION_26_0();
  if (__swift_getEnumTagSinglePayload(v4, 1LL, v8) == 1)
  {
    outlined destroy of SpeakableString?(v4, &demangling cache variable for type metadata for SpeakableString?);
    *(_OWORD *)uint64_t v7 = 0u;
    *(_OWORD *)(v6 + 64) = 0u;
  }

  else
  {
    *(void *)(v6 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v8;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v7);
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32LL))( boxed_opaque_existential_1,  v4,  v8);
  }

  dispatch thunk of CATWrapper.execute(catId:parameters:)(0xD00000000000002DLL, 0x8000000000346180LL, v6);
  return swift_bridgeObjectRelease();
}

unint64_t lazy protocol witness table accessor for type PostCallInquiryAnswerCallCATs.Properties and conformance PostCallInquiryAnswerCallCATs.Properties()
{
  unint64_t result = lazy protocol witness table cache variable for type PostCallInquiryAnswerCallCATs.Properties and conformance PostCallInquiryAnswerCallCATs.Properties;
  if (!lazy protocol witness table cache variable for type PostCallInquiryAnswerCallCATs.Properties and conformance PostCallInquiryAnswerCallCATs.Properties)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PostCallInquiryAnswerCallCATs.Properties,  &type metadata for PostCallInquiryAnswerCallCATs.Properties);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type PostCallInquiryAnswerCallCATs.Properties and conformance PostCallInquiryAnswerCallCATs.Properties);
  }

  return result;
}

uint64_t type metadata accessor for PostCallInquiryAnswerCallCATs(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for PostCallInquiryAnswerCallCATs;
  if (!type metadata singleton initialization cache for PostCallInquiryAnswerCallCATs) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PostCallInquiryAnswerCallCATs);
  }
  return result;
}

uint64_t type metadata completion function for PostCallInquiryAnswerCallCATs(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL, 0LL, v2, a1 + class metadata base offset for PostCallInquiryAnswerCallCATs);
}

uint64_t ObjC metadata update function for PostCallInquiryAnswerCallCATs()
{
  return type metadata accessor for PostCallInquiryAnswerCallCATs(0LL);
}

uint64_t storeEnumTagSinglePayload for PostCallInquiryAnswerCallCATs.Properties( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(OUTLINED_FUNCTION_48_23(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin26PhoneCallContactIntentNode_handleLabel, v4) = 1;
  }
  else {
    LODWORD(OUTLINED_FUNCTION_48_23(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin26PhoneCallContactIntentNode_handleLabel, v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_2F1E78 + 4 * byte_340755[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2F1EAC + 4 * asc_340750[v4]))();
}

uint64_t sub_2F1EAC(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2F1EB4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x2F1EBCLL);
  }
  return result;
}

uint64_t sub_2F1EC8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x2F1ED0LL);
  }
  *(_BYTE *)uint64_t result = a2 + 1;
  return result;
}

uint64_t sub_2F1ED4(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2F1EDC(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PostCallInquiryAnswerCallCATs.Properties()
{
  return &type metadata for PostCallInquiryAnswerCallCATs.Properties;
}

uint64_t PhonePersonWithAliasesListProperties<>.allSameFamilyName.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 24);
  __int128 v5[2] = a1;
  swift_bridgeObjectRetain();
  char v3 = specialized Sequence.allSatisfy(_:)( (uint64_t (*)(uint64_t *))partial apply for closure #1 in PhonePersonWithAliasesListProperties<>.allSameFamilyName.getter,  (uint64_t)v5,  v2);
  swift_bridgeObjectRelease();
  return v3 & 1;
}

void protocol witness for PhonePersonWithAliasesListProperties.numOfOthers.getter in conformance PhonePersonWithAliasesList()
{
}

uint64_t protocol witness for PhonePersonWithAliasesListProperties.allSameFamilyName.getter in conformance PhonePersonWithAliasesList( uint64_t a1)
{
  return PhonePersonWithAliasesListProperties<>.allSameFamilyName.getter(a1) & 1;
}

uint64_t closure #1 in PhonePersonWithAliasesListProperties<>.allSameFamilyName.getter( uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for SpeakableString(0LL);
  uint64_t v28 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SpeakableString?, SpeakableString?));
  __chkstk_darwin();
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v27 - v11;
  uint64_t v13 = __chkstk_darwin();
  uint64_t v15 = (char *)&v27 - v14;
  DialogPerson.familyName.getter(v13);
  uint64_t v16 = *(void *)(a2 + 24);
  if ((unint64_t)v16 >> 62)
  {
    if (v16 < 0) {
      uint64_t v26 = v16;
    }
    else {
      uint64_t v26 = v16 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    uint64_t v17 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease();
  }

  else
  {
    uint64_t v17 = *(void *)((char *)&dword_10 + (v16 & 0xFFFFFFFFFFFFF8LL));
  }

  if (v17 < 1)
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 1LL, 1LL, v3);
  }

  else
  {
    specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v16 & 0xC000000000000001LL) == 0, v16);
    if ((v16 & 0xC000000000000001LL) != 0)
    {
      uint64_t v19 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v16);
      uint64_t v18 = v19;
    }

    else
    {
      uint64_t v18 = *(void *)(v16 + 32);
      uint64_t v19 = swift_retain();
    }

    DialogPerson.familyName.getter(v19);
    swift_release(v18);
  }

  uint64_t v20 = (uint64_t)&v8[*(int *)(v6 + 48)];
  outlined init with copy of SpeakableString?((uint64_t)v15, (uint64_t)v8);
  outlined init with copy of SpeakableString?((uint64_t)v12, v20);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1LL, v3) == 1)
  {
    uint64_t v21 = &demangling cache variable for type metadata for SpeakableString?;
    outlined destroy of SpeakableString?( (uint64_t)v12,  &demangling cache variable for type metadata for SpeakableString?);
    outlined destroy of SpeakableString?( (uint64_t)v15,  &demangling cache variable for type metadata for SpeakableString?);
    if (__swift_getEnumTagSinglePayload(v20, 1LL, v3) == 1)
    {
      char v22 = -1;
    }

    else
    {
      uint64_t v21 = &demangling cache variable for type metadata for (SpeakableString?, SpeakableString?);
      char v22 = 0;
    }
  }

  else
  {
    outlined init with copy of SpeakableString?((uint64_t)v8, (uint64_t)v10);
    if (__swift_getEnumTagSinglePayload(v20, 1LL, v3) == 1)
    {
      outlined destroy of SpeakableString?( (uint64_t)v12,  &demangling cache variable for type metadata for SpeakableString?);
      outlined destroy of SpeakableString?( (uint64_t)v15,  &demangling cache variable for type metadata for SpeakableString?);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v3);
      char v22 = 0;
      uint64_t v21 = &demangling cache variable for type metadata for (SpeakableString?, SpeakableString?);
    }

    else
    {
      uint64_t v23 = v28;
      (*(void (**)(char *, uint64_t, uint64_t))(v28 + 32))(v5, v20, v3);
      lazy protocol witness table accessor for type SpeakableString and conformance SpeakableString();
      char v22 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v5, v3);
      uint64_t v24 = *(void (**)(char *, uint64_t))(v23 + 8);
      v24(v5, v3);
      uint64_t v21 = &demangling cache variable for type metadata for SpeakableString?;
      outlined destroy of SpeakableString?( (uint64_t)v12,  &demangling cache variable for type metadata for SpeakableString?);
      outlined destroy of SpeakableString?( (uint64_t)v15,  &demangling cache variable for type metadata for SpeakableString?);
      v24(v10, v3);
    }
  }

  outlined destroy of SpeakableString?((uint64_t)v8, v21);
  return v22 & 1;
}

uint64_t partial apply for closure #1 in PhonePersonWithAliasesListProperties<>.allSameFamilyName.getter( uint64_t a1)
{
  return closure #1 in PhonePersonWithAliasesListProperties<>.allSameFamilyName.getter(a1, *(void *)(v1 + 24)) & 1;
}

void *CallingIntentContactNeedsDisambiguationFlowStrategy.__allocating_init(delegate:startCallCATs:startCallCatPatterns:startCallCATsSimple:phoneCallCommonCATs:phoneCallCommonCATsSimple:phoneCallCommonCatPatterns:phoneCallDisplayTextCATsSimple:responseGenerator:siriKitEventSender:appInfoBuilder:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, void *a9, void *a10, void *a11)
{
  return CallingIntentContactNeedsDisambiguationFlowStrategy.init(delegate:startCallCATs:startCallCatPatterns:startCallCATsSimple:phoneCallCommonCATs:phoneCallCommonCATsSimple:phoneCallCommonCatPatterns:phoneCallDisplayTextCATsSimple:responseGenerator:siriKitEventSender:appInfoBuilder:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11);
}

PhoneCallFlowDelegatePlugin::EmergencyType_optional __swiftcall EmergencyType.init(for:)(Swift::OpaquePointer a1)
{
  if ((OUTLINED_FUNCTION_6_6((unint64_t)a1._rawValue) & 1) != 0
    && (OUTLINED_FUNCTION_201_5((unint64_t)a1._rawValue) & 1) != 0)
  {
    OUTLINED_FUNCTION_39();
    return 0;
  }

  else
  {
    char v3 = specialized Sequence.allSatisfy(_:)((unint64_t)a1._rawValue, (char *)&dword_0 + 1);
    OUTLINED_FUNCTION_39();
    if ((v3 & 1) != 0) {
      return (PhoneCallFlowDelegatePlugin::EmergencyType_optional)1;
    }
    else {
      return (PhoneCallFlowDelegatePlugin::EmergencyType_optional)2;
    }
  }

uint64_t EmergencyType.description.getter(char a1)
{
  BOOL v1 = (a1 & 1) == 0;
  if ((a1 & 1) != 0) {
    uint64_t v2 = 0x6C61636F6CLL;
  }
  else {
    uint64_t v2 = 0x6E676965726F66LL;
  }
  if (v1) {
    unint64_t v3 = 0xE700000000000000LL;
  }
  else {
    unint64_t v3 = 0xE500000000000000LL;
  }
  unint64_t v4 = v3;
  String.append(_:)(*(Swift::String *)&v2);
  OUTLINED_FUNCTION_39();
  return 46LL;
}

uint64_t EmergencyType.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0) {
    return 0x6C61636F6CLL;
  }
  else {
    return 0x6E676965726F66LL;
  }
}

PhoneCallFlowDelegatePlugin::EmergencyType_optional __swiftcall EmergencyType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)( (Swift::OpaquePointer)&outlined read-only object #0 of EmergencyType.init(rawValue:),  v2);
  OUTLINED_FUNCTION_39();
  if (v3 == 1) {
    v4.int value = PhoneCallFlowDelegatePlugin_EmergencyType_local;
  }
  else {
    v4.int value = PhoneCallFlowDelegatePlugin_EmergencyType_unknownDefault;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

void protocol witness for static Equatable.== infix(_:_:) in conformance EmergencyType(char *a1, char *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance EmergencyType()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance EmergencyType(uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance EmergencyType(uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::EmergencyType_optional protocol witness for RawRepresentable.init(rawValue:) in conformance EmergencyType@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::EmergencyType_optional *a2@<X8>)
{
  result.int value = EmergencyType.init(rawValue:)(*a1).value;
  a2->int value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance EmergencyType(uint64_t *a1@<X8>)
{
  *a1 = EmergencyType.rawValue.getter(*v1);
  a1[1] = v3;
  OUTLINED_FUNCTION_2();
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance EmergencyType()
{
  return EmergencyType.description.getter(*v0);
}

uint64_t key path setter for CallingIntentContactNeedsDisambiguationFlowStrategy.personsToDisambiguate : <A>CallingIntentContactNeedsDisambiguationFlowStrategy<A>( uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (uint64_t *)(*a2
                 + direct field offset for CallingIntentContactNeedsDisambiguationFlowStrategy.personsToDisambiguate);
  swift_beginAccess(v3, v6, 1LL, 0LL);
  uint64_t v4 = *v3;
  *uint64_t v3 = v2;
  swift_bridgeObjectRetain(v2);
  return swift_bridgeObjectRelease(v4);
}

void CallingIntentContactNeedsDisambiguationFlowStrategy.personsToDisambiguate.getter()
{
}

void key path setter for CallingIntentContactNeedsDisambiguationFlowStrategy.selectedPerson : <A>CallingIntentContactNeedsDisambiguationFlowStrategy<A>( void **a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void **)(*a2 + direct field offset for CallingIntentContactNeedsDisambiguationFlowStrategy.selectedPerson);
  swift_beginAccess(v3, v6, 1LL, 0LL);
  uint64_t v4 = *v3;
  *uint64_t v3 = v2;
  id v5 = v2;
}

void CallingIntentContactNeedsDisambiguationFlowStrategy.selectedPerson.getter()
{
  BOOL v1 = (id *)(v0 + direct field offset for CallingIntentContactNeedsDisambiguationFlowStrategy.selectedPerson);
  OUTLINED_FUNCTION_25_0( v0 + direct field offset for CallingIntentContactNeedsDisambiguationFlowStrategy.selectedPerson,  (uint64_t)v3,  0LL);
  id v2 = *v1;
  OUTLINED_FUNCTION_60_2();
}

void CallingIntentContactNeedsDisambiguationFlowStrategy.actionForInput(_:resolveRecord:)( os_log_s *a1, char a2)
{
  uint64_t v4 = v2;
  uint64_t v99 = *(void *)(type metadata accessor for Parse(0LL) - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = type metadata accessor for Input(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_54_4();
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v11 = OUTLINED_FUNCTION_15_1();
  __swift_project_value_buffer(v11, (uint64_t)static Logger.siriPhone);
  uint64_t v12 = (*(uint64_t (**)(uint64_t, os_log_s *, uint64_t))(v10 + 16))(v3, a1, v9);
  Logger.logObject.getter(v12);
  uint64_t v13 = (os_log_s *)OUTLINED_FUNCTION_41();
  if (OUTLINED_FUNCTION_50_12(a1))
  {
    uint64_t v14 = OUTLINED_FUNCTION_7_0(22LL);
    uint64_t v97 = OUTLINED_FUNCTION_7_0(64LL);
    uint64_t v102 = v97;
    *(_DWORD *)uint64_t v14 = 136315394;
    uint64_t v101 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000020LL, 0x800000000034ECA0LL, &v102);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v101, &v102, v14 + 4);
    *(_WORD *)(v14 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
    lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type Input and conformance Input,  (uint64_t (*)(uint64_t))&type metadata accessor for Input,  (uint64_t)&protocol conformance descriptor for Input);
    uint64_t v16 = dispatch thunk of CustomStringConvertible.description.getter(v9, v15);
    uint64_t v101 = OUTLINED_FUNCTION_224_4(v16, v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v101, &v102, v14 + 14);
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_11_20(v3, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
    OUTLINED_FUNCTION_33_6( &dword_0,  a1,  (os_log_type_t)v13,  "#CallingIntentContactNeedsDisambiguationFlowStrategy %s input: %s",  (uint8_t *)v14);
    OUTLINED_FUNCTION_42_2(v97);
    OUTLINED_FUNCTION_0_2(v97);
    OUTLINED_FUNCTION_0_2(v14);
  }

  else
  {
    OUTLINED_FUNCTION_11_20(v3, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
  }

  uint64_t v18 = (void *)(v2 + 24);
  uint64_t v19 = *(uint8_t **)(*(void *)v2 + 320LL);
  uint64_t v20 = OUTLINED_FUNCTION_217_2();
  outlined init with copy of SharedGlobalsProviding(v4 + 264, (uint64_t)&v103);
  outlined init with copy of SharedGlobalsProviding(v4 + 24, (uint64_t)&v104);
  uint64_t v102 = v20;
  Input.parse.getter(v21);
  uint64_t v22 = (uint64_t)ContactDisambiguationPromptResponseParser.parseDisambiguationResponse(from:)(v8);
  unsigned __int8 v24 = v23;
  OUTLINED_FUNCTION_167_2(v99);
  uint64_t v25 = outlined destroy of ContactDisambiguationPromptResponseParser((uint64_t)&v102);
  switch(v24)
  {
    case 0u:
      switch((char)v22)
      {
        case 0:
          OUTLINED_FUNCTION_84_21(v25);
          os_log_type_t v86 = OUTLINED_FUNCTION_41();
          if (OUTLINED_FUNCTION_10(v86))
          {
            uint64_t v87 = (_WORD *)OUTLINED_FUNCTION_1_0();
            OUTLINED_FUNCTION_31_0(v87);
            OUTLINED_FUNCTION_5( &dword_0,  (os_log_s *)(v4 + 24),  (os_log_type_t)&v102,  "#CallingIntentContactNeedsDisambiguationFlowStrategy user said yes to options",  v19);
            OUTLINED_FUNCTION_0_2((uint64_t)v19);
          }

          *(_BYTE *)(v4 + direct field offset for CallingIntentContactNeedsDisambiguationFlowStrategy.requiresReprompt) = 1;
          goto LABEL_61;
        case 1:
        case 2:
          OUTLINED_FUNCTION_107_10();
          uint64_t v26 = OUTLINED_FUNCTION_93_0();
          uint64_t v27 = OUTLINED_FUNCTION_70_9(v26);
          LOBYTE(v28) = a2;
          uint64_t v29 = (objc_class *)ParameterResolutionRecord.intent.getter(v27);
          uint64_t v30 = objc_opt_self(&OBJC_CLASS___INStartCallIntent);
          uint64_t v31 = (void *)swift_dynamicCastObjCClass(v29, v30);
          if (!v31) {
            goto LABEL_53;
          }
          id v32 = [v31 isGroupCall];
          LOBYTE(v28) = OUTLINED_FUNCTION_49( (uint64_t)v32,  (unint64_t *)&lazy cache variable for type metadata for NSNumber,  &OBJC_CLASS___NSNumber_ptr);
          v33.super.super.Class isa = NSNumber.init(integerLiteral:)(1LL).super.super.isa;
          if (v32)
          {
            id v34 = v32;
            uint64_t v28 = (os_log_s *)static NSObject.== infix(_:_:)(v34, v33.super.super.isa);

            if ((v28 & 1) != 0)
            {
              OUTLINED_FUNCTION_84_21(v35);
              os_log_type_t v36 = OUTLINED_FUNCTION_6_0();
              if (OUTLINED_FUNCTION_29_4(v36))
              {
                uint64_t v37 = (_WORD *)OUTLINED_FUNCTION_1_0();
                OUTLINED_FUNCTION_60_0(v37);
                OUTLINED_FUNCTION_5( &dword_0,  v28,  (os_log_type_t)v33.super.super.isa,  "#CallingIntentContactNeedsDisambiguationFlowStrategy user said no, but this is a GFT call, so remove t he contact and proceed.",  (uint8_t *)v34);
                OUTLINED_FUNCTION_0_2((uint64_t)v34);
              }

              OUTLINED_FUNCTION_163_7();
              goto LABEL_66;
            }

unint64_t CallingIntentContactNeedsDisambiguationFlowStrategy.updateForConfirmedContact(selectedIndex:confirmedContact:currentContacts:)( unint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = v3;
  unint64_t v8 = (unint64_t)_swiftEmptyArrayStorage;
  unint64_t v46 = (unint64_t)_swiftEmptyArrayStorage;
  if (!a3) {
    goto LABEL_11;
  }
  if ((unint64_t)a3 >> 62)
  {
    if (a3 >= 0) {
      uint64_t v11 = a3 & 0xFFFFFFFFFFFFFF8LL;
    }
    else {
      uint64_t v11 = a3;
    }
    OUTLINED_FUNCTION_6_3();
    if (_CocoaArrayWrapper.endIndex.getter(v11)) {
      goto LABEL_4;
    }
LABEL_9:
    unint64_t v8 = (unint64_t)_swiftEmptyArrayStorage;
    goto LABEL_10;
  }

  uint64_t v10 = *(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8LL));
  OUTLINED_FUNCTION_6_3();
  if (!v10) {
    goto LABEL_9;
  }
LABEL_4:
  unint64_t v8 = a3;
  unint64_t v46 = a3;
LABEL_10:
  OUTLINED_FUNCTION_62();
LABEL_11:
  if (v8 >> 62)
  {
    OUTLINED_FUNCTION_124();
    uint64_t v12 = (os_log_s *)OUTLINED_FUNCTION_61_1();
    OUTLINED_FUNCTION_4_1();
  }

  else
  {
    uint64_t v12 = *(os_log_s **)((char *)&dword_10 + (v8 & 0xFFFFFFFFFFFFF8LL));
  }

  if ((uint64_t)v12 > (uint64_t)a1)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v13 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v13, (uint64_t)static Logger.siriPhone);
    os_log_type_t v14 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_63(v14))
    {
      uint64_t v15 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      *(_DWORD *)uint64_t v15 = 134217984;
      unint64_t v44 = a1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45, v15 + 4);
      OUTLINED_FUNCTION_57_0( &dword_0,  v12,  v4,  "#CallingIntentContactNeedsDisambiguationFlowStrategy updateForDisambiguatedContact: Updating confirmed contact a t selectedIndex=%ld",  v15);
      OUTLINED_FUNCTION_0_2((uint64_t)v15);
    }

    uint64_t v12 = a2;
    int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(v8);
    unint64_t v46 = v8;
    if (!isUniquelyReferenced_nonNull_bridgeObject
      || (v8 & 0x8000000000000000LL) != 0
      || (v8 & 0x4000000000000000LL) != 0)
    {
      unint64_t v8 = specialized _ArrayBuffer._consumeAndCreateNew()(v8);
      unint64_t v46 = v8;
    }

    if ((a1 & 0x8000000000000000LL) != 0)
    {
      __break(1u);
    }

    else if (*(void *)((char *)&dword_10 + (v8 & 0xFFFFFFFFFFFFFF8LL)) > a1)
    {
      unint64_t v17 = *(void **)((char *)&stru_20.cmd + 8 * a1 + (v8 & 0xFFFFFFFFFFFFFF8LL));
      *(void *)((char *)&stru_20.cmd + 8 * a1 + (v8 & 0xFFFFFFFFFFFFFF8LL)) = v12;

      goto LABEL_31;
    }

    __break(1u);
    goto LABEL_40;
  }

  if (one-time initialization token for siriPhone != -1) {
LABEL_40:
  }
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  uint64_t v22 = OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_12_1(v22, (uint64_t)static Logger.siriPhone);
  os_log_type_t v23 = OUTLINED_FUNCTION_6_0();
  if (OUTLINED_FUNCTION_29_4(v23))
  {
    unsigned __int8 v24 = (_WORD *)OUTLINED_FUNCTION_1_0();
    OUTLINED_FUNCTION_60_0(v24);
    OUTLINED_FUNCTION_5( &dword_0,  v12,  (os_log_type_t)a1,  "#CallingIntentContactNeedsDisambiguationFlowStrategy updateForDisambiguatedContact: Adding confirmed contact to the contacts",  (uint8_t *)v8);
    OUTLINED_FUNCTION_0_2(v8);
  }

  id v25 = a2;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v25);
  a1 = *(void *)((char *)&dword_10 + (v46 & 0xFFFFFFFFFFFFFF8LL));
  unint64_t v26 = *(void *)((char *)&dword_18 + (v46 & 0xFFFFFFFFFFFFFF8LL));
  if (a1 >= v26 >> 1) {
    OUTLINED_FUNCTION_277_2(v26 > 1, a1 + 1);
  }
  uint64_t v18 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(a1, v25);
LABEL_31:
  specialized Array._endMutation()(v18, v19, v20, v21);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v27 = OUTLINED_FUNCTION_15_1();
  uint64_t v28 = OUTLINED_FUNCTION_4_23(v27, (uint64_t)static Logger.siriPhone);
  Logger.logObject.getter(v28);
  os_log_type_t v29 = OUTLINED_FUNCTION_6_0();
  if (OUTLINED_FUNCTION_29_4(v29))
  {
    uint64_t v30 = OUTLINED_FUNCTION_7_0(22LL);
    uint64_t v31 = OUTLINED_FUNCTION_7_0(64LL);
    unint64_t v44 = v31;
    *(_DWORD *)uint64_t v30 = 136315394;
    uint64_t v32 = OUTLINED_FUNCTION_155_6();
    uint64_t v42 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v32, v33, (uint64_t *)&v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, &v43, v30 + 4);
    OUTLINED_FUNCTION_31_1(v5);
    OUTLINED_FUNCTION_23_5();
    *(_WORD *)(v30 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
    uint64_t v34 = OUTLINED_FUNCTION_25_0((uint64_t)&v46, (uint64_t)&v42, 0LL);
    uint64_t v35 = OUTLINED_FUNCTION_49( v34,  (unint64_t *)&lazy cache variable for type metadata for INPerson,  &OBJC_CLASS___INPerson_ptr);
    uint64_t v36 = swift_bridgeObjectRetain();
    uint64_t v37 = Array.description.getter(v36, v35);
    unint64_t v39 = v38;
    OUTLINED_FUNCTION_13_1();
    uint64_t v41 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v37, v39, (uint64_t *)&v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v30 + 14);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_33_6(&dword_0, (os_log_s *)&v46, (os_log_type_t)a1, "#%s updated contacts : %s)", (uint8_t *)v30);
    OUTLINED_FUNCTION_42_2(v31);
    OUTLINED_FUNCTION_0_2(v31);
    OUTLINED_FUNCTION_0_2(v30);
  }

  else
  {

    OUTLINED_FUNCTION_31_1(v5);
  }

  OUTLINED_FUNCTION_25_0((uint64_t)&v46, (uint64_t)&v44, 0LL);
  return v46;
}

unint64_t CallingIntentContactNeedsDisambiguationFlowStrategy.updateForRejectedContact(selectedIndex:currentContacts:)( int64_t a1, unint64_t a2)
{
  unint64_t v4 = a2;
  if (!a2) {
    goto LABEL_19;
  }
  uint64_t v5 = v2;
  if (!(a2 >> 62))
  {
    uint64_t v7 = *(os_log_s **)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFFF8LL));
    OUTLINED_FUNCTION_48_0();
    if (v7) {
      goto LABEL_4;
    }
    goto LABEL_18;
  }

  OUTLINED_FUNCTION_48_0();
  if (!OUTLINED_FUNCTION_61_1())
  {
LABEL_18:
    OUTLINED_FUNCTION_34_0();
LABEL_19:
    OUTLINED_FUNCTION_48_0();
    return v4;
  }

  OUTLINED_FUNCTION_48_0();
  uint64_t v7 = (os_log_s *)OUTLINED_FUNCTION_61_1();
  OUTLINED_FUNCTION_34_0();
LABEL_4:
  if ((uint64_t)v7 <= a1)
  {
    OUTLINED_FUNCTION_34_0();
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v18 = OUTLINED_FUNCTION_15_1();
    uint64_t v19 = OUTLINED_FUNCTION_4_23(v18, (uint64_t)static Logger.siriPhone);
    Logger.logObject.getter(v19);
    os_log_type_t v20 = OUTLINED_FUNCTION_24();
    if (OUTLINED_FUNCTION_93(v20))
    {
      uint64_t v21 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v30 = OUTLINED_FUNCTION_7_0(32LL);
      *(_DWORD *)uint64_t v21 = 136315138;
      uint64_t v22 = OUTLINED_FUNCTION_155_6();
      uint64_t v26 = OUTLINED_FUNCTION_262_2(v22, v23, v24, v25);
      OUTLINED_FUNCTION_129_13(v26, v27);
      OUTLINED_FUNCTION_31_1(v5);
      OUTLINED_FUNCTION_87_0();
      OUTLINED_FUNCTION_57_0(&dword_0, v7, v3, "#%s index to be removed is out-of-range.", v21);
      OUTLINED_FUNCTION_17_0(v30);
      OUTLINED_FUNCTION_0_2(v30);
      OUTLINED_FUNCTION_0_2((uint64_t)v21);
    }

    else
    {

      OUTLINED_FUNCTION_31_1(v5);
    }

    goto LABEL_19;
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v8 = OUTLINED_FUNCTION_15_1();
  uint64_t v9 = OUTLINED_FUNCTION_4_23(v8, (uint64_t)static Logger.siriPhone);
  Logger.logObject.getter(v9);
  os_log_type_t v10 = OUTLINED_FUNCTION_6_0();
  if (OUTLINED_FUNCTION_93(v10))
  {
    uint64_t v11 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v29 = OUTLINED_FUNCTION_7_0(32LL);
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v12 = OUTLINED_FUNCTION_155_6();
    uint64_t v16 = OUTLINED_FUNCTION_262_2(v12, v13, v14, v15);
    OUTLINED_FUNCTION_129_13(v16, v17);
    OUTLINED_FUNCTION_31_1(v5);
    OUTLINED_FUNCTION_87_0();
    OUTLINED_FUNCTION_57_0(&dword_0, v7, v3, "#%s contact was not confirmed. Removing from the list.", v11);
    OUTLINED_FUNCTION_17_0(v29);
    OUTLINED_FUNCTION_0_2(v29);
    OUTLINED_FUNCTION_0_2((uint64_t)v11);
  }

  else
  {

    OUTLINED_FUNCTION_31_1(v5);
  }

  return a2;
}

uint64_t CallingIntentContactNeedsDisambiguationFlowStrategy.makeDisambiguationItemContainer(resolveRecord:)( uint64_t a1)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v1;
  return OUTLINED_FUNCTION_33_0((uint64_t)CallingIntentContactNeedsDisambiguationFlowStrategy.makeDisambiguationItemContainer(resolveRecord:));
}

uint64_t CallingIntentContactNeedsDisambiguationFlowStrategy.makeDisambiguationItemContainer(resolveRecord:)()
{
  uint64_t v1 = (int8x16_t *)OUTLINED_FUNCTION_154_10();
  *(void *)(v0 + 40) = v1;
  v1[1] = vextq_s8(*(int8x16_t *)(v0 + 24), *(int8x16_t *)(v0 + 24), 8uLL);
  uint64_t v2 = (void *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(void *)(v0 + 48) = v2;
  type metadata accessor for SiriKitDisambiguationListAdapter(0LL);
  void *v2 = v0;
  v2[1] = CallingIntentContactNeedsDisambiguationFlowStrategy.makeDisambiguationItemContainer(resolveRecord:);
  OUTLINED_FUNCTION_28_59();
  OUTLINED_FUNCTION_19_1();
  return withCheckedContinuation<A>(isolation:function:_:)();
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_14_1(*(void *)(*(void *)v0 + 48LL));
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t closure #1 in CallingIntentContactNeedsDisambiguationFlowStrategy.makeDisambiguationItemContainer(resolveRecord:)( uint64_t a1, uint64_t *a2)
{
  uint64_t v35 = a1;
  uint64_t v3 = *a2;
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<SiriKitDisambiguationListAdapter, Never>);
  uint64_t v4 = *(void *)(v34 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin();
  uint64_t v32 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for ParameterIdentifier(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v36 = a2[2];
  uint64_t v10 = *(void *)(v3 + 264);
  uint64_t v31 = *(void *)(v3 + 272);
  uint64_t v29 = v10;
  uint64_t v33 = *(void *)(*(void *)(v31 + 8) + 16LL);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(255LL);
  uint64_t v12 = type metadata accessor for ParameterResolutionRecord(0LL, AssociatedTypeWitness);
  uint64_t v30 = ParameterResolutionRecord.app.getter(v12);
  uint64_t v28 = ParameterResolutionRecord.intent.getter(v12);
  uint64_t v13 = ParameterResolutionRecord.parameter.getter(v12);
  uint64_t v27 = ParameterIdentifier.name.getter(v13);
  uint64_t v15 = v14;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v16 = (void *)ParameterResolutionRecord.result.getter(v12);
  uint64_t v17 = v32;
  uint64_t v18 = v34;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v32, v35, v34);
  uint64_t v19 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v20 = (v19 + 40) & ~v19;
  uint64_t v21 = (char *)swift_allocObject(&unk_419060, v20 + v5, v19 | 7);
  uint64_t v22 = v29;
  uint64_t v23 = v31;
  *((void *)v21 + __swift_destroy_boxed_opaque_existential_1(v0 + 2) = v29;
  *((void *)v21 + 3) = v23;
  *((void *)v21 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(&v21[v20], v17, v18);
  swift_retain();
  uint64_t v24 = v30;
  uint64_t v25 = (void *)v28;
  dispatch thunk of RCHFlowDelegate.makeDisambiguationList(app:intent:parameterName:intentResolutionResult:_:)( v30,  v28,  v27,  v15,  v16,  partial apply for closure #1 in closure #1 in CallingIntentContactNeedsDisambiguationFlowStrategy.makeDisambiguationItemContainer(resolveRecord:),  v21,  v22,  v33);

  swift_bridgeObjectRelease();
  swift_release(v24);
  return swift_release(v21);
}

uint64_t closure #1 in closure #1 in CallingIntentContactNeedsDisambiguationFlowStrategy.makeDisambiguationItemContainer(resolveRecord:)( uint64_t a1, void *a2)
{
  void *(*v8)(void *__return_ptr, uint64_t, uint64_t);
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void v14[5];
  type metadata accessor for UnlockDevicePolicy(0LL);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v14[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = a2[6];
  uint64_t v7 = a2[7];
  __swift_project_boxed_opaque_existential_1(a2 + 3, v6);
  uint64_t v8 = *(void *(**)(void *__return_ptr, uint64_t, uint64_t))(v7 + 8);
  swift_retain();
  uint64_t v9 = v8(v14, v6, v7);
  (*(void (**)(void *))(*a2 + 312LL))(v9);
  uint64_t v10 = type metadata accessor for SiriKitDisambiguationListAdapter(0LL);
  swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
  v14[0] = SiriKitDisambiguationListAdapter.init(disambiguationList:deviceState:authenticationPolicy:)(a1, v14, v5);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<SiriKitDisambiguationListAdapter, Never>);
  return CheckedContinuation.resume(returning:)(v14, v11);
}

uint64_t CallingIntentContactNeedsDisambiguationFlowStrategy.parseDisambiguationResult(input:paginatedItems:resolveRecord:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[50] = a4;
  v5[51] = v4;
  v5[48] = a1;
  v5[49] = a2;
  uint64_t v6 = *v4;
  uint64_t v7 = OUTLINED_FUNCTION_113_3();
  v5[52] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v5[53] = v8;
  v5[54] = OUTLINED_FUNCTION_23(v8);
  uint64_t v9 = type metadata accessor for Parse(0LL);
  v5[55] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v5[56] = v10;
  v5[57] = OUTLINED_FUNCTION_23(v10);
  v5[58] = *(void *)(v6 + 272);
  OUTLINED_FUNCTION_107_10();
  v5[59] = *(void *)(v6 + 264);
  uint64_t v11 = OUTLINED_FUNCTION_93_0();
  v5[60] = v11;
  uint64_t v12 = type metadata accessor for IntentPromptAnswer(0LL, v11);
  v5[61] = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  v5[62] = v13;
  v5[63] = OUTLINED_FUNCTION_8_30(v13);
  v5[64] = OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t CallingIntentContactNeedsDisambiguationFlowStrategy.parseDisambiguationResult(input:paginatedItems:resolveRecord:)()
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v4 = OUTLINED_FUNCTION_15_1();
  __swift_project_value_buffer(v4, (uint64_t)static Logger.siriPhone);
  OUTLINED_FUNCTION_9();
  os_log_type_t v5 = OUTLINED_FUNCTION_6_0();
  if (OUTLINED_FUNCTION_63(v5))
  {
    uint64_t v2 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v6 = OUTLINED_FUNCTION_7_0(32LL);
    *(void *)&__int128 v117 = v6;
    *(_DWORD *)uint64_t v2 = 136315138;
    *(void *)(v1 + 376) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)( 0xD00000000000003ELL,  0x8000000000352590LL,  (uint64_t *)&v117);
    OUTLINED_FUNCTION_87_15(v1 + 376, v1 + 384);
    OUTLINED_FUNCTION_57_0(&dword_0, v0, v3, "#CallingIntentContactNeedsDisambiguationFlowStrategy %s", v2);
    OUTLINED_FUNCTION_17_0(v6);
    OUTLINED_FUNCTION_0_2(v6);
    OUTLINED_FUNCTION_0_2((uint64_t)v2);
  }

  uint64_t v8 = *(os_log_s **)(v1 + 408);
  if (*((_BYTE *)v8 + direct field offset for CallingIntentContactNeedsDisambiguationFlowStrategy.shouldClearContext) == 1)
  {
    OUTLINED_FUNCTION_181_5(v7);
    os_log_type_t v9 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_7(v9))
    {
      uint64_t v10 = (_WORD *)OUTLINED_FUNCTION_1_0();
      OUTLINED_FUNCTION_60_0(v10);
      OUTLINED_FUNCTION_5( &dword_0,  v8,  (os_log_type_t)(v1 + 120),  "#CallingIntentContactNeedsDisambiguationFlowStrategy clearing context (clearing all existing selected contacts) so we can start over...",  v2);
      OUTLINED_FUNCTION_0_2((uint64_t)v2);
    }

    uint64_t v11 = *(void *)(v1 + 480);

    uint64_t v12 = type metadata accessor for ParameterResolutionRecord(0LL, v11);
    uint64_t v13 = (void *)ParameterResolutionRecord.intent.getter(v12);
    *(void *)(v1 + 344) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INPerson]);
    *(void *)(v1 + 320) = _swiftEmptyArrayStorage;
    OUTLINED_FUNCTION_132_13(v1 + 320);

    uint64_t v14 = OUTLINED_FUNCTION_11_12();
    CallingIntentContactNeedsDisambiguationFlowStrategy.resetStates()(v14);
    __int128 v117 = 0u;
    __int128 v118 = 0u;
    uint64_t v15 = ParameterResolutionRecord.intent.getter(v12);
    IntentPromptAnswer.init(answeredValue:updatedIntent:)(&v117, v15, v11);
    uint64_t v16 = OUTLINED_FUNCTION_98();
    static DisambiguationResult.chosenItem(_:)(v16, v17);
    uint64_t v18 = OUTLINED_FUNCTION_98();
    goto LABEL_48;
  }

  uint64_t v20 = *(uint64_t (**)(void))(*(void *)v8 + 344LL);
  uint64_t v21 = v20();
  if (v21)
  {
    uint64_t v22 = *(void *)(v1 + 456);
    uint64_t v111 = *(void *)(v1 + 448);
    uint64_t v114 = (void *)v21;
    uint64_t v23 = *(void **)(v1 + 408);
    OUTLINED_FUNCTION_82(v23 + 3);
    uint64_t v24 = OUTLINED_FUNCTION_98();
    uint64_t v26 = v25(v24);
    Input.parse.getter(v26);
    (*(void (**)(uint64_t))(*(void *)v26 + 192LL))(v22);
    swift_release(v26);
    OUTLINED_FUNCTION_167_2(v111);
    if (*(void *)(v1 + 232))
    {
      outlined init with take of AppSelectionSignalComponent((__int128 *)(v1 + 208), v1 + 248);
      uint64_t v27 = v23 + 3;
    }

    else
    {
      uint64_t v28 = v23[6];
      uint64_t v29 = v23[7];
      __swift_project_boxed_opaque_existential_1(v23 + 3, v28);
      uint64_t v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 72))(v28, v29);
      (*(void (**)(uint64_t))(*(void *)v30 + 152LL))(v30);
      OUTLINED_FUNCTION_38_1();
      uint64_t v27 = v23 + 3;
      if (*(void *)(v1 + 152) == 1LL)
      {
        outlined destroy of UUID?( v1 + 120,  (uint64_t *)&demangling cache variable for type metadata for TransformationResult?);
        *(_OWORD *)(v1 + outlined init with copy of SharedGlobalsProviding(v0 - 128, v0 - 248) = 0u;
        *(_OWORD *)(v1 + 264) = 0u;
        *(void *)(v1 + 280) = 0LL;
      }

      else
      {
        outlined init with copy of PhoneCallNLIntent?( v1 + 128,  v1 + 248,  &demangling cache variable for type metadata for PhoneCallNLIntent?);
        outlined destroy of TransformationResult(v1 + 120);
      }

      outlined destroy of UUID?(v1 + 208, &demangling cache variable for type metadata for PhoneCallNLIntent?);
    }

    if (*(void *)(v1 + 272))
    {
      outlined init with take of AppSelectionSignalComponent((__int128 *)(v1 + 248), v1 + 168);
      uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      uint64_t v32 = OUTLINED_FUNCTION_8_2(v31, 40LL);
      *(_OWORD *)(v32 + ++*(void *)(v0 + 16) = xmmword_31FE60;
      *(void *)(v32 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v114;
      *(void *)&__int128 v117 = v32;
      specialized Array._endMutation()(v32, v33, v34, v35);
      uint64_t v36 = v117;
      uint64_t v37 = one-time initialization token for instance;
      id v38 = v114;
      if (v37 != -1) {
        swift_once(&one-time initialization token for instance, one-time initialization function for instance);
      }
      uint64_t v39 = static EligibleAppFinder.instance;
      OUTLINED_FUNCTION_3_8();
      specialized static AppSelectionSignalsGatheringHelper.triggerSignalCollection(sharedGlobals:contacts:phoneCallNLIntent:smartAppSelection:eligibleAppsFinder:skIntent:)( v27,  v36,  (void *)(v1 + 168),  0LL,  v39);
      OUTLINED_FUNCTION_22();

      OUTLINED_FUNCTION_62();
      OUTLINED_FUNCTION_91_16();
    }

    else
    {

      outlined destroy of UUID?(v1 + 248, &demangling cache variable for type metadata for PhoneCallNLIntent?);
    }
  }

  uint64_t v113 = (void *)(v1 + 360);
  uint64_t v40 = *(void *)(v1 + 424);
  uint64_t v41 = type metadata accessor for ParameterResolutionRecord(0LL, *(void *)(v1 + 480));
  uint64_t v42 = ParameterResolutionRecord.parameter.getter(v41);
  uint64_t v43 = ParameterIdentifier.multicardinalIndex.getter(v42);
  char v45 = v44;
  uint64_t v46 = OUTLINED_FUNCTION_72_0(*(uint64_t (**)(uint64_t, uint64_t))(v40 + 8));
  if ((v45 & 1) != 0) {
    unint64_t v47 = 0LL;
  }
  else {
    unint64_t v47 = v43;
  }
  unint64_t v115 = v47;
  uint64_t v48 = ((uint64_t (*)(uint64_t))v20)(v46);
  *(void *)(v1 + 520) = v48;
  if (!v48)
  {
LABEL_32:
    if ((*(_BYTE *)(*(void *)(v1 + 408)
                   + direct field offset for CallingIntentContactNeedsDisambiguationFlowStrategy.requiresReprompt) & 1) == 0)
    {
      uint64_t v110 = (uint64_t *)(v1 + 368);
      uint64_t v59 = (void *)v20();
      if (v59)
      {
        os_log_type_t v60 = v59;
        uint64_t v112 = v41;
        id v61 = v59;
        os_log_type_t v62 = (os_log_s *)OUTLINED_FUNCTION_181_5((uint64_t)v61);
        os_log_type_t v63 = static os_log_type_t.default.getter();
        if (OUTLINED_FUNCTION_39_7(v62))
        {
          uint64_t v64 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
          uint64_t v109 = (void *)OUTLINED_FUNCTION_7_0(8LL);
          *(_DWORD *)uint64_t v64 = 138412290;
          *uint64_t v113 = v61;
          id v65 = v61;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v113, v110, v64 + 4);
          *uint64_t v109 = v60;

          OUTLINED_FUNCTION_57_0( &dword_0,  v62,  v63,  "#CallingIntentContactNeedsDisambiguationFlowStrategy parseDisambiguationResult confirmed contact: %@",  v64);
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
          OUTLINED_FUNCTION_17_0((uint64_t)v109);
          OUTLINED_FUNCTION_0_2((uint64_t)v109);
          OUTLINED_FUNCTION_0_2((uint64_t)v64);
        }

        else
        {
        }

        uint64_t v72 = *(os_log_s **)(v1 + 408);
        unsigned __int8 v73 = (void *)ParameterResolutionRecord.intent.getter(v112);
        uint64_t v74 = OUTLINED_FUNCTION_205_5();
        uint64_t v75 = OUTLINED_FUNCTION_162_9(v74);

        uint64_t v70 = v72;
        unint64_t v71 = CallingIntentContactNeedsDisambiguationFlowStrategy.updateForConfirmedContact(selectedIndex:confirmedContact:currentContacts:)( v115,  v61,  v75);

        OUTLINED_FUNCTION_39();
        goto LABEL_40;
      }

      uint64_t v66 = *(os_log_s **)(v1 + 408);
      unint64_t v67 = (void *)OUTLINED_FUNCTION_265_1();
      uint64_t v68 = OUTLINED_FUNCTION_205_5();
      unint64_t v69 = OUTLINED_FUNCTION_162_9(v68);

      uint64_t v70 = v66;
      unint64_t v71 = CallingIntentContactNeedsDisambiguationFlowStrategy.updateForRejectedContact(selectedIndex:currentContacts:)( v115,  v69);
      uint64_t v48 = OUTLINED_FUNCTION_39();
      if (v71)
      {
LABEL_40:
        uint64_t v76 = v1 + 288;
        uint64_t v77 = swift_bridgeObjectRetain_n(v71, 2LL);
        OUTLINED_FUNCTION_181_5(v77);
        os_log_type_t v78 = OUTLINED_FUNCTION_6_0();
        if (os_log_type_enabled(v70, v78))
        {
          unint64_t v79 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
          uint64_t v80 = OUTLINED_FUNCTION_7_0(32LL);
          *(void *)&__int128 v117 = v80;
          *(_DWORD *)unint64_t v79 = 136315138;
          uint64_t v81 = OUTLINED_FUNCTION_49( v80,  (unint64_t *)&lazy cache variable for type metadata for INPerson,  &OBJC_CLASS___INPerson_ptr);
          uint64_t v82 = OUTLINED_FUNCTION_124();
          uint64_t v83 = Array.description.getter(v82, v81);
          unint64_t v85 = v84;
          OUTLINED_FUNCTION_4_1();
          *uint64_t v110 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v83, v85, (uint64_t *)&v117);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v110, v1 + 376, v79 + 4);
          OUTLINED_FUNCTION_7_4(v71);
          OUTLINED_FUNCTION_13_1();
          OUTLINED_FUNCTION_57_0( &dword_0,  v70,  v78,  "#CallingIntentContactNeedsDisambiguationFlowStrategy updated contacts: %s",  v79);
          OUTLINED_FUNCTION_17_0(v80);
          OUTLINED_FUNCTION_0_2(v80);
          uint64_t v86 = (uint64_t)v79;
          uint64_t v76 = v1 + 288;
          OUTLINED_FUNCTION_0_2(v86);
        }

        else
        {

          OUTLINED_FUNCTION_7_4(v71);
        }

        uint64_t v87 = static ContactResolution.dedupeContacts(contacts:)(v71);
        OUTLINED_FUNCTION_4_1();
        os_log_type_t v88 = (void *)OUTLINED_FUNCTION_265_1();
        *(void *)(v1 + 31__swift_destroy_boxed_opaque_existential_1(v0 + 2) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [INPerson]);
        *(void *)(v1 + 288) = v87;
        OUTLINED_FUNCTION_132_13(v76);

        uint64_t v48 = OUTLINED_FUNCTION_90();
      }
    }

    uint64_t v89 = CallingIntentContactNeedsDisambiguationFlowStrategy.resetStates()(v48);
    uint64_t v90 = ((uint64_t (*)(uint64_t))v20)(v89);
    if (v90)
    {
      uint64_t v91 = v90;
      *((void *)&v118 + 1) = OUTLINED_FUNCTION_49( v90,  (unint64_t *)&lazy cache variable for type metadata for INPerson,  &OBJC_CLASS___INPerson_ptr);
      *(void *)&__int128 v117 = v91;
    }

    else
    {
      __int128 v117 = 0u;
      __int128 v118 = 0u;
    }

    uint64_t v92 = *(void *)(v1 + 480);
    uint64_t v93 = OUTLINED_FUNCTION_265_1();
    IntentPromptAnswer.init(answeredValue:updatedIntent:)(&v117, v93, v92);
    uint64_t v94 = OUTLINED_FUNCTION_120_0();
    static DisambiguationResult.chosenItem(_:)(v94, v95);
    uint64_t v18 = OUTLINED_FUNCTION_120_0();
LABEL_48:
    v19(v18);
    OUTLINED_FUNCTION_194_4();
    OUTLINED_FUNCTION_23_3();
    OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_10_0();
    OUTLINED_FUNCTION_13_0();
    OUTLINED_FUNCTION_192_5();
    __asm { BR              X0 }
  }

  os_log_type_t v49 = (void *)v48;
  INPerson.hasHandleValue.getter();
  if ((v50 & 1) != 0) {
    goto LABEL_31;
  }
  uint64_t v51 = v41;
  id v52 = [v49 customIdentifier];
  if (v52)
  {
    unint64_t v53 = v52;
    uint64_t v54 = static String._unconditionallyBridgeFromObjectiveC(_:)(v52);
    unint64_t v56 = v55;
  }

  else
  {
    uint64_t v54 = 0LL;
    unint64_t v56 = 0LL;
  }

  char v57 = specialized Optional<A>.isNilOrEmpty.getter(v54, v56);
  OUTLINED_FUNCTION_62();
  uint64_t v41 = v51;
  if ((v57 & 1) == 0 || (INPerson.isEmergency.getter(), (v58 & 1) != 0))
  {
LABEL_31:

    goto LABEL_32;
  }

  id v97 = v49;
  OUTLINED_FUNCTION_181_5((uint64_t)v97);
  os_log_type_t v98 = OUTLINED_FUNCTION_6_0();
  if (OUTLINED_FUNCTION_93(v98))
  {
    uint64_t v99 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v100 = (void *)OUTLINED_FUNCTION_7_0(8LL);
    *(_DWORD *)uint64_t v99 = 138412290;
    *(void *)(v1 + 35__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v97;
    id v101 = v97;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 352, v113, v99 + 4);
    *uint64_t v100 = v49;

    OUTLINED_FUNCTION_57_0( &dword_0,  (os_log_s *)v49,  (os_log_type_t)v40,  "#CallingIntentContactNeedsDisambiguationFlowStrategy with CRRHandleRecommendation for selectedPerson %@",  v99);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    OUTLINED_FUNCTION_17_0((uint64_t)v100);
    OUTLINED_FUNCTION_0_2((uint64_t)v100);
    OUTLINED_FUNCTION_0_2((uint64_t)v99);
  }

  else
  {
  }

  uint64_t v102 = *(void *)(v1 + 488);
  *(_OWORD *)(v1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0u;
  *(void *)(v1 + 48) = 0LL;
  *(_OWORD *)(v1 + ++*(void *)(v0 + 16) = 0u;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ContactQuery>);
  uint64_t v103 = OUTLINED_FUNCTION_20_35();
  uint64_t v104 = type metadata accessor for ContactQuery(v103);
  uint64_t v105 = swift_allocObject( v49,  ((*(unsigned __int8 *)(*(void *)(v104 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v104 - 8) + 80LL))
         + *(void *)(*(void *)(v104 - 8) + 72LL),
           *(unsigned __int8 *)(*(void *)(v104 - 8) + 80LL) | 7LL);
  *(_OWORD *)(v105 + ++*(void *)(v0 + 16) = xmmword_31D870;
  int8x16_t v116 = *(int8x16_t *)(v1 + 400);
  INPerson.toContactQuery()();
  *(void *)(v1 + 56) = _swiftEmptyArrayStorage;
  *(_BYTE *)(v1 + 64) = 2;
  *(void *)(v1 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  *(void *)(v1 + 80) = 0x1123030905050204LL;
  *(_WORD *)(v1 + 88) = 518;
  *(void *)(v1 + 96) = _swiftEmptyArrayStorage;
  *(void *)(v1 + outlined init with copy of SharedGlobalsProviding(v0, v1 - 104) = v105;
  *(void *)(v1 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = _swiftEmptyArrayStorage;
  uint64_t v106 = (int8x16_t *)OUTLINED_FUNCTION_111_5();
  *(void *)(v1 + 528) = v106;
  v106[1] = vextq_s8(v116, v116, 8uLL);
  v106[2].i64[0] = v1 + 16;
  v106[2].i64[1] = v115;
  uint64_t v107 = (void *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(void *)(v1 + 536) = v107;
  type metadata accessor for DisambiguationResult(0LL, v102);
  *uint64_t v107 = v1;
  v107[1] = CallingIntentContactNeedsDisambiguationFlowStrategy.parseDisambiguationResult(input:paginatedItems:resolveRecord:);
  OUTLINED_FUNCTION_28_59();
  OUTLINED_FUNCTION_19_1();
  OUTLINED_FUNCTION_192_5();
  return withCheckedContinuation<A>(isolation:function:_:)();
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_14_1(*(void *)(v0 + 536));
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  uint64_t (*v1)(void);

  outlined destroy of PhoneCallDirectInvocationNLIntent((void *)(v0 + 16));
  OUTLINED_FUNCTION_194_4();
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  uint64_t v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return OUTLINED_FUNCTION_24_1(v1);
}

uint64_t closure #1 in CallingIntentContactNeedsDisambiguationFlowStrategy.parseDisambiguationResult(input:paginatedItems:resolveRecord:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v25 = a1;
  uint64_t v7 = *(void *)(*(void *)a2 + 264LL);
  uint64_t v26 = *(void *)(*(void *)a2 + 272LL);
  uint64_t v27 = a5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(255LL);
  uint64_t v9 = type metadata accessor for IntentPromptAnswer(255LL, AssociatedTypeWitness);
  uint64_t v10 = type metadata accessor for DisambiguationResult(255LL, v9);
  uint64_t v11 = type metadata accessor for CheckedContinuation( 0LL,  v10,  &type metadata for Never,  &protocol witness table for Never);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin();
  uint64_t v15 = (char *)&v25 - v14;
  uint64_t v16 = type metadata accessor for ParameterResolutionRecord(0LL, AssociatedTypeWitness);
  uint64_t v17 = (void *)ParameterResolutionRecord.intent.getter(v16);
  v28[3] = &type metadata for PhoneCallDirectInvocationNLIntent;
  v28[4] = &protocol witness table for PhoneCallDirectInvocationNLIntent;
  v28[0] = swift_allocObject(&unk_419010, 120LL, 7LL);
  outlined init with copy of PhoneCallDirectInvocationNLIntent(a4, v28[0] + 16LL);
  uint64_t v18 = ParameterResolutionRecord.app.getter(v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, v25, v11);
  uint64_t v19 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v20 = (v19 + 40) & ~v19;
  uint64_t v21 = (char *)swift_allocObject(&unk_419038, v20 + v13, v19 | 7);
  uint64_t v22 = v26;
  *((void *)v21 + __swift_destroy_boxed_opaque_existential_1(v0 + 2) = v7;
  *((void *)v21 + 3) = v22;
  *((void *)v21 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v21[v20], v15, v11);
  uint64_t v23 = *(void (**)(void *, void *, uint64_t, uint64_t, uint64_t (*)(), char *))(*(void *)a2 + 248LL);
  swift_retain();
  v23( v17,  v28,  v18,  v27,  partial apply for closure #1 in closure #1 in CallingIntentContactNeedsDisambiguationFlowStrategy.parseDisambiguationResult(input:paginatedItems:resolveRecord:),  v21);
  swift_release(v18);

  swift_release(v21);
  return __swift_destroy_boxed_opaque_existential_1(v28);
}

uint64_t closure #1 in closure #1 in CallingIntentContactNeedsDisambiguationFlowStrategy.parseDisambiguationResult(input:paginatedItems:resolveRecord:)( void *a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(255LL);
  uint64_t v5 = type metadata accessor for IntentPromptAnswer(0LL, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v25 - v7;
  uint64_t v9 = type metadata accessor for DisambiguationResult(0LL, v5);
  __chkstk_darwin();
  uint64_t v26 = (char *)&v25 - v10;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v11 = type metadata accessor for Logger(0LL);
  uint64_t v12 = __swift_project_value_buffer(v11, (uint64_t)static Logger.siriPhone);
  uint64_t v13 = (os_log_s *)Logger.logObject.getter(v12);
  os_log_type_t v15 = static os_log_type_t.debug.getter(v13, v14);
  if (os_log_type_enabled(v13, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    uint64_t v25 = v9;
    uint64_t v17 = v16;
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl( &dword_0,  v13,  v15,  "#CallingIntentContactNeedsDisambiguationFlowStrategy updated contact slot",  v16,  2u);
    uint64_t v9 = v25;
    swift_slowDealloc(v17, -1LL, -1LL);
  }

  uint64_t v19 = CallingIntentContactNeedsDisambiguationFlowStrategy.resetStates()(v18);
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 344LL))(v19);
  if (v20)
  {
    uint64_t v21 = v20;
    *((void *)&v28 + 1) = type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for INPerson,  &OBJC_CLASS___INPerson_ptr);
    *(void *)&__int128 v27 = v21;
  }

  else
  {
    __int128 v27 = 0u;
    __int128 v28 = 0u;
  }

  IntentPromptAnswer.init(answeredValue:updatedIntent:)(&v27, a1, AssociatedTypeWitness);
  uint64_t v22 = v26;
  static DisambiguationResult.chosenItem(_:)(v8, v5);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v23 = type metadata accessor for CheckedContinuation( 0LL,  v9,  &type metadata for Never,  &protocol witness table for Never);
  return CheckedContinuation.resume(returning:)(v22, v23);
}

uint64_t CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForDisambiguation(paginatedItems:resolveRecord:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[23] = a3;
  _BYTE v4[24] = v3;
  v4[21] = a1;
  v4[22] = a2;
  v4[25] = *v3;
  uint64_t v5 = OUTLINED_FUNCTION_82_0();
  v4[26] = v5;
  v4[27] = OUTLINED_FUNCTION_23(*(void *)(v5 - 8));
  uint64_t v6 = OUTLINED_FUNCTION_113_3();
  v4[28] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v4[29] = v7;
  v4[30] = OUTLINED_FUNCTION_23(v7);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLContextUpdate?);
  v4[31] = v8;
  v4[32] = OUTLINED_FUNCTION_23(*(void *)(v8 - 8));
  uint64_t v9 = type metadata accessor for SiriKitDisambiguationItemPair(0LL);
  v4[33] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v4[34] = v10;
  v4[35] = OUTLINED_FUNCTION_8_30(v10);
  v4[36] = OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForDisambiguation(paginatedItems:resolveRecord:)()
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v2 = (uint64_t)(v1 + 16);
  uint64_t v3 = OUTLINED_FUNCTION_15_1();
  v1[37] = __swift_project_value_buffer(v3, (uint64_t)static Logger.siriPhone);
  uint64_t v4 = (os_log_s *)OUTLINED_FUNCTION_9();
  static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_6_9(v4))
  {
    uint64_t v5 = (_WORD *)OUTLINED_FUNCTION_1_0();
    OUTLINED_FUNCTION_47(v5);
    OUTLINED_FUNCTION_33_52( &dword_0,  v4,  v6,  "#CallingIntentContactNeedsDisambiguationFlowStrategy makePromptForDisambiguation");
    OUTLINED_FUNCTION_0_2(v0);
  }

  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PaginatedItemContainer<SiriKitDisambiguationItemPair>);
  v1[38] = v7;
  uint64_t v8 = PaginatedItemContainer.items.getter(v7);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    uint64_t v10 = v1[34];
    unint64_t v11 = v8 + ((*(unsigned __int8 *)(v10 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    os_log_type_t v60 = *(uint64_t (**)(void, unint64_t, void))(v10 + 16);
    uint64_t v61 = *(void *)(v10 + 72);
    do
    {
      uint64_t v12 = v60(v1[36], v11, v1[33]);
      SiriKitDisambiguationItemPair.rawItem.getter(v1 + 12, v12);
      type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for INPerson,  &OBJC_CLASS___INPerson_ptr);
      if ((swift_dynamicCast(v1 + 19, v1 + 12, &type metadata for Any[1]) & 1) == 0) {
        v1[19] = 0LL;
      }
      uint64_t v13 = (*(uint64_t (**)(void, void))(v10 + 8))(v1[36], v1[33]);
      uint64_t v14 = v1[19];
      if (v14)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v13);
        unint64_t v16 = *(void *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL));
        unint64_t v15 = *(void *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL));
        if (v16 >= v15 >> 1) {
          OUTLINED_FUNCTION_277_2(v15 > 1, v16 + 1);
        }
        uint64_t v17 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v14);
        specialized Array._endMutation()(v17, v18, v19, v20);
      }

      v11 += v61;
      --v9;
    }

    while (v9);
    uint64_t v2 = (uint64_t)(v1 + 16);
  }

  uint64_t v21 = v1[24];
  swift_bridgeObjectRelease();
  uint64_t v22 = (void *)(v21
                 + direct field offset for CallingIntentContactNeedsDisambiguationFlowStrategy.personsToDisambiguate);
  OUTLINED_FUNCTION_25_0((uint64_t)v22, v2, 1LL);
  *uint64_t v22 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  uint64_t v23 = PaginatedItemContainer.items.getter(v7);
  uint64_t v24 = *(void *)(v23 + 16);
  if (v24)
  {
    uint64_t v25 = v1[34];
    specialized ContiguousArray.reserveCapacity(_:)(v24);
    unint64_t v26 = v23 + ((*(unsigned __int8 *)(v25 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80));
    uint64_t v27 = *(void *)(v25 + 72);
    __int128 v28 = *(uint64_t (**)(uint64_t))(v25 + 16);
    do
    {
      uint64_t v29 = v1[35];
      uint64_t v30 = OUTLINED_FUNCTION_274_2();
      uint64_t v31 = v28(v30);
      uint64_t v32 = SiriKitDisambiguationItemPair.formattedItem.getter(v31);
      uint64_t v33 = OUTLINED_FUNCTION_11_20(v29, *(uint64_t (**)(uint64_t, uint64_t))(v25 + 8));
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v33);
      uint64_t v34 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v34);
      uint64_t v35 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v34, v32);
      specialized ContiguousArray._endMutation()(v35);
      v26 += v27;
      --v24;
    }

    while (v24);
  }

  uint64_t v36 = OUTLINED_FUNCTION_34_0();
  uint64_t v37 = *(uint64_t (**)(void))(*(void *)v1[24] + 320LL);
  int64_t v38 = ((uint64_t (*)(uint64_t))v37)(v36);
  unint64_t v39 = v37();
  specialized _arrayForceCast<A, B>(_:)(v39);
  OUTLINED_FUNCTION_34_0();
  if ((unint64_t)v38 >> 62)
  {
    if (v38 < 0) {
      uint64_t v59 = v38;
    }
    else {
      uint64_t v59 = v38 & 0xFFFFFFFFFFFFFF8LL;
    }
    OUTLINED_FUNCTION_124();
    uint64_t v40 = _CocoaArrayWrapper.endIndex.getter(v59);
    OUTLINED_FUNCTION_4_1();
  }

  else
  {
    uint64_t v40 = *(void *)((char *)&dword_10 + (v38 & 0xFFFFFFFFFFFFF8LL));
  }

  if (v40 <= 5 || (PhoneContactDisambiguationProperties.isHandleDisambiguation.getter(v38), (v41 & 1) != 0))
  {
    if ((OUTLINED_FUNCTION_6_6(v38) & 1) != 0) {
      OUTLINED_FUNCTION_201_5(v38);
    }
  }

  OUTLINED_FUNCTION_4_1();
  uint64_t v43 = v1[23];
  uint64_t v42 = v1[24];
  uint64_t v44 = type metadata accessor for SiriKitDisambiguationList(0LL);
  OUTLINED_FUNCTION_15_2(v44);
  uint64_t v45 = OUTLINED_FUNCTION_34_1();
  v1[39] = SiriKitDisambiguationList.init(rawItems:disambiguationItems:shouldReadItemsInVox:requestUnlockForEmptyOrDuplicateItems:)( v45,  v46,  v47,  0LL);
  unint64_t v48 = v37();
  specialized Sequence.compactMap<A>(_:)( (void *(*)(uint64_t *__return_ptr, uint64_t *))partial apply for closure #3 in CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForDisambiguation(paginatedItems:resolveRecord:),  v42,  v48);
  v1[40] = v49;
  OUTLINED_FUNCTION_62();
  uint64_t v50 = OUTLINED_FUNCTION_154_10();
  v1[41] = v50;
  *(void *)(v50 + ++*(void *)(v0 + 16) = v42;
  *(void *)(v50 + 24) = v43;
  uint64_t v51 = (void *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  v1[42] = v51;
  *uint64_t v51 = v1;
  v51[1] = CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForDisambiguation(paginatedItems:resolveRecord:);
  OUTLINED_FUNCTION_19_1();
  return withCheckedThrowingContinuation<A>(isolation:function:_:)( v52,  v53,  v54,  0xD00000000000003ALL,  v55,  v56,  v50,  v57);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  OUTLINED_FUNCTION_49_3();
  OUTLINED_FUNCTION_39_0(v2);
  *(void *)(v0 + 344) = v1;
  swift_task_dealloc();
  if (v1) {
    swift_errorRelease(v1);
  }
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_17_3();
}

{
  unint64_t *v0;
  os_log_s *v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  _WORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  os_log_type_t v18;
  _WORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t (*v37)(void);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v2 = v0[43];
  uint64_t v3 = swift_bridgeObjectRetain();
  if ((specialized Sequence.contains(where:)(v3, (char *)&dword_0 + 2) & 1) != 0
    && (OUTLINED_FUNCTION_201_5(v0[40]) & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    uint64_t v6 = OUTLINED_FUNCTION_254_4();
    Logger.logObject.getter(v6);
    OUTLINED_FUNCTION_234();
    if (OUTLINED_FUNCTION_6_9(v1))
    {
      uint64_t v7 = (_WORD *)OUTLINED_FUNCTION_1_0();
      OUTLINED_FUNCTION_47(v7);
      OUTLINED_FUNCTION_33_52( &dword_0,  v1,  v8,  "#CallingIntentContactNeedsDisambiguationFlowStrategy making disambiguation output for emergency.");
      OUTLINED_FUNCTION_0_2(v2);
    }

    OUTLINED_FUNCTION_198_0();
    OUTLINED_FUNCTION_107_10();
    uint64_t v9 = OUTLINED_FUNCTION_93_0();
    uint64_t v10 = OUTLINED_FUNCTION_70_9(v9);
    unint64_t v11 = ParameterResolutionRecord.app.getter(v10);
    v0[45] = OUTLINED_FUNCTION_166_4(v11);
    uint64_t v12 = (void *)swift_task_alloc(dword_44150C);
    uint64_t v13 = OUTLINED_FUNCTION_122_12(v12);
    return OUTLINED_FUNCTION_89_20(v13, v14, v15, v16);
  }

  uint64_t v4 = OUTLINED_FUNCTION_199_4();
  uint64_t v5 = OUTLINED_FUNCTION_62();
  if ((v4 & 1) != 0) {
    goto LABEL_5;
  }
  Logger.logObject.getter(v5);
  uint64_t v18 = OUTLINED_FUNCTION_6_0();
  if (OUTLINED_FUNCTION_27_1(v18))
  {
    uint64_t v19 = (_WORD *)OUTLINED_FUNCTION_1_0();
    OUTLINED_FUNCTION_47(v19);
    OUTLINED_FUNCTION_5_13( &dword_0,  v20,  v21,  "#CallingIntentContactNeedsDisambiguationFlowStrategy making disambiguation output for non emergency.");
    OUTLINED_FUNCTION_0_2(v2);
  }

  OUTLINED_FUNCTION_105_10();
  OUTLINED_FUNCTION_107_10();
  uint64_t v22 = OUTLINED_FUNCTION_93_0();
  uint64_t v23 = OUTLINED_FUNCTION_70_9(v22);
  uint64_t v24 = OUTLINED_FUNCTION_260_0(v23);
  uint64_t v25 = OUTLINED_FUNCTION_178_3(v24);
  unint64_t v26 = OUTLINED_FUNCTION_165_3(v25);
  uint64_t v27 = ParameterIdentifier.name.getter(v26);
  OUTLINED_FUNCTION_117_12(v27, v28, v29, v30, v31, v32, v33, v34, v38, v39, v40);
  uint64_t v35 = OUTLINED_FUNCTION_256_4();
  OUTLINED_FUNCTION_64_27(v35);
  uint64_t v36 = (void *)OUTLINED_FUNCTION_70_22();
  v0[52] = (unint64_t)v36;
  OUTLINED_FUNCTION_65_20(v36);
  return OUTLINED_FUNCTION_90_20(v37);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  OUTLINED_FUNCTION_49_3();
  OUTLINED_FUNCTION_39_0(v2);
  *(void *)(v0 + 376) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_17_3();
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v0 = OUTLINED_FUNCTION_114_11();
  OUTLINED_FUNCTION_122_0(v0, &demangling cache variable for type metadata for NLContextUpdate?);
  OUTLINED_FUNCTION_151_8();
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  uint64_t v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return OUTLINED_FUNCTION_6_17(v1);
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v10;
  uint64_t v10 = (void *)*v1;
  uint64_t v2 = v10;
  OUTLINED_FUNCTION_39_0(&v10);
  v2[53] = v0;
  swift_task_dealloc();
  uint64_t v3 = (void *)v2[51];
  uint64_t v4 = (void *)v2[49];
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_77_0();

  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_150(v5, &demangling cache variable for type metadata for ContactResolutionSnippetGenerating?);
  OUTLINED_FUNCTION_11_12();
  OUTLINED_FUNCTION_19_1();
  return swift_task_switch(v6, v7, v8);
}

{
  uint64_t v0;
  void *v1;
  os_log_s *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  _WORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  os_log_type_t v21;
  _WORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t (*v40)(void);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v3 = v1[32];
  uint64_t v4 = type metadata accessor for NLContextUpdate(0LL);
  OUTLINED_FUNCTION_88(v3, 1LL, v5, v4);
  uint64_t v6 = swift_bridgeObjectRetain();
  if ((OUTLINED_FUNCTION_6_6(v6) & 1) != 0 && (OUTLINED_FUNCTION_201_5(v1[40]) & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    uint64_t v9 = OUTLINED_FUNCTION_254_4();
    Logger.logObject.getter(v9);
    OUTLINED_FUNCTION_234();
    if (OUTLINED_FUNCTION_6_9(v2))
    {
      uint64_t v10 = (_WORD *)OUTLINED_FUNCTION_1_0();
      OUTLINED_FUNCTION_47(v10);
      OUTLINED_FUNCTION_33_52( &dword_0,  v2,  v11,  "#CallingIntentContactNeedsDisambiguationFlowStrategy making disambiguation output for emergency.");
      OUTLINED_FUNCTION_0_2(v0);
    }

    OUTLINED_FUNCTION_198_0();
    OUTLINED_FUNCTION_107_10();
    uint64_t v12 = OUTLINED_FUNCTION_93_0();
    uint64_t v13 = OUTLINED_FUNCTION_70_9(v12);
    uint64_t v14 = ParameterResolutionRecord.app.getter(v13);
    v1[45] = OUTLINED_FUNCTION_166_4(v14);
    unint64_t v15 = (void *)swift_task_alloc(dword_44150C);
    unint64_t v16 = OUTLINED_FUNCTION_122_12(v15);
    return OUTLINED_FUNCTION_89_20(v16, v17, v18, v19);
  }

  uint64_t v7 = OUTLINED_FUNCTION_199_4();
  uint64_t v8 = OUTLINED_FUNCTION_62();
  if ((v7 & 1) != 0) {
    goto LABEL_5;
  }
  Logger.logObject.getter(v8);
  uint64_t v21 = OUTLINED_FUNCTION_6_0();
  if (OUTLINED_FUNCTION_27_1(v21))
  {
    uint64_t v22 = (_WORD *)OUTLINED_FUNCTION_1_0();
    OUTLINED_FUNCTION_47(v22);
    OUTLINED_FUNCTION_5_13( &dword_0,  v23,  v24,  "#CallingIntentContactNeedsDisambiguationFlowStrategy making disambiguation output for non emergency.");
    OUTLINED_FUNCTION_0_2(v0);
  }

  OUTLINED_FUNCTION_105_10();
  OUTLINED_FUNCTION_107_10();
  uint64_t v25 = OUTLINED_FUNCTION_93_0();
  unint64_t v26 = OUTLINED_FUNCTION_70_9(v25);
  uint64_t v27 = OUTLINED_FUNCTION_260_0(v26);
  __int128 v28 = OUTLINED_FUNCTION_178_3(v27);
  uint64_t v29 = OUTLINED_FUNCTION_165_3(v28);
  uint64_t v30 = ParameterIdentifier.name.getter(v29);
  OUTLINED_FUNCTION_117_12(v30, v31, v32, v33, v34, v35, v36, v37, v41, v42, v43);
  int64_t v38 = OUTLINED_FUNCTION_256_4();
  OUTLINED_FUNCTION_64_27(v38);
  unint64_t v39 = (void *)OUTLINED_FUNCTION_70_22();
  v1[52] = v39;
  OUTLINED_FUNCTION_65_20(v39);
  return OUTLINED_FUNCTION_90_20(v40);
}

{
  uint64_t v0;
  uint64_t v1;
  OUTLINED_FUNCTION_50_11();
  uint64_t v1 = OUTLINED_FUNCTION_114_11();
  OUTLINED_FUNCTION_122_0(v1, &demangling cache variable for type metadata for NLContextUpdate?);
  OUTLINED_FUNCTION_99_14();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  return OUTLINED_FUNCTION_12_4(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  OUTLINED_FUNCTION_50_11();
  uint64_t v1 = *(void *)(v0 + 424);
  *(void *)(v0 + 160) = v1;
  uint64_t v2 = *(void *)(v0 + 216);
  swift_errorRetain(v1);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
  if (swift_dynamicCast(v2, v0 + 160, v3))
  {
    uint64_t v4 = *(void *)(v0 + 216);
    if (swift_getEnumCaseMultiPayload(v4, *(void *)(v0 + 208)) == 4)
    {
      swift_errorRelease(*(void *)(v0 + 424));
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_34_0();
      OUTLINED_FUNCTION_39();
      uint64_t v5 = (void *)swift_task_alloc(dword_441504);
      *(void *)(v0 + 43__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v5;
      _WORD *v5 = v0;
      v5[1] = CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForDisambiguation(paginatedItems:resolveRecord:);
      OUTLINED_FUNCTION_77_22();
      return CallingIntentContactNeedsDisambiguationFlowStrategy.makeLegacyPromptForDisambiguation(resolveRecord:disambiguationList:)( v6,  v7,  v8);
    }

    outlined destroy of UUID?(*(void *)(v0 + 256), &demangling cache variable for type metadata for NLContextUpdate?);
    OUTLINED_FUNCTION_22();
    outlined destroy of MainFlow(v4, type metadata accessor for PhoneError);
  }

  else
  {
    outlined destroy of UUID?(*(void *)(v0 + 256), &demangling cache variable for type metadata for NLContextUpdate?);
    OUTLINED_FUNCTION_38_1();
  }

  OUTLINED_FUNCTION_227_4();
  OUTLINED_FUNCTION_99_14();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  return OUTLINED_FUNCTION_12_4(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  uint64_t v1;
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_73_6();
  *(void *)(v1 + 440) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v0 = OUTLINED_FUNCTION_114_11();
  OUTLINED_FUNCTION_122_0(v0, &demangling cache variable for type metadata for NLContextUpdate?);
  OUTLINED_FUNCTION_227_4();
  OUTLINED_FUNCTION_151_8();
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  uint64_t v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return OUTLINED_FUNCTION_6_17(v1);
}

{
  uint64_t v0;
  uint64_t v1;
  OUTLINED_FUNCTION_50_11();
  uint64_t v1 = OUTLINED_FUNCTION_114_11();
  OUTLINED_FUNCTION_122_0(v1, &demangling cache variable for type metadata for NLContextUpdate?);
  OUTLINED_FUNCTION_227_4();
  OUTLINED_FUNCTION_99_14();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  return OUTLINED_FUNCTION_12_4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t closure #3 in CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForDisambiguation(paginatedItems:resolveRecord:)@<X0>( void *a1@<X1>, void *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Locale(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v17[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  Class isa = INPerson.mutableCopyOrCrash()().super.isa;
  uint64_t v9 = a1 + 3;
  uint64_t v11 = a1[6];
  uint64_t v10 = a1[7];
  __swift_project_boxed_opaque_existential_1(v9, v11);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v10 + 8))(v17, v11, v10);
  uint64_t v12 = v18;
  uint64_t v13 = v19;
  __swift_project_boxed_opaque_existential_1(v17, v18);
  dispatch thunk of DeviceState.siriLocale.getter(v12, v13);
  uint64_t v14 = INPerson.withTranslatedHandleLabel(locale:)();

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1(v17);
  *a2 = v14;
  return result;
}

uint64_t CallingIntentContactNeedsDisambiguationFlowStrategy.makeLegacyPromptForDisambiguation(resolveRecord:disambiguationList:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[221] = v3;
  v4[215] = a3;
  v4[209] = a2;
  v4[203] = a1;
  uint64_t v5 = *v3;
  uint64_t v6 = OUTLINED_FUNCTION_82_0();
  v4[222] = v6;
  v4[223] = OUTLINED_FUNCTION_23(*(void *)(v6 - 8));
  uint64_t v7 = type metadata accessor for NLContextUpdate(0LL);
  v4[224] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v4[225] = v8;
  v4[226] = OUTLINED_FUNCTION_23(v8);
  uint64_t v9 = type metadata accessor for TemplatingResult(0LL);
  v4[227] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v4[228] = v10;
  v4[229] = OUTLINED_FUNCTION_8_30(v10);
  v4[230] = OUTLINED_FUNCTION_28();
  v4[231] = *(void *)(v5 + 272);
  OUTLINED_FUNCTION_107_10();
  v4[232] = *(void *)(v5 + 264);
  uint64_t v11 = OUTLINED_FUNCTION_93_0();
  uint64_t v12 = OUTLINED_FUNCTION_70_9(v11);
  v4[233] = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  v4[234] = v13;
  v4[235] = *(void *)(v13 + 64);
  v4[236] = OUTLINED_FUNCTION_28();
  v4[237] = OUTLINED_FUNCTION_28();
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLContextUpdate?);
  v4[238] = v14;
  v4[239] = OUTLINED_FUNCTION_8_30(*(void *)(v14 - 8));
  v4[240] = OUTLINED_FUNCTION_28();
  v4[241] = OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_17_3();
}

uint64_t CallingIntentContactNeedsDisambiguationFlowStrategy.makeLegacyPromptForDisambiguation(resolveRecord:disambiguationList:)()
{
  uint64_t v1 = v0[221];
  uint64_t v2 = v0[215];
  uint64_t v3 = v0[209];
  uint64_t v4 = (void *)OUTLINED_FUNCTION_111_5();
  v0[242] = v4;
  void v4[2] = v1;
  v4[3] = v3;
  void v4[4] = v2;
  uint64_t v5 = (void *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  v0[243] = v5;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SAAceView]);
  void *v5 = v0;
  v5[1] = CallingIntentContactNeedsDisambiguationFlowStrategy.makeLegacyPromptForDisambiguation(resolveRecord:disambiguationList:);
  OUTLINED_FUNCTION_28_59();
  OUTLINED_FUNCTION_77_22();
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v6, v7, v8, v9, v10, v11, v12, v13);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  OUTLINED_FUNCTION_49_3();
  OUTLINED_FUNCTION_39_0(v2);
  *(void *)(v0 + 195__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v1;
  swift_task_dealloc();
  if (!v1) {
    swift_task_dealloc();
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_17_3();
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)CallingIntentContactNeedsDisambiguationFlowStrategy.makeLegacyPromptForDisambiguation(resolveRecord:disambiguationList:));
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v1 = v0[240];
  uint64_t v2 = v0[224];
  outlined init with copy of PhoneCallNLIntent?( v0[241],  v1,  &demangling cache variable for type metadata for NLContextUpdate?);
  if (__swift_getEnumTagSinglePayload(v1, 1LL, v2) == 1)
  {
    uint64_t v3 = v0[223];
    uint64_t v4 = v0[222];
    uint64_t v5 = swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_122_0(v5, &demangling cache variable for type metadata for NLContextUpdate?);
    swift_storeEnumTagMultiPayload(v3, v4, 18LL);
    lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError,  type metadata accessor for PhoneError,  (uint64_t)&protocol conformance descriptor for PhoneError);
    v0[250] = OUTLINED_FUNCTION_4_4(v4, v6);
    PhoneError.logged()(v7);
    outlined destroy of MainFlow(v3, type metadata accessor for PhoneError);
    swift_willThrow(v8, v9, v10, v11, v12, v13, v14, v15);
    return swift_asyncLet_finish( v0 + 2,  v0[230],  CallingIntentContactNeedsDisambiguationFlowStrategy.makeLegacyPromptForDisambiguation(resolveRecord:disambiguationList:),  v0 + 182);
  }

  else
  {
    (*(void (**)(void, void, void))(v0[225] + 32LL))(v0[226], v0[240], v0[224]);
    uint64_t v17 = [objc_allocWithZone(SAAceConfirmationContext) init];
    v0[248] = v17;
    [v17 setReason:SAAceConfirmationReasonCONFIRM_CONTACTValue];
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v19 = OUTLINED_FUNCTION_8_2(v18, 40LL);
    *(_OWORD *)(v19 + ++*(void *)(v0 + 16) = xmmword_31FE60;
    *(void *)(v19 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v17;
    uint64_t v24 = v19;
    specialized Array._endMutation()(v19, v20, v21, v22);
    uint64_t v23 = v17;
    NLContextUpdate.conversationStateAttachments.setter(v24);
    return swift_asyncLet_get_throwing( v0 + 2,  v0[230],  CallingIntentContactNeedsDisambiguationFlowStrategy.makeLegacyPromptForDisambiguation(resolveRecord:disambiguationList:),  v0 + 198);
  }

{
  uint64_t v0;
  uint64_t v1;
  *(void *)(v1 + 199__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v0;
  if (v0) {
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  OUTLINED_FUNCTION_95_19();
  uint64_t v18 = *(void *)(v0 + 1960);
  uint64_t v19 = *(void **)(v0 + 1984);
  uint64_t v1 = *(void *)(v0 + 1912);
  uint64_t v17 = *(void *)(v0 + 1832);
  uint64_t v20 = *(void *)(v0 + 1824);
  uint64_t v14 = *(void *)(v0 + 1800);
  unint64_t v15 = *(void *)(v0 + 1792);
  unint64_t v16 = *(void *)(v0 + 1808);
  uint64_t v2 = *(void *)(v0 + 1768);
  uint64_t v3 = *(void **)(v0 + 1624);
  (*(void (**)(void))(v20 + 16))();
  __swift_project_boxed_opaque_existential_1((void *)(v2 + 24), *(void *)(v2 + 48));
  OUTLINED_FUNCTION_7_3();
  __swift_project_boxed_opaque_existential_1((void *)(v2 + 24), *(void *)(v2 + 48));
  OUTLINED_FUNCTION_7_3();
  uint64_t v4 = *(void *)(v0 + 1440);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 1416), v4);
  uint64_t v5 = dispatch thunk of DeviceState.isTextToSpeechEnabled.getter(v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v1, v16, v15);
  __swift_storeEnumTagSinglePayload(v1, 0LL, 1LL, v15);
  uint64_t v6 = type metadata accessor for AceOutput(0LL);
  *(_OWORD *)(v0 + 1496) = 0u;
  *(_OWORD *)(v0 + 151__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0u;
  *(void *)(v0 + 1528) = 0LL;
  v3[3] = v6;
  v3[4] = &protocol witness table for AceOutput;
  __swift_allocate_boxed_opaque_existential_1(v3);
  static AceOutputHelper.makeClarificationViewOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)( v17,  v0 + 1336,  v5 & 1,  v18,  1LL,  0LL,  v1);
  swift_bridgeObjectRelease();

  OUTLINED_FUNCTION_150(v7, &demangling cache variable for type metadata for FlowActivity?);
  OUTLINED_FUNCTION_93_1(v8, &demangling cache variable for type metadata for NLContextUpdate?);
  OUTLINED_FUNCTION_76_1();
  OUTLINED_FUNCTION_167_2(v20);
  OUTLINED_FUNCTION_11_20(v16, *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8));
  OUTLINED_FUNCTION_91_16();
  OUTLINED_FUNCTION_82_17();
  return swift_asyncLet_finish(v9, v10, v11, v12);
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)CallingIntentContactNeedsDisambiguationFlowStrategy.makeLegacyPromptForDisambiguation(resolveRecord:disambiguationList:));
}

{
  OUTLINED_FUNCTION_233_3();
  OUTLINED_FUNCTION_274_4();
  return OUTLINED_FUNCTION_11_16();
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)CallingIntentContactNeedsDisambiguationFlowStrategy.makeLegacyPromptForDisambiguation(resolveRecord:disambiguationList:));
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  OUTLINED_FUNCTION_21_0();
  OUTLINED_FUNCTION_109_11();
  OUTLINED_FUNCTION_31_1(v0);
  OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_14_3();
  OUTLINED_FUNCTION_29_17();
  OUTLINED_FUNCTION_25();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return OUTLINED_FUNCTION_2_38(v1);
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)CallingIntentContactNeedsDisambiguationFlowStrategy.makeLegacyPromptForDisambiguation(resolveRecord:disambiguationList:));
}

{
  OUTLINED_FUNCTION_233_3();
  OUTLINED_FUNCTION_274_4();
  return OUTLINED_FUNCTION_11_16();
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)CallingIntentContactNeedsDisambiguationFlowStrategy.makeLegacyPromptForDisambiguation(resolveRecord:disambiguationList:));
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)CallingIntentContactNeedsDisambiguationFlowStrategy.makeLegacyPromptForDisambiguation(resolveRecord:disambiguationList:));
}

{
  OUTLINED_FUNCTION_233_3();
  OUTLINED_FUNCTION_274_4();
  return OUTLINED_FUNCTION_11_16();
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)CallingIntentContactNeedsDisambiguationFlowStrategy.makeLegacyPromptForDisambiguation(resolveRecord:disambiguationList:));
}

uint64_t CallingIntentContactNeedsDisambiguationFlowStrategy.makeLegacyPromptForDisambiguation(resolveRecord:disambiguationList:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24)
{
  uint64_t v25 = v24[237];
  uint64_t v52 = v24[241];
  uint64_t v53 = v24[236];
  uint64_t v26 = v24[235];
  uint64_t v27 = v24[234];
  uint64_t v28 = v24[233];
  uint64_t v29 = v24[232];
  uint64_t v48 = v24[231];
  uint64_t v55 = v24[227];
  uint64_t v56 = v24[230];
  uint64_t v30 = v24[221];
  uint64_t v54 = v24[215];
  uint64_t v50 = v24[209];
  uint64_t v51 = v24[238];
  v24[245] = v24[197];
  uint64_t v49 = *(void (**)(uint64_t))(v27 + 16);
  v49(v25);
  uint64_t v31 = *(unsigned __int8 *)(v27 + 80);
  uint64_t v32 = (v31 + 40) & ~v31;
  uint64_t v33 = v32 + v26;
  uint64_t v34 = v31 | 7;
  uint64_t v35 = (char *)swift_allocObject(&unk_418EF8, v33, v31 | 7);
  v24[246] = v35;
  *((void *)v35 + __swift_destroy_boxed_opaque_existential_1(v0 + 2) = v29;
  *((void *)v35 + 3) = v48;
  *((void *)v35 + 4) = v30;
  uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 32);
  v36(&v35[v32], v25, v28);
  OUTLINED_FUNCTION_22_4();
  swift_retain();
  swift_asyncLet_begin( v24 + 82,  0LL,  v51,  &async function pointer to partial apply for implicit closure #1 in CallingIntentContactNeedsDisambiguationFlowStrategy.makeLegacyPromptForDisambiguation(resolveRecord:disambiguationList:),  v35);
  ((void (*)(uint64_t, uint64_t, uint64_t))v49)(v53, v50, v28);
  unint64_t v37 = (v33 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  int64_t v38 = (char *)swift_allocObject(&unk_418F20, v37 + 8, v34);
  v24[247] = v38;
  *((void *)v38 + __swift_destroy_boxed_opaque_existential_1(v0 + 2) = v29;
  *((void *)v38 + 3) = v48;
  *((void *)v38 + 4) = v30;
  v36(&v38[v32], v53, v28);
  *(void *)&v38[v37] = v54;
  OUTLINED_FUNCTION_22_4();
  swift_retain();
  swift_retain();
  swift_asyncLet_begin( v24 + 2,  0LL,  v55,  &async function pointer to partial apply for implicit closure #2 in CallingIntentContactNeedsDisambiguationFlowStrategy.makeLegacyPromptForDisambiguation(resolveRecord:disambiguationList:),  v38);
  OUTLINED_FUNCTION_82_17();
  return swift_asyncLet_get( v39,  v40,  v41,  v42,  v43,  v44,  v45,  v46,  v48,  v29,  v49,  v50,  v51,  v24 + 82,  v52,  v53,  v54,  v55,  v56,  v24 + 2,  v24 + 172,  a22,  a23,  a24);
}

#error "2F6528: call analysis failed (funcsize=37)"
#error "2F65A8: call analysis failed (funcsize=32)"
uint64_t CallingIntentContactNeedsDisambiguationFlowStrategy.makeLegacyPromptForDisambiguation(resolveRecord:disambiguationList:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  OUTLINED_FUNCTION_50_11();
  uint64_t v1 = *(void *)(v0 + 1808);
  uint64_t v2 = *(void *)(v0 + 1800);
  uint64_t v3 = *(void *)(v0 + 1792);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  OUTLINED_FUNCTION_274_4();
  OUTLINED_FUNCTION_77_22();
  return swift_asyncLet_finish(v4, v5, v6, v7);
}

#error "2F6700: call analysis failed (funcsize=37)"
uint64_t closure #1 in CallingIntentContactNeedsDisambiguationFlowStrategy.makeLegacyPromptForDisambiguation(resolveRecord:disambiguationList:)( uint64_t a1,  uint64_t *a2,  uint64_t a3,  uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t AssociatedConformanceWitness;
  BOOL v35;
  uint64_t v36;
  char *v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t AssociatedTypeWitness;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void v50[3];
  uint64_t v51;
  uint64_t v52;
  uint64_t v49 = a4;
  uint64_t v47 = a1;
  uint64_t v5 = *a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<[SAAceView], Error>);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v45 = v6;
  uint64_t v46 = v8;
  __chkstk_darwin();
  uint64_t v43 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for ParameterIdentifier(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = *(void *)(v5 + 264);
  unint64_t v15 = *(void *)(*(void *)(*(void *)(v5 + 272) + 8LL) + 16LL);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(0LL);
  uint64_t v48 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin();
  uint64_t v44 = (char *)&v39 - v16;
  dispatch thunk of RCHFlowDelegate.makeAceViewProvider()(v14, v15);
  uint64_t v17 = swift_getAssociatedTypeWitness(255LL);
  uint64_t v18 = type metadata accessor for ParameterResolutionRecord(0LL, v17);
  uint64_t v41 = ParameterResolutionRecord.app.getter(v18);
  uint64_t v19 = ParameterResolutionRecord.parameter.getter(v18);
  uint64_t v20 = ParameterIdentifier.name.getter(v19);
  uint64_t v39 = v21;
  uint64_t v40 = v20;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v22 = (void *)ParameterResolutionRecord.intent.getter(v18);
  uint64_t v23 = a2[6];
  uint64_t v24 = a2[7];
  __swift_project_boxed_opaque_existential_1(a2 + 3, v23);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v24 + 8))(v50, v23, v24);
  uint64_t v25 = v51;
  uint64_t v26 = v52;
  __swift_project_boxed_opaque_existential_1(v50, v51);
  LOBYTE(v2__swift_destroy_boxed_opaque_existential_1(v0 + 5) = DeviceState.isAuthenticatedForPhone.getter(v25, v26);
  __swift_destroy_boxed_opaque_existential_1(v50);
  uint64_t v27 = v43;
  uint64_t v28 = v45;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v43, v47, v45);
  uint64_t v29 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v30 = (v29 + 16) & ~v29;
  uint64_t v31 = swift_allocObject(&unk_418F98, v30 + v46, v29 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v31 + v30, v27, v28);
  uint64_t v32 = v15;
  uint64_t v33 = AssociatedTypeWitness;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v32, v14, AssociatedTypeWitness);
  uint64_t v35 = (v25 & 1) == 0;
  uint64_t v36 = v41;
  unint64_t v37 = v44;
  dispatch thunk of AceViewProviding.makeAceViewsForResolveNeedsDisambiguation(app:parameterName:intent:utteranceViews:disambiguationList:deviceIsLocked:_:)( v41,  v40,  v39,  v22,  _swiftEmptyArrayStorage,  v49,  v35,  partial apply for closure #1 in closure #3 in ParticipantOutputProvider.makeContactDisambiguationOutput(app:intent:intentResolutionResult:disambiguationList:),  v31,  v33,  AssociatedConformanceWitness);
  swift_release(v36);
  swift_bridgeObjectRelease();

  swift_release(v31);
  return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v37, v33);
}

uint64_t implicit closure #1 in CallingIntentContactNeedsDisambiguationFlowStrategy.makeLegacyPromptForDisambiguation(resolveRecord:disambiguationList:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  __int128 v3[2] = a1;
  return swift_task_switch( implicit closure #1 in CallingIntentContactNeedsDisambiguationFlowStrategy.makeLegacyPromptForDisambiguation(resolveRecord:disambiguationList:),  0LL,  0LL);
}

uint64_t implicit closure #1 in CallingIntentContactNeedsDisambiguationFlowStrategy.makeLegacyPromptForDisambiguation(resolveRecord:disambiguationList:)()
{
  uint64_t v1 = OUTLINED_FUNCTION_154_10();
  *(void *)(v0 + 40) = v1;
  *(_OWORD *)(v1 + ++*(void *)(v0 + 16) = *(_OWORD *)(v0 + 24);
  uint64_t v2 = (void *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(void *)(v0 + 48) = v2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLContextUpdate?);
  void *v2 = v0;
  v2[1] = implicit closure #1 in CallingIntentContactNeedsDisambiguationFlowStrategy.makeLegacyPromptForDisambiguation(resolveRecord:disambiguationList:);
  OUTLINED_FUNCTION_28_59();
  OUTLINED_FUNCTION_149_8();
  return withCheckedContinuation<A>(isolation:function:_:)();
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  OUTLINED_FUNCTION_14_1(*(void *)(*(void *)v0 + 48LL));
  OUTLINED_FUNCTION_23_3();
  uint64_t v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return OUTLINED_FUNCTION_3_0(v1);
}

void closure #4 in CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForDisambiguation(paginatedItems:resolveRecord:)( uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v45 = a5;
  uint64_t v46 = a6;
  uint64_t v43 = a1;
  uint64_t v6 = *a2;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a4);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v41 = v7;
  uint64_t v42 = v9;
  __chkstk_darwin();
  uint64_t v39 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v38 = OUTLINED_FUNCTION_113_3();
  uint64_t v11 = *(void *)(v38 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v14 = v13 - v12;
  uint64_t v16 = v6 + 264;
  uint64_t v15 = *(void *)(v6 + 264);
  uint64_t v17 = *(void *)(*(void *)(*(void *)(v16 + 8) + 8LL) + 16LL);
  uint64_t v40 = OUTLINED_FUNCTION_207_4(0LL);
  uint64_t v44 = *(void *)(v40 - 8);
  __chkstk_darwin();
  uint64_t v19 = (char *)&v35 - v18;
  dispatch thunk of RCHFlowDelegate.makeNLContextProvider()(v15, v17);
  uint64_t v20 = OUTLINED_FUNCTION_207_4(255LL);
  uint64_t v21 = OUTLINED_FUNCTION_70_9(v20);
  uint64_t v37 = ParameterResolutionRecord.intent.getter(v21);
  uint64_t v22 = ParameterResolutionRecord.parameter.getter(v21);
  uint64_t v36 = ParameterIdentifier.name.getter(v22);
  uint64_t v24 = v23;
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v14, v38);
  uint64_t v25 = (void *)ParameterResolutionRecord.result.getter(v21);
  uint64_t v26 = v39;
  uint64_t v27 = v41;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v39, v43, v41);
  uint64_t v28 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v29 = (v28 + 16) & ~v28;
  uint64_t v30 = swift_allocObject(v45, v29 + v42, v28 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v30 + v29, v26, v27);
  uint64_t v31 = v15;
  uint64_t v32 = v40;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v17, v31, v40);
  uint64_t v34 = (void *)v37;
  dispatch thunk of NLContextProviding.makeNeedsDisambiguationContextFor(intent:parameter:resolutionResult:_:)( v37,  v36,  v24,  v25,  v46,  v30,  v32,  AssociatedConformanceWitness);

  OUTLINED_FUNCTION_4_1();
  swift_release(v30);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v19, v32);
  OUTLINED_FUNCTION_7_5();
}

uint64_t closure #1 in closure #4 in CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForDisambiguation(paginatedItems:resolveRecord:)( uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = v5 - v4;
  uint64_t v7 = OUTLINED_FUNCTION_98();
  outlined init with copy of PhoneCallNLIntent?( v7,  v8,  &demangling cache variable for type metadata for NLContextUpdate?);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(a3);
  return CheckedContinuation.resume(returning:)(v6, v9);
}

uint64_t implicit closure #2 in CallingIntentContactNeedsDisambiguationFlowStrategy.makeLegacyPromptForDisambiguation(resolveRecord:disambiguationList:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v4[4] = a3;
  void v4[5] = a4;
  void v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch( implicit closure #2 in CallingIntentContactNeedsDisambiguationFlowStrategy.makeLegacyPromptForDisambiguation(resolveRecord:disambiguationList:),  0LL,  0LL);
}

uint64_t implicit closure #2 in CallingIntentContactNeedsDisambiguationFlowStrategy.makeLegacyPromptForDisambiguation(resolveRecord:disambiguationList:)()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = OUTLINED_FUNCTION_111_5();
  *(void *)(v0 + 48) = v2;
  *(_OWORD *)(v2 + ++*(void *)(v0 + 16) = *(_OWORD *)(v0 + 24);
  *(void *)(v2 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v1;
  uint64_t v3 = (void *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(void *)(v0 + 56) = v3;
  type metadata accessor for TemplatingResult(0LL);
  *uint64_t v3 = v0;
  v3[1] = implicit closure #2 in CallingIntentContactNeedsDisambiguationFlowStrategy.makeLegacyPromptForDisambiguation(resolveRecord:disambiguationList:);
  OUTLINED_FUNCTION_28_59();
  OUTLINED_FUNCTION_149_8();
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v4, v5, v6, v7, v8, v9, v10, v11);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  OUTLINED_FUNCTION_49_3();
  OUTLINED_FUNCTION_39_0(v3);
  *(void *)(v0 + 64) = v1;
  swift_task_dealloc();
  if (v1)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_17_3();
  }

  else
  {
    swift_task_dealloc();
    return OUTLINED_FUNCTION_6_17(*(uint64_t (**)(void))(v2 + 8));
  }

uint64_t closure #3 in implicit closure #2 in CallingIntentContactNeedsDisambiguationFlowStrategy.makeLegacyPromptForDisambiguation(resolveRecord:disambiguationList:)( uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v49 = a4;
  uint64_t v47 = a1;
  uint64_t v5 = *a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<TemplatingResult, Error>);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v45 = v6;
  uint64_t v46 = v8;
  __chkstk_darwin();
  uint64_t v43 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for ParameterIdentifier(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = *(void *)(v5 + 264);
  uint64_t v15 = *(void *)(*(void *)(*(void *)(v5 + 272) + 8LL) + 16LL);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(0LL);
  uint64_t v48 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin();
  uint64_t v44 = (char *)&v39 - v16;
  dispatch thunk of RCHFlowDelegate.makeDialogTemplating()(v14, v15);
  uint64_t v17 = swift_getAssociatedTypeWitness(255LL);
  uint64_t v18 = type metadata accessor for ParameterResolutionRecord(0LL, v17);
  uint64_t v41 = ParameterResolutionRecord.app.getter(v18);
  uint64_t v19 = ParameterResolutionRecord.parameter.getter(v18);
  uint64_t v20 = ParameterIdentifier.name.getter(v19);
  uint64_t v39 = v21;
  uint64_t v40 = v20;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v22 = (void *)ParameterResolutionRecord.result.getter(v18);
  uint64_t v23 = a2 + 3;
  uint64_t v24 = a2[6];
  uint64_t v25 = a2[7];
  __swift_project_boxed_opaque_existential_1(v23, v24);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v25 + 8))(v50, v24, v25);
  uint64_t v26 = v51;
  uint64_t v27 = v52;
  __swift_project_boxed_opaque_existential_1(v50, v51);
  LOBYTE(v2__swift_destroy_boxed_opaque_existential_1(v0 + 5) = DeviceState.isAuthenticatedForPhone.getter(v26, v27);
  __swift_destroy_boxed_opaque_existential_1(v50);
  uint64_t v28 = (void *)ParameterResolutionRecord.intent.getter(v18);
  uint64_t v29 = v43;
  uint64_t v30 = v45;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v43, v47, v45);
  uint64_t v31 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v32 = (v31 + 16) & ~v31;
  uint64_t v33 = swift_allocObject(&unk_418F48, v32 + v46, v31 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v33 + v32, v29, v30);
  uint64_t v34 = AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v15, v14, AssociatedTypeWitness);
  uint64_t v36 = v41;
  uint64_t v37 = v44;
  dispatch thunk of DialogTemplating.makeParameterValueDisambiguationDialog(app:parameterName:intentResolutionResult:disambiguationList:deviceIsLocked:intent:_:)( v41,  v40,  v39,  v22,  v49,  (v25 & 1) == 0,  v28,  partial apply for closure #1 in closure #3 in implicit closure #2 in CallingIntentContactNeedsDisambiguationFlowStrategy.makeLegacyPromptForDisambiguation(resolveRecord:disambiguationList:),  v33,  v34,  AssociatedConformanceWitness);
  swift_release(v36);
  swift_bridgeObjectRelease();

  swift_release(v33);
  return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v37, v34);
}

uint64_t closure #1 in closure #3 in implicit closure #2 in CallingIntentContactNeedsDisambiguationFlowStrategy.makeLegacyPromptForDisambiguation(resolveRecord:disambiguationList:)( uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  __chkstk_darwin();
  uint64_t v8 = (uint64_t *)((char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  outlined init with copy of PhoneCallNLIntent?( a1,  (uint64_t)v8,  &demangling cache variable for type metadata for Result<TemplatingResult, Error>);
  if (swift_getEnumCaseMultiPayload(v8, v6) == 1)
  {
    uint64_t v13 = *v8;
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<TemplatingResult, Error>);
    return CheckedContinuation.resume(throwing:)(&v13, v9);
  }

  else
  {
    (*(void (**)(char *, uint64_t *, uint64_t))(v3 + 32))(v5, v8, v2);
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<TemplatingResult, Error>);
    return CheckedContinuation.resume(returning:)(v5, v11);
  }

uint64_t CallingIntentContactNeedsDisambiguationFlowStrategy.resetStates()(uint64_t a1)
{
  uint64_t v2 = (void *)(v1 + direct field offset for CallingIntentContactNeedsDisambiguationFlowStrategy.personsToDisambiguate);
  OUTLINED_FUNCTION_93_17(a1, (uint64_t)v4);
  void *v2 = _swiftEmptyArrayStorage;
  uint64_t result = swift_bridgeObjectRelease();
  *(_BYTE *)(v1 + direct field offset for CallingIntentContactNeedsDisambiguationFlowStrategy.shouldClearContext) = 0;
  *(_BYTE *)(v1 + direct field offset for CallingIntentContactNeedsDisambiguationFlowStrategy.requiresReprompt) = 0;
  return result;
}

uint64_t CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForNeedsDisambiguationOutput(app:persons:intent:parameterName:intentResolutionResult:responseGenerator:device:nlContextUpdate:crrOutputGenerator:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v9 + 176) = v23;
  *(void *)(v9 + 184) = v8;
  *(_OWORD *)(v9 + 160) = v22;
  *(void *)(v9 + 144) = a4;
  *(void *)(v9 + 15__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a8;
  *(void *)(v9 + outlined init with copy of SharedGlobalsProviding(v0, v1 - 128) = a2;
  *(void *)(v9 + 136) = a3;
  *(void *)(v9 + 120) = a1;
  *(void *)(v9 + 19__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *v8;
  uint64_t v10 = OUTLINED_FUNCTION_82_0();
  *(void *)(v9 + 200) = v10;
  *(void *)(v9 + outlined init with copy of SharedGlobalsProviding(v0 - 168, v0 - 208) = OUTLINED_FUNCTION_23(*(void *)(v10 - 8));
  uint64_t v11 = ((uint64_t (*)(void))type metadata accessor for ContactResolutionPatternID)(0LL);
  *(void *)(v9 + 2++*(void *)(v0 + 16) = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  *(void *)(v9 + 224) = v12;
  *(void *)(v9 + 23__swift_destroy_boxed_opaque_existential_1(v0 + 2) = OUTLINED_FUNCTION_23(v12);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (needsAuthentication: Bool, patternId: ContactResolutionPatternID));
  *(void *)(v9 + 240) = v13;
  *(void *)(v9 + outlined init with copy of SharedGlobalsProviding(v0 - 128, v0 - 248) = OUTLINED_FUNCTION_8_30(*(void *)(v13 - 8));
  *(void *)(v9 + 256) = OUTLINED_FUNCTION_28();
  *(void *)(v9 + 264) = OUTLINED_FUNCTION_28();
  *(void *)(v9 + 27__swift_destroy_boxed_opaque_existential_1(v0 + 2) = OUTLINED_FUNCTION_28();
  *(void *)(v9 + 280) = OUTLINED_FUNCTION_28();
  *(void *)(v9 + 288) = OUTLINED_FUNCTION_28();
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLContextUpdate?);
  *(void *)(v9 + 296) = OUTLINED_FUNCTION_23(*(void *)(v14 - 8));
  uint64_t v15 = type metadata accessor for DialogPhase(0LL);
  *(void *)(v9 + 304) = OUTLINED_FUNCTION_23(*(void *)(v15 - 8));
  uint64_t v16 = OUTLINED_FUNCTION_94();
  *(void *)(v9 + 31__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v16;
  uint64_t v17 = *(void *)(v16 - 8);
  *(void *)(v9 + 320) = v17;
  *(void *)(v9 + 328) = OUTLINED_FUNCTION_23(v17);
  OUTLINED_FUNCTION_19_1();
  return swift_task_switch(v18, v19, v20);
}

uint64_t CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForNeedsDisambiguationOutput(app:persons:intent:parameterName:intentResolutionResult:responseGenerator:device:nlContextUpdate:crrOutputGenerator:)()
{
  if (v1) {
    unint64_t v2 = v1;
  }
  else {
    unint64_t v2 = 0xE000000000000000LL;
  }
  uint64_t v3 = App.isFirstParty()();
  if ((v3 & 1) != 0)
  {
    uint64_t v4 = *(void *)(v0 + 192);
    uint64_t v5 = *(void **)(v0 + 160);
    uint64_t v7 = *(void *)(v4 + 264);
    uint64_t v6 = *(void *)(v4 + 272);
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(255LL);
    uint64_t v9 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness(v6, v7, AssociatedTypeWitness) + 8) + 16LL);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
    uint64_t v11 = swift_checkMetadataState(0LL, AssociatedTypeWitness);
    uint64_t v12 = v10(v11, v9);
    static UserFacingCallingAppUtils.getAppBundleId(preferredCallProvider:deviceState:)(v12, v5);
    unint64_t v14 = v13;
    uint64_t v3 = OUTLINED_FUNCTION_87_0();
    unint64_t v2 = v14;
  }

  *(void *)(v0 + 336) = v2;
  uint64_t v16 = *(void *)(v0 + 296);
  uint64_t v15 = *(void *)(v0 + 304);
  uint64_t v17 = *(void *)(v0 + 168);
  static DialogPhase.clarification.getter(v3);
  OutputGenerationManifest.init(dialogPhase:_:)( v15,  closure #1 in CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForNeedsDisambiguationOutput(app:persons:intent:parameterName:intentResolutionResult:responseGenerator:device:nlContextUpdate:crrOutputGenerator:),  0LL);
  outlined init with copy of PhoneCallNLIntent?( v17,  v16,  &demangling cache variable for type metadata for NLContextUpdate?);
  OutputGenerationManifest.nlContextUpdate.setter(v16);
  type metadata accessor for CATGlobals(0LL);
  uint64_t v18 = swift_bridgeObjectRetain();
  CATGlobals.__allocating_init()(v18);
  uint64_t v19 = OUTLINED_FUNCTION_20_35();
  uint64_t v20 = type metadata accessor for ContactResolutionPatternGenerator(v19);
  OUTLINED_FUNCTION_15_2(v20);
  uint64_t v21 = OUTLINED_FUNCTION_204_3();
  uint64_t v136 = ContactResolutionPatternGenerator.init(appBundleId:globals:)(v21, v22, v23);
  *(void *)(v0 + 344) = v136;
  uint64_t v24 = OUTLINED_FUNCTION_120_0();
  outlined init with copy of PhoneCallNLIntent?(v24, v25, v26);
  if (*(void *)(v0 + 80))
  {
    outlined init with take of AppSelectionSignalComponent((__int128 *)(v0 + 56), v0 + 16);
  }

  else
  {
    uint64_t v27 = swift_bridgeObjectRetain();
    CATGlobals.__allocating_init()(v27);
    uint64_t v28 = OUTLINED_FUNCTION_20_35();
    uint64_t v29 = type metadata accessor for ContactResolutionSnippetGenerator(v28);
    OUTLINED_FUNCTION_15_2(v29);
    uint64_t v30 = OUTLINED_FUNCTION_204_3();
    uint64_t v33 = ContactResolutionSnippetGenerator.init(appBundleId:globals:)(v30, v31, v32);
    *(void *)(v0 + 40) = v29;
    *(void *)(v0 + 48) = &protocol witness table for ContactResolutionSnippetGenerator;
    *(void *)(v0 + ++*(void *)(v0 + 16) = v33;
    OUTLINED_FUNCTION_150(v33, &demangling cache variable for type metadata for ContactResolutionSnippetGenerating?);
  }

  uint64_t v34 = *(_BYTE **)(v0 + 288);
  uint64_t v35 = *(void *)(v0 + 240);
  uint64_t v36 = &v34[*(int *)(v35 + 48)];
  char v37 = static ContactResolutionHelper.nullHandleLabelHelper(contacts:)(v36, *(void *)(v0 + 136)) & 1;
  *uint64_t v34 = v37;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v38 = *(os_log_s **)(v0 + 272);
  uint64_t v39 = *(_BYTE **)(v0 + 280);
  uint64_t v40 = *(_BYTE **)(v0 + 264);
  uint64_t v137 = *(void *)(v0 + 256);
  uint64_t v41 = *(void *)(v0 + 224);
  uint64_t v42 = OUTLINED_FUNCTION_15_1();
  uint64_t v43 = __swift_project_value_buffer(v42, (uint64_t)static Logger.siriPhone);
  uint64_t v44 = (uint64_t)&v39[*(int *)(v35 + 48)];
  _BYTE *v39 = v37;
  uint64_t v45 = *(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v41 + 16);
  OUTLINED_FUNCTION_223_2(v44);
  uint64_t v46 = OUTLINED_FUNCTION_34_1();
  uint64_t v48 = v47;
  _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0(v46, v49, v47);
  uint64_t v140 = v35;
  uint64_t v142 = v36;
  uint64_t v50 = (uint64_t)&v40[*(int *)(v35 + 48)];
  _BYTE *v40 = v37;
  uint64_t v51 = v45;
  OUTLINED_FUNCTION_223_2(v50);
  _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0((uint64_t)v40, v137, v48);
  uint64_t v138 = (void *)v43;
  os_log_type_t v52 = v43;
  Logger.logObject.getter(v53);
  os_log_type_t v54 = OUTLINED_FUNCTION_41();
  BOOL v55 = OUTLINED_FUNCTION_10(v54);
  uint64_t v56 = *(_BYTE **)(v0 + 272);
  uint64_t v57 = *(unsigned __int8 **)(v0 + 256);
  if (v55)
  {
    char v58 = *(_BYTE **)(v0 + 248);
    uint64_t v60 = *(void *)(v0 + 216);
    uint64_t v59 = *(void *)(v0 + 224);
    uint64_t v61 = OUTLINED_FUNCTION_7_0(18LL);
    uint64_t v135 = OUTLINED_FUNCTION_7_0(32LL);
    uint64_t v143 = v135;
    *(_DWORD *)uint64_t v61 = 136315394;
    uint64_t v62 = *(int *)(v140 + 48);
    *char v58 = *v56;
    uint64_t v63 = v51(&v58[v62], &v56[v62], v60);
    log = v38;
    uint64_t v64 = ContactResolutionPatternID.rawValue.getter(v63);
    uint64_t v133 = v51;
    unint64_t v66 = v65;
    uint64_t v132 = *(void (**)(_BYTE *, uint64_t))(v59 + 8);
    uint64_t v67 = OUTLINED_FUNCTION_274_2();
    v68(v67);
    *(void *)(v0 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v64, v66, &v143);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 112, v0 + 120, v61 + 4);
    uint64_t v51 = v133;
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_206_4((uint64_t)v56);
    *(_WORD *)(v61 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 1024;
    uint64_t v69 = *(int *)(v140 + 48);
    uint64_t v70 = &v58[v69];
    LODWORD(v59) = *v57;
    *char v58 = v59;
    v133(&v58[v69], &v57[v69], v60);
    v132(v70, v60);
    OUTLINED_FUNCTION_206_4((uint64_t)v57);
    *(_DWORD *)(v0 + 43__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v59;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 432, v0 + 436, v61 + 14);
    _os_log_impl( &dword_0,  log,  v52,  "#CallingIntentContactNeedsDisambiguationFlowStrategy ContactResolutionHelper.NullLabelHelper results - Pattern: %s NeedsAuth: %{BOOL}d",  (uint8_t *)v61,  0x12u);
    OUTLINED_FUNCTION_17_0(v135);
    OUTLINED_FUNCTION_0_2(v135);
    OUTLINED_FUNCTION_0_2(v61);
  }

  else
  {
    OUTLINED_FUNCTION_206_4(*(void *)(v0 + 256));
    OUTLINED_FUNCTION_206_4((uint64_t)v56);
  }

  uint64_t v71 = *(void *)(v0 + 224);
  v51(*(_BYTE **)(v0 + 232), v142, *(void *)(v0 + 216));
  uint64_t v72 = OUTLINED_FUNCTION_34_1();
  uint64_t v74 = v73(v72);
  if ((_DWORD)v74 == enum case for ContactResolutionPatternID.detailedDisambiguationContactNames(_:))
  {
    OUTLINED_FUNCTION_171_6();
    uint64_t v75 = (void *)swift_task_alloc(dword_441524);
    *(void *)(v0 + 4++*(void *)(v0 + 16) = v75;
    OUTLINED_FUNCTION_17_72(v75);
    OUTLINED_FUNCTION_55_19();
    return CallingIntentContactNeedsDisambiguationFlowStrategy.getDetailedDisambiguationContactNames(sharedGlobals:outputManifest:responseGenerator:crrPatternGenerator:crrOutputGenerator:persons:)( v76,  v77,  v78,  v79,  v80,  v81,  v82);
  }

  else if ((_DWORD)v74 == enum case for ContactResolutionPatternID.simpleDisambiguationUniqueLabels(_:))
  {
    OUTLINED_FUNCTION_171_6();
    unint64_t v84 = (void *)swift_task_alloc(dword_441544);
    *(void *)(v0 + 35__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v84;
    OUTLINED_FUNCTION_17_72(v84);
    OUTLINED_FUNCTION_55_19();
    return CallingIntentContactNeedsDisambiguationFlowStrategy.getSimpleDisambiguationUniqueLabels(sharedGlobals:outputManifest:responseGenerator:crrPatternGenerator:crrOutputGenerator:persons:)( v85,  v86,  v87,  v88,  v89,  v90,  v91);
  }

  else if ((_DWORD)v74 == enum case for ContactResolutionPatternID.simpleDisambiguationMixedLabels(_:))
  {
    OUTLINED_FUNCTION_171_6();
    uint64_t v92 = (void *)swift_task_alloc(dword_441534);
    *(void *)(v0 + 384) = v92;
    OUTLINED_FUNCTION_17_72(v92);
    OUTLINED_FUNCTION_55_19();
    return CallingIntentContactNeedsDisambiguationFlowStrategy.getSimpleDisambiguationMixedLabels(sharedGlobals:outputManifest:responseGenerator:crrPatternGenerator:crrOutputGenerator:persons:)( v93,  v94,  v95,  v96,  v97,  v98,  v99);
  }

  else if ((_DWORD)v74 == enum case for ContactResolutionPatternID.detailedDisambiguationMixedLabelsNoWindowing(_:))
  {
    OUTLINED_FUNCTION_171_6();
    uint64_t v100 = (void *)swift_task_alloc(dword_44152C);
    *(void *)(v0 + 400) = v100;
    OUTLINED_FUNCTION_17_72(v100);
    OUTLINED_FUNCTION_55_19();
    return CallingIntentContactNeedsDisambiguationFlowStrategy.getDetailedDisambiguationMixedLabels(sharedGlobals:outputManifest:responseGenerator:crrPatternGenerator:crrOutputGenerator:persons:)( v101,  v102,  v103,  v104,  v105,  v106,  v107);
  }

  else
  {
    if ((_DWORD)v74 != enum case for ContactResolutionPatternID.detailedDisambiguationMultipleHandlesSameLabelNoWindowing(_:))
    {
      int8x16_t v116 = v138;
      Logger.logObject.getter(v74);
      os_log_type_t v117 = OUTLINED_FUNCTION_6_0();
      if (OUTLINED_FUNCTION_27_1(v117))
      {
        __int128 v118 = (_WORD *)OUTLINED_FUNCTION_1_0();
        OUTLINED_FUNCTION_47(v118);
        OUTLINED_FUNCTION_5_13( &dword_0,  v119,  v120,  "#CallingIntentContactNeedsDisambiguationFlowStrategy makePromptForNeedsDisambiguationOutput: chose ContactReso lutionPattern that is not supported");
        OUTLINED_FUNCTION_0_2(v71);
      }

      uint64_t v121 = *(void *)(v0 + 320);
      uint64_t v122 = *(void *)(v0 + 288);
      uint64_t v123 = *(void *)(v0 + 216);
      uint64_t v139 = *(void *)(v0 + 224);
      uint64_t v141 = *(void *)(v0 + 232);
      uint64_t v124 = *(void *)(v0 + 200);
      uint64_t v125 = *(void **)(v0 + 208);

      uint64_t v143 = 0LL;
      unint64_t v144 = 0xE000000000000000LL;
      _StringGuts.grow(_:)(23LL);
      unint64_t v126 = v144;
      *(void *)(v0 + 96) = v143;
      *(void *)(v0 + outlined init with copy of SharedGlobalsProviding(v0, v1 - 104) = v126;
      v127._object = (void *)0x8000000000352610LL;
      v127._uint64_t countAndFlagsBits = 0xD000000000000015LL;
      String.append(_:)(v127);
      _print_unlocked<A, B>(_:_:)( v142,  v0 + 96,  v123,  &type metadata for DefaultStringInterpolation,  &protocol witness table for DefaultStringInterpolation);
      uint64_t v128 = *(void *)(v0 + 104);
      *uint64_t v125 = *(void *)(v0 + 96);
      v125[1] = v128;
      v125[2] = 0xD000000000000055LL;
      v125[3] = 0x8000000000352630LL;
      v125[4] = 0xD00000000000009CLL;
      v125[5] = 0x8000000000352690LL;
      v125[6] = 367LL;
      swift_storeEnumTagMultiPayload(v125, v124, 4LL);
      lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError,  type metadata accessor for PhoneError,  (uint64_t)&protocol conformance descriptor for PhoneError);
      OUTLINED_FUNCTION_4_4(v124, v129);
      PhoneError.logged()(v130);
      outlined destroy of MainFlow((uint64_t)v125, type metadata accessor for PhoneError);
      OUTLINED_FUNCTION_17_9();
      swift_release(v136);
      swift_bridgeObjectRelease();
      outlined destroy of UUID?( v122,  &demangling cache variable for type metadata for (needsAuthentication: Bool, patternId: ContactResolutionPatternID));
      OUTLINED_FUNCTION_7_79(*(uint64_t (**)(uint64_t, uint64_t))(v121 + 8));
      __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 16));
      (*(void (**)(uint64_t, uint64_t))(v139 + 8))(v141, v123);
      swift_task_dealloc();
      OUTLINED_FUNCTION_23_3();
      OUTLINED_FUNCTION_10_0();
      OUTLINED_FUNCTION_46_0();
      OUTLINED_FUNCTION_92_0();
      OUTLINED_FUNCTION_9_2();
      OUTLINED_FUNCTION_14_3();
      OUTLINED_FUNCTION_29_17();
      OUTLINED_FUNCTION_25();
      OUTLINED_FUNCTION_7_8();
      swift_task_dealloc();
      OUTLINED_FUNCTION_55_19();
      __asm { BR              X0 }
    }

    OUTLINED_FUNCTION_171_6();
    uint64_t v108 = (void *)swift_task_alloc(dword_44153C);
    *(void *)(v0 + 368) = v108;
    OUTLINED_FUNCTION_17_72(v108);
    OUTLINED_FUNCTION_55_19();
    return CallingIntentContactNeedsDisambiguationFlowStrategy.getDetailedDisambiguationMultipleHandlesSameLabel(sharedGlobals:outputManifest:responseGenerator:crrPatternGenerator:crrOutputGenerator:persons:)( v109,  v110,  v111,  v112,  v113,  v114,  v115);
  }

{
  uint64_t v0;
  uint64_t v1;
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_73_6();
  *(void *)(v1 + 360) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  uint64_t v1;
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_73_6();
  *(void *)(v1 + 376) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  uint64_t v1;
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_73_6();
  *(void *)(v1 + 39__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  uint64_t v1;
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_73_6();
  *(void *)(v1 + 408) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  uint64_t v1;
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_73_6();
  *(void *)(v1 + 424) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

#error "2F7E74: call analysis failed (funcsize=49)"
#error "2F7F0C: call analysis failed (funcsize=27)"
#error "2F7F7C: call analysis failed (funcsize=27)"
#error "2F7FEC: call analysis failed (funcsize=27)"
#error "2F805C: call analysis failed (funcsize=27)"
#error "2F80CC: call analysis failed (funcsize=27)"
uint64_t closure #1 in CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForNeedsDisambiguationOutput(app:persons:intent:parameterName:intentResolutionResult:responseGenerator:device:nlContextUpdate:crrOutputGenerator:)()
{
  OutputGenerationManifest.canUseServerTTS.setter(0LL);
  OutputGenerationManifest.listenAfterSpeaking.setter(1LL);
  return OutputGenerationManifest.responseViewId.setter(0xD000000000000015LL, 0x8000000000350550LL);
}

uint64_t CallingIntentContactNeedsDisambiguationFlowStrategy.getSimpleDisambiguationUniqueLabels(sharedGlobals:outputManifest:responseGenerator:crrPatternGenerator:crrOutputGenerator:persons:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return OUTLINED_FUNCTION_33_0((uint64_t)CallingIntentContactNeedsDisambiguationFlowStrategy.getSimpleDisambiguationUniqueLabels(sharedGlobals:outputManifest:responseGenerator:crrPatternGenerator:crrOutputGenerator:persons:));
}

uint64_t CallingIntentContactNeedsDisambiguationFlowStrategy.getSimpleDisambiguationUniqueLabels(sharedGlobals:outputManifest:responseGenerator:crrPatternGenerator:crrOutputGenerator:persons:)()
{
  uint64_t v3 = OUTLINED_FUNCTION_19_72();
  char v4 = OUTLINED_FUNCTION_56_28(v3);
  OUTLINED_FUNCTION_38_1();
  if ((v4 & 1) != 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v5 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v5, (uint64_t)static Logger.siriPhone);
    os_log_type_t v6 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_27_1(v6))
    {
      uint64_t v7 = (_WORD *)OUTLINED_FUNCTION_1_0();
      OUTLINED_FUNCTION_47(v7);
      OUTLINED_FUNCTION_5_13( &dword_0,  v8,  v9,  "#CallingIntentContactNeedsDisambiguationFlowStrategy makePromptForNeedsDisambiguationOutput: generating simple d isambiguation for unique labels by using output result generator");
      OUTLINED_FUNCTION_0_2(v1);
    }

    OUTLINED_FUNCTION_101_12();
    OUTLINED_FUNCTION_59_25();
    uint64_t v10 = swift_task_alloc(async function pointer to dispatch thunk of ContactResolutionSnippetGenerating.generateSimpleDisambiguationUniqueLabels(contacts:directInvocationID:outputGenerationManifest:)[1]);
    uint64_t v11 = (void *)OUTLINED_FUNCTION_267_1(v10);
    OUTLINED_FUNCTION_106_13(v11);
    OUTLINED_FUNCTION_23_66();
    OUTLINED_FUNCTION_77_22();
    return dispatch thunk of ContactResolutionSnippetGenerating.generateSimpleDisambiguationUniqueLabels(contacts:directInvocationID:outputGenerationManifest:)( v12,  v13,  v14,  v15,  v16,  v17,  v18,  v19);
  }

  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v21 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v21, (uint64_t)static Logger.siriPhone);
    os_log_type_t v22 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_27_1(v22))
    {
      uint64_t v23 = (_WORD *)OUTLINED_FUNCTION_1_0();
      OUTLINED_FUNCTION_47(v23);
      OUTLINED_FUNCTION_5_13( &dword_0,  v24,  v25,  "#CallingIntentContactNeedsDisambiguationFlowStrategy makePromptForNeedsDisambiguationOutput: generating simple d isambiguation for unique labels by using pattern generator");
      OUTLINED_FUNCTION_0_2(v1);
    }

    uint64_t v26 = (void *)swift_task_alloc(async function pointer to ContactResolutionPatternGenerator.generateSimpleDisambiguationUniqueLabels(contacts:directInvocationID:)[1]);
    *(void *)(v2 + outlined init with copy of SharedGlobalsProviding(v0, v1 - 128) = v26;
    OUTLINED_FUNCTION_134_7( v26,  (uint64_t)CallingIntentContactNeedsDisambiguationFlowStrategy.getSimpleDisambiguationUniqueLabels(sharedGlobals:outputManifest:responseGenerator:crrPatternGenerator:crrOutputGenerator:persons:));
    OUTLINED_FUNCTION_39_38(v27);
    OUTLINED_FUNCTION_77_22();
    return ContactResolutionPatternGenerator.generateSimpleDisambiguationUniqueLabels(contacts:directInvocationID:)( v28,  v29,  v30,  v31,  v32,  v33,  v34,  v35);
  }

{
  OUTLINED_FUNCTION_31_50();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  void *v0;
  OUTLINED_FUNCTION_58_28();
  uint64_t v0 = (void *)swift_task_alloc(async function pointer to dispatch thunk of ResponseGenerating.makeResponseOutput(patternExecutionResult:outputGenerationManifest:)[1]);
  OUTLINED_FUNCTION_35_39(v0);
  return OUTLINED_FUNCTION_33_2();
}

{
  OUTLINED_FUNCTION_30_54();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t CallingIntentContactNeedsDisambiguationFlowStrategy.getSimpleDisambiguationUniqueLabels(sharedGlobals:outputManifest:responseGenerator:crrPatternGenerator:crrOutputGenerator:persons:)( uint64_t a1)
{
  if (v1) {
    return OUTLINED_FUNCTION_3_0(*(uint64_t (**)(void))(v2 + 8));
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t CallingIntentContactNeedsDisambiguationFlowStrategy.getDetailedDisambiguationMultipleHandlesSameLabel(sharedGlobals:outputManifest:responseGenerator:crrPatternGenerator:crrOutputGenerator:persons:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return OUTLINED_FUNCTION_33_0((uint64_t)CallingIntentContactNeedsDisambiguationFlowStrategy.getDetailedDisambiguationMultipleHandlesSameLabel(sharedGlobals:outputManifest:responseGenerator:crrPatternGenerator:crrOutputGenerator:persons:));
}

uint64_t CallingIntentContactNeedsDisambiguationFlowStrategy.getDetailedDisambiguationMultipleHandlesSameLabel(sharedGlobals:outputManifest:responseGenerator:crrPatternGenerator:crrOutputGenerator:persons:)()
{
  uint64_t v3 = OUTLINED_FUNCTION_19_72();
  char v4 = OUTLINED_FUNCTION_56_28(v3);
  OUTLINED_FUNCTION_38_1();
  if ((v4 & 1) != 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v5 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v5, (uint64_t)static Logger.siriPhone);
    os_log_type_t v6 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_27_1(v6))
    {
      uint64_t v7 = (_WORD *)OUTLINED_FUNCTION_1_0();
      OUTLINED_FUNCTION_47(v7);
      OUTLINED_FUNCTION_5_13( &dword_0,  v8,  v9,  "#CallingIntentContactNeedsDisambiguationFlowStrategy makePromptForNeedsDisambiguationOutput: generating detailed disambiguation for multiple handles with the same label by using output result generator");
      OUTLINED_FUNCTION_0_2(v1);
    }

    OUTLINED_FUNCTION_101_12();
    OUTLINED_FUNCTION_59_25();
    uint64_t v10 = swift_task_alloc(async function pointer to dispatch thunk of ContactResolutionSnippetGenerating.generateDetailedDisambiguationForMultipleHandlesWithSameLabel(contacts:directInvocationID:outputGenerationManifest:)[1]);
    uint64_t v11 = (void *)OUTLINED_FUNCTION_267_1(v10);
    OUTLINED_FUNCTION_106_13(v11);
    OUTLINED_FUNCTION_23_66();
    OUTLINED_FUNCTION_77_22();
    return dispatch thunk of ContactResolutionSnippetGenerating.generateDetailedDisambiguationForMultipleHandlesWithSameLabel(contacts:directInvocationID:outputGenerationManifest:)( v12,  v13,  v14,  v15,  v16,  v17,  v18,  v19);
  }

  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v21 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v21, (uint64_t)static Logger.siriPhone);
    os_log_type_t v22 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_27_1(v22))
    {
      uint64_t v23 = (_WORD *)OUTLINED_FUNCTION_1_0();
      OUTLINED_FUNCTION_47(v23);
      OUTLINED_FUNCTION_5_13( &dword_0,  v24,  v25,  "#CallingIntentContactNeedsDisambiguationFlowStrategy makePromptForNeedsDisambiguationOutput: generating detailed disambiguation for multiple handles with the same label by using pattern generator");
      OUTLINED_FUNCTION_0_2(v1);
    }

    uint64_t v26 = (void *)swift_task_alloc(async function pointer to ContactResolutionPatternGenerator.generateDetailedDisambiguationMultipleHandlesSameLabelNoWindowing(contacts:disambiguationResultDirectInvocation:)[1]);
    *(void *)(v2 + outlined init with copy of SharedGlobalsProviding(v0, v1 - 128) = v26;
    OUTLINED_FUNCTION_134_7( v26,  (uint64_t)CallingIntentContactNeedsDisambiguationFlowStrategy.getSimpleDisambiguationUniqueLabels(sharedGlobals:outputManifest:responseGenerator:crrPatternGenerator:crrOutputGenerator:persons:));
    OUTLINED_FUNCTION_39_38(v27);
    OUTLINED_FUNCTION_77_22();
    return ContactResolutionPatternGenerator.generateDetailedDisambiguationMultipleHandlesSameLabelNoWindowing(contacts:disambiguationResultDirectInvocation:)( v28,  v29,  v30,  v31,  v32,  v33,  v34,  v35);
  }

uint64_t CallingIntentContactNeedsDisambiguationFlowStrategy.getSimpleDisambiguationMixedLabels(sharedGlobals:outputManifest:responseGenerator:crrPatternGenerator:crrOutputGenerator:persons:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return OUTLINED_FUNCTION_33_0((uint64_t)CallingIntentContactNeedsDisambiguationFlowStrategy.getSimpleDisambiguationMixedLabels(sharedGlobals:outputManifest:responseGenerator:crrPatternGenerator:crrOutputGenerator:persons:));
}

uint64_t CallingIntentContactNeedsDisambiguationFlowStrategy.getSimpleDisambiguationMixedLabels(sharedGlobals:outputManifest:responseGenerator:crrPatternGenerator:crrOutputGenerator:persons:)()
{
  uint64_t v3 = OUTLINED_FUNCTION_19_72();
  char v4 = OUTLINED_FUNCTION_56_28(v3);
  OUTLINED_FUNCTION_38_1();
  if ((v4 & 1) != 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v5 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v5, (uint64_t)static Logger.siriPhone);
    os_log_type_t v6 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_27_1(v6))
    {
      uint64_t v7 = (_WORD *)OUTLINED_FUNCTION_1_0();
      OUTLINED_FUNCTION_47(v7);
      OUTLINED_FUNCTION_5_13( &dword_0,  v8,  v9,  "#CallingIntentContactNeedsDisambiguationFlowStrategy makePromptForNeedsDisambiguationOutput: generating simple d isambiguation for 2 or 3 mixed handles by using output result generator");
      OUTLINED_FUNCTION_0_2(v1);
    }

    OUTLINED_FUNCTION_101_12();
    OUTLINED_FUNCTION_59_25();
    uint64_t v10 = swift_task_alloc(async function pointer to dispatch thunk of ContactResolutionSnippetGenerating.generateSimpleDisambiguationMixedLabels(contacts:directInvocationID:outputGenerationManifest:)[1]);
    uint64_t v11 = (void *)OUTLINED_FUNCTION_267_1(v10);
    OUTLINED_FUNCTION_106_13(v11);
    OUTLINED_FUNCTION_23_66();
    OUTLINED_FUNCTION_77_22();
    return dispatch thunk of ContactResolutionSnippetGenerating.generateSimpleDisambiguationMixedLabels(contacts:directInvocationID:outputGenerationManifest:)( v12,  v13,  v14,  v15,  v16,  v17,  v18,  v19);
  }

  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v21 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v21, (uint64_t)static Logger.siriPhone);
    os_log_type_t v22 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_27_1(v22))
    {
      uint64_t v23 = (_WORD *)OUTLINED_FUNCTION_1_0();
      OUTLINED_FUNCTION_47(v23);
      OUTLINED_FUNCTION_5_13( &dword_0,  v24,  v25,  "#CallingIntentContactNeedsDisambiguationFlowStrategy makePromptForNeedsDisambiguationOutput: generating simple d isambiguation for 2 or 3 mixed handles by using pattern generator");
      OUTLINED_FUNCTION_0_2(v1);
    }

    uint64_t v26 = (void *)swift_task_alloc(async function pointer to ContactResolutionPatternGenerator.generateSimpleDisambiguationMixedLabels(contacts:directInvocationID:)[1]);
    *(void *)(v2 + outlined init with copy of SharedGlobalsProviding(v0, v1 - 128) = v26;
    OUTLINED_FUNCTION_134_7( v26,  (uint64_t)CallingIntentContactNeedsDisambiguationFlowStrategy.getSimpleDisambiguationUniqueLabels(sharedGlobals:outputManifest:responseGenerator:crrPatternGenerator:crrOutputGenerator:persons:));
    OUTLINED_FUNCTION_39_38(v27);
    OUTLINED_FUNCTION_77_22();
    return ContactResolutionPatternGenerator.generateSimpleDisambiguationMixedLabels(contacts:directInvocationID:)( v28,  v29,  v30,  v31,  v32,  v33,  v34,  v35);
  }

uint64_t CallingIntentContactNeedsDisambiguationFlowStrategy.getDetailedDisambiguationMixedLabels(sharedGlobals:outputManifest:responseGenerator:crrPatternGenerator:crrOutputGenerator:persons:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return OUTLINED_FUNCTION_33_0((uint64_t)CallingIntentContactNeedsDisambiguationFlowStrategy.getDetailedDisambiguationMixedLabels(sharedGlobals:outputManifest:responseGenerator:crrPatternGenerator:crrOutputGenerator:persons:));
}

uint64_t CallingIntentContactNeedsDisambiguationFlowStrategy.getDetailedDisambiguationMixedLabels(sharedGlobals:outputManifest:responseGenerator:crrPatternGenerator:crrOutputGenerator:persons:)()
{
  uint64_t v3 = OUTLINED_FUNCTION_19_72();
  char v4 = OUTLINED_FUNCTION_56_28(v3);
  OUTLINED_FUNCTION_38_1();
  if ((v4 & 1) != 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v5 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v5, (uint64_t)static Logger.siriPhone);
    os_log_type_t v6 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_27_1(v6))
    {
      uint64_t v7 = (_WORD *)OUTLINED_FUNCTION_1_0();
      OUTLINED_FUNCTION_47(v7);
      OUTLINED_FUNCTION_5_13( &dword_0,  v8,  v9,  "#CallingIntentContactNeedsDisambiguationFlowStrategy makePromptForNeedsDisambiguationOutput: generating detailed disambiguation for more than 3 mixed handles by using output result generator");
      OUTLINED_FUNCTION_0_2(v1);
    }

    OUTLINED_FUNCTION_101_12();
    OUTLINED_FUNCTION_59_25();
    uint64_t v10 = swift_task_alloc(async function pointer to dispatch thunk of ContactResolutionSnippetGenerating.generateDetailedDisambiguationForMixedLabels(contacts:directInvocationID:outputGenerationManifest:)[1]);
    uint64_t v11 = (void *)OUTLINED_FUNCTION_267_1(v10);
    OUTLINED_FUNCTION_106_13(v11);
    OUTLINED_FUNCTION_23_66();
    OUTLINED_FUNCTION_77_22();
    return dispatch thunk of ContactResolutionSnippetGenerating.generateDetailedDisambiguationForMixedLabels(contacts:directInvocationID:outputGenerationManifest:)( v12,  v13,  v14,  v15,  v16,  v17,  v18,  v19);
  }

  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v21 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v21, (uint64_t)static Logger.siriPhone);
    os_log_type_t v22 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_27_1(v22))
    {
      uint64_t v23 = (_WORD *)OUTLINED_FUNCTION_1_0();
      OUTLINED_FUNCTION_47(v23);
      OUTLINED_FUNCTION_5_13( &dword_0,  v24,  v25,  "#CallingIntentContactNeedsDisambiguationFlowStrategy makePromptForNeedsDisambiguationOutput: generating detailed disambiguation for more than 3 mixed handles by using pattern generator");
      OUTLINED_FUNCTION_0_2(v1);
    }

    uint64_t v26 = (void *)swift_task_alloc(async function pointer to ContactResolutionPatternGenerator.generateDetailedDisambiguationMixedLabelsNoWindowing(contacts:disambiguationResultDirectInvocation:)[1]);
    *(void *)(v2 + outlined init with copy of SharedGlobalsProviding(v0, v1 - 128) = v26;
    OUTLINED_FUNCTION_134_7( v26,  (uint64_t)CallingIntentContactNeedsDisambiguationFlowStrategy.getDetailedDisambiguationMixedLabels(sharedGlobals:outputManifest:responseGenerator:crrPatternGenerator:crrOutputGenerator:persons:));
    OUTLINED_FUNCTION_39_38(v27);
    OUTLINED_FUNCTION_77_22();
    return ContactResolutionPatternGenerator.generateDetailedDisambiguationMixedLabelsNoWindowing(contacts:disambiguationResultDirectInvocation:)( v28,  v29,  v30,  v31,  v32,  v33,  v34,  v35);
  }

{
  OUTLINED_FUNCTION_31_50();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t (*v0)(void);
  OUTLINED_FUNCTION_241_2();
  uint64_t v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return OUTLINED_FUNCTION_3_0(v0);
}

{
  void *v0;
  OUTLINED_FUNCTION_58_28();
  uint64_t v0 = (void *)swift_task_alloc(async function pointer to dispatch thunk of ResponseGenerating.makeResponseOutput(patternExecutionResult:outputGenerationManifest:)[1]);
  OUTLINED_FUNCTION_35_39(v0);
  return OUTLINED_FUNCTION_33_2();
}

{
  OUTLINED_FUNCTION_30_54();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  uint64_t (*v1)(void);

  uint64_t v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return OUTLINED_FUNCTION_3_0(v1);
}

{
  uint64_t v0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  uint64_t v0;

  return OUTLINED_FUNCTION_3_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t CallingIntentContactNeedsDisambiguationFlowStrategy.getDetailedDisambiguationMixedLabels(sharedGlobals:outputManifest:responseGenerator:crrPatternGenerator:crrOutputGenerator:persons:)( uint64_t a1)
{
  if (v1) {
    return OUTLINED_FUNCTION_3_0(*(uint64_t (**)(void))(v2 + 8));
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t CallingIntentContactNeedsDisambiguationFlowStrategy.getDetailedDisambiguationContactNames(sharedGlobals:outputManifest:responseGenerator:crrPatternGenerator:crrOutputGenerator:persons:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for WindowedPaginationParameters?);
  *(void *)(v7 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = OUTLINED_FUNCTION_23(*(void *)(v8 - 8));
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t CallingIntentContactNeedsDisambiguationFlowStrategy.getDetailedDisambiguationContactNames(sharedGlobals:outputManifest:responseGenerator:crrPatternGenerator:crrOutputGenerator:persons:)()
{
  uint64_t v3 = OUTLINED_FUNCTION_19_72();
  char v4 = OUTLINED_FUNCTION_56_28(v3);
  OUTLINED_FUNCTION_38_1();
  if ((v4 & 1) != 0)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v5 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v5, (uint64_t)static Logger.siriPhone);
    os_log_type_t v6 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_27_1(v6))
    {
      uint64_t v7 = (_WORD *)OUTLINED_FUNCTION_1_0();
      OUTLINED_FUNCTION_47(v7);
      OUTLINED_FUNCTION_5_13( &dword_0,  v8,  v9,  "#CallingIntentContactNeedsDisambiguationFlowStrategy makePromptForNeedsDisambiguationOutput: generating contact name disambiguation by using output result generator");
      OUTLINED_FUNCTION_0_2(v1);
    }

    OUTLINED_FUNCTION_101_12();
    OUTLINED_FUNCTION_59_25();
    uint64_t v10 = (void *)swift_task_alloc(async function pointer to dispatch thunk of ContactResolutionSnippetGenerating.generateDetailedDisambiguationContactNames(contacts:directInvocationID:outputGenerationManifest:)[1]);
    v2[15] = (uint64_t)v10;
    OUTLINED_FUNCTION_106_13(v10);
    OUTLINED_FUNCTION_23_66();
    OUTLINED_FUNCTION_77_22();
    return dispatch thunk of ContactResolutionSnippetGenerating.generateDetailedDisambiguationContactNames(contacts:directInvocationID:outputGenerationManifest:)( v11,  v12,  v13,  v14,  v15,  v16,  v17,  v18);
  }

  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v20 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v20, (uint64_t)static Logger.siriPhone);
    os_log_type_t v21 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_27_1(v21))
    {
      os_log_type_t v22 = (_WORD *)OUTLINED_FUNCTION_1_0();
      OUTLINED_FUNCTION_47(v22);
      OUTLINED_FUNCTION_5_13( &dword_0,  v23,  v24,  "#CallingIntentContactNeedsDisambiguationFlowStrategy makePromptForNeedsDisambiguationOutput: generating contact name disambiguation by using pattern generator");
      OUTLINED_FUNCTION_0_2(v1);
    }

    uint64_t v25 = v2[14];

    uint64_t v26 = type metadata accessor for WindowedPaginationParameters(0LL);
    OUTLINED_FUNCTION_88(v25, 1LL, v27, v26);
    uint64_t v28 = (uint64_t **)swift_task_alloc(async function pointer to ContactResolutionPatternGenerator.generateDetailedDisambiguationContactNames(contacts:contactSelectionDirectInvocationID:windowedPaginationParameters:)[1]);
    v2[17] = (uint64_t)v28;
    *uint64_t v28 = v2;
    v28[1] = (uint64_t *)CallingIntentContactNeedsDisambiguationFlowStrategy.getDetailedDisambiguationContactNames(sharedGlobals:outputManifest:responseGenerator:crrPatternGenerator:crrOutputGenerator:persons:);
    OUTLINED_FUNCTION_39_38(v2[13]);
    OUTLINED_FUNCTION_77_22();
    return ContactResolutionPatternGenerator.generateDetailedDisambiguationContactNames(contacts:contactSelectionDirectInvocationID:windowedPaginationParameters:)( v29,  v30,  v31,  v32,  v33,  v34,  v35,  v36);
  }

{
  uint64_t v0;
  uint64_t v1;
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_73_6();
  *(void *)(v1 + outlined init with copy of SharedGlobalsProviding(v0, v1 - 128) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t (*v0)(void);
  OUTLINED_FUNCTION_241_2();
  OUTLINED_FUNCTION_150_8();
  uint64_t v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return OUTLINED_FUNCTION_3_0(v0);
}

{
  uint64_t v0;
  void *v1;
  OUTLINED_FUNCTION_58_28();
  uint64_t v1 = (void *)swift_task_alloc(async function pointer to dispatch thunk of ResponseGenerating.makeResponseOutput(patternExecutionResult:outputGenerationManifest:)[1]);
  *(void *)(v0 + 160) = v1;
  *uint64_t v1 = v0;
  v1[1] = CallingIntentContactNeedsDisambiguationFlowStrategy.getDetailedDisambiguationContactNames(sharedGlobals:outputManifest:responseGenerator:crrPatternGenerator:crrOutputGenerator:persons:);
  return OUTLINED_FUNCTION_33_2();
}

{
  uint64_t v0;
  uint64_t v1;
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_73_6();
  *(void *)(v1 + 168) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  uint64_t v0;
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_150_8();
  uint64_t v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return OUTLINED_FUNCTION_3_0(v1);
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_150_8();
  return OUTLINED_FUNCTION_3_0(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_150_8();
  return OUTLINED_FUNCTION_3_0(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_150_8();
  return OUTLINED_FUNCTION_3_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t CallingIntentContactNeedsDisambiguationFlowStrategy.getDetailedDisambiguationContactNames(sharedGlobals:outputManifest:responseGenerator:crrPatternGenerator:crrOutputGenerator:persons:)( uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 144) = a1;
  *(void *)(v3 + 15__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v1;
  uint64_t v4 = swift_task_dealloc();
  OUTLINED_FUNCTION_93_1(v4, &demangling cache variable for type metadata for WindowedPaginationParameters?);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_17_3();
}

uint64_t CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForEmergencyNeedsDisambiguation(app:disambiguationItems:nlContextUpdate:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[7] = a4;
  v5[8] = v4;
  v5[5] = a2;
  v5[6] = a3;
  void v5[4] = a1;
  uint64_t v6 = OUTLINED_FUNCTION_82_0();
  v5[9] = v6;
  v5[10] = OUTLINED_FUNCTION_23(*(void *)(v6 - 8));
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
  v5[11] = OUTLINED_FUNCTION_23(*(void *)(v7 - 8));
  uint64_t v8 = type metadata accessor for DisambiguationItemWithDirectInvocationModel(0LL);
  v5[12] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v5[13] = v9;
  void v5[14] = OUTLINED_FUNCTION_8_30(v9);
  v5[15] = OUTLINED_FUNCTION_28();
  uint64_t v10 = type metadata accessor for DialogPhase(0LL);
  v5[16] = OUTLINED_FUNCTION_23(*(void *)(v10 - 8));
  uint64_t v11 = OUTLINED_FUNCTION_94();
  v5[17] = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  v5[18] = v12;
  v5[19] = OUTLINED_FUNCTION_23(v12);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForEmergencyNeedsDisambiguation(app:disambiguationItems:nlContextUpdate:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24)
{
  a23 = v26;
  a24 = v27;
  a22 = v24;
  uint64_t v28 = *(os_log_s **)(v24 + 64);
  uint64_t v29 = *(uint64_t (**)(void))(*(void *)v28 + 320LL);
  v30._rawValue = (void *)v29();
  v31.PhoneCallFlowDelegatePlugin::EmergencyType value = EmergencyType.init(for:)(v30).value;
  *(PhoneCallFlowDelegatePlugin::EmergencyType_optional *)(v24 + 25__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v31;
  if (v31.value == PhoneCallFlowDelegatePlugin_EmergencyType_unknownDefault)
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v32 = OUTLINED_FUNCTION_15_1();
    __swift_project_value_buffer(v32, (uint64_t)static Logger.siriPhone);
    uint64_t v33 = swift_retain();
    uint64_t v34 = (os_log_s *)Logger.logObject.getter(v33);
    os_log_type_t v35 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_39_7(v34))
    {
      uint64_t v36 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v84 = OUTLINED_FUNCTION_7_0(32LL);
      a12 = v84;
      *(_DWORD *)uint64_t v36 = 136315138;
      uint64_t v37 = v29();
      uint64_t v38 = OUTLINED_FUNCTION_49( v37,  (unint64_t *)&lazy cache variable for type metadata for INPerson,  &OBJC_CLASS___INPerson_ptr);
      uint64_t v39 = Array.description.getter(v37, v38);
      unint64_t v41 = v40;
      OUTLINED_FUNCTION_39();
      *(void *)(v24 + ++*(void *)(v0 + 16) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v39, v41, &a12);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v24 + 16, v24 + 24, v36 + 4);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_38_1();
      OUTLINED_FUNCTION_57_0( &dword_0,  v34,  v35,  "#CallingIntentContactNeedsDisambiguationFlowStrategy makePromptForEmergencyNeedsDisambiguation called for neithe r a foreign or a local emergency. %s",  v36);
      OUTLINED_FUNCTION_17_0(v84);
      OUTLINED_FUNCTION_0_2(v84);
      OUTLINED_FUNCTION_0_2((uint64_t)v36);
    }

    else
    {
      OUTLINED_FUNCTION_38_1();
    }

    uint64_t v58 = *(void *)(v24 + 72);
    uint64_t v59 = *(void *)(v24 + 80);
    uint64_t v60 = OUTLINED_FUNCTION_34_1();
    swift_storeEnumTagMultiPayload(v60, v61, 16LL);
    lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError,  type metadata accessor for PhoneError,  (uint64_t)&protocol conformance descriptor for PhoneError);
    OUTLINED_FUNCTION_4_4(v58, v62);
    PhoneError.logged()(v63);
    outlined destroy of MainFlow(v59, type metadata accessor for PhoneError);
    OUTLINED_FUNCTION_17_9();
    OUTLINED_FUNCTION_142_12(*(void *)(v24 + 152));
    OUTLINED_FUNCTION_23_3();
    OUTLINED_FUNCTION_10_0();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_92_0();
    OUTLINED_FUNCTION_9_2();
    uint64_t v64 = (uint64_t (*)(void))OUTLINED_FUNCTION_250_0();
    return OUTLINED_FUNCTION_4_12(v64);
  }

  else
  {
    PhoneCallFlowDelegatePlugin::EmergencyType value = v31.value;
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v43 = OUTLINED_FUNCTION_15_1();
    *(void *)(v24 + 160) = __swift_project_value_buffer(v43, (uint64_t)static Logger.siriPhone);
    OUTLINED_FUNCTION_9();
    os_log_type_t v44 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_63(v44))
    {
      uint64_t v45 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v46 = OUTLINED_FUNCTION_7_0(32LL);
      a12 = v46;
      *(_DWORD *)uint64_t v45 = 136315138;
      uint64_t v47 = EmergencyType.description.getter(value);
      *(void *)(v24 + 24) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v47, v48, &a12);
      OUTLINED_FUNCTION_87_15(v24 + 24, v24 + 32);
      OUTLINED_FUNCTION_34_0();
      OUTLINED_FUNCTION_57_0( &dword_0,  v28,  v25,  "#CallingIntentContactNeedsDisambiguationFlowStrategy emergency type is %s",  v45);
      OUTLINED_FUNCTION_17_0(v46);
      OUTLINED_FUNCTION_0_2(v46);
      OUTLINED_FUNCTION_0_2((uint64_t)v45);
    }

    uint64_t v50 = *(void *)(*(void *)(v24 + 48) + 16LL);
    *(void *)(v24 + 168) = v50;
    if (v50)
    {
      uint64_t v51 = *(void *)(type metadata accessor for SiriKitDisambiguationItemPair(0LL) - 8);
      *(_DWORD *)(v24 + outlined init with copy of SharedGlobalsProviding(v0 - 128, v0 - 248) = *(_DWORD *)(v51 + 80);
      *(void *)(v24 + 176) = *(void *)(v51 + 72);
      *(void *)(v24 + 19__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
      *(void *)(v24 + 200) = _swiftEmptyArrayStorage;
      OUTLINED_FUNCTION_6_3();
      os_log_type_t v52 = (void *)OUTLINED_FUNCTION_46();
      OUTLINED_FUNCTION_148_10(v52);
      OUTLINED_FUNCTION_41_14();
      return closure #1 in CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForEmergencyNeedsDisambiguation(app:disambiguationItems:nlContextUpdate:)( v53,  v54,  v55,  v56);
    }

    else
    {
      *(void *)(v24 + 184) = _swiftEmptyArrayStorage;
      int v65 = *(unsigned __int8 *)(v24 + 252);
      unint64_t v66 = *(os_log_s **)(v24 + 160);
      uint64_t v67 = *(void *)(v24 + 128);
      uint64_t v68 = *(void *)(v24 + 56);
      static DialogPhase.clarification.getter(v49);
      uint64_t v69 = OUTLINED_FUNCTION_154_10();
      *(void *)(v69 + ++*(void *)(v0 + 16) = v68;
      OutputGenerationManifest.init(dialogPhase:_:)( v67,  partial apply for closure #2 in CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForEmergencyNeedsDisambiguation(app:disambiguationItems:nlContextUpdate:),  v69);
      uint64_t v70 = OUTLINED_FUNCTION_46_0();
      Logger.logObject.getter(v70);
      os_log_type_t v71 = OUTLINED_FUNCTION_6_0();
      BOOL v72 = OUTLINED_FUNCTION_35_12(v71);
      if (v65)
      {
        if (v72)
        {
          unsigned __int8 v73 = (_WORD *)OUTLINED_FUNCTION_1_0();
          *unsigned __int8 v73 = 0;
          OUTLINED_FUNCTION_5_38( &dword_0,  v66,  v71,  "#CallingIntentContactNeedsDisambiguationFlowStrategy makePromptForEmergencyNeedsDisambiguation for local emergency");
          OUTLINED_FUNCTION_0_2((uint64_t)v73);
        }

        uint64_t v74 = (void *)swift_task_alloc(dword_441624);
        OUTLINED_FUNCTION_196_6(v74);
        OUTLINED_FUNCTION_41_14();
        return CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForLocalEmergencyDisambiguation(app:disambiguationItems:outputGenerationManifest:)( v75,  v76,  v77,  v78);
      }

      else
      {
        if (v72)
        {
          uint64_t v79 = (_WORD *)OUTLINED_FUNCTION_1_0();
          *uint64_t v79 = 0;
          OUTLINED_FUNCTION_5_38( &dword_0,  v66,  v71,  "#CallingIntentContactNeedsDisambiguationFlowStrategy makePromptForEmergencyNeedsDisambiguation for foreign emergency");
          OUTLINED_FUNCTION_0_2((uint64_t)v79);
        }

        uint64_t v80 = (void *)swift_task_alloc(dword_44161C);
        OUTLINED_FUNCTION_177_3(v80);
        OUTLINED_FUNCTION_41_14();
        return CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForForeignEmergencyDisambiguation(disambiguationItems:outputGenerationManifest:)( v81,  v82,  v83);
      }
    }
  }

uint64_t CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForEmergencyNeedsDisambiguation(app:disambiguationItems:nlContextUpdate:)()
{
  if (v1) {
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_17_3();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t EnumTagSinglePayload;
  uint64_t v3;
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  os_log_s *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  os_log_type_t v18;
  BOOL v19;
  uint8_t *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint8_t *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v1, 1LL, *(void *)(v0 + 96));
  if ((_DWORD)EnumTagSinglePayload == 1)
  {
    OUTLINED_FUNCTION_122_0( EnumTagSinglePayload,  &demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
    uint64_t v3 = *(void *)(v0 + 200);
  }

  else
  {
    uint64_t v4 = *(void *)(v0 + 200);
    outlined init with take of DisambiguationItemWithDirectInvocationModel(v1, *(void *)(v0 + 120));
    OUTLINED_FUNCTION_98();
    outlined init with copy of LocalEmergencyCallDisambiguationModel();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v4);
    uint64_t v3 = *(void *)(v0 + 200);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      OUTLINED_FUNCTION_278_3();
      uint64_t v3 = v35;
    }

    uint64_t v6 = *(void *)(v3 + 16);
    if (v6 >= *(void *)(v3 + 24) >> 1)
    {
      OUTLINED_FUNCTION_278_3();
      uint64_t v3 = v36;
    }

    uint64_t v7 = *(void *)(v0 + 112);
    uint64_t v8 = *(void *)(v0 + 120);
    uint64_t v9 = *(void *)(v0 + 104);
    *(void *)(v3 + ++*(void *)(v0 + 16) = v6 + 1;
    outlined init with take of DisambiguationItemWithDirectInvocationModel( v7,  v3 + ((*(unsigned __int8 *)(v9 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
    + *(void *)(v9 + 72) * v6);
    outlined destroy of MainFlow(v8, type metadata accessor for DisambiguationItemWithDirectInvocationModel);
  }

  uint64_t v10 = *(void *)(v0 + 192) + 1LL;
  if (v10 == *(void *)(v0 + 168))
  {
    uint64_t v11 = swift_bridgeObjectRelease();
    *(void *)(v0 + 184) = v3;
    uint64_t v12 = *(unsigned __int8 *)(v0 + 252);
    uint64_t v13 = *(os_log_s **)(v0 + 160);
    uint64_t v14 = *(void *)(v0 + 128);
    uint64_t v15 = *(void *)(v0 + 56);
    static DialogPhase.clarification.getter(v11);
    uint64_t v16 = OUTLINED_FUNCTION_154_10();
    *(void *)(v16 + ++*(void *)(v0 + 16) = v15;
    OutputGenerationManifest.init(dialogPhase:_:)( v14,  partial apply for closure #2 in CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForEmergencyNeedsDisambiguation(app:disambiguationItems:nlContextUpdate:),  v16);
    uint64_t v17 = OUTLINED_FUNCTION_92_0();
    Logger.logObject.getter(v17);
    uint64_t v18 = OUTLINED_FUNCTION_6_0();
    uint64_t v19 = OUTLINED_FUNCTION_35_12(v18);
    if (v12)
    {
      if (v19)
      {
        uint64_t v20 = (uint8_t *)OUTLINED_FUNCTION_1_0();
        *(_WORD *)uint64_t v20 = 0;
        OUTLINED_FUNCTION_5( &dword_0,  v13,  v18,  "#CallingIntentContactNeedsDisambiguationFlowStrategy makePromptForEmergencyNeedsDisambiguation for local emergency",  v20);
        OUTLINED_FUNCTION_0_2((uint64_t)v20);
      }

      os_log_type_t v21 = (void *)swift_task_alloc(dword_441624);
      os_log_type_t v22 = OUTLINED_FUNCTION_196_6(v21);
      return CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForLocalEmergencyDisambiguation(app:disambiguationItems:outputGenerationManifest:)( v22,  v23,  v3,  v24);
    }

    else
    {
      if (v19)
      {
        PhoneCallFlowDelegatePlugin::EmergencyType_optional v31 = (uint8_t *)OUTLINED_FUNCTION_1_0();
        *(_WORD *)PhoneCallFlowDelegatePlugin::EmergencyType_optional v31 = 0;
        OUTLINED_FUNCTION_5( &dword_0,  v13,  v18,  "#CallingIntentContactNeedsDisambiguationFlowStrategy makePromptForEmergencyNeedsDisambiguation for foreign emergency",  v31);
        OUTLINED_FUNCTION_0_2((uint64_t)v31);
      }

      uint64_t v32 = (void *)swift_task_alloc(dword_44161C);
      uint64_t v33 = OUTLINED_FUNCTION_177_3(v32);
      return CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForForeignEmergencyDisambiguation(disambiguationItems:outputGenerationManifest:)( v33,  v3,  v34);
    }
  }

  else
  {
    *(void *)(v0 + 19__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v10;
    *(void *)(v0 + 200) = v3;
    uint64_t v26 = *(void *)(v0 + 48)
    uint64_t v27 = (void *)swift_task_alloc(dword_44164C);
    uint64_t v28 = OUTLINED_FUNCTION_148_10(v27);
    return closure #1 in CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForEmergencyNeedsDisambiguation(app:disambiguationItems:nlContextUpdate:)( v28,  v26,  v29,  v30);
  }

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  OUTLINED_FUNCTION_49_3();
  OUTLINED_FUNCTION_39_0(v2);
  *(void *)(v0 + 224) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_17_3();
}

{
  void *v0;
  uint64_t (*v1)(void);
  (*(void (**)(void, void))(v0[18] + 8LL))(v0[19], v0[17]);
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  uint64_t v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return OUTLINED_FUNCTION_6_17(v1);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  OUTLINED_FUNCTION_49_3();
  OUTLINED_FUNCTION_39_0(v2);
  *(void *)(v0 + 240) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_17_3();
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_214_4();
  OUTLINED_FUNCTION_142_12(*(void *)(v0 + 152));
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  return OUTLINED_FUNCTION_6_17(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_214_4();
  OUTLINED_FUNCTION_142_12(*(void *)(v0 + 152));
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_9_2();
  return OUTLINED_FUNCTION_6_17(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t closure #1 in CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForEmergencyNeedsDisambiguation(app:disambiguationItems:nlContextUpdate:)( uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  *(void *)(v4 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a2;
  *(void *)(v4 + 120) = a4;
  *(_BYTE *)(v4 + 264) = a3;
  *(void *)(v4 + outlined init with copy of SharedGlobalsProviding(v0, v1 - 104) = a1;
  uint64_t v5 = type metadata accessor for UUID(0LL);
  *(void *)(v4 + outlined init with copy of SharedGlobalsProviding(v0, v1 - 128) = swift_task_alloc((*(void *)(*(void *)(v5 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  *(void *)(v4 + 136) = swift_task_alloc((*(void *)(*(void *)(v6 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for SiriKitDisambiguationItemPair(0LL);
  *(void *)(v4 + 144) = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  *(void *)(v4 + 15__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v8;
  *(void *)(v4 + 160) = swift_task_alloc((*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch( closure #1 in CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForEmergencyNeedsDisambiguation(app:disambiguationItems:nlContextUpdate:),  0LL,  0LL);
}

#error "2F9E70: call analysis failed (funcsize=486)"
uint64_t closure #1 in CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForEmergencyNeedsDisambiguation(app:disambiguationItems:nlContextUpdate:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_22_9(*(void *)(v2 + 248), v3);
  if (v1)
  {
    uint64_t v4 = swift_errorRelease(v1);
    OUTLINED_FUNCTION_93_1(v4, &demangling cache variable for type metadata for SpeakableString?);
  }

  else
  {
    uint64_t v5 = swift_bridgeObjectRelease();
    *(void *)(v2 + 256) = v0;
    OUTLINED_FUNCTION_122_0(v5, &demangling cache variable for type metadata for SpeakableString?);
  }

  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_9_11(v6, v7, v8);
}

#error "2FA248: call analysis failed (funcsize=60)"
#error "2FA32C: call analysis failed (funcsize=57)"
uint64_t closure #2 in CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForEmergencyNeedsDisambiguation(app:disambiguationItems:nlContextUpdate:)( uint64_t a1,  uint64_t a2)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;
  type metadata accessor for ResponseMode(0LL);
  __chkstk_darwin();
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for ResponseType(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLContextUpdate?);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  OutputGenerationManifest.canUseServerTTS.setter(0LL);
  OutputGenerationManifest.listenAfterSpeaking.setter(1LL);
  outlined init with copy of PhoneCallNLIntent?( a2,  (uint64_t)v10,  &demangling cache variable for type metadata for NLContextUpdate?);
  OutputGenerationManifest.nlContextUpdate.setter(v10);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for ResponseType.disambiguation(_:), v5);
  uint64_t v11 = OutputGenerationManifest.responseType.setter(v8);
  static ResponseMode.voiceForward.getter(v11);
  return OutputGenerationManifest.responseMode.setter(v4);
}

uint64_t CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForForeignEmergencyDisambiguation(disambiguationItems:outputGenerationManifest:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  void v4[14] = a3;
  v4[15] = v3;
  v4[12] = a1;
  v4[13] = a2;
  uint64_t v5 = OUTLINED_FUNCTION_82_0();
  v4[16] = v5;
  v4[17] = OUTLINED_FUNCTION_23(*(void *)(v5 - 8));
  uint64_t v6 = OUTLINED_FUNCTION_94();
  void v4[18] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v4[19] = v7;
  v4[20] = OUTLINED_FUNCTION_23(v7);
  uint64_t v8 = type metadata accessor for PhoneSnippetDataModels(0LL);
  v4[21] = v8;
  v4[22] = OUTLINED_FUNCTION_23(*(void *)(v8 - 8));
  uint64_t v9 = type metadata accessor for ForeignEmergencyCallDisambiguationModel(0LL);
  v4[23] = v9;
  _BYTE v4[24] = OUTLINED_FUNCTION_23(*(void *)(v9 - 8));
  uint64_t v10 = type metadata accessor for Locale(0LL);
  v4[25] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v4[26] = v11;
  v4[27] = OUTLINED_FUNCTION_23(v11);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForForeignEmergencyDisambiguation(disambiguationItems:outputGenerationManifest:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(void), uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26)
{
  a25 = v28;
  a26 = v29;
  a24 = v27;
  uint64_t v30 = OUTLINED_FUNCTION_153_10();
  uint64_t v31 = *(void *)((char *)&dword_10 + (v30 & 0xFFFFFFFFFFFFF8LL));
  OUTLINED_FUNCTION_6_3();
  for (; v31; uint64_t v31 = _CocoaArrayWrapper.endIndex.getter(v61))
  {
    uint64_t v26 = 0LL;
    while (1)
    {
      id v32 = (v30 & 0xC000000000000001LL) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v26, v30)
          : OUTLINED_FUNCTION_27_10(v30 + 8 * v26);
      uint64_t v33 = v32;
      *(void *)(v27 + 224) = v32;
      uint64_t v34 = v26 + 1;
      if (__OFADD__(v26, 1LL)) {
        break;
      }
      id v35 = [v32 personHandle];
      if (v35)
      {
        uint64_t v36 = v35;
        uint64_t v37 = (char *)[v35 emergencyType];

        if (v37 == (_BYTE *)&dword_0 + 2)
        {
          uint64_t v58 = *(void **)(v27 + 120);
          OUTLINED_FUNCTION_7_4(v30);
          type metadata accessor for SirikitDeviceState(0LL);
          (*(void (**)(uint64_t *__return_ptr))(*v58 + 208LL))(&a10);
          *(void *)(v27 + 23__swift_destroy_boxed_opaque_existential_1(v0 + 2) = SirikitDeviceState.__allocating_init(from:)(&a10);
          uint64_t v59 = (void *)v58[14];
          *(void *)(v27 + 240) = v59;
          uint64_t v60 = (void *)OUTLINED_FUNCTION_10_2(*(void *)(class metadata base offset for StartCallCATsSimple
                                                           + *v59
                                                           + 800));
          *(void *)(v27 + outlined init with copy of SharedGlobalsProviding(v0 - 128, v0 - 248) = v60;
          *uint64_t v60 = v27;
          v60[1] = CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForForeignEmergencyDisambiguation(disambiguationItems:outputGenerationManifest:);
          return OUTLINED_FUNCTION_14_2(a9);
        }
      }

      ++v26;
      if (v34 == v31) {
        goto LABEL_11;
      }
    }

    __break(1u);
LABEL_18:
    if (v30 < 0) {
      uint64_t v61 = v30;
    }
    else {
      uint64_t v61 = v30 & 0xFFFFFFFFFFFFFF8LL;
    }
    OUTLINED_FUNCTION_6_3();
  }

uint64_t CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForForeignEmergencyDisambiguation(disambiguationItems:outputGenerationManifest:)( uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 256) = a1;
  *(void *)(v3 + 264) = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForForeignEmergencyDisambiguation(disambiguationItems:outputGenerationManifest:)()
{
  uint64_t v2 = v0[27];
  uint64_t v1 = (void *)v0[28];
  uint64_t v12 = v0[26];
  uint64_t v13 = (void *)v0[30];
  type metadata accessor for PhonePerson(0LL);
  OUTLINED_FUNCTION_3_8();
  id v3 = v1;
  static Device.current.getter(v0 + 2);
  uint64_t v4 = v0[6];
  OUTLINED_FUNCTION_19_61(v0 + 2);
  uint64_t v5 = OUTLINED_FUNCTION_269_2();
  dispatch thunk of DeviceState.siriLocale.getter(v5, v4);
  OUTLINED_FUNCTION_90();
  static PhonePerson.make(phonePerson:options:locale:)(v1, 0, v2);
  v0[34] = v6;

  OUTLINED_FUNCTION_168_4(v12);
  uint64_t v7 = OUTLINED_FUNCTION_108_5(*(void *)(class metadata base offset for StartCallCATsSimple + *v13 + 144));
  uint64_t v14 = v8;
  uint64_t v9 = (void *)swift_task_alloc(v7);
  v0[35] = v9;
  *uint64_t v9 = v0;
  v9[1] = CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForForeignEmergencyDisambiguation(disambiguationItems:outputGenerationManifest:);
  uint64_t v10 = OUTLINED_FUNCTION_120_0();
  return v14(v10);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_39_0(v3);
  v2[36] = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_release(v2[29]);
    OUTLINED_FUNCTION_38_1();
    v2[37] = v0;
  }

  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_9_11(v4, v5, v6);
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_14_1(*(void *)(v0 + 312));
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_76_1();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_17_3();
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);
  OUTLINED_FUNCTION_21_0();
  uint64_t v1 = *(void **)(v0 + 256);
  uint64_t v2 = *(void **)(v0 + 224);
  id v3 = *(void *)(v0 + 192);
  uint64_t v4 = *(void *)(v0 + 176);
  uint64_t v6 = *(void *)(v0 + 152);
  uint64_t v5 = *(void *)(v0 + 160);
  uint64_t v7 = *(void *)(v0 + 144);

  OUTLINED_FUNCTION_38_1();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  outlined destroy of MainFlow(v4, type metadata accessor for PhoneSnippetDataModels);
  outlined destroy of MainFlow(v3, type metadata accessor for ForeignEmergencyCallDisambiguationModel);
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return OUTLINED_FUNCTION_2_38(v8);
}

{
  uint64_t v0;
  void *v1;
  OUTLINED_FUNCTION_50_11();
  uint64_t v1 = *(void **)(v0 + 224);
  swift_release(*(void *)(v0 + 232));

  OUTLINED_FUNCTION_130_5();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  return OUTLINED_FUNCTION_12_4(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  OUTLINED_FUNCTION_50_11();
  uint64_t v1 = *(void **)(v0 + 256);
  uint64_t v2 = *(void **)(v0 + 224);
  OUTLINED_FUNCTION_31_1(*(void *)(v0 + 232));

  OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_130_5();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_92_0();
  return OUTLINED_FUNCTION_12_4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForForeignEmergencyDisambiguation(disambiguationItems:outputGenerationManifest:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21)
{
  uint64_t v51 = (void *)v21[32];
  uint64_t v52 = (void *)v21[37];
  uint64_t v22 = v21[23];
  uint64_t v23 = v21[24];
  uint64_t v25 = v21[21];
  uint64_t v24 = v21[22];
  uint64_t v27 = v21[19];
  uint64_t v26 = v21[20];
  uint64_t v50 = v21[18];
  uint64_t v28 = v21[14];
  uint64_t v29 = v21[15];
  specialized BidirectionalCollection.last.getter(v21[13], v23);
  specialized Collection.first.getter();
  uint64_t v30 = (void *)(v23 + *(int *)(v22 + 28));
  *uint64_t v30 = 0xD00000000000001ELL;
  v30[1] = 0x8000000000346C30LL;
  uint64_t v31 = (void *)(v23 + *(int *)(v22 + 24));
  *uint64_t v31 = 0LL;
  v31[1] = 0xE000000000000000LL;
  outlined init with copy of LocalEmergencyCallDisambiguationModel();
  swift_storeEnumTagMultiPayload(v24, v25, 4LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(v26, v28, v50);
  OutputGenerationManifest.responseViewId.setter(0xD00000000000001ELL, 0x8000000000346C30LL);
  OutputGenerationManifest.printSupportingDialogInDisplayModes.setter(1LL);
  __swift_project_boxed_opaque_existential_1((void *)(v29 + 184), *(void *)(v29 + 208));
  v21[10] = v25;
  lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels and conformance PhoneSnippetDataModels,  type metadata accessor for PhoneSnippetDataModels,  (uint64_t)&protocol conformance descriptor for PhoneSnippetDataModels);
  v21[11] = v32;
  __swift_allocate_boxed_opaque_existential_1(v21 + 7);
  outlined init with copy of LocalEmergencyCallDisambiguationModel();
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v34 = OUTLINED_FUNCTION_8_2(v33, 48LL);
  *(_OWORD *)(v34 + ++*(void *)(v0 + 16) = xmmword_31FBC0;
  *(void *)(v34 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v51;
  *(void *)(v34 + 40) = v52;
  uint64_t v53 = v34;
  specialized Array._endMutation()(v34, v35, v36, v37);
  v21[38] = v53;
  id v38 = v51;
  id v39 = v52;
  unint64_t v40 = (void *)OUTLINED_FUNCTION_46();
  v21[39] = v40;
  void *v40 = v21;
  v40[1] = CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForForeignEmergencyDisambiguation(disambiguationItems:outputGenerationManifest:);
  OUTLINED_FUNCTION_41_14();
  return dispatch thunk of ResponseGenerating.makeResponseOutput(conversationModel:dialog:outputGenerationManifest:)( v41,  v42,  v43,  v44,  v45,  v46,  v47,  v48,  v50,  v21 + 7,  v51,  v52,  v53,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  v21);
}

uint64_t CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForLocalEmergencyDisambiguation(app:disambiguationItems:outputGenerationManifest:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[227] = v4;
  v5[221] = a4;
  v5[215] = a3;
  v5[209] = a1;
  uint64_t v6 = OUTLINED_FUNCTION_94();
  v5[228] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[229] = v7;
  v5[230] = OUTLINED_FUNCTION_23(v7);
  uint64_t v8 = type metadata accessor for PhoneSnippetDataModels(0LL);
  v5[231] = v8;
  v5[232] = OUTLINED_FUNCTION_23(*(void *)(v8 - 8));
  uint64_t v9 = type metadata accessor for LocalEmergencyCallDisambiguationModel(0LL);
  v5[233] = v9;
  v5[234] = OUTLINED_FUNCTION_23(*(void *)(v9 - 8));
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForLocalEmergencyDisambiguation(app:disambiguationItems:outputGenerationManifest:)()
{
  uint64_t v1 = v0[227];
  uint64_t v2 = *(void *)(v1 + 56);
  OUTLINED_FUNCTION_19_61((void *)(v1 + 24));
  uint64_t v3 = OUTLINED_FUNCTION_269_2();
  v4(v3, v2);
  v0[201] = static UserFacingCallingAppUtils.getAppBundleId(preferredCallProvider:deviceState:)(1LL, v0 + 177);
  v0[202] = v5;
  v0[235] = v5;
  __swift_destroy_boxed_opaque_existential_1(v0 + 177);
  OUTLINED_FUNCTION_11_18(v1);
  uint64_t v6 = type metadata accessor for CNContactStore( 255LL,  &lazy cache variable for type metadata for DialogExecutionResult,  &OBJC_CLASS___DialogExecutionResult_ptr);
  swift_asyncLet_begin( v0 + 82,  0LL,  v6,  &async function pointer to partial apply for implicit closure #1 in CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForLocalEmergencyDisambiguation(app:disambiguationItems:outputGenerationManifest:),  v1);
  OUTLINED_FUNCTION_11_18(v1);
  swift_asyncLet_begin( v0 + 2,  0LL,  &type metadata for String,  &async function pointer to partial apply for implicit closure #2 in CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForLocalEmergencyDisambiguation(app:disambiguationItems:outputGenerationManifest:),  v1);
  return swift_asyncLet_get_throwing( v0 + 2,  v0 + 197,  CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForLocalEmergencyDisambiguation(app:disambiguationItems:outputGenerationManifest:),  v0 + 172);
}

{
  uint64_t v0;
  void *v1;
  v1[236] = v0;
  if (v0) {
    return OUTLINED_FUNCTION_33_0((uint64_t)CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForLocalEmergencyDisambiguation(app:disambiguationItems:outputGenerationManifest:));
  }
  v1[237] = v1[201];
  return OUTLINED_FUNCTION_33_0((uint64_t)CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForLocalEmergencyDisambiguation(app:disambiguationItems:outputGenerationManifest:));
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  void *v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v23 = *(void *)(v0 + 1896);
  uint64_t v1 = *(void **)(v0 + 1872);
  uint64_t v2 = *(void *)(v0 + 1864);
  uint64_t v24 = *(void *)(v0 + 1856);
  uint64_t v25 = *(void *)(v0 + 1848);
  uint64_t v27 = *(void *)(v0 + 1832);
  uint64_t v28 = *(void *)(v0 + 1840);
  uint64_t v29 = *(void *)(v0 + 1824);
  uint64_t v3 = *(void **)(v0 + 1816);
  uint64_t v26 = *(void *)(v0 + 1768);
  uint64_t v4 = *(void *)(v0 + 1720);
  os_log_type_t v21 = *(void *)(v0 + 1576);
  uint64_t v22 = *(void *)(v0 + 1880);
  uint64_t v5 = *(void *)(v0 + 1584);
  uint64_t v6 = v3[6];
  uint64_t v7 = v3[7];
  __swift_project_boxed_opaque_existential_1(v3 + 3, v6);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 56);
  OUTLINED_FUNCTION_48_0();
  swift_bridgeObjectRetain();
  uint64_t v9 = v8(v6, v7);
  LOBYTE(OUTLINED_FUNCTION_45_9(v4, v5, v6) = OUTLINED_FUNCTION_56_28(v9);
  uint64_t v10 = OUTLINED_FUNCTION_38_1();
  uint64_t v11 = (void *)((char *)v1 + *(int *)(v2 + 36));
  *uint64_t v11 = 0xD00000000000001CLL;
  v11[1] = 0x8000000000346C50LL;
  *uint64_t v1 = v23;
  v1[1] = v22;
  v1[2] = v4;
  UUID.init()(v10);
  *(void *)(v0 + 159__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v21;
  *(void *)(v0 + 1600) = v5;
  Loggable.init(wrappedValue:)(v0 + 1592, &type metadata for String);
  *((_BYTE *)v1 + *(int *)(v2 + closure #1 in TemplatingOperation.onComplete(_:)( *(void (**)(char *))(v0 + 16),  *(void *)(v0 + 24),  *(void *)(v0 + 32)) = v6 & 1;
  outlined init with copy of LocalEmergencyCallDisambiguationModel();
  swift_storeEnumTagMultiPayload(v24, v25, 5LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(v28, v26, v29);
  OutputGenerationManifest.responseViewId.setter(0xD00000000000001CLL, 0x8000000000346C50LL);
  outlined init with copy of SharedGlobalsProviding((uint64_t)(v3 + 23), v0 + 1336);
  uint64_t v12 = *(_OWORD *)(v0 + 1360);
  *(_OWORD *)(v0 + 1904) = v12;
  *(void *)(v0 + 1920) = __swift_project_boxed_opaque_existential_1((void *)(v0 + 1336), v12);
  *(void *)(v0 + 1520) = v25;
  lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels and conformance PhoneSnippetDataModels,  type metadata accessor for PhoneSnippetDataModels,  (uint64_t)&protocol conformance descriptor for PhoneSnippetDataModels);
  *(void *)(v0 + 1528) = v13;
  __swift_allocate_boxed_opaque_existential_1((void *)(v0 + 1496));
  outlined init with copy of LocalEmergencyCallDisambiguationModel();
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v15 = OUTLINED_FUNCTION_8_2(v14, 40LL);
  *(void *)(v0 + 1928) = v15;
  *(_OWORD *)(v15 + ++*(void *)(v0 + 16) = xmmword_31FE60;
  OUTLINED_FUNCTION_192_5();
  return swift_asyncLet_get_throwing(v16, v17, v18, v19);
}

{
  uint64_t v0;
  uint64_t v1;
  *(void *)(v1 + 1936) = v0;
  if (v0) {
    return OUTLINED_FUNCTION_33_0((uint64_t)CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForLocalEmergencyDisambiguation(app:disambiguationItems:outputGenerationManifest:));
  }
  else {
    return OUTLINED_FUNCTION_33_0((uint64_t)CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForLocalEmergencyDisambiguation(app:disambiguationItems:outputGenerationManifest:));
  }
}

{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  OUTLINED_FUNCTION_50_11();
  uint64_t v1 = v0[241];
  uint64_t v2 = (void *)v0[203];
  *(void *)(v1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v2;
  uint64_t v15 = v1;
  specialized Array._endMutation()(v3, v4, v5, v6);
  v0[243] = v15;
  uint64_t v7 = v2;
  uint64_t v8 = (void *)OUTLINED_FUNCTION_46();
  v0[244] = v8;
  *uint64_t v8 = v0;
  v8[1] = CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForLocalEmergencyDisambiguation(app:disambiguationItems:outputGenerationManifest:);
  OUTLINED_FUNCTION_77_22();
  return dispatch thunk of ResponseGenerating.makeResponseOutput(resultModel:dialog:outputGenerationManifest:)( v9,  v10,  v11,  v12,  v13);
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_14_1(*(void *)(v0 + 1952));
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_76_1();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_17_3();
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v1 = v0[234];
  uint64_t v2 = v0[232];
  (*(void (**)(void, void))(v0[229] + 8LL))(v0[230], v0[228]);
  outlined destroy of MainFlow(v2, type metadata accessor for PhoneSnippetDataModels);
  outlined destroy of MainFlow(v1, type metadata accessor for LocalEmergencyCallDisambiguationModel);
  OUTLINED_FUNCTION_11_12();
  OUTLINED_FUNCTION_274_2();
  return OUTLINED_FUNCTION_11_16();
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForLocalEmergencyDisambiguation(app:disambiguationItems:outputGenerationManifest:));
}

{
  OUTLINED_FUNCTION_146_8();
  OUTLINED_FUNCTION_2_16();
  return OUTLINED_FUNCTION_1_19();
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForLocalEmergencyDisambiguation(app:disambiguationItems:outputGenerationManifest:));
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  swift_release_n(*(void *)(v0 + 1816), 3LL);
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  uint64_t v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return OUTLINED_FUNCTION_24_1(v1);
}

{
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_2_16();
  return OUTLINED_FUNCTION_1_19();
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForLocalEmergencyDisambiguation(app:disambiguationItems:outputGenerationManifest:));
}

{
  OUTLINED_FUNCTION_146_8();
  OUTLINED_FUNCTION_2_16();
  return OUTLINED_FUNCTION_1_19();
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForLocalEmergencyDisambiguation(app:disambiguationItems:outputGenerationManifest:));
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_131_11();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  return OUTLINED_FUNCTION_6_17(*(uint64_t (**)(void))(v0 + 8));
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  OUTLINED_FUNCTION_21_0();
  uint64_t v1 = v0[241];
  uint64_t v2 = v0[234];
  uint64_t v3 = v0[232];
  uint64_t v4 = v0[229];
  *(void *)(v1 + ++*(void *)(v0 + 16) = 0LL;
  swift_release(v1);
  OUTLINED_FUNCTION_7_79(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  outlined destroy of MainFlow(v3, type metadata accessor for PhoneSnippetDataModels);
  outlined destroy of MainFlow(v2, type metadata accessor for LocalEmergencyCallDisambiguationModel);
  __swift_destroy_boxed_opaque_existential_1(v0 + 187);
  OUTLINED_FUNCTION_11_12();
  return swift_asyncLet_finish( v0 + 2,  v0 + 197,  CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForLocalEmergencyDisambiguation(app:disambiguationItems:outputGenerationManifest:),  v0 + 222);
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForLocalEmergencyDisambiguation(app:disambiguationItems:outputGenerationManifest:));
}

{
  OUTLINED_FUNCTION_146_8();
  OUTLINED_FUNCTION_2_16();
  return OUTLINED_FUNCTION_1_19();
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForLocalEmergencyDisambiguation(app:disambiguationItems:outputGenerationManifest:));
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_131_11();
  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_46_0();
  return OUTLINED_FUNCTION_6_17(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t implicit closure #1 in CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForLocalEmergencyDisambiguation(app:disambiguationItems:outputGenerationManifest:)( uint64_t a1, uint64_t a2)
{
  v2[7] = a1;
  _BYTE v2[8] = a2;
  uint64_t v3 = type metadata accessor for Locale(0LL);
  void v2[9] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[10] = v4;
  v2[11] = swift_task_alloc((*(void *)(v4 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch( implicit closure #1 in CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForLocalEmergencyDisambiguation(app:disambiguationItems:outputGenerationManifest:),  0LL,  0LL);
}

uint64_t implicit closure #1 in CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForLocalEmergencyDisambiguation(app:disambiguationItems:outputGenerationManifest:)()
{
  uint64_t v1 = *(void **)(v0[8] + 112LL);
  unint64_t v2 = OUTLINED_FUNCTION_153_10();
  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFF8LL));
    OUTLINED_FUNCTION_48_0();
    if (v3) {
      goto LABEL_3;
    }
LABEL_15:
    OUTLINED_FUNCTION_34_0();
LABEL_16:
    v0[12] = _swiftEmptyArrayStorage;
    OUTLINED_FUNCTION_34_0();
    uint64_t v20 = OUTLINED_FUNCTION_108_5(*(void *)(class metadata base offset for StartCallCATsSimple + *v1 + 176));
    uint64_t v27 = v21;
    uint64_t v22 = (void *)swift_task_alloc(v20);
    v0[13] = v22;
    *uint64_t v22 = v0;
    v22[1] = implicit closure #1 in CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForLocalEmergencyDisambiguation(app:disambiguationItems:outputGenerationManifest:);
    return v27(_swiftEmptyArrayStorage);
  }

  OUTLINED_FUNCTION_48_0();
  uint64_t v3 = OUTLINED_FUNCTION_61_1();
  if (!v3) {
    goto LABEL_15;
  }
LABEL_3:
  uint64_t result = type metadata accessor for PhonePerson(0LL);
  if (v3 >= 1)
  {
    uint64_t v5 = 0LL;
    uint64_t v25 = v0[10];
    unint64_t v26 = v2;
    uint64_t v23 = v1;
    unint64_t v24 = v2 & 0xC000000000000001LL;
    do
    {
      if (v24) {
        id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v2);
      }
      else {
        id v6 = OUTLINED_FUNCTION_27_10(v2 + 8 * v5);
      }
      uint64_t v7 = v6;
      uint64_t v8 = v0[11];
      static Device.current.getter(v0 + 2);
      uint64_t v9 = v0[6];
      OUTLINED_FUNCTION_19_61(v0 + 2);
      uint64_t v10 = OUTLINED_FUNCTION_269_2();
      dispatch thunk of DeviceState.siriLocale.getter(v10, v9);
      __swift_destroy_boxed_opaque_existential_1(v0 + 2);
      static PhonePerson.make(phonePerson:options:locale:)(v7, 0, v8);
      uint64_t v12 = v11;
      OUTLINED_FUNCTION_72_0(*(uint64_t (**)(uint64_t, uint64_t))(v25 + 8));

      if (v12)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v13);
        unint64_t v15 = *(void *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL));
        unint64_t v14 = *(void *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL));
        if (v15 >= v14 >> 1) {
          OUTLINED_FUNCTION_277_2(v14 > 1, v15 + 1);
        }
        uint64_t v16 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v12);
        specialized Array._endMutation()(v16, v17, v18, v19);
      }

      ++v5;
      unint64_t v2 = v26;
    }

    while (v3 != v5);
    OUTLINED_FUNCTION_34_0();
    uint64_t v1 = v23;
    goto LABEL_16;
  }

  __break(1u);
  return result;
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_39_0(v3);
  *(void *)(v2 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_bridgeObjectRelease();
    *(void *)(v2 + 120) = v0;
  }

  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_9_11(v4, v5, v6);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  **(void **)(v0 + 56) = *(void *)(v0 + 120);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return OUTLINED_FUNCTION_3_0(v1);
}

{
  uint64_t v0;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_23_3();
  return OUTLINED_FUNCTION_3_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t implicit closure #2 in CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForLocalEmergencyDisambiguation(app:disambiguationItems:outputGenerationManifest:)( uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + ++*(void *)(v0 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_task_switch( implicit closure #2 in CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForLocalEmergencyDisambiguation(app:disambiguationItems:outputGenerationManifest:),  0LL,  0LL);
}

uint64_t implicit closure #2 in CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForLocalEmergencyDisambiguation(app:disambiguationItems:outputGenerationManifest:)()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2(*(void *)(class metadata base offset for PhoneCallDisplayTextCATsSimple
                                                  + **(void **)(*(void *)(v0 + 24) + 176LL)
                                                  + 168));
  *(void *)(v0 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v1;
  *uint64_t v1 = v0;
  v1[1] = implicit closure #2 in CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForLocalEmergencyDisambiguation(app:disambiguationItems:outputGenerationManifest:);
  return OUTLINED_FUNCTION_3_0(v3);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  void *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  OUTLINED_FUNCTION_29();
  uint64_t v4 = *v3;
  OUTLINED_FUNCTION_22_9(*(void *)(v2 + 32), v5);
  if (v1) {
    return OUTLINED_FUNCTION_24_1(*(uint64_t (**)(void))(v4 + 8));
  }
  *(void *)(v2 + 40) = v0;
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_9_11(v7, v8, v9);
}

uint64_t implicit closure #2 in CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForLocalEmergencyDisambiguation(app:disambiguationItems:outputGenerationManifest:)( uint64_t a1)
{
  uint64_t v2 = *(uint64_t **)(v1 + 16);
  uint64_t v3 = dispatch thunk of LabelExecutionResult.subscript.getter(a1);
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_38_1();
  uint64_t *v2 = v3;
  v2[1] = v5;
  id v6 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return OUTLINED_FUNCTION_6_17(v6);
}

void *CallingIntentContactNeedsDisambiguationFlowStrategy.init(delegate:startCallCATs:startCallCatPatterns:startCallCATsSimple:phoneCallCommonCATs:phoneCallCommonCATsSimple:phoneCallCommonCatPatterns:phoneCallDisplayTextCATsSimple:responseGenerator:siriKitEventSender:appInfoBuilder:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, void *a9, void *a10, void *a11)
{
  *(void *)(v11 + direct field offset for CallingIntentContactNeedsDisambiguationFlowStrategy.personsToDisambiguate) = _swiftEmptyArrayStorage;
  *(void *)(v11 + direct field offset for CallingIntentContactNeedsDisambiguationFlowStrategy.selectedPerson) = 0LL;
  *(_BYTE *)(v11 + direct field offset for CallingIntentContactNeedsDisambiguationFlowStrategy.requiresReprompt) = 0;
  *(_BYTE *)(v11 + direct field offset for CallingIntentContactNeedsDisambiguationFlowStrategy.shouldClearContext) = 0;
  outlined init with copy of SharedGlobalsProviding(a3, (uint64_t)v26);
  OUTLINED_FUNCTION_29_0(v16, (uint64_t)v25);
  outlined init with copy of SharedGlobalsProviding((uint64_t)a9, (uint64_t)v24);
  outlined init with copy of SharedGlobalsProviding((uint64_t)a10, (uint64_t)v23);
  outlined init with copy of SharedGlobalsProviding((uint64_t)a11, (uint64_t)v22);
  uint64_t v17 = CallingIntentBaseFlowStrategy.init(delegate:startCallCATs:startCallCatPatterns:startCallCATsSimple:phoneCallCommonCATs:phoneCallCommonCATsSimple:phoneCallCommonCatPatterns:phoneCallDisplayTextCATsSimple:responseGenerator:siriKitEventSender:appInfoBuilder:)( a1,  a2,  v26,  a4,  a5,  a6,  v25,  a8,  v24,  v23,  v22);
  __swift_destroy_boxed_opaque_existential_1(a11);
  __swift_destroy_boxed_opaque_existential_1(a10);
  __swift_destroy_boxed_opaque_existential_1(a9);
  __swift_destroy_boxed_opaque_existential_1(a7);
  OUTLINED_FUNCTION_11_12();
  return v17;
}

void CallingIntentContactNeedsDisambiguationFlowStrategy.__ivar_destroyer()
{
  swift_bridgeObjectRelease(*(void *)(v0
                                      + direct field offset for CallingIntentContactNeedsDisambiguationFlowStrategy.personsToDisambiguate));
}

void CallingIntentContactNeedsDisambiguationFlowStrategy.deinit()
{
  uint64_t v1 = v0;
  swift_bridgeObjectRelease();

  OUTLINED_FUNCTION_2();
}

uint64_t CallingIntentContactNeedsDisambiguationFlowStrategy.__deallocating_deinit()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t protocol witness for NeedsDisambiguationFlowStrategyAsync.authenticationPolicy.getter in conformance CallingIntentContactNeedsDisambiguationFlowStrategy<A>()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 312LL))();
}

uint64_t protocol witness for NeedsDisambiguationFlowStrategyAsync.paginationStyle(resolveRecord:) in conformance CallingIntentContactNeedsDisambiguationFlowStrategy<A>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = type metadata accessor for CallingIntentContactNeedsDisambiguationFlowStrategy( 0LL,  *(void *)(a2 + 264),  *(void *)(a2 + 272),  a4);
  return NeedsDisambiguationFlowStrategyAsync.paginationStyle(resolveRecord:)(a1, v6, a3);
}

uint64_t protocol witness for NeedsDisambiguationFlowStrategyAsync.actionForInput(_:resolveRecord:) in conformance CallingIntentContactNeedsDisambiguationFlowStrategy<A>()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 416LL))();
}

uint64_t protocol witness for NeedsDisambiguationFlowStrategyAsync.makeDisambiguationItemContainer(resolveRecord:) in conformance CallingIntentContactNeedsDisambiguationFlowStrategy<A>( uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + ++*(void *)(v0 + 16) = a1;
  uint64_t v5 = *(int **)(**(void **)v2 + 440LL);
  uint64_t v8 = (uint64_t (*)(uint64_t))((char *)v5 + *v5);
  uint64_t v6 = (void *)swift_task_alloc(v5[1]);
  *(void *)(v3 + 24) = v6;
  *uint64_t v6 = v3;
  v6[1] = protocol witness for NeedsDisambiguationFlowStrategyAsync.makeDisambiguationItemContainer(resolveRecord:) in conformance CallingIntentContactNeedsDisambiguationFlowStrategy<A>;
  return v8(a2);
}

uint64_t protocol witness for NeedsDisambiguationFlowStrategyAsync.makeDisambiguationItemContainer(resolveRecord:) in conformance CallingIntentContactNeedsDisambiguationFlowStrategy<A>()
{
  uint64_t v4 = *v3;
  OUTLINED_FUNCTION_22_9(*(void *)(v2 + 24), v5);
  if (!v1) {
    **(void **)(v2 + ++*(void *)(v0 + 16) = v0;
  }
  return OUTLINED_FUNCTION_24_1(*(uint64_t (**)(void))(v4 + 8));
}

uint64_t protocol witness for NeedsDisambiguationFlowStrategyAsync.parseDisambiguationResult(input:paginatedItems:resolveRecord:) in conformance CallingIntentContactNeedsDisambiguationFlowStrategy<A>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = *(int **)(**(void **)v4 + 448LL);
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v10 + *v10);
  uint64_t v11 = (void *)swift_task_alloc(v10[1]);
  *(void *)(v5 + ++*(void *)(v0 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance IncomingCallActionConfirmationStrategy<A>;
  return v13(a1, a2, a3, a4);
}

uint64_t protocol witness for NeedsDisambiguationFlowStrategyAsync.makePromptForDisambiguation(paginatedItems:resolveRecord:) in conformance CallingIntentContactNeedsDisambiguationFlowStrategy<A>( uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(int **)(**(void **)v3 + 456LL);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v8 + *v8);
  uint64_t v9 = (void *)swift_task_alloc(v8[1]);
  *(void *)(v4 + ++*(void *)(v0 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.makeFlowCancelledResponse() in conformance IncomingCallActionConfirmationStrategy<A>;
  return v11(a1, a2, a3);
}

uint64_t protocol witness for NeedsDisambiguationFlowStrategyAsync.makeRepromptOnEmptyParse(paginatedItems:resolveRecord:) in conformance CallingIntentContactNeedsDisambiguationFlowStrategy<A>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc(async function pointer to NeedsDisambiguationFlowStrategyAsync.makeRepromptOnEmptyParse(paginatedItems:resolveRecord:)[1]);
  *(void *)(v5 + ++*(void *)(v0 + 16) = v11;
  uint64_t v13 = type metadata accessor for CallingIntentContactNeedsDisambiguationFlowStrategy( 0LL,  *(void *)(a4 + 264),  *(void *)(a4 + 272),  v12);
  *uint64_t v11 = v5;
  v11[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance IncomingCallActionConfirmationStrategy<A>;
  return NeedsDisambiguationFlowStrategyAsync.makeRepromptOnEmptyParse(paginatedItems:resolveRecord:)( a1,  a2,  a3,  v13,  a5);
}

uint64_t protocol witness for NeedsDisambiguationFlowStrategyAsync.makeRepromptOnLowConfidence(paginatedItems:resolveRecord:) in conformance CallingIntentContactNeedsDisambiguationFlowStrategy<A>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc(async function pointer to NeedsDisambiguationFlowStrategyAsync.makeRepromptOnLowConfidence(paginatedItems:resolveRecord:)[1]);
  *(void *)(v5 + ++*(void *)(v0 + 16) = v11;
  uint64_t v13 = type metadata accessor for CallingIntentContactNeedsDisambiguationFlowStrategy( 0LL,  *(void *)(a4 + 264),  *(void *)(a4 + 272),  v12);
  *uint64_t v11 = v5;
  v11[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance IncomingCallActionConfirmationStrategy<A>;
  return NeedsDisambiguationFlowStrategyAsync.makeRepromptOnLowConfidence(paginatedItems:resolveRecord:)( a1,  a2,  a3,  v13,  a5);
}

uint64_t protocol witness for NeedsDisambiguationFlowStrategyAsync.makePromptForDeviceUnlock(resolveRecord:) in conformance CallingIntentContactNeedsDisambiguationFlowStrategy<A>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc(async function pointer to NeedsDisambiguationFlowStrategyAsync.makePromptForDeviceUnlock(resolveRecord:)[1]);
  *(void *)(v4 + ++*(void *)(v0 + 16) = v9;
  uint64_t v11 = type metadata accessor for CallingIntentContactNeedsDisambiguationFlowStrategy( 0LL,  *(void *)(a3 + 264),  *(void *)(a3 + 272),  v10);
  *uint64_t v9 = v4;
  v9[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance IncomingCallActionConfirmationStrategy<A>;
  return NeedsDisambiguationFlowStrategyAsync.makePromptForDeviceUnlock(resolveRecord:)(a1, a2, v11, a4);
}

uint64_t protocol witness for NeedsDisambiguationFlowStrategyAsync.makeHandoffForAuthenticationResponse(resolveRecord:) in conformance CallingIntentContactNeedsDisambiguationFlowStrategy<A>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc(async function pointer to NeedsDisambiguationFlowStrategyAsync.makeHandoffForAuthenticationResponse(resolveRecord:)[1]);
  *(void *)(v4 + ++*(void *)(v0 + 16) = v9;
  uint64_t v11 = type metadata accessor for CallingIntentContactNeedsDisambiguationFlowStrategy( 0LL,  *(void *)(a3 + 264),  *(void *)(a3 + 272),  v10);
  *uint64_t v9 = v4;
  v9[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance IncomingCallActionConfirmationStrategy<A>;
  return NeedsDisambiguationFlowStrategyAsync.makeHandoffForAuthenticationResponse(resolveRecord:)(a1, a2, v11, a4);
}

uint64_t protocol witness for NeedsDisambiguationFlowStrategyAsync.pervasiveUseCaseDescription(resolveRecord:) in conformance CallingIntentContactNeedsDisambiguationFlowStrategy<A>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = type metadata accessor for CallingIntentContactNeedsDisambiguationFlowStrategy( 0LL,  *(void *)(a2 + 264),  *(void *)(a2 + 272),  a4);
  return NeedsDisambiguationFlowStrategyAsync.pervasiveUseCaseDescription(resolveRecord:)(a1, v6, a3);
}

uint64_t protocol witness for ParameterResolutionHandlingAsync.makeFlowCancelledResponse(app:intent:parameter:) in conformance CallingIntentContactNeedsDisambiguationFlowStrategy<A>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = (void *)swift_task_alloc(async function pointer to ParameterResolutionHandlingAsync.makeFlowCancelledResponse(app:intent:parameter:)[1]);
  *(void *)(v6 + ++*(void *)(v0 + 16) = v13;
  uint64_t v15 = type metadata accessor for CallingIntentContactNeedsDisambiguationFlowStrategy( 0LL,  *(void *)(a5 + 264),  *(void *)(a5 + 272),  v14);
  *uint64_t v13 = v6;
  v13[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance IncomingCallActionConfirmationStrategy<A>;
  return ParameterResolutionHandlingAsync.makeFlowCancelledResponse(app:intent:parameter:)(a1, a2, a3, a4, v15, a6);
}

uint64_t protocol witness for ParameterResolutionHandlingAsync.makeErrorResponse(error:app:intent:parameter:) in conformance CallingIntentContactNeedsDisambiguationFlowStrategy<A>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v15 = (void *)swift_task_alloc(async function pointer to ParameterResolutionHandlingAsync.makeErrorResponse(error:app:intent:parameter:)[1]);
  *(void *)(v7 + ++*(void *)(v0 + 16) = v15;
  uint64_t v17 = type metadata accessor for CallingIntentContactNeedsDisambiguationFlowStrategy( 0LL,  *(void *)(a6 + 264),  *(void *)(a6 + 272),  v16);
  *uint64_t v15 = v7;
  v15[1] = protocol witness for PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:) in conformance IncomingCallActionConfirmationStrategy<A>;
  return ParameterResolutionHandlingAsync.makeErrorResponse(error:app:intent:parameter:)(a1, a2, a3, a4, a5, v17, a7);
}

uint64_t partial apply for closure #1 in CallingIntentContactNeedsDisambiguationFlowStrategy.makeDisambiguationItemContainer(resolveRecord:)( uint64_t a1)
{
  return closure #1 in CallingIntentContactNeedsDisambiguationFlowStrategy.makeDisambiguationItemContainer(resolveRecord:)( a1,  *(uint64_t **)(v1 + 16));
}

uint64_t partial apply for closure #1 in CallingIntentContactNeedsDisambiguationFlowStrategy.parseDisambiguationResult(input:paginatedItems:resolveRecord:)( uint64_t a1)
{
  return closure #1 in CallingIntentContactNeedsDisambiguationFlowStrategy.parseDisambiguationResult(input:paginatedItems:resolveRecord:)( a1,  v1[2],  v1[3],  v1[4],  v1[5]);
}

void specialized static AppSelectionSignalsGatheringHelper.triggerSignalCollection(sharedGlobals:contacts:phoneCallNLIntent:smartAppSelection:eligibleAppsFinder:skIntent:)( void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = static AppSelectionSignalsGatheringHelper.getShowedForcedAppDisambiguationList(sharedGlobals:)(a1);
  outlined init with copy of SharedGlobalsProviding((uint64_t)a1, (uint64_t)v41);
  if (a4)
  {
    OUTLINED_FUNCTION_44_1();
  }

  else
  {
    outlined init with copy of SharedGlobalsProviding((uint64_t)v41, (uint64_t)&v46);
    id v11 = [(id)objc_opt_self(TRIClient) clientWithIdentifier:112];
    uint64_t v12 = OUTLINED_FUNCTION_271_1();
    uint64_t v13 = OUTLINED_FUNCTION_8_2(v12, 24LL);
    uint64_t v14 = OUTLINED_FUNCTION_249_3(v13);
    OUTLINED_FUNCTION_8_2(v14, 16LL);
    uint64_t v15 = OUTLINED_FUNCTION_272_3();
    OUTLINED_FUNCTION_8_2(v15, 104LL);
    OUTLINED_FUNCTION_228_3(&v46, v13);
    a4 = v16;
  }

  __swift_destroy_boxed_opaque_existential_1(v41);
  outlined init with copy of SharedGlobalsProviding((uint64_t)a1, (uint64_t)&v46);
  uint64_t v17 = type metadata accessor for AppUsageProvider();
  __int128 v43 = 0u;
  __int128 v44 = 0u;
  *(void *)&__int128 v45 = 0LL;
  uint64_t v18 = OUTLINED_FUNCTION_8_2(v17, 16LL);
  OUTLINED_FUNCTION_44_1();
  AppResolver.init(appResolutionRules:)(_swiftEmptyArrayStorage);
  uint64_t v19 = type metadata accessor for PhoneAppResolutionHelper(0LL);
  uint64_t v20 = OUTLINED_FUNCTION_15_2(v19);
  OUTLINED_FUNCTION_3_8();
  specialized PhoneAppResolutionHelper.init(sharedGlobals:eligibleAppsFinder:smartAppSelection:phoneAppResolutionLogger:appUsageProvider:appResolver:)( (uint64_t)&v46,  a5,  a4,  (uint64_t)&v43,  v18,  v5,  v20);
  if (v10[2])
  {
    OUTLINED_FUNCTION_82(a1);
    OUTLINED_FUNCTION_5_42();
    OUTLINED_FUNCTION_82(v40);
    OUTLINED_FUNCTION_5_42();
    _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0( (uint64_t)v42,  (uint64_t)&v43,  &demangling cache variable for type metadata for AnnotatedApp?);
    if ((void)v43)
    {
      __int128 v46 = v43;
      __int128 v47 = v44;
      __int128 v48 = v45;
      __swift_destroy_boxed_opaque_existential_1(v40);
      if (v48 == 4)
      {
        uint64_t v21 = v46;
        App.appIdentifier.getter();
        if (v22) {
          uint64_t v23 = v22;
        }
        else {
          uint64_t v23 = 0xE000000000000000LL;
        }
        uint64_t v24 = OUTLINED_FUNCTION_169_4();
        static AppSelectionSignalsGatheringHelper.triggerForcedAppDisambiguationSignalCollection(sharedGlobals:contacts:phoneCallNLIntent:phoneAppResolutionHelper:appBundleIds:selectedAppId:skIntent:)( v24,  v25,  v26,  v27,  (uint64_t)v10,  v28,  v23);
        swift_release(v21);
        OUTLINED_FUNCTION_87_0();
        OUTLINED_FUNCTION_118();
        OUTLINED_FUNCTION_50_2();
        OUTLINED_FUNCTION_182_3();
        _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0( (uint64_t)&v47,  (uint64_t)v40,  &demangling cache variable for type metadata for String?);
        outlined release of String?((uint64_t)v40);
        OUTLINED_FUNCTION_179_2();
        OUTLINED_FUNCTION_22();
        OUTLINED_FUNCTION_62();
        goto LABEL_19;
      }

      OUTLINED_FUNCTION_87_0();
      swift_release(v46);
      OUTLINED_FUNCTION_182_3();
      _s27PhoneCallFlowDelegatePlugin12AnnotatedAppVSgWObTm_0( (uint64_t)&v47,  (uint64_t)v40,  &demangling cache variable for type metadata for String?);
      outlined release of String?((uint64_t)v40);
      OUTLINED_FUNCTION_179_2();
    }

    else
    {
      OUTLINED_FUNCTION_87_0();
      __swift_destroy_boxed_opaque_existential_1(v40);
    }
  }

  else
  {
    OUTLINED_FUNCTION_87_0();
  }

  uint64_t v29 = a3[3];
  uint64_t v30 = a3[4];
  uint64_t v31 = __swift_project_boxed_opaque_existential_1(a3, v29);
  PhoneCallNLIntent.applicationId.getter(v29, v30, (uint64_t)v31);
  uint64_t v33 = v32;
  uint64_t v34 = swift_bridgeObjectRelease();
  if (v33 && ((*(uint64_t (**)(uint64_t))(*(void *)a4 + 128LL))(v34) & 1) != 0)
  {
    uint64_t v35 = OUTLINED_FUNCTION_169_4();
    static AppSelectionSignalsGatheringHelper.triggerAppNameSpecifiedSignalCollection(sharedGlobals:contacts:phoneCallNLIntent:phoneAppResolutionHelper:skIntent:)( v35,  v36,  v37,  v38);
    OUTLINED_FUNCTION_22();
    OUTLINED_FUNCTION_118();
    uint64_t v39 = a4;
  }

  else
  {
    OUTLINED_FUNCTION_118();
    OUTLINED_FUNCTION_50_2();
    uint64_t v39 = a5;
  }

  swift_release(v39);
LABEL_19:
  OUTLINED_FUNCTION_7_5();
}

uint64_t partial apply for closure #3 in CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForDisambiguation(paginatedItems:resolveRecord:)@<X0>( void *a1@<X8>)
{
  return closure #3 in CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForDisambiguation(paginatedItems:resolveRecord:)( v1,  a1);
}

void partial apply for closure #4 in CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForDisambiguation(paginatedItems:resolveRecord:)( uint64_t a1)
{
}

unint64_t lazy protocol witness table accessor for type EmergencyType and conformance EmergencyType()
{
  unint64_t result = lazy protocol witness table cache variable for type EmergencyType and conformance EmergencyType;
  if (!lazy protocol witness table cache variable for type EmergencyType and conformance EmergencyType)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for EmergencyType, &type metadata for EmergencyType);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type EmergencyType and conformance EmergencyType);
  }

  return result;
}

uint64_t base witness table accessor for ParameterResolutionHandlingAsync in CallingIntentContactNeedsDisambiguationFlowStrategy<A>( uint64_t a1)
{
  return swift_getWitnessTable( &protocol conformance descriptor for CallingIntentContactNeedsDisambiguationFlowStrategy<A>,  a1);
}

void sub_2FC568(uint64_t *a1@<X8>)
{
  *a1 = OUTLINED_FUNCTION_153_10();
  OUTLINED_FUNCTION_2();
}

void sub_2FC598(uint64_t *a1@<X8>)
{
  *a1 = OUTLINED_FUNCTION_239_3();
  OUTLINED_FUNCTION_2();
}

uint64_t storeEnumTagSinglePayload for EmergencyType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(OUTLINED_FUNCTION_48_23(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin26PhoneCallContactIntentNode_handleLabel, v4) = 1;
  }
  else {
    LODWORD(OUTLINED_FUNCTION_48_23(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin26PhoneCallContactIntentNode_handleLabel, v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_2FC614 + 4 * byte_340835[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2FC648 + 4 * asc_340830[v4]))();
}

uint64_t sub_2FC648(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2FC650(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x2FC658LL);
  }
  return result;
}

uint64_t sub_2FC664(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x2FC66CLL);
  }
  *(_BYTE *)unint64_t result = a2 + 1;
  return result;
}

uint64_t sub_2FC670(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2FC678(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EmergencyType()
{
  return &type metadata for EmergencyType;
}

uint64_t type metadata completion function for CallingIntentContactNeedsDisambiguationFlowStrategy( uint64_t a1)
{
  v2[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[1] = "\b";
  v2[2] = &unk_340A50;
  v2[3] = &unk_340A50;
  return swift_initClassMetadata2(a1, 0LL, 4LL, v2, a1 + 280);
}

uint64_t type metadata accessor for CallingIntentContactNeedsDisambiguationFlowStrategy( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata( a1,  a2,  a3,  a4,  (uint64_t)&nominal type descriptor for CallingIntentContactNeedsDisambiguationFlowStrategy);
}

uint64_t partial apply for implicit closure #1 in CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForLocalEmergencyDisambiguation(app:disambiguationItems:outputGenerationManifest:)()
{
  uint64_t v0 = swift_task_alloc(dword_44162C);
  __int16 v1 = (void *)OUTLINED_FUNCTION_53_2(v0);
  uint64_t v2 = OUTLINED_FUNCTION_18_12(v1);
  return implicit closure #1 in CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForLocalEmergencyDisambiguation(app:disambiguationItems:outputGenerationManifest:)( v2,  v3);
}

uint64_t partial apply for implicit closure #2 in CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForLocalEmergencyDisambiguation(app:disambiguationItems:outputGenerationManifest:)()
{
  uint64_t v0 = swift_task_alloc(dword_44163C);
  __int16 v1 = (void *)OUTLINED_FUNCTION_53_2(v0);
  uint64_t v2 = OUTLINED_FUNCTION_18_12(v1);
  return implicit closure #2 in CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForLocalEmergencyDisambiguation(app:disambiguationItems:outputGenerationManifest:)( v2,  v3);
}

uint64_t partial apply for closure #2 in CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForEmergencyNeedsDisambiguation(app:disambiguationItems:nlContextUpdate:)( uint64_t a1)
{
  return closure #2 in CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForEmergencyNeedsDisambiguation(app:disambiguationItems:nlContextUpdate:)( a1,  *(void *)(v1 + 16));
}

uint64_t outlined init with take of DisambiguationItemWithDirectInvocationModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DisambiguationItemWithDirectInvocationModel(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

void outlined init with copy of LocalEmergencyCallDisambiguationModel()
{
  uint64_t v0 = OUTLINED_FUNCTION_20_35();
  uint64_t v2 = v1(v0);
  OUTLINED_FUNCTION_57(v2);
  OUTLINED_FUNCTION_2();
}

uint64_t partial apply for closure #1 in CallingIntentContactNeedsDisambiguationFlowStrategy.makeLegacyPromptForDisambiguation(resolveRecord:disambiguationList:)( uint64_t a1)
{
  return closure #1 in CallingIntentContactNeedsDisambiguationFlowStrategy.makeLegacyPromptForDisambiguation(resolveRecord:disambiguationList:)( a1,  *(uint64_t **)(v1 + 16),  *(void *)(v1 + 24),  *(void *)(v1 + 32));
}

uint64_t sub_2FC800()
{
  uint64_t v0 = OUTLINED_FUNCTION_93_0();
  OUTLINED_FUNCTION_70_9(v0);
  OUTLINED_FUNCTION_47_29();
  OUTLINED_FUNCTION_20_37();
  uint64_t v1 = OUTLINED_FUNCTION_212_2();
  return OUTLINED_FUNCTION_63_28(v1, v2, v3);
}

uint64_t partial apply for implicit closure #1 in CallingIntentContactNeedsDisambiguationFlowStrategy.makeLegacyPromptForDisambiguation(resolveRecord:disambiguationList:)()
{
  uint64_t v1 = OUTLINED_FUNCTION_93_0();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(OUTLINED_FUNCTION_70_9(v1) - 8) + 80LL);
  uint64_t v3 = v0 + ((v2 + 40) & ~v2);
  uint64_t v4 = swift_task_alloc(dword_441654);
  uint64_t v5 = (void *)OUTLINED_FUNCTION_53_2(v4);
  uint64_t v6 = OUTLINED_FUNCTION_263_2(v5);
  return implicit closure #1 in CallingIntentContactNeedsDisambiguationFlowStrategy.makeLegacyPromptForDisambiguation(resolveRecord:disambiguationList:)( v6,  v7,  v3);
}

uint64_t sub_2FC8D0()
{
  uint64_t v1 = OUTLINED_FUNCTION_93_0();
  uint64_t v2 = *(void *)(OUTLINED_FUNCTION_70_9(v1) - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = v3 | 7;
  unint64_t v5 = (*(void *)(v2 + 64) + ((v3 + 40) & ~v3) + 7) & 0xFFFFFFFFFFFFFFF8LL;
  swift_release(*(void *)(v0 + 32));
  OUTLINED_FUNCTION_20_37();
  swift_release(*(void *)(v0 + v5));
  return swift_deallocObject(v0, v5 + 8, v4);
}

uint64_t partial apply for implicit closure #2 in CallingIntentContactNeedsDisambiguationFlowStrategy.makeLegacyPromptForDisambiguation(resolveRecord:disambiguationList:)()
{
  uint64_t v1 = OUTLINED_FUNCTION_93_0();
  uint64_t v2 = *(void *)(OUTLINED_FUNCTION_70_9(v1) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = v0 + v3;
  uint64_t v5 = *(void *)(v0 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFF8LL));
  uint64_t v6 = swift_task_alloc(dword_441664);
  uint64_t v7 = (void *)OUTLINED_FUNCTION_53_2(v6);
  uint64_t v8 = OUTLINED_FUNCTION_263_2(v7);
  return implicit closure #2 in CallingIntentContactNeedsDisambiguationFlowStrategy.makeLegacyPromptForDisambiguation(resolveRecord:disambiguationList:)( v8,  v9,  v4,  v5);
}

uint64_t partial apply for closure #3 in implicit closure #2 in CallingIntentContactNeedsDisambiguationFlowStrategy.makeLegacyPromptForDisambiguation(resolveRecord:disambiguationList:)( uint64_t a1)
{
  return closure #3 in implicit closure #2 in CallingIntentContactNeedsDisambiguationFlowStrategy.makeLegacyPromptForDisambiguation(resolveRecord:disambiguationList:)( a1,  *(uint64_t **)(v1 + 16),  *(void *)(v1 + 24),  *(void *)(v1 + 32));
}

uint64_t sub_2FCA18()
{
  return objectdestroy_99Tm(&demangling cache variable for type metadata for CheckedContinuation<TemplatingResult, Error>);
}

uint64_t partial apply for closure #1 in closure #3 in implicit closure #2 in CallingIntentContactNeedsDisambiguationFlowStrategy.makeLegacyPromptForDisambiguation(resolveRecord:disambiguationList:)( uint64_t a1)
{
  return closure #1 in closure #3 in implicit closure #2 in CallingIntentContactNeedsDisambiguationFlowStrategy.makeLegacyPromptForDisambiguation(resolveRecord:disambiguationList:)(a1);
}

void partial apply for closure #2 in implicit closure #1 in CallingIntentContactNeedsDisambiguationFlowStrategy.makeLegacyPromptForDisambiguation(resolveRecord:disambiguationList:)( uint64_t a1)
{
}

uint64_t sub_2FCA84()
{
  return objectdestroy_99Tm(&demangling cache variable for type metadata for CheckedContinuation<NLContextUpdate?, Never>);
}

uint64_t partial apply for closure #1 in closure #2 in implicit closure #1 in CallingIntentContactNeedsDisambiguationFlowStrategy.makeLegacyPromptForDisambiguation(resolveRecord:disambiguationList:)( uint64_t a1)
{
  return partial apply for closure #1 in closure #2 in implicit closure #1 in CallingIntentContactNeedsDisambiguationFlowStrategy.makeLegacyPromptForDisambiguation(resolveRecord:disambiguationList:)( a1,  &demangling cache variable for type metadata for CheckedContinuation<NLContextUpdate?, Never>);
}

uint64_t sub_2FCA9C()
{
  return objectdestroy_99Tm(&demangling cache variable for type metadata for CheckedContinuation<[SAAceView], Error>);
}

uint64_t sub_2FCAA8()
{
  return objectdestroy_99Tm(&demangling cache variable for type metadata for CheckedContinuation<NLContextUpdate?, Error>);
}

uint64_t objectdestroy_99Tm(uint64_t *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = v4 | 7;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + ((v4 + 16) & ~v4), v2);
  uint64_t v6 = OUTLINED_FUNCTION_34_1();
  return swift_deallocObject(v6, v7, v5);
}

uint64_t partial apply for closure #1 in closure #4 in CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForDisambiguation(paginatedItems:resolveRecord:)( uint64_t a1)
{
  return partial apply for closure #1 in closure #2 in implicit closure #1 in CallingIntentContactNeedsDisambiguationFlowStrategy.makeLegacyPromptForDisambiguation(resolveRecord:disambiguationList:)( a1,  &demangling cache variable for type metadata for CheckedContinuation<NLContextUpdate?, Error>);
}

uint64_t partial apply for closure #1 in closure #2 in implicit closure #1 in CallingIntentContactNeedsDisambiguationFlowStrategy.makeLegacyPromptForDisambiguation(resolveRecord:disambiguationList:)( uint64_t a1, uint64_t *a2)
{
  return closure #1 in closure #4 in CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForDisambiguation(paginatedItems:resolveRecord:)( a1,  v4,  a2);
}

uint64_t specialized PhoneAppResolutionHelper.init(sharedGlobals:eligibleAppsFinder:smartAppSelection:phoneAppResolutionLogger:appUsageProvider:appResolver:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12 = type metadata accessor for EligibleAppFinder();
  v43[3] = v12;
  v43[4] = &protocol witness table for EligibleAppFinder;
  v43[0] = a2;
  uint64_t v13 = (uint64_t *)(a7 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin24PhoneAppResolutionHelper_logPrefix);
  uint64_t v14 = type metadata accessor for PhoneAppResolutionHelper(0LL);
  *uint64_t v13 = v14;
  v13[1] = (uint64_t)&outlined read-only object #0 of specialized PhoneAppResolutionHelper.init(sharedGlobals:eligibleAppsFinder:smartAppSelection:phoneAppResolutionLogger:appUsageProvider:appResolver:);
  v13[2] = 0LL;
  v13[3] = 0LL;
  OUTLINED_FUNCTION_29_0(v14, a7 + 56);
  outlined init with copy of SharedGlobalsProviding((uint64_t)v43, a7 + 16);
  type metadata accessor for AppResolver(0LL);
  uint64_t v15 = OUTLINED_FUNCTION_274_2();
  uint64_t v17 = v16(v15);
  *(void *)(a7 + 144) = a5;
  if (a3)
  {
    swift_retain();
    uint64_t v18 = a3;
  }

  else
  {
    OUTLINED_FUNCTION_29_0(v17, (uint64_t)&v40);
    uint64_t v19 = (void *)objc_opt_self(&OBJC_CLASS___TRIClient);
    swift_retain();
    id v20 = [v19 clientWithIdentifier:112];
    uint64_t v21 = OUTLINED_FUNCTION_271_1();
    uint64_t v22 = v12;
    uint64_t v23 = a4;
    uint64_t v24 = OUTLINED_FUNCTION_8_2(v21, 24LL);
    uint64_t v25 = OUTLINED_FUNCTION_249_3(v24);
    OUTLINED_FUNCTION_8_2(v25, 16LL);
    uint64_t v26 = OUTLINED_FUNCTION_272_3();
    OUTLINED_FUNCTION_8_2(v26, 104LL);
    uint64_t v27 = v24;
    a4 = v23;
    uint64_t v12 = v22;
    OUTLINED_FUNCTION_228_3(&v40, v27);
  }

  *(void *)(a7 + 96) = v18;
  outlined init with copy of PhoneCallNLIntent?( a4,  (uint64_t)&v38,  &demangling cache variable for type metadata for PhoneAppResolutionLogging?);
  if (v39)
  {
    OUTLINED_FUNCTION_77_0();
    OUTLINED_FUNCTION_34_20();
    outlined destroy of UUID?(a4, &demangling cache variable for type metadata for PhoneAppResolutionLogging?);
    __swift_destroy_boxed_opaque_existential_1(v43);
    OUTLINED_FUNCTION_90();
    outlined init with take of AppSelectionSignalComponent(&v38, (uint64_t)&v40);
  }

  else
  {
    uint64_t v34 = a4;
    swift_retain();
    outlined destroy of UUID?( (uint64_t)&v38,  &demangling cache variable for type metadata for PhoneAppResolutionLogging?);
    OUTLINED_FUNCTION_29_0(v28, (uint64_t)&v38);
    id v29 = [(id)objc_opt_self(AssistantSiriAnalytics) sharedAnalytics];
    id v30 = [v29 defaultMessageStream];

    if (one-time initialization token for instance != -1) {
      swift_once(&one-time initialization token for instance, one-time initialization function for instance);
    }
    uint64_t v36 = v12;
    uint64_t v37 = &protocol witness table for EligibleAppFinder;
    *(void *)&__int128 v35 = static EligibleAppFinder.instance;
    uint64_t v41 = &type metadata for PhoneAppResolutionLogger;
    uint64_t v42 = &protocol witness table for PhoneAppResolutionLogger;
    uint64_t v31 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_418FE8, 160LL);
    uint64_t v32 = (void *)(v31 + 16);
    *(void *)&__int128 v40 = v31;
    OUTLINED_FUNCTION_22_4();
    PhoneAppResolutionLogger.init(sharedGlobals:messageStream:eligibleAppsFinder:)(&v38, (uint64_t)v30, &v35, v32);
    OUTLINED_FUNCTION_122();
    OUTLINED_FUNCTION_77_0();
    OUTLINED_FUNCTION_34_20();
    outlined destroy of UUID?(v34, &demangling cache variable for type metadata for PhoneAppResolutionLogging?);
    __swift_destroy_boxed_opaque_existential_1(v43);
    OUTLINED_FUNCTION_90();
  }

  outlined init with take of AppSelectionSignalComponent(&v40, a7 + 104);
  return a7;
}

uint64_t sub_2FCE68()
{
  return swift_deallocObject(v0, 160LL, 7LL);
}

uint64_t sub_2FCEAC()
{
  if (*(void *)(v0 + 40)) {
    __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 16));
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, 120LL, 7LL);
}

uint64_t sub_2FCF00()
{
  uint64_t v0 = OUTLINED_FUNCTION_93_0();
  uint64_t v1 = OUTLINED_FUNCTION_247_3(v0);
  uint64_t v2 = OUTLINED_FUNCTION_248_3(v1);
  type metadata accessor for CheckedContinuation(0LL, v2, &type metadata for Never, &protocol witness table for Never);
  OUTLINED_FUNCTION_47_29();
  OUTLINED_FUNCTION_20_37();
  uint64_t v3 = OUTLINED_FUNCTION_212_2();
  return OUTLINED_FUNCTION_63_28(v3, v4, v5);
}

uint64_t partial apply for closure #1 in closure #1 in CallingIntentContactNeedsDisambiguationFlowStrategy.parseDisambiguationResult(input:paginatedItems:resolveRecord:)()
{
  uint64_t v0 = OUTLINED_FUNCTION_93_0();
  uint64_t v1 = OUTLINED_FUNCTION_247_3(v0);
  uint64_t v2 = OUTLINED_FUNCTION_248_3(v1);
  type metadata accessor for CheckedContinuation(0LL, v2, &type metadata for Never, &protocol witness table for Never);
  uint64_t v3 = (void *)OUTLINED_FUNCTION_133_14();
  return closure #1 in closure #1 in CallingIntentContactNeedsDisambiguationFlowStrategy.parseDisambiguationResult(input:paginatedItems:resolveRecord:)( v3,  v4);
}

uint64_t sub_2FCFC8()
{
  uint64_t v0 = OUTLINED_FUNCTION_212_2();
  return OUTLINED_FUNCTION_63_28(v0, v1, v2);
}

uint64_t partial apply for closure #1 in closure #1 in CallingIntentContactNeedsDisambiguationFlowStrategy.makeDisambiguationItemContainer(resolveRecord:)()
{
  uint64_t v0 = OUTLINED_FUNCTION_133_14();
  return closure #1 in closure #1 in CallingIntentContactNeedsDisambiguationFlowStrategy.makeDisambiguationItemContainer(resolveRecord:)( v0,  v1);
}

uint64_t OUTLINED_FUNCTION_15_84()
{
  return swift_task_dealloc(*(void *)(v0 + 328));
}

uint64_t OUTLINED_FUNCTION_17_72(void *a1)
{
  *a1 = v2;
  a1[1] = v1;
  return *(void *)(v2 + 120);
}

uint64_t OUTLINED_FUNCTION_19_72()
{
  uint64_t v1 = *(void **)(v0 + 64);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 56))(v2, v3);
}

uint64_t OUTLINED_FUNCTION_22_65(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 - 8) = *v1;
  uint64_t v4 = *(void *)(v3 + 128);
  *(void *)(v2 - 8) = *v1;
  *(void *)(v3 + 136) = a1;
  return swift_task_dealloc(v4);
}

uint64_t OUTLINED_FUNCTION_23_66()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_30_54()
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t *)(v2 - 8);
  *uint64_t v4 = *v1;
  uint64_t v5 = *(void *)(v3 + 144);
  *uint64_t v4 = *v1;
  *(void *)(v3 + 15__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v0;
  return swift_task_dealloc(v5);
}

uint64_t OUTLINED_FUNCTION_31_50()
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t *)(v2 - 8);
  *uint64_t v4 = *v1;
  uint64_t v5 = *(void *)(v3 + 112);
  *uint64_t v4 = *v1;
  *(void *)(v3 + 120) = v0;
  return swift_task_dealloc(v5);
}

uint64_t OUTLINED_FUNCTION_35_39(void *a1)
{
  *(void *)(v2 + 144) = a1;
  *a1 = v2;
  a1[1] = v1;
  return *(void *)(v2 + 56);
}

uint64_t OUTLINED_FUNCTION_37_44()
{
  return swift_release(*(void *)(v0 + 344));
}

uint64_t OUTLINED_FUNCTION_39_38@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t OUTLINED_FUNCTION_46_35(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_47_29()
{
  return swift_release(*(void *)(v0 + 32));
}

uint64_t OUTLINED_FUNCTION_56_28(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(void *)a1 + 248LL))(a1);
}

void *OUTLINED_FUNCTION_58_28()
{
  return __swift_project_boxed_opaque_existential_1(*(void **)(v0 + 80), *(void *)(*(void *)(v0 + 80) + 24LL));
}

void *OUTLINED_FUNCTION_59_25()
{
  return __swift_project_boxed_opaque_existential_1(v0, v0[3]);
}

uint64_t OUTLINED_FUNCTION_61_28()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_63_28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_deallocObject(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_70_22()
{
  *(void *)(v0 + 88) = 0LL;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0u;
  return swift_task_alloc(*(unsigned int *)(*(void *)(*(void *)v1 + 480LL) + 4LL));
}

uint64_t OUTLINED_FUNCTION_76_23()
{
  return (*(uint64_t (**)(uint64_t))(**(void **)(v1 + 1768) + 240LL))(v0);
}

  ;
}

uint64_t OUTLINED_FUNCTION_82_22(void *a1)
{
  return DeviceState.asInvocationContext.getter(v1, v2);
}

uint64_t OUTLINED_FUNCTION_84_21(uint64_t a1)
{
  return Logger.logObject.getter(a1);
}

  ;
}

uint64_t OUTLINED_FUNCTION_89_20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return CallingIntentContactNeedsDisambiguationFlowStrategy.makePromptForEmergencyNeedsDisambiguation(app:disambiguationItems:nlContextUpdate:)( a1,  a2,  a3,  a4);
}

uint64_t OUTLINED_FUNCTION_90_20@<X0>(uint64_t (*a1)(void)@<X8>)
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_93_17(uint64_t a1, uint64_t a2)
{
  return swift_beginAccess(v2, a2, 1LL, 0LL);
}

  ;
}

uint64_t OUTLINED_FUNCTION_99_14()
{
  return swift_task_dealloc(*(void *)(v0 + 288));
}

void OUTLINED_FUNCTION_101_12()
{
}

void OUTLINED_FUNCTION_105_10()
{
}

void *OUTLINED_FUNCTION_106_13(void *result)
{
  *unint64_t result = v2;
  result[1] = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_114_11()
{
  return swift_release(*(void *)(v0 + 312));
}

uint64_t OUTLINED_FUNCTION_117_12( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *(void *)(v11 + 400) = a2;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, a11);
}

uint64_t OUTLINED_FUNCTION_122_12(void *a1)
{
  *(void *)(v2 + 368) = a1;
  *a1 = v2;
  a1[1] = v1;
  return *(void *)(v2 + 168);
}

uint64_t OUTLINED_FUNCTION_129_13(uint64_t a1, uint64_t a2, ...)
{
  uint64_t v5 = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)((uint64_t *)va, va1, v3, v2);
}

uint64_t OUTLINED_FUNCTION_130_5()
{
  return swift_task_dealloc(*(void *)(v0 + 216));
}

uint64_t OUTLINED_FUNCTION_131_11()
{
  return swift_release_n(*(void *)(v0 + 1816), 3LL);
}

uint64_t OUTLINED_FUNCTION_132_13(uint64_t a1)
{
  return NSObject.update(with:at:)(a1, 0x73746361746E6F63LL, 0xE800000000000000LL);
}

uint64_t OUTLINED_FUNCTION_133_14()
{
  return v0;
}

void *OUTLINED_FUNCTION_134_7@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *unint64_t result = v2;
  result[1] = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_139_11()
{
  return SiriKitDisambiguationItem.components.getter();
}

uint64_t OUTLINED_FUNCTION_145_10()
{
  return type metadata accessor for DisambiguationItemWithDirectInvocationModel(0LL);
}

id OUTLINED_FUNCTION_147_4(id a1, SEL a2)
{
  return objc_msgSend(a1, a2, v2, v3);
}

uint64_t OUTLINED_FUNCTION_148_10(void *a1)
{
  *(void *)(v2 + outlined init with copy of SharedGlobalsProviding(v0 - 168, v0 - 208) = a1;
  *a1 = v2;
  a1[1] = v1;
  return *(void *)(v2 + 88);
}

  ;
}

uint64_t OUTLINED_FUNCTION_150_8()
{
  return swift_task_dealloc(*(void *)(v0 + 112));
}

uint64_t OUTLINED_FUNCTION_153_10()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320LL))();
}

uint64_t OUTLINED_FUNCTION_154_10()
{
  return swift_task_alloc(32LL);
}

uint64_t OUTLINED_FUNCTION_155_6()
{
  return _typeName(_:qualified:)(*v0, 0LL);
}

uint64_t OUTLINED_FUNCTION_165_3(uint64_t a1)
{
  *(void *)(v2 + 39__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a1;
  return ParameterResolutionRecord.parameter.getter(v1);
}

uint64_t OUTLINED_FUNCTION_166_4(uint64_t a1)
{
  *(void *)(v2 + 35__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a1;
  return PaginatedItemContainer.items.getter(v1);
}

uint64_t OUTLINED_FUNCTION_168_4@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

uint64_t OUTLINED_FUNCTION_169_4()
{
  return v0;
}

  ;
}

uint64_t OUTLINED_FUNCTION_177_3(void *a1)
{
  *(void *)(v2 + 2++*(void *)(v0 + 16) = a1;
  *a1 = v2;
  a1[1] = v1;
  return *(void *)(v2 + 32);
}

void *OUTLINED_FUNCTION_179_2()
{
  *(void *)(v0 - 96) = *(void *)(v0 - 120);
  return outlined release of Set<String>((void *)(v0 - 96));
}

uint64_t OUTLINED_FUNCTION_181_5(uint64_t a1)
{
  return Logger.logObject.getter(a1);
}

void *OUTLINED_FUNCTION_182_3()
{
  *(void *)(v0 - outlined init with copy of SharedGlobalsProviding(v0, v1 - 104) = *(void *)(v0 - 152);
  return outlined release of Set<String>((void *)(v0 - 104));
}

  ;
}

uint64_t OUTLINED_FUNCTION_186_5()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 344LL))();
}

  ;
}

uint64_t OUTLINED_FUNCTION_194_4()
{
  return swift_task_dealloc(*(void *)(v0 + 512));
}

uint64_t OUTLINED_FUNCTION_199_4()
{
  return specialized Sequence.allSatisfy(_:)(*(void *)(v0 + 320), (char *)&dword_0 + 1);
}

uint64_t OUTLINED_FUNCTION_205_5()
{
  return swift_getAssociatedConformanceWitness(v2, v1, v0);
}

void OUTLINED_FUNCTION_206_4(uint64_t a1)
{
}

uint64_t OUTLINED_FUNCTION_207_4(uint64_t a1)
{
  return swift_getAssociatedTypeWitness(a1);
}

uint64_t OUTLINED_FUNCTION_212_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_214_4()
{
  return (*(uint64_t (**)(void, void))(v0[18] + 8LL))(v0[19], v0[17]);
}

uint64_t OUTLINED_FUNCTION_217_2()
{
  return v0();
}

uint64_t OUTLINED_FUNCTION_223_2(uint64_t a1)
{
  return v2(a1, v3, v1);
}

uint64_t OUTLINED_FUNCTION_224_4(uint64_t a1, unint64_t a2)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)(v2 - 176));
}

uint64_t OUTLINED_FUNCTION_227_4()
{
  return swift_errorRelease(*(void *)(v0 + 160));
}

void OUTLINED_FUNCTION_228_3(__int128 *a1, uint64_t a2)
{
}

  ;
}

void *OUTLINED_FUNCTION_232_2()
{
  return __swift_project_boxed_opaque_existential_1((void *)(v0 + 24), *(void *)(v0 + 48));
}

uint64_t OUTLINED_FUNCTION_233_3()
{
  return swift_release(*(void *)(v0 + 1976));
}

uint64_t OUTLINED_FUNCTION_238_3()
{
  return outlined consume of (@escaping @callee_guaranteed () -> ())?(0LL, 0LL);
}

uint64_t OUTLINED_FUNCTION_239_3()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 344LL))();
}

uint64_t OUTLINED_FUNCTION_241_2()
{
  return outlined init with take of AppSelectionSignalComponent((__int128 *)(v0 + 16), *(void *)(v0 + 56));
}

uint64_t OUTLINED_FUNCTION_245_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(v5 - 192, a2, v4, a4);
}

uint64_t OUTLINED_FUNCTION_246_1(uint64_t a1)
{
  return String.init<A>(describing:)(v1 - 192, a1);
}

uint64_t OUTLINED_FUNCTION_247_3(uint64_t a1)
{
  return type metadata accessor for IntentPromptAnswer(255LL, a1);
}

uint64_t OUTLINED_FUNCTION_248_3(uint64_t a1)
{
  return type metadata accessor for DisambiguationResult(255LL, a1);
}

uint64_t OUTLINED_FUNCTION_249_3(uint64_t a1)
{
  *(void *)(a1 + ++*(void *)(v0 + 16) = v1;
  return type metadata accessor for DiagnosticLogPermission();
}

uint64_t OUTLINED_FUNCTION_250_0()
{
  return *(void *)(v0 + 8);
}

void OUTLINED_FUNCTION_251_2()
{
  uint64_t v2 = *v0;
  *uint64_t v0 = v1;
}

uint64_t OUTLINED_FUNCTION_254_4()
{
  return swift_bridgeObjectRelease(*(void *)(v0 + 320));
}

uint64_t OUTLINED_FUNCTION_256_4()
{
  return ParameterResolutionRecord.result.getter(v0);
}

uint64_t OUTLINED_FUNCTION_260_0(uint64_t a1)
{
  return ParameterResolutionRecord.app.getter(a1);
}

uint64_t OUTLINED_FUNCTION_262_2(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_263_2(void *a1)
{
  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t OUTLINED_FUNCTION_265_1()
{
  return ParameterResolutionRecord.intent.getter(v0);
}

uint64_t OUTLINED_FUNCTION_267_1(uint64_t result)
{
  *(void *)(v1 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_269_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_271_1()
{
  return type metadata accessor for TrialSmartAppSelectionConfigProvider();
}

uint64_t OUTLINED_FUNCTION_272_3()
{
  return type metadata accessor for SmartAppSelectionFeatureManager();
}

uint64_t OUTLINED_FUNCTION_274_4()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_277_2(uint64_t a1, uint64_t a2)
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, 1LL);
}

void OUTLINED_FUNCTION_278_3()
{
}

void specialized INPersonContainingIntent.hasSiriMatches.getter()
{
  if (!v1) {
    return;
  }
  uint64_t v2 = v1;
  if ((unint64_t)v1 >> 62)
  {
    if (v1 >= 0) {
      v1 &= 0xFFFFFFFFFFFFFF8uLL;
    }
    if (_CocoaArrayWrapper.endIndex.getter(v1)) {
      goto LABEL_4;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return;
  }

void specialized INPersonContainingIntent.hasSiriMatches.getter(uint64_t (*a1)(uint64_t))
{
  uint64_t v1 = OUTLINED_FUNCTION_3_58(a1);
  if (v1)
  {
    uint64_t v2 = v1;
    OUTLINED_FUNCTION_71();
    if (v4)
    {
      if (v2 >= 0) {
        uint64_t v12 = v3;
      }
      else {
        uint64_t v12 = v2;
      }
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter(v12);
      if (!v5) {
        goto LABEL_13;
      }
    }

    else
    {
      uint64_t v5 = *(void *)(v3 + 16);
      if (!v5)
      {
LABEL_13:
        OUTLINED_FUNCTION_39();
        goto LABEL_14;
      }
    }

    OUTLINED_FUNCTION_6_7(v5, (v2 & 0xC000000000000001LL) == 0);
    if ((v2 & 0xC000000000000001LL) != 0) {
      uint64_t v6 = OUTLINED_FUNCTION_29_7();
    }
    else {
      uint64_t v6 = (uint64_t)OUTLINED_FUNCTION_109_12();
    }
    uint64_t v7 = (void *)v6;
    uint64_t v8 = OUTLINED_FUNCTION_39();
    id v9 = OUTLINED_FUNCTION_46_7(v8, "siriMatches");

    if (v9)
    {
      unint64_t v10 = OUTLINED_FUNCTION_68();
      unint64_t v11 = OUTLINED_FUNCTION_106_14(v10);

      if (v11 >> 62)
      {
        OUTLINED_FUNCTION_8_1();
        OUTLINED_FUNCTION_61_1();
        OUTLINED_FUNCTION_39();
      }

      goto LABEL_13;
    }
  }

uint64_t specialized INPersonContainingIntent.isFirstContactRelatedOrMyself.getter()
{
  if (!v1) {
    goto LABEL_11;
  }
  uint64_t v2 = v1;
  if ((unint64_t)v1 >> 62)
  {
    if (v1 >= 0) {
      v1 &= 0xFFFFFFFFFFFFFF8uLL;
    }
    if (_CocoaArrayWrapper.endIndex.getter(v1)) {
      goto LABEL_4;
    }
    goto LABEL_10;
  }

  if (!*(void *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFFF8LL)))
  {
LABEL_10:
    swift_bridgeObjectRelease();
LABEL_11:
    uint64_t v4 = 0LL;
    goto LABEL_12;
  }

void specialized INPersonContainingIntent.isFirstContactRelatedOrMyself.getter( uint64_t (*a1)(uint64_t))
{
  uint64_t v1 = OUTLINED_FUNCTION_3_58(a1);
  if (v1)
  {
    uint64_t v2 = v1;
    OUTLINED_FUNCTION_71();
    if (v4)
    {
      if (v2 >= 0) {
        uint64_t v8 = v3;
      }
      else {
        uint64_t v8 = v2;
      }
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter(v8);
      if (v5) {
        goto LABEL_4;
      }
    }

    else
    {
      uint64_t v5 = *(void *)(v3 + 16);
      if (v5)
      {
LABEL_4:
        OUTLINED_FUNCTION_6_7(v5, (v2 & 0xC000000000000001LL) == 0);
        if ((v2 & 0xC000000000000001LL) != 0) {
          uint64_t v6 = OUTLINED_FUNCTION_29_7();
        }
        else {
          uint64_t v6 = (uint64_t)OUTLINED_FUNCTION_109_12();
        }
        uint64_t v7 = (void *)v6;
        uint64_t v1 = OUTLINED_FUNCTION_39();
        goto LABEL_13;
      }
    }

    uint64_t v1 = OUTLINED_FUNCTION_39();
  }

  uint64_t v7 = 0LL;
LABEL_13:

  if (v7)
  {
    [v7 isMe];
  }

  OUTLINED_FUNCTION_6();
}

void specialized SlotTemplating.toAnySlotTemplating()()
{
  uint64_t v1 = OUTLINED_FUNCTION_204_4();
  OUTLINED_FUNCTION_15_85(v1, (uint64_t)v83);
  OUTLINED_FUNCTION_4_111((uint64_t)v83, v2, v3, v4, v5, v6, v7, v8, v70);
  uint64_t v9 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_419470, 120LL);
  OUTLINED_FUNCTION_10_82(v9, v10, v11, v12, v13, v14, v15, v16, v71);
  OUTLINED_FUNCTION_4_111((uint64_t)v83, v17, v18, v19, v20, v21, v22, v23, v72);
  uint64_t v24 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_419498, 120LL);
  OUTLINED_FUNCTION_10_82(v24, v25, v26, v27, v28, v29, v30, v31, v73);
  OUTLINED_FUNCTION_4_111((uint64_t)v83, v32, v33, v34, v35, v36, v37, v38, v74);
  uint64_t v39 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_4194C0, 120LL);
  OUTLINED_FUNCTION_10_82(v39, v40, v41, v42, v43, v44, v45, v46, v75);
  OUTLINED_FUNCTION_4_111((uint64_t)v83, v47, v48, v49, v50, v51, v52, v53, v76);
  uint64_t v54 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_4194E8, 120LL);
  uint64_t v62 = OUTLINED_FUNCTION_10_82(v54, v55, v56, v57, v58, v59, v60, v61, v77);
  OUTLINED_FUNCTION_177_4((uint64_t)v62, v63, v64, v65, v66, v67, v68, v69, v78, v79, v80, v81, v82);
  *uint64_t v0 = partial apply for specialized implicit closure #2 in implicit closure #1 in AnySlotTemplating.init<A>(delegate:);
  v0[1] = (void (*)())v9;
  v0[2] = partial apply for specialized implicit closure #4 in implicit closure #3 in AnySlotTemplating.init<A>(delegate:);
  v0[3] = (void (*)())v24;
  v0[4] = (void (*)())partial apply for specialized implicit closure #6 in implicit closure #5 in AnySlotTemplating.init<A>(delegate:);
  v0[5] = (void (*)())v39;
  v0[6] = partial apply for specialized implicit closure #8 in implicit closure #7 in AnySlotTemplating.init<A>(delegate:);
  v0[7] = (void (*)())v54;
  OUTLINED_FUNCTION_75_29();
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _OWORD *v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  char v44[48];
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v2 = OUTLINED_FUNCTION_204_4();
  OUTLINED_FUNCTION_15_85(v2, (uint64_t)v44);
  OUTLINED_FUNCTION_4_111((uint64_t)v44, v3, v4, v5, v6, v7, v8, v9, v35);
  uint64_t v10 = (_OWORD *)OUTLINED_FUNCTION_7_54((uint64_t)&unk_419510);
  OUTLINED_FUNCTION_0_113(v10, v11, v12, v13, v14, v15, v16, v17, v35, v38, v41, v44[0]);
  uint64_t v18 = (_OWORD *)OUTLINED_FUNCTION_7_54((uint64_t)&unk_419538);
  OUTLINED_FUNCTION_0_113(v18, v19, v20, v21, v22, v23, v24, v25, v36, v39, v42, v44[0]);
  uint64_t v26 = (_OWORD *)OUTLINED_FUNCTION_7_54((uint64_t)&unk_419560);
  OUTLINED_FUNCTION_0_113(v26, v27, v28, v29, v30, v31, v32, v33, v37, v40, v43, v44[0]);
  uint64_t v34 = (_OWORD *)OUTLINED_FUNCTION_7_54((uint64_t)&unk_419588);
  OUTLINED_FUNCTION_51_25(v34, v45, v46, v47);
  *uint64_t v0 = partial apply for specialized implicit closure #2 in implicit closure #1 in AnySlotTemplating.init<A>(delegate:);
  v0[1] = v10;
  v0[2] = partial apply for specialized implicit closure #4 in implicit closure #3 in AnySlotTemplating.init<A>(delegate:);
  v0[3] = v18;
  v0[4] = partial apply for specialized implicit closure #6 in implicit closure #5 in AnySlotTemplating.init<A>(delegate:);
  v0[5] = v26;
  v0[6] = partial apply for specialized implicit closure #8 in implicit closure #7 in AnySlotTemplating.init<A>(delegate:);
  v0[7] = v1;
  OUTLINED_FUNCTION_24_59();
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _OWORD *v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  char v44[48];
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v2 = OUTLINED_FUNCTION_204_4();
  OUTLINED_FUNCTION_15_85(v2, (uint64_t)v44);
  OUTLINED_FUNCTION_4_111((uint64_t)v44, v3, v4, v5, v6, v7, v8, v9, v35);
  uint64_t v10 = (_OWORD *)OUTLINED_FUNCTION_7_54((uint64_t)&unk_4195B0);
  OUTLINED_FUNCTION_0_113(v10, v11, v12, v13, v14, v15, v16, v17, v35, v38, v41, v44[0]);
  uint64_t v18 = (_OWORD *)OUTLINED_FUNCTION_7_54((uint64_t)&unk_4195D8);
  OUTLINED_FUNCTION_0_113(v18, v19, v20, v21, v22, v23, v24, v25, v36, v39, v42, v44[0]);
  uint64_t v26 = (_OWORD *)OUTLINED_FUNCTION_7_54((uint64_t)&unk_419600);
  OUTLINED_FUNCTION_0_113(v26, v27, v28, v29, v30, v31, v32, v33, v37, v40, v43, v44[0]);
  uint64_t v34 = (_OWORD *)OUTLINED_FUNCTION_7_54((uint64_t)&unk_419628);
  OUTLINED_FUNCTION_51_25(v34, v45, v46, v47);
  *uint64_t v0 = partial apply for specialized implicit closure #2 in implicit closure #1 in AnySlotTemplating.init<A>(delegate:);
  v0[1] = v10;
  v0[2] = partial apply for specialized implicit closure #4 in implicit closure #3 in AnySlotTemplating.init<A>(delegate:);
  v0[3] = v18;
  v0[4] = partial apply for specialized implicit closure #6 in implicit closure #5 in AnySlotTemplating.init<A>(delegate:);
  v0[5] = v26;
  v0[6] = partial apply for specialized implicit closure #8 in implicit closure #7 in AnySlotTemplating.init<A>(delegate:);
  v0[7] = v1;
  OUTLINED_FUNCTION_24_59();
}

{
  void (**v0)(uint64_t, uint64_t, uint64_t, void *, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _BYTE v83[104];
  uint64_t v1 = OUTLINED_FUNCTION_204_4();
  OUTLINED_FUNCTION_15_85(v1, (uint64_t)v83);
  OUTLINED_FUNCTION_4_111((uint64_t)v83, v2, v3, v4, v5, v6, v7, v8, v70);
  uint64_t v9 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_4193D0, 120LL);
  OUTLINED_FUNCTION_10_82(v9, v10, v11, v12, v13, v14, v15, v16, v71);
  OUTLINED_FUNCTION_4_111((uint64_t)v83, v17, v18, v19, v20, v21, v22, v23, v72);
  uint64_t v24 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_4193F8, 120LL);
  OUTLINED_FUNCTION_10_82(v24, v25, v26, v27, v28, v29, v30, v31, v73);
  OUTLINED_FUNCTION_4_111((uint64_t)v83, v32, v33, v34, v35, v36, v37, v38, v74);
  uint64_t v39 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_419420, 120LL);
  OUTLINED_FUNCTION_10_82(v39, v40, v41, v42, v43, v44, v45, v46, v75);
  OUTLINED_FUNCTION_4_111((uint64_t)v83, v47, v48, v49, v50, v51, v52, v53, v76);
  uint64_t v54 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_419448, 120LL);
  uint64_t v62 = OUTLINED_FUNCTION_10_82(v54, v55, v56, v57, v58, v59, v60, v61, v77);
  OUTLINED_FUNCTION_177_4((uint64_t)v62, v63, v64, v65, v66, v67, v68, v69, v78, v79, v80, v81, v82);
  *uint64_t v0 = partial apply for specialized implicit closure #2 in implicit closure #1 in AnySlotTemplating.init<A>(delegate:);
  v0[1] = (void (*)(uint64_t, uint64_t, uint64_t, void *, uint64_t, uint64_t))v9;
  v0[2] = (void (*)(uint64_t, uint64_t, uint64_t, void *, uint64_t, uint64_t))partial apply for specialized implicit closure #4 in implicit closure #3 in AnySlotTemplating.init<A>(delegate:);
  v0[3] = (void (*)(uint64_t, uint64_t, uint64_t, void *, uint64_t, uint64_t))v24;
  v0[4] = (void (*)(uint64_t, uint64_t, uint64_t, void *, uint64_t, uint64_t))partial apply for specialized implicit closure #6 in implicit closure #5 in AnySlotTemplating.init<A>(delegate:);
  v0[5] = (void (*)(uint64_t, uint64_t, uint64_t, void *, uint64_t, uint64_t))v39;
  v0[6] = (void (*)(uint64_t, uint64_t, uint64_t, void *, uint64_t, uint64_t))partial apply for specialized implicit closure #8 in implicit closure #7 in AnySlotTemplating.init<A>(delegate:);
  v0[7] = (void (*)(uint64_t, uint64_t, uint64_t, void *, uint64_t, uint64_t))v54;
  OUTLINED_FUNCTION_75_29();
}

void specialized SlotTemplating.toAnySlotTemplating()( void (**a1)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)@<X8>)
{
  uint64_t v4 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))OUTLINED_FUNCTION_7_54((uint64_t)&unk_419650);
  OUTLINED_FUNCTION_26_63(v4, v5, v6, v7, v8, v9, v10, v11, v38, v39, v40, v41[0]);
  uint64_t v12 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))OUTLINED_FUNCTION_7_54((uint64_t)&unk_419678);
  OUTLINED_FUNCTION_26_63(v12, v13, v14, v15, v16, v17, v18, v19, v38, v39, v40, v41[0]);
  uint64_t v20 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))OUTLINED_FUNCTION_7_54((uint64_t)&unk_4196A0);
  OUTLINED_FUNCTION_26_63(v20, v21, v22, v23, v24, v25, v26, v27, v38, v39, v40, v41[0]);
  uint64_t v28 = (_OWORD *)OUTLINED_FUNCTION_7_54((uint64_t)&unk_4196C8);
  OUTLINED_FUNCTION_93_18(v28, v29, v30, v31, v32, v33, v34, v35, v38, v39, v36);
  outlined destroy of CallCapabilitySlotTemplating(v37);
  *a1 = partial apply for specialized implicit closure #2 in implicit closure #1 in AnySlotTemplating.init<A>(delegate:);
  a1[1] = v4;
  a1[2] = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))partial apply for specialized implicit closure #4 in implicit closure #3 in AnySlotTemplating.init<A>(delegate:);
  a1[3] = v12;
  a1[4] = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))partial apply for specialized implicit closure #6 in implicit closure #5 in AnySlotTemplating.init<A>(delegate:);
  a1[5] = v20;
  a1[6] = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))partial apply for specialized implicit closure #8 in implicit closure #7 in AnySlotTemplating.init<A>(delegate:);
  a1[7] = v2;
  OUTLINED_FUNCTION_24_59();
}

void specialized SlotTemplating.toAnySlotTemplating()(void (**a1)()@<X8>)
{
  uint64_t v4 = (void (*)())OUTLINED_FUNCTION_7_54((uint64_t)&unk_4196F0);
  OUTLINED_FUNCTION_25_64(v4, v5, v6, v7, v8, v9, v10, v11, v38, v39, v40, v41[0]);
  uint64_t v12 = (void (*)())OUTLINED_FUNCTION_7_54((uint64_t)&unk_419718);
  OUTLINED_FUNCTION_25_64(v12, v13, v14, v15, v16, v17, v18, v19, v38, v39, v40, v41[0]);
  uint64_t v20 = (void (*)())OUTLINED_FUNCTION_7_54((uint64_t)&unk_419740);
  OUTLINED_FUNCTION_25_64(v20, v21, v22, v23, v24, v25, v26, v27, v38, v39, v40, v41[0]);
  uint64_t v28 = (_OWORD *)OUTLINED_FUNCTION_7_54((uint64_t)&unk_419768);
  OUTLINED_FUNCTION_93_18(v28, v29, v30, v31, v32, v33, v34, v35, v38, v39, v36);
  outlined destroy of CallRecordToCallBackSlotTemplating(v37);
  *a1 = partial apply for specialized implicit closure #2 in implicit closure #1 in AnySlotTemplating.init<A>(delegate:);
  a1[1] = v4;
  a1[2] = partial apply for specialized implicit closure #4 in implicit closure #3 in AnySlotTemplating.init<A>(delegate:);
  a1[3] = v12;
  a1[4] = (void (*)())partial apply for specialized implicit closure #6 in implicit closure #5 in AnySlotTemplating.init<A>(delegate:);
  a1[5] = v20;
  a1[6] = partial apply for specialized implicit closure #8 in implicit closure #7 in AnySlotTemplating.init<A>(delegate:);
  a1[7] = v2;
  OUTLINED_FUNCTION_24_59();
}

{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[104];
  _BYTE v8[104];
  outlined init with copy of Result<TemplatingResult, Error>( v1,  (uint64_t)v8,  &demangling cache variable for type metadata for ContactsSlotTemplating<INStartAudioCallIntent, INIntentResponse>);
  outlined init with copy of Result<TemplatingResult, Error>( (uint64_t)v8,  (uint64_t)v7,  &demangling cache variable for type metadata for ContactsSlotTemplating<INStartAudioCallIntent, INIntentResponse>);
  uint64_t v3 = swift_allocObject(&unk_4191F0, 120LL, 7LL);
  memcpy((void *)(v3 + 16), v7, 0x68uLL);
  outlined init with copy of Result<TemplatingResult, Error>( (uint64_t)v8,  (uint64_t)v7,  &demangling cache variable for type metadata for ContactsSlotTemplating<INStartAudioCallIntent, INIntentResponse>);
  uint64_t v4 = swift_allocObject(&unk_419218, 120LL, 7LL);
  memcpy((void *)(v4 + 16), v7, 0x68uLL);
  outlined init with copy of Result<TemplatingResult, Error>( (uint64_t)v8,  (uint64_t)v7,  &demangling cache variable for type metadata for ContactsSlotTemplating<INStartAudioCallIntent, INIntentResponse>);
  uint64_t v5 = swift_allocObject(&unk_419240, 120LL, 7LL);
  memcpy((void *)(v5 + 16), v7, 0x68uLL);
  outlined init with copy of Result<TemplatingResult, Error>( (uint64_t)v8,  (uint64_t)v7,  &demangling cache variable for type metadata for ContactsSlotTemplating<INStartAudioCallIntent, INIntentResponse>);
  uint64_t v6 = swift_allocObject(&unk_419268, 120LL, 7LL);
  memcpy((void *)(v6 + 16), v7, 0x68uLL);
  outlined destroy of PhoneCallNLIntent?( (uint64_t)v8,  &demangling cache variable for type metadata for ContactsSlotTemplating<INStartAudioCallIntent, INIntentResponse>);
  *a1 = partial apply for specialized implicit closure #2 in implicit closure #1 in AnySlotTemplating.init<A>(delegate:);
  a1[1] = (void (*)())v3;
  a1[2] = partial apply for specialized implicit closure #4 in implicit closure #3 in AnySlotTemplating.init<A>(delegate:);
  a1[3] = (void (*)())v4;
  a1[4] = (void (*)())partial apply for specialized implicit closure #6 in implicit closure #5 in AnySlotTemplating.init<A>(delegate:);
  a1[5] = (void (*)())v5;
  a1[6] = partial apply for specialized implicit closure #8 in implicit closure #7 in AnySlotTemplating.init<A>(delegate:);
  a1[7] = (void (*)())v6;
}

void specialized SlotTemplating.toAnySlotTemplating()(void *a1@<X8>)
{
  uint64_t v3 = (_OWORD *)swift_allocObject(&unk_419290, 64LL, 7LL);
  __int128 v4 = v12;
  v3[1] = v11;
  __int128 v3[2] = v4;
  v3[3] = v13;
  outlined init with copy of Result<TemplatingResult, Error>( (uint64_t)v14,  (uint64_t)&v11,  &demangling cache variable for type metadata for DestinationTypeSlotTemplating<INStartAudioCallIntent, INIntentResponse>);
  uint64_t v5 = (_OWORD *)swift_allocObject(&unk_4192B8, 64LL, 7LL);
  __int128 v6 = v12;
  v5[1] = v11;
  __int128 v5[2] = v6;
  void v5[3] = v13;
  outlined init with copy of Result<TemplatingResult, Error>( (uint64_t)v14,  (uint64_t)&v11,  &demangling cache variable for type metadata for DestinationTypeSlotTemplating<INStartAudioCallIntent, INIntentResponse>);
  uint64_t v7 = (_OWORD *)swift_allocObject(&unk_4192E0, 64LL, 7LL);
  __int128 v8 = v12;
  v7[1] = v11;
  v7[2] = v8;
  v7[3] = v13;
  outlined init with copy of Result<TemplatingResult, Error>( (uint64_t)v14,  (uint64_t)&v11,  &demangling cache variable for type metadata for DestinationTypeSlotTemplating<INStartAudioCallIntent, INIntentResponse>);
  uint64_t v9 = (_OWORD *)swift_allocObject(&unk_419308, 64LL, 7LL);
  __int128 v10 = v12;
  v9[1] = v11;
  v9[2] = v10;
  v9[3] = v13;
  outlined destroy of PhoneCallNLIntent?( (uint64_t)v14,  &demangling cache variable for type metadata for DestinationTypeSlotTemplating<INStartAudioCallIntent, INIntentResponse>);
  *a1 = partial apply for specialized implicit closure #2 in implicit closure #1 in AnySlotTemplating.init<A>(delegate:);
  a1[1] = v3;
  a1[2] = partial apply for specialized implicit closure #4 in implicit closure #3 in AnySlotTemplating.init<A>(delegate:);
  a1[3] = v5;
  a1[4] = partial apply for specialized implicit closure #6 in implicit closure #5 in AnySlotTemplating.init<A>(delegate:);
  a1[5] = v7;
  a1[6] = partial apply for specialized implicit closure #8 in implicit closure #7 in AnySlotTemplating.init<A>(delegate:);
  a1[7] = v9;
}

{
  uint64_t v1;
  _OWORD *v3;
  __int128 v4;
  _OWORD *v5;
  __int128 v6;
  _OWORD *v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[48];
  outlined init with copy of Result<TemplatingResult, Error>( v1,  (uint64_t)v14,  &demangling cache variable for type metadata for PreferredCallProviderSlotTemplating<INStartAudioCallIntent, INIntentResponse>);
  outlined init with copy of Result<TemplatingResult, Error>( (uint64_t)v14,  (uint64_t)&v11,  &demangling cache variable for type metadata for PreferredCallProviderSlotTemplating<INStartAudioCallIntent, INIntentResponse>);
  uint64_t v3 = (_OWORD *)swift_allocObject(&unk_419330, 64LL, 7LL);
  __int128 v4 = v12;
  v3[1] = v11;
  __int128 v3[2] = v4;
  v3[3] = v13;
  outlined init with copy of Result<TemplatingResult, Error>( (uint64_t)v14,  (uint64_t)&v11,  &demangling cache variable for type metadata for PreferredCallProviderSlotTemplating<INStartAudioCallIntent, INIntentResponse>);
  uint64_t v5 = (_OWORD *)swift_allocObject(&unk_419358, 64LL, 7LL);
  __int128 v6 = v12;
  v5[1] = v11;
  __int128 v5[2] = v6;
  void v5[3] = v13;
  outlined init with copy of Result<TemplatingResult, Error>( (uint64_t)v14,  (uint64_t)&v11,  &demangling cache variable for type metadata for PreferredCallProviderSlotTemplating<INStartAudioCallIntent, INIntentResponse>);
  uint64_t v7 = (_OWORD *)swift_allocObject(&unk_419380, 64LL, 7LL);
  __int128 v8 = v12;
  v7[1] = v11;
  v7[2] = v8;
  v7[3] = v13;
  outlined init with copy of Result<TemplatingResult, Error>( (uint64_t)v14,  (uint64_t)&v11,  &demangling cache variable for type metadata for PreferredCallProviderSlotTemplating<INStartAudioCallIntent, INIntentResponse>);
  uint64_t v9 = (_OWORD *)swift_allocObject(&unk_4193A8, 64LL, 7LL);
  __int128 v10 = v12;
  v9[1] = v11;
  v9[2] = v10;
  v9[3] = v13;
  outlined destroy of PhoneCallNLIntent?( (uint64_t)v14,  &demangling cache variable for type metadata for PreferredCallProviderSlotTemplating<INStartAudioCallIntent, INIntentResponse>);
  *a1 = partial apply for specialized implicit closure #2 in implicit closure #1 in AnySlotTemplating.init<A>(delegate:);
  a1[1] = v3;
  a1[2] = partial apply for specialized implicit closure #4 in implicit closure #3 in AnySlotTemplating.init<A>(delegate:);
  a1[3] = v5;
  a1[4] = partial apply for specialized implicit closure #6 in implicit closure #5 in AnySlotTemplating.init<A>(delegate:);
  a1[5] = v7;
  a1[6] = partial apply for specialized implicit closure #8 in implicit closure #7 in AnySlotTemplating.init<A>(delegate:);
  a1[7] = v9;
}

void specialized implicit closure #4 in implicit closure #3 in AnySlotTemplating.init<A>(delegate:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
}

void specialized implicit closure #4 in implicit closure #3 in AnySlotTemplating.init<A>(delegate:)( uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, char a6, uint64_t a7, uint64_t a8)
{
}

#error "2FE518: call analysis failed (funcsize=11)"
uint64_t specialized implicit closure #8 in implicit closure #7 in AnySlotTemplating.init<A>(delegate:)( uint64_t a1,  uint64_t a2,  uint64_t a3,  uint64_t a4,  uint64_t a5,  uint64_t a6,  uint64_t a7,  uint64_t a8,  uint64_t a9,  uint64_t a10)
{
  void *v11;
  uint64_t v12;
  void (*v13)(uint64_t (*)(uint64_t), uint64_t);
  __int128 v11 = *(void **)(a10 + 40);
  __int128 v12 = swift_allocObject(&unk_419790, 32LL, 7LL);
  *(void *)(v12 + ++*(void *)(v0 + 16) = a8;
  *(void *)(v12 + 24) = a9;
  __int128 v13 = *(void (**)(uint64_t (*)(uint64_t), uint64_t))(class metadata base offset for StartCallCATs
                                                                        + *v11
                                                                        + 1696);
  swift_retain();
  v13( partial apply for closure #1 in CallRecordToCallBackSlotTemplating.makeParameterValueUnsupportedDialog(app:parameterName:intentResolutionResult:intent:multicardinalValueIndex:_:),  v12);
  return swift_release(v12);
}

uint64_t specialized implicit closure #8 in implicit closure #7 in AnySlotTemplating.init<A>(delegate:)( uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9)
{
  return CallCapabilitySlotTemplating.makeParameterValueUnsupportedDialog(app:parameterName:intentResolutionResult:intent:multicardinalValueIndex:_:)( a1,  a2,  a3,  a4,  a5,  a6,  a7 & 1,  a8,  a9);
}

void specialized implicit closure #8 in implicit closure #7 in AnySlotTemplating.init<A>(delegate:)( uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9)
{
}

void specialized implicit closure #8 in implicit closure #7 in AnySlotTemplating.init<A>(delegate:)()
{
}

#error "2FE63C: call analysis failed (funcsize=9)"
void specialized ContactsSlotTemplating.makeParameterPromptDialog(app:parameterName:intent:_:)( uint64_t a1,  uint64_t a2,  uint64_t a3,  void *a4,  uint64_t a5,  uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  os_log_s *v18;
  uint64_t v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  void *v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __CFString *v44;
  __CFString *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin();
  __int128 v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  __int128 v13 = (char *)&v54 - v12;
  __chkstk_darwin();
  uint64_t v15 = (char *)&v54 - v14;
  if ((specialized static ContactsSlotTemplating.isMissingMeCardCase(intent:)( (uint64_t)a4,  (uint64_t (*)(void))outlined bridged method (pb) of @objc INStartVideoCallIntent.contacts.getter) & 1) == 0)
  {
    uint64_t v26 = *(void **)(v6 + 40);
    uint64_t v27 = type metadata accessor for SpeakableString(0LL);
    __swift_storeEnumTagSinglePayload((uint64_t)v15, 1LL, 1LL, v27);
    (*(void (**)(char *, void, void, void, void, void, uint64_t, uint64_t))(class metadata base offset for StartCallCATs
                                                                                             + *v26
                                                                                             + 1312))( v15,  0LL,  0LL,  0LL,  0LL,  0LL,  a5,  a6);
    __int128 v13 = v15;
    goto LABEL_25;
  }

  uint64_t v54 = v6;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v16 = type metadata accessor for Logger(0LL);
  uint64_t v17 = __swift_project_value_buffer(v16, (uint64_t)static Logger.siriPhone);
  uint64_t v18 = (os_log_s *)Logger.logObject.getter(v17);
  uint64_t v20 = static os_log_type_t.debug.getter(v18, v19);
  if (os_log_type_enabled(v18, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v21 = 0;
    _os_log_impl( &dword_0,  v18,  v20,  "User requested a handle label with inferred isMe=true, but no MeCard person exists. Provide specific prompt dialog for this case StartCall#PromptForContactsKnownLabel.",  v21,  2u);
    swift_slowDealloc(v21, -1LL, -1LL);
  }

  outlined bridged method (pb) of @objc INStartVideoCallIntent.contacts.getter(a4);
  uint64_t v23 = v22;
  if (!v22) {
    goto LABEL_20;
  }
  if ((unint64_t)v22 >> 62)
  {
    if (v22 >= 0) {
      v22 &= 0xFFFFFFFFFFFFFF8uLL;
    }
    if (_CocoaArrayWrapper.endIndex.getter(v22)) {
      goto LABEL_9;
    }
LABEL_16:
    uint64_t v25 = 0LL;
    goto LABEL_17;
  }

void specialized ContactsSlotTemplating.makeParameterPromptDialog(app:parameterName:intent:_:)()
{
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_25_6();
  uint64_t v7 = v5 - v6;
  __chkstk_darwin();
  uint64_t v9 = (char *)&v60 - v8;
  __chkstk_darwin();
  __int128 v11 = (char *)&v60 - v10;
  if ((OUTLINED_FUNCTION_184_1() & 1) == 0)
  {
    uint64_t v23 = *(void **)(v0 + 40);
    uint64_t v24 = OUTLINED_FUNCTION_26_0();
    uint64_t v27 = OUTLINED_FUNCTION_29_1((uint64_t)v11, v25, v26, v24);
    BOOL v28 = OUTLINED_FUNCTION_42_20(v27, "preferredCallProvider") == (char *)&dword_0 + 2;
    (*(void (**)(char *, BOOL, void, void, void, void, uint64_t, uint64_t))(class metadata base offset for StartCallCATs
                                                                                             + *v23
                                                                                             + 1312))( v11,  v28,  0LL,  0LL,  0LL,  0LL,  v4,  v2);
    uint64_t v9 = v11;
    goto LABEL_25;
  }

  uint64_t v60 = v0;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v12 = type metadata accessor for Logger(0LL);
  uint64_t v13 = __swift_project_value_buffer(v12, (uint64_t)static Logger.siriPhone);
  uint64_t v14 = (os_log_s *)Logger.logObject.getter(v13);
  os_log_type_t v16 = static os_log_type_t.debug.getter(v14, v15);
  if (os_log_type_enabled(v14, v16))
  {
    uint64_t v17 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
    *(_WORD *)uint64_t v17 = 0;
    _os_log_impl( &dword_0,  v14,  v16,  "User requested a handle label with inferred isMe=true, but no MeCard person exists. Provide specific prompt dialog for this case StartCall#PromptForContactsKnownLabel.",  v17,  2u);
    OUTLINED_FUNCTION_0_2((uint64_t)v17);
  }

  uint64_t v18 = OUTLINED_FUNCTION_131_12();
  uint64_t v19 = v18;
  if (!v18) {
    goto LABEL_20;
  }
  if ((unint64_t)v18 >> 62)
  {
    if (v18 >= 0) {
      v18 &= 0xFFFFFFFFFFFFFF8uLL;
    }
    uint64_t v20 = _CocoaArrayWrapper.endIndex.getter(v18);
    if (v20) {
      goto LABEL_9;
    }
LABEL_16:
    uint64_t v22 = 0LL;
    goto LABEL_17;
  }

  uint64_t v20 = *(void *)((char *)&dword_10 + (v18 & 0xFFFFFFFFFFFFFF8LL));
  if (!v20) {
    goto LABEL_16;
  }
LABEL_9:
  OUTLINED_FUNCTION_17_40(v20, (v19 & 0xC000000000000001LL) == 0);
  if ((v19 & 0xC000000000000001LL) != 0) {
    uint64_t v21 = OUTLINED_FUNCTION_38_3();
  }
  else {
    uint64_t v21 = (uint64_t)OUTLINED_FUNCTION_31_24();
  }
  uint64_t v22 = (void *)v21;
LABEL_17:
  uint64_t v29 = OUTLINED_FUNCTION_62();
  uint64_t v19 = (uint64_t)OUTLINED_FUNCTION_42_20(v29, "personHandle");

  if (!v19 || (id v31 = OUTLINED_FUNCTION_46_7(v30, "label")) == 0LL)
  {
LABEL_20:
    uint64_t v37 = OUTLINED_FUNCTION_26_0();
    OUTLINED_FUNCTION_29_1((uint64_t)v9, v38, v39, v37);
    goto LABEL_21;
  }

  uint64_t v32 = v31;
  uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
  uint64_t v35 = v34;

  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_1_34(v33, v35);
  uint64_t v36 = OUTLINED_FUNCTION_26_0();
  __swift_storeEnumTagSinglePayload((uint64_t)v9, 0LL, 1LL, v36);
  swift_bridgeObjectRelease();
LABEL_21:
  uint64_t v61 = v4;
  type metadata accessor for DialogPersonHandle(0LL);
  id v40 = (id)v19;
  uint64_t v41 = DialogPersonHandle.__allocating_init(handle:)(v19);
  uint64_t v42 = type metadata accessor for DialogPersonHandle.Builder(0LL);
  uint64_t v43 = OUTLINED_FUNCTION_15_2(v42);
  uint64_t v44 = DialogPersonHandle.Builder.init()(v43);
  uint64_t v45 = v2;
  if (v41)
  {
    uint64_t v46 = swift_retain();
    DialogPersonHandle.label.getter(v46);
    OUTLINED_FUNCTION_164_0();
  }

  else
  {
    uint64_t v47 = OUTLINED_FUNCTION_26_0();
    OUTLINED_FUNCTION_29_1(v7, v48, v49, v47);
  }

  dispatch thunk of DialogPersonHandle.Builder.withLabel(_:)(v7);
  swift_release(v44);
  outlined destroy of PhoneCallNLIntent?(v7, &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v50 = @"PhoneNumber";
  uint64_t v51 = @"PhoneNumber";
  uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)(v51);
  uint64_t v54 = v53;

  OUTLINED_FUNCTION_1_34(v52, v54);
  uint64_t v55 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_42_30(v55);
  dispatch thunk of DialogPersonHandle.Builder.withType(_:)(v11);
  OUTLINED_FUNCTION_38_1();
  outlined destroy of PhoneCallNLIntent?( (uint64_t)v11,  &demangling cache variable for type metadata for SpeakableString?);
  uint64_t v57 = dispatch thunk of DialogPersonHandle.Builder.build()(v56);
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_21_61();
  uint64_t v59 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(class metadata base offset for StartCallCATs
                                                                 + v58
                                                                 + 1344);
  swift_retain();
  v59(v9, v57, v61, v45);

  OUTLINED_FUNCTION_164_0();
  OUTLINED_FUNCTION_31_1(v57);
LABEL_25:
  outlined destroy of PhoneCallNLIntent?((uint64_t)v9, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_7_5();
}

uint64_t specialized static ContactsSlotTemplating.isMissingMeCardCase(intent:)(void *a1)
{
  uint64_t v2 = v1;
  if (!v1)
  {
    uint64_t v6 = 0LL;
    unint64_t v8 = 0LL;
LABEL_12:
    uint64_t v4 = 0LL;
    goto LABEL_13;
  }

  if ((unint64_t)v1 >> 62)
  {
    if (v1 >= 0) {
      v1 &= 0xFFFFFFFFFFFFFF8uLL;
    }
    if (_CocoaArrayWrapper.endIndex.getter(v1)) {
      goto LABEL_4;
    }
    goto LABEL_11;
  }

  if (!*(void *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFFF8LL)))
  {
LABEL_11:
    swift_bridgeObjectRelease();
    uint64_t v6 = 0LL;
    unint64_t v8 = 0LL;
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0;
    goto LABEL_12;
  }

uint64_t specialized static ContactsSlotTemplating.isMissingMeCardCase(intent:)( uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = a2();
  uint64_t v5 = v4;
  if (!v4)
  {
    uint64_t v10 = 0LL;
    unint64_t v12 = 0LL;
LABEL_12:
    unint64_t v7 = 0LL;
    goto LABEL_13;
  }

  if ((unint64_t)v4 >> 62)
  {
    if (v4 >= 0) {
      v4 &= 0xFFFFFFFFFFFFFF8uLL;
    }
    if (_CocoaArrayWrapper.endIndex.getter(v4)) {
      goto LABEL_4;
    }
    goto LABEL_11;
  }

  if (!*(void *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFFF8LL)))
  {
LABEL_11:
    swift_bridgeObjectRelease();
    uint64_t v10 = 0LL;
    unint64_t v12 = 0LL;
    LODWORD(OUTLINED_FUNCTION_5_18(v3, v4, v5) = 0;
    goto LABEL_12;
  }

void specialized ContactsSlotTemplating.makeParameterValueConfirmationDialog(app:parameterName:intentResolutionResult:intent:inferenceSource:_:)( uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v48 = type metadata accessor for Locale(0LL);
  uint64_t v14 = *(void *)(v48 - 8);
  __chkstk_darwin();
  char v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin();
  uint64_t v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  char v20 = (char *)&v45 - v19;
  unint64_t v47 = (unint64_t)[a4 confirmationReason];
  id v21 = [a4 itemToConfirm];
  _bridgeAnyObjectToAny(_:)(v51, v21);
  swift_unknownObjectRelease(v21);
  type metadata accessor for INPerson();
  int v22 = swift_dynamicCast(&v54, v51, &type metadata for Any[1]);
  uint64_t v49 = a7;
  uint64_t v50 = a8;
  if (v22)
  {
    char v23 = v54;
    goto LABEL_14;
  }

  outlined bridged method (pb) of @objc INStartVideoCallIntent.contacts.getter(a5);
  if (!v24) {
    goto LABEL_13;
  }
  uint64_t v25 = v24;
  if ((unint64_t)v24 >> 62)
  {
    if (v24 >= 0) {
      v24 &= 0xFFFFFFFFFFFFFF8uLL;
    }
    if (_CocoaArrayWrapper.endIndex.getter(v24)) {
      goto LABEL_6;
    }
    goto LABEL_12;
  }

  if (!*(void *)((char *)&dword_10 + (v24 & 0xFFFFFFFFFFFFFF8LL)))
  {
LABEL_12:
    swift_bridgeObjectRelease();
LABEL_13:
    char v23 = 0LL;
    goto LABEL_14;
  }

void specialized ContactsSlotTemplating.makeParameterValueConfirmationDialog(app:parameterName:intentResolutionResult:intent:inferenceSource:_:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t (*a21)(uint64_t))
{
  uint64_t v69 = v21;
  uint64_t v73 = v23;
  uint64_t v74 = v24;
  char v26 = v25;
  uint64_t v28 = v27;
  uint64_t v72 = OUTLINED_FUNCTION_94_4();
  uint64_t v70 = *(void *)(v72 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v30 = v29;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_104_11();
  uint64_t v31 = __chkstk_darwin();
  uint64_t v33 = (char *)&v67 - v32;
  uint64_t v71 = (uint64_t)OUTLINED_FUNCTION_17_5(v31, "confirmationReason");
  id v34 = OUTLINED_FUNCTION_17_5(v71, "itemToConfirm");
  _bridgeAnyObjectToAny(_:)(v75, v34);
  swift_unknownObjectRelease(v34);
  OUTLINED_FUNCTION_68();
  if (swift_dynamicCast(&v78, v75, (char *)&type metadata for Any + 8))
  {
    uint64_t v35 = v78;
    goto LABEL_15;
  }

  uint64_t v36 = a21(v28);
  if (!v36) {
    goto LABEL_14;
  }
  uint64_t v37 = v36;
  OUTLINED_FUNCTION_71();
  if (v39)
  {
    if (v37 >= 0) {
      uint64_t v42 = v38;
    }
    else {
      uint64_t v42 = v37;
    }
    uint64_t v40 = _CocoaArrayWrapper.endIndex.getter(v42);
    if (v40) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }

  uint64_t v40 = *(void *)(v38 + 16);
  if (!v40)
  {
LABEL_13:
    OUTLINED_FUNCTION_34_0();
LABEL_14:
    uint64_t v35 = 0LL;
    goto LABEL_15;
  }

void specialized ContactsSlotTemplating.makeParameterValueDisambiguationDialog(app:parameterName:intentResolutionResult:disambiguationList:deviceIsLocked:intent:_:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21)
{
  a19 = v24;
  a20 = v25;
  uint64_t v148 = v22;
  OUTLINED_FUNCTION_181_6(v26, (uint64_t)&a13);
  uint64_t v146 = a21;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v28 = OUTLINED_FUNCTION_128_11(v27);
  OUTLINED_FUNCTION_16_2(v28, (uint64_t)&a10);
  uint64_t v143 = v29;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  OUTLINED_FUNCTION_19_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_37_14();
  uint64_t v141 = v30;
  uint64_t v150 = *(void *)(OUTLINED_FUNCTION_94_4() - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_39_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_19_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_37_14();
  uint64_t v32 = OUTLINED_FUNCTION_127_12(v31);
  OUTLINED_FUNCTION_16_2(v32, (uint64_t)&v155);
  uint64_t v138 = v33;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v137 = v34;
  uint64_t v147 = v21;
  outlined bridged method (pb) of @objc INAddCallParticipantIntent.participants.getter(v21);
  unint64_t v36 = v35;
  id v37 = OUTLINED_FUNCTION_38_37(v35, "disambiguationItems");
  static Array._unconditionallyBridgeFromObjectiveC(_:)(v37, &type metadata for Any[1]);

  uint64_t v38 = OUTLINED_FUNCTION_164_6();
  uint64_t v39 = &selRef_alternatives;
  if (v37) {
    uint64_t v39 = &selRef_disambiguationItems;
  }
  id v40 = OUTLINED_FUNCTION_38_37(v38, *v39);
  uint64_t v41 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v40, &type metadata for Any[1]);

  uint64_t v42 = specialized _arrayConditionalCast<A, B>(_:)(v41);
  uint64_t v43 = _swiftEmptyArrayStorage;
  if (v42) {
    uint64_t v44 = (uint64_t)v42;
  }
  else {
    uint64_t v44 = (uint64_t)_swiftEmptyArrayStorage;
  }
  int64_t v45 = v36 >> 62;
  if (v36)
  {
    if (v45) {
      goto LABEL_96;
    }
    uint64_t v46 = *(void *)((char *)&dword_10 + (v36 & 0xFFFFFFFFFFFFF8LL));
    OUTLINED_FUNCTION_128();
    goto LABEL_9;
  }

  unint64_t v52 = 0LL;
  uint64_t v47 = v149;
  while (1)
  {
    App.isFirstParty()();
    OUTLINED_FUNCTION_34_0();
    unint64_t v53 = (unint64_t)v44 >> 62;
    if ((OUTLINED_FUNCTION_126_10() & 1) != 0 && (OUTLINED_FUNCTION_170_6() & 1) != 0)
    {
      OUTLINED_FUNCTION_23_5();
      if (v53)
      {
        OUTLINED_FUNCTION_20_14();
        uint64_t v54 = OUTLINED_FUNCTION_61_1();
        if (!v54)
        {
LABEL_106:
          OUTLINED_FUNCTION_7_4(v44);
          if (one-time initialization token for siriPhone != -1) {
            swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
          }
          uint64_t v47 = (uint64_t)v139;
          uint64_t v115 = __swift_project_value_buffer((uint64_t)v139, (uint64_t)static Logger.siriPhone);
          uint64_t v116 = OUTLINED_FUNCTION_134_8(v115, *(uint64_t (**)(void, uint64_t, uint64_t))(v138 + 16));
          Logger.logObject.getter(v116);
          os_log_type_t v117 = OUTLINED_FUNCTION_59_8();
          unint64_t v36 = (unint64_t)"Foreign emergency check should guarantee the presence of a nonLocal emergencyType INPerson";
          if (OUTLINED_FUNCTION_87(v117))
          {
            uint64_t v44 = 12LL;
            uint64_t v118 = OUTLINED_FUNCTION_7_0(12LL);
            uint64_t v23 = (char *)OUTLINED_FUNCTION_7_0(32LL);
            v152[0] = v23;
            uint64_t v119 = OUTLINED_FUNCTION_44_36(4.8149e-34);
            OUTLINED_FUNCTION_60_29(v119);
            OUTLINED_FUNCTION_9_4(&dword_0, v120, v121, "%s");
            OUTLINED_FUNCTION_57_33();
            OUTLINED_FUNCTION_0_2((uint64_t)v23);
            OUTLINED_FUNCTION_0_2(v118);
          }

          OUTLINED_FUNCTION_77_23();
          OUTLINED_FUNCTION_116();
          OUTLINED_FUNCTION_7_2( (uint64_t)"Fatal error",  11LL,  2LL,  90LL,  v122,  (uint64_t)"PhoneCallFlowDelegatePlugin/PhoneLog.swift");
          __break(1u);
          goto LABEL_111;
        }
      }

      else
      {
        uint64_t v54 = *(void *)((char *)&dword_10 + (v44 & 0xFFFFFFFFFFFFF8LL));
        OUTLINED_FUNCTION_20_14();
        if (!v54) {
          goto LABEL_106;
        }
      }

      OUTLINED_FUNCTION_209_3();
      uint64_t v55 = v44;
      while (1)
      {
        uint64_t v23 = (char *)(v45 - 4);
        id v56 = v43 ? (id)OUTLINED_FUNCTION_28_61(v45 - 4) : *(id *)(v44 + 8 * v45);
        uint64_t v57 = v56;
        uint64_t v44 = v45 - 3;
        if (__OFADD__(v23, 1LL)) {
          break;
        }
        uint64_t v58 = (char *)OUTLINED_FUNCTION_38_37((uint64_t)v56, *(const char **)(v53 + 1424));
        if (v58)
        {
          uint64_t v23 = v58;
          unint64_t v36 = (unint64_t)[v58 *(SEL *)(v52 + 1872)];

          if (v36 == 2)
          {
            OUTLINED_FUNCTION_7_4(v55);
            uint64_t v82 = *(void **)(v148 + 40);
            OUTLINED_FUNCTION_50_6();
            outlined init with copy of SharedGlobalsProviding(v148, (uint64_t)v152);
            uint64_t v83 = SirikitDeviceState.__allocating_init(from:)(v152);
            OUTLINED_FUNCTION_18_22();
            id v84 = v57;
            OUTLINED_FUNCTION_144_9();
            OUTLINED_FUNCTION_99_15(v152);
            OUTLINED_FUNCTION_51_6();
            __swift_destroy_boxed_opaque_existential_1(v152);
            static PhonePerson.make(phonePerson:options:locale:)(v57, 0, v149);
            uint64_t v86 = v85;

            OUTLINED_FUNCTION_52_32(v149, *(uint64_t (**)(uint64_t, void))(v150 + 8));
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(class metadata base offset for StartCallCATs
                                                                       + *v82
                                                                       + 288))( v83,  v86,  v145,  v146);

            swift_release(v83);
            goto LABEL_62;
          }
        }

        ++v45;
        BOOL v59 = v44 == v54;
        uint64_t v44 = v55;
        if (v59) {
          goto LABEL_106;
        }
      }

      __break(1u);
      goto LABEL_95;
    }

    if ((OUTLINED_FUNCTION_171_7() & 1) != 0)
    {
      OUTLINED_FUNCTION_23_5();
      uint64_t v60 = *(void **)(v148 + 40);
      v151[0] = v43;
      if (v53)
      {
        if (v44 < 0) {
          uint64_t v114 = v44;
        }
        else {
          uint64_t v114 = v44 & 0xFFFFFFFFFFFFFF8LL;
        }
        OUTLINED_FUNCTION_20_14();
        uint64_t v23 = (char *)_CocoaArrayWrapper.endIndex.getter(v114);
        if (!v23)
        {
LABEL_103:
          OUTLINED_FUNCTION_13_1();
          uint64_t v87 = _swiftEmptyArrayStorage;
LABEL_104:
          OUTLINED_FUNCTION_13_1();
          OUTLINED_FUNCTION_96_11( (uint64_t)v87,  *(uint64_t (**)(uint64_t, void, void))(class metadata base offset for StartCallCATs + *v60 + 352));
          OUTLINED_FUNCTION_39();
          goto LABEL_137;
        }
      }

      else
      {
        uint64_t v23 = *(char **)((char *)&dword_10 + (v44 & 0xFFFFFFFFFFFFF8LL));
        OUTLINED_FUNCTION_20_14();
        if (!v23) {
          goto LABEL_103;
        }
      }

      OUTLINED_FUNCTION_18_22();
      if ((uint64_t)v23 >= 1)
      {
        for (uint64_t i = 0LL; (char *)i != v23; ++i)
        {
          if ((v44 & 0xC000000000000001LL) != 0) {
            uint64_t v62 = OUTLINED_FUNCTION_28_61(i);
          }
          else {
            uint64_t v62 = (uint64_t)OUTLINED_FUNCTION_27_10(v44 + 8 * i);
          }
          uint64_t v63 = (void *)v62;
          OUTLINED_FUNCTION_144_9();
          uint64_t v65 = v153;
          uint64_t v64 = v154;
          OUTLINED_FUNCTION_195_3();
          dispatch thunk of DeviceState.siriLocale.getter(v65, v64);
          __swift_destroy_boxed_opaque_existential_1(v152);
          static PhonePerson.make(phonePerson:options:locale:)(v63, 0, v47);
          OUTLINED_FUNCTION_211_1();
          OUTLINED_FUNCTION_52_32(v47, v66);

          if (v65)
          {
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v67);
            OUTLINED_FUNCTION_40_8();
            if (v69) {
              OUTLINED_FUNCTION_3_25((uint64_t)v63 + 1, v68);
            }
            uint64_t v70 = OUTLINED_FUNCTION_157_6();
            specialized Array._endMutation()(v70, v71, v72, v73);
          }
        }

        OUTLINED_FUNCTION_13_1();
        uint64_t v87 = (void *)v151[0];
        goto LABEL_104;
      }

      __break(1u);
LABEL_113:
      OUTLINED_FUNCTION_20_14();
      uint64_t v76 = OUTLINED_FUNCTION_15_4();
      uint64_t v77 = OUTLINED_FUNCTION_13_1();
      goto LABEL_51;
    }

    unint64_t v74 = OUTLINED_FUNCTION_20_14();
    PhoneContactDisambiguationProperties.isHandleDisambiguation.getter(v74);
    uint64_t v76 = v75;
    uint64_t v77 = OUTLINED_FUNCTION_13_1();
    if ((v76 & 1) != 0) {
      break;
    }
    if (v53) {
      goto LABEL_113;
    }
    uint64_t v76 = *(void *)((char *)&dword_10 + (v44 & 0xFFFFFFFFFFFFF8LL));
LABEL_51:
    if (v76 == 1)
    {
      OUTLINED_FUNCTION_65_21(v77, (v44 & 0xC000000000000001LL) == 0);
      if ((v44 & 0xC000000000000001LL) != 0) {
        OUTLINED_FUNCTION_28_61(0LL);
      }
      else {
        OUTLINED_FUNCTION_129_14();
      }
      OUTLINED_FUNCTION_146_9();
      char v79 = v78;

      if ((v79 & 1) != 0) {
        break;
      }
    }

    outlined init with copy of Result<TemplatingResult, Error>( v148,  (uint64_t)v152,  &demangling cache variable for type metadata for ContactsSlotTemplating<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>);
    if (v76 < 6)
    {
      outlined destroy of PhoneCallNLIntent?( (uint64_t)v152,  &demangling cache variable for type metadata for ContactsSlotTemplating<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>);
LABEL_68:
      OUTLINED_FUNCTION_13_1();
      OUTLINED_FUNCTION_147_5();
      if (v59)
      {
        OUTLINED_FUNCTION_23_5();
        OUTLINED_FUNCTION_21_61();
        (*(void (**)(uint64_t, uint64_t))(class metadata base offset for StartCallCATs + v93 + 384))( v145,  v146);
        goto LABEL_137;
      }

      if (!v36) {
        goto LABEL_79;
      }
      if (v45)
      {
        OUTLINED_FUNCTION_128();
        uint64_t v94 = (void *)OUTLINED_FUNCTION_15_4();
        OUTLINED_FUNCTION_23_5();
        if (!v94) {
          goto LABEL_77;
        }
      }

      else
      {
        uint64_t v94 = *(void **)((char *)&dword_10 + (v36 & 0xFFFFFFFFFFFFFF8LL));
        if (!v94) {
          goto LABEL_77;
        }
      }

      OUTLINED_FUNCTION_22_18();
      if ((v36 & 0xC000000000000001LL) != 0) {
        uint64_t v95 = OUTLINED_FUNCTION_113_12();
      }
      else {
        uint64_t v95 = (uint64_t)OUTLINED_FUNCTION_69_0();
      }
      uint64_t v94 = (void *)v95;
LABEL_77:
      uint64_t v96 = OUTLINED_FUNCTION_23_5();
      id v97 = OUTLINED_FUNCTION_17_5(v96, "relationship");

      if (v97)
      {
        uint64_t v98 = v148;
        uint64_t v99 = v140;
        INPersonRelationship.toSpeakableString(startCallCats:)();

LABEL_80:
        uint64_t v103 = OUTLINED_FUNCTION_96_11( v99,  *(uint64_t (**)(uint64_t, void, void))(class metadata base offset for StartCallCATs + **(void **)(v98 + 40)
                                                                   + 256));
        OUTLINED_FUNCTION_97(v103, &demangling cache variable for type metadata for SpeakableString?);
        goto LABEL_137;
      }

LABEL_79:
      uint64_t v100 = OUTLINED_FUNCTION_26_0();
      uint64_t v99 = v140;
      OUTLINED_FUNCTION_29_1(v140, v101, v102, v100);
      uint64_t v98 = v148;
      goto LABEL_80;
    }

    uint64_t v88 = v154;
    __swift_project_boxed_opaque_existential_1(v152, v153);
    uint64_t v89 = OUTLINED_FUNCTION_67();
    dispatch thunk of DeviceState.interactionType.getter(v89, v88);
    (*(void (**)(uint64_t, void))(v143 + 104))(v142, enum case for InteractionType.dialogDriven(_:));
    char v90 = specialized == infix<A>(_:_:)(v141, v142);
    uint64_t v91 = *(void (**)())(v143 + 8);
    v91();
    ((void (*)(uint64_t))v91)(v141);
    outlined destroy of PhoneCallNLIntent?( (uint64_t)v152,  &demangling cache variable for type metadata for ContactsSlotTemplating<INAddCallParticipantIntent, INAddCallParticipantIntentResponse>);
    if ((v90 & 1) == 0) {
      goto LABEL_68;
    }
    OUTLINED_FUNCTION_23_5();
    uint64_t v92 = *(void **)(v148 + 40);
    v151[5] = _swiftEmptyArrayStorage;
    if (v53)
    {
      OUTLINED_FUNCTION_20_14();
      OUTLINED_FUNCTION_148_11((uint64_t)&a15);
      unint64_t v36 = OUTLINED_FUNCTION_61_1();
    }

    else
    {
      unint64_t v36 = *(void *)((char *)&dword_10 + (v44 & 0xFFFFFFFFFFFFF8LL));
      OUTLINED_FUNCTION_20_14();
      OUTLINED_FUNCTION_148_11((uint64_t)&a15);
    }

    if (!v36)
    {
LABEL_93:
      OUTLINED_FUNCTION_13_1();
      OUTLINED_FUNCTION_13_1();

      OUTLINED_FUNCTION_125_1();
      uint64_t v113 = OUTLINED_FUNCTION_37_45();
      OUTLINED_FUNCTION_174_5( v113,  v145,  *(uint64_t (**)(uint64_t, uint64_t, void))(class metadata base offset for StartCallCATs + *v92 + 416));
LABEL_62:
      OUTLINED_FUNCTION_16_3();
      goto LABEL_137;
    }

    uint64_t v144 = (uint64_t)v92;
    unint64_t v149 = v44 & 0xC000000000000001LL;
    uint64_t v148 = OUTLINED_FUNCTION_18_22();
    uint64_t v104 = 4LL;
    while (1)
    {
      id v105 = v149 ? (id)OUTLINED_FUNCTION_28_61(v104 - 4) : *(id *)(v44 + 8 * v104);
      int64_t v45 = (int64_t)v105;
      uint64_t v43 = (void *)(v104 - 3);
      if (__OFADD__(v104 - 4, 1LL)) {
        break;
      }
      OUTLINED_FUNCTION_169_5();
      OUTLINED_FUNCTION_200_5();
      __swift_project_boxed_opaque_existential_1(v151, v151[3]);
      OUTLINED_FUNCTION_64_28();
      __swift_destroy_boxed_opaque_existential_1(v151);
      static PhonePerson.make(phonePerson:options:locale:)((void *)v45, v53 & 1, (uint64_t)v23);
      unint64_t v53 = v106;
      OUTLINED_FUNCTION_52_32((uint64_t)v23, *(uint64_t (**)(uint64_t, void))(v150 + 8));

      if (v53)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v107);
        OUTLINED_FUNCTION_137_9();
        if (v69) {
          OUTLINED_FUNCTION_3_25(v45 + 1, v108);
        }
        uint64_t v109 = OUTLINED_FUNCTION_100_12();
        specialized Array._endMutation()(v109, v110, v111, v112);
      }

      ++v104;
      if (v43 == (void *)v36) {
        goto LABEL_93;
      }
    }

LABEL_95:
    __break(1u);
LABEL_96:
    OUTLINED_FUNCTION_97_20();
    uint64_t v46 = OUTLINED_FUNCTION_158_8();
LABEL_9:
    uint64_t v47 = v149;
    if (v46)
    {
      OUTLINED_FUNCTION_22_18();
      if ((v36 & 0xC000000000000001LL) != 0) {
        uint64_t v48 = OUTLINED_FUNCTION_113_12();
      }
      else {
        uint64_t v48 = (uint64_t)OUTLINED_FUNCTION_69_0();
      }
      uint64_t v49 = (void *)v48;
      OUTLINED_FUNCTION_23_5();
      id v50 = objc_msgSend(v49, "siriMatches", v137);

      uint64_t v43 = _swiftEmptyArrayStorage;
      if (!v50) {
        goto LABEL_18;
      }
      unint64_t v51 = OUTLINED_FUNCTION_68();
      unint64_t v52 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v50, v51);

      if (!(v52 >> 62))
      {
        OUTLINED_FUNCTION_156_4();
        goto LABEL_15;
      }

LABEL_111:
      swift_bridgeObjectRetain();
      uint64_t v123 = OUTLINED_FUNCTION_158_8();
      uint64_t v124 = v52;
      unint64_t v52 = v123;
      OUTLINED_FUNCTION_7_4(v124);
    }

    else
    {
      OUTLINED_FUNCTION_23_5();
LABEL_18:
      if (v45)
      {
        OUTLINED_FUNCTION_97_20();
        unint64_t v52 = OUTLINED_FUNCTION_158_8();
LABEL_15:
        swift_bridgeObjectRelease();
      }

      else
      {
        unint64_t v52 = *(void *)((char *)&dword_10 + (v36 & 0xFFFFFFFFFFFFF8LL));
      }
    }
  }

  if (!v36) {
    goto LABEL_116;
  }
  if (v45)
  {
    OUTLINED_FUNCTION_128();
    uint64_t v76 = OUTLINED_FUNCTION_15_4();
    OUTLINED_FUNCTION_23_5();
    if (!v76) {
      goto LABEL_115;
    }
LABEL_58:
    OUTLINED_FUNCTION_22_18();
    if ((v36 & 0xC000000000000001LL) != 0) {
      uint64_t v80 = OUTLINED_FUNCTION_113_12();
    }
    else {
      uint64_t v80 = (uint64_t)OUTLINED_FUNCTION_69_0();
    }
    uint64_t v76 = v80;
    OUTLINED_FUNCTION_23_5();
    id v81 = (id)v76;
    OUTLINED_FUNCTION_146_9();
  }

  else
  {
    uint64_t v76 = *(void *)((char *)&dword_10 + (v36 & 0xFFFFFFFFFFFFFF8LL));
    if (v76) {
      goto LABEL_58;
    }
LABEL_115:
    OUTLINED_FUNCTION_23_5();
LABEL_116:
    id v81 = 0LL;
  }

  char v125 = OUTLINED_FUNCTION_169_5();
  if (v53) {
    goto LABEL_132;
  }
  uint64_t v126 = *(void *)((char *)&dword_10 + (v44 & 0xFFFFFFFFFFFFF8LL));
  OUTLINED_FUNCTION_20_14();
  for (; v126; uint64_t v126 = OUTLINED_FUNCTION_61_1())
  {
    OUTLINED_FUNCTION_123_10((uint64_t)&a15);
    while (1)
    {
      Swift::String v127 = (char *)v81 - 4;
      id v128 = v52 ? (id)OUTLINED_FUNCTION_28_61((uint64_t)v81 - 4) : *(id *)(v44 + 8LL * (void)v81);
      uint64_t v129 = v128;
      uint64_t v76 = (uint64_t)v81 - 3;
      if (__OFADD__(v127, 1LL)) {
        break;
      }
      id v130 = OUTLINED_FUNCTION_155_7();
      if (!v130)
      {
        OUTLINED_FUNCTION_13_1();

LABEL_130:
        id v81 = v147;
        goto LABEL_134;
      }

      OUTLINED_FUNCTION_175_4(v130);
      OUTLINED_FUNCTION_152_9();

      if (v53 == 2)
      {
        id v81 = (char *)v81 + 1;
        if (v76 != v126) {
          continue;
        }
      }

      uint64_t v131 = OUTLINED_FUNCTION_13_1();
      goto LABEL_130;
    }

    __break(1u);
LABEL_132:
    OUTLINED_FUNCTION_20_14();
  }

  uint64_t v131 = OUTLINED_FUNCTION_13_1();
  unint64_t v52 = v44 & 0xC000000000000001LL;
LABEL_134:
  OUTLINED_FUNCTION_65_21(v131, v52 == 0);
  if (v52) {
    uint64_t v132 = OUTLINED_FUNCTION_28_61(0LL);
  }
  else {
    uint64_t v132 = (uint64_t)OUTLINED_FUNCTION_129_14();
  }
  uint64_t v133 = (void *)v132;
  OUTLINED_FUNCTION_13_1();
  OUTLINED_FUNCTION_18_22();
  OUTLINED_FUNCTION_90_21((uint64_t)&a16);
  OUTLINED_FUNCTION_51_6();
  OUTLINED_FUNCTION_70_23(v133, v125 & 1, v144);
  uint64_t v135 = v134;

  OUTLINED_FUNCTION_52_32(v144, *(uint64_t (**)(uint64_t, void))(v150 + 8));
  OUTLINED_FUNCTION_124_11();
  uint64_t v136 = OUTLINED_FUNCTION_212_3((uint64_t)&a17);
  ((void (*)(uint64_t))v76)(v136);

  OUTLINED_FUNCTION_31_1(v135);
LABEL_137:
  OUTLINED_FUNCTION_7_5();
}

void specialized ContactsSlotTemplating.makeParameterValueDisambiguationDialog(app:parameterName:intentResolutionResult:disambiguationList:deviceIsLocked:intent:_:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t (*a22)(void *), uint64_t *a23)
{
  a19 = v26;
  a20 = v27;
  uint64_t v28 = v24;
  OUTLINED_FUNCTION_181_6(v29, (uint64_t)&a15);
  uint64_t v30 = a22;
  uint64_t v149 = a21;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v32 = OUTLINED_FUNCTION_128_11(v31);
  OUTLINED_FUNCTION_16_2(v32, (uint64_t)&a9);
  uint64_t v144 = v33;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_10_1();
  OUTLINED_FUNCTION_19_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_37_14();
  uint64_t v142 = v34;
  uint64_t v151 = *(void *)(OUTLINED_FUNCTION_94_4() - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_39_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_19_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_37_14();
  uint64_t v36 = OUTLINED_FUNCTION_127_12(v35);
  OUTLINED_FUNCTION_16_2(v36, (uint64_t)&v156);
  uint64_t v139 = v37;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  uint64_t v150 = v23;
  unint64_t v38 = v30(v23);
  id v39 = OUTLINED_FUNCTION_38_37(v38, "disambiguationItems");
  static Array._unconditionallyBridgeFromObjectiveC(_:)(v39, (char *)&type metadata for Any + 8);

  uint64_t v40 = OUTLINED_FUNCTION_164_6();
  uint64_t v41 = &selRef_alternatives;
  if (v39) {
    uint64_t v41 = &selRef_disambiguationItems;
  }
  id v42 = OUTLINED_FUNCTION_38_37(v40, *v41);
  uint64_t v43 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v42, (char *)&type metadata for Any + 8);

  uint64_t v44 = specialized _arrayConditionalCast<A, B>(_:)(v43);
  if (v44) {
    uint64_t v45 = (uint64_t)v44;
  }
  else {
    uint64_t v45 = (uint64_t)_swiftEmptyArrayStorage;
  }
  unint64_t v46 = v38 >> 62;
  if (v38)
  {
    if (v46)
    {
      OUTLINED_FUNCTION_8_1();
      uint64_t v48 = OUTLINED_FUNCTION_10_29();
      if (v48) {
        goto LABEL_9;
      }
    }

    else
    {
      uint64_t v47 = *(void *)((char *)&dword_10 + (v38 & 0xFFFFFFFFFFFFF8LL));
      uint64_t v48 = OUTLINED_FUNCTION_8_1();
      if (v47)
      {
LABEL_9:
        OUTLINED_FUNCTION_6_7(v48, (v38 & 0xC000000000000001LL) == 0);
        if ((v38 & 0xC000000000000001LL) != 0) {
          goto LABEL_101;
        }
        uint64_t v49 = (uint64_t)OUTLINED_FUNCTION_109_12();
        goto LABEL_11;
      }
    }

    OUTLINED_FUNCTION_39();
    goto LABEL_18;
  }

  unint64_t v53 = 0LL;
  while (1)
  {
    App.isFirstParty()();
    OUTLINED_FUNCTION_34_0();
    unint64_t v54 = (unint64_t)v45 >> 62;
    if ((OUTLINED_FUNCTION_126_10() & 1) == 0 || (OUTLINED_FUNCTION_170_6() & 1) == 0) {
      break;
    }
    OUTLINED_FUNCTION_39();
    uint64_t v146 = (uint64_t)v28;
    if (v54)
    {
      OUTLINED_FUNCTION_20_14();
      uint64_t v55 = OUTLINED_FUNCTION_15_4();
      if (!v55)
      {
LABEL_108:
        OUTLINED_FUNCTION_7_4(v45);
        if (one-time initialization token for siriPhone != -1) {
          swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
        }
        unint64_t v38 = v140;
        uint64_t v115 = __swift_project_value_buffer(v140, (uint64_t)static Logger.siriPhone);
        uint64_t v116 = OUTLINED_FUNCTION_134_8(v115, *(uint64_t (**)(void, uint64_t, uint64_t))(v139 + 16));
        Logger.logObject.getter(v116);
        os_log_type_t v117 = OUTLINED_FUNCTION_59_8();
        uint64_t v28 = "Foreign emergency check should guarantee the presence of a nonLocal emergencyType INPerson";
        if (OUTLINED_FUNCTION_87(v117))
        {
          uint64_t v45 = 12LL;
          uint64_t v118 = OUTLINED_FUNCTION_7_0(12LL);
          uint64_t v25 = (char *)OUTLINED_FUNCTION_7_0(32LL);
          v153[0] = v25;
          uint64_t v119 = OUTLINED_FUNCTION_44_36(4.8149e-34);
          OUTLINED_FUNCTION_60_29(v119);
          OUTLINED_FUNCTION_9_4(&dword_0, v120, v121, "%s");
          OUTLINED_FUNCTION_57_33();
          OUTLINED_FUNCTION_0_2((uint64_t)v25);
          OUTLINED_FUNCTION_0_2(v118);
        }

        OUTLINED_FUNCTION_77_23();
        OUTLINED_FUNCTION_116();
        OUTLINED_FUNCTION_7_2( (uint64_t)"Fatal error",  11LL,  2LL,  90LL,  v122,  (uint64_t)"PhoneCallFlowDelegatePlugin/PhoneLog.swift");
        __break(1u);
        goto LABEL_113;
      }
    }

    else
    {
      uint64_t v55 = *(void *)((char *)&dword_10 + (v45 & 0xFFFFFFFFFFFFF8LL));
      OUTLINED_FUNCTION_20_14();
      if (!v55) {
        goto LABEL_108;
      }
    }

    OUTLINED_FUNCTION_209_3();
    uint64_t v28 = (const char *)v45;
    while (1)
    {
      id v56 = _swiftEmptyArrayStorage ? (id)OUTLINED_FUNCTION_28_61(v54 - 4) : *(id *)(v45 + 8 * v54);
      unint64_t v38 = (unint64_t)v56;
      uint64_t v45 = v54 - 3;
      if (__OFADD__(v54 - 4, 1LL)) {
        break;
      }
      id v57 = OUTLINED_FUNCTION_17_5((uint64_t)v56, *(const char **)(v46 + 1424));
      if (v57)
      {
        uint64_t v58 = v57;
        uint64_t v25 = (char *)[v57 *(SEL *)(v53 + 1872)];

        if (v25 == (_BYTE *)&dword_0 + 2)
        {
          OUTLINED_FUNCTION_7_4((uint64_t)v28);
          id v84 = *(void **)(v146 + 40);
          OUTLINED_FUNCTION_50_6();
          outlined init with copy of SharedGlobalsProviding(v146, (uint64_t)v153);
          uint64_t v85 = SirikitDeviceState.__allocating_init(from:)(v153);
          OUTLINED_FUNCTION_18_22();
          id v86 = (id)v38;
          OUTLINED_FUNCTION_144_9();
          OUTLINED_FUNCTION_99_15(v153);
          OUTLINED_FUNCTION_51_6();
          __swift_destroy_boxed_opaque_existential_1(v153);
          static PhonePerson.make(phonePerson:options:locale:)((void *)v38, 0, v147);
          uint64_t v88 = v87;

          OUTLINED_FUNCTION_52_32(v147, *(uint64_t (**)(uint64_t, void))(v151 + 8));
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(class metadata base offset for StartCallCATs
                                                                     + *v84
                                                                     + 288))( v85,  v88,  v148,  v149);

          OUTLINED_FUNCTION_31_2();
          uint64_t v89 = v88;
          goto LABEL_63;
        }
      }

      ++v54;
      BOOL v59 = v45 == v55;
      uint64_t v45 = (uint64_t)v28;
      if (v59) {
        goto LABEL_108;
      }
    }

    __break(1u);
LABEL_100:
    __break(1u);
LABEL_101:
    uint64_t v49 = OUTLINED_FUNCTION_29_7();
LABEL_11:
    id v50 = (void *)v49;
    OUTLINED_FUNCTION_39();
    id v51 = [v50 siriMatches];

    if (v51)
    {
      unint64_t v52 = OUTLINED_FUNCTION_68();
      unint64_t v53 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v51, v52);

      if (!(v53 >> 62))
      {
        OUTLINED_FUNCTION_156_4();
        goto LABEL_14;
      }

void specialized ContactsSlotTemplating.makeParameterValueUnsupportedDialog(app:parameterName:intentResolutionResult:intent:multicardinalValueIndex:_:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21)
{
  uint64_t v143 = v23;
  uint64_t v144 = v21;
  char v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v139 = v32;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_25_6();
  uint64_t v35 = v33 - v34;
  __chkstk_darwin();
  uint64_t v37 = (char *)&v136 - v36;
  __chkstk_darwin();
  uint64_t v140 = (uint64_t)&v136 - v38;
  uint64_t v39 = OUTLINED_FUNCTION_94_4();
  uint64_t v141 = *(void *)(v39 - 8);
  uint64_t v142 = v39;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_25_6();
  uint64_t v42 = v40 - v41;
  __chkstk_darwin();
  uint64_t v44 = (char *)&v136 - v43;
  OUTLINED_FUNCTION_182_4();
  if (v45)
  {
    uint64_t v22 = v45;
    if ((v25 & 1) == 0)
    {
      unint64_t v46 = v45 & 0xC000000000000001LL;
      specialized Array._checkSubscript(_:wasNativeTypeChecked:)(v27, (v45 & 0xC000000000000001LL) == 0, v45);
      if (v46) {
        id v47 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v27, v22);
      }
      else {
        id v47 = OUTLINED_FUNCTION_27_10(v22 + 8 * v27);
      }
      id v145 = v47;
LABEL_13:
      uint64_t v48 = swift_bridgeObjectRelease();
      goto LABEL_19;
    }

    OUTLINED_FUNCTION_23_5();
  }

  OUTLINED_FUNCTION_182_4();
  if (v48)
  {
    uint64_t v49 = v48;
    if ((unint64_t)v48 >> 62)
    {
      if (v48 >= 0) {
        v48 &= 0xFFFFFFFFFFFFFF8uLL;
      }
      uint64_t v50 = _CocoaArrayWrapper.endIndex.getter(v48);
      if (v50) {
        goto LABEL_10;
      }
    }

    else
    {
      uint64_t v50 = *(void *)((char *)&dword_10 + (v48 & 0xFFFFFFFFFFFFFF8LL));
      if (v50)
      {
LABEL_10:
        OUTLINED_FUNCTION_112_12(v50, (v49 & 0xC000000000000001LL) == 0);
        if ((v49 & 0xC000000000000001LL) != 0) {
          id v51 = (void *)OUTLINED_FUNCTION_224_2(0LL);
        }
        else {
          id v51 = OUTLINED_FUNCTION_118_5();
        }
        id v145 = v51;
        goto LABEL_13;
      }
    }

    uint64_t v48 = OUTLINED_FUNCTION_34_0();
    id v145 = 0LL;
  }

  else
  {
    id v145 = 0LL;
  }

void specialized ContactsSlotTemplating.makeParameterValueUnsupportedDialog(app:parameterName:intentResolutionResult:intent:multicardinalValueIndex:_:)( uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9)
{
  uint64_t v119 = a8;
  uint64_t v115 = a1;
  uint64_t v14 = a9;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin();
  char v16 = (char *)&v112 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v18 = (char *)&v112 - v17;
  __chkstk_darwin();
  uint64_t v116 = (uint64_t)&v112 - v19;
  uint64_t v20 = type metadata accessor for Locale(0LL);
  uint64_t v117 = *(void *)(v20 - 8);
  uint64_t v118 = v20;
  __chkstk_darwin();
  uint64_t v22 = (char *)&v112 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  char v24 = (char *)&v112 - v23;
  outlined bridged method (pb) of @objc INStartVideoCallIntent.contacts.getter(a5);
  if (v25)
  {
    uint64_t v9 = v25;
    if ((a7 & 1) == 0)
    {
      specialized Array._checkSubscript(_:wasNativeTypeChecked:)(a6, (v25 & 0xC000000000000001LL) == 0, v25);
      if ((v9 & 0xC000000000000001LL) != 0) {
        id v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a6, v9);
      }
      else {
        id v26 = *(id *)(v9 + 8 * a6 + 32);
      }
      id v121 = v26;
LABEL_13:
      swift_bridgeObjectRelease();
      goto LABEL_19;
    }

    swift_bridgeObjectRelease();
  }

  outlined bridged method (pb) of @objc INStartVideoCallIntent.contacts.getter(a5);
  if (v27)
  {
    uint64_t v28 = v27;
    if ((unint64_t)v27 >> 62)
    {
      if (v27 >= 0) {
        v27 &= 0xFFFFFFFFFFFFFF8uLL;
      }
      if (_CocoaArrayWrapper.endIndex.getter(v27)) {
        goto LABEL_10;
      }
    }

    else if (*(void *)((char *)&dword_10 + (v27 & 0xFFFFFFFFFFFFFF8LL)))
    {
LABEL_10:
      specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v28 & 0xC000000000000001LL) == 0, v28);
      if ((v28 & 0xC000000000000001LL) != 0) {
        id v29 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v28);
      }
      else {
        id v29 = *(id *)(v28 + 32);
      }
      id v121 = v29;
      goto LABEL_13;
    }

    swift_bridgeObjectRelease();
    id v121 = 0LL;
  }

  else
  {
    id v121 = 0LL;
  }

LABEL_88:
      id v94 = *(void **)(v120 + 40);
      swift_retain();
      uint64_t v95 = INPreferredCallProviderGetBackingType(1LL);
      uint64_t v115 = v9;
      switch((_DWORD)v95)
      {
        case 4:
          uint64_t v96 = @"THIRD_PARTY_PROVIDER";
          goto LABEL_94;
        case 3:
          uint64_t v96 = @"FACETIME_PROVIDER";
          goto LABEL_94;
        case 2:
          uint64_t v96 = @"TELEPHONY_PROVIDER";
LABEL_94:
          uint64_t v97 = v96;
          goto LABEL_96;
      }

      uint64_t v96 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)",  v95));
LABEL_96:
      id v98 = v96;
      uint64_t v99 = static String._unconditionallyBridgeFromObjectiveC(_:)(v98);
      uint64_t v101 = v100;

      SpeakableString.init(print:speak:)(v99, v101, 0LL, 0LL);
      uint64_t v102 = type metadata accessor for SpeakableString(0LL);
      __swift_storeEnumTagSinglePayload((uint64_t)v18, 0LL, 1LL, v102);
      type metadata accessor for PhonePerson(0LL);
      specialized INPersonContainingIntent.isFirstContactRelatedOrMyself.getter((uint64_t (*)(uint64_t))outlined bridged method (pb) of @objc INStartVideoCallIntent.contacts.getter);
      LOBYTE(v99) = v103;
      static Device.current.getter(v123);
      uint64_t v104 = v124;
      uint64_t v105 = v125;
      __swift_project_boxed_opaque_existential_1(v123, v124);
      dispatch thunk of DeviceState.siriLocale.getter(v104, v105);
      __swift_destroy_boxed_opaque_existential_1(v123);
      static PhonePerson.make(phonePerson:options:locale:)(v89, v99 & 1, (uint64_t)v22);
      uint64_t v107 = v106;
      (*(void (**)(char *, uint64_t))(v117 + 8))(v22, v118);
      uint64_t v109 = v115;
      uint64_t v108 = v116;
      uint64_t v110 = v114;
      (*(void (**)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(class metadata base offset for StartCallCATs
                                                                                           + *v94
                                                                                           + 1792))( v115,  v18,  v107,  v116,  v114,  v119,  a9);
      swift_release_n(v109, 2LL);
      swift_release(v107);

      swift_release(v110);
      outlined destroy of PhoneCallNLIntent?( (uint64_t)v18,  &demangling cache variable for type metadata for SpeakableString?);
      uint64_t v84 = v108;
LABEL_97:
      outlined destroy of PhoneCallNLIntent?(v84, &demangling cache variable for type metadata for SpeakableString?);
LABEL_98:

      return;
    case 4uLL:
      outlined bridged method (pb) of @objc INStartVideoCallIntent.contacts.getter(a5);
      uint64_t v40 = _swiftEmptyArrayStorage;
      if (!v39) {
        goto LABEL_70;
      }
      uint64_t v41 = v39;
      unint64_t v122 = (unint64_t)_swiftEmptyArrayStorage;
      if ((unint64_t)v39 >> 62)
      {
        if (v39 >= 0) {
          uint64_t v85 = v39 & 0xFFFFFFFFFFFFFF8LL;
        }
        else {
          uint64_t v85 = v39;
        }
        swift_bridgeObjectRetain();
        uint64_t v42 = _CocoaArrayWrapper.endIndex.getter(v85);
        if (v42)
        {
LABEL_34:
          uint64_t v113 = a9;
          type metadata accessor for PhonePerson(0LL);
          if (v42 < 1)
          {
            __break(1u);
LABEL_100:
            uint64_t v60 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v41);
            goto LABEL_54;
          }

          for (uint64_t i = 0LL; i != v42; ++i)
          {
            if ((v41 & 0xC000000000000001LL) != 0) {
              id v44 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v41);
            }
            else {
              id v44 = *(id *)(v41 + 8 * i + 32);
            }
            uint64_t v45 = v44;
            static Device.current.getter(v123);
            uint64_t v46 = v124;
            uint64_t v47 = v125;
            __swift_project_boxed_opaque_existential_1(v123, v124);
            dispatch thunk of DeviceState.siriLocale.getter(v46, v47);
            __swift_destroy_boxed_opaque_existential_1(v123);
            static PhonePerson.make(phonePerson:options:locale:)(v45, 0, (uint64_t)v24);
            uint64_t v49 = v48;
            (*(void (**)(char *, uint64_t))(v117 + 8))(v24, v118);

            if (v49)
            {
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v50);
              unint64_t v52 = *(void *)((char *)&dword_10 + (v122 & 0xFFFFFFFFFFFFFF8LL));
              unint64_t v51 = *(void *)((char *)&dword_18 + (v122 & 0xFFFFFFFFFFFFFF8LL));
              if (v52 >= v51 >> 1) {
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v51 > 1, v52 + 1, 1LL);
              }
              uint64_t v53 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v52, v49);
              specialized Array._endMutation()(v53, v54, v55, v56);
            }
          }

          swift_bridgeObjectRelease();
          uint64_t v40 = (void *)v122;
          uint64_t v14 = v113;
LABEL_69:
          swift_bridgeObjectRelease();
LABEL_70:
          type metadata accessor for PhonePersonList();
          uint64_t v86 = PhonePersonList.__allocating_init(list:)((uint64_t)v40);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(class metadata base offset for StartCallCATs
                                                            + **(void **)(v120 + 40)
                                                            + 1632))( v86,  v119,  v14);
          swift_release(v86);
          goto LABEL_98;
        }
      }

      else
      {
        uint64_t v42 = *(void *)((char *)&dword_10 + (v39 & 0xFFFFFFFFFFFFFF8LL));
        swift_bridgeObjectRetain();
        if (v42) {
          goto LABEL_34;
        }
      }

      swift_bridgeObjectRelease();
      uint64_t v40 = _swiftEmptyArrayStorage;
      goto LABEL_69;
    case 5uLL:
      (*(void (**)(uint64_t, uint64_t))(class metadata base offset for StartCallCATs
                                               + **(void **)(v120 + 40)
                                               + 1856))( v119,  a9);
      goto LABEL_98;
    case 6uLL:
      (*(void (**)(uint64_t, uint64_t))(class metadata base offset for StartCallCATs
                                               + **(void **)(v120 + 40)
                                               + 1696))( v119,  a9);
      goto LABEL_98;
    case 7uLL:
      (*(void (**)(uint64_t, uint64_t))(class metadata base offset for StartCallCATs
                                               + **(void **)(v120 + 40)
                                               + 1824))( v119,  a9);
      goto LABEL_98;
    default:
      if ((specialized static ContactsSlotTemplating.isMissingMeCardCase(intent:)( (uint64_t)a5,  (uint64_t (*)(void))outlined bridged method (pb) of @objc INStartVideoCallIntent.contacts.getter) & 1) != 0)
      {
        (*(void (**)(uint64_t, uint64_t))(class metadata base offset for StartCallCATs
                                                 + **(void **)(v120 + 40)
                                                 + 1760))( v119,  a9);
        goto LABEL_98;
      }

      uint64_t v113 = a9;
      if (v121)
      {
        id v63 = v121;
        id v64 = INPerson.nameLowercasedWithFirstUppercased.getter();
      }

      else
      {
        id v64 = 0LL;
      }

      type metadata accessor for PhonePerson(0LL);
      static Device.current.getter(v123);
      uint64_t v65 = v124;
      uint64_t v66 = v125;
      __swift_project_boxed_opaque_existential_1(v123, v124);
      dispatch thunk of DeviceState.siriLocale.getter(v65, v66);
      __swift_destroy_boxed_opaque_existential_1(v123);
      static PhonePerson.make(phonePerson:options:locale:)(v64, 0, (uint64_t)v24);
      uint64_t v116 = v67;

      uint64_t v68 = v118;
      uint64_t v69 = *(void (**)(char *, uint64_t))(v117 + 8);
      v69(v24, v118);
      id v70 = (void *)v120;
      uint64_t v71 = *(void *)(v120 + 88);
      uint64_t v72 = *(void *)(v120 + 96);
      __swift_project_boxed_opaque_existential_1((void *)(v120 + 64), v71);
      uint64_t v73 = v70[3];
      uint64_t v74 = v70[4];
      __swift_project_boxed_opaque_existential_1(v70, v73);
      dispatch thunk of DeviceState.siriLocale.getter(v73, v74);
      uint64_t v75 = (*(uint64_t (**)(uint64_t, char *, uint64_t, uint64_t))(v72 + 16))(v115, v24, v71, v72);
      uint64_t v77 = v76;
      v69(v24, v68);
      if (v77)
      {
        swift_bridgeObjectRetain();
        SpeakableString.init(print:speak:)(v75, v77, 0LL, 0LL);
        uint64_t v78 = type metadata accessor for SpeakableString(0LL);
        __swift_storeEnumTagSinglePayload((uint64_t)v16, 0LL, 1LL, v78);
        swift_bridgeObjectRelease();
      }

      else
      {
        uint64_t v79 = type metadata accessor for SpeakableString(0LL);
        __swift_storeEnumTagSinglePayload((uint64_t)v16, 1LL, 1LL, v79);
      }

      uint64_t v80 = v113;
      uint64_t v81 = *(void **)(v120 + 40);
      uint64_t v82 = v116;
      swift_retain();
      Swift::Bool v83 = App.isFirstParty()();
      (*(void (**)(uint64_t, char *, Swift::Bool, uint64_t, uint64_t))(class metadata base offset for StartCallCATs
                                                                             + *v81
                                                                             + 1728))( v82,  v16,  v83,  v119,  v80);
      swift_release_n(v82, 2LL);
      uint64_t v84 = (uint64_t)v16;
      goto LABEL_97;
  }

void specialized ContactsSlotTemplating.makeParameterValueUnsupportedDialog(app:parameterName:intentResolutionResult:intent:multicardinalValueIndex:_:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, void *a21, uint64_t (*a22)(uint64_t))
{
  uint64_t v139 = v25;
  uint64_t v140 = v22;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v134 = v32;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_25_6();
  uint64_t v35 = v33 - v34;
  __chkstk_darwin();
  uint64_t v135 = (char *)v133 - v36;
  __chkstk_darwin();
  uint64_t v136 = (uint64_t)v133 - v37;
  uint64_t v38 = OUTLINED_FUNCTION_94_4();
  uint64_t v137 = *(void *)(v38 - 8);
  uint64_t v138 = v38;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_104_11();
  __chkstk_darwin();
  uint64_t v40 = (char *)v133 - v39;
  uint64_t v41 = OUTLINED_FUNCTION_131_12();
  if (v41)
  {
    uint64_t v23 = v41;
    if ((v27 & 1) == 0)
    {
      uint64_t v27 = a21;
      specialized Array._checkSubscript(_:wasNativeTypeChecked:)(v29, (v41 & 0xC000000000000001LL) == 0, v41);
      if ((v23 & 0xC000000000000001LL) != 0) {
        uint64_t v42 = (void *)OUTLINED_FUNCTION_28_61(v29);
      }
      else {
        uint64_t v42 = OUTLINED_FUNCTION_27_10(v23 + 8 * v29);
      }
      id v141 = v42;
      uint64_t v43 = OUTLINED_FUNCTION_13_1();
      goto LABEL_18;
    }

    OUTLINED_FUNCTION_13_1();
  }

  uint64_t v43 = OUTLINED_FUNCTION_131_12();
  if (!v43)
  {
    id v141 = 0LL;
    goto LABEL_18;
  }

  uint64_t v44 = v43;
  uint64_t v23 = (uint64_t)a21;
  if ((unint64_t)v43 >> 62)
  {
    if (v43 >= 0) {
      v43 &= 0xFFFFFFFFFFFFFF8uLL;
    }
    if (_CocoaArrayWrapper.endIndex.getter(v43)) {
      goto LABEL_10;
    }
LABEL_17:
    uint64_t v43 = swift_bridgeObjectRelease();
    id v141 = 0LL;
    goto LABEL_18;
  }

LABEL_63:
      OUTLINED_FUNCTION_34_0();
      OUTLINED_FUNCTION_34_0();
LABEL_64:
      OUTLINED_FUNCTION_125_1();
      OUTLINED_FUNCTION_37_45();
      OUTLINED_FUNCTION_21_61();
      OUTLINED_FUNCTION_125_11(v104, v105, v106);
      OUTLINED_FUNCTION_22();
      goto LABEL_98;
    case 5uLL:
      OUTLINED_FUNCTION_8_26();
      uint64_t v48 = *(uint64_t (**)(void, uint64_t))(class metadata base offset for StartCallCATs + v74 + 1856);
      goto LABEL_20;
    case 6uLL:
      OUTLINED_FUNCTION_8_26();
      uint64_t v48 = *(uint64_t (**)(void, uint64_t))(class metadata base offset for StartCallCATs + v75 + 1696);
      goto LABEL_20;
    case 7uLL:
      OUTLINED_FUNCTION_8_26();
      uint64_t v48 = *(uint64_t (**)(void, uint64_t))(class metadata base offset for StartCallCATs + v76 + 1824);
      goto LABEL_20;
    default:
      if ((OUTLINED_FUNCTION_184_1() & 1) != 0)
      {
        OUTLINED_FUNCTION_8_26();
        uint64_t v48 = *(uint64_t (**)(void, uint64_t))(class metadata base offset for StartCallCATs + v50 + 1760);
        goto LABEL_20;
      }

      v133[0] = a21;
      if (v141)
      {
        id v86 = v141;
        id v87 = INPerson.nameLowercasedWithFirstUppercased.getter();
      }

      else
      {
        id v87 = 0LL;
      }

      OUTLINED_FUNCTION_18_22();
      OUTLINED_FUNCTION_60_6();
      uint64_t v88 = v144;
      uint64_t v89 = v145;
      __swift_project_boxed_opaque_existential_1(v143, v144);
      dispatch thunk of DeviceState.siriLocale.getter(v88, v89);
      __swift_destroy_boxed_opaque_existential_1(v143);
      OUTLINED_FUNCTION_70_23(v87, 0, (uint64_t)v40);
      uint64_t v136 = v90;

      OUTLINED_FUNCTION_16_51((uint64_t)v40);
      uint64_t v91 = v140;
      uint64_t v92 = v140[12];
      OUTLINED_FUNCTION_66(v140 + 8);
      __swift_project_boxed_opaque_existential_1(v91, v91[3]);
      OUTLINED_FUNCTION_51_6();
      uint64_t v93 = OUTLINED_FUNCTION_187_4( v134,  (uint64_t)v40,  *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v92 + 16));
      uint64_t v95 = v94;
      OUTLINED_FUNCTION_16_51((uint64_t)v40);
      if (v95)
      {
        OUTLINED_FUNCTION_6_3();
        OUTLINED_FUNCTION_1_34(v93, v95);
        uint64_t v96 = OUTLINED_FUNCTION_26_0();
        OUTLINED_FUNCTION_94_16(v96);
        OUTLINED_FUNCTION_62();
      }

      else
      {
        uint64_t v97 = OUTLINED_FUNCTION_26_0();
        OUTLINED_FUNCTION_29_1(v35, v98, v99, v97);
      }

      OUTLINED_FUNCTION_198_1();
      App.isFirstParty()();
      uint64_t v100 = OUTLINED_FUNCTION_163_8();
      v101(v100, v35);
      OUTLINED_FUNCTION_31_1(v93);
      uint64_t v102 = &demangling cache variable for type metadata for SpeakableString?;
      uint64_t v103 = v35;
      goto LABEL_97;
  }

#error "303460: call analysis failed (funcsize=28)"
void specialized DestinationTypeSlotTemplating.makeParameterValueConfirmationDialog(app:parameterName:intentResolutionResult:intent:inferenceSource:_:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  id v5;
  uint64_t BackingType;
  __CFString *v7;
  __CFString *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  OUTLINED_FUNCTION_208_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_5_1();
  id v3 = OUTLINED_FUNCTION_23_24(v2, "itemToConfirm");
  OUTLINED_FUNCTION_168_5();
  swift_unknownObjectRelease(v1);
  type metadata accessor for INCallDestinationType(0LL);
  else {
    uint64_t v5 = [v0 destinationType];
  }
  if (v5)
  {
    BackingType = INCallDestinationTypeGetBackingType(v5);
    switch((int)BackingType)
    {
      case 1:
        unint64_t v7 = @"NORMAL_DESTINATION";
        goto LABEL_13;
      case 2:
        unint64_t v7 = @"EMERGENCY_DESTINATION";
        goto LABEL_13;
      case 3:
        unint64_t v7 = @"VOICEMAIL_DESTINATION";
        goto LABEL_13;
      case 4:
        unint64_t v7 = @"REDIAL_DESTINATION";
        goto LABEL_13;
      case 5:
        unint64_t v7 = @"CALL_BACK_DESTINATION";
LABEL_13:
        uint64_t v8 = v7;
        break;
      default:
        unint64_t v7 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)",  BackingType));
        break;
    }

    OUTLINED_FUNCTION_149_9((uint64_t)v7);
    OUTLINED_FUNCTION_167_3();
  }

  else
  {
    unint64_t v7 = (__CFString *)0xE700000000000000LL;
    OUTLINED_FUNCTION_74_24();
  }

  OUTLINED_FUNCTION_1_34(v1, (uint64_t)v7);
  uint64_t v9 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_173_3(v9);
  unint64_t v11 = OUTLINED_FUNCTION_142_13(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(class metadata base offset for StartCallCATs
                                                                                     + v10
                                                                                     + 96));
  OUTLINED_FUNCTION_97(v11, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_58();
}

void specialized PreferredCallProviderSlotTemplating.makeParameterValueConfirmationDialog(app:parameterName:intentResolutionResult:intent:inferenceSource:_:)()
{
  id v3 = OUTLINED_FUNCTION_23_24(v2, "itemToConfirm");
  OUTLINED_FUNCTION_168_5();
  swift_unknownObjectRelease(v1);
  type metadata accessor for INPreferredCallProvider(0LL);
  else {
    id v5 = [v0 preferredCallProvider];
  }
  if (v5)
  {
    uint64_t v6 = INPreferredCallProviderGetBackingType(v5);
    switch((_DWORD)v6)
    {
      case 4:
        unint64_t v7 = @"THIRD_PARTY_PROVIDER";
        break;
      case 3:
        unint64_t v7 = @"FACETIME_PROVIDER";
        break;
      case 2:
        unint64_t v7 = @"TELEPHONY_PROVIDER";
        break;
      default:
        unint64_t v7 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)",  v6));
        goto LABEL_14;
    }

    uint64_t v8 = v7;
LABEL_14:
    OUTLINED_FUNCTION_149_9((uint64_t)v7);
    OUTLINED_FUNCTION_167_3();
    goto LABEL_15;
  }

  unint64_t v7 = (__CFString *)0xE700000000000000LL;
  OUTLINED_FUNCTION_74_24();
LABEL_15:
  OUTLINED_FUNCTION_1_34(v1, (uint64_t)v7);
  uint64_t v9 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_173_3(v9);
  uint64_t v11 = OUTLINED_FUNCTION_142_13(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(class metadata base offset for StartCallCATs
                                                                                     + v10
                                                                                     + 128));
  OUTLINED_FUNCTION_97(v11, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_58();
}

void specialized PreferredCallProviderSlotTemplating.makeParameterValueUnsupportedDialog(app:parameterName:intentResolutionResult:intent:multicardinalValueIndex:_:)( int a1, int a2, int a3, id a4, int a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  switch((unint64_t)[a4 unsupportedReason])
  {
    case 1uLL:
      char v13 = *(void **)(v10 + 40);
      OUTLINED_FUNCTION_50_6();
      outlined init with copy of SharedGlobalsProviding(v10, (uint64_t)v30);
      uint64_t v15 = OUTLINED_FUNCTION_190_3(v14);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(class metadata base offset for StartCallCATs
                                                                + *v13
                                                                + 2144))( v15,  0LL,  a8,  a9);
      uint64_t v16 = v15;
      goto LABEL_8;
    case 3uLL:
      (*(void (**)(uint64_t, uint64_t))(class metadata base offset for StartCallCATs
                                               + **(void **)(v10 + 40)
                                               + 2048))( a8,  a9);
      goto LABEL_10;
    case 4uLL:
      id v22 = OUTLINED_FUNCTION_188_1();
      uint64_t v23 = OUTLINED_FUNCTION_154_11((uint64_t)v22);
      uint64_t v24 = OUTLINED_FUNCTION_50_6();
      OUTLINED_FUNCTION_59_26(v24);
      uint64_t v21 = OUTLINED_FUNCTION_4_101(v25);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(class metadata base offset for StartCallCATs
                                                                 + *v11
                                                                 + 2112))( v23,  v21,  a8,  a9);
      goto LABEL_7;
    case 5uLL:
      id v26 = OUTLINED_FUNCTION_188_1();
      uint64_t v27 = OUTLINED_FUNCTION_154_11((uint64_t)v26);
      uint64_t v28 = OUTLINED_FUNCTION_50_6();
      OUTLINED_FUNCTION_59_26(v28);
      uint64_t v21 = OUTLINED_FUNCTION_4_101(v29);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(class metadata base offset for StartCallCATs
                                                                 + *v11
                                                                 + 2016))( v27,  v21,  a8,  a9);
      goto LABEL_7;
    case 6uLL:
      (*(void (**)(uint64_t, uint64_t))(class metadata base offset for StartCallCATs
                                               + **(void **)(v10 + 40)
                                               + 2080))( a8,  a9);
      goto LABEL_10;
    default:
      id v17 = OUTLINED_FUNCTION_188_1();
      uint64_t v18 = OUTLINED_FUNCTION_154_11((uint64_t)v17);
      uint64_t v19 = OUTLINED_FUNCTION_50_6();
      OUTLINED_FUNCTION_59_26(v19);
      uint64_t v21 = OUTLINED_FUNCTION_4_101(v20);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(class metadata base offset for StartCallCATs
                                                                 + *v11
                                                                 + 1984))( v18,  v21,  a8,  a9);
LABEL_7:
      OUTLINED_FUNCTION_31_2();
      uint64_t v16 = v21;
LABEL_8:
      swift_release(v16);
LABEL_10:
      OUTLINED_FUNCTION_46_14();
      return;
  }

#error "3039AC: call analysis failed (funcsize=23)"
void StartAudioCallCatTemplatingService.slotTemplating(for:)(char a1@<W0>, _OWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  os_log_type_t v24;
  _DWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30[13];
  void (*v31)();
  uint64_t v32;
  id v5 = type metadata accessor for Logger(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_11_0();
  switch(a1)
  {
    case 2:
      OUTLINED_FUNCTION_14_35(*v2);
      OUTLINED_FUNCTION_37_21(direct field offset for StartAudioCallCatTemplatingService.catFamily);
      uint64_t v8 = v30;
      specialized SlotTemplating.toAnySlotTemplating()(v30);
      uint64_t v9 = &demangling cache variable for type metadata for DestinationTypeSlotTemplating<INStartAudioCallIntent, INIntentResponse>;
      goto LABEL_5;
    case 3:
      OUTLINED_FUNCTION_14_35(*v2);
      OUTLINED_FUNCTION_37_21(direct field offset for StartAudioCallCatTemplatingService.catFamily);
      uint64_t v8 = v30;
      specialized SlotTemplating.toAnySlotTemplating()(v30);
      uint64_t v9 = &demangling cache variable for type metadata for PreferredCallProviderSlotTemplating<INStartAudioCallIntent, INIntentResponse>;
LABEL_5:
      uint64_t v10 = (uint64_t *)&v31;
LABEL_8:
      outlined destroy of PhoneCallNLIntent?((uint64_t)v10, v9);
      uint64_t v18 = *((_OWORD *)v8 + 1);
      uint64_t v19 = *((_OWORD *)v8 + 2);
      uint64_t v20 = *((_OWORD *)v8 + 3);
      *a2 = *(_OWORD *)v8;
      a2[1] = v18;
      a2[2] = v19;
      a2[3] = v20;
      OUTLINED_FUNCTION_58();
      return;
    case 4:
      outlined init with copy of SharedGlobalsProviding( (uint64_t)v2 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *v2 + 40),  (uint64_t)v30);
      uint64_t v11 = *(uint64_t *)((char *)v2 + direct field offset for StartAudioCallCatTemplatingService.catFamily);
      unint64_t v12 = swift_retain();
      char v13 = DucTemplatingService.locale.getter(v12);
      uint64_t v15 = v14;
      uint64_t v16 = type metadata accessor for AppInfoBuilder();
      id v17 = OUTLINED_FUNCTION_8_2(v16, 16LL);
      v30[11] = v16;
      v30[12] = (uint64_t)&protocol witness table for AppInfoBuilder;
      uint64_t v30[5] = v11;
      uint64_t v30[6] = v13;
      v30[7] = v15;
      char v30[8] = v17;
      uint64_t v8 = (uint64_t *)&v31;
      specialized SlotTemplating.toAnySlotTemplating()(&v31);
      uint64_t v9 = &demangling cache variable for type metadata for ContactsSlotTemplating<INStartAudioCallIntent, INIntentResponse>;
      uint64_t v10 = v30;
      goto LABEL_8;
  }

  uint64_t v21 = v7;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  id v22 = __swift_project_value_buffer(v5, (uint64_t)static Logger.siriPhone);
  uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v21, v22, v5);
  Logger.logObject.getter(v23);
  uint64_t v24 = OUTLINED_FUNCTION_59_8();
  if (OUTLINED_FUNCTION_87(v24))
  {
    uint64_t v25 = (_DWORD *)OUTLINED_FUNCTION_7_0(12LL);
    id v26 = OUTLINED_FUNCTION_7_0(32LL);
    v30[0] = v26;
    *uint64_t v25 = 136315138;
    uint64_t v31 = (void (*)())getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)( 0xD00000000000004FLL,  0x8000000000352870LL,  v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32, v25 + 1);
    OUTLINED_FUNCTION_9_4(&dword_0, v27, v28, "%s");
    OUTLINED_FUNCTION_57_33();
    OUTLINED_FUNCTION_0_2(v26);
    OUTLINED_FUNCTION_0_2((uint64_t)v25);
  }

  static SiriKitLifecycle._logCrashToEventBus(_:)(0xD00000000000004FLL, 0x8000000000352870LL);
  OUTLINED_FUNCTION_116();
  OUTLINED_FUNCTION_7_2( (uint64_t)"Fatal error",  11LL,  2LL,  79LL,  v29,  (uint64_t)"PhoneCallFlowDelegatePlugin/PhoneLog.swift");
  __break(1u);
}

void StartAudioCallCatTemplatingService.makeIntentHandledDialog(app:intent:intentResponse:_:)()
{
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_20_0();
  uint64_t v11 = OUTLINED_FUNCTION_94_4();
  uint64_t v66 = *(void *)(v11 - 8);
  uint64_t v67 = v11;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  char v13 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  outlined bridged method (pb) of @objc INStartAudioCallIntent.contacts.getter(v8);
  uint64_t v64 = v4;
  uint64_t v65 = v6;
  id v62 = v8;
  uint64_t v63 = v10;
  if (v14)
  {
    uint64_t v15 = v14;
    char v69 = _swiftEmptyArrayStorage;
    OUTLINED_FUNCTION_71();
    if (v17)
    {
      OUTLINED_FUNCTION_48_0();
      uint64_t v18 = OUTLINED_FUNCTION_15_4();
      if (v18) {
        goto LABEL_4;
      }
    }

    else
    {
      uint64_t v18 = *(void *)(v16 + 16);
      OUTLINED_FUNCTION_48_0();
      if (v18)
      {
LABEL_4:
        OUTLINED_FUNCTION_18_22();
        if (v18 < 1)
        {
          __break(1u);
          return;
        }

        uint64_t v60 = v2;
        uint64_t v61 = (void *)v1;
        for (uint64_t i = 0LL; i != v18; ++i)
        {
          if ((v15 & 0xC000000000000001LL) != 0) {
            uint64_t v20 = OUTLINED_FUNCTION_224_2(i);
          }
          else {
            uint64_t v20 = (uint64_t)OUTLINED_FUNCTION_27_10(v15 + 8 * i);
          }
          uint64_t v21 = (void *)v20;
          static Device.current.getter(v68);
          uint64_t v22 = v68[4];
          __swift_project_boxed_opaque_existential_1(v68, v68[3]);
          uint64_t v23 = OUTLINED_FUNCTION_67();
          dispatch thunk of DeviceState.siriLocale.getter(v23, v22);
          __swift_destroy_boxed_opaque_existential_1(v68);
          OUTLINED_FUNCTION_143_6(v21);
          uint64_t v25 = v24;
          OUTLINED_FUNCTION_18_65();

          if (v25)
          {
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v26);
            OUTLINED_FUNCTION_40_8();
            if (v28) {
              OUTLINED_FUNCTION_3_25((uint64_t)v21 + 1, v27);
            }
            uint64_t v29 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v21, v25);
            specialized Array._endMutation()(v29, v30, v31, v32);
          }
        }

        OUTLINED_FUNCTION_34_0();
        uint64_t v33 = v69;
        uint64_t v2 = v60;
        uint64_t v1 = (uint64_t)v61;
        goto LABEL_18;
      }
    }

    OUTLINED_FUNCTION_34_0();
    uint64_t v33 = _swiftEmptyArrayStorage;
LABEL_18:
    OUTLINED_FUNCTION_34_0();
    goto LABEL_19;
  }

  uint64_t v33 = _swiftEmptyArrayStorage;
LABEL_19:
  uint64_t v34 = type metadata accessor for PhonePersonList.Builder();
  uint64_t v35 = OUTLINED_FUNCTION_8_2(v34, 24LL);
  *(void *)(v35 + ++*(void *)(v0 + 16) = _swiftEmptyArrayStorage;
  uint64_t v36 = (void *)(v35 + 16);
  swift_beginAccess(v35 + 16, &v69, 1LL, 0LL);
  *uint64_t v36 = v33;
  swift_bridgeObjectRelease();
  uint64_t v37 = OUTLINED_FUNCTION_125_1();
  OUTLINED_FUNCTION_8_2(v37, 32LL);
  uint64_t v38 = OUTLINED_FUNCTION_67();
  uint64_t v39 = PhonePersonList.init(builder:)(v38);
  uint64_t v61 = *(void **)((char *)v2 + direct field offset for StartAudioCallCatTemplatingService.catFamily);
  id v40 = v62;
  specialized PhoneStartCallIntent.__allocating_init(intent:isRelationshipRequest:)();
  uint64_t v60 = v41;
  OUTLINED_FUNCTION_50_6();
  uint64_t v42 = (void *)((char *)v2 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *v2 + 40));
  outlined init with copy of SharedGlobalsProviding((uint64_t)v42, (uint64_t)v68);
  swift_retain();
  id v62 = (id)SirikitDeviceState.__allocating_init(from:)(v68);
  uint64_t v43 = (void *)((char *)v2 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *v2 + 48));
  uint64_t v44 = v43[4];
  OUTLINED_FUNCTION_66(v43);
  uint64_t v46 = v42[3];
  uint64_t v45 = v42[4];
  OUTLINED_FUNCTION_99_15(v42);
  dispatch thunk of DeviceState.siriLocale.getter(v46, v45);
  uint64_t v47 = OUTLINED_FUNCTION_187_4( v63,  (uint64_t)v13,  *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 16));
  uint64_t v49 = v48;
  OUTLINED_FUNCTION_18_65();
  if (v49)
  {
    OUTLINED_FUNCTION_8_1();
    OUTLINED_FUNCTION_1_34(v47, v49);
    uint64_t v50 = OUTLINED_FUNCTION_26_0();
    OUTLINED_FUNCTION_42_30(v50);
    OUTLINED_FUNCTION_39();
  }

  else
  {
    uint64_t v51 = OUTLINED_FUNCTION_26_0();
    OUTLINED_FUNCTION_29_1(v1, v52, v53, v51);
  }

  Swift::Bool v54 = App.isFirstParty()();
  uint64_t v55 = App.appIdentifier.getter();
  if (v56)
  {
    uint64_t v57 = v60;
    if (v55 == 0xD000000000000010LL && v56 == 0x800000000034B0D0LL) {
      char v58 = 1;
    }
    else {
      char v58 = _stringCompareWithSmolCheck(_:_:expecting:)(v55, v56, 0xD000000000000010LL, 0x800000000034B0D0LL, 0LL);
    }
    OUTLINED_FUNCTION_39();
    uint64_t v59 = v61;
  }

  else
  {
    char v58 = 0;
    uint64_t v57 = v60;
    uint64_t v59 = v61;
  }

  (*(void (**)(void *, uint64_t, id, uint64_t, Swift::Bool, void, void, uint64_t, uint64_t))(class metadata base offset for StartCallCATs + *v59 + 1120))( v57,  v39,  v62,  v1,  v54,  v58 & 1,  0LL,  v65,  v64);
  OUTLINED_FUNCTION_31_2();
  OUTLINED_FUNCTION_31_1(v39);
  OUTLINED_FUNCTION_22();
  outlined destroy of PhoneCallNLIntent?(v1, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_7_5();
}

uint64_t StartAudioCallCatTemplatingService.makeParameterValueConfirmationDialog(app:parameterName:intentResolutionResult:intent:_:)()
{
  v3.PhoneCallFlowDelegatePlugin::EmergencyType value = OUTLINED_FUNCTION_206_5().value;
  StartAudioCallCatTemplatingService.slotTemplating(for:)(v3.value, &v7);
  uint64_t v4 = OUTLINED_FUNCTION_86_14();
  v5(v4);
  OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_22();
  swift_release(v8);
  return swift_release(v9);
}

void StartAudioCallCatTemplatingService.makeFailureHandlingIntentDialog(app:intent:intentResponse:_:)()
{
  uint64_t v38 = v2;
  uint64_t v39 = v3;
  id v36 = v4;
  uint64_t v34 = v5;
  uint64_t v35 = OUTLINED_FUNCTION_94_4();
  uint64_t v6 = *(void *)(v35 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_32();
  uint64_t v9 = (void *)((char *)v0 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *v0 + 48));
  uint64_t v11 = v9[3];
  uint64_t v10 = v9[4];
  __swift_project_boxed_opaque_existential_1(v9, v11);
  uint64_t v12 = *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *v0 + 40);
  uint64_t v37 = v0;
  uint64_t v13 = (uint64_t)v0 + v12;
  uint64_t v14 = *(void *)((char *)v0 + v12 + 32);
  uint64_t v15 = (void *)OUTLINED_FUNCTION_150_9();
  __swift_project_boxed_opaque_existential_1(v15, v16);
  uint64_t v17 = OUTLINED_FUNCTION_67();
  dispatch thunk of DeviceState.siriLocale.getter(v17, v14);
  uint64_t v18 = (*(uint64_t (**)(uint64_t, char *, uint64_t, uint64_t))(v10 + 16))(v34, v8, v11, v10);
  uint64_t v20 = v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v35);
  if (v20)
  {
    OUTLINED_FUNCTION_6_3();
    OUTLINED_FUNCTION_1_34(v18, v20);
    uint64_t v21 = OUTLINED_FUNCTION_26_0();
    OUTLINED_FUNCTION_21_42(v21);
    OUTLINED_FUNCTION_62();
  }

  else
  {
    uint64_t v22 = OUTLINED_FUNCTION_26_0();
    OUTLINED_FUNCTION_29_1(v1, v23, v24, v22);
  }

  uint64_t v25 = v1;
  switch((unint64_t)[v36 code])
  {
    case 5uLL:
      OUTLINED_FUNCTION_10_79();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(class metadata base offset for StartCallCATs + v26 + 608))( v1,  v38,  v39);
      break;
    case 6uLL:
      (*(void (**)(uint64_t, uint64_t))(class metadata base offset for StartCallCATs
                                               + **(void **)((char *)v37
                                                             + direct field offset for StartAudioCallCatTemplatingService.catFamily)
                                               + 704))( v38,  v39);
      break;
    case 7uLL:
      OUTLINED_FUNCTION_10_79();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(class metadata base offset for StartCallCATs + v31 + 736))( v1,  v38,  v39);
      break;
    case 8uLL:
      OUTLINED_FUNCTION_10_79();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(class metadata base offset for StartCallCATs + v32 + 800))( v1,  v38,  v39);
      break;
    default:
      unint64_t v27 = *(void **)((char *)v37 + direct field offset for StartAudioCallCatTemplatingService.catFamily);
      OUTLINED_FUNCTION_50_6();
      outlined init with copy of SharedGlobalsProviding(v13, (uint64_t)v40);
      uint64_t v28 = SirikitDeviceState.__allocating_init(from:)(v40);
      uint64_t v29 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_4191B0, 32LL);
      *(void *)(v29 + ++*(void *)(v0 + 16) = v38;
      *(void *)(v29 + 24) = v39;
      uint64_t v30 = *(void (**)(uint64_t, void (*)(), uint64_t))(class metadata base offset for StartCallCATs
                                                                + *v27
                                                                + 544);
      swift_retain();
      v30(v28, AnyIntentCarPlayRCHFlowProvider.makeRCHFlow(input:), v29);
      OUTLINED_FUNCTION_16_3();
      OUTLINED_FUNCTION_31_2();
      break;
  }

  outlined destroy of PhoneCallNLIntent?(v25, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_7_5();
}

uint64_t StartAudioCallCatTemplatingService.makeParameterValueUnsupportedDialog(app:parameterName:intentResolutionResult:intent:multicardinalValueIndex:_:)()
{
  v3.PhoneCallFlowDelegatePlugin::EmergencyType value = OUTLINED_FUNCTION_206_5().value;
  StartAudioCallCatTemplatingService.slotTemplating(for:)(v3.value, &v8);
  uint64_t v4 = OUTLINED_FUNCTION_86_14();
  v5(v4);
  swift_release(*((void *)&v8 + 1));
  swift_release(v9);
  uint64_t v6 = v10;
  OUTLINED_FUNCTION_38_1();
  return OUTLINED_FUNCTION_39_39(v6);
}

uint64_t StartAudioCallCatTemplatingService.makeParameterValueDisambiguationDialog(app:parameterName:intentResolutionResult:disambiguationList:deviceIsLocked:intent:_:)( uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  v18._uint64_t countAndFlagsBits = a2;
  v18._object = a3;
  v19.PhoneCallFlowDelegatePlugin::EmergencyType value = PhoneCallSlotNames.init(rawValue:)(v18).value;
  StartAudioCallCatTemplatingService.slotTemplating(for:)(v19.value, &v23);
  uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(class metadata base offset for PhoneCallBaseCatTemplatingService
                                                             + *v9
                                                             + 216))( a5,  a8,  a9);
  v24(a1, a2, a3, a4, a5, a6, a7, v20, v21);
  OUTLINED_FUNCTION_22();
  swift_release(*((void *)&v23 + 1));
  OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_22();
  return OUTLINED_FUNCTION_39_39(v25);
}

void StartAudioCallCatTemplatingService.makeGenericErrorDialog(app:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)((char *)v3 + direct field offset for StartAudioCallCatTemplatingService.catFamily);
  OUTLINED_FUNCTION_50_6();
  outlined init with copy of SharedGlobalsProviding( (uint64_t)v3 + *(void *)(class metadata base offset for PhoneCallBaseCatTemplatingService + *v3 + 40),  (uint64_t)v9);
  uint64_t v8 = OUTLINED_FUNCTION_190_3(v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(class metadata base offset for StartCallCATs + *v6 + 928))( v8,  a2,  a3);
  swift_release(v8);
  OUTLINED_FUNCTION_46_14();
}

void StartAudioCallCatTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)( uint64_t a1, uint64_t a2)
{
}

uint64_t StartAudioCallCatTemplatingService.__ivar_destroyer()
{
  return swift_release(*(void *)(v0 + direct field offset for StartAudioCallCatTemplatingService.catFamily));
}

void StartAudioCallCatTemplatingService.deinit()
{
  uint64_t v0 = specialized PhoneCallBaseCatTemplatingService.deinit();
  swift_release(*(void *)(v0 + direct field offset for StartAudioCallCatTemplatingService.catFamily));
  OUTLINED_FUNCTION_2();
}

uint64_t StartAudioCallCatTemplatingService.__deallocating_deinit()
{
  uint64_t v0 = specialized PhoneCallBaseCatTemplatingService.deinit();
  swift_release(*(void *)(v0 + direct field offset for StartAudioCallCatTemplatingService.catFamily));
  return swift_deallocClassInstance(v0, 264LL, 7LL);
}

void outlined bridged method (pb) of @objc INStartAudioCallIntent.contacts.getter(void *a1)
{
  id v1 = [a1 contacts];
  if (v1)
  {
    uint64_t v2 = v1;
    unint64_t v3 = OUTLINED_FUNCTION_68();
    static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);
  }

  OUTLINED_FUNCTION_2();
}

uint64_t specialized static PhoneStartCallIntent.makeForSlotTemplating(intent:isRelationshipRequest:)( void *a1, char a2)
{
  uint64_t v4 = type metadata accessor for Locale(0LL);
  uint64_t v51 = *(void *)(v4 - 8);
  uint64_t v52 = v4;
  __chkstk_darwin();
  uint64_t v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for PhoneStartCallIntent.Builder(0LL);
  swift_allocObject(v9, *(unsigned int *)(v9 + 48), *(unsigned __int16 *)(v9 + 52));
  PhoneStartCallIntent.Builder.init()();
  uint64_t v11 = v10;
  outlined bridged method (pb) of @objc INAddCallParticipantIntent.participants.getter(a1);
  uint64_t v13 = _swiftEmptyArrayStorage;
  if (!v12)
  {
LABEL_21:
    type metadata accessor for PhonePersonList();
    uint64_t v35 = PhonePersonList.__allocating_init(list:)((uint64_t)v13);
    uint64_t v36 = (*(uint64_t (**)(void))(*(void *)v11 + 352LL))();
    swift_release(v11);
    swift_release(v35);
    uint64_t v37 = INPreferredCallProviderGetBackingType(2LL);
    switch((_DWORD)v37)
    {
      case 4:
        uint64_t v38 = @"THIRD_PARTY_PROVIDER";
        break;
      case 3:
        uint64_t v38 = @"FACETIME_PROVIDER";
        break;
      case 2:
        uint64_t v38 = @"TELEPHONY_PROVIDER";
        break;
      default:
        uint64_t v38 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)",  v37));
        goto LABEL_29;
    }

    uint64_t v39 = v38;
LABEL_29:
    id v40 = v38;
    uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
    uint64_t v43 = v42;

    SpeakableString.init(print:speak:)(v41, v43, 0LL, 0LL);
    uint64_t v44 = type metadata accessor for SpeakableString(0LL);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0LL, 1LL, v44);
    uint64_t v45 = (*(uint64_t (**)(char *))(*(void *)v36 + 320LL))(v8);
    swift_release(v36);
    outlined destroy of PhoneCallNLIntent?( (uint64_t)v8,  &demangling cache variable for type metadata for SpeakableString?);
    uint64_t v46 = (*(uint64_t (**)(void))(*(void *)v45 + 376LL))();
    swift_release(v45);
    return v46;
  }

  uint64_t v14 = v12;
  unint64_t v56 = (unint64_t)_swiftEmptyArrayStorage;
  if (!((unint64_t)v12 >> 62))
  {
    uint64_t v15 = *(void *)((char *)&dword_10 + (v12 & 0xFFFFFFFFFFFFFF8LL));
    swift_bridgeObjectRetain();
    if (v15) {
      goto LABEL_4;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    uint64_t v13 = _swiftEmptyArrayStorage;
LABEL_20:
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }

  if (v12 >= 0) {
    uint64_t v34 = v12 & 0xFFFFFFFFFFFFFF8LL;
  }
  else {
    uint64_t v34 = v12;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = _CocoaArrayWrapper.endIndex.getter(v34);
  if (!v15) {
    goto LABEL_19;
  }
LABEL_4:
  uint64_t result = type metadata accessor for PhonePerson(0LL);
  uint64_t v50 = result;
  if (v15 >= 1)
  {
    uint64_t v48 = v11;
    uint64_t v49 = v8;
    uint64_t v17 = 0LL;
    unint64_t v18 = v14 & 0xC000000000000001LL;
    char v19 = a2 & 1;
    uint64_t v20 = v14;
    do
    {
      if (v18) {
        id v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v17, v14);
      }
      else {
        id v21 = *(id *)(v14 + 8 * v17 + 32);
      }
      uint64_t v22 = v21;
      static Device.current.getter(v53);
      uint64_t v23 = v54;
      uint64_t v24 = v55;
      __swift_project_boxed_opaque_existential_1(v53, v54);
      dispatch thunk of DeviceState.siriLocale.getter(v23, v24);
      __swift_destroy_boxed_opaque_existential_1(v53);
      static PhonePerson.make(phonePerson:options:locale:)(v22, v19, (uint64_t)v6);
      uint64_t v26 = v25;
      (*(void (**)(char *, uint64_t))(v51 + 8))(v6, v52);

      if (v26)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v27);
        unint64_t v29 = *(void *)((char *)&dword_10 + (v56 & 0xFFFFFFFFFFFFFF8LL));
        unint64_t v28 = *(void *)((char *)&dword_18 + (v56 & 0xFFFFFFFFFFFFFF8LL));
        if (v29 >= v28 >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v28 > 1, v29 + 1, 1LL);
        }
        uint64_t v30 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v29, v26);
        specialized Array._endMutation()(v30, v31, v32, v33);
      }

      ++v17;
      uint64_t v14 = v20;
    }

    while (v15 != v17);
    swift_bridgeObjectRelease();
    uint64_t v13 = (void *)v56;
    uint64_t v11 = v48;
    uint64_t v8 = v49;
    goto LABEL_20;
  }

  __break(1u);
  return result;
}

{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __CFString *v38;
  __CFString *v39;
  __CFString *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void v53[3];
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v4 = type metadata accessor for Locale(0LL);
  uint64_t v51 = *(void *)(v4 - 8);
  uint64_t v52 = v4;
  __chkstk_darwin();
  uint64_t v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for PhoneStartCallIntent.Builder(0LL);
  swift_allocObject(v9, *(unsigned int *)(v9 + 48), *(unsigned __int16 *)(v9 + 52));
  PhoneStartCallIntent.Builder.init()();
  uint64_t v11 = v10;
  outlined bridged method (pb) of @objc INStartVideoCallIntent.contacts.getter(a1);
  uint64_t v13 = _swiftEmptyArrayStorage;
  if (!v12)
  {
LABEL_21:
    type metadata accessor for PhonePersonList();
    uint64_t v35 = PhonePersonList.__allocating_init(list:)((uint64_t)v13);
    uint64_t v36 = (*(uint64_t (**)(void))(*(void *)v11 + 352LL))();
    swift_release(v11);
    swift_release(v35);
    uint64_t v37 = INPreferredCallProviderGetBackingType(1LL);
    switch((_DWORD)v37)
    {
      case 4:
        uint64_t v38 = @"THIRD_PARTY_PROVIDER";
        break;
      case 3:
        uint64_t v38 = @"FACETIME_PROVIDER";
        break;
      case 2:
        uint64_t v38 = @"TELEPHONY_PROVIDER";
        break;
      default:
        uint64_t v38 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)",  v37));
        goto LABEL_29;
    }

    uint64_t v39 = v38;
LABEL_29:
    id v40 = v38;
    uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
    uint64_t v43 = v42;

    SpeakableString.init(print:speak:)(v41, v43, 0LL, 0LL);
    uint64_t v44 = type metadata accessor for SpeakableString(0LL);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0LL, 1LL, v44);
    uint64_t v45 = (*(uint64_t (**)(char *))(*(void *)v36 + 320LL))(v8);
    swift_release(v36);
    outlined destroy of PhoneCallNLIntent?( (uint64_t)v8,  &demangling cache variable for type metadata for SpeakableString?);
    uint64_t v46 = (*(uint64_t (**)(void))(*(void *)v45 + 376LL))();
    swift_release(v45);
    return v46;
  }

  uint64_t v14 = v12;
  unint64_t v56 = (unint64_t)_swiftEmptyArrayStorage;
  if (!((unint64_t)v12 >> 62))
  {
    uint64_t v15 = *(void *)((char *)&dword_10 + (v12 & 0xFFFFFFFFFFFFFF8LL));
    swift_bridgeObjectRetain();
    if (v15) {
      goto LABEL_4;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    uint64_t v13 = _swiftEmptyArrayStorage;
LABEL_20:
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }

  if (v12 >= 0) {
    uint64_t v34 = v12 & 0xFFFFFFFFFFFFFF8LL;
  }
  else {
    uint64_t v34 = v12;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = _CocoaArrayWrapper.endIndex.getter(v34);
  if (!v15) {
    goto LABEL_19;
  }
LABEL_4:
  uint64_t result = type metadata accessor for PhonePerson(0LL);
  uint64_t v50 = result;
  if (v15 >= 1)
  {
    uint64_t v48 = v11;
    uint64_t v49 = v8;
    uint64_t v17 = 0LL;
    unint64_t v18 = v14 & 0xC000000000000001LL;
    char v19 = a2 & 1;
    uint64_t v20 = v14;
    do
    {
      if (v18) {
        id v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v17, v14);
      }
      else {
        id v21 = *(id *)(v14 + 8 * v17 + 32);
      }
      uint64_t v22 = v21;
      static Device.current.getter(v53);
      uint64_t v23 = v54;
      uint64_t v24 = v55;
      __swift_project_boxed_opaque_existential_1(v53, v54);
      dispatch thunk of DeviceState.siriLocale.getter(v23, v24);
      __swift_destroy_boxed_opaque_existential_1(v53);
      static PhonePerson.make(phonePerson:options:locale:)(v22, v19, (uint64_t)v6);
      uint64_t v26 = v25;
      (*(void (**)(char *, uint64_t))(v51 + 8))(v6, v52);

      if (v26)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v27);
        unint64_t v29 = *(void *)((char *)&dword_10 + (v56 & 0xFFFFFFFFFFFFFF8LL));
        unint64_t v28 = *(void *)((char *)&dword_18 + (v56 & 0xFFFFFFFFFFFFFF8LL));
        if (v29 >= v28 >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v28 > 1, v29 + 1, 1LL);
        }
        uint64_t v30 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v29, v26);
        specialized Array._endMutation()(v30, v31, v32, v33);
      }

      ++v17;
      uint64_t v14 = v20;
    }

    while (v15 != v17);
    swift_bridgeObjectRelease();
    uint64_t v13 = (void *)v56;
    uint64_t v11 = v48;
    uint64_t v8 = v49;
    goto LABEL_20;
  }

  __break(1u);
  return result;
}

void specialized static PhoneStartCallIntent.makeForSlotTemplating(intent:isRelationshipRequest:)()
{
  unint64_t v3 = v2;
  char v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = OUTLINED_FUNCTION_94_4();
  uint64_t v49 = *(void *)(v8 - 8);
  uint64_t v50 = v8;
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_20_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_32();
  uint64_t v9 = type metadata accessor for PhoneStartCallIntent.Builder(0LL);
  OUTLINED_FUNCTION_15_2(v9);
  PhoneStartCallIntent.Builder.init()();
  uint64_t v11 = v10;
  uint64_t v12 = v3(v7);
  if (!v12)
  {
LABEL_18:
    OUTLINED_FUNCTION_125_1();
    uint64_t v34 = OUTLINED_FUNCTION_67();
    PhonePersonList.__allocating_init(list:)(v34);
    uint64_t v35 = (*(uint64_t (**)(void))(*(void *)v11 + 352LL))();
    swift_release(v11);
    OUTLINED_FUNCTION_22();
    id v36 = [v7 preferredCallProvider];
    if (!v36)
    {
      uint64_t v39 = 0xE700000000000000LL;
      uint64_t v40 = 0x4E574F4E4B4E55LL;
LABEL_29:
      OUTLINED_FUNCTION_1_34(v40, v39);
      uint64_t v44 = OUTLINED_FUNCTION_26_0();
      OUTLINED_FUNCTION_21_42(v44);
      uint64_t v45 = (*(uint64_t (**)(uint64_t))(*(void *)v35 + 320LL))(v0);
      OUTLINED_FUNCTION_38_1();
      outlined destroy of PhoneCallNLIntent?(v0, &demangling cache variable for type metadata for SpeakableString?);
      (*(void (**)(void))(*(void *)v45 + 376LL))();
      OUTLINED_FUNCTION_22();
      OUTLINED_FUNCTION_7_5();
      return;
    }

    uint64_t v37 = INPreferredCallProviderGetBackingType(v36);
    switch((_DWORD)v37)
    {
      case 4:
        uint64_t v38 = @"THIRD_PARTY_PROVIDER";
        break;
      case 3:
        uint64_t v38 = @"FACETIME_PROVIDER";
        break;
      case 2:
        uint64_t v38 = @"TELEPHONY_PROVIDER";
        break;
      default:
        uint64_t v38 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)",  v37));
        goto LABEL_28;
    }

    uint64_t v41 = v38;
LABEL_28:
    uint64_t v42 = v38;
    uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
    uint64_t v39 = v43;

    goto LABEL_29;
  }

  uint64_t v13 = v12;
  unint64_t v54 = (unint64_t)_swiftEmptyArrayStorage;
  OUTLINED_FUNCTION_71();
  if (!v15)
  {
    uint64_t v16 = *(void *)(v14 + 16);
    OUTLINED_FUNCTION_6_3();
    if (v16) {
      goto LABEL_4;
    }
LABEL_16:
    OUTLINED_FUNCTION_62();
LABEL_17:
    OUTLINED_FUNCTION_62();
    goto LABEL_18;
  }

  OUTLINED_FUNCTION_6_3();
  uint64_t v16 = OUTLINED_FUNCTION_15_4();
  if (!v16) {
    goto LABEL_16;
  }
LABEL_4:
  OUTLINED_FUNCTION_18_22();
  if (v16 >= 1)
  {
    uint64_t v46 = v11;
    uint64_t v47 = v7;
    uint64_t v48 = v0;
    uint64_t v17 = 0LL;
    unint64_t v18 = v13 & 0xC000000000000001LL;
    char v19 = v5 & 1;
    uint64_t v20 = v13;
    do
    {
      if (v18) {
        id v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v17, v13);
      }
      else {
        id v21 = OUTLINED_FUNCTION_27_10(v13 + 8 * v17);
      }
      uint64_t v22 = v21;
      OUTLINED_FUNCTION_162_10();
      uint64_t v23 = v52;
      uint64_t v24 = v53;
      __swift_project_boxed_opaque_existential_1(v51, v52);
      dispatch thunk of DeviceState.siriLocale.getter(v23, v24);
      __swift_destroy_boxed_opaque_existential_1(v51);
      static PhonePerson.make(phonePerson:options:locale:)(v22, v19, v1);
      uint64_t v26 = v25;
      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v1, v50);

      if (v26)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v27);
        unint64_t v29 = *(void *)((char *)&dword_10 + (v54 & 0xFFFFFFFFFFFFFF8LL));
        unint64_t v28 = *(void *)((char *)&dword_18 + (v54 & 0xFFFFFFFFFFFFFF8LL));
        if (v29 >= v28 >> 1) {
          OUTLINED_FUNCTION_3_25(v29 + 1, v28);
        }
        uint64_t v30 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v29, v26);
        specialized Array._endMutation()(v30, v31, v32, v33);
      }

      ++v17;
      uint64_t v13 = v20;
    }

    while (v16 != v17);
    OUTLINED_FUNCTION_62();
    uint64_t v7 = v47;
    uint64_t v0 = v48;
    uint64_t v11 = v46;
    goto LABEL_17;
  }

  __break(1u);
}

uint64_t specialized StartAudioCallCatTemplatingService.init(sharedGlobals:catFamily:displayTextCats:phoneCallCommonCats:appInfoBuilder:)( void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v24 = a3;
  uint64_t v25 = a4;
  uint64_t v14 = *(void *)(a7 - 8);
  __chkstk_darwin();
  uint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for CATOption(0LL);
  __chkstk_darwin();
  unint64_t v18 = (char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)(a6 + direct field offset for StartAudioCallCatTemplatingService.catFamily) = a2;
  outlined init with copy of SharedGlobalsProviding((uint64_t)a1, (uint64_t)v26);
  type metadata accessor for StartCallCATs(0LL);
  uint64_t v19 = swift_retain();
  static CATOption.defaultMode.getter(v19);
  uint64_t v20 = CATWrapper.__allocating_init(options:globals:)(v18, 0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a5, a7);
  uint64_t v21 = specialized PhoneCallBaseCatTemplatingService.init(ducFamily:sharedGlobals:displayTextCats:phoneCallCommonCats:appInfoBuilder:labelTemplating:startCallCats:)( 0xD000000000000014LL,  0x8000000000342290LL,  v26,  v24,  v25,  v16,  0LL,  0LL,  0LL,  0LL,  v20,  a6,  a7,  a8);
  swift_release(a2);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a5, a7);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v21;
}

uint64_t sub_305318()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t type metadata accessor for StartAudioCallCatTemplatingService(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for StartAudioCallCatTemplatingService;
  if (!type metadata singleton initialization cache for StartAudioCallCatTemplatingService) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for StartAudioCallCatTemplatingService);
  }
  return result;
}

uint64_t type metadata completion function for StartAudioCallCatTemplatingService(uint64_t a1)
{
  uint64_t v2 = (char *)&value witness table for Builtin.NativeObject + 64;
  return swift_initClassMetadata2( a1,  0LL,  1LL,  &v2,  a1 + class metadata base offset for StartAudioCallCatTemplatingService);
}

uint64_t ObjC metadata update function for StartAudioCallCatTemplatingService()
{
  return type metadata accessor for StartAudioCallCatTemplatingService(0LL);
}

void partial apply for specialized implicit closure #2 in implicit closure #1 in AnySlotTemplating.init<A>(delegate:)()
{
}

{
  specialized ContactsSlotTemplating.makeParameterPromptDialog(app:parameterName:intent:_:)();
  OUTLINED_FUNCTION_2();
}

{
  CallRecordToCallBackSlotTemplating.makeParameterPromptDialog(app:parameterName:intent:_:)();
  OUTLINED_FUNCTION_2();
}

void partial apply for specialized implicit closure #4 in implicit closure #3 in AnySlotTemplating.init<A>(delegate:)()
{
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  OUTLINED_FUNCTION_87_18();
  specialized implicit closure #4 in implicit closure #3 in AnySlotTemplating.init<A>(delegate:)(v0, v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_120();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  OUTLINED_FUNCTION_87_18();
  specialized implicit closure #4 in implicit closure #3 in AnySlotTemplating.init<A>(delegate:)(v0, v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_120();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  OUTLINED_FUNCTION_87_18();
  specialized implicit closure #4 in implicit closure #3 in AnySlotTemplating.init<A>(delegate:)( v0,  v1,  v2,  v3,  v4,  v5,  v6,  v7);
  OUTLINED_FUNCTION_120();
}

{
  uint64_t v0;
  uint64_t v1;
  OUTLINED_FUNCTION_87_18();
  specialized implicit closure #4 in implicit closure #3 in AnySlotTemplating.init<A>(delegate:)(v0, v1);
  OUTLINED_FUNCTION_120();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  OUTLINED_FUNCTION_87_18();
  specialized implicit closure #4 in implicit closure #3 in AnySlotTemplating.init<A>(delegate:)(v0, v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_120();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  OUTLINED_FUNCTION_87_18();
  specialized implicit closure #4 in implicit closure #3 in AnySlotTemplating.init<A>(delegate:)(v0, v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_120();
}

void partial apply for specialized implicit closure #6 in implicit closure #5 in AnySlotTemplating.init<A>(delegate:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
}

{
  OUTLINED_FUNCTION_89_21(a1, a2, a3);
  OUTLINED_FUNCTION_13_2();
}

{
  OUTLINED_FUNCTION_89_21(a1, a2, a3);
  OUTLINED_FUNCTION_13_2();
}

{
  CallRecordToCallBackSlotTemplating.makeParameterValueDisambiguationDialog(app:parameterName:intentResolutionResult:disambiguationList:deviceIsLocked:intent:_:)( a1,  a2,  a3);
  OUTLINED_FUNCTION_13_2();
}

void partial apply for specialized implicit closure #8 in implicit closure #7 in AnySlotTemplating.init<A>(delegate:)()
{
}

{
  OUTLINED_FUNCTION_78_26();
  OUTLINED_FUNCTION_159_2();
  OUTLINED_FUNCTION_13_2();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  OUTLINED_FUNCTION_79_19();
  specialized implicit closure #8 in implicit closure #7 in AnySlotTemplating.init<A>(delegate:)( v0,  v1,  v2,  v3,  v4,  v5,  v6,  v7,  v8);
  OUTLINED_FUNCTION_120();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  OUTLINED_FUNCTION_78_26();
  OUTLINED_FUNCTION_160_4(v0, v1, v2);
  OUTLINED_FUNCTION_13_2();
}

{
  OUTLINED_FUNCTION_78_26();
  OUTLINED_FUNCTION_159_2();
  OUTLINED_FUNCTION_13_2();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  OUTLINED_FUNCTION_79_19();
  specialized implicit closure #8 in implicit closure #7 in AnySlotTemplating.init<A>(delegate:)( v0,  v1,  v2,  v3,  v4,  v5,  v6,  v7,  v8);
  OUTLINED_FUNCTION_120();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  OUTLINED_FUNCTION_79_19();
  specialized implicit closure #8 in implicit closure #7 in AnySlotTemplating.init<A>(delegate:)( v0,  v1,  v2,  v3,  v4,  v5,  v6,  v7,  v8,  v9);
  OUTLINED_FUNCTION_120();
}

void partial apply for specialized implicit closure #2 in implicit closure #1 in AnySlotTemplating.init<A>(delegate:)( uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
}

#error "305658: call analysis failed (funcsize=14)"
uint64_t objectdestroy_2Tm_4()
{
  void *v0;
  __swift_destroy_boxed_opaque_existential_1(v0 + 2);
  swift_release(v0[7]);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 10);
  return swift_deallocObject(v0, 120LL, 7LL);
}

void partial apply for specialized implicit closure #2 in implicit closure #1 in AnySlotTemplating.init<A>(delegate:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = OUTLINED_FUNCTION_85_16(a1, a2, a3, a4, a5);
  (*(void (**)(uint64_t))(class metadata base offset for StartCallCATs + v6 + 1376))(v5);
  OUTLINED_FUNCTION_2();
}

{
  uint64_t v5;
  uint64_t v6;
  uint64_t v5 = OUTLINED_FUNCTION_85_16(a1, a2, a3, a4, a5);
  (*(void (**)(uint64_t))(class metadata base offset for StartCallCATs + v6 + 1408))(v5);
  OUTLINED_FUNCTION_2();
}

{
  uint64_t v5;
  uint64_t v6;
  uint64_t v5 = OUTLINED_FUNCTION_85_16(a1, a2, a3, a4, a5);
  (*(void (**)(uint64_t))(class metadata base offset for StartCallCATs + v6 + 1280))(v5);
  OUTLINED_FUNCTION_2();
}

void partial apply for specialized implicit closure #6 in implicit closure #5 in AnySlotTemplating.init<A>(delegate:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = OUTLINED_FUNCTION_48_37(a1, a2, a3, a4, a5, a6, a7, a8);
  (*(void (**)(uint64_t))(class metadata base offset for StartCallCATs + v9 + 448))(v8);
  OUTLINED_FUNCTION_2();
}

{
  uint64_t v8;
  uint64_t v9;
  uint64_t v8 = OUTLINED_FUNCTION_48_37(a1, a2, a3, a4, a5, a6, a7, a8);
  (*(void (**)(uint64_t))(class metadata base offset for StartCallCATs + v9 + 480))(v8);
  OUTLINED_FUNCTION_2();
}

{
  uint64_t v8;
  uint64_t v9;
  uint64_t v8 = OUTLINED_FUNCTION_48_37(a1, a2, a3, a4, a5, a6, a7, a8);
  (*(void (**)(uint64_t))(class metadata base offset for StartCallCATs + v9 + 224))(v8);
  OUTLINED_FUNCTION_2();
}

void partial apply for specialized implicit closure #8 in implicit closure #7 in AnySlotTemplating.init<A>(delegate:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = OUTLINED_FUNCTION_48_37(a1, a2, a3, a4, a5, a6, a7, a8);
  (*(void (**)(uint64_t))(class metadata base offset for StartCallCATs + v9 + 1888))(v8);
  OUTLINED_FUNCTION_2();
}

uint64_t outlined init with copy of CallCapabilitySlotTemplating(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t outlined init with copy of CallRecordToCallBackSlotTemplating(uint64_t a1, uint64_t a2)
{
  return a2;
}

void OUTLINED_FUNCTION_0_113( _OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10, __int128 a11, char a12)
{
  __int128 v13 = a10;
  a1[1] = a9;
  a1[2] = v13;
  a1[3] = a11;
  outlined init with copy of Result<TemplatingResult, Error>((uint64_t)&a12, (uint64_t)&a9, v12);
}

void OUTLINED_FUNCTION_4_111( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *OUTLINED_FUNCTION_10_82( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return memcpy((void *)(a1 + 16), &a9, 0x68uLL);
}

void OUTLINED_FUNCTION_15_85(uint64_t a1, uint64_t a2)
{
}

  ;
}

uint64_t OUTLINED_FUNCTION_26_63( _OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10, __int128 a11, char a12)
{
  __int128 v12 = a10;
  a1[1] = a9;
  a1[2] = v12;
  a1[3] = a11;
  return outlined init with copy of CallCapabilitySlotTemplating((uint64_t)&a12, (uint64_t)&a9);
}

uint64_t OUTLINED_FUNCTION_28_61(uint64_t a1)
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)(a1, v1);
}

uint64_t OUTLINED_FUNCTION_34_40(void *a1)
{
  return dispatch thunk of DeviceState.siriLocale.getter(v1, v2);
}

uint64_t OUTLINED_FUNCTION_37_45()
{
  return PhonePersonList.__allocating_init(list:)(v0);
}

uint64_t OUTLINED_FUNCTION_39_39(uint64_t a1)
{
  return swift_release(a1);
}

uint64_t OUTLINED_FUNCTION_41_43()
{
  return specialized StartAudioCallCatTemplatingService.init(sharedGlobals:catFamily:displayTextCats:phoneCallCommonCats:appInfoBuilder:)( v4,  v3,  v2,  v1,  v7,  v0,  v5,  v6);
}

uint64_t OUTLINED_FUNCTION_42_30(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(v1, 0LL, 1LL, a1);
}

uint64_t OUTLINED_FUNCTION_44_36(float a1)
{
  *uint64_t v1 = a1;
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)( 0xD00000000000005ALL,  (v2 - 32) | 0x8000000000000000LL,  (uint64_t *)(v3 - 200));
}

uint64_t OUTLINED_FUNCTION_48_37( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return a8;
}

__n128 OUTLINED_FUNCTION_51_25(_OWORD *a1, __int128 a2, __int128 a3, __int128 a4, ...)
{
  a1[1] = a2;
  a1[2] = a3;
  a1[3] = a4;
  outlined destroy of PhoneCallNLIntent?((uint64_t)va, v4);
  return result;
}

uint64_t OUTLINED_FUNCTION_52_32@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, void)@<X8>)
{
  return a2(a1, *(void *)(v2 - 256));
}

void OUTLINED_FUNCTION_59_26(uint64_t a1, ...)
{
}

uint64_t OUTLINED_FUNCTION_60_29(uint64_t a1)
{
  *(void *)(v3 - outlined init with copy of SharedGlobalsProviding(v0 - 128, v0 - 248) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(v3 - 248, v3 - 240, v2, v1);
}

void OUTLINED_FUNCTION_70_23(void *a1, char a2, uint64_t a3)
{
}

void OUTLINED_FUNCTION_71_23( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void OUTLINED_FUNCTION_72_30( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void OUTLINED_FUNCTION_73_30( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

  ;
}

  ;
}

uint64_t OUTLINED_FUNCTION_77_23()
{
  return static SiriKitLifecycle._logCrashToEventBus(_:)(0xD00000000000005ALL, (v0 - 32) | 0x8000000000000000LL);
}

  ;
}

uint64_t OUTLINED_FUNCTION_85_16(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return a5;
}

  ;
}

uint64_t OUTLINED_FUNCTION_88_25@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  return swift_dynamicCast(v2 - 104, v2 - 96, a2 + 8, a1, 6LL);
}

uint64_t OUTLINED_FUNCTION_89_21(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return partial apply for specialized implicit closure #6 in implicit closure #5 in AnySlotTemplating.init<A>(delegate:)( a1,  a2,  a3);
}

void *OUTLINED_FUNCTION_90_21@<X0>(uint64_t a1@<X8>)
{
  return __swift_project_boxed_opaque_existential_1(*(void **)(a1 - 256), *(void *)(*(void *)(a1 - 256) + 24LL));
}

void OUTLINED_FUNCTION_91_19()
{
}

__n128 OUTLINED_FUNCTION_93_18( _OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10, __n128 a11)
{
  a1[1] = a9;
  a1[2] = a10;
  __n128 result = a11;
  a1[3] = a11;
  return result;
}

uint64_t OUTLINED_FUNCTION_94_16(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(v1, 0LL, 1LL, a1);
}

uint64_t OUTLINED_FUNCTION_97_20()
{
  return swift_bridgeObjectRetain(v0);
}

uint64_t OUTLINED_FUNCTION_98_17@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t)@<X8>)
{
  return a5(a1, a2, a3, a4, v6, *(void *)(v7 - 152), v5);
}

void *OUTLINED_FUNCTION_99_15(void *a1)
{
  return __swift_project_boxed_opaque_existential_1(a1, v1);
}

uint64_t OUTLINED_FUNCTION_100_12()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v0, v1);
}

uint64_t OUTLINED_FUNCTION_102_11@<X0>( uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, void, void)@<X8>)
{
  return a2(a1, *(void *)(v2 - 288), *(void *)(v2 - 280));
}

  ;
}

uint64_t OUTLINED_FUNCTION_106_14(uint64_t a1)
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, a1);
}

uint64_t OUTLINED_FUNCTION_112_12(uint64_t a1, uint64_t a2)
{
  return specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, a2, v2);
}

uint64_t OUTLINED_FUNCTION_113_12()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v0);
}

uint64_t OUTLINED_FUNCTION_120_13()
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)(v1 - 168) + 8LL))(v0, *(void *)(v1 - 160));
}

void OUTLINED_FUNCTION_123_10(uint64_t a1@<X8>)
{
  *(void *)(a1 - 256) = v1;
}

uint64_t OUTLINED_FUNCTION_124_11()
{
  return swift_retain(v0);
}

uint64_t OUTLINED_FUNCTION_125_11@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + a3 + 1632))(a1, a2, v4);
}

uint64_t OUTLINED_FUNCTION_126_10()
{
  return specialized Sequence.contains(where:)(v0, (char *)&dword_0 + 2);
}

uint64_t OUTLINED_FUNCTION_127_12@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
  return type metadata accessor for Logger(0LL);
}

id OUTLINED_FUNCTION_129_14()
{
  return *(id *)(v0 + 32);
}

uint64_t OUTLINED_FUNCTION_131_12()
{
  return v1(v0);
}

uint64_t OUTLINED_FUNCTION_134_8@<X0>( uint64_t a1@<X1>, uint64_t (*a2)(void, uint64_t, uint64_t)@<X8>)
{
  return a2(*(void *)(v2 - 256), a1, v3);
}

uint64_t OUTLINED_FUNCTION_135_9(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_stdlib_reportUnimplementedInitializer(a1, 62LL, a3, 111LL, 0LL);
}

  ;
}

void OUTLINED_FUNCTION_143_6(void *a1)
{
}

uint64_t OUTLINED_FUNCTION_144_9()
{
  return static Device.current.getter();
}

  ;
}

id OUTLINED_FUNCTION_148_11@<X0>(uint64_t a1@<X8>)
{
  return *(id *)(a1 - 256);
}

uint64_t OUTLINED_FUNCTION_149_9(uint64_t a1)
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
}

uint64_t OUTLINED_FUNCTION_150_9()
{
  return v0;
}

void OUTLINED_FUNCTION_152_9()
{
}

uint64_t OUTLINED_FUNCTION_154_11(uint64_t a1)
{
  return v1(a1, 0LL);
}

id OUTLINED_FUNCTION_155_7()
{
  return [v1 *(SEL *)(v0 + 1424)];
}

uint64_t OUTLINED_FUNCTION_156_4()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_165_4@<X0>(uint64_t (*a1)(void, uint64_t)@<X8>)
{
  return a1(*(void *)(v2 - 152), v1);
}

uint64_t OUTLINED_FUNCTION_168_5()
{
  return _bridgeAnyObjectToAny(_:)();
}

uint64_t OUTLINED_FUNCTION_169_5()
{
  return specialized INPersonContainingIntent.isFirstContactRelatedOrMyself.getter();
}

uint64_t OUTLINED_FUNCTION_170_6()
{
  return specialized Sequence.contains(where:)(v0, (char *)&dword_0 + 1);
}

uint64_t OUTLINED_FUNCTION_171_7()
{
  return specialized Sequence.allSatisfy(_:)(v0, (char *)&dword_0 + 1);
}

uint64_t OUTLINED_FUNCTION_173_3(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(v1, 0LL, 1LL, a1);
}

uint64_t OUTLINED_FUNCTION_174_5@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, void)@<X8>)
{
  return a3(a1, a2, *(void *)(v3 - 256));
}

id OUTLINED_FUNCTION_175_4(void *a1)
{
  return [a1 *(SEL *)(v1 + 1808)];
}

void OUTLINED_FUNCTION_177_4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
}

void OUTLINED_FUNCTION_181_6(uint64_t a1@<X7>, uint64_t a2@<X8>)
{
  *(void *)(a2 - 256) = a1;
}

void OUTLINED_FUNCTION_182_4()
{
}

uint64_t OUTLINED_FUNCTION_184_1()
{
  return specialized static ContactsSlotTemplating.isMissingMeCardCase(intent:)(v0, v1);
}

uint64_t OUTLINED_FUNCTION_187_4@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t)@<X8>)
{
  return a3(a1, a2, v3, v4);
}

id OUTLINED_FUNCTION_188_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_200_5()
{
  return static Device.current.getter();
}

  ;
}

PhoneCallFlowDelegatePlugin::PhoneCallSlotNames_optional OUTLINED_FUNCTION_206_5()
{
  v2._uint64_t countAndFlagsBits = v1;
  v2._object = v0;
  return PhoneCallSlotNames.init(rawValue:)(v2);
}

uint64_t OUTLINED_FUNCTION_207_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v6 + 24))( a1,  a2,  a3,  a4,  a5,  a6 & 1);
}

  ;
}

  ;
}

  ;
}

uint64_t OUTLINED_FUNCTION_212_3@<X0>(uint64_t a1@<X8>)
{
  return *(_DWORD *)(a1 - 256) & 1;
}

unint64_t SharedConfirmationRepromptContext.PromptType.description.getter()
{
  return 0xD000000000000016LL;
}

unint64_t SharedConfirmationRepromptContext.PromptType.rawValue.getter()
{
  return 0xD000000000000015LL;
}

BOOL SharedConfirmationRepromptContext.PromptType.init(rawValue:)(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)( (Swift::OpaquePointer)&outlined read-only object #0 of SharedConfirmationRepromptContext.PromptType.init(rawValue:),  v2);
  swift_bridgeObjectRelease(object);
  return v3 != 0;
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance SharedConfirmationRepromptContext.PromptType@<W0>( Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  BOOL result = SharedConfirmationRepromptContext.PromptType.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

unint64_t protocol witness for RawRepresentable.rawValue.getter in conformance SharedConfirmationRepromptContext.PromptType@<X0>( void *a1@<X8>)
{
  unint64_t result = SharedConfirmationRepromptContext.PromptType.rawValue.getter();
  *a1 = 0xD000000000000015LL;
  a1[1] = v3;
  return result;
}

unint64_t protocol witness for CustomStringConvertible.description.getter in conformance SharedConfirmationRepromptContext.PromptType()
{
  return 0xD000000000000016LL;
}

uint64_t SharedConfirmationRepromptContext.registerPrompt(type:)()
{
  uint64_t v1 = v0;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)static Logger.siriPhone);
  uint64_t v4 = (void *)Logger.logObject.getter(v3);
  os_log_type_t v6 = static os_log_type_t.debug.getter(v4, v5);
  if (OUTLINED_FUNCTION_29_4(v6))
  {
    uint64_t v7 = (_DWORD *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v8 = OUTLINED_FUNCTION_7_0(32LL);
    v28[0] = v8;
    *uint64_t v7 = 136315138;
    uint64_t v27 = OUTLINED_FUNCTION_14_79(v8, 0x80000000003528C0LL, v28);
    OUTLINED_FUNCTION_13_90((uint64_t)&v27, (uint64_t)v28);
    OUTLINED_FUNCTION_5_82(&dword_0, v9, v10, "#SharedConfirmationRepromptContext registering prompt type %s");
    OUTLINED_FUNCTION_9_68();
    OUTLINED_FUNCTION_0_2(v8);
    OUTLINED_FUNCTION_0_2((uint64_t)v7);
  }

  uint64_t v11 = (uint64_t *)(v1 + 16);
  OUTLINED_FUNCTION_25_0(v1 + 16, (uint64_t)v28, 33LL);
  swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + 16));
  uint64_t v27 = *(void *)(v1 + 16);
  uint64_t v12 = v27;
  *(void *)(v1 + ++*(void *)(v0 + 16) = 0x8000000000000000LL;
  uint64_t v13 = specialized __RawDictionaryStorage.find<A>(_:)();
  if (__OFADD__(*(void *)(v12 + 16), (v14 & 1) == 0))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }

  unint64_t v15 = v13;
  char v16 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<SharedConfirmationRepromptContext.PromptType, Int>);
  BOOL v17 = OUTLINED_FUNCTION_11_96();
  uint64_t v18 = v27;
  if (!v17)
  {
LABEL_9:
    *uint64_t v11 = v18;
    swift_bridgeObjectRelease();
    uint64_t v21 = *v11;
    if ((v16 & 1) == 0) {
      specialized _NativeDictionary._insert(at:key:value:)(v15, 0LL, *v11);
    }
    uint64_t v22 = *(void *)(v21 + 56);
    uint64_t v23 = *(void *)(v22 + 8 * v15);
    BOOL v24 = __OFADD__(v23, 1LL);
    uint64_t v25 = v23 + 1;
    if (!v24)
    {
      *(void *)(v22 + 8 * v1__swift_destroy_boxed_opaque_existential_1(v0 + 5) = v25;
      return swift_endAccess(v28);
    }

    goto LABEL_14;
  }

  uint64_t v19 = specialized __RawDictionaryStorage.find<A>(_:)();
  if ((v16 & 1) == (v20 & 1))
  {
    unint64_t v15 = v19;
    goto LABEL_9;
  }

BOOL SharedConfirmationRepromptContext.hasPrompted(for:times:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  if (*(void *)(v3 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = specialized __RawDictionaryStorage.find<A>(_:)();
    if ((v5 & 1) != 0) {
      uint64_t v6 = *(void *)(*(void *)(v3 + 56) + 8 * v4);
    }
    else {
      uint64_t v6 = 0LL;
    }
    swift_bridgeObjectRelease();
  }

  else
  {
    uint64_t v6 = 0LL;
  }

  return v6 >= a1;
}

uint64_t SharedConfirmationRepromptContext.reset(type:)()
{
  uint64_t v1 = v0 + 16;
  uint64_t result = OUTLINED_FUNCTION_25_0(v0 + 16, (uint64_t)v16, 0LL);
  if (*(void *)(*(void *)(v0 + 16) + 16LL))
  {
    swift_bridgeObjectRetain();
    specialized __RawDictionaryStorage.find<A>(_:)();
    char v4 = v3;
    uint64_t result = swift_bridgeObjectRelease();
    if ((v4 & 1) != 0)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v5 = type metadata accessor for Logger(0LL);
      uint64_t v6 = __swift_project_value_buffer(v5, (uint64_t)static Logger.siriPhone);
      uint64_t v7 = (void *)Logger.logObject.getter(v6);
      os_log_type_t v9 = static os_log_type_t.debug.getter(v7, v8);
      if (OUTLINED_FUNCTION_29_4(v9))
      {
        uint64_t v10 = (_DWORD *)OUTLINED_FUNCTION_7_0(12LL);
        uint64_t v11 = OUTLINED_FUNCTION_7_0(32LL);
        v15[0] = v11;
        *uint64_t v10 = 136315138;
        uint64_t v14 = OUTLINED_FUNCTION_14_79(v11, 0x80000000003528C0LL, v15);
        OUTLINED_FUNCTION_13_90((uint64_t)&v14, (uint64_t)v15);
        OUTLINED_FUNCTION_5_82(&dword_0, v12, v13, "#SharedConfirmationRepromptContext resetting prompt type %s");
        OUTLINED_FUNCTION_9_68();
        OUTLINED_FUNCTION_0_2(v11);
        OUTLINED_FUNCTION_0_2((uint64_t)v10);
      }

      OUTLINED_FUNCTION_25_0(v1, (uint64_t)v15, 33LL);
      specialized Dictionary._Variant.removeValue(forKey:)();
      return swift_endAccess(v15);
    }
  }

  return result;
}

uint64_t SharedConfirmationRepromptContext.__allocating_init()()
{
  uint64_t v1 = swift_allocObject(v0, 24LL, 7LL);
  unint64_t v2 = lazy protocol witness table accessor for type SharedConfirmationRepromptContext.PromptType and conformance SharedConfirmationRepromptContext.PromptType();
  *(void *)(v1 + ++*(void *)(v0 + 16) = Dictionary.init(dictionaryLiteral:)( _swiftEmptyArrayStorage,  &type metadata for SharedConfirmationRepromptContext.PromptType,  &type metadata for Int,  v2);
  return v1;
}

uint64_t SharedConfirmationRepromptContext.init()()
{
  unint64_t v1 = lazy protocol witness table accessor for type SharedConfirmationRepromptContext.PromptType and conformance SharedConfirmationRepromptContext.PromptType();
  *(void *)(v0 + ++*(void *)(v0 + 16) = Dictionary.init(dictionaryLiteral:)( _swiftEmptyArrayStorage,  &type metadata for SharedConfirmationRepromptContext.PromptType,  &type metadata for Int,  v1);
  return v0;
}

double specialized Dictionary._Variant.removeValue(forKey:)@<D0>( uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  char v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = specialized __RawDictionaryStorage.find<A>(_:)(a1, a2);
  LOBYTE(a__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    swift_isUniquelyReferenced_nonNull_native(*v4);
    OUTLINED_FUNCTION_10_83();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<String, Any>);
    OUTLINED_FUNCTION_11_96();
    swift_bridgeObjectRelease();
    outlined init with take of Any((_OWORD *)(*(void *)(v11 + 56) + 32 * v8), a3);
    _NativeDictionary._delete(at:)(v8, v11, &type metadata for String, (char *)&type metadata for Any + 8);
    *char v4 = v11;
    swift_bridgeObjectRelease();
  }

  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }

  return result;
}

uint64_t specialized Dictionary._Variant.removeValue(forKey:)(uint64_t a1)
{
  unint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = specialized __RawDictionaryStorage.find<A>(_:)(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0LL;
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  OUTLINED_FUNCTION_10_83();
  Swift::Int v8 = *(void *)(v7 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<UUID, CallStateOneTimeTask>);
  _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v8);
  uint64_t v9 = *(void *)(v15 + 48);
  uint64_t v10 = type metadata accessor for UUID(0LL);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v10 - 8) + 8LL))( v9 + *(void *)(*(void *)(v10 - 8) + 72LL) * v4,  v10);
  uint64_t v11 = *(void *)(*(void *)(v15 + 56) + 8 * v4);
  uint64_t v12 = type metadata accessor for CallStateOneTimeTask(0LL);
  unint64_t v13 = lazy protocol witness table accessor for type UUID and conformance UUID();
  _NativeDictionary._delete(at:)(v4, v15, v10, v12, v13);
  void *v2 = v15;
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t specialized Dictionary._Variant.removeValue(forKey:)()
{
  unint64_t v1 = v0;
  swift_bridgeObjectRetain();
  uint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)();
  char v4 = v3;
  swift_bridgeObjectRelease();
  if ((v4 & 1) == 0) {
    return 0LL;
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v0);
  uint64_t v10 = *v0;
  uint64_t v6 = *v0;
  *uint64_t v0 = 0x8000000000000000LL;
  Swift::Int v7 = *(void *)(v6 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<SharedConfirmationRepromptContext.PromptType, Int>);
  _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v7);
  uint64_t v8 = *(void *)(*(void *)(v10 + 56) + 8 * v2);
  lazy protocol witness table accessor for type SharedConfirmationRepromptContext.PromptType and conformance SharedConfirmationRepromptContext.PromptType();
  _NativeDictionary._delete(at:)( v2,  v10,  &type metadata for SharedConfirmationRepromptContext.PromptType,  &type metadata for Int);
  *unint64_t v1 = v10;
  swift_bridgeObjectRelease();
  return v8;
}

unint64_t specialized _NativeDictionary._insert(at:key:value:)( unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t result = OUTLINED_FUNCTION_2_95(a1, a2, a3, a4);
  if (v7) {
    __break(1u);
  }
  else {
    *(void *)(v5 + ++*(void *)(v0 + 16) = v6;
  }
  return result;
}

_OWORD *specialized _NativeDictionary._insert(at:key:value:)( unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v6 = OUTLINED_FUNCTION_0_114(a1, a2, a3, a4, a5);
  unint64_t result = outlined init with take of Any(v8, (_OWORD *)(v7 + 32 * v6));
  uint64_t v10 = *(void *)(a5 + 16);
  BOOL v11 = __OFADD__(v10, 1LL);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    *(void *)(a5 + ++*(void *)(v0 + 16) = v12;
  }
  return result;
}

void specialized _NativeDictionary._insert(at:key:value:)( unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = OUTLINED_FUNCTION_1_106(a1, a2, a3, a4);
  uint64_t v9 = type metadata accessor for ContactResolverConfigHashable(v8);
  outlined init with take of ContactResolverConfigHashable(v5, v7 + *(void *)(*(void *)(v9 - 8) + 72LL) * v6);
  OUTLINED_FUNCTION_12_95();
  if (v11)
  {
    __break(1u);
  }

  else
  {
    *(void *)(v4 + ++*(void *)(v0 + 16) = v10;
    OUTLINED_FUNCTION_16();
  }

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v8 = OUTLINED_FUNCTION_1_106(a1, a2, a3, a4);
  uint64_t v9 = type metadata accessor for UUID(v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32LL))( v7 + *(void *)(*(void *)(v9 - 8) + 72LL) * v6,  v5,  v9);
  OUTLINED_FUNCTION_12_95();
  if (v11)
  {
    __break(1u);
  }

  else
  {
    *(void *)(v4 + ++*(void *)(v0 + 16) = v10;
    OUTLINED_FUNCTION_16();
  }

unint64_t specialized _NativeDictionary._insert(at:key:value:)( unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t result = OUTLINED_FUNCTION_0_114(a1, a2, a3, a4, a5);
  uint64_t v8 = (_OWORD *)(v7 + 48 * result);
  __int128 v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  v8[2] = v9[2];
  uint64_t v11 = *(void *)(v6 + 16);
  BOOL v12 = __OFADD__(v11, 1LL);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    *(void *)(v6 + ++*(void *)(v0 + 16) = v13;
  }
  return result;
}

{
  unint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  unint64_t result = OUTLINED_FUNCTION_0_114(a1, a2, a3, a4, a5);
  *(void *)(v8 + 8 * result) = v7;
  uint64_t v9 = *(void *)(v6 + 16);
  __int128 v10 = __OFADD__(v9, 1LL);
  uint64_t v11 = v9 + 1;
  if (v10) {
    __break(1u);
  }
  else {
    *(void *)(v6 + ++*(void *)(v0 + 16) = v11;
  }
  return result;
}

unint64_t specialized _NativeDictionary._insert(at:key:value:)( unint64_t result, uint64_t a2, uint64_t a3)
{
  *(void *)(a3 + 8 * (result >> 6) + 64) |= 1LL << result;
  *(void *)(*(void *)(a3 + 56) + 8 * result) = a2;
  uint64_t v3 = *(void *)(a3 + 16);
  BOOL v4 = __OFADD__(v3, 1LL);
  uint64_t v5 = v3 + 1;
  if (v4) {
    __break(1u);
  }
  else {
    *(void *)(a3 + ++*(void *)(v0 + 16) = v5;
  }
  return result;
}

uint64_t type metadata accessor for SharedConfirmationRepromptContext()
{
  return objc_opt_self(&OBJC_CLASS____TtC27PhoneCallFlowDelegatePlugin33SharedConfirmationRepromptContext);
}

uint64_t storeEnumTagSinglePayload for SharedConfirmationRepromptContext.PromptType( uint64_t a1, int a2, int a3)
{
  else {
    int v3 = 2;
  }
  else {
    LODWORD(OUTLINED_FUNCTION_48_23(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin26PhoneCallContactIntentNode_handleLabel, v4) = v3;
  }
  if (a3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2) {
    return ((uint64_t (*)(void))((char *)sub_306A24 + 4 * asc_340AD0[v4]))();
  }
  else {
    return ((uint64_t (*)(void))((char *)sub_306A44 + 4 * byte_340AD5[v4]))();
  }
}

_BYTE *sub_306A24(_BYTE *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

_BYTE *sub_306A44(_BYTE *result)
{
  *unint64_t result = 0;
  return result;
}

_DWORD *sub_306A4C(_DWORD *result, int a2)
{
  *unint64_t result = a2;
  return result;
}

_WORD *sub_306A54(_WORD *result, __int16 a2)
{
  *unint64_t result = a2;
  return result;
}

_WORD *sub_306A5C(_WORD *result)
{
  *unint64_t result = 0;
  return result;
}

_DWORD *sub_306A64(_DWORD *result)
{
  *unint64_t result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SharedConfirmationRepromptContext.PromptType()
{
  return &type metadata for SharedConfirmationRepromptContext.PromptType;
}

unint64_t OUTLINED_FUNCTION_0_114( unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(a5 + 8 * (result >> 6) + 64) |= 1LL << result;
  uint64_t v5 = (void *)(*(void *)(a5 + 48) + 16 * result);
  void *v5 = a2;
  v5[1] = a3;
  return result;
}

uint64_t OUTLINED_FUNCTION_1_106(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(a4 + 8 * (a1 >> 6) + 64) |= 1LL << a1;
  return 0LL;
}

unint64_t OUTLINED_FUNCTION_2_95(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(a4 + 8 * (result >> 6) + 64) |= 1LL << result;
  *(void *)(*(void *)(a4 + 48) + 8 * result) = a2;
  *(void *)(*(void *)(a4 + 56) + 8 * result) = a3;
  return result;
}

void OUTLINED_FUNCTION_10_83()
{
  *uint64_t v0 = 0x8000000000000000LL;
}

BOOL OUTLINED_FUNCTION_11_96()
{
  return _NativeDictionary.ensureUnique(isUnique:capacity:)(v0, v1);
}

void OUTLINED_FUNCTION_12_95()
{
  *(void *)(*(void *)(v0 + 56) + 8 * v__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v1;
}

uint64_t OUTLINED_FUNCTION_13_90(uint64_t a1, uint64_t a2)
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(a1, a2, v3, v2);
}

uint64_t OUTLINED_FUNCTION_14_79(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000016LL, a2, a3);
}

uint64_t static ConfirmationViewUtils.makeYesNoConfirmationView(labelTemplatesProvider:sharedGlobals:)( uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 2++*(void *)(v0 + 16) = a1;
  *(void *)(v2 + 224) = a2;
  return swift_task_switch( static ConfirmationViewUtils.makeYesNoConfirmationView(labelTemplatesProvider:sharedGlobals:),  0LL,  0LL);
}

uint64_t static ConfirmationViewUtils.makeYesNoConfirmationView(labelTemplatesProvider:sharedGlobals:)()
{
  uint64_t v1 = *(void **)(v0 + 216);
  uint64_t v3 = v1[3];
  uint64_t v2 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  uint64_t v4 = (void *)swift_task_alloc(dword_42ECFC);
  *(void *)(v0 + 23__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v4;
  *uint64_t v4 = v0;
  v4[1] = static ConfirmationViewUtils.makeYesNoConfirmationView(labelTemplatesProvider:sharedGlobals:);
  return LabelTemplatesProviding.yesAndNo()(v3, v2);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t (*v6)(uint64_t);
  uint64_t v1 = *(void **)(v0 + 224);
  static ConfirmationViewTemplate.makeDefaultConfirmationViewTemplate(labels:sharedGlobals:)( *(void *)(v0 + 264),  *(void *)(v0 + 256),  *(void *)(v0 + 248),  *(void *)(v0 + 240),  v1,  v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  outlined init with copy of SignalProviding((uint64_t)v1, v0 + 176);
  uint64_t v2 = type metadata accessor for ConfirmationViewBuilder();
  uint64_t v3 = swift_allocObject(v2, 216LL, 7LL);
  *(void *)(v0 + 27__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v3;
  memcpy((void *)(v3 + 16), (const void *)(v0 + 16), 0xA0uLL);
  outlined init with take of AppSelectionSignalComponent((__int128 *)(v0 + 176), v3 + 176);
  outlined retain of ConfirmationViewTemplate((void *)(v0 + 16));
  uint64_t v4 = (void *)swift_task_alloc(unk_4417DC);
  *(void *)(v0 + 280) = v4;
  *uint64_t v4 = v0;
  v4[1] = static ConfirmationViewUtils.makeYesNoConfirmationView(labelTemplatesProvider:sharedGlobals:);
  return v6((uint64_t)_swiftEmptyArrayStorage);
}

{
  uint64_t v0;
  outlined release of ConfirmationViewTemplate((void *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 296));
}

{
  uint64_t v0;
  swift_release(*(void *)(v0 + 272));
  outlined release of ConfirmationViewTemplate((void *)(v0 + 16));
  return OUTLINED_FUNCTION_3_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t static ConfirmationViewUtils.makeYesNoConfirmationView(labelTemplatesProvider:sharedGlobals:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __int128 v10 = (void *)*v5;
  uint64_t v11 = *(void *)(*v5 + 232);
  uint64_t v12 = *v5;
  swift_task_dealloc(v11);
  if (v4) {
    return (*(uint64_t (**)(void))(v12 + 8))();
  }
  v10[30] = a4;
  v10[31] = a3;
  _BYTE v10[32] = a2;
  v10[33] = a1;
  return OUTLINED_FUNCTION_4_0();
}

uint64_t static ConfirmationViewUtils.makeYesNoConfirmationView(labelTemplatesProvider:sharedGlobals:)( uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 280);
  *(void *)(*v2 + 288) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    uint64_t v6 = static ConfirmationViewUtils.makeYesNoConfirmationView(labelTemplatesProvider:sharedGlobals:);
  }

  else
  {
    swift_release(*(void *)(v4 + 272));
    *(void *)(v4 + 296) = a1;
    uint64_t v6 = static ConfirmationViewUtils.makeYesNoConfirmationView(labelTemplatesProvider:sharedGlobals:);
  }

  return swift_task_switch(v6, 0LL, 0LL);
}

void *outlined retain of ConfirmationViewTemplate(void *a1)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[5];
  uint64_t v5 = a1[6];
  uint64_t v6 = a1[8];
  uint64_t v7 = a1[10];
  uint64_t v8 = a1[12];
  uint64_t v9 = a1[13];
  uint64_t v10 = a1[15];
  uint64_t v12 = a1[17];
  swift_bridgeObjectRetain(a1[19]);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_unknownObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  swift_unknownObjectRetain(v9);
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v12);
  return a1;
}

uint64_t specialized IdiomSensitiveViewBuilding.makeViews(utteranceViews:)(uint64_t a1)
{
  *(void *)(v2 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a1;
  *(void *)(v2 + ++*(void *)(v0 + 16) = v1;
  return swift_task_switch(specialized IdiomSensitiveViewBuilding.makeViews(utteranceViews:), 0LL, 0LL);
}

uint64_t specialized IdiomSensitiveViewBuilding.makeViews(utteranceViews:)()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = swift_task_alloc(32LL);
  v0[5] = v2;
  *(void *)(v2 + ++*(void *)(v0 + 16) = v0 + 2;
  *(void *)(v2 + 24) = v1;
  uint64_t v3 = (void *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  v0[6] = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SAAceView]);
  *uint64_t v3 = v0;
  v3[1] = specialized IdiomSensitiveViewBuilding.makeViews(utteranceViews:);
  return withCheckedThrowingContinuation<A>(isolation:function:_:)( v0 + 3,  0LL,  0LL,  0xD00000000000001ALL,  0x8000000000350C90LL,  partial apply for specialized closure #1 in IdiomSensitiveViewBuilding.makeViews(utteranceViews:),  v2,  v4);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 48);
  *(void *)(*v1 + 56) = v0;
  swift_task_dealloc(v3);
  if (!v0) {
    swift_task_dealloc(*(void *)(v2 + 40));
  }
  return OUTLINED_FUNCTION_4_0();
}

{
  uint64_t v0;
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 24));
}

{
  uint64_t v0;
  swift_task_dealloc(*(void *)(v0 + 40));
  return OUTLINED_FUNCTION_3_0(*(uint64_t (**)(void))(v0 + 8));
}

ValueMetadata *type metadata accessor for ConfirmationViewUtils()
{
  return &type metadata for ConfirmationViewUtils;
}

uint64_t specialized closure #1 in IdiomSensitiveViewBuilding.makeViews(utteranceViews:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<[SAAceView], Error>);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))( (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL),  a1,  v5);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = (v8 + 16) & ~v8;
  uint64_t v10 = swift_allocObject(&unk_419920, v9 + v7, v8 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))( v10 + v9,  (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL),  v5);
  specialized IdiomSensitiveViewBuilder.makeViews(utteranceViews:_:)( a3,  (uint64_t)partial apply for closure #1 in closure #3 in ParticipantOutputProvider.makeContactDisambiguationOutput(app:intent:intentResolutionResult:disambiguationList:),  v10);
  return swift_release(v10);
}

uint64_t specialized closure #1 in IdiomSensitiveViewBuilding.makeViews(utteranceViews:)( uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return specialized closure #1 in IdiomSensitiveViewBuilding.makeViews(utteranceViews:)(a1, *a2, a3);
}

uint64_t partial apply for specialized closure #1 in IdiomSensitiveViewBuilding.makeViews(utteranceViews:)( uint64_t a1)
{
  return specialized closure #1 in IdiomSensitiveViewBuilding.makeViews(utteranceViews:)( a1,  *(uint64_t **)(v1 + 16),  *(void *)(v1 + 24));
}

uint64_t sub_307214()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<[SAAceView], Error>);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void *static PicsDisambiguationBuilder.makeMixedRichCardSectionDisambiguationSnippetPhone(disambiguationItems:deviceIsLocked:sharedGlobals:persons:imageSize:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = dispatch thunk of static SiriKitDisambiguationItem.allowedItems(disambiguationItems:deviceLockedForDisambiguation:)( a1,  a2);
  uint64_t v9 = static PicsDisambiguationBuilder.mixedCardSectionsFromDetailedSelectionItems(disambiguationItems:deviceIsLocked:sharedGlobals:persons:imageSize:)( v8,  a2,  a3,  a4);
  uint64_t v11 = v10;
  OUTLINED_FUNCTION_62();
  type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for SACardSnippet,  &OBJC_CLASS___SACardSnippet_ptr);
  uint64_t v12 = (void *)static SACardSnippet.makeFromCardSections(cardSections:shouldGenerateAceId:)(v9, 1LL);
  OUTLINED_FUNCTION_39();
  outlined bridged method (mbnn) of @objc SACardSnippet.referencedCommands.setter(v11, v12);
  return v12;
}

void _sSTsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs12Zip2SequenceVySaySo8INPersonCGSay11SiriKitFlow0gH18DisambiguationItemCGG_So13SFCardSectionCs5NeverOTg505_sSo8f3C11gh9Flow0bC18jk5CSo13lm17CIgggo_AB_AEtAGs5N11OIegnrzr_TRAimQIgggo_Tf1cn_n( uint64_t a1, uint64_t a2, uint64_t (*a3)(void *, uint64_t))
{
  unint64_t v38 = (unint64_t)a1 >> 62;
  uint64_t v5 = *(void **)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8LL));
  while (1)
  {
    unint64_t v43 = (unint64_t)a2 >> 62;
    if ((unint64_t)a2 >> 62)
    {
      if (a2 < 0) {
        uint64_t v34 = a2;
      }
      else {
        uint64_t v34 = a2 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(a2);
      uint64_t v6 = _CocoaArrayWrapper.endIndex.getter(v34);
      swift_bridgeObjectRelease(a2);
    }

    else
    {
      uint64_t v6 = *(void *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFF8LL));
    }

    else {
      uint64_t v7 = v6;
    }
    specialized ContiguousArray.reserveCapacity(_:)(v7);
    if (v7 < 0)
    {
      __break(1u);
LABEL_84:

      __break(1u);
      return;
    }

    if (!v7) {
      break;
    }
    if (v38)
    {
      uint64_t v35 = a1 & 0xFFFFFFFFFFFFFF8LL;
      if (a1 < 0) {
        uint64_t v10 = a1;
      }
      else {
        uint64_t v10 = a1 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain_n(a1, 2LL);
      swift_bridgeObjectRetain(a2);
      uint64_t v39 = _CocoaArrayWrapper.endIndex.getter(v10);
      swift_bridgeObjectRelease(a1);
    }

    else
    {
      uint64_t v35 = a1 & 0xFFFFFFFFFFFFFF8LL;
      uint64_t v39 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8LL));
      swift_bridgeObjectRetain(a1);
      swift_bridgeObjectRetain(a2);
    }

    unint64_t v11 = 0LL;
    unint64_t v44 = a1 & 0xC000000000000001LL;
    uint64_t v9 = a2 & 0xFFFFFFFFFFFFFF8LL;
    if (a2 < 0) {
      uint64_t v12 = a2;
    }
    else {
      uint64_t v12 = a2 & 0xFFFFFFFFFFFFFF8LL;
    }
    uint64_t v36 = v12;
    unint64_t v42 = a2 & 0xC000000000000001LL;
    while (v7 != v11)
    {
      if (v39 == v11) {
        goto LABEL_67;
      }
      if (v44)
      {
        id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v11, a1);
      }

      else
      {
        if (v11 >= *(void *)(v35 + 16)) {
          goto LABEL_74;
        }
        id v13 = *(id *)(a1 + 8 * v11 + 32);
      }

      uint64_t v5 = v13;
      if (v43)
      {
        swift_bridgeObjectRetain(a2);
        uint64_t v14 = _CocoaArrayWrapper.endIndex.getter(v36);
        swift_bridgeObjectRelease(a2);
      }

      else
      {
        uint64_t v14 = *(void *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFFF8LL));
      }

      if (v11 == v14) {
        goto LABEL_84;
      }
      if (v42)
      {
        uint64_t v15 = specialized _ArrayBuffer._getElementSlowPath(_:)(v11, a2);
      }

      else
      {
        uint64_t v15 = *(void *)(a2 + 8 * v11 + 32);
        swift_retain(v15);
      }

      ++v11;
      uint64_t v16 = a3(v5, v15);
      swift_release(v15);

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v17);
      uint64_t v18 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v18);
      uint64_t v19 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v16);
      specialized ContiguousArray._endMutation()(v19);
      if (v7 == v11)
      {
        uint64_t v8 = v35;
        goto LABEL_37;
      }
    }

    __break(1u);
LABEL_67:
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
LABEL_74:
    __break(1u);
LABEL_75:
    if (a1 < 0) {
      uint64_t v33 = a1;
    }
    else {
      uint64_t v33 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a1);
    uint64_t v5 = (void *)_CocoaArrayWrapper.endIndex.getter(v33);
    swift_bridgeObjectRelease(a1);
  }

  uint64_t v8 = a1 & 0xFFFFFFFFFFFFFF8LL;
  unint64_t v44 = a1 & 0xC000000000000001LL;
  uint64_t v9 = a2 & 0xFFFFFFFFFFFFFF8LL;
  unint64_t v42 = a2 & 0xC000000000000001LL;
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRetain(a2);
LABEL_37:
  if (a1 < 0) {
    uint64_t v20 = a1;
  }
  else {
    uint64_t v20 = v8;
  }
  uint64_t v40 = v20;
  if (a2 < 0) {
    uint64_t v21 = a2;
  }
  else {
    uint64_t v21 = v9;
  }
  uint64_t v37 = v21;
  for (uint64_t i = v7 + 4; ; ++i)
  {
    if (v38)
    {
      swift_bridgeObjectRetain(a1);
      uint64_t v23 = _CocoaArrayWrapper.endIndex.getter(v40);
      swift_bridgeObjectRelease(a1);
    }

    else
    {
      uint64_t v23 = *(void *)(v8 + 16);
    }

    unint64_t v24 = i - 4;
    if (i - 4 == v23)
    {
      swift_bridgeObjectRelease(a2);
      swift_bridgeObjectRelease(a1);
      return;
    }

    if (v44)
    {
      id v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, a1);
    }

    else
    {
      if ((v24 & 0x8000000000000000LL) != 0) {
        goto LABEL_69;
      }
      if (v24 >= *(void *)(v8 + 16)) {
        goto LABEL_70;
      }
      id v25 = *(id *)(a1 + 8 * i);
    }

    uint64_t v26 = v25;
    if (__OFADD__(v24, 1LL)) {
      goto LABEL_71;
    }
    if (v43)
    {
      swift_bridgeObjectRetain(a2);
      uint64_t v27 = _CocoaArrayWrapper.endIndex.getter(v37);
      swift_bridgeObjectRelease(a2);
    }

    else
    {
      uint64_t v27 = *(void *)(v9 + 16);
    }

    if (v24 == v27) {
      break;
    }
    if (v42)
    {
      uint64_t v28 = specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, a2);
    }

    else
    {
      if ((v24 & 0x8000000000000000LL) != 0) {
        goto LABEL_72;
      }
      if (v24 >= *(void *)(v9 + 16)) {
        goto LABEL_73;
      }
      uint64_t v28 = *(void *)(a2 + 8 * i);
      swift_retain(v28);
    }

    uint64_t v29 = a3(v26, v28);
    swift_release(v28);

    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v30);
    uint64_t v31 = _swiftEmptyArrayStorage[2];
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v31);
    uint64_t v32 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v31, v29);
    specialized ContiguousArray._endMutation()(v32);
  }

  swift_bridgeObjectRelease(a2);
  swift_bridgeObjectRelease(a1);
}

uint64_t static PicsDisambiguationBuilder.mixedCardSectionsFromDetailedSelectionItems(disambiguationItems:deviceIsLocked:sharedGlobals:persons:imageSize:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_62();
  if (!((unint64_t)v7 >> 62))
  {
    uint64_t v8 = *(void *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFF8LL));
    swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_3;
    }
LABEL_11:
    OUTLINED_FUNCTION_39();
    return v7;
  }

  if (v7 < 0) {
    uint64_t v13 = v7;
  }
  else {
    uint64_t v13 = v7 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = _CocoaArrayWrapper.endIndex.getter(v13);
  if (!v8) {
    goto LABEL_11;
  }
LABEL_3:
  BOOL v9 = __OFSUB__(v8, 1LL);
  uint64_t v10 = v8 - 1;
  if (v9)
  {
    __break(1u);
    goto LABEL_14;
  }

  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(v10, (v7 & 0xC000000000000001LL) == 0, v7);
  if ((v7 & 0xC000000000000001LL) != 0)
  {
LABEL_14:
    id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v7);
    goto LABEL_6;
  }

  id v11 = *(id *)(v7 + 8 * v10 + 32);
LABEL_6:
  uint64_t v12 = v11;
  OUTLINED_FUNCTION_39();
  [v12 setSeparatorStyle:1];

  return v7;
}

id closure #1 in static PicsDisambiguationBuilder.mixedCardSectionsFromDetailedSelectionItems(disambiguationItems:deviceIsLocked:sharedGlobals:persons:imageSize:)( void *a1, uint64_t a2, char a3, uint64_t a4, void *a5, void *a6)
{
  uint64_t v8 = ((uint64_t (*)(void))dispatch thunk of SiriKitDisambiguationItem.getFirstComponent())();
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v58 = dispatch thunk of SiriKitDisambiguationItemComponent.toDisplayString(deviceLocked:)(a3 & 1);
    unint64_t v59 = v10;
    uint64_t v8 = swift_release(v9);
  }

  else
  {
    uint64_t v58 = 0LL;
    unint64_t v59 = 0xE000000000000000LL;
  }

  uint64_t v11 = dispatch thunk of SiriKitDisambiguationItem.getFirstComponent()(v8);
  if (v11)
  {
    uint64_t v12 = v11;
    char v13 = SiriKitDisambiguationItemComponent.printBlue.getter();
    uint64_t v11 = swift_release(v12);
  }

  else
  {
    char v13 = 0;
  }

  uint64_t v61 = a1;
  uint64_t v14 = dispatch thunk of SiriKitDisambiguationItem.getSecondComponent()(v11);
  if (v14)
  {
    uint64_t v15 = v14;
    uint64_t v16 = dispatch thunk of SiriKitDisambiguationItemComponent.toDisplayString(deviceLocked:)(a3 & 1);
    uint64_t v18 = v17;
    uint64_t v14 = swift_release(v15);
  }

  else
  {
    uint64_t v16 = 0LL;
    uint64_t v18 = 0LL;
  }

  uint64_t v19 = dispatch thunk of SiriKitDisambiguationItem.getThirdComponent()(v14);
  if (v19)
  {
    uint64_t v20 = v19;
    uint64_t v21 = dispatch thunk of SiriKitDisambiguationItemComponent.toDisplayString(deviceLocked:)(a3 & 1);
    uint64_t v23 = v22;
    uint64_t v19 = swift_release(v20);
  }

  else
  {
    uint64_t v21 = 0LL;
    uint64_t v23 = 0LL;
  }

  uint64_t v24 = SiriKitDisambiguationItem.monogramLetters.getter(v19);
  uint64_t v26 = v25;
  uint64_t v27 = SiriKitDisambiguationItem.contactIdentifiers.getter();
  uint64_t v28 = (void *)SiriKitDisambiguationItem.displayImage.getter();
  char v29 = v13 & 1;
  HIBYTE(v5__swift_destroy_boxed_opaque_existential_1(v0 + 5) = v29;
  LOBYTE(v5__swift_destroy_boxed_opaque_existential_1(v0 + 5) = 1;
  uint64_t v30 = (void *)static CasinoFactory.makeRowCardSection(possibleTitle:imageSize:possibleLeadingSubtitle:possibleTrailingSubtitle:possibleImage:possibleMonogramLetters:possibleContactIdentifiers:possibleImageUri:maxLines:shouldCropToCircle:withBlueTitle:)( v58,  v59,  a4,  v16,  v18,  v21,  v23,  v28,  v24,  v26,  v27,  0LL,  0LL,  1LL,  v55);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  id v31 = v30;
  if (INPerson.isProvidedByPlus.getter())
  {
    static PicsDisambiguationBuilder.tryToAttachPicsSubtitle(person:cardSection:needsBlueTitle:maxLines:sharedGlobals:)( v61,  v31,  v29,  1LL,  a5);
  }

  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v32 = type metadata accessor for Logger(0LL);
    uint64_t v33 = __swift_project_value_buffer(v32, (uint64_t)static Logger.siriPhone);
    uint64_t v34 = (os_log_s *)Logger.logObject.getter(v33);
    os_log_type_t v36 = static os_log_type_t.debug.getter(v34, v35);
    if (os_log_type_enabled(v34, v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v37 = 0;
      _os_log_impl( &dword_0,  v34,  v36,  "#DefaultDisambiguationBuilder current person isn't provided by PLUS use regular SFCardSection",  v37,  2u);
      swift_slowDealloc(v37, -1LL, -1LL);
    }
  }

  uint64_t v38 = SiriKitDisambiguationItem.directInvocation.getter();
  if (v38)
  {
    uint64_t v39 = (void *)v38;
    static Device.current.getter(v62);
    id v40 = static PicsDisambiguationBuilder.makeStartRequestFromDirectInvocation(directInvocationPayload:deviceState:)( (uint64_t)v39,  v62);

    __swift_destroy_boxed_opaque_existential_1(v62);
    uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v42 = swift_allocObject(v41, 40LL, 7LL);
    *(_OWORD *)(v42 + ++*(void *)(v0 + 16) = xmmword_31FE60;
    uint64_t v43 = swift_unknownObjectRetain(v40);
    uint64_t v44 = static CasinoFactory.makeReferentialAbstractCommand(originalCommand:)(v43);
    *(void *)(v42 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v44;
    v62[0] = v42;
    specialized Array._endMutation()(v44, v45, v46, v47);
    outlined bridged method (mbnn) of @objc SFCardSection.commands.setter(v62[0], v31);

    uint64_t v48 = swift_unknownObjectRetain(v40);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v48);
    uint64_t v49 = *(void *)((char *)&dword_10 + (*a6 & 0xFFFFFFFFFFFFF8LL));
    specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v49);
    uint64_t v50 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v49, v40);
    specialized Array._endMutation()(v50, v51, v52, v53);
    swift_unknownObjectRelease_n(v40, 2LL);
  }

  else
  {
  }

  return v31;
}

void static PicsDisambiguationBuilder.tryToAttachPicsSubtitle(person:cardSection:needsBlueTitle:maxLines:sharedGlobals:)( void *a1, void *a2, char a3, uint64_t a4, void *a5)
{
  uint64_t v10 = type metadata accessor for Locale(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin();
  char v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = objc_opt_self(&OBJC_CLASS___SFRowCardSection);
  uint64_t v15 = swift_dynamicCastObjCClass(a2, v14);
  uint64_t v16 = (void *)&unk_42A000;
  uint64_t v17 = (void *)&unk_31F000;
  if (v15)
  {
    uint64_t v18 = (void *)v15;
    uint64_t v55 = a4;
    uint64_t v57 = a1;
    uint64_t v19 = a5[3];
    uint64_t v20 = a5[4];
    __swift_project_boxed_opaque_existential_1(a5, v19);
    uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(v20 + 176);
    id v56 = a2;
    uint64_t v22 = (void *)v21(v19, v20);
    type metadata accessor for PhoneCallFlowDelegatePlugin();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v24 = [(id)objc_opt_self(NSBundle) bundleForClass:ObjCClassFromMetadata];
    uint64_t v25 = static Locale.current.getter();
    uint64_t v26 = Locale.identifier.getter(v25);
    uint64_t v28 = v27;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    uint64_t v60 = v26;
    uint64_t v61 = v28;
    v59[0] = 45LL;
    v59[1] = 0xE100000000000000LL;
    v58[0] = 95LL;
    v58[1] = 0xE100000000000000LL;
    lazy protocol witness table accessor for type String and conformance String();
    uint64_t v29 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( v59,  v58,  0LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String);
    uint64_t v31 = v30;
    swift_bridgeObjectRelease();
    outlined bridged method (mbbnbnb) of @objc AFLocalization.localizedString(forKey:table:bundle:languageCode:)( 0xD000000000000011LL,  0x8000000000349350LL,  1396918608LL,  0xE400000000000000LL,  (uint64_t)v24,  v29,  v31,  v22);
    uint64_t v33 = v32;
    uint64_t v35 = v34;

    a1 = v57;
    uint64_t v17 = &unk_31F000;
    if (v35)
    {
      if ((a3 & 1) != 0) {
        uint64_t v36 = 4LL;
      }
      else {
        uint64_t v36 = 0LL;
      }
      uint64_t v37 = (void *)static CasinoFactory.makeRichText(text:bold:maxLines:textColor:)(v33, v35, 0LL, v55, v36);
      swift_bridgeObjectRelease();
      [v18 setLeadingSubtitle:v37];

      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v38 = type metadata accessor for Logger(0LL);
      __swift_project_value_buffer(v38, (uint64_t)static Logger.siriPhone);
      id v39 = a1;
      id v40 = (os_log_s *)Logger.logObject.getter(v39);
      os_log_type_t v42 = static os_log_type_t.debug.getter(v40, v41);
      if (os_log_type_enabled(v40, v42))
      {
        uint64_t v43 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v44 = (void *)swift_slowAlloc(8LL, -1LL);
        *(_DWORD *)uint64_t v43 = 138412290;
        uint64_t v60 = (uint64_t)v39;
        id v45 = v39;
        a1 = v57;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61, v43 + 4);
        void *v44 = v39;

        _os_log_impl( &dword_0,  v40,  v42,  "#DefaultDisambiguationBuilder use PICS row section for person: %@ ",  v43,  0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
        swift_arrayDestroy(v44, 1LL);
        swift_slowDealloc(v44, -1LL, -1LL);
        swift_slowDealloc(v43, -1LL, -1LL);
      }

      else
      {

        id v40 = (os_log_s *)v39;
      }
    }

    uint64_t v16 = &unk_42A000;
  }

  if (v16[107] != -1LL) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v46 = type metadata accessor for Logger(0LL);
  __swift_project_value_buffer(v46, (uint64_t)static Logger.siriPhone);
  id v47 = a1;
  uint64_t v48 = (os_log_s *)Logger.logObject.getter(v47);
  os_log_type_t v50 = static os_log_type_t.debug.getter(v48, v49);
  if (os_log_type_enabled(v48, v50))
  {
    uint64_t v51 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v52 = (void *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v51 = v17[303];
    uint64_t v60 = (uint64_t)v47;
    id v53 = v47;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61, v51 + 4);
    *uint64_t v52 = v47;

    _os_log_impl( &dword_0,  v48,  v50,  "#DefaultDisambiguationBuilder find PLUS flag but can't generate PICS row section for person:%@ ",  v51,  0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy(v52, 1LL);
    swift_slowDealloc(v52, -1LL, -1LL);
    swift_slowDealloc(v51, -1LL, -1LL);
  }

  else
  {

    uint64_t v48 = (os_log_s *)v47;
  }
}

id static PicsDisambiguationBuilder.makeStartRequestFromDirectInvocation(directInvocationPayload:deviceState:)( uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for InputOrigin(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = a2[3];
  uint64_t v9 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v8);
  uint64_t v10 = (void *)DeviceState.asInvocationContext.getter(v8, v9);
  uint64_t v11 = (*(uint64_t (**)(char *, void, uint64_t))(v5 + 104))( v7,  enum case for InputOrigin.dialogButtonTap(_:),  v4);
  InputOrigin.aceInputOrigin.getter(v11);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v10 setInputOrigin:v12];

  char v13 = (void *)objc_opt_self(&OBJC_CLASS___SKIDirectInvocation);
  id v14 = [v13 runSiriKitExecutorCommandWithContext:v10 payload:a1];
  id v15 = [v13 wrapCommandInStartLocalRequest:v14];

  return v15;
}

void outlined bridged method (mbnn) of @objc SACardSnippet.referencedCommands.setter(uint64_t a1, void *a2)
{
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  OUTLINED_FUNCTION_62();
  [a2 setReferencedCommands:isa];
}

ValueMetadata *type metadata accessor for PicsDisambiguationBuilder()
{
  return &type metadata for PicsDisambiguationBuilder;
}

id partial apply for closure #1 in static PicsDisambiguationBuilder.mixedCardSectionsFromDetailedSelectionItems(disambiguationItems:deviceIsLocked:sharedGlobals:persons:imageSize:)( void *a1, uint64_t a2)
{
  return closure #1 in static PicsDisambiguationBuilder.mixedCardSectionsFromDetailedSelectionItems(disambiguationItems:deviceIsLocked:sharedGlobals:persons:imageSize:)( a1,  a2,  *(_BYTE *)(v2 + 16),  *(void *)(v2 + 24),  *(void **)(v2 + 32),  *(void **)(v2 + 40));
}

void outlined bridged method (mbnn) of @objc SFCardSection.commands.setter(uint64_t a1, void *a2)
{
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [a2 setCommands:isa];
}

void *CallStateProvider.instance.unsafeMutableAddressor()
{
  if (one-time initialization token for instance != -1) {
    swift_once(&one-time initialization token for instance, one-time initialization function for instance);
  }
  return static CallStateProvider.instance;
}

uint64_t specialized CallStateProvider.onCallCenterQueue<A>(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v9 = *v2;
  uint64_t v5 = swift_allocObject(&unk_419A78, 32LL, 7LL);
  *(void *)(v5 + ++*(void *)(v0 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  uint64_t v6 = type metadata accessor for CNContactStore( 0LL,  &lazy cache variable for type metadata for TUCallCenter,  &OBJC_CLASS___TUCallCenter_ptr);
  id v7 = v9;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TUCall?);
  SPHCallCenter.onQueue<A>(_:)( partial apply for specialized thunk for @escaping @callee_guaranteed (@guaranteed TUCallCenter) -> (@out A),  v5,  v6);
  swift_release(v5);

  return v10;
}

{
  void **v2;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v9;
  uint64_t v10;
  uint64_t v9 = *v2;
  uint64_t v5 = swift_allocObject(&unk_419A50, 32LL, 7LL);
  *(void *)(v5 + ++*(void *)(v0 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  uint64_t v6 = type metadata accessor for CNContactStore( 0LL,  &lazy cache variable for type metadata for TUCallCenter,  &OBJC_CLASS___TUCallCenter_ptr);
  id v7 = v9;
  swift_retain();
  SPHCallCenter.onQueue<A>(_:)( partial apply for specialized thunk for @escaping @callee_guaranteed (@guaranteed TUCallCenter) -> (@out A),  v5,  v6);
  swift_release(v5);

  return v10;
}

void CallStateProvider.onCallCenterQueue<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v10 = *v3;
  id v7 = (void *)swift_allocObject(&unk_419968, 40LL, 7LL);
  v7[2] = a3;
  v7[3] = a1;
  v7[4] = a2;
  uint64_t v8 = type metadata accessor for CNContactStore( 0LL,  &lazy cache variable for type metadata for TUCallCenter,  &OBJC_CLASS___TUCallCenter_ptr);
  id v9 = v10;
  swift_retain();
  SPHCallCenter.onQueue<A>(_:)( partial apply for thunk for @escaping @callee_guaranteed (@guaranteed TUCallCenter) -> (@out A),  v7,  v8);
  swift_release(v7);
}

uint64_t CallStateProvider.init()@<X0>(void *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for OS_dispatch_queue.Attributes(0LL);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for DispatchQoS(0LL);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue,  &OBJC_CLASS___OS_dispatch_queue_ptr);
  static DispatchQoS.unspecified.getter();
  uint64_t v19 = _swiftEmptyArrayStorage;
  unint64_t v12 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes();
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  unint64_t v14 = lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v19, v13, v14, v6, v12);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))( v5,  enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:),  v2);
  id v15 = (void *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)( 0xD000000000000011LL,  0x8000000000340C40LL,  v11,  v8,  v5,  0LL);
  id v16 = [objc_allocWithZone(TUCallCenter) initWithQueue:v15];

  *a1 = v16;
  a1[4] = &type metadata for SPHTUBackedCallCapabilities;
  a1[5] = &protocol witness table for SPHTUBackedCallCapabilities;
  uint64_t result = type metadata accessor for SPHCallHandleFormatter();
  a1[6] = result;
  a1[7] = &protocol witness table for SPHCallHandleFormatter;
  return result;
}

uint64_t static CallStateProvider.instance.getter@<X0>(uint64_t a1@<X8>)
{
  if (one-time initialization token for instance != -1) {
    swift_once(&one-time initialization token for instance, one-time initialization function for instance);
  }
  return outlined init with copy of CallStateProvider((uint64_t)static CallStateProvider.instance, a1);
}

id CallStateProvider.callCenter.getter()
{
  return *v0;
}

uint64_t CallStateProvider.afCallStateSnapshot.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = static SiriEnvironment.root.getter();
  uint64_t v3 = SiriEnvironment.callState.getter();
  swift_release(v2);
  uint64_t result = type metadata accessor for CallStateEnvironmentProvider(0LL);
  a1[3] = result;
  a1[4] = (uint64_t)&protocol witness table for CallStateEnvironmentProvider;
  *a1 = v3;
  return result;
}

uint64_t CallStateProvider.currentCall.getter()
{
  return specialized CallStateProvider.onCallCenterQueue<A>(_:)( (uint64_t)closure #1 in CallStateProvider.currentCall.getter,  0LL);
}

id closure #1 in CallStateProvider.currentCall.getter@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id result = [a1 frontmostAudioOrVideoCall];
  *a2 = result;
  return result;
}

uint64_t CallStateProvider.currentAudioAndVideoCallCount.getter()
{
  return specialized CallStateProvider.onCallCenterQueue<A>(_:)( (uint64_t)closure #1 in CallStateProvider.currentAudioAndVideoCallCount.getter,  0LL);
}

id closure #1 in CallStateProvider.currentAudioAndVideoCallCount.getter@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id result = [a1 currentAudioAndVideoCallCount];
  *a2 = result;
  return result;
}

uint64_t CallStateProvider.callHandleFormatter.getter()
{
  return *(void *)(v0 + 48);
}

uint64_t sub_30895C()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@guaranteed TUCallCenter) -> (@out A)( void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 24))(*a1);
}

uint64_t protocol witness for CallStateProviding.afCallStateSnapshot.getter in conformance CallStateProvider@<X0>( uint64_t *a1@<X8>)
{
  return CallStateProvider.afCallStateSnapshot.getter(a1);
}

uint64_t assignWithCopy for CallStateProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  __swift_assign_boxed_opaque_existential_1((void *)(a1 + 8), (void *)(a2 + 8));
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for CallStateProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  __swift_destroy_boxed_opaque_existential_1((void *)(a1 + 8));
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  return a1;
}

ValueMetadata *type metadata accessor for CallStateProvider()
{
  return &type metadata for CallStateProvider;
}

uint64_t sub_308A80()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

void partial apply for specialized thunk for @escaping @callee_guaranteed (@guaranteed TUCallCenter) -> (@out A)( void *a1, uint64_t a2)
{
  void *v2 = v3;
  OUTLINED_FUNCTION_4();
}

unint64_t lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes()
{
  unint64_t result = lazy protocol witness table cache variable for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes;
  if (!lazy protocol witness table cache variable for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes)
  {
    uint64_t v1 = type metadata accessor for OS_dispatch_queue.Attributes(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for OS_dispatch_queue.Attributes, v1);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes);
  }

  return result;
}

void *OUTLINED_FUNCTION_0_115(void *a1, uint64_t a2, ...)
{
  return (*(void *(**)(uint64_t *__return_ptr, void))(v2 + 16))((uint64_t *)va, *a1);
}

uint64_t SharedGlobals.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for SiriKitContactResolver(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for ReferenceResolutionClient(0LL);
  uint64_t v8 = ReferenceResolutionClient.__allocating_init()();
  if (one-time initialization token for instance != -1) {
    swift_once(&one-time initialization token for instance, one-time initialization function for instance);
  }
  OUTLINED_FUNCTION_31_4(v41, &static PhoneCallFeatureFlags.instance);
  uint64_t v9 = OUTLINED_FUNCTION_102_0();
  uint64_t v10 = OUTLINED_FUNCTION_8_2(v9, 56LL);
  id v39 = &type metadata for PhoneCallFeatureFlags;
  id v40 = &protocol witness table for PhoneCallFeatureFlags;
  *(void *)&__int128 v38 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_419AA0, 192LL);
  OUTLINED_FUNCTION_31_4((void *)(v38 + 16), &static PhoneCallFeatureFlags.instance);
  outlined init with take of AppSelectionSignalComponent(&v38, v10 + 16);
  uint64_t v11 = type metadata accessor for NLTransformer();
  uint64_t v12 = OUTLINED_FUNCTION_8_2(v11, 160LL);
  outlined retain of PhoneCallFeatureFlags(v41);
  *a1 = specialized NLTransformer.init(referenceResolver:featureManager:)(v8, v10, v12);
  uint64_t v13 = type metadata accessor for CallNotificationContextProvider();
  uint64_t v14 = OUTLINED_FUNCTION_8_2(v13, 24LL);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DictionaryBackedCache<String, CallNotificationContextProvider.CallNotification>);
  OUTLINED_FUNCTION_8_2(v15, 56LL);
  *(void *)(v14 + ++*(void *)(v0 + 16) = specialized DictionaryBackedCache.init(timeToLiveInSeconds:capacity:nowDateProvider:)( 5LL,  (uint64_t)closure #1 in default argument 2 of DictionaryBackedCache.init(timeToLiveInSeconds:capacity:nowDateProvider:),  0LL,  30.0);
  a1[4] = v13;
  a1[5] = (uint64_t)&protocol witness table for CallNotificationContextProvider;
  a1[1] = v14;
  uint64_t v16 = type metadata accessor for ContactResolverConfigHashable(0LL);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [ContactQuery]);
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type ContactResolverConfigHashable and conformance ContactResolverConfigHashable,  type metadata accessor for ContactResolverConfigHashable,  (uint64_t)&protocol conformance descriptor for ContactResolverConfigHashable);
  uint64_t v19 = Dictionary.init(minimumCapacity:)(20LL, v16, v17, v18);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [ResolvedSiriKitContact]);
  unint64_t v21 = lazy protocol witness table accessor for type [ContactQuery] and conformance <A> [A]();
  uint64_t v22 = Dictionary.init(minimumCapacity:)(20LL, v17, v20, v21);
  SiriKitContactResolver.init()();
  uint64_t v23 = type metadata accessor for PhoneContactResolver();
  uint64_t v24 = OUTLINED_FUNCTION_8_2(v23, 72LL);
  id v39 = (ValueMetadata *)v4;
  id v40 = &protocol witness table for SiriKitContactResolver;
  uint64_t v25 = __swift_allocate_boxed_opaque_existential_1(&v38);
  (*(void (**)(void *, char *, uint64_t))(v5 + 16))(v25, v7, v4);
  *(void *)(v24 + ++*(void *)(v0 + 16) = v19;
  *(void *)(v24 + 24) = v22;
  outlined init with take of AppSelectionSignalComponent(&v38, v24 + 32);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  a1[9] = v23;
  a1[10] = (uint64_t)&protocol witness table for PhoneContactResolver;
  a1[6] = v24;
  type metadata accessor for AppResolverResult(0LL);
  OUTLINED_FUNCTION_5_109((uint64_t)v3);
  uint64_t v26 = type metadata accessor for AppSelectionState(0LL);
  uint64_t v27 = OUTLINED_FUNCTION_15_2(v26);
  uint64_t v28 = v27 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin17AppSelectionState_forcedDisambiguationShadowPrediction;
  OUTLINED_FUNCTION_5_109(v27 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin17AppSelectionState_forcedDisambiguationShadowPrediction);
  swift_beginAccess(v28, &v38, 33LL, 0LL);
  outlined assign with take of AppResolverResult?((uint64_t)v3, v28);
  swift_endAccess(&v38);
  a1[11] = v27;
  id v29 = [(id)objc_opt_self(AssistantSiriAnalytics) sharedAnalytics];
  id v30 = [v29 defaultMessageStream];

  uint64_t v31 = type metadata accessor for PhoneAppSelectionSignalsGatherer(0LL);
  OUTLINED_FUNCTION_15_2(v31);
  a1[12] = PhoneAppSelectionSignalsGatherer.init(messageStream:)((uint64_t)v30);
  uint64_t v32 = type metadata accessor for SharedConfirmationRepromptContext();
  uint64_t v33 = OUTLINED_FUNCTION_8_2(v32, 24LL);
  unint64_t v34 = lazy protocol witness table accessor for type SharedConfirmationRepromptContext.PromptType and conformance SharedConfirmationRepromptContext.PromptType();
  *(void *)(v33 + ++*(void *)(v0 + 16) = Dictionary.init(dictionaryLiteral:)( _swiftEmptyArrayStorage,  &type metadata for SharedConfirmationRepromptContext.PromptType,  &type metadata for Int,  v34);
  a1[13] = v33;
  uint64_t v35 = type metadata accessor for SharedNeedsValueContext();
  uint64_t result = OUTLINED_FUNCTION_8_2(v35, 24LL);
  *(void *)(result + ++*(void *)(v0 + 16) = &_swiftEmptySetSingleton;
  a1[14] = result;
  return result;
}

uint64_t sub_308F38()
{
  return swift_deallocObject(v0, 192LL, 7LL);
}

void specialized SharedGlobalsProviding.outputPublisher.getter(uint64_t *a1@<X8>)
{
  uint64_t v2 = static OutputPublisherFactory.makeOutputPublisher()(v8);
  static OutputPublisherFactory.makeOutputPublisherAsync()(v7, v2);
  uint64_t v3 = type metadata accessor for OutputPublisherWrapper();
  uint64_t v4 = swift_allocObject(v3, 96LL, 7LL);
  outlined init with take of AppSelectionSignalComponent(v8, v4 + 16);
  outlined init with take of AppSelectionSignalComponent(v7, v4 + 56);
  a1[3] = v3;
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type OutputPublisherWrapper and conformance OutputPublisherWrapper,  (uint64_t (*)(uint64_t))type metadata accessor for OutputPublisherWrapper,  (uint64_t)&protocol conformance descriptor for OutputPublisherWrapper);
  a1[4] = v5;
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type OutputPublisherWrapper and conformance OutputPublisherWrapper,  (uint64_t (*)(uint64_t))type metadata accessor for OutputPublisherWrapper,  (uint64_t)&protocol conformance descriptor for OutputPublisherWrapper);
  a1[5] = v6;
  *a1 = v4;
}

void SharedGlobalsProviding.outputPublisher.getter(uint64_t *a1@<X8>)
{
  uint64_t v2 = static OutputPublisherFactory.makeOutputPublisher()(v8);
  static OutputPublisherFactory.makeOutputPublisherAsync()(v7, v2);
  uint64_t v3 = type metadata accessor for OutputPublisherWrapper();
  uint64_t v4 = OUTLINED_FUNCTION_8_2(v3, 96LL);
  outlined init with take of AppSelectionSignalComponent(v8, v4 + 16);
  outlined init with take of AppSelectionSignalComponent(v7, v4 + 56);
  a1[3] = v3;
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type OutputPublisherWrapper and conformance OutputPublisherWrapper,  (uint64_t (*)(uint64_t))type metadata accessor for OutputPublisherWrapper,  (uint64_t)&protocol conformance descriptor for OutputPublisherWrapper);
  a1[4] = v5;
  lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type OutputPublisherWrapper and conformance OutputPublisherWrapper,  (uint64_t (*)(uint64_t))type metadata accessor for OutputPublisherWrapper,  (uint64_t)&protocol conformance descriptor for OutputPublisherWrapper);
  a1[5] = v6;
  *a1 = v4;
}

void SharedGlobalsProviding.flowFinder.getter(uint64_t *a1@<X8>)
{
}

void SharedGlobalsProviding.currentRequest.getter()
{
  uint64_t v0 = static SiriEnvironment.forCurrentTask.getter();
  if (v0)
  {
    uint64_t v1 = v0;
    SiriEnvironment.currentRequest.getter();
    swift_release(v1);
  }

  OUTLINED_FUNCTION_2();
}

uint64_t specialized SharedGlobalsProviding.patternFlowProvider.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v16;
  uint64_t v3 = v17;
  uint64_t v4 = __swift_project_boxed_opaque_existential_1(v15, v16);
  _OWORD v14[3] = v2;
  v14[4] = v3;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v14);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v2 - 8) + 16LL))(boxed_opaque_existential_1, v4, v2);
  uint64_t v6 = type metadata accessor for ResponseFactory(0LL);
  swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  v13[3] = v6;
  v13[4] = &protocol witness table for ResponseFactory;
  v13[0] = ResponseFactory.init()();
  uint64_t v7 = __swift_project_boxed_opaque_existential_1(v13, v6);
  v12[3] = v6;
  void v12[4] = &protocol witness table for ResponseFactory;
  uint64_t v8 = __swift_allocate_boxed_opaque_existential_1(v12);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16LL))(v8, v7, v6);
  uint64_t v9 = type metadata accessor for PatternFlowProvider(0LL);
  swift_allocObject(v9, *(unsigned int *)(v9 + 48), *(unsigned __int16 *)(v9 + 52));
  uint64_t v10 = PatternFlowProvider.init(outputPublisher:responseGenerator:)(v14, v12);
  __swift_destroy_boxed_opaque_existential_1(v13);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1(v15);
  a1[3] = v9;
  a1[4] = (uint64_t)&protocol witness table for PatternFlowProvider;
  *a1 = v10;
  return result;
}

uint64_t SharedGlobalsProviding.patternFlowProvider.getter@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  (*(void (**)(void *__return_ptr))(a2 + 16))(v22);
  uint64_t v6 = v23;
  uint64_t v7 = v24;
  uint64_t v8 = __swift_project_boxed_opaque_existential_1(v22, v23);
  v21[3] = v6;
  v21[4] = v7;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v21);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16LL))(boxed_opaque_existential_1, v8, v6);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a2 + 136))(v18, a1, a2);
  uint64_t v10 = v19;
  uint64_t v11 = v20;
  uint64_t v12 = __swift_project_boxed_opaque_existential_1(v18, v19);
  void v17[3] = v10;
  v17[4] = *(void *)(v11 + 8);
  uint64_t v13 = __swift_allocate_boxed_opaque_existential_1(v17);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16LL))(v13, v12, v10);
  uint64_t v14 = type metadata accessor for PatternFlowProvider(0LL);
  OUTLINED_FUNCTION_15_2(v14);
  uint64_t v15 = PatternFlowProvider.init(outputPublisher:responseGenerator:)(v21, v17);
  __swift_destroy_boxed_opaque_existential_1(v18);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1(v22);
  a3[3] = v14;
  a3[4] = (uint64_t)&protocol witness table for PatternFlowProvider;
  *a3 = v15;
  return result;
}

uint64_t specialized SharedGlobalsProviding.responseGenerator.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for ResponseFactory(0LL);
  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  uint64_t result = ResponseFactory.init()();
  a1[3] = v2;
  a1[4] = (uint64_t)&protocol witness table for ResponseFactory;
  *a1 = result;
  return result;
}

void SharedGlobalsProviding.responseGenerator.getter(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for ResponseFactory(0LL);
  OUTLINED_FUNCTION_15_2(v2);
  uint64_t v3 = ResponseFactory.init()();
  a1[3] = v2;
  a1[4] = (uint64_t)&protocol witness table for ResponseFactory;
  *a1 = v3;
  OUTLINED_FUNCTION_6();
}

uint64_t SharedGlobalsProviding.skTransformer.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  a3[3] = a1;
  a3[4] = a2;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a3);
  return (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16LL))( boxed_opaque_existential_1,  v3,  a1);
}

void SharedGlobalsProviding.skIntentResolver.getter(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = &type metadata for PhoneIntentResolver;
  *(void *)(a1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = &protocol witness table for PhoneIntentResolver;
}

void SharedGlobalsProviding.skFlowFactory.getter(uint64_t *a1@<X8>)
{
}

uint64_t SharedGlobalsProviding.callStateProvider.getter@<X0>(uint64_t *a1@<X8>)
{
  if (one-time initialization token for instance != -1) {
    swift_once(&one-time initialization token for instance, one-time initialization function for instance);
  }
  a1[3] = (uint64_t)&type metadata for CallStateProvider;
  a1[4] = (uint64_t)&protocol witness table for CallStateProvider;
  uint64_t v2 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_419AC8, 80LL);
  *a1 = v2;
  return outlined init with copy of CallStateProvider((uint64_t)static CallStateProvider.instance, v2 + 16);
}

uint64_t SharedGlobalsProviding.featureManager.getter()
{
  if (one-time initialization token for instance != -1) {
    swift_once(&one-time initialization token for instance, one-time initialization function for instance);
  }
  OUTLINED_FUNCTION_31_4(v6, &static PhoneCallFeatureFlags.instance);
  uint64_t v0 = OUTLINED_FUNCTION_102_0();
  uint64_t v1 = OUTLINED_FUNCTION_8_2(v0, 56LL);
  uint64_t v4 = &type metadata for PhoneCallFeatureFlags;
  uint64_t v5 = &protocol witness table for PhoneCallFeatureFlags;
  *(void *)&__int128 v3 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_419AA0, 192LL);
  OUTLINED_FUNCTION_31_4((void *)(v3 + 16), &static PhoneCallFeatureFlags.instance);
  outlined init with take of AppSelectionSignalComponent(&v3, v1 + 16);
  outlined retain of PhoneCallFeatureFlags(v6);
  return v1;
}

uint64_t specialized SharedGlobalsProviding.annotatedAppFinder.getter@<X0>(void *a1@<X8>)
{
  if (one-time initialization token for instance != -1) {
    swift_once(&one-time initialization token for instance, one-time initialization function for instance);
  }
  memcpy(__dst, &static PhoneCallFeatureFlags.instance, sizeof(__dst));
  uint64_t v2 = type metadata accessor for PhoneCallFeatureManager();
  uint64_t v3 = swift_allocObject(v2, 56LL, 7LL);
  uint64_t v8 = &type metadata for PhoneCallFeatureFlags;
  uint64_t v9 = &protocol witness table for PhoneCallFeatureFlags;
  *(void *)&__int128 v7 = swift_allocObject(&unk_419AA0, 192LL, 7LL);
  memcpy((void *)(v7 + 16), &static PhoneCallFeatureFlags.instance, 0xB0uLL);
  outlined init with take of AppSelectionSignalComponent(&v7, v3 + 16);
  outlined retain of PhoneCallFeatureFlags(__dst);
  if (one-time initialization token for instance != -1) {
    swift_once(&one-time initialization token for instance, one-time initialization function for instance);
  }
  uint64_t v4 = static ThirdPartyAnnotatedAppStore.instance;
  a1[3] = &type metadata for AnnotatedAppFinder;
  a1[4] = &protocol witness table for AnnotatedAppFinder;
  uint64_t v5 = (void *)swift_allocObject(&unk_419AF0, 80LL, 7LL);
  *a1 = v5;
  v5[8] = type metadata accessor for ThirdPartyAnnotatedAppStore();
  v5[9] = &protocol witness table for ThirdPartyAnnotatedAppStore;
  __int128 v5[2] = closure #1 in variable initialization expression of static FirstPartyAnnotatedAppStore.defaultAppExistsPredicate;
  void v5[3] = 0LL;
  void v5[4] = v3;
  v5[5] = v4;
  return swift_retain();
}

uint64_t SharedGlobalsProviding.annotatedAppFinder.getter@<X0>(void *a1@<X8>)
{
  if (one-time initialization token for instance != -1) {
    swift_once(&one-time initialization token for instance, one-time initialization function for instance);
  }
  OUTLINED_FUNCTION_31_4(v10, &static PhoneCallFeatureFlags.instance);
  uint64_t v2 = OUTLINED_FUNCTION_102_0();
  uint64_t v3 = OUTLINED_FUNCTION_8_2(v2, 56LL);
  uint64_t v8 = &type metadata for PhoneCallFeatureFlags;
  uint64_t v9 = &protocol witness table for PhoneCallFeatureFlags;
  *(void *)&__int128 v7 = OUTLINED_FUNCTION_8_2((uint64_t)&unk_419AA0, 192LL);
  OUTLINED_FUNCTION_31_4((void *)(v7 + 16), &static PhoneCallFeatureFlags.instance);
  outlined init with take of AppSelectionSignalComponent(&v7, v3 + 16);
  outlined retain of PhoneCallFeatureFlags(v10);
  if (one-time initialization token for instance != -1) {
    swift_once(&one-time initialization token for instance, one-time initialization function for instance);
  }
  uint64_t v4 = static ThirdPartyAnnotatedAppStore.instance;
  a1[3] = &type metadata for AnnotatedAppFinder;
  a1[4] = &protocol witness table for AnnotatedAppFinder;
  uint64_t v5 = (void *)OUTLINED_FUNCTION_8_2((uint64_t)&unk_419AF0, 80LL);
  *a1 = v5;
  v5[8] = type metadata accessor for ThirdPartyAnnotatedAppStore();
  v5[9] = &protocol witness table for ThirdPartyAnnotatedAppStore;
  __int128 v5[2] = closure #1 in variable initialization expression of static FirstPartyAnnotatedAppStore.defaultAppExistsPredicate;
  void v5[3] = 0LL;
  void v5[4] = v3;
  v5[5] = v4;
  return swift_retain();
}

id SharedGlobalsProviding.afLocalization.getter()
{
  id result = [(id)objc_opt_self(AFLocalization) sharedInstance];
  if (!result) {
    __break(1u);
  }
  return result;
}

void SharedGlobalsProviding.assistantProperties.getter(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = &type metadata for AssistantProperties;
  *(void *)(a1 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = &protocol witness table for AssistantProperties;
}

uint64_t specialized SharedGlobalsProviding.userPersonaCollector.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v4 = type metadata accessor for AppSelectionUserPersonaCollector();
  uint64_t result = swift_allocObject(v4, 24LL, 7LL);
  *(void *)(result + ++*(void *)(v0 + 16) = v3;
  a1[3] = v4;
  a1[4] = (uint64_t)&protocol witness table for AppSelectionUserPersonaCollector;
  *a1 = result;
  return result;
}

void SharedGlobalsProviding.userPersonaCollector.getter(uint64_t *a1@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v4 = type metadata accessor for AppSelectionUserPersonaCollector();
  uint64_t v5 = OUTLINED_FUNCTION_8_2(v4, 24LL);
  *(void *)(v5 + ++*(void *)(v0 + 16) = v3;
  a1[3] = v4;
  a1[4] = (uint64_t)&protocol witness table for AppSelectionUserPersonaCollector;
  *a1 = v5;
  OUTLINED_FUNCTION_6();
}

void SharedGlobalsProviding.messageStore.getter(uint64_t *a1@<X8>)
{
}

uint64_t SharedGlobalsProviding.referenceResolver.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for ReferenceResolutionClient(0LL);
  uint64_t result = ReferenceResolutionClient.__allocating_init()();
  a1[3] = v2;
  a1[4] = (uint64_t)&protocol witness table for ReferenceResolutionClient;
  *a1 = result;
  return result;
}

void protocol witness for SharedGlobalsProviding.flowFinder.getter in conformance SharedGlobals( uint64_t *a1@<X8>)
{
}

void protocol witness for SharedGlobalsProviding.appInfoBuilder.getter in conformance SharedGlobals( uint64_t *a1@<X8>)
{
}

void protocol witness for SharedGlobalsProviding.messageStore.getter in conformance SharedGlobals( uint64_t *a1@<X8>)
{
}

void specialized PhoneCallControlNLTransformer.init(cacheProvider:)(uint64_t a1, void *a2)
{
  a2[5] = type metadata accessor for SingleIntentCacheProvider();
  a2[6] = &protocol witness table for SingleIntentCacheProvider;
  a2[2] = a1;
  a2[7] = type metadata accessor for PhoneCallControlNLTransformer();
  a2[8] = &outlined read-only object #0 of specialized PhoneCallControlNLTransformer.init(cacheProvider:);
  a2[9] = 0LL;
  a2[10] = 0LL;
  OUTLINED_FUNCTION_2();
}

uint64_t specialized NLTransformer.init(referenceResolver:featureManager:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  v33[3] = type metadata accessor for ReferenceResolutionClient(0LL);
  v33[4] = &protocol witness table for ReferenceResolutionClient;
  v33[0] = a1;
  *(void *)(a3 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = type metadata accessor for NLTransformer();
  *(void *)(a3 + 40) = &outlined read-only object #0 of specialized NLTransformer.init(referenceResolver:featureManager:);
  *(void *)(a3 + 48) = 0LL;
  *(void *)(a3 + 56) = 0LL;
  *(void *)(a3 + 64) = _swiftEmptyArrayStorage;
  *(_OWORD *)(a3 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0u;
  *(_OWORD *)(a3 + 88) = 0u;
  *(_OWORD *)(a3 + outlined init with copy of SharedGlobalsProviding(v0, v1 - 104) = xmmword_31D8A0;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v6 = type metadata accessor for Logger(0LL);
  __swift_project_value_buffer(v6, (uint64_t)static Logger.siriPhone);
  uint64_t v7 = swift_retain_n(a3, 2LL);
  uint64_t v8 = (os_log_s *)Logger.logObject.getter(v7);
  os_log_type_t v10 = static os_log_type_t.debug.getter(v8, v9);
  if (os_log_type_enabled(v8, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v29 = swift_slowAlloc(32LL, -1LL);
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v27 = v11 + 4;
    buf = v11;
    uint64_t v12 = a2;
    uint64_t v13 = *(void *)(a3 + 32);
    uint64_t v14 = *(void *)(a3 + 40);
    uint64_t v15 = *(void *)(a3 + 48);
    uint64_t v16 = *(void **)(a3 + 56);
    unint64_t v31 = 0xE000000000000000LL;
    uint64_t v32 = v29;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v17 = v13;
    a2 = v12;
    DefaultStringInterpolation.appendInterpolation(type:tags:function:)(v17, v14, v15, v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v30 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0LL, 0xE000000000000000LL, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31, v27);
    swift_release_n(a3, 2LL);
    swift_bridgeObjectRelease();
    _os_log_impl( &dword_0,  v8,  v10,  "%s is initialized, this function should be only be called once for each makeFlowFor",  buf,  0xCu);
    swift_arrayDestroy(v29, 1LL);
    swift_slowDealloc(v29, -1LL, -1LL);
    swift_slowDealloc(buf, -1LL, -1LL);
  }

  else
  {

    swift_release_n(a3, 2LL);
  }

  uint64_t v18 = type metadata accessor for NLv4Transformer(0LL);
  uint64_t v19 = swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
  swift_retain();
  swift_retain();
  *(void *)(a3 + ++*(void *)(v0 + 16) = specialized NLv4Transformer.init(referenceResolver:featureManager:)(a1, a2, v19);
  outlined init with copy of SharedGlobalsProviding((uint64_t)v33, a3 + 120);
  uint64_t v20 = type metadata accessor for SingleIntentCacheProvider();
  uint64_t v21 = swift_allocObject(v20, 32LL, 7LL);
  *(_OWORD *)(v21 + ++*(void *)(v0 + 16) = xmmword_31D890;
  uint64_t v22 = type metadata accessor for PhoneCallControlNLTransformer();
  uint64_t v23 = (void *)swift_allocObject(v22, 88LL, 7LL);
  specialized PhoneCallControlNLTransformer.init(cacheProvider:)(v21, v23);
  uint64_t v25 = v24;
  swift_release(a2);
  __swift_destroy_boxed_opaque_existential_1(v33);
  *(void *)(a3 + 24) = v25;
  return a3;
}

uint64_t sub_309E0C()
{
  __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 24));
  return swift_deallocObject(v0, 80LL, 7LL);
}

uint64_t sub_309E38()
{
  return swift_deallocObject(v0, 80LL, 7LL);
}

uint64_t destroy for SharedGlobals(void *a1)
{
  return swift_release(a1[14]);
}

uint64_t *assignWithCopy for SharedGlobals(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a1;
  *a1 = *a2;
  swift_retain();
  swift_release(v4);
  __swift_assign_boxed_opaque_existential_1(a1 + 1, a2 + 1);
  __swift_assign_boxed_opaque_existential_1(a1 + 6, a2 + 6);
  uint64_t v5 = a1[11];
  a1[11] = a2[11];
  swift_retain();
  swift_release(v5);
  uint64_t v6 = a1[12];
  a1[12] = a2[12];
  swift_retain();
  swift_release(v6);
  uint64_t v7 = a1[13];
  a1[13] = a2[13];
  swift_retain();
  swift_release(v7);
  uint64_t v8 = a2[14];
  uint64_t v9 = a1[14];
  a1[14] = v8;
  swift_retain();
  swift_release(v9);
  return a1;
}

uint64_t *assignWithTake for SharedGlobals(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  __swift_destroy_boxed_opaque_existential_1(a1 + 1);
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
  a1[5] = a2[5];
  __swift_destroy_boxed_opaque_existential_1(a1 + 6);
  __int128 v5 = *((_OWORD *)a2 + 4);
  *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
  *((_OWORD *)a1 + 4) = v5;
  uint64_t v6 = a2[11];
  uint64_t v7 = a1[11];
  a1[10] = a2[10];
  a1[11] = v6;
  swift_release(v7);
  uint64_t v8 = a1[12];
  a1[12] = a2[12];
  swift_release(v8);
  uint64_t v9 = a1[13];
  a1[13] = a2[13];
  swift_release(v9);
  uint64_t v10 = a1[14];
  a1[14] = a2[14];
  swift_release(v10);
  return a1;
}

ValueMetadata *type metadata accessor for SharedGlobals()
{
  return &type metadata for SharedGlobals;
}

uint64_t sub_30A02C()
{
  return swift_deallocObject(v0, 136LL, 7LL);
}

uint64_t specialized NLv4Transformer.init(referenceResolver:featureManager:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<TransformerInput, PhoneCallNLIntent?>);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  _OWORD v14[3] = type metadata accessor for ReferenceResolutionClient(0LL);
  v14[4] = &protocol witness table for ReferenceResolutionClient;
  v14[0] = a1;
  outlined init with copy of SharedGlobalsProviding((uint64_t)v14, (uint64_t)v13);
  uint64_t v10 = swift_allocObject(&unk_419CD0, 64LL, 7LL);
  *(void *)(v10 + ++*(void *)(v0 + 16) = a2;
  outlined init with take of AppSelectionSignalComponent(v13, v10 + 24);
  uint64_t v11 = type metadata accessor for TransformerInput(0LL);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallNLIntent?);
  Transformer.init(transform:)( partial apply for closure #1 in static Transformer<>.transformer(referenceResolver:featureManager:),  v10,  v11);
  __swift_destroy_boxed_opaque_existential_1(v14);
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))( a3 + OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin15NLv4Transformer_transformer,  v9,  v6);
  return a3;
}

uint64_t sub_30A1A0()
{
  return swift_deallocObject(v0, 64LL, 7LL);
}

_BYTE *AnnounceVoicemailDirectAction.identifier.unsafeMutableAddressor()
{
  if (one-time initialization token for identifier != -1) {
    swift_once(&one-time initialization token for identifier, one-time initialization function for identifier);
  }
  return static AnnounceVoicemailDirectAction.identifier;
}

uint64_t static AnnounceVoicemailDirectAction.identifier.getter()
{
  if (one-time initialization token for identifier != -1) {
    swift_once(&one-time initialization token for identifier, one-time initialization function for identifier);
  }
  uint64_t v0 = *(void *)static AnnounceVoicemailDirectAction.identifier;
  OUTLINED_FUNCTION_6_3();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t AnnounceVoicemailDirectAction.contactInfo.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  OUTLINED_FUNCTION_6_3();
  return v1;
}

uint64_t AnnounceVoicemailDirectAction.synchronousBurstIndex.getter()
{
  return *(void *)(v0 + 48);
}

void *AnnounceVoicemailDirectAction.__allocating_init(voicemailIdentifier:contactInfo:synchronousBurstIndex:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = OUTLINED_FUNCTION_14_80();
  uint64_t result = (void *)swift_allocObject(v10, v11, v12);
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  result[5] = a4;
  result[6] = a5;
  return result;
}

void *AnnounceVoicemailDirectAction.init(voicemailIdentifier:contactInfo:synchronousBurstIndex:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __int128 v5[2] = a1;
  void v5[3] = a2;
  void v5[4] = a3;
  v5[5] = a4;
  v5[6] = a5;
  return v5;
}

id AnnounceVoicemailDirectAction.toCallRecord(contactStore:)(void *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = (void *)v2[5];
  if (v7)
  {
    uint64_t v8 = v2[4];
    uint64_t v9 = a1[3];
    uint64_t v10 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v9);
    uint64_t v11 = (*(uint64_t (**)(uint64_t, void *, uint64_t, uint64_t))(v10 + 16))(v8, v7, v9, v10);
    uint64_t v37 = v11;
    if (v11)
    {
      unint64_t v38 = (unint64_t)v11 >> 62;
      if ((unint64_t)v11 >> 62)
      {
        if (v11 < 0) {
          uint64_t v54 = v11;
        }
        else {
          uint64_t v54 = v11 & 0xFFFFFFFFFFFFFF8LL;
        }
        OUTLINED_FUNCTION_6_3();
        uint64_t v39 = _CocoaArrayWrapper.endIndex.getter(v54);
        OUTLINED_FUNCTION_62();
        if (v39)
        {
LABEL_16:
          specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v37 & 0xC000000000000001LL) == 0, v37);
          if ((v37 & 0xC000000000000001LL) != 0) {
            id result = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v37);
          }
          else {
            id result = *(id *)(v37 + 32);
          }
          uint64_t v7 = result;
          if (v39 < 1)
          {
            __break(1u);
LABEL_46:
            __break(1u);
LABEL_47:
            __break(1u);
            return result;
          }

          if (!v38)
          {
            uint64_t v40 = *(void *)((char *)&dword_10 + (v37 & 0xFFFFFFFFFFFFF8LL));
            if (v40)
            {
LABEL_27:
              if (v40 >= v39)
              {
                if ((v37 & 0xC000000000000001LL) != 0 && v39 != 1)
                {
                  type metadata accessor for INPerson();
                  Swift::Int v43 = 1LL;
                  do
                  {
                    Swift::Int v44 = v43 + 1;
                    _ArrayBuffer._typeCheckSlowPath(_:)(v43);
                    Swift::Int v43 = v44;
                  }

                  while (v39 != v44);
                }

                if (v38)
                {
                  if (v37 < 0) {
                    uint64_t v49 = v37;
                  }
                  else {
                    uint64_t v49 = v37 & 0xFFFFFFFFFFFFFF8LL;
                  }
                  OUTLINED_FUNCTION_6_3();
                  uint64_t v45 = _CocoaArrayWrapper.subscript.getter(1LL, v39, v49);
                  uint64_t v46 = v50;
                  uint64_t v47 = v51;
                  unint64_t v48 = v52;
                  swift_bridgeObjectRelease_n(v37, 2LL);
                }

                else
                {
                  uint64_t v45 = v37 & 0xFFFFFFFFFFFFFF8LL;
                  uint64_t v46 = (v37 & 0xFFFFFFFFFFFFFF8LL) + 32;
                  uint64_t v47 = 1LL;
                  unint64_t v48 = (2 * v39) | 1;
                }

                specialized Array.init<A>(_:)(v45, v46, v47, v48);
                outlined bridged method (mbgnn) of @objc INPerson.alternatives.setter(v53, v7);
                OUTLINED_FUNCTION_62();
                goto LABEL_4;
              }

              goto LABEL_46;
            }

            __break(1u);
          }

          if (v37 < 0) {
            uint64_t v41 = v37;
          }
          else {
            uint64_t v41 = v37 & 0xFFFFFFFFFFFFFF8LL;
          }
          OUTLINED_FUNCTION_6_3();
          uint64_t v42 = _CocoaArrayWrapper.endIndex.getter(v41);
          id result = (id)OUTLINED_FUNCTION_62();
          if (v42 < 1) {
            goto LABEL_47;
          }
          OUTLINED_FUNCTION_6_3();
          uint64_t v40 = _CocoaArrayWrapper.endIndex.getter(v41);
          id result = (id)OUTLINED_FUNCTION_62();
          goto LABEL_27;
        }
      }

      else
      {
        uint64_t v39 = *(void *)((char *)&dword_10 + (v11 & 0xFFFFFFFFFFFFF8LL));
        if (v39) {
          goto LABEL_16;
        }
      }

      OUTLINED_FUNCTION_62();
    }

    uint64_t v7 = 0LL;
  }

PhoneCallFlowDelegatePlugin::AnnounceVoicemailDirectAction::CodingKeys_optional __swiftcall AnnounceVoicemailDirectAction.CodingKeys.init(rawValue:)( Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)( (Swift::OpaquePointer)&outlined read-only object #0 of AnnounceVoicemailDirectAction.CodingKeys.init(rawValue:),  v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 4) {
    return (PhoneCallFlowDelegatePlugin::AnnounceVoicemailDirectAction::CodingKeys_optional)4;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::AnnounceVoicemailDirectAction::CodingKeys_optional)v3;
  }
}

uint64_t AnnounceVoicemailDirectAction.CodingKeys.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_30A87C
                                                                     + 4 * asc_340CE0[a1]))( 0xD000000000000015LL,  0x80000000003469F0LL);
}

uint64_t sub_30A87C(uint64_t a1)
{
  return a1 - 4;
}

uint64_t AnnounceVoicemailDirectAction.CodingKeys.stringValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_30A8DC + 4 * byte_340CE4[a1]))( 0xD000000000000015LL,  0x80000000003469F0LL);
}

uint64_t sub_30A8DC(uint64_t a1)
{
  return a1 - 4;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance AnnounceVoicemailDirectAction.CodingKeys()
{
  specialized == infix<A>(_:_:)();
}

void protocol witness for Hashable.hashValue.getter in conformance AnnounceVoicemailDirectAction.CodingKeys()
{
}

void protocol witness for Hashable.hash(into:) in conformance AnnounceVoicemailDirectAction.CodingKeys()
{
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance AnnounceVoicemailDirectAction.CodingKeys( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::AnnounceVoicemailDirectAction::CodingKeys_optional protocol witness for RawRepresentable.init(rawValue:) in conformance AnnounceVoicemailDirectAction.CodingKeys@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::AnnounceVoicemailDirectAction::CodingKeys_optional *a2@<X8>)
{
  result.PhoneCallFlowDelegatePlugin::EmergencyType value = AnnounceVoicemailDirectAction.CodingKeys.init(rawValue:)(*a1).value;
  a2->PhoneCallFlowDelegatePlugin::EmergencyType value = result.value;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance AnnounceVoicemailDirectAction.CodingKeys@<X0>( uint64_t *a1@<X8>)
{
  uint64_t result = AnnounceVoicemailDirectAction.CodingKeys.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance AnnounceVoicemailDirectAction.CodingKeys()
{
  return AnnounceVoicemailDirectAction.CodingKeys.stringValue.getter(*v0);
}

PhoneCallFlowDelegatePlugin::AnnounceVoicemailDirectAction::CodingKeys_optional protocol witness for CodingKey.init(stringValue:) in conformance AnnounceVoicemailDirectAction.CodingKeys@<W0>( uint64_t a1@<X0>, PhoneCallFlowDelegatePlugin::AnnounceVoicemailDirectAction::CodingKeys_optional *a2@<X8>)
{
  result.PhoneCallFlowDelegatePlugin::EmergencyType value = AnnounceVoicemailDirectAction.CodingKeys.init(stringValue:)(*(Swift::String *)&a1).value;
  a2->PhoneCallFlowDelegatePlugin::EmergencyType value = result.value;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance AnnounceVoicemailDirectAction.CodingKeys( uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type AnnounceVoicemailDirectAction.CodingKeys and conformance AnnounceVoicemailDirectAction.CodingKeys();
  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance AnnounceVoicemailDirectAction.CodingKeys( uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type AnnounceVoicemailDirectAction.CodingKeys and conformance AnnounceVoicemailDirectAction.CodingKeys();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t AnnounceVoicemailDirectAction.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_14_80();
  uint64_t v5 = swift_allocObject(v2, v3, v4);
  AnnounceVoicemailDirectAction.init(from:)(a1);
  return v5;
}

void *AnnounceVoicemailDirectAction.init(from:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<AnnounceVoicemailDirectAction.CodingKeys>);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v6);
  unint64_t v8 = lazy protocol witness table accessor for type AnnounceVoicemailDirectAction.CodingKeys and conformance AnnounceVoicemailDirectAction.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)( &type metadata for AnnounceVoicemailDirectAction.CodingKeys,  &type metadata for AnnounceVoicemailDirectAction.CodingKeys,  v8,  v6,  v7);
  if (v2)
  {
    uint64_t v11 = type metadata accessor for AnnounceVoicemailDirectAction();
    swift_deallocPartialClassInstance(v1, v11, 56LL, 7LL);
  }

  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_7_116(1);
    unint64_t v13 = v10;
    if (v10)
    {
      uint64_t v14 = v9;
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v15 = OUTLINED_FUNCTION_15_1();
      __swift_project_value_buffer(v15, (uint64_t)static Logger.siriPhone);
      uint64_t v16 = swift_bridgeObjectRetain_n(v13, 2LL);
      uint64_t v17 = (os_log_s *)Logger.logObject.getter(v16);
      os_log_type_t v40 = static os_log_type_t.debug.getter(v17, v18);
      if (os_log_type_enabled(v17, v40))
      {
        unint64_t v38 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
        uint64_t v44 = OUTLINED_FUNCTION_7_0(32LL);
        uint64_t v39 = v14;
        uint64_t v19 = v44;
        *(_DWORD *)unint64_t v38 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v42 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v39, v13, &v44);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, &v43, v38 + 4);
        swift_bridgeObjectRelease_n(v13, 3LL);
        _os_log_impl(&dword_0, v17, v40, "#AnnounceVoicemailDirectAction Using MessageIdentifier %s", v38, 0xCu);
        swift_arrayDestroy(v19, 1LL);
        uint64_t v20 = v19;
        uint64_t v14 = v39;
        OUTLINED_FUNCTION_0_2(v20);
        OUTLINED_FUNCTION_0_2((uint64_t)v38);
      }

      else
      {

        swift_bridgeObjectRelease_n(v13, 2LL);
      }
    }

    else
    {
      LOBYTE(v44) = 0;
      uint64_t v21 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v44, v5);
      if ((v22 & 1) != 0)
      {
        if (one-time initialization token for siriPhone != -1) {
          swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
        }
        uint64_t v33 = OUTLINED_FUNCTION_15_1();
        uint64_t v34 = __swift_project_value_buffer(v33, (uint64_t)static Logger.siriPhone);
        uint64_t v35 = (os_log_s *)Logger.logObject.getter(v34);
        os_log_type_t v36 = static os_log_type_t.fault.getter();
        if (os_log_type_enabled(v35, v36))
        {
          uint64_t v37 = (uint8_t *)OUTLINED_FUNCTION_7_0(2LL);
          *(_WORD *)uint64_t v37 = 0;
          _os_log_impl( &dword_0,  v35,  v36,  "#AnnounceVoicemailDirectAction Could not find a voicemail identifier in direct invocation payload",  v37,  2u);
          OUTLINED_FUNCTION_0_2((uint64_t)v37);
        }

        uint64_t v14 = 0LL;
        unint64_t v13 = 0xE000000000000000LL;
      }

      else
      {
        uint64_t v23 = v21;
        if (one-time initialization token for siriPhone != -1) {
          swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
        }
        uint64_t v24 = OUTLINED_FUNCTION_15_1();
        uint64_t v25 = __swift_project_value_buffer(v24, (uint64_t)static Logger.siriPhone);
        id v26 = (os_log_s *)Logger.logObject.getter(v25);
        os_log_type_t v28 = static os_log_type_t.debug.getter(v26, v27);
        if (os_log_type_enabled(v26, v28))
        {
          os_log_type_t v41 = v28;
          uint64_t v29 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
          *(_DWORD *)uint64_t v29 = 134217984;
          uint64_t v44 = v23;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45, v29 + 4);
          _os_log_impl(&dword_0, v26, v41, "#AnnounceVoicemailDirectAction Using VMVoicemailIdentifier %ld", v29, 0xCu);
          OUTLINED_FUNCTION_0_2((uint64_t)v29);
        }

        uint64_t v44 = v23;
        uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
        unint64_t v13 = v30;
      }
    }

    __int128 v3[2] = v14;
    v3[3] = v13;
    v3[4] = OUTLINED_FUNCTION_7_116(2);
    v3[5] = v31;
    LOBYTE(v44) = 3;
    uint64_t v32 = KeyedDecodingContainer.decode(_:forKey:)(&v44, v5);
    OUTLINED_FUNCTION_0_116();
    v3[6] = v32;
  }

  __swift_destroy_boxed_opaque_existential_1(a1);
  return v3;
}

uint64_t AnnounceVoicemailDirectAction.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = type metadata accessor for UUID(0LL);
  uint64_t v56 = *(void *)(v8 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<AnnounceVoicemailDirectAction.CodingKeys>);
  uint64_t v55 = *(void *)(v12 - 8);
  OUTLINED_FUNCTION_17_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v15 = v14 - v13;
  uint64_t v17 = a1[3];
  uint64_t v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v17);
  unint64_t v18 = lazy protocol witness table accessor for type AnnounceVoicemailDirectAction.CodingKeys and conformance AnnounceVoicemailDirectAction.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)( &type metadata for AnnounceVoicemailDirectAction.CodingKeys,  &type metadata for AnnounceVoicemailDirectAction.CodingKeys,  v18,  v17,  v16);
  uint64_t v20 = v3[2];
  unint64_t v19 = v3[3];
  uint64_t v54 = v3;
  UUID.init(uuidString:)(v20, v19);
  if (__swift_getEnumTagSinglePayload(v7, 1LL, v8) != 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 32))(v11, v7, v8);
    LOBYTE(v58[0]) = 1;
    lazy protocol witness table accessor for type PlayVoiceMailAction and conformance PlayVoiceMailAction( &lazy protocol witness table cache variable for type UUID and conformance UUID,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
    KeyedEncodingContainer.encode<A>(_:forKey:)(v11, v58, v12, v8, v32);
    uint64_t v30 = v57;
    uint64_t v28 = v12;
    uint64_t v26 = v15;
    if (v57)
    {
      OUTLINED_FUNCTION_9_88();
      return (*(uint64_t (**)(uint64_t, uint64_t))(v55 + 8))(v15, v12);
    }

    OUTLINED_FUNCTION_9_88();
    uint64_t v37 = v54;
    uint64_t v12 = v55;
    goto LABEL_45;
  }

  char v21 = v15;
  uint64_t result = outlined destroy of UUID?(v7);
  uint64_t v23 = HIBYTE(v19) & 0xF;
  uint64_t v24 = v20 & 0xFFFFFFFFFFFFLL;
  if ((v19 & 0x2000000000000000LL) != 0) {
    uint64_t v25 = HIBYTE(v19) & 0xF;
  }
  else {
    uint64_t v25 = v20 & 0xFFFFFFFFFFFFLL;
  }
  if (!v25)
  {
    uint64_t v28 = v12;
    uint64_t v30 = v57;
    uint64_t v37 = v54;
    uint64_t v12 = v55;
    uint64_t v26 = v15;
    goto LABEL_45;
  }

  uint64_t v26 = v15;
  if ((v19 & 0x1000000000000000LL) != 0)
  {
    OUTLINED_FUNCTION_6_3();
    uint64_t v29 = (uint64_t)specialized _parseInteger<A, B>(ascii:radix:)(v20, v19, 10LL);
    char v21 = v53;
    swift_bridgeObjectRelease();
    goto LABEL_40;
  }

  if ((v19 & 0x2000000000000000LL) == 0)
  {
    if ((v20 & 0x1000000000000000LL) != 0) {
      uint64_t v27 = (unsigned __int8 *)((v19 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v27 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v20, v19);
    }
    uint64_t v28 = v12;
    uint64_t v2 = v57;
    uint64_t v29 = (uint64_t)specialized closure #1 in FixedWidthInteger.init<A>(_:radix:)(v27, v24, 10LL);
    uint64_t v30 = v57;
    char v21 = v31 & 1;
    goto LABEL_41;
  }

  v58[0] = v20;
  v58[1] = v19 & 0xFFFFFFFFFFFFFFLL;
  if (v20 == 43)
  {
    if (!v23) {
      goto LABEL_74;
    }
    if (v23 == 1) {
      goto LABEL_37;
    }
    OUTLINED_FUNCTION_8_94();
    if (!v36 & v35) {
      goto LABEL_37;
    }
    uint64_t v29 = v39;
    if (v38 == 2)
    {
LABEL_39:
      char v21 = 0;
      goto LABEL_40;
    }

    OUTLINED_FUNCTION_8_94();
    if (!v36 & v35) {
      goto LABEL_37;
    }
    uint64_t v29 = 10LL * v29 + v41;
    uint64_t v28 = v12;
    uint64_t v30 = v57;
    if (v40 != 3)
    {
      OUTLINED_FUNCTION_20_69();
      while (1)
      {
        OUTLINED_FUNCTION_13_91();
        if (!v36 & v35) {
          goto LABEL_69;
        }
        OUTLINED_FUNCTION_6_107();
        if (!v36) {
          goto LABEL_69;
        }
        uint64_t v29 = v43 + v42;
        if (__OFADD__(v43, v42)) {
          goto LABEL_69;
        }
        OUTLINED_FUNCTION_15_86();
        if (v36) {
          goto LABEL_42;
        }
      }
    }

uint64_t AnnounceVoicemailDirectAction.deinit()
{
  return v0;
}

uint64_t AnnounceVoicemailDirectAction.__deallocating_deinit()
{
  uint64_t v0 = OUTLINED_FUNCTION_14_80();
  return swift_deallocClassInstance(v0, v1, v2);
}

uint64_t protocol witness for static DICodable.identifier.getter in conformance AnnounceVoicemailDirectAction()
{
  if (one-time initialization token for identifier != -1) {
    swift_once(&one-time initialization token for identifier, one-time initialization function for identifier);
  }
  uint64_t v0 = *(void *)static AnnounceVoicemailDirectAction.identifier;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t protocol witness for Decodable.init(from:) in conformance AnnounceVoicemailDirectAction@<X0>( uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 120))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t protocol witness for Encodable.encode(to:) in conformance AnnounceVoicemailDirectAction()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 128LL))();
}

void specialized _ContiguousArrayBuffer.init(_uninitializedCount:minimumCapacity:)(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (v2)
  {
    uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UInt8>);
    uint64_t v5 = (void *)swift_allocObject(v4, v2 + 32, 7LL);
    size_t v6 = _swift_stdlib_malloc_size(v5);
    __int128 v5[2] = a1;
    void v5[3] = 2 * v6 - 64;
  }

  OUTLINED_FUNCTION_2();
}

void _StringGuts._slowEnsureMatchingEncoding(_:)(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5 = a1 >> 16;
  if ((a3 & 0x1000000000000000LL) == 0 || (a2 & 0x800000000000000LL) != 0)
  {
    uint64_t v7 = String.UTF16View.index(_:offsetBy:)(15LL, v5, a2);
    OUTLINED_FUNCTION_12_96(v7);
  }

  else
  {
    uint64_t v6 = String.UTF8View._foreignIndex(_:offsetBy:)(15LL, v5);
    OUTLINED_FUNCTION_12_96(v6);
  }

  OUTLINED_FUNCTION_2();
}

unsigned __int8 *specialized closure #1 in FixedWidthInteger.init<A>(_:radix:)( unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return specialized closure #1 in FixedWidthInteger.init<A>(_:radix:)(a1, a2, a3);
}

unsigned __int8 *specialized _parseInteger<A, B>(ascii:radix:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v14 = a1;
  uint64_t v15 = a2;
  swift_bridgeObjectRetain();
  uint64_t v4 = String.init<A>(_:)( &v14,  &type metadata for String,  &protocol witness table for String,  &protocol witness table for String);
  uint64_t v6 = v4;
  unint64_t v7 = v5;
  if ((v5 & 0x1000000000000000LL) == 0)
  {
    if ((v5 & 0x2000000000000000LL) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v9 = HIBYTE(v7) & 0xF;
    uint64_t v14 = v6;
    uint64_t v15 = v7 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v8 = (unsigned __int8 *)&v14;
    goto LABEL_7;
  }

  uint64_t v6 = static String._copying(_:)(v4, v5);
  unint64_t v11 = v10;
  OUTLINED_FUNCTION_62();
  unint64_t v7 = v11;
  if ((v11 & 0x2000000000000000LL) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 0x1000000000000000LL) != 0)
  {
    uint64_t v8 = (unsigned __int8 *)((v7 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v9 = v6 & 0xFFFFFFFFFFFFLL;
  }

  else
  {
    uint64_t v8 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v6, v7);
  }

unsigned __int8 *specialized closure #1 in FixedWidthInteger.init<A>(_:radix:)( unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v15 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v16 = a3 + 48;
        unsigned __int8 v17 = a3 + 55;
        unsigned __int8 v18 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v16 = 58;
        }

        else
        {
          unsigned __int8 v18 = 97;
          unsigned __int8 v17 = 65;
        }

        if (result)
        {
          uint64_t v9 = 0LL;
          unint64_t v19 = result + 1;
          do
          {
            unsigned int v20 = *v19;
            if (v20 < 0x30 || v20 >= v16)
            {
              if (v20 < 0x41 || v20 >= v17)
              {
                uint64_t v13 = 0LL;
                if (v20 < 0x61 || v20 >= v18) {
                  return (unsigned __int8 *)v13;
                }
                char v21 = -87;
              }

              else
              {
                char v21 = -55;
              }
            }

            else
            {
              char v21 = -48;
            }

            uint64_t v22 = v9 * a3;
            uint64_t v9 = v22 + (v20 + v21);
            ++v19;
            --v15;
          }

          while (v15);
          return (unsigned __int8 *)v9;
        }

        return 0LL;
      }

      return 0LL;
    }
  }

  else
  {
    if (v4 != 45)
    {
      if (a2)
      {
        unsigned __int8 v23 = a3 + 48;
        unsigned __int8 v24 = a3 + 55;
        unsigned __int8 v25 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v23 = 58;
        }

        else
        {
          unsigned __int8 v25 = 97;
          unsigned __int8 v24 = 65;
        }

        if (result)
        {
          uint64_t v26 = 0LL;
          do
          {
            unsigned int v27 = *result;
            if (v27 < 0x30 || v27 >= v23)
            {
              if (v27 < 0x41 || v27 >= v24)
              {
                uint64_t v13 = 0LL;
                if (v27 < 0x61 || v27 >= v25) {
                  return (unsigned __int8 *)v13;
                }
                char v28 = -87;
              }

              else
              {
                char v28 = -55;
              }
            }

            else
            {
              char v28 = -48;
            }

            uint64_t v29 = v26 * a3;
            uint64_t v26 = v29 + (v27 + v28);
            ++result;
            --v3;
          }

          while (v3);
          return (unsigned __int8 *)(v29 + (v27 + v28));
        }

        return 0LL;
      }

      return 0LL;
    }

    if (a2 >= 1)
    {
      uint64_t v5 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v6 = a3 + 48;
        unsigned __int8 v7 = a3 + 55;
        unsigned __int8 v8 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = 58;
        }

        else
        {
          unsigned __int8 v8 = 97;
          unsigned __int8 v7 = 65;
        }

        if (result)
        {
          uint64_t v9 = 0LL;
          for (uint64_t i = result + 1; ; ++i)
          {
            unsigned int v11 = *i;
            if (v11 < 0x30 || v11 >= v6)
            {
              if (v11 < 0x41 || v11 >= v7)
              {
                uint64_t v13 = 0LL;
                if (v11 < 0x61 || v11 >= v8) {
                  return (unsigned __int8 *)v13;
                }
                char v12 = -87;
              }

              else
              {
                char v12 = -55;
              }
            }

            else
            {
              char v12 = -48;
            }

            uint64_t v14 = v9 * a3;
            uint64_t v9 = v14 - (v11 + v12);
            if (!--v5) {
              return (unsigned __int8 *)v9;
            }
          }
        }

        return 0LL;
      }

      return 0LL;
    }

    __break(1u);
  }

  __break(1u);
  return result;
}

uint64_t static String._copying(_:)(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = specialized Collection.subscript.getter((uint64_t)implicit closure #1 in static String._copying(_:), 0LL, a1, a2);
  uint64_t v6 = static String._copying(_:)(v2, v3, v4, v5);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t specialized Collection.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000LL) == 0) {
    uint64_t v4 = a3;
  }
  uint64_t v5 = 7LL;
  if (((a4 >> 60) & ((a3 & 0x800000000000000LL) == 0)) != 0) {
    uint64_t v5 = 11LL;
  }
  return String.subscript.getter(15LL, v5 | (v4 << 16), a3, a4);
}

uint64_t static String._copying(_:)( unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v5 = a3;
  if ((a4 & 0x1000000000000000LL) != 0)
  {
    specialized Collection.count.getter(a1, a2, a3, a4);
    if (v12)
    {
      uint64_t v9 = v12;
      specialized _ContiguousArrayBuffer.init(_uninitializedCount:minimumCapacity:)(v12, 0LL);
      unint64_t v8 = (unint64_t)v13;
      specialized Sequence._copySequenceContents(initializing:)(v16, (uint64_t)(v13 + 4), v9, a1, a2, v5, a4);
      unint64_t v5 = v14;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v5 != v9)
      {
        __break(1u);
        goto LABEL_11;
      }
    }

    else
    {
      unint64_t v8 = (unint64_t)_swiftEmptyArrayStorage;
    }

    uint64_t v15 = static String._uncheckedFromUTF8(_:)(v8 + 32, *(void *)(v8 + 16));
    swift_release(v8);
    return v15;
  }

  else
  {
    unint64_t v8 = a1 >> 16;
    uint64_t v9 = a2 >> 16;
    if ((a4 & 0x2000000000000000LL) == 0)
    {
      if ((a3 & 0x1000000000000000LL) != 0)
      {
        uint64_t v10 = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
LABEL_5:
        v10 += v8;
        return static String._uncheckedFromUTF8(_:)(v10, v9 - v8);
      }

void specialized Collection.count.getter( unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000LL) == 0) {
    LOBYTE(v__swift_destroy_boxed_opaque_existential_1(v0 + 8) = 1;
  }
  uint64_t v9 = 4LL << v8;
  if ((a1 & 0xC) == 4LL << v8)
  {
    _StringGuts._slowEnsureMatchingEncoding(_:)(a1, a3, a4);
    unint64_t v7 = v10;
  }

  if ((a2 & 0xC) == v9)
  {
    _StringGuts._slowEnsureMatchingEncoding(_:)(a2, a3, a4);
    a2 = v11;
    if ((a4 & 0x1000000000000000LL) == 0) {
      return;
    }
  }

  else if ((a4 & 0x1000000000000000LL) == 0)
  {
    return;
  }

  unint64_t v12 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000LL) == 0) {
    unint64_t v12 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (v12 < v7 >> 16)
  {
    __break(1u);
  }

  else if (v12 >= a2 >> 16)
  {
    String.UTF8View._foreignDistance(from:to:)(v7, a2, a3, a4);
    return;
  }

  __break(1u);
}

void specialized Sequence._copySequenceContents(initializing:)( unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v11 = a4;
    goto LABEL_33;
  }

  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v29 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    unint64_t v11 = a4;
LABEL_33:
    *a1 = a4;
    a1[1] = a5;
    a1[2] = a6;
    a1[3] = a7;
    a1[4] = v11;
    return;
  }

  uint64_t v13 = 0LL;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000LL) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4LL << v14;
  uint64_t v23 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v24 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000LL) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v25 = v16;
  uint64_t v28 = a3 - 1;
  unint64_t v11 = a4;
  while (1)
  {
    unint64_t v17 = v11;
    if ((v11 & 0xC) == v15) {
      _StringGuts._slowEnsureMatchingEncoding(_:)(v11, a6, a7);
    }
    if (v17 >> 14 < v29 || v17 >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000LL) != 0)
    {
      char v21 = String.UTF8View._foreignSubscript(position:)();
    }

    else
    {
      unint64_t v19 = v17 >> 16;
      if ((a7 & 0x2000000000000000LL) != 0)
      {
        v30[0] = a6;
        v30[1] = v24;
        char v21 = *((_BYTE *)v30 + v19);
      }

      else
      {
        uint64_t v20 = v23;
        if ((a6 & 0x1000000000000000LL) == 0) {
          uint64_t v20 = _StringObject.sharedUTF8.getter(a6, a7);
        }
        char v21 = *(_BYTE *)(v20 + v19);
      }
    }

    if ((v11 & 0xC) == v15)
    {
      _StringGuts._slowEnsureMatchingEncoding(_:)(v11, a6, a7);
      unint64_t v11 = v22;
      if ((a7 & 0x1000000000000000LL) == 0)
      {
LABEL_27:
        unint64_t v11 = (v11 & 0xFFFFFFFFFFFF0000LL) + 65540;
        goto LABEL_31;
      }
    }

    else if ((a7 & 0x1000000000000000LL) == 0)
    {
      goto LABEL_27;
    }

    if (v25 <= v11 >> 16) {
      goto LABEL_35;
    }
    unint64_t v11 = String.UTF8View._foreignIndex(after:)(v11, a6, a7);
LABEL_31:
    *(_BYTE *)(a2 + outlined destroy of PhoneCallNLIntent?((uint64_t)va, v13) = v21;
    if (v28 != v13)
    {
      ++v13;
      if (v10 != v11 >> 14) {
        continue;
      }
    }

    goto LABEL_33;
  }

  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
}

unint64_t lazy protocol witness table accessor for type AnnounceVoicemailDirectAction.CodingKeys and conformance AnnounceVoicemailDirectAction.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type AnnounceVoicemailDirectAction.CodingKeys and conformance AnnounceVoicemailDirectAction.CodingKeys;
  if (!lazy protocol witness table cache variable for type AnnounceVoicemailDirectAction.CodingKeys and conformance AnnounceVoicemailDirectAction.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AnnounceVoicemailDirectAction.CodingKeys,  &type metadata for AnnounceVoicemailDirectAction.CodingKeys);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AnnounceVoicemailDirectAction.CodingKeys and conformance AnnounceVoicemailDirectAction.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type AnnounceVoicemailDirectAction.CodingKeys and conformance AnnounceVoicemailDirectAction.CodingKeys;
  if (!lazy protocol witness table cache variable for type AnnounceVoicemailDirectAction.CodingKeys and conformance AnnounceVoicemailDirectAction.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AnnounceVoicemailDirectAction.CodingKeys,  &type metadata for AnnounceVoicemailDirectAction.CodingKeys);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AnnounceVoicemailDirectAction.CodingKeys and conformance AnnounceVoicemailDirectAction.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type AnnounceVoicemailDirectAction.CodingKeys and conformance AnnounceVoicemailDirectAction.CodingKeys;
  if (!lazy protocol witness table cache variable for type AnnounceVoicemailDirectAction.CodingKeys and conformance AnnounceVoicemailDirectAction.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AnnounceVoicemailDirectAction.CodingKeys,  &type metadata for AnnounceVoicemailDirectAction.CodingKeys);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AnnounceVoicemailDirectAction.CodingKeys and conformance AnnounceVoicemailDirectAction.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type AnnounceVoicemailDirectAction.CodingKeys and conformance AnnounceVoicemailDirectAction.CodingKeys;
  if (!lazy protocol witness table cache variable for type AnnounceVoicemailDirectAction.CodingKeys and conformance AnnounceVoicemailDirectAction.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AnnounceVoicemailDirectAction.CodingKeys,  &type metadata for AnnounceVoicemailDirectAction.CodingKeys);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AnnounceVoicemailDirectAction.CodingKeys and conformance AnnounceVoicemailDirectAction.CodingKeys);
  }

  return result;
}

uint64_t type metadata accessor for AnnounceVoicemailDirectAction()
{
  return objc_opt_self(&OBJC_CLASS____TtC27PhoneCallFlowDelegatePlugin29AnnounceVoicemailDirectAction);
}

uint64_t outlined destroy of UUID?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

void instantiation function for generic protocol witness table for AnnounceVoicemailDirectAction( uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = v3;
  lazy protocol witness table accessor for type PlayVoiceMailAction and conformance PlayVoiceMailAction( &lazy protocol witness table cache variable for type AnnounceVoicemailDirectAction and conformance AnnounceVoicemailDirectAction,  v4,  (uint64_t (*)(uint64_t))type metadata accessor for AnnounceVoicemailDirectAction,  (uint64_t)&protocol conformance descriptor for AnnounceVoicemailDirectAction);
  *(void *)(a1 + ++*(void *)(v0 + 16) = v5;
}

uint64_t storeEnumTagSinglePayload for AnnounceVoicemailDirectAction.CodingKeys( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    LODWORD(OUTLINED_FUNCTION_48_23(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin26PhoneCallContactIntentNode_handleLabel, v4) = 1;
  }
  else {
    LODWORD(OUTLINED_FUNCTION_48_23(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin26PhoneCallContactIntentNode_handleLabel, v4) = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFC) {
    return ((uint64_t (*)(void))((char *)&loc_30BF78 + 4 * byte_340CED[v4]))();
  }
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_30BFAC + 4 * byte_340CE8[v4]))();
}

uint64_t sub_30BFAC(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_30BFB4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x30BFBCLL);
  }
  return result;
}

uint64_t sub_30BFC8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x30BFD0LL);
  }
  *(_BYTE *)unint64_t result = a2 + 3;
  return result;
}

uint64_t sub_30BFD4(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_30BFDC(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AnnounceVoicemailDirectAction.CodingKeys()
{
  return &type metadata for AnnounceVoicemailDirectAction.CodingKeys;
}

uint64_t OUTLINED_FUNCTION_0_116()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_1_107()
{
  return 0x49746361746E6F63LL;
}

  ;
}

uint64_t OUTLINED_FUNCTION_7_116@<X0>(char a1@<W8>)
{
  *(_BYTE *)(v2 - 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a1;
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)(v2 - 72, v1);
}

  ;
}

uint64_t OUTLINED_FUNCTION_9_88()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 112) + 8LL))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_11_97(uint64_t a1, uint64_t a2)
{
  return KeyedEncodingContainer.encode(_:forKey:)(a1, a2, v2);
}

unint64_t OUTLINED_FUNCTION_12_96(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFFFFCLL | v1 & 3;
}

  ;
}

uint64_t OUTLINED_FUNCTION_14_80()
{
  return v0;
}

  ;
}

  ;
}

void CallingIntentConfirmationFlowStrategy.__allocating_init(delegate:startCallCATs:startCallCatPatterns:startCallCATsSimple:phoneCallCommonCATs:phoneCallCommonCATsSimple:phoneCallCommonCatPatterns:phoneCallDisplayTextCATsSimple:responseGenerator:siriKitEventSender:appInfoBuilder:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, void *a9, void *a10, void *a11)
{
}

uint64_t specialized Collection.firstIndex(where:)(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8LL));
  while (v4)
  {
    uint64_t v5 = 0LL;
    unint64_t v25 = a2;
    while (1)
    {
      if ((a1 & 0xC000000000000001LL) != 0) {
        id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, a1);
      }
      else {
        id v6 = *(id *)(a1 + 8 * v5 + 32);
      }
      unint64_t v7 = v6;
      uint64_t v8 = outlined bridged method (pb) of @objc INPerson.contactIdentifier.getter(a2);
      uint64_t v10 = v9;
      uint64_t v11 = outlined bridged method (pb) of @objc INPerson.contactIdentifier.getter(v7);
      if (v12)
      {
        uint64_t v13 = v11;
        uint64_t v14 = v12;
        goto LABEL_9;
      }

      outlined bridged method (pb) of @objc INPerson.siriMatches.getter(v7);
      uint64_t v14 = v17;
      if (!v17)
      {
        uint64_t v13 = 0LL;
        goto LABEL_9;
      }

      if ((unint64_t)v17 >> 62)
      {
        if (v17 >= 0) {
          v17 &= 0xFFFFFFFFFFFFFF8uLL;
        }
        if (!_CocoaArrayWrapper.endIndex.getter(v17))
        {
LABEL_37:
          OUTLINED_FUNCTION_129();
          uint64_t v13 = 0LL;
          uint64_t v14 = 0LL;
          goto LABEL_9;
        }
      }

      else if (!*(void *)((char *)&dword_10 + (v17 & 0xFFFFFFFFFFFFFF8LL)))
      {
        goto LABEL_37;
      }

      if ((v14 & 0xC000000000000001LL) != 0)
      {
        id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v14);
      }

      else
      {
        id v18 = *(id *)(v14 + 32);
      }

      unint64_t v19 = v18;
      OUTLINED_FUNCTION_129();
      id v20 = [v19 contactIdentifier];

      if (v20)
      {
        uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
        uint64_t v14 = v21;
      }

      else
      {
        uint64_t v13 = 0LL;
        uint64_t v14 = 0LL;
      }

      a2 = v25;
LABEL_9:
      if (!v10)
      {
        if (!v14)
        {

          return v5;
        }

void key path setter for CallingIntentConfirmationFlowStrategy.personToConfirm : <A>CallingIntentConfirmationFlowStrategy<A>( void **a1, void *a2)
{
  uint64_t v2 = *a1;
  int v3 = (void **)(*a2 + direct field offset for CallingIntentConfirmationFlowStrategy.personToConfirm);
  swift_beginAccess(v3, v6, 1LL, 0LL);
  uint64_t v4 = *v3;
  *int v3 = v2;
  id v5 = v2;
}

void *CallingIntentConfirmationFlowStrategy.personToConfirm.getter()
{
  char v1 = (void **)(v0 + direct field offset for CallingIntentConfirmationFlowStrategy.personToConfirm);
  OUTLINED_FUNCTION_22_0( v0 + direct field offset for CallingIntentConfirmationFlowStrategy.personToConfirm,  (uint64_t)v5);
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

uint64_t CallingIntentConfirmationFlowStrategy.actionForInput(_:resolveRecord:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConfirmationResponse?);
  __chkstk_darwin();
  unint64_t v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v50 = (char *)&v44 - v8;
  uint64_t v9 = type metadata accessor for Parse(0LL);
  uint64_t v51 = *(void *)(v9 - 8);
  uint64_t v52 = v9;
  __chkstk_darwin();
  uint64_t v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for Input(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin();
  uint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v16 = OUTLINED_FUNCTION_15_1();
  uint64_t v17 = __swift_project_value_buffer(v16, (uint64_t)static Logger.siriPhone);
  id v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 16);
  uint64_t v53 = a1;
  uint64_t v19 = v18(v15, a1, v12);
  uint64_t v49 = v17;
  id v20 = (os_log_s *)Logger.logObject.getter(v19);
  os_log_type_t v22 = static os_log_type_t.debug.getter(v20, v21);
  if (os_log_type_enabled(v20, v22))
  {
    uint64_t v23 = OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v46 = v3;
    uint64_t v24 = (uint8_t *)v23;
    uint64_t v25 = OUTLINED_FUNCTION_7_0(32LL);
    uint64_t v48 = a2;
    uint64_t v26 = v25;
    v55[0] = v25;
    uint64_t v47 = v7;
    *(_DWORD *)uint64_t v24 = 136315138;
    uint64_t v45 = v24 + 4;
    Input.parse.getter(v25);
    uint64_t v27 = String.init(describing:)((uint64_t)v11);
    uint64_t v54 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v27, v28, v55);
    unint64_t v7 = v47;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, v55, v45);
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_72_31();
    OUTLINED_FUNCTION_57_0(&dword_0, v20, v22, "#CallingIntentConfirmationFlowStrategy input: %s", v24);
    OUTLINED_FUNCTION_17_0(v26);
    OUTLINED_FUNCTION_0_2(v26);
    uint64_t v29 = (uint64_t)v24;
    uint64_t v3 = v46;
    OUTLINED_FUNCTION_0_2(v29);
  }

  else
  {
    OUTLINED_FUNCTION_72_31();
  }

  outlined init with copy of SharedGlobalsProviding(v3 + 24, (uint64_t)v55);
  Input.parse.getter(v30);
  char v31 = (os_log_s *)ContactPromptResponseParser.parseResponse(from:)((uint64_t)v11);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v11, v52);
  uint64_t v32 = outlined destroy of ContactPromptResponseParser((uint64_t)v55);
  if (v31 - 1 < 2)
  {
    uint64_t v33 = (unsigned int *)&enum case for ConfirmationResponse.rejected(_:);
LABEL_10:
    uint64_t v34 = *v33;
    uint64_t v35 = OUTLINED_FUNCTION_32_28();
    uint64_t v36 = (uint64_t)v50;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 104LL))(v50, v34, v35);
    __swift_storeEnumTagSinglePayload(v36, 0LL, 1LL, v35);
    outlined init with take of ConfirmationResponse?(v36, (uint64_t)v7);
    uint64_t v37 = v3 + direct field offset for CallingIntentConfirmationFlowStrategy.confirmationResponse;
    swift_beginAccess( v3 + direct field offset for CallingIntentConfirmationFlowStrategy.confirmationResponse,  v55,  33LL,  0LL);
    outlined assign with take of ConfirmationResponse?((uint64_t)v7, v37);
    uint64_t v38 = swift_endAccess(v55);
    return static ActionForInput.handle()(v38);
  }

  if (!(_BYTE)v31)
  {
    uint64_t v33 = (unsigned int *)&enum case for ConfirmationResponse.confirmed(_:);
    goto LABEL_10;
  }

  os_log_type_t v40 = v49;
  Logger.logObject.getter(v32);
  os_log_type_t v41 = OUTLINED_FUNCTION_41();
  if (OUTLINED_FUNCTION_10(v41))
  {
    unsigned __int8 v42 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
    OUTLINED_FUNCTION_47(v42);
    OUTLINED_FUNCTION_5_38( &dword_0,  v31,  v40,  "#CallingIntentConfirmationFlowStrategy Received unsupported parse while determining action which is not yet supported. Skipping..");
    OUTLINED_FUNCTION_0_2((uint64_t)v7);
  }

  return static ActionForInput.ignore()(v43);
}

uint64_t CallingIntentConfirmationFlowStrategy.parseConfirmationResponse(input:resolveRecord:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[22] = a3;
  v4[23] = v3;
  v4[21] = a1;
  uint64_t v5 = *v3;
  uint64_t v6 = OUTLINED_FUNCTION_15_1();
  _BYTE v4[24] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v4[25] = v7;
  v4[26] = OUTLINED_FUNCTION_23(v7);
  uint64_t v8 = OUTLINED_FUNCTION_32_28();
  v4[27] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v4[28] = v9;
  v4[29] = OUTLINED_FUNCTION_23(v9);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ConfirmationResponse?, ConfirmationResponse?));
  v4[30] = v10;
  v4[31] = OUTLINED_FUNCTION_23(*(void *)(v10 - 8));
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConfirmationResponse?);
  v4[32] = OUTLINED_FUNCTION_8_30(*(void *)(v11 - 8));
  v4[33] = OUTLINED_FUNCTION_28();
  v4[34] = OUTLINED_FUNCTION_28();
  uint64_t v12 = type metadata accessor for ParameterIdentifier(0LL);
  v4[35] = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  v4[36] = v13;
  v4[37] = OUTLINED_FUNCTION_8_30(v13);
  v4[38] = OUTLINED_FUNCTION_28();
  v4[39] = *(void *)(v5 + 272);
  v4[40] = *(void *)(v5 + 264);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(255LL);
  v4[41] = AssociatedTypeWitness;
  uint64_t v15 = type metadata accessor for ParameterResolutionRecord(0LL, AssociatedTypeWitness);
  v4[42] = v15;
  uint64_t v16 = *(void *)(v15 - 8);
  v4[43] = v16;
  v4[44] = OUTLINED_FUNCTION_23(v16);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_4_0();
}

uint64_t CallingIntentConfirmationFlowStrategy.parseConfirmationResponse(input:resolveRecord:)()
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v1 = v0[43];
  uint64_t v2 = v0[44];
  uint64_t v3 = v0[22];
  uint64_t v4 = __swift_project_value_buffer(v0[24], (uint64_t)static Logger.siriPhone);
  uint64_t v5 = OUTLINED_FUNCTION_56_4(v2, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
  uint64_t v109 = (os_log_s *)v4;
  uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
  os_log_type_t v8 = static os_log_type_t.debug.getter(v6, v7);
  BOOL v9 = OUTLINED_FUNCTION_50_12(v6);
  uint64_t v10 = v0[42];
  if (v9)
  {
    uint64_t v105 = v0[43];
    uint64_t v11 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    uint64_t v107 = OUTLINED_FUNCTION_7_0(32LL);
    uint64_t v110 = v107;
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v12 = (void *)ParameterResolutionRecord.result.getter(v10);
    id v13 = [v12 itemToConfirm];

    _bridgeAnyObjectToAny(_:)(v0 + 10, v13);
    swift_unknownObjectRelease(v13);
    uint64_t v14 = String.init<A>(describing:)(v0 + 10, &type metadata for Any[1]);
    v0[20] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v15, &v110);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 20, v0 + 21, v11 + 4);
    OUTLINED_FUNCTION_87_0();
    OUTLINED_FUNCTION_53_22(v105);
    OUTLINED_FUNCTION_57_0(&dword_0, v6, v8, "#CallingIntentConfirmationFlowStrategy intentResolutionResult: %s", v11);
    swift_arrayDestroy(v107, 1LL);
    OUTLINED_FUNCTION_0_2(v107);
    OUTLINED_FUNCTION_0_2((uint64_t)v11);
  }

  else
  {
    OUTLINED_FUNCTION_53_22(v0[43]);
  }

  id v108 = v0 + 18;
  uint64_t v17 = v0[37];
  uint64_t v16 = v0[38];
  uint64_t v18 = v0[35];
  uint64_t v19 = v0[36];
  uint64_t v20 = OUTLINED_FUNCTION_74_25();
  uint64_t v21 = ParameterIdentifier.multicardinalIndex.getter(v20);
  char v23 = v22;
  uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
  v24(v16, v18);
  if ((v23 & 1) != 0) {
    uint64_t v25 = 0LL;
  }
  else {
    uint64_t v25 = (os_log_s *)v21;
  }
  uint64_t v26 = OUTLINED_FUNCTION_74_25();
  uint64_t v27 = ParameterIdentifier.name.getter(v26);
  uint64_t v29 = v28;
  v24(v17, v18);
  v30._uint64_t countAndFlagsBits = v27;
  v30._object = v29;
  if ((PhoneCallSlotNames.init(rawValue:)(v30).value & 0xFE) == 4)
  {
    char v31 = (void *)ParameterResolutionRecord.result.getter(v0[42]);
    id v32 = [v31 itemToConfirm];

    _bridgeAnyObjectToAny(_:)(v0 + 6, v32);
    swift_unknownObjectRelease(v32);
    unint64_t v104 = OUTLINED_FUNCTION_68();
    else {
      uint64_t v33 = (void *)OUTLINED_FUNCTION_145_5();
    }
    uint64_t v41 = v0[34];
    uint64_t v42 = v0[30];
    uint64_t v43 = v0[31];
    uint64_t v45 = v0[27];
    uint64_t v44 = v0[28];
    uint64_t v46 = v0[23] + direct field offset for CallingIntentConfirmationFlowStrategy.confirmationResponse;
    OUTLINED_FUNCTION_22_0(v46, (uint64_t)(v0 + 14));
    (*(void (**)(uint64_t, void, uint64_t))(v44 + 104))( v41,  enum case for ConfirmationResponse.confirmed(_:),  v45);
    __swift_storeEnumTagSinglePayload(v41, 0LL, 1LL, v45);
    uint64_t v47 = v43 + *(int *)(v42 + 48);
    uint64_t v106 = v46;
    outlined init with copy of CommonDirectAction?( v46,  v43,  &demangling cache variable for type metadata for ConfirmationResponse?);
    outlined init with copy of CommonDirectAction?( v41,  v47,  &demangling cache variable for type metadata for ConfirmationResponse?);
    if (__swift_getEnumTagSinglePayload(v43, 1LL, v45) == 1)
    {
      outlined destroy of UUID?(v0[34], &demangling cache variable for type metadata for ConfirmationResponse?);
      if (OUTLINED_FUNCTION_65_19() == 1)
      {
        outlined destroy of UUID?(v0[31], &demangling cache variable for type metadata for ConfirmationResponse?);
        goto LABEL_26;
      }
    }

    else
    {
      outlined init with copy of CommonDirectAction?( v0[31],  v0[33],  &demangling cache variable for type metadata for ConfirmationResponse?);
      int v48 = OUTLINED_FUNCTION_65_19();
      uint64_t v49 = v0[33];
      uint64_t v50 = v0[34];
      if (v48 != 1)
      {
        uint64_t v62 = v0[31];
        uint64_t v63 = v0[28];
        uint64_t v64 = v0[29];
        uint64_t v65 = v33;
        uint64_t v66 = v0[27];
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 32))(v64, v47, v66);
        lazy protocol witness table accessor for type UUID and conformance UUID( &lazy protocol witness table cache variable for type ConfirmationResponse and conformance ConfirmationResponse,  (uint64_t (*)(uint64_t))&type metadata accessor for ConfirmationResponse,  (uint64_t)&protocol conformance descriptor for ConfirmationResponse);
        char v67 = dispatch thunk of static Equatable.== infix(_:_:)(v49, v64, v66);
        unint64_t v68 = *(void (**)(uint64_t, uint64_t))(v63 + 8);
        v68(v64, v66);
        outlined destroy of UUID?(v50, &demangling cache variable for type metadata for ConfirmationResponse?);
        uint64_t v69 = v66;
        uint64_t v33 = v65;
        v68(v49, v69);
        outlined destroy of UUID?(v62, &demangling cache variable for type metadata for ConfirmationResponse?);
        if ((v67 & 1) != 0)
        {
LABEL_26:
          if (v33)
          {
            uint64_t v70 = v0[42];
            uint64_t v71 = v0[39];
            uint64_t v54 = v0[40];
            uint64_t v102 = v33;
            id v72 = v33;
            uint64_t v73 = (void *)ParameterResolutionRecord.intent.getter(v70);
            uint64_t v74 = OUTLINED_FUNCTION_87_19(v71);
            uint64_t v75 = OUTLINED_FUNCTION_58_29(v74, *(void *)(*(void *)(v74 + 8) + 8LL));

            uint64_t v61 = CallingIntentConfirmationFlowStrategy.updateForConfirmedContact(selectedIndex:confirmedContact:currentContacts:)( (uint64_t)v25,  v72,  v75);
            OUTLINED_FUNCTION_39();
            goto LABEL_28;
          }

          goto LABEL_32;
        }

uint64_t CallingIntentConfirmationFlowStrategy.makePromptForConfirmation(itemToConfirm:resolveRecord:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  void v4[9] = a3;
  void v4[10] = v3;
  void v4[7] = a1;
  void v4[8] = a2;
  v4[11] = *v3;
  uint64_t v5 = type metadata accessor for ParameterIdentifier(0LL);
  v4[12] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v4[13] = v6;
  void v4[14] = OUTLINED_FUNCTION_23(v6);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t CallingIntentConfirmationFlowStrategy.makePromptForConfirmation(itemToConfirm:resolveRecord:)()
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v3 = OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_12_1(v3, (uint64_t)static Logger.siriPhone);
  os_log_type_t v4 = OUTLINED_FUNCTION_6_0();
  if (OUTLINED_FUNCTION_27_1(v4))
  {
    uint64_t v5 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
    OUTLINED_FUNCTION_47(v5);
    OUTLINED_FUNCTION_5_13(&dword_0, v6, v7, "#CallingIntentConfirmationFlowStrategy makePromptForConfirmation:");
    OUTLINED_FUNCTION_0_2(v1);
  }

  uint64_t v9 = *(void *)(v2 + 104);
  uint64_t v8 = *(void *)(v2 + 112);
  uint64_t v23 = *(void *)(v2 + 96);
  uint64_t v24 = *(void *)(v2 + 80);

  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(255LL);
  uint64_t v11 = type metadata accessor for ParameterResolutionRecord(0LL, AssociatedTypeWitness);
  uint64_t v12 = ParameterResolutionRecord.app.getter(v11);
  *(void *)(v2 + 120) = v12;
  uint64_t v13 = ParameterResolutionRecord.intent.getter(v11);
  *(void *)(v2 + outlined init with copy of SharedGlobalsProviding(v0, v1 - 128) = v13;
  uint64_t v14 = ParameterResolutionRecord.parameter.getter(v11);
  uint64_t v15 = ParameterIdentifier.name.getter(v14);
  uint64_t v17 = v16;
  *(void *)(v2 + 136) = v16;
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v23);
  uint64_t v18 = ParameterResolutionRecord.result.getter(v11);
  *(void *)(v2 + 144) = v18;
  *(_OWORD *)(v2 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0u;
  *(_OWORD *)(v2 + ++*(void *)(v0 + 16) = 0u;
  *(void *)(v2 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0LL;
  uint64_t v19 = OUTLINED_FUNCTION_108_5(*(void *)(*(void *)v24 + 400LL));
  uint64_t v25 = v20;
  uint64_t v21 = (void *)swift_task_alloc(v19);
  *(void *)(v2 + 15__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v21;
  *uint64_t v21 = v2;
  v21[1] = CallingIntentConfirmationFlowStrategy.makePromptForConfirmation(itemToConfirm:resolveRecord:);
  return v25(*(void *)(v2 + 56), v12, *(void *)(v2 + 64), v13, v15, v17, v18, v2 + 16);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v10;
  uint64_t v2 = *(void **)v1;
  uint64_t v10 = v2;
  uint64_t v3 = (void *)v2[18];
  os_log_type_t v4 = (void *)v2[16];
  uint64_t v5 = v2[15];
  OUTLINED_FUNCTION_39_0(&v10);
  v2[20] = v0;
  swift_task_dealloc();
  outlined destroy of UUID?( (uint64_t)(v2 + 2),  &demangling cache variable for type metadata for ContactResolutionSnippetGenerating?);

  OUTLINED_FUNCTION_34_0();
  swift_release(v5);
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return swift_task_switch(v6, v7, v8);
  }

  else
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v1 + 8))();
  }

{
  uint64_t v0;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_3_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t CallingIntentConfirmationFlowStrategy.makeConfirmationRejectedResponse(app:intent:parameter:)( uint64_t a1)
{
  v2[7] = a1;
  _BYTE v2[8] = v1;
  uint64_t v3 = type metadata accessor for DialogPhase(0LL);
  void v2[9] = OUTLINED_FUNCTION_23(*(void *)(v3 - 8));
  uint64_t v4 = type metadata accessor for CATOption(0LL);
  v2[10] = OUTLINED_FUNCTION_23(*(void *)(v4 - 8));
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

uint64_t CallingIntentConfirmationFlowStrategy.makeConfirmationRejectedResponse(app:intent:parameter:)()
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v3 = OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_12_1(v3, (uint64_t)static Logger.siriPhone);
  os_log_type_t v4 = OUTLINED_FUNCTION_6_0();
  if (OUTLINED_FUNCTION_27_1(v4))
  {
    uint64_t v5 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
    OUTLINED_FUNCTION_47(v5);
    OUTLINED_FUNCTION_5_13( &dword_0,  v6,  v7,  "#CallingIntentConfirmationFlowStrategy makeConfirmationRejectedResponse: ");
    OUTLINED_FUNCTION_0_2(v1);
  }

  uint64_t v8 = v2[10];
  uint64_t v9 = v2[8];

  uint64_t v10 = type metadata accessor for PhoneCallCommonCATsSimple(0LL);
  static CATOption.defaultMode.getter(v10);
  uint64_t v11 = CATWrapperSimple.__allocating_init(options:globals:)(v8, 0LL);
  uint64_t v12 = swift_retain();
  static DialogPhase.canceled.getter(v12);
  outlined init with copy of SharedGlobalsProviding(v9 + 24, (uint64_t)(v2 + 2));
  uint64_t v13 = type metadata accessor for DialogOutputFactory(0LL);
  OUTLINED_FUNCTION_15_2(v13);
  DialogOutputFactory.init(dialog:dialogPhase:sharedGlobals:)();
  uint64_t v15 = v14;
  v2[11] = v14;
  swift_release(v11);
  uint64_t v16 = OUTLINED_FUNCTION_108_5(*(void *)(*(void *)v15 + 136LL));
  uint64_t v20 = v17;
  uint64_t v18 = (void *)swift_task_alloc(v16);
  v2[12] = v18;
  *uint64_t v18 = v2;
  v18[1] = CallingIntentConfirmationFlowStrategy.makeConfirmationRejectedResponse(app:intent:parameter:);
  return v20(v2[7]);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t (*v4)(void);
  uint64_t v5;
  uint64_t v5 = *v1;
  uint64_t v2 = v5;
  OUTLINED_FUNCTION_39_0(&v5);
  *(void *)(v2 + outlined init with copy of SharedGlobalsProviding(v0, v1 - 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_4_0();
  }

  else
  {
    swift_release(*(void *)(v2 + 88));
    OUTLINED_FUNCTION_23_3();
    OUTLINED_FUNCTION_7_8();
    os_log_type_t v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
    return OUTLINED_FUNCTION_6_17(v4);
  }

uint64_t CallingIntentConfirmationFlowStrategy.updateForConfirmedContact(selectedIndex:confirmedContact:currentContacts:)( uint64_t a1, id a2, uint64_t a3)
{
  os_log_type_t v4 = v3;
  uint64_t v7 = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v70 = (uint64_t)_swiftEmptyArrayStorage;
  if (!a3) {
    goto LABEL_6;
  }
  if ((unint64_t)a3 >> 62)
  {
    if (a3 >= 0) {
      uint64_t v64 = a3 & 0xFFFFFFFFFFFFFF8LL;
    }
    else {
      uint64_t v64 = a3;
    }
    swift_bridgeObjectRetain();
    if (!_CocoaArrayWrapper.endIndex.getter(v64)) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }

  uint64_t v9 = *(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8LL));
  swift_bridgeObjectRetain();
  if (v9)
  {
LABEL_4:
    uint64_t v7 = a3;
    uint64_t v70 = a3;
  }

void CallingIntentConfirmationFlowStrategy.updateForRejectedContact(selectedIndex:rejectedContact:currentContacts:)( os_log_s *a1, void *a2, uint64_t a3)
{
  if (a3)
  {
    v36[2] = a3;
    OUTLINED_FUNCTION_6_1();
    id v6 = [a2 contactIdentifier];
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
      uint64_t v10 = v9;
    }

    else
    {
      uint64_t v8 = 0LL;
      uint64_t v10 = 0LL;
    }

    char v11 = specialized Optional<A>.isNilOrEmpty.getter(v8, v10);
    OUTLINED_FUNCTION_34_0();
    if ((v11 & 1) == 0)
    {
      OUTLINED_FUNCTION_6_1();
      id v12 = a2;
      uint64_t v10 = OUTLINED_FUNCTION_81_24(a3);
      char v14 = v13;
      OUTLINED_FUNCTION_50();
      if ((v14 & 1) == 0)
      {
        if (one-time initialization token for siriPhone != -1) {
          swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
        }
        uint64_t v15 = OUTLINED_FUNCTION_15_1();
        id v16 = (os_log_s *)__swift_project_value_buffer(v15, (uint64_t)static Logger.siriPhone);
        id v17 = v12;
        Logger.logObject.getter(v17);
        os_log_type_t v18 = OUTLINED_FUNCTION_41();
        if (OUTLINED_FUNCTION_50_12(v16))
        {
          char v19 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
          uint64_t v20 = OUTLINED_FUNCTION_7_0(32LL);
          v36[0] = v20;
          *(_DWORD *)char v19 = 136315138;
          uint64_t v34 = outlined bridged method (pb) of @objc INPerson.contactIdentifier.getter(v17);
          uint64_t v35 = v21;
          uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
          uint64_t v23 = String.init<A>(describing:)(&v34, v22);
          uint64_t v34 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v23, v24, v36);
          OUTLINED_FUNCTION_117_6((uint64_t)&v34, (uint64_t)&v35);

          OUTLINED_FUNCTION_87_0();
          OUTLINED_FUNCTION_57_0( &dword_0,  v16,  v18,  "#CallingIntentConfirmationFlowStrategy updateForRejectedContact: Contact to be confirmed with contactId=%s h as been rejected",  v19);
          OUTLINED_FUNCTION_17_0(v20);
          OUTLINED_FUNCTION_0_2(v20);
          OUTLINED_FUNCTION_0_2((uint64_t)v19);
        }

        else
        {
        }

        unint64_t v29 = v10;
LABEL_27:

        goto LABEL_28;
      }
    }

    if ((unint64_t)a3 >> 62)
    {
      if (a3 >= 0) {
        uint64_t v33 = a3 & 0xFFFFFFFFFFFFFF8LL;
      }
      else {
        uint64_t v33 = a3;
      }
      OUTLINED_FUNCTION_6_1();
      uint64_t v25 = (os_log_s *)_CocoaArrayWrapper.endIndex.getter(v33);
      OUTLINED_FUNCTION_50();
    }

    else
    {
      uint64_t v25 = *(os_log_s **)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8LL));
    }

    if ((uint64_t)v25 > (uint64_t)a1)
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v26 = OUTLINED_FUNCTION_15_1();
      OUTLINED_FUNCTION_12_1(v26, (uint64_t)static Logger.siriPhone);
      os_log_type_t v27 = OUTLINED_FUNCTION_6_0();
      if (OUTLINED_FUNCTION_7(v27))
      {
        uint64_t v28 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
        *(_DWORD *)uint64_t v28 = 134217984;
        uint64_t v34 = (uint64_t)a1;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35, v28 + 4);
        OUTLINED_FUNCTION_57_0( &dword_0,  v25,  (os_log_type_t)v10,  "#CallingIntentConfirmationFlowStrategy updateForRejectedContact: Removing confirmed contact at selectedIndex=%ld",  v28);
        OUTLINED_FUNCTION_0_2((uint64_t)v28);
      }

      unint64_t v29 = (unint64_t)a1;
      goto LABEL_27;
    }

    OUTLINED_FUNCTION_50();
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v30 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_12_1(v30, (uint64_t)static Logger.siriPhone);
    os_log_type_t v31 = OUTLINED_FUNCTION_41();
    if (OUTLINED_FUNCTION_10(v31))
    {
      os_log_type_t v32 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
      OUTLINED_FUNCTION_47(v32);
      OUTLINED_FUNCTION_5_38( &dword_0,  a1,  (os_log_type_t)v25,  "#CallingIntentConfirmationFlowStrategy updateForRejectedContact: Rejected contact was not found.");
      OUTLINED_FUNCTION_0_2(v10);
    }
  }

  OUTLINED_FUNCTION_6_1();
LABEL_28:
  OUTLINED_FUNCTION_23_13();
}

uint64_t CallingIntentConfirmationFlowStrategy.makePromptForConfirmationOutput(app:itemToConfirm:intent:parameterName:intentResolutionResult:crrOutputGenerator:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v9[17] = a8;
  v9[18] = v8;
  v9[15] = a6;
  v9[16] = a7;
  v9[13] = a4;
  v9[14] = a5;
  v9[11] = a2;
  v9[12] = a3;
  v9[10] = a1;
  v9[19] = *v8;
  v9[20] = *v8;
  return OUTLINED_FUNCTION_33_0((uint64_t)CallingIntentConfirmationFlowStrategy.makePromptForConfirmationOutput(app:itemToConfirm:intent:parameterName:intentResolutionResult:crrOutputGenerator:));
}

uint64_t CallingIntentConfirmationFlowStrategy.makePromptForConfirmationOutput(app:itemToConfirm:intent:parameterName:intentResolutionResult:crrOutputGenerator:)()
{
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[18];
  outlined init with copy of Any(v0[12], (uint64_t)(v0 + 2));
  OUTLINED_FUNCTION_68();
  else {
    uint64_t v3 = 0LL;
  }
  os_log_type_t v4 = (void **)(v2 + direct field offset for CallingIntentConfirmationFlowStrategy.personToConfirm);
  swift_beginAccess( v2 + direct field offset for CallingIntentConfirmationFlowStrategy.personToConfirm,  v0 + 6,  1LL,  0LL);
  uint64_t v5 = *v4;
  *os_log_type_t v4 = v3;

  uint64_t v7 = *(void *)(v1 + 264);
  uint64_t v6 = *(void *)(v1 + 272);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(255LL);
  uint64_t v9 = *(void *)(swift_getAssociatedConformanceWitness(v6, v7, AssociatedTypeWitness) + 8);
  uint64_t v10 = *(uint64_t (**)(void))(*(void *)(v9 + 8) + 8LL);
  swift_checkMetadataState(0LL, AssociatedTypeWitness);
  uint64_t v11 = v10();
  if (!v11) {
    goto LABEL_15;
  }
  uint64_t v12 = v11;
  if (!((unint64_t)v11 >> 62))
  {
    goto LABEL_14;
  }

  if (v11 >= 0) {
    v11 &= 0xFFFFFFFFFFFFFF8uLL;
  }
  if (!_CocoaArrayWrapper.endIndex.getter(v11))
  {
LABEL_14:
    uint64_t v11 = OUTLINED_FUNCTION_62();
LABEL_15:
    char v16 = 0;
    goto LABEL_16;
  }

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  OUTLINED_FUNCTION_27_7();
  uint64_t v2 = *(void **)(v1 + 168);
  OUTLINED_FUNCTION_14_1(*(void *)(v1 + 176));

  return OUTLINED_FUNCTION_6_17(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t static CallingIntentConfirmationFlowStrategy.makePromptForConfirmationOutput(app:intent:isFoundInAppConfirmation:preferredCallProvider:sharedGlobals:parameterName:intentResolutionResult:startCallCATsSimple:phoneCallDisplayTextCATsSimple:responseGenerator:personToConfirm:crrOutputGenerator:)( uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v9 + 376) = v29;
  *(void *)(v9 + 384) = v8;
  *(void *)(v9 + 36__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v28;
  *(_OWORD *)(v9 + 336) = v26;
  *(_OWORD *)(v9 + 35__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v27;
  *(void *)(v9 + 320) = a7;
  *(void *)(v9 + 32__swift_destroy_boxed_opaque_existential_1(v0 + 8) = a8;
  *(void *)(v9 + 304) = a5;
  *(void *)(v9 + 31__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a6;
  *(_BYTE *)(v9 + 680) = a4;
  *(void *)(v9 + 28__swift_destroy_boxed_opaque_existential_1(v0 + 8) = a2;
  *(void *)(v9 + 296) = a3;
  *(void *)(v9 + 280) = a1;
  uint64_t v10 = type metadata accessor for PhoneError(0LL);
  *(void *)(v9 + 39__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v10;
  *(void *)(v9 + 400) = OUTLINED_FUNCTION_23(*(void *)(v10 - 8));
  uint64_t v11 = type metadata accessor for ContactConfirmationModel(0LL);
  *(void *)(v9 + 40__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v11;
  *(void *)(v9 + 4++*(void *)(v0 + 16) = OUTLINED_FUNCTION_23(*(void *)(v11 - 8));
  uint64_t v12 = type metadata accessor for YesNoConfirmationModel(0LL);
  *(void *)(v9 + 424) = OUTLINED_FUNCTION_23(*(void *)(v12 - 8));
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  *(void *)(v9 + 43__swift_destroy_boxed_opaque_existential_1(v0 + 2) = OUTLINED_FUNCTION_8_30(*(void *)(v13 - 8));
  *(void *)(v9 + 440) = OUTLINED_FUNCTION_28();
  *(void *)(v9 + 44__swift_destroy_boxed_opaque_existential_1(v0 + 8) = OUTLINED_FUNCTION_28();
  uint64_t v14 = type metadata accessor for Locale(0LL);
  *(void *)(v9 + 456) = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  *(void *)(v9 + 464) = v15;
  *(void *)(v9 + 47__swift_destroy_boxed_opaque_existential_1(v0 + 2) = OUTLINED_FUNCTION_23(v15);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NLContextUpdate?);
  *(void *)(v9 + 480) = OUTLINED_FUNCTION_8_30(*(void *)(v16 - 8));
  *(void *)(v9 + 48__swift_destroy_boxed_opaque_existential_1(v0 + 8) = OUTLINED_FUNCTION_28();
  uint64_t v17 = type metadata accessor for NLContextUpdate(0LL);
  *(void *)(v9 + 496) = v17;
  uint64_t v18 = *(void *)(v17 - 8);
  *(void *)(v9 + 504) = v18;
  *(void *)(v9 + 51__swift_destroy_boxed_opaque_existential_1(v0 + 2) = OUTLINED_FUNCTION_23(v18);
  uint64_t v19 = type metadata accessor for DialogPhase(0LL);
  *(void *)(v9 + 520) = OUTLINED_FUNCTION_23(*(void *)(v19 - 8));
  uint64_t v20 = type metadata accessor for OutputGenerationManifest(0LL);
  *(void *)(v9 + 52__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v20;
  uint64_t v21 = *(void *)(v20 - 8);
  *(void *)(v9 + 536) = v21;
  *(void *)(v9 + 544) = OUTLINED_FUNCTION_23(v21);
  OUTLINED_FUNCTION_19_1();
  return swift_task_switch(v22, v23, v24);
}

uint64_t static CallingIntentConfirmationFlowStrategy.makePromptForConfirmationOutput(app:intent:isFoundInAppConfirmation:preferredCallProvider:sharedGlobals:parameterName:intentResolutionResult:startCallCATsSimple:phoneCallDisplayTextCATsSimple:responseGenerator:personToConfirm:crrOutputGenerator:)()
{
  uint64_t v79 = v0 + 264;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v2 = *(os_log_s **)(v0 + 328);
  uint64_t v1 = *(void **)(v0 + 336);
  uint64_t v3 = OUTLINED_FUNCTION_15_1();
  *(void *)(v0 + 55__swift_destroy_boxed_opaque_existential_1(v0 + 2) = __swift_project_value_buffer(v3, (uint64_t)static Logger.siriPhone);
  swift_bridgeObjectRetain_n(v2, 2LL);
  id v4 = v1;
  OUTLINED_FUNCTION_138_6();
  os_log_type_t v5 = OUTLINED_FUNCTION_6_0();
  BOOL v6 = OUTLINED_FUNCTION_50_12(v2);
  unint64_t v8 = *(void *)(v0 + 328);
  uint64_t v7 = *(void **)(v0 + 336);
  if (v6)
  {
    uint64_t v9 = *(void *)(v0 + 320);
    uint64_t v10 = OUTLINED_FUNCTION_7_0(22LL);
    uint64_t v11 = OUTLINED_FUNCTION_7_0(32LL);
    v81[0] = v11;
    *(_DWORD *)uint64_t v10 = 136315394;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 264) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v9, v8, v81);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v79, v0 + 272, v10 + 4);
    swift_bridgeObjectRelease_n(v8, 3LL);
    *(_WORD *)(v10 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2048;
    id v12 = [v7 confirmationReason];

    *(void *)(v0 + 27__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 272, v0 + 280, v10 + 14);

    _os_log_impl( &dword_0,  v2,  v5,  "#CallingIntentConfirmationFlowStrategy makePromptForConfirmationOutput: for parameter %s with confirmationReason=%ld",  (uint8_t *)v10,  0x16u);
    OUTLINED_FUNCTION_17_0(v11);
    OUTLINED_FUNCTION_0_2(v11);
    OUTLINED_FUNCTION_0_2(v10);
  }

  else
  {

    OUTLINED_FUNCTION_7_4(v8);
  }

  uint64_t v13 = *(void **)(v0 + 368);
  if (v13)
  {
    id v14 = v13;
    uint64_t v15 = App.appIdentifier.getter();
    if (v16) {
      uint64_t v17 = v15;
    }
    else {
      uint64_t v17 = 0LL;
    }
    if (v16) {
      unint64_t v18 = v16;
    }
    else {
      unint64_t v18 = 0xE000000000000000LL;
    }
    uint64_t v19 = App.isFirstParty()();
    if ((v19 & 1) != 0)
    {
      uint64_t v21 = *(void *)(v0 + 304);
      uint64_t v20 = *(void **)(v0 + 312);
      uint64_t v22 = v20[3];
      uint64_t v23 = v20[4];
      __swift_project_boxed_opaque_existential_1(v20, v22);
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v23);
      uint64_t v17 = static UserFacingCallingAppUtils.getAppBundleId(preferredCallProvider:deviceState:)( v21,  (void *)(v0 + 176));
      unint64_t v25 = v24;
      OUTLINED_FUNCTION_34_0();
      uint64_t v19 = OUTLINED_FUNCTION_11_12();
      unint64_t v18 = v25;
    }

    *(void *)(v0 + 56__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v18;
    *(void *)(v0 + 560) = v17;
    uint64_t v26 = *(void *)(v0 + 520);
    uint64_t v28 = *(void *)(v0 + 488);
    uint64_t v27 = *(void *)(v0 + 496);
    static DialogPhase.confirmation.getter(v19);
    OutputGenerationManifest.init(dialogPhase:_:)( v26,  closure #1 in static CallingIntentConfirmationFlowStrategy.makePromptForConfirmationOutput(app:intent:isFoundInAppConfirmation:preferredCallProvider:sharedGlobals:parameterName:intentResolutionResult:startCallCATsSimple:phoneCallDisplayTextCATsSimple:responseGenerator:personToConfirm:crrOutputGenerator:),  0LL);
    uint64_t v29 = (void *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneCallNLContextProvider<INIntent, INIntentResponse>);
    specialized static PhoneCallNLContextProvider.needsConfirmationContext(parameter:resolutionResult:)();
    if (__swift_getEnumTagSinglePayload(v28, 1LL, v27) == 1)
    {
      outlined destroy of UUID?( *(void *)(v0 + 488),  &demangling cache variable for type metadata for NLContextUpdate?);
      OUTLINED_FUNCTION_138_6();
      os_log_type_t v30 = OUTLINED_FUNCTION_24();
      if (OUTLINED_FUNCTION_27_1(v30))
      {
        os_log_type_t v31 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
        OUTLINED_FUNCTION_47(v31);
        OUTLINED_FUNCTION_5_13( &dword_0,  v32,  v33,  "#CallingIntentConfirmationFlowStrategy makePromptForConfirmationOutput: unable to build NL context update.");
        OUTLINED_FUNCTION_0_2(v27);
      }
    }

    else
    {
      uint64_t v51 = *(void *)(v0 + 504);
      uint64_t v50 = *(void *)(v0 + 512);
      uint64_t v52 = *(void *)(v0 + 496);
      uint64_t v53 = *(void *)(v0 + 480);
      OUTLINED_FUNCTION_56_4( v50,  *(void *)(v0 + 488),  *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v51 + 32));
      id v54 = [objc_allocWithZone(SAAceConfirmationContext) init];
      [v54 setReason:SAAceConfirmationReasonCONFIRM_CONTACTValue];
      uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      uint64_t v56 = OUTLINED_FUNCTION_5_32(v55);
      *(_OWORD *)(v56 + ++*(void *)(v0 + 16) = xmmword_31FE60;
      *(void *)(v56 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v54;
      v81[0] = v56;
      specialized Array._endMutation()(v56, v57, v58, v59);
      uint64_t v60 = v81[0];
      id v61 = v54;
      NLContextUpdate.conversationStateAttachments.setter(v60);
      OUTLINED_FUNCTION_56_4(v53, v50, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v51 + 16));
      __swift_storeEnumTagSinglePayload(v53, 0LL, 1LL, v52);
      OutputGenerationManifest.nlContextUpdate.setter(v53);

      OUTLINED_FUNCTION_72_0(*(uint64_t (**)(uint64_t, uint64_t))(v51 + 8));
    }

    uint64_t v62 = *(void *)(v0 + 472);
    uint64_t v63 = *(void *)(v0 + 456);
    uint64_t v73 = v63;
    uint64_t v76 = *(void *)(v0 + 448);
    uint64_t v64 = *(void **)(v0 + 368);
    uint64_t v74 = v64;
    uint64_t v75 = *(void *)(v0 + 464);
    uint64_t v77 = *(void **)(v0 + 344);
    BOOL v80 = *(void *)(v0 + 304) == 2LL;
    type metadata accessor for PhonePerson(0LL);
    static Device.current.getter((void *)(v0 + 56));
    OUTLINED_FUNCTION_57_34((void *)(v0 + 56));
    __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 56));
    OUTLINED_FUNCTION_63_29(v64);
    uint64_t v66 = v65;
    *(void *)(v0 + 576) = v65;
    uint64_t v67 = *(void (**)(uint64_t, uint64_t))(v75 + 8);
    v67(v62, v63);
    swift_retain();
    static Device.current.getter((void *)(v0 + 96));
    OUTLINED_FUNCTION_57_34((void *)(v0 + 96));
    __swift_destroy_boxed_opaque_existential_1((void *)(v0 + 96));
    OUTLINED_FUNCTION_63_29(v74);
    uint64_t v69 = v68;
    *(void *)(v0 + 584) = v68;
    v67(v62, v73);
    static CallingIntentConfirmationFlowStrategy.getContactsInferenceSource(intent:)(v76);
    uint64_t v70 = OUTLINED_FUNCTION_108_5(*(void *)(class metadata base offset for StartCallCATsSimple + *v77 + 32));
    os_log_type_t v78 = v71;
    id v72 = (void *)swift_task_alloc(v70);
    *(void *)(v0 + 59__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v72;
    *id v72 = v0;
    v72[1] = static CallingIntentConfirmationFlowStrategy.makePromptForConfirmationOutput(app:intent:isFoundInAppConfirmation:preferredCallProvider:sharedGlobals:parameterName:intentResolutionResult:startCallCATsSimple:phoneCallDisplayTextCATsSimple:responseGenerator:personToConfirm:crrOutputGenerator:);
    return v78(v80, v66, v69, 0LL, *(unsigned __int8 *)(v0 + 680), *(void *)(v0 + 448));
  }

  else
  {
    OUTLINED_FUNCTION_138_6();
    os_log_type_t v34 = OUTLINED_FUNCTION_24();
    if (OUTLINED_FUNCTION_50_12(v2))
    {
      uint64_t v35 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v36 = OUTLINED_FUNCTION_7_0(32LL);
      v81[0] = v36;
      *(_DWORD *)uint64_t v35 = 136315138;
      *(void *)(v0 + 256) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)( 0xD0000000000000F6LL,  0x8000000000352A40LL,  v81);
      OUTLINED_FUNCTION_117_6(v0 + 256, v79);
      OUTLINED_FUNCTION_57_0(&dword_0, v2, v34, "#%s: No item to confirm.", v35);
      OUTLINED_FUNCTION_17_0(v36);
      OUTLINED_FUNCTION_0_2(v36);
      OUTLINED_FUNCTION_0_2((uint64_t)v35);
    }

    uint64_t v37 = *(void *)(v0 + 392);
    uint64_t v38 = *(void *)(v0 + 400);
    swift_storeEnumTagMultiPayload(v38, v37, 11LL);
    lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type PhoneError and conformance PhoneError,  type metadata accessor for PhoneError,  (uint64_t)&protocol conformance descriptor for PhoneError);
    swift_allocError(v37, v39, 0LL, 0LL);
    PhoneError.logged()(v40);
    outlined destroy of MainFlow(v38, type metadata accessor for PhoneError);
    swift_willThrow(v41, v42, v43, v44, v45, v46, v47, v48);
    swift_task_dealloc();
    OUTLINED_FUNCTION_23_3();
    OUTLINED_FUNCTION_10_0();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_92_0();
    OUTLINED_FUNCTION_9_2();
    OUTLINED_FUNCTION_14_3();
    OUTLINED_FUNCTION_29_17();
    OUTLINED_FUNCTION_25();
    OUTLINED_FUNCTION_7_8();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  os_log_type_t v7;
  _WORD *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v27;
  uint64_t v1 = *(void **)(v0 + 312);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  OUTLINED_FUNCTION_49_0(v1);
  id v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 56))(v2, v3);
  LOBYTE(v__swift_destroy_boxed_opaque_existential_1(v0 + 2) = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 248LL))(v4);
  os_log_type_t v5 = OUTLINED_FUNCTION_38_1();
  if ((v2 & 1) != 0)
  {
    outlined init with copy of CommonDirectAction?( *(void *)(v0 + 376),  v0 + 216,  &demangling cache variable for type metadata for ContactResolutionSnippetGenerating?);
    if (*(void *)(v0 + 240))
    {
      outlined init with take of AppSelectionSignalComponent((__int128 *)(v0 + 216), v0 + 16);
    }

    else
    {
      uint64_t v17 = *(void *)(v0 + 568);
      unint64_t v18 = *(void *)(v0 + 560);
      type metadata accessor for CATGlobals(0LL);
      uint64_t v19 = swift_bridgeObjectRetain();
      uint64_t v20 = CATGlobals.__allocating_init()(v19);
      uint64_t v21 = type metadata accessor for ContactResolutionSnippetGenerator(0LL);
      OUTLINED_FUNCTION_15_2(v21);
      uint64_t v22 = ContactResolutionSnippetGenerator.init(appBundleId:globals:)(v18, v17, v20);
      *(void *)(v0 + 40) = v21;
      *(void *)(v0 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = &protocol witness table for ContactResolutionSnippetGenerator;
      *(void *)(v0 + ++*(void *)(v0 + 16) = v22;
      outlined destroy of UUID?( v0 + 216,  &demangling cache variable for type metadata for ContactResolutionSnippetGenerating?);
    }

    uint64_t v23 = *(void *)(v0 + 368);
    unint64_t v24 = *(void *)(v0 + 304);
    unint64_t v25 = (void *)swift_task_alloc(dword_44193C);
    *(void *)(v0 + 6++*(void *)(v0 + 16) = v25;
    *unint64_t v25 = v0;
    v25[1] = static CallingIntentConfirmationFlowStrategy.makePromptForConfirmationOutput(app:intent:isFoundInAppConfirmation:preferredCallProvider:sharedGlobals:parameterName:intentResolutionResult:startCallCATsSimple:phoneCallDisplayTextCATsSimple:responseGenerator:personToConfirm:crrOutputGenerator:);
    return static CallingIntentConfirmationFlowStrategy.getYesNoClarificationContactName(sharedGlobals:outputManifest:responseGenerator:crrOutputGenerator:contactToConfirm:dialogOverride:isFaceTime:)( *(void *)(v0 + 280),  *(void *)(v0 + 312),  *(void *)(v0 + 544),  *(void *)(v0 + 360),  v0 + 16,  v23,  *(void *)(v0 + 600),  v24 == 2);
  }

  else
  {
    BOOL v6 = *(void **)(v0 + 552);
    Logger.logObject.getter(v5);
    uint64_t v7 = OUTLINED_FUNCTION_6_0();
    if (OUTLINED_FUNCTION_27_1(v7))
    {
      unint64_t v8 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
      OUTLINED_FUNCTION_47(v8);
      OUTLINED_FUNCTION_5_13( &dword_0,  v9,  v10,  "#CallingIntentConfirmationFlowStrategy makePromptForConfirmationOutput: confirming");
      OUTLINED_FUNCTION_0_2(v3);
    }

    uint64_t v11 = *(void **)(v0 + 368);

    id v12 = [v11 contactIdentifier];
    if (v12)
    {
      uint64_t v13 = v12;
      id v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
      unint64_t v16 = v15;
    }

    else
    {
      id v14 = 0LL;
      unint64_t v16 = 0xE000000000000000LL;
    }

    *(void *)(v0 + 640) = v16;
    *(void *)(v0 + 63__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v14;
    uint64_t v27 = (void *)swift_task_alloc(dword_441934);
    *(void *)(v0 + 64__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v27;
    *uint64_t v27 = v0;
    v27[1] = static CallingIntentConfirmationFlowStrategy.makePromptForConfirmationOutput(app:intent:isFoundInAppConfirmation:preferredCallProvider:sharedGlobals:parameterName:intentResolutionResult:startCallCATsSimple:phoneCallDisplayTextCATsSimple:responseGenerator:personToConfirm:crrOutputGenerator:);
    return static CallingIntentConfirmationFlowStrategy.buildYesNoConfirmationModel(phoneCallDisplayTextCATsSimple:)( *(void *)(v0 + 424),  *(void *)(v0 + 352));
  }

{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  OUTLINED_FUNCTION_27_7();
  os_log_s *v2 = *v1;
  *(void *)(v3 + 624) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_5_7();
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  int *v21;
  void *v22;
  Swift::Bool v23;
  char *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *boxed_opaque_existential_1;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  if (v0[72])
  {
    uint64_t v1 = v0[55];
    uint64_t v2 = swift_retain();
    dispatch thunk of DialogPerson.simpleName.getter(v2);
    OUTLINED_FUNCTION_38_1();
    type metadata accessor for SpeakableString(0LL);
    uint64_t v3 = OUTLINED_FUNCTION_67_0(v1);
    if ((_DWORD)v3 == 1)
    {
      outlined destroy of UUID?(v0[55], &demangling cache variable for type metadata for SpeakableString?);
      id v4 = 0LL;
      os_log_type_t v5 = 0xE000000000000000LL;
    }

    else
    {
      id v4 = SpeakableString.print.getter(v3);
      os_log_type_t v5 = v6;
      OUTLINED_FUNCTION_59_27();
    }

    uint64_t v7 = v0[72];
    unint64_t v8 = swift_retain();
    uint64_t v9 = DialogPerson.personHandle.getter(v8);
    uint64_t v10 = swift_release(v7);
    uint64_t v39 = v5;
    uint64_t v40 = v4;
    if (v9)
    {
      uint64_t v11 = v0[54];
      DialogPersonHandle.label.getter(v10);
      OUTLINED_FUNCTION_38_1();
      id v12 = OUTLINED_FUNCTION_67_0(v11);
      if ((_DWORD)v12 != 1)
      {
        uint64_t v13 = SpeakableString.print.getter(v12);
        uint64_t v41 = v14;
        uint64_t v42 = v13;
        OUTLINED_FUNCTION_59_27();
        goto LABEL_11;
      }

      outlined destroy of UUID?(v0[54], &demangling cache variable for type metadata for SpeakableString?);
    }
  }

  else
  {
    uint64_t v39 = 0xE000000000000000LL;
    uint64_t v40 = 0LL;
  }

  uint64_t v41 = 0xE000000000000000LL;
  uint64_t v42 = 0LL;
LABEL_11:
  uint64_t v15 = v0[80];
  unint64_t v16 = v0[79];
  uint64_t v43 = (void *)v0[75];
  uint64_t v17 = v0[71];
  unint64_t v18 = v0[70];
  uint64_t v19 = (void *)v0[52];
  uint64_t v20 = v0[53];
  uint64_t v21 = (int *)v0[51];
  uint64_t v22 = (void *)v0[45];
  OUTLINED_FUNCTION_20_14();
  uint64_t v23 = App.isFirstParty()();
  outlined init with copy of YesNoConfirmationModel( v20,  (uint64_t)v19 + v21[6],  type metadata accessor for YesNoConfirmationModel);
  *uint64_t v19 = 0xD000000000000013LL;
  v19[1] = 0x8000000000346BC0LL;
  void v19[2] = v18;
  v19[3] = v17;
  unint64_t v24 = (char *)v19 + v21[7];
  *(void *)unint64_t v24 = v18;
  *((void *)v24 + 1) = v17;
  *((void *)v24 + __swift_destroy_boxed_opaque_existential_1(v0 + 2) = v16;
  *((void *)v24 + __swift_destroy_boxed_opaque_existential_1(v0 + 3) = v15;
  *((void *)v24 + 4) = v40;
  *((void *)v24 + __swift_destroy_boxed_opaque_existential_1(v0 + 5) = v39;
  *((void *)v24 + 6) = v42;
  *((void *)v24 + __swift_destroy_boxed_opaque_existential_1(v0 + 7) = v41;
  v24[64] = v23;
  unint64_t v25 = (void *)((char *)v19 + v21[8]);
  *unint64_t v25 = 0LL;
  v25[1] = 0LL;
  uint64_t v26 = v22[3];
  OUTLINED_FUNCTION_49_0(v22);
  uint64_t v27 = type metadata accessor for PhoneSnippetDataModels(0LL);
  v0[20] = v27;
  lazy protocol witness table accessor for type UUID and conformance UUID( (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels and conformance PhoneSnippetDataModels,  type metadata accessor for PhoneSnippetDataModels,  (uint64_t)&protocol conformance descriptor for PhoneSnippetDataModels);
  v0[21] = v28;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v0 + 17);
  outlined init with copy of YesNoConfirmationModel( (uint64_t)v19,  (uint64_t)boxed_opaque_existential_1,  type metadata accessor for ContactConfirmationModel);
  swift_storeEnumTagMultiPayload(boxed_opaque_existential_1, v27, 2LL);
  os_log_type_t v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  os_log_type_t v31 = OUTLINED_FUNCTION_5_32(v30);
  *(_OWORD *)(v31 + ++*(void *)(v0 + 16) = xmmword_31FE60;
  *(void *)(v31 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v43;
  uint64_t v44 = v31;
  specialized Array._endMutation()(v31, v32, v33, v34);
  v0[83] = v44;
  uint64_t v35 = async function pointer to dispatch thunk of ResponseGenerating.makeResponseOutput(resultModel:dialog:outputGenerationManifest:)[1];
  OUTLINED_FUNCTION_20_14();
  uint64_t v36 = v43;
  uint64_t v37 = (void *)swift_task_alloc(v35);
  v0[84] = v37;
  uint64_t *v37 = v0;
  v37[1] = static CallingIntentConfirmationFlowStrategy.makePromptForConfirmationOutput(app:intent:isFoundInAppConfirmation:preferredCallProvider:sharedGlobals:parameterName:intentResolutionResult:startCallCATsSimple:phoneCallDisplayTextCATsSimple:responseGenerator:personToConfirm:crrOutputGenerator:);
  return dispatch thunk of ResponseGenerating.makeResponseOutput(resultModel:dialog:outputGenerationManifest:)( v0[35],  v0 + 17,  v44,  v0[68],  v26);
}

{
  uint64_t v0;
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_14_1(*(void *)(v0 + 672));
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_76_1();
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_4_0();
}

uint64_t static CallingIntentConfirmationFlowStrategy.makePromptForConfirmationOutput(app:intent:isFoundInAppConfirmation:preferredCallProvider:sharedGlobals:parameterName:intentResolutionResult:startCallCATsSimple:phoneCallDisplayTextCATsSimple:responseGenerator:personToConfirm:crrOutputGenerator:)( uint64_t a1)
{
  uint64_t v3 = *v2;
  v3[75] = a1;
  v3[76] = v1;
  swift_task_dealloc();
  uint64_t v4 = v3[72];
  outlined destroy of UUID?(v3[56], &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_22();
  swift_release(v4);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_4_0();
}

#error "30EFD8: call analysis failed (funcsize=27)"
uint64_t static CallingIntentConfirmationFlowStrategy.makePromptForConfirmationOutput(app:intent:isFoundInAppConfirmation:preferredCallProvider:sharedGlobals:parameterName:intentResolutionResult:startCallCATsSimple:phoneCallDisplayTextCATsSimple:responseGenerator:personToConfirm:crrOutputGenerator:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v4 = *v1;
  uint64_t v2 = v4;
  OUTLINED_FUNCTION_39_0(&v4);
  *(void *)(v2 + 656) = v0;
  swift_task_dealloc();
  if (v0) {
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_4_0();
}

#error "30F3FC: call analysis failed (funcsize=38)"
#error "30F480: call analysis failed (funcsize=34)"
#error "30F4F4: call analysis failed (funcsize=29)"
#error "30F578: call analysis failed (funcsize=33)"
uint64_t closure #1 in static CallingIntentConfirmationFlowStrategy.makePromptForConfirmationOutput(app:intent:isFoundInAppConfirmation:preferredCallProvider:sharedGlobals:parameterName:intentResolutionResult:startCallCATsSimple:phoneCallDisplayTextCATsSimple:responseGenerator:personToConfirm:crrOutputGenerator:)()
{
  OutputGenerationManifest.canUseServerTTS.setter(0LL);
  OutputGenerationManifest.listenAfterSpeaking.setter(1LL);
  OutputGenerationManifest.printSupportingDialogInDisplayModes.setter(1LL);
  return OutputGenerationManifest.responseViewId.setter(0xD000000000000011LL, 0x8000000000346B80LL);
}

uint64_t static CallingIntentConfirmationFlowStrategy.getContactsInferenceSource(intent:)@<X0>( uint64_t a1@<X8>)
{
  uint64_t v5 = v1 + 264;
  uint64_t v3 = *(void *)(v1 + 264);
  uint64_t v4 = *(void *)(v5 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(255LL);
  uint64_t v7 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness(v4, v3, AssociatedTypeWitness) + 8) + 8LL);
  unint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
  uint64_t v9 = swift_checkMetadataState(0LL, AssociatedTypeWitness);
  uint64_t v10 = v8(v9, v7);
  if (!v10) {
    goto LABEL_17;
  }
  uint64_t v11 = v10;
  if ((unint64_t)v10 >> 62)
  {
    if (v10 >= 0) {
      uint64_t v32 = v10 & 0xFFFFFFFFFFFFFF8LL;
    }
    else {
      uint64_t v32 = v10;
    }
    swift_bridgeObjectRetain();
    uint64_t v12 = _CocoaArrayWrapper.endIndex.getter(v32);
    swift_bridgeObjectRelease();
  }

  else
  {
    uint64_t v12 = *(void *)((char *)&dword_10 + (v10 & 0xFFFFFFFFFFFFFF8LL));
  }

  if (v12 != 1
    || ((specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v11 & 0xC000000000000001LL) == 0, v11),
         (v11 & 0xC000000000000001LL) != 0)
      ? (id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v11))
      : (id v13 = *(id *)(v11 + 32)),
        id v14 = v13,
        id v15 = [v13 siriMatches],
        v14,
        !v15))
  {
    swift_bridgeObjectRelease();
LABEL_17:
    uint64_t v28 = type metadata accessor for SpeakableString(0LL);
    return __swift_storeEnumTagSinglePayload(a1, 1LL, 1LL, v28);
  }

  unint64_t v16 = type metadata accessor for INPerson();
  uint64_t v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v15, v16);

  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0LL, (v17 & 0xC000000000000001LL) == 0, v17);
  if ((v17 & 0xC000000000000001LL) != 0) {
    id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v17);
  }
  else {
    id v18 = *(id *)(v17 + 32);
  }
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  if (!INPerson.isProvidedByPlus.getter())
  {
    swift_bridgeObjectRelease();

    goto LABEL_17;
  }

  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v20 = type metadata accessor for Logger(0LL);
  __swift_project_value_buffer(v20, (uint64_t)static Logger.siriPhone);
  uint64_t v21 = swift_bridgeObjectRetain();
  uint64_t v22 = (os_log_s *)Logger.logObject.getter(v21);
  os_log_type_t v24 = static os_log_type_t.debug.getter(v22, v23);
  if (os_log_type_enabled(v22, v24))
  {
    unint64_t v25 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v26 = (void *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)unint64_t v25 = 138412290;
    if ((v11 & 0xC000000000000001LL) != 0) {
      id v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v11);
    }
    else {
      id v27 = *(id *)(v11 + 32);
    }
    id v30 = v27;
    id v33 = v27;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34, v25 + 4);
    *uint64_t v26 = v30;
    swift_bridgeObjectRelease_n(v11, 2LL);
    _os_log_impl( &dword_0,  v22,  v24,  "#CallingIntentConfirmationFlowStrategy Found a contact that is inferred by PLUS: %@",  v25,  0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy(v26, 1LL);
    swift_slowDealloc(v26, -1LL, -1LL);
    swift_slowDealloc(v25, -1LL, -1LL);
  }

  else
  {

    swift_bridgeObjectRelease_n(v11, 2LL);
  }

  SpeakableString.init(print:speak:)( 0x747369486C6C6163LL,  0xEB0000000079726FLL,  0x747369486C6C6163LL,  0xEB0000000079726FLL);

  uint64_t v31 = type metadata accessor for SpeakableString(0LL);
  return __swift_storeEnumTagSinglePayload(a1, 0LL, 1LL, v31);
}

uint64_t static CallingIntentConfirmationFlowStrategy.getYesNoClarificationContactName(sharedGlobals:outputManifest:responseGenerator:crrOutputGenerator:contactToConfirm:dialogOverride:isFaceTime:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  *(_BYTE *)(v8 + 96) = a8;
  *(void *)(v8 + 40) = a6;
  *(void *)(v8 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = a7;
  *(void *)(v8 + 24) = a3;
  *(void *)(v8 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a5;
  *(void *)(v8 + ++*(void *)(v0 + 16) = a1;
  uint64_t v9 = type metadata accessor for ContactResolutionVerb(0LL);
  *(void *)(v8 + 56) = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  *(void *)(v8 + 64) = v10;
  *(void *)(v8 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = swift_task_alloc((*(void *)(v10 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch( static CallingIntentConfirmationFlowStrategy.getYesNoClarificationContactName(sharedGlobals:outputManifest:responseGenerator:crrOutputGenerator:contactToConfirm:dialogOverride:isFaceTime:),  0LL,  0LL);
}

uint64_t static CallingIntentConfirmationFlowStrategy.getYesNoClarificationContactName(sharedGlobals:outputManifest:responseGenerator:crrOutputGenerator:contactToConfirm:dialogOverride:isFaceTime:)()
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v4 = OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_12_1(v4, (uint64_t)static Logger.siriPhone);
  os_log_type_t v5 = OUTLINED_FUNCTION_41();
  if (OUTLINED_FUNCTION_10(v5))
  {
    BOOL v6 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
    OUTLINED_FUNCTION_47(v6);
    OUTLINED_FUNCTION_5_38( &dword_0,  v0,  v1,  "#CallingIntentConfirmationFlowStrategy getYesNoClarificationContactName: confirming by using output result generator");
    OUTLINED_FUNCTION_0_2(v2);
  }

  uint64_t v8 = *(void *)(v3 + 64);
  uint64_t v7 = *(void *)(v3 + 72);
  int v9 = *(unsigned __int8 *)(v3 + 96);
  uint64_t v10 = *(void *)(v3 + 56);
  uint64_t v11 = *(void **)(v3 + 32);

  OUTLINED_FUNCTION_49_0(v11);
  uint64_t v12 = (unsigned int *)&enum case for ContactResolutionVerb.facetime(_:);
  if (!v9) {
    uint64_t v12 = (unsigned int *)&enum case for ContactResolutionVerb.phoneCallOrFacetimeAudio(_:);
  }
  (*(void (**)(uint64_t, void, uint64_t))(v8 + 104))(v7, *v12, v10);
  id v13 = (void *)swift_task_alloc(async function pointer to dispatch thunk of ContactResolutionSnippetGenerating.generateYesNoClarificationContactName(contact:contactVerb:primaryButtonInvocationID:secondaryButtonInvocationID:dialogOverride:outputGenerationManifest:)[1]);
  *(void *)(v3 + 80) = v13;
  *id v13 = v3;
  v13[1] = static CallingIntentConfirmationFlowStrategy.getYesNoClarificationContactName(sharedGlobals:outputManifest:responseGenerator:crrOutputGenerator:contactToConfirm:dialogOverride:isFaceTime:);
  return dispatch thunk of ContactResolutionSnippetGenerating.generateYesNoClarificationContactName(contact:contactVerb:primaryButtonInvocationID:secondaryButtonInvocationID:dialogOverride:outputGenerationManifest:)(*(void *)(v3 + 16));
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v2 = *v1;
  uint64_t v8 = v2;
  uint64_t v3 = *(void *)(v2 + 64);
  OUTLINED_FUNCTION_39_0(&v8);
  *(void *)(v2 + 8__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_72_0(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return swift_task_switch(v4, v5, v6);
  }

  else
  {
    swift_task_dealloc();
    return OUTLINED_FUNCTION_12_4((uint64_t (*)(void))v1[1]);
  }

{
  uint64_t v0;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_3_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t static CallingIntentConfirmationFlowStrategy.buildYesNoConfirmationModel(phoneCallDisplayTextCATsSimple:)( uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 1376) = a2;
  *(void *)(v2 + 136__swift_destroy_boxed_opaque_existential_1(v0 + 8) = a1;
  return swift_task_switch( static CallingIntentConfirmationFlowStrategy.buildYesNoConfirmationModel(phoneCallDisplayTextCATsSimple:),  0LL,  0LL);
}

uint64_t static CallingIntentConfirmationFlowStrategy.buildYesNoConfirmationModel(phoneCallDisplayTextCATsSimple:)()
{
  uint64_t v1 = v0[172];
  v0[173] = static SiriPhoneActionFactory.makeConfirmAndRejectActions()();
  v0[174] = v2;
  OUTLINED_FUNCTION_63_7();
  swift_asyncLet_begin( v0 + 82,  0LL,  &type metadata for String,  &async function pointer to partial apply for implicit closure #1 in static CallingIntentConfirmationFlowStrategy.buildYesNoConfirmationModel(phoneCallDisplayTextCATsSimple:),  v1);
  OUTLINED_FUNCTION_63_7();
  swift_asyncLet_begin( v0 + 2,  0LL,  &type metadata for String,  &async function pointer to partial apply for implicit closure #2 in static CallingIntentConfirmationFlowStrategy.buildYesNoConfirmationModel(phoneCallDisplayTextCATsSimple:),  v1);
  return swift_asyncLet_get_throwing( v0 + 82,  v0 + 169,  static CallingIntentConfirmationFlowStrategy.buildYesNoConfirmationModel(phoneCallDisplayTextCATsSimple:),  v0 + 162);
}

{
  uint64_t v0;
  void *v1;
  v1[175] = v0;
  if (v0) {
    return swift_asyncLet_finish( v1 + 2,  v1 + 167,  StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel(),  v1 + 162);
  }
  v1[176] = v1[169];
  v1[177] = v1[170];
  swift_bridgeObjectRetain();
  return swift_asyncLet_get_throwing( v1 + 2,  v1 + 167,  static CallingIntentConfirmationFlowStrategy.buildYesNoConfirmationModel(phoneCallDisplayTextCATsSimple:),  v1 + 162);
}

{
  uint64_t v0;
  uint64_t v1;
  *(void *)(v1 + 1424) = v0;
  if (v0) {
    return OUTLINED_FUNCTION_33_0((uint64_t)StartCallConfirmIntentFlowStrategy.buildYesNoConfirmationUnderRestrictionModel());
  }
  else {
    return OUTLINED_FUNCTION_33_0((uint64_t)static CallingIntentConfirmationFlowStrategy.buildYesNoConfirmationModel(phoneCallDisplayTextCATsSimple:));
  }
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v1 = v0[177];
  uint64_t v2 = v0[176];
  uint64_t v3 = (void *)v0[174];
  uint64_t v4 = (void *)v0[173];
  os_log_type_t v5 = v0[171];
  BOOL v6 = v0[167];
  uint64_t v7 = v0[168];
  swift_bridgeObjectRetain();
  YesNoConfirmationModel.init(yesText:yesAction:noText:noAction:)( v2,  v1,  v4,  v6,  v7,  (uint64_t)v3,  v5);
  return swift_asyncLet_finish( v0 + 2,  v0 + 167,  static CallingIntentConfirmationFlowStrategy.buildYesNoConfirmationModel(phoneCallDisplayTextCATsSimple:),  v0 + 162);
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)static CallingIntentConfirmationFlowStrategy.buildYesNoConfirmationModel(phoneCallDisplayTextCATsSimple:));
}

{
  OUTLINED_FUNCTION_34_2();
  OUTLINED_FUNCTION_69();
  return OUTLINED_FUNCTION_1_19();
}

{
  return OUTLINED_FUNCTION_33_0((uint64_t)static CallingIntentConfirmationFlowStrategy.buildYesNoConfirmationModel(phoneCallDisplayTextCATsSimple:));
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t (*v3)(void);
  uint64_t v1 = *(void **)(v0 + 1392);
  uint64_t v2 = *(void *)(v0 + 1376);

  swift_release_n(v2, 3LL);
  uint64_t v3 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return OUTLINED_FUNCTION_6_17(v3);
}

uint64_t implicit closure #1 in static CallingIntentConfirmationFlowStrategy.buildYesNoConfirmationModel(phoneCallDisplayTextCATsSimple:)( uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpeakableString?);
  void v2[4] = swift_task_alloc((*(void *)(*(void *)(v3 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch( implicit closure #1 in static CallingIntentConfirmationFlowStrategy.buildYesNoConfirmationModel(phoneCallDisplayTextCATsSimple:),  0LL,  0LL);
}

uint64_t implicit closure #1 in static CallingIntentConfirmationFlowStrategy.buildYesNoConfirmationModel(phoneCallDisplayTextCATsSimple:)()
{
  uint64_t v1 = (void *)v0[3];
  uint64_t v2 = v0[4];
  uint64_t v3 = type metadata accessor for SpeakableString(0LL);
  OUTLINED_FUNCTION_29_1(v2, v4, v5, v3);
  uint64_t v6 = OUTLINED_FUNCTION_108_5(*(void *)(class metadata base offset for PhoneCallDisplayTextCATsSimple + *v1 + 40));
  uint64_t v10 = v7;
  uint64_t v8 = (void *)swift_task_alloc(v6);
  v0[5] = v8;
  *uint64_t v8 = v0;
  v8[1] = implicit closure #1 in static CallingIntentConfirmationFlowStrategy.buildYesNoConfirmationModel(phoneCallDisplayTextCATsSimple:);
  return v10(v0[4]);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_39_0(v3);
  v2[6] = v1;
  swift_task_dealloc();
  uint64_t v4 = v2[4];
  if (!v1) {
    v2[7] = v0;
  }
  outlined destroy of UUID?(v4, &demangling cache variable for type metadata for SpeakableString?);
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_9_11(v5, v6, v7);
}

uint64_t implicit closure #2 in static CallingIntentConfirmationFlowStrategy.buildYesNoConfirmationModel(phoneCallDisplayTextCATsSimple:)( uint64_t a1, void *a2)
{
  *(void *)(v2 + ++*(void *)(v0 + 16) = a1;
  uint64_t v3 = *(int **)(class metadata base offset for PhoneCallDisplayTextCATsSimple + *a2 + 104);
  uint64_t v6 = (uint64_t (*)(void))((char *)v3 + *v3);
  uint64_t v4 = (void *)swift_task_alloc(v3[1]);
  *(void *)(v2 + 24) = v4;
  *uint64_t v4 = v2;
  v4[1] = implicit closure #2 in static CallingIntentConfirmationFlowStrategy.buildYesNoConfirmationModel(phoneCallDisplayTextCATsSimple:);
  return v6();
}

uint64_t implicit closure #2 in static CallingIntentConfirmationFlowStrategy.buildYesNoConfirmationModel(phoneCallDisplayTextCATsSimple:)()
{
  if (v1) {
    return OUTLINED_FUNCTION_24_1(*(uint64_t (**)(void))(v3 + 8));
  }
  *(void *)(v2 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v0;
  OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_9_11(v6, v7, v8);
}

uint64_t implicit closure #2 in static CallingIntentConfirmationFlowStrategy.buildYesNoConfirmationModel(phoneCallDisplayTextCATsSimple:)( uint64_t a1)
{
  uint64_t v2 = *(uint64_t **)(v1 + 16);
  uint64_t v3 = dispatch thunk of LabelExecutionResult.subscript.getter(a1);
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_38_1();
  uint64_t *v2 = v3;
  v2[1] = v5;
  uint64_t v6 = (uint64_t (*)(void))OUTLINED_FUNCTION_13_0();
  return OUTLINED_FUNCTION_6_17(v6);
}

void *CallingIntentConfirmationFlowStrategy.init(delegate:startCallCATs:startCallCatPatterns:startCallCATsSimple:phoneCallCommonCATs:phoneCallCommonCATsSimple:phoneCallCommonCatPatterns:phoneCallDisplayTextCATsSimple:responseGenerator:siriKitEventSender:appInfoBuilder:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, void *a9, void *a10, void *a11)
{
  uint64_t v17 = v11 + direct field offset for CallingIntentConfirmationFlowStrategy.confirmationResponse;
  uint64_t v18 = OUTLINED_FUNCTION_32_28();
  OUTLINED_FUNCTION_29_1(v17, v19, v20, v18);
  *(void *)(v11 + direct field offset for CallingIntentConfirmationFlowStrategy.personToConfirm) = 0LL;
  outlined init with copy of SharedGlobalsProviding(a3, (uint64_t)v30);
  outlined init with copy of SharedGlobalsProviding((uint64_t)a7, (uint64_t)v29);
  outlined init with copy of SharedGlobalsProviding((uint64_t)a9, (uint64_t)v28);
  outlined init with copy of SharedGlobalsProviding((uint64_t)a10, (uint64_t)v27);
  outlined init with copy of SharedGlobalsProviding((uint64_t)a11, (uint64_t)v26);
  uint64_t v21 = CallingIntentBaseFlowStrategy.init(delegate:startCallCATs:startCallCatPatterns:startCallCATsSimple:phoneCallCommonCATs:phoneCallCommonCATsSimple:phoneCallCommonCatPatterns:phoneCallDisplayTextCATsSimple:responseGenerator:siriKitEventSender:appInfoBuilder:)( a1,  a2,  v30,  a4,  a5,  a6,  v29,  a8,  v28,  v27,  v26);
  __swift_destroy_boxed_opaque_existential_1(a11);
  __swift_destroy_boxed_opaque_existential_1(a10);
  __swift_destroy_boxed_opaque_existential_1(a9);
  __swift_destroy_boxed_opaque_existential_1(a7);
  OUTLINED_FUNCTION_11_12();
  return v21;
}

void CallingIntentConfirmationFlowStrategy.__ivar_destroyer()
{
}

void CallingIntentConfirmationFlowStrategy.deinit()
{
  uint64_t v1 = v0;
  outlined destroy of UUID?( v0 + direct field offset for CallingIntentConfirmationFlowStrategy.confirmationResponse,  &demangling cache variable for type metadata for ConfirmationResponse?);

  OUTLINED_FUNCTION_2();
}

uint64_t CallingIntentConfirmationFlowStrategy.__deallocating_deinit()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t protocol witness for NeedsConfirmationFlowStrategyAsync.authenticationPolicy.getter in conformance CallingIntentConfirmationFlowStrategy<A>()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 296LL))();
}

uint64_t protocol witness for NeedsConfirmationFlowStrategyAsync.actionForInput(_:resolveRecord:) in conformance CallingIntentConfirmationFlowStrategy<A>()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 352LL))();
}

uint64_t protocol witness for NeedsConfirmationFlowStrategyAsync.parseConfirmationResponse(input:resolveRecord:) in conformance CallingIntentConfirmationFlowStrategy<A>( uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(int **)(**(void **)v3 + 360LL);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v8 + *v8);
  int v9 = (void *)swift_task_alloc(v8[1]);
  *(void *)(v4 + ++*(void *)(v0 + 16) = v9;
  *int v9 = v4;
  v9[1] = UnsupportedFlowCATs.deleteVoicemail();
  return v11(a1, a2, a3);
}

uint64_t protocol witness for NeedsConfirmationFlowStrategyAsync.shouldRequestUnlockForConfirmation(itemToConfirm:resolveRecord:) in conformance CallingIntentConfirmationFlowStrategy<A>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v9 = (void *)swift_task_alloc(async function pointer to NeedsConfirmationFlowStrategyAsync.shouldRequestUnlockForConfirmation(itemToConfirm:resolveRecord:)[1]);
  *(void *)(v4 + ++*(void *)(v0 + 16) = v9;
  uint64_t v11 = type metadata accessor for CallingIntentConfirmationFlowStrategy( 0LL,  *(void *)(a3 + 264),  *(void *)(a3 + 272),  v10);
  *int v9 = v4;
  v9[1] = protocol witness for Flow.onAsync(input:) in conformance ContactNeedsValueGuardFlow<A1>;
  return NeedsConfirmationFlowStrategyAsync.shouldRequestUnlockForConfirmation(itemToConfirm:resolveRecord:)( a1,  a2,  v11,  a4);
}

uint64_t protocol witness for NeedsConfirmationFlowStrategyAsync.makePromptForConfirmation(itemToConfirm:resolveRecord:) in conformance CallingIntentConfirmationFlowStrategy<A>( uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(int **)(**(void **)v3 + 368LL);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v8 + *v8);
  int v9 = (void *)swift_task_alloc(v8[1]);
  *(void *)(v4 + ++*(void *)(v0 + 16) = v9;
  *int v9 = v4;
  v9[1] = UnsupportedFlowCATs.startCallEmergencyInRetailStore();
  return v11(a1, a2, a3);
}

uint64_t protocol witness for NeedsConfirmationFlowStrategyAsync.makeRepromptOnEmptyParse(itemToConfirm:resolveRecord:) in conformance CallingIntentConfirmationFlowStrategy<A>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc(async function pointer to NeedsConfirmationFlowStrategyAsync.makeRepromptOnEmptyParse(itemToConfirm:resolveRecord:)[1]);
  *(void *)(v5 + ++*(void *)(v0 + 16) = v11;
  uint64_t v13 = type metadata accessor for CallingIntentConfirmationFlowStrategy( 0LL,  *(void *)(a4 + 264),  *(void *)(a4 + 272),  v12);
  *uint64_t v11 = v5;
  v11[1] = UnsupportedFlowCATs.deleteVoicemail();
  return NeedsConfirmationFlowStrategyAsync.makeRepromptOnEmptyParse(itemToConfirm:resolveRecord:)(a1, a2, a3, v13, a5);
}

uint64_t protocol witness for NeedsConfirmationFlowStrategyAsync.makeRepromptOnLowConfidence(itemToConfirm:resolveRecord:) in conformance CallingIntentConfirmationFlowStrategy<A>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc(async function pointer to NeedsConfirmationFlowStrategyAsync.makeRepromptOnLowConfidence(itemToConfirm:resolveRecord:)[1]);
  *(void *)(v5 + ++*(void *)(v0 + 16) = v11;
  uint64_t v13 = type metadata accessor for CallingIntentConfirmationFlowStrategy( 0LL,  *(void *)(a4 + 264),  *(void *)(a4 + 272),  v12);
  *uint64_t v11 = v5;
  v11[1] = UnsupportedFlowCATs.deleteVoicemail();
  return NeedsConfirmationFlowStrategyAsync.makeRepromptOnLowConfidence(itemToConfirm:resolveRecord:)( a1,  a2,  a3,  v13,  a5);
}

uint64_t protocol witness for NeedsConfirmationFlowStrategyAsync.makePromptForDeviceUnlock(resolveRecord:) in conformance CallingIntentConfirmationFlowStrategy<A>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v9 = (void *)swift_task_alloc(async function pointer to NeedsConfirmationFlowStrategyAsync.makePromptForDeviceUnlock(resolveRecord:)[1]);
  *(void *)(v4 + ++*(void *)(v0 + 16) = v9;
  uint64_t v11 = type metadata accessor for CallingIntentConfirmationFlowStrategy( 0LL,  *(void *)(a3 + 264),  *(void *)(a3 + 272),  v10);
  *int v9 = v4;
  v9[1] = UnsupportedFlowCATs.deleteVoicemail();
  return NeedsConfirmationFlowStrategyAsync.makePromptForDeviceUnlock(resolveRecord:)(a1, a2, v11, a4);
}

uint64_t protocol witness for NeedsConfirmationFlowStrategyAsync.makeHandoffForAuthenticationResponse(resolveRecord:) in conformance CallingIntentConfirmationFlowStrategy<A>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v9 = (void *)swift_task_alloc(async function pointer to NeedsConfirmationFlowStrategyAsync.makeHandoffForAuthenticationResponse(resolveRecord:)[1]);
  *(void *)(v4 + ++*(void *)(v0 + 16) = v9;
  uint64_t v11 = type metadata accessor for CallingIntentConfirmationFlowStrategy( 0LL,  *(void *)(a3 + 264),  *(void *)(a3 + 272),  v10);
  *int v9 = v4;
  v9[1] = UnsupportedFlowCATs.deleteVoicemail();
  return NeedsConfirmationFlowStrategyAsync.makeHandoffForAuthenticationResponse(resolveRecord:)(a1, a2, v11, a4);
}

uint64_t protocol witness for NeedsConfirmationFlowStrategyAsync.makeConfirmationRejectedResponse(app:intent:parameter:) in conformance CallingIntentConfirmationFlowStrategy<A>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = *(int **)(**(void **)v4 + 376LL);
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v10 + *v10);
  uint64_t v11 = (void *)swift_task_alloc(v10[1]);
  *(void *)(v5 + ++*(void *)(v0 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = UnsupportedFlowCATs.deleteVoicemail();
  return v13(a1, a2, a3, a4);
}

uint64_t protocol witness for ParameterResolutionHandlingAsync.makeFlowCancelledResponse(app:intent:parameter:) in conformance CallingIntentConfirmationFlowStrategy<A>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = (void *)swift_task_alloc(async function pointer to ParameterResolutionHandlingAsync.makeFlowCancelledResponse(app:intent:parameter:)[1]);
  *(void *)(v6 + ++*(void *)(v0 + 16) = v13;
  uint64_t v15 = type metadata accessor for CallingIntentConfirmationFlowStrategy( 0LL,  *(void *)(a5 + 264),  *(void *)(a5 + 272),  v14);
  *uint64_t v13 = v6;
  v13[1] = UnsupportedFlowCATs.deleteVoicemail();
  return ParameterResolutionHandlingAsync.makeFlowCancelledResponse(app:intent:parameter:)(a1, a2, a3, a4, v15, a6);
}

uint64_t protocol witness for ParameterResolutionHandlingAsync.makeErrorResponse(error:app:intent:parameter:) in conformance CallingIntentConfirmationFlowStrategy<A>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v15 = (void *)swift_task_alloc(async function pointer to ParameterResolutionHandlingAsync.makeErrorResponse(error:app:intent:parameter:)[1]);
  *(void *)(v7 + ++*(void *)(v0 + 16) = v15;
  uint64_t v17 = type metadata accessor for CallingIntentConfirmationFlowStrategy( 0LL,  *(void *)(a6 + 264),  *(void *)(a6 + 272),  v16);
  *uint64_t v15 = v7;
  v15[1] = UnsupportedFlowCATs.deleteVoicemail();
  return ParameterResolutionHandlingAsync.makeErrorResponse(error:app:intent:parameter:)(a1, a2, a3, a4, a5, v17, a7);
}

uint64_t outlined init with take of ConfirmationResponse?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConfirmationResponse?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t outlined assign with take of ConfirmationResponse?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConfirmationResponse?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

uint64_t base witness table accessor for ParameterResolutionHandlingAsync in CallingIntentConfirmationFlowStrategy<A>( uint64_t a1)
{
  return swift_getWitnessTable(&protocol conformance descriptor for CallingIntentConfirmationFlowStrategy<A>, a1);
}

uint64_t sub_3109B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = OUTLINED_FUNCTION_145_5();
  *a1 = result;
  return result;
}

uint64_t sub_3109E0()
{
  return 16LL;
}

__n128 sub_3109EC(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

void type metadata completion function for CallingIntentConfirmationFlowStrategy(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(v2 - 8) + 64LL;
    v4[1] = "\b";
    swift_initClassMetadata2(a1, 0LL, 2LL, v4, a1 + 280);
  }

uint64_t type metadata accessor for CallingIntentConfirmationFlowStrategy( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata( a1,  a2,  a3,  a4,  (uint64_t)&nominal type descriptor for CallingIntentConfirmationFlowStrategy);
}

void type metadata accessor for ConfirmationResponse?(uint64_t a1)
{
  if (!lazy cache variable for type metadata for ConfirmationResponse?)
  {
    uint64_t v2 = type metadata accessor for ConfirmationResponse(255LL);
    unint64_t v3 = type metadata accessor for Optional(a1, v2);
    if (!v4) {
      atomic_store(v3, (unint64_t *)&lazy cache variable for type metadata for ConfirmationResponse?);
    }
  }

uint64_t partial apply for implicit closure #1 in static CallingIntentConfirmationFlowStrategy.buildYesNoConfirmationModel(phoneCallDisplayTextCATsSimple:)()
{
  uint64_t v1 = (void *)swift_task_alloc(dword_441A1C);
  *(void *)(v0 + ++*(void *)(v0 + 16) = v1;
  uint64_t v2 = OUTLINED_FUNCTION_18_12(v1);
  return implicit closure #1 in static CallingIntentConfirmationFlowStrategy.buildYesNoConfirmationModel(phoneCallDisplayTextCATsSimple:)( v2,  v3);
}

uint64_t partial apply for implicit closure #2 in static CallingIntentConfirmationFlowStrategy.buildYesNoConfirmationModel(phoneCallDisplayTextCATsSimple:)()
{
  uint64_t v1 = (void *)swift_task_alloc(dword_441A2C);
  *(void *)(v0 + ++*(void *)(v0 + 16) = v1;
  uint64_t v2 = OUTLINED_FUNCTION_18_12(v1);
  return implicit closure #2 in static CallingIntentConfirmationFlowStrategy.buildYesNoConfirmationModel(phoneCallDisplayTextCATsSimple:)( v2,  v3);
}

void OUTLINED_FUNCTION_28_62()
{
}

uint64_t OUTLINED_FUNCTION_58_29(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(a2 + 8))(v2);
}

uint64_t OUTLINED_FUNCTION_59_27()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8LL))(v0, v1);
}

void OUTLINED_FUNCTION_63_29(void *a1)
{
}

uint64_t OUTLINED_FUNCTION_72_31()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
}

uint64_t OUTLINED_FUNCTION_74_25()
{
  return ParameterResolutionRecord.parameter.getter(v0);
}

uint64_t OUTLINED_FUNCTION_81_24(uint64_t a1)
{
  return specialized Collection.firstIndex(where:)(a1, v1);
}

uint64_t OUTLINED_FUNCTION_87_19(uint64_t a1)
{
  return swift_getAssociatedConformanceWitness(a1, v2, v1);
}

uint64_t OUTLINED_FUNCTION_90_22()
{
  return swift_isUniquelyReferenced_nonNull_bridgeObject(v0);
}

  ;
}

uint64_t static StartCallViewBuilders.makeForeignEmergencyButtonsBuilder(templatingService:disambiguationList:sharedGlobals:isDirectInvocation:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v11 = __swift_project_value_buffer(v10, (uint64_t)static Logger.siriPhone);
  uint64_t v12 = (os_log_s *)Logger.logObject.getter(v11);
  os_log_type_t v14 = static os_log_type_t.debug.getter(v12, v13);
  if (os_log_type_enabled(v12, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v15 = 0;
    _os_log_impl(&dword_0, v12, v14, "#StartCallViewBuilders Providing ForeignEmergencyButtonsBuilder", v15, 2u);
    swift_slowDealloc(v15, -1LL, -1LL);
  }

  outlined init with copy of SignalProviding(a3, a5 + 16);
  *(void *)a5 = a1;
  *(void *)(a5 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = a2;
  *(_BYTE *)(a5 + 56) = a4 & 1;
  swift_retain();
  return swift_retain();
}

void *_sSTsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs18EnumeratedSequenceVySay11SiriKitFlow0fG18DisambiguationItemCGG_So10SAUIButtonCs5NeverOTg506_sSi11fg9Flow0aB18ij5CSo10k32CIgygo_Si6offset_AC7elementtAEs5L11OIegnrzr_TRSiAjNIgygo_Tf1cn_n( uint64_t a1, uint64_t (*a2)(unint64_t, uint64_t))
{
  uint64_t v3 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8LL));
  OUTLINED_FUNCTION_6_1();
  if (v3)
  {
    while (1)
    {
      unint64_t v4 = 0LL;
      while ((a1 & 0xC000000000000001LL) != 0)
      {
        uint64_t v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(v4, a1);
LABEL_7:
        unint64_t v6 = v4 + 1;
        if (__OFADD__(v4, 1LL)) {
          goto LABEL_12;
        }
        uint64_t v7 = a2(v4, v5);
        uint64_t v8 = swift_release(v5);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v8);
        uint64_t v9 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v9);
        uint64_t v10 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v7);
        specialized ContiguousArray._endMutation()(v10);
        ++v4;
        if (v6 == v3) {
          goto LABEL_17;
        }
      }

      __break(1u);
LABEL_12:
      __break(1u);
LABEL_13:
      if (a1 < 0) {
        uint64_t v11 = a1;
      }
      else {
        uint64_t v11 = a1 & 0xFFFFFFFFFFFFFF8LL;
      }
      OUTLINED_FUNCTION_6_1();
      uint64_t v3 = _CocoaArrayWrapper.endIndex.getter(v11);
      if (!v3) {
        goto LABEL_17;
      }
    }

    uint64_t v5 = *(void *)(a1 + 8 * v4 + 32);
    swift_retain();
    goto LABEL_7;
  }

uint64_t ForeignEmergencyButtonsBuilder.makeViewsForWatch(utteranceViews:_:)(uint64_t a1)
{
  uint64_t v3 = SiriKitDisambiguationList.disambiguationItems.getter(a1);
  uint64_t v4 = v1[5];
  uint64_t v5 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v4);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v5 + 8))(v15, v4, v5);
  uint64_t v6 = v16;
  __swift_project_boxed_opaque_existential_1(v15, v16);
  char v7 = dispatch thunk of DeviceState.isTextToSpeechEnabled.getter(v6);
  uint64_t v8 = (void *)static SiriKitDisambiguationSnippetFactory.makeDisambiguationSnippetForWatch(disambiguationItems:textToSpeechIsEnabled:)( v3,  v7 & 1);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v15);
  type metadata accessor for SiriKitAceViewBuilder(0LL);
  uint64_t v10 = v1[5];
  uint64_t v9 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v10);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v9 + 8))(v15, v10, v9);
  dispatch thunk of static SiriKitAceViewBuilder.makeBuilder(deviceState:)(v15);
  __swift_destroy_boxed_opaque_existential_1(v15);
  uint64_t v11 = dispatch thunk of SiriKitAceViewBuilder.withUtteranceViews(utteranceViews:)(a1);
  OUTLINED_FUNCTION_38_1();
  dispatch thunk of SiriKitAceViewBuilder.addSnippet(snippet:)(v8);
  uint64_t v12 = swift_release(v11);
  uint64_t v13 = dispatch thunk of SiriKitAceViewBuilder.build()(v12);
  OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_0_117(v13);

  return swift_bridgeObjectRelease();
}

uint64_t ForeignEmergencyButtonsBuilder.makeViewsForMac(utteranceViews:_:)(uint64_t a1)
{
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0) {
      uint64_t v6 = a1;
    }
    else {
      uint64_t v6 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    uint64_t v7 = OUTLINED_FUNCTION_49( a1,  (unint64_t *)&lazy cache variable for type metadata for SAAceView,  &OBJC_CLASS___SAAceView_ptr);
    OUTLINED_FUNCTION_6_1();
    uint64_t v4 = _bridgeCocoaArray<A>(_:)(v6, v7);
    swift_bridgeObjectRelease();
  }

  else
  {
    uint64_t v2 = OUTLINED_FUNCTION_6_1();
    uint64_t v3 = dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v2);
    OUTLINED_FUNCTION_49( v3,  (unint64_t *)&lazy cache variable for type metadata for SAAceView,  &OBJC_CLASS___SAAceView_ptr);
    uint64_t v4 = a1;
  }

  OUTLINED_FUNCTION_0_117(v4);
  return swift_bridgeObjectRelease();
}

uint64_t ForeignEmergencyButtonsBuilder.makeViewsForCar(utteranceViews:_:)(uint64_t a1)
{
  uint64_t v2 = SiriKitDisambiguationList.disambiguationItems.getter(a1);
  uint64_t v4 = (void *)static SiriKitDisambiguationSnippetFactory.makeDisambiguationSnippetForCarPlay(disambiguationItems:deviceIsLocked:)( v2,  0LL,  v3);
  swift_bridgeObjectRelease();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v6 = swift_allocObject(v5, 40LL, 7LL);
  *(_OWORD *)(v6 + ++*(void *)(v0 + 16) = xmmword_31FE60;
  *(void *)(v6 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v4;
  uint64_t v18 = v6;
  uint64_t v10 = specialized Array._endMutation()(v6, v7, v8, v9);
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0) {
      uint64_t v15 = a1;
    }
    else {
      uint64_t v15 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    uint64_t v16 = OUTLINED_FUNCTION_49( v10,  (unint64_t *)&lazy cache variable for type metadata for SAAceView,  &OBJC_CLASS___SAAceView_ptr);
    id v17 = v4;
    swift_bridgeObjectRetain();
    _bridgeCocoaArray<A>(_:)(v15, v16);
    swift_bridgeObjectRelease();
  }

  else
  {
    id v11 = v4;
    uint64_t v12 = swift_bridgeObjectRetain();
    uint64_t v13 = dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v12);
    OUTLINED_FUNCTION_49( v13,  (unint64_t *)&lazy cache variable for type metadata for SAAceView,  &OBJC_CLASS___SAAceView_ptr);
  }

  specialized Array.append<A>(contentsOf:)();
  OUTLINED_FUNCTION_0_117(v18);

  return swift_bridgeObjectRelease();
}

uint64_t ForeignEmergencyButtonsBuilder.makeViewsForIOS(utteranceViews:_:)( uint64_t a1, void (*a2)(uint64_t, void), uint64_t a3)
{
  uint64_t v6 = SiriKitDisambiguationList.rawItems.getter(a1, a2, a3);
  specialized _arrayConditionalCast<A, B>(_:)(v6);
  uint64_t v7 = OUTLINED_FUNCTION_34_0();
  uint64_t v8 = SiriKitDisambiguationList.disambiguationItems.getter(v7);
  uint64_t v9 = _sSTsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs18EnumeratedSequenceVySay11SiriKitFlow0fG18DisambiguationItemCGG_So10SAUIButtonCs5NeverOTg506_sSi11fg9Flow0aB18ij5CSo10k32CIgygo_Si6offset_AC7elementtAEs5L11OIegnrzr_TRSiAjNIgygo_Tf1cn_n( v8,  (uint64_t (*)(unint64_t, uint64_t))partial apply for closure #1 in ForeignEmergencyButtonsBuilder.makeViewsForIOS(utteranceViews:_:));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for SiriKitAceViewBuilder(0LL);
  uint64_t v11 = v3[5];
  uint64_t v10 = v3[6];
  __swift_project_boxed_opaque_existential_1(v3 + 2, v11);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v10 + 8))(v16, v11, v10);
  dispatch thunk of static SiriKitAceViewBuilder.makeBuilder(deviceState:)(v16);
  __swift_destroy_boxed_opaque_existential_1(v16);
  uint64_t v12 = dispatch thunk of SiriKitAceViewBuilder.withUtteranceViews(utteranceViews:)(a1);
  OUTLINED_FUNCTION_38_1();
  dispatch thunk of SiriKitAceViewBuilder.withButtons(buttons:)(v9);
  swift_release(v12);
  uint64_t v13 = OUTLINED_FUNCTION_34_0();
  uint64_t v14 = dispatch thunk of SiriKitAceViewBuilder.build()(v13);
  OUTLINED_FUNCTION_38_1();
  a2(v14, 0LL);
  return OUTLINED_FUNCTION_34_0();
}

id closure #1 in ForeignEmergencyButtonsBuilder.makeViewsForIOS(utteranceViews:_:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a4) {
    goto LABEL_7;
  }
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(a1, (a4 & 0xC000000000000001LL) == 0, a4);
  if ((v4 & 0xC000000000000001LL) != 0) {
    id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a1, v4);
  }
  else {
    id v7 = *(id *)(v4 + 8 * a1 + 32);
  }
  uint64_t v8 = v7;
  id v9 = [v7 personHandle];

  if (!v9)
  {
    uint64_t v4 = 0LL;
LABEL_7:
    char v10 = 1;
    return ForeignEmergencyButtonsBuilder.makeButtonView(item:emergencyType:)(a2, v4, v10);
  }

  uint64_t v4 = (uint64_t)[v9 emergencyType];

  char v10 = 0;
  return ForeignEmergencyButtonsBuilder.makeButtonView(item:emergencyType:)(a2, v4, v10);
}

id ForeignEmergencyButtonsBuilder.makeButtonView(item:emergencyType:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5 = dispatch thunk of SiriKitDisambiguationItem.getFirstComponent()(a1);
  if (v5)
  {
    uint64_t v6 = v5;
    type metadata accessor for CNContactStore( 0LL,  (unint64_t *)&lazy cache variable for type metadata for SAUIButton,  &OBJC_CLASS___SAUIButton_ptr);
    SiriKitDisambiguationItemComponent.print.getter();
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v8 = swift_allocObject(v7, 40LL, 7LL);
    *(_OWORD *)(v8 + ++*(void *)(v0 + 16) = xmmword_31FE60;
    id v9 = ForeignEmergencyButtonsBuilder.getButtonCommands(_:)();
    *(void *)(v8 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v9;
    specialized Array._endMutation()(v9, v10, v11, v12);
    SAUIButton.init(text:commands:)();
    uint64_t v14 = v13;
    if ((a3 & 1) == 0 && a2 == 1)
    {
      uint64_t v15 = (void *)static ColorFactory.white.getter();
      [v14 setTextColor:v15];

      uint64_t v16 = (void *)static ColorFactory.emergencyRed.getter();
      [v14 setBackgroundColor:v16];
    }

    swift_release(v6);
    return v14;
  }

  else
  {
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v18 = type metadata accessor for Logger(0LL);
    uint64_t v19 = __swift_project_value_buffer(v18, (uint64_t)static Logger.siriPhone);
    uint64_t v20 = (os_log_s *)Logger.logObject.getter(v19);
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v22 = 0;
      _os_log_impl( &dword_0,  v20,  v21,  "Missing first component display text for Foreign Emergency Disambiguation button",  v22,  2u);
      swift_slowDealloc(v22, -1LL, -1LL);
    }

    return [objc_allocWithZone(SAUIButton) init];
  }

id ForeignEmergencyButtonsBuilder.getButtonCommands(_:)()
{
  if (*(_BYTE *)(v0 + 56) == 1 && (uint64_t v1 = SiriKitDisambiguationItem.directInvocation.getter()) != 0)
  {
    uint64_t v2 = (void *)v1;
    uint64_t v4 = *(void *)(v0 + 40);
    uint64_t v3 = *(void *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v4);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v3 + 8))(v9, v4, v3);
    id v5 = SKIDirectInvocationPayload.toStartLocalRequest(deviceState:)(v9);

    __swift_destroy_boxed_opaque_existential_1(v9);
  }

  else
  {
    uint64_t v6 = SiriKitDisambiguationItem.utterance.getter();
    id v5 = (id)static CasinoFactory.makeSendCommandsFromMachineUtterance(machineUtterance:)(v6, v7);
    swift_bridgeObjectRelease();
  }

  return v5;
}

uint64_t protocol witness for IdiomSensitiveViewBuilder.makeViewsForMac(utteranceViews:_:) in conformance ForeignEmergencyButtonsBuilder( uint64_t a1)
{
  return ForeignEmergencyButtonsBuilder.makeViewsForMac(utteranceViews:_:)(a1);
}

_UNKNOWN **sub_31169C()
{
  return &protocol witness table for ForeignEmergencyButtonsBuilder;
}

uint64_t destroy for ForeignEmergencyButtonsBuilder(void *a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1 + 2);
}

uint64_t initializeWithCopy for ForeignEmergencyButtonsBuilder(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = v5;
  uint64_t v6 = a2 + 2;
  __int128 v7 = *(_OWORD *)(a2 + 5);
  *(_OWORD *)(a1 + 40) = v7;
  uint64_t v8 = v7;
  id v9 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v7 - 8);
  swift_retain(v4);
  swift_retain(v5);
  v9(a1 + 16, v6, v8);
  *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
  return a1;
}

uint64_t *assignWithCopy for ForeignEmergencyButtonsBuilder(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a1;
  *a1 = *a2;
  swift_retain();
  swift_release(v4);
  uint64_t v5 = a1[1];
  a1[1] = a2[1];
  swift_retain();
  swift_release(v5);
  __swift_assign_boxed_opaque_existential_1(a1 + 2, a2 + 2);
  *((_BYTE *)a1 + 56) = *((_BYTE *)a2 + 56);
  return a1;
}

uint64_t *assignWithTake for ForeignEmergencyButtonsBuilder(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  uint64_t v5 = a1[1];
  a1[1] = a2[1];
  swift_release(v5);
  __swift_destroy_boxed_opaque_existential_1(a1 + 2);
  __int128 v6 = *((_OWORD *)a2 + 2);
  *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
  *((_OWORD *)a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 2) = v6;
  a1[6] = a2[6];
  *((_BYTE *)a1 + 56) = *((_BYTE *)a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for ForeignEmergencyButtonsBuilder(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 57))
    {
      LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }

    else
    {
      uint64_t v2 = *a1;
    }
  }

  else
  {
    LODWORD(v__swift_destroy_boxed_opaque_existential_1(v0 + 2) = -1;
  }

  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ForeignEmergencyButtonsBuilder(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 5__swift_destroy_boxed_opaque_existential_1(v0 + 7) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 5__swift_destroy_boxed_opaque_existential_1(v0 + 7) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for ForeignEmergencyButtonsBuilder()
{
  return &type metadata for ForeignEmergencyButtonsBuilder;
}

uint64_t OUTLINED_FUNCTION_0_117(uint64_t a1)
{
  return v1(a1, 0LL);
}

void static EmergencyUtils.requiresEmergencyConfirmation(intent:intentResponse:)(void *a1, void *a2)
{
  id v3 = [a2 shouldDoEmergencyCountdown];
  type metadata accessor for NSNumber();
  v4.super.super.Class isa = NSNumber.init(integerLiteral:)(1LL).super.super.isa;
  if (v3)
  {
    id v5 = v3;
    static NSObject.== infix(_:_:)();
  }

  OUTLINED_FUNCTION_6();
}

uint64_t static EmergencyUtils.isForeignEmergencyDisambiguation(_:)(unint64_t a1)
{
  else {
    char v2 = 0;
  }
  return v2 & 1;
}

uint64_t static EmergencyUtils.isRegularEmergencyDisambiguation(_:)(unint64_t a1)
{
  return specialized Sequence.allSatisfy(_:)(a1, (char *)&dword_0 + 1) & 1;
}

void static EmergencyUtils.shouldShowEmergencyCountdown(intent:intentResponse:deviceState:)( void *a1, void *a2)
{
  if ((v2 & 1) != 0) {
    OUTLINED_FUNCTION_4_112();
  }
  __swift_destroy_boxed_opaque_existential_1(v4);
  OUTLINED_FUNCTION_0_0();
}

void static EmergencyUtils.shouldConfirmEmergencyCallAsPrompt(intent:intentResponse:deviceState:)( void *a1, void *a2)
{
  if ((v2 & 1) != 0) {
    OUTLINED_FUNCTION_4_112();
  }
  __swift_destroy_boxed_opaque_existential_1(v4);
  OUTLINED_FUNCTION_0_0();
}

void (*static EmergencyUtils.checkForEmergencyType(_:)(uint64_t a1))(void *a1)
{
  *(void *)(swift_allocObject(&unk_41A110, 24LL, 7LL) + ++*(void *)(v0 + 16) = a1;
  return partial apply for closure #1 in static EmergencyUtils.checkForEmergencyType(_:);
}

void closure #1 in static EmergencyUtils.checkForEmergencyType(_:)(void *a1)
{
  id v1 = [a1 personHandle];
  if (v1)
  {
    char v2 = v1;
    [v1 emergencyType];
  }

  OUTLINED_FUNCTION_6();
}

uint64_t static EmergencyUtils.shouldOpenMicForEmergency(intent:deviceState:)(void *a1)
{
  if ([a1 destinationType] == &dword_4)
  {
    OUTLINED_FUNCTION_22_16(4LL, (uint64_t)v23);
LABEL_4:
    uint64_t v3 = __swift_destroy_boxed_opaque_existential_1(v23);
    OUTLINED_FUNCTION_22_16(v3, (uint64_t)v20);
LABEL_5:
    uint64_t v4 = __swift_destroy_boxed_opaque_existential_1(v20);
    OUTLINED_FUNCTION_22_16(v4, (uint64_t)v17);
    goto LABEL_6;
  }

  char v2 = (char *)[a1 destinationType];
  OUTLINED_FUNCTION_22_16((uint64_t)v2, (uint64_t)v23);
  if (v2 == (_BYTE *)&dword_4 + 1) {
    goto LABEL_4;
  }
  uint64_t v7 = v24;
  uint64_t v8 = v25;
  __swift_project_boxed_opaque_existential_1(v23, v24);
  char v9 = dispatch thunk of DeviceState.isHomePod.getter(v7, v8);
  uint64_t v10 = __swift_destroy_boxed_opaque_existential_1(v23);
  OUTLINED_FUNCTION_22_16(v10, (uint64_t)v20);
  if ((v9 & 1) != 0) {
    goto LABEL_5;
  }
  uint64_t v11 = v21;
  uint64_t v12 = v22;
  __swift_project_boxed_opaque_existential_1(v20, v21);
  char v13 = dispatch thunk of DeviceState.isEyesFree.getter(v11, v12);
  uint64_t v14 = __swift_destroy_boxed_opaque_existential_1(v20);
  OUTLINED_FUNCTION_22_16(v14, (uint64_t)v17);
  if ((v13 & 1) == 0)
  {
    uint64_t v15 = v18;
    uint64_t v16 = v19;
    __swift_project_boxed_opaque_existential_1(v17, v18);
    char v5 = dispatch thunk of DeviceState.isCarDNDMode.getter(v15, v16);
    goto LABEL_7;
  }

uint64_t sub_311C50()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void partial apply for closure #1 in static EmergencyUtils.checkForEmergencyType(_:)(void *a1)
{
}

ValueMetadata *type metadata accessor for EmergencyUtils()
{
  return &type metadata for EmergencyUtils;
}

uint64_t OUTLINED_FUNCTION_2_96(uint64_t a1, ...)
{
  return outlined init with copy of SignalProviding(v1, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_4_112()
{
  return static EmergencyUtils.shouldOpenMicForEmergency(intent:deviceState:)(v0);
}

uint64_t PhoneIntentNoOpHandleIntentFlowStrategy.makeIntentHandledResponse(app:intent:intentResponse:_:)( uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *))
{
  char v7 = 0;
  a4(v6);
  return outlined destroy of Result<Output, Error>((uint64_t)v6);
}

uint64_t base witness table accessor for IntentExtensionCommunicating in PhoneIntentNoOpHandleIntentFlowStrategy<A, B>( uint64_t a1)
{
  return swift_getWitnessTable(&protocol conformance descriptor for PhoneIntentNoOpHandleIntentFlowStrategy<A, B>, a1);
}

uint64_t protocol witness for HandleIntentFlowStrategy.makePromptForDeviceUnlock(app:intent:intentResponse:_:) in conformance PhoneIntentNoOpHandleIntentFlowStrategy<A, B>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return protocol witness for HandleIntentFlowStrategy.makePromptForDeviceUnlock(app:intent:intentResponse:_:) in conformance PhoneIntentNoOpHandleIntentFlowStrategy<A, B>( a1,  a2,  a3,  a4,  a5,  a6,  a7,  (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&HandleIntentFlowStrategy.makePromptForDeviceUnlock(app:intent:intentResponse:_:));
}

uint64_t protocol witness for HandleIntentFlowStrategy.makeHandoffForAuthenticationResponse(app:intent:intentResponse:_:) in conformance PhoneIntentNoOpHandleIntentFlowStrategy<A, B>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return protocol witness for HandleIntentFlowStrategy.makePromptForDeviceUnlock(app:intent:intentResponse:_:) in conformance PhoneIntentNoOpHandleIntentFlowStrategy<A, B>( a1,  a2,  a3,  a4,  a5,  a6,  a7,  (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&HandleIntentFlowStrategy.makeHandoffForAuthenticationResponse(app:intent:intentResponse:_:));
}

uint64_t protocol witness for HandleIntentFlowStrategy.makePreHandleIntentOutput(app:intent:intentResponse:_:) in conformance PhoneIntentNoOpHandleIntentFlowStrategy<A, B>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return protocol witness for HandleIntentFlowStrategy.makePromptForDeviceUnlock(app:intent:intentResponse:_:) in conformance PhoneIntentNoOpHandleIntentFlowStrategy<A, B>( a1,  a2,  a3,  a4,  a5,  a6,  a7,  (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&HandleIntentFlowStrategy.makePreHandleIntentOutput(app:intent:intentResponse:_:));
}

uint64_t protocol witness for HandleIntentFlowStrategy.makeContinueInAppResponse(app:intent:intentResponse:_:) in conformance PhoneIntentNoOpHandleIntentFlowStrategy<A, B>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return protocol witness for HandleIntentFlowStrategy.makePromptForDeviceUnlock(app:intent:intentResponse:_:) in conformance PhoneIntentNoOpHandleIntentFlowStrategy<A, B>( a1,  a2,  a3,  a4,  a5,  a6,  a7,  (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&HandleIntentFlowStrategy.makeContinueInAppResponse(app:intent:intentResponse:_:));
}

uint64_t protocol witness for HandleIntentFlowStrategy.makeInProgressResponse(app:intent:intentResponse:_:) in conformance PhoneIntentNoOpHandleIntentFlowStrategy<A, B>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return protocol witness for HandleIntentFlowStrategy.makePromptForDeviceUnlock(app:intent:intentResponse:_:) in conformance PhoneIntentNoOpHandleIntentFlowStrategy<A, B>( a1,  a2,  a3,  a4,  a5,  a6,  a7,  (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&HandleIntentFlowStrategy.makeInProgressResponse(app:intent:intentResponse:_:));
}

uint64_t protocol witness for HandleIntentFlowStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:) in conformance PhoneIntentNoOpHandleIntentFlowStrategy<A, B>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return protocol witness for HandleIntentFlowStrategy.makePromptForDeviceUnlock(app:intent:intentResponse:_:) in conformance PhoneIntentNoOpHandleIntentFlowStrategy<A, B>( a1,  a2,  a3,  a4,  a5,  a6,  a7,  (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&HandleIntentFlowStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:));
}

uint64_t protocol witness for HandleIntentFlowStrategy.makePromptForDeviceUnlock(app:intent:intentResponse:_:) in conformance PhoneIntentNoOpHandleIntentFlowStrategy<A, B>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v14 = type metadata accessor for PhoneIntentNoOpHandleIntentFlowStrategy( 0LL,  *(void *)(a6 + 80),  *(void *)(a6 + 88),  a4);
  return a8(a1, a2, a3, a4, a5, v14, a7);
}

uint64_t protocol witness for IntentExtensionCommunicating.shouldIntentBeExecutedOnRemoteCompanion(intent:) in conformance PhoneIntentNoOpHandleIntentFlowStrategy<A, B>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = type metadata accessor for PhoneIntentNoOpHandleIntentFlowStrategy( 0LL,  *(void *)(a2 + 80),  *(void *)(a2 + 88),  a4);
  return IntentExtensionCommunicating.shouldIntentBeExecutedOnRemoteCompanion(intent:)(a1, v6, a3);
}

uint64_t protocol witness for IntentExtensionCommunicating.makeSiriKitIntentHandler(app:intent:) in conformance PhoneIntentNoOpHandleIntentFlowStrategy<A, B>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for PhoneIntentNoOpHandleIntentFlowStrategy( 0LL,  *(void *)(a3 + 80),  *(void *)(a3 + 88),  a4);
  return IntentExtensionCommunicating.makeSiriKitIntentHandler(app:intent:)(a1, a2, v7, a4);
}

uint64_t protocol witness for IntentExtensionCommunicating.makeIntentExecutionBehavior(app:intent:) in conformance PhoneIntentNoOpHandleIntentFlowStrategy<A, B>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for PhoneIntentNoOpHandleIntentFlowStrategy( 0LL,  *(void *)(a3 + 80),  *(void *)(a3 + 88),  a4);
  return IntentExtensionCommunicating.makeIntentExecutionBehavior(app:intent:)(a1, a2, v7, a4);
}

uint64_t protocol witness for IntentExtensionCommunicating.makeIntentExecutionBehavior(app:intent:completion:) in conformance PhoneIntentNoOpHandleIntentFlowStrategy<A, B>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for PhoneIntentNoOpHandleIntentFlowStrategy( 0LL,  *(void *)(a5 + 80),  *(void *)(a5 + 88),  a4);
  return IntentExtensionCommunicating.makeIntentExecutionBehavior(app:intent:completion:)(a1, a2, a3, a4, v11, a6);
}

uint64_t type metadata accessor for PhoneIntentNoOpHandleIntentFlowStrategy( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata( a1,  a2,  a3,  a4,  (uint64_t)&nominal type descriptor for PhoneIntentNoOpHandleIntentFlowStrategy);
}

PhoneCallFlowDelegatePlugin::AnnounceCallBellCATPatternsIdentifiers_optional __swiftcall AnnounceCallBellCATPatternsIdentifiers.init(rawValue:)( Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)( (Swift::OpaquePointer)&outlined read-only object #0 of AnnounceCallBellCATPatternsIdentifiers.init(rawValue:),  v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3) {
    return (PhoneCallFlowDelegatePlugin::AnnounceCallBellCATPatternsIdentifiers_optional)3;
  }
  else {
    return (PhoneCallFlowDelegatePlugin::AnnounceCallBellCATPatternsIdentifiers_optional)v3;
  }
}

void protocol witness for static Equatable.== infix(_:_:) in conformance AnnounceCallBellCATPatternsIdentifiers( unsigned __int8 *a1, unsigned __int8 *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance AnnounceCallBellCATPatternsIdentifiers()
{
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance AnnounceCallBellCATPatternsIdentifiers( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::AnnounceCallBellCATPatternsIdentifiers_optional protocol witness for RawRepresentable.init(rawValue:) in conformance AnnounceCallBellCATPatternsIdentifiers@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::AnnounceCallBellCATPatternsIdentifiers_optional *a2@<X8>)
{
  result.PhoneCallFlowDelegatePlugin::EmergencyType value = AnnounceCallBellCATPatternsIdentifiers.init(rawValue:)(*a1).value;
  a2->PhoneCallFlowDelegatePlugin::EmergencyType value = result.value;
  return result;
}

uint64_t AnnounceCallBellAnnounceCallBellStartedParameters.device.setter(uint64_t a1)
{
  uint64_t result = swift_release(*v1);
  *uint64_t v1 = a1;
  return result;
}

__n128 *AnnounceCallBellAnnounceCallBellStartedParameters.asKeyValuePairs()(unint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  unint64_t v3 = (__n128 *)OUTLINED_FUNCTION_15_3(v2);
  OUTLINED_FUNCTION_42_1(v3, (__n128)xmmword_31D870);
  if (a1)
  {
    uint64_t v4 = type metadata accessor for SirikitDeviceState(0LL);
    unint64_t v5 = a1;
  }

  else
  {
    unint64_t v5 = 0LL;
    uint64_t v4 = 0LL;
    v3[3].n128_u64[1] = 0LL;
    v3[4].n128_u64[0] = 0LL;
  }

  v3[3].n128_u64[0] = v5;
  v3[4].n128_u64[1] = v4;
  swift_retain();
  return v3;
}

uint64_t AnnounceCallBellCATPatternsExecutor.announceCallBellEnded()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
  *(void *)(v0 + ++*(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = SuggestionsCATsSimple.phoneCall_StartGFTCall();
  return OUTLINED_FUNCTION_4_2(0xD000000000000026LL, 0x8000000000342DB0LL, (uint64_t)_swiftEmptyArrayStorage, v3);
}

uint64_t AnnounceCallBellCATPatternsExecutor.announceCallBellStarted(_:)(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return swift_task_switch(AnnounceCallBellCATPatternsExecutor.announceCallBellStarted(_:), 0LL, 0LL);
}

uint64_t AnnounceCallBellCATPatternsExecutor.announceCallBellStarted(_:)()
{
  *(void *)(v0 + ++*(void *)(v0 + 16) = 0LL;
  (*(void (**)(uint64_t))(v0 + 24))(v0 + 16);
  unint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  unint64_t v3 = (__n128 *)OUTLINED_FUNCTION_15_3(v2);
  *(void *)(v0 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v3;
  OUTLINED_FUNCTION_42_1(v3, (__n128)xmmword_31D870);
  uint64_t v4 = 0LL;
  if (v1)
  {
    uint64_t v4 = type metadata accessor for SirikitDeviceState(0LL);
  }

  else
  {
    v3[3].n128_u64[1] = 0LL;
    v3[4].n128_u64[0] = 0LL;
  }

  *(void *)(v0 + 56) = v1;
  v3[3].n128_u64[0] = v1;
  v3[4].n128_u64[1] = v4;
  swift_retain();
  uint64_t v6 = (void *)swift_task_alloc(v5);
  *(void *)(v0 + 64) = v6;
  *uint64_t v6 = v0;
  v6[1] = AnnounceCallBellCATPatternsExecutor.announceCallBellStarted(_:);
  return v8(0xD000000000000028LL, 0x8000000000342DE0LL, v3);
}

{
  uint64_t v0;
  swift_release(*(void *)(v0 + 56));
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 80));
}

{
  uint64_t v0;
  swift_release(*(void *)(v0 + 56));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t AnnounceCallBellCATPatternsExecutor.announceCallBellStarted(_:)(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v5 = AnnounceCallBellCATPatternsExecutor.announceCallBellStarted(_:);
  }

  else
  {
    *(void *)(v4 + 80) = a1;
    uint64_t v5 = AnnounceCallBellCATPatternsExecutor.announceCallBellStarted(_:);
  }

  return swift_task_switch(v5, 0LL, 0LL);
}

uint64_t AnnounceCallBellCATPatternsExecutor.informDoubleTapToEnd()()
{
  uint64_t v1 = (void *)OUTLINED_FUNCTION_10_2((uint64_t)&async function pointer to dispatch thunk of CATWrapper.executePattern(patternId:parameters:));
  *(void *)(v0 + ++*(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  return OUTLINED_FUNCTION_4_2(0xD000000000000025LL, 0x8000000000342E10LL, (uint64_t)_swiftEmptyArrayStorage, v3);
}

unint64_t lazy protocol witness table accessor for type AnnounceCallBellCATPatternsIdentifiers and conformance AnnounceCallBellCATPatternsIdentifiers()
{
  unint64_t result = lazy protocol witness table cache variable for type AnnounceCallBellCATPatternsIdentifiers and conformance AnnounceCallBellCATPatternsIdentifiers;
  if (!lazy protocol witness table cache variable for type AnnounceCallBellCATPatternsIdentifiers and conformance AnnounceCallBellCATPatternsIdentifiers)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AnnounceCallBellCATPatternsIdentifiers,  &type metadata for AnnounceCallBellCATPatternsIdentifiers);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AnnounceCallBellCATPatternsIdentifiers and conformance AnnounceCallBellCATPatternsIdentifiers);
  }

  return result;
}

uint64_t protocol witness for AnnounceCallBellCATPatternsExecuting.announceCallBellEnded() in conformance AnnounceCallBellCATPatternsExecutor()
{
  uint64_t v2 = *(int **)(**v0 + class metadata base offset for AnnounceCallBellCATPatternsExecutor);
  uint64_t v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  unint64_t v3 = (void *)swift_task_alloc(v2[1]);
  *(void *)(v1 + ++*(void *)(v0 + 16) = v3;
  *unint64_t v3 = v1;
  v3[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  return v5();
}

uint64_t protocol witness for AnnounceCallBellCATPatternsExecuting.announceCallBellStarted(_:) in conformance AnnounceCallBellCATPatternsExecutor( uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)(class metadata base offset for AnnounceCallBellCATPatternsExecutor + **v2 + 8);
  char v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  uint64_t v7 = (void *)swift_task_alloc(v6[1]);
  *(void *)(v3 + ++*(void *)(v0 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  return v9(a1, a2);
}

uint64_t protocol witness for AnnounceCallBellCATPatternsExecuting.informDoubleTapToEnd() in conformance AnnounceCallBellCATPatternsExecutor()
{
  uint64_t v2 = *(int **)(class metadata base offset for AnnounceCallBellCATPatternsExecutor + **v0 + 16);
  uint64_t v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  uint64_t v3 = (void *)swift_task_alloc(v2[1]);
  *(void *)(v1 + ++*(void *)(v0 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = SuggestionsCATsSimple.phoneCall_StartGFTCallAsLabels();
  return v5();
}

uint64_t storeEnumTagSinglePayload for AnnounceCallBellCATPatternsIdentifiers( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    LODWORD(OUTLINED_FUNCTION_48_23(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin26PhoneCallContactIntentNode_handleLabel, v4) = 1;
  }
  else {
    LODWORD(OUTLINED_FUNCTION_48_23(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin26PhoneCallContactIntentNode_handleLabel, v4) = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFD) {
    return ((uint64_t (*)(void))((char *)&loc_3124D0 + 4 * byte_341145[v4]))();
  }
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_312504 + 4 * asc_341140[v4]))();
}

uint64_t sub_312504(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_31250C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x312514LL);
  }
  return result;
}

uint64_t sub_312520(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x312528LL);
  }
  *(_BYTE *)unint64_t result = a2 + 2;
  return result;
}

uint64_t sub_31252C(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_312534(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AnnounceCallBellCATPatternsIdentifiers()
{
  return &type metadata for AnnounceCallBellCATPatternsIdentifiers;
}

ValueMetadata *type metadata accessor for AnnounceCallBellAnnounceCallBellStartedParameters()
{
  return &type metadata for AnnounceCallBellAnnounceCallBellStartedParameters;
}

uint64_t type metadata accessor for AnnounceCallBellCATPatternsExecutor(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for AnnounceCallBellCATPatternsExecutor;
  if (!type metadata singleton initialization cache for AnnounceCallBellCATPatternsExecutor) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AnnounceCallBellCATPatternsExecutor);
  }
  return result;
}

uint64_t type metadata completion function for AnnounceCallBellCATPatternsExecutor(uint64_t a1)
{
  return swift_initClassMetadata2( a1,  0LL,  0LL,  v2,  a1 + class metadata base offset for AnnounceCallBellCATPatternsExecutor);
}

uint64_t ObjC metadata update function for AnnounceCallBellCATPatternsExecutor()
{
  return type metadata accessor for AnnounceCallBellCATPatternsExecutor(0LL);
}

void INPerson.toRREntity()()
{
  void (*v4)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  os_log_type_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  os_log_s *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  OUTLINED_FUNCTION_29_2();
  __int16 v1 = v0;
  uint64_t v26 = v2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Transformer<UsoEntity_common_Person, INPerson>);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  static Transformer<>.transformer.getter();
  uint64_t v4 = (void (*)(uint64_t *__return_ptr, uint64_t *))Transformer.reverseTransform.getter(v3);
  uint64_t v6 = v5;
  uint64_t v28 = (uint64_t)v1;
  v4(&v27, &v28);
  swift_release(v6);
  uint64_t v7 = v27;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v8 = OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_70_3(v8, (uint64_t)static Logger.siriPhone);
  char v9 = v1;
  swift_retain_n(v7, 2LL);
  uint64_t v10 = v9;
  Logger.logObject.getter(v10);
  uint64_t v11 = OUTLINED_FUNCTION_41();
  if (OUTLINED_FUNCTION_10(v11))
  {
    uint64_t v12 = OUTLINED_FUNCTION_7_0(22LL);
    char v13 = (void *)OUTLINED_FUNCTION_7_0(8LL);
    uint64_t v25 = OUTLINED_FUNCTION_7_0(32LL);
    id v27 = (uint64_t)v10;
    uint64_t v28 = v25;
    *(_DWORD *)uint64_t v12 = 138412546;
    uint64_t v24 = v6;
    uint64_t v23 = (os_log_s *)v9;
    uint64_t v14 = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, &v28, v12 + 4);
    *char v13 = v10;

    *(_WORD *)(v12 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
    uint64_t v16 = CodeGenBase.entity.getter(v15);
    id v17 = UsoEntity.valueTypeString.getter();
    uint64_t v19 = v18;
    swift_release(v16);
    id v27 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, v19, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, &v28, v12 + 14);
    OUTLINED_FUNCTION_3_16();
    OUTLINED_FUNCTION_39();
    _os_log_impl( &dword_0,  v23,  v24,  "#ReferenceResolution INPerson-SRR: Transformed person %@ to USO entity %s",  (uint8_t *)v12,  0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    OUTLINED_FUNCTION_17_0((uint64_t)v13);
    OUTLINED_FUNCTION_0_2((uint64_t)v13);
    OUTLINED_FUNCTION_17_0(v25);
    OUTLINED_FUNCTION_0_2(v25);
    OUTLINED_FUNCTION_0_2(v12);
  }

  else
  {

    OUTLINED_FUNCTION_3_16();
  }

  uint64_t v20 = swift_retain();
  uint64_t v21 = CodeGenBase.entity.getter(v20);
  OUTLINED_FUNCTION_77_0();
  INPerson.makeRREntity(usoEntity:)(v21);
  OUTLINED_FUNCTION_16_66();
  swift_release(v21);
  OUTLINED_FUNCTION_77_0();
  uint64_t v22 = type metadata accessor for RREntity(0LL);
  __swift_storeEnumTagSinglePayload(v26, 0LL, 1LL, v22);
  OUTLINED_FUNCTION_7_5();
}

uint64_t INPerson.identifier.getter()
{
  __int16 v1 = v0;
  ((uint64_t (*)(void))type metadata accessor for String.Encoding)(0LL);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v4 = v3 - v2;
  uint64_t v5 = outlined bridged method (pb) of @objc INPerson.contactIdentifier.getter(v1);
  if (!v6)
  {
    uint64_t v5 = outlined bridged method (pb) of @objc INPerson.customIdentifier.getter(v1);
    if (!v7) {
      return INPerson.asBase64()()._countAndFlagsBits;
    }
  }

  uint64_t v28 = v5;
  id v8 = OUTLINED_FUNCTION_68_12(v5, "personHandle");
  if (v8)
  {
    outlined bridged method (ob) of @objc INPersonHandle.value.getter(v8);
    if (v10)
    {
      uint64_t v11 = v9;
      uint64_t v12 = v10;
      ((void (*)(void))static String.Encoding.utf8.getter)();
      uint64_t v13 = ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))String.data(using:allowLossyConversion:))( v4,  0LL,  v11,  v12);
      unint64_t v15 = v14;
      swift_bridgeObjectRelease();
      uint64_t v16 = OUTLINED_FUNCTION_27_66();
      if (v15 >> 60 != 15)
      {
        id v17 = OUTLINED_FUNCTION_68_12(v16, "personHandle");
        uint64_t v18 = v17;
        if (v17)
        {
          id v19 = OUTLINED_FUNCTION_68_12((uint64_t)v17, "label");

          if (v19)
          {
            uint64_t v18 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
            unint64_t v21 = v20;

LABEL_12:
            ((void (*)(void))static String.Encoding.utf8.getter)();
            uint64_t v23 = ((uint64_t (*)(uint64_t, void, void *, unint64_t))String.data(using:allowLossyConversion:))( v4,  0LL,  v18,  v21);
            unint64_t v25 = v24;
            swift_bridgeObjectRelease();
            OUTLINED_FUNCTION_27_66();
            if (v25 >> 60 != 15)
            {
              outlined copy of Data?(v13, v15);
              outlined copy of Data?(v23, v25);
              specialized Data.append<A>(contentsOf:)(v23, v25);
              OUTLINED_FUNCTION_30_55();
              Swift::String v26 = Data.base64EncodedString(options:)(0LL);
              String.append(_:)(v26);
              swift_bridgeObjectRelease();
              v27._uint64_t countAndFlagsBits = 58LL;
              v27._object = (void *)0xE100000000000000LL;
              String.append(_:)(v27);
              swift_bridgeObjectRelease();
              outlined consume of Data._Representation(v13, v15);
              OUTLINED_FUNCTION_30_55();
            }

            outlined consume of Data?(v13, v15);
            return v28;
          }

          uint64_t v18 = 0LL;
        }

        unint64_t v21 = 0xE000000000000000LL;
        goto LABEL_12;
      }
    }
  }

  return v28;
}

void RRReferenceResolverProtocol.resolveEntity(resolveQuery:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  a19 = v21;
  a20 = v22;
  unint64_t v24 = v23;
  uint64_t v116 = v25;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RRCandidate?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v112 = v27 - v26;
  uint64_t v28 = type metadata accessor for RRCandidate(0LL);
  uint64_t v113 = *(void *)(v28 - 8);
  uint64_t v114 = v28;
  __chkstk_darwin();
  OUTLINED_FUNCTION_25_6();
  uint64_t v31 = v29 - v30;
  __chkstk_darwin();
  id v115 = (char *)&v109 - v32;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RRResult?);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v35 = v34 - v33;
  uint64_t v36 = *(void *)(OUTLINED_FUNCTION_25_65() - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_25_6();
  uint64_t v111 = v37 - v38;
  __chkstk_darwin();
  uint64_t v40 = (uint64_t *)((char *)&v109 - v39);
  __chkstk_darwin();
  uint64_t v42 = (char *)&v109 - v41;
  uint64_t v43 = v24;
  uint64_t v45 = v44;
  RRReferenceResolverProtocol.resolveReference(resolveQuery:)();
  if (__swift_getEnumTagSinglePayload(v35, 1LL, v45) == 1)
  {
    outlined destroy of SpeakableString?(v35, &demangling cache variable for type metadata for RRResult?);
LABEL_29:
    uint64_t v74 = 1LL;
    uint64_t v73 = v116;
    goto LABEL_30;
  }

  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 32))(v42, v35, v45);
  uint64_t v46 = *(void (**)(uint64_t *, char *, uint64_t))(v36 + 16);
  v46(v40, v42, v45);
  int v47 = (*(uint64_t (**)(uint64_t *, uint64_t))(v36 + 88))(v40, v45);
  uint64_t v48 = v42;
  if (v47 == enum case for RRResult.foundMatch(_:))
  {
    uint64_t v112 = v36;
    OUTLINED_FUNCTION_3_128();
    uint64_t v49 = v113;
    uint64_t v50 = v114;
    uint64_t v51 = v115;
    (*(void (**)(char *, uint64_t *, uint64_t))(v113 + 32))(v115, v40, v114);
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v111 = v45;
    uint64_t v52 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_70_3(v52, (uint64_t)static Logger.siriPhone);
    (*(void (**)(uint64_t, char *, uint64_t))(v49 + 16))(v31, v51, v50);
    uint64_t v53 = swift_retain_n(v43, 2LL);
    Logger.logObject.getter(v53);
    os_log_type_t v54 = OUTLINED_FUNCTION_41();
    if (os_log_type_enabled(v43, v54))
    {
      uint64_t v55 = OUTLINED_FUNCTION_7_0(22LL);
      uint64_t v109 = OUTLINED_FUNCTION_7_0(64LL);
      uint64_t v118 = v109;
      *(_DWORD *)uint64_t v55 = 136315394;
      uint64_t v56 = lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel( &lazy protocol witness table cache variable for type RRCandidate and conformance RRCandidate,  (uint64_t (*)(uint64_t))&type metadata accessor for RRCandidate,  (uint64_t)&protocol conformance descriptor for RRCandidate);
      uint64_t v57 = dispatch thunk of CustomStringConvertible.description.getter(v50, v56);
      uint64_t v117 = OUTLINED_FUNCTION_12_97(v57, v58);
      uint64_t v110 = v48;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v117, &v118, v55 + 4, v55 + 12);
      OUTLINED_FUNCTION_62();
      uint64_t v59 = *(void (**)(char *, uint64_t))(v49 + 8);
      uint64_t v60 = OUTLINED_FUNCTION_26_64();
      *(_WORD *)(v55 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2080;
      uint64_t v61 = dispatch thunk of ResolveQuery.description.getter(v60);
      uint64_t v117 = OUTLINED_FUNCTION_12_97(v61, v62);
      uint64_t v48 = v110;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v117, &v118, v55 + 14, v55 + 22);
      OUTLINED_FUNCTION_3_16();
      OUTLINED_FUNCTION_62();
      _os_log_impl( &dword_0,  v43,  v54,  "#ReferenceResolution Found a candidate %s by using query:%s",  (uint8_t *)v55,  0x16u);
      uint64_t v63 = v109;
      swift_arrayDestroy(v109, 2LL);
      OUTLINED_FUNCTION_0_2(v63);
      OUTLINED_FUNCTION_0_2(v55);
    }

    else
    {
      uint64_t v59 = *(void (**)(char *, uint64_t))(v49 + 8);
      OUTLINED_FUNCTION_26_64();

      uint64_t v64 = OUTLINED_FUNCTION_3_16();
    }

    id v72 = v115;
    uint64_t v73 = v116;
    RRCandidate.entity.getter(v64);
    v59(v72, v50);
    (*(void (**)(char *, uint64_t))(v112 + 8))(v48, v111);
    goto LABEL_15;
  }

  if (v47 == enum case for RRResult.needsDisambiguation(_:))
  {
    uint64_t v65 = v36;
    OUTLINED_FUNCTION_3_128();
    swift_bridgeObjectRelease();
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v66 = OUTLINED_FUNCTION_15_1();
    __swift_project_value_buffer(v66, (uint64_t)static Logger.siriPhone);
    OUTLINED_FUNCTION_9();
    os_log_type_t v67 = OUTLINED_FUNCTION_41();
    if (!OUTLINED_FUNCTION_10(v67)) {
      goto LABEL_27;
    }
    uint64_t v70 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
    *uint64_t v70 = 0;
    uint64_t v71 = "#ReferenceResolution Found ambiguous entities -> nil";
LABEL_26:
    OUTLINED_FUNCTION_2_2(&dword_0, v68, v69, v71);
    OUTLINED_FUNCTION_0_2((uint64_t)v70);
LABEL_27:

    unint64_t v84 = *(uint64_t (**)(uint64_t, uint64_t))(v65 + 8);
LABEL_28:
    OUTLINED_FUNCTION_122_5((uint64_t)v42, v84);
    goto LABEL_29;
  }

  if (v47 != enum case for RRResult.foundMatchPlural(_:))
  {
    if (v47 == enum case for RRResult.needsDisambiguationPlural(_:))
    {
      uint64_t v65 = v36;
      OUTLINED_FUNCTION_3_128();
      swift_bridgeObjectRelease();
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v82 = OUTLINED_FUNCTION_15_1();
      __swift_project_value_buffer(v82, (uint64_t)static Logger.siriPhone);
      OUTLINED_FUNCTION_9();
      os_log_type_t v83 = OUTLINED_FUNCTION_41();
      if (!OUTLINED_FUNCTION_10(v83)) {
        goto LABEL_27;
      }
      uint64_t v70 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
      *uint64_t v70 = 0;
      uint64_t v71 = "#ReferenceResolution Found plural disambiguation -> nil";
      goto LABEL_26;
    }

    if (v47 == enum case for RRResult.noMatch(_:))
    {
      if (one-time initialization token for siriPhone != -1) {
        swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
      }
      uint64_t v88 = OUTLINED_FUNCTION_15_1();
      __swift_project_value_buffer(v88, (uint64_t)static Logger.siriPhone);
      OUTLINED_FUNCTION_9();
      os_log_type_t v89 = OUTLINED_FUNCTION_41();
      if (OUTLINED_FUNCTION_10(v89))
      {
        uint64_t v90 = (_WORD *)OUTLINED_FUNCTION_7_0(2LL);
        *uint64_t v90 = 0;
        OUTLINED_FUNCTION_2_2(&dword_0, v91, v92, "#ReferenceResolution No matches found");
        OUTLINED_FUNCTION_0_2((uint64_t)v90);
      }

      unint64_t v84 = *(uint64_t (**)(uint64_t, uint64_t))(v36 + 8);
      goto LABEL_28;
    }

    uint64_t v112 = v36;
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v93 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_70_3(v93, (uint64_t)static Logger.siriPhone);
    uint64_t v94 = ((uint64_t (*)(uint64_t, char *, uint64_t))v46)(v111, v42, v45);
    uint64_t v95 = (os_log_s *)Logger.logObject.getter(v94);
    uint64_t v96 = v45;
    os_log_type_t v97 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v95, v97))
    {
      uint64_t v98 = OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v110 = v42;
      uint64_t v99 = (uint8_t *)v98;
      uint64_t v100 = OUTLINED_FUNCTION_7_0(32LL);
      uint64_t v118 = v100;
      *(_DWORD *)uint64_t v99 = 136315138;
      uint64_t v101 = lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel( &lazy protocol witness table cache variable for type RRResult and conformance RRResult,  (uint64_t (*)(uint64_t))&type metadata accessor for RRResult,  (uint64_t)&protocol conformance descriptor for RRResult);
      uint64_t v102 = dispatch thunk of CustomStringConvertible.description.getter(v96, v101);
      unint64_t v20 = (void (*)(char *, uint64_t))v103;
      uint64_t v104 = OUTLINED_FUNCTION_12_97(v102, v103);
      uint64_t v105 = OUTLINED_FUNCTION_17_73(v104);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v105, v106, v107, v99 + 12);
      OUTLINED_FUNCTION_62();
      OUTLINED_FUNCTION_13_92();
      OUTLINED_FUNCTION_57_0(&dword_0, v95, v97, "#ReferenceResolution Received unknown result type %s", v99);
      OUTLINED_FUNCTION_17_0(v100);
      OUTLINED_FUNCTION_0_2(v100);
      OUTLINED_FUNCTION_0_2((uint64_t)v99);

      id v108 = v110;
    }

    else
    {

      OUTLINED_FUNCTION_13_92();
      id v108 = v42;
    }

    v20(v108, v96);
    uint64_t v73 = v116;
    v20((char *)v40, v96);
LABEL_47:
    uint64_t v74 = 1LL;
    goto LABEL_30;
  }

  OUTLINED_FUNCTION_3_128();
  uint64_t v75 = *v40;
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v76 = OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_70_3(v76, (uint64_t)static Logger.siriPhone);
  uint64_t v77 = swift_bridgeObjectRetain();
  os_log_type_t v78 = (os_log_s *)Logger.logObject.getter(v77);
  os_log_type_t v80 = static os_log_type_t.debug.getter(v78, v79);
  if (os_log_type_enabled(v78, v80))
  {
    uint64_t v81 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
    *(_DWORD *)uint64_t v81 = 134217984;
    uint64_t v118 = *(void *)(v75 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v118, &a9, v81 + 4, v81 + 12);
    OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_57_0(&dword_0, v78, v80, "#ReferenceResolution Found %ld candidates. Using the first one", v81);
    OUTLINED_FUNCTION_0_2((uint64_t)v81);
  }

  else
  {

    OUTLINED_FUNCTION_39();
  }

  uint64_t v73 = v116;
  uint64_t v86 = v114;
  uint64_t v87 = v112;
  specialized Collection.first.getter();
  OUTLINED_FUNCTION_39();
  if (__swift_getEnumTagSinglePayload(v87, 1LL, v86) == 1)
  {
    OUTLINED_FUNCTION_122_5((uint64_t)v42, *(uint64_t (**)(uint64_t, uint64_t))(v36 + 8));
    outlined destroy of SpeakableString?(v87, &demangling cache variable for type metadata for RRCandidate?);
    goto LABEL_47;
  }

  ((void (*)(void))RRCandidate.entity.getter)();
  OUTLINED_FUNCTION_122_5((uint64_t)v42, *(uint64_t (**)(uint64_t, uint64_t))(v36 + 8));
  (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v87, v86);
LABEL_15:
  uint64_t v74 = 0LL;
LABEL_30:
  uint64_t v85 = type metadata accessor for RREntity(0LL);
  __swift_storeEnumTagSinglePayload(v73, v74, 1LL, v85);
  OUTLINED_FUNCTION_7_5();
}

void RRReferenceResolverProtocol.resolveReference(resolveQuery:)()
{
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<RRResult, Error>);
  OUTLINED_FUNCTION_5_2();
  __chkstk_darwin();
  OUTLINED_FUNCTION_25_6();
  uint64_t v11 = (uint64_t *)(v9 - v10);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v34 - v12;
  static Signpost.begin(_:)();
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  uint64_t v37 = v18;
  int v36 = v19;
  dispatch thunk of RRReferenceResolverProtocol.resolve(query:)(v5, v3, v1);
  outlined init with copy of Result<RRResult, Error>((uint64_t)v13, (uint64_t)v11);
  if (swift_getEnumCaseMultiPayload(v11, v8) == 1)
  {
    uint64_t v20 = *v11;
    if (one-time initialization token for siriPhone != -1) {
      swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
    }
    uint64_t v21 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_70_3(v21, (uint64_t)static Logger.siriPhone);
    OUTLINED_FUNCTION_32_55();
    uint64_t v22 = OUTLINED_FUNCTION_32_55();
    uint64_t v23 = (os_log_s *)Logger.logObject.getter(v22);
    os_log_type_t v24 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v35 = v7;
      uint64_t v25 = (uint8_t *)OUTLINED_FUNCTION_7_0(12LL);
      uint64_t v26 = OUTLINED_FUNCTION_7_0(32LL);
      uint64_t v38 = v20;
      uint64_t v39 = v26;
      *(_DWORD *)uint64_t v25 = 136315138;
      uint64_t v34 = v17;
      OUTLINED_FUNCTION_32_55();
      uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
      uint64_t v28 = String.init<A>(describing:)(&v38, v27);
      uint64_t v38 = OUTLINED_FUNCTION_12_97(v28, v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39, v25 + 4, v25 + 12);
      uint64_t v7 = v35;
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_14_81();
      OUTLINED_FUNCTION_14_81();
      OUTLINED_FUNCTION_57_0(&dword_0, v23, v24, "#ReferenceResolution Received a failure: %s -> nil", v25);
      OUTLINED_FUNCTION_17_0(v26);
      OUTLINED_FUNCTION_0_2(v26);
      OUTLINED_FUNCTION_0_2((uint64_t)v25);
    }

    else
    {

      OUTLINED_FUNCTION_14_81();
      OUTLINED_FUNCTION_14_81();
    }

    OUTLINED_FUNCTION_14_81();
    outlined destroy of SpeakableString?( (uint64_t)v13,  &demangling cache variable for type metadata for Result<RRResult, Error>);
    uint64_t v33 = OUTLINED_FUNCTION_25_65();
    uint64_t v31 = v7;
    uint64_t v32 = 1LL;
  }

  else
  {
    outlined destroy of SpeakableString?( (uint64_t)v13,  &demangling cache variable for type metadata for Result<RRResult, Error>);
    uint64_t v30 = OUTLINED_FUNCTION_25_65();
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v30 - 8) + 32LL))(v7, v11, v30);
    uint64_t v31 = v7;
    uint64_t v32 = 0LL;
    uint64_t v33 = v30;
  }

  __swift_storeEnumTagSinglePayload(v31, v32, 1LL, v33);
  Signpost.OpenSignpost.end()();
  swift_release(v15);
  OUTLINED_FUNCTION_7_5();
}

uint64_t INPerson.makeRREntity(usoEntity:)(uint64_t a1)
{
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = INPerson.identifier.getter();
  uint64_t v7 = v6;
  uint64_t v8 = type metadata accessor for GroupIdentifier(0LL);
  __swift_storeEnumTagSinglePayload((uint64_t)v4, 1LL, 1LL, v8);
  unint64_t v9 = type metadata accessor for INPerson();
  swift_retain();
  return RREntity.init<A>(id:appBundleId:usoEntity:intentEntity:group:)( v5,  v7,  0xD00000000000001BLL,  0x800000000034F520LL,  a1,  v1,  v4,  v9);
}

uint64_t outlined bridged method (pb) of @objc INPerson.customIdentifier.getter(void *a1)
{
  id v1 = [a1 customIdentifier];
  if (!v1) {
    return 0LL;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);

  return v3;
}

void specialized Data.append<A>(contentsOf:)(uint64_t a1, uint64_t a2)
{
  v3[3] = &type metadata for Data;
  v3[4] = &protocol witness table for Data;
  v3[0] = a1;
  v3[1] = a2;
  uint64_t v2 = (char *)&loc_313964
     + *((int *)qword_313AA0
       + (__swift_project_boxed_opaque_existential_1(v3, (uint64_t)&type metadata for Data)[1] >> 62));
  __asm { BR              X10 }

uint64_t sub_313974()
{
  return __swift_destroy_boxed_opaque_existential_1(&v5);
}

uint64_t outlined init with copy of Result<RRResult, Error>(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<RRResult, Error>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

unint64_t lazy protocol witness table accessor for type SRRMatchType and conformance SRRMatchType()
{
  unint64_t result = lazy protocol witness table cache variable for type SRRMatchType and conformance SRRMatchType;
  if (!lazy protocol witness table cache variable for type SRRMatchType and conformance SRRMatchType)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for SRRMatchType, &type metadata for SRRMatchType);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type SRRMatchType and conformance SRRMatchType);
  }

  return result;
}

uint64_t storeEnumTagSinglePayload for SRRMatchType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    LODWORD(OUTLINED_FUNCTION_48_23(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin26PhoneCallContactIntentNode_handleLabel, v4) = 1;
  }
  else {
    LODWORD(OUTLINED_FUNCTION_48_23(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin26PhoneCallContactIntentNode_handleLabel, v4) = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFD) {
    return ((uint64_t (*)(void))((char *)&loc_313B84 + 4 * byte_3412D5[v4]))();
  }
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_313BB8 + 4 * asc_3412D0[v4]))();
}

uint64_t sub_313BB8(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_313BC0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x313BC8LL);
  }
  return result;
}

uint64_t sub_313BD4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x313BDCLL);
  }
  *(_BYTE *)unint64_t result = a2 + 2;
  return result;
}

uint64_t sub_313BE0(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_313BE8(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SRRMatchType()
{
  return &type metadata for SRRMatchType;
}

uint64_t _ss15withUnsafeBytes2of_q0_x_q0_SWq_YKXEtq_YKs5ErrorR_Ri_zRi_0_r1_lFs5UInt8V_A13Et_sAC_pytTg5037_s10Foundation4DataV06InlineB0V15withB31BytesyxxSWKXEKlFxSWKXEfU_yt_TG5SWxsAC_pRi_zRi0_zlyytIsgyrzo_SiTf1nnc_n0ghi30V6append10contentsOfyx_tSTRzs5F22V7ElementRtzlFySWXEfU_10Foundation0I0VTf1nncn_n( uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1;
  __int16 v5 = a2;
  char v6 = BYTE2(a2);
  char v7 = BYTE3(a2);
  char v8 = BYTE4(a2);
  char v9 = BYTE5(a2);
  return Data._Representation.append(contentsOf:)(&v4, (char *)&v4 + a3);
}

uint64_t specialized __DataStorage.withUnsafeBytes<A>(in:apply:)(uint64_t a1, uint64_t a2)
{
  uint64_t result = __DataStorage._bytes.getter();
  uint64_t v5 = result;
  if (result)
  {
    uint64_t result = __DataStorage._offset.getter();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }

    v5 += a1 - result;
  }

  BOOL v6 = __OFSUB__(a2, a1);
  uint64_t v7 = a2 - a1;
  if (v6)
  {
    __break(1u);
    goto LABEL_13;
  }

  uint64_t v8 = __DataStorage._length.getter();
  if (v8 >= v7) {
    uint64_t v9 = v7;
  }
  else {
    uint64_t v9 = v8;
  }
  uint64_t v10 = v5 + v9;
  if (v5) {
    uint64_t v11 = v10;
  }
  else {
    uint64_t v11 = 0LL;
  }
  return Data._Representation.append(contentsOf:)(v5, v11);
}

uint64_t OUTLINED_FUNCTION_3_128()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 96))(v2, v0);
}

uint64_t OUTLINED_FUNCTION_12_97(uint64_t a1, unint64_t a2)
{
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)(v2 - 88));
}

uint64_t OUTLINED_FUNCTION_13_92()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 136) + 8LL))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_14_81()
{
  return swift_errorRelease(v0);
}

uint64_t OUTLINED_FUNCTION_16_66()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t OUTLINED_FUNCTION_17_73(uint64_t a1)
{
  *(void *)(v1 - 96) = a1;
  return v1 - 96;
}

uint64_t OUTLINED_FUNCTION_26_64()
{
  return v0(v2, v1);
}

uint64_t OUTLINED_FUNCTION_30_55()
{
  return outlined consume of Data?(v0, v1);
}

uint64_t OUTLINED_FUNCTION_32_55()
{
  return swift_errorRetain(v0);
}

void specialized RawRepresentable<>.hashValue.getter(char a1)
{
}

{
  specialized RawRepresentable<>._rawHashValue(seed:)(0LL, a1 & 1);
}

void specialized RawRepresentable<>.hashValue.getter(uint64_t a1)
{
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))PhoneCallControlCATsSimple.Properties.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))PhoneCallControlCATsSimple.CallControlDialogIds.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))PhoneCallControlCATsSimple.UnsupportedHoldActionDialogIds.rawValue.getter);
}

{
  char v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v2 = OUTLINED_FUNCTION_196_0(a1);
  if (v1)
  {
    if (v1 == 1) {
      uint64_t v4 = 0x6C6F566B63656863LL;
    }
    else {
      uint64_t v4 = 0x636972656E6567LL;
    }
  }

  else
  {
    uint64_t v4 = 0x6F5665676E616863LL;
  }

  OUTLINED_FUNCTION_5_112((uint64_t)v2, v4, v3);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_11_17();
  OUTLINED_FUNCTION_10_16();
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))PhoneCallControlCATsSimple.UnsupportedSwitchToFaceTimeDialogIds.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))PhoneCallSlotNames.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))PhoneCallProvider.CodingKeys.rawValue.getter);
}

{
  char v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v2 = OUTLINED_FUNCTION_196_0(a1);
  if (v1)
  {
    if (v1 == 1) {
      uint64_t v4 = 0x654E646E41646E65LL;
    }
    else {
      uint64_t v4 = 0x4E646E41646C6F68LL;
    }
  }

  else
  {
    uint64_t v4 = 6579297LL;
  }

  OUTLINED_FUNCTION_5_112((uint64_t)v2, v4, v3);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_11_17();
  OUTLINED_FUNCTION_10_16();
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))SuggestionsCATsSimple.Properties.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))PhoneIncomingCall.CodingKeys.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))UnsupportedFlowCATPatternsIdentifiers.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))PhoneCallCommonCATs.Properties.rawValue.getter);
}

{
  char v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v2 = OUTLINED_FUNCTION_196_0(a1);
  if (v1)
  {
    if (v1 == 1) {
      uint64_t v4 = 0x6C61636F4C6E6F6ELL;
    }
    else {
      uint64_t v4 = 1701736302LL;
    }
  }

  else
  {
    uint64_t v4 = 0x6C61636F6CLL;
  }

  OUTLINED_FUNCTION_5_112((uint64_t)v2, v4, v3);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_11_17();
  OUTLINED_FUNCTION_10_16();
}

{
  specialized RawRepresentable<>.hashValue.getter(a1, (uint64_t (*)(uint64_t))DucFamilyNames.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))StartCallCATPatternsIdentifiers.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))AnswerCallCATs.Properties.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))AnnounceIncomingCallCATs.Properties.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))AnnounceIncomingCallCATsSimple.IntentHandledResponseDialogIds.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))PhoneCallNLConstants.rawValue.getter);
}

{
  char v1;
  unint64_t v1 = a1;
  OUTLINED_FUNCTION_13_3(a1);
  __asm { BR              X10 }

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))VoicemailVerbSemantics.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))PhoneCallVerbSemantics.rawValue.getter);
}

{
  char v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v2 = OUTLINED_FUNCTION_196_0(a1);
  if ((v1 & 1) != 0) {
    uint64_t v4 = 0x6C69616D65LL;
  }
  else {
    uint64_t v4 = 0x656E6F6870LL;
  }
  OUTLINED_FUNCTION_43_32((uint64_t)v2, v4, v3);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_11_17();
  OUTLINED_FUNCTION_10_16();
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))IdentifyIncomingCallerCATsSimple.Properties.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))AnnounceCallBellCATsSimple.Properties.rawValue.getter);
}

{
  char v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v2 = OUTLINED_FUNCTION_196_0(a1);
  if ((v1 & 1) != 0) {
    uint64_t v4 = 0x32676F6C616964LL;
  }
  else {
    uint64_t v4 = 0x6573557473726946LL;
  }
  OUTLINED_FUNCTION_5_112((uint64_t)v2, v4, v3);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_11_17();
  OUTLINED_FUNCTION_10_16();
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))PhoneCallDisplayTextCATs.Properties.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter(a1, (uint64_t (*)(uint64_t))LogTag.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))AnnounceCallBellCATs.Properties.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))PhoneCallAttribute.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))PhoneCallAudioRoute.rawValue.getter);
}

{
  char v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v2 = OUTLINED_FUNCTION_196_0(a1);
  if ((v1 & 1) != 0) {
    uint64_t v4 = 0x6F65646976LL;
  }
  else {
    uint64_t v4 = 0x6F69647561LL;
  }
  OUTLINED_FUNCTION_43_32((uint64_t)v2, v4, v3);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_11_17();
  OUTLINED_FUNCTION_10_16();
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))PhoneCallConfirmation.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter(a1, (uint64_t (*)(uint64_t))PhoneCallNoun.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))PhoneCallReference.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))PhoneCallContactReference.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter(a1, (uint64_t (*)(uint64_t))PhoneCallVerb.rawValue.getter);
}

{
  char v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v2 = OUTLINED_FUNCTION_196_0(a1);
  if ((v1 & 1) != 0) {
    uint64_t v4 = 0x6563696F76LL;
  }
  else {
    uint64_t v4 = 0x69616D6563696F76LL;
  }
  OUTLINED_FUNCTION_5_112((uint64_t)v2, v4, v3);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_11_17();
  OUTLINED_FUNCTION_10_16();
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))VoiceMail.VoiceMailVerb.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))PhoneCallDestinationType.rawValue.getter);
}

{
  char v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v2 = OUTLINED_FUNCTION_196_0(a1);
  if (v1)
  {
    if (v1 == 1) {
      uint64_t v4 = 1836020326LL;
    }
    else {
      uint64_t v4 = 1752459639LL;
    }
  }

  else
  {
    uint64_t v4 = 28532LL;
  }

  OUTLINED_FUNCTION_5_112((uint64_t)v2, v4, v3);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_11_17();
  OUTLINED_FUNCTION_10_16();
}

{
  char v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v2 = OUTLINED_FUNCTION_196_0(a1);
  if ((v1 & 1) != 0) {
    uint64_t v4 = 0x6E6F697461727564LL;
  }
  else {
    uint64_t v4 = 0x73456F54656D6974LL;
  }
  OUTLINED_FUNCTION_5_112((uint64_t)v2, v4, v3);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_11_17();
  OUTLINED_FUNCTION_10_16();
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))OngoingCallCATs.Properties.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))FollowUpOfferType.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))AddCallParticipantCATsSimple.Properties.rawValue.getter);
}

{
  char v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v2 = OUTLINED_FUNCTION_196_0(a1);
  if (v1)
  {
    if (v1 == 1) {
      uint64_t v4 = 0x646C6F486E4FLL;
    }
    else {
      uint64_t v4 = 0x676E69676E6952LL;
    }
  }

  else
  {
    uint64_t v4 = 0x636972656E6547LL;
  }

  OUTLINED_FUNCTION_5_112((uint64_t)v2, v4, v3);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_11_17();
  OUTLINED_FUNCTION_10_16();
}

{
  char v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v2 = OUTLINED_FUNCTION_196_0(a1);
  if ((v1 & 1) != 0) {
    uint64_t v4 = 1735289202LL;
  }
  else {
    uint64_t v4 = 6579297LL;
  }
  OUTLINED_FUNCTION_5_112((uint64_t)v2, v4, v3);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_11_17();
  OUTLINED_FUNCTION_10_16();
}

{
  char v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v2 = OUTLINED_FUNCTION_196_0(a1);
  if ((v1 & 1) != 0) {
    uint64_t v4 = 0x6F725074726F6873LL;
  }
  else {
    uint64_t v4 = 0x6D6F7250676E6F6CLL;
  }
  OUTLINED_FUNCTION_5_112((uint64_t)v2, v4, v3);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_11_17();
  OUTLINED_FUNCTION_10_16();
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))StartCallCATs.Properties.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))PhoneCallDisplayTextCATsSimple.Properties.rawValue.getter);
}

{
  char v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v2 = OUTLINED_FUNCTION_196_0(a1);
  if (v1)
  {
    if (v1 == 1) {
      uint64_t v4 = 28532LL;
    }
    else {
      uint64_t v4 = 0x6F68576F74LL;
    }
  }

  else
  {
    uint64_t v4 = 0x546563614677656ELL;
  }

  OUTLINED_FUNCTION_5_112((uint64_t)v2, v4, v3);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_11_17();
  OUTLINED_FUNCTION_10_16();
}

{
  _BYTE v1[72];
  OUTLINED_FUNCTION_196_0(a1);
  OUTLINED_FUNCTION_5_71((uint64_t)v1, 0x2331686374697773LL);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_11_17();
  OUTLINED_FUNCTION_10_16();
}

{
  char v1;
  uint64_t v2;
  _BYTE v3[72];
  OUTLINED_FUNCTION_196_0(a1);
  if ((v1 & 1) != 0) {
    uint64_t v2 = 0x7261506472696874LL;
  }
  else {
    uint64_t v2 = 0x7261507473726966LL;
  }
  String.hash(into:)(v3, v2, 0xEA00000000007974LL);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_11_17();
  OUTLINED_FUNCTION_10_16();
}

{
  char v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v2 = OUTLINED_FUNCTION_196_0(a1);
  if ((v1 & 1) != 0) {
    uint64_t v4 = 0x656E6F6850657375LL;
  }
  else {
    uint64_t v4 = 0x68506E6F4E657375LL;
  }
  OUTLINED_FUNCTION_5_112((uint64_t)v2, v4, v3);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_11_17();
  OUTLINED_FUNCTION_10_16();
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))AnswerCallCATsSimple.IntentHandledResponseDialogIds.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))IdentifyIncomingCallerCATsSimple.IntentHandledResponseDialogIds.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))ContactSourceType.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))SearchCallHistoryCATs.Properties.rawValue.getter);
}

{
  char v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v2 = OUTLINED_FUNCTION_196_0(a1);
  if (v1)
  {
    if (v1 == 1) {
      uint64_t v4 = 1886352499LL;
    }
    else {
      uint64_t v4 = 0x746165706572LL;
    }
  }

  else
  {
    uint64_t v4 = 0x65756E69746E6F63LL;
  }

  OUTLINED_FUNCTION_5_112((uint64_t)v2, v4, v3);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_11_17();
  OUTLINED_FUNCTION_10_16();
}

{
  char v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v2 = OUTLINED_FUNCTION_196_0(a1);
  if ((v1 & 1) != 0) {
    uint64_t v4 = 0x7069636974726170LL;
  }
  else {
    uint64_t v4 = 0x7954657469766E69LL;
  }
  OUTLINED_FUNCTION_5_112((uint64_t)v2, v4, v3);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_11_17();
  OUTLINED_FUNCTION_10_16();
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))StartCallCATsSimple.Properties.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))StartCallCATsSimple.ConfirmAppDialogIds.rawValue.getter);
}

{
  char v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v2 = OUTLINED_FUNCTION_196_0(a1);
  if ((v1 & 1) != 0) {
    uint64_t v4 = 0x32676F6C616964LL;
  }
  else {
    uint64_t v4 = 0x6E776F6E6B6E55LL;
  }
  OUTLINED_FUNCTION_21_63((uint64_t)v2, v4, v3);
  OUTLINED_FUNCTION_72_16();
  OUTLINED_FUNCTION_11_17();
  OUTLINED_FUNCTION_10_16();
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))StartCallCATsSimple.ConfirmContactsDialogIds.rawValue.getter);
}

{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  OUTLINED_FUNCTION_196_0(a1);
  OUTLINED_FUNCTION_71_13();
  if (v3) {
    uint64_t v4 = 0x32676F6C616964LL;
  }
  else {
    uint64_t v4 = 0xD000000000000016LL;
  }
  OUTLINED_FUNCTION_5_112(v1, v4, v2);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_11_17();
  OUTLINED_FUNCTION_10_16();
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))StartCallCATsSimple.DisambiguateAppsVoiceModeDialogIds.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))StartCallCATsSimple.DisambiguateContactsDialogIds.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))StartCallCATsSimple.DisambiguateContactsHandlesDialogIds.rawValue.getter);
}

{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  OUTLINED_FUNCTION_196_0(a1);
  OUTLINED_FUNCTION_71_13();
  if (v3) {
    uint64_t v4 = 0xD00000000000001ELL;
  }
  else {
    uint64_t v4 = 0x65766947656D6153LL;
  }
  OUTLINED_FUNCTION_5_112(v1, v4, v2);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_11_17();
  OUTLINED_FUNCTION_10_16();
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))StartCallCATsSimple.EmergencyCountdownDialogIds.rawValue.getter);
}

{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  OUTLINED_FUNCTION_196_0(a1);
  OUTLINED_FUNCTION_71_13();
  if (v3) {
    uint64_t v4 = 0x436D7269666E6F43LL;
  }
  else {
    uint64_t v4 = 0xD000000000000012LL;
  }
  OUTLINED_FUNCTION_5_112(v1, v4, v2);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_11_17();
  OUTLINED_FUNCTION_10_16();
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))StartCallCATsSimple.IntentConfirmationWithRestrictedContactsDialogIds.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))StartCallCATsSimple.IntentHandledResponseDialogIds.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))StartCallCATsSimple.IntentHandledResponseEmergencyDialogIds.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))StartCallCATsSimple.ErrorWithCodeAirplaneModeEnabledDialogIds.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))StartCallCATsSimple.RelationshipDialogIds.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))StartCallCATsSimple.UnsupportedContactsInvalidHandleDialogIds.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))StartCallCATsSimple.UnsupportedContactsNoContactFoundDialogIds.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))StartCallCATsSimple.UnsupportedContactsNoHandleForLabelDialogIds.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))StartCallCATsSimple.UnsupportedPreferredCallProviderDialogIds.rawValue.getter);
}

{
  char v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v2 = OUTLINED_FUNCTION_196_0(a1);
  if (v1) {
    uint64_t v4 = 0x6423317473726966LL;
  }
  else {
    uint64_t v4 = 0x31676F6C616964LL;
  }
  OUTLINED_FUNCTION_5_112((uint64_t)v2, v4, v3);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_11_17();
  OUTLINED_FUNCTION_10_16();
}

{
  char v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v2 = OUTLINED_FUNCTION_196_0(a1);
  if (v1)
  {
    if (v1 == 1) {
      uint64_t v4 = 0x756F687469575446LL;
    }
    else {
      uint64_t v4 = 0x636972656E6547LL;
    }
  }

  else
  {
    uint64_t v4 = 0x6544687469575446LL;
  }

  OUTLINED_FUNCTION_5_112((uint64_t)v2, v4, v3);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_11_17();
  OUTLINED_FUNCTION_10_16();
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))StartCallCATsSimple.UnsupportedPreferredCallProviderTelephonyUnsupportedDialogIds.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))AnnounceVoicemailCATsSimple.Properties.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))ReaderNLConstants.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))PhoneCallCommonCATsSimple.Properties.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))AnnounceGroupFaceTimeInviteCATPatternsIdentifiers.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))AnnounceGroupFaceTimeInviteCATsSimple.ReadGroupFaceTimeInviteAnnouncementDialogIds.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))UnsupportedPhoneCall.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))SearchCallHistoryCATsSimple.Properties.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))SearchCallHistoryCATsSimple.ConfirmCallTypesDialogIds.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))SearchCallHistoryCATsSimple.ConfirmDateCreatedDialogIds.rawValue.getter);
}

{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  OUTLINED_FUNCTION_196_0(a1);
  OUTLINED_FUNCTION_71_13();
  if (v3) {
    uint64_t v4 = 0xD000000000000014LL;
  }
  else {
    uint64_t v4 = 0x31676F6C616964LL;
  }
  OUTLINED_FUNCTION_5_112(v1, v4, v2);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_11_17();
  OUTLINED_FUNCTION_10_16();
}

{
  char v1;
  unint64_t v1 = a1;
  OUTLINED_FUNCTION_13_3(a1);
  __asm { BR              X10 }

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))SearchCallHistoryCATsSimple.ShowCallHistoryIntroDialogIds.rawValue.getter);
}

{
  char v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v2 = OUTLINED_FUNCTION_196_0(a1);
  if ((v1 & 1) != 0) {
    uint64_t v4 = 0xD000000000000015LL;
  }
  else {
    uint64_t v4 = 0x32676F6C616964LL;
  }
  OUTLINED_FUNCTION_5_112((uint64_t)v2, v4, v3);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_11_17();
  OUTLINED_FUNCTION_10_16();
}

{
  char v1;
  unint64_t v1 = a1;
  OUTLINED_FUNCTION_13_3(a1);
  __asm { BR              X10 }

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))PhoneCallControlCATs.Properties.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))SuggestionsCATs.Properties.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))PhoneStartCallIntent.CodingKeys.rawValue.getter);
}

{
  char v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v2 = OUTLINED_FUNCTION_196_0(a1);
  if ((v1 & 1) != 0) {
    uint64_t v4 = 0x6143657461657263LL;
  }
  else {
    uint64_t v4 = 0x73746E65636572LL;
  }
  OUTLINED_FUNCTION_5_112((uint64_t)v2, v4, v3);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_11_17();
  OUTLINED_FUNCTION_10_16();
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))HangUpCallCATs.Properties.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))PhoneAppSelectionSignalsGathererType.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))PostCallInquiryAnswerCallCATs.Properties.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))ActionableCallControlFlow.UnsupportedHoldActionReason.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))ActionableCallControlFlow.UnsupportedSwitchToFaceTimeReason.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))SiriPhoneDefaultsKey.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))FaceTimeMessageControllerFlow.State.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))SlotResolutionError.rawValue.getter);
}

{
  char v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v2 = OUTLINED_FUNCTION_196_0(a1);
  if ((v1 & 1) != 0) {
    uint64_t v4 = 0x6C61436F54646461LL;
  }
  else {
    uint64_t v4 = 0x6C6C614377656ELL;
  }
  OUTLINED_FUNCTION_5_112((uint64_t)v2, v4, v3);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_11_17();
  OUTLINED_FUNCTION_10_16();
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))AddCallParticipantCATPatternsIdentifiers.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))CallControlUsoIdentifiers.PhoneSetting.rawValue.getter);
}

{
  char v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v2 = OUTLINED_FUNCTION_196_0(a1);
  if (v1)
  {
    if (v1 == 1) {
      uint64_t v4 = 0x6563696F76LL;
    }
    else {
      uint64_t v4 = 0x656D756C6F76LL;
    }
  }

  else
  {
    uint64_t v4 = 0x707954616964656DLL;
  }

  OUTLINED_FUNCTION_5_112((uint64_t)v2, v4, v3);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_11_17();
  OUTLINED_FUNCTION_10_16();
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))AddCallParticipantCATs.Properties.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))PhoneCallRecord.CodingKeys.rawValue.getter);
}

{
  specialized RawRepresentable<>._rawHashValue(seed:)(0LL, a1);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))PhoneCallCommonCATPatternsIdentifiers.rawValue.getter);
}

{
  char v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v2 = OUTLINED_FUNCTION_196_0(a1);
  if (v1)
  {
    if (v1 == 1) {
      uint64_t v4 = 0x46676E6974696177LL;
    }
    else {
      uint64_t v4 = 0x6365527475706E69LL;
    }
  }

  else
  {
    uint64_t v4 = 0x696C616974696E69LL;
  }

  OUTLINED_FUNCTION_5_112((uint64_t)v2, v4, v3);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_11_17();
  OUTLINED_FUNCTION_10_16();
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))ForcedAppDisambiguationPhase.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))UsoIdentifierNamespaceType.rawValue.getter);
}

{
  char v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v2 = OUTLINED_FUNCTION_196_0(a1);
  if ((v1 & 1) != 0) {
    uint64_t v4 = 0xD000000000000015LL;
  }
  else {
    uint64_t v4 = 0x746163696C707041LL;
  }
  OUTLINED_FUNCTION_5_112((uint64_t)v2, v4, v3);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_11_17();
  OUTLINED_FUNCTION_10_16();
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))SpecifyingContactAddress.rawValue.getter);
}

{
  char v1;
  unint64_t v1 = a1;
  OUTLINED_FUNCTION_13_3(a1);
  __asm { BR              X10 }

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))HangUpCallCATsSimple.Properties.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))OngoingCallCATsSimple.Properties.rawValue.getter);
}

{
  char v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v2 = OUTLINED_FUNCTION_196_0(a1);
  if ((v1 & 1) != 0) {
    uint64_t v4 = 0x636972656E6567LL;
  }
  else {
    uint64_t v4 = 0x656D695465636166LL;
  }
  OUTLINED_FUNCTION_5_112((uint64_t)v2, v4, v3);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_11_17();
  OUTLINED_FUNCTION_10_16();
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))OngoingCallCATsSimple.NewCallPromptDialogIds.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))TrialSmartAppSelectionConfigKey.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))PhoneAppResolutionLogger.CodePathId.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))PhoneSearchCallHistoryIntent.CodingKeys.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter(a1, (uint64_t (*)(uint64_t))ParseTypeLogging.rawValue.getter);
}

{
  char v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v2 = OUTLINED_FUNCTION_196_0(a1);
  if (v1)
  {
    if (v1 == 1) {
      uint64_t v4 = 0x7461446567616D69LL;
    }
    else {
      uint64_t v4 = 0x63417463656C6573LL;
    }
  }

  else
  {
    OUTLINED_FUNCTION_25_66();
  }

  OUTLINED_FUNCTION_5_112((uint64_t)v2, v4, v3);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_11_17();
  OUTLINED_FUNCTION_10_16();
}

{
  char v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v2 = OUTLINED_FUNCTION_196_0(a1);
  if ((v1 & 1) != 0) {
    uint64_t v4 = 0x644970756F7267LL;
  }
  else {
    uint64_t v4 = 0x6D614E70756F7267LL;
  }
  OUTLINED_FUNCTION_5_112((uint64_t)v2, v4, v3);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_11_17();
  OUTLINED_FUNCTION_10_16();
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))PhoneCallControlNLIntent.Verb.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))PhoneCallControlNLIntent.Target.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))PhoneCallControlAction.rawValue.getter);
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))UnsupportedFlowCATsSimple.Properties.rawValue.getter);
}

{
  char v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v2 = OUTLINED_FUNCTION_196_0(a1);
  if ((v1 & 1) != 0) {
    uint64_t v4 = 0x32676F6C616964LL;
  }
  else {
    uint64_t v4 = 0x31676F6C616964LL;
  }
  OUTLINED_FUNCTION_21_63((uint64_t)v2, v4, v3);
  OUTLINED_FUNCTION_72_16();
  OUTLINED_FUNCTION_11_17();
  OUTLINED_FUNCTION_10_16();
}

{
  unsigned __int8 v1;
  void *v2;
  uint64_t v3;
  uint64_t v2 = OUTLINED_FUNCTION_196_0(a1);
  OUTLINED_FUNCTION_21_63((uint64_t)v2, ((unint64_t)v1 << 48) + 0x31676F6C616964LL, v3);
  OUTLINED_FUNCTION_72_16();
  OUTLINED_FUNCTION_11_17();
  OUTLINED_FUNCTION_10_16();
}

{
  char v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v2 = OUTLINED_FUNCTION_196_0(a1);
  if ((v1 & 1) != 0) {
    uint64_t v4 = 0x636972656E6567LL;
  }
  else {
    uint64_t v4 = 0x79616C50726163LL;
  }
  OUTLINED_FUNCTION_21_63((uint64_t)v2, v4, v3);
  OUTLINED_FUNCTION_72_16();
  OUTLINED_FUNCTION_11_17();
  OUTLINED_FUNCTION_10_16();
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))SearchCallHistoryCATPatternsIdentifiers.rawValue.getter);
}

{
  char v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v2 = OUTLINED_FUNCTION_196_0(a1);
  if (v1)
  {
    if (v1 == 1) {
      uint64_t v4 = 0x656D697465636166LL;
    }
    else {
      uint64_t v4 = 0x7261506472696874LL;
    }
  }

  else
  {
    uint64_t v4 = 0x6E6F6870656C6574LL;
  }

  OUTLINED_FUNCTION_5_112((uint64_t)v2, v4, v3);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_11_17();
  OUTLINED_FUNCTION_10_16();
}

{
  char v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v2 = OUTLINED_FUNCTION_196_0(a1);
  if ((v1 & 1) != 0) {
    uint64_t v4 = 0x6C61636F6CLL;
  }
  else {
    uint64_t v4 = 0x6E676965726F66LL;
  }
  OUTLINED_FUNCTION_5_112((uint64_t)v2, v4, v3);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_11_17();
  OUTLINED_FUNCTION_10_16();
}

{
  _BYTE v2[72];
  OUTLINED_FUNCTION_13_3(a1);
  OUTLINED_FUNCTION_5_71((uint64_t)v2, a1);
  OUTLINED_FUNCTION_11_17();
  OUTLINED_FUNCTION_10_16();
}

{
  specialized RawRepresentable<>.hashValue.getter( a1,  (uint64_t (*)(uint64_t))AnnounceVoicemailDirectAction.CodingKeys.rawValue.getter);
}

void specialized RawRepresentable<>.hashValue.getter()
{
}

{
  OUTLINED_FUNCTION_9_89(16LL);
}

{
  OUTLINED_FUNCTION_31_51(0x56495443415F4F4ELL);
}

{
  OUTLINED_FUNCTION_14_82(1953720684LL);
}

{
  OUTLINED_FUNCTION_30_56(0x6C6562616CLL);
}

{
  OUTLINED_FUNCTION_20_70(0x6974746553707061LL);
}

{
  OUTLINED_FUNCTION_14_82(1819042147LL);
}

{
  OUTLINED_FUNCTION_13_93(0x6C65636E6163LL);
}

{
  specialized RawRepresentable<>.hashValue.getter(0x64656C65636E6163LL);
}

{
  OUTLINED_FUNCTION_13_93(0x65676E616863LL);
}

{
  OUTLINED_FUNCTION_16_67(0x636E656772656D65LL);
}

{
  OUTLINED_FUNCTION_9_89(17LL);
}

{
  OUTLINED_FUNCTION_13_93(0x74706D6F7270LL);
}

{
  OUTLINED_FUNCTION_14_82(1852403562LL);
}

{
  OUTLINED_FUNCTION_1_108(0x6C6C614377656ELL);
}

{
  OUTLINED_FUNCTION_14_82(1954047342LL);
}

{
  OUTLINED_FUNCTION_1_108(0x7070416E65706FLL);
}

{
  specialized RawRepresentable<>.hashValue.getter(0x746E6F436E65706FLL);
}

{
  OUTLINED_FUNCTION_16_67(0x697263736E617254LL);
}

{
  OUTLINED_FUNCTION_1_108(0x6E776F6E6B6E75LL);
}

{
  OUTLINED_FUNCTION_16_67(0x6553657461647075LL);
}

{
  OUTLINED_FUNCTION_20_70(0x6C646E7542707061LL);
}

{
  specialized RawRepresentable<>.hashValue.getter(0x636E656772656D65LL);
}

{
  OUTLINED_FUNCTION_9_89(18LL);
}

{
  OUTLINED_FUNCTION_9_89(24LL);
}

{
  OUTLINED_FUNCTION_1_108(0x636972656E6567LL);
}

{
  OUTLINED_FUNCTION_30_56(0x6573756170LL);
}

{
  specialized RawRepresentable<>.hashValue.getter(0x6F68706F7263696DLL);
}

{
  OUTLINED_FUNCTION_20_70(0x747369486C6C6163LL);
}

{
  OUTLINED_FUNCTION_31_51(0x75466E6F73726570LL);
}

{
  OUTLINED_FUNCTION_9_89(21LL);
}

{
  specialized RawRepresentable<>.hashValue.getter(0x756F756769626D61LL);
}

{
  OUTLINED_FUNCTION_9_89(21LL);
}

void sub_3140E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t specialized RawRepresentable<>.hashValue.getter(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(0LL, a1);
}

void sub_314EE0(uint64_t a1, ...)
{
}

void sub_314FE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_3153F4()
{
}

void specialized RawRepresentable<>.hashValue.getter(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = a1 & 1;
  OUTLINED_FUNCTION_13_3(a1);
  uint64_t v4 = a2(v3);
  OUTLINED_FUNCTION_5_71((uint64_t)v5, v4);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_11_17();
  OUTLINED_FUNCTION_10_16();
}

{
  uint64_t v4;
  _BYTE v5[72];
  OUTLINED_FUNCTION_13_3(a1);
  uint64_t v4 = a2(a1);
  OUTLINED_FUNCTION_5_71((uint64_t)v5, v4);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_11_17();
  OUTLINED_FUNCTION_10_16();
}

Swift::Int specialized RawRepresentable<>.hashValue.getter(char a1)
{
  if ((a1 & 1) != 0) {
    unint64_t v2 = 0xD00000000000002FLL;
  }
  else {
    unint64_t v2 = 0xD00000000000002BLL;
  }
  if ((a1 & 1) != 0) {
    unint64_t v3 = 0x80000000003459C0LL;
  }
  else {
    unint64_t v3 = 0x8000000000345990LL;
  }
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

Swift::Int specialized RawRepresentable<>.hashValue.getter(unsigned __int8 a1)
{
  return Hasher._finalize()();
}

void specialized RawRepresentable<>.hashValue.getter(Swift::UInt a1)
{
}

PhoneCallFlowDelegatePlugin::AnnounceVoicemailCATsSimple::Properties_optional __swiftcall AnnounceVoicemailCATsSimple.Properties.init(rawValue:)( Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)( (Swift::OpaquePointer)&outlined read-only object #0 of AnnounceVoicemailCATsSimple.Properties.init(rawValue:),  v2);
  OUTLINED_FUNCTION_39();
  if (v3 == 1) {
    v4.PhoneCallFlowDelegatePlugin::EmergencyType value = PhoneCallFlowDelegatePlugin_AnnounceVoicemailCATsSimple_Properties_readVoicemailAnnouncementHint;
  }
  else {
    v4.PhoneCallFlowDelegatePlugin::EmergencyType value = PhoneCallFlowDelegatePlugin_AnnounceVoicemailCATsSimple_Properties_unknownDefault;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance AnnounceVoicemailCATsSimple.Properties()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

PhoneCallFlowDelegatePlugin::AnnounceVoicemailCATsSimple::Properties_optional protocol witness for RawRepresentable.init(rawValue:) in conformance AnnounceVoicemailCATsSimple.Properties@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::AnnounceVoicemailCATsSimple::Properties_optional *a2@<X8>)
{
  result.PhoneCallFlowDelegatePlugin::EmergencyType value = AnnounceVoicemailCATsSimple.Properties.init(rawValue:)(*a1).value;
  a2->PhoneCallFlowDelegatePlugin::EmergencyType value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance AnnounceVoicemailCATsSimple.Properties( unint64_t *a1@<X8>)
{
  *a1 = AnnounceVoicemailCATsSimple.Properties.rawValue.getter(*v1);
  a1[1] = v3;
  OUTLINED_FUNCTION_2();
}

uint64_t AnnounceVoicemailCATsSimple.readVoicemailAnnouncement(burstIndex:isPreviousNotificationVoicemail:voicemail:)( uint64_t a1, char a2, char a3, uint64_t a4)
{
  *(void *)(v5 + 24) = a4;
  *(void *)(v5 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v4;
  *(_BYTE *)(v5 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 5) = a3;
  *(_BYTE *)(v5 + 64) = a2;
  *(void *)(v5 + ++*(void *)(v0 + 16) = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)AnnounceVoicemailCATsSimple.readVoicemailAnnouncement(burstIndex:isPreviousNotificationVoicemail:voicemail:));
}

uint64_t AnnounceVoicemailCATsSimple.readVoicemailAnnouncement(burstIndex:isPreviousNotificationVoicemail:voicemail:)()
{
  char v4 = *(_BYTE *)(v2 + 64);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  BOOL v6 = (__n128 *)OUTLINED_FUNCTION_2_64(v5);
  *(void *)(v2 + 40) = v6;
  OUTLINED_FUNCTION_0_73(v6, (__n128)xmmword_320080);
  if ((v4 & 1) != 0)
  {
    v6[3].n128_u64[1] = 0LL;
    v6[4].n128_u64[0] = 0LL;
  }

  OUTLINED_FUNCTION_35_40();
  OUTLINED_FUNCTION_47_30(v7);
  uint64_t v8 = OUTLINED_FUNCTION_3_83((uint64_t)&type metadata for Bool);
  if (v0)
  {
    uint64_t v8 = type metadata accessor for PhoneCallRecord(v8);
  }

  else
  {
    v6[9].n128_u64[1] = 0LL;
    v6[10].n128_u64[0] = 0LL;
  }

  v6[9].n128_u64[0] = v0;
  v6[10].n128_u64[1] = v8;
  OUTLINED_FUNCTION_18_2();
  uint64_t v9 = (void *)swift_task_alloc(v1);
  *(void *)(v2 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v9;
  *uint64_t v9 = v2;
  v9[1] = OngoingCallCATsSimple.newCallPromptAsLabels(currentCall:targetCall:);
  uint64_t v10 = OUTLINED_FUNCTION_21_19(v3 + 12);
  return v12(v10);
}

PhoneCallFlowDelegatePlugin::AnnounceVoicemailCATsSimple::ReadVoicemailAnnouncementDialogIds_optional __swiftcall AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementDialogIds.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::AnnounceVoicemailCATsSimple::ReadVoicemailAnnouncementDialogIds_optional)AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementDialogIds.init(rawValue:)(rawValue, v1);
}

uint64_t AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementDialogIds.rawValue.getter(char a1)
{
  if (!a1) {
    return 0x746361746E6F63LL;
  }
  if (a1 == 1) {
    return 0x72656C6C61436F6ELL;
  }
  return 0xD000000000000012LL;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementDialogIds()
{
  specialized == infix<A>(_:_:)();
}

void protocol witness for Hashable.hashValue.getter in conformance AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementDialogIds()
{
}

uint64_t protocol witness for Hashable.hash(into:) in conformance AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementDialogIds( uint64_t a1)
{
  return specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementDialogIds( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::AnnounceVoicemailCATsSimple::ReadVoicemailAnnouncementDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementDialogIds@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::AnnounceVoicemailCATsSimple::ReadVoicemailAnnouncementDialogIds_optional *a2@<X8>)
{
  result.PhoneCallFlowDelegatePlugin::EmergencyType value = AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementDialogIds.init(rawValue:)(*a1).value;
  a2->PhoneCallFlowDelegatePlugin::EmergencyType value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementDialogIds( uint64_t *a1@<X8>)
{
  *a1 = AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementDialogIds.rawValue.getter(*v1);
  a1[1] = v3;
  OUTLINED_FUNCTION_2();
}

uint64_t AnnounceVoicemailCATsSimple.readVoicemailAnnouncementAsLabels(burstIndex:isPreviousNotificationVoicemail:voicemail:)( uint64_t a1, char a2, char a3, uint64_t a4)
{
  *(void *)(v5 + 24) = a4;
  *(void *)(v5 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v4;
  *(_BYTE *)(v5 + 6__swift_destroy_boxed_opaque_existential_1(v0 + 5) = a3;
  *(_BYTE *)(v5 + 64) = a2;
  *(void *)(v5 + ++*(void *)(v0 + 16) = a1;
  return OUTLINED_FUNCTION_33_0((uint64_t)AnnounceVoicemailCATsSimple.readVoicemailAnnouncementAsLabels(burstIndex:isPreviousNotificationVoicemail:voicemail:));
}

uint64_t AnnounceVoicemailCATsSimple.readVoicemailAnnouncementAsLabels(burstIndex:isPreviousNotificationVoicemail:voicemail:)()
{
  char v4 = *(_BYTE *)(v2 + 64);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  BOOL v6 = (__n128 *)OUTLINED_FUNCTION_2_64(v5);
  *(void *)(v2 + 40) = v6;
  OUTLINED_FUNCTION_0_73(v6, (__n128)xmmword_320080);
  if ((v4 & 1) != 0)
  {
    v6[3].n128_u64[1] = 0LL;
    v6[4].n128_u64[0] = 0LL;
  }

  OUTLINED_FUNCTION_35_40();
  OUTLINED_FUNCTION_47_30(v7);
  uint64_t v8 = OUTLINED_FUNCTION_3_83((uint64_t)&type metadata for Bool);
  if (v0)
  {
    uint64_t v8 = type metadata accessor for PhoneCallRecord(v8);
  }

  else
  {
    v6[9].n128_u64[1] = 0LL;
    v6[10].n128_u64[0] = 0LL;
  }

  v6[9].n128_u64[0] = v0;
  v6[10].n128_u64[1] = v8;
  OUTLINED_FUNCTION_18_2();
  uint64_t v9 = (void *)swift_task_alloc(v1);
  *(void *)(v2 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v9;
  unint64_t VoicemailAnnouncementDialogIds = lazy protocol witness table accessor for type AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementDialogIds and conformance AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementDialogIds();
  *uint64_t v9 = v2;
  v9[1] = OngoingCallCATsSimple.newCallPrompt(currentCall:targetCall:);
  return OUTLINED_FUNCTION_7_59( v3 + 12,  0x8000000000345990LL,  (uint64_t)v6,  (uint64_t)&type metadata for AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementDialogIds,  VoicemailAnnouncementDialogIds,  v12);
}

unint64_t lazy protocol witness table accessor for type AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementDialogIds and conformance AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementDialogIds and conformance AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementDialogIds;
  if (!lazy protocol witness table cache variable for type AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementDialogIds and conformance AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementDialogIds,  &type metadata for AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementDialogIds and conformance AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementDialogIds and conformance AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementDialogIds;
  if (!lazy protocol witness table cache variable for type AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementDialogIds and conformance AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementDialogIds,  &type metadata for AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementDialogIds and conformance AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementDialogIds);
  }

  return result;
}

uint64_t AnnounceVoicemailCATsSimple.readVoicemailAnnouncementHint(announcementCount:daysSinceLastHint:hintCount:)( uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, char a6)
{
  *(_BYTE *)(v7 + 74) = a6;
  *(void *)(v7 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a5;
  *(void *)(v7 + 40) = v6;
  *(_BYTE *)(v7 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 3) = a4;
  *(_BYTE *)(v7 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a2;
  *(void *)(v7 + ++*(void *)(v0 + 16) = a1;
  *(void *)(v7 + 24) = a3;
  return OUTLINED_FUNCTION_33_0((uint64_t)AnnounceVoicemailCATsSimple.readVoicemailAnnouncementHint(announcementCount:daysSinceLastHint:hintCount:));
}

uint64_t AnnounceVoicemailCATsSimple.readVoicemailAnnouncementHint(announcementCount:daysSinceLastHint:hintCount:)()
{
  char v1 = *(_BYTE *)(v0 + 72);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_2_64(v2);
  *(void *)(v0 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v3;
  *(_OWORD *)(v3 + ++*(void *)(v0 + 16) = xmmword_320080;
  OUTLINED_FUNCTION_56_0();
  *(void *)(v4 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xD000000000000011LL;
  *(void *)(v4 + 40) = v5;
  if ((v1 & 1) != 0)
  {
    OUTLINED_FUNCTION_50_30();
    *(void *)(v3 + 56) = 0LL;
    *(void *)(v3 + 64) = 0LL;
  }

  else
  {
    uint64_t v6 = *(void *)(v0 + 16);
    uint64_t v7 = &type metadata for Double;
  }

  *(void *)(v3 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v6;
  *(void *)(v3 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v7;
  *(void *)(v3 + 80) = 0xD000000000000011LL;
  OUTLINED_FUNCTION_56_0();
  *(void *)(v3 + 8__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v8;
  if ((v9 & 1) != 0)
  {
    uint64_t v10 = 0LL;
    *(void *)(v3 + outlined init with copy of SharedGlobalsProviding(v0, v1 - 104) = 0LL;
    *(void *)(v3 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  }

  else
  {
    uint64_t v10 = *(void *)(v0 + 24);
  }

  *(void *)(v3 + 96) = v10;
  OUTLINED_FUNCTION_21_36();
  *(void *)(v3 + 120) = v11;
  *(void *)(v3 + outlined init with copy of SharedGlobalsProviding(v0, v1 - 128) = v12;
  *(void *)(v3 + 136) = 0xE900000000000074LL;
  if ((v13 & 1) != 0)
  {
    OUTLINED_FUNCTION_50_30();
    *(void *)(v3 + 15__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
    *(void *)(v3 + 160) = 0LL;
  }

  else
  {
    uint64_t v14 = *(void *)(v0 + 32);
    uint64_t v15 = &type metadata for Double;
  }

  *(void *)(v3 + 16__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v15;
  *(void *)(v3 + 144) = v14;
  *(void *)(v0 + 56) = v16;
  *uint64_t v16 = v0;
  v16[1] = AnnounceVoicemailCATsSimple.readVoicemailAnnouncementHint(announcementCount:daysSinceLastHint:hintCount:);
  uint64_t v17 = OUTLINED_FUNCTION_21_19(0xD00000000000002FLL);
  return v19(v17);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t (*v6)(void);
  OUTLINED_FUNCTION_10_6();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v1, v2, v3);
  }

  else
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = OUTLINED_FUNCTION_14_39();
    return OUTLINED_FUNCTION_8_3(v5, v6);
  }

PhoneCallFlowDelegatePlugin::AnnounceVoicemailCATsSimple::ReadVoicemailAnnouncementHintDialogIds_optional __swiftcall AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementHintDialogIds.init(rawValue:)( Swift::String rawValue)
{
  v1._rawValue = &outlined read-only object #0 of AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementHintDialogIds.init(rawValue:);
  return (PhoneCallFlowDelegatePlugin::AnnounceVoicemailCATsSimple::ReadVoicemailAnnouncementHintDialogIds_optional)AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementDialogIds.init(rawValue:)(rawValue, v1);
}

unint64_t AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementDialogIds.init(rawValue:)( Swift::String string, Swift::OpaquePointer cases)
{
  object = string._object;
  v3._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  unint64_t v5 = _findStringSwitchCase(cases:string:)(cases, v3);
  OUTLINED_FUNCTION_39();
  if (v5 >= 3) {
    return 3LL;
  }
  else {
    return v5;
  }
}

unint64_t AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementHintDialogIds.rawValue.getter( unsigned __int8 a1)
{
  return ((unint64_t)a1 << 32) + 0x31746E6968LL;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementHintDialogIds( unsigned __int8 *a1, unsigned __int8 *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementHintDialogIds()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementHintDialogIds()
{
  return specialized RawRepresentable<>.hash(into:)();
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementHintDialogIds( uint64_t a1)
{
}

PhoneCallFlowDelegatePlugin::AnnounceVoicemailCATsSimple::ReadVoicemailAnnouncementHintDialogIds_optional protocol witness for RawRepresentable.init(rawValue:) in conformance AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementHintDialogIds@<W0>( Swift::String *a1@<X0>, PhoneCallFlowDelegatePlugin::AnnounceVoicemailCATsSimple::ReadVoicemailAnnouncementHintDialogIds_optional *a2@<X8>)
{
  result.PhoneCallFlowDelegatePlugin::EmergencyType value = AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementHintDialogIds.init(rawValue:)(*a1).value;
  a2->PhoneCallFlowDelegatePlugin::EmergencyType value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementHintDialogIds( unint64_t *a1@<X8>)
{
  *a1 = AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementHintDialogIds.rawValue.getter(*v1);
  a1[1] = 0xE500000000000000LL;
  OUTLINED_FUNCTION_2();
}

uint64_t AnnounceVoicemailCATsSimple.readVoicemailAnnouncementHintAsLabels(announcementCount:daysSinceLastHint:hintCount:)( uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, char a6)
{
  *(_BYTE *)(v7 + 74) = a6;
  *(void *)(v7 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a5;
  *(void *)(v7 + 40) = v6;
  *(_BYTE *)(v7 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 3) = a4;
  *(_BYTE *)(v7 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a2;
  *(void *)(v7 + ++*(void *)(v0 + 16) = a1;
  *(void *)(v7 + 24) = a3;
  return OUTLINED_FUNCTION_33_0((uint64_t)AnnounceVoicemailCATsSimple.readVoicemailAnnouncementHintAsLabels(announcementCount:daysSinceLastHint:hintCount:));
}

uint64_t AnnounceVoicemailCATsSimple.readVoicemailAnnouncementHintAsLabels(announcementCount:daysSinceLastHint:hintCount:)()
{
  char v1 = *(_BYTE *)(v0 + 72);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any?)>);
  uint64_t v3 = OUTLINED_FUNCTION_2_64(v2);
  *(void *)(v0 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v3;
  *(_OWORD *)(v3 + ++*(void *)(v0 + 16) = xmmword_320080;
  OUTLINED_FUNCTION_56_0();
  *(void *)(v4 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0xD000000000000011LL;
  *(void *)(v4 + 40) = v5;
  if ((v1 & 1) != 0)
  {
    OUTLINED_FUNCTION_50_30();
    *(void *)(v3 + 56) = 0LL;
    *(void *)(v3 + 64) = 0LL;
  }

  else
  {
    uint64_t v6 = *(void *)(v0 + 16);
    uint64_t v7 = &type metadata for Double;
  }

  *(void *)(v3 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v6;
  *(void *)(v3 + 7__swift_destroy_boxed_opaque_existential_1(v0 + 2) = v7;
  *(void *)(v3 + 80) = 0xD000000000000011LL;
  OUTLINED_FUNCTION_56_0();
  *(void *)(v3 + 8__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v8;
  if ((v9 & 1) != 0)
  {
    uint64_t v10 = 0LL;
    *(void *)(v3 + outlined init with copy of SharedGlobalsProviding(v0, v1 - 104) = 0LL;
    *(void *)(v3 + 11__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
  }

  else
  {
    uint64_t v10 = *(void *)(v0 + 24);
  }

  *(void *)(v3 + 96) = v10;
  OUTLINED_FUNCTION_21_36();
  *(void *)(v3 + 120) = v11;
  *(void *)(v3 + outlined init with copy of SharedGlobalsProviding(v0, v1 - 128) = v12;
  *(void *)(v3 + 136) = 0xE900000000000074LL;
  if ((v13 & 1) != 0)
  {
    OUTLINED_FUNCTION_50_30();
    *(void *)(v3 + 15__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 0LL;
    *(void *)(v3 + 160) = 0LL;
  }

  else
  {
    uint64_t v14 = *(void *)(v0 + 32);
    uint64_t v15 = &type metadata for Double;
  }

  *(void *)(v3 + 16__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v15;
  *(void *)(v3 + 144) = v14;
  *(void *)(v0 + 56) = v16;
  unint64_t VoicemailAnnouncementHintDialogIds = lazy protocol witness table accessor for type AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementHintDialogIds and conformance AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementHintDialogIds();
  *uint64_t v16 = v0;
  v16[1] = AnnounceVoicemailCATsSimple.readVoicemailAnnouncementHintAsLabels(announcementCount:daysSinceLastHint:hintCount:);
  return OUTLINED_FUNCTION_7_59( 0xD00000000000002FLL,  0x80000000003459C0LL,  v3,  (uint64_t)&type metadata for AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementHintDialogIds,  VoicemailAnnouncementHintDialogIds,  v19);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t (*v6)(void);
  OUTLINED_FUNCTION_10_6();
  if (v0)
  {
    OUTLINED_FUNCTION_19_1();
    return OUTLINED_FUNCTION_9_11(v1, v2, v3);
  }

  else
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = OUTLINED_FUNCTION_14_39();
    return OUTLINED_FUNCTION_8_3(v5, v6);
  }

unint64_t lazy protocol witness table accessor for type AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementHintDialogIds and conformance AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementHintDialogIds()
{
  unint64_t result = lazy protocol witness table cache variable for type AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementHintDialogIds and conformance AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementHintDialogIds;
  if (!lazy protocol witness table cache variable for type AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementHintDialogIds and conformance AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementHintDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementHintDialogIds,  &type metadata for AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementHintDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementHintDialogIds and conformance AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementHintDialogIds);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementHintDialogIds and conformance AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementHintDialogIds;
  if (!lazy protocol witness table cache variable for type AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementHintDialogIds and conformance AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementHintDialogIds)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementHintDialogIds,  &type metadata for AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementHintDialogIds);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementHintDialogIds and conformance AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementHintDialogIds);
  }

  return result;
}

unint64_t lazy protocol witness table accessor for type AnnounceVoicemailCATsSimple.Properties and conformance AnnounceVoicemailCATsSimple.Properties()
{
  unint64_t result = lazy protocol witness table cache variable for type AnnounceVoicemailCATsSimple.Properties and conformance AnnounceVoicemailCATsSimple.Properties;
  if (!lazy protocol witness table cache variable for type AnnounceVoicemailCATsSimple.Properties and conformance AnnounceVoicemailCATsSimple.Properties)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AnnounceVoicemailCATsSimple.Properties,  &type metadata for AnnounceVoicemailCATsSimple.Properties);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AnnounceVoicemailCATsSimple.Properties and conformance AnnounceVoicemailCATsSimple.Properties);
  }

  return result;
}

uint64_t type metadata accessor for AnnounceVoicemailCATsSimple(uint64_t a1)
{
  uint64_t result = type metadata singleton initialization cache for AnnounceVoicemailCATsSimple;
  if (!type metadata singleton initialization cache for AnnounceVoicemailCATsSimple) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AnnounceVoicemailCATsSimple);
  }
  return result;
}

uint64_t type metadata completion function for AnnounceVoicemailCATsSimple(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL, 0LL, v2, a1 + class metadata base offset for AnnounceVoicemailCATsSimple);
}

uint64_t ObjC metadata update function for AnnounceVoicemailCATsSimple()
{
  return type metadata accessor for AnnounceVoicemailCATsSimple(0LL);
}

uint64_t storeEnumTagSinglePayload for AnnounceVoicemailCATsSimple.Properties( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(OUTLINED_FUNCTION_48_23(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin26PhoneCallContactIntentNode_handleLabel, v4) = 1;
  }
  else {
    LODWORD(OUTLINED_FUNCTION_48_23(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin26PhoneCallContactIntentNode_handleLabel, v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_316450 + 4 * byte_341385[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_316484 + 4 * byte_341380[v4]))();
}

uint64_t sub_316484(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_31648C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x316494LL);
  }
  return result;
}

uint64_t sub_3164A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x3164A8LL);
  }
  *(_BYTE *)uint64_t result = a2 + 1;
  return result;
}

uint64_t sub_3164AC(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_3164B4(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for AnnounceVoicemailCATsSimple.Properties()
{
}

void type metadata accessor for AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementDialogIds()
{
}

uint64_t storeEnumTagSinglePayload for AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementDialogIds( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    LODWORD(OUTLINED_FUNCTION_48_23(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin26PhoneCallContactIntentNode_handleLabel, v4) = 1;
  }
  else {
    LODWORD(OUTLINED_FUNCTION_48_23(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin26PhoneCallContactIntentNode_handleLabel, v4) = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFD) {
    return ((uint64_t (*)(void))((char *)&loc_316528 + 4 * byte_34138F[v4]))();
  }
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_31655C + 4 * byte_34138A[v4]))();
}

uint64_t sub_31655C(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_316564(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x31656CLL);
  }
  return result;
}

uint64_t sub_316578(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x316580LL);
  }
  *(_BYTE *)uint64_t result = a2 + 2;
  return result;
}

uint64_t sub_316584(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_31658C(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for AnnounceVoicemailCATsSimple.ReadVoicemailAnnouncementHintDialogIds()
{
}

void OUTLINED_FUNCTION_0_118()
{
}

void OUTLINED_FUNCTION_1_108(uint64_t a1)
{
}

void OUTLINED_FUNCTION_9_89(uint64_t a1)
{
}

void OUTLINED_FUNCTION_13_93(uint64_t a1)
{
}

void OUTLINED_FUNCTION_14_82(uint64_t a1)
{
}

void OUTLINED_FUNCTION_15_87()
{
}

void OUTLINED_FUNCTION_16_67(uint64_t a1)
{
}

void OUTLINED_FUNCTION_20_70(uint64_t a1)
{
}

void OUTLINED_FUNCTION_30_56(uint64_t a1)
{
}

void OUTLINED_FUNCTION_31_51(uint64_t a1)
{
}

void OUTLINED_FUNCTION_35_40()
{
  *(void *)(v1 + 4__swift_destroy_boxed_opaque_existential_1(v0 + 8) = v0;
}

uint64_t OUTLINED_FUNCTION_43_32(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  return String.hash(into:)(va, a2, 0xE500000000000000LL);
}

void OUTLINED_FUNCTION_47_30(uint64_t a1@<X8>)
{
  void v2[9] = a1;
  v2[10] = v3;
  v2[11] = (v1 - 32) | 0x8000000000000000LL;
}

  ;
}

PhoneCallFlowDelegatePlugin::AppNameSpecifiedByUserSignalCollectionHistory __swiftcall AppNameSpecifiedByUserSignalCollectionHistory.init()()
{
  uint64_t v0 = type metadata accessor for Date(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v4 = v3 - v2;
  uint64_t v5 = static Date.distantPast.getter();
  double v6 = Date.timeIntervalSince1970.getter(v5);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v4, v0);
  uint64_t v7 = _swiftEmptyArrayStorage;
  double v8 = v6;
  result.timestamp = v8;
  result.apps._rawValue = v7;
  return result;
}

void AppNameSpecifiedByUserSignalCollectionHistory.daysSinceLastShowed.getter(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_4_96();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v6 = OUTLINED_FUNCTION_8_77();
  Date.init()(v6);
  double v7 = Date.distance(to:)(v5);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  OUTLINED_FUNCTION_4_113();
  if (v7 / 86400.0 < 0.0) {
    double v8 = 0.0;
  }
  else {
    double v8 = v7 / 86400.0;
  }
  if (one-time initialization token for siriPhone != -1) {
    swift_once(&one-time initialization token for siriPhone, one-time initialization function for siriPhone);
  }
  uint64_t v9 = type metadata accessor for Logger(0LL);
  __swift_project_value_buffer(v9, (uint64_t)static Logger.siriPhone);
  uint64_t v10 = swift_bridgeObjectRetain_n(a1, 2LL);
  uint64_t v11 = (os_log_s *)Logger.logObject.getter(v10);
  os_log_type_t v13 = static os_log_type_t.debug.getter(v11, v12);
  if (os_log_type_enabled(v11, v13))
  {
    uint64_t v14 = swift_slowAlloc(22LL, -1LL);
    uint64_t v21 = swift_slowAlloc(32LL, -1LL);
    uint64_t v23 = v21;
    *(_DWORD *)uint64_t v14 = 136315394;
    OUTLINED_FUNCTION_8_77();
    unint64_t v15 = lazy protocol witness table accessor for type Date and conformance Date();
    uint64_t v16 = dispatch thunk of CustomStringConvertible.description.getter(v2, v15);
    unint64_t v18 = v17;
    OUTLINED_FUNCTION_4_113();
    uint64_t v22 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16, v18, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23, v14 + 4);
    OUTLINED_FUNCTION_2_12();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 1__swift_destroy_boxed_opaque_existential_1(v0 + 2) = 2048;
    if ((~*(void *)&v8 & 0x7FF0000000000000LL) == 0)
    {
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }

    if (v8 <= -9.22337204e18)
    {
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }

    if (v8 >= 9.22337204e18)
    {
LABEL_20:
      __break(1u);
      return;
    }

    uint64_t v22 = (uint64_t)v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23, v14 + 14);
    _os_log_impl( &dword_0,  v11,  v13,  "#AppNameSpecifiedByUserSignalCollectionHistory is shown at %s, which is %ld days ago last time",  (uint8_t *)v14,  0x16u);
    uint64_t v19 = v21;
    swift_arrayDestroy(v21, 1LL);
    OUTLINED_FUNCTION_0_2(v19);
    OUTLINED_FUNCTION_0_2(v14);
  }

  else
  {

    OUTLINED_FUNCTION_2_12();
    if ((~*(void *)&v8 & 0x7FF0000000000000LL) == 0)
    {
      __break(1u);
      goto LABEL_16;
    }
  }

  if (v8 <= -9.22337204e18)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }

  if (v8 >= 9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }

uint64_t AppNameSpecifiedByUserSignalCollectionHistory.init(date:apps:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = OUTLINED_FUNCTION_4_96();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL))(a1, v4);
  return a2;
}

uint64_t AppNameSpecifiedByUserSignalCollectionHistory.description.getter(uint64_t a1, double a2)
{
  v11[0] = 0LL;
  v11[1] = 0xE000000000000000LL;
  _StringGuts.grow(_:)(27LL);
  v4._uint64_t countAndFlagsBits = 0x203A737070610A7BLL;
  v4._object = (void *)0xE800000000000000LL;
  String.append(_:)(v4);
  uint64_t v5 = swift_bridgeObjectRetain(a1);
  v6._uint64_t countAndFlagsBits = Array.description.getter(v5, &type metadata for String);
  object = v6._object;
  String.append(_:)(v6);
  swift_bridgeObjectRelease(a1);
  swift_bridgeObjectRelease(object);
  v8._uint64_t countAndFlagsBits = 0x7473656D69740A2CLL;
  v8._object = (void *)0xED0000203A706D61LL;
  String.append(_:)(v8);
  Double.write<A>(to:)( v11,  &type metadata for DefaultStringInterpolation,  &protocol witness table for DefaultStringInterpolation,  a2);
  v9._uint64_t countAndFlagsBits = 32010LL;
  v9._object = (void *)0xE200000000000000LL;
  String.append(_:)(v9);
  return v11[0];
}

void static AppNameSpecifiedByUserSignalCollectionHistory.__derived_struct_equals(_:_:)( void *a1, void *a2, double a3, double a4)
{
  if (a3 == a4) {
    specialized static Array<A>.== infix(_:_:)(a1, a2);
  }
}

uint64_t AppNameSpecifiedByUserSignalCollectionHistory.CodingKeys.init(stringValue:)( uint64_t a1, unint64_t a2)
{
  if (a1 == 0x6D617473656D6974LL && a2 == 0xE900000000000070LL)
  {
    unint64_t v5 = 0xE900000000000070LL;
    goto LABEL_8;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6D617473656D6974LL, 0xE900000000000070LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0LL;
  }

  if (a1 == 1936748641 && a2 == 0xE400000000000000LL)
  {
    swift_bridgeObjectRelease(0xE400000000000000LL);
    return 1LL;
  }

  else
  {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)(1936748641LL, 0xE400000000000000LL, a1, a2, 0LL);
    swift_bridgeObjectRelease(a2);
    if ((v8 & 1) != 0) {
      return 1LL;
    }
    else {
      return 2LL;
    }
  }

uint64_t AppNameSpecifiedByUserSignalCollectionHistory.CodingKeys.stringValue.getter(char a1)
{
  if ((a1 & 1) != 0) {
    return 1936748641LL;
  }
  else {
    return 0x6D617473656D6974LL;
  }
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance AppNameSpecifiedByUserSignalCollectionHistory.CodingKeys()
{
  return AppNameSpecifiedByUserSignalCollectionHistory.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance AppNameSpecifiedByUserSignalCollectionHistory.CodingKeys@<X0>( uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = AppNameSpecifiedByUserSignalCollectionHistory.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance AppNameSpecifiedByUserSignalCollectionHistory.CodingKeys( uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type AppNameSpecifiedByUserSignalCollectionHistory.CodingKeys and conformance AppNameSpecifiedByUserSignalCollectionHistory.CodingKeys();
  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance AppNameSpecifiedByUserSignalCollectionHistory.CodingKeys( uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type AppNameSpecifiedByUserSignalCollectionHistory.CodingKeys and conformance AppNameSpecifiedByUserSignalCollectionHistory.CodingKeys();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t AppNameSpecifiedByUserSignalCollectionHistory.encode(to:)(void *a1, uint64_t a2, double a3)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<AppNameSpecifiedByUserSignalCollectionHistory.CodingKeys>);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  unint64_t v14 = lazy protocol witness table accessor for type AppNameSpecifiedByUserSignalCollectionHistory.CodingKeys and conformance AppNameSpecifiedByUserSignalCollectionHistory.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&unk_41A8B0, &unk_41A8B0, v14, v12, v13);
  char v20 = 0;
  KeyedEncodingContainer.encode(_:forKey:)(&v20, v7, a3);
  if (!v3)
  {
    uint64_t v18 = a2;
    char v19 = 1;
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    uint64_t v16 = lazy protocol witness table accessor for type [String] and conformance <A> [A]( &lazy protocol witness table cache variable for type [String] and conformance <A> [A],  (uint64_t)&protocol witness table for String,  (uint64_t)&protocol conformance descriptor for <A> [A]);
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v18, &v19, v7, v15, v16);
  }

  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v11, v7);
}

void *AppNameSpecifiedByUserSignalCollectionHistory.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<AppNameSpecifiedByUserSignalCollectionHistory.CodingKeys>);
  __chkstk_darwin();
  OUTLINED_FUNCTION_8();
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  Swift::String v6 = __swift_project_boxed_opaque_existential_1(a1, v4);
  unint64_t v7 = lazy protocol witness table accessor for type AppNameSpecifiedByUserSignalCollectionHistory.CodingKeys and conformance AppNameSpecifiedByUserSignalCollectionHistory.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&unk_41A8B0, &unk_41A8B0, v7, v4, v5);
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }

  else
  {
    char v13 = 0;
    KeyedDecodingContainer.decode(_:forKey:)(&v13, v3);
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    char v12 = 1;
    uint64_t v9 = lazy protocol witness table accessor for type [String] and conformance <A> [A]( &lazy protocol witness table cache variable for type [String] and conformance <A> [A],  (uint64_t)&protocol witness table for String,  (uint64_t)&protocol conformance descriptor for <A> [A]);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v8, &v12, v3, v8, v9);
    OUTLINED_FUNCTION_0_119();
    Swift::String v6 = v11;
    __swift_destroy_boxed_opaque_existential_1(a1);
  }

  return v6;
}

uint64_t protocol witness for SiriPhoneDefaultsCodable.init() in conformance AppNameSpecifiedByUserSignalCollectionHistory@<X0>( void **a1@<X8>)
{
  PhoneCallFlowDelegatePlugin::AppNameSpecifiedByUserSignalCollectionHistory v3 = AppNameSpecifiedByUserSignalCollectionHistory.init()();
  uint64_t result = *(uint64_t *)&v3.timestamp;
  *a1 = v3.apps._rawValue;
  a1[1] = _swiftEmptyArrayStorage;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance AppNameSpecifiedByUserSignalCollectionHistory()
{
  return AppNameSpecifiedByUserSignalCollectionHistory.description.getter(*(void *)(v0 + 8), *(double *)v0);
}

void protocol witness for static Equatable.== infix(_:_:) in conformance AppNameSpecifiedByUserSignalCollectionHistory( uint64_t a1, uint64_t a2)
{
}

void *protocol witness for Decodable.init(from:) in conformance AppNameSpecifiedByUserSignalCollectionHistory@<X0>( void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = AppNameSpecifiedByUserSignalCollectionHistory.init(from:)(a1);
  if (!v2)
  {
    *a2 = v5;
    a2[1] = result;
  }

  return result;
}

uint64_t protocol witness for Encodable.encode(to:) in conformance AppNameSpecifiedByUserSignalCollectionHistory( void *a1)
{
  return AppNameSpecifiedByUserSignalCollectionHistory.encode(to:)(a1, *(void *)(v1 + 8), *(double *)v1);
}

unint64_t lazy protocol witness table accessor for type AppNameSpecifiedByUserSignalCollectionHistory.CodingKeys and conformance AppNameSpecifiedByUserSignalCollectionHistory.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type AppNameSpecifiedByUserSignalCollectionHistory.CodingKeys and conformance AppNameSpecifiedByUserSignalCollectionHistory.CodingKeys;
  if (!lazy protocol witness table cache variable for type AppNameSpecifiedByUserSignalCollectionHistory.CodingKeys and conformance AppNameSpecifiedByUserSignalCollectionHistory.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AppNameSpecifiedByUserSignalCollectionHistory.CodingKeys,  &unk_41A8B0);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AppNameSpecifiedByUserSignalCollectionHistory.CodingKeys and conformance AppNameSpecifiedByUserSignalCollectionHistory.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type AppNameSpecifiedByUserSignalCollectionHistory.CodingKeys and conformance AppNameSpecifiedByUserSignalCollectionHistory.CodingKeys;
  if (!lazy protocol witness table cache variable for type AppNameSpecifiedByUserSignalCollectionHistory.CodingKeys and conformance AppNameSpecifiedByUserSignalCollectionHistory.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AppNameSpecifiedByUserSignalCollectionHistory.CodingKeys,  &unk_41A8B0);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AppNameSpecifiedByUserSignalCollectionHistory.CodingKeys and conformance AppNameSpecifiedByUserSignalCollectionHistory.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type AppNameSpecifiedByUserSignalCollectionHistory.CodingKeys and conformance AppNameSpecifiedByUserSignalCollectionHistory.CodingKeys;
  if (!lazy protocol witness table cache variable for type AppNameSpecifiedByUserSignalCollectionHistory.CodingKeys and conformance AppNameSpecifiedByUserSignalCollectionHistory.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable("Ց\r", &unk_41A8B0);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AppNameSpecifiedByUserSignalCollectionHistory.CodingKeys and conformance AppNameSpecifiedByUserSignalCollectionHistory.CodingKeys);
  }

  return result;
}

{
  unint64_t result;
  unint64_t result = lazy protocol witness table cache variable for type AppNameSpecifiedByUserSignalCollectionHistory.CodingKeys and conformance AppNameSpecifiedByUserSignalCollectionHistory.CodingKeys;
  if (!lazy protocol witness table cache variable for type AppNameSpecifiedByUserSignalCollectionHistory.CodingKeys and conformance AppNameSpecifiedByUserSignalCollectionHistory.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for AppNameSpecifiedByUserSignalCollectionHistory.CodingKeys,  &unk_41A8B0);
    atomic_store( result,  (unint64_t *)&lazy protocol witness table cache variable for type AppNameSpecifiedByUserSignalCollectionHistory.CodingKeys and conformance AppNameSpecifiedByUserSignalCollectionHistory.CodingKeys);
  }

  return result;
}

unint64_t instantiation function for generic protocol witness table for AppNameSpecifiedByUserSignalCollectionHistory( void *a1)
{
  a1[1] = lazy protocol witness table accessor for type AppNameSpecifiedByUserSignalCollectionHistory and conformance AppNameSpecifiedByUserSignalCollectionHistory();
  a1[2] = lazy protocol witness table accessor for type AppNameSpecifiedByUserSignalCollectionHistory and conformance AppNameSpecifiedByUserSignalCollectionHistory();
  unint64_t result = lazy protocol witness table accessor for type AppNameSpecifiedByUserSignalCollectionHistory and conformance AppNameSpecifiedByUserSignalCollectionHistory();
  a1[3] = result;
  return result;
}

unint64_t instantiation function for generic protocol witness table for AppNameSpecifiedByUserSignalCollectionHistory( uint64_t a1)
{
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = lazy protocol witness table accessor for type AppNameSpecifiedByUserSignalCollectionHistory and conformance AppNameSpecifiedByUserSignalCollectionHistory();
  unint64_t result = lazy protocol witness table accessor for type AppNameSpecifiedByUserSignalCollectionHistory and conformance AppNameSpecifiedByUserSignalCollectionHistory();
  *(void *)(a1 + ++*(void *)(v0 + 16) = result;
  return result;
}

void *assignWithCopy for AppNameSpecifiedByUserSignalCollectionHistory(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = a2[1];
  uint64_t v4 = a1[1];
  a1[1] = v3;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

void *assignWithTake for AppNameSpecifiedByUserSignalCollectionHistory(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRelease(v3);
  return a1;
}

ValueMetadata *type metadata accessor for AppNameSpecifiedByUserSignalCollectionHistory()
{
  return &type metadata for AppNameSpecifiedByUserSignalCollectionHistory;
}

uint64_t storeEnumTagSinglePayload for AppNameSpecifiedByUserSignalCollectionHistory.CodingKeys( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(OUTLINED_FUNCTION_48_23(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin26PhoneCallContactIntentNode_handleLabel, v4) = 1;
  }
  else {
    LODWORD(OUTLINED_FUNCTION_48_23(OBJC_IVAR____TtC27PhoneCallFlowDelegatePlugin26PhoneCallContactIntentNode_handleLabel, v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_31723C + 4 * byte_341615[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_317270 + 4 * asc_341610[v4]))();
}

uint64_t sub_317270(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_317278(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x317280LL);
  }
  return result;
}

uint64_t sub_31728C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x317294LL);
  }
  *(_BYTE *)unint64_t result = a2 + 1;
  return result;
}

uint64_t sub_317298(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_3172A0(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void *type metadata accessor for AppNameSpecifiedByUserSignalCollectionHistory.CodingKeys()
{
  return &unk_41A8B0;
}

uint64_t OUTLINED_FUNCTION_0_119()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_4_113()
{
  return v2(v1, v0);
}

uint64_t SiriInferenceContactSlotResolver.__allocating_init(rchFlowContext:sharedGlobals:updateStrategy:)( uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4, uint64_t a5, char a6)
{
  char v12 = a6 & 1;
  uint64_t v13 = swift_allocObject(v6, 89LL, 7LL);
  SiriInferenceContactSlotResolver.init(rchFlowContext:sharedGlobals:updateStrategy:)(a1, a2, a3, a4, a5, v12);
  return v13;
}

void thunk for @escaping @callee_guaranteed (@in_guaranteed Result<[INPerson], SlotResolverError>) -> ()( uint64_t a1, uint64_t a2, __int16 a3, void (*a4)(void *))
{
  v4[0] = a1;
  v4[1] = a2;
  __int16 v5 = a3 & 0x1FF;
  a4(v4);
  OUTLINED_FUNCTION_60_2();
}

uint64_t SiriInferenceContactSlotResolver.UpdateStrategy.multicardinalIndex.getter(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0) {
    return 0LL;
  }
  return result;
}

uint64_t SiriInferenceContactSlotResolver.updateStrategy.getter()
{
  return *(void *)(v0 + 80);
}

void SiriInferenceContactSlotResolver.init(rchFlowContext:sharedGlobals:updateStrategy:)( uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4, uint64_t a5, char a6)
{
  *(void *)(v6 + ++*(void *)(v0 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  *(void *)(v6 + 3__swift_destroy_boxed_opaque_existential_1(v0 + 2) = a3;
  outlined init with take of AppSelectionSignalComponent(a4, v6 + 40);
  *(void *)(v6 + 80) = a5;
  *(_BYTE *)(v6 + 8__swift_destroy_boxed_opaque_existential_1(v0 + 8) = a6 & 1;
  OUTLINED_FUNCTION_6();
}

uint64_t SiriInferenceContactSlotResolver.resolveSlot(skIntent:nlIntent:_:)( void *a1, void *a2, void (*a3)(void), uint64_t a4)
{
  os_log_type_t v54 = a1;
  uint64_t v55 = a4;
  uint64_t v48 = *v4;
  uint64_t v7 = type metadata accessor for Locale(0LL);
  uint64_t v52 = *(void *)(v7 - 8);
  uint64_t v53 = v7;
  __chkstk_darwin();
  uint64_t v51 = (uint64_t)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for ContactQuery(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin();
  unint64_t v58 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin();
  uint64_t v60 = (void (*)(char *, uint64_t))((char *)&v47 - v12);
  __chkstk_darwin();
  unint64_t v14 = (char *)&v47 - v13;
  uint64_t v15 = a2[3];
  uint64_t v16 = a2[4];
  uint64_t v50 = a2;
  OUTLINED_FUNCTION_5_0(a2);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 128))(v15, v16);
  uint64_t v18 = _swiftEmptyArrayStorage;
  v62[0] = _swiftEmptyArrayStorage;
  uint64_t v59 = *(void *)(result + 16);
  uint64_t v56 = a3;
  if (v59)
  {
    unint64_t v19 = 0LL;
    char v20 = v60;
    while (1)
    {
      if (v19 >= *(void *)(result + 16))
      {
        __break(1u);
        return result;
      }

      unint64_t v21 = (*(unsigned __int8 *)(v10 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      uint64_t v22 = *(void *)(v10 + 72);
      uint64_t v23 = result;
      os_log_type_t v24 = *(void (**)(char *, unint64_t, uint64_t))(v10 + 16);
      v24(v14, result + v21 + v22 * v19, v9);
      if (one-time initialization token for emptyQuery != -1) {
        swift_once(&one-time initialization token for emptyQuery, one-time initialization function for emptyQuery);
      }
      __swift_project_value_buffer(v9, (uint64_t)static ContactQuery.emptyQuery);
      char v25 = static ContactQuery.== infix(_:_:)(v14);
      v24((char *)v20, (unint64_t)v14, v9);
      if ((v25 & 1) != 0)
      {
        OUTLINED_FUNCTION_0_120();
      }

      else
      {
        if (one-time initialization token for emptyNLv4Query != -1) {
          swift_once( &one-time initialization token for emptyNLv4Query,  one-time initialization function for emptyNLv4Query);
        }
        __swift_project_value_buffer(v9, (uint64_t)static ContactQuery.emptyNLv4Query);
        char v26 = static ContactQuery.== infix(_:_:)(v20);
        OUTLINED_FUNCTION_0_120();
        if ((v26 & 1) == 0)
        {
          uint64_t v57 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
          v57(v58, v14, v9);
          uint64_t v27 = v62[0];
          if ((swift_isUniquelyReferenced_nonNull_native(v62[0]) & 1) == 0)
          {
            specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            uint64_t v27 = v62[0];
          }

          unint64_t v28 = *(void *)(v27 + 16);
          if (v28 >= *(void *)(v27 + 24) >> 1)
          {
            specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            uint64_t v27 = v62[0];
          }

          *(void *)(v27 + ++*(void *)(v0 + 16) = v28 + 1;
          v57((char *)(v27 + v21 + v28 * v22), v58, v9);
          v62[0] = v27;
          goto LABEL_17;
        }
      }

      v20(v14, v9);
LABEL_17:
      ++v19;
      char v20 = v60;
      uint64_t result = v23;
      if (v59 == v19)
      {
        uint64_t v18 = (void *)v62[0];
        break;
      }
    }
  }

  swift_bridgeObjectRelease();
  unint64_t v29 = v49;
  uint64_t v30 = v49[2];
  uint64_t v31 = (uint64_t)(v49 + 5);
  uint64_t v32 = v49[8];
  uint64_t v33 = v49[9];
  OUTLINED_FUNCTION_5_0(v49 + 5);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v33 + 8))(v62, v32, v33);
  uint64_t v34 = v62[3];
  uint64_t v35 = v62[4];
  OUTLINED_FUNCTION_5_0(v62);
  uint64_t v36 = v51;
  uint64_t v37 = dispatch thunk of DeviceState.siriLocale.getter(v34, v35);
  uint64_t v38 = v29[10];
  int v39 = *((unsigned __int8 *)v29 + 88);
  uint64_t v40 = *(void *)(v48 + 80);
  uint64_t v41 = *(void *)(v48 + 88);
  if (v39) {
    uint64_t v42 = 0LL;
  }
  else {
    uint64_t v42 = v38;
  }
  static SiriKitEventSender.current.getter(v61, v37);
  uint64_t v43 = type metadata accessor for EmergencyContactResolution();
  uint64_t v44 = swift_allocObject(v43, 16LL, 7LL);
  LOBYTE(v4__swift_destroy_boxed_opaque_existential_1(v0 + 5) = v39;
  specialized static ContactResolution.updateSiriKitIntent(siriKitIntent:contactQueries:hasEmergencyContact:app:locale:nlIntent:sharedGlobals:multicardinalIndex:siriKitEventSender:emergencyContactResolution:)( (uint64_t)v54,  (uint64_t)v18,  0LL,  v30,  v36,  (uint64_t)v50,  v31,  v42,  v45,  (uint64_t)v61,  v44,  v40,  v41,  v46,  v47,  v48,  (uint64_t)v49,  (uint64_t)v50,  v51,  v52,  v53,  v54,  v55,  (uint64_t)v56,  (uint64_t)v57);
  swift_release(v18);
  swift_release(v44);
  __swift_destroy_boxed_opaque_existential_1(v61);
  (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v36, v53);
  __swift_destroy_boxed_opaque_existential_1(v62);
  v56();
  return swift_bridgeObjectRelease();
}

void SiriInferenceContactSlotResolver.deinit()
{
  uint64_t v1 = (void *)v0[3];
  uint64_t v2 = (void *)v0[4];
  swift_release(v0[2]);

  __swift_destroy_boxed_opaque_existential_1(v0 + 5);
  OUTLINED_FUNCTION_6();
}

uint64_t SiriInferenceContactSlotResolver.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 89LL, 7LL);
}

uint64_t protocol witness for SlotResolver.resolveSlot(skIntent:nlIntent:_:) in conformance SiriInferenceContactSlotResolver<A>( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = swift_allocObject(&unk_41AAF0, 32LL, 7LL);
  *(void *)(v9 + ++*(void *)(v0 + 16) = a3;
  *(void *)(v9 + 24) = a4;
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, void (*)(uint64_t, uint64_t, __int16), uint64_t))(**(void **)v4 + 136LL);
  swift_retain();
  v10(a1, a2, _ss6ResultOySaySo8INPersonCG27PhoneCallFlowDelegatePlugin17SlotResolverErrorOGIegn_AIIegg_TRTA_1, v9);
  return swift_release(v9);
}

uint64_t protocol witness for SharedGlobalsHolding.sharedGlobals.getter in conformance SiriInferenceContactSlotResolver<A>@<X0>( uint64_t a1@<X8>)
{
  return outlined init with copy of SignalProviding(*v1 + 40LL, a1);
}

uint64_t instantiation function for generic protocol witness table for SiriInferenceContactSlotResolver<A>( uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_getWitnessTable(&protocol conformance descriptor for SiriInferenceContactSlotResolver<A>, a2);
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = result;
  return result;
}

uint64_t type metadata completion function for SiriInferenceContactSlotResolver(uint64_t a1)
{
  v2[0] = &unk_3418E8;
  v2[1] = &unk_341900;
  v2[2] = &unk_341918;
  return swift_initClassMetadata2(a1, 0LL, 3LL, v2, a1 + 96);
}

uint64_t type metadata accessor for SiriInferenceContactSlotResolver( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata( a1,  a2,  a3,  a4,  (uint64_t)&nominal type descriptor for SiriInferenceContactSlotResolver);
}

uint64_t getEnumTagSinglePayload for SiriInferenceContactSlotResolver.UpdateStrategy(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0LL;
  }
}

uint64_t storeEnumTagSinglePayload for SiriInferenceContactSlotResolver.UpdateStrategy( uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = 0LL;
    *(_BYTE *)(result + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }

  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }

  *(_BYTE *)(result + 9) = v3;
  return result;
}

uint64_t getEnumTag for SiriInferenceContactSlotResolver.UpdateStrategy(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0LL;
  }
}

uint64_t destructiveInjectEnumTag for SiriInferenceContactSlotResolver.UpdateStrategy(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    char v2 = 1;
  }

  else
  {
    char v2 = 0;
  }

  *(_BYTE *)(result + __swift_destroy_boxed_opaque_existential_1(v0 + 8) = v2;
  return result;
}

uint64_t type metadata accessor for SiriInferenceContactSlotResolver.UpdateStrategy( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata( a1,  a2,  a3,  a4,  (uint64_t)&nominal type descriptor for SiriInferenceContactSlotResolver.UpdateStrategy);
}

uint64_t sub_317B14()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

void _ss6ResultOySaySo8INPersonCG27PhoneCallFlowDelegatePlugin17SlotResolverErrorOGIegn_AIIegg_TRTA_1( uint64_t a1, uint64_t a2, __int16 a3)
{
  uint64_t v4 = *(void (**)(void *))(v3 + 16);
  v5[0] = a1;
  v5[1] = a2;
  __int16 v6 = a3 & 0x1FF;
  v4(v5);
  OUTLINED_FUNCTION_60_2();
}

uint64_t OUTLINED_FUNCTION_0_120()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
}

id objc_msgSend_stringWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithFormat:");
}